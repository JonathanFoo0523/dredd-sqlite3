-- Time: 2024/06/09 01:17:53
-- Database: database39
-- Database version: 3.40.0
-- seed value: 1289004239
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 REAL  CHECK ( ((((c0) IS FALSE))>(((c0)>(c0)))))); -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t1 (c0 INT ); -- 1ms;
PRAGMA temp.cell_size_check = false; -- 0ms;
ANALYZE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA journal_mode; -- 0ms;
UPDATE t1 SET c0='2064314959'; -- 0ms;
REINDEX; -- 0ms;
CREATE UNIQUE INDEX i7 ON t1(c0 COLLATE RTRIM); -- 0ms;
PRAGMA application_id; -- 0ms;
UPDATE t1 SET (c0)=('t<'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA main.journal_size_limit = 0; -- 0ms;
ALTER TABLE t1 RENAME TO t2; -- 0ms;
UPDATE OR FAIL t0 SET c0=0Xfffffffff105cf9d, c0=0.2519120887870543; -- 0ms;
CREATE UNIQUE INDEX i70 ON t0(CASE ((c0) BETWEEN (x'') AND (c0))  WHEN (((c0))>((c0))) THEN ((c0)||(NULL)) END COLLATE BINARY DESC); -- 0ms;
UPDATE OR REPLACE t2 SET c0='''n' WHERE (2064314959 IN ((t2.c0 IN ()), LAST_INSERT_ROWID())); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
UPDATE OR IGNORE t2 SET (c0)=('0.2519120887870543'); -- 0ms;
PRAGMA optimize; -- 0ms;
PRAGMA main.cache_size = 0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
ANALYZE; -- 3ms;
UPDATE t0 SET (c0)=(x''); -- 0ms;
PRAGMA main.auto_vacuum; -- 0ms;
CREATE INDEX i25 ON t1(((((c0)AND(c0)))OR(c0)) COLLATE NOCASE ASC) WHERE CASE WHEN c0 COLLATE NOCASE THEN ((c0)/(c0)) END; -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (0.2519120887870543); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0, c0, c0)=(0.8115481515876627, -424993057, 0.42981196205798744) WHERE CAST(t0.c0 COLLATE NOCASE AS REAL); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
DROP TABLE t0; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
PRAGMA temp.secure_delete; -- 0ms;
REINDEX BINARY; -- 0ms;
ANALYZE main; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (0.111361078095229) AND (0.42981196205798744)) COLLATE BINARY; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.7321470069201854), (-424993057), (0.3480523583956714); -- 0ms;
UPDATE OR ABORT t0 SET c0='', c0=NULL WHERE (((((((((((t0.c0, t0.c0, t0.c0))<>((t0.c0, x'b557', t0.c0))))OR((t0.c0 IN (t0.c0)))))OR(((t0.c0)>=(t0.c0)))))OR(t0.c0)))OR(((t0.c0)GLOB(t0.c0)))); -- 0ms;
PRAGMA main.reverse_unordered_selects = false; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (-115298049); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
UPDATE OR FAIL t0 SET (c0)=(x''); -- 1ms;
UPDATE t0 SET (c0, c0, c0)=(0.38109945385823574, 0.005373509377372687, NULL) WHERE (((CAST(t0.c0 AS NUMERIC)))>(((- (t0.c0))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
ANALYZE; -- 0ms;
UPDATE rt0 SET c0=0.16620543586858616 WHERE rt0.c0; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.threads = 8697744331857087677; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (x'4f2b'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE rt0 SET (c0)=(0.5759228094713504) WHERE (((rt0.c1 IN (rt0.c0))) BETWEEN ((rt0.c2 IN ())) AND (CAST(rt0.c2 AS REAL))); -- 1ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('KJ'), (NULL), (x'28eb0918'); -- 0ms;
UPDATE OR ABORT rt0 SET c1=x'', c2=0.12222133013931491, c0='-424993057' WHERE CASE WHEN x'' THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN -1749568467 THEN rt0.c0 ELSE rt0.c1 END END; -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
UPDATE t0 SET c0=x'', c0=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c0=''; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c18; -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.6438989601808219) WHERE ((rt0.c0)==(rt0.c0)) COLLATE RTRIM; -- 0ms;
UPDATE rt0 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c18, c18, c18)=(NULL, 492657483, 0.9084113649969494); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE rt0 SET (c0)=('K%Z!'); -- 0ms;
PRAGMA temp.ignore_check_constraints = true; -- 0ms;
ANALYZE; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c18 TO c78; -- 0ms;
UPDATE rt0 SET c2=1957310703 WHERE json_object(((rt0.c1)AND(rt0.c2)), (rt0.c0 IN (rt0.c2))); -- 0ms;
UPDATE t0 SET (c78, c78, c78)=(x'461d', x'', 0.6936894120800836); -- 1ms;
UPDATE OR IGNORE rt0 SET (c2, c2)=(NULL, 0.6056119610758286); -- 0ms;
UPDATE OR ABORT t0 SET c78=x'', c78='', c78='0[/oaHH'; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA main.stats; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='-424993057', c2='''Fx(+0''d' WHERE ((((rt0.c1) IS TRUE))IS NOT(((rt0.c2)/(rt0.c1)))); -- 0ms;
REINDEX; -- 0ms;
DROP INDEX "i25"; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c60; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED, c2 UNINDEXED, compress=likely, uncompress=likely); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 85687293); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '28171'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 66506530); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '19766'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '36128'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c60)) BETWEEN ((CAST(t0.c60 AS TEXT))) AND ((((t0.c60)>>(t0.c60)))))) ORDER BY (((~ (t0.c60)))||(UNLIKELY(t0.c60))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60)) BETWEEN ((CAST(t0.c60 AS TEXT))) AND ((((t0.c60)>>(t0.c60)))))) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c60)))||(UNLIKELY(t0.c60))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c60)) BETWEEN ((CAST(t0.c60 AS TEXT))) AND ((((t0.c60)>>(t0.c60)))))) ORDER BY (((~ (t0.c60)))||(UNLIKELY(t0.c60))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60)) BETWEEN ((CAST(t0.c60 AS TEXT))) AND ((((t0.c60)>>(t0.c60)))))) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c60)))||(UNLIKELY(t0.c60))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c60)) BETWEEN ((CAST(t0.c60 AS TEXT))) AND ((((t0.c60)>>(t0.c60)))))) ORDER BY (((~ (t0.c60)))||(UNLIKELY(t0.c60))) DESC;
SELECT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((((rt0.c2) NOTNULL))))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))*((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((x''))))) DESC  NULLS FIRST, ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))) AND (((rt0.c0)GLOB(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((((rt0.c2) NOTNULL))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))*((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((x''))))) DESC  NULLS FIRST, ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))) AND (((rt0.c0)GLOB(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((((rt0.c2) NOTNULL))))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))*((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((x''))))) DESC  NULLS FIRST, ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))) AND (((rt0.c0)GLOB(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((((rt0.c2) NOTNULL))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))*((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((x''))))) DESC  NULLS FIRST, ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))) AND (((rt0.c0)GLOB(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((((rt0.c2) NOTNULL))))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))*((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((x''))))) DESC  NULLS FIRST, ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))) AND (((rt0.c0)GLOB(rt0.c2)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (TYPEOF(((rt0.c0)GLOB(rt0.c0)))) ORDER BY NULL DESC  NULLS FIRST, ((((CASE rt0.c2  WHEN '492657483' THEN rt0.c2 END)OR(((rt0.c1)<<(rt0.c1)))))OR(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))), ((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))<(json_remove(rt0.c1, rt0.c1, 0.2694046894338029, rt0.c1, rt0.c1, rt0.c0)))  NULLS FIRST, (((0xffffffff97cbf93d, 2137747307, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), CHAR(rt0.c0, rt0.c1, rt0.c0), MAX(rt0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt0.c0)GLOB(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC  NULLS FIRST, ((((CASE rt0.c2  WHEN '492657483' THEN rt0.c2 END)OR(((rt0.c1)<<(rt0.c1)))))OR(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))), ((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))<(json_remove(rt0.c1, rt0.c1, 0.2694046894338029, rt0.c1, rt0.c1, rt0.c0)))  NULLS FIRST, (((0Xffffffff97cbf93d, 2137747307, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), CHAR(rt0.c0, rt0.c1, rt0.c0), MAX(rt0.c2, rt0.c1)))));
SELECT * FROM rt0 WHERE (TYPEOF(((rt0.c0)GLOB(rt0.c0)))) ORDER BY NULL DESC  NULLS FIRST, ((((CASE rt0.c2  WHEN '492657483' THEN rt0.c2 END)OR(((rt0.c1)<<(rt0.c1)))))OR(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))), ((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))<(json_remove(rt0.c1, rt0.c1, 0.2694046894338029, rt0.c1, rt0.c1, rt0.c0)))  NULLS FIRST, (((0xffffffff97cbf93d, 2137747307, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), CHAR(rt0.c0, rt0.c1, rt0.c0), MAX(rt0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt0.c0)GLOB(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC  NULLS FIRST, ((((CASE rt0.c2  WHEN '492657483' THEN rt0.c2 END)OR(((rt0.c1)<<(rt0.c1)))))OR(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))), ((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))<(json_remove(rt0.c1, rt0.c1, 0.2694046894338029, rt0.c1, rt0.c1, rt0.c0)))  NULLS FIRST, (((0Xffffffff97cbf93d, 2137747307, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), CHAR(rt0.c0, rt0.c1, rt0.c0), MAX(rt0.c2, rt0.c1)))));
SELECT * FROM rt0 WHERE (TYPEOF(((rt0.c0)GLOB(rt0.c0)))) ORDER BY NULL DESC  NULLS FIRST, ((((CASE rt0.c2  WHEN '492657483' THEN rt0.c2 END)OR(((rt0.c1)<<(rt0.c1)))))OR(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))), ((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))<(json_remove(rt0.c1, rt0.c1, 0.2694046894338029, rt0.c1, rt0.c1, rt0.c0)))  NULLS FIRST, (((0xffffffff97cbf93d, 2137747307, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), CHAR(rt0.c0, rt0.c1, rt0.c0), MAX(rt0.c2, rt0.c1))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c2)+(vt0.c1))))<((rtreenode(0.1146248978846327, vt0.c2))))) ORDER BY vt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)+(vt0.c1))))<((rtreenode(0.1146248978846327, vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c2)+(vt0.c1))))<((rtreenode(0.1146248978846327, vt0.c2))))) ORDER BY vt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)+(vt0.c1))))<((rtreenode(0.1146248978846327, vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c2)+(vt0.c1))))<((rtreenode(0.1146248978846327, vt0.c2))))) ORDER BY vt0.c2 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c0) ISNULL))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c0) ISNULL))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c0) ISNULL))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2))>((rt0.c1))) COLLATE RTRIM) ORDER BY x'c961', (((rt0.c1)) NOT BETWEEN (((((rt0.c1))<=((rt0.c2))))) AND ((rt0.c0 COLLATE NOCASE)))  NULLS LAST, CASE (((rt0.c1))!=((rt0.c0)))  WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c2))>=((NULL))) WHEN (- ('>	ri')) THEN rt0.c2 WHEN ((rt0.c0) IS FALSE) THEN (- (rt0.c0)) WHEN TRIM(rt0.c2) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((NULL)OR(rt0.c2)))OR(rt0.c2)) THEN (- (rt0.c0)) ELSE ((rt0.c1) BETWEEN ('-251277411') AND (rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))>((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY x'c961', (((rt0.c1)) NOT BETWEEN (((((rt0.c1))<=((rt0.c2))))) AND ((rt0.c0 COLLATE NOCASE)))  NULLS LAST, CASE (((rt0.c1))!=((rt0.c0)))  WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c2))>=((NULL))) WHEN (- ('>	ri')) THEN rt0.c2 WHEN ((rt0.c0) IS FALSE) THEN (- (rt0.c0)) WHEN TRIM(rt0.c2) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((NULL)OR(rt0.c2)))OR(rt0.c2)) THEN (- (rt0.c0)) ELSE ((rt0.c1) BETWEEN ('-251277411') AND (rt0.c1)) END ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2))>((rt0.c1))) COLLATE RTRIM) ORDER BY x'c961', (((rt0.c1)) NOT BETWEEN (((((rt0.c1))<=((rt0.c2))))) AND ((rt0.c0 COLLATE NOCASE)))  NULLS LAST, CASE (((rt0.c1))!=((rt0.c0)))  WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c2))>=((NULL))) WHEN (- ('>	ri')) THEN rt0.c2 WHEN ((rt0.c0) IS FALSE) THEN (- (rt0.c0)) WHEN TRIM(rt0.c2) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((NULL)OR(rt0.c2)))OR(rt0.c2)) THEN (- (rt0.c0)) ELSE ((rt0.c1) BETWEEN ('-251277411') AND (rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))>((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY x'c961', (((rt0.c1)) NOT BETWEEN (((((rt0.c1))<=((rt0.c2))))) AND ((rt0.c0 COLLATE NOCASE)))  NULLS LAST, CASE (((rt0.c1))!=((rt0.c0)))  WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c2))>=((NULL))) WHEN (- ('>	ri')) THEN rt0.c2 WHEN ((rt0.c0) IS FALSE) THEN (- (rt0.c0)) WHEN TRIM(rt0.c2) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((NULL)OR(rt0.c2)))OR(rt0.c2)) THEN (- (rt0.c0)) ELSE ((rt0.c1) BETWEEN ('-251277411') AND (rt0.c1)) END ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2))>((rt0.c1))) COLLATE RTRIM) ORDER BY x'c961', (((rt0.c1)) NOT BETWEEN (((((rt0.c1))<=((rt0.c2))))) AND ((rt0.c0 COLLATE NOCASE)))  NULLS LAST, CASE (((rt0.c1))!=((rt0.c0)))  WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c2))>=((NULL))) WHEN (- ('>	ri')) THEN rt0.c2 WHEN ((rt0.c0) IS FALSE) THEN (- (rt0.c0)) WHEN TRIM(rt0.c2) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((NULL)OR(rt0.c2)))OR(rt0.c2)) THEN (- (rt0.c0)) ELSE ((rt0.c1) BETWEEN ('-251277411') AND (rt0.c1)) END ASC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS INTEGER) AS BLOB) LEFT OUTER JOIN t0 ON (CASE WHEN rt0.c1 THEN vt0.c0 END IN ()) WHERE ((((((NOT (rt0.c2)))AND((((vt0.c2))<=((vt0.c1))))))OR(ROUND(rt0.c0, vt0.c0)))) ORDER BY HEX(t0.c60)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c2)))AND((((vt0.c2))<=((vt0.c1))))))OR(ROUND(rt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS INTEGER) AS BLOB) LEFT OUTER JOIN t0 ON (CASE WHEN rt0.c1 THEN vt0.c0 END IN ()) ORDER BY HEX(t0.c60)  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS INTEGER) AS BLOB) LEFT OUTER JOIN t0 ON (CASE WHEN rt0.c1 THEN vt0.c0 END IN ()) WHERE ((((((NOT (rt0.c2)))AND((((vt0.c2))<=((vt0.c1))))))OR(ROUND(rt0.c0, vt0.c0)))) ORDER BY HEX(t0.c60)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c2)))AND((((vt0.c2))<=((vt0.c1))))))OR(ROUND(rt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS INTEGER) AS BLOB) LEFT OUTER JOIN t0 ON (CASE WHEN rt0.c1 THEN vt0.c0 END IN ()) ORDER BY HEX(t0.c60)  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS INTEGER) AS BLOB) LEFT OUTER JOIN t0 ON (CASE WHEN rt0.c1 THEN vt0.c0 END IN ()) WHERE ((((((NOT (rt0.c2)))AND((((vt0.c2))<=((vt0.c1))))))OR(ROUND(rt0.c0, vt0.c0)))) ORDER BY HEX(t0.c60)  NULLS FIRST;
SELECT * FROM rt0, vt0, t0 WHERE (CASE WHEN vt0.c1 THEN ((vt0.c0)>=(vt0.c1)) END) ORDER BY (((vt0.c1 COLLATE NOCASE, rt0.c0 COLLATE RTRIM, (vt0.c0 IN ())))<>(((NOT (rt0.c2)), (('L') NOT NULL), vt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN ((vt0.c0)>=(vt0.c1)) END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((vt0.c1 COLLATE NOCASE, rt0.c0 COLLATE RTRIM, (vt0.c0 IN ())))!=(((NOT (rt0.c2)), (('L') NOT NULL), vt0.c2)))  NULLS FIRST);
SELECT * FROM rt0, vt0, t0 WHERE (CASE WHEN vt0.c1 THEN ((vt0.c0)>=(vt0.c1)) END) ORDER BY (((vt0.c1 COLLATE NOCASE, rt0.c0 COLLATE RTRIM, (vt0.c0 IN ())))<>(((NOT (rt0.c2)), (('L') NOT NULL), vt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN ((vt0.c0)>=(vt0.c1)) END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((vt0.c1 COLLATE NOCASE, rt0.c0 COLLATE RTRIM, (vt0.c0 IN ())))!=(((NOT (rt0.c2)), (('L') NOT NULL), vt0.c2)))  NULLS FIRST);
SELECT * FROM rt0, vt0, t0 WHERE (CASE WHEN vt0.c1 THEN ((vt0.c0)>=(vt0.c1)) END) ORDER BY (((vt0.c1 COLLATE NOCASE, rt0.c0 COLLATE RTRIM, (vt0.c0 IN ())))<>(((NOT (rt0.c2)), (('L') NOT NULL), vt0.c2)))  NULLS FIRST;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((((vt0.c0) NOT BETWEEN (t0.c60) AND (vt0.c2))))>=((((vt0.c2) NOT BETWEEN ('l') AND (vt0.c1))))) WHERE (((COALESCE(t0.c60, vt0.c1))+((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(t0.c60, vt0.c1))+((- (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((((vt0.c0) NOT BETWEEN (t0.c60) AND (vt0.c2))))>=((((vt0.c2) NOT BETWEEN ('l') AND (vt0.c1))))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((((vt0.c0) NOT BETWEEN (t0.c60) AND (vt0.c2))))>=((((vt0.c2) NOT BETWEEN ('l') AND (vt0.c1))))) WHERE (((COALESCE(t0.c60, vt0.c1))+((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(t0.c60, vt0.c1))+((- (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((((vt0.c0) NOT BETWEEN (t0.c60) AND (vt0.c2))))>=((((vt0.c2) NOT BETWEEN ('l') AND (vt0.c1))))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((((vt0.c0) NOT BETWEEN (t0.c60) AND (vt0.c2))))>=((((vt0.c2) NOT BETWEEN ('l') AND (vt0.c1))))) WHERE (((COALESCE(t0.c60, vt0.c1))+((- (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((ABS(vt0.c1))>=((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) ORDER BY (((NULL)) BETWEEN ((JULIANDAY(vt0.c1, vt0.c0, vt0.c1))) AND ((vt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((ABS(vt0.c1))>=((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((NULL)) BETWEEN ((JULIANDAY(vt0.c1, vt0.c0, vt0.c1))) AND ((vt0.c2))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((ABS(vt0.c1))>=((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) ORDER BY (((NULL)) BETWEEN ((JULIANDAY(vt0.c1, vt0.c0, vt0.c1))) AND ((vt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((ABS(vt0.c1))>=((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((NULL)) BETWEEN ((JULIANDAY(vt0.c1, vt0.c0, vt0.c1))) AND ((vt0.c2))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((ABS(vt0.c1))>=((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) ORDER BY (((NULL)) BETWEEN ((JULIANDAY(vt0.c1, vt0.c0, vt0.c1))) AND ((vt0.c2))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON rt0.c0 WHERE (((((vt0.c2)-(')(I{+|K䁔')))+((- (t0.c60))))) ORDER BY ((((rt0.c1))=((rt0.c1))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)-(')(I{+|K䁔')))+((- (t0.c60))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON rt0.c0 ORDER BY ((((rt0.c1))=((rt0.c1))) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON rt0.c0 WHERE (((((vt0.c2)-(')(I{+|K䁔')))+((- (t0.c60))))) ORDER BY ((((rt0.c1))=((rt0.c1))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)-(')(I{+|K䁔')))+((- (t0.c60))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON rt0.c0 ORDER BY ((((rt0.c1))=((rt0.c1))) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON rt0.c0 WHERE (((((vt0.c2)-(')(I{+|K䁔')))+((- (t0.c60))))) ORDER BY ((((rt0.c1))=((rt0.c1))) IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE (rt0.c1 IN ())  WHEN (~ (rt0.c0)) THEN (t0.c60 IN ()) END) ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN t0.c60 ELSE 0.13389477273703443 END THEN t0.c60 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c1 IN ())  WHEN (~ (rt0.c0)) THEN (t0.c60 IN ()) END) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN t0.c60 ELSE 0.13389477273703443 END THEN t0.c60 END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE (rt0.c1 IN ())  WHEN (~ (rt0.c0)) THEN (t0.c60 IN ()) END) ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN t0.c60 ELSE 0.13389477273703443 END THEN t0.c60 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c1 IN ())  WHEN (~ (rt0.c0)) THEN (t0.c60 IN ()) END) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN t0.c60 ELSE 0.13389477273703443 END THEN t0.c60 END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE (rt0.c1 IN ())  WHEN (~ (rt0.c0)) THEN (t0.c60 IN ()) END) ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN t0.c60 ELSE 0.13389477273703443 END THEN t0.c60 END ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))&(CAST(t0.c60 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))&(CAST(t0.c60 AS INTEGER)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))&(CAST(t0.c60 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))&(CAST(t0.c60 AS INTEGER)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))&(CAST(t0.c60 AS INTEGER))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((TRIM(DISTINCT rt0.c1, x'')) NOT BETWEEN (((vt0.c1) IS FALSE)) AND ('-115298049')));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c1, x'')) NOT BETWEEN (((vt0.c1) IS FALSE)) AND ('-115298049'))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((TRIM(DISTINCT rt0.c1, x'')) NOT BETWEEN (((vt0.c1) IS FALSE)) AND ('-115298049')));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c1, x'')) NOT BETWEEN (((vt0.c1) IS FALSE)) AND ('-115298049'))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((TRIM(DISTINCT rt0.c1, x'')) NOT BETWEEN (((vt0.c1) IS FALSE)) AND ('-115298049')));
SELECT COUNT(*) FROM t0, rt0 WHERE (t0.c60);
SELECT SUM(count) FROM (SELECT ((t0.c60) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (t0.c60);
SELECT SUM(count) FROM (SELECT ((t0.c60) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (t0.c60);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((CAST(vt0.c0 AS BLOB))IS NOT(((rt0.c2)<<(rt0.c1)))) INNER JOIN rt0 ON (+ (rt0.c0)) COLLATE NOCASE WHERE ((((((((((t0.c60)AND(vt0.c1)))AND(t0.c60)))OR(vt0.c1)))AND(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c60)AND(vt0.c1)))AND(t0.c60)))OR(vt0.c1)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((CAST(vt0.c0 AS BLOB))IS NOT(((rt0.c2)<<(rt0.c1)))) INNER JOIN rt0 ON (+ (rt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((CAST(vt0.c0 AS BLOB))IS NOT(((rt0.c2)<<(rt0.c1)))) INNER JOIN rt0 ON (+ (rt0.c0)) COLLATE NOCASE WHERE ((((((((((t0.c60)AND(vt0.c1)))AND(t0.c60)))OR(vt0.c1)))AND(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c60)AND(vt0.c1)))AND(t0.c60)))OR(vt0.c1)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((CAST(vt0.c0 AS BLOB))IS NOT(((rt0.c2)<<(rt0.c1)))) INNER JOIN rt0 ON (+ (rt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((CAST(vt0.c0 AS BLOB))IS NOT(((rt0.c2)<<(rt0.c1)))) INNER JOIN rt0 ON (+ (rt0.c0)) COLLATE NOCASE WHERE ((((((((((t0.c60)AND(vt0.c1)))AND(t0.c60)))OR(vt0.c1)))AND(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c1))) NOT BETWEEN ((((vt0.c1))==((vt0.c0)))) AND (CAST(vt0.c2 AS NUMERIC)))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (NULL)) THEN (vt0.c2 IN ()) ELSE ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1))) NOT BETWEEN ((((vt0.c1))==((vt0.c0)))) AND (CAST(vt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (NULL)) THEN (vt0.c2 IN ()) ELSE ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c1))) NOT BETWEEN ((((vt0.c1))==((vt0.c0)))) AND (CAST(vt0.c2 AS NUMERIC)))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (NULL)) THEN (vt0.c2 IN ()) ELSE ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1))) NOT BETWEEN ((((vt0.c1))==((vt0.c0)))) AND (CAST(vt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (NULL)) THEN (vt0.c2 IN ()) ELSE ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c1))) NOT BETWEEN ((((vt0.c1))==((vt0.c0)))) AND (CAST(vt0.c2 AS NUMERIC)))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (NULL)) THEN (vt0.c2 IN ()) ELSE ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CASE NULL  WHEN COALESCE('0.1146248978846327', vt0.c1) THEN '&됭~^' COLLATE BINARY ELSE ((((t0.c60)AND(vt0.c1)))OR(rt0.c2)) END) ORDER BY (((vt0.c1 IN ()))AND(((rt0.c2)LIKE(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN COALESCE('0.1146248978846327', vt0.c1) THEN '&됭~^' COLLATE BINARY ELSE ((((t0.c60)AND(vt0.c1)))OR(rt0.c2)) END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((vt0.c1 IN ()))AND(((rt0.c2)LIKE(rt0.c2)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CASE NULL  WHEN COALESCE('0.1146248978846327', vt0.c1) THEN '&됭~^' COLLATE BINARY ELSE ((((t0.c60)AND(vt0.c1)))OR(rt0.c2)) END) ORDER BY (((vt0.c1 IN ()))AND(((rt0.c2)LIKE(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN COALESCE('0.1146248978846327', vt0.c1) THEN '&됭~^' COLLATE BINARY ELSE ((((t0.c60)AND(vt0.c1)))OR(rt0.c2)) END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((vt0.c1 IN ()))AND(((rt0.c2)LIKE(rt0.c2)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((t0.c60) NOT NULL)) NOTNULL) LEFT OUTER JOIN t0 ON ((((vt0.c1) ISNULL))>=((rt0.c2 IN (rt0.c1)))) WHERE ((((NULL))!=((vt0.c0))) COLLATE NOCASE) ORDER BY 0.46882647990077, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((((NULL))<>((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((t0.c60) NOT NULL)) NOTNULL) LEFT OUTER JOIN t0 ON ((((vt0.c1) ISNULL))>=((rt0.c2 IN (rt0.c1)))) ORDER BY 0.46882647990077, rt0.c2 DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((t0.c60) NOT NULL)) NOTNULL) LEFT OUTER JOIN t0 ON ((((vt0.c1) ISNULL))>=((rt0.c2 IN (rt0.c1)))) WHERE ((((NULL))!=((vt0.c0))) COLLATE NOCASE) ORDER BY 0.46882647990077, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((((NULL))<>((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((t0.c60) NOT NULL)) NOTNULL) LEFT OUTER JOIN t0 ON ((((vt0.c1) ISNULL))>=((rt0.c2 IN (rt0.c1)))) ORDER BY 0.46882647990077, rt0.c2 DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((t0.c60) NOT NULL)) NOTNULL) LEFT OUTER JOIN t0 ON ((((vt0.c1) ISNULL))>=((rt0.c2 IN (rt0.c1)))) WHERE ((((NULL))!=((vt0.c0))) COLLATE NOCASE) ORDER BY 0.46882647990077, rt0.c2 DESC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON INSTR(LAST_INSERT_ROWID(), ((t0.c60) NOT BETWEEN (vt0.c2) AND (rt0.c0))) LEFT OUTER JOIN t0 ON CASE WHEN rt0.c1 THEN '-115298049' COLLATE BINARY WHEN -2.51277411E8 THEN (~ (vt0.c1)) WHEN ((((vt0.c1)OR(vt0.c0)))AND(x'')) THEN (NOT (rt0.c2)) ELSE NULL COLLATE NOCASE END WHERE ((HEX(vt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((HEX(vt0.c1) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED INNER JOIN rt0 ON INSTR(LAST_INSERT_ROWID(), ((t0.c60) NOT BETWEEN (vt0.c2) AND (rt0.c0))) LEFT OUTER JOIN t0 ON CASE WHEN rt0.c1 THEN '-115298049' COLLATE BINARY WHEN -2.51277411E8 THEN (~ (vt0.c1)) WHEN ((((vt0.c1)OR(vt0.c0)))AND(x'')) THEN (NOT (rt0.c2)) ELSE NULL COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON INSTR(LAST_INSERT_ROWID(), ((t0.c60) NOT BETWEEN (vt0.c2) AND (rt0.c0))) LEFT OUTER JOIN t0 ON CASE WHEN rt0.c1 THEN '-115298049' COLLATE BINARY WHEN -2.51277411E8 THEN (~ (vt0.c1)) WHEN ((((vt0.c1)OR(vt0.c0)))AND(x'')) THEN (NOT (rt0.c2)) ELSE NULL COLLATE NOCASE END WHERE ((HEX(vt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((HEX(vt0.c1) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED INNER JOIN rt0 ON INSTR(LAST_INSERT_ROWID(), ((t0.c60) NOT BETWEEN (vt0.c2) AND (rt0.c0))) LEFT OUTER JOIN t0 ON CASE WHEN rt0.c1 THEN '-115298049' COLLATE BINARY WHEN -2.51277411E8 THEN (~ (vt0.c1)) WHEN ((((vt0.c1)OR(vt0.c0)))AND(x'')) THEN (NOT (rt0.c2)) ELSE NULL COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON INSTR(LAST_INSERT_ROWID(), ((t0.c60) NOT BETWEEN (vt0.c2) AND (rt0.c0))) LEFT OUTER JOIN t0 ON CASE WHEN rt0.c1 THEN '-115298049' COLLATE BINARY WHEN -2.51277411E8 THEN (~ (vt0.c1)) WHEN ((((vt0.c1)OR(vt0.c0)))AND(x'')) THEN (NOT (rt0.c2)) ELSE NULL COLLATE NOCASE END WHERE ((HEX(vt0.c1) IN ()));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ('0.3480523583956714') ORDER BY ((NOT (rt0.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('0.3480523583956714') IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((NOT (rt0.c1)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ('0.3480523583956714') ORDER BY ((NOT (rt0.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('0.3480523583956714') IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((NOT (rt0.c1)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ('0.3480523583956714') ORDER BY ((NOT (rt0.c1)) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((NOT ((x'' IN ())))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN t0.c60 ELSE x'a941' END)<(CAST(t0.c60 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((x'' IN ())))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN t0.c60 ELSE x'a941' END)<(CAST(t0.c60 AS REAL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((NOT ((x'' IN ())))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN t0.c60 ELSE x'a941' END)<(CAST(t0.c60 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((x'' IN ())))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN t0.c60 ELSE x'a941' END)<(CAST(t0.c60 AS REAL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((NOT ((x'' IN ())))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN t0.c60 ELSE x'a941' END)<(CAST(t0.c60 AS REAL))) DESC  NULLS FIRST;
SELECT * FROM rt0 NOT INDEXED WHERE (COALESCE(((rt0.c1)<=(rt0.c1)), ((rt0.c0) NOT BETWEEN (0x6132163d) AND ('t<'))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c1)<=(rt0.c1)), ((rt0.c0) NOT BETWEEN (0x6132163d) AND ('t<')))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 NOT INDEXED WHERE (COALESCE(((rt0.c1)<=(rt0.c1)), ((rt0.c0) NOT BETWEEN (0x6132163d) AND ('t<'))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c1)<=(rt0.c1)), ((rt0.c0) NOT BETWEEN (0x6132163d) AND ('t<')))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 NOT INDEXED WHERE (COALESCE(((rt0.c1)<=(rt0.c1)), ((rt0.c0) NOT BETWEEN (0x6132163d) AND ('t<'))));
SELECT * FROM rt0 INNER JOIN t0 ON CASE WHEN ((((((((t0.c60)OR(rt0.c1)))AND(rt0.c0)))AND('')))AND(NULL)) THEN CAST(x'' AS NUMERIC) ELSE x'' END WHERE (json_object(CAST(-600266634 AS TEXT), LIKELY(DISTINCT rt0.c1), CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END, t0.c60 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((json_object(CAST(-600266634 AS TEXT), LIKELY(DISTINCT rt0.c1), CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END, t0.c60 COLLATE BINARY)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CASE WHEN ((((((((t0.c60)OR(rt0.c1)))AND(rt0.c0)))AND('')))AND(NULL)) THEN CAST(x'' AS NUMERIC) ELSE x'' END);
SELECT * FROM rt0 INNER JOIN t0 ON CASE WHEN ((((((((t0.c60)OR(rt0.c1)))AND(rt0.c0)))AND('')))AND(NULL)) THEN CAST(x'' AS NUMERIC) ELSE x'' END WHERE (json_object(CAST(-600266634 AS TEXT), LIKELY(DISTINCT rt0.c1), CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END, t0.c60 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((json_object(CAST(-600266634 AS TEXT), LIKELY(DISTINCT rt0.c1), CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END, t0.c60 COLLATE BINARY)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CASE WHEN ((((((((t0.c60)OR(rt0.c1)))AND(rt0.c0)))AND('')))AND(NULL)) THEN CAST(x'' AS NUMERIC) ELSE x'' END);
SELECT * FROM rt0 INNER JOIN t0 ON CASE WHEN ((((((((t0.c60)OR(rt0.c1)))AND(rt0.c0)))AND('')))AND(NULL)) THEN CAST(x'' AS NUMERIC) ELSE x'' END WHERE (json_object(CAST(-600266634 AS TEXT), LIKELY(DISTINCT rt0.c1), CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END, t0.c60 COLLATE BINARY));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (LIKELY(rt0.c0) IN ()) WHERE (t0.c60 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t0.c60 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (LIKELY(rt0.c0) IN ()));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (LIKELY(rt0.c0) IN ()) WHERE (t0.c60 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t0.c60 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (LIKELY(rt0.c0) IN ()));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (LIKELY(rt0.c0) IN ()) WHERE (t0.c60 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE);
SELECT ALL * FROM rt0 NOT INDEXED INNER JOIN t0 ON ((((((((t0.c60)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(0.41536913565305167)) COLLATE NOCASE CROSS JOIN vt0 ON vt0.c0 WHERE ((((vt0.c0 IN (vt0.c2)))>=(((vt0.c0) IS FALSE)))) ORDER BY (((((((((((vt0.c2)AND(t0.c60)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))))<>((UNICODE(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c2)))>=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((((((t0.c60)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(0.41536913565305167)) COLLATE NOCASE CROSS JOIN vt0 ON vt0.c0 ORDER BY (((((((((((vt0.c2)AND(t0.c60)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))))<>((UNICODE(vt0.c1)))) DESC);
SELECT ALL * FROM rt0 NOT INDEXED INNER JOIN t0 ON ((((((((t0.c60)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(0.41536913565305167)) COLLATE NOCASE CROSS JOIN vt0 ON vt0.c0 WHERE ((((vt0.c0 IN (vt0.c2)))>=(((vt0.c0) IS FALSE)))) ORDER BY (((((((((((vt0.c2)AND(t0.c60)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))))<>((UNICODE(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c2)))>=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((((((t0.c60)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(0.41536913565305167)) COLLATE NOCASE CROSS JOIN vt0 ON vt0.c0 ORDER BY (((((((((((vt0.c2)AND(t0.c60)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))))<>((UNICODE(vt0.c1)))) DESC);
SELECT ALL * FROM rt0 NOT INDEXED INNER JOIN t0 ON ((((((((t0.c60)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(0.41536913565305167)) COLLATE NOCASE CROSS JOIN vt0 ON vt0.c0 WHERE ((((vt0.c0 IN (vt0.c2)))>=(((vt0.c0) IS FALSE)))) ORDER BY (((((((((((vt0.c2)AND(t0.c60)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))))<>((UNICODE(vt0.c1)))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY HEX(DISTINCT vt0.c1 COLLATE NOCASE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY HEX(DISTINCT vt0.c1 COLLATE NOCASE) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY HEX(DISTINCT vt0.c1 COLLATE NOCASE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY HEX(DISTINCT vt0.c1 COLLATE NOCASE) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY HEX(DISTINCT vt0.c1 COLLATE NOCASE) DESC;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((vt0.c0)>=(vt0.c2)) COLLATE BINARY COLLATE RTRIM) ORDER BY (((((vt0.c1))<((vt0.c1))))||(((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>=(vt0.c2)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((vt0.c1))<((vt0.c1))))||(((vt0.c0) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((vt0.c0)>=(vt0.c2)) COLLATE BINARY COLLATE RTRIM) ORDER BY (((((vt0.c1))<((vt0.c1))))||(((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>=(vt0.c2)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((vt0.c1))<((vt0.c1))))||(((vt0.c0) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((vt0.c0)>=(vt0.c2)) COLLATE BINARY COLLATE RTRIM) ORDER BY (((((vt0.c1))<((vt0.c1))))||(((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) ORDER BY ((((rt0.c1) IS TRUE))>((rt0.c0 IN (rt0.c0, rt0.c2)))), (((rt0.c0 IN ()))<=((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS TRUE))>((rt0.c0 IN (rt0.c0, rt0.c2)))), (((rt0.c0 IN ()))<=((rt0.c2 IN ()))));
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) ORDER BY ((((rt0.c1) IS TRUE))>((rt0.c0 IN (rt0.c0, rt0.c2)))), (((rt0.c0 IN ()))<=((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS TRUE))>((rt0.c0 IN (rt0.c0, rt0.c2)))), (((rt0.c0 IN ()))<=((rt0.c2 IN ()))));
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) ORDER BY ((((rt0.c1) IS TRUE))>((rt0.c0 IN (rt0.c0, rt0.c2)))), (((rt0.c0 IN ()))<=((rt0.c2 IN ())));
SELECT * FROM rt0, t0 WHERE (((((NULL)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((NULL)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((NULL)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((NULL)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((NULL)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(((NULL) NOT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL) NOT NULL) AS BLOB)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(((NULL) NOT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL) NOT NULL) AS BLOB)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(((NULL) NOT NULL) AS BLOB));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c0) NOT NULL)) BETWEEN (((((((((vt0.c1)AND(rt0.c1)))AND(vt0.c2)))OR(rt0.c0)))AND(vt0.c1))) AND (rt0.c0))) ORDER BY (('887549015' COLLATE NOCASE)|((- (rt0.c2)))) DESC, ((((rt0.c1)>=(t0.c60))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) BETWEEN (((((((((vt0.c1)AND(rt0.c1)))AND(vt0.c2)))OR(rt0.c0)))AND(vt0.c1))) AND (rt0.c0))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (('887549015' COLLATE NOCASE)|((- (rt0.c2)))) DESC, ((((rt0.c1)>=(t0.c60))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c0) NOT NULL)) BETWEEN (((((((((vt0.c1)AND(rt0.c1)))AND(vt0.c2)))OR(rt0.c0)))AND(vt0.c1))) AND (rt0.c0))) ORDER BY (('887549015' COLLATE NOCASE)|((- (rt0.c2)))) DESC, ((((rt0.c1)>=(t0.c60))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) BETWEEN (((((((((vt0.c1)AND(rt0.c1)))AND(vt0.c2)))OR(rt0.c0)))AND(vt0.c1))) AND (rt0.c0))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (('887549015' COLLATE NOCASE)|((- (rt0.c2)))) DESC, ((((rt0.c1)>=(t0.c60))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c0) NOT NULL)) BETWEEN (((((((((vt0.c1)AND(rt0.c1)))AND(vt0.c2)))OR(rt0.c0)))AND(vt0.c1))) AND (rt0.c0))) ORDER BY (('887549015' COLLATE NOCASE)|((- (rt0.c2)))) DESC, ((((rt0.c1)>=(t0.c60))) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c60)>=(t0.c60)) IN ((t0.c60 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60)>=(t0.c60)) IN ((t0.c60 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c60)>=(t0.c60)) IN ((t0.c60 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60)>=(t0.c60)) IN ((t0.c60 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c60)>=(t0.c60)) IN ((t0.c60 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))>(CAST(282066312 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))>(CAST(282066312 AS BLOB))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))>(CAST(282066312 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))>(CAST(282066312 AS BLOB))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))>(CAST(282066312 AS BLOB))) ASC;
SELECT * FROM rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((2.137747307E9) NOT BETWEEN (UPPER(rt0.c0)) AND (((-1476693149)+(-6.00266634E8))))) ORDER BY ((CAST(rt0.c1 AS BLOB)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((2.137747307E9) NOT BETWEEN (UPPER(rt0.c0)) AND (((-1476693149)+(-6.00266634E8))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c1 AS BLOB)) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((2.137747307E9) NOT BETWEEN (UPPER(rt0.c0)) AND (((-1476693149)+(-6.00266634E8))))) ORDER BY ((CAST(rt0.c1 AS BLOB)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((2.137747307E9) NOT BETWEEN (UPPER(rt0.c0)) AND (((-1476693149)+(-6.00266634E8))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c1 AS BLOB)) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((2.137747307E9) NOT BETWEEN (UPPER(rt0.c0)) AND (((-1476693149)+(-6.00266634E8))))) ORDER BY ((CAST(rt0.c1 AS BLOB)) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c2 COLLATE RTRIM)>=((NOT (vt0.c1))))) ORDER BY ((((0.2694046894338029)OR(NULL)))AND(CAST(vt0.c1 AS NUMERIC)))  NULLS LAST, ((0.24147625470467426)AND(((t0.c60) BETWEEN (t0.c60) AND (vt0.c0)))) DESC  NULLS LAST, ((((((((CAST(vt0.c2 AS NUMERIC))AND(((vt0.c0) ISNULL))))AND(((vt0.c2)!=(vt0.c1)))))AND(((0.2519120887870543) NOTNULL))))OR(((t0.c60) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE RTRIM)>=((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((0.2694046894338029)OR(NULL)))AND(CAST(vt0.c1 AS NUMERIC)))  NULLS LAST, ((0.24147625470467426)AND(((t0.c60) BETWEEN (t0.c60) AND (vt0.c0)))) DESC  NULLS LAST, ((((((((CAST(vt0.c2 AS NUMERIC))AND(((vt0.c0) ISNULL))))AND(((vt0.c2)!=(vt0.c1)))))AND(((0.2519120887870543) NOTNULL))))OR(((t0.c60) NOTNULL))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c2 COLLATE RTRIM)>=((NOT (vt0.c1))))) ORDER BY ((((0.2694046894338029)OR(NULL)))AND(CAST(vt0.c1 AS NUMERIC)))  NULLS LAST, ((0.24147625470467426)AND(((t0.c60) BETWEEN (t0.c60) AND (vt0.c0)))) DESC  NULLS LAST, ((((((((CAST(vt0.c2 AS NUMERIC))AND(((vt0.c0) ISNULL))))AND(((vt0.c2)!=(vt0.c1)))))AND(((0.2519120887870543) NOTNULL))))OR(((t0.c60) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE RTRIM)>=((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((0.2694046894338029)OR(NULL)))AND(CAST(vt0.c1 AS NUMERIC)))  NULLS LAST, ((0.24147625470467426)AND(((t0.c60) BETWEEN (t0.c60) AND (vt0.c0)))) DESC  NULLS LAST, ((((((((CAST(vt0.c2 AS NUMERIC))AND(((vt0.c0) ISNULL))))AND(((vt0.c2)!=(vt0.c1)))))AND(((0.2519120887870543) NOTNULL))))OR(((t0.c60) NOTNULL))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c2 COLLATE RTRIM)>=((NOT (vt0.c1))))) ORDER BY ((((0.2694046894338029)OR(NULL)))AND(CAST(vt0.c1 AS NUMERIC)))  NULLS LAST, ((0.24147625470467426)AND(((t0.c60) BETWEEN (t0.c60) AND (vt0.c0)))) DESC  NULLS LAST, ((((((((CAST(vt0.c2 AS NUMERIC))AND(((vt0.c0) ISNULL))))AND(((vt0.c2)!=(vt0.c1)))))AND(((0.2519120887870543) NOTNULL))))OR(((t0.c60) NOTNULL))) DESC;
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1 COLLATE NOCASE);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN ((rt0.c2)>>(rt0.c2)) THEN ((rt0.c1) ISNULL) ELSE ((rt0.c2) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)>>(rt0.c2)) THEN ((rt0.c1) ISNULL) ELSE ((rt0.c2) IS FALSE) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN ((rt0.c2)>>(rt0.c2)) THEN ((rt0.c1) ISNULL) ELSE ((rt0.c2) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)>>(rt0.c2)) THEN ((rt0.c1) ISNULL) ELSE ((rt0.c2) IS FALSE) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN ((rt0.c2)>>(rt0.c2)) THEN ((rt0.c1) ISNULL) ELSE ((rt0.c2) IS FALSE) END);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((+ (vt0.c1))) NOTNULL)) ORDER BY ((((((((t0.c60)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))OR('-1721271432')) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((((t0.c60)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))OR('-1721271432')) COLLATE NOCASE DESC);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((+ (vt0.c1))) NOTNULL)) ORDER BY ((((((((t0.c60)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))OR('-1721271432')) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((((t0.c60)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))OR('-1721271432')) COLLATE NOCASE DESC);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((+ (vt0.c1))) NOTNULL)) ORDER BY ((((((((t0.c60)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))OR('-1721271432')) COLLATE NOCASE DESC;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c60)|(t0.c60)) AS INTEGER)) ORDER BY (((((t0.c60 IN (t0.c60, '-1626585068')))AND(CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)))OR(UPPER(t0.c60)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c60)|(t0.c60)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c60 IN (t0.c60, '-1626585068')))AND(CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)))OR(UPPER(t0.c60))));
SELECT ALL * FROM t0 WHERE (CAST(((t0.c60)|(t0.c60)) AS INTEGER)) ORDER BY (((((t0.c60 IN (t0.c60, '-1626585068')))AND(CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)))OR(UPPER(t0.c60)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c60)|(t0.c60)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c60 IN (t0.c60, '-1626585068')))AND(CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)))OR(UPPER(t0.c60))));
SELECT ALL * FROM t0 WHERE (CAST(((t0.c60)|(t0.c60)) AS INTEGER)) ORDER BY (((((t0.c60 IN (t0.c60, '-1626585068')))AND(CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)))OR(UPPER(t0.c60)));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((((rt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((t0.c60))))GLOB(((((((((((((vt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((t0.c60))))GLOB(((((((((((((vt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((((rt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((t0.c60))))GLOB(((((((((((((vt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((t0.c60))))GLOB(((((((((((((vt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((((rt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((t0.c60))))GLOB(((((((((((((vt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(x'' AS NUMERIC))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((CAST(x'' AS NUMERIC))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(x'' AS NUMERIC))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((CAST(x'' AS NUMERIC))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(x'' AS NUMERIC))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(rt0.c1)));
SELECT COUNT(*) FROM t0 WHERE (((((((x'') NOT NULL))OR(((t0.c60)!=(t0.c60)))))OR(((t0.c60)>>(t0.c60))))) ORDER BY (((t0.c60, t0.c60, t0.c60)) NOT BETWEEN ((t0.c60 COLLATE RTRIM, ((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)), x'987b')) AND ((CAST(t0.c60 AS TEXT), (t0.c60 IN (t0.c60)), CASE t0.c60  WHEN t0.c60 THEN t0.c60 WHEN NULL THEN t0.c60 WHEN t0.c60 THEN NULL WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END))) ASC, CASE WHEN ((t0.c60)AND(t0.c60)) THEN ((t0.c60)<=(t0.c60)) WHEN ((t0.c60) IS FALSE) THEN TRIM(DISTINCT t0.c60, x'') WHEN CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END THEN (t0.c60 IN ()) WHEN ((t0.c60) IS FALSE) THEN t0.c60 COLLATE RTRIM WHEN ((x'') NOT NULL) THEN (('')==(t0.c60)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((x'') NOT NULL))OR(((t0.c60)!=(t0.c60)))))OR(((t0.c60)>>(t0.c60))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c60, t0.c60, t0.c60)) NOT BETWEEN ((t0.c60 COLLATE RTRIM, ((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)), x'987b')) AND ((CAST(t0.c60 AS TEXT), (t0.c60 IN (t0.c60)), CASE t0.c60  WHEN t0.c60 THEN t0.c60 WHEN NULL THEN t0.c60 WHEN t0.c60 THEN NULL WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END))) ASC, CASE WHEN ((t0.c60)AND(t0.c60)) THEN ((t0.c60)<=(t0.c60)) WHEN ((t0.c60) IS FALSE) THEN TRIM(DISTINCT t0.c60, x'') WHEN CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END THEN (t0.c60 IN ()) WHEN ((t0.c60) IS FALSE) THEN t0.c60 COLLATE RTRIM WHEN ((x'') NOT NULL) THEN (('')==(t0.c60)) END ASC);
SELECT COUNT(*) FROM t0 WHERE (((((((x'') NOT NULL))OR(((t0.c60)!=(t0.c60)))))OR(((t0.c60)>>(t0.c60))))) ORDER BY (((t0.c60, t0.c60, t0.c60)) NOT BETWEEN ((t0.c60 COLLATE RTRIM, ((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)), x'987b')) AND ((CAST(t0.c60 AS TEXT), (t0.c60 IN (t0.c60)), CASE t0.c60  WHEN t0.c60 THEN t0.c60 WHEN NULL THEN t0.c60 WHEN t0.c60 THEN NULL WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END))) ASC, CASE WHEN ((t0.c60)AND(t0.c60)) THEN ((t0.c60)<=(t0.c60)) WHEN ((t0.c60) IS FALSE) THEN TRIM(DISTINCT t0.c60, x'') WHEN CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END THEN (t0.c60 IN ()) WHEN ((t0.c60) IS FALSE) THEN t0.c60 COLLATE RTRIM WHEN ((x'') NOT NULL) THEN (('')==(t0.c60)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((x'') NOT NULL))OR(((t0.c60)!=(t0.c60)))))OR(((t0.c60)>>(t0.c60))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c60, t0.c60, t0.c60)) NOT BETWEEN ((t0.c60 COLLATE RTRIM, ((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)), x'987b')) AND ((CAST(t0.c60 AS TEXT), (t0.c60 IN (t0.c60)), CASE t0.c60  WHEN t0.c60 THEN t0.c60 WHEN NULL THEN t0.c60 WHEN t0.c60 THEN NULL WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END))) ASC, CASE WHEN ((t0.c60)AND(t0.c60)) THEN ((t0.c60)<=(t0.c60)) WHEN ((t0.c60) IS FALSE) THEN TRIM(DISTINCT t0.c60, x'') WHEN CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END THEN (t0.c60 IN ()) WHEN ((t0.c60) IS FALSE) THEN t0.c60 COLLATE RTRIM WHEN ((x'') NOT NULL) THEN (('')==(t0.c60)) END ASC);
SELECT COUNT(*) FROM t0 WHERE (((((((x'') NOT NULL))OR(((t0.c60)!=(t0.c60)))))OR(((t0.c60)>>(t0.c60))))) ORDER BY (((t0.c60, t0.c60, t0.c60)) NOT BETWEEN ((t0.c60 COLLATE RTRIM, ((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)), x'987b')) AND ((CAST(t0.c60 AS TEXT), (t0.c60 IN (t0.c60)), CASE t0.c60  WHEN t0.c60 THEN t0.c60 WHEN NULL THEN t0.c60 WHEN t0.c60 THEN NULL WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END))) ASC, CASE WHEN ((t0.c60)AND(t0.c60)) THEN ((t0.c60)<=(t0.c60)) WHEN ((t0.c60) IS FALSE) THEN TRIM(DISTINCT t0.c60, x'') WHEN CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END THEN (t0.c60 IN ()) WHEN ((t0.c60) IS FALSE) THEN t0.c60 COLLATE RTRIM WHEN ((x'') NOT NULL) THEN (('')==(t0.c60)) END ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))%(vt0.c2))) ORDER BY (((vt0.c1 IN ()))IS(((vt0.c2) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))%(vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ()))IS(((vt0.c2) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))%(vt0.c2))) ORDER BY (((vt0.c1 IN ()))IS(((vt0.c2) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))%(vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ()))IS(((vt0.c2) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))%(vt0.c2))) ORDER BY (((vt0.c1 IN ()))IS(((vt0.c2) NOT NULL)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(vt0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(vt0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT * FROM t0, vt0, rt0 WHERE (((CAST(vt0.c0 AS BLOB))>=(((-4.24993057E8)+(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))>=(((-4.24993057E8)+(vt0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((CAST(vt0.c0 AS BLOB))>=(((-4.24993057E8)+(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))>=(((-4.24993057E8)+(vt0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((CAST(vt0.c0 AS BLOB))>=(((-4.24993057E8)+(vt0.c2)))));
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) IS TRUE))IS(CAST(x'' AS INTEGER))) WHERE (t0.c60);
SELECT SUM(count) FROM (SELECT ((t0.c60) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) IS TRUE))IS(CAST(x'' AS INTEGER))));
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) IS TRUE))IS(CAST(x'' AS INTEGER))) WHERE (t0.c60);
SELECT SUM(count) FROM (SELECT ((t0.c60) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) IS TRUE))IS(CAST(x'' AS INTEGER))));
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) IS TRUE))IS(CAST(x'' AS INTEGER))) WHERE (t0.c60);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((+ (((rt0.c1)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)AND(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((+ (((rt0.c1)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)AND(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((+ (((rt0.c1)AND(rt0.c1)))));
SELECT * FROM rt0, t0 WHERE (CAST((NOT (rt0.c0)) AS REAL)) ORDER BY (((((t0.c60)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((t0.c60)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS TRUE)  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (CAST((NOT (rt0.c0)) AS REAL)) ORDER BY (((((t0.c60)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((t0.c60)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS TRUE)  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (CAST((NOT (rt0.c0)) AS REAL)) ORDER BY (((((t0.c60)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((CAST(2137747307 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(2137747307 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(2137747307 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(2137747307 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(2137747307 AS NUMERIC)) IS TRUE));
SELECT * FROM t0, rt0, vt0 WHERE ((((vt0.c0 IN ()))-(vt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))-(vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((((vt0.c0 IN ()))-(vt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))-(vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((((vt0.c0 IN ()))-(vt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0, rt0 WHERE (RTRIM(CAST(vt0.c2 AS REAL))) ORDER BY ((rt0.c2)==((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(CAST(vt0.c2 AS REAL))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((rt0.c2)=((rt0.c1 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0, rt0 WHERE (RTRIM(CAST(vt0.c2 AS REAL))) ORDER BY ((rt0.c2)==((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(CAST(vt0.c2 AS REAL))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((rt0.c2)=((rt0.c1 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0, rt0 WHERE (RTRIM(CAST(vt0.c2 AS REAL))) ORDER BY ((rt0.c2)==((rt0.c1 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((vt0.c0))=((t0.c60)))))>((((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(rt0.c2)))AND(vt0.c2)))OR(t0.c60))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0))==((t0.c60)))))>((((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(rt0.c2)))AND(vt0.c2)))OR(t0.c60)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((vt0.c0))=((t0.c60)))))>((((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(rt0.c2)))AND(vt0.c2)))OR(t0.c60))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0))==((t0.c60)))))>((((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(rt0.c2)))AND(vt0.c2)))OR(t0.c60)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((vt0.c0))=((t0.c60)))))>((((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(rt0.c2)))AND(vt0.c2)))OR(t0.c60))))));
SELECT ALL * FROM rt0, t0, vt0 WHERE ((+ (((((rt0.c2)AND(vt0.c1)))OR(rt0.c2))))) ORDER BY t0.c60 DESC, -367190576 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)AND(vt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY t0.c60 DESC, -367190576 DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((+ (((((rt0.c2)AND(vt0.c1)))OR(rt0.c2))))) ORDER BY t0.c60 DESC, -367190576 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)AND(vt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY t0.c60 DESC, -367190576 DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (-1337330937);
SELECT SUM(count) FROM (SELECT ALL ((-1337330937) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (-1337330937);
SELECT SUM(count) FROM (SELECT ALL ((-1337330937) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (-1337330937);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((vt0.c0 IN ())))==((CAST(vt0.c0 AS BLOB))))) ORDER BY (UNLIKELY(vt0.c0) IN (vt0.c0 COLLATE BINARY))  NULLS FIRST, ((((t0.c60)>=(rt0.c2))) NOT BETWEEN ((('-1414291021')>(t0.c60))) AND (((((((((0.5007067196439908)AND(vt0.c1)))OR(vt0.c2)))OR(rt0.c2)))AND(t0.c60))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ())))=((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (UNLIKELY(vt0.c0) IN (vt0.c0 COLLATE BINARY))  NULLS FIRST, ((((t0.c60)>=(rt0.c2))) NOT BETWEEN ((('-1414291021')>(t0.c60))) AND (((((((((0.5007067196439908)AND(vt0.c1)))OR(vt0.c2)))OR(rt0.c2)))AND(t0.c60)))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((vt0.c0 IN ())))==((CAST(vt0.c0 AS BLOB))))) ORDER BY (UNLIKELY(vt0.c0) IN (vt0.c0 COLLATE BINARY))  NULLS FIRST, ((((t0.c60)>=(rt0.c2))) NOT BETWEEN ((('-1414291021')>(t0.c60))) AND (((((((((0.5007067196439908)AND(vt0.c1)))OR(vt0.c2)))OR(rt0.c2)))AND(t0.c60))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ())))=((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (UNLIKELY(vt0.c0) IN (vt0.c0 COLLATE BINARY))  NULLS FIRST, ((((t0.c60)>=(rt0.c2))) NOT BETWEEN ((('-1414291021')>(t0.c60))) AND (((((((((0.5007067196439908)AND(vt0.c1)))OR(vt0.c2)))OR(rt0.c2)))AND(t0.c60)))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((vt0.c0 IN ())))==((CAST(vt0.c0 AS BLOB))))) ORDER BY (UNLIKELY(vt0.c0) IN (vt0.c0 COLLATE BINARY))  NULLS FIRST, ((((t0.c60)>=(rt0.c2))) NOT BETWEEN ((('-1414291021')>(t0.c60))) AND (((((((((0.5007067196439908)AND(vt0.c1)))OR(vt0.c2)))OR(rt0.c2)))AND(t0.c60))));
SELECT ALL * FROM t0, rt0 CROSS JOIN vt0 ON CAST(CAST(rt0.c2 AS TEXT) AS INTEGER) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON CAST(CAST(rt0.c2 AS TEXT) AS INTEGER));
SELECT ALL * FROM t0, rt0 CROSS JOIN vt0 ON CAST(CAST(rt0.c2 AS TEXT) AS INTEGER) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON CAST(CAST(rt0.c2 AS TEXT) AS INTEGER));
SELECT ALL * FROM t0, rt0 CROSS JOIN vt0 ON CAST(CAST(rt0.c2 AS TEXT) AS INTEGER) WHERE (rt0.c0);
SELECT * FROM vt0 WHERE ((((((('1291277844')OR(vt0.c2)))OR(vt0.c1 COLLATE RTRIM)))AND((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((('1291277844')OR(vt0.c2)))OR(vt0.c1 COLLATE RTRIM)))AND((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((('1291277844')OR(vt0.c2)))OR(vt0.c1 COLLATE RTRIM)))AND((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((('1291277844')OR(vt0.c2)))OR(vt0.c1 COLLATE RTRIM)))AND((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((('1291277844')OR(vt0.c2)))OR(vt0.c1 COLLATE RTRIM)))AND((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((TYPEOF(rt0.c0)) BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))) AND (rt0.c0))) ORDER BY (+ (rt0.c0));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c0)) BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))) AND (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((TYPEOF(rt0.c0)) BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))) AND (rt0.c0))) ORDER BY (+ (rt0.c0));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c0)) BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))) AND (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((TYPEOF(rt0.c0)) BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))) AND (rt0.c0))) ORDER BY (+ (rt0.c0));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((((vt0.c0, t0.c60, t0.c60))=((rt0.c2, vt0.c0, rt0.c0))))>>((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY ((CAST(rt0.c2 AS BLOB)) ISNULL) ASC, UPPER(DISTINCT (0X10cffd88 IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, t0.c60, t0.c60))==((rt0.c2, vt0.c0, rt0.c0))))>>((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((CAST(rt0.c2 AS BLOB)) ISNULL) ASC, UPPER(DISTINCT (0X10cffd88 IN ())));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((((vt0.c0, t0.c60, t0.c60))=((rt0.c2, vt0.c0, rt0.c0))))>>((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY ((CAST(rt0.c2 AS BLOB)) ISNULL) ASC, UPPER(DISTINCT (0X10cffd88 IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, t0.c60, t0.c60))==((rt0.c2, vt0.c0, rt0.c0))))>>((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((CAST(rt0.c2 AS BLOB)) ISNULL) ASC, UPPER(DISTINCT (0X10cffd88 IN ())));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((((vt0.c0, t0.c60, t0.c60))=((rt0.c2, vt0.c0, rt0.c0))))>>((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY ((CAST(rt0.c2 AS BLOB)) ISNULL) ASC, UPPER(DISTINCT (0X10cffd88 IN ()));
SELECT * FROM t0 INNER JOIN rt0 ON ((((((((((('-1414291021')) NOT BETWEEN ((rt0.c2)) AND ((t0.c60))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR('-1748240067')))AND(CAST(t0.c60 AS TEXT))))AND(LIKELIHOOD('', 0.05828566496770948))) WHERE ((((+ (rt0.c1)))>>(((rt0.c2)|(rt0.c1))))) ORDER BY (((rt0.c1 IN ()))&(((rt0.c2)LIKE(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1)))>>(((rt0.c2)|(rt0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((((((((('-1414291021')) NOT BETWEEN ((rt0.c2)) AND ((t0.c60))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR('-1748240067')))AND(CAST(t0.c60 AS TEXT))))AND(LIKELIHOOD('', 0.05828566496770948))) ORDER BY (((rt0.c1 IN ()))&(((rt0.c2)LIKE(rt0.c1))))  NULLS LAST);
SELECT * FROM t0 INNER JOIN rt0 ON ((((((((((('-1414291021')) NOT BETWEEN ((rt0.c2)) AND ((t0.c60))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR('-1748240067')))AND(CAST(t0.c60 AS TEXT))))AND(LIKELIHOOD('', 0.05828566496770948))) WHERE ((((+ (rt0.c1)))>>(((rt0.c2)|(rt0.c1))))) ORDER BY (((rt0.c1 IN ()))&(((rt0.c2)LIKE(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1)))>>(((rt0.c2)|(rt0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((((((((('-1414291021')) NOT BETWEEN ((rt0.c2)) AND ((t0.c60))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR('-1748240067')))AND(CAST(t0.c60 AS TEXT))))AND(LIKELIHOOD('', 0.05828566496770948))) ORDER BY (((rt0.c1 IN ()))&(((rt0.c2)LIKE(rt0.c1))))  NULLS LAST);
SELECT * FROM t0 INNER JOIN rt0 ON ((((((((((('-1414291021')) NOT BETWEEN ((rt0.c2)) AND ((t0.c60))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR('-1748240067')))AND(CAST(t0.c60 AS TEXT))))AND(LIKELIHOOD('', 0.05828566496770948))) WHERE ((((+ (rt0.c1)))>>(((rt0.c2)|(rt0.c1))))) ORDER BY (((rt0.c1 IN ()))&(((rt0.c2)LIKE(rt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((HEX(DISTINCT vt0.c1))GLOB(((((vt0.c2)OR(rt0.c1)))OR(rt0.c0))))) ORDER BY (NOT (((rt0.c1) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT vt0.c1))GLOB(((((vt0.c2)OR(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (((rt0.c1) IS TRUE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((HEX(DISTINCT vt0.c1))GLOB(((((vt0.c2)OR(rt0.c1)))OR(rt0.c0))))) ORDER BY (NOT (((rt0.c1) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT vt0.c1))GLOB(((((vt0.c2)OR(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (((rt0.c1) IS TRUE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((HEX(DISTINCT vt0.c1))GLOB(((((vt0.c2)OR(rt0.c1)))OR(rt0.c0))))) ORDER BY (NOT (((rt0.c1) IS TRUE))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 END IN ()));
SELECT * FROM vt0 WHERE (CAST(x'' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(x'' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(x'' AS NUMERIC));
SELECT ALL * FROM rt0 INNER JOIN t0 ON CASE WHEN (- (rt0.c0)) THEN rt0.c1 COLLATE RTRIM END CROSS JOIN vt0 ON CASE ((vt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN ((vt0.c0)*(t0.c60)) THEN vt0.c0 END WHERE (((CASE vt0.c2  WHEN rt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0)<(rt0.c2))) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c2  WHEN rt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0)<(rt0.c2))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CASE WHEN (- (rt0.c0)) THEN rt0.c1 COLLATE RTRIM END CROSS JOIN vt0 ON CASE ((vt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN ((vt0.c0)*(t0.c60)) THEN vt0.c0 END);
SELECT ALL * FROM rt0 INNER JOIN t0 ON CASE WHEN (- (rt0.c0)) THEN rt0.c1 COLLATE RTRIM END CROSS JOIN vt0 ON CASE ((vt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN ((vt0.c0)*(t0.c60)) THEN vt0.c0 END WHERE (((CASE vt0.c2  WHEN rt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0)<(rt0.c2))) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c2  WHEN rt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0)<(rt0.c2))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CASE WHEN (- (rt0.c0)) THEN rt0.c1 COLLATE RTRIM END CROSS JOIN vt0 ON CASE ((vt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN ((vt0.c0)*(t0.c60)) THEN vt0.c0 END);
SELECT ALL * FROM rt0 INNER JOIN t0 ON CASE WHEN (- (rt0.c0)) THEN rt0.c1 COLLATE RTRIM END CROSS JOIN vt0 ON CASE ((vt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN ((vt0.c0)*(t0.c60)) THEN vt0.c0 END WHERE (((CASE vt0.c2  WHEN rt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0)<(rt0.c2))) AND (vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (x'3e09');
SELECT SUM(count) FROM (SELECT ((x'3e09') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'3e09');
SELECT SUM(count) FROM (SELECT ((x'3e09') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'3e09');
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c0 COLLATE RTRIM)OR(rt0.c0 COLLATE BINARY))) ORDER BY rt0.c2, ((rt0.c1)LIKE(((rt0.c0) NOTNULL))) DESC  NULLS FIRST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)OR(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY rt0.c2, ((rt0.c1)LIKE(((rt0.c0) NOTNULL))) DESC  NULLS FIRST, rt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c0 COLLATE RTRIM)OR(rt0.c0 COLLATE BINARY))) ORDER BY rt0.c2, ((rt0.c1)LIKE(((rt0.c0) NOTNULL))) DESC  NULLS FIRST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)OR(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY rt0.c2, ((rt0.c1)LIKE(((rt0.c0) NOTNULL))) DESC  NULLS FIRST, rt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c0 COLLATE RTRIM)OR(rt0.c0 COLLATE BINARY))) ORDER BY rt0.c2, ((rt0.c1)LIKE(((rt0.c0) NOTNULL))) DESC  NULLS FIRST, rt0.c1 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c1)))AND(0Xffffffffbac0b570)) IN ())) ORDER BY CASE (NOT (1310254307))  WHEN CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END THEN (- (x'')) ELSE ((vt0.c2)|(vt0.c1)) END, (('-996104333')||(((((vt0.c1)OR(vt0.c2)))AND(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)AND(vt0.c1)))AND(0Xffffffffbac0b570)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE (NOT (1310254307))  WHEN CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END THEN (- (x'')) ELSE ((vt0.c2)|(vt0.c1)) END, (('-996104333')||(((((vt0.c1)OR(vt0.c2)))AND(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c1)))AND(0Xffffffffbac0b570)) IN ())) ORDER BY CASE (NOT (1310254307))  WHEN CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END THEN (- (x'')) ELSE ((vt0.c2)|(vt0.c1)) END, (('-996104333')||(((((vt0.c1)OR(vt0.c2)))AND(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)AND(vt0.c1)))AND(0Xffffffffbac0b570)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE (NOT (1310254307))  WHEN CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END THEN (- (x'')) ELSE ((vt0.c2)|(vt0.c1)) END, (('-996104333')||(((((vt0.c1)OR(vt0.c2)))AND(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c1)))AND(0Xffffffffbac0b570)) IN ())) ORDER BY CASE (NOT (1310254307))  WHEN CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END THEN (- (x'')) ELSE ((vt0.c2)|(vt0.c1)) END, (('-996104333')||(((((vt0.c1)OR(vt0.c2)))AND(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c0)<=(CAST(t0.c60 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<=(CAST(t0.c60 AS REAL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c0)<=(CAST(t0.c60 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<=(CAST(t0.c60 AS REAL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c0)<=(CAST(t0.c60 AS REAL))));
SELECT * FROM vt0 WHERE (((((IFNULL(vt0.c0, vt0.c1))AND((- (vt0.c1)))))OR(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))OR(x'')))AND(vt0.c0))))) ORDER BY ((vt0.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((vt0.c2)>=(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(vt0.c0, vt0.c1))AND((- (vt0.c1)))))OR(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))OR(x'')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((vt0.c2)>=(vt0.c1)))) DESC);
SELECT * FROM vt0 WHERE (((((IFNULL(vt0.c0, vt0.c1))AND((- (vt0.c1)))))OR(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))OR(x'')))AND(vt0.c0))))) ORDER BY ((vt0.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((vt0.c2)>=(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(vt0.c0, vt0.c1))AND((- (vt0.c1)))))OR(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))OR(x'')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((vt0.c2)>=(vt0.c1)))) DESC);
SELECT * FROM vt0 WHERE (((((IFNULL(vt0.c0, vt0.c1))AND((- (vt0.c1)))))OR(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))OR(x'')))AND(vt0.c0))))) ORDER BY ((vt0.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((vt0.c2)>=(vt0.c1)))) DESC;
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c2)GLOB(rt0.c1)) AS TEXT)) ORDER BY CASE (((vt0.c0, vt0.c1, vt0.c2))>((rt0.c2, vt0.c1, rt0.c1)))  WHEN ((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)>(rt0.c1)) ELSE '' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)GLOB(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (((vt0.c0, vt0.c1, vt0.c2))>((rt0.c2, vt0.c1, rt0.c1)))  WHEN ((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)>(rt0.c1)) ELSE '' END DESC);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c2)GLOB(rt0.c1)) AS TEXT)) ORDER BY CASE (((vt0.c0, vt0.c1, vt0.c2))>((rt0.c2, vt0.c1, rt0.c1)))  WHEN ((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)>(rt0.c1)) ELSE '' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)GLOB(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (((vt0.c0, vt0.c1, vt0.c2))>((rt0.c2, vt0.c1, rt0.c1)))  WHEN ((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)>(rt0.c1)) ELSE '' END DESC);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c2)GLOB(rt0.c1)) AS TEXT)) ORDER BY CASE (((vt0.c0, vt0.c1, vt0.c2))>((rt0.c2, vt0.c1, rt0.c1)))  WHEN ((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)>(rt0.c1)) ELSE '' END DESC;
SELECT * FROM t0, vt0, rt0 WHERE (LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN '-1754507522' WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c2 ELSE NULL END, 0.5041987221435256));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN '-1754507522' WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c2 ELSE NULL END, 0.5041987221435256)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN '-1754507522' WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c2 ELSE NULL END, 0.5041987221435256));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN '-1754507522' WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c2 ELSE NULL END, 0.5041987221435256)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN '-1754507522' WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c2 ELSE NULL END, 0.5041987221435256));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((vt0.c2) ISNULL) IN ())) ORDER BY (- (((vt0.c1) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2) ISNULL) IN ())) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (- (((vt0.c1) IS FALSE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((vt0.c2) ISNULL) IN ())) ORDER BY (- (((vt0.c1) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2) ISNULL) IN ())) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (- (((vt0.c1) IS FALSE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((vt0.c2) ISNULL) IN ())) ORDER BY (- (((vt0.c1) IS FALSE))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) ELSE NULL END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) ELSE NULL END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) ELSE NULL END);
SELECT * FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(TRIM(DISTINCT vt0.c1, vt0.c2))))AND(CAST(vt0.c2 AS REAL)))) ORDER BY LOWER(vt0.c2) ASC, CASE WHEN CAST(vt0.c2 AS NUMERIC) THEN CAST(vt0.c2 AS NUMERIC) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(TRIM(DISTINCT vt0.c1, vt0.c2))))AND(CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(vt0.c2) ASC, CASE WHEN CAST(vt0.c2 AS NUMERIC) THEN CAST(vt0.c2 AS NUMERIC) END ASC);
SELECT * FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(TRIM(DISTINCT vt0.c1, vt0.c2))))AND(CAST(vt0.c2 AS REAL)))) ORDER BY LOWER(vt0.c2) ASC, CASE WHEN CAST(vt0.c2 AS NUMERIC) THEN CAST(vt0.c2 AS NUMERIC) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(TRIM(DISTINCT vt0.c1, vt0.c2))))AND(CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(vt0.c2) ASC, CASE WHEN CAST(vt0.c2 AS NUMERIC) THEN CAST(vt0.c2 AS NUMERIC) END ASC);
SELECT * FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(TRIM(DISTINCT vt0.c1, vt0.c2))))AND(CAST(vt0.c2 AS REAL)))) ORDER BY LOWER(vt0.c2) ASC, CASE WHEN CAST(vt0.c2 AS NUMERIC) THEN CAST(vt0.c2 AS NUMERIC) END ASC;
SELECT * FROM rt0, t0, vt0 WHERE (')(i{+|k䁔');
SELECT SUM(count) FROM (SELECT ALL ((')(i{+|k䁔') IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (')(i{+|k䁔');
SELECT SUM(count) FROM (SELECT ALL ((')(i{+|k䁔') IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (')(i{+|k䁔');
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((vt0.c1)<(vt0.c1)))&(0.8488933982905454))) ORDER BY (((((('887549015') IS FALSE))AND(((vt0.c2)+(rt0.c1)))))AND(((rt0.c1)&(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<(vt0.c1)))&(0.8488933982905454))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((((('887549015') IS FALSE))AND(((vt0.c2)+(rt0.c1)))))AND(((rt0.c1)&(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((vt0.c1)<(vt0.c1)))&(0.8488933982905454))) ORDER BY (((((('887549015') IS FALSE))AND(((vt0.c2)+(rt0.c1)))))AND(((rt0.c1)&(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<(vt0.c1)))&(0.8488933982905454))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((((('887549015') IS FALSE))AND(((vt0.c2)+(rt0.c1)))))AND(((rt0.c1)&(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((vt0.c1)<(vt0.c1)))&(0.8488933982905454))) ORDER BY (((((('887549015') IS FALSE))AND(((vt0.c2)+(rt0.c1)))))AND(((rt0.c1)&(rt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c2 AS BLOB)))) ORDER BY vt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c2 AS BLOB)))) ORDER BY vt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c2 AS BLOB)))) ORDER BY vt0.c2  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c2) IS FALSE))>(((t0.c60) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS FALSE))>(((t0.c60) NOTNULL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c2) IS FALSE))>(((t0.c60) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS FALSE))>(((t0.c60) NOTNULL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c2) IS FALSE))>(((t0.c60) NOTNULL))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((((((((t0.c60)OR(t0.c60)))OR(t0.c60)))OR(x'')))OR(t0.c60)) AS INTEGER) FULL OUTER JOIN t0 ON (NOT (((rt0.c0)/(t0.c60)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((((((((t0.c60)OR(t0.c60)))OR(t0.c60)))OR(x'')))OR(t0.c60)) AS INTEGER) FULL OUTER JOIN t0 ON (NOT (((rt0.c0)/(t0.c60)))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((((((((t0.c60)OR(t0.c60)))OR(t0.c60)))OR(x'')))OR(t0.c60)) AS INTEGER) FULL OUTER JOIN t0 ON (NOT (((rt0.c0)/(t0.c60)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((((((((t0.c60)OR(t0.c60)))OR(t0.c60)))OR(x'')))OR(t0.c60)) AS INTEGER) FULL OUTER JOIN t0 ON (NOT (((rt0.c0)/(t0.c60)))));
SELECT ALL * FROM rt0, t0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC));
SELECT ALL * FROM t0, rt0 WHERE (((t0.c60)<(rt0.c1)) COLLATE RTRIM) ORDER BY ((((rt0.c0)/(rt0.c0)))LIKE((rt0.c2 IN ()))) ASC  NULLS LAST, CAST('' AS TEXT);
SELECT SUM(count) FROM (SELECT ((((t0.c60)<(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0)/(rt0.c0)))LIKE((rt0.c2 IN ()))) ASC  NULLS LAST, CAST('' AS TEXT));
SELECT ALL * FROM t0, rt0 WHERE (((t0.c60)<(rt0.c1)) COLLATE RTRIM) ORDER BY ((((rt0.c0)/(rt0.c0)))LIKE((rt0.c2 IN ()))) ASC  NULLS LAST, CAST('' AS TEXT);
SELECT SUM(count) FROM (SELECT ((((t0.c60)<(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0)/(rt0.c0)))LIKE((rt0.c2 IN ()))) ASC  NULLS LAST, CAST('' AS TEXT));
SELECT ALL * FROM t0, rt0 WHERE (((t0.c60)<(rt0.c1)) COLLATE RTRIM) ORDER BY ((((rt0.c0)/(rt0.c0)))LIKE((rt0.c2 IN ()))) ASC  NULLS LAST, CAST('' AS TEXT);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-600266634');
SELECT SUM(count) FROM (SELECT (('-600266634') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-600266634');
SELECT SUM(count) FROM (SELECT (('-600266634') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-600266634');
SELECT ALL * FROM vt0, rt0, t0 WHERE (TYPEOF(0.8342672389246717));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(0.8342672389246717)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (TYPEOF(0.8342672389246717));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(0.8342672389246717)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (TYPEOF(0.8342672389246717));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)LIKE(NULL)) COLLATE BINARY WHERE (((((vt0.c0))>=((rt0.c1))) IN ())) ORDER BY ((x'301d465a673c')IS NOT(CASE WHEN vt0.c0 THEN vt0.c1 END)), (NOT ((rt0.c2 IN (''))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))>=((rt0.c1))) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)LIKE(NULL)) COLLATE BINARY ORDER BY ((x'301d465a673c')IS NOT(CASE WHEN vt0.c0 THEN vt0.c1 END)), (NOT ((rt0.c2 IN ('')))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)LIKE(NULL)) COLLATE BINARY WHERE (((((vt0.c0))>=((rt0.c1))) IN ())) ORDER BY ((x'301d465a673c')IS NOT(CASE WHEN vt0.c0 THEN vt0.c1 END)), (NOT ((rt0.c2 IN (''))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))>=((rt0.c1))) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)LIKE(NULL)) COLLATE BINARY ORDER BY ((x'301d465a673c')IS NOT(CASE WHEN vt0.c0 THEN vt0.c1 END)), (NOT ((rt0.c2 IN ('')))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1)LIKE(NULL)) COLLATE BINARY WHERE (((((vt0.c0))>=((rt0.c1))) IN ())) ORDER BY ((x'301d465a673c')IS NOT(CASE WHEN vt0.c0 THEN vt0.c1 END)), (NOT ((rt0.c2 IN (''))));
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((+ (t0.c60)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (t0.c60))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((+ (t0.c60)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (t0.c60))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((+ (t0.c60)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((LOWER(DISTINCT t0.c60) IN ()));
SELECT SUM(count) FROM (SELECT (((LOWER(DISTINCT t0.c60) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((LOWER(DISTINCT t0.c60) IN ()));
SELECT SUM(count) FROM (SELECT (((LOWER(DISTINCT t0.c60) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((LOWER(DISTINCT t0.c60) IN ()));
SELECT * FROM rt0, t0 WHERE (((((rt0.c2)%(rt0.c0)))-(((((t0.c60)OR(x'')))OR('1630672445'))))) ORDER BY (((((rt0.c1))<((t0.c60))))*(CAST(rt0.c0 AS BLOB))) ASC  NULLS LAST, (((((((((t0.c60)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(t0.c60)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)%(rt0.c0)))-(((((t0.c60)OR(x'')))OR('1630672445'))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c1))<((t0.c60))))*(CAST(rt0.c0 AS BLOB))) ASC  NULLS LAST, (((((((((t0.c60)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(t0.c60)) IN ()) ASC);
SELECT * FROM rt0, t0 WHERE (((((rt0.c2)%(rt0.c0)))-(((((t0.c60)OR(x'')))OR('1630672445'))))) ORDER BY (((((rt0.c1))<((t0.c60))))*(CAST(rt0.c0 AS BLOB))) ASC  NULLS LAST, (((((((((t0.c60)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(t0.c60)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)%(rt0.c0)))-(((((t0.c60)OR(x'')))OR('1630672445'))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c1))<((t0.c60))))*(CAST(rt0.c0 AS BLOB))) ASC  NULLS LAST, (((((((((t0.c60)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(t0.c60)) IN ()) ASC);
SELECT * FROM rt0, t0 WHERE (((((rt0.c2)%(rt0.c0)))-(((((t0.c60)OR(x'')))OR('1630672445'))))) ORDER BY (((((rt0.c1))<((t0.c60))))*(CAST(rt0.c0 AS BLOB))) ASC  NULLS LAST, (((((((((t0.c60)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(t0.c60)) IN ()) ASC;
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((- (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((- (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((- (vt0.c0))) IS FALSE));
SELECT * FROM vt0 WHERE (((vt0.c2 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c2 AS TEXT)) AND (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c2 AS TEXT)) AND (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c2 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c2 AS TEXT)) AND (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c2 AS TEXT)) AND (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c2 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c2 AS TEXT)) AND (CAST(vt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.c0)GLOB(vt0.c2)) AS NUMERIC) CROSS JOIN vt0 ON (- (CASE vt0.c2  WHEN vt0.c0 THEN rt0.c1 END)) WHERE (x'') ORDER BY 0xffffffffabb3a1b3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.c0)GLOB(vt0.c2)) AS NUMERIC) CROSS JOIN vt0 ON (- (CASE vt0.c2  WHEN vt0.c0 THEN rt0.c1 END)) ORDER BY 0xffffffffabb3a1b3 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.c0)GLOB(vt0.c2)) AS NUMERIC) CROSS JOIN vt0 ON (- (CASE vt0.c2  WHEN vt0.c0 THEN rt0.c1 END)) WHERE (x'') ORDER BY 0xffffffffabb3a1b3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.c0)GLOB(vt0.c2)) AS NUMERIC) CROSS JOIN vt0 ON (- (CASE vt0.c2  WHEN vt0.c0 THEN rt0.c1 END)) ORDER BY 0xffffffffabb3a1b3 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)%(LOWER(rt0.c1)))) ORDER BY (~ (((rt0.c2)+(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY)%(LOWER(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2)+(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)%(LOWER(rt0.c1)))) ORDER BY (~ (((rt0.c2)+(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY)%(LOWER(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2)+(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)%(LOWER(rt0.c1)))) ORDER BY (~ (((rt0.c2)+(rt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((- (rt0.c0)))&(CAST(rt0.c2 AS REAL)))) ORDER BY ((((((((((vt0.c0)LIKE(rt0.c2)))AND(LOWER(vt0.c2))))OR(x'')))OR(TYPEOF(DISTINCT x''))))AND((((rt0.c2, rt0.c2, rt0.c1))<=((vt0.c0, vt0.c2, vt0.c1)))))  NULLS FIRST, ((((((((((rt0.c1)OR(0.5922790739486872)))OR(CAST(rt0.c2 AS REAL))))AND(((vt0.c2) BETWEEN (vt0.c2) AND (rt0.c2)))))AND(((rt0.c0)OR(vt0.c0)))))AND(rt0.c1 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0)))&(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((vt0.c0)LIKE(rt0.c2)))AND(LOWER(vt0.c2))))OR(x'')))OR(TYPEOF(DISTINCT x''))))AND((((rt0.c2, rt0.c2, rt0.c1))<=((vt0.c0, vt0.c2, vt0.c1)))))  NULLS FIRST, ((((((((((rt0.c1)OR(0.5922790739486872)))OR(CAST(rt0.c2 AS REAL))))AND(((vt0.c2) BETWEEN (vt0.c2) AND (rt0.c2)))))AND(((rt0.c0)OR(vt0.c0)))))AND(rt0.c1 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((- (rt0.c0)))&(CAST(rt0.c2 AS REAL)))) ORDER BY ((((((((((vt0.c0)LIKE(rt0.c2)))AND(LOWER(vt0.c2))))OR(x'')))OR(TYPEOF(DISTINCT x''))))AND((((rt0.c2, rt0.c2, rt0.c1))<=((vt0.c0, vt0.c2, vt0.c1)))))  NULLS FIRST, ((((((((((rt0.c1)OR(0.5922790739486872)))OR(CAST(rt0.c2 AS REAL))))AND(((vt0.c2) BETWEEN (vt0.c2) AND (rt0.c2)))))AND(((rt0.c0)OR(vt0.c0)))))AND(rt0.c1 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0)))&(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((vt0.c0)LIKE(rt0.c2)))AND(LOWER(vt0.c2))))OR(x'')))OR(TYPEOF(DISTINCT x''))))AND((((rt0.c2, rt0.c2, rt0.c1))<=((vt0.c0, vt0.c2, vt0.c1)))))  NULLS FIRST, ((((((((((rt0.c1)OR(0.5922790739486872)))OR(CAST(rt0.c2 AS REAL))))AND(((vt0.c2) BETWEEN (vt0.c2) AND (rt0.c2)))))AND(((rt0.c0)OR(vt0.c0)))))AND(rt0.c1 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((- (rt0.c0)))&(CAST(rt0.c2 AS REAL)))) ORDER BY ((((((((((vt0.c0)LIKE(rt0.c2)))AND(LOWER(vt0.c2))))OR(x'')))OR(TYPEOF(DISTINCT x''))))AND((((rt0.c2, rt0.c2, rt0.c1))<=((vt0.c0, vt0.c2, vt0.c1)))))  NULLS FIRST, ((((((((((rt0.c1)OR(0.5922790739486872)))OR(CAST(rt0.c2 AS REAL))))AND(((vt0.c2) BETWEEN (vt0.c2) AND (rt0.c2)))))AND(((rt0.c0)OR(vt0.c0)))))AND(rt0.c1 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN 0.5261578281690539 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c1 ELSE t0.c60 END IN ((((((((('')OR(vt0.c2)))AND(vt0.c2)))AND(t0.c60)))OR(vt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c60)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN 0.5261578281690539 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c1 ELSE t0.c60 END IN ((((((((('')OR(vt0.c2)))AND(vt0.c2)))AND(t0.c60)))OR(vt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c60))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN 0.5261578281690539 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c1 ELSE t0.c60 END IN ((((((((('')OR(vt0.c2)))AND(vt0.c2)))AND(t0.c60)))OR(vt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c60)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN 0.5261578281690539 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c1 ELSE t0.c60 END IN ((((((((('')OR(vt0.c2)))AND(vt0.c2)))AND(t0.c60)))OR(vt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c60))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN 0.5261578281690539 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c1 ELSE t0.c60 END IN ((((((((('')OR(vt0.c2)))AND(vt0.c2)))AND(t0.c60)))OR(vt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c60)))));
SELECT * FROM t0 WHERE (((((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c60))) IN ())) ORDER BY (((((t0.c60))==((t0.c60))))>>(((t0.c60)IS NOT(t0.c60)))) ASC  NULLS FIRST, '282066312' ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c60))) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c60))=((t0.c60))))>>(((t0.c60)IS NOT(t0.c60)))) ASC  NULLS FIRST, '282066312' ASC);
SELECT * FROM t0 WHERE (((((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c60))) IN ())) ORDER BY (((((t0.c60))==((t0.c60))))>>(((t0.c60)IS NOT(t0.c60)))) ASC  NULLS FIRST, '282066312' ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c60))) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c60))=((t0.c60))))>>(((t0.c60)IS NOT(t0.c60)))) ASC  NULLS FIRST, '282066312' ASC);
SELECT * FROM t0 WHERE (((((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c60))) IN ())) ORDER BY (((((t0.c60))==((t0.c60))))>>(((t0.c60)IS NOT(t0.c60)))) ASC  NULLS FIRST, '282066312' ASC;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((((((rt0.c1)-('ekt2ET')))AND((x'' IN ()))))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND(t0.c60)))OR(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)-('ekt2ET')))AND((x'' IN ()))))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND(t0.c60)))OR(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((((((rt0.c1)-('ekt2ET')))AND((x'' IN ()))))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND(t0.c60)))OR(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)-('ekt2ET')))AND((x'' IN ()))))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND(t0.c60)))OR(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((((((rt0.c1)-('ekt2ET')))AND((x'' IN ()))))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND(t0.c60)))OR(CAST(rt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0 IN ()))>(CAST('1365282885' AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))>(CAST('1365282885' AS REAL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0 IN ()))>(CAST('1365282885' AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))>(CAST('1365282885' AS REAL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0 IN ()))>(CAST('1365282885' AS REAL))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM t0 WHERE (((TRIM(DISTINCT t0.c60))>=(t0.c60 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t0.c60))>=(t0.c60 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((TRIM(DISTINCT t0.c60))>=(t0.c60 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t0.c60))>=(t0.c60 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((TRIM(DISTINCT t0.c60))>=(t0.c60 COLLATE NOCASE)));
SELECT ALL * FROM t0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) BETWEEN (((((((((vt0.c0)OR(t0.c60)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))) AND ((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS REAL)) BETWEEN (((((((((vt0.c0)OR(t0.c60)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))) AND ((vt0.c2 IN ())))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED);
SELECT ALL * FROM t0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) BETWEEN (((((((((vt0.c0)OR(t0.c60)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))) AND ((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS REAL)) BETWEEN (((((((((vt0.c0)OR(t0.c60)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))) AND ((vt0.c2 IN ())))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED);
SELECT ALL * FROM t0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) BETWEEN (((((((((vt0.c0)OR(t0.c60)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))) AND ((vt0.c2 IN ()))));
SELECT COUNT(*) FROM t0 WHERE ((~ (CASE t0.c60  WHEN t0.c60 THEN t0.c60 END))) ORDER BY ((t0.c60 COLLATE BINARY)>>('-1626585068'))  NULLS FIRST, ((-1637700107)!=(((t0.c60) BETWEEN (t0.c60) AND (t0.c60)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CASE t0.c60  WHEN t0.c60 THEN t0.c60 END))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c60 COLLATE BINARY)>>('-1626585068'))  NULLS FIRST, ((-1637700107)!=(((t0.c60) BETWEEN (t0.c60) AND (t0.c60)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((~ (CASE t0.c60  WHEN t0.c60 THEN t0.c60 END))) ORDER BY ((t0.c60 COLLATE BINARY)>>('-1626585068'))  NULLS FIRST, ((-1637700107)!=(((t0.c60) BETWEEN (t0.c60) AND (t0.c60)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CASE t0.c60  WHEN t0.c60 THEN t0.c60 END))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c60 COLLATE BINARY)>>('-1626585068'))  NULLS FIRST, ((-1637700107)!=(((t0.c60) BETWEEN (t0.c60) AND (t0.c60)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((~ (CASE t0.c60  WHEN t0.c60 THEN t0.c60 END))) ORDER BY ((t0.c60 COLLATE BINARY)>>('-1626585068'))  NULLS FIRST, ((-1637700107)!=(((t0.c60) BETWEEN (t0.c60) AND (t0.c60)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((TRIM(rt0.c1, vt0.c2)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c1, vt0.c2)) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((TRIM(rt0.c1, vt0.c2)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c1, vt0.c2)) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((TRIM(rt0.c1, vt0.c2)) NOT NULL));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (TRIM(DISTINCT ((t0.c60)>>(t0.c60)), (+ (1727942448)))) ORDER BY (((rt0.c2) IS TRUE) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((t0.c60)>>(t0.c60)), (+ (1727942448)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c2) IS TRUE) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (TRIM(DISTINCT ((t0.c60)>>(t0.c60)), (+ (1727942448)))) ORDER BY (((rt0.c2) IS TRUE) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((t0.c60)>>(t0.c60)), (+ (1727942448)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c2) IS TRUE) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (TRIM(DISTINCT ((t0.c60)>>(t0.c60)), (+ (1727942448)))) ORDER BY (((rt0.c2) IS TRUE) IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON (- ('1150072170' COLLATE BINARY)) FULL OUTER JOIN t0 ON (((~ (t0.c60)))>=((~ (rt0.c0)))) WHERE (((x'')<>(0.11807960049654453)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')!=(0.11807960049654453))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (- ('1150072170' COLLATE BINARY)) FULL OUTER JOIN t0 ON (((~ (t0.c60)))>=((~ (rt0.c0)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON (- ('1150072170' COLLATE BINARY)) FULL OUTER JOIN t0 ON (((~ (t0.c60)))>=((~ (rt0.c0)))) WHERE (((x'')<>(0.11807960049654453)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')!=(0.11807960049654453))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (- ('1150072170' COLLATE BINARY)) FULL OUTER JOIN t0 ON (((~ (t0.c60)))>=((~ (rt0.c0)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON (- ('1150072170' COLLATE BINARY)) FULL OUTER JOIN t0 ON (((~ (t0.c60)))>=((~ (rt0.c0)))) WHERE (((x'')<>(0.11807960049654453)));
SELECT * FROM rt0 WHERE (((x'') NOT BETWEEN (NULL) AND (-308488283)));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (NULL) AND (-308488283))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((x'') NOT BETWEEN (NULL) AND (-308488283)));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (NULL) AND (-308488283))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((x'') NOT BETWEEN (NULL) AND (-308488283)));
SELECT ALL * FROM t0, rt0 WHERE (NULL COLLATE NOCASE) ORDER BY ((((((rt0.c2)AND(t0.c60)))AND(rt0.c2)))+(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((rt0.c2)AND(t0.c60)))AND(rt0.c2)))+(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL * FROM t0, rt0 WHERE (NULL COLLATE NOCASE) ORDER BY ((((((rt0.c2)AND(t0.c60)))AND(rt0.c2)))+(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((rt0.c2)AND(t0.c60)))AND(rt0.c2)))+(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL * FROM t0, rt0 WHERE (NULL COLLATE NOCASE) ORDER BY ((((((rt0.c2)AND(t0.c60)))AND(rt0.c2)))+(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT * FROM t0, rt0 WHERE (CASE ((rt0.c0)IS(rt0.c0))  WHEN (rt0.c1 IN ()) THEN (~ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)IS(rt0.c0))  WHEN (rt0.c1 IN ()) THEN (~ (rt0.c2)) END) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CASE ((rt0.c0)IS(rt0.c0))  WHEN (rt0.c1 IN ()) THEN (~ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)IS(rt0.c0))  WHEN (rt0.c1 IN ()) THEN (~ (rt0.c2)) END) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CASE ((rt0.c0)IS(rt0.c0))  WHEN (rt0.c1 IN ()) THEN (~ (rt0.c2)) END);
SELECT COUNT(*) FROM vt0 WHERE ((((+ ('|#~^((V'))) NOT BETWEEN (((vt0.c1)>(vt0.c1))) AND (((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) ORDER BY vt0.c2 COLLATE BINARY COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ ('|#~^((V'))) NOT BETWEEN (((vt0.c1)>(vt0.c1))) AND (((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 COLLATE BINARY COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((+ ('|#~^((V'))) NOT BETWEEN (((vt0.c1)>(vt0.c1))) AND (((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) ORDER BY vt0.c2 COLLATE BINARY COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ ('|#~^((V'))) NOT BETWEEN (((vt0.c1)>(vt0.c1))) AND (((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 COLLATE BINARY COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((+ ('|#~^((V'))) NOT BETWEEN (((vt0.c1)>(vt0.c1))) AND (((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) ORDER BY vt0.c2 COLLATE BINARY COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (CASE 0.7073324670950893  WHEN 0.6718977637260501 THEN COALESCE(DISTINCT 0.7874350926704913, '0.1146248978846327') WHEN x'' THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN '1957310703' THEN vt0.c1 WHEN t0.c60 THEN vt0.c2 END WHEN (- (vt0.c2)) THEN (t0.c60 IN (t0.c60, t0.c60)) ELSE vt0.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE 0.7073324670950893  WHEN 0.6718977637260501 THEN COALESCE(DISTINCT 0.7874350926704913, '0.1146248978846327') WHEN x'' THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN '1957310703' THEN vt0.c1 WHEN t0.c60 THEN vt0.c2 END WHEN (- (vt0.c2)) THEN (t0.c60 IN (t0.c60, t0.c60)) ELSE vt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE 0.7073324670950893  WHEN 0.6718977637260501 THEN COALESCE(DISTINCT 0.7874350926704913, '0.1146248978846327') WHEN x'' THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN '1957310703' THEN vt0.c1 WHEN t0.c60 THEN vt0.c2 END WHEN (- (vt0.c2)) THEN (t0.c60 IN (t0.c60, t0.c60)) ELSE vt0.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE 0.7073324670950893  WHEN 0.6718977637260501 THEN COALESCE(DISTINCT 0.7874350926704913, '0.1146248978846327') WHEN x'' THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN '1957310703' THEN vt0.c1 WHEN t0.c60 THEN vt0.c2 END WHEN (- (vt0.c2)) THEN (t0.c60 IN (t0.c60, t0.c60)) ELSE vt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE 0.7073324670950893  WHEN 0.6718977637260501 THEN COALESCE(DISTINCT 0.7874350926704913, '0.1146248978846327') WHEN x'' THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN '1957310703' THEN vt0.c1 WHEN t0.c60 THEN vt0.c2 END WHEN (- (vt0.c2)) THEN (t0.c60 IN (t0.c60, t0.c60)) ELSE vt0.c1 COLLATE RTRIM END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON (CAST(rt0.c2 AS NUMERIC) IN ()) CROSS JOIN vt0 ON TYPEOF(0.5296531383136397) WHERE (CASE ((vt0.c1)-(t0.c60))  WHEN -332871234 THEN ((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)-(t0.c60))  WHEN -332871234 THEN ((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (CAST(rt0.c2 AS NUMERIC) IN ()) CROSS JOIN vt0 ON TYPEOF(0.5296531383136397));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON (CAST(rt0.c2 AS NUMERIC) IN ()) CROSS JOIN vt0 ON TYPEOF(0.5296531383136397) WHERE (CASE ((vt0.c1)-(t0.c60))  WHEN -332871234 THEN ((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)-(t0.c60))  WHEN -332871234 THEN ((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (CAST(rt0.c2 AS NUMERIC) IN ()) CROSS JOIN vt0 ON TYPEOF(0.5296531383136397));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON (CAST(rt0.c2 AS NUMERIC) IN ()) CROSS JOIN vt0 ON TYPEOF(0.5296531383136397) WHERE (CASE ((vt0.c1)-(t0.c60))  WHEN -332871234 THEN ((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY) ORDER BY CASE ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))  WHEN ((rt0.c0)AND(t0.c60)) THEN CAST(rt0.c0 AS BLOB) END DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))  WHEN ((rt0.c0)AND(t0.c60)) THEN CAST(rt0.c0 AS BLOB) END DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY) ORDER BY CASE ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))  WHEN ((rt0.c0)AND(t0.c60)) THEN CAST(rt0.c0 AS BLOB) END DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))  WHEN ((rt0.c0)AND(t0.c60)) THEN CAST(rt0.c0 AS BLOB) END DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY) ORDER BY CASE ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))  WHEN ((rt0.c0)AND(t0.c60)) THEN CAST(rt0.c0 AS BLOB) END DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) ISNULL))AND((- (rt0.c1)))))AND(((rt0.c0) ISNULL)))) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL), ABS(DISTINCT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) ISNULL))AND((- (rt0.c1)))))AND(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL), ABS(DISTINCT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) ISNULL))AND((- (rt0.c1)))))AND(((rt0.c0) ISNULL)))) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL), ABS(DISTINCT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) ISNULL))AND((- (rt0.c1)))))AND(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL), ABS(DISTINCT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) ISNULL))AND((- (rt0.c1)))))AND(((rt0.c0) ISNULL)))) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL), ABS(DISTINCT NULL)  NULLS LAST;
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) AS TEXT)) ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0) IS FALSE) ELSE CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN '-1749568467' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END END DESC, (((NULL IN ()))/(CASE '0'  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)), (((0.24147625470467426, rt0.c1, rt0.c2)) BETWEEN ((HEX(rt0.c1), ((rt0.c0)>>(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((rt0.c2) NOT NULL), (- (rt0.c1)), (~ (rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0) IS FALSE) ELSE CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN '-1749568467' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END END DESC, (((NULL IN ()))/(CASE '0'  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)), (((0.24147625470467426, rt0.c1, rt0.c2)) BETWEEN ((HEX(rt0.c1), ((rt0.c0)>>(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((rt0.c2) NOT NULL), (- (rt0.c1)), (~ (rt0.c1))))) DESC);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) AS TEXT)) ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0) IS FALSE) ELSE CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN '-1749568467' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END END DESC, (((NULL IN ()))/(CASE '0'  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)), (((0.24147625470467426, rt0.c1, rt0.c2)) BETWEEN ((HEX(rt0.c1), ((rt0.c0)>>(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((rt0.c2) NOT NULL), (- (rt0.c1)), (~ (rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0) IS FALSE) ELSE CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN '-1749568467' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END END DESC, (((NULL IN ()))/(CASE '0'  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)), (((0.24147625470467426, rt0.c1, rt0.c2)) BETWEEN ((HEX(rt0.c1), ((rt0.c0)>>(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((rt0.c2) NOT NULL), (- (rt0.c1)), (~ (rt0.c1))))) DESC);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) AS TEXT)) ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0) IS FALSE) ELSE CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN '-1749568467' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END END DESC, (((NULL IN ()))/(CASE '0'  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)), (((0.24147625470467426, rt0.c1, rt0.c2)) BETWEEN ((HEX(rt0.c1), ((rt0.c0)>>(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((rt0.c2) NOT NULL), (- (rt0.c1)), (~ (rt0.c1))))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((~ (UNLIKELY(rt0.c2)))) ORDER BY ((HEX(rt0.c0)) NOT BETWEEN ((((rt0.c0)) BETWEEN ((x'efa26830')) AND ((rt0.c0)))) AND (((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (UNLIKELY(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((HEX(rt0.c0)) NOT BETWEEN ((((rt0.c0)) BETWEEN ((x'efa26830')) AND ((rt0.c0)))) AND (((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (UNLIKELY(rt0.c2)))) ORDER BY ((HEX(rt0.c0)) NOT BETWEEN ((((rt0.c0)) BETWEEN ((x'efa26830')) AND ((rt0.c0)))) AND (((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (UNLIKELY(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((HEX(rt0.c0)) NOT BETWEEN ((((rt0.c0)) BETWEEN ((x'efa26830')) AND ((rt0.c0)))) AND (((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (UNLIKELY(rt0.c2)))) ORDER BY ((HEX(rt0.c0)) NOT BETWEEN ((((rt0.c0)) BETWEEN ((x'efa26830')) AND ((rt0.c0)))) AND (((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)) ORDER BY vt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY vt0.c2 ASC);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)) ORDER BY vt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY vt0.c2 ASC);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)) ORDER BY vt0.c2 ASC;
SELECT * FROM t0 WHERE ((((t0.c60)) NOT BETWEEN ((((t0.c60) IS TRUE))) AND ((((t0.c60) ISNULL))))) ORDER BY (('-1749568467' COLLATE RTRIM) ISNULL), (~ ('')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60)) NOT BETWEEN ((((t0.c60) IS TRUE))) AND ((((t0.c60) ISNULL))))) IS TRUE)  as count FROM t0 ORDER BY (('-1749568467' COLLATE RTRIM) ISNULL), (~ ('')) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c60)) NOT BETWEEN ((((t0.c60) IS TRUE))) AND ((((t0.c60) ISNULL))))) ORDER BY (('-1749568467' COLLATE RTRIM) ISNULL), (~ ('')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60)) NOT BETWEEN ((((t0.c60) IS TRUE))) AND ((((t0.c60) ISNULL))))) IS TRUE)  as count FROM t0 ORDER BY (('-1749568467' COLLATE RTRIM) ISNULL), (~ ('')) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c60)) NOT BETWEEN ((((t0.c60) IS TRUE))) AND ((((t0.c60) ISNULL))))) ORDER BY (('-1749568467' COLLATE RTRIM) ISNULL), (~ ('')) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (- (rt0.c2)) THEN rt0.c1 COLLATE NOCASE ELSE ((((rt0.c0)OR('282066312')))OR(rt0.c1)) END) ORDER BY (~ (((rt0.c2)IS NOT(vt0.c1)))) DESC  NULLS FIRST, '''' DESC, CAST(CASE vt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c2 END AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt0.c2)) THEN rt0.c1 COLLATE NOCASE ELSE ((((rt0.c0)OR('282066312')))OR(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (((rt0.c2)IS NOT(vt0.c1)))) DESC  NULLS FIRST, '''' DESC, CAST(CASE vt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c2 END AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (- (rt0.c2)) THEN rt0.c1 COLLATE NOCASE ELSE ((((rt0.c0)OR('282066312')))OR(rt0.c1)) END) ORDER BY (~ (((rt0.c2)IS NOT(vt0.c1)))) DESC  NULLS FIRST, '''' DESC, CAST(CASE vt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c2 END AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt0.c2)) THEN rt0.c1 COLLATE NOCASE ELSE ((((rt0.c0)OR('282066312')))OR(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (((rt0.c2)IS NOT(vt0.c1)))) DESC  NULLS FIRST, '''' DESC, CAST(CASE vt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c2 END AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (- (rt0.c2)) THEN rt0.c1 COLLATE NOCASE ELSE ((((rt0.c0)OR('282066312')))OR(rt0.c1)) END) ORDER BY (~ (((rt0.c2)IS NOT(vt0.c1)))) DESC  NULLS FIRST, '''' DESC, CAST(CASE vt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c2 END AS INTEGER) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2) ISNULL)  WHEN NULL THEN LIKE(rt0.c0, rt0.c0, '0') WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN 0Xffffffffc0dc9be0 THEN rt0.c1 ELSE 0Xffffffffed9cd7a5 END THEN ((rt0.c2)IS NOT(rt0.c1)) WHEN (- (rt0.c2)) THEN ((rt0.c1) NOT NULL) WHEN COALESCE(DISTINCT 0.25305015725045543, rt0.c2) THEN ((rt0.c1)|(rt0.c2)) WHEN NULL THEN (- (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) ISNULL)  WHEN NULL THEN LIKE(rt0.c0, rt0.c0, '0') WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN 0Xffffffffc0dc9be0 THEN rt0.c1 ELSE 0xffffffffed9cd7a5 END THEN ((rt0.c2)IS NOT(rt0.c1)) WHEN (- (rt0.c2)) THEN ((rt0.c1) NOT NULL) WHEN COALESCE(DISTINCT 0.25305015725045543, rt0.c2) THEN ((rt0.c1)|(rt0.c2)) WHEN NULL THEN (- (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2) ISNULL)  WHEN NULL THEN LIKE(rt0.c0, rt0.c0, '0') WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN 0Xffffffffc0dc9be0 THEN rt0.c1 ELSE 0Xffffffffed9cd7a5 END THEN ((rt0.c2)IS NOT(rt0.c1)) WHEN (- (rt0.c2)) THEN ((rt0.c1) NOT NULL) WHEN COALESCE(DISTINCT 0.25305015725045543, rt0.c2) THEN ((rt0.c1)|(rt0.c2)) WHEN NULL THEN (- (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) ISNULL)  WHEN NULL THEN LIKE(rt0.c0, rt0.c0, '0') WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN 0Xffffffffc0dc9be0 THEN rt0.c1 ELSE 0xffffffffed9cd7a5 END THEN ((rt0.c2)IS NOT(rt0.c1)) WHEN (- (rt0.c2)) THEN ((rt0.c1) NOT NULL) WHEN COALESCE(DISTINCT 0.25305015725045543, rt0.c2) THEN ((rt0.c1)|(rt0.c2)) WHEN NULL THEN (- (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2) ISNULL)  WHEN NULL THEN LIKE(rt0.c0, rt0.c0, '0') WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN 0Xffffffffc0dc9be0 THEN rt0.c1 ELSE 0Xffffffffed9cd7a5 END THEN ((rt0.c2)IS NOT(rt0.c1)) WHEN (- (rt0.c2)) THEN ((rt0.c1) NOT NULL) WHEN COALESCE(DISTINCT 0.25305015725045543, rt0.c2) THEN ((rt0.c1)|(rt0.c2)) WHEN NULL THEN (- (rt0.c0)) END);
SELECT * FROM rt0 WHERE (((((0.007542276602863218)<<(rt0.c1))) NOT BETWEEN (((rt0.c0)OR(rt0.c0))) AND (((rt0.c1)OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((0.007542276602863218)<<(rt0.c1))) NOT BETWEEN (((rt0.c0)OR(rt0.c0))) AND (((rt0.c1)OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((0.007542276602863218)<<(rt0.c1))) NOT BETWEEN (((rt0.c0)OR(rt0.c0))) AND (((rt0.c1)OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((0.007542276602863218)<<(rt0.c1))) NOT BETWEEN (((rt0.c0)OR(rt0.c0))) AND (((rt0.c1)OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((0.007542276602863218)<<(rt0.c1))) NOT BETWEEN (((rt0.c0)OR(rt0.c0))) AND (((rt0.c1)OR(rt0.c2)))));
SELECT ALL * FROM t0 WHERE ((((t0.c60)) NOT BETWEEN ((CASE t0.c60  WHEN x'a86c' THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)) AND ((CASE t0.c60  WHEN t0.c60 THEN t0.c60 END)))) ORDER BY ((((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60))) NOT BETWEEN (t0.c60 COLLATE BINARY) AND (CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60)) NOT BETWEEN ((CASE t0.c60  WHEN x'a86c' THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)) AND ((CASE t0.c60  WHEN t0.c60 THEN t0.c60 END)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60))) NOT BETWEEN (t0.c60 COLLATE BINARY) AND (CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((t0.c60)) NOT BETWEEN ((CASE t0.c60  WHEN x'a86c' THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)) AND ((CASE t0.c60  WHEN t0.c60 THEN t0.c60 END)))) ORDER BY ((((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60))) NOT BETWEEN (t0.c60 COLLATE BINARY) AND (CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60)) NOT BETWEEN ((CASE t0.c60  WHEN x'a86c' THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)) AND ((CASE t0.c60  WHEN t0.c60 THEN t0.c60 END)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60))) NOT BETWEEN (t0.c60 COLLATE BINARY) AND (CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((t0.c60)) NOT BETWEEN ((CASE t0.c60  WHEN x'a86c' THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)) AND ((CASE t0.c60  WHEN t0.c60 THEN t0.c60 END)))) ORDER BY ((((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60))) NOT BETWEEN (t0.c60 COLLATE BINARY) AND (CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ('+覒') ORDER BY CAST(((NULL)LIKE(vt0.c2)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('+覒') IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(((NULL)LIKE(vt0.c2)) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ('+覒') ORDER BY CAST(((NULL)LIKE(vt0.c2)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('+覒') IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(((NULL)LIKE(vt0.c2)) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ('+覒') ORDER BY CAST(((NULL)LIKE(vt0.c2)) AS TEXT) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))OR(-1637700107)))AND(vt0.c0)) AS BLOB)) ORDER BY CASE vt0.c2  WHEN vt0.c0 THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END END ASC, (((vt0.c0 IN (NULL, NULL))) ISNULL)  NULLS FIRST, (((+ (vt0.c1)))/(((vt0.c2)AND(1630672445))));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))OR(-1637700107)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c2  WHEN vt0.c0 THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END END ASC, (((vt0.c0 IN (NULL, NULL))) ISNULL)  NULLS FIRST, (((+ (vt0.c1)))/(((vt0.c2)AND(1630672445)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))OR(-1637700107)))AND(vt0.c0)) AS BLOB)) ORDER BY CASE vt0.c2  WHEN vt0.c0 THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END END ASC, (((vt0.c0 IN (NULL, NULL))) ISNULL)  NULLS FIRST, (((+ (vt0.c1)))/(((vt0.c2)AND(1630672445))));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))OR(-1637700107)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c2  WHEN vt0.c0 THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END END ASC, (((vt0.c0 IN (NULL, NULL))) ISNULL)  NULLS FIRST, (((+ (vt0.c1)))/(((vt0.c2)AND(1630672445)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))OR(-1637700107)))AND(vt0.c0)) AS BLOB)) ORDER BY CASE vt0.c2  WHEN vt0.c0 THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END END ASC, (((vt0.c0 IN (NULL, NULL))) ISNULL)  NULLS FIRST, (((+ (vt0.c1)))/(((vt0.c2)AND(1630672445))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c60)AND((~ (t0.c60))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c60)AND((~ (t0.c60))))) IS TRUE)  as count FROM t0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c60)AND((~ (t0.c60))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c60)AND((~ (t0.c60))))) IS TRUE)  as count FROM t0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c60)AND((~ (t0.c60))))) ORDER BY NULL DESC;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((NULL) BETWEEN ((((t0.c60))>=((vt0.c0)))) AND ((('O0eP]') NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c1)OR(rt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN ((((t0.c60))>=((vt0.c0)))) AND ((('O0eP]') NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c1)OR(rt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((NULL) BETWEEN ((((t0.c60))>=((vt0.c0)))) AND ((('O0eP]') NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c1)OR(rt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN ((((t0.c60))>=((vt0.c0)))) AND ((('O0eP]') NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c1)OR(rt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((NULL) BETWEEN ((((t0.c60))>=((vt0.c0)))) AND ((('O0eP]') NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c1)OR(rt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))  NULLS LAST;
SELECT ALL * FROM t0 NOT INDEXED, rt0, vt0 WHERE (((CAST(vt0.c1 AS REAL))&(UNLIKELY(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL))&(UNLIKELY(DISTINCT rt0.c1)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0 NOT INDEXED, rt0, vt0 WHERE (((CAST(vt0.c1 AS REAL))&(UNLIKELY(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL))&(UNLIKELY(DISTINCT rt0.c1)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0 NOT INDEXED, rt0, vt0 WHERE (((CAST(vt0.c1 AS REAL))&(UNLIKELY(DISTINCT rt0.c1))));
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN (((vt0.c2 IN (rt0.c1)))) AND ((((((vt0.c2)OR(rt0.c2)))OR(vt0.c1))))) WHERE ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c60)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c60)) IN ())) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN (((vt0.c2 IN (rt0.c1)))) AND ((((((vt0.c2)OR(rt0.c2)))OR(vt0.c1))))));
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN (((vt0.c2 IN (rt0.c1)))) AND ((((((vt0.c2)OR(rt0.c2)))OR(vt0.c1))))) WHERE ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c60)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c60)) IN ())) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN (((vt0.c2 IN (rt0.c1)))) AND ((((((vt0.c2)OR(rt0.c2)))OR(vt0.c1))))));
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN (((vt0.c2 IN (rt0.c1)))) AND ((((((vt0.c2)OR(rt0.c2)))OR(vt0.c1))))) WHERE ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c60)) IN ()));
SELECT ALL * FROM t0, rt0 WHERE (((rt0.c0)<(rt0.c0)) COLLATE BINARY) ORDER BY ((((((((CAST(rt0.c1 AS NUMERIC))AND(0.2694046894338029)))AND(((rt0.c0)>>(rt0.c1)))))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c60))))))AND('-1161775760' COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((CAST(rt0.c1 AS NUMERIC))AND(0.2694046894338029)))AND(((rt0.c0)>>(rt0.c1)))))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c60))))))AND('-1161775760' COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (((rt0.c0)<(rt0.c0)) COLLATE BINARY) ORDER BY ((((((((CAST(rt0.c1 AS NUMERIC))AND(0.2694046894338029)))AND(((rt0.c0)>>(rt0.c1)))))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c60))))))AND('-1161775760' COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((CAST(rt0.c1 AS NUMERIC))AND(0.2694046894338029)))AND(((rt0.c0)>>(rt0.c1)))))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c60))))))AND('-1161775760' COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (((rt0.c0)<(rt0.c0)) COLLATE BINARY) ORDER BY ((((((((CAST(rt0.c1 AS NUMERIC))AND(0.2694046894338029)))AND(((rt0.c0)>>(rt0.c1)))))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c60))))))AND('-1161775760' COLLATE NOCASE)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((UNLIKELY(rt0.c0) IN (((rt0.c1)!=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(rt0.c0) IN (((rt0.c1)!=(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((UNLIKELY(rt0.c0) IN (((rt0.c1)!=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(rt0.c0) IN (((rt0.c1)!=(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((UNLIKELY(rt0.c0) IN (((rt0.c1)!=(rt0.c0)))));
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((vt0.c2) ISNULL)) BETWEEN (rt0.c1 COLLATE BINARY) AND (vt0.c1 COLLATE RTRIM))) ORDER BY IFNULL(((rt0.c1) IS TRUE), CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) ISNULL)) BETWEEN (rt0.c1 COLLATE BINARY) AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY IFNULL(((rt0.c1) IS TRUE), CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END) ASC);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((vt0.c2) ISNULL)) BETWEEN (rt0.c1 COLLATE BINARY) AND (vt0.c1 COLLATE RTRIM))) ORDER BY IFNULL(((rt0.c1) IS TRUE), CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) ISNULL)) BETWEEN (rt0.c1 COLLATE BINARY) AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY IFNULL(((rt0.c1) IS TRUE), CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END) ASC);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((vt0.c2) ISNULL)) BETWEEN (rt0.c1 COLLATE BINARY) AND (vt0.c1 COLLATE RTRIM))) ORDER BY IFNULL(((rt0.c1) IS TRUE), CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END) ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2 IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM t0 WHERE (0.07735906100512335) ORDER BY (+ ((((t0.c60, t0.c60, t0.c60))==((t0.c60, t0.c60, t0.c60)))))  NULLS LAST, CASE LIKELY(DISTINCT t0.c60)  WHEN DATE(0.26449404474114957, t0.c60, t0.c60, t0.c60, t0.c60, t0.c60, t0.c60, x'', t0.c60) THEN ((((((((t0.c60)OR(t0.c60)))AND(t0.c60)))OR(t0.c60)))AND(t0.c60)) ELSE ((t0.c60)<=(t0.c60)) END ASC  NULLS LAST, ((((((t0.c60)OR(t0.c60)))AND(t0.c60)))AND(CHAR(t0.c60))) DESC;
SELECT SUM(count) FROM (SELECT ((0.07735906100512335) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (+ ((((t0.c60, t0.c60, t0.c60))==((t0.c60, t0.c60, t0.c60)))))  NULLS LAST, CASE LIKELY(DISTINCT t0.c60)  WHEN DATE(0.26449404474114957, t0.c60, t0.c60, t0.c60, t0.c60, t0.c60, t0.c60, x'', t0.c60) THEN ((((((((t0.c60)OR(t0.c60)))AND(t0.c60)))OR(t0.c60)))AND(t0.c60)) ELSE ((t0.c60)<=(t0.c60)) END ASC  NULLS LAST, ((((((t0.c60)OR(t0.c60)))AND(t0.c60)))AND(CHAR(t0.c60))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (0.07735906100512335) ORDER BY (+ ((((t0.c60, t0.c60, t0.c60))==((t0.c60, t0.c60, t0.c60)))))  NULLS LAST, CASE LIKELY(DISTINCT t0.c60)  WHEN DATE(0.26449404474114957, t0.c60, t0.c60, t0.c60, t0.c60, t0.c60, t0.c60, x'', t0.c60) THEN ((((((((t0.c60)OR(t0.c60)))AND(t0.c60)))OR(t0.c60)))AND(t0.c60)) ELSE ((t0.c60)<=(t0.c60)) END ASC  NULLS LAST, ((((((t0.c60)OR(t0.c60)))AND(t0.c60)))AND(CHAR(t0.c60))) DESC;
SELECT SUM(count) FROM (SELECT ((0.07735906100512335) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (+ ((((t0.c60, t0.c60, t0.c60))==((t0.c60, t0.c60, t0.c60)))))  NULLS LAST, CASE LIKELY(DISTINCT t0.c60)  WHEN DATE(0.26449404474114957, t0.c60, t0.c60, t0.c60, t0.c60, t0.c60, t0.c60, x'', t0.c60) THEN ((((((((t0.c60)OR(t0.c60)))AND(t0.c60)))OR(t0.c60)))AND(t0.c60)) ELSE ((t0.c60)<=(t0.c60)) END ASC  NULLS LAST, ((((((t0.c60)OR(t0.c60)))AND(t0.c60)))AND(CHAR(t0.c60))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (0.07735906100512335) ORDER BY (+ ((((t0.c60, t0.c60, t0.c60))==((t0.c60, t0.c60, t0.c60)))))  NULLS LAST, CASE LIKELY(DISTINCT t0.c60)  WHEN DATE(0.26449404474114957, t0.c60, t0.c60, t0.c60, t0.c60, t0.c60, t0.c60, x'', t0.c60) THEN ((((((((t0.c60)OR(t0.c60)))AND(t0.c60)))OR(t0.c60)))AND(t0.c60)) ELSE ((t0.c60)<=(t0.c60)) END ASC  NULLS LAST, ((((((t0.c60)OR(t0.c60)))AND(t0.c60)))AND(CHAR(t0.c60))) DESC;
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON rt0.c2 WHERE (((((((rt0.c1)*(rt0.c1)))AND(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)))))OR(((((x'b272c3bd')OR(rt0.c1)))AND(rt0.c2))))) ORDER BY (('0') BETWEEN (((((t0.c60)OR(rt0.c0)))OR(rt0.c0))) AND (rt0.c0 COLLATE NOCASE)), rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)*(rt0.c1)))AND(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)))))OR(((((x'b272c3bd')OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON rt0.c2 ORDER BY (('0') BETWEEN (((((t0.c60)OR(rt0.c0)))OR(rt0.c0))) AND (rt0.c0 COLLATE NOCASE)), rt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON rt0.c2 WHERE (((((((rt0.c1)*(rt0.c1)))AND(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)))))OR(((((x'b272c3bd')OR(rt0.c1)))AND(rt0.c2))))) ORDER BY (('0') BETWEEN (((((t0.c60)OR(rt0.c0)))OR(rt0.c0))) AND (rt0.c0 COLLATE NOCASE)), rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)*(rt0.c1)))AND(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)))))OR(((((x'b272c3bd')OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON rt0.c2 ORDER BY (('0') BETWEEN (((((t0.c60)OR(rt0.c0)))OR(rt0.c0))) AND (rt0.c0 COLLATE NOCASE)), rt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON rt0.c2 WHERE (((((((rt0.c1)*(rt0.c1)))AND(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)))))OR(((((x'b272c3bd')OR(rt0.c1)))AND(rt0.c2))))) ORDER BY (('0') BETWEEN (((((t0.c60)OR(rt0.c0)))OR(rt0.c0))) AND (rt0.c0 COLLATE NOCASE)), rt0.c1 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(LOWER(DISTINCT t0.c60) AS BLOB) WHERE (((((vt0.c1) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL)) IS FALSE)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST(LOWER(DISTINCT t0.c60) AS BLOB));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(LOWER(DISTINCT t0.c60) AS BLOB) WHERE (((((vt0.c1) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL)) IS FALSE)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST(LOWER(DISTINCT t0.c60) AS BLOB));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(LOWER(DISTINCT t0.c60) AS BLOB) WHERE (((((vt0.c1) ISNULL)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((t0.c60)LIKE((((vt0.c2))>((t0.c60)))))) ORDER BY (vt0.c0 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c60)LIKE((((vt0.c2))>((t0.c60)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (vt0.c0 IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((t0.c60)LIKE((((vt0.c2))>((t0.c60)))))) ORDER BY (vt0.c0 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c60)LIKE((((vt0.c2))>((t0.c60)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (vt0.c0 IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((t0.c60)LIKE((((vt0.c2))>((t0.c60)))))) ORDER BY (vt0.c0 IN ())  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON CAST(((vt0.c0) NOTNULL) AS NUMERIC) WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(((vt0.c0) NOTNULL) AS NUMERIC));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON CAST(((vt0.c0) NOTNULL) AS NUMERIC) WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(((vt0.c0) NOTNULL) AS NUMERIC));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON CAST(((vt0.c0) NOTNULL) AS NUMERIC) WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (json(((((vt0.c2)OR(-1.748240067E9)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json(((((vt0.c2)OR(-1.748240067E9)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (json(((((vt0.c2)OR(-1.748240067E9)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json(((((vt0.c2)OR(-1.748240067E9)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (json(((((vt0.c2)OR(-1.748240067E9)))OR(vt0.c0))));
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN vt0 WHERE ((((((((vt0.c2))!=((rt0.c0))))AND((+ (rt0.c1)))))OR(NULL))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c2))<>((rt0.c0))))AND((+ (rt0.c1)))))OR(NULL))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN vt0 WHERE ((((((((vt0.c2))!=((rt0.c0))))AND((+ (rt0.c1)))))OR(NULL))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c2))<>((rt0.c0))))AND((+ (rt0.c1)))))OR(NULL))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN vt0 WHERE ((((((((vt0.c2))!=((rt0.c0))))AND((+ (rt0.c1)))))OR(NULL))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (ROUND(((vt0.c1) IS TRUE), ((vt0.c1)AND(vt0.c2)))) ORDER BY ((((((((((((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)OR(((vt0.c0)<>(vt0.c0)))))OR((vt0.c0 IN ()))))OR(NULL)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR((~ (x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ROUND(((vt0.c1) IS TRUE), ((vt0.c1)AND(vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)OR(((vt0.c0)<>(vt0.c0)))))OR((vt0.c0 IN ()))))OR(NULL)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR((~ (x''))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (ROUND(((vt0.c1) IS TRUE), ((vt0.c1)AND(vt0.c2)))) ORDER BY ((((((((((((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)OR(((vt0.c0)<>(vt0.c0)))))OR((vt0.c0 IN ()))))OR(NULL)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR((~ (x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ROUND(((vt0.c1) IS TRUE), ((vt0.c1)AND(vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)OR(((vt0.c0)<>(vt0.c0)))))OR((vt0.c0 IN ()))))OR(NULL)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR((~ (x''))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (ROUND(((vt0.c1) IS TRUE), ((vt0.c1)AND(vt0.c2)))) ORDER BY ((((((((((((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)OR(((vt0.c0)<>(vt0.c0)))))OR((vt0.c0 IN ()))))OR(NULL)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR((~ (x''))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c2) ORDER BY ((~ (vt0.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY ((~ (vt0.c2)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c2) ORDER BY ((~ (vt0.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY ((~ (vt0.c2)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c2) ORDER BY ((~ (vt0.c2)) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY MAX(t0.c60, t0.c60) COLLATE NOCASE  NULLS FIRST, HEX(t0.c60), '-1749568467' ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0 ORDER BY MAX(t0.c60, t0.c60) COLLATE NOCASE  NULLS FIRST, HEX(t0.c60), '-1749568467' ASC);
SELECT ALL * FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY MAX(t0.c60, t0.c60) COLLATE NOCASE  NULLS FIRST, HEX(t0.c60), '-1749568467' ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0 ORDER BY MAX(t0.c60, t0.c60) COLLATE NOCASE  NULLS FIRST, HEX(t0.c60), '-1749568467' ASC);
SELECT ALL * FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY MAX(t0.c60, t0.c60) COLLATE NOCASE  NULLS FIRST, HEX(t0.c60), '-1749568467' ASC;
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON vt0.c2 WHERE (((((NULL) IS FALSE)) IS FALSE)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c60))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((NULL) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON vt0.c2 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c60))) ISNULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON vt0.c2 WHERE (((((NULL) IS FALSE)) IS FALSE)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c60))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((NULL) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON vt0.c2 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c60))) ISNULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON vt0.c2 WHERE (((((NULL) IS FALSE)) IS FALSE)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c60))) ISNULL);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((STRFTIME(t0.c60, vt0.c2, vt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT (((STRFTIME(t0.c60, vt0.c2, vt0.c2) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((STRFTIME(t0.c60, vt0.c2, vt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT (((STRFTIME(t0.c60, vt0.c2, vt0.c2) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((STRFTIME(t0.c60, vt0.c2, vt0.c2) IN ()));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2) ISNULL))OR(UNLIKELY(rt0.c2))))AND(CASE WHEN t0.c60 THEN rt0.c0 WHEN rt0.c1 THEN t0.c60 WHEN t0.c60 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t0.c60 ELSE rt0.c1 END)) WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) IS FALSE)) ORDER BY HEX(DISTINCT (((rt0.c1, rt0.c2, t0.c60))==((rt0.c2, rt0.c0, t0.c60))))  NULLS LAST, (((NULL)) BETWEEN ((NULL)) AND ((CASE WHEN '' THEN rt0.c1 WHEN 0.5007067196439908 THEN t0.c60 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c60 THEN rt0.c0 END)))  NULLS FIRST, (((((rt0.c2))<((rt0.c2)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2) ISNULL))OR(UNLIKELY(rt0.c2))))AND(CASE WHEN t0.c60 THEN rt0.c0 WHEN rt0.c1 THEN t0.c60 WHEN t0.c60 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t0.c60 ELSE rt0.c1 END)) ORDER BY HEX(DISTINCT (((rt0.c1, rt0.c2, t0.c60))==((rt0.c2, rt0.c0, t0.c60))))  NULLS LAST, (((NULL)) BETWEEN ((NULL)) AND ((CASE WHEN '' THEN rt0.c1 WHEN 0.5007067196439908 THEN t0.c60 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c60 THEN rt0.c0 END)))  NULLS FIRST, (((((rt0.c2))<((rt0.c2)))) IS FALSE));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2) ISNULL))OR(UNLIKELY(rt0.c2))))AND(CASE WHEN t0.c60 THEN rt0.c0 WHEN rt0.c1 THEN t0.c60 WHEN t0.c60 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t0.c60 ELSE rt0.c1 END)) WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) IS FALSE)) ORDER BY HEX(DISTINCT (((rt0.c1, rt0.c2, t0.c60))==((rt0.c2, rt0.c0, t0.c60))))  NULLS LAST, (((NULL)) BETWEEN ((NULL)) AND ((CASE WHEN '' THEN rt0.c1 WHEN 0.5007067196439908 THEN t0.c60 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c60 THEN rt0.c0 END)))  NULLS FIRST, (((((rt0.c2))<((rt0.c2)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2) ISNULL))OR(UNLIKELY(rt0.c2))))AND(CASE WHEN t0.c60 THEN rt0.c0 WHEN rt0.c1 THEN t0.c60 WHEN t0.c60 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t0.c60 ELSE rt0.c1 END)) ORDER BY HEX(DISTINCT (((rt0.c1, rt0.c2, t0.c60))==((rt0.c2, rt0.c0, t0.c60))))  NULLS LAST, (((NULL)) BETWEEN ((NULL)) AND ((CASE WHEN '' THEN rt0.c1 WHEN 0.5007067196439908 THEN t0.c60 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c60 THEN rt0.c0 END)))  NULLS FIRST, (((((rt0.c2))<((rt0.c2)))) IS FALSE));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2) ISNULL))OR(UNLIKELY(rt0.c2))))AND(CASE WHEN t0.c60 THEN rt0.c0 WHEN rt0.c1 THEN t0.c60 WHEN t0.c60 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t0.c60 ELSE rt0.c1 END)) WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) IS FALSE)) ORDER BY HEX(DISTINCT (((rt0.c1, rt0.c2, t0.c60))==((rt0.c2, rt0.c0, t0.c60))))  NULLS LAST, (((NULL)) BETWEEN ((NULL)) AND ((CASE WHEN '' THEN rt0.c1 WHEN 0.5007067196439908 THEN t0.c60 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c60 THEN rt0.c0 END)))  NULLS FIRST, (((((rt0.c2))<((rt0.c2)))) IS FALSE);
SELECT ALL COUNT(*) FROM t0 WHERE (0X10cffd88) ORDER BY CAST(t0.c60 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0x10cffd88) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c60 AS BLOB) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (0X10cffd88) ORDER BY CAST(t0.c60 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0x10cffd88) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c60 AS BLOB) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (0X10cffd88) ORDER BY CAST(t0.c60 AS BLOB) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (json(((rt0.c1) NOT NULL))) ORDER BY CAST(t0.c60 COLLATE BINARY AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json(((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(t0.c60 COLLATE BINARY AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (json(((rt0.c1) NOT NULL))) ORDER BY CAST(t0.c60 COLLATE BINARY AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json(((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(t0.c60 COLLATE BINARY AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (json(((rt0.c1) NOT NULL))) ORDER BY CAST(t0.c60 COLLATE BINARY AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c2)IS NOT(vt0.c0)) AS INTEGER)) ORDER BY ((((((((NULL)AND(vt0.c0)))OR(vt0.c1)))AND((+ (vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST, (((((vt0.c1))=((vt0.c0)))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c2)&(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2)IS NOT(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((NULL)AND(vt0.c0)))OR(vt0.c1)))AND((+ (vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST, (((((vt0.c1))==((vt0.c0)))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c2)&(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c2)IS NOT(vt0.c0)) AS INTEGER)) ORDER BY ((((((((NULL)AND(vt0.c0)))OR(vt0.c1)))AND((+ (vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST, (((((vt0.c1))=((vt0.c0)))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c2)&(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2)IS NOT(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((NULL)AND(vt0.c0)))OR(vt0.c1)))AND((+ (vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST, (((((vt0.c1))==((vt0.c0)))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c2)&(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c2)IS NOT(vt0.c0)) AS INTEGER)) ORDER BY ((((((((NULL)AND(vt0.c0)))OR(vt0.c1)))AND((+ (vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST, (((((vt0.c1))=((vt0.c0)))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c2)&(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (((NULL)<<(vt0.c2))))) ORDER BY ((rt0.c1)LIKE(rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((+ (((NULL)<<(vt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1)LIKE(rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (((NULL)<<(vt0.c2))))) ORDER BY ((rt0.c1)LIKE(rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((+ (((NULL)<<(vt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1)LIKE(rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (((NULL)<<(vt0.c2))))) ORDER BY ((rt0.c1)LIKE(rt0.c1)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, rt0.c1, vt0.c0))<((rt0.c1, vt0.c0, rt0.c2))))GLOB(vt0.c1 COLLATE BINARY))) ORDER BY (((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c1)) IN ()) DESC, (((((rt0.c1)) BETWEEN ((0.7696145888553487)) AND ((rt0.c0))))==(((vt0.c0) NOT BETWEEN (0x74aa30ef) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, vt0.c0))<((rt0.c1, vt0.c0, rt0.c2))))GLOB(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c1)) IN ()) DESC, (((((rt0.c1)) BETWEEN ((0.7696145888553487)) AND ((rt0.c0))))==(((vt0.c0) NOT BETWEEN (0X74aa30ef) AND (rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, rt0.c1, vt0.c0))<((rt0.c1, vt0.c0, rt0.c2))))GLOB(vt0.c1 COLLATE BINARY))) ORDER BY (((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c1)) IN ()) DESC, (((((rt0.c1)) BETWEEN ((0.7696145888553487)) AND ((rt0.c0))))==(((vt0.c0) NOT BETWEEN (0x74aa30ef) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, vt0.c0))<((rt0.c1, vt0.c0, rt0.c2))))GLOB(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c1)) IN ()) DESC, (((((rt0.c1)) BETWEEN ((0.7696145888553487)) AND ((rt0.c0))))==(((vt0.c0) NOT BETWEEN (0X74aa30ef) AND (rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, rt0.c1, vt0.c0))<((rt0.c1, vt0.c0, rt0.c2))))GLOB(vt0.c1 COLLATE BINARY))) ORDER BY (((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c1)) IN ()) DESC, (((((rt0.c1)) BETWEEN ((0.7696145888553487)) AND ((rt0.c0))))==(((vt0.c0) NOT BETWEEN (0x74aa30ef) AND (rt0.c0)))) ASC;
SELECT * FROM t0 WHERE (INSTR(t0.c60, t0.c60) COLLATE NOCASE) ORDER BY COALESCE(DISTINCT ((((((((t0.c60)AND(t0.c60)))OR(t0.c60)))OR(t0.c60)))OR(t0.c60)), NULLIF(t0.c60, t0.c60), t0.c60 COLLATE NOCASE, CAST(t0.c60 AS BLOB)), CAST(CASE x'0ad3'  WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN -332871234 END AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((INSTR(t0.c60, t0.c60) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY COALESCE(DISTINCT ((((((((t0.c60)AND(t0.c60)))OR(t0.c60)))OR(t0.c60)))OR(t0.c60)), NULLIF(t0.c60, t0.c60), t0.c60 COLLATE NOCASE, CAST(t0.c60 AS BLOB)), CAST(CASE x'0ad3'  WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN -332871234 END AS BLOB) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (INSTR(t0.c60, t0.c60) COLLATE NOCASE) ORDER BY COALESCE(DISTINCT ((((((((t0.c60)AND(t0.c60)))OR(t0.c60)))OR(t0.c60)))OR(t0.c60)), NULLIF(t0.c60, t0.c60), t0.c60 COLLATE NOCASE, CAST(t0.c60 AS BLOB)), CAST(CASE x'0ad3'  WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN -332871234 END AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((INSTR(t0.c60, t0.c60) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY COALESCE(DISTINCT ((((((((t0.c60)AND(t0.c60)))OR(t0.c60)))OR(t0.c60)))OR(t0.c60)), NULLIF(t0.c60, t0.c60), t0.c60 COLLATE NOCASE, CAST(t0.c60 AS BLOB)), CAST(CASE x'0ad3'  WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN -332871234 END AS BLOB) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (INSTR(t0.c60, t0.c60) COLLATE NOCASE) ORDER BY COALESCE(DISTINCT ((((((((t0.c60)AND(t0.c60)))OR(t0.c60)))OR(t0.c60)))OR(t0.c60)), NULLIF(t0.c60, t0.c60), t0.c60 COLLATE NOCASE, CAST(t0.c60 AS BLOB)), CAST(CASE x'0ad3'  WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN -332871234 END AS BLOB) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST((((t0.c60))=((t0.c60))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c60))=((t0.c60))) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((((t0.c60))=((t0.c60))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c60))=((t0.c60))) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((((t0.c60))=((t0.c60))) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c2)*(vt0.c0))  WHEN (((vt0.c2, vt0.c0, vt0.c2))!=((vt0.c1, vt0.c2, vt0.c1))) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN ((vt0.c1) ISNULL) THEN (vt0.c2 IN (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN CAST(vt0.c2 AS REAL) END) ORDER BY (((((vt0.c1 IN (vt0.c2, vt0.c1)))AND(CAST(vt0.c0 AS BLOB))))AND(((((vt0.c2)AND(0.8452053942371679)))OR(vt0.c2)))) ASC, ((- (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c2)*(vt0.c0))  WHEN (((vt0.c2, vt0.c0, vt0.c2))<>((vt0.c1, vt0.c2, vt0.c1))) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN ((vt0.c1) ISNULL) THEN (vt0.c2 IN (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN CAST(vt0.c2 AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1 IN (vt0.c2, vt0.c1)))AND(CAST(vt0.c0 AS BLOB))))AND(((((vt0.c2)AND(0.8452053942371679)))OR(vt0.c2)))) ASC, ((- (vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c2)*(vt0.c0))  WHEN (((vt0.c2, vt0.c0, vt0.c2))!=((vt0.c1, vt0.c2, vt0.c1))) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN ((vt0.c1) ISNULL) THEN (vt0.c2 IN (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN CAST(vt0.c2 AS REAL) END) ORDER BY (((((vt0.c1 IN (vt0.c2, vt0.c1)))AND(CAST(vt0.c0 AS BLOB))))AND(((((vt0.c2)AND(0.8452053942371679)))OR(vt0.c2)))) ASC, ((- (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c2)*(vt0.c0))  WHEN (((vt0.c2, vt0.c0, vt0.c2))<>((vt0.c1, vt0.c2, vt0.c1))) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN ((vt0.c1) ISNULL) THEN (vt0.c2 IN (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN CAST(vt0.c2 AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1 IN (vt0.c2, vt0.c1)))AND(CAST(vt0.c0 AS BLOB))))AND(((((vt0.c2)AND(0.8452053942371679)))OR(vt0.c2)))) ASC, ((- (vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c2)*(vt0.c0))  WHEN (((vt0.c2, vt0.c0, vt0.c2))!=((vt0.c1, vt0.c2, vt0.c1))) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN ((vt0.c1) ISNULL) THEN (vt0.c2 IN (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN CAST(vt0.c2 AS REAL) END) ORDER BY (((((vt0.c1 IN (vt0.c2, vt0.c1)))AND(CAST(vt0.c0 AS BLOB))))AND(((((vt0.c2)AND(0.8452053942371679)))OR(vt0.c2)))) ASC, ((- (vt0.c0)) IN ()) ASC;
SELECT * FROM vt0 WHERE (CAST(CASE WHEN 0.5107807051301382 THEN vt0.c1 WHEN vt0.c1 THEN '0.007542276602863218' WHEN vt0.c1 THEN vt0.c1 END AS NUMERIC)) ORDER BY (~ (vt0.c1)) COLLATE NOCASE COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN 0.5107807051301382 THEN vt0.c1 WHEN vt0.c1 THEN '0.007542276602863218' WHEN vt0.c1 THEN vt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c1)) COLLATE NOCASE COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN 0.5107807051301382 THEN vt0.c1 WHEN vt0.c1 THEN '0.007542276602863218' WHEN vt0.c1 THEN vt0.c1 END AS NUMERIC)) ORDER BY (~ (vt0.c1)) COLLATE NOCASE COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN 0.5107807051301382 THEN vt0.c1 WHEN vt0.c1 THEN '0.007542276602863218' WHEN vt0.c1 THEN vt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c1)) COLLATE NOCASE COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN 0.5107807051301382 THEN vt0.c1 WHEN vt0.c1 THEN '0.007542276602863218' WHEN vt0.c1 THEN vt0.c1 END AS NUMERIC)) ORDER BY (~ (vt0.c1)) COLLATE NOCASE COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON rt0.c1 WHERE (((((((((rt0.c1 COLLATE NOCASE)AND((rt0.c1 IN (vt0.c2)))))OR(-375141077)))OR(vt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1 COLLATE NOCASE)AND((rt0.c1 IN (vt0.c2)))))OR(-375141077)))OR(vt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON rt0.c1);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON rt0.c1 WHERE (((((((((rt0.c1 COLLATE NOCASE)AND((rt0.c1 IN (vt0.c2)))))OR(-375141077)))OR(vt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1 COLLATE NOCASE)AND((rt0.c1 IN (vt0.c2)))))OR(-375141077)))OR(vt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON rt0.c1);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON rt0.c1 WHERE (((((((((rt0.c1 COLLATE NOCASE)AND((rt0.c1 IN (vt0.c2)))))OR(-375141077)))OR(vt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1)))LIKE(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c1)))LIKE(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1)))LIKE(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c1)))LIKE(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1)))LIKE(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL) ASC;
SELECT COUNT(*) FROM rt0, t0 WHERE (((TYPEOF(DISTINCT rt0.c0))<(((rt0.c0)>(rt0.c2))))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt0.c0))<(((rt0.c0)>(rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((TYPEOF(DISTINCT rt0.c0))<(((rt0.c0)>(rt0.c2))))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt0.c0))<(((rt0.c0)>(rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((TYPEOF(DISTINCT rt0.c0))<(((rt0.c0)>(rt0.c2))))) ORDER BY rt0.c1 ASC;
SELECT COUNT(*) FROM vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NULL IN ()));
SELECT ALL * FROM rt0, t0, vt0 WHERE (CAST(((0.7903302909004082)>=(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.7903302909004082)>=(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (CAST(((0.7903302909004082)>=(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.7903302909004082)>=(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (CAST(((0.7903302909004082)>=(rt0.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (t0.c60)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c60)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (t0.c60)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c60)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (t0.c60)) COLLATE BINARY);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((vt0.c2)AND(((((rt0.c1)AND(rt0.c2)))AND(NULL)))))AND(CASE WHEN t0.c60 THEN rt0.c2 END))) ORDER BY CASE CASE WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END  WHEN ((((vt0.c0)AND(vt0.c0)))AND(x'')) THEN CAST(rt0.c2 AS INTEGER) END, UPPER(CAST(rt0.c2 AS REAL)), (((- (vt0.c1)))>=(((vt0.c0)*(t0.c60)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)AND(((((rt0.c1)AND(rt0.c2)))AND(NULL)))))AND(CASE WHEN t0.c60 THEN rt0.c2 END))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE CASE WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END  WHEN ((((vt0.c0)AND(vt0.c0)))AND(x'')) THEN CAST(rt0.c2 AS INTEGER) END, UPPER(CAST(rt0.c2 AS REAL)), (((- (vt0.c1)))>=(((vt0.c0)*(t0.c60)))) DESC);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((vt0.c2)AND(((((rt0.c1)AND(rt0.c2)))AND(NULL)))))AND(CASE WHEN t0.c60 THEN rt0.c2 END))) ORDER BY CASE CASE WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END  WHEN ((((vt0.c0)AND(vt0.c0)))AND(x'')) THEN CAST(rt0.c2 AS INTEGER) END, UPPER(CAST(rt0.c2 AS REAL)), (((- (vt0.c1)))>=(((vt0.c0)*(t0.c60)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)AND(((((rt0.c1)AND(rt0.c2)))AND(NULL)))))AND(CASE WHEN t0.c60 THEN rt0.c2 END))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE CASE WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END  WHEN ((((vt0.c0)AND(vt0.c0)))AND(x'')) THEN CAST(rt0.c2 AS INTEGER) END, UPPER(CAST(rt0.c2 AS REAL)), (((- (vt0.c1)))>=(((vt0.c0)*(t0.c60)))) DESC);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((vt0.c2)AND(((((rt0.c1)AND(rt0.c2)))AND(NULL)))))AND(CASE WHEN t0.c60 THEN rt0.c2 END))) ORDER BY CASE CASE WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END  WHEN ((((vt0.c0)AND(vt0.c0)))AND(x'')) THEN CAST(rt0.c2 AS INTEGER) END, UPPER(CAST(rt0.c2 AS REAL)), (((- (vt0.c1)))>=(((vt0.c0)*(t0.c60)))) DESC;
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0, vt0.c2, rt0.c1, rt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c2)<(vt0.c1)), ((rt0.c2) BETWEEN (x'') AND (vt0.c2)), ((rt0.c0)>(rt0.c2)), rt0.c0, ((rt0.c1)<>(rt0.c2)))) AND ((rt0.c0, (rt0.c0 IN ()), ((rt0.c0)+(rt0.c0)), (rt0.c1 IN (rt0.c0)), ((rt0.c2)/(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c2, rt0.c1, rt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c2)<(vt0.c1)), ((rt0.c2) BETWEEN (x'') AND (vt0.c2)), ((rt0.c0)>(rt0.c2)), rt0.c0, ((rt0.c1)<>(rt0.c2)))) AND ((rt0.c0, (rt0.c0 IN ()), ((rt0.c0)+(rt0.c0)), (rt0.c1 IN (rt0.c0)), ((rt0.c2)/(vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0, vt0.c2, rt0.c1, rt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c2)<(vt0.c1)), ((rt0.c2) BETWEEN (x'') AND (vt0.c2)), ((rt0.c0)>(rt0.c2)), rt0.c0, ((rt0.c1)<>(rt0.c2)))) AND ((rt0.c0, (rt0.c0 IN ()), ((rt0.c0)+(rt0.c0)), (rt0.c1 IN (rt0.c0)), ((rt0.c2)/(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c2, rt0.c1, rt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c2)<(vt0.c1)), ((rt0.c2) BETWEEN (x'') AND (vt0.c2)), ((rt0.c0)>(rt0.c2)), rt0.c0, ((rt0.c1)<>(rt0.c2)))) AND ((rt0.c0, (rt0.c0 IN ()), ((rt0.c0)+(rt0.c0)), (rt0.c1 IN (rt0.c0)), ((rt0.c2)/(vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0, vt0.c2, rt0.c1, rt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c2)<(vt0.c1)), ((rt0.c2) BETWEEN (x'') AND (vt0.c2)), ((rt0.c0)>(rt0.c2)), rt0.c0, ((rt0.c1)<>(rt0.c2)))) AND ((rt0.c0, (rt0.c0 IN ()), ((rt0.c0)+(rt0.c0)), (rt0.c1 IN (rt0.c0)), ((rt0.c2)/(vt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((vt0.c1, t0.c60, t0.c60)) NOT BETWEEN ((IFNULL(t0.c60, rt0.c1), ((rt0.c1)>>(rt0.c2)), ((((vt0.c0)AND(vt0.c2)))OR(vt0.c1)))) AND ((((t0.c60) IS FALSE), ((vt0.c2) BETWEEN (rt0.c1) AND (vt0.c2)), '')))) ORDER BY ((((CAST(vt0.c1 AS REAL))OR((NOT (rt0.c0)))))AND((((t0.c60))>((rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, t0.c60, t0.c60)) NOT BETWEEN ((IFNULL(t0.c60, rt0.c1), ((rt0.c1)>>(rt0.c2)), ((((vt0.c0)AND(vt0.c2)))OR(vt0.c1)))) AND ((((t0.c60) IS FALSE), ((vt0.c2) BETWEEN (rt0.c1) AND (vt0.c2)), '')))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((CAST(vt0.c1 AS REAL))OR((NOT (rt0.c0)))))AND((((t0.c60))>((rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((vt0.c1, t0.c60, t0.c60)) NOT BETWEEN ((IFNULL(t0.c60, rt0.c1), ((rt0.c1)>>(rt0.c2)), ((((vt0.c0)AND(vt0.c2)))OR(vt0.c1)))) AND ((((t0.c60) IS FALSE), ((vt0.c2) BETWEEN (rt0.c1) AND (vt0.c2)), '')))) ORDER BY ((((CAST(vt0.c1 AS REAL))OR((NOT (rt0.c0)))))AND((((t0.c60))>((rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, t0.c60, t0.c60)) NOT BETWEEN ((IFNULL(t0.c60, rt0.c1), ((rt0.c1)>>(rt0.c2)), ((((vt0.c0)AND(vt0.c2)))OR(vt0.c1)))) AND ((((t0.c60) IS FALSE), ((vt0.c2) BETWEEN (rt0.c1) AND (vt0.c2)), '')))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((CAST(vt0.c1 AS REAL))OR((NOT (rt0.c0)))))AND((((t0.c60))>((rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((vt0.c1, t0.c60, t0.c60)) NOT BETWEEN ((IFNULL(t0.c60, rt0.c1), ((rt0.c1)>>(rt0.c2)), ((((vt0.c0)AND(vt0.c2)))OR(vt0.c1)))) AND ((((t0.c60) IS FALSE), ((vt0.c2) BETWEEN (rt0.c1) AND (vt0.c2)), '')))) ORDER BY ((((CAST(vt0.c1 AS REAL))OR((NOT (rt0.c0)))))AND((((t0.c60))>((rt0.c1))))) DESC;
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ()))IS NOT(((((-932160951)AND(rt0.c1)))AND('-1041830415'))))) ORDER BY TYPEOF(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))IS NOT(((((-932160951)AND(rt0.c1)))AND('-1041830415'))))) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ()))IS NOT(((((-932160951)AND(rt0.c1)))AND('-1041830415'))))) ORDER BY TYPEOF(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))IS NOT(((((-932160951)AND(rt0.c1)))AND('-1041830415'))))) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ()))IS NOT(((((-932160951)AND(rt0.c1)))AND('-1041830415'))))) ORDER BY TYPEOF(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY((((rt0.c2))<=((rt0.c2))))) ORDER BY COALESCE(UPPER(rt0.c1), ((rt0.c1)<=(rt0.c0))) DESC  NULLS FIRST, (- (((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY((((rt0.c2))<=((rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(UPPER(rt0.c1), ((rt0.c1)<=(rt0.c0))) DESC  NULLS FIRST, (- (((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY((((rt0.c2))<=((rt0.c2))))) ORDER BY COALESCE(UPPER(rt0.c1), ((rt0.c1)<=(rt0.c0))) DESC  NULLS FIRST, (- (((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY((((rt0.c2))<=((rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(UPPER(rt0.c1), ((rt0.c1)<=(rt0.c0))) DESC  NULLS FIRST, (- (((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY((((rt0.c2))<=((rt0.c2))))) ORDER BY COALESCE(UPPER(rt0.c1), ((rt0.c1)<=(rt0.c0))) DESC  NULLS FIRST, (- (((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))*(NULL)));
SELECT SUM(count) FROM (SELECT ((((((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))*(NULL))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))*(NULL)));
SELECT SUM(count) FROM (SELECT ((((((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))*(NULL))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))*(NULL)));
SELECT * FROM vt0, rt0, t0 WHERE ((((((rt0.c1)>>(8.87549015E8))))==(((((rt0.c1))==((t0.c60))))))) ORDER BY (((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN x'' THEN vt0.c2 WHEN t0.c60 THEN t0.c60 ELSE rt0.c2 END, CASE rt0.c1  WHEN 0.7073324670950893 THEN t0.c60 ELSE 0xfffffffff661489c END, vt0.c1 COLLATE NOCASE))<=((vt0.c0, vt0.c2 COLLATE RTRIM, ((vt0.c2)==(rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)>>(8.87549015E8))))=(((((rt0.c1))==((t0.c60))))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN x'' THEN vt0.c2 WHEN t0.c60 THEN t0.c60 ELSE rt0.c2 END, CASE rt0.c1  WHEN 0.7073324670950893 THEN t0.c60 ELSE 0xfffffffff661489c END, vt0.c1 COLLATE NOCASE))<=((vt0.c0, vt0.c2 COLLATE RTRIM, ((vt0.c2)=(rt0.c0))))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0, t0 WHERE ((((((rt0.c1)>>(8.87549015E8))))==(((((rt0.c1))==((t0.c60))))))) ORDER BY (((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN x'' THEN vt0.c2 WHEN t0.c60 THEN t0.c60 ELSE rt0.c2 END, CASE rt0.c1  WHEN 0.7073324670950893 THEN t0.c60 ELSE 0xfffffffff661489c END, vt0.c1 COLLATE NOCASE))<=((vt0.c0, vt0.c2 COLLATE RTRIM, ((vt0.c2)==(rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)>>(8.87549015E8))))=(((((rt0.c1))==((t0.c60))))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN x'' THEN vt0.c2 WHEN t0.c60 THEN t0.c60 ELSE rt0.c2 END, CASE rt0.c1  WHEN 0.7073324670950893 THEN t0.c60 ELSE 0xfffffffff661489c END, vt0.c1 COLLATE NOCASE))<=((vt0.c0, vt0.c2 COLLATE RTRIM, ((vt0.c2)=(rt0.c0))))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0, t0 WHERE ((((((rt0.c1)>>(8.87549015E8))))==(((((rt0.c1))==((t0.c60))))))) ORDER BY (((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN x'' THEN vt0.c2 WHEN t0.c60 THEN t0.c60 ELSE rt0.c2 END, CASE rt0.c1  WHEN 0.7073324670950893 THEN t0.c60 ELSE 0xfffffffff661489c END, vt0.c1 COLLATE NOCASE))<=((vt0.c0, vt0.c2 COLLATE RTRIM, ((vt0.c2)==(rt0.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((((LIKE(t0.c60, t0.c60, '-'))AND(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))))AND(' tP(px')))AND(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))))OR((+ (t0.c60)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LIKE(t0.c60, t0.c60, '-'))AND(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))))AND(' tP(px')))AND(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))))OR((+ (t0.c60))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((LIKE(t0.c60, t0.c60, '-'))AND(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))))AND(' tP(px')))AND(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))))OR((+ (t0.c60)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LIKE(t0.c60, t0.c60, '-'))AND(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))))AND(' tP(px')))AND(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))))OR((+ (t0.c60))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((LIKE(t0.c60, t0.c60, '-'))AND(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))))AND(' tP(px')))AND(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))))OR((+ (t0.c60)))));
SELECT * FROM vt0, rt0 WHERE (LOWER(DISTINCT ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND('0.2519120887870543')))AND(vt0.c1)))) ORDER BY ((((vt0.c2)>(rt0.c1))) NOT NULL) DESC, CASE ((('vN')) BETWEEN ((vt0.c1)) AND ((rt0.c0)))  WHEN TRIM(vt0.c0) THEN ((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2)) WHEN ((0.6955535311614146) BETWEEN (rt0.c2) AND (vt0.c0)) THEN '-964870589' WHEN ((rt0.c1)<=(vt0.c2)) THEN ((vt0.c2)|(rt0.c2)) WHEN (((vt0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c1, '0.8115481515876627', vt0.c0)) AND ((rt0.c2, rt0.c1, vt0.c2))) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c0)LIKE(vt0.c2)) THEN (vt0.c1 IN ()) ELSE (NOT (rt0.c0)) END DESC  NULLS LAST, CASE WHEN ((vt0.c2)%(vt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) ELSE CAST(rt0.c2 AS NUMERIC) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND('0.2519120887870543')))AND(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c2)>(rt0.c1))) NOT NULL) DESC, CASE ((('vN')) BETWEEN ((vt0.c1)) AND ((rt0.c0)))  WHEN TRIM(vt0.c0) THEN ((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2)) WHEN ((0.6955535311614146) BETWEEN (rt0.c2) AND (vt0.c0)) THEN '-964870589' WHEN ((rt0.c1)<=(vt0.c2)) THEN ((vt0.c2)|(rt0.c2)) WHEN (((vt0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c1, '0.8115481515876627', vt0.c0)) AND ((rt0.c2, rt0.c1, vt0.c2))) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c0)LIKE(vt0.c2)) THEN (vt0.c1 IN ()) ELSE (NOT (rt0.c0)) END DESC  NULLS LAST, CASE WHEN ((vt0.c2)%(vt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) ELSE CAST(rt0.c2 AS NUMERIC) END  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (LOWER(DISTINCT ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND('0.2519120887870543')))AND(vt0.c1)))) ORDER BY ((((vt0.c2)>(rt0.c1))) NOT NULL) DESC, CASE ((('vN')) BETWEEN ((vt0.c1)) AND ((rt0.c0)))  WHEN TRIM(vt0.c0) THEN ((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2)) WHEN ((0.6955535311614146) BETWEEN (rt0.c2) AND (vt0.c0)) THEN '-964870589' WHEN ((rt0.c1)<=(vt0.c2)) THEN ((vt0.c2)|(rt0.c2)) WHEN (((vt0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c1, '0.8115481515876627', vt0.c0)) AND ((rt0.c2, rt0.c1, vt0.c2))) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c0)LIKE(vt0.c2)) THEN (vt0.c1 IN ()) ELSE (NOT (rt0.c0)) END DESC  NULLS LAST, CASE WHEN ((vt0.c2)%(vt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) ELSE CAST(rt0.c2 AS NUMERIC) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND('0.2519120887870543')))AND(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c2)>(rt0.c1))) NOT NULL) DESC, CASE ((('vN')) BETWEEN ((vt0.c1)) AND ((rt0.c0)))  WHEN TRIM(vt0.c0) THEN ((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2)) WHEN ((0.6955535311614146) BETWEEN (rt0.c2) AND (vt0.c0)) THEN '-964870589' WHEN ((rt0.c1)<=(vt0.c2)) THEN ((vt0.c2)|(rt0.c2)) WHEN (((vt0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c1, '0.8115481515876627', vt0.c0)) AND ((rt0.c2, rt0.c1, vt0.c2))) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c0)LIKE(vt0.c2)) THEN (vt0.c1 IN ()) ELSE (NOT (rt0.c0)) END DESC  NULLS LAST, CASE WHEN ((vt0.c2)%(vt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) ELSE CAST(rt0.c2 AS NUMERIC) END  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (LOWER(DISTINCT ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND('0.2519120887870543')))AND(vt0.c1)))) ORDER BY ((((vt0.c2)>(rt0.c1))) NOT NULL) DESC, CASE ((('vN')) BETWEEN ((vt0.c1)) AND ((rt0.c0)))  WHEN TRIM(vt0.c0) THEN ((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2)) WHEN ((0.6955535311614146) BETWEEN (rt0.c2) AND (vt0.c0)) THEN '-964870589' WHEN ((rt0.c1)<=(vt0.c2)) THEN ((vt0.c2)|(rt0.c2)) WHEN (((vt0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c1, '0.8115481515876627', vt0.c0)) AND ((rt0.c2, rt0.c1, vt0.c2))) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c0)LIKE(vt0.c2)) THEN (vt0.c1 IN ()) ELSE (NOT (rt0.c0)) END DESC  NULLS LAST, CASE WHEN ((vt0.c2)%(vt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) ELSE CAST(rt0.c2 AS NUMERIC) END  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((CASE 0.8259507443386286  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c2 END) IS FALSE)) ORDER BY (((NOT (vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE 0.8259507443386286  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c2 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (vt0.c0))) NOTNULL) DESC);
SELECT * FROM rt0, vt0 WHERE (((CASE 0.8259507443386286  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c2 END) IS FALSE)) ORDER BY (((NOT (vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE 0.8259507443386286  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c2 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (vt0.c0))) NOTNULL) DESC);
SELECT * FROM rt0, vt0 WHERE (((CASE 0.8259507443386286  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c2 END) IS FALSE)) ORDER BY (((NOT (vt0.c0))) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((((((('9듮8{}')OR(-622536683)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1))) NOT BETWEEN ((- (rt0.c0))) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((((((('9듮8{}')OR(-622536683)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1))) NOT BETWEEN ((- (rt0.c0))) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((((((('9듮8{}')OR(-622536683)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1))) NOT BETWEEN ((- (rt0.c0))) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((((((('9듮8{}')OR(-622536683)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1))) NOT BETWEEN ((- (rt0.c0))) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((((((('9듮8{}')OR(-622536683)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1))) NOT BETWEEN ((- (rt0.c0))) AND ((rt0.c2 IN ()))));
SELECT * FROM vt0, t0, rt0 WHERE (x'8e85177c') ORDER BY (((0.906798889295028 COLLATE BINARY, ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c1)<=(666967603))))<>((((((((((vt0.c2)AND(NULL)))OR(rt0.c0)))AND(vt0.c1)))OR(rt0.c1)), rt0.c2, ((vt0.c0)<>(t0.c60))))), COALESCE(((rt0.c0) IS FALSE), (('-38127367') NOT BETWEEN (rt0.c2) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((x'8e85177c') IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((0.906798889295028 COLLATE BINARY, ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c1)<=(666967603))))!=((((((((((vt0.c2)AND(NULL)))OR(rt0.c0)))AND(vt0.c1)))OR(rt0.c1)), rt0.c2, ((vt0.c0)<>(t0.c60))))), COALESCE(((rt0.c0) IS FALSE), (('-38127367') NOT BETWEEN (rt0.c2) AND (rt0.c0))));
SELECT * FROM vt0, t0, rt0 WHERE (x'8e85177c') ORDER BY (((0.906798889295028 COLLATE BINARY, ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c1)<=(666967603))))<>((((((((((vt0.c2)AND(NULL)))OR(rt0.c0)))AND(vt0.c1)))OR(rt0.c1)), rt0.c2, ((vt0.c0)<>(t0.c60))))), COALESCE(((rt0.c0) IS FALSE), (('-38127367') NOT BETWEEN (rt0.c2) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((x'8e85177c') IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((0.906798889295028 COLLATE BINARY, ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c1)<=(666967603))))!=((((((((((vt0.c2)AND(NULL)))OR(rt0.c0)))AND(vt0.c1)))OR(rt0.c1)), rt0.c2, ((vt0.c0)<>(t0.c60))))), COALESCE(((rt0.c0) IS FALSE), (('-38127367') NOT BETWEEN (rt0.c2) AND (rt0.c0))));
SELECT * FROM vt0, t0, rt0 WHERE (x'8e85177c') ORDER BY (((0.906798889295028 COLLATE BINARY, ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c1)<=(666967603))))<>((((((((((vt0.c2)AND(NULL)))OR(rt0.c0)))AND(vt0.c1)))OR(rt0.c1)), rt0.c2, ((vt0.c0)<>(t0.c60))))), COALESCE(((rt0.c0) IS FALSE), (('-38127367') NOT BETWEEN (rt0.c2) AND (rt0.c0)));
SELECT * FROM vt0, t0, rt0 WHERE ((NOT ((~ (vt0.c2))))) ORDER BY (((+ (vt0.c2)))>(CASE WHEN vt0.c2 THEN 947348069 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) DESC, rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (vt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((+ (vt0.c2)))>(CASE WHEN vt0.c2 THEN 947348069 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) DESC, rt0.c2);
SELECT * FROM vt0, t0, rt0 WHERE ((NOT ((~ (vt0.c2))))) ORDER BY (((+ (vt0.c2)))>(CASE WHEN vt0.c2 THEN 947348069 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) DESC, rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (vt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((+ (vt0.c2)))>(CASE WHEN vt0.c2 THEN 947348069 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) DESC, rt0.c2);
SELECT * FROM vt0, t0, rt0 WHERE ((NOT ((~ (vt0.c2))))) ORDER BY (((+ (vt0.c2)))>(CASE WHEN vt0.c2 THEN 947348069 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) DESC, rt0.c2;
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM vt0, rt0 WHERE (LENGTH(CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (LENGTH(CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (LENGTH(CAST(vt0.c0 AS NUMERIC)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c2, t0.c60, t0.c60)) BETWEEN ((vt0.c0, vt0.c2, t0.c60)) AND ((rt0.c2, rt0.c2, rt0.c2))) COLLATE NOCASE INNER JOIN t0 ON (NOT (vt0.c1)) COLLATE NOCASE WHERE ((((vt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((CASE WHEN rt0.c1 THEN rt0.c2 END)))) ORDER BY (((((rt0.c0))>((vt0.c2)))) BETWEEN (CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (PRINTF(vt0.c2, rt0.c2, vt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((CASE WHEN rt0.c1 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c2, t0.c60, t0.c60)) BETWEEN ((vt0.c0, vt0.c2, t0.c60)) AND ((rt0.c2, rt0.c2, rt0.c2))) COLLATE NOCASE INNER JOIN t0 ON (NOT (vt0.c1)) COLLATE NOCASE ORDER BY (((((rt0.c0))>((vt0.c2)))) BETWEEN (CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (PRINTF(vt0.c2, rt0.c2, vt0.c2))) DESC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c2, t0.c60, t0.c60)) BETWEEN ((vt0.c0, vt0.c2, t0.c60)) AND ((rt0.c2, rt0.c2, rt0.c2))) COLLATE NOCASE INNER JOIN t0 ON (NOT (vt0.c1)) COLLATE NOCASE WHERE ((((vt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((CASE WHEN rt0.c1 THEN rt0.c2 END)))) ORDER BY (((((rt0.c0))>((vt0.c2)))) BETWEEN (CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (PRINTF(vt0.c2, rt0.c2, vt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((CASE WHEN rt0.c1 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c2, t0.c60, t0.c60)) BETWEEN ((vt0.c0, vt0.c2, t0.c60)) AND ((rt0.c2, rt0.c2, rt0.c2))) COLLATE NOCASE INNER JOIN t0 ON (NOT (vt0.c1)) COLLATE NOCASE ORDER BY (((((rt0.c0))>((vt0.c2)))) BETWEEN (CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (PRINTF(vt0.c2, rt0.c2, vt0.c2))) DESC);
SELECT * FROM rt0 WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) ORDER BY ((rt0.c2)LIKE(rt0.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)LIKE(rt0.c2)) COLLATE BINARY DESC);
SELECT * FROM rt0 WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) ORDER BY ((rt0.c2)LIKE(rt0.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)LIKE(rt0.c2)) COLLATE BINARY DESC);
SELECT * FROM rt0 WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) ORDER BY ((rt0.c2)LIKE(rt0.c2)) COLLATE BINARY DESC;
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (((rt0.c2)|(vt0.c1)) IN ()) WHERE (((((((vt0.c1)OR(rt0.c2)))AND((('-1140537777') NOT NULL))))AND(LAST_INSERT_ROWID()))) ORDER BY (vt0.c0 COLLATE NOCASE IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(rt0.c2)))AND((('-1140537777') NOT NULL))))AND(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (((rt0.c2)|(vt0.c1)) IN ()) ORDER BY (vt0.c0 COLLATE NOCASE IN ())  NULLS LAST);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (((rt0.c2)|(vt0.c1)) IN ()) WHERE (((((((vt0.c1)OR(rt0.c2)))AND((('-1140537777') NOT NULL))))AND(LAST_INSERT_ROWID()))) ORDER BY (vt0.c0 COLLATE NOCASE IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(rt0.c2)))AND((('-1140537777') NOT NULL))))AND(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (((rt0.c2)|(vt0.c1)) IN ()) ORDER BY (vt0.c0 COLLATE NOCASE IN ())  NULLS LAST);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (((rt0.c2)|(vt0.c1)) IN ()) WHERE (((((((vt0.c1)OR(rt0.c2)))AND((('-1140537777') NOT NULL))))AND(LAST_INSERT_ROWID()))) ORDER BY (vt0.c0 COLLATE NOCASE IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (t0.c60))) BETWEEN (((t0.c60) IS FALSE)) AND (t0.c60 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c60))) BETWEEN (((t0.c60) IS FALSE)) AND (t0.c60 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (t0.c60))) BETWEEN (((t0.c60) IS FALSE)) AND (t0.c60 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c60))) BETWEEN (((t0.c60) IS FALSE)) AND (t0.c60 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (t0.c60))) BETWEEN (((t0.c60) IS FALSE)) AND (t0.c60 COLLATE RTRIM)));
SELECT ALL * FROM t0 WHERE ((t0.c60 IN (((t0.c60)==(t0.c60)))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c60 IN (((t0.c60)=(t0.c60))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c60 IN (((t0.c60)==(t0.c60)))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c60 IN (((t0.c60)=(t0.c60))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c60 IN (((t0.c60)==(t0.c60)))));
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN NULL END)<>(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN NULL END)<>(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN NULL END)<>(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN NULL END)<>(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN NULL END)<>(((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON ((((((((rt0.c1)AND(rt0.c0)))AND('az\n쇾^8育')))OR(rt0.c2)))AND(rt0.c0)) COLLATE RTRIM WHERE (CAST(CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) ORDER BY ((((('#wUV', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c2, rt0.c1, t0.c60)) AND ((rt0.c2, vt0.c0, rt0.c0))))>>(((rt0.c1) BETWEEN (rt0.c1) AND (NULL))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON ((((((((rt0.c1)AND(rt0.c0)))AND('az\n쇾^8育')))OR(rt0.c2)))AND(rt0.c0)) COLLATE RTRIM ORDER BY ((((('#wUV', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c2, rt0.c1, t0.c60)) AND ((rt0.c2, vt0.c0, rt0.c0))))>>(((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))));
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON ((((((((rt0.c1)AND(rt0.c0)))AND('az\n쇾^8育')))OR(rt0.c2)))AND(rt0.c0)) COLLATE RTRIM WHERE (CAST(CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) ORDER BY ((((('#wUV', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c2, rt0.c1, t0.c60)) AND ((rt0.c2, vt0.c0, rt0.c0))))>>(((rt0.c1) BETWEEN (rt0.c1) AND (NULL))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON ((((((((rt0.c1)AND(rt0.c0)))AND('az\n쇾^8育')))OR(rt0.c2)))AND(rt0.c0)) COLLATE RTRIM ORDER BY ((((('#wUV', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c2, rt0.c1, t0.c60)) AND ((rt0.c2, vt0.c0, rt0.c0))))>>(((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))));
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON ((((((((rt0.c1)AND(rt0.c0)))AND('az\n쇾^8育')))OR(rt0.c2)))AND(rt0.c0)) COLLATE RTRIM WHERE (CAST(CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) ORDER BY ((((('#wUV', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c2, rt0.c1, t0.c60)) AND ((rt0.c2, vt0.c0, rt0.c0))))>>(((rt0.c1) BETWEEN (rt0.c1) AND (NULL))));
SELECT * FROM t0, rt0, vt0 WHERE (((((((rt0.c2)OR(vt0.c1)))AND(rt0.c1)))>(vt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(vt0.c1)))AND(rt0.c1)))>(vt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((((((rt0.c2)OR(vt0.c1)))AND(rt0.c1)))>(vt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(vt0.c1)))AND(rt0.c1)))>(vt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((((((rt0.c2)OR(vt0.c1)))AND(rt0.c1)))>(vt0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (- ((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (- ((rt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (- ((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (- ((rt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (- ((rt0.c0 IN ()))) ASC;
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((((vt0.c2, rt0.c2, t0.c60)) NOT BETWEEN ((vt0.c2, rt0.c1, rt0.c1)) AND ((t0.c60, rt0.c1, vt0.c2)))))==((((vt0.c2)>(vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2, rt0.c2, t0.c60)) NOT BETWEEN ((vt0.c2, rt0.c1, rt0.c1)) AND ((t0.c60, rt0.c1, vt0.c2)))))==((((vt0.c2)>(vt0.c2)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((((vt0.c2, rt0.c2, t0.c60)) NOT BETWEEN ((vt0.c2, rt0.c1, rt0.c1)) AND ((t0.c60, rt0.c1, vt0.c2)))))==((((vt0.c2)>(vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2, rt0.c2, t0.c60)) NOT BETWEEN ((vt0.c2, rt0.c1, rt0.c1)) AND ((t0.c60, rt0.c1, vt0.c2)))))==((((vt0.c2)>(vt0.c2)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((((vt0.c2, rt0.c2, t0.c60)) NOT BETWEEN ((vt0.c2, rt0.c1, rt0.c1)) AND ((t0.c60, rt0.c1, vt0.c2)))))==((((vt0.c2)>(vt0.c2))))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (vt0.c2) ORDER BY -964870589 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY -964870589 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (vt0.c2) ORDER BY -964870589 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY -964870589 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (TRIM(((vt0.c2)*('1T7nk*27')))) ORDER BY ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((((0.18308459924704146)OR(vt0.c0)))AND(vt0.c2))) AND (((1787247718)AND('j7q*㱦2')))) DESC, x'' DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c2)*('1T7nk*27')))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((((0.18308459924704146)OR(vt0.c0)))AND(vt0.c2))) AND (((1787247718)AND('j7q*㱦2')))) DESC, x'' DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (TRIM(((vt0.c2)*('1T7nk*27')))) ORDER BY ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((((0.18308459924704146)OR(vt0.c0)))AND(vt0.c2))) AND (((1787247718)AND('j7q*㱦2')))) DESC, x'' DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c2)*('1T7nk*27')))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((((0.18308459924704146)OR(vt0.c0)))AND(vt0.c2))) AND (((1787247718)AND('j7q*㱦2')))) DESC, x'' DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (TRIM(((vt0.c2)*('1T7nk*27')))) ORDER BY ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((((0.18308459924704146)OR(vt0.c0)))AND(vt0.c2))) AND (((1787247718)AND('j7q*㱦2')))) DESC, x'' DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (((rt0.c0, x'', rt0.c0))>=((rt0.c2, rt0.c1, rt0.c2)))  WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((0X328d571))) THEN 0.38560577032737053 END) ORDER BY '2094987660' ASC, ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))<=((((rt0.c2)AND(rt0.c0))))) DESC  NULLS LAST, (CAST(rt0.c1 AS INTEGER) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0, x'', rt0.c0))>=((rt0.c2, rt0.c1, rt0.c2)))  WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((0X328d571))) THEN 0.38560577032737053 END) IS TRUE)  as count FROM rt0 ORDER BY '2094987660' ASC, ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))<=((((rt0.c2)AND(rt0.c0))))) DESC  NULLS LAST, (CAST(rt0.c1 AS INTEGER) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (((rt0.c0, x'', rt0.c0))>=((rt0.c2, rt0.c1, rt0.c2)))  WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((0X328d571))) THEN 0.38560577032737053 END) ORDER BY '2094987660' ASC, ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))<=((((rt0.c2)AND(rt0.c0))))) DESC  NULLS LAST, (CAST(rt0.c1 AS INTEGER) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0, x'', rt0.c0))>=((rt0.c2, rt0.c1, rt0.c2)))  WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((0X328d571))) THEN 0.38560577032737053 END) IS TRUE)  as count FROM rt0 ORDER BY '2094987660' ASC, ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))<=((((rt0.c2)AND(rt0.c0))))) DESC  NULLS LAST, (CAST(rt0.c1 AS INTEGER) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (((rt0.c0, x'', rt0.c0))>=((rt0.c2, rt0.c1, rt0.c2)))  WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((0X328d571))) THEN 0.38560577032737053 END) ORDER BY '2094987660' ASC, ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))<=((((rt0.c2)AND(rt0.c0))))) DESC  NULLS LAST, (CAST(rt0.c1 AS INTEGER) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((rt0.c1 COLLATE RTRIM)LIKE(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((rt0.c1) NOTNULL))IS(CASE t0.c60  WHEN '-1105240459' THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)LIKE(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((rt0.c1) NOTNULL))IS(CASE t0.c60  WHEN '-1105240459' THEN vt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((rt0.c1 COLLATE RTRIM)LIKE(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((rt0.c1) NOTNULL))IS(CASE t0.c60  WHEN '-1105240459' THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)LIKE(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((rt0.c1) NOTNULL))IS(CASE t0.c60  WHEN '-1105240459' THEN vt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((rt0.c1 COLLATE RTRIM)LIKE(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((rt0.c1) NOTNULL))IS(CASE t0.c60  WHEN '-1105240459' THEN vt0.c0 END)) ASC;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((+ (CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((+ (CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((+ (CAST(rt0.c0 AS BLOB))));
SELECT ALL * FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) ORDER BY (+ (rt0.c0 COLLATE NOCASE)), CASE CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END  WHEN ((rt0.c2) IS TRUE) THEN (~ (rt0.c1)) ELSE CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN '㣹o估1TXBꆳᔚ' WHEN rt0.c1 THEN rt0.c1 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c0 COLLATE NOCASE)), CASE CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END  WHEN ((rt0.c2) IS TRUE) THEN (~ (rt0.c1)) ELSE CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN '㣹o估1TXBꆳᔚ' WHEN rt0.c1 THEN rt0.c1 END END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) ORDER BY (+ (rt0.c0 COLLATE NOCASE)), CASE CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END  WHEN ((rt0.c2) IS TRUE) THEN (~ (rt0.c1)) ELSE CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN '㣹o估1TXBꆳᔚ' WHEN rt0.c1 THEN rt0.c1 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c0 COLLATE NOCASE)), CASE CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END  WHEN ((rt0.c2) IS TRUE) THEN (~ (rt0.c1)) ELSE CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN '㣹o估1TXBꆳᔚ' WHEN rt0.c1 THEN rt0.c1 END END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) ORDER BY (+ (rt0.c0 COLLATE NOCASE)), CASE CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END  WHEN ((rt0.c2) IS TRUE) THEN (~ (rt0.c1)) ELSE CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN '㣹o估1TXBꆳᔚ' WHEN rt0.c1 THEN rt0.c1 END END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('');
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON (((CAST(vt0.c2 AS INTEGER)))<((((vt0.c1) IS FALSE)))) LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)OR(vt0.c2)))OR(rt0.c0)) THEN (vt0.c0 IN (rt0.c2)) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c0) IS FALSE) WHEN ((rt0.c1)%(vt0.c0)) THEN ((((vt0.c1)AND(rt0.c0)))OR(rt0.c1)) ELSE ((vt0.c1)==(vt0.c0)) END WHERE ((NOT (json(vt0.c2)))) ORDER BY ((vt0.c1)=(rt0.c2)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (json(vt0.c2)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((CAST(vt0.c2 AS INTEGER)))<((((vt0.c1) IS FALSE)))) LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)OR(vt0.c2)))OR(rt0.c0)) THEN (vt0.c0 IN (rt0.c2)) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c0) IS FALSE) WHEN ((rt0.c1)%(vt0.c0)) THEN ((((vt0.c1)AND(rt0.c0)))OR(rt0.c1)) ELSE ((vt0.c1)==(vt0.c0)) END ORDER BY ((vt0.c1)=(rt0.c2)) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON (((CAST(vt0.c2 AS INTEGER)))<((((vt0.c1) IS FALSE)))) LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)OR(vt0.c2)))OR(rt0.c0)) THEN (vt0.c0 IN (rt0.c2)) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c0) IS FALSE) WHEN ((rt0.c1)%(vt0.c0)) THEN ((((vt0.c1)AND(rt0.c0)))OR(rt0.c1)) ELSE ((vt0.c1)==(vt0.c0)) END WHERE ((NOT (json(vt0.c2)))) ORDER BY ((vt0.c1)=(rt0.c2)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (json(vt0.c2)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((CAST(vt0.c2 AS INTEGER)))<((((vt0.c1) IS FALSE)))) LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)OR(vt0.c2)))OR(rt0.c0)) THEN (vt0.c0 IN (rt0.c2)) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c0) IS FALSE) WHEN ((rt0.c1)%(vt0.c0)) THEN ((((vt0.c1)AND(rt0.c0)))OR(rt0.c1)) ELSE ((vt0.c1)==(vt0.c0)) END ORDER BY ((vt0.c1)=(rt0.c2)) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN t0 ON ((x'c58d' IN ()) IN ()) WHERE (DATETIME(((vt0.c2)LIKE(t0.c60)), ((vt0.c0) IS FALSE), ((vt0.c0) ISNULL), CAST(t0.c60 AS NUMERIC), LIKELY(t0.c60), vt0.c2 COLLATE NOCASE, 1310254307));
SELECT SUM(count) FROM (SELECT ((DATETIME(((vt0.c2)LIKE(t0.c60)), ((vt0.c0) IS FALSE), ((vt0.c0) ISNULL), CAST(t0.c60 AS NUMERIC), LIKELY(t0.c60), vt0.c2 COLLATE NOCASE, 1310254307)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((x'c58d' IN ()) IN ()));
SELECT * FROM vt0 INNER JOIN t0 ON ((x'c58d' IN ()) IN ()) WHERE (DATETIME(((vt0.c2)LIKE(t0.c60)), ((vt0.c0) IS FALSE), ((vt0.c0) ISNULL), CAST(t0.c60 AS NUMERIC), LIKELY(t0.c60), vt0.c2 COLLATE NOCASE, 1310254307));
SELECT SUM(count) FROM (SELECT ((DATETIME(((vt0.c2)LIKE(t0.c60)), ((vt0.c0) IS FALSE), ((vt0.c0) ISNULL), CAST(t0.c60 AS NUMERIC), LIKELY(t0.c60), vt0.c2 COLLATE NOCASE, 1310254307)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((x'c58d' IN ()) IN ()));
SELECT * FROM vt0 INNER JOIN t0 ON ((x'c58d' IN ()) IN ()) WHERE (DATETIME(((vt0.c2)LIKE(t0.c60)), ((vt0.c0) IS FALSE), ((vt0.c0) ISNULL), CAST(t0.c60 AS NUMERIC), LIKELY(t0.c60), vt0.c2 COLLATE NOCASE, 1310254307));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((- (rt0.c0))) ORDER BY ((((CAST(rt0.c0 AS INTEGER))AND(((t0.c60) BETWEEN (vt0.c1) AND ('Q5[')))))OR(((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c0))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((CAST(rt0.c0 AS INTEGER))AND(((t0.c60) BETWEEN (vt0.c1) AND ('Q5[')))))OR(((rt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((- (rt0.c0))) ORDER BY ((((CAST(rt0.c0 AS INTEGER))AND(((t0.c60) BETWEEN (vt0.c1) AND ('Q5[')))))OR(((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c0))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((CAST(rt0.c0 AS INTEGER))AND(((t0.c60) BETWEEN (vt0.c1) AND ('Q5[')))))OR(((rt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((- (rt0.c0))) ORDER BY ((((CAST(rt0.c0 AS INTEGER))AND(((t0.c60) BETWEEN (vt0.c1) AND ('Q5[')))))OR(((rt0.c1) NOT NULL)));
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c2)GLOB(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c2)GLOB(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c2)GLOB(rt0.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((((((((vt0.c1)AND(t0.c60)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c2))) NOT BETWEEN ((((t0.c60, t0.c60, vt0.c0, vt0.c1, vt0.c2))<=((vt0.c1, t0.c60, vt0.c0, t0.c60, vt0.c0)))) AND ((((vt0.c0, t0.c60, t0.c60)) NOT BETWEEN ((vt0.c2, t0.c60, vt0.c1)) AND ((vt0.c2, t0.c60, vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)AND(t0.c60)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c2))) NOT BETWEEN ((((t0.c60, t0.c60, vt0.c0, vt0.c1, vt0.c2))<=((vt0.c1, t0.c60, vt0.c0, t0.c60, vt0.c0)))) AND ((((vt0.c0, t0.c60, t0.c60)) NOT BETWEEN ((vt0.c2, t0.c60, vt0.c1)) AND ((vt0.c2, t0.c60, vt0.c2)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((((((((vt0.c1)AND(t0.c60)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c2))) NOT BETWEEN ((((t0.c60, t0.c60, vt0.c0, vt0.c1, vt0.c2))<=((vt0.c1, t0.c60, vt0.c0, t0.c60, vt0.c0)))) AND ((((vt0.c0, t0.c60, t0.c60)) NOT BETWEEN ((vt0.c2, t0.c60, vt0.c1)) AND ((vt0.c2, t0.c60, vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)AND(t0.c60)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c2))) NOT BETWEEN ((((t0.c60, t0.c60, vt0.c0, vt0.c1, vt0.c2))<=((vt0.c1, t0.c60, vt0.c0, t0.c60, vt0.c0)))) AND ((((vt0.c0, t0.c60, t0.c60)) NOT BETWEEN ((vt0.c2, t0.c60, vt0.c1)) AND ((vt0.c2, t0.c60, vt0.c2)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((((((((vt0.c1)AND(t0.c60)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c2))) NOT BETWEEN ((((t0.c60, t0.c60, vt0.c0, vt0.c1, vt0.c2))<=((vt0.c1, t0.c60, vt0.c0, t0.c60, vt0.c0)))) AND ((((vt0.c0, t0.c60, t0.c60)) NOT BETWEEN ((vt0.c2, t0.c60, vt0.c1)) AND ((vt0.c2, t0.c60, vt0.c2))))));
SELECT * FROM t0 WHERE (CASE WHEN ((((t0.c60)AND(0X4d30fecc)))AND(t0.c60)) THEN CAST(t0.c60 AS REAL) WHEN ((t0.c60)AND(t0.c60)) THEN ((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)) WHEN ((t0.c60) ISNULL) THEN (t0.c60 IN ()) END) ORDER BY ((((t0.c60)OR((NOT (t0.c60)))))AND(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t0.c60)AND(0x4d30fecc)))AND(t0.c60)) THEN CAST(t0.c60 AS REAL) WHEN ((t0.c60)AND(t0.c60)) THEN ((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)) WHEN ((t0.c60) ISNULL) THEN (t0.c60 IN ()) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c60)OR((NOT (t0.c60)))))AND(NULL))  NULLS FIRST);
SELECT * FROM t0 WHERE (CASE WHEN ((((t0.c60)AND(0X4d30fecc)))AND(t0.c60)) THEN CAST(t0.c60 AS REAL) WHEN ((t0.c60)AND(t0.c60)) THEN ((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)) WHEN ((t0.c60) ISNULL) THEN (t0.c60 IN ()) END) ORDER BY ((((t0.c60)OR((NOT (t0.c60)))))AND(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t0.c60)AND(0x4d30fecc)))AND(t0.c60)) THEN CAST(t0.c60 AS REAL) WHEN ((t0.c60)AND(t0.c60)) THEN ((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)) WHEN ((t0.c60) ISNULL) THEN (t0.c60 IN ()) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c60)OR((NOT (t0.c60)))))AND(NULL))  NULLS FIRST);
SELECT * FROM t0 WHERE (CASE WHEN ((((t0.c60)AND(0X4d30fecc)))AND(t0.c60)) THEN CAST(t0.c60 AS REAL) WHEN ((t0.c60)AND(t0.c60)) THEN ((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)) WHEN ((t0.c60) ISNULL) THEN (t0.c60 IN ()) END) ORDER BY ((((t0.c60)OR((NOT (t0.c60)))))AND(NULL))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (((x''))!=((t0.c60))) THEN (t0.c60 IN (t0.c60)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((x''))<>((t0.c60))) THEN (t0.c60 IN (t0.c60)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (((x''))!=((t0.c60))) THEN (t0.c60 IN (t0.c60)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((x''))<>((t0.c60))) THEN (t0.c60 IN (t0.c60)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (((x''))!=((t0.c60))) THEN (t0.c60 IN (t0.c60)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (((((+ (t0.c60)), (~ (t0.c60)), (t0.c60 IN (0.44407664547757286))))=(((+ (t0.c60)), t0.c60, CASE WHEN t0.c60 THEN t0.c60 END)))) ORDER BY ((((CASE WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 END)OR(CAST(t0.c60 AS BLOB))))AND(t0.c60));
SELECT SUM(count) FROM (SELECT ((((((+ (t0.c60)), (~ (t0.c60)), (t0.c60 IN (0.44407664547757286))))==(((+ (t0.c60)), t0.c60, CASE WHEN t0.c60 THEN t0.c60 END)))) IS TRUE)  as count FROM t0 ORDER BY ((((CASE WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 END)OR(CAST(t0.c60 AS BLOB))))AND(t0.c60)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((+ (t0.c60)), (~ (t0.c60)), (t0.c60 IN (0.44407664547757286))))=(((+ (t0.c60)), t0.c60, CASE WHEN t0.c60 THEN t0.c60 END)))) ORDER BY ((((CASE WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 END)OR(CAST(t0.c60 AS BLOB))))AND(t0.c60));
SELECT SUM(count) FROM (SELECT ((((((+ (t0.c60)), (~ (t0.c60)), (t0.c60 IN (0.44407664547757286))))==(((+ (t0.c60)), t0.c60, CASE WHEN t0.c60 THEN t0.c60 END)))) IS TRUE)  as count FROM t0 ORDER BY ((((CASE WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 END)OR(CAST(t0.c60 AS BLOB))))AND(t0.c60)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((+ (t0.c60)), (~ (t0.c60)), (t0.c60 IN (0.44407664547757286))))=(((+ (t0.c60)), t0.c60, CASE WHEN t0.c60 THEN t0.c60 END)))) ORDER BY ((((CASE WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 END)OR(CAST(t0.c60 AS BLOB))))AND(t0.c60));
SELECT ALL * FROM vt0, t0 WHERE (0X401f46c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((0x401f46c2 COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (0X401f46c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((0x401f46c2 COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (0X401f46c2 COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(vt0.c2 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c2 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(vt0.c2 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c2 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(vt0.c2 AS INTEGER) COLLATE BINARY);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((-718277160)) NOT BETWEEN ((rt0.c1)) AND ((t0.c60))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((-718277160)) NOT BETWEEN ((rt0.c1)) AND ((t0.c60))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((-718277160)) NOT BETWEEN ((rt0.c1)) AND ((t0.c60))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((-718277160)) NOT BETWEEN ((rt0.c1)) AND ((t0.c60))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((-718277160)) NOT BETWEEN ((rt0.c1)) AND ((t0.c60))) COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE ('1441218644') ORDER BY (('JT%R즾eb5븙')IS(((((t0.c60)AND(t0.c60)))OR(t0.c60)))), '0.6718977637260501'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1441218644') IS TRUE)  as count FROM t0 ORDER BY (('JT%R즾eb5븙')IS(((((t0.c60)AND(t0.c60)))OR(t0.c60)))), '0.6718977637260501'  NULLS LAST);
SELECT ALL * FROM t0 WHERE ('1441218644') ORDER BY (('JT%R즾eb5븙')IS(((((t0.c60)AND(t0.c60)))OR(t0.c60)))), '0.6718977637260501'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1441218644') IS TRUE)  as count FROM t0 ORDER BY (('JT%R즾eb5븙')IS(((((t0.c60)AND(t0.c60)))OR(t0.c60)))), '0.6718977637260501'  NULLS LAST);
SELECT ALL * FROM t0 WHERE ('1441218644') ORDER BY (('JT%R즾eb5븙')IS(((((t0.c60)AND(t0.c60)))OR(t0.c60)))), '0.6718977637260501'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 ELSE rt0.c2 END) BETWEEN (NULL) AND (CASE vt0.c2  WHEN x'' THEN rt0.c2 ELSE t0.c60 END)) RIGHT OUTER JOIN t0 ON (((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c2)), ((rt0.c1)>>(rt0.c2)), t0.c60)) AND ((vt0.c2, (t0.c60 IN ()), TRIM(vt0.c0)))) WHERE (((((vt0.c2) NOT BETWEEN (vt0.c2) AND (rt0.c0))) NOT BETWEEN ((- (rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC)))) ORDER BY (((+ (rt0.c2)))OR(((vt0.c0)<=(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (rt0.c0))) NOT BETWEEN ((- (rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 ELSE rt0.c2 END) BETWEEN (NULL) AND (CASE vt0.c2  WHEN x'' THEN rt0.c2 ELSE t0.c60 END)) RIGHT OUTER JOIN t0 ON (((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c2)), ((rt0.c1)>>(rt0.c2)), t0.c60)) AND ((vt0.c2, (t0.c60 IN ()), TRIM(vt0.c0)))) ORDER BY (((+ (rt0.c2)))OR(((vt0.c0)<=(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 ELSE rt0.c2 END) BETWEEN (NULL) AND (CASE vt0.c2  WHEN x'' THEN rt0.c2 ELSE t0.c60 END)) RIGHT OUTER JOIN t0 ON (((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c2)), ((rt0.c1)>>(rt0.c2)), t0.c60)) AND ((vt0.c2, (t0.c60 IN ()), TRIM(vt0.c0)))) WHERE (((((vt0.c2) NOT BETWEEN (vt0.c2) AND (rt0.c0))) NOT BETWEEN ((- (rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC)))) ORDER BY (((+ (rt0.c2)))OR(((vt0.c0)<=(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (rt0.c0))) NOT BETWEEN ((- (rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 ELSE rt0.c2 END) BETWEEN (NULL) AND (CASE vt0.c2  WHEN x'' THEN rt0.c2 ELSE t0.c60 END)) RIGHT OUTER JOIN t0 ON (((rt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c2)), ((rt0.c1)>>(rt0.c2)), t0.c60)) AND ((vt0.c2, (t0.c60 IN ()), TRIM(vt0.c0)))) ORDER BY (((+ (rt0.c2)))OR(((vt0.c0)<=(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((((NULL)OR(NULL)))AND(t0.c60)))+(CAST(t0.c60 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(NULL)))AND(t0.c60)))+(CAST(t0.c60 AS BLOB)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((NULL)OR(NULL)))AND(t0.c60)))+(CAST(t0.c60 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(NULL)))AND(t0.c60)))+(CAST(t0.c60 AS BLOB)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((NULL)OR(NULL)))AND(t0.c60)))+(CAST(t0.c60 AS BLOB))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c1) BETWEEN (t0.c60) AND (vt0.c1)) COLLATE RTRIM WHERE ((((t0.c60, vt0.c2, vt0.c2)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN t0.c60 WHEN vt0.c2 THEN t0.c60 WHEN vt0.c2 THEN t0.c60 ELSE vt0.c0 END, ((((((((t0.c60)OR(t0.c60)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)), vt0.c0 COLLATE NOCASE)) AND ((t0.c60 COLLATE BINARY, (vt0.c1 IN (vt0.c0, t0.c60)), ((vt0.c2)+(t0.c60)))))) ORDER BY CAST(((vt0.c0)-(NULL)) AS INTEGER)  NULLS FIRST, (~ (CASE vt0.c2  WHEN x'' THEN t0.c60 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c60, vt0.c2, vt0.c2)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN t0.c60 WHEN vt0.c2 THEN t0.c60 WHEN vt0.c2 THEN t0.c60 ELSE vt0.c0 END, ((((((((t0.c60)OR(t0.c60)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)), vt0.c0 COLLATE NOCASE)) AND ((t0.c60 COLLATE BINARY, (vt0.c1 IN (vt0.c0, t0.c60)), ((vt0.c2)+(t0.c60)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c1) BETWEEN (t0.c60) AND (vt0.c1)) COLLATE RTRIM ORDER BY CAST(((vt0.c0)-(NULL)) AS INTEGER)  NULLS FIRST, (~ (CASE vt0.c2  WHEN x'' THEN t0.c60 END))  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c1) BETWEEN (t0.c60) AND (vt0.c1)) COLLATE RTRIM WHERE ((((t0.c60, vt0.c2, vt0.c2)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN t0.c60 WHEN vt0.c2 THEN t0.c60 WHEN vt0.c2 THEN t0.c60 ELSE vt0.c0 END, ((((((((t0.c60)OR(t0.c60)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)), vt0.c0 COLLATE NOCASE)) AND ((t0.c60 COLLATE BINARY, (vt0.c1 IN (vt0.c0, t0.c60)), ((vt0.c2)+(t0.c60)))))) ORDER BY CAST(((vt0.c0)-(NULL)) AS INTEGER)  NULLS FIRST, (~ (CASE vt0.c2  WHEN x'' THEN t0.c60 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c60, vt0.c2, vt0.c2)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN t0.c60 WHEN vt0.c2 THEN t0.c60 WHEN vt0.c2 THEN t0.c60 ELSE vt0.c0 END, ((((((((t0.c60)OR(t0.c60)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)), vt0.c0 COLLATE NOCASE)) AND ((t0.c60 COLLATE BINARY, (vt0.c1 IN (vt0.c0, t0.c60)), ((vt0.c2)+(t0.c60)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c1) BETWEEN (t0.c60) AND (vt0.c1)) COLLATE RTRIM ORDER BY CAST(((vt0.c0)-(NULL)) AS INTEGER)  NULLS FIRST, (~ (CASE vt0.c2  WHEN x'' THEN t0.c60 END))  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c1) BETWEEN (t0.c60) AND (vt0.c1)) COLLATE RTRIM WHERE ((((t0.c60, vt0.c2, vt0.c2)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN t0.c60 WHEN vt0.c2 THEN t0.c60 WHEN vt0.c2 THEN t0.c60 ELSE vt0.c0 END, ((((((((t0.c60)OR(t0.c60)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)), vt0.c0 COLLATE NOCASE)) AND ((t0.c60 COLLATE BINARY, (vt0.c1 IN (vt0.c0, t0.c60)), ((vt0.c2)+(t0.c60)))))) ORDER BY CAST(((vt0.c0)-(NULL)) AS INTEGER)  NULLS FIRST, (~ (CASE vt0.c2  WHEN x'' THEN t0.c60 END))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c0 AS REAL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL)) ISNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c0 AS REAL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL)) ISNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c0 AS REAL)) ISNULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((- (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((- (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (NULL)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (- ((- (rt0.c2)))) WHERE (NULL) ORDER BY CAST(NULL COLLATE RTRIM AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (- ((- (rt0.c2)))) ORDER BY CAST(NULL COLLATE RTRIM AS TEXT) ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (- ((- (rt0.c2)))) WHERE (NULL) ORDER BY CAST(NULL COLLATE RTRIM AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (- ((- (rt0.c2)))) ORDER BY CAST(NULL COLLATE RTRIM AS TEXT) ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (- ((- (rt0.c2)))) WHERE (NULL) ORDER BY CAST(NULL COLLATE RTRIM AS TEXT) ASC;
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CAST(rt0.c2 AS BLOB))&(UNLIKELY(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB))&(UNLIKELY(rt0.c2)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CAST(rt0.c2 AS BLOB))&(UNLIKELY(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB))&(UNLIKELY(rt0.c2)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CAST(rt0.c2 AS BLOB))&(UNLIKELY(rt0.c2))));
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c60 IN ((t0.c60 IN ())))) ORDER BY (((json_object(t0.c60, t0.c60)))<((((t0.c60) BETWEEN (t0.c60) AND (t0.c60)))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c60 IN ((t0.c60 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((json_object(t0.c60, t0.c60)))<((((t0.c60) BETWEEN (t0.c60) AND (t0.c60))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c60 IN ((t0.c60 IN ())))) ORDER BY (((json_object(t0.c60, t0.c60)))<((((t0.c60) BETWEEN (t0.c60) AND (t0.c60)))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c60 IN ((t0.c60 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((json_object(t0.c60, t0.c60)))<((((t0.c60) BETWEEN (t0.c60) AND (t0.c60))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((((rt0.c2) IS FALSE))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) DESC  NULLS LAST, (((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2) IS FALSE))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) DESC  NULLS LAST, (((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((((rt0.c2) IS FALSE))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) DESC  NULLS LAST, (((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2) IS FALSE))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) DESC  NULLS LAST, (((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((((rt0.c2) IS FALSE))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) DESC  NULLS LAST, (((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN ('P/') AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0) NOT BETWEEN ('P/') AND (vt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN ('P/') AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0) NOT BETWEEN ('P/') AND (vt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN ('P/') AND (vt0.c2)))));
SELECT COUNT(*) FROM rt0, t0 NOT INDEXED WHERE ((((rt0.c2 IN ()))IS NOT((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))IS NOT((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 NOT INDEXED WHERE ((((rt0.c2 IN ()))IS NOT((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))IS NOT((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 NOT INDEXED WHERE ((((rt0.c2 IN ()))IS NOT((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c60)) NOT BETWEEN ((((((vt0.c2)AND(vt0.c0)))OR(t0.c60)))) AND ((((vt0.c1)IS('z''.tNd')))))) ORDER BY (((vt0.c2) NOT BETWEEN (vt0.c2) AND (NULL)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60)) NOT BETWEEN ((((((vt0.c2)AND(vt0.c0)))OR(t0.c60)))) AND ((((vt0.c1)IS('z''.tNd')))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c2) NOT BETWEEN (vt0.c2) AND (NULL)) IN ()) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c60)) NOT BETWEEN ((((((vt0.c2)AND(vt0.c0)))OR(t0.c60)))) AND ((((vt0.c1)IS('z''.tNd')))))) ORDER BY (((vt0.c2) NOT BETWEEN (vt0.c2) AND (NULL)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60)) NOT BETWEEN ((((((vt0.c2)AND(vt0.c0)))OR(t0.c60)))) AND ((((vt0.c1)IS('z''.tNd')))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c2) NOT BETWEEN (vt0.c2) AND (NULL)) IN ()) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c60)) NOT BETWEEN ((((((vt0.c2)AND(vt0.c0)))OR(t0.c60)))) AND ((((vt0.c1)IS('z''.tNd')))))) ORDER BY (((vt0.c2) NOT BETWEEN (vt0.c2) AND (NULL)) IN ()) ASC;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((CAST(vt0.c0 AS NUMERIC))==((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))=((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((CAST(vt0.c0 AS NUMERIC))==((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))=((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((CAST(vt0.c0 AS NUMERIC))==((rt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c2))) ORDER BY LTRIM(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY LTRIM(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c2))) ORDER BY LTRIM(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY LTRIM(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c2))) ORDER BY LTRIM(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)));
SELECT * FROM rt0, vt0 WHERE (CHAR(NULL)) ORDER BY ((CAST(vt0.c1 AS REAL)) IS TRUE), ((CAST(vt0.c1 AS TEXT))<=(((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)))) DESC  NULLS LAST, CAST(CASE WHEN rt0.c1 THEN vt0.c2 WHEN rt0.c2 THEN 0.36939552983737634 WHEN rt0.c1 THEN rt0.c1 END AS BLOB);
SELECT SUM(count) FROM (SELECT ((CHAR(NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c1 AS REAL)) IS TRUE), ((CAST(vt0.c1 AS TEXT))<=(((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)))) DESC  NULLS LAST, CAST(CASE WHEN rt0.c1 THEN vt0.c2 WHEN rt0.c2 THEN 0.36939552983737634 WHEN rt0.c1 THEN rt0.c1 END AS BLOB));
SELECT * FROM rt0, vt0 WHERE (CHAR(NULL)) ORDER BY ((CAST(vt0.c1 AS REAL)) IS TRUE), ((CAST(vt0.c1 AS TEXT))<=(((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)))) DESC  NULLS LAST, CAST(CASE WHEN rt0.c1 THEN vt0.c2 WHEN rt0.c2 THEN 0.36939552983737634 WHEN rt0.c1 THEN rt0.c1 END AS BLOB);
SELECT SUM(count) FROM (SELECT ((CHAR(NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c1 AS REAL)) IS TRUE), ((CAST(vt0.c1 AS TEXT))<=(((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)))) DESC  NULLS LAST, CAST(CASE WHEN rt0.c1 THEN vt0.c2 WHEN rt0.c2 THEN 0.36939552983737634 WHEN rt0.c1 THEN rt0.c1 END AS BLOB));
SELECT * FROM rt0, vt0 WHERE (CHAR(NULL)) ORDER BY ((CAST(vt0.c1 AS REAL)) IS TRUE), ((CAST(vt0.c1 AS TEXT))<=(((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)))) DESC  NULLS LAST, CAST(CASE WHEN rt0.c1 THEN vt0.c2 WHEN rt0.c2 THEN 0.36939552983737634 WHEN rt0.c1 THEN rt0.c1 END AS BLOB);
SELECT * FROM vt0 WHERE ((NOT ((((NULL)) BETWEEN ((0.4239653977098039)) AND ((vt0.c0)))))) ORDER BY ((vt0.c2)>=(x'e3ad'))  NULLS FIRST, '-1591624896' ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((((NULL)) BETWEEN ((0.4239653977098039)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2)>=(x'e3ad'))  NULLS FIRST, '-1591624896' ASC);
SELECT * FROM vt0 WHERE ((NOT ((((NULL)) BETWEEN ((0.4239653977098039)) AND ((vt0.c0)))))) ORDER BY ((vt0.c2)>=(x'e3ad'))  NULLS FIRST, '-1591624896' ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((((NULL)) BETWEEN ((0.4239653977098039)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2)>=(x'e3ad'))  NULLS FIRST, '-1591624896' ASC);
SELECT * FROM vt0 WHERE ((NOT ((((NULL)) BETWEEN ((0.4239653977098039)) AND ((vt0.c0)))))) ORDER BY ((vt0.c2)>=(x'e3ad'))  NULLS FIRST, '-1591624896' ASC;
SELECT COUNT(*) FROM t0 WHERE ((TIME(t0.c60, t0.c60, t0.c60, t0.c60, t0.c60) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TIME(t0.c60, t0.c60, t0.c60, t0.c60, t0.c60) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((TIME(t0.c60, t0.c60, t0.c60, t0.c60, t0.c60) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TIME(t0.c60, t0.c60, t0.c60, t0.c60, t0.c60) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((TIME(t0.c60, t0.c60, t0.c60, t0.c60, t0.c60) IN ()));
SELECT * FROM t0 WHERE ((((((((t0.c60)AND(t0.c60)))OR(t0.c60))))>=((((t0.c60)IS NOT(t0.c60))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c60)AND(t0.c60)))OR(t0.c60))))>=((((t0.c60)IS NOT(t0.c60)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((t0.c60)AND(t0.c60)))OR(t0.c60))))>=((((t0.c60)IS NOT(t0.c60))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c60)AND(t0.c60)))OR(t0.c60))))>=((((t0.c60)IS NOT(t0.c60)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((t0.c60)AND(t0.c60)))OR(t0.c60))))>=((((t0.c60)IS NOT(t0.c60))))));
SELECT ALL * FROM rt0 WHERE ((UNLIKELY('屲Fq\[s	.醮]') IN ()));
SELECT SUM(count) FROM (SELECT (((UNLIKELY('屲Fq\[s	.醮]') IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((UNLIKELY('屲Fq\[s	.醮]') IN ()));
SELECT SUM(count) FROM (SELECT (((UNLIKELY('屲Fq\[s	.醮]') IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((UNLIKELY('屲Fq\[s	.醮]') IN ()));
SELECT * FROM vt0 CROSS JOIN rt0 ON (((vt0.c1 IN (rt0.c1, vt0.c0))) IS TRUE) INNER JOIN t0 ON ((t0.c60) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM WHERE ((('8S')AND(('1406424684' IN (vt0.c1, rt0.c0))))) ORDER BY (rt0.c2 COLLATE NOCASE IN (((rt0.c0) BETWEEN (t0.c60) AND (vt0.c2)), (t0.c60 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('8S')AND(('1406424684' IN (vt0.c1, rt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((vt0.c1 IN (rt0.c1, vt0.c0))) IS TRUE) INNER JOIN t0 ON ((t0.c60) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM ORDER BY (rt0.c2 COLLATE NOCASE IN (((rt0.c0) BETWEEN (t0.c60) AND (vt0.c2)), (t0.c60 IN ())))  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt0 ON (((vt0.c1 IN (rt0.c1, vt0.c0))) IS TRUE) INNER JOIN t0 ON ((t0.c60) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM WHERE ((('8S')AND(('1406424684' IN (vt0.c1, rt0.c0))))) ORDER BY (rt0.c2 COLLATE NOCASE IN (((rt0.c0) BETWEEN (t0.c60) AND (vt0.c2)), (t0.c60 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('8S')AND(('1406424684' IN (vt0.c1, rt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((vt0.c1 IN (rt0.c1, vt0.c0))) IS TRUE) INNER JOIN t0 ON ((t0.c60) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM ORDER BY (rt0.c2 COLLATE NOCASE IN (((rt0.c0) BETWEEN (t0.c60) AND (vt0.c2)), (t0.c60 IN ())))  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt0 ON (((vt0.c1 IN (rt0.c1, vt0.c0))) IS TRUE) INNER JOIN t0 ON ((t0.c60) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM WHERE ((('8S')AND(('1406424684' IN (vt0.c1, rt0.c0))))) ORDER BY (rt0.c2 COLLATE NOCASE IN (((rt0.c0) BETWEEN (t0.c60) AND (vt0.c2)), (t0.c60 IN ())))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (INSTR(vt0.c0 COLLATE BINARY, ((t0.c60)OR(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((INSTR(vt0.c0 COLLATE BINARY, ((t0.c60)OR(vt0.c2)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (INSTR(vt0.c0 COLLATE BINARY, ((t0.c60)OR(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((INSTR(vt0.c0 COLLATE BINARY, ((t0.c60)OR(vt0.c2)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (INSTR(vt0.c0 COLLATE BINARY, ((t0.c60)OR(vt0.c2))));
SELECT COUNT(*) FROM t0 WHERE (((NULLIF(DISTINCT t0.c60, t0.c60))||((t0.c60 IN ())))) ORDER BY ((STRFTIME(t0.c60, t0.c60, t0.c60))+(CASE t0.c60  WHEN t0.c60 THEN t0.c60 END)) DESC, t0.c60;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT t0.c60, t0.c60))||((t0.c60 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((STRFTIME(t0.c60, t0.c60, t0.c60))+(CASE t0.c60  WHEN t0.c60 THEN t0.c60 END)) DESC, t0.c60);
SELECT COUNT(*) FROM t0 WHERE (((NULLIF(DISTINCT t0.c60, t0.c60))||((t0.c60 IN ())))) ORDER BY ((STRFTIME(t0.c60, t0.c60, t0.c60))+(CASE t0.c60  WHEN t0.c60 THEN t0.c60 END)) DESC, t0.c60;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT t0.c60, t0.c60))||((t0.c60 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((STRFTIME(t0.c60, t0.c60, t0.c60))+(CASE t0.c60  WHEN t0.c60 THEN t0.c60 END)) DESC, t0.c60);
SELECT COUNT(*) FROM t0 WHERE (((NULLIF(DISTINCT t0.c60, t0.c60))||((t0.c60 IN ())))) ORDER BY ((STRFTIME(t0.c60, t0.c60, t0.c60))+(CASE t0.c60  WHEN t0.c60 THEN t0.c60 END)) DESC, t0.c60;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c1)<<(x'cfa4')) AS NUMERIC)) ORDER BY CAST((NOT (vt0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)<<(x'cfa4')) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((NOT (vt0.c0)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c1)<<(x'cfa4')) AS NUMERIC)) ORDER BY CAST((NOT (vt0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)<<(x'cfa4')) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((NOT (vt0.c0)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c1)<<(x'cfa4')) AS NUMERIC)) ORDER BY CAST((NOT (vt0.c0)) AS REAL)  NULLS FIRST;
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt0.c2)))AND(vt0.c0))) NOT BETWEEN (json_extract(vt0.c1, t0.c60, vt0.c1, vt0.c0)) AND (CASE WHEN t0.c60 THEN vt0.c1 ELSE 0.5951712913661631 END)) WHERE ((~ (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt0.c2)))AND(vt0.c0))) NOT BETWEEN (json_extract(vt0.c1, t0.c60, vt0.c1, vt0.c0)) AND (CASE WHEN t0.c60 THEN vt0.c1 ELSE 0.5951712913661631 END)));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt0.c2)))AND(vt0.c0))) NOT BETWEEN (json_extract(vt0.c1, t0.c60, vt0.c1, vt0.c0)) AND (CASE WHEN t0.c60 THEN vt0.c1 ELSE 0.5951712913661631 END)) WHERE ((~ (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt0.c2)))AND(vt0.c0))) NOT BETWEEN (json_extract(vt0.c1, t0.c60, vt0.c1, vt0.c0)) AND (CASE WHEN t0.c60 THEN vt0.c1 ELSE 0.5951712913661631 END)));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt0.c2)))AND(vt0.c0))) NOT BETWEEN (json_extract(vt0.c1, t0.c60, vt0.c1, vt0.c0)) AND (CASE WHEN t0.c60 THEN vt0.c1 ELSE 0.5951712913661631 END)) WHERE ((~ (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))));
SELECT * FROM vt0, t0 WHERE ((- (((vt0.c0)IS NOT(t0.c60))))) ORDER BY (((vt0.c1, x'', vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((UPPER(t0.c60), ((x'') NOTNULL), (vt0.c0 IN ()), (- (vt0.c2)), (- (vt0.c2)))) AND (('1295056588', CAST(vt0.c2 AS TEXT), vt0.c0, (((((((('-251277411')OR(t0.c60)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)), (~ (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)IS NOT(t0.c60))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c1, x'', vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((UPPER(t0.c60), ((x'') NOTNULL), (vt0.c0 IN ()), (- (vt0.c2)), (- (vt0.c2)))) AND (('1295056588', CAST(vt0.c2 AS TEXT), vt0.c0, (((((((('-251277411')OR(t0.c60)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)), (~ (vt0.c2))))));
SELECT * FROM vt0, t0 WHERE ((- (((vt0.c0)IS NOT(t0.c60))))) ORDER BY (((vt0.c1, x'', vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((UPPER(t0.c60), ((x'') NOTNULL), (vt0.c0 IN ()), (- (vt0.c2)), (- (vt0.c2)))) AND (('1295056588', CAST(vt0.c2 AS TEXT), vt0.c0, (((((((('-251277411')OR(t0.c60)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)), (~ (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)IS NOT(t0.c60))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c1, x'', vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((UPPER(t0.c60), ((x'') NOTNULL), (vt0.c0 IN ()), (- (vt0.c2)), (- (vt0.c2)))) AND (('1295056588', CAST(vt0.c2 AS TEXT), vt0.c0, (((((((('-251277411')OR(t0.c60)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)), (~ (vt0.c2))))));
SELECT * FROM vt0, t0 WHERE ((- (((vt0.c0)IS NOT(t0.c60))))) ORDER BY (((vt0.c1, x'', vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((UPPER(t0.c60), ((x'') NOTNULL), (vt0.c0 IN ()), (- (vt0.c2)), (- (vt0.c2)))) AND (('1295056588', CAST(vt0.c2 AS TEXT), vt0.c0, (((((((('-251277411')OR(t0.c60)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)), (~ (vt0.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(CAST(rt0.c1 AS INTEGER) AS REAL)) ORDER BY ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))>=(((rt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS INTEGER) AS REAL)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))>=(((rt0.c1) ISNULL))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(CAST(rt0.c1 AS INTEGER) AS REAL)) ORDER BY ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))>=(((rt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS INTEGER) AS REAL)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))>=(((rt0.c1) ISNULL))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(CAST(rt0.c1 AS INTEGER) AS REAL)) ORDER BY ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))>=(((rt0.c1) ISNULL)));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) NOTNULL)) ISNULL) WHERE ((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((t0.c60))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND(((rt0.c0)||(vt0.c1)))))AND(((t0.c60) IS TRUE))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((t0.c60))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND(((rt0.c0)||(vt0.c1)))))AND(((t0.c60) IS TRUE))))AND(NULL))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) NOTNULL)) ISNULL));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) NOTNULL)) ISNULL) WHERE ((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((t0.c60))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND(((rt0.c0)||(vt0.c1)))))AND(((t0.c60) IS TRUE))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((t0.c60))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND(((rt0.c0)||(vt0.c1)))))AND(((t0.c60) IS TRUE))))AND(NULL))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) NOTNULL)) ISNULL));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) NOTNULL)) ISNULL) WHERE ((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((t0.c60))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND(((rt0.c0)||(vt0.c1)))))AND(((t0.c60) IS TRUE))))AND(NULL)));
SELECT ALL * FROM rt0 WHERE (CAST(LENGTH(rt0.c1) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(LENGTH(rt0.c1) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(LENGTH(rt0.c1) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(LENGTH(rt0.c1) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(LENGTH(rt0.c1) AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (CAST((((x'', rt0.c0, rt0.c0))<((rt0.c0, rt0.c0, rt0.c0))) AS INTEGER)) ORDER BY ((GLOB(rt0.c0, rt0.c2)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((x'', rt0.c0, rt0.c0))<((rt0.c0, rt0.c0, rt0.c0))) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((GLOB(rt0.c0, rt0.c2)) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((x'', rt0.c0, rt0.c0))<((rt0.c0, rt0.c0, rt0.c0))) AS INTEGER)) ORDER BY ((GLOB(rt0.c0, rt0.c2)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((x'', rt0.c0, rt0.c0))<((rt0.c0, rt0.c0, rt0.c0))) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((GLOB(rt0.c0, rt0.c2)) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((x'', rt0.c0, rt0.c0))<((rt0.c0, rt0.c0, rt0.c0))) AS INTEGER)) ORDER BY ((GLOB(rt0.c0, rt0.c2)) IS FALSE)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST((((t0.c60, t0.c60, t0.c60))=((x'', t0.c60, t0.c60))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c60, t0.c60, t0.c60))==((x'', t0.c60, t0.c60))) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((((t0.c60, t0.c60, t0.c60))=((x'', t0.c60, t0.c60))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c60, t0.c60, t0.c60))==((x'', t0.c60, t0.c60))) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((((t0.c60, t0.c60, t0.c60))=((x'', t0.c60, t0.c60))) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (((t0.c60))<=((t0.c60)))  WHEN t0.c60 COLLATE BINARY THEN ((((t0.c60)AND(t0.c60)))AND(t0.c60)) END) ORDER BY ((t0.c60)%(t0.c60)) COLLATE BINARY  NULLS LAST, ((t0.c60) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c60))<=((t0.c60)))  WHEN t0.c60 COLLATE BINARY THEN ((((t0.c60)AND(t0.c60)))AND(t0.c60)) END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c60)%(t0.c60)) COLLATE BINARY  NULLS LAST, ((t0.c60) ISNULL));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (((t0.c60))<=((t0.c60)))  WHEN t0.c60 COLLATE BINARY THEN ((((t0.c60)AND(t0.c60)))AND(t0.c60)) END) ORDER BY ((t0.c60)%(t0.c60)) COLLATE BINARY  NULLS LAST, ((t0.c60) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c60))<=((t0.c60)))  WHEN t0.c60 COLLATE BINARY THEN ((((t0.c60)AND(t0.c60)))AND(t0.c60)) END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c60)%(t0.c60)) COLLATE BINARY  NULLS LAST, ((t0.c60) ISNULL));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (((t0.c60))<=((t0.c60)))  WHEN t0.c60 COLLATE BINARY THEN ((((t0.c60)AND(t0.c60)))AND(t0.c60)) END) ORDER BY ((t0.c60)%(t0.c60)) COLLATE BINARY  NULLS LAST, ((t0.c60) ISNULL);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON -66506517 WHERE (((((vt0.c0)>>(vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (RTRIM(vt0.c2)))) ORDER BY CASE t0.c60  WHEN ((vt0.c1) NOT BETWEEN (t0.c60) AND (vt0.c1)) THEN ((vt0.c1) IS FALSE) WHEN vt0.c1 THEN (((vt0.c2))>((t0.c60))) WHEN vt0.c1 COLLATE NOCASE THEN NULL END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (RTRIM(vt0.c2)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON -66506517 ORDER BY CASE t0.c60  WHEN ((vt0.c1) NOT BETWEEN (t0.c60) AND (vt0.c1)) THEN ((vt0.c1) IS FALSE) WHEN vt0.c1 THEN (((vt0.c2))>((t0.c60))) WHEN vt0.c1 COLLATE NOCASE THEN NULL END);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON -66506517 WHERE (((((vt0.c0)>>(vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (RTRIM(vt0.c2)))) ORDER BY CASE t0.c60  WHEN ((vt0.c1) NOT BETWEEN (t0.c60) AND (vt0.c1)) THEN ((vt0.c1) IS FALSE) WHEN vt0.c1 THEN (((vt0.c2))>((t0.c60))) WHEN vt0.c1 COLLATE NOCASE THEN NULL END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (RTRIM(vt0.c2)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON -66506517 ORDER BY CASE t0.c60  WHEN ((vt0.c1) NOT BETWEEN (t0.c60) AND (vt0.c1)) THEN ((vt0.c1) IS FALSE) WHEN vt0.c1 THEN (((vt0.c2))>((t0.c60))) WHEN vt0.c1 COLLATE NOCASE THEN NULL END);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON -66506517 WHERE (((((vt0.c0)>>(vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (RTRIM(vt0.c2)))) ORDER BY CASE t0.c60  WHEN ((vt0.c1) NOT BETWEEN (t0.c60) AND (vt0.c1)) THEN ((vt0.c1) IS FALSE) WHEN vt0.c1 THEN (((vt0.c2))>((t0.c60))) WHEN vt0.c1 COLLATE NOCASE THEN NULL END;
SELECT ALL * FROM rt0, vt0, t0 WHERE (LENGTH((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((LENGTH((rt0.c0 IN ()))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (LENGTH((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((LENGTH((rt0.c0 IN ()))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (LENGTH((rt0.c0 IN ())));
SELECT * FROM rt0, t0 WHERE (CAST((((rt0.c0))>=((t0.c60))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0))>=((t0.c60))) AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST((((rt0.c0))>=((t0.c60))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0))>=((t0.c60))) AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST((((rt0.c0))>=((t0.c60))) AS REAL));
SELECT * FROM vt0, t0, rt0 WHERE (LIKELY(DISTINCT ((rt0.c2) ISNULL))) ORDER BY ((((t0.c60) BETWEEN (rt0.c2) AND (rt0.c0)))||((rt0.c0 IN ()))) DESC  NULLS FIRST, ((vt0.c1) NOT BETWEEN (t0.c60) AND (rt0.c2)) COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((rt0.c2) ISNULL))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((t0.c60) BETWEEN (rt0.c2) AND (rt0.c0)))||((rt0.c0 IN ()))) DESC  NULLS FIRST, ((vt0.c1) NOT BETWEEN (t0.c60) AND (rt0.c2)) COLLATE NOCASE COLLATE BINARY);
SELECT * FROM vt0, t0, rt0 WHERE (LIKELY(DISTINCT ((rt0.c2) ISNULL))) ORDER BY ((((t0.c60) BETWEEN (rt0.c2) AND (rt0.c0)))||((rt0.c0 IN ()))) DESC  NULLS FIRST, ((vt0.c1) NOT BETWEEN (t0.c60) AND (rt0.c2)) COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((rt0.c2) ISNULL))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((t0.c60) BETWEEN (rt0.c2) AND (rt0.c0)))||((rt0.c0 IN ()))) DESC  NULLS FIRST, ((vt0.c1) NOT BETWEEN (t0.c60) AND (rt0.c2)) COLLATE NOCASE COLLATE BINARY);
SELECT * FROM vt0, t0, rt0 WHERE (LIKELY(DISTINCT ((rt0.c2) ISNULL))) ORDER BY ((((t0.c60) BETWEEN (rt0.c2) AND (rt0.c0)))||((rt0.c0 IN ()))) DESC  NULLS FIRST, ((vt0.c1) NOT BETWEEN (t0.c60) AND (rt0.c2)) COLLATE NOCASE COLLATE BINARY;
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((NOT (rt0.c0)) IN ()) INNER JOIN rt0 ON ((x'') BETWEEN ((((('-718277160')OR(t0.c60)))OR(vt0.c0))) AND (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE (((((rt0.c1)||(rt0.c0)))||(CAST(rt0.c2 AS NUMERIC)))) ORDER BY (('') IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)||(rt0.c0)))||(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((NOT (rt0.c0)) IN ()) INNER JOIN rt0 ON ((x'') BETWEEN ((((('-718277160')OR(t0.c60)))OR(vt0.c0))) AND (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY (('') IS TRUE) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((NOT (rt0.c0)) IN ()) INNER JOIN rt0 ON ((x'') BETWEEN ((((('-718277160')OR(t0.c60)))OR(vt0.c0))) AND (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE (((((rt0.c1)||(rt0.c0)))||(CAST(rt0.c2 AS NUMERIC)))) ORDER BY (('') IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)||(rt0.c0)))||(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((NOT (rt0.c0)) IN ()) INNER JOIN rt0 ON ((x'') BETWEEN ((((('-718277160')OR(t0.c60)))OR(vt0.c0))) AND (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY (('') IS TRUE) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((NOT (rt0.c0)) IN ()) INNER JOIN rt0 ON ((x'') BETWEEN ((((('-718277160')OR(t0.c60)))OR(vt0.c0))) AND (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE (((((rt0.c1)||(rt0.c0)))||(CAST(rt0.c2 AS NUMERIC)))) ORDER BY (('') IS TRUE) ASC;
SELECT * FROM t0 FULL OUTER JOIN rt0 ON (((((t0.c60))<>((vt0.c1)))) IS FALSE) CROSS JOIN vt0 ON (~ ((- (rt0.c0)))) WHERE ((((rt0.c2)) BETWEEN (((rt0.c0 IN ()))) AND ((t0.c60)))) ORDER BY CAST(((rt0.c1)+(vt0.c1)) AS NUMERIC), ((CAST(vt0.c1 AS REAL))OR(UNLIKELY(vt0.c2)))  NULLS LAST, ((CAST(rt0.c0 AS NUMERIC))=(CAST(rt0.c2 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((rt0.c0 IN ()))) AND ((t0.c60)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((t0.c60))!=((vt0.c1)))) IS FALSE) CROSS JOIN vt0 ON (~ ((- (rt0.c0)))) ORDER BY CAST(((rt0.c1)+(vt0.c1)) AS NUMERIC), ((CAST(vt0.c1 AS REAL))OR(UNLIKELY(vt0.c2)))  NULLS LAST, ((CAST(rt0.c0 AS NUMERIC))=(CAST(rt0.c2 AS INTEGER))) ASC);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON (((((t0.c60))<>((vt0.c1)))) IS FALSE) CROSS JOIN vt0 ON (~ ((- (rt0.c0)))) WHERE ((((rt0.c2)) BETWEEN (((rt0.c0 IN ()))) AND ((t0.c60)))) ORDER BY CAST(((rt0.c1)+(vt0.c1)) AS NUMERIC), ((CAST(vt0.c1 AS REAL))OR(UNLIKELY(vt0.c2)))  NULLS LAST, ((CAST(rt0.c0 AS NUMERIC))=(CAST(rt0.c2 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((rt0.c0 IN ()))) AND ((t0.c60)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((t0.c60))!=((vt0.c1)))) IS FALSE) CROSS JOIN vt0 ON (~ ((- (rt0.c0)))) ORDER BY CAST(((rt0.c1)+(vt0.c1)) AS NUMERIC), ((CAST(vt0.c1 AS REAL))OR(UNLIKELY(vt0.c2)))  NULLS LAST, ((CAST(rt0.c0 AS NUMERIC))=(CAST(rt0.c2 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c60) NOTNULL))AND(ABS(DISTINCT vt0.c0))))OR(vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c60) NOTNULL))AND(ABS(DISTINCT vt0.c0))))OR(vt0.c2))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c60) NOTNULL))AND(ABS(DISTINCT vt0.c0))))OR(vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c60) NOTNULL))AND(ABS(DISTINCT vt0.c0))))OR(vt0.c2))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c60) NOTNULL))AND(ABS(DISTINCT vt0.c0))))OR(vt0.c2)));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c2)LIKE('-611222105')) WHEN ((vt0.c0)<<(rt0.c1)) THEN UNLIKELY(DISTINCT vt0.c2) WHEN vt0.c1 THEN ((NULL) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE rt0.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c2)LIKE('-611222105')) WHEN ((vt0.c0)<<(rt0.c1)) THEN UNLIKELY(DISTINCT vt0.c2) WHEN vt0.c1 THEN ((NULL) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c2)LIKE('-611222105')) WHEN ((vt0.c0)<<(rt0.c1)) THEN UNLIKELY(DISTINCT vt0.c2) WHEN vt0.c1 THEN ((NULL) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE rt0.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c2)LIKE('-611222105')) WHEN ((vt0.c0)<<(rt0.c1)) THEN UNLIKELY(DISTINCT vt0.c2) WHEN vt0.c1 THEN ((NULL) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c2)LIKE('-611222105')) WHEN ((vt0.c0)<<(rt0.c1)) THEN UNLIKELY(DISTINCT vt0.c2) WHEN vt0.c1 THEN ((NULL) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE rt0.c2 COLLATE BINARY END);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE (NOT (vt0.c2))  WHEN ((vt0.c0)*(vt0.c0)) THEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)) END WHERE ((+ (((t0.c60)*(vt0.c1))))) ORDER BY HEX(t0.c60 COLLATE RTRIM) ASC  NULLS LAST, ((((t0.c60) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c60)*(vt0.c1))))) IS TRUE)  as count FROM t0 NOT INDEXED LEFT OUTER JOIN vt0 ON CASE (NOT (vt0.c2))  WHEN ((vt0.c0)*(vt0.c0)) THEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)) END ORDER BY HEX(t0.c60 COLLATE RTRIM) ASC  NULLS LAST, ((((t0.c60) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(CAST(vt0.c0 AS NUMERIC))) DESC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE (NOT (vt0.c2))  WHEN ((vt0.c0)*(vt0.c0)) THEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)) END WHERE ((+ (((t0.c60)*(vt0.c1))))) ORDER BY HEX(t0.c60 COLLATE RTRIM) ASC  NULLS LAST, ((((t0.c60) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c60)*(vt0.c1))))) IS TRUE)  as count FROM t0 NOT INDEXED LEFT OUTER JOIN vt0 ON CASE (NOT (vt0.c2))  WHEN ((vt0.c0)*(vt0.c0)) THEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)) END ORDER BY HEX(t0.c60 COLLATE RTRIM) ASC  NULLS LAST, ((((t0.c60) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(CAST(vt0.c0 AS NUMERIC))) DESC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE (NOT (vt0.c2))  WHEN ((vt0.c0)*(vt0.c0)) THEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)) END WHERE ((+ (((t0.c60)*(vt0.c1))))) ORDER BY HEX(t0.c60 COLLATE RTRIM) ASC  NULLS LAST, ((((t0.c60) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT * FROM vt0 WHERE ((('o4') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('o4') NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('o4') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('o4') NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('o4') NOT NULL));
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE WHEN SQLITE_VERSION() THEN ((rt0.c2) ISNULL) END) ORDER BY ((rt0.c1)>=((t0.c60 IN (rt0.c0, vt0.c2)))) ASC, NULL;
SELECT SUM(count) FROM (SELECT ((CASE WHEN SQLITE_VERSION() THEN ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((rt0.c1)>=((t0.c60 IN (rt0.c0, vt0.c2)))) ASC, NULL);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE WHEN SQLITE_VERSION() THEN ((rt0.c2) ISNULL) END) ORDER BY ((rt0.c1)>=((t0.c60 IN (rt0.c0, vt0.c2)))) ASC, NULL;
SELECT SUM(count) FROM (SELECT ((CASE WHEN SQLITE_VERSION() THEN ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((rt0.c1)>=((t0.c60 IN (rt0.c0, vt0.c2)))) ASC, NULL);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE WHEN SQLITE_VERSION() THEN ((rt0.c2) ISNULL) END) ORDER BY ((rt0.c1)>=((t0.c60 IN (rt0.c0, vt0.c2)))) ASC, NULL;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c1) ORDER BY ((TOTAL_CHANGES()) NOT NULL) ASC  NULLS LAST, (((rt0.c2) ISNULL) IN ((rt0.c2 IN (vt0.c2, rt0.c1)))), (~ (((rt0.c1)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((TOTAL_CHANGES()) NOT NULL) ASC  NULLS LAST, (((rt0.c2) ISNULL) IN ((rt0.c2 IN (vt0.c2, rt0.c1)))), (~ (((rt0.c1)>=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c1) ORDER BY ((TOTAL_CHANGES()) NOT NULL) ASC  NULLS LAST, (((rt0.c2) ISNULL) IN ((rt0.c2 IN (vt0.c2, rt0.c1)))), (~ (((rt0.c1)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((TOTAL_CHANGES()) NOT NULL) ASC  NULLS LAST, (((rt0.c2) ISNULL) IN ((rt0.c2 IN (vt0.c2, rt0.c1)))), (~ (((rt0.c1)>=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c1) ORDER BY ((TOTAL_CHANGES()) NOT NULL) ASC  NULLS LAST, (((rt0.c2) ISNULL) IN ((rt0.c2 IN (vt0.c2, rt0.c1)))), (~ (((rt0.c1)>=(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((t0.c60 IN ()) COLLATE RTRIM) ORDER BY LIKELY(vt0.c1 COLLATE RTRIM), ((((vt0.c0 COLLATE NOCASE)OR((vt0.c2 IN ()))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c60 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY LIKELY(vt0.c1 COLLATE RTRIM), ((((vt0.c0 COLLATE NOCASE)OR((vt0.c2 IN ()))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((t0.c60 IN ()) COLLATE RTRIM) ORDER BY LIKELY(vt0.c1 COLLATE RTRIM), ((((vt0.c0 COLLATE NOCASE)OR((vt0.c2 IN ()))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c60 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY LIKELY(vt0.c1 COLLATE RTRIM), ((((vt0.c0 COLLATE NOCASE)OR((vt0.c2 IN ()))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((t0.c60 IN ()) COLLATE RTRIM) ORDER BY LIKELY(vt0.c1 COLLATE RTRIM), ((((vt0.c0 COLLATE NOCASE)OR((vt0.c2 IN ()))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT * FROM vt0, t0, rt0 WHERE (((vt0.c0)-(rt0.c0)) COLLATE RTRIM) ORDER BY (NULLIF(rt0.c1, rt0.c0) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)-(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (NULLIF(rt0.c1, rt0.c0) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0, t0, rt0 WHERE (((vt0.c0)-(rt0.c0)) COLLATE RTRIM) ORDER BY (NULLIF(rt0.c1, rt0.c0) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)-(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (NULLIF(rt0.c1, rt0.c0) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0, t0, rt0 WHERE (((vt0.c0)-(rt0.c0)) COLLATE RTRIM) ORDER BY (NULLIF(rt0.c1, rt0.c0) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (0X4d2f3cbf) ORDER BY (((('Y')AND(t0.c60)))AND(vt0.c2)) COLLATE BINARY ASC  NULLS FIRST, vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X4d2f3cbf) IS TRUE)  as count FROM vt0, t0 ORDER BY (((('Y')AND(t0.c60)))AND(vt0.c2)) COLLATE BINARY ASC  NULLS FIRST, vt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (0X4d2f3cbf) ORDER BY (((('Y')AND(t0.c60)))AND(vt0.c2)) COLLATE BINARY ASC  NULLS FIRST, vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X4d2f3cbf) IS TRUE)  as count FROM vt0, t0 ORDER BY (((('Y')AND(t0.c60)))AND(vt0.c2)) COLLATE BINARY ASC  NULLS FIRST, vt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (0X4d2f3cbf) ORDER BY (((('Y')AND(t0.c60)))AND(vt0.c2)) COLLATE BINARY ASC  NULLS FIRST, vt0.c1 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(((rt0.c0)OR(rt0.c0)), 0.6361307709208166)) ORDER BY ('''Fx(+0''d' IN ());
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c0)OR(rt0.c0)), 0.6361307709208166)) IS TRUE)  as count FROM rt0 ORDER BY ('''Fx(+0''d' IN ()));
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(((rt0.c0)OR(rt0.c0)), 0.6361307709208166)) ORDER BY ('''Fx(+0''d' IN ());
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c0)OR(rt0.c0)), 0.6361307709208166)) IS TRUE)  as count FROM rt0 ORDER BY ('''Fx(+0''d' IN ()));
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(((rt0.c0)OR(rt0.c0)), 0.6361307709208166)) ORDER BY ('''Fx(+0''d' IN ());
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL)) BETWEEN ((((rt0.c1))=((rt0.c2)))) AND (CASE WHEN rt0.c0 THEN 0.5303525255985113 ELSE rt0.c1 END))) ORDER BY 6.66967603E8 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL)) BETWEEN ((((rt0.c1))=((rt0.c2)))) AND (CASE WHEN rt0.c0 THEN 0.5303525255985113 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY 6.66967603E8 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL)) BETWEEN ((((rt0.c1))=((rt0.c2)))) AND (CASE WHEN rt0.c0 THEN 0.5303525255985113 ELSE rt0.c1 END))) ORDER BY 6.66967603E8 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL)) BETWEEN ((((rt0.c1))=((rt0.c2)))) AND (CASE WHEN rt0.c0 THEN 0.5303525255985113 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY 6.66967603E8 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL)) BETWEEN ((((rt0.c1))=((rt0.c2)))) AND (CASE WHEN rt0.c0 THEN 0.5303525255985113 ELSE rt0.c1 END))) ORDER BY 6.66967603E8 ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN vt0 WHERE ((((TYPEOF(rt0.c0), (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), CAST(t0.c60 AS INTEGER), CASE WHEN vt0.c2 THEN rt0.c1 WHEN 0.7624427959842182 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c2 ELSE t0.c60 END, CAST(rt0.c1 AS TEXT)))>=((CAST(rt0.c0 AS NUMERIC), '', (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c2))), ((rt0.c2)+(t0.c60)), ((rt0.c2) BETWEEN (rt0.c0) AND (t0.c60)))))) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)) THEN ((rt0.c2)|('')) WHEN ('' IN (vt0.c2, rt0.c1)) THEN CASE vt0.c0  WHEN '' THEN rt0.c2 END WHEN ((t0.c60) IS FALSE) THEN LIKELY(rt0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((TYPEOF(rt0.c0), (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), CAST(t0.c60 AS INTEGER), CASE WHEN vt0.c2 THEN rt0.c1 WHEN 0.7624427959842182 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c2 ELSE t0.c60 END, CAST(rt0.c1 AS TEXT)))>=((CAST(rt0.c0 AS NUMERIC), '', (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c2))), ((rt0.c2)+(t0.c60)), ((rt0.c2) BETWEEN (rt0.c0) AND (t0.c60)))))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0 ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)) THEN ((rt0.c2)|('')) WHEN ('' IN (vt0.c2, rt0.c1)) THEN CASE vt0.c0  WHEN '' THEN rt0.c2 END WHEN ((t0.c60) IS FALSE) THEN LIKELY(rt0.c2) END  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN vt0 WHERE ((((TYPEOF(rt0.c0), (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), CAST(t0.c60 AS INTEGER), CASE WHEN vt0.c2 THEN rt0.c1 WHEN 0.7624427959842182 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c2 ELSE t0.c60 END, CAST(rt0.c1 AS TEXT)))>=((CAST(rt0.c0 AS NUMERIC), '', (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c2))), ((rt0.c2)+(t0.c60)), ((rt0.c2) BETWEEN (rt0.c0) AND (t0.c60)))))) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)) THEN ((rt0.c2)|('')) WHEN ('' IN (vt0.c2, rt0.c1)) THEN CASE vt0.c0  WHEN '' THEN rt0.c2 END WHEN ((t0.c60) IS FALSE) THEN LIKELY(rt0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((TYPEOF(rt0.c0), (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), CAST(t0.c60 AS INTEGER), CASE WHEN vt0.c2 THEN rt0.c1 WHEN 0.7624427959842182 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c2 ELSE t0.c60 END, CAST(rt0.c1 AS TEXT)))>=((CAST(rt0.c0 AS NUMERIC), '', (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c2))), ((rt0.c2)+(t0.c60)), ((rt0.c2) BETWEEN (rt0.c0) AND (t0.c60)))))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0 ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)) THEN ((rt0.c2)|('')) WHEN ('' IN (vt0.c2, rt0.c1)) THEN CASE vt0.c0  WHEN '' THEN rt0.c2 END WHEN ((t0.c60) IS FALSE) THEN LIKELY(rt0.c2) END  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN vt0 WHERE ((((TYPEOF(rt0.c0), (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), CAST(t0.c60 AS INTEGER), CASE WHEN vt0.c2 THEN rt0.c1 WHEN 0.7624427959842182 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c2 ELSE t0.c60 END, CAST(rt0.c1 AS TEXT)))>=((CAST(rt0.c0 AS NUMERIC), '', (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c2))), ((rt0.c2)+(t0.c60)), ((rt0.c2) BETWEEN (rt0.c0) AND (t0.c60)))))) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)) THEN ((rt0.c2)|('')) WHEN ('' IN (vt0.c2, rt0.c1)) THEN CASE vt0.c0  WHEN '' THEN rt0.c2 END WHEN ((t0.c60) IS FALSE) THEN LIKELY(rt0.c2) END  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((rt0.c0)>('>	ri')) AS TEXT)) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((t0.c60)GLOB(rt0.c1))) AND (vt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)>('>	ri')) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((t0.c60)GLOB(rt0.c1))) AND (vt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((rt0.c0)>('>	ri')) AS TEXT)) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((t0.c60)GLOB(rt0.c1))) AND (vt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)>('>	ri')) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((t0.c60)GLOB(rt0.c1))) AND (vt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((rt0.c0)>('>	ri')) AS TEXT)) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((t0.c60)GLOB(rt0.c1))) AND (vt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c2 AS INTEGER))AND(((rt0.c1) ISNULL))))AND(UNICODE(0.4502795111281651))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS INTEGER))AND(((rt0.c1) ISNULL))))AND(UNICODE(0.4502795111281651)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c2 AS INTEGER))AND(((rt0.c1) ISNULL))))AND(UNICODE(0.4502795111281651))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS INTEGER))AND(((rt0.c1) ISNULL))))AND(UNICODE(0.4502795111281651)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c2 AS INTEGER))AND(((rt0.c1) ISNULL))))AND(UNICODE(0.4502795111281651))));
SELECT * FROM t0 WHERE (NULL) ORDER BY t0.c60;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY t0.c60);
SELECT * FROM t0 WHERE (NULL) ORDER BY t0.c60;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY t0.c60);
SELECT * FROM t0 WHERE (NULL) ORDER BY t0.c60;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c60 IN (vt0.c1)))>=(LIKELY(DISTINCT vt0.c2)))) ORDER BY ((vt0.c1)%(CAST(vt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((((t0.c60 IN (vt0.c1)))>=(LIKELY(DISTINCT vt0.c2)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1)%(CAST(vt0.c2 AS INTEGER))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c60 IN (vt0.c1)))>=(LIKELY(DISTINCT vt0.c2)))) ORDER BY ((vt0.c1)%(CAST(vt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((((t0.c60 IN (vt0.c1)))>=(LIKELY(DISTINCT vt0.c2)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1)%(CAST(vt0.c2 AS INTEGER))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c60 IN (vt0.c1)))>=(LIKELY(DISTINCT vt0.c2)))) ORDER BY ((vt0.c1)%(CAST(vt0.c2 AS INTEGER)));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((rt0.c2, rt0.c1, vt0.c0)) BETWEEN ((((rt0.c2) IS FALSE), CAST(vt0.c0 AS BLOB), ((vt0.c0)>>(rt0.c0)))) AND ((((vt0.c1) BETWEEN (0.5507729880374221) AND (vt0.c2)), (((rt0.c0, rt0.c1, t0.c60, rt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c0, vt0.c2, vt0.c1, rt0.c0)) AND (('', t0.c60, vt0.c0, rt0.c2, rt0.c2))), CAST(vt0.c2 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c1, vt0.c0)) BETWEEN ((((rt0.c2) IS FALSE), CAST(vt0.c0 AS BLOB), ((vt0.c0)>>(rt0.c0)))) AND ((((vt0.c1) BETWEEN (0.5507729880374221) AND (vt0.c2)), (((rt0.c0, rt0.c1, t0.c60, rt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c0, vt0.c2, vt0.c1, rt0.c0)) AND (('', t0.c60, vt0.c0, rt0.c2, rt0.c2))), CAST(vt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((rt0.c2, rt0.c1, vt0.c0)) BETWEEN ((((rt0.c2) IS FALSE), CAST(vt0.c0 AS BLOB), ((vt0.c0)>>(rt0.c0)))) AND ((((vt0.c1) BETWEEN (0.5507729880374221) AND (vt0.c2)), (((rt0.c0, rt0.c1, t0.c60, rt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c0, vt0.c2, vt0.c1, rt0.c0)) AND (('', t0.c60, vt0.c0, rt0.c2, rt0.c2))), CAST(vt0.c2 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c1, vt0.c0)) BETWEEN ((((rt0.c2) IS FALSE), CAST(vt0.c0 AS BLOB), ((vt0.c0)>>(rt0.c0)))) AND ((((vt0.c1) BETWEEN (0.5507729880374221) AND (vt0.c2)), (((rt0.c0, rt0.c1, t0.c60, rt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c0, vt0.c2, vt0.c1, rt0.c0)) AND (('', t0.c60, vt0.c0, rt0.c2, rt0.c2))), CAST(vt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((rt0.c2, rt0.c1, vt0.c0)) BETWEEN ((((rt0.c2) IS FALSE), CAST(vt0.c0 AS BLOB), ((vt0.c0)>>(rt0.c0)))) AND ((((vt0.c1) BETWEEN (0.5507729880374221) AND (vt0.c2)), (((rt0.c0, rt0.c1, t0.c60, rt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c0, vt0.c2, vt0.c1, rt0.c0)) AND (('', t0.c60, vt0.c0, rt0.c2, rt0.c2))), CAST(vt0.c2 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(439476547 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(439476547 AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(439476547 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(439476547 AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(439476547 AS NUMERIC));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c60 COLLATE BINARY) BETWEEN ((((t0.c60)) BETWEEN ((2036185136)) AND ((t0.c60)))) AND (t0.c60 COLLATE NOCASE))) ORDER BY (((~ (t0.c60)))-((NOT (t0.c60)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c60 COLLATE BINARY) BETWEEN ((((t0.c60)) BETWEEN ((2036185136)) AND ((t0.c60)))) AND (t0.c60 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c60)))-((NOT (t0.c60)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c60 COLLATE BINARY) BETWEEN ((((t0.c60)) BETWEEN ((2036185136)) AND ((t0.c60)))) AND (t0.c60 COLLATE NOCASE))) ORDER BY (((~ (t0.c60)))-((NOT (t0.c60)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c60 COLLATE BINARY) BETWEEN ((((t0.c60)) BETWEEN ((2036185136)) AND ((t0.c60)))) AND (t0.c60 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c60)))-((NOT (t0.c60)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c60 COLLATE BINARY) BETWEEN ((((t0.c60)) BETWEEN ((2036185136)) AND ((t0.c60)))) AND (t0.c60 COLLATE NOCASE))) ORDER BY (((~ (t0.c60)))-((NOT (t0.c60)))) DESC;
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((vt0.c1 COLLATE RTRIM))==((((vt0.c2)<>(x''))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 COLLATE RTRIM))=((((vt0.c2)!=(x'')))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((vt0.c1 COLLATE RTRIM))==((((vt0.c2)<>(x''))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 COLLATE RTRIM))=((((vt0.c2)!=(x'')))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((vt0.c1 COLLATE RTRIM))==((((vt0.c2)<>(x''))))));
SELECT * FROM rt0 WHERE ('Kc') ORDER BY 0.4626101816951105 ASC;
SELECT SUM(count) FROM (SELECT ALL (('Kc') IS TRUE)  as count FROM rt0 ORDER BY 0.4626101816951105 ASC);
SELECT * FROM rt0 WHERE ('Kc') ORDER BY 0.4626101816951105 ASC;
SELECT SUM(count) FROM (SELECT ALL (('Kc') IS TRUE)  as count FROM rt0 ORDER BY 0.4626101816951105 ASC);
SELECT * FROM rt0 WHERE ('Kc') ORDER BY 0.4626101816951105 ASC;
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((vt0.c1)>>(rt0.c1)) AS INTEGER) LEFT OUTER JOIN rt0 ON rt0.c2 WHERE (((((vt0.c2) IS FALSE))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) IS FALSE))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((vt0.c1)>>(rt0.c1)) AS INTEGER) LEFT OUTER JOIN rt0 ON rt0.c2);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((vt0.c1)>>(rt0.c1)) AS INTEGER) LEFT OUTER JOIN rt0 ON rt0.c2 WHERE (((((vt0.c2) IS FALSE))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) IS FALSE))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((vt0.c1)>>(rt0.c1)) AS INTEGER) LEFT OUTER JOIN rt0 ON rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN (~ (rt0.c1)) END) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN (~ (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN (~ (rt0.c1)) END) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN (~ (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN (~ (rt0.c1)) END) ORDER BY NULL DESC;
SELECT * FROM t0, vt0, rt0 WHERE ((((((rt0.c1))=((t0.c60))))IS(((vt0.c1) NOT BETWEEN (t0.c60) AND (0.5203308630108189))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))=((t0.c60))))IS(((vt0.c1) NOT BETWEEN (t0.c60) AND (0.5203308630108189))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY NULL);
SELECT * FROM t0, vt0, rt0 WHERE ((((((rt0.c1))=((t0.c60))))IS(((vt0.c1) NOT BETWEEN (t0.c60) AND (0.5203308630108189))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))=((t0.c60))))IS(((vt0.c1) NOT BETWEEN (t0.c60) AND (0.5203308630108189))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY NULL);
SELECT * FROM t0, vt0, rt0 WHERE ((((((rt0.c1))=((t0.c60))))IS(((vt0.c1) NOT BETWEEN (t0.c60) AND (0.5203308630108189))))) ORDER BY NULL;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((CASE WHEN vt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c60 THEN rt0.c1 END)|((- (rt0.c2))))) ORDER BY (((vt0.c1, ABS(t0.c60), ((rt0.c2) BETWEEN (NULL) AND (rt0.c0))))=((((((x'')OR(vt0.c0)))AND(vt0.c0)), rt0.c2, ((t0.c60) NOT BETWEEN (t0.c60) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c60 THEN rt0.c1 END)|((- (rt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((vt0.c1, ABS(t0.c60), ((rt0.c2) BETWEEN (NULL) AND (rt0.c0))))=((((((x'')OR(vt0.c0)))AND(vt0.c0)), rt0.c2, ((t0.c60) NOT BETWEEN (t0.c60) AND (rt0.c1))))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((CASE WHEN vt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c60 THEN rt0.c1 END)|((- (rt0.c2))))) ORDER BY (((vt0.c1, ABS(t0.c60), ((rt0.c2) BETWEEN (NULL) AND (rt0.c0))))=((((((x'')OR(vt0.c0)))AND(vt0.c0)), rt0.c2, ((t0.c60) NOT BETWEEN (t0.c60) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c60 THEN rt0.c1 END)|((- (rt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((vt0.c1, ABS(t0.c60), ((rt0.c2) BETWEEN (NULL) AND (rt0.c0))))=((((((x'')OR(vt0.c0)))AND(vt0.c0)), rt0.c2, ((t0.c60) NOT BETWEEN (t0.c60) AND (rt0.c1))))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((CASE WHEN vt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c60 THEN rt0.c1 END)|((- (rt0.c2))))) ORDER BY (((vt0.c1, ABS(t0.c60), ((rt0.c2) BETWEEN (NULL) AND (rt0.c0))))=((((((x'')OR(vt0.c0)))AND(vt0.c0)), rt0.c2, ((t0.c60) NOT BETWEEN (t0.c60) AND (rt0.c1)))));
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE ((~ (((vt0.c2)&(NULL))))) ORDER BY ((t0.c60 COLLATE RTRIM)>=(CAST(rt0.c2 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c2)&(NULL))))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt0 ORDER BY ((t0.c60 COLLATE RTRIM)>=(CAST(rt0.c2 AS INTEGER))) DESC);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE ((~ (((vt0.c2)&(NULL))))) ORDER BY ((t0.c60 COLLATE RTRIM)>=(CAST(rt0.c2 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c2)&(NULL))))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt0 ORDER BY ((t0.c60 COLLATE RTRIM)>=(CAST(rt0.c2 AS INTEGER))) DESC);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE ((~ (((vt0.c2)&(NULL))))) ORDER BY ((t0.c60 COLLATE RTRIM)>=(CAST(rt0.c2 AS INTEGER))) DESC;
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END)>((((('1Q')OR(vt0.c2)))AND(vt0.c1))))) ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c1 END)>((((('1Q')OR(vt0.c2)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c0))) IS FALSE)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END)>((((('1Q')OR(vt0.c2)))AND(vt0.c1))))) ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c1 END)>((((('1Q')OR(vt0.c2)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c0))) IS FALSE)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END)>((((('1Q')OR(vt0.c2)))AND(vt0.c1))))) ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((((((vt0.c1)OR(t0.c60)))OR(vt0.c1)))AND(t0.c60)))AND(vt0.c2)))*(((vt0.c2) BETWEEN (t0.c60) AND (vt0.c1)))) WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((t0.c60) NOT BETWEEN (vt0.c2) AND (0.15651980361339513))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((t0.c60) NOT BETWEEN (vt0.c2) AND (0.15651980361339513)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((((((vt0.c1)OR(t0.c60)))OR(vt0.c1)))AND(t0.c60)))AND(vt0.c2)))*(((vt0.c2) BETWEEN (t0.c60) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((((((vt0.c1)OR(t0.c60)))OR(vt0.c1)))AND(t0.c60)))AND(vt0.c2)))*(((vt0.c2) BETWEEN (t0.c60) AND (vt0.c1)))) WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((t0.c60) NOT BETWEEN (vt0.c2) AND (0.15651980361339513))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((t0.c60) NOT BETWEEN (vt0.c2) AND (0.15651980361339513)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((((((vt0.c1)OR(t0.c60)))OR(vt0.c1)))AND(t0.c60)))AND(vt0.c2)))*(((vt0.c2) BETWEEN (t0.c60) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((((((vt0.c1)OR(t0.c60)))OR(vt0.c1)))AND(t0.c60)))AND(vt0.c2)))*(((vt0.c2) BETWEEN (t0.c60) AND (vt0.c1)))) WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((t0.c60) NOT BETWEEN (vt0.c2) AND (0.15651980361339513))))));
SELECT ALL * FROM rt0, t0 WHERE (CASE (NOT (rt0.c0))  WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) THEN ((t0.c60)AND(t0.c60)) WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c0 IN ()) WHEN ((rt0.c1)>(x'')) THEN '\?_%9P' WHEN (((rt0.c2))=((t0.c60))) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) WHEN ((t0.c60)%(rt0.c0)) THEN x'4142' ELSE (NOT (rt0.c0)) END) ORDER BY GLOB((~ (t0.c60)), '1194725609' COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c0))  WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) THEN ((t0.c60)AND(t0.c60)) WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c0 IN ()) WHEN ((rt0.c1)>(x'')) THEN '\?_%9P' WHEN (((rt0.c2))==((t0.c60))) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) WHEN ((t0.c60)%(rt0.c0)) THEN x'4142' ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY GLOB((~ (t0.c60)), '1194725609' COLLATE NOCASE) ASC);
SELECT ALL * FROM rt0, t0 WHERE (CASE (NOT (rt0.c0))  WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) THEN ((t0.c60)AND(t0.c60)) WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c0 IN ()) WHEN ((rt0.c1)>(x'')) THEN '\?_%9P' WHEN (((rt0.c2))=((t0.c60))) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) WHEN ((t0.c60)%(rt0.c0)) THEN x'4142' ELSE (NOT (rt0.c0)) END) ORDER BY GLOB((~ (t0.c60)), '1194725609' COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c0))  WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) THEN ((t0.c60)AND(t0.c60)) WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c0 IN ()) WHEN ((rt0.c1)>(x'')) THEN '\?_%9P' WHEN (((rt0.c2))==((t0.c60))) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) WHEN ((t0.c60)%(rt0.c0)) THEN x'4142' ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY GLOB((~ (t0.c60)), '1194725609' COLLATE NOCASE) ASC);
SELECT ALL * FROM rt0, t0 WHERE (CASE (NOT (rt0.c0))  WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) THEN ((t0.c60)AND(t0.c60)) WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c0 IN ()) WHEN ((rt0.c1)>(x'')) THEN '\?_%9P' WHEN (((rt0.c2))=((t0.c60))) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) WHEN ((t0.c60)%(rt0.c0)) THEN x'4142' ELSE (NOT (rt0.c0)) END) ORDER BY GLOB((~ (t0.c60)), '1194725609' COLLATE NOCASE) ASC;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON CAST(CAST('' AS TEXT) AS BLOB) WHERE ((((rt0.c2) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) IS TRUE) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST(CAST('' AS TEXT) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON CAST(CAST('' AS TEXT) AS BLOB) WHERE ((((rt0.c2) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) IS TRUE) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST(CAST('' AS TEXT) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON CAST(CAST('' AS TEXT) AS BLOB) WHERE ((((rt0.c2) IS TRUE) IN ()));
SELECT * FROM t0, rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c2 END) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c2 END) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 END);
SELECT * FROM rt0 INNER JOIN t0 ON HEX((((rt0.c2)) BETWEEN ((t0.c60)) AND ((rt0.c2)))) WHERE (x'') ORDER BY ((((GLOB(rt0.c1, rt0.c0))OR(CAST(rt0.c1 AS TEXT))))OR((~ (rt0.c2)))), COALESCE(rt0.c2, (((rt0.c0, rt0.c1, t0.c60)) BETWEEN ((rt0.c1, rt0.c0, 0.26449404474114957)) AND ((0x31cf8d60, rt0.c2, rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 INNER JOIN t0 ON HEX((((rt0.c2)) BETWEEN ((t0.c60)) AND ((rt0.c2)))) ORDER BY ((((GLOB(rt0.c1, rt0.c0))OR(CAST(rt0.c1 AS TEXT))))OR((~ (rt0.c2)))), COALESCE(rt0.c2, (((rt0.c0, rt0.c1, t0.c60)) BETWEEN ((rt0.c1, rt0.c0, 0.26449404474114957)) AND ((0x31cf8d60, rt0.c2, rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN t0 ON HEX((((rt0.c2)) BETWEEN ((t0.c60)) AND ((rt0.c2)))) WHERE (x'') ORDER BY ((((GLOB(rt0.c1, rt0.c0))OR(CAST(rt0.c1 AS TEXT))))OR((~ (rt0.c2)))), COALESCE(rt0.c2, (((rt0.c0, rt0.c1, t0.c60)) BETWEEN ((rt0.c1, rt0.c0, 0.26449404474114957)) AND ((0x31cf8d60, rt0.c2, rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 INNER JOIN t0 ON HEX((((rt0.c2)) BETWEEN ((t0.c60)) AND ((rt0.c2)))) ORDER BY ((((GLOB(rt0.c1, rt0.c0))OR(CAST(rt0.c1 AS TEXT))))OR((~ (rt0.c2)))), COALESCE(rt0.c2, (((rt0.c0, rt0.c1, t0.c60)) BETWEEN ((rt0.c1, rt0.c0, 0.26449404474114957)) AND ((0x31cf8d60, rt0.c2, rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN t0 ON HEX((((rt0.c2)) BETWEEN ((t0.c60)) AND ((rt0.c2)))) WHERE (x'') ORDER BY ((((GLOB(rt0.c1, rt0.c0))OR(CAST(rt0.c1 AS TEXT))))OR((~ (rt0.c2)))), COALESCE(rt0.c2, (((rt0.c0, rt0.c1, t0.c60)) BETWEEN ((rt0.c1, rt0.c0, 0.26449404474114957)) AND ((0x31cf8d60, rt0.c2, rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (x'3dff') ORDER BY (((vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1) BETWEEN (0.5069562011131253) AND (vt0.c0)), ((vt0.c0)||(vt0.c2)), CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END)) AND ((vt0.c1 COLLATE BINARY, CAST(0.8792184318796729 AS INTEGER), NULL)));
SELECT SUM(count) FROM (SELECT ALL ((x'3dff') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1) BETWEEN (0.5069562011131253) AND (vt0.c0)), ((vt0.c0)||(vt0.c2)), CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END)) AND ((vt0.c1 COLLATE BINARY, CAST(0.8792184318796729 AS INTEGER), NULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'3dff') ORDER BY (((vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1) BETWEEN (0.5069562011131253) AND (vt0.c0)), ((vt0.c0)||(vt0.c2)), CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END)) AND ((vt0.c1 COLLATE BINARY, CAST(0.8792184318796729 AS INTEGER), NULL)));
SELECT SUM(count) FROM (SELECT ALL ((x'3dff') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1) BETWEEN (0.5069562011131253) AND (vt0.c0)), ((vt0.c0)||(vt0.c2)), CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END)) AND ((vt0.c1 COLLATE BINARY, CAST(0.8792184318796729 AS INTEGER), NULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'3dff') ORDER BY (((vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1) BETWEEN (0.5069562011131253) AND (vt0.c0)), ((vt0.c0)||(vt0.c2)), CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END)) AND ((vt0.c1 COLLATE BINARY, CAST(0.8792184318796729 AS INTEGER), NULL)));
SELECT ALL * FROM vt0, rt0, t0 WHERE (((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END)=(((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END)==(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END)=(((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END)==(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END)=(((vt0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0, t0 WHERE (rt0.c2);
SELECT * FROM vt0 WHERE (((vt0.c2) IS FALSE) COLLATE NOCASE) ORDER BY (((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END))!=((((vt0.c0)-(vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c2) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END))<>((((vt0.c0)-(vt0.c1)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c2) IS FALSE) COLLATE NOCASE) ORDER BY (((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END))!=((((vt0.c0)-(vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c2) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END))<>((((vt0.c0)-(vt0.c1)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c2) IS FALSE) COLLATE NOCASE) ORDER BY (((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END))!=((((vt0.c0)-(vt0.c1)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS TEXT));
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1))) BETWEEN (json_valid(vt0.c0)) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c1))) BETWEEN (json_valid(vt0.c0)) AND (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1))) BETWEEN (json_valid(vt0.c0)) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c1))) BETWEEN (json_valid(vt0.c0)) AND (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1))) BETWEEN (json_valid(vt0.c0)) AND (vt0.c1)));
SELECT * FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c60))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (+ (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) WHERE (((((rt0.c0)/(rt0.c1)))LIKE(((rt0.c0) IS TRUE)))) ORDER BY (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c60 THEN rt0.c1 ELSE rt0.c1 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)/(rt0.c1)))LIKE(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (+ (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) ORDER BY (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c60 THEN rt0.c1 ELSE rt0.c1 END IN ()));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (+ (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) WHERE (((((rt0.c0)/(rt0.c1)))LIKE(((rt0.c0) IS TRUE)))) ORDER BY (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c60 THEN rt0.c1 ELSE rt0.c1 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)/(rt0.c1)))LIKE(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (+ (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) ORDER BY (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c60 THEN rt0.c1 ELSE rt0.c1 END IN ()));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (+ (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) WHERE (((((rt0.c0)/(rt0.c1)))LIKE(((rt0.c0) IS TRUE)))) ORDER BY (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c60 THEN rt0.c1 ELSE rt0.c1 END IN ());
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) ISNULL)) NOT NULL)) ORDER BY (NOT (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL)) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c1 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) ISNULL)) NOT NULL)) ORDER BY (NOT (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL)) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c1 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) ISNULL)) NOT NULL)) ORDER BY (NOT (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c1 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((t0.c60)>=(rt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN t0.c60 THEN rt0.c2 END) AND (0xffffffffbd82641d)) FULL OUTER JOIN t0 ON (- (((((((((rt0.c1)AND(NULL)))OR(t0.c60)))OR(vt0.c2)))OR(rt0.c2)))) WHERE (((((t0.c60)|(t0.c60)))<(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((t0.c60)|(t0.c60)))<(vt0.c1))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((t0.c60)>=(rt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN t0.c60 THEN rt0.c2 END) AND (0xffffffffbd82641d)) FULL OUTER JOIN t0 ON (- (((((((((rt0.c1)AND(NULL)))OR(t0.c60)))OR(vt0.c2)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((t0.c60)>=(rt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN t0.c60 THEN rt0.c2 END) AND (0xffffffffbd82641d)) FULL OUTER JOIN t0 ON (- (((((((((rt0.c1)AND(NULL)))OR(t0.c60)))OR(vt0.c2)))OR(rt0.c2)))) WHERE (((((t0.c60)|(t0.c60)))<(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((t0.c60)|(t0.c60)))<(vt0.c1))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((t0.c60)>=(rt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN t0.c60 THEN rt0.c2 END) AND (0xffffffffbd82641d)) FULL OUTER JOIN t0 ON (- (((((((((rt0.c1)AND(NULL)))OR(t0.c60)))OR(vt0.c2)))OR(rt0.c2)))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((rt0.c0 IN (rt0.c1)) COLLATE RTRIM) ORDER BY (+ (NULL COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY (+ (NULL COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE ((rt0.c0 IN (rt0.c1)) COLLATE RTRIM) ORDER BY (+ (NULL COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY (+ (NULL COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE ((rt0.c0 IN (rt0.c1)) COLLATE RTRIM) ORDER BY (+ (NULL COLLATE BINARY)) ASC;
SELECT ALL * FROM vt0 WHERE ((('1132300690')==(CAST(vt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((('1132300690')==(CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('1132300690')==(CAST(vt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((('1132300690')==(CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('1132300690')==(CAST(vt0.c2 AS REAL))));
SELECT * FROM vt0 CROSS JOIN t0 ON (((((vt0.c2))>=((vt0.c0))))>(vt0.c1 COLLATE RTRIM)) WHERE (t0.c60) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((t0.c60) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((vt0.c2))>=((vt0.c0))))>(vt0.c1 COLLATE RTRIM)) ORDER BY vt0.c0 DESC);
SELECT * FROM vt0 CROSS JOIN t0 ON (((((vt0.c2))>=((vt0.c0))))>(vt0.c1 COLLATE RTRIM)) WHERE (t0.c60) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((t0.c60) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((vt0.c2))>=((vt0.c0))))>(vt0.c1 COLLATE RTRIM)) ORDER BY vt0.c0 DESC);
SELECT * FROM vt0 CROSS JOIN t0 ON (((((vt0.c2))>=((vt0.c0))))>(vt0.c1 COLLATE RTRIM)) WHERE (t0.c60) ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON COALESCE(DISTINCT (((t0.c60))>((rt0.c2))), rt0.c2) WHERE ((+ (((((vt0.c0)AND(rt0.c1)))OR(0.7220528994948803))))) ORDER BY ((rt0.c1)*(((((vt0.c0)AND(t0.c60)))AND(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt0.c0)AND(rt0.c1)))OR(0.7220528994948803))))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON COALESCE(DISTINCT (((t0.c60))>((rt0.c2))), rt0.c2) ORDER BY ((rt0.c1)*(((((vt0.c0)AND(t0.c60)))AND(vt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON COALESCE(DISTINCT (((t0.c60))>((rt0.c2))), rt0.c2) WHERE ((+ (((((vt0.c0)AND(rt0.c1)))OR(0.7220528994948803))))) ORDER BY ((rt0.c1)*(((((vt0.c0)AND(t0.c60)))AND(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt0.c0)AND(rt0.c1)))OR(0.7220528994948803))))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON COALESCE(DISTINCT (((t0.c60))>((rt0.c2))), rt0.c2) ORDER BY ((rt0.c1)*(((((vt0.c0)AND(t0.c60)))AND(vt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON COALESCE(DISTINCT (((t0.c60))>((rt0.c2))), rt0.c2) WHERE ((+ (((((vt0.c0)AND(rt0.c1)))OR(0.7220528994948803))))) ORDER BY ((rt0.c1)*(((((vt0.c0)AND(t0.c60)))AND(vt0.c1)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))IS NOT((~ (rt0.c1))))) ORDER BY ((((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)||(rt0.c2)))))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(HEX(DISTINCT rt0.c0))))OR(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))IS NOT((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)||(rt0.c2)))))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(HEX(DISTINCT rt0.c0))))OR(NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))IS NOT((~ (rt0.c1))))) ORDER BY ((((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)||(rt0.c2)))))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(HEX(DISTINCT rt0.c0))))OR(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))IS NOT((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)||(rt0.c2)))))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(HEX(DISTINCT rt0.c0))))OR(NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))IS NOT((~ (rt0.c1))))) ORDER BY ((((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)||(rt0.c2)))))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(HEX(DISTINCT rt0.c0))))OR(NULL));
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c2, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c2, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c2, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c2, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c2, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOT NULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON 0.2519120887870543 LEFT OUTER JOIN t0 ON (((x'2af7')|(t0.c60)) IN ()) WHERE ((('8OOJ]fru')!=(((((vt0.c2)AND(vt0.c2)))OR(rt0.c2))))) ORDER BY ((t0.c60) BETWEEN ((rt0.c0 IN ())) AND ('0.44407664547757286')), ((x'') IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('8OOJ]fru')!=(((((vt0.c2)AND(vt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON 0.2519120887870543 LEFT OUTER JOIN t0 ON (((x'2af7')|(t0.c60)) IN ()) ORDER BY ((t0.c60) BETWEEN ((rt0.c0 IN ())) AND ('0.44407664547757286')), ((x'') IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON 0.2519120887870543 LEFT OUTER JOIN t0 ON (((x'2af7')|(t0.c60)) IN ()) WHERE ((('8OOJ]fru')!=(((((vt0.c2)AND(vt0.c2)))OR(rt0.c2))))) ORDER BY ((t0.c60) BETWEEN ((rt0.c0 IN ())) AND ('0.44407664547757286')), ((x'') IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('8OOJ]fru')!=(((((vt0.c2)AND(vt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON 0.2519120887870543 LEFT OUTER JOIN t0 ON (((x'2af7')|(t0.c60)) IN ()) ORDER BY ((t0.c60) BETWEEN ((rt0.c0 IN ())) AND ('0.44407664547757286')), ((x'') IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON 0.2519120887870543 LEFT OUTER JOIN t0 ON (((x'2af7')|(t0.c60)) IN ()) WHERE ((('8OOJ]fru')!=(((((vt0.c2)AND(vt0.c2)))OR(rt0.c2))))) ORDER BY ((t0.c60) BETWEEN ((rt0.c0 IN ())) AND ('0.44407664547757286')), ((x'') IS TRUE) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOTNULL)) BETWEEN ((NOT (rt0.c1))) AND (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL)) BETWEEN ((NOT (rt0.c1))) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOTNULL)) BETWEEN ((NOT (rt0.c1))) AND (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL)) BETWEEN ((NOT (rt0.c1))) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOTNULL)) BETWEEN ((NOT (rt0.c1))) AND (((rt0.c1) IS TRUE))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON rt0.c0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (t0.c60)))IS NOT(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c1) AND (t0.c60)))IS NOT(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON rt0.c0);
SELECT ALL * FROM t0 INNER JOIN rt0 ON rt0.c0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (t0.c60)))IS NOT(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c1) AND (t0.c60)))IS NOT(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON rt0.c0);
SELECT ALL * FROM t0 INNER JOIN rt0 ON rt0.c0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (t0.c60)))IS NOT(rt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((json_array_length(vt0.c1)) NOTNULL)) ORDER BY CASE WHEN (0.4990210645837231 IN ()) THEN (((vt0.c0)) BETWEEN ((t0.c60)) AND ((vt0.c1))) WHEN ((0.5634803553150998)AND(vt0.c1)) THEN ((((rt0.c1)AND(rt0.c0)))AND(NULL)) WHEN x'' THEN (NOT (t0.c60)) ELSE ((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)) END  NULLS LAST, CASE ((vt0.c2)OR(vt0.c2))  WHEN QUOTE(rt0.c2) THEN ((vt0.c1)+(rt0.c2)) ELSE vt0.c1 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(vt0.c1)) NOTNULL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE WHEN (0.4990210645837231 IN ()) THEN (((vt0.c0)) BETWEEN ((t0.c60)) AND ((vt0.c1))) WHEN ((0.5634803553150998)AND(vt0.c1)) THEN ((((rt0.c1)AND(rt0.c0)))AND(NULL)) WHEN x'' THEN (NOT (t0.c60)) ELSE ((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)) END  NULLS LAST, CASE ((vt0.c2)OR(vt0.c2))  WHEN QUOTE(rt0.c2) THEN ((vt0.c1)+(rt0.c2)) ELSE vt0.c1 END  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((json_array_length(vt0.c1)) NOTNULL)) ORDER BY CASE WHEN (0.4990210645837231 IN ()) THEN (((vt0.c0)) BETWEEN ((t0.c60)) AND ((vt0.c1))) WHEN ((0.5634803553150998)AND(vt0.c1)) THEN ((((rt0.c1)AND(rt0.c0)))AND(NULL)) WHEN x'' THEN (NOT (t0.c60)) ELSE ((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)) END  NULLS LAST, CASE ((vt0.c2)OR(vt0.c2))  WHEN QUOTE(rt0.c2) THEN ((vt0.c1)+(rt0.c2)) ELSE vt0.c1 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(vt0.c1)) NOTNULL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE WHEN (0.4990210645837231 IN ()) THEN (((vt0.c0)) BETWEEN ((t0.c60)) AND ((vt0.c1))) WHEN ((0.5634803553150998)AND(vt0.c1)) THEN ((((rt0.c1)AND(rt0.c0)))AND(NULL)) WHEN x'' THEN (NOT (t0.c60)) ELSE ((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)) END  NULLS LAST, CASE ((vt0.c2)OR(vt0.c2))  WHEN QUOTE(rt0.c2) THEN ((vt0.c1)+(rt0.c2)) ELSE vt0.c1 END  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((json_array_length(vt0.c1)) NOTNULL)) ORDER BY CASE WHEN (0.4990210645837231 IN ()) THEN (((vt0.c0)) BETWEEN ((t0.c60)) AND ((vt0.c1))) WHEN ((0.5634803553150998)AND(vt0.c1)) THEN ((((rt0.c1)AND(rt0.c0)))AND(NULL)) WHEN x'' THEN (NOT (t0.c60)) ELSE ((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)) END  NULLS LAST, CASE ((vt0.c2)OR(vt0.c2))  WHEN QUOTE(rt0.c2) THEN ((vt0.c1)+(rt0.c2)) ELSE vt0.c1 END  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (0Xffffffffbac0b570 COLLATE BINARY) ORDER BY (((((((('866445107')OR((vt0.c2 IN ()))))OR(TRIM('-1435831938', vt0.c2))))OR(CASE vt0.c0  WHEN t0.c60 THEN t0.c60 END)))OR(((-718277160)>(t0.c60))))  NULLS FIRST, NULL DESC  NULLS LAST, 0.7259547576264157 DESC;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffbac0b570 COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((('866445107')OR((vt0.c2 IN ()))))OR(TRIM('-1435831938', vt0.c2))))OR(CASE vt0.c0  WHEN t0.c60 THEN t0.c60 END)))OR(((-718277160)>(t0.c60))))  NULLS FIRST, NULL DESC  NULLS LAST, 0.7259547576264157 DESC);
SELECT ALL * FROM vt0, t0 WHERE (0Xffffffffbac0b570 COLLATE BINARY) ORDER BY (((((((('866445107')OR((vt0.c2 IN ()))))OR(TRIM('-1435831938', vt0.c2))))OR(CASE vt0.c0  WHEN t0.c60 THEN t0.c60 END)))OR(((-718277160)>(t0.c60))))  NULLS FIRST, NULL DESC  NULLS LAST, 0.7259547576264157 DESC;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffbac0b570 COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((('866445107')OR((vt0.c2 IN ()))))OR(TRIM('-1435831938', vt0.c2))))OR(CASE vt0.c0  WHEN t0.c60 THEN t0.c60 END)))OR(((-718277160)>(t0.c60))))  NULLS FIRST, NULL DESC  NULLS LAST, 0.7259547576264157 DESC);
SELECT ALL * FROM vt0, t0 WHERE (0Xffffffffbac0b570 COLLATE BINARY) ORDER BY (((((((('866445107')OR((vt0.c2 IN ()))))OR(TRIM('-1435831938', vt0.c2))))OR(CASE vt0.c0  WHEN t0.c60 THEN t0.c60 END)))OR(((-718277160)>(t0.c60))))  NULLS FIRST, NULL DESC  NULLS LAST, 0.7259547576264157 DESC;
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((vt0.c0 IN ())))==((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) WHERE ((((t0.c60 COLLATE RTRIM))<>(((NOT (vt0.c0)))))) ORDER BY ((CAST(t0.c60 AS TEXT)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60 COLLATE RTRIM))!=(((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((vt0.c0 IN ())))=((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((CAST(t0.c60 AS TEXT)) IS FALSE));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((vt0.c0 IN ())))==((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) WHERE ((((t0.c60 COLLATE RTRIM))<>(((NOT (vt0.c0)))))) ORDER BY ((CAST(t0.c60 AS TEXT)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60 COLLATE RTRIM))!=(((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((vt0.c0 IN ())))=((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((CAST(t0.c60 AS TEXT)) IS FALSE));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((vt0.c0 IN ())))==((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) WHERE ((((t0.c60 COLLATE RTRIM))<>(((NOT (vt0.c0)))))) ORDER BY ((CAST(t0.c60 AS TEXT)) IS FALSE);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((NOT (TYPEOF(DISTINCT t0.c60)))) ORDER BY (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))OR((rt0.c2 IN ()))))AND(0.6955535311614146)) DESC, HEX((+ (rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (TYPEOF(DISTINCT t0.c60)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))OR((rt0.c2 IN ()))))AND(0.6955535311614146)) DESC, HEX((+ (rt0.c1))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((NOT (TYPEOF(DISTINCT t0.c60)))) ORDER BY (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))OR((rt0.c2 IN ()))))AND(0.6955535311614146)) DESC, HEX((+ (rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (TYPEOF(DISTINCT t0.c60)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))OR((rt0.c2 IN ()))))AND(0.6955535311614146)) DESC, HEX((+ (rt0.c1))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((NOT (TYPEOF(DISTINCT t0.c60)))) ORDER BY (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))OR((rt0.c2 IN ()))))AND(0.6955535311614146)) DESC, HEX((+ (rt0.c1))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c1 AS BLOB)  WHEN (+ (vt0.c2)) THEN vt0.c1 COLLATE RTRIM WHEN x'' THEN ((((vt0.c2)AND(vt0.c2)))AND(vt0.c0)) WHEN LIKELIHOOD(DISTINCT vt0.c2, 0.48082329133947377) THEN ((vt0.c0)IS NOT(vt0.c1)) ELSE ((vt0.c2) ISNULL) END) ORDER BY (CAST(vt0.c2 AS NUMERIC) IN ()) DESC, ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c2)IS(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c1 AS BLOB)  WHEN (+ (vt0.c2)) THEN vt0.c1 COLLATE RTRIM WHEN x'' THEN ((((vt0.c2)AND(vt0.c2)))AND(vt0.c0)) WHEN LIKELIHOOD(DISTINCT vt0.c2, 0.48082329133947377) THEN ((vt0.c0)IS NOT(vt0.c1)) ELSE ((vt0.c2) ISNULL) END) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c2 AS NUMERIC) IN ()) DESC, ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c2)IS(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c1 AS BLOB)  WHEN (+ (vt0.c2)) THEN vt0.c1 COLLATE RTRIM WHEN x'' THEN ((((vt0.c2)AND(vt0.c2)))AND(vt0.c0)) WHEN LIKELIHOOD(DISTINCT vt0.c2, 0.48082329133947377) THEN ((vt0.c0)IS NOT(vt0.c1)) ELSE ((vt0.c2) ISNULL) END) ORDER BY (CAST(vt0.c2 AS NUMERIC) IN ()) DESC, ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c2)IS(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c1 AS BLOB)  WHEN (+ (vt0.c2)) THEN vt0.c1 COLLATE RTRIM WHEN x'' THEN ((((vt0.c2)AND(vt0.c2)))AND(vt0.c0)) WHEN LIKELIHOOD(DISTINCT vt0.c2, 0.48082329133947377) THEN ((vt0.c0)IS NOT(vt0.c1)) ELSE ((vt0.c2) ISNULL) END) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c2 AS NUMERIC) IN ()) DESC, ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c2)IS(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c1 AS BLOB)  WHEN (+ (vt0.c2)) THEN vt0.c1 COLLATE RTRIM WHEN x'' THEN ((((vt0.c2)AND(vt0.c2)))AND(vt0.c0)) WHEN LIKELIHOOD(DISTINCT vt0.c2, 0.48082329133947377) THEN ((vt0.c0)IS NOT(vt0.c1)) ELSE ((vt0.c2) ISNULL) END) ORDER BY (CAST(vt0.c2 AS NUMERIC) IN ()) DESC, ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c2)IS(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c0) NOT NULL))>=(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))>=(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c0) NOT NULL))>=(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))>=(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c0) NOT NULL))>=(CAST(vt0.c1 AS TEXT))));
SELECT ALL * FROM vt0 WHERE (((vt0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c2) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c2) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c2) IS FALSE));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ ((+ (rt0.c0))))) ORDER BY (((rt0.c0)) BETWEEN ((4.39476547E8)) AND ((0.6999562099520052)));
SELECT SUM(count) FROM (SELECT (((~ ((+ (rt0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c0)) BETWEEN ((4.39476547E8)) AND ((0.6999562099520052))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ ((+ (rt0.c0))))) ORDER BY (((rt0.c0)) BETWEEN ((4.39476547E8)) AND ((0.6999562099520052)));
SELECT SUM(count) FROM (SELECT (((~ ((+ (rt0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c0)) BETWEEN ((4.39476547E8)) AND ((0.6999562099520052))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ ((+ (rt0.c0))))) ORDER BY (((rt0.c0)) BETWEEN ((4.39476547E8)) AND ((0.6999562099520052)));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (+ ('-1106580350')) WHERE ((rt0.c1 COLLATE RTRIM IN ())) ORDER BY x'1b11' DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (+ ('-1106580350')) ORDER BY x'1b11' DESC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (+ ('-1106580350')) WHERE ((rt0.c1 COLLATE RTRIM IN ())) ORDER BY x'1b11' DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (+ ('-1106580350')) ORDER BY x'1b11' DESC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (+ ('-1106580350')) WHERE ((rt0.c1 COLLATE RTRIM IN ())) ORDER BY x'1b11' DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (t0.c60 IN ()) THEN CAST(t0.c60 AS TEXT) WHEN ((((((((t0.c60)OR(t0.c60)))OR(t0.c60)))OR(t0.c60)))OR(t0.c60)) THEN CAST(t0.c60 AS BLOB) WHEN CASE WHEN NULL THEN t0.c60 WHEN 0.7624427959842182 THEN t0.c60 WHEN 0.6438989601808219 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END THEN (t0.c60 IN ()) END) ORDER BY ((((t0.c60) NOT BETWEEN ('0.5507729880374221') AND (t0.c60))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c60 IN ()) THEN CAST(t0.c60 AS TEXT) WHEN ((((((((t0.c60)OR(t0.c60)))OR(t0.c60)))OR(t0.c60)))OR(t0.c60)) THEN CAST(t0.c60 AS BLOB) WHEN CASE WHEN NULL THEN t0.c60 WHEN 0.7624427959842182 THEN t0.c60 WHEN 0.6438989601808219 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END THEN (t0.c60 IN ()) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c60) NOT BETWEEN ('0.5507729880374221') AND (t0.c60))) NOT NULL));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (t0.c60 IN ()) THEN CAST(t0.c60 AS TEXT) WHEN ((((((((t0.c60)OR(t0.c60)))OR(t0.c60)))OR(t0.c60)))OR(t0.c60)) THEN CAST(t0.c60 AS BLOB) WHEN CASE WHEN NULL THEN t0.c60 WHEN 0.7624427959842182 THEN t0.c60 WHEN 0.6438989601808219 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END THEN (t0.c60 IN ()) END) ORDER BY ((((t0.c60) NOT BETWEEN ('0.5507729880374221') AND (t0.c60))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c60 IN ()) THEN CAST(t0.c60 AS TEXT) WHEN ((((((((t0.c60)OR(t0.c60)))OR(t0.c60)))OR(t0.c60)))OR(t0.c60)) THEN CAST(t0.c60 AS BLOB) WHEN CASE WHEN NULL THEN t0.c60 WHEN 0.7624427959842182 THEN t0.c60 WHEN 0.6438989601808219 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END THEN (t0.c60 IN ()) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c60) NOT BETWEEN ('0.5507729880374221') AND (t0.c60))) NOT NULL));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (t0.c60 IN ()) THEN CAST(t0.c60 AS TEXT) WHEN ((((((((t0.c60)OR(t0.c60)))OR(t0.c60)))OR(t0.c60)))OR(t0.c60)) THEN CAST(t0.c60 AS BLOB) WHEN CASE WHEN NULL THEN t0.c60 WHEN 0.7624427959842182 THEN t0.c60 WHEN 0.6438989601808219 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END THEN (t0.c60 IN ()) END) ORDER BY ((((t0.c60) NOT BETWEEN ('0.5507729880374221') AND (t0.c60))) NOT NULL);
SELECT * FROM rt0, vt0 INNER JOIN t0 ON vt0.c0 WHERE ((((vt0.c2 IN ()))<>(((((t0.c60)OR(vt0.c2)))OR(vt0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ()))!=(((((t0.c60)OR(vt0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON vt0.c0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM rt0, vt0 INNER JOIN t0 ON vt0.c0 WHERE ((((vt0.c2 IN ()))<>(((((t0.c60)OR(vt0.c2)))OR(vt0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ()))!=(((((t0.c60)OR(vt0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON vt0.c0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM rt0, vt0 INNER JOIN t0 ON vt0.c0 WHERE ((((vt0.c2 IN ()))<>(((((t0.c60)OR(vt0.c2)))OR(vt0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((+ (0x2d5b3264))))>=(((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) ORDER BY TIME(vt0.c2 COLLATE NOCASE, (vt0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (0x2d5b3264))))>=(((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY TIME(vt0.c2 COLLATE NOCASE, (vt0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((+ (0x2d5b3264))))>=(((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) ORDER BY TIME(vt0.c2 COLLATE NOCASE, (vt0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (0x2d5b3264))))>=(((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY TIME(vt0.c2 COLLATE NOCASE, (vt0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((+ (0x2d5b3264))))>=(((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) ORDER BY TIME(vt0.c2 COLLATE NOCASE, (vt0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c1)<(((vt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<(((vt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c1)<(((vt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<(((vt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c1)<(((vt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT ALL * FROM t0, vt0, rt0 WHERE (CAST(STRFTIME('', x'306c', t0.c60, rt0.c1, vt0.c0) AS INTEGER)) ORDER BY ((CASE x'582e'  WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c0 END)!=(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(STRFTIME('', x'306c', t0.c60, rt0.c1, vt0.c0) AS INTEGER)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((CASE x'582e'  WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c0 END)!=(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CAST(STRFTIME('', x'306c', t0.c60, rt0.c1, vt0.c0) AS INTEGER)) ORDER BY ((CASE x'582e'  WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c0 END)!=(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(STRFTIME('', x'306c', t0.c60, rt0.c1, vt0.c0) AS INTEGER)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((CASE x'582e'  WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c0 END)!=(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CAST(STRFTIME('', x'306c', t0.c60, rt0.c1, vt0.c0) AS INTEGER)) ORDER BY ((CASE x'582e'  WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c0 END)!=(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT * FROM t0, rt0 NOT INDEXED, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0 NOT INDEXED, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0 NOT INDEXED, vt0 WHERE (x'');
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN ()))LIKE(COALESCE(DISTINCT vt0.c0, t0.c60, t0.c60, vt0.c1)))) ORDER BY load_extension(1793950623), CAST('1295056588' AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))LIKE(COALESCE(DISTINCT vt0.c0, t0.c60, t0.c60, vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY load_extension(1793950623), CAST('1295056588' AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN ()))LIKE(COALESCE(DISTINCT vt0.c0, t0.c60, t0.c60, vt0.c1)))) ORDER BY load_extension(1793950623), CAST('1295056588' AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))LIKE(COALESCE(DISTINCT vt0.c0, t0.c60, t0.c60, vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY load_extension(1793950623), CAST('1295056588' AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN ()))LIKE(COALESCE(DISTINCT vt0.c0, t0.c60, t0.c60, vt0.c1)))) ORDER BY load_extension(1793950623), CAST('1295056588' AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c2, vt0.c2))>((vt0.c1, vt0.c0, vt0.c2))))IS NOT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))) ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN TYPEOF(vt0.c1) THEN ((vt0.c0)&(vt0.c1)) ELSE ((vt0.c1)||(vt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c2, vt0.c2))>((vt0.c1, vt0.c0, vt0.c2))))IS NOT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN TYPEOF(vt0.c1) THEN ((vt0.c0)&(vt0.c1)) ELSE ((vt0.c1)||(vt0.c2)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c2, vt0.c2))>((vt0.c1, vt0.c0, vt0.c2))))IS NOT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))) ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN TYPEOF(vt0.c1) THEN ((vt0.c0)&(vt0.c1)) ELSE ((vt0.c1)||(vt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c2, vt0.c2))>((vt0.c1, vt0.c0, vt0.c2))))IS NOT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN TYPEOF(vt0.c1) THEN ((vt0.c0)&(vt0.c1)) ELSE ((vt0.c1)||(vt0.c2)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c2, vt0.c2))>((vt0.c1, vt0.c0, vt0.c2))))IS NOT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))) ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN TYPEOF(vt0.c1) THEN ((vt0.c0)&(vt0.c1)) ELSE ((vt0.c1)||(vt0.c2)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((rt0.c0)OR(NULL)))OR(rt0.c2)))OR(CAST(rt0.c0 AS NUMERIC)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND (((NOT (x'2e2a7243791c'))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(NULL)))OR(rt0.c2)))OR(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND (((NOT (x'2e2a7243791c'))))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((rt0.c0)OR(NULL)))OR(rt0.c2)))OR(CAST(rt0.c0 AS NUMERIC)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND (((NOT (x'2e2a7243791c'))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(NULL)))OR(rt0.c2)))OR(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND (((NOT (x'2e2a7243791c'))))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((rt0.c0)OR(NULL)))OR(rt0.c2)))OR(CAST(rt0.c0 AS NUMERIC)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND (((NOT (x'2e2a7243791c'))))) ASC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((highlight(rt0.c1, t0.c60, rt0.c2, rt0.c1)) BETWEEN ((+ (rt0.c0))) AND ((rt0.c0 IN ())))) ORDER BY 0.32331291040564647 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((highlight(rt0.c1, t0.c60, rt0.c2, rt0.c1)) BETWEEN ((+ (rt0.c0))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0 ORDER BY 0.32331291040564647 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((highlight(rt0.c1, t0.c60, rt0.c2, rt0.c1)) BETWEEN ((+ (rt0.c0))) AND ((rt0.c0 IN ())))) ORDER BY 0.32331291040564647 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((highlight(rt0.c1, t0.c60, rt0.c2, rt0.c1)) BETWEEN ((+ (rt0.c0))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0 ORDER BY 0.32331291040564647 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((highlight(rt0.c1, t0.c60, rt0.c2, rt0.c1)) BETWEEN ((+ (rt0.c0))) AND ((rt0.c0 IN ())))) ORDER BY 0.32331291040564647 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (t0.c60) ORDER BY CAST(((((vt0.c1)OR(vt0.c0)))AND(rt0.c2)) AS TEXT) DESC  NULLS FIRST, rtreenode(vt0.c1, SQLITE_COMPILEOPTION_GET(rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c60) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(((((vt0.c1)OR(vt0.c0)))AND(rt0.c2)) AS TEXT) DESC  NULLS FIRST, rtreenode(vt0.c1, SQLITE_COMPILEOPTION_GET(rt0.c0)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (t0.c60) ORDER BY CAST(((((vt0.c1)OR(vt0.c0)))AND(rt0.c2)) AS TEXT) DESC  NULLS FIRST, rtreenode(vt0.c1, SQLITE_COMPILEOPTION_GET(rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c60) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(((((vt0.c1)OR(vt0.c0)))AND(rt0.c2)) AS TEXT) DESC  NULLS FIRST, rtreenode(vt0.c1, SQLITE_COMPILEOPTION_GET(rt0.c0)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (t0.c60) ORDER BY CAST(((((vt0.c1)OR(vt0.c0)))AND(rt0.c2)) AS TEXT) DESC  NULLS FIRST, rtreenode(vt0.c1, SQLITE_COMPILEOPTION_GET(rt0.c0)) ASC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (x'');
SELECT * FROM rt0 WHERE (CAST(((rt0.c1)<=(rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)<=(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c1)<=(rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)<=(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c1)<=(rt0.c2)) AS INTEGER));
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c0)|(CASE WHEN t0.c60 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)|(CASE WHEN t0.c60 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c0)|(CASE WHEN t0.c60 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)|(CASE WHEN t0.c60 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c0)|(CASE WHEN t0.c60 THEN vt0.c1 END)));
SELECT * FROM rt0, t0 WHERE (((CASE rt0.c1  WHEN t0.c60 THEN t0.c60 ELSE rt0.c1 END)>=('}LLy	*{B')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN t0.c60 THEN t0.c60 ELSE rt0.c1 END)>=('}LLy	*{B'))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((CASE rt0.c1  WHEN t0.c60 THEN t0.c60 ELSE rt0.c1 END)>=('}LLy	*{B')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN t0.c60 THEN t0.c60 ELSE rt0.c1 END)>=('}LLy	*{B'))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((CASE rt0.c1  WHEN t0.c60 THEN t0.c60 ELSE rt0.c1 END)>=('}LLy	*{B')));
SELECT * FROM t0 WHERE ((((((((x'')OR(t0.c60)))AND(t0.c60))))!=((((t0.c60)%(t0.c60))))));
SELECT SUM(count) FROM (SELECT (((((((((x'')OR(t0.c60)))AND(t0.c60))))<>((((t0.c60)%(t0.c60)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((x'')OR(t0.c60)))AND(t0.c60))))!=((((t0.c60)%(t0.c60))))));
SELECT SUM(count) FROM (SELECT (((((((((x'')OR(t0.c60)))AND(t0.c60))))<>((((t0.c60)%(t0.c60)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((x'')OR(t0.c60)))AND(t0.c60))))!=((((t0.c60)%(t0.c60))))));
SELECT COUNT(*) FROM vt0, t0 WHERE (0.8560139460056653);
SELECT SUM(count) FROM (SELECT ((0.8560139460056653) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (0.8560139460056653);
SELECT SUM(count) FROM (SELECT ((0.8560139460056653) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (0.8560139460056653);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)) IN ()) WHERE (CAST(((vt0.c1)OR(rt0.c0)) AS TEXT)) ORDER BY LIKELIHOOD(((vt0.c2) IS FALSE), 0.08132091085635029) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)OR(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)) IN ()) ORDER BY LIKELIHOOD(((vt0.c2) IS FALSE), 0.08132091085635029) DESC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)) IN ()) WHERE (CAST(((vt0.c1)OR(rt0.c0)) AS TEXT)) ORDER BY LIKELIHOOD(((vt0.c2) IS FALSE), 0.08132091085635029) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)OR(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)) IN ()) ORDER BY LIKELIHOOD(((vt0.c2) IS FALSE), 0.08132091085635029) DESC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)) IN ()) WHERE (CAST(((vt0.c1)OR(rt0.c0)) AS TEXT)) ORDER BY LIKELIHOOD(((vt0.c2) IS FALSE), 0.08132091085635029) DESC;
SELECT * FROM t0, rt0 WHERE (LIKE(((t0.c60)>>(t0.c60)), '1529885878')) ORDER BY (((rt0.c2)==(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((t0.c60)>>(t0.c60)), '1529885878')) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c2)==(rt0.c1)) IN ()));
SELECT * FROM t0, rt0 WHERE (LIKE(((t0.c60)>>(t0.c60)), '1529885878')) ORDER BY (((rt0.c2)==(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((t0.c60)>>(t0.c60)), '1529885878')) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c2)==(rt0.c1)) IN ()));
SELECT * FROM t0, rt0 WHERE (LIKE(((t0.c60)>>(t0.c60)), '1529885878')) ORDER BY (((rt0.c2)==(rt0.c1)) IN ());
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS FALSE)) NOT NULL));
SELECT * FROM t0, vt0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))LIKE(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))LIKE(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))LIKE(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))LIKE(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))LIKE(CAST(rt0.c0 AS REAL))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c60)) NOT BETWEEN (((((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c60))))) AND (('492657483')))) ORDER BY CASE WHEN t0.c60 COLLATE RTRIM THEN ((t0.c60)+(t0.c60)) ELSE ((t0.c60) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c60)) NOT BETWEEN (((((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c60))))) AND (('492657483')))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c60 COLLATE RTRIM THEN ((t0.c60)+(t0.c60)) ELSE ((t0.c60) ISNULL) END DESC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c60)) NOT BETWEEN (((((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c60))))) AND (('492657483')))) ORDER BY CASE WHEN t0.c60 COLLATE RTRIM THEN ((t0.c60)+(t0.c60)) ELSE ((t0.c60) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c60)) NOT BETWEEN (((((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c60))))) AND (('492657483')))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c60 COLLATE RTRIM THEN ((t0.c60)+(t0.c60)) ELSE ((t0.c60) ISNULL) END DESC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c60)) NOT BETWEEN (((((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c60))))) AND (('492657483')))) ORDER BY CASE WHEN t0.c60 COLLATE RTRIM THEN ((t0.c60)+(t0.c60)) ELSE ((t0.c60) ISNULL) END DESC;
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 COLLATE NOCASE))<>((((((x'')OR(rt0.c2)))OR(rt0.c0))))) CROSS JOIN vt0 ON CASE WHEN (NOT (t0.c60)) THEN CAST(vt0.c2 AS REAL) ELSE (((rt0.c2))<=((rt0.c2))) END WHERE (((((rt0.c1))<((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1))<((rt0.c1))) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 COLLATE NOCASE))<>((((((x'')OR(rt0.c2)))OR(rt0.c0))))) CROSS JOIN vt0 ON CASE WHEN (NOT (t0.c60)) THEN CAST(vt0.c2 AS REAL) ELSE (((rt0.c2))<=((rt0.c2))) END);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 COLLATE NOCASE))<>((((((x'')OR(rt0.c2)))OR(rt0.c0))))) CROSS JOIN vt0 ON CASE WHEN (NOT (t0.c60)) THEN CAST(vt0.c2 AS REAL) ELSE (((rt0.c2))<=((rt0.c2))) END WHERE (((((rt0.c1))<((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1))<((rt0.c1))) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 COLLATE NOCASE))<>((((((x'')OR(rt0.c2)))OR(rt0.c0))))) CROSS JOIN vt0 ON CASE WHEN (NOT (t0.c60)) THEN CAST(vt0.c2 AS REAL) ELSE (((rt0.c2))<=((rt0.c2))) END);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 COLLATE NOCASE))<>((((((x'')OR(rt0.c2)))OR(rt0.c0))))) CROSS JOIN vt0 ON CASE WHEN (NOT (t0.c60)) THEN CAST(vt0.c2 AS REAL) ELSE (((rt0.c2))<=((rt0.c2))) END WHERE (((((rt0.c1))<((rt0.c1))) IN ()));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c1)IS(rt0.c1)) IN (((rt0.c2) BETWEEN (t0.c60) AND (t0.c60)), CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)IS(rt0.c1)) IN (((rt0.c2) BETWEEN (t0.c60) AND (t0.c60)), CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c1)IS(rt0.c1)) IN (((rt0.c2) BETWEEN (t0.c60) AND (t0.c60)), CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)IS(rt0.c1)) IN (((rt0.c2) BETWEEN (t0.c60) AND (t0.c60)), CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c1)IS(rt0.c1)) IN (((rt0.c2) BETWEEN (t0.c60) AND (t0.c60)), CAST(rt0.c2 AS TEXT))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((0X6132163d COLLATE BINARY)OR((vt0.c1 IN ()))) WHERE (CAST(((vt0.c2)>=(t0.c60)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2)>=(t0.c60)) AS INTEGER)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((0x6132163d COLLATE BINARY)OR((vt0.c1 IN ()))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((0X6132163d COLLATE BINARY)OR((vt0.c1 IN ()))) WHERE (CAST(((vt0.c2)>=(t0.c60)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2)>=(t0.c60)) AS INTEGER)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((0x6132163d COLLATE BINARY)OR((vt0.c1 IN ()))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((0X6132163d COLLATE BINARY)OR((vt0.c1 IN ()))) WHERE (CAST(((vt0.c2)>=(t0.c60)) AS INTEGER));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON CAST(((t0.c60)IS NOT(vt0.c1)) AS REAL) INNER JOIN vt0 ON (((((rt0.c0, rt0.c0, vt0.c2, NULL, rt0.c0)) BETWEEN ((rt0.c1, vt0.c1, rt0.c0, rt0.c2, x'')) AND ((rt0.c0, rt0.c2, rt0.c0, 514172330, '')))) BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND ((vt0.c1 IN (rt0.c0)))) WHERE ((((+ (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON CAST(((t0.c60)IS NOT(vt0.c1)) AS REAL) INNER JOIN vt0 ON (((((rt0.c0, rt0.c0, vt0.c2, NULL, rt0.c0)) BETWEEN ((rt0.c1, vt0.c1, rt0.c0, rt0.c2, x'')) AND ((rt0.c0, rt0.c2, rt0.c0, 514172330, '')))) BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND ((vt0.c1 IN (rt0.c0)))));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON CAST(((t0.c60)IS NOT(vt0.c1)) AS REAL) INNER JOIN vt0 ON (((((rt0.c0, rt0.c0, vt0.c2, NULL, rt0.c0)) BETWEEN ((rt0.c1, vt0.c1, rt0.c0, rt0.c2, x'')) AND ((rt0.c0, rt0.c2, rt0.c0, 514172330, '')))) BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND ((vt0.c1 IN (rt0.c0)))) WHERE ((((+ (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON CAST(((t0.c60)IS NOT(vt0.c1)) AS REAL) INNER JOIN vt0 ON (((((rt0.c0, rt0.c0, vt0.c2, NULL, rt0.c0)) BETWEEN ((rt0.c1, vt0.c1, rt0.c0, rt0.c2, x'')) AND ((rt0.c0, rt0.c2, rt0.c0, 514172330, '')))) BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND ((vt0.c1 IN (rt0.c0)))));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON CAST(((t0.c60)IS NOT(vt0.c1)) AS REAL) INNER JOIN vt0 ON (((((rt0.c0, rt0.c0, vt0.c2, NULL, rt0.c0)) BETWEEN ((rt0.c1, vt0.c1, rt0.c0, rt0.c2, x'')) AND ((rt0.c0, rt0.c2, rt0.c0, 514172330, '')))) BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND ((vt0.c1 IN (rt0.c0)))) WHERE ((((+ (vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM)<=(((rt0.c1) NOTNULL)))) ORDER BY ((((CAST(rt0.c0 AS BLOB))AND((rt0.c2 IN ()))))AND((((rt0.c0)) NOT BETWEEN (('-1112670538')) AND ((rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)<=(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((CAST(rt0.c0 AS BLOB))AND((rt0.c2 IN ()))))AND((((rt0.c0)) NOT BETWEEN (('-1112670538')) AND ((rt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM)<=(((rt0.c1) NOTNULL)))) ORDER BY ((((CAST(rt0.c0 AS BLOB))AND((rt0.c2 IN ()))))AND((((rt0.c0)) NOT BETWEEN (('-1112670538')) AND ((rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)<=(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((CAST(rt0.c0 AS BLOB))AND((rt0.c2 IN ()))))AND((((rt0.c0)) NOT BETWEEN (('-1112670538')) AND ((rt0.c1)))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((0.8489184181782802 IN ())))=((((vt0.c1)&(t0.c60)))))) ORDER BY (~ (CASE WHEN '53007729' THEN rt0.c1 ELSE rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.8489184181782802 IN ())))==((((vt0.c1)&(t0.c60)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (~ (CASE WHEN '53007729' THEN rt0.c1 ELSE rt0.c0 END))  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((0.8489184181782802 IN ())))=((((vt0.c1)&(t0.c60)))))) ORDER BY (~ (CASE WHEN '53007729' THEN rt0.c1 ELSE rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.8489184181782802 IN ())))==((((vt0.c1)&(t0.c60)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (~ (CASE WHEN '53007729' THEN rt0.c1 ELSE rt0.c0 END))  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((0.8489184181782802 IN ())))=((((vt0.c1)&(t0.c60)))))) ORDER BY (~ (CASE WHEN '53007729' THEN rt0.c1 ELSE rt0.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((0.9913113594502521) BETWEEN (((x'')OR(vt0.c1))) AND (((vt0.c2)/(vt0.c2))))) ORDER BY ((((((((((t0.c60)OR(t0.c60)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))|('r5')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.9913113594502521) BETWEEN (((x'')OR(vt0.c1))) AND (((vt0.c2)/(vt0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((t0.c60)OR(t0.c60)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))|('r5')) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((0.9913113594502521) BETWEEN (((x'')OR(vt0.c1))) AND (((vt0.c2)/(vt0.c2))))) ORDER BY ((((((((((t0.c60)OR(t0.c60)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))|('r5')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.9913113594502521) BETWEEN (((x'')OR(vt0.c1))) AND (((vt0.c2)/(vt0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((t0.c60)OR(t0.c60)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))|('r5')) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((0.9913113594502521) BETWEEN (((x'')OR(vt0.c1))) AND (((vt0.c2)/(vt0.c2))))) ORDER BY ((((((((((t0.c60)OR(t0.c60)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))|('r5')) DESC;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((t0.c60 COLLATE NOCASE))<((((rt0.c1) BETWEEN (t0.c60) AND (vt0.c1)))))) ORDER BY CASE WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c2 ELSE (((vt0.c1)) BETWEEN ((0.8296502298967455)) AND ((rt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60 COLLATE NOCASE))<((((rt0.c1) BETWEEN (t0.c60) AND (vt0.c1)))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c2 ELSE (((vt0.c1)) BETWEEN ((0.8296502298967455)) AND ((rt0.c0))) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((t0.c60 COLLATE NOCASE))<((((rt0.c1) BETWEEN (t0.c60) AND (vt0.c1)))))) ORDER BY CASE WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c2 ELSE (((vt0.c1)) BETWEEN ((0.8296502298967455)) AND ((rt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60 COLLATE NOCASE))<((((rt0.c1) BETWEEN (t0.c60) AND (vt0.c1)))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c2 ELSE (((vt0.c1)) BETWEEN ((0.8296502298967455)) AND ((rt0.c0))) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((t0.c60 COLLATE NOCASE))<((((rt0.c1) BETWEEN (t0.c60) AND (vt0.c1)))))) ORDER BY CASE WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c2 ELSE (((vt0.c1)) BETWEEN ((0.8296502298967455)) AND ((rt0.c0))) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c0) BETWEEN ('1707062510') AND (rt0.c1)))AND(((((((((((((vt0.c2)OR(NULL)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c1)))))OR(((rt0.c2)=(rt0.c0))))) ORDER BY (((json_remove(rt0.c0, vt0.c1)))=(((((vt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)||(((x'') NOT BETWEEN (rt0.c0) AND (vt0.c1)))) DESC, (CAST(rt0.c2 AS BLOB) IN (rt0.c2, (vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) BETWEEN ('1707062510') AND (rt0.c1)))AND(((((((((((((vt0.c2)OR(NULL)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c1)))))OR(((rt0.c2)=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((json_remove(rt0.c0, vt0.c1)))==(((((vt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)||(((x'') NOT BETWEEN (rt0.c0) AND (vt0.c1)))) DESC, (CAST(rt0.c2 AS BLOB) IN (rt0.c2, (vt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c0) BETWEEN ('1707062510') AND (rt0.c1)))AND(((((((((((((vt0.c2)OR(NULL)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c1)))))OR(((rt0.c2)=(rt0.c0))))) ORDER BY (((json_remove(rt0.c0, vt0.c1)))=(((((vt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)||(((x'') NOT BETWEEN (rt0.c0) AND (vt0.c1)))) DESC, (CAST(rt0.c2 AS BLOB) IN (rt0.c2, (vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) BETWEEN ('1707062510') AND (rt0.c1)))AND(((((((((((((vt0.c2)OR(NULL)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c1)))))OR(((rt0.c2)=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((json_remove(rt0.c0, vt0.c1)))==(((((vt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)||(((x'') NOT BETWEEN (rt0.c0) AND (vt0.c1)))) DESC, (CAST(rt0.c2 AS BLOB) IN (rt0.c2, (vt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c0) BETWEEN ('1707062510') AND (rt0.c1)))AND(((((((((((((vt0.c2)OR(NULL)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c1)))))OR(((rt0.c2)=(rt0.c0))))) ORDER BY (((json_remove(rt0.c0, vt0.c1)))=(((((vt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)||(((x'') NOT BETWEEN (rt0.c0) AND (vt0.c1)))) DESC, (CAST(rt0.c2 AS BLOB) IN (rt0.c2, (vt0.c0 IN ()))) ASC;
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c2))>=((t0.c60))))>=(NULLIF(t0.c60, vt0.c1)))) ORDER BY (((vt0.c2 COLLATE NOCASE))<>((CAST(vt0.c2 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c2))>=((t0.c60))))>=(NULLIF(t0.c60, vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c2 COLLATE NOCASE))<>((CAST(vt0.c2 AS BLOB)))) ASC);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c2))>=((t0.c60))))>=(NULLIF(t0.c60, vt0.c1)))) ORDER BY (((vt0.c2 COLLATE NOCASE))<>((CAST(vt0.c2 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c2))>=((t0.c60))))>=(NULLIF(t0.c60, vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c2 COLLATE NOCASE))<>((CAST(vt0.c2 AS BLOB)))) ASC);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c2))>=((t0.c60))))>=(NULLIF(t0.c60, vt0.c1)))) ORDER BY (((vt0.c2 COLLATE NOCASE))<>((CAST(vt0.c2 AS BLOB)))) ASC;
SELECT * FROM vt0 WHERE (((CAST(vt0.c2 AS TEXT)) BETWEEN (TOTAL_CHANGES()) AND (((vt0.c2)+(vt0.c0))))) ORDER BY ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS TEXT)) BETWEEN (TOTAL_CHANGES()) AND (((vt0.c2)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c2 AS TEXT)) BETWEEN (TOTAL_CHANGES()) AND (((vt0.c2)+(vt0.c0))))) ORDER BY ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS TEXT)) BETWEEN (TOTAL_CHANGES()) AND (((vt0.c2)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c2 AS TEXT)) BETWEEN (TOTAL_CHANGES()) AND (((vt0.c2)+(vt0.c0))))) ORDER BY ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, vt0.c0 ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (((TOTAL_CHANGES()) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES()) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((TOTAL_CHANGES()) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES()) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((TOTAL_CHANGES()) NOT NULL));
SELECT ALL * FROM rt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (x'');
SELECT * FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)) AS TEXT));
SELECT ALL * FROM vt0, t0, rt0 WHERE (UPPER(((rt0.c1)==(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((rt0.c1)==(rt0.c0)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (UPPER(((rt0.c1)==(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((rt0.c1)==(rt0.c0)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (UPPER(((rt0.c1)==(rt0.c0))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))AND(x''))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((0.37783019136622764 IN (vt0.c1, vt0.c0))))) ORDER BY LOWER(DISTINCT 'Z \n') DESC, ABS(DISTINCT UPPER(DISTINCT vt0.c2)), (- (((vt0.c0)-(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))AND(x''))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((0.37783019136622764 IN (vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(DISTINCT 'Z \n') DESC, ABS(DISTINCT UPPER(DISTINCT vt0.c2)), (- (((vt0.c0)-(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))AND(x''))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((0.37783019136622764 IN (vt0.c1, vt0.c0))))) ORDER BY LOWER(DISTINCT 'Z \n') DESC, ABS(DISTINCT UPPER(DISTINCT vt0.c2)), (- (((vt0.c0)-(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))AND(x''))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((0.37783019136622764 IN (vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(DISTINCT 'Z \n') DESC, ABS(DISTINCT UPPER(DISTINCT vt0.c2)), (- (((vt0.c0)-(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))AND(x''))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((0.37783019136622764 IN (vt0.c1, vt0.c0))))) ORDER BY LOWER(DISTINCT 'Z \n') DESC, ABS(DISTINCT UPPER(DISTINCT vt0.c2)), (- (((vt0.c0)-(vt0.c0))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST(((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c2)) AS BLOB));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((NULLIF(DISTINCT vt0.c2, vt0.c2))GLOB((('947348069')OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt0.c2, vt0.c2))GLOB((('947348069')OR(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((NULLIF(DISTINCT vt0.c2, vt0.c2))GLOB((('947348069')OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt0.c2, vt0.c2))GLOB((('947348069')OR(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((NULLIF(DISTINCT vt0.c2, vt0.c2))GLOB((('947348069')OR(vt0.c1)))));
SELECT ALL * FROM t0 WHERE ((((t0.c60))=((t0.c60))) COLLATE BINARY) ORDER BY -306377208 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60))==((t0.c60))) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY -306377208 DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((t0.c60))=((t0.c60))) COLLATE BINARY) ORDER BY -306377208 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60))==((t0.c60))) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY -306377208 DESC  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST((rt0.c1 IN (rt0.c2)) AS REAL) WHERE (((TYPEOF('466371172'))*((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF('466371172'))*((~ (vt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST((rt0.c1 IN (rt0.c2)) AS REAL));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST((rt0.c1 IN (rt0.c2)) AS REAL) WHERE (((TYPEOF('466371172'))*((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF('466371172'))*((~ (vt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST((rt0.c1 IN (rt0.c2)) AS REAL));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST((rt0.c1 IN (rt0.c2)) AS REAL) WHERE (((TYPEOF('466371172'))*((~ (vt0.c0)))));
SELECT * FROM rt0, t0 WHERE ((+ (t0.c60)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (t0.c60)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((+ (t0.c60)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (t0.c60)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((+ (t0.c60)) COLLATE RTRIM);
SELECT * FROM t0 WHERE (CAST(TYPEOF(0.8259507443386286) AS BLOB)) ORDER BY (CAST(t0.c60 AS REAL) IN ()) DESC  NULLS FIRST, CASE ((t0.c60)==(t0.c60))  WHEN ((t0.c60) IS FALSE) THEN ((((t0.c60)AND(t0.c60)))OR(t0.c60)) WHEN CAST(t0.c60 AS TEXT) THEN ((t0.c60)!=(t0.c60)) WHEN ((t0.c60) NOT BETWEEN (NULL) AND (t0.c60)) THEN (t0.c60 IN (t0.c60)) WHEN (t0.c60 IN ()) THEN (((t0.c60, t0.c60, t0.c60)) BETWEEN ((t0.c60, '-718277160', t0.c60)) AND ((t0.c60, t0.c60, t0.c60))) WHEN NULL COLLATE RTRIM THEN t0.c60 COLLATE BINARY END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(0.8259507443386286) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c60 AS REAL) IN ()) DESC  NULLS FIRST, CASE ((t0.c60)==(t0.c60))  WHEN ((t0.c60) IS FALSE) THEN ((((t0.c60)AND(t0.c60)))OR(t0.c60)) WHEN CAST(t0.c60 AS TEXT) THEN ((t0.c60)<>(t0.c60)) WHEN ((t0.c60) NOT BETWEEN (NULL) AND (t0.c60)) THEN (t0.c60 IN (t0.c60)) WHEN (t0.c60 IN ()) THEN (((t0.c60, t0.c60, t0.c60)) BETWEEN ((t0.c60, '-718277160', t0.c60)) AND ((t0.c60, t0.c60, t0.c60))) WHEN NULL COLLATE RTRIM THEN t0.c60 COLLATE BINARY END ASC  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(TYPEOF(0.8259507443386286) AS BLOB)) ORDER BY (CAST(t0.c60 AS REAL) IN ()) DESC  NULLS FIRST, CASE ((t0.c60)==(t0.c60))  WHEN ((t0.c60) IS FALSE) THEN ((((t0.c60)AND(t0.c60)))OR(t0.c60)) WHEN CAST(t0.c60 AS TEXT) THEN ((t0.c60)!=(t0.c60)) WHEN ((t0.c60) NOT BETWEEN (NULL) AND (t0.c60)) THEN (t0.c60 IN (t0.c60)) WHEN (t0.c60 IN ()) THEN (((t0.c60, t0.c60, t0.c60)) BETWEEN ((t0.c60, '-718277160', t0.c60)) AND ((t0.c60, t0.c60, t0.c60))) WHEN NULL COLLATE RTRIM THEN t0.c60 COLLATE BINARY END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(0.8259507443386286) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c60 AS REAL) IN ()) DESC  NULLS FIRST, CASE ((t0.c60)==(t0.c60))  WHEN ((t0.c60) IS FALSE) THEN ((((t0.c60)AND(t0.c60)))OR(t0.c60)) WHEN CAST(t0.c60 AS TEXT) THEN ((t0.c60)<>(t0.c60)) WHEN ((t0.c60) NOT BETWEEN (NULL) AND (t0.c60)) THEN (t0.c60 IN (t0.c60)) WHEN (t0.c60 IN ()) THEN (((t0.c60, t0.c60, t0.c60)) BETWEEN ((t0.c60, '-718277160', t0.c60)) AND ((t0.c60, t0.c60, t0.c60))) WHEN NULL COLLATE RTRIM THEN t0.c60 COLLATE BINARY END ASC  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(TYPEOF(0.8259507443386286) AS BLOB)) ORDER BY (CAST(t0.c60 AS REAL) IN ()) DESC  NULLS FIRST, CASE ((t0.c60)==(t0.c60))  WHEN ((t0.c60) IS FALSE) THEN ((((t0.c60)AND(t0.c60)))OR(t0.c60)) WHEN CAST(t0.c60 AS TEXT) THEN ((t0.c60)!=(t0.c60)) WHEN ((t0.c60) NOT BETWEEN (NULL) AND (t0.c60)) THEN (t0.c60 IN (t0.c60)) WHEN (t0.c60 IN ()) THEN (((t0.c60, t0.c60, t0.c60)) BETWEEN ((t0.c60, '-718277160', t0.c60)) AND ((t0.c60, t0.c60, t0.c60))) WHEN NULL COLLATE RTRIM THEN t0.c60 COLLATE BINARY END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((((((((((((vt0.c0)OR(0.48613088767479706)))OR(vt0.c2)))AND(vt0.c1)))AND(NULL)))OR(NULL)))AND(rt0.c0))) WHERE (0.6127026825800361);
SELECT SUM(count) FROM (SELECT ((0.6127026825800361) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((((((((((((vt0.c0)OR(0.48613088767479706)))OR(vt0.c2)))AND(vt0.c1)))AND(NULL)))OR(NULL)))AND(rt0.c0))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((((((((((((vt0.c0)OR(0.48613088767479706)))OR(vt0.c2)))AND(vt0.c1)))AND(NULL)))OR(NULL)))AND(rt0.c0))) WHERE (0.6127026825800361);
SELECT SUM(count) FROM (SELECT ((0.6127026825800361) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((((((((((((vt0.c0)OR(0.48613088767479706)))OR(vt0.c2)))AND(vt0.c1)))AND(NULL)))OR(NULL)))AND(rt0.c0))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((((((((((((vt0.c0)OR(0.48613088767479706)))OR(vt0.c2)))AND(vt0.c1)))AND(NULL)))OR(NULL)))AND(rt0.c0))) WHERE (0.6127026825800361);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((0.5507729880374221)|((((t0.c60)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c0)))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS((((vt0.c2))!=((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((((0.5507729880374221)|((((t0.c60)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS((((vt0.c2))<>((rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((0.5507729880374221)|((((t0.c60)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c0)))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS((((vt0.c2))!=((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((((0.5507729880374221)|((((t0.c60)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS((((vt0.c2))<>((rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((0.5507729880374221)|((((t0.c60)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c0)))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS((((vt0.c2))!=((rt0.c2))))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((('') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((('') NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((('') NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('') NOTNULL));
SELECT * FROM t0, vt0 CROSS JOIN rt0 ON ((vt0.c1)OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)) WHERE ((((vt0.c0))==((((t0.c60)/(rt0.c0)))))) ORDER BY (~ (((((rt0.c1)AND(vt0.c0)))OR(x''))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))==((((t0.c60)/(rt0.c0)))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON ((vt0.c1)OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)) ORDER BY (~ (((((rt0.c1)AND(vt0.c0)))OR(x'')))));
SELECT * FROM t0, vt0 CROSS JOIN rt0 ON ((vt0.c1)OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)) WHERE ((((vt0.c0))==((((t0.c60)/(rt0.c0)))))) ORDER BY (~ (((((rt0.c1)AND(vt0.c0)))OR(x''))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))==((((t0.c60)/(rt0.c0)))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON ((vt0.c1)OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)) ORDER BY (~ (((((rt0.c1)AND(vt0.c0)))OR(x'')))));
SELECT * FROM t0, vt0 CROSS JOIN rt0 ON ((vt0.c1)OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)) WHERE ((((vt0.c0))==((((t0.c60)/(rt0.c0)))))) ORDER BY (~ (((((rt0.c1)AND(vt0.c0)))OR(x''))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((vt0.c0)<>(vt0.c2))) BETWEEN (NULL) AND (((((vt0.c2)AND(vt0.c0)))AND(vt0.c2)))) WHERE (UPPER(((vt0.c0)IS NOT(rt0.c2)))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('1132300690')) THEN ((vt0.c2)LIKE(rt0.c1)) ELSE NULL END ASC  NULLS FIRST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt0.c0)IS NOT(rt0.c2)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((vt0.c0)<>(vt0.c2))) BETWEEN (NULL) AND (((((vt0.c2)AND(vt0.c0)))AND(vt0.c2)))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('1132300690')) THEN ((vt0.c2)LIKE(rt0.c1)) ELSE NULL END ASC  NULLS FIRST, rt0.c1 ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((vt0.c0)<>(vt0.c2))) BETWEEN (NULL) AND (((((vt0.c2)AND(vt0.c0)))AND(vt0.c2)))) WHERE (UPPER(((vt0.c0)IS NOT(rt0.c2)))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('1132300690')) THEN ((vt0.c2)LIKE(rt0.c1)) ELSE NULL END ASC  NULLS FIRST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt0.c0)IS NOT(rt0.c2)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((vt0.c0)<>(vt0.c2))) BETWEEN (NULL) AND (((((vt0.c2)AND(vt0.c0)))AND(vt0.c2)))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('1132300690')) THEN ((vt0.c2)LIKE(rt0.c1)) ELSE NULL END ASC  NULLS FIRST, rt0.c1 ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((vt0.c0)<>(vt0.c2))) BETWEEN (NULL) AND (((((vt0.c2)AND(vt0.c0)))AND(vt0.c2)))) WHERE (UPPER(((vt0.c0)IS NOT(rt0.c2)))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('1132300690')) THEN ((vt0.c2)LIKE(rt0.c1)) ELSE NULL END ASC  NULLS FIRST, rt0.c1 ASC;
SELECT * FROM t0 WHERE (CASE x''  WHEN t0.c60 COLLATE BINARY THEN t0.c60 END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN t0.c60 COLLATE BINARY THEN t0.c60 END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE x''  WHEN t0.c60 COLLATE BINARY THEN t0.c60 END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN t0.c60 COLLATE BINARY THEN t0.c60 END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE x''  WHEN t0.c60 COLLATE BINARY THEN t0.c60 END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((((t0.c60)>(vt0.c0)))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN t0.c60 WHEN NULL THEN vt0.c1 END)))OR(vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c2 AS INTEGER)))) ORDER BY ((t0.c60)<(((vt0.c1)GLOB(t0.c60))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c60)>(vt0.c0)))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN t0.c60 WHEN NULL THEN vt0.c1 END)))OR(vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c60)<(((vt0.c1)GLOB(t0.c60))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((((t0.c60)>(vt0.c0)))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN t0.c60 WHEN NULL THEN vt0.c1 END)))OR(vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c2 AS INTEGER)))) ORDER BY ((t0.c60)<(((vt0.c1)GLOB(t0.c60))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c60)>(vt0.c0)))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN t0.c60 WHEN NULL THEN vt0.c1 END)))OR(vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c60)<(((vt0.c1)GLOB(t0.c60))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((((t0.c60)>(vt0.c0)))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN t0.c60 WHEN NULL THEN vt0.c1 END)))OR(vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c2 AS INTEGER)))) ORDER BY ((t0.c60)<(((vt0.c1)GLOB(t0.c60))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON vt0.c1 WHERE (rt0.c2) ORDER BY (((((vt0.c0)OR(rt0.c0)))AND(t0.c60)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON vt0.c1 ORDER BY (((((vt0.c0)OR(rt0.c0)))AND(t0.c60)) IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON vt0.c1 WHERE (rt0.c2) ORDER BY (((((vt0.c0)OR(rt0.c0)))AND(t0.c60)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON vt0.c1 ORDER BY (((((vt0.c0)OR(rt0.c0)))AND(t0.c60)) IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON vt0.c1 WHERE (rt0.c2) ORDER BY (((((vt0.c0)OR(rt0.c0)))AND(t0.c60)) IN ()) ASC;
SELECT ALL * FROM vt0 WHERE (((((x'') IS TRUE))==(vt0.c2))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN (((vt0.c1)&(vt0.c2))) AND ((~ (vt0.c1))))  NULLS FIRST, (((vt0.c2)) BETWEEN ((vt0.c2)) AND ((CASE WHEN '-793553641' THEN vt0.c1 END))) DESC, (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) IN (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'') IS TRUE))=(vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0))) NOT BETWEEN (((vt0.c1)&(vt0.c2))) AND ((~ (vt0.c1))))  NULLS FIRST, (((vt0.c2)) BETWEEN ((vt0.c2)) AND ((CASE WHEN '-793553641' THEN vt0.c1 END))) DESC, (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) IN (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((x'') IS TRUE))==(vt0.c2))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN (((vt0.c1)&(vt0.c2))) AND ((~ (vt0.c1))))  NULLS FIRST, (((vt0.c2)) BETWEEN ((vt0.c2)) AND ((CASE WHEN '-793553641' THEN vt0.c1 END))) DESC, (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) IN (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'') IS TRUE))=(vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0))) NOT BETWEEN (((vt0.c1)&(vt0.c2))) AND ((~ (vt0.c1))))  NULLS FIRST, (((vt0.c2)) BETWEEN ((vt0.c2)) AND ((CASE WHEN '-793553641' THEN vt0.c1 END))) DESC, (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) IN (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((x'') IS TRUE))==(vt0.c2))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN (((vt0.c1)&(vt0.c2))) AND ((~ (vt0.c1))))  NULLS FIRST, (((vt0.c2)) BETWEEN ((vt0.c2)) AND ((CASE WHEN '-793553641' THEN vt0.c1 END))) DESC, (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) IN (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (LTRIM((((rt0.c2)) BETWEEN (('↝k')) AND ((rt0.c0))), (t0.c60 IN ()))) ORDER BY (((vt0.c0 COLLATE BINARY))<=((vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((((rt0.c2)) BETWEEN (('↝k')) AND ((rt0.c0))), (t0.c60 IN ()))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((vt0.c0 COLLATE BINARY))<=((vt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (LTRIM((((rt0.c2)) BETWEEN (('↝k')) AND ((rt0.c0))), (t0.c60 IN ()))) ORDER BY (((vt0.c0 COLLATE BINARY))<=((vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((((rt0.c2)) BETWEEN (('↝k')) AND ((rt0.c0))), (t0.c60 IN ()))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((vt0.c0 COLLATE BINARY))<=((vt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (LTRIM((((rt0.c2)) BETWEEN (('↝k')) AND ((rt0.c0))), (t0.c60 IN ()))) ORDER BY (((vt0.c0 COLLATE BINARY))<=((vt0.c0))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((((((rt0.c1)OR(rt0.c2)))OR('282066312'))))>(((rt0.c2 IN ()))))) ORDER BY (NULL IN (((vt0.c0) ISNULL)))  NULLS FIRST, ((-1.059284E9)IS NOT(t0.c60));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)OR(rt0.c2)))OR('282066312'))))>(((rt0.c2 IN ()))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (NULL IN (((vt0.c0) ISNULL)))  NULLS FIRST, ((-1.059284E9)IS NOT(t0.c60)));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((((((rt0.c1)OR(rt0.c2)))OR('282066312'))))>(((rt0.c2 IN ()))))) ORDER BY (NULL IN (((vt0.c0) ISNULL)))  NULLS FIRST, ((-1.059284E9)IS NOT(t0.c60));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)OR(rt0.c2)))OR('282066312'))))>(((rt0.c2 IN ()))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (NULL IN (((vt0.c0) ISNULL)))  NULLS FIRST, ((-1.059284E9)IS NOT(t0.c60)));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((((((rt0.c1)OR(rt0.c2)))OR('282066312'))))>(((rt0.c2 IN ()))))) ORDER BY (NULL IN (((vt0.c0) ISNULL)))  NULLS FIRST, ((-1.059284E9)IS NOT(t0.c60));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2) NOT BETWEEN (COALESCE(DISTINCT vt0.c2, vt0.c1, vt0.c0, vt0.c1)) AND (vt0.c0))) ORDER BY ((x'') BETWEEN (((vt0.c2) IS FALSE)) AND (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) NOT BETWEEN (COALESCE(DISTINCT vt0.c2, vt0.c1, vt0.c0, vt0.c1)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((x'') BETWEEN (((vt0.c2) IS FALSE)) AND (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2) NOT BETWEEN (COALESCE(DISTINCT vt0.c2, vt0.c1, vt0.c0, vt0.c1)) AND (vt0.c0))) ORDER BY ((x'') BETWEEN (((vt0.c2) IS FALSE)) AND (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) NOT BETWEEN (COALESCE(DISTINCT vt0.c2, vt0.c1, vt0.c0, vt0.c1)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((x'') BETWEEN (((vt0.c2) IS FALSE)) AND (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2) NOT BETWEEN (COALESCE(DISTINCT vt0.c2, vt0.c1, vt0.c0, vt0.c1)) AND (vt0.c0))) ORDER BY ((x'') BETWEEN (((vt0.c2) IS FALSE)) AND (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c60) ORDER BY t0.c60 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c60) IS TRUE)  as count FROM t0 ORDER BY t0.c60 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c60) ORDER BY t0.c60 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c60) IS TRUE)  as count FROM t0 ORDER BY t0.c60 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c60) ORDER BY t0.c60 ASC  NULLS LAST;
SELECT * FROM t0, rt0 WHERE ((- (CAST(t0.c60 AS TEXT)))) ORDER BY t0.c60 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(t0.c60 AS TEXT)))) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c60 COLLATE BINARY  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((- (CAST(t0.c60 AS TEXT)))) ORDER BY t0.c60 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(t0.c60 AS TEXT)))) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c60 COLLATE BINARY  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((- (CAST(t0.c60 AS TEXT)))) ORDER BY t0.c60 COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM rt0, t0, vt0 WHERE (UPPER(DISTINCT ((rt0.c0)IS NOT(rt0.c0)))) ORDER BY (((((t0.c60, 0Xffffffffa7fb7363, vt0.c2))==((t0.c60, vt0.c0, rt0.c2)))) ISNULL) ASC, CASE ((t0.c60) BETWEEN (vt0.c0) AND (t0.c60))  WHEN CASE WHEN vt0.c1 THEN x'd204' WHEN t0.c60 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c0)<=(vt0.c1)) WHEN CAST(vt0.c2 AS REAL) THEN (+ (vt0.c1)) WHEN -1568221482 THEN CAST(vt0.c1 AS TEXT) ELSE ((vt0.c1)<(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((rt0.c0)IS NOT(rt0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((((t0.c60, 0xffffffffa7fb7363, vt0.c2))==((t0.c60, vt0.c0, rt0.c2)))) ISNULL) ASC, CASE ((t0.c60) BETWEEN (vt0.c0) AND (t0.c60))  WHEN CASE WHEN vt0.c1 THEN x'd204' WHEN t0.c60 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c0)<=(vt0.c1)) WHEN CAST(vt0.c2 AS REAL) THEN (+ (vt0.c1)) WHEN -1568221482 THEN CAST(vt0.c1 AS TEXT) ELSE ((vt0.c1)<(vt0.c0)) END);
SELECT ALL * FROM rt0, t0, vt0 WHERE (UPPER(DISTINCT ((rt0.c0)IS NOT(rt0.c0)))) ORDER BY (((((t0.c60, 0Xffffffffa7fb7363, vt0.c2))==((t0.c60, vt0.c0, rt0.c2)))) ISNULL) ASC, CASE ((t0.c60) BETWEEN (vt0.c0) AND (t0.c60))  WHEN CASE WHEN vt0.c1 THEN x'd204' WHEN t0.c60 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c0)<=(vt0.c1)) WHEN CAST(vt0.c2 AS REAL) THEN (+ (vt0.c1)) WHEN -1568221482 THEN CAST(vt0.c1 AS TEXT) ELSE ((vt0.c1)<(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((rt0.c0)IS NOT(rt0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((((t0.c60, 0xffffffffa7fb7363, vt0.c2))==((t0.c60, vt0.c0, rt0.c2)))) ISNULL) ASC, CASE ((t0.c60) BETWEEN (vt0.c0) AND (t0.c60))  WHEN CASE WHEN vt0.c1 THEN x'd204' WHEN t0.c60 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c0)<=(vt0.c1)) WHEN CAST(vt0.c2 AS REAL) THEN (+ (vt0.c1)) WHEN -1568221482 THEN CAST(vt0.c1 AS TEXT) ELSE ((vt0.c1)<(vt0.c0)) END);
SELECT ALL * FROM rt0, t0, vt0 WHERE (UPPER(DISTINCT ((rt0.c0)IS NOT(rt0.c0)))) ORDER BY (((((t0.c60, 0Xffffffffa7fb7363, vt0.c2))==((t0.c60, vt0.c0, rt0.c2)))) ISNULL) ASC, CASE ((t0.c60) BETWEEN (vt0.c0) AND (t0.c60))  WHEN CASE WHEN vt0.c1 THEN x'd204' WHEN t0.c60 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c0)<=(vt0.c1)) WHEN CAST(vt0.c2 AS REAL) THEN (+ (vt0.c1)) WHEN -1568221482 THEN CAST(vt0.c1 AS TEXT) ELSE ((vt0.c1)<(vt0.c0)) END;
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON CAST((vt0.c0 IN ()) AS REAL) WHERE (CASE WHEN CASE rt0.c0  WHEN vt0.c2 THEN vt0.c1 END THEN x'8d54' END) ORDER BY DATETIME(SQLITE_SOURCE_ID(), vt0.c2 COLLATE NOCASE, (~ (t0.c60))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c0  WHEN vt0.c2 THEN vt0.c1 END THEN x'8d54' END) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON CAST((vt0.c0 IN ()) AS REAL) ORDER BY DATETIME(SQLITE_SOURCE_ID(), vt0.c2 COLLATE NOCASE, (~ (t0.c60))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON CAST((vt0.c0 IN ()) AS REAL) WHERE (CASE WHEN CASE rt0.c0  WHEN vt0.c2 THEN vt0.c1 END THEN x'8d54' END) ORDER BY DATETIME(SQLITE_SOURCE_ID(), vt0.c2 COLLATE NOCASE, (~ (t0.c60))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c0  WHEN vt0.c2 THEN vt0.c1 END THEN x'8d54' END) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON CAST((vt0.c0 IN ()) AS REAL) ORDER BY DATETIME(SQLITE_SOURCE_ID(), vt0.c2 COLLATE NOCASE, (~ (t0.c60))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON CAST((vt0.c0 IN ()) AS REAL) WHERE (CASE WHEN CASE rt0.c0  WHEN vt0.c2 THEN vt0.c1 END THEN x'8d54' END) ORDER BY DATETIME(SQLITE_SOURCE_ID(), vt0.c2 COLLATE NOCASE, (~ (t0.c60))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c60 COLLATE NOCASE) ORDER BY ((((((((((t0.c60)OR(t0.c60)))AND(t0.c60)))OR(t0.c60)))OR(t0.c60))) NOT BETWEEN ((t0.c60 IN ())) AND ('898662142'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c60 COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c60)OR(t0.c60)))AND(t0.c60)))OR(t0.c60)))OR(t0.c60))) NOT BETWEEN ((t0.c60 IN ())) AND ('898662142'))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c60 COLLATE NOCASE) ORDER BY ((((((((((t0.c60)OR(t0.c60)))AND(t0.c60)))OR(t0.c60)))OR(t0.c60))) NOT BETWEEN ((t0.c60 IN ())) AND ('898662142'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c60 COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c60)OR(t0.c60)))AND(t0.c60)))OR(t0.c60)))OR(t0.c60))) NOT BETWEEN ((t0.c60 IN ())) AND ('898662142'))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c60 COLLATE NOCASE) ORDER BY ((((((((((t0.c60)OR(t0.c60)))AND(t0.c60)))OR(t0.c60)))OR(t0.c60))) NOT BETWEEN ((t0.c60 IN ())) AND ('898662142'))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (UPPER(((((t0.c60)OR(t0.c60)))AND(t0.c60))));
SELECT SUM(count) FROM (SELECT ((UPPER(((((t0.c60)OR(t0.c60)))AND(t0.c60)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (UPPER(((((t0.c60)OR(t0.c60)))AND(t0.c60))));
SELECT SUM(count) FROM (SELECT ((UPPER(((((t0.c60)OR(t0.c60)))AND(t0.c60)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (UPPER(((((t0.c60)OR(t0.c60)))AND(t0.c60))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c1))<((((vt0.c0)*(t0.c60)))))) ORDER BY vt0.c2 ASC  NULLS LAST, ((((t0.c60) NOT BETWEEN (t0.c60) AND (vt0.c1))) BETWEEN (((t0.c60)IS(vt0.c0))) AND (((vt0.c0) BETWEEN (t0.c60) AND (t0.c60))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1))<((((vt0.c0)*(t0.c60)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c2 ASC  NULLS LAST, ((((t0.c60) NOT BETWEEN (t0.c60) AND (vt0.c1))) BETWEEN (((t0.c60)IS(vt0.c0))) AND (((vt0.c0) BETWEEN (t0.c60) AND (t0.c60))))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c1))<((((vt0.c0)*(t0.c60)))))) ORDER BY vt0.c2 ASC  NULLS LAST, ((((t0.c60) NOT BETWEEN (t0.c60) AND (vt0.c1))) BETWEEN (((t0.c60)IS(vt0.c0))) AND (((vt0.c0) BETWEEN (t0.c60) AND (t0.c60))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1))<((((vt0.c0)*(t0.c60)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c2 ASC  NULLS LAST, ((((t0.c60) NOT BETWEEN (t0.c60) AND (vt0.c1))) BETWEEN (((t0.c60)IS(vt0.c0))) AND (((vt0.c0) BETWEEN (t0.c60) AND (t0.c60))))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c1))<((((vt0.c0)*(t0.c60)))))) ORDER BY vt0.c2 ASC  NULLS LAST, ((((t0.c60) NOT BETWEEN (t0.c60) AND (vt0.c1))) BETWEEN (((t0.c60)IS(vt0.c0))) AND (((vt0.c0) BETWEEN (t0.c60) AND (t0.c60))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c60) ORDER BY (NOT (0.5007067196439908)) DESC, (((((t0.c60)!=(t0.c60))))<=((((((t0.c60)OR(t0.c60)))AND(t0.c60)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c60) IS TRUE)  as count FROM t0 ORDER BY (NOT (0.5007067196439908)) DESC, (((((t0.c60)<>(t0.c60))))<=((((((t0.c60)OR(t0.c60)))AND(t0.c60)))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c60) ORDER BY (NOT (0.5007067196439908)) DESC, (((((t0.c60)!=(t0.c60))))<=((((((t0.c60)OR(t0.c60)))AND(t0.c60)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c60) IS TRUE)  as count FROM t0 ORDER BY (NOT (0.5007067196439908)) DESC, (((((t0.c60)<>(t0.c60))))<=((((((t0.c60)OR(t0.c60)))AND(t0.c60)))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c60) ORDER BY (NOT (0.5007067196439908)) DESC, (((((t0.c60)!=(t0.c60))))<=((((((t0.c60)OR(t0.c60)))AND(t0.c60)))))  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (x'');
SELECT * FROM vt0, t0 WHERE ((((((((((((((((vt0.c2)OR(t0.c60)))OR(vt0.c0)))OR(t0.c60)))AND(vt0.c0)))OR(t0.c60)))OR(t0.c60))))>(((((vt0.c1))<=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((vt0.c2)OR(t0.c60)))OR(vt0.c0)))OR(t0.c60)))AND(vt0.c0)))OR(t0.c60)))OR(t0.c60))))>(((((vt0.c1))<=((vt0.c0))))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((((((((((((vt0.c2)OR(t0.c60)))OR(vt0.c0)))OR(t0.c60)))AND(vt0.c0)))OR(t0.c60)))OR(t0.c60))))>(((((vt0.c1))<=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((vt0.c2)OR(t0.c60)))OR(vt0.c0)))OR(t0.c60)))AND(vt0.c0)))OR(t0.c60)))OR(t0.c60))))>(((((vt0.c1))<=((vt0.c0))))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((((((((((((vt0.c2)OR(t0.c60)))OR(vt0.c0)))OR(t0.c60)))AND(vt0.c0)))OR(t0.c60)))OR(t0.c60))))>(((((vt0.c1))<=((vt0.c0)))))));
SELECT ALL * FROM rt0, vt0 NATURAL JOIN t0 WHERE ((((t0.c60, ((rt0.c0)IS(rt0.c2)), ((rt0.c2)%(rt0.c1))))>((((rt0.c0)<<(rt0.c1)), ((rt0.c1) NOTNULL), (((vt0.c1, -1754507522, vt0.c0))<((vt0.c1, '', '-1745964974')))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60, ((rt0.c0)IS(rt0.c2)), ((rt0.c2)%(rt0.c1))))>((((rt0.c0)<<(rt0.c1)), ((rt0.c1) NOTNULL), (((vt0.c1, -1754507522, vt0.c0))<((vt0.c1, '', '-1745964974'))))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN t0 WHERE ((((t0.c60, ((rt0.c0)IS(rt0.c2)), ((rt0.c2)%(rt0.c1))))>((((rt0.c0)<<(rt0.c1)), ((rt0.c1) NOTNULL), (((vt0.c1, -1754507522, vt0.c0))<((vt0.c1, '', '-1745964974')))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c60, ((rt0.c0)IS(rt0.c2)), ((rt0.c2)%(rt0.c1))))>((((rt0.c0)<<(rt0.c1)), ((rt0.c1) NOTNULL), (((vt0.c1, -1754507522, vt0.c0))<((vt0.c1, '', '-1745964974'))))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN t0 WHERE ((((t0.c60, ((rt0.c0)IS(rt0.c2)), ((rt0.c2)%(rt0.c1))))>((((rt0.c0)<<(rt0.c1)), ((rt0.c1) NOTNULL), (((vt0.c1, -1754507522, vt0.c0))<((vt0.c1, '', '-1745964974')))))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c2)/(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)/(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c2)/(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)/(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c2)/(vt0.c1)) IN ()));
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c1)) BETWEEN ((((rt0.c2) NOTNULL))) AND ((rt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((rt0.c2) NOTNULL))) AND ((rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c1)) BETWEEN ((((rt0.c2) NOTNULL))) AND ((rt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((rt0.c2) NOTNULL))) AND ((rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c1)) BETWEEN ((((rt0.c2) NOTNULL))) AND ((rt0.c1 COLLATE RTRIM))));
SELECT * FROM t0, rt0, vt0 WHERE (vt0.c2) ORDER BY (- (((rt0.c1)<=(vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (- (((rt0.c1)<=(vt0.c2)))) ASC);
SELECT * FROM t0, rt0, vt0 WHERE (vt0.c2) ORDER BY (- (((rt0.c1)<=(vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (- (((rt0.c1)<=(vt0.c2)))) ASC);
SELECT * FROM t0, rt0, vt0 WHERE (vt0.c2) ORDER BY (- (((rt0.c1)<=(vt0.c2)))) ASC;
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN '' END)&((((t0.c60)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) RIGHT OUTER JOIN vt0 ON LIKELIHOOD(rt0.c0, 0.8455688022729444) WHERE ((~ (t0.c60))) ORDER BY ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c60))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN '' END)&((((t0.c60)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) RIGHT OUTER JOIN vt0 ON LIKELIHOOD(rt0.c0, 0.8455688022729444) ORDER BY ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN '' END)&((((t0.c60)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) RIGHT OUTER JOIN vt0 ON LIKELIHOOD(rt0.c0, 0.8455688022729444) WHERE ((~ (t0.c60))) ORDER BY ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c60))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN '' END)&((((t0.c60)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) RIGHT OUTER JOIN vt0 ON LIKELIHOOD(rt0.c0, 0.8455688022729444) ORDER BY ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN '' END)&((((t0.c60)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) RIGHT OUTER JOIN vt0 ON LIKELIHOOD(rt0.c0, 0.8455688022729444) WHERE ((~ (t0.c60))) ORDER BY ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN (NOT (x'0e6b')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c0 IN ()) THEN (NOT (x'0e6b')) END) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN (NOT (x'0e6b')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c0 IN ()) THEN (NOT (x'0e6b')) END) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN (NOT (x'0e6b')) END);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON (('2147464464' COLLATE RTRIM)<((((vt0.c0)) BETWEEN ((t0.c60)) AND ((t0.c60))))) LEFT OUTER JOIN vt0 ON CASE WHEN NULL COLLATE BINARY THEN (~ (t0.c60)) WHEN ((vt0.c0)|(vt0.c1)) THEN (rt0.c0 IN ()) WHEN t0.c60 THEN UPPER(rt0.c0) END WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((vt0.c1)>>(vt0.c2))) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((vt0.c1)>>(vt0.c2))) AND (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (('2147464464' COLLATE RTRIM)<((((vt0.c0)) BETWEEN ((t0.c60)) AND ((t0.c60))))) LEFT OUTER JOIN vt0 ON CASE WHEN NULL COLLATE BINARY THEN (~ (t0.c60)) WHEN ((vt0.c0)|(vt0.c1)) THEN (rt0.c0 IN ()) WHEN t0.c60 THEN UPPER(rt0.c0) END);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON (('2147464464' COLLATE RTRIM)<((((vt0.c0)) BETWEEN ((t0.c60)) AND ((t0.c60))))) LEFT OUTER JOIN vt0 ON CASE WHEN NULL COLLATE BINARY THEN (~ (t0.c60)) WHEN ((vt0.c0)|(vt0.c1)) THEN (rt0.c0 IN ()) WHEN t0.c60 THEN UPPER(rt0.c0) END WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((vt0.c1)>>(vt0.c2))) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((vt0.c1)>>(vt0.c2))) AND (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (('2147464464' COLLATE RTRIM)<((((vt0.c0)) BETWEEN ((t0.c60)) AND ((t0.c60))))) LEFT OUTER JOIN vt0 ON CASE WHEN NULL COLLATE BINARY THEN (~ (t0.c60)) WHEN ((vt0.c0)|(vt0.c1)) THEN (rt0.c0 IN ()) WHEN t0.c60 THEN UPPER(rt0.c0) END);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON (('2147464464' COLLATE RTRIM)<((((vt0.c0)) BETWEEN ((t0.c60)) AND ((t0.c60))))) LEFT OUTER JOIN vt0 ON CASE WHEN NULL COLLATE BINARY THEN (~ (t0.c60)) WHEN ((vt0.c0)|(vt0.c1)) THEN (rt0.c0 IN ()) WHEN t0.c60 THEN UPPER(rt0.c0) END WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((vt0.c1)>>(vt0.c2))) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN CASE t0.c60  WHEN 0.08440342731639683 THEN vt0.c0 WHEN vt0.c0 THEN '-600266634' WHEN t0.c60 THEN vt0.c2 END THEN ((vt0.c2) NOT BETWEEN (rt0.c0) AND ('-1794268434')) ELSE ((rt0.c2)<=(vt0.c2)) END) ORDER BY CASE CAST(t0.c60 AS BLOB)  WHEN (rt0.c2 IN ()) THEN (~ (vt0.c0)) WHEN ((vt0.c1) BETWEEN (x'') AND (rt0.c2)) THEN (NOT (rt0.c1)) WHEN ((vt0.c0)%(vt0.c1)) THEN vt0.c0 ELSE vt0.c2 END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t0.c60  WHEN 0.08440342731639683 THEN vt0.c0 WHEN vt0.c0 THEN '-600266634' WHEN t0.c60 THEN vt0.c2 END THEN ((vt0.c2) NOT BETWEEN (rt0.c0) AND ('-1794268434')) ELSE ((rt0.c2)<=(vt0.c2)) END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE CAST(t0.c60 AS BLOB)  WHEN (rt0.c2 IN ()) THEN (~ (vt0.c0)) WHEN ((vt0.c1) BETWEEN (x'') AND (rt0.c2)) THEN (NOT (rt0.c1)) WHEN ((vt0.c0)%(vt0.c1)) THEN vt0.c0 ELSE vt0.c2 END);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN CASE t0.c60  WHEN 0.08440342731639683 THEN vt0.c0 WHEN vt0.c0 THEN '-600266634' WHEN t0.c60 THEN vt0.c2 END THEN ((vt0.c2) NOT BETWEEN (rt0.c0) AND ('-1794268434')) ELSE ((rt0.c2)<=(vt0.c2)) END) ORDER BY CASE CAST(t0.c60 AS BLOB)  WHEN (rt0.c2 IN ()) THEN (~ (vt0.c0)) WHEN ((vt0.c1) BETWEEN (x'') AND (rt0.c2)) THEN (NOT (rt0.c1)) WHEN ((vt0.c0)%(vt0.c1)) THEN vt0.c0 ELSE vt0.c2 END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t0.c60  WHEN 0.08440342731639683 THEN vt0.c0 WHEN vt0.c0 THEN '-600266634' WHEN t0.c60 THEN vt0.c2 END THEN ((vt0.c2) NOT BETWEEN (rt0.c0) AND ('-1794268434')) ELSE ((rt0.c2)<=(vt0.c2)) END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE CAST(t0.c60 AS BLOB)  WHEN (rt0.c2 IN ()) THEN (~ (vt0.c0)) WHEN ((vt0.c1) BETWEEN (x'') AND (rt0.c2)) THEN (NOT (rt0.c1)) WHEN ((vt0.c0)%(vt0.c1)) THEN vt0.c0 ELSE vt0.c2 END);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN CASE t0.c60  WHEN 0.08440342731639683 THEN vt0.c0 WHEN vt0.c0 THEN '-600266634' WHEN t0.c60 THEN vt0.c2 END THEN ((vt0.c2) NOT BETWEEN (rt0.c0) AND ('-1794268434')) ELSE ((rt0.c2)<=(vt0.c2)) END) ORDER BY CASE CAST(t0.c60 AS BLOB)  WHEN (rt0.c2 IN ()) THEN (~ (vt0.c0)) WHEN ((vt0.c1) BETWEEN (x'') AND (rt0.c2)) THEN (NOT (rt0.c1)) WHEN ((vt0.c0)%(vt0.c1)) THEN vt0.c0 ELSE vt0.c2 END;
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((((((((rt0.c2 COLLATE NOCASE)OR(rt0.c0)))OR(((t0.c60) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CASE WHEN t0.c60 THEN rt0.c1 ELSE NULL END)))AND(((rt0.c1)IS(t0.c60)))) WHERE ((((((t0.c60))<>((0x39ecb868)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c60))<>((0X39ecb868)))) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((((rt0.c2 COLLATE NOCASE)OR(rt0.c0)))OR(((t0.c60) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CASE WHEN t0.c60 THEN rt0.c1 ELSE NULL END)))AND(((rt0.c1)IS(t0.c60)))));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((((((((rt0.c2 COLLATE NOCASE)OR(rt0.c0)))OR(((t0.c60) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CASE WHEN t0.c60 THEN rt0.c1 ELSE NULL END)))AND(((rt0.c1)IS(t0.c60)))) WHERE ((((((t0.c60))<>((0x39ecb868)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c60))<>((0X39ecb868)))) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((((rt0.c2 COLLATE NOCASE)OR(rt0.c0)))OR(((t0.c60) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CASE WHEN t0.c60 THEN rt0.c1 ELSE NULL END)))AND(((rt0.c1)IS(t0.c60)))));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((((((((rt0.c2 COLLATE NOCASE)OR(rt0.c0)))OR(((t0.c60) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CASE WHEN t0.c60 THEN rt0.c1 ELSE NULL END)))AND(((rt0.c1)IS(t0.c60)))) WHERE ((((((t0.c60))<>((0x39ecb868)))) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c2))>((vt0.c0)))) AND (((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c2))>((vt0.c0)))) AND (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c2))>((vt0.c0)))) AND (((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c2))>((vt0.c0)))) AND (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c2))>((vt0.c0)))) AND (((vt0.c1) IS TRUE))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((('-251277411')>>(t0.c60)))OR((((t0.c60)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))OR((rt0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((('-251277411')>>(t0.c60)))OR((((t0.c60)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))OR((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((('-251277411')>>(t0.c60)))OR((((t0.c60)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))OR((rt0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((('-251277411')>>(t0.c60)))OR((((t0.c60)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))OR((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((('-251277411')>>(t0.c60)))OR((((t0.c60)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))OR((rt0.c0 IN (rt0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)AND((t0.c60 IN ()))))AND(((((((((((((t0.c60)AND(t0.c60)))AND(0.9742352008298742)))OR(t0.c60)))OR(t0.c60)))OR(t0.c60)))AND(t0.c60)))));
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)AND((t0.c60 IN ()))))AND(((((((((((((t0.c60)AND(t0.c60)))AND(0.9742352008298742)))OR(t0.c60)))OR(t0.c60)))OR(t0.c60)))AND(t0.c60))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)AND((t0.c60 IN ()))))AND(((((((((((((t0.c60)AND(t0.c60)))AND(0.9742352008298742)))OR(t0.c60)))OR(t0.c60)))OR(t0.c60)))AND(t0.c60)))));
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)AND((t0.c60 IN ()))))AND(((((((((((((t0.c60)AND(t0.c60)))AND(0.9742352008298742)))OR(t0.c60)))OR(t0.c60)))OR(t0.c60)))AND(t0.c60))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)AND((t0.c60 IN ()))))AND(((((((((((((t0.c60)AND(t0.c60)))AND(0.9742352008298742)))OR(t0.c60)))OR(t0.c60)))OR(t0.c60)))AND(t0.c60)))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)/(vt0.c0)))AND((((vt0.c2, vt0.c2, vt0.c2)) BETWEEN ((vt0.c0, vt0.c0, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c2))))))AND((0x620cf7e4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)/(vt0.c0)))AND((((vt0.c2, vt0.c2, vt0.c2)) BETWEEN ((vt0.c0, vt0.c0, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c2))))))AND((0x620cf7e4 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)/(vt0.c0)))AND((((vt0.c2, vt0.c2, vt0.c2)) BETWEEN ((vt0.c0, vt0.c0, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c2))))))AND((0x620cf7e4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)/(vt0.c0)))AND((((vt0.c2, vt0.c2, vt0.c2)) BETWEEN ((vt0.c0, vt0.c0, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c2))))))AND((0x620cf7e4 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)/(vt0.c0)))AND((((vt0.c2, vt0.c2, vt0.c2)) BETWEEN ((vt0.c0, vt0.c0, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c2))))))AND((0x620cf7e4 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array(CHANGES(), (((rt0.c2))==((x'')))));
SELECT SUM(count) FROM (SELECT ALL ((json_array(CHANGES(), (((rt0.c2))=((x''))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array(CHANGES(), (((rt0.c2))==((x'')))));
SELECT SUM(count) FROM (SELECT ALL ((json_array(CHANGES(), (((rt0.c2))=((x''))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array(CHANGES(), (((rt0.c2))==((x'')))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<>((vt0.c1)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))!=((vt0.c1)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<>((vt0.c1)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))!=((vt0.c1)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<>((vt0.c1)))) ISNULL));
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (('pB')GLOB(t0.c60)) COLLATE NOCASE COLLATE RTRIM WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (('pB')GLOB(t0.c60)) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (('pB')GLOB(t0.c60)) COLLATE NOCASE COLLATE RTRIM WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (('pB')GLOB(t0.c60)) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (('pB')GLOB(t0.c60)) COLLATE NOCASE COLLATE RTRIM WHERE (vt0.c2);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE x''  WHEN vt0.c1 COLLATE RTRIM THEN CASE rt0.c1  WHEN vt0.c2 THEN t0.c60 WHEN vt0.c1 THEN 0.16620543586858616 WHEN t0.c60 THEN vt0.c0 ELSE vt0.c0 END WHEN vt0.c2 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) WHEN rt0.c2 THEN (vt0.c0 IN (vt0.c1, vt0.c0)) END) ORDER BY ((LIKE(vt0.c0, rt0.c1))GLOB(MAX(rt0.c2, rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN vt0.c1 COLLATE RTRIM THEN CASE rt0.c1  WHEN vt0.c2 THEN t0.c60 WHEN vt0.c1 THEN 0.16620543586858616 WHEN t0.c60 THEN vt0.c0 ELSE vt0.c0 END WHEN vt0.c2 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) WHEN rt0.c2 THEN (vt0.c0 IN (vt0.c1, vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((LIKE(vt0.c0, rt0.c1))GLOB(MAX(rt0.c2, rt0.c0)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE x''  WHEN vt0.c1 COLLATE RTRIM THEN CASE rt0.c1  WHEN vt0.c2 THEN t0.c60 WHEN vt0.c1 THEN 0.16620543586858616 WHEN t0.c60 THEN vt0.c0 ELSE vt0.c0 END WHEN vt0.c2 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) WHEN rt0.c2 THEN (vt0.c0 IN (vt0.c1, vt0.c0)) END) ORDER BY ((LIKE(vt0.c0, rt0.c1))GLOB(MAX(rt0.c2, rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN vt0.c1 COLLATE RTRIM THEN CASE rt0.c1  WHEN vt0.c2 THEN t0.c60 WHEN vt0.c1 THEN 0.16620543586858616 WHEN t0.c60 THEN vt0.c0 ELSE vt0.c0 END WHEN vt0.c2 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) WHEN rt0.c2 THEN (vt0.c0 IN (vt0.c1, vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((LIKE(vt0.c0, rt0.c1))GLOB(MAX(rt0.c2, rt0.c0)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE x''  WHEN vt0.c1 COLLATE RTRIM THEN CASE rt0.c1  WHEN vt0.c2 THEN t0.c60 WHEN vt0.c1 THEN 0.16620543586858616 WHEN t0.c60 THEN vt0.c0 ELSE vt0.c0 END WHEN vt0.c2 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) WHEN rt0.c2 THEN (vt0.c0 IN (vt0.c1, vt0.c0)) END) ORDER BY ((LIKE(vt0.c0, rt0.c1))GLOB(MAX(rt0.c2, rt0.c0)))  NULLS LAST;
SELECT * FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('');
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))OR(((rt0.c2)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))OR(((rt0.c2)IS(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))OR(((rt0.c2)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))OR(((rt0.c2)IS(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))OR(((rt0.c2)IS(rt0.c1)))));
SELECT ALL * FROM t0, rt0 WHERE (1727942448) ORDER BY (((t0.c60, rt0.c0, rt0.c0, rt0.c1, x'')) BETWEEN ((rt0.c2, CAST(rt0.c0 AS REAL), ((rt0.c0)=(rt0.c2)), ((rt0.c2) IS TRUE), ((NULL) BETWEEN (t0.c60) AND (rt0.c0)))) AND ((t0.c60, rt0.c0, ((t0.c60)IS(rt0.c2)), ((rt0.c1)OR(rt0.c1)), (((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((x'671e', 0.2694046894338029, rt0.c0)) AND ((t0.c60, rt0.c1, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((1727942448) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c60, rt0.c0, rt0.c0, rt0.c1, x'')) BETWEEN ((rt0.c2, CAST(rt0.c0 AS REAL), ((rt0.c0)==(rt0.c2)), ((rt0.c2) IS TRUE), ((NULL) BETWEEN (t0.c60) AND (rt0.c0)))) AND ((t0.c60, rt0.c0, ((t0.c60)IS(rt0.c2)), ((rt0.c1)OR(rt0.c1)), (((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((x'671e', 0.2694046894338029, rt0.c0)) AND ((t0.c60, rt0.c1, rt0.c1)))))));
SELECT ALL * FROM t0, rt0 WHERE (1727942448) ORDER BY (((t0.c60, rt0.c0, rt0.c0, rt0.c1, x'')) BETWEEN ((rt0.c2, CAST(rt0.c0 AS REAL), ((rt0.c0)=(rt0.c2)), ((rt0.c2) IS TRUE), ((NULL) BETWEEN (t0.c60) AND (rt0.c0)))) AND ((t0.c60, rt0.c0, ((t0.c60)IS(rt0.c2)), ((rt0.c1)OR(rt0.c1)), (((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((x'671e', 0.2694046894338029, rt0.c0)) AND ((t0.c60, rt0.c1, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((1727942448) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c60, rt0.c0, rt0.c0, rt0.c1, x'')) BETWEEN ((rt0.c2, CAST(rt0.c0 AS REAL), ((rt0.c0)==(rt0.c2)), ((rt0.c2) IS TRUE), ((NULL) BETWEEN (t0.c60) AND (rt0.c0)))) AND ((t0.c60, rt0.c0, ((t0.c60)IS(rt0.c2)), ((rt0.c1)OR(rt0.c1)), (((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((x'671e', 0.2694046894338029, rt0.c0)) AND ((t0.c60, rt0.c1, rt0.c1)))))));
SELECT ALL * FROM t0, rt0 WHERE (1727942448) ORDER BY (((t0.c60, rt0.c0, rt0.c0, rt0.c1, x'')) BETWEEN ((rt0.c2, CAST(rt0.c0 AS REAL), ((rt0.c0)=(rt0.c2)), ((rt0.c2) IS TRUE), ((NULL) BETWEEN (t0.c60) AND (rt0.c0)))) AND ((t0.c60, rt0.c0, ((t0.c60)IS(rt0.c2)), ((rt0.c1)OR(rt0.c1)), (((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((x'671e', 0.2694046894338029, rt0.c0)) AND ((t0.c60, rt0.c1, rt0.c1))))));
SELECT * FROM t0, rt0 WHERE (((((((rt0.c1) ISNULL))OR(((rt0.c2) IS TRUE))))OR(CASE rt0.c2  WHEN rt0.c1 THEN x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) ISNULL))OR(((rt0.c2) IS TRUE))))OR(CASE rt0.c2  WHEN rt0.c1 THEN x'' END))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((((rt0.c1) ISNULL))OR(((rt0.c2) IS TRUE))))OR(CASE rt0.c2  WHEN rt0.c1 THEN x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) ISNULL))OR(((rt0.c2) IS TRUE))))OR(CASE rt0.c2  WHEN rt0.c1 THEN x'' END))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((((rt0.c1) ISNULL))OR(((rt0.c2) IS TRUE))))OR(CASE rt0.c2  WHEN rt0.c1 THEN x'' END)));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (0.15768941824826022);
SELECT SUM(count) FROM (SELECT ALL ((0.15768941824826022) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (0.15768941824826022);
SELECT SUM(count) FROM (SELECT ALL ((0.15768941824826022) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (0.15768941824826022);
SELECT * FROM rt0, vt0, t0 WHERE (CAST(((((((((vt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(t0.c60)) AS BLOB)) ORDER BY CAST((- (rt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(t0.c60)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST((- (rt0.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (CAST(((((((((vt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(t0.c60)) AS BLOB)) ORDER BY CAST((- (rt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(t0.c60)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST((- (rt0.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (CAST(((((((((vt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(t0.c60)) AS BLOB)) ORDER BY CAST((- (rt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c2)) BETWEEN ((json_array_length(vt0.c1))) AND ((((vt0.c0)<<(vt0.c2)))))) ORDER BY (- (((t0.c60)>=(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) BETWEEN ((json_array_length(vt0.c1))) AND ((((vt0.c0)<<(vt0.c2)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (- (((t0.c60)>=(vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c2)) BETWEEN ((json_array_length(vt0.c1))) AND ((((vt0.c0)<<(vt0.c2)))))) ORDER BY (- (((t0.c60)>=(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) BETWEEN ((json_array_length(vt0.c1))) AND ((((vt0.c0)<<(vt0.c2)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (- (((t0.c60)>=(vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c2)) BETWEEN ((json_array_length(vt0.c1))) AND ((((vt0.c0)<<(vt0.c2)))))) ORDER BY (- (((t0.c60)>=(vt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (((((NULL, 0.04731188081835125, -493004630))<((vt0.c0, t0.c60, vt0.c0)))) IS FALSE) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((NULL, 0.04731188081835125, -493004630))<((vt0.c0, t0.c60, vt0.c0)))) IS FALSE));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (((((NULL, 0.04731188081835125, -493004630))<((vt0.c0, t0.c60, vt0.c0)))) IS FALSE) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((NULL, 0.04731188081835125, -493004630))<((vt0.c0, t0.c60, vt0.c0)))) IS FALSE));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (((((NULL, 0.04731188081835125, -493004630))<((vt0.c0, t0.c60, vt0.c0)))) IS FALSE) WHERE (vt0.c1);
SELECT ALL * FROM t0 WHERE (224383157);
SELECT SUM(count) FROM (SELECT ((224383157) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (224383157);
SELECT SUM(count) FROM (SELECT ((224383157) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (224383157);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (json_extract(CASE WHEN vt0.c2 THEN vt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c60 THEN t0.c60 ELSE vt0.c2 END, (vt0.c1 IN (t0.c60, t0.c60)), ((t0.c60)LIKE(NULL)), (rt0.c2 IN ()))) ORDER BY ((rt0.c0 IN (t0.c60)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_extract(CASE WHEN vt0.c2 THEN vt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c60 THEN t0.c60 ELSE vt0.c2 END, (vt0.c1 IN (t0.c60, t0.c60)), ((t0.c60)LIKE(NULL)), (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((rt0.c0 IN (t0.c60)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (json_extract(CASE WHEN vt0.c2 THEN vt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c60 THEN t0.c60 ELSE vt0.c2 END, (vt0.c1 IN (t0.c60, t0.c60)), ((t0.c60)LIKE(NULL)), (rt0.c2 IN ()))) ORDER BY ((rt0.c0 IN (t0.c60)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_extract(CASE WHEN vt0.c2 THEN vt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c60 THEN t0.c60 ELSE vt0.c2 END, (vt0.c1 IN (t0.c60, t0.c60)), ((t0.c60)LIKE(NULL)), (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((rt0.c0 IN (t0.c60)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (json_extract(CASE WHEN vt0.c2 THEN vt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c60 THEN t0.c60 ELSE vt0.c2 END, (vt0.c1 IN (t0.c60, t0.c60)), ((t0.c60)LIKE(NULL)), (rt0.c2 IN ()))) ORDER BY ((rt0.c0 IN (t0.c60)) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL)) END WHERE (CASE NULL  WHEN ((0.7220528994948803)<>(rt0.c0)) THEN ((t0.c60) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) ORDER BY (((rt0.c0 COLLATE BINARY))>(((NOT (rt0.c0))))) ASC  NULLS LAST, ((((((((NULL)AND((('0.8452053942371679')<(rt0.c2)))))OR(rt0.c0)))OR(((rt0.c1)*('')))))AND((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))  NULLS LAST, ABS(DISTINCT '*}~chH');
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((0.7220528994948803)!=(rt0.c0)) THEN ((t0.c60) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL)) END ORDER BY (((rt0.c0 COLLATE BINARY))>(((NOT (rt0.c0))))) ASC  NULLS LAST, ((((((((NULL)AND((('0.8452053942371679')<(rt0.c2)))))OR(rt0.c0)))OR(((rt0.c1)*('')))))AND((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))  NULLS LAST, ABS(DISTINCT '*}~chH'));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL)) END WHERE (CASE NULL  WHEN ((0.7220528994948803)<>(rt0.c0)) THEN ((t0.c60) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) ORDER BY (((rt0.c0 COLLATE BINARY))>(((NOT (rt0.c0))))) ASC  NULLS LAST, ((((((((NULL)AND((('0.8452053942371679')<(rt0.c2)))))OR(rt0.c0)))OR(((rt0.c1)*('')))))AND((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))  NULLS LAST, ABS(DISTINCT '*}~chH');
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((0.7220528994948803)!=(rt0.c0)) THEN ((t0.c60) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL)) END ORDER BY (((rt0.c0 COLLATE BINARY))>(((NOT (rt0.c0))))) ASC  NULLS LAST, ((((((((NULL)AND((('0.8452053942371679')<(rt0.c2)))))OR(rt0.c0)))OR(((rt0.c1)*('')))))AND((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))  NULLS LAST, ABS(DISTINCT '*}~chH'));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL)) END WHERE (CASE NULL  WHEN ((0.7220528994948803)<>(rt0.c0)) THEN ((t0.c60) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) ORDER BY (((rt0.c0 COLLATE BINARY))>(((NOT (rt0.c0))))) ASC  NULLS LAST, ((((((((NULL)AND((('0.8452053942371679')<(rt0.c2)))))OR(rt0.c0)))OR(((rt0.c1)*('')))))AND((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))  NULLS LAST, ABS(DISTINCT '*}~chH');
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((((((vt0.c2)AND(rt0.c2)))OR(vt0.c0)))OR(LIKELY(DISTINCT vt0.c0))))OR(((rt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c2)AND(rt0.c2)))OR(vt0.c0)))OR(LIKELY(DISTINCT vt0.c0))))OR(((rt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((((((vt0.c2)AND(rt0.c2)))OR(vt0.c0)))OR(LIKELY(DISTINCT vt0.c0))))OR(((rt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c2)AND(rt0.c2)))OR(vt0.c0)))OR(LIKELY(DISTINCT vt0.c0))))OR(((rt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((((((((vt0.c2)AND(rt0.c2)))OR(vt0.c0)))OR(LIKELY(DISTINCT vt0.c0))))OR(((rt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)))));
SELECT * FROM vt0, t0 WHERE ((((NULL)||(vt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)||(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((NULL)||(vt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)||(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((NULL)||(vt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (878712527) ORDER BY CAST((((rt0.c2, rt0.c1, 'fhFu|ZG䤛滍')) NOT BETWEEN ((t0.c60, rt0.c1, t0.c60)) AND (('xs쮣WX*P', rt0.c1, rt0.c0))) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((878712527) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY CAST((((rt0.c2, rt0.c1, 'fhFu|ZG䤛滍')) NOT BETWEEN ((t0.c60, rt0.c1, t0.c60)) AND (('xs쮣WX*P', rt0.c1, rt0.c0))) AS TEXT));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (878712527) ORDER BY CAST((((rt0.c2, rt0.c1, 'fhFu|ZG䤛滍')) NOT BETWEEN ((t0.c60, rt0.c1, t0.c60)) AND (('xs쮣WX*P', rt0.c1, rt0.c0))) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((878712527) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY CAST((((rt0.c2, rt0.c1, 'fhFu|ZG䤛滍')) NOT BETWEEN ((t0.c60, rt0.c1, t0.c60)) AND (('xs쮣WX*P', rt0.c1, rt0.c0))) AS TEXT));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (878712527) ORDER BY CAST((((rt0.c2, rt0.c1, 'fhFu|ZG䤛滍')) NOT BETWEEN ((t0.c60, rt0.c1, t0.c60)) AND (('xs쮣WX*P', rt0.c1, rt0.c0))) AS TEXT);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((- (NULL))) ORDER BY (((rt0.c2)) NOT BETWEEN (((NOT (rt0.c1)))) AND ((((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((rt0.c2)) NOT BETWEEN (((NOT (rt0.c1)))) AND ((((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c2))))));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((- (NULL))) ORDER BY (((rt0.c2)) NOT BETWEEN (((NOT (rt0.c1)))) AND ((((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((rt0.c2)) NOT BETWEEN (((NOT (rt0.c1)))) AND ((((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c2))))));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((- (NULL))) ORDER BY (((rt0.c2)) NOT BETWEEN (((NOT (rt0.c1)))) AND ((((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE ((- (((((rt0.c0)OR(rt0.c1)))OR(rt0.c0))))) ORDER BY '-1473236484' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c0)OR(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY '-1473236484' ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- (((((rt0.c0)OR(rt0.c1)))OR(rt0.c0))))) ORDER BY '-1473236484' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c0)OR(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY '-1473236484' ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- (((((rt0.c0)OR(rt0.c1)))OR(rt0.c0))))) ORDER BY '-1473236484' ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM)OR(rt0.c0 COLLATE RTRIM)))AND(((('Om', '', rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c0)))))) ORDER BY (((((+ (NULL)))OR(rt0.c2 COLLATE RTRIM)))OR(CAST(rt0.c2 AS REAL)))  NULLS LAST, CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE RTRIM)OR(rt0.c0 COLLATE RTRIM)))AND(((('Om', '', rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((+ (NULL)))OR(rt0.c2 COLLATE RTRIM)))OR(CAST(rt0.c2 AS REAL)))  NULLS LAST, CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM)OR(rt0.c0 COLLATE RTRIM)))AND(((('Om', '', rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c0)))))) ORDER BY (((((+ (NULL)))OR(rt0.c2 COLLATE RTRIM)))OR(CAST(rt0.c2 AS REAL)))  NULLS LAST, CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE RTRIM)OR(rt0.c0 COLLATE RTRIM)))AND(((('Om', '', rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((+ (NULL)))OR(rt0.c2 COLLATE RTRIM)))OR(CAST(rt0.c2 AS REAL)))  NULLS LAST, CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM)OR(rt0.c0 COLLATE RTRIM)))AND(((('Om', '', rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c0)))))) ORDER BY (((((+ (NULL)))OR(rt0.c2 COLLATE RTRIM)))OR(CAST(rt0.c2 AS REAL)))  NULLS LAST, CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c60 COLLATE NOCASE)AND(CASE WHEN t0.c60 THEN t0.c60 END)))OR(CAST(t0.c60 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c60 COLLATE NOCASE)AND(CASE WHEN t0.c60 THEN t0.c60 END)))OR(CAST(t0.c60 AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c60 COLLATE NOCASE)AND(CASE WHEN t0.c60 THEN t0.c60 END)))OR(CAST(t0.c60 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c60 COLLATE NOCASE)AND(CASE WHEN t0.c60 THEN t0.c60 END)))OR(CAST(t0.c60 AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c60 COLLATE NOCASE)AND(CASE WHEN t0.c60 THEN t0.c60 END)))OR(CAST(t0.c60 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2)))/(IFNULL(rt0.c0, rt0.c2)))) ORDER BY (((((rt0.c2 IN (rt0.c0)))AND((NOT (rt0.c0)))))AND(rt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c2)))/(IFNULL(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2 IN (rt0.c0)))AND((NOT (rt0.c0)))))AND(rt0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2)))/(IFNULL(rt0.c0, rt0.c2)))) ORDER BY (((((rt0.c2 IN (rt0.c0)))AND((NOT (rt0.c0)))))AND(rt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c2)))/(IFNULL(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2 IN (rt0.c0)))AND((NOT (rt0.c0)))))AND(rt0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2)))/(IFNULL(rt0.c0, rt0.c2)))) ORDER BY (((((rt0.c2 IN (rt0.c0)))AND((NOT (rt0.c0)))))AND(rt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (CAST(((((vt0.c1)AND('G훀\nRౄ')))OR(vt0.c0)) AS BLOB)) ORDER BY (((vt0.c0 IN (vt0.c2)))+(((t0.c60)OR(t0.c60)))), (((CASE WHEN 0.7321470069201854 THEN vt0.c2 WHEN t0.c60 THEN vt0.c2 WHEN vt0.c1 THEN t0.c60 ELSE vt0.c1 END, ((t0.c60)>=(t0.c60)), JULIANDAY(t0.c60, vt0.c0, vt0.c2, vt0.c1, vt0.c2)))>=((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c1)));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND('G훀\nRౄ')))OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 IN (vt0.c2)))+(((t0.c60)OR(t0.c60)))), (((CASE WHEN 0.7321470069201854 THEN vt0.c2 WHEN t0.c60 THEN vt0.c2 WHEN vt0.c1 THEN t0.c60 ELSE vt0.c1 END, ((t0.c60)>=(t0.c60)), JULIANDAY(t0.c60, vt0.c0, vt0.c2, vt0.c1, vt0.c2)))>=((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c1))));
SELECT ALL * FROM vt0, t0 WHERE (CAST(((((vt0.c1)AND('G훀\nRౄ')))OR(vt0.c0)) AS BLOB)) ORDER BY (((vt0.c0 IN (vt0.c2)))+(((t0.c60)OR(t0.c60)))), (((CASE WHEN 0.7321470069201854 THEN vt0.c2 WHEN t0.c60 THEN vt0.c2 WHEN vt0.c1 THEN t0.c60 ELSE vt0.c1 END, ((t0.c60)>=(t0.c60)), JULIANDAY(t0.c60, vt0.c0, vt0.c2, vt0.c1, vt0.c2)))>=((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c1)));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND('G훀\nRౄ')))OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 IN (vt0.c2)))+(((t0.c60)OR(t0.c60)))), (((CASE WHEN 0.7321470069201854 THEN vt0.c2 WHEN t0.c60 THEN vt0.c2 WHEN vt0.c1 THEN t0.c60 ELSE vt0.c1 END, ((t0.c60)>=(t0.c60)), JULIANDAY(t0.c60, vt0.c0, vt0.c2, vt0.c1, vt0.c2)))>=((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c1))));
SELECT ALL * FROM vt0, t0 WHERE (CAST(((((vt0.c1)AND('G훀\nRౄ')))OR(vt0.c0)) AS BLOB)) ORDER BY (((vt0.c0 IN (vt0.c2)))+(((t0.c60)OR(t0.c60)))), (((CASE WHEN 0.7321470069201854 THEN vt0.c2 WHEN t0.c60 THEN vt0.c2 WHEN vt0.c1 THEN t0.c60 ELSE vt0.c1 END, ((t0.c60)>=(t0.c60)), JULIANDAY(t0.c60, vt0.c0, vt0.c2, vt0.c1, vt0.c2)))>=((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c1)));
SELECT * FROM vt0, rt0, t0 WHERE (((CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 WHEN t0.c60 THEN rt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END)/((vt0.c2 IN ())))) ORDER BY (((rt0.c1))<((rt0.c0))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 WHEN t0.c60 THEN rt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END)/((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((rt0.c1))<((rt0.c0))) COLLATE BINARY ASC);
SELECT * FROM vt0, rt0, t0 WHERE (((CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 WHEN t0.c60 THEN rt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END)/((vt0.c2 IN ())))) ORDER BY (((rt0.c1))<((rt0.c0))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 WHEN t0.c60 THEN rt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END)/((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((rt0.c1))<((rt0.c0))) COLLATE BINARY ASC);
SELECT * FROM vt0, rt0, t0 WHERE (((CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 WHEN t0.c60 THEN rt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END)/((vt0.c2 IN ())))) ORDER BY (((rt0.c1))<((rt0.c0))) COLLATE BINARY ASC;
SELECT COUNT(*) FROM rt0 WHERE ((- (((((0.6443785692764097)AND(rt0.c0)))OR(rt0.c0))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((0.6443785692764097)AND(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((- (((((0.6443785692764097)AND(rt0.c0)))OR(rt0.c0))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((0.6443785692764097)AND(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((- (((((0.6443785692764097)AND(rt0.c0)))OR(rt0.c0))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((NOT (-1015719124 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (-1015719124 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((NOT (-1015719124 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (-1015719124 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((NOT (-1015719124 COLLATE NOCASE)));
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY ((((NULL) NOTNULL))<=(vt0.c0 COLLATE RTRIM))  NULLS FIRST, CAST(NULL AS BLOB);
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((NULL) NOTNULL))<=(vt0.c0 COLLATE RTRIM))  NULLS FIRST, CAST(NULL AS BLOB));
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY ((((NULL) NOTNULL))<=(vt0.c0 COLLATE RTRIM))  NULLS FIRST, CAST(NULL AS BLOB);
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((NULL) NOTNULL))<=(vt0.c0 COLLATE RTRIM))  NULLS FIRST, CAST(NULL AS BLOB));
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY ((((NULL) NOTNULL))<=(vt0.c0 COLLATE RTRIM))  NULLS FIRST, CAST(NULL AS BLOB);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)OR(rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c2) BETWEEN ('6''롨NlCG') AND (NULL))))) ORDER BY ((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))AND(rt0.c1 COLLATE BINARY)))OR(CASE rt0.c0  WHEN rt0.c0 THEN 0.7155272515528543 END)))OR(((rt0.c0)GLOB(rt0.c1)))))OR(PRINTF(rt0.c0, rt0.c2, rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c2) BETWEEN ('6''롨NlCG') AND (NULL))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))AND(rt0.c1 COLLATE BINARY)))OR(CASE rt0.c0  WHEN rt0.c0 THEN 0.7155272515528543 END)))OR(((rt0.c0)GLOB(rt0.c1)))))OR(PRINTF(rt0.c0, rt0.c2, rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)OR(rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c2) BETWEEN ('6''롨NlCG') AND (NULL))))) ORDER BY ((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))AND(rt0.c1 COLLATE BINARY)))OR(CASE rt0.c0  WHEN rt0.c0 THEN 0.7155272515528543 END)))OR(((rt0.c0)GLOB(rt0.c1)))))OR(PRINTF(rt0.c0, rt0.c2, rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c2) BETWEEN ('6''롨NlCG') AND (NULL))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))AND(rt0.c1 COLLATE BINARY)))OR(CASE rt0.c0  WHEN rt0.c0 THEN 0.7155272515528543 END)))OR(((rt0.c0)GLOB(rt0.c1)))))OR(PRINTF(rt0.c0, rt0.c2, rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)OR(rt0.c2))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c2) BETWEEN ('6''롨NlCG') AND (NULL))))) ORDER BY ((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))AND(rt0.c1 COLLATE BINARY)))OR(CASE rt0.c0  WHEN rt0.c0 THEN 0.7155272515528543 END)))OR(((rt0.c0)GLOB(rt0.c1)))))OR(PRINTF(rt0.c0, rt0.c2, rt0.c0)));
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(vt0.c2 AS REAL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c2 AS REAL) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(vt0.c2 AS REAL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c2 AS REAL) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(vt0.c2 AS REAL) AS BLOB));
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY ((((rt0.c1)%(rt0.c1)))!=(NULLIF(DISTINCT rt0.c2, rt0.c0))) DESC  NULLS LAST, CASE CAST(rt0.c0 AS NUMERIC)  WHEN json_patch(rt0.c2, rt0.c1) THEN rt0.c2 ELSE ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)%(rt0.c1)))!=(NULLIF(DISTINCT rt0.c2, rt0.c0))) DESC  NULLS LAST, CASE CAST(rt0.c0 AS NUMERIC)  WHEN json_patch(rt0.c2, rt0.c1) THEN rt0.c2 ELSE ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)) END  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY ((((rt0.c1)%(rt0.c1)))!=(NULLIF(DISTINCT rt0.c2, rt0.c0))) DESC  NULLS LAST, CASE CAST(rt0.c0 AS NUMERIC)  WHEN json_patch(rt0.c2, rt0.c1) THEN rt0.c2 ELSE ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)%(rt0.c1)))!=(NULLIF(DISTINCT rt0.c2, rt0.c0))) DESC  NULLS LAST, CASE CAST(rt0.c0 AS NUMERIC)  WHEN json_patch(rt0.c2, rt0.c1) THEN rt0.c2 ELSE ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)) END  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY ((((rt0.c1)%(rt0.c1)))!=(NULLIF(DISTINCT rt0.c2, rt0.c0))) DESC  NULLS LAST, CASE CAST(rt0.c0 AS NUMERIC)  WHEN json_patch(rt0.c2, rt0.c1) THEN rt0.c2 ELSE ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)) END  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (((t0.c60)%(vt0.c0))) ORDER BY rtreenode(CAST(t0.c60 AS TEXT), (~ (vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c60)%(vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY rtreenode(CAST(t0.c60 AS TEXT), (~ (vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((t0.c60)%(vt0.c0))) ORDER BY rtreenode(CAST(t0.c60 AS TEXT), (~ (vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c60)%(vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY rtreenode(CAST(t0.c60 AS TEXT), (~ (vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((t0.c60)%(vt0.c0))) ORDER BY rtreenode(CAST(t0.c60 AS TEXT), (~ (vt0.c0))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((~ (((((rt0.c0)OR(vt0.c0)))AND(141834161)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c0)OR(vt0.c0)))AND(141834161))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((~ (((((rt0.c0)OR(vt0.c0)))AND(141834161)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c0)OR(vt0.c0)))AND(141834161))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((~ (((((rt0.c0)OR(vt0.c0)))AND(141834161)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c2  WHEN vt0.c1 THEN rt0.c1 END)>(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) CROSS JOIN vt0 ON LIKE(CASE WHEN t0.c60 THEN vt0.c0 END, (vt0.c1 IN (vt0.c1, rt0.c2))) WHERE (UNICODE((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c2  WHEN vt0.c1 THEN rt0.c1 END)>(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) CROSS JOIN vt0 ON LIKE(CASE WHEN t0.c60 THEN vt0.c0 END, (vt0.c1 IN (vt0.c1, rt0.c2))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c2  WHEN vt0.c1 THEN rt0.c1 END)>(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) CROSS JOIN vt0 ON LIKE(CASE WHEN t0.c60 THEN vt0.c0 END, (vt0.c1 IN (vt0.c1, rt0.c2))) WHERE (UNICODE((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c2  WHEN vt0.c1 THEN rt0.c1 END)>(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) CROSS JOIN vt0 ON LIKE(CASE WHEN t0.c60 THEN vt0.c0 END, (vt0.c1 IN (vt0.c1, rt0.c2))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON 0.984666518096436 WHERE ((((((((('i\r0wPN\n')AND(vt0.c1)))AND(vt0.c2)))AND(t0.c60)))OR('')) COLLATE BINARY) ORDER BY ((((t0.c60 COLLATE NOCASE)AND(((vt0.c2)*(vt0.c0)))))OR(((t0.c60)IS NOT(t0.c60)))) ASC  NULLS FIRST, -1.435831938E9  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((('i\r0wPN\n')AND(vt0.c1)))AND(vt0.c2)))AND(t0.c60)))OR('')) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON 0.984666518096436 ORDER BY ((((t0.c60 COLLATE NOCASE)AND(((vt0.c2)*(vt0.c0)))))OR(((t0.c60)IS NOT(t0.c60)))) ASC  NULLS FIRST, -1.435831938E9  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON 0.984666518096436 WHERE ((((((((('i\r0wPN\n')AND(vt0.c1)))AND(vt0.c2)))AND(t0.c60)))OR('')) COLLATE BINARY) ORDER BY ((((t0.c60 COLLATE NOCASE)AND(((vt0.c2)*(vt0.c0)))))OR(((t0.c60)IS NOT(t0.c60)))) ASC  NULLS FIRST, -1.435831938E9  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((('i\r0wPN\n')AND(vt0.c1)))AND(vt0.c2)))AND(t0.c60)))OR('')) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON 0.984666518096436 ORDER BY ((((t0.c60 COLLATE NOCASE)AND(((vt0.c2)*(vt0.c0)))))OR(((t0.c60)IS NOT(t0.c60)))) ASC  NULLS FIRST, -1.435831938E9  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON 0.984666518096436 WHERE ((((((((('i\r0wPN\n')AND(vt0.c1)))AND(vt0.c2)))AND(t0.c60)))OR('')) COLLATE BINARY) ORDER BY ((((t0.c60 COLLATE NOCASE)AND(((vt0.c2)*(vt0.c0)))))OR(((t0.c60)IS NOT(t0.c60)))) ASC  NULLS FIRST, -1.435831938E9  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN vt0.c2 THEN rt0.c0 ELSE t0.c60 END) NOT BETWEEN ((NOT (rt0.c2))) AND (vt0.c2 COLLATE BINARY)) INNER JOIN t0 ON (((('8䠔p猕\%^') BETWEEN (vt0.c2) AND (rt0.c2)))IS(TRIM(DISTINCT rt0.c2, t0.c60))) WHERE ('0.007542276602863218');
SELECT SUM(count) FROM (SELECT ALL (('0.007542276602863218') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN vt0.c2 THEN rt0.c0 ELSE t0.c60 END) NOT BETWEEN ((NOT (rt0.c2))) AND (vt0.c2 COLLATE BINARY)) INNER JOIN t0 ON (((('8䠔p猕\%^') BETWEEN (vt0.c2) AND (rt0.c2)))IS(TRIM(DISTINCT rt0.c2, t0.c60))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN vt0.c2 THEN rt0.c0 ELSE t0.c60 END) NOT BETWEEN ((NOT (rt0.c2))) AND (vt0.c2 COLLATE BINARY)) INNER JOIN t0 ON (((('8䠔p猕\%^') BETWEEN (vt0.c2) AND (rt0.c2)))IS(TRIM(DISTINCT rt0.c2, t0.c60))) WHERE ('0.007542276602863218');
SELECT SUM(count) FROM (SELECT ALL (('0.007542276602863218') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN vt0.c2 THEN rt0.c0 ELSE t0.c60 END) NOT BETWEEN ((NOT (rt0.c2))) AND (vt0.c2 COLLATE BINARY)) INNER JOIN t0 ON (((('8䠔p猕\%^') BETWEEN (vt0.c2) AND (rt0.c2)))IS(TRIM(DISTINCT rt0.c2, t0.c60))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN vt0.c2 THEN rt0.c0 ELSE t0.c60 END) NOT BETWEEN ((NOT (rt0.c2))) AND (vt0.c2 COLLATE BINARY)) INNER JOIN t0 ON (((('8䠔p猕\%^') BETWEEN (vt0.c2) AND (rt0.c2)))IS(TRIM(DISTINCT rt0.c2, t0.c60))) WHERE ('0.007542276602863218');
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((CASE WHEN t0.c60 THEN vt0.c0 ELSE t0.c60 END)|(CAST(rt0.c1 AS INTEGER))) RIGHT OUTER JOIN rt0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c2 END) AND (((((vt0.c0)OR(t0.c60)))AND(rt0.c1)))) WHERE (((((((((((vt0.c0)AND(rt0.c1)))OR(t0.c60)))AND(rt0.c0)))OR(vt0.c1))) IS FALSE)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(rt0.c1)))OR(t0.c60)))AND(rt0.c0)))OR(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((CASE WHEN t0.c60 THEN vt0.c0 ELSE t0.c60 END)|(CAST(rt0.c1 AS INTEGER))) RIGHT OUTER JOIN rt0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c2 END) AND (((((vt0.c0)OR(t0.c60)))AND(rt0.c1)))) ORDER BY NULL DESC);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((CASE WHEN t0.c60 THEN vt0.c0 ELSE t0.c60 END)|(CAST(rt0.c1 AS INTEGER))) RIGHT OUTER JOIN rt0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c2 END) AND (((((vt0.c0)OR(t0.c60)))AND(rt0.c1)))) WHERE (((((((((((vt0.c0)AND(rt0.c1)))OR(t0.c60)))AND(rt0.c0)))OR(vt0.c1))) IS FALSE)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(rt0.c1)))OR(t0.c60)))AND(rt0.c0)))OR(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((CASE WHEN t0.c60 THEN vt0.c0 ELSE t0.c60 END)|(CAST(rt0.c1 AS INTEGER))) RIGHT OUTER JOIN rt0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c2 END) AND (((((vt0.c0)OR(t0.c60)))AND(rt0.c1)))) ORDER BY NULL DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE (NOT (t0.c60))  WHEN CAST(t0.c60 AS BLOB) THEN t0.c60 ELSE ((t0.c60)>>(t0.c60)) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (t0.c60))  WHEN CAST(t0.c60 AS BLOB) THEN t0.c60 ELSE ((t0.c60)>>(t0.c60)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE (NOT (t0.c60))  WHEN CAST(t0.c60 AS BLOB) THEN t0.c60 ELSE ((t0.c60)>>(t0.c60)) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (t0.c60))  WHEN CAST(t0.c60 AS BLOB) THEN t0.c60 ELSE ((t0.c60)>>(t0.c60)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE (NOT (t0.c60))  WHEN CAST(t0.c60 AS BLOB) THEN t0.c60 ELSE ((t0.c60)>>(t0.c60)) END);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((rt0.c1)AND(t0.c60)))OR(rt0.c1)) IN ())) ORDER BY t0.c60 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)AND(t0.c60)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY t0.c60 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((rt0.c1)AND(t0.c60)))OR(rt0.c1)) IN ())) ORDER BY t0.c60 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)AND(t0.c60)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY t0.c60 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((rt0.c1)AND(t0.c60)))OR(rt0.c1)) IN ())) ORDER BY t0.c60 DESC  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON CASE 0.7664446777073947  WHEN vt0.c2 THEN t0.c60 END COLLATE RTRIM WHERE (((vt0.c0 COLLATE NOCASE)*((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)*((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE 0.7664446777073947  WHEN vt0.c2 THEN t0.c60 END COLLATE RTRIM);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON CASE 0.7664446777073947  WHEN vt0.c2 THEN t0.c60 END COLLATE RTRIM WHERE (((vt0.c0 COLLATE NOCASE)*((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)*((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE 0.7664446777073947  WHEN vt0.c2 THEN t0.c60 END COLLATE RTRIM);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON CASE 0.7664446777073947  WHEN vt0.c2 THEN t0.c60 END COLLATE RTRIM WHERE (((vt0.c0 COLLATE NOCASE)*((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))));
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((((((((t0.c60)OR(t0.c60)))AND(rt0.c1)))OR(rt0.c2)))AND(t0.c60)))AND(rt0.c1)))OR((t0.c60 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c60)OR(t0.c60)))AND(rt0.c1)))OR(rt0.c2)))AND(t0.c60)))AND(rt0.c1)))OR((t0.c60 IN ())))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((((((((t0.c60)OR(t0.c60)))AND(rt0.c1)))OR(rt0.c2)))AND(t0.c60)))AND(rt0.c1)))OR((t0.c60 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c60)OR(t0.c60)))AND(rt0.c1)))OR(rt0.c2)))AND(t0.c60)))AND(rt0.c1)))OR((t0.c60 IN ())))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((((((((t0.c60)OR(t0.c60)))AND(rt0.c1)))OR(rt0.c2)))AND(t0.c60)))AND(rt0.c1)))OR((t0.c60 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST('8KL5y6' AS TEXT))<=(((((x'58ab')AND(vt0.c2)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST('8KL5y6' AS TEXT))<=(((((x'58ab')AND(vt0.c2)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST('8KL5y6' AS TEXT))<=(((((x'58ab')AND(vt0.c2)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST('8KL5y6' AS TEXT))<=(((((x'58ab')AND(vt0.c2)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST('8KL5y6' AS TEXT))<=(((((x'58ab')AND(vt0.c2)))OR(vt0.c1)))));
SELECT * FROM rt0 WHERE (0.29430715481870506) ORDER BY ((((((rt0.c2)>>('[6Hiaum')))OR(((rt0.c1)IS(NULL)))))AND(rt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.29430715481870506) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)>>('[6Hiaum')))OR(((rt0.c1)IS(NULL)))))AND(rt0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (0.29430715481870506) ORDER BY ((((((rt0.c2)>>('[6Hiaum')))OR(((rt0.c1)IS(NULL)))))AND(rt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.29430715481870506) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)>>('[6Hiaum')))OR(((rt0.c1)IS(NULL)))))AND(rt0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (0.29430715481870506) ORDER BY ((((((rt0.c2)>>('[6Hiaum')))OR(((rt0.c1)IS(NULL)))))AND(rt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN t0 ON QUOTE((((rt0.c1))<>((vt0.c1)))) WHERE ((((~ (t0.c60))) BETWEEN (((vt0.c1) IS TRUE)) AND ((vt0.c1 IN ())))) ORDER BY CASE 6.66967603E8  WHEN ((((vt0.c0)OR(rt0.c0)))OR(vt0.c1)) THEN ((NULL)+(rt0.c0)) ELSE CAST('' AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c60))) BETWEEN (((vt0.c1) IS TRUE)) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN t0 ON QUOTE((((rt0.c1))<>((vt0.c1)))) ORDER BY CASE 6.66967603E8  WHEN ((((vt0.c0)OR(rt0.c0)))OR(vt0.c1)) THEN ((NULL)+(rt0.c0)) ELSE CAST('' AS REAL) END DESC);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN t0 ON QUOTE((((rt0.c1))<>((vt0.c1)))) WHERE ((((~ (t0.c60))) BETWEEN (((vt0.c1) IS TRUE)) AND ((vt0.c1 IN ())))) ORDER BY CASE 6.66967603E8  WHEN ((((vt0.c0)OR(rt0.c0)))OR(vt0.c1)) THEN ((NULL)+(rt0.c0)) ELSE CAST('' AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c60))) BETWEEN (((vt0.c1) IS TRUE)) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN t0 ON QUOTE((((rt0.c1))<>((vt0.c1)))) ORDER BY CASE 6.66967603E8  WHEN ((((vt0.c0)OR(rt0.c0)))OR(vt0.c1)) THEN ((NULL)+(rt0.c0)) ELSE CAST('' AS REAL) END DESC);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN t0 ON QUOTE((((rt0.c1))<>((vt0.c1)))) WHERE ((((~ (t0.c60))) BETWEEN (((vt0.c1) IS TRUE)) AND ((vt0.c1 IN ())))) ORDER BY CASE 6.66967603E8  WHEN ((((vt0.c0)OR(rt0.c0)))OR(vt0.c1)) THEN ((NULL)+(rt0.c0)) ELSE CAST('' AS REAL) END DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST('882861704' AS REAL)) ORDER BY 0.6955535311614146 ASC;
SELECT SUM(count) FROM (SELECT ((CAST('882861704' AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY 0.6955535311614146 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST('882861704' AS REAL)) ORDER BY 0.6955535311614146 ASC;
SELECT SUM(count) FROM (SELECT ((CAST('882861704' AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY 0.6955535311614146 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST('882861704' AS REAL)) ORDER BY 0.6955535311614146 ASC;
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (((rt0.c0, rt0.c1, vt0.c0)) BETWEEN (((rt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END, ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c0)))) AND ((CASE WHEN rt0.c2 THEN vt0.c1 END, ((((vt0.c1)AND(rt0.c0)))AND(rt0.c2)), CASE WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END))) WHERE (COALESCE(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)), ((x'')!=(rt0.c1)), ((('yD'))<((rt0.c0))), (- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)), ((x'')!=(rt0.c1)), ((('yD'))<((rt0.c0))), (- (rt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((rt0.c0, rt0.c1, vt0.c0)) BETWEEN (((rt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END, ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c0)))) AND ((CASE WHEN rt0.c2 THEN vt0.c1 END, ((((vt0.c1)AND(rt0.c0)))AND(rt0.c2)), CASE WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (((rt0.c0, rt0.c1, vt0.c0)) BETWEEN (((rt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END, ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c0)))) AND ((CASE WHEN rt0.c2 THEN vt0.c1 END, ((((vt0.c1)AND(rt0.c0)))AND(rt0.c2)), CASE WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END))) WHERE (COALESCE(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)), ((x'')!=(rt0.c1)), ((('yD'))<((rt0.c0))), (- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)), ((x'')!=(rt0.c1)), ((('yD'))<((rt0.c0))), (- (rt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((rt0.c0, rt0.c1, vt0.c0)) BETWEEN (((rt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END, ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c0)))) AND ((CASE WHEN rt0.c2 THEN vt0.c1 END, ((((vt0.c1)AND(rt0.c0)))AND(rt0.c2)), CASE WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (((rt0.c0, rt0.c1, vt0.c0)) BETWEEN (((rt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END, ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c0)))) AND ((CASE WHEN rt0.c2 THEN vt0.c1 END, ((((vt0.c1)AND(rt0.c0)))AND(rt0.c2)), CASE WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END))) WHERE (COALESCE(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)), ((x'')!=(rt0.c1)), ((('yD'))<((rt0.c0))), (- (rt0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE (ROUND(NULL, x''));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(NULL, x'')) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (ROUND(NULL, x''));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(NULL, x'')) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (ROUND(NULL, x''));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c60)) BETWEEN ((CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)) AND (((((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c60))))))) ORDER BY (((NOT (t0.c60)))+((('0.41536913565305167') NOT NULL))) ASC, ((CAST(t0.c60 AS REAL))>>(HEX(x'')));
SELECT SUM(count) FROM (SELECT (((((t0.c60)) BETWEEN ((CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)) AND (((((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c60))))))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c60)))+((('0.41536913565305167') NOT NULL))) ASC, ((CAST(t0.c60 AS REAL))>>(HEX(x''))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c60)) BETWEEN ((CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)) AND (((((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c60))))))) ORDER BY (((NOT (t0.c60)))+((('0.41536913565305167') NOT NULL))) ASC, ((CAST(t0.c60 AS REAL))>>(HEX(x'')));
SELECT SUM(count) FROM (SELECT (((((t0.c60)) BETWEEN ((CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)) AND (((((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c60))))))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c60)))+((('0.41536913565305167') NOT NULL))) ASC, ((CAST(t0.c60 AS REAL))>>(HEX(x''))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c60)) BETWEEN ((CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)) AND (((((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c60))))))) ORDER BY (((NOT (t0.c60)))+((('0.41536913565305167') NOT NULL))) ASC, ((CAST(t0.c60 AS REAL))>>(HEX(x'')));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)<=(rt0.c0)))||(rt0.c1))) ORDER BY ((((rt0.c1)<(rt0.c2))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<=(rt0.c0)))||(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<(rt0.c2))) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)<=(rt0.c0)))||(rt0.c1))) ORDER BY ((((rt0.c1)<(rt0.c2))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<=(rt0.c0)))||(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<(rt0.c2))) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)<=(rt0.c0)))||(rt0.c1))) ORDER BY ((((rt0.c1)<(rt0.c2))) NOTNULL) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0))IS NOT((((vt0.c0, vt0.c2, vt0.c2))<>((vt0.c0, vt0.c1, vt0.c2)))))) ORDER BY (((vt0.c2 IN (vt0.c2, vt0.c2))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt0.c0, vt0.c0))IS NOT((((vt0.c0, vt0.c2, vt0.c2))<>((vt0.c0, vt0.c1, vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2 IN (vt0.c2, vt0.c2))) NOTNULL) ASC);
SELECT * FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0))IS NOT((((vt0.c0, vt0.c2, vt0.c2))<>((vt0.c0, vt0.c1, vt0.c2)))))) ORDER BY (((vt0.c2 IN (vt0.c2, vt0.c2))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt0.c0, vt0.c0))IS NOT((((vt0.c0, vt0.c2, vt0.c2))<>((vt0.c0, vt0.c1, vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2 IN (vt0.c2, vt0.c2))) NOTNULL) ASC);
SELECT * FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0))IS NOT((((vt0.c0, vt0.c2, vt0.c2))<>((vt0.c0, vt0.c1, vt0.c2)))))) ORDER BY (((vt0.c2 IN (vt0.c2, vt0.c2))) NOTNULL) ASC;
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN (vt0.c2) AND (TOTAL_CHANGES())) WHERE (x'') ORDER BY ((((COALESCE(DISTINCT vt0.c2, rt0.c1, rt0.c1, '0.7259547576264157', rt0.c0, rt0.c1))AND(rt0.c2 COLLATE RTRIM)))OR(((t0.c60) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN (vt0.c2) AND (TOTAL_CHANGES())) ORDER BY ((((COALESCE(DISTINCT vt0.c2, rt0.c1, rt0.c1, '0.7259547576264157', rt0.c0, rt0.c1))AND(rt0.c2 COLLATE RTRIM)))OR(((t0.c60) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN (vt0.c2) AND (TOTAL_CHANGES())) WHERE (x'') ORDER BY ((((COALESCE(DISTINCT vt0.c2, rt0.c1, rt0.c1, '0.7259547576264157', rt0.c0, rt0.c1))AND(rt0.c2 COLLATE RTRIM)))OR(((t0.c60) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN (vt0.c2) AND (TOTAL_CHANGES())) ORDER BY ((((COALESCE(DISTINCT vt0.c2, rt0.c1, rt0.c1, '0.7259547576264157', rt0.c0, rt0.c1))AND(rt0.c2 COLLATE RTRIM)))OR(((t0.c60) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN (vt0.c2) AND (TOTAL_CHANGES())) WHERE (x'') ORDER BY ((((COALESCE(DISTINCT vt0.c2, rt0.c1, rt0.c1, '0.7259547576264157', rt0.c0, rt0.c1))AND(rt0.c2 COLLATE RTRIM)))OR(((t0.c60) NOTNULL))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))))>(((((rt0.c0)) BETWEEN ((vt0.c2)) AND ((t0.c60)))))) RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c1))) BETWEEN ((((vt0.c1, vt0.c1, t0.c60)) BETWEEN ((vt0.c2, NULL, rt0.c1)) AND ((vt0.c2, vt0.c2, t0.c60)))) AND (rt0.c1 COLLATE BINARY)) WHERE (CASE ((rt0.c2)>=(vt0.c1))  WHEN (vt0.c1 IN ()) THEN CAST(rt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)>=(vt0.c1))  WHEN (vt0.c1 IN ()) THEN CAST(rt0.c0 AS TEXT) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))))>(((((rt0.c0)) BETWEEN ((vt0.c2)) AND ((t0.c60)))))) RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c1))) BETWEEN ((((vt0.c1, vt0.c1, t0.c60)) BETWEEN ((vt0.c2, NULL, rt0.c1)) AND ((vt0.c2, vt0.c2, t0.c60)))) AND (rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))))>(((((rt0.c0)) BETWEEN ((vt0.c2)) AND ((t0.c60)))))) RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c1))) BETWEEN ((((vt0.c1, vt0.c1, t0.c60)) BETWEEN ((vt0.c2, NULL, rt0.c1)) AND ((vt0.c2, vt0.c2, t0.c60)))) AND (rt0.c1 COLLATE BINARY)) WHERE (CASE ((rt0.c2)>=(vt0.c1))  WHEN (vt0.c1 IN ()) THEN CAST(rt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)>=(vt0.c1))  WHEN (vt0.c1 IN ()) THEN CAST(rt0.c0 AS TEXT) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))))>(((((rt0.c0)) BETWEEN ((vt0.c2)) AND ((t0.c60)))))) RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c1))) BETWEEN ((((vt0.c1, vt0.c1, t0.c60)) BETWEEN ((vt0.c2, NULL, rt0.c1)) AND ((vt0.c2, vt0.c2, t0.c60)))) AND (rt0.c1 COLLATE BINARY)));
SELECT * FROM vt0, t0 WHERE (0.1334362642446184) ORDER BY ((~ (vt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.1334362642446184) IS TRUE)  as count FROM vt0, t0 ORDER BY ((~ (vt0.c1)) IN ())  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (0.1334362642446184) ORDER BY ((~ (vt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.1334362642446184) IS TRUE)  as count FROM vt0, t0 ORDER BY ((~ (vt0.c1)) IN ())  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (0.1334362642446184) ORDER BY ((~ (vt0.c1)) IN ())  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((LIKELY(rt0.c1))<=(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt0.c1))<=(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((LIKELY(rt0.c1))<=(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt0.c1))<=(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((LIKELY(rt0.c1))<=(CAST(rt0.c0 AS NUMERIC))));
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c60) IS FALSE) AS INTEGER)) ORDER BY (vt0.c1 COLLATE BINARY IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c60) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY (vt0.c1 COLLATE BINARY IN ()) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c60) IS FALSE) AS INTEGER)) ORDER BY (vt0.c1 COLLATE BINARY IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c60) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY (vt0.c1 COLLATE BINARY IN ()) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c60) IS FALSE) AS INTEGER)) ORDER BY (vt0.c1 COLLATE BINARY IN ()) ASC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE ((((rt0.c1)LIKE(rt0.c2)) IN ())) ORDER BY ((CASE WHEN x'' THEN '-1624748094' ELSE vt0.c0 END)=(CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)LIKE(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN x'' THEN '-1624748094' ELSE vt0.c0 END)=(CAST(rt0.c0 AS NUMERIC))));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c1)LIKE(rt0.c2)) IN ())) ORDER BY ((CASE WHEN x'' THEN '-1624748094' ELSE vt0.c0 END)=(CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)LIKE(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN x'' THEN '-1624748094' ELSE vt0.c0 END)=(CAST(rt0.c0 AS NUMERIC))));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c1)LIKE(rt0.c2)) IN ())) ORDER BY ((CASE WHEN x'' THEN '-1624748094' ELSE vt0.c0 END)=(CAST(rt0.c0 AS NUMERIC)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) BETWEEN (((rt0.c1) BETWEEN ('') AND (rt0.c1))) AND ((('') NOT BETWEEN (vt0.c0) AND (vt0.c2)))) CROSS JOIN t0 ON rt0.c0 WHERE ((('489771228')&(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE x'9c11' END)));
SELECT SUM(count) FROM (SELECT ALL (((('489771228')&(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE x'9c11' END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) BETWEEN (((rt0.c1) BETWEEN ('') AND (rt0.c1))) AND ((('') NOT BETWEEN (vt0.c0) AND (vt0.c2)))) CROSS JOIN t0 ON rt0.c0);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) BETWEEN (((rt0.c1) BETWEEN ('') AND (rt0.c1))) AND ((('') NOT BETWEEN (vt0.c0) AND (vt0.c2)))) CROSS JOIN t0 ON rt0.c0 WHERE ((('489771228')&(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE x'9c11' END)));
SELECT SUM(count) FROM (SELECT ALL (((('489771228')&(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE x'9c11' END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) BETWEEN (((rt0.c1) BETWEEN ('') AND (rt0.c1))) AND ((('') NOT BETWEEN (vt0.c0) AND (vt0.c2)))) CROSS JOIN t0 ON rt0.c0);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) BETWEEN (((rt0.c1) BETWEEN ('') AND (rt0.c1))) AND ((('') NOT BETWEEN (vt0.c0) AND (vt0.c2)))) CROSS JOIN t0 ON rt0.c0 WHERE ((('489771228')&(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE x'9c11' END)));
SELECT ALL * FROM rt0, vt0 WHERE (CASE ((rt0.c2)=(rt0.c1))  WHEN ((((vt0.c1)OR(rt0.c0)))AND(x'76648370')) THEN ((rt0.c0)||(vt0.c0)) END) ORDER BY LAST_INSERT_ROWID()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)=(rt0.c1))  WHEN ((((vt0.c1)OR(rt0.c0)))AND(x'76648370')) THEN ((rt0.c0)||(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY LAST_INSERT_ROWID()  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (CASE ((rt0.c2)=(rt0.c1))  WHEN ((((vt0.c1)OR(rt0.c0)))AND(x'76648370')) THEN ((rt0.c0)||(vt0.c0)) END) ORDER BY LAST_INSERT_ROWID()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)=(rt0.c1))  WHEN ((((vt0.c1)OR(rt0.c0)))AND(x'76648370')) THEN ((rt0.c0)||(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY LAST_INSERT_ROWID()  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (CASE ((rt0.c2)=(rt0.c1))  WHEN ((((vt0.c1)OR(rt0.c0)))AND(x'76648370')) THEN ((rt0.c0)||(vt0.c0)) END) ORDER BY LAST_INSERT_ROWID()  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE NOCASE);
SELECT * FROM vt0 WHERE ('384065154') ORDER BY ((IFNULL(DISTINCT 0.3483440581184535, vt0.c1))IS NOT((((vt0.c0))<=((x''))))) ASC;
SELECT SUM(count) FROM (SELECT (('384065154') IS TRUE)  as count FROM vt0 ORDER BY ((IFNULL(DISTINCT 0.3483440581184535, vt0.c1))IS NOT((((vt0.c0))<=((x''))))) ASC);
SELECT * FROM vt0 WHERE ('384065154') ORDER BY ((IFNULL(DISTINCT 0.3483440581184535, vt0.c1))IS NOT((((vt0.c0))<=((x''))))) ASC;
SELECT SUM(count) FROM (SELECT (('384065154') IS TRUE)  as count FROM vt0 ORDER BY ((IFNULL(DISTINCT 0.3483440581184535, vt0.c1))IS NOT((((vt0.c0))<=((x''))))) ASC);
SELECT * FROM vt0 WHERE ('384065154') ORDER BY ((IFNULL(DISTINCT 0.3483440581184535, vt0.c1))IS NOT((((vt0.c0))<=((x''))))) ASC;
SELECT ALL * FROM t0, rt0, vt0 WHERE (CASE vt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c60 THEN t0.c60 WHEN rt0.c2 THEN x'e329' END COLLATE BINARY) ORDER BY (t0.c60 IN ()) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c60 THEN t0.c60 WHEN rt0.c2 THEN x'e329' END COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (t0.c60 IN ()) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt0 WHERE (CASE vt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c60 THEN t0.c60 WHEN rt0.c2 THEN x'e329' END COLLATE BINARY) ORDER BY (t0.c60 IN ()) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c60 THEN t0.c60 WHEN rt0.c2 THEN x'e329' END COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (t0.c60 IN ()) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt0 WHERE (CASE vt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c60 THEN t0.c60 WHEN rt0.c2 THEN x'e329' END COLLATE BINARY) ORDER BY (t0.c60 IN ()) COLLATE BINARY  NULLS LAST;
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((rt0.c2 COLLATE BINARY, ((((((((t0.c60)AND(t0.c60)))OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c2)), (t0.c60 IN (rt0.c2, t0.c60))))>=((t0.c60, ((t0.c60) NOTNULL), ((vt0.c0) ISNULL)))) WHERE (((((rt0.c2)>(t0.c60)))IS NOT(((vt0.c1)||(0.1369514173201143)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>(t0.c60)))IS NOT(((vt0.c1)||(0.1369514173201143))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((rt0.c2 COLLATE BINARY, ((((((((t0.c60)AND(t0.c60)))OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c2)), (t0.c60 IN (rt0.c2, t0.c60))))>=((t0.c60, ((t0.c60) NOTNULL), ((vt0.c0) ISNULL)))));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((rt0.c2 COLLATE BINARY, ((((((((t0.c60)AND(t0.c60)))OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c2)), (t0.c60 IN (rt0.c2, t0.c60))))>=((t0.c60, ((t0.c60) NOTNULL), ((vt0.c0) ISNULL)))) WHERE (((((rt0.c2)>(t0.c60)))IS NOT(((vt0.c1)||(0.1369514173201143)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>(t0.c60)))IS NOT(((vt0.c1)||(0.1369514173201143))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((rt0.c2 COLLATE BINARY, ((((((((t0.c60)AND(t0.c60)))OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c2)), (t0.c60 IN (rt0.c2, t0.c60))))>=((t0.c60, ((t0.c60) NOTNULL), ((vt0.c0) ISNULL)))));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((rt0.c2 COLLATE BINARY, ((((((((t0.c60)AND(t0.c60)))OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c2)), (t0.c60 IN (rt0.c2, t0.c60))))>=((t0.c60, ((t0.c60) NOTNULL), ((vt0.c0) ISNULL)))) WHERE (((((rt0.c2)>(t0.c60)))IS NOT(((vt0.c1)||(0.1369514173201143)))));
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c2 IN (vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)) THEN ((vt0.c2)/(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c2 IN (vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)) THEN ((vt0.c2)/(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c2 IN (vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)) THEN ((vt0.c2)/(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c2 IN (vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)) THEN ((vt0.c2)/(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c2 IN (vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)) THEN ((vt0.c2)/(vt0.c0)) END);
SELECT * FROM t0 WHERE (((((t0.c60)IS NOT('')))<<(json_array(-1748240067, t0.c60, t0.c60, t0.c60))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c60)IS NOT('')))<<(json_array(-1748240067, t0.c60, t0.c60, t0.c60)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c60)IS NOT('')))<<(json_array(-1748240067, t0.c60, t0.c60, t0.c60))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c60)IS NOT('')))<<(json_array(-1748240067, t0.c60, t0.c60, t0.c60)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)) IN ()));
SELECT * FROM vt0, rt0 WHERE (((vt0.c2 COLLATE RTRIM)||('-1749568467'))) ORDER BY ((((((vt0.c1)||(rt0.c0)))OR(vt0.c0)))AND(((-4.9300463E8)>=(x'adb1'))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE RTRIM)||('-1749568467'))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((vt0.c1)||(rt0.c0)))OR(vt0.c0)))AND(((-4.9300463E8)>=(x'adb1')))));
SELECT * FROM vt0, rt0 WHERE (((vt0.c2 COLLATE RTRIM)||('-1749568467'))) ORDER BY ((((((vt0.c1)||(rt0.c0)))OR(vt0.c0)))AND(((-4.9300463E8)>=(x'adb1'))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE RTRIM)||('-1749568467'))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((vt0.c1)||(rt0.c0)))OR(vt0.c0)))AND(((-4.9300463E8)>=(x'adb1')))));
SELECT * FROM vt0, rt0 WHERE (((vt0.c2 COLLATE RTRIM)||('-1749568467'))) ORDER BY ((((((vt0.c1)||(rt0.c0)))OR(vt0.c0)))AND(((-4.9300463E8)>=(x'adb1'))));
SELECT ALL * FROM t0, vt0, rt0 WHERE ((CAST(vt0.c2 AS INTEGER) IN ((vt0.c1 IN ())))) ORDER BY ((((rt0.c2)>=(vt0.c1)))LIKE(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, ((((x'') NOT NULL)) BETWEEN (rt0.c1) AND (CASE WHEN vt0.c2 THEN rt0.c2 WHEN t0.c60 THEN vt0.c0 WHEN rt0.c2 THEN -2.85928166E8 WHEN 0.42126359004488134 THEN vt0.c2 WHEN 0.8850042925066949 THEN '-507791537' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c2 AS INTEGER) IN ((vt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((rt0.c2)>=(vt0.c1)))LIKE(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, ((((x'') NOT NULL)) BETWEEN (rt0.c1) AND (CASE WHEN vt0.c2 THEN rt0.c2 WHEN t0.c60 THEN vt0.c0 WHEN rt0.c2 THEN -2.85928166E8 WHEN 0.42126359004488134 THEN vt0.c2 WHEN 0.8850042925066949 THEN '-507791537' END))  NULLS FIRST);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((CAST(vt0.c2 AS INTEGER) IN ((vt0.c1 IN ())))) ORDER BY ((((rt0.c2)>=(vt0.c1)))LIKE(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, ((((x'') NOT NULL)) BETWEEN (rt0.c1) AND (CASE WHEN vt0.c2 THEN rt0.c2 WHEN t0.c60 THEN vt0.c0 WHEN rt0.c2 THEN -2.85928166E8 WHEN 0.42126359004488134 THEN vt0.c2 WHEN 0.8850042925066949 THEN '-507791537' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c2 AS INTEGER) IN ((vt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((rt0.c2)>=(vt0.c1)))LIKE(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, ((((x'') NOT NULL)) BETWEEN (rt0.c1) AND (CASE WHEN vt0.c2 THEN rt0.c2 WHEN t0.c60 THEN vt0.c0 WHEN rt0.c2 THEN -2.85928166E8 WHEN 0.42126359004488134 THEN vt0.c2 WHEN 0.8850042925066949 THEN '-507791537' END))  NULLS FIRST);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((CAST(vt0.c2 AS INTEGER) IN ((vt0.c1 IN ())))) ORDER BY ((((rt0.c2)>=(vt0.c1)))LIKE(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, ((((x'') NOT NULL)) BETWEEN (rt0.c1) AND (CASE WHEN vt0.c2 THEN rt0.c2 WHEN t0.c60 THEN vt0.c0 WHEN rt0.c2 THEN -2.85928166E8 WHEN 0.42126359004488134 THEN vt0.c2 WHEN 0.8850042925066949 THEN '-507791537' END))  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c60)OR(vt0.c1)))OR(CASE WHEN vt0.c0 THEN t0.c60 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c60)OR(vt0.c1)))OR(CASE WHEN vt0.c0 THEN t0.c60 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c60)OR(vt0.c1)))OR(CASE WHEN vt0.c0 THEN t0.c60 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c60)OR(vt0.c1)))OR(CASE WHEN vt0.c0 THEN t0.c60 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c60)OR(vt0.c1)))OR(CASE WHEN vt0.c0 THEN t0.c60 END)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c1 IN (vt0.c1)))OR(((((((((0X53e26b79)AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)))))AND(t0.c60)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN (vt0.c1)))OR(((((((((0X53e26b79)AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)))))AND(t0.c60))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c1 IN (vt0.c1)))OR(((((((((0X53e26b79)AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)))))AND(t0.c60)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN (vt0.c1)))OR(((((((((0X53e26b79)AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)))))AND(t0.c60))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c1 IN (vt0.c1)))OR(((((((((0X53e26b79)AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)))))AND(t0.c60)));
SELECT * FROM t0 WHERE (((CASE t0.c60  WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 END) BETWEEN (((t0.c60)>(t0.c60))) AND (CAST(t0.c60 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c60  WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 END) BETWEEN (((t0.c60)>(t0.c60))) AND (CAST(t0.c60 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE t0.c60  WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 END) BETWEEN (((t0.c60)>(t0.c60))) AND (CAST(t0.c60 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c60  WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 END) BETWEEN (((t0.c60)>(t0.c60))) AND (CAST(t0.c60 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE t0.c60  WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 END) BETWEEN (((t0.c60)>(t0.c60))) AND (CAST(t0.c60 AS BLOB))));
SELECT * FROM t0, rt0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)||(vt0.c0))) ORDER BY (((vt0.c1, 0.7691971203277085, vt0.c2, rt0.c0, vt0.c2)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END, ((rt0.c2) NOTNULL), NULLIF(t0.c60, t0.c60), ((vt0.c0)|(vt0.c2)), (rt0.c2 IN (rt0.c1)))) AND (((((vt0.c1, vt0.c1, NULL)) BETWEEN ((rt0.c0, rt0.c1, t0.c60)) AND ((rt0.c1, rt0.c2, vt0.c0))), vt0.c1, (vt0.c1 IN ()), (- (vt0.c2)), CAST(-1626585068 AS BLOB)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)||(vt0.c0))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((vt0.c1, 0.7691971203277085, vt0.c2, rt0.c0, vt0.c2)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END, ((rt0.c2) NOTNULL), NULLIF(t0.c60, t0.c60), ((vt0.c0)|(vt0.c2)), (rt0.c2 IN (rt0.c1)))) AND (((((vt0.c1, vt0.c1, NULL)) BETWEEN ((rt0.c0, rt0.c1, t0.c60)) AND ((rt0.c1, rt0.c2, vt0.c0))), vt0.c1, (vt0.c1 IN ()), (- (vt0.c2)), CAST(-1626585068 AS BLOB)))) DESC);
SELECT * FROM t0, rt0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)||(vt0.c0))) ORDER BY (((vt0.c1, 0.7691971203277085, vt0.c2, rt0.c0, vt0.c2)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END, ((rt0.c2) NOTNULL), NULLIF(t0.c60, t0.c60), ((vt0.c0)|(vt0.c2)), (rt0.c2 IN (rt0.c1)))) AND (((((vt0.c1, vt0.c1, NULL)) BETWEEN ((rt0.c0, rt0.c1, t0.c60)) AND ((rt0.c1, rt0.c2, vt0.c0))), vt0.c1, (vt0.c1 IN ()), (- (vt0.c2)), CAST(-1626585068 AS BLOB)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)||(vt0.c0))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((vt0.c1, 0.7691971203277085, vt0.c2, rt0.c0, vt0.c2)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END, ((rt0.c2) NOTNULL), NULLIF(t0.c60, t0.c60), ((vt0.c0)|(vt0.c2)), (rt0.c2 IN (rt0.c1)))) AND (((((vt0.c1, vt0.c1, NULL)) BETWEEN ((rt0.c0, rt0.c1, t0.c60)) AND ((rt0.c1, rt0.c2, vt0.c0))), vt0.c1, (vt0.c1 IN ()), (- (vt0.c2)), CAST(-1626585068 AS BLOB)))) DESC);
SELECT * FROM t0, rt0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)||(vt0.c0))) ORDER BY (((vt0.c1, 0.7691971203277085, vt0.c2, rt0.c0, vt0.c2)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END, ((rt0.c2) NOTNULL), NULLIF(t0.c60, t0.c60), ((vt0.c0)|(vt0.c2)), (rt0.c2 IN (rt0.c1)))) AND (((((vt0.c1, vt0.c1, NULL)) BETWEEN ((rt0.c0, rt0.c1, t0.c60)) AND ((rt0.c1, rt0.c2, vt0.c0))), vt0.c1, (vt0.c1 IN ()), (- (vt0.c2)), CAST(-1626585068 AS BLOB)))) DESC;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN ((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)) THEN CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN t0.c60 WHEN rt0.c1 THEN x'' WHEN vt0.c2 THEN t0.c60 WHEN vt0.c2 THEN t0.c60 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)) THEN CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN t0.c60 WHEN rt0.c1 THEN x'' WHEN vt0.c2 THEN t0.c60 WHEN vt0.c2 THEN t0.c60 ELSE vt0.c0 END END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN ((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)) THEN CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN t0.c60 WHEN rt0.c1 THEN x'' WHEN vt0.c2 THEN t0.c60 WHEN vt0.c2 THEN t0.c60 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)) THEN CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN t0.c60 WHEN rt0.c1 THEN x'' WHEN vt0.c2 THEN t0.c60 WHEN vt0.c2 THEN t0.c60 ELSE vt0.c0 END END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN ((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)) THEN CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN t0.c60 WHEN rt0.c1 THEN x'' WHEN vt0.c2 THEN t0.c60 WHEN vt0.c2 THEN t0.c60 ELSE vt0.c0 END END);
SELECT * FROM vt0 INNER JOIN rt0 ON (((((vt0.c0))>=((vt0.c1))))<(-1721271432)) WHERE ((((rt0.c1) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS FALSE) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((vt0.c0))>=((vt0.c1))))<(-1721271432)));
SELECT * FROM vt0 INNER JOIN rt0 ON (((((vt0.c0))>=((vt0.c1))))<(-1721271432)) WHERE ((((rt0.c1) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS FALSE) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((vt0.c0))>=((vt0.c1))))<(-1721271432)));
SELECT * FROM vt0 INNER JOIN rt0 ON (((((vt0.c0))>=((vt0.c1))))<(-1721271432)) WHERE ((((rt0.c1) IS FALSE) IN ()));
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2 COLLATE NOCASE)AND(LIKELIHOOD(DISTINCT rt0.c2, 0.26809230269431683))))OR(HEX(rt0.c2))))OR(0Xffffffffd5c698a7)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (+ ('-118773150')) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2 COLLATE NOCASE)AND(LIKELIHOOD(DISTINCT rt0.c2, 0.26809230269431683))))OR(HEX(rt0.c2))))OR(0xffffffffd5c698a7)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (+ ('-118773150')) DESC);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2 COLLATE NOCASE)AND(LIKELIHOOD(DISTINCT rt0.c2, 0.26809230269431683))))OR(HEX(rt0.c2))))OR(0Xffffffffd5c698a7)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (+ ('-118773150')) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2 COLLATE NOCASE)AND(LIKELIHOOD(DISTINCT rt0.c2, 0.26809230269431683))))OR(HEX(rt0.c2))))OR(0xffffffffd5c698a7)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (+ ('-118773150')) DESC);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2 COLLATE NOCASE)AND(LIKELIHOOD(DISTINCT rt0.c2, 0.26809230269431683))))OR(HEX(rt0.c2))))OR(0Xffffffffd5c698a7)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (+ ('-118773150')) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)AND(NULL)))OR(((vt0.c0) IS FALSE)))) ORDER BY (((vt0.c2)) NOT BETWEEN (((+ (rt0.c2)))) AND (('-1888367709'))), vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(NULL)))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c2)) NOT BETWEEN (((+ (rt0.c2)))) AND (('-1888367709'))), vt0.c1 ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)AND(NULL)))OR(((vt0.c0) IS FALSE)))) ORDER BY (((vt0.c2)) NOT BETWEEN (((+ (rt0.c2)))) AND (('-1888367709'))), vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(NULL)))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c2)) NOT BETWEEN (((+ (rt0.c2)))) AND (('-1888367709'))), vt0.c1 ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)AND(NULL)))OR(((vt0.c0) IS FALSE)))) ORDER BY (((vt0.c2)) NOT BETWEEN (((+ (rt0.c2)))) AND (('-1888367709'))), vt0.c1 ASC;
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((((t0.c60)) BETWEEN ((rt0.c2)) AND ((vt0.c2)))) IS FALSE) WHERE (1249345177 COLLATE BINARY) ORDER BY ((((vt0.c1)/(rt0.c2))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((((t0.c60))=((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((1249345177 COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((((t0.c60)) BETWEEN ((rt0.c2)) AND ((vt0.c2)))) IS FALSE) ORDER BY ((((vt0.c1)/(rt0.c2))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((((t0.c60))==((vt0.c1))))));
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((((t0.c60)) BETWEEN ((rt0.c2)) AND ((vt0.c2)))) IS FALSE) WHERE (1249345177 COLLATE BINARY) ORDER BY ((((vt0.c1)/(rt0.c2))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((((t0.c60))=((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((1249345177 COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((((t0.c60)) BETWEEN ((rt0.c2)) AND ((vt0.c2)))) IS FALSE) ORDER BY ((((vt0.c1)/(rt0.c2))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((((t0.c60))==((vt0.c1))))));
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((((t0.c60)) BETWEEN ((rt0.c2)) AND ((vt0.c2)))) IS FALSE) WHERE (1249345177 COLLATE BINARY) ORDER BY ((((vt0.c1)/(rt0.c2))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((((t0.c60))=((vt0.c1)))));
SELECT ALL * FROM t0 WHERE (t0.c60);
SELECT SUM(count) FROM (SELECT ALL ((t0.c60) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c60);
SELECT SUM(count) FROM (SELECT ALL ((t0.c60) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c60);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) ORDER BY NULL  NULLS FIRST, (((vt0.c2)) NOT BETWEEN ((CASE x'c5b5'  WHEN vt0.c0 THEN 0.6577326189226095 END)) AND ((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST, (((vt0.c2)) NOT BETWEEN ((CASE x'c5b5'  WHEN vt0.c0 THEN 0.6577326189226095 END)) AND ((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) ORDER BY NULL  NULLS FIRST, (((vt0.c2)) NOT BETWEEN ((CASE x'c5b5'  WHEN vt0.c0 THEN 0.6577326189226095 END)) AND ((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST, (((vt0.c2)) NOT BETWEEN ((CASE x'c5b5'  WHEN vt0.c0 THEN 0.6577326189226095 END)) AND ((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) ORDER BY NULL  NULLS FIRST, (((vt0.c2)) NOT BETWEEN ((CASE x'c5b5'  WHEN vt0.c0 THEN 0.6577326189226095 END)) AND ((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (0.4563894667129351) AND (CASE WHEN vt0.c0 THEN vt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) BETWEEN (0.4563894667129351) AND (CASE WHEN vt0.c0 THEN vt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (0.4563894667129351) AND (CASE WHEN vt0.c0 THEN vt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) BETWEEN (0.4563894667129351) AND (CASE WHEN vt0.c0 THEN vt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (0.4563894667129351) AND (CASE WHEN vt0.c0 THEN vt0.c2 ELSE rt0.c1 END)));
SELECT * FROM rt0, t0, vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY (+ (((rt0.c1)LIKE(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (+ (((rt0.c1)LIKE(rt0.c0))))  NULLS FIRST);
SELECT * FROM rt0, t0, vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY (+ (((rt0.c1)LIKE(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (+ (((rt0.c1)LIKE(rt0.c0))))  NULLS FIRST);
SELECT * FROM rt0, t0, vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY (+ (((rt0.c1)LIKE(rt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((((((vt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)))AND(((vt0.c1)AND(vt0.c2)))))OR(CAST(rt0.c2 AS NUMERIC))) WHERE (CAST(DATETIME(vt0.c1, x'', vt0.c2) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(DATETIME(vt0.c1, x'', vt0.c2) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((((((vt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)))AND(((vt0.c1)AND(vt0.c2)))))OR(CAST(rt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((((((vt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)))AND(((vt0.c1)AND(vt0.c2)))))OR(CAST(rt0.c2 AS NUMERIC))) WHERE (CAST(DATETIME(vt0.c1, x'', vt0.c2) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(DATETIME(vt0.c1, x'', vt0.c2) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((((((vt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)))AND(((vt0.c1)AND(vt0.c2)))))OR(CAST(rt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((((((vt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)))AND(((vt0.c1)AND(vt0.c2)))))OR(CAST(rt0.c2 AS NUMERIC))) WHERE (CAST(DATETIME(vt0.c1, x'', vt0.c2) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN 'EkD.GT/G' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 'EkD.GT/G' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN 'EkD.GT/G' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 'EkD.GT/G' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN 'EkD.GT/G' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END) ISNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(x'440d' AS NUMERIC)) ORDER BY ((((rt0.c1)&(vt0.c1)))>=(((rt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'440d' AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1)&(vt0.c1)))>=(((rt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(x'440d' AS NUMERIC)) ORDER BY ((((rt0.c1)&(vt0.c1)))>=(((rt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'440d' AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1)&(vt0.c1)))>=(((rt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(x'440d' AS NUMERIC)) ORDER BY ((((rt0.c1)&(vt0.c1)))>=(((rt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c60)==(t0.c60))) BETWEEN ((t0.c60 IN (t0.c60, t0.c60))) AND ((t0.c60 IN ())))) ORDER BY ((459066250 COLLATE NOCASE) BETWEEN ((NOT (t0.c60))) AND (CASE t0.c60  WHEN t0.c60 THEN t0.c60 END)) DESC, ((((t0.c60)%(t0.c60)))AND(t0.c60 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c60)==(t0.c60))) BETWEEN ((t0.c60 IN (t0.c60, t0.c60))) AND ((t0.c60 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((459066250 COLLATE NOCASE) BETWEEN ((NOT (t0.c60))) AND (CASE t0.c60  WHEN t0.c60 THEN t0.c60 END)) DESC, ((((t0.c60)%(t0.c60)))AND(t0.c60 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c60)==(t0.c60))) BETWEEN ((t0.c60 IN (t0.c60, t0.c60))) AND ((t0.c60 IN ())))) ORDER BY ((459066250 COLLATE NOCASE) BETWEEN ((NOT (t0.c60))) AND (CASE t0.c60  WHEN t0.c60 THEN t0.c60 END)) DESC, ((((t0.c60)%(t0.c60)))AND(t0.c60 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c60)==(t0.c60))) BETWEEN ((t0.c60 IN (t0.c60, t0.c60))) AND ((t0.c60 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((459066250 COLLATE NOCASE) BETWEEN ((NOT (t0.c60))) AND (CASE t0.c60  WHEN t0.c60 THEN t0.c60 END)) DESC, ((((t0.c60)%(t0.c60)))AND(t0.c60 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c60)==(t0.c60))) BETWEEN ((t0.c60 IN (t0.c60, t0.c60))) AND ((t0.c60 IN ())))) ORDER BY ((459066250 COLLATE NOCASE) BETWEEN ((NOT (t0.c60))) AND (CASE t0.c60  WHEN t0.c60 THEN t0.c60 END)) DESC, ((((t0.c60)%(t0.c60)))AND(t0.c60 COLLATE NOCASE))  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (vt0.c2) ORDER BY (NOT (((((((((vt0.c2)OR(0.5385486539670677)))AND(t0.c60)))AND(vt0.c2)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (((((((((vt0.c2)OR(0.5385486539670677)))AND(t0.c60)))AND(vt0.c2)))OR(vt0.c0)))));
SELECT * FROM t0, vt0 WHERE (vt0.c2) ORDER BY (NOT (((((((((vt0.c2)OR(0.5385486539670677)))AND(t0.c60)))AND(vt0.c2)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (((((((((vt0.c2)OR(0.5385486539670677)))AND(t0.c60)))AND(vt0.c2)))OR(vt0.c0)))));
SELECT * FROM t0, vt0 WHERE (vt0.c2) ORDER BY (NOT (((((((((vt0.c2)OR(0.5385486539670677)))AND(t0.c60)))AND(vt0.c2)))OR(vt0.c0))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c1 IN ()) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY (((rt0.c0)<<(rt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)<<(rt0.c2)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY (((rt0.c0)<<(rt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)<<(rt0.c2)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY (((rt0.c0)<<(rt0.c2)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN rt0.c1 COLLATE RTRIM ELSE (vt0.c1 IN ()) END) ORDER BY CAST(((vt0.c1) IS TRUE) AS BLOB) ASC, HEX(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c1 IN ()) THEN rt0.c1 COLLATE RTRIM ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST(((vt0.c1) IS TRUE) AS BLOB) ASC, HEX(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN rt0.c1 COLLATE RTRIM ELSE (vt0.c1 IN ()) END) ORDER BY CAST(((vt0.c1) IS TRUE) AS BLOB) ASC, HEX(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c1 IN ()) THEN rt0.c1 COLLATE RTRIM ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST(((vt0.c1) IS TRUE) AS BLOB) ASC, HEX(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN rt0.c1 COLLATE RTRIM ELSE (vt0.c1 IN ()) END) ORDER BY CAST(((vt0.c1) IS TRUE) AS BLOB) ASC, HEX(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON (((NULL)) BETWEEN (((((rt0.c2, vt0.c0, t0.c60)) BETWEEN ((t0.c60, vt0.c0, rt0.c0)) AND ((0.6798096834967613, vt0.c2, vt0.c0))))) AND ((t0.c60))) WHERE ((((vt0.c2) IS FALSE) IN ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c60))), rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((vt0.c2) IS FALSE) IN ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c60))), rt0.c2))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON (((NULL)) BETWEEN (((((rt0.c2, vt0.c0, t0.c60)) BETWEEN ((t0.c60, vt0.c0, rt0.c0)) AND ((0.6798096834967613, vt0.c2, vt0.c0))))) AND ((t0.c60))));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON (((NULL)) BETWEEN (((((rt0.c2, vt0.c0, t0.c60)) BETWEEN ((t0.c60, vt0.c0, rt0.c0)) AND ((0.6798096834967613, vt0.c2, vt0.c0))))) AND ((t0.c60))) WHERE ((((vt0.c2) IS FALSE) IN ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c60))), rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((vt0.c2) IS FALSE) IN ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c60))), rt0.c2))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON (((NULL)) BETWEEN (((((rt0.c2, vt0.c0, t0.c60)) BETWEEN ((t0.c60, vt0.c0, rt0.c0)) AND ((0.6798096834967613, vt0.c2, vt0.c0))))) AND ((t0.c60))));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON (((NULL)) BETWEEN (((((rt0.c2, vt0.c0, t0.c60)) BETWEEN ((t0.c60, vt0.c0, rt0.c0)) AND ((0.6798096834967613, vt0.c2, vt0.c0))))) AND ((t0.c60))) WHERE ((((vt0.c2) IS FALSE) IN ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c60))), rt0.c2)));
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c60)IS NOT(t0.c60)))&((~ (t0.c60)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c60)IS NOT(t0.c60)))&((~ (t0.c60))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c60)IS NOT(t0.c60)))&((~ (t0.c60)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c60)IS NOT(t0.c60)))&((~ (t0.c60))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c60)IS NOT(t0.c60)))&((~ (t0.c60)))));
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN NULL COLLATE BINARY THEN rt0.c0 ELSE (- (t0.c60)) END) ORDER BY (IFNULL(rt0.c1, rt0.c1) IN (CAST(rt0.c1 AS NUMERIC))) ASC  NULLS FIRST, 0.5296531383136397  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL COLLATE BINARY THEN rt0.c0 ELSE (- (t0.c60)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY (IFNULL(rt0.c1, rt0.c1) IN (CAST(rt0.c1 AS NUMERIC))) ASC  NULLS FIRST, 0.5296531383136397  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN NULL COLLATE BINARY THEN rt0.c0 ELSE (- (t0.c60)) END) ORDER BY (IFNULL(rt0.c1, rt0.c1) IN (CAST(rt0.c1 AS NUMERIC))) ASC  NULLS FIRST, 0.5296531383136397  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL COLLATE BINARY THEN rt0.c0 ELSE (- (t0.c60)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY (IFNULL(rt0.c1, rt0.c1) IN (CAST(rt0.c1 AS NUMERIC))) ASC  NULLS FIRST, 0.5296531383136397  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN NULL COLLATE BINARY THEN rt0.c0 ELSE (- (t0.c60)) END) ORDER BY (IFNULL(rt0.c1, rt0.c1) IN (CAST(rt0.c1 AS NUMERIC))) ASC  NULLS FIRST, 0.5296531383136397  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN (rt0.c1, rt0.c0)) COLLATE BINARY) ORDER BY CAST(((rt0.c1)<=(rt0.c2)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN (rt0.c1, rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)<=(rt0.c2)) AS REAL) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN (rt0.c1, rt0.c0)) COLLATE BINARY) ORDER BY CAST(((rt0.c1)<=(rt0.c2)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN (rt0.c1, rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)<=(rt0.c2)) AS REAL) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN (rt0.c1, rt0.c0)) COLLATE BINARY) ORDER BY CAST(((rt0.c1)<=(rt0.c2)) AS REAL) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((((((LIKELY(NULL))OR(json_array_length(vt0.c1, vt0.c1))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c2 COLLATE BINARY)))AND((((vt0.c2, vt0.c0, vt0.c0))<>((x'2bab', vt0.c0, vt0.c2)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((LIKELY(NULL))OR(json_array_length(vt0.c1, vt0.c1))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c2 COLLATE BINARY)))AND((((vt0.c2, vt0.c0, vt0.c0))<>((x'2bab', vt0.c0, vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((LIKELY(NULL))OR(json_array_length(vt0.c1, vt0.c1))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c2 COLLATE BINARY)))AND((((vt0.c2, vt0.c0, vt0.c0))<>((x'2bab', vt0.c0, vt0.c2)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((LIKELY(NULL))OR(json_array_length(vt0.c1, vt0.c1))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c2 COLLATE BINARY)))AND((((vt0.c2, vt0.c0, vt0.c0))<>((x'2bab', vt0.c0, vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((LIKELY(NULL))OR(json_array_length(vt0.c1, vt0.c1))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c2 COLLATE BINARY)))AND((((vt0.c2, vt0.c0, vt0.c0))<>((x'2bab', vt0.c0, vt0.c2)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CASE WHEN ((rt0.c0)||(rt0.c2)) THEN ((vt0.c0) IS FALSE) ELSE vt0.c2 COLLATE RTRIM END) ORDER BY ((((((((((vt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(t0.c60)))AND(vt0.c2)))IS NOT((((vt0.c1))>((t0.c60)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)||(rt0.c2)) THEN ((vt0.c0) IS FALSE) ELSE vt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((((((vt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(t0.c60)))AND(vt0.c2)))IS NOT((((vt0.c1))>((t0.c60))))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CASE WHEN ((rt0.c0)||(rt0.c2)) THEN ((vt0.c0) IS FALSE) ELSE vt0.c2 COLLATE RTRIM END) ORDER BY ((((((((((vt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(t0.c60)))AND(vt0.c2)))IS NOT((((vt0.c1))>((t0.c60)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)||(rt0.c2)) THEN ((vt0.c0) IS FALSE) ELSE vt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((((((vt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(t0.c60)))AND(vt0.c2)))IS NOT((((vt0.c1))>((t0.c60))))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CASE WHEN ((rt0.c0)||(rt0.c2)) THEN ((vt0.c0) IS FALSE) ELSE vt0.c2 COLLATE RTRIM END) ORDER BY ((((((((((vt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(t0.c60)))AND(vt0.c2)))IS NOT((((vt0.c1))>((t0.c60)))));
SELECT COUNT(*) FROM rt0 WHERE (((load_extension(rt0.c0, rt0.c1))IS NOT((rt0.c1 IN ())))) ORDER BY (NULL IN ()), (((rt0.c0) NOTNULL) IN (NULL)) DESC, (+ (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((load_extension(rt0.c0, rt0.c1))IS NOT((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (NULL IN ()), (((rt0.c0) NOTNULL) IN (NULL)) DESC, (+ (rt0.c0)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((load_extension(rt0.c0, rt0.c1))IS NOT((rt0.c1 IN ())))) ORDER BY (NULL IN ()), (((rt0.c0) NOTNULL) IN (NULL)) DESC, (+ (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((load_extension(rt0.c0, rt0.c1))IS NOT((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (NULL IN ()), (((rt0.c0) NOTNULL) IN (NULL)) DESC, (+ (rt0.c0)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((load_extension(rt0.c0, rt0.c1))IS NOT((rt0.c1 IN ())))) ORDER BY (NULL IN ()), (((rt0.c0) NOTNULL) IN (NULL)) DESC, (+ (rt0.c0)) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c60) BETWEEN (t0.c60) AND (t0.c60)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c60) BETWEEN (t0.c60) AND (t0.c60)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c60) BETWEEN (t0.c60) AND (t0.c60)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c60) BETWEEN (t0.c60) AND (t0.c60)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c60) BETWEEN (t0.c60) AND (t0.c60)) AS INTEGER));
SELECT * FROM vt0, t0 INNER JOIN rt0 ON (((((((((NOT (0.3493932999775199)))AND((((vt0.c0, t0.c60, rt0.c0))<=((vt0.c2, rt0.c2, t0.c60))))))AND(vt0.c2 COLLATE NOCASE)))AND(rt0.c2)))AND(((rt0.c2)*(0x4e18e4e3)))) WHERE ((((('\?_%9P')<(vt0.c1))) BETWEEN (LIKELIHOOD(vt0.c0, 0.6073685952176617)) AND (vt0.c1))) ORDER BY (~ (NULL));
SELECT SUM(count) FROM (SELECT ALL (((((('\?_%9P')<(vt0.c1))) BETWEEN (LIKELIHOOD(vt0.c0, 0.6073685952176617)) AND (vt0.c1))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON (((((((((NOT (0.3493932999775199)))AND((((vt0.c0, t0.c60, rt0.c0))<=((vt0.c2, rt0.c2, t0.c60))))))AND(vt0.c2 COLLATE NOCASE)))AND(rt0.c2)))AND(((rt0.c2)*(0x4e18e4e3)))) ORDER BY (~ (NULL)));
SELECT * FROM vt0, t0 INNER JOIN rt0 ON (((((((((NOT (0.3493932999775199)))AND((((vt0.c0, t0.c60, rt0.c0))<=((vt0.c2, rt0.c2, t0.c60))))))AND(vt0.c2 COLLATE NOCASE)))AND(rt0.c2)))AND(((rt0.c2)*(0x4e18e4e3)))) WHERE ((((('\?_%9P')<(vt0.c1))) BETWEEN (LIKELIHOOD(vt0.c0, 0.6073685952176617)) AND (vt0.c1))) ORDER BY (~ (NULL));
SELECT SUM(count) FROM (SELECT ALL (((((('\?_%9P')<(vt0.c1))) BETWEEN (LIKELIHOOD(vt0.c0, 0.6073685952176617)) AND (vt0.c1))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON (((((((((NOT (0.3493932999775199)))AND((((vt0.c0, t0.c60, rt0.c0))<=((vt0.c2, rt0.c2, t0.c60))))))AND(vt0.c2 COLLATE NOCASE)))AND(rt0.c2)))AND(((rt0.c2)*(0x4e18e4e3)))) ORDER BY (~ (NULL)));
SELECT * FROM vt0, t0 INNER JOIN rt0 ON (((((((((NOT (0.3493932999775199)))AND((((vt0.c0, t0.c60, rt0.c0))<=((vt0.c2, rt0.c2, t0.c60))))))AND(vt0.c2 COLLATE NOCASE)))AND(rt0.c2)))AND(((rt0.c2)*(0x4e18e4e3)))) WHERE ((((('\?_%9P')<(vt0.c1))) BETWEEN (LIKELIHOOD(vt0.c0, 0.6073685952176617)) AND (vt0.c1))) ORDER BY (~ (NULL));
SELECT ALL * FROM rt0, vt0 WHERE (vt0.c1) ORDER BY (~ (CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (vt0.c1) ORDER BY (~ (CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (vt0.c1) ORDER BY (~ (CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST;
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON ((rt0.c1 COLLATE RTRIM)LIKE((rt0.c2 IN (rt0.c2)))) WHERE (((((((((NULLIF(rt0.c2, rt0.c0))OR(DATE(rt0.c1, rt0.c2, t0.c60))))AND(ABS(rt0.c1))))OR(rt0.c2)))AND(x'4a42c953'))) ORDER BY CASE ((rt0.c0) NOTNULL)  WHEN LIKELIHOOD('', 0.08955708269191931) THEN ((rt0.c2)AND(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULLIF(rt0.c2, rt0.c0))OR(DATE(rt0.c1, rt0.c2, t0.c60))))AND(ABS(rt0.c1))))OR(rt0.c2)))AND(x'4a42c953'))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((rt0.c1 COLLATE RTRIM)LIKE((rt0.c2 IN (rt0.c2)))) ORDER BY CASE ((rt0.c0) NOTNULL)  WHEN LIKELIHOOD('', 0.08955708269191931) THEN ((rt0.c2)AND(rt0.c2)) END);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON ((rt0.c1 COLLATE RTRIM)LIKE((rt0.c2 IN (rt0.c2)))) WHERE (((((((((NULLIF(rt0.c2, rt0.c0))OR(DATE(rt0.c1, rt0.c2, t0.c60))))AND(ABS(rt0.c1))))OR(rt0.c2)))AND(x'4a42c953'))) ORDER BY CASE ((rt0.c0) NOTNULL)  WHEN LIKELIHOOD('', 0.08955708269191931) THEN ((rt0.c2)AND(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULLIF(rt0.c2, rt0.c0))OR(DATE(rt0.c1, rt0.c2, t0.c60))))AND(ABS(rt0.c1))))OR(rt0.c2)))AND(x'4a42c953'))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((rt0.c1 COLLATE RTRIM)LIKE((rt0.c2 IN (rt0.c2)))) ORDER BY CASE ((rt0.c0) NOTNULL)  WHEN LIKELIHOOD('', 0.08955708269191931) THEN ((rt0.c2)AND(rt0.c2)) END);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON ((rt0.c1 COLLATE RTRIM)LIKE((rt0.c2 IN (rt0.c2)))) WHERE (((((((((NULLIF(rt0.c2, rt0.c0))OR(DATE(rt0.c1, rt0.c2, t0.c60))))AND(ABS(rt0.c1))))OR(rt0.c2)))AND(x'4a42c953'))) ORDER BY CASE ((rt0.c0) NOTNULL)  WHEN LIKELIHOOD('', 0.08955708269191931) THEN ((rt0.c2)AND(rt0.c2)) END;
SELECT ALL * FROM vt0, t0, rt0 WHERE (vt0.c1) ORDER BY CAST(LIKELIHOOD(t0.c60, 0.6179444244847144) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, rt0 ORDER BY CAST(LIKELIHOOD(t0.c60, 0.6179444244847144) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (vt0.c1) ORDER BY CAST(LIKELIHOOD(t0.c60, 0.6179444244847144) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, rt0 ORDER BY CAST(LIKELIHOOD(t0.c60, 0.6179444244847144) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (vt0.c1) ORDER BY CAST(LIKELIHOOD(t0.c60, 0.6179444244847144) AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE BINARY)) AND (((((vt0.c1))>((rt0.c1))))))) ORDER BY ((((rt0.c0)%(vt0.c0)))<<(CAST(rt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE BINARY)) AND (((((vt0.c1))>((rt0.c1))))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)%(vt0.c0)))<<(CAST(rt0.c1 AS TEXT))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE BINARY)) AND (((((vt0.c1))>((rt0.c1))))))) ORDER BY ((((rt0.c0)%(vt0.c0)))<<(CAST(rt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE BINARY)) AND (((((vt0.c1))>((rt0.c1))))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)%(vt0.c0)))<<(CAST(rt0.c1 AS TEXT))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE BINARY)) AND (((((vt0.c1))>((rt0.c1))))))) ORDER BY ((((rt0.c0)%(vt0.c0)))<<(CAST(rt0.c1 AS TEXT)));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((('') NOT BETWEEN (((rt0.c1) NOT BETWEEN (x'') AND (vt0.c1))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((('') NOT BETWEEN (((rt0.c1) NOT BETWEEN (x'') AND (vt0.c1))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((('') NOT BETWEEN (((rt0.c1) NOT BETWEEN (x'') AND (vt0.c1))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((('') NOT BETWEEN (((rt0.c1) NOT BETWEEN (x'') AND (vt0.c1))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((('') NOT BETWEEN (((rt0.c1) NOT BETWEEN (x'') AND (vt0.c1))) AND (((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((x'') NOT BETWEEN (t0.c60) AND (t0.c60))) ISNULL)) ORDER BY (((t0.c60 IN (t0.c60)))==(CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE x'' END));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT BETWEEN (t0.c60) AND (t0.c60))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c60 IN (t0.c60)))=(CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE x'' END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((x'') NOT BETWEEN (t0.c60) AND (t0.c60))) ISNULL)) ORDER BY (((t0.c60 IN (t0.c60)))==(CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE x'' END));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT BETWEEN (t0.c60) AND (t0.c60))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c60 IN (t0.c60)))=(CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE x'' END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((x'') NOT BETWEEN (t0.c60) AND (t0.c60))) ISNULL)) ORDER BY (((t0.c60 IN (t0.c60)))==(CASE t0.c60  WHEN t0.c60 THEN t0.c60 ELSE x'' END));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c60) IS TRUE)) NOT NULL)) ORDER BY ((((((((9.71815016E8)AND(((t0.c60) NOTNULL))))AND((t0.c60 IN (t0.c60)))))AND(CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)))OR(t0.c60)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c60) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((((((((9.71815016E8)AND(((t0.c60) NOTNULL))))AND((t0.c60 IN (t0.c60)))))AND(CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)))OR(t0.c60)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c60) IS TRUE)) NOT NULL)) ORDER BY ((((((((9.71815016E8)AND(((t0.c60) NOTNULL))))AND((t0.c60 IN (t0.c60)))))AND(CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)))OR(t0.c60)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c60) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((((((((9.71815016E8)AND(((t0.c60) NOTNULL))))AND((t0.c60 IN (t0.c60)))))AND(CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)))OR(t0.c60)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c60) IS TRUE)) NOT NULL)) ORDER BY ((((((((9.71815016E8)AND(((t0.c60) NOTNULL))))AND((t0.c60 IN (t0.c60)))))AND(CASE WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END)))OR(t0.c60)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE CASE rt0.c0  WHEN '-748000614' THEN vt0.c1 END  WHEN vt0.c1 COLLATE BINARY THEN rt0.c2 COLLATE NOCASE END WHERE ((((((((((0.16611264901952727)OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((0.16611264901952727)OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE CASE rt0.c0  WHEN '-748000614' THEN vt0.c1 END  WHEN vt0.c1 COLLATE BINARY THEN rt0.c2 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE CASE rt0.c0  WHEN '-748000614' THEN vt0.c1 END  WHEN vt0.c1 COLLATE BINARY THEN rt0.c2 COLLATE NOCASE END WHERE ((((((((((0.16611264901952727)OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((0.16611264901952727)OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE CASE rt0.c0  WHEN '-748000614' THEN vt0.c1 END  WHEN vt0.c1 COLLATE BINARY THEN rt0.c2 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE CASE rt0.c0  WHEN '-748000614' THEN vt0.c1 END  WHEN vt0.c1 COLLATE BINARY THEN rt0.c2 COLLATE NOCASE END WHERE ((((((((((0.16611264901952727)OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0)<<(t0.c60)) IN ())) ORDER BY (((+ (rt0.c2))) BETWEEN (((rt0.c0) ISNULL)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)<<(t0.c60)) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY (((+ (rt0.c2))) BETWEEN (((rt0.c0) ISNULL)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0)<<(t0.c60)) IN ())) ORDER BY (((+ (rt0.c2))) BETWEEN (((rt0.c0) ISNULL)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)<<(t0.c60)) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY (((+ (rt0.c2))) BETWEEN (((rt0.c0) ISNULL)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0)<<(t0.c60)) IN ())) ORDER BY (((+ (rt0.c2))) BETWEEN (((rt0.c0) ISNULL)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((TRIM(DISTINCT 0Xffffffffc99490c5), HEX(DISTINCT vt0.c0), CASE WHEN 0.007704521522308383 THEN vt0.c0 ELSE vt0.c1 END))==((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)), NULL, 0.6999562099520052)))) ORDER BY ((((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((TRIM(DISTINCT 0xffffffffc99490c5), HEX(DISTINCT vt0.c0), CASE WHEN 0.007704521522308383 THEN vt0.c0 ELSE vt0.c1 END))==((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)), NULL, 0.6999562099520052)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((TRIM(DISTINCT 0Xffffffffc99490c5), HEX(DISTINCT vt0.c0), CASE WHEN 0.007704521522308383 THEN vt0.c0 ELSE vt0.c1 END))==((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)), NULL, 0.6999562099520052)))) ORDER BY ((((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((TRIM(DISTINCT 0xffffffffc99490c5), HEX(DISTINCT vt0.c0), CASE WHEN 0.007704521522308383 THEN vt0.c0 ELSE vt0.c1 END))==((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)), NULL, 0.6999562099520052)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((TRIM(DISTINCT 0Xffffffffc99490c5), HEX(DISTINCT vt0.c0), CASE WHEN 0.007704521522308383 THEN vt0.c0 ELSE vt0.c1 END))==((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)), NULL, 0.6999562099520052)))) ORDER BY ((((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE));
SELECT ALL * FROM t0, rt0 WHERE (CASE (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))  WHEN ((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(-1730646323)))OR(rt0.c0)))OR(t0.c60)))OR(t0.c60)) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))  WHEN ((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(-1730646323)))OR(rt0.c0)))OR(t0.c60)))OR(t0.c60)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))  WHEN ((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(-1730646323)))OR(rt0.c0)))OR(t0.c60)))OR(t0.c60)) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))  WHEN ((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(-1730646323)))OR(rt0.c0)))OR(t0.c60)))OR(t0.c60)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))  WHEN ((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(-1730646323)))OR(rt0.c0)))OR(t0.c60)))OR(t0.c60)) THEN (rt0.c2 IN ()) END);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c0)) BETWEEN ((t0.c60)) AND ((t0.c60))))OR(CAST(t0.c60 AS INTEGER))))OR(rt0.c2)) WHERE ((+ ('-1212520146'))) ORDER BY ((((rt0.c0)<<(rt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((+ ('-1212520146'))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c0)) BETWEEN ((t0.c60)) AND ((t0.c60))))OR(CAST(t0.c60 AS INTEGER))))OR(rt0.c2)) ORDER BY ((((rt0.c0)<<(rt0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c0)) BETWEEN ((t0.c60)) AND ((t0.c60))))OR(CAST(t0.c60 AS INTEGER))))OR(rt0.c2)) WHERE ((+ ('-1212520146'))) ORDER BY ((((rt0.c0)<<(rt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((+ ('-1212520146'))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c0)) BETWEEN ((t0.c60)) AND ((t0.c60))))OR(CAST(t0.c60 AS INTEGER))))OR(rt0.c2)) ORDER BY ((((rt0.c0)<<(rt0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c0)) BETWEEN ((t0.c60)) AND ((t0.c60))))OR(CAST(t0.c60 AS INTEGER))))OR(rt0.c2)) WHERE ((+ ('-1212520146'))) ORDER BY ((((rt0.c0)<<(rt0.c1))) NOT NULL);
SELECT * FROM vt0 WHERE (((((0.24147625470467426) IS TRUE))||((~ ('1577:1072-5638818540476224991T-1265042177956109155 1301:')))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.24147625470467426) IS TRUE))||((~ ('1577:1072-5638818540476224991T-1265042177956109155 1301:'))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((0.24147625470467426) IS TRUE))||((~ ('1577:1072-5638818540476224991T-1265042177956109155 1301:')))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.24147625470467426) IS TRUE))||((~ ('1577:1072-5638818540476224991T-1265042177956109155 1301:'))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((0.24147625470467426) IS TRUE))||((~ ('1577:1072-5638818540476224991T-1265042177956109155 1301:')))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c60);
SELECT SUM(count) FROM (SELECT ALL ((t0.c60) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c60);
SELECT SUM(count) FROM (SELECT ALL ((t0.c60) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c60);
SELECT COUNT(*) FROM vt0, t0 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((~ (NULL)));
SELECT ALL * FROM t0, vt0 WHERE (t0.c60 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t0.c60 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (t0.c60 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t0.c60 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (t0.c60 COLLATE NOCASE);
SELECT * FROM vt0 WHERE (COALESCE(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END, x''));
SELECT SUM(count) FROM (SELECT ((COALESCE(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END, x'')) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (COALESCE(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END, x''));
SELECT SUM(count) FROM (SELECT ((COALESCE(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END, x'')) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (COALESCE(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END, x''));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c1, x''))<((rt0.c2, rt0.c2, rt0.c0)))) BETWEEN (IFNULL(rt0.c0, rt0.c0)) AND (((rt0.c2)<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, x''))<((rt0.c2, rt0.c2, rt0.c0)))) BETWEEN (IFNULL(rt0.c0, rt0.c0)) AND (((rt0.c2)<(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c1, x''))<((rt0.c2, rt0.c2, rt0.c0)))) BETWEEN (IFNULL(rt0.c0, rt0.c0)) AND (((rt0.c2)<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, x''))<((rt0.c2, rt0.c2, rt0.c0)))) BETWEEN (IFNULL(rt0.c0, rt0.c0)) AND (((rt0.c2)<(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c1, x''))<((rt0.c2, rt0.c2, rt0.c0)))) BETWEEN (IFNULL(rt0.c0, rt0.c0)) AND (((rt0.c2)<(rt0.c0)))));
SELECT ALL * FROM t0 WHERE (0.08191884755734846);
SELECT SUM(count) FROM (SELECT ALL ((0.08191884755734846) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (0.08191884755734846);
SELECT SUM(count) FROM (SELECT ALL ((0.08191884755734846) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (0.08191884755734846);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c60)||(vt0.c0)))=(CAST('' AS NUMERIC)))) ORDER BY ((((vt0.c2)IS(vt0.c1)))==(((((((((((((t0.c60)AND(t0.c60)))AND(vt0.c2)))OR(vt0.c0)))AND(t0.c60)))OR(vt0.c0)))AND(t0.c60)))), ((t0.c60 COLLATE NOCASE) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c60)||(vt0.c0)))=(CAST('' AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c2)IS(vt0.c1)))=(((((((((((((t0.c60)AND(t0.c60)))AND(vt0.c2)))OR(vt0.c0)))AND(t0.c60)))OR(vt0.c0)))AND(t0.c60)))), ((t0.c60 COLLATE NOCASE) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c60)||(vt0.c0)))=(CAST('' AS NUMERIC)))) ORDER BY ((((vt0.c2)IS(vt0.c1)))==(((((((((((((t0.c60)AND(t0.c60)))AND(vt0.c2)))OR(vt0.c0)))AND(t0.c60)))OR(vt0.c0)))AND(t0.c60)))), ((t0.c60 COLLATE NOCASE) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c60)||(vt0.c0)))=(CAST('' AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c2)IS(vt0.c1)))=(((((((((((((t0.c60)AND(t0.c60)))AND(vt0.c2)))OR(vt0.c0)))AND(t0.c60)))OR(vt0.c0)))AND(t0.c60)))), ((t0.c60 COLLATE NOCASE) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c60)||(vt0.c0)))=(CAST('' AS NUMERIC)))) ORDER BY ((((vt0.c2)IS(vt0.c1)))==(((((((((((((t0.c60)AND(t0.c60)))AND(vt0.c2)))OR(vt0.c0)))AND(t0.c60)))OR(vt0.c0)))AND(t0.c60)))), ((t0.c60 COLLATE NOCASE) ISNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2 IN ()))IS(vt0.c2)));
SELECT SUM(count) FROM (SELECT (((((vt0.c2 IN ()))IS(vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2 IN ()))IS(vt0.c2)));
SELECT SUM(count) FROM (SELECT (((((vt0.c2 IN ()))IS(vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2 IN ()))IS(vt0.c2)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CASE -308488283  WHEN 0.34763091552868963 THEN ((((vt0.c1)AND(t0.c60)))OR(rt0.c1)) WHEN (+ (vt0.c1)) THEN CASE WHEN rt0.c0 THEN t0.c60 END WHEN vt0.c2 THEN '0E^潫U>/xS' ELSE ((rt0.c1)LIKE(t0.c60)) END CROSS JOIN vt0 ON ((rt0.c1)LIKE(CASE vt0.c1  WHEN 0.28680150357527556 THEN x'' END)) WHERE (((CAST(rt0.c2 AS BLOB))+(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB))+(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c2))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CASE -308488283  WHEN 0.34763091552868963 THEN ((((vt0.c1)AND(t0.c60)))OR(rt0.c1)) WHEN (+ (vt0.c1)) THEN CASE WHEN rt0.c0 THEN t0.c60 END WHEN vt0.c2 THEN '0E^潫U>/xS' ELSE ((rt0.c1)LIKE(t0.c60)) END CROSS JOIN vt0 ON ((rt0.c1)LIKE(CASE vt0.c1  WHEN 0.28680150357527556 THEN x'' END)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CASE -308488283  WHEN 0.34763091552868963 THEN ((((vt0.c1)AND(t0.c60)))OR(rt0.c1)) WHEN (+ (vt0.c1)) THEN CASE WHEN rt0.c0 THEN t0.c60 END WHEN vt0.c2 THEN '0E^潫U>/xS' ELSE ((rt0.c1)LIKE(t0.c60)) END CROSS JOIN vt0 ON ((rt0.c1)LIKE(CASE vt0.c1  WHEN 0.28680150357527556 THEN x'' END)) WHERE (((CAST(rt0.c2 AS BLOB))+(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB))+(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c2))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CASE -308488283  WHEN 0.34763091552868963 THEN ((((vt0.c1)AND(t0.c60)))OR(rt0.c1)) WHEN (+ (vt0.c1)) THEN CASE WHEN rt0.c0 THEN t0.c60 END WHEN vt0.c2 THEN '0E^潫U>/xS' ELSE ((rt0.c1)LIKE(t0.c60)) END CROSS JOIN vt0 ON ((rt0.c1)LIKE(CASE vt0.c1  WHEN 0.28680150357527556 THEN x'' END)));
SELECT ALL * FROM rt0, t0 INNER JOIN vt0 ON ((((rt0.c2)|(vt0.c0)))-((vt0.c1 IN (0.9875835276467468)))) WHERE (TRIM(((rt0.c2)+(vt0.c0)), t0.c60 COLLATE NOCASE)) ORDER BY (t0.c60 COLLATE NOCASE IN ()), ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN ('-493004630') AND (((((vt0.c1)OR(rt0.c1)))AND(t0.c60)))) DESC, rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c2)+(vt0.c0)), t0.c60 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON ((((rt0.c2)|(vt0.c0)))-((vt0.c1 IN (0.9875835276467468)))) ORDER BY (t0.c60 COLLATE NOCASE IN ()), ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN ('-493004630') AND (((((vt0.c1)OR(rt0.c1)))AND(t0.c60)))) DESC, rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt0, t0 INNER JOIN vt0 ON ((((rt0.c2)|(vt0.c0)))-((vt0.c1 IN (0.9875835276467468)))) WHERE (TRIM(((rt0.c2)+(vt0.c0)), t0.c60 COLLATE NOCASE)) ORDER BY (t0.c60 COLLATE NOCASE IN ()), ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN ('-493004630') AND (((((vt0.c1)OR(rt0.c1)))AND(t0.c60)))) DESC, rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c2)+(vt0.c0)), t0.c60 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON ((((rt0.c2)|(vt0.c0)))-((vt0.c1 IN (0.9875835276467468)))) ORDER BY (t0.c60 COLLATE NOCASE IN ()), ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN ('-493004630') AND (((((vt0.c1)OR(rt0.c1)))AND(t0.c60)))) DESC, rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt0, t0 INNER JOIN vt0 ON ((((rt0.c2)|(vt0.c0)))-((vt0.c1 IN (0.9875835276467468)))) WHERE (TRIM(((rt0.c2)+(vt0.c0)), t0.c60 COLLATE NOCASE)) ORDER BY (t0.c60 COLLATE NOCASE IN ()), ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN ('-493004630') AND (((((vt0.c1)OR(rt0.c1)))AND(t0.c60)))) DESC, rt0.c1  NULLS FIRST;
SELECT * FROM vt0, rt0 INNER JOIN t0 ON ((((((vt0.c2)AND(rt0.c2)))AND(t0.c60))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c2)))OR('>Nwl➩BJ')))OR(rt0.c0)))AND(rt0.c1))) AND ((~ (t0.c60)))) WHERE (((((vt0.c2)/(rt0.c2)))<(((((vt0.c0)OR('1085569876')))OR(t0.c60))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN t0.c60 WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c2 END)||(((rt0.c0)>=(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)/(rt0.c2)))<(((((vt0.c0)OR('1085569876')))OR(t0.c60))))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON ((((((vt0.c2)AND(rt0.c2)))AND(t0.c60))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c2)))OR('>Nwl➩BJ')))OR(rt0.c0)))AND(rt0.c1))) AND ((~ (t0.c60)))) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN t0.c60 WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c2 END)||(((rt0.c0)>=(rt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, rt0 INNER JOIN t0 ON ((((((vt0.c2)AND(rt0.c2)))AND(t0.c60))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c2)))OR('>Nwl➩BJ')))OR(rt0.c0)))AND(rt0.c1))) AND ((~ (t0.c60)))) WHERE (((((vt0.c2)/(rt0.c2)))<(((((vt0.c0)OR('1085569876')))OR(t0.c60))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN t0.c60 WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c2 END)||(((rt0.c0)>=(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)/(rt0.c2)))<(((((vt0.c0)OR('1085569876')))OR(t0.c60))))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON ((((((vt0.c2)AND(rt0.c2)))AND(t0.c60))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c2)))OR('>Nwl➩BJ')))OR(rt0.c0)))AND(rt0.c1))) AND ((~ (t0.c60)))) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN t0.c60 WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c2 END)||(((rt0.c0)>=(rt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, rt0 INNER JOIN t0 ON ((((((vt0.c2)AND(rt0.c2)))AND(t0.c60))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c2)))OR('>Nwl➩BJ')))OR(rt0.c0)))AND(rt0.c1))) AND ((~ (t0.c60)))) WHERE (((((vt0.c2)/(rt0.c2)))<(((((vt0.c0)OR('1085569876')))OR(t0.c60))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN t0.c60 WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c2 END)||(((rt0.c0)>=(rt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((vt0.c2) ISNULL))LIKE(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) ISNULL))LIKE(NULL))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((vt0.c2) ISNULL))LIKE(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) ISNULL))LIKE(NULL))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((vt0.c2) ISNULL))LIKE(NULL)));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (~ ((- (vt0.c0)))) RIGHT OUTER JOIN vt0 ON (((CASE vt0.c2  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END, ((rt0.c2) NOTNULL), CAST(rt0.c2 AS TEXT)))<(((((vt0.c2)) BETWEEN ((t0.c60)) AND ((vt0.c0))), ((x'd436')%('1727942448')), (((vt0.c0))<=((rt0.c2)))))) WHERE (((((rt0.c1)OR(vt0.c1 COLLATE RTRIM)))AND(((((((((((((rt0.c1)OR(rt0.c1)))OR(t0.c60)))OR(vt0.c2)))OR(rt0.c1)))AND(vt0.c2)))OR(x''))))) ORDER BY CASE CHANGES()  WHEN (((vt0.c0, vt0.c1, rt0.c2)) BETWEEN ((vt0.c1, x'', rt0.c1)) AND ((rt0.c2, vt0.c0, x''))) THEN t0.c60 COLLATE NOCASE END  NULLS LAST, ((rt0.c1) NOT NULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(vt0.c1 COLLATE RTRIM)))AND(((((((((((((rt0.c1)OR(rt0.c1)))OR(t0.c60)))OR(vt0.c2)))OR(rt0.c1)))AND(vt0.c2)))OR(x''))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (~ ((- (vt0.c0)))) RIGHT OUTER JOIN vt0 ON (((CASE vt0.c2  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END, ((rt0.c2) NOTNULL), CAST(rt0.c2 AS TEXT)))<(((((vt0.c2)) BETWEEN ((t0.c60)) AND ((vt0.c0))), ((x'd436')%('1727942448')), (((vt0.c0))<=((rt0.c2)))))) ORDER BY CASE CHANGES()  WHEN (((vt0.c0, vt0.c1, rt0.c2)) BETWEEN ((vt0.c1, x'', rt0.c1)) AND ((rt0.c2, vt0.c0, x''))) THEN t0.c60 COLLATE NOCASE END  NULLS LAST, ((rt0.c1) NOT NULL) COLLATE NOCASE);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (~ ((- (vt0.c0)))) RIGHT OUTER JOIN vt0 ON (((CASE vt0.c2  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END, ((rt0.c2) NOTNULL), CAST(rt0.c2 AS TEXT)))<(((((vt0.c2)) BETWEEN ((t0.c60)) AND ((vt0.c0))), ((x'd436')%('1727942448')), (((vt0.c0))<=((rt0.c2)))))) WHERE (((((rt0.c1)OR(vt0.c1 COLLATE RTRIM)))AND(((((((((((((rt0.c1)OR(rt0.c1)))OR(t0.c60)))OR(vt0.c2)))OR(rt0.c1)))AND(vt0.c2)))OR(x''))))) ORDER BY CASE CHANGES()  WHEN (((vt0.c0, vt0.c1, rt0.c2)) BETWEEN ((vt0.c1, x'', rt0.c1)) AND ((rt0.c2, vt0.c0, x''))) THEN t0.c60 COLLATE NOCASE END  NULLS LAST, ((rt0.c1) NOT NULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(vt0.c1 COLLATE RTRIM)))AND(((((((((((((rt0.c1)OR(rt0.c1)))OR(t0.c60)))OR(vt0.c2)))OR(rt0.c1)))AND(vt0.c2)))OR(x''))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (~ ((- (vt0.c0)))) RIGHT OUTER JOIN vt0 ON (((CASE vt0.c2  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END, ((rt0.c2) NOTNULL), CAST(rt0.c2 AS TEXT)))<(((((vt0.c2)) BETWEEN ((t0.c60)) AND ((vt0.c0))), ((x'd436')%('1727942448')), (((vt0.c0))<=((rt0.c2)))))) ORDER BY CASE CHANGES()  WHEN (((vt0.c0, vt0.c1, rt0.c2)) BETWEEN ((vt0.c1, x'', rt0.c1)) AND ((rt0.c2, vt0.c0, x''))) THEN t0.c60 COLLATE NOCASE END  NULLS LAST, ((rt0.c1) NOT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((vt0.c2)OR(t0.c60)))OR(t0.c60)) COLLATE NOCASE) ORDER BY (('}LLy	*{B') NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)OR(t0.c60)))OR(t0.c60)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (('}LLy	*{B') NOT NULL) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((vt0.c2)OR(t0.c60)))OR(t0.c60)) COLLATE NOCASE) ORDER BY (('}LLy	*{B') NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)OR(t0.c60)))OR(t0.c60)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (('}LLy	*{B') NOT NULL) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((vt0.c2)OR(t0.c60)))OR(t0.c60)) COLLATE NOCASE) ORDER BY (('}LLy	*{B') NOT NULL) DESC;
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))%(LTRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC))%(LTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))%(LTRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC))%(LTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))%(LTRIM(vt0.c0))));
SELECT ALL * FROM t0 WHERE (x'd60f');
SELECT SUM(count) FROM (SELECT ((x'd60f') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'd60f');
SELECT SUM(count) FROM (SELECT ((x'd60f') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'd60f');
