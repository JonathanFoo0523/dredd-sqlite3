-- Time: 2024/06/09 11:52:53
-- Database: database3
-- Database version: 3.40.0
-- seed value: 710549203
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 BLOB ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, , columnsize=0); -- 1ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-347617524,15');\n; -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=x''; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 5); -- 0ms;
ALTER TABLE t0 ADD COLUMN c87 REAL; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1472245939); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t0(c87, c0) VALUES (x'08b7', '%[|wp'), ('\r', NULL), (x'', x''); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.36338979762477297); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '18148'); -- 0ms;
UPDATE OR FAIL vt1 SET (c0, c0, c0)=(0.11464286713650595, 0.7052588143220985, 0.3774634252022142) WHERE ((vt1.c0 COLLATE RTRIM)>(LIKE(vt1.c0, vt1.c0))); -- 0ms;
PRAGMA main.automatic_index = false; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (''); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(-322689062); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 554386001); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c87=x''; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES ('4v|9穵뿗'), ('3'), ('-347617524'); -- 1ms;
INSERT OR ROLLBACK INTO vt1 VALUES ('-322689062'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x'1880'), (0.013291353209960444), (x'cdb6'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (-3.22689062E8); -- 1ms;
INSERT OR IGNORE INTO t0(c87) VALUES (x'4f2fbf10'); -- 0ms;
UPDATE OR IGNORE t0 SET (c87)=(x'eaa2'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x'6ad11dc6'); -- 0ms;
INSERT OR REPLACE INTO t0(c0, c87) VALUES ('-1618088386', x''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 715157243); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0, c87) VALUES (NULL, 0.013291353209960444); -- 0ms;
VACUUM; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (''); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, tokenize=unicode61); -- 1ms;
INSERT OR FAIL INTO t0 VALUES ('m\', x''); -- 0ms;
PRAGMA busy_timeout = 0; -- 1ms;
CREATE INDEX i49 ON t0(c0 ASC,(~ (((c0)>>(c0)))) COLLATE NOCASE) WHERE (((- (c87))) NOTNULL); -- 0ms;
UPDATE vt1 SET c0=0.11464286713650595; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=('v)*', NULL); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')OR(NULL)))OR(x'4aefc2e1')))-(NULL)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-1347149242 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('M\' IN ('l뿗')))/(x'')); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN '' THEN '' ELSE '2124204896' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1618088386 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-616074145 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1810365377'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2124204896 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0Xffffffffeb47c70c AS TEXT) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1618088386 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('9![*R')%(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 sz=-616074145 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=1743331435'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 1881430926 sz=1826853741 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1184597992 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (987503180 IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '843900638 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE BINARY IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'7be69ad34a92'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1446445048 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_patch('843900638', '')) NOT BETWEEN ((NULL IN (0.0863134944883549))) AND (((('1376297622')) BETWEEN ((0.49815757369323954)) AND (('%[|wp'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1005727102 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0x21d61dff  WHEN 0.11996186371113571 COLLATE NOCASE THEN (((0.46253251820852515, '1376297622', -1.618088386E9))>=((NULL, x'', 0x5ef03d44))) ELSE ((x'13d9') NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))|(('-1618088386' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '692047488 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1271064787 sz=-937723275 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 sz=-1561960066 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2124204896 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-2083665630'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=317950927 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1743331435') NOT BETWEEN (0.5989888215076868) AND ('-322689062')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))<((NULL))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=198278869'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('f(*47(')OR('Y퇱')))OR(NULL))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '503333779 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')<(NULL)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.1371691519627648)||(((('3u+x'))>=((x'04d8'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-649740329 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.46253251820852515 COLLATE BINARY)LIKE(((('v)*', 0.7333863622554985, 0.2645290832481665))<=((x'', 0.3774634252022142, NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN (NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1362785786 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('[A') IS FALSE)  WHEN ((((0.5989888215076868)AND('w3')))OR(NULL)) THEN ((x'') NOT BETWEEN ('-528849116') AND (NULL)) ELSE ((-616074145) NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'0911') IS FALSE))<=(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN (((NOT (0x782514bf)))) AND (((('+~''ш嚮Ve6X') BETWEEN ('jk') AND (0.46253251820852515))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ ('QjbAL?[')))OR(HEX(DISTINCT '~y'''))))AND(('2015696063' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(DISTINCT NULL))IS((0.3054805667320466 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '317950927 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'68be')IS NOT('-1362785786'))  WHEN (('') NOTNULL) THEN ((((0.818156039197869)OR(NULL)))OR(-1.618088386E9)) ELSE LAST_INSERT_ROWID() END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.4183993950157039  WHEN NULL THEN -3.47617524E8 WHEN NULL THEN 0.8434808831523566 WHEN x'' THEN '~y''' ELSE -2006784361 END) BETWEEN (CASE NULL  WHEN 0.39079708309148253 THEN x'' ELSE NULL END) AND (CAST(-618345937 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('', '-1053150814', ''))>((0.49815757369323954, x'', -9.29958799E8)))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1531272670 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.48881032714074124)<=(0.9031921995027283)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1147892201'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=965875419 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(x'' AS INTEGER) THEN CASE WHEN 'G8RXꐁJx!(' THEN 0.12479982290927549 WHEN x'' THEN x'' WHEN '-321271917' THEN 0xffffffff971d76dd ELSE 0.4621398038367166 END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=96280345 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1664117962'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-487536308'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=503333779 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.9703511172384256)IS(0.819528163212141)) AS INTEGER); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-1598129095 sz=176331249'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-137841409 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1978056770 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=533662042 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=42455402'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1284379863 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN TYPEOF('') THEN (x'' IN (NULL)) WHEN 'L?' COLLATE NOCASE THEN ((0X37846701) IS TRUE) WHEN x'034e' COLLATE BINARY THEN CASE NULL  WHEN x'e5d2b6b3' THEN NULL ELSE NULL END ELSE CASE 0.7503413231396946  WHEN '-242880060' THEN NULL ELSE '1881430926' END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-961845743 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'7b70'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1864712624 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-928794023 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((NOT (NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ (0.6800290982088668))  WHEN CAST(x'' AS BLOB) THEN x'' WHEN (+ (')NSJaL')) THEN ((('')) NOT BETWEEN (('197710780')) AND ((x''))) WHEN ((NULL)|(0.8217272843122599)) THEN SQLITE_COMPILEOPTION_USED(0.8217272843122599) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-901279972'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NOT (x'')) THEN CASE 0X5e8f2bda  WHEN x'' THEN 0.9267407908019839 END ELSE LTRIM('198278869', '∀!') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('()')GLOB(0X70245b8e)))||(CAST(0.7041654640570045 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(LOWER(DISTINCT 'ᕩGmK')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(x'' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=317950927 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((('DL }+P_F')OR('U~')))OR('K{hN)')))OR('')))AND(NULL))))>(((((x'310a')) BETWEEN ((-290936214)) AND ((0.05897891537818578)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((205223739 COLLATE NOCASE) NOT BETWEEN (x'' COLLATE BINARY) AND (CASE WHEN x'93a2' THEN '1743331435' ELSE '-1983536127' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '1035245731 -929958799 sz=-2147170727'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ABS(CASE WHEN x'' THEN 0.9797138121218211 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1743331435 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=1260617128 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1434920134 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=1700126398 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (NULL)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1156593594 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE ' ^hJ0]扛B'  WHEN 1446445048 THEN NULL ELSE '' END THEN NULL COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=79451404 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=533662042 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1989800182'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (0.7155794923928521)) IN (((x'') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1251619067 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2072417564 1826853741 sz=1586441178 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.184597992E9)>=(NULL))) NOT BETWEEN (((((x'')AND(x'f4e3')))OR(0Xffffffff97de9a08))) AND ('1586441178' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-199265855'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-937723275'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=935796163 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2015696063 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=176166854'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((rtreenode('-870013627', '0.819528163212141'))AND(0.725213616330071 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1586441178 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8554338534669186; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL)) BETWEEN ((('\ng{6t gI?')<=(0.9703511172384256))) AND (((0.5529917138986316) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1496543905 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)==('r*qyP')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM((x'' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-937723275'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN NULL THEN x'' WHEN '-1181421415' THEN 'y퇱' WHEN 0.725213616330071 THEN '0.7052588143220985' ELSE '1664117962' END IN ((((NULL, x'', ''))>=((NULL, 'now', 0.7178514519573229))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=1851845923 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-355736097'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-476228699 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'6b77')AND(NULL)))AND(-198077560)))GLOB(CASE WHEN '[a' THEN NULL ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-321271917'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=853941504'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-2042650600 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=890354680'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-2003888395 1681058763 sz=676674047 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1881430926'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-158686094'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=839214244 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1181421415 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE 'LK{i'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.08808701971414401) IS TRUE) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1950835647' AS BLOB))LIKE(((0X324ce6de) NOT BETWEEN (8.43900638E8) AND ('nX%*o')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=377373648 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'd67d')IS NOT(x'')))==('tﰇ}(脘')); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 -739673858 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-870494711'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS REAL)  WHEN (((0.2707630391343352, x'', '176166854')) NOT BETWEEN ((x'', x'', '1922836095')) AND ((0Xffffffff971d76dd, '9![*R', NULL))) THEN CHANGES() WHEN (~ (0.14398857266975262)) THEN ((-1521277399) BETWEEN (x'') AND (0.05911658116935892)) WHEN x'59cb4fc2' COLLATE NOCASE THEN NULL COLLATE NOCASE WHEN (('&') NOT BETWEEN (x'') AND (NULL)) THEN ((0X3a3426d1) NOTNULL) WHEN ((((x'')OR(NULL)))AND('u\nc)Vᢽ')) THEN ((0xffffffffd2fd976a) BETWEEN (x'') AND (0.8459924290803164)) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1937662227 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=682510558 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-295077822 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-158686094 sz=-198077560'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((+ (-1618088386)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('jWF' AS NUMERIC))OR(LIKELY(DISTINCT 'axm}2E'))))AND(((NULL)>>(NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-1284379863 sz=1234026211 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2085262583 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LTRIM(x'', NULL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=2039142554 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '1050217842 512498209 sz=426637747 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1493507956 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-1362785786 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=815794288 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT '') COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(NULL AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((+ (NULL)))) AND (((('') BETWEEN (0.4585406503496905) AND (0X3511bbf8))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2102679214 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL))LIKE(((x'')GLOB(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'6029' COLLATE NOCASE AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-1450739463 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') NOT NULL)  WHEN ((x'0174') IS TRUE) THEN CAST(0.14466206145081195 AS BLOB) WHEN ((0.5519882665175695)&('駱3昑 }Op')) THEN ((('0.8459924290803164'))>=((-1102773176))) WHEN '' THEN '-2072417564' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1030727173 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('JE)DN8' COLLATE NOCASE)AND('%w0 mKIf1' COLLATE RTRIM)))AND('{H}k')))AND(((0.9442479876362712) IS TRUE))))AND((~ ('-636808495')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1022529835 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '72088506 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((987503180)>('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=178580933 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1700126398 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('d\') BETWEEN ('377373648') AND (x'')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((x'e737ee90', 0.8738367987013427, x'', -6.16074145E8, 891485270)) NOT BETWEEN ((NULL, 0.4469169492620787, NULL, NULL, 'IP/9X9EWn')) AND (('-321271917', '-+sxPN''', 0x5d788d6c, '935796163', 0.9618860368377877))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1753342225 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1181421415 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-890547210 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (ABS(0Xffffffffca7b95f5) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'e00f' IN ()))/('Te.(_s' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0Xffffffffc3d2cc0a))<=(('-1498749360')))  WHEN ((NULL) IS TRUE) THEN (+ (1.271064787E9)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1214519206)>(((1.851845923E9) BETWEEN (x'd9f5') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-81344588 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-618345937 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) NOT BETWEEN (((9.65875419E8) BETWEEN ('H''}PiKk⾷') AND (x''))) AND ((('205223739') NOT BETWEEN ('1035245731') AND (0X7d8f8d35)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-539456515 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(0.6272320813144009 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.641489424613424) IS TRUE) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 1200322855 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1393797454 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1434920134 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=748229993'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=261597937 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2128640144'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '2 -628253873'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-242880060 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X13254209, '1700126398', NULL, x'', NULL))=((0.4557829710836335, '-1181421415', 0X63306cca, 0xfffffffff9d9ffe4, x''))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-242880060')AND(NULL)))OR(0xffffffff89c5a401)))AND('676674047')))AND(1706274981))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('8' IN ()))OR(CAST(0.4961259587106627 AS BLOB))))AND('hi(B')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2006784361 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0.819528163212141)) BETWEEN (('-928794023')) AND ((x'')))  WHEN (~ ('')) THEN ((0.24376691989584653)OR(0.07460322589769752)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1859333692 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-534958635 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')+('-961845743')))>((('0.9703511172384256')%(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=435520972 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0x24a4a234)>('709010019')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=205223739 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1470275079 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1949688359 sz=1166024476'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(0.6431829341153248 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=503333779 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=1489969052 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1262878547 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1284379863 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1718691719 sz=987503180 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1817419173 sz=502672446 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-739673858 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1674729360 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '935796163'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1181421415 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1102773176'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-355736097 0 sz=-537423795 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=-1704363575'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=1667564045'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=721754943 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=1820753486 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=205223739 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'6b4f44852083'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=222324836 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=597708129'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1521470955'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-1495310276 sz=2124204896 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=1294561854 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=425875981 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT (NOT (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.467597827576435 COLLATE RTRIM)<>('-347617524')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1817419173 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1237405676'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1251967462 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('533662042')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('0.36338979762477297' COLLATE RTRIM)OR(((x'') BETWEEN (0.1999736922446088) AND (0.8218582351054322)))))AND(((x'e6f2')OR(0.5956895060040209)))))OR(('' IN ()))))OR(CAST('0.9031921995027283' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN -1.99265855E8 THEN NULL WHEN 1810365377 THEN NULL WHEN '-802389995' THEN x'' ELSE NULL END THEN CASE WHEN 'Y[' THEN -655726273 WHEN '197357013' THEN NULL WHEN '-605029369' THEN x'6cb2' END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL))>=(('hx')))))=((NULL COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=774232794 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.7266449758536135) BETWEEN (x'60bf') AND ('-1251619067')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-64846828'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('axBA(PLOg')>>(CASE -6.16074145E8  WHEN x'' THEN 0.47500481890334145 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1051741433 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=304440730 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-2072417564 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-1181421415 -1812513733 sz=-1156593594 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1598129095')<>('*냶')))AND((+ (0Xffffffff9a880e97)))))AND(((x'7d8b')+(0.4708488058511511)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1618088386 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(DISTINCT '-2006784361'))=(CAST(-1191864977 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1950835647 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1109591176'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1702192855 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-2134667844 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1999534038'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-794874327'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-214049956 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('쥌W')AND(NULL)))OR('E{''ꀘI穵-/Y')))&(((-1.99265855E8) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((~ ('853941504')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<>(((NULL)>=(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1598129095 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (0.21570905765998205) AND (NULL)))GLOB(((x'') BETWEEN ('u\nc)Vᢽ') AND (0.17599663354077533)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-440231363'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1851845923 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffff83cc8403)) NOT BETWEEN (((890354680 IN ('-1711458681')))) AND (((((NULL, x'', 0xfffffffff5c58045)) BETWEEN ((0xffffffffaec58a06, x'', -2.4288006E8)) AND ((-2.006784361E9, x'', NULL)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1376297622'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE 0.467597827576435  WHEN NULL THEN '-2036757632' WHEN 0.19552862712746621 THEN 1.376297622E9 WHEN 'J g' THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '1829003275 sz=-1647599570 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'44f2') NOT BETWEEN ((('NY燁pco') NOT BETWEEN ('ML\r#U') AND (0X5de5ff7c))) AND (((((((((((((((((NULL)OR('-572072276')))OR('0.12479982290927549')))AND('1267933050')))AND(NULL)))AND(NULL)))AND('')))OR(NULL)))OR(0X2d32abbf)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2072417564 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '1709644168 -1667284712'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1531272670 sz=-758367985 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((CAST('砖A5kWF&' AS INTEGER))OR((+ (0xffffffffffffffff)))))AND(((-4.76228699E8)>(NULL)))))AND(((((-1.347149242E9)AND(x'')))AND(692047488)))))AND(((0Xffffffffb5472b11)&(0xffffffffe07a6724)))))OR((('/')<(NULL)))))AND(((1620020382)<=(0.31819163374343373)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-1598129095 sz=1831646500'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0')) NOT BETWEEN ((((0Xffffffffbb47f51a) ISNULL))) AND ((((x'')>=(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '935796163 -248701282 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=2102679214 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<(0.3181208814646874))) BETWEEN (((839214244) IS TRUE)) AND (CASE x''  WHEN '痍y~-' THEN 0.7354760766812435 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1866884935 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('428937047') NOT BETWEEN ('1260617128') AND (x''))))!=((((('')) BETWEEN ((x'')) AND (('L%穀')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1748581121 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1496543905 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')==(987503180))) BETWEEN ((((NULL)) BETWEEN (('p.䏐hT?')) AND (('1851845923')))) AND (0.5989888215076868)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((0)GLOB(x'')), (+ ('-1531272670'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE INSTR(((('sf'))!=((NULL))), CASE x'12a89ab3'  WHEN x'' THEN x'' ELSE 0Xfffffffff185f1c4 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '317950927 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1817419173'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1035245731 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-179761710'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '410584033 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('368382558')AND(1978056770)))OR(0x1126d61)))OR(x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((((('-1748052454')OR(NULL)))AND(0.4629714045885899))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1333947619 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(CAST(x'35a9' AS NUMERIC), (('-799100813')<(NULL))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((~ (x'b5cd908d')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x''))>=((NULL)))  WHEN (((x'', x'12e1', '317950927'))<>((0.5090141424744732, x'', NULL))) THEN UNLIKELY(DISTINCT 0.4063830813617272) ELSE CAST(x'' AS NUMERIC) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1297950255', NULL, 0.1840864270060748)) BETWEEN ((((((NULL)AND('2035998939')))OR(0X1ec9eea6)), ((((0.32728770858406797)OR(NULL)))AND(NULL)), ('' IN ('wR')))) AND (((0.3511966807901804 IN ()), ABS(-1.618088386E9), ((NULL)<=(x'227a'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 2057767564 sz=-1561960066 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9267407908019839) BETWEEN ('D5') AND (x'32795310')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0x6f2541b0)OR(0.7056326763801066)))AND(NULL)))OR(NULL)))AND(x'')))AND(((60890819)IS(NULL)))))AND(CASE x''  WHEN 0xffffffffab851b4b THEN 0.8434808831523566 ELSE 0x7e339d25 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1891498561)AND(0.4859207741873115)))OR('-1282143737')))LIKE((x'1a84c1b7' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((((((('-937723275')AND('1279917678')))OR(-2037584748)))OR('110891828')))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1362785786 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 sz=-1684433278 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.3181208814646874 AS BLOB) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-406752417 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN 'mN__' END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.7479477729073223)OR(NULL)))OR(NULL)))OR('')))OR(x'dbe2'))) NOT BETWEEN (((NULL) NOT BETWEEN (-290936214) AND ('392041857'))) AND (CASE WHEN x'e543' THEN x'4751' WHEN 'n' THEN '&割' WHEN NULL THEN '' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN (0X3f15426e)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=859899787 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('z\HU')*('')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=205223739 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-129370014 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'cedb')) BETWEEN ((CAST(x'' AS TEXT))) AND (('\ri'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '397820664 149715678 sz=-2042650600 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT (~ (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1260617128 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-281684860'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')||(0.9458210114905722)))OR((- (NULL)))))AND((('-1450026738')*('-260464014')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('' IN ('D5')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1110468276 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '658300680 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1705249116 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '1700126398' THEN x'' WHEN x'' THEN '598614670' WHEN 0Xffffffffcab22537 THEN x'' ELSE NULL END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.24376691989584653)) BETWEEN (('-2083665630')) AND (('0.8218582351054322')))))>=((LIKELIHOOD(x'', 0.8776810132201105)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-980935493 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=907887803 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')) NOT BETWEEN ((96280345)) AND ((x'2a3d'))))<(CAST('1368192262' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-455871102'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1784319788 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1251009814))>=((NULL)))))>=(('Te' COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=503333779 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '2 sz=1144295591 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=931424001'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('0.8434808831523566'))==((1826853741)))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '4 sz=560936403'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '2 sz=885764108'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-929958799 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=79451404 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-566386782'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('Wl蠳Z') IS TRUE) THEN CASE WHEN 0.020986030000388456 THEN '' ELSE '' END ELSE (~ (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('\!') NOT BETWEEN (0.7544592178613365) AND ('^ꃷb䎓⯚TN')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((9.31424001E8)IS NOT(''))) BETWEEN (('-870013627' IN ())) AND ((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2028735290 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<>(CASE ''  WHEN '~y' THEN '1743331435' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2147170727 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))==((0X2c991569)))) BETWEEN (((NULL)>=(0.3622120645099616))) AND (((0.535143336405373) NOT BETWEEN (0X7430b406) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-2072417564 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1387100827 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1862015881 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'' IN ()))OR(CAST(NULL AS REAL))))AND(((x'')%(x'6552')))))OR((('748229993') IS FALSE))))AND((~ (x'7720')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-274567849 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 -2147170727 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1618343754 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (NULL) AND ('1780882870')))IS NOT(CASE 'wkꈢ뤞'  WHEN '931424001' THEN NULL WHEN '' THEN NULL WHEN 'd' THEN NULL ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS INTEGER) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(x'bfc1' AS TEXT))OR(x'' COLLATE RTRIM)))OR(CAST('205223739' AS BLOB))))OR(((-9.01279972E8) IS TRUE))))OR(json_extract('-944687056', NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1808099040 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-649740329'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=-290936214'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '1 sz=-937723275 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-732425601 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=687704507 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-947533958 1980732048 sz=-1251619067 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1520857555 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-518216589 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'87b2')||(NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-291788655'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1558418946'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')*(0.19102603364328608)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (((0Xffffffffb27f886f)LIKE('h'))) AND (CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-128069135 sz=-307874700 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-137841409 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-385808380 sz=-1053150814 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0xffffffff863fa018 AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1206855535 -1552333780 sz=-1747019256 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '569525392 sz=839214244 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 205223739 sz=1271064787'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=965875419 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1151566334 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '4 2 sz=-1198111636 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '176166854 0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.4039531209330516; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.8682794713750451)IS NOT('%[|wp')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN json_type('567680511') THEN ((NULL)>=(853941504)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '676674047 sz=-1184597992 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1598129095 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-1145755758 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.00918448051281695)!=(NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))>=((x'')))) BETWEEN ((('hi(B')||(-1690802352))) AND (CASE WHEN x'218c' THEN x'd51d' WHEN 0.7225597480109202 THEN 'Y䝻禤hN' WHEN x'' THEN 1.147892201E9 ELSE '9<' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-137841409 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1995924332 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT (NULL IN ()), 0.18290627273240878); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-1295122496 sz=437258984 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 sz=-2030239467 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-217738884 sz=-321271917 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.44641598379122693) IS FALSE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=3453996 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-937723275 sz=931424001 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('')OR('946312512')))OR(((x'e0b4') IS FALSE))))OR((0.5213371445489805 IN ()))))AND((('-841323207') BETWEEN (NULL) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1035245731'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=688948959 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-295823175 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=317950927 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 503333779 THEN NULL WHEN '1851845923' THEN NULL WHEN '987503180' THEN 9.8750318E8 END)<('1863084403')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (0.4039531209330516 IN ('	䏐Hb>y'))  WHEN SUBSTR(x'', x'9e1a') THEN ((x'9707') NOTNULL) WHEN (~ (x'61fe')) THEN (('1681058763') BETWEEN ('9<') AND ('')) WHEN (((NULL)) BETWEEN ((0.8807125102727974)) AND (('Te.(5s'))) THEN ((0.7838997943617761)-(NULL)) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-649740329 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) NOT NULL))AND(CAST(0.641489424613424 AS NUMERIC))))OR(((('|GV>T'))>=((x'0657'))))))OR(CASE x'5225'  WHEN 0.04649808332780159 THEN 0.8738367987013427 ELSE NULL END)))OR(((((x'')OR('-605029369')))OR('1978056770')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF((((0.4858235752443947))>(('-1156593594')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER((0xffffffffcc24a545 IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.4976557891887602)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1598517479 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((('vQ_%jQ')OR(x'3d94')))OR(-1538123458)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1334148102)) BETWEEN (('*F' COLLATE RTRIM)) AND (((((x'')) NOT BETWEEN (('qq節7')) AND ((1.864712624E9)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=592577798 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '1235678637 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '987503180 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 sz=-2147170727'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((-0.0) NOT BETWEEN (-441362212) AND (NULL)) THEN MAX(0.12544849760479815, '-937146147') END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-1742438271 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.1544212607263361))=((NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=-631406077 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (HEX(DISTINCT 'X') IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-842035431 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '1967845050 1376297622 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE ''  WHEN NULL THEN 'W*8 ' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(x'')))OR(0.8682794713750451)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.048320917561462284)AND(x'')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1380970940 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(DISTINCT -3.21271917E8)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((-2.90936214E8)*('''\n*(F?')), ('-2003888395' IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=-433124966'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOT NULL))AND((((('D')OR(NULL)))OR(NULL)))))OR((x'1bdca05a' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2 0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-160679894 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1130170556 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0Xffffffffd0e5cd06)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)OR(0.38518470539952343)))OR(NULL))))!=((TRIM('', x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '2 -461424145 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-13181042 1592802628 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('-1770240699', x'', 'RT'))>=((x'', x'8e2c', NULL))) THEN (('*v*WK') BETWEEN (NULL) AND ('-739673858')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1287863746 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1810365377 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=965875419 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1053150814 sz=1 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-210778028 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((x'')IS(0.17599663354077533)), ((((-870013627)OR('FALSE')))AND(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=692047488 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1439023713 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'f038')>=('ng]f7H%'))))>((TRIM(0.6408787558660718)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0.3301680733072704))>(('utc'))) THEN ((0.6272320813144009) ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0x6f2541b0 COLLATE NOCASE)AND((('692047488')GLOB('{(.+MGg')))))AND((((NULL))>=((NULL))))))OR(((x'') NOT BETWEEN (x'') AND (NULL)))))OR(((0.7206025652636401)=('-1454065014')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-433169975 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-290936214 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE))IS NOT(((0.11385567267109231) BETWEEN (x'') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.156593594E9)=(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1747391682 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=189817992 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1950835647'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-1642610106 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1521986027 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1117288920 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS TEXT))-(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '562503810 sz=1695501488 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)>>(-39557200)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('盝7(a*lXl!') IS TRUE)) BETWEEN (((NULL) NOT BETWEEN ('-1184540253') AND (NULL))) AND (CAST('' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2 281622704 0 sz=-1323342731 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT CASE x''  WHEN x'' THEN 0.6929599689667153 END); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1682626801 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 sz=662434514 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS TEXT) COLLATE BINARY COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('-1618088386') AND (-1287111398)))AND((('')<('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1260617128 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))|(CAST(x'' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TOTAL_CHANGES() AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-869477010 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-267710857 0 sz=1950835647'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-840872436 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1815840326 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=688468908 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-322689062 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1057136033 sz=-2037344593'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 2112859677'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT ((0.8255036698160937) NOT NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=497208115'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-618345937'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') BETWEEN ('-1502637749') AND ('Py')))OR(LIKELY(0.20649974791101422))))OR((((('/')AND(0X5102baf2)))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1 sz=-1047125504 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1888789307 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '225282117 1005727102 0 sz=-210566544'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1618088386 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=296963581 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.14398857266975262 AS INTEGER) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '301608689 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '2 2 sz=1921648251 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT ((x'')/(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-605029369 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1618088386 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((highlight(0.9601886091778481, '118092603', NULL, 1838257311)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2147170727'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-1815296611 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'd\'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1268106711 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-321271917 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=819106111'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1035245731 sz=79343082 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 6ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0xffffffffc13a31a2)AND(-937723275)))AND('-526040275')))OR(NULL)))OR(NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN json_array(-646279997, '-137841409') THEN x'' COLLATE BINARY END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((NULL)OR(0.48881032714074124)))AND('0.4961259587106627'))  WHEN '()' THEN '205223739' ELSE TRIM('-77993387', x'') END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '523196923 sz=1921638729 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (0.9933234036626787 IN ()) THEN CASE WHEN 0X5e2bd4a8 THEN NULL END ELSE LIKELIHOOD(0.3776070311228076, 0.027251410399441456) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.4961259587106627' COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (json_extract(NULL, '') IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(NULL)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=2144542613'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '1055125102 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1344473726 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'')AND(x'')))AND(0.9196920997722803)))AND(0X6e1a9bae)))AND(0Xffffffffeacbe5df)) IN (((((((((NULL)OR(x'')))AND(0.7640833533558368)))AND(0.5588237892237474)))OR('-961845743')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-725417191 sz=-618345937 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('8!J瑟LiW')<=(0.780630340511894)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '176331249'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-2086888324 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-128069135')) NOT BETWEEN ((NULL COLLATE BINARY)) AND ((0.12544849760479815))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((NULL)OR('-1')))OR('k,Z{')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-1593566790 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'')AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '197710780 sz=-1218991498 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1251619067'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-9.61845743E8 AS TEXT))LIKE('-347617524' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.23671105160193873 THEN NULL WHEN NULL THEN '*F' WHEN 0xffffffffdb24ca2f THEN '843383551' WHEN 0.2260718048928132 THEN '-1177963473' WHEN '' THEN -2.072417564E9 ELSE NULL END)=(-2140278331)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '567680511 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, x'', 0x285539ff)) NOT BETWEEN (('-322689062', '2YVbi4<H5', 0.46613381586660796)) AND ((0.7541083549630608, '134543252', '-1080524520')))) BETWEEN ((~ ('TRUE'))) AND (((((NULL)OR(NULL)))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-2003888395 sz=1917396028 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN NULL THEN NULL END)AND(0.11464286713650595)))OR('2102679214' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL)<=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT '436322753', '935796163') COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-507665929' IN (NULL, NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.7155794923928521 AS BLOB)) BETWEEN (((-2.006784361E9) NOTNULL)) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1624802414 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(NULL AS TEXT) THEN CAST(-2.0426506E9 AS BLOB) ELSE (NOT (0.9912442713534848)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-581345809 351438342 sz=1851845923'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-1429556997'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1759676707 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '2 sz=1190910911'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
UPDATE t0 SET c0=NULL WHERE (((((t0.c87))<((t0.c0))))*((((t0.c87)) NOT BETWEEN ((t0.c0)) AND ((t0.c87))))); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.8727348421763664; -- 0ms;
UPDATE vt0 SET c0=1005727102, c0='176331249' WHERE '-929958799'; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(((x'')LIKE(',,G')), (NULL IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)!=((1.97805677E9 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-928794023 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-422670233 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1586441178 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((- (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('>tDC')))-(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '1376297622 sz=-164299812 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((((((0x766c510)AND('-1267833451')))AND(NULL)))OR(0.36698296719414203)))AND('')) THEN CASE 1.446445048E9  WHEN x'' THEN '' WHEN 0xffffffffbc5c797c THEN NULL WHEN NULL THEN x'77b0' ELSE x'' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE BINARY THEN ((x'8a12')>>(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') BETWEEN (0Xffffffff83cdc922) AND ('-1466063023')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-891265733 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1284379863 sz=567750789'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-528849116'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1446445048 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=174226063 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '30298458 sz=377373648 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (-1369737707 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- ('w3')))AND((('Wb') BETWEEN ('1') AND ('x#vL<Gk^P')))))AND((- (x'ebc3')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 sz=-1781578258 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1182661604)|(0.21406520954842256)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '1586441178 -1 sz=1152668519 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0X1ac408c4) IS TRUE)  WHEN (+ (0.4001612002153031)) THEN ((('188442575', '\nB', ''))<=((NULL, 'X', '168216748'))) WHEN ((x'4038')OR(0x61864ab3)) THEN CASE NULL  WHEN NULL THEN 0x1e42eef7 WHEN NULL THEN x'' WHEN 0.5147232971289893 THEN x'c05a' WHEN '' THEN 0.4584120993735198 WHEN '3)aP' THEN '0.0' END WHEN (((NULL)) BETWEEN (('205223739')) AND ((x''))) THEN ((x'234506d4')||('198278869')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '816077652 sz=-1618088386 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(((x'')IS NOT('ꜭA2r')), 0.8571782320673436); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '756612238 sz=52387780 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '1825817653 sz=-1093426401'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.38971854045058274) NOT NULL))AND(CAST('' AS NUMERIC))))AND(-293433500)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=1079184300 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1700126398 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('')GLOB(1537823724))  WHEN ((('377373648')) BETWEEN ((-1.983536127E9)) AND ((x''))) THEN (('AXBA(PLOG')*('Lj얁5>뼜M^#')) ELSE CASE WHEN 0.48431871541580707 THEN '' ELSE NULL END END; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '377373648 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-322689062 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json(((((NULL)OR(0X33cadf5a)))AND(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 -489167743 sz=567680511'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 2 sz=-2142145202 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=1950216656'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('1978056770')) NOT BETWEEN ((x'')) AND (('0.819528163212141'))) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(CASE x'6730'  WHEN NULL THEN -2.0426506E9 WHEN 0.2768957652849491 THEN x'' WHEN '' THEN 96280345 END, (('1003793280') IS FALSE), (NULL IN ()), (((0.7333863622554985, 0Xeed1045, 0.5031817715581388, x'da79', 0.39079708309148253)) NOT BETWEEN ((NULL, '0', x'', x'', '0.535143336405373')) AND (('', '1810365377', '-937723275', '935796163', '-937723275'))), (NOT (0.9703511172384256))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(LIKE(x'', NULL), 0.4802894459890603); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS NOT(-1434920134))) BETWEEN (CAST('1864712624' AS TEXT)) AND ((('nx%*o')%(0.19251661092223438)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-1598129095 sz=1369681132 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '2 sz=104080243 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-2008288626 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-30532254 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '317950927 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT ('[1jM	' IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-669527403) BETWEEN (x'') AND ('-605029369')))IS(HEX(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1949475043'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7471043194402848)|(0.6822284647695963)), (~ ('d\')), LOWER(0.9071049955065649), '-2003425956', 0.4961259587106627 COLLATE NOCASE))>((((NULL)<('荦%JJ2%bz')), '-1983536127', ((NULL)<=(NULL)), (NULL IN ()), (- ('1352676657'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) BETWEEN (x'') AND (0.23016830762531004)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')IS(0.22671984448440863))) BETWEEN ((((x''))!=((NULL)))) AND ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1561960066 sz=-1675920725'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE 0xffffffffb9647818  WHEN '<]' THEN '1810365377' WHEN 0.6514984951649303 THEN 'axBA(PLOg' WHEN 'Sa<' THEN '-134885849' ELSE 0.10828233203203941 END  WHEN ((((0.07441729777448358)AND(0.5608715040377189)))OR('w|H|jRLdP')) THEN CASE x''  WHEN NULL THEN '1743331435' ELSE NULL END WHEN ((x'ffaf') BETWEEN ('-2006784361') AND (-1.759676707E9)) THEN (- (0X67e9206b)) WHEN ((-6.18345937E8) NOT BETWEEN ('-2017018244') AND (NULL)) THEN ((((1.76166854E8)OR(x'')))OR(0Xffffffffe1f2eda4)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.520845364887329) ISNULL))>(((('-321271917'))>(('-53545929'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-669951752'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOT BETWEEN (x'd8cf') AND (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(-1983536127 AS TEXT)  WHEN ((0.9060393638929273)LIKE(9.31424001E8)) THEN 0.4545139994898659 ELSE ((0.814382293717311) NOTNULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0Xffffffffd6824fab  WHEN 0.2502750813731853 THEN NULL ELSE '' END) NOT BETWEEN (CAST(NULL AS BLOB)) AND (UNLIKELY('-729326717'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=197710780 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'2047')+(0xffffffffa354449e))) NOT BETWEEN (CASE WHEN '\K' THEN NULL END) AND (((-1.99265855E8)+(0.3849424408276052)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1907385343 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=506323965 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1743331435 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '2 -137841409 sz=-1618088386 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(((-1510648980)IS(0Xffffffffd945bfd7))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-1165946857 -1426970588 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1123738200 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1368970679'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-48831372 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-746160814 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('h᷃')AND(((x'')>=(0.5974549496590863)))))OR((- (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1563212656 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1561960066 sz=1005727102 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1340214435 sz=-1827703936 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE)) NOT BETWEEN (((x'68f2')>>(0.05244854060859916))) AND (('|_QO3sd' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-739162722)) BETWEEN ((MAX('-368551257', 0X6e739c30, x'7d22', 0.5294841071330114))) AND ((CASE WHEN x'' THEN 0Xffffffff888f16f5 ELSE '!' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT))<(('' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-880506444 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)&(1.76166854E8)))<>((('XE')>('1376297622')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((NULL IN ()), (('42455402')!=(0.5341809975483887))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '377373648'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2125404419'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-901279972'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1515403704 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1059845600 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '987503180 sz=-373207394 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-321271917' IN ())) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=7897576 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((((((('-487536308')OR('')))OR(x'ff01')))AND(NULL)))AND(x'')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1919749855 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER((~ ('{_fN1l'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-263949859'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8815248488854593; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')-(x''))) NOT BETWEEN (CASE WHEN 0X3789c80f THEN NULL ELSE '197710780' END) AND (((NULL)<('377373648')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('+SJl')/(((NULL) NOT BETWEEN (x'7fb262ea') AND ('z翀')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1074050832 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-887716461 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '2 0 sz=1902273497'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.8383058536275152)OR(317950927)))OR('rUF<綨x眻W-')))<((((NULL))=((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.04649808332780159') IS TRUE)) NOT BETWEEN (((NULL)AND(NULL))) AND (x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=723656902 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('317950927' AS REAL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=853941504'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1637771707 sz=-44243099 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4760599963922154) NOT BETWEEN (x'359a') AND (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('1260415545')<<(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1636859972 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=1549975213 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1187456501 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '9223372036854775807 4 sz=1114008812 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1522093044 sz=1184258582 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-355736097 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1505266912 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1347149242 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1475860274 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0Xffffffffb371eb29 COLLATE NOCASE)OR(((x'228f')>(-1e500)))))AND(((x'') BETWEEN (x'') AND (NULL)))))AND(((x'') BETWEEN (0.03451292375859594) AND (NULL)))))AND(0.6295416974602814)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1165987784'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '748229993 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1134270443'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN -1.759676707E9 THEN '' ELSE x'' END) BETWEEN (((NULL) IS TRUE)) AND (CAST(0.10449085685709436 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS NUMERIC) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1163919121 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-616456399 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.01278760913142285)GLOB(-961845743)))>(CAST(-937723275 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('' IN ())  WHEN (('lg')>>('As녜}')) THEN CHAR(987503180) WHEN ((-0.0)-(0.8807125102727974)) THEN (('.MY3P￿RK宎') NOT NULL) WHEN (('')=(x'')) THEN CASE 'W6GH?7'  WHEN x'' THEN NULL WHEN '-649740329' THEN x'' WHEN x'' THEN x'' WHEN x'ef9a' THEN '盝7(a*lXl!' WHEN NULL THEN NULL ELSE NULL END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.3054805667320466)OR(NULL)))OR(0.3506854842636067)))AND(NULL COLLATE BINARY)))AND((('0.8434808831523566') BETWEEN (0xffffffffc4cc128e) AND (0X7de12053)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=314505551 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('0.7333863622554985') AND (0.3460789504262993)))<('')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-2042650600 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-89577442'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0xffffffffe39d53a5)OR(0X5e0056fe)))AND(NULL)))AND(-1747019256)))OR(-1.37841409E8))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((x'')OR(NULL)))AND('-487536308')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 340719585 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-605029369'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS BLOB) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.6289313758073135)))/(DATETIME('', x'', NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'' COLLATE RTRIM  WHEN ((((x'')AND(0.14461668367668012)))AND(-761915858)) THEN x'' WHEN -1543793521 THEN ((-1.347149242E9)<<(0.8194487470577073)) WHEN CASE 'P6!᷃[6aK'  WHEN 0.47845013751157284 THEN NULL END THEN (- ('')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1165106641 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN x'' COLLATE BINARY ELSE (NOT (0X2971aca6)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('H	zS5')OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER))!=(((NULL)>=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '4 0 0 sz=-616074145 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ ('-419387382')) THEN (('0.39079708309148253') ISNULL) WHEN '-1362427464' COLLATE NOCASE THEN ((NULL)%(0.7333863622554985)) WHEN (((717635912))>=(('DaZ'))) THEN ((x'2abb')<<(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1909645203 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('898272861')AND(-1.7976931348623157E308)))OR(0.818156039197869)))AND('H''}PiKk⾷')))AND('BE'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1435490427 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-905814385 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '1069790964 sz=-841533992 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1306131238 sz=776416467 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'fF' THEN ((-2061849450) ISNULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1598129095 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (0.7401357847851986)) IN ((((0.8449142793425367)) BETWEEN ((-505318472)) AND (('-487536308'))), CAST(x'' AS INTEGER))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-2003227807 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=705690197 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-487536308 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1432667895 sz=2014283998 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=931424001 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1592802628 sz=-961845743 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 -866783615 sz=2116998039'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1184597992'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-754303468 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'0dd6')>(x'')))OR(((NULL) BETWEEN (0.9797138121218211) AND (NULL)))))OR((('~') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2095625319 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1296244472 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2008365368 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(0.4060262542517912 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1759676707 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=96704785 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-649740329 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.4557829710836335)<<('-29896665')))AND(CAST('' AS INTEGER))))OR(((x'da07') IS TRUE))))OR((((0.9294692189754002)) NOT BETWEEN (('z')) AND ((0.46969712717707623))))))OR(x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1005727102 COLLATE BINARY) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.14101653077564902)AND(0.7503413231396946)))AND('')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1810365377 sz=2095360587'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'724e'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((-1723088725))<((NULL))) THEN ((x'') NOT BETWEEN (x'a06f') AND (0.2940997133700408)) WHEN '駱3昑 nOp' COLLATE BINARY THEN NULL WHEN ((0.4734667697667384)<=(NULL)) THEN (~ ('71xI')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 -1747019256 sz=-1956154290'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-81170125 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF('1295739189' COLLATE RTRIM, '1 ' COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((+ (x'fba5')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))>(((176331249)&(0.294639867956627)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=204871988 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=890354680 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'fe33' AS TEXT) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1322219304' AS INTEGER))+(((-1363645963)GLOB(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' COLLATE NOCASE AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-350800561')) BETWEEN ((CAST(NULL AS NUMERIC))) AND (((+ (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')OR(x'')))OR((~ (x'49f29883')))))AND(CASE WHEN x'' THEN '' END)))AND(((0.6706607694383907) BETWEEN (0.019347262192070724) AND (0.1883622453365229)))))OR(x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=828483956 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=1950835647 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((('') IS TRUE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')&(839214244)))!=(((NULL)AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '79451404'  WHEN ((((((((1.700126398E9)AND(0.9589756002038845)))OR('yB')))OR(9.31424001E8)))AND('-870013627')) THEN ((-1.181421415E9) IS FALSE) ELSE (+ (562516573)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6408035145702153; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2084749020 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('(agyCᒿ8') NOTNULL)  WHEN UNLIKELY(NULL) THEN ((((0.4245414665700794)AND(')g澪^UW')))OR('1738717096')) ELSE (+ ('Hk5tW-g')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=176166854'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=-1067397190 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1770578328'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('0.38518470539952343', NULL, x''))<((0Xc3b773b, NULL, '1586441178'))))>(json_array_length('', x'42e9'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) IS TRUE) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-821952358 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.8654875381777275 THEN 9.6280345E7 WHEN 6.92047488E8 THEN '-378250514' WHEN x'ead0' THEN '-618345937' END) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT (x'4024'))))>=(((((('N_.''|	')OR('-1235549451')))AND(0.4957190994903099))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=2077149656 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (UNLIKELY(DISTINCT 'j8,') IN (LIKELY(DISTINCT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 474343627 sz=-1156593594 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '1271064787 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1376297622'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1919984955 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5669468624120291)&(((((0.6947696386240515)OR(NULL)))AND('~y')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN 0.5651653013907286 THEN 0.43430027670052584 ELSE 0.6033408771905652 END THEN ((NULL)+(x'')) WHEN ((('197710780'))<=(('931424001'))) THEN 0.31819163374343373 WHEN x'3c17' THEN ('-972832491' IN (x'')) ELSE ((x'')IS(0.10214986334552234)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-935749097 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-366518675 sz=-176383823 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY) NOT BETWEEN (NULL) AND ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-347617524 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-800922651 sz=2051301405 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x''  WHEN 0.32983245195375344 THEN NULL WHEN '-1037678066' THEN '-1651617282' WHEN '1851845923' THEN 0.0023298339063995144 ELSE '' END IN (('' IN (0xffffffffb371eb29)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0xffffffffc8181975))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-198077560 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-1913683775 0 sz=-897567467 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '170059486 sz=-1156593594 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '198278869 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-614778039'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.25754302294707254)) BETWEEN ((0xffffffffb75e7dd1)) AND (('')))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1586061176')IS(-1382376248)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=317950927'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '4 sz=-1631728017 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-540796890'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOTNULL) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=958656214'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('-1759676707')))>(CAST('-159802921' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '567680511 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=314260931 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-2006784361')OR(''))) BETWEEN (x'') AND ('-616074145')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1914527984 sz=-50482883 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((2.015696063E9))<=((0.8007129219568777)))) BETWEEN (((x'')IS('ToT~ei3'))) AND (((((0.6482981009458432)OR(0.5937427412663028)))OR(-1420107784)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(x'' AS NUMERIC)))<=((CAST('0.32728770858406797' AS TEXT)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(NULLIF(NULL, x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1113831585'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1218715294 -853686655 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0x21d61dff THEN CASE WHEN NULL THEN x'' ELSE '1271064787' END ELSE ((x'') NOT BETWEEN (x'') AND (' ')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1871971173'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1975758258 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1160376512 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-937723275 sz=413758116'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=217803976 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(DISTINCT x''))&(TYPEOF(DISTINCT '-1378328060'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('-1045423311')>(-1.817419173E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1872654683 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-1697852757 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-262870069 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-487536308'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 32362046 COLLATE BINARY  WHEN (((0.19029413294562947)) BETWEEN ((x'2011')) AND (('-210904554'))) THEN COALESCE(DISTINCT 0.9622469958730371, NULL) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'9e5f')<=('377373648'))) BETWEEN ((((0.14237969095515723, 0.7094950821879966, 'tﰇ}(脘'))<=((0xffffffffafb42246, x'', '156563610')))) AND (((NULL) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN ('-1531272670') AND ('205223739'))) BETWEEN ((NULL IN (x''))) AND (((((NULL)AND(x'')))AND(0X1)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-476228699 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN (((('')) BETWEEN ((0.6518752613523647)) AND ((x'')))) AND (CASE WHEN '0.7052588143220985' THEN NULL ELSE NULL END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 2017782815 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('', NULL, x'')) NOT BETWEEN ((' ^HJ0]扛B', 0.2601379724866999, 0.00918448051281695)) AND ((0.7512679901535229, NULL, '')))) BETWEEN (x'4af3302b' COLLATE RTRIM) AND ((('-1347149242')<('-1817419173')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1618088386 0 sz=-2056022765 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=2130682944 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1950835647 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '&' THEN ']&' ELSE NULL END)/(((NULL)>>(0.0)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '1743331435 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT CAST('1711997987' AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.6240673122388067)) BETWEEN ((0.28264104538404833)) AND ((0.9025593617764994))))IS NOT(CASE WHEN 0.7092609981422787 THEN 0.6370975213834109 ELSE -2.08366563E9 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('''p켅JA*H냇'))>=(('-781913272'))) THEN ((-1347149242)<=('')) WHEN 0.47500481890334145 COLLATE BINARY THEN 0.7516309422263312 WHEN ((x'')LIKE(905328205)) THEN x'f81b' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1810365377 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2274349 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'f2f6' COLLATE NOCASE AS INTEGER); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-130015193 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1487080311 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8763511901186939) NOT BETWEEN (1.005727102E9) AND (x''))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-937723275 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-922799085 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Y(', x'', '痍y~-')) BETWEEN ((NULL, 0.3303897472279006, NULL)) AND ((x'', x'', '1174152507'))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-568097498 sz=1686153642 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1644103678 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')LIKE('v)*')))<=((NULL IN ('WG+R1T|*R')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '1722467725 sz=79451404 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-154958796' IN ())))>(((((('痍y~-')OR(x'e891')))AND('pP'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1803733619 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(-1384464804))LIKE(LOWER(DISTINCT x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1785698581 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (NULL)) IN (x'c7b3' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-389682419'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '1752402792'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(NULL AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.2827953544616365) NOTNULL) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1743331435'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1406436403 4'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('_now1gLd' AS NUMERIC)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1080524520 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5666426242266456 AS NUMERIC))%((NOT ('-826890459')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '1682247154 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1758508712 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.014893192497229313)<>('')) IN (((NULL) IS TRUE), ((8.39214244E8) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((8.39214244E8) NOT BETWEEN (x'') AND ('0.4961259587106627'))))=((TRIM(DISTINCT NULL, x'')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1646332384 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=878316158 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1818556418'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1469029542 -1916750261'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN NULL THEN x'' END) BETWEEN (((0.07814498123310387) IS FALSE)) AND (x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'')OR('1592802628')))OR(NULL)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'' THEN 'D}' ELSE 0.020986030000388456 END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=166871306 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((('-1659336941')) NOT BETWEEN (('0.5989888215076868')) AND ((x'4f81')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1894937132 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1347149242 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-2042650600') NOT BETWEEN (0Xfffffffff550d9e1) AND (1505541737))  WHEN (NULL IN ()) THEN ((((((((x'385b')AND(0.5347525592701624)))AND('83805757')))AND(NULL)))OR('9223372036854775807')) WHEN CASE WHEN 0.7225597480109202 THEN 0.6758423781016131 ELSE 0.11730340507439374 END THEN CASE WHEN 0x7fffffffffffffff THEN 0.5931798372674133 WHEN 0.2976488021747049 THEN 0.07573305579485101 WHEN x'' THEN '0.39079708309148253' ELSE NULL END WHEN CASE WHEN '1063259027' THEN '' ELSE '-1181421415' END THEN ((NULL) BETWEEN (0.4629714045885899) AND (NULL)) ELSE CAST(NULL AS REAL) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1747019256 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN 0.7333863622554985 WHEN '2003760771' THEN NULL WHEN 0.4629714045885899 THEN 0Xffffffff93ac625b ELSE 0.5485563082384717 END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('%!' COLLATE NOCASE)<(((x'')-(0.31819163374343373)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('1243044785' AS NUMERIC))AND((NOT ('CB	8zEK瞗u')))))AND(CAST(x'' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '' THEN x'' END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1053150814 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1251619067'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(((((0.8307528395279486)OR('BpszzI')))OR(NULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=480531544 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1693738655 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))AND('')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2430437867608839; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-910548402 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((NULL)) BETWEEN ((0.00918448051281695)) AND ((0.6505234527774457))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-937723275 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-2138368793 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1125974598 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('-1156593594' AS REAL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0xffffffffccb60a18)OR(0X27cabe43)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-845221540 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-1065947525 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('1633997760'))) NOT BETWEEN (((NULL) IS TRUE)) AND ((('L')%('-729056559')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=591821296 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-640730601 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1047125504 sz=-928794023 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=395529604'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN x'253233c0' THEN x'' WHEN x'' THEN x'a611' WHEN NULL THEN '-1993356669' ELSE -355736097 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '96280345'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) BETWEEN (-2147170727) AND (x'')))AND(CAST(169992769 AS INTEGER))))OR((('-901279972')IS('-y]^4I')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.32238473318778194; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('-605029369') BETWEEN (236857151) AND ('1275853594')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.07907976822410057))<=((0.0825021114568738))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '987503180 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_VERSION(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '837196071 0 sz=198278869'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=555703983 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 559453931 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=306809444 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', NULL, NULL)) NOT BETWEEN ((0x792292b0, NULL, 0.4434722945538192)) AND ((x'', NULL, '799016952'))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CHAR(NULL))AND(((NULL)>=(x'')))))OR(((1080569624)|('')))))AND(load_extension(''))))OR(((0.3682492956354271)!=('9![*R')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('\nsX>''')OR(x'ce2fc54c36cc')))AND('')))OR(0.7052588143220985)))OR(0.7023587761808991)))%((('')/(0.3092111570641862)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -759045738 sz=1264067478 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1786870783 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 'r\r'  WHEN 0xffffffffe0643c73 THEN x'0fe3' WHEN 0.467597827576435 THEN 533662042 WHEN 'h#' THEN 0x582d0679 ELSE 'XlN' END, SUBSTR(NULL, x'f42b'), ((0xffffffffd96cb63a) IS TRUE)))<=((CASE 'p.䏐hT?'  WHEN 732991761 THEN 307065235 ELSE '1703243255' END, (((('-1053150814')AND(0.8217272843122599)))AND(NULL)), NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-749488199'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0x7d6543eb AS BLOB) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '567680511 0 sz=-1853589179'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-904703840 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('0.9703511172384256') IS TRUE) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(x'ca46eb5d') COLLATE RTRIM COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS TRUE) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '2 sz=182847113 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1768340291'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)) COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2147170727 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2095566734 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-321271917 164087443 sz=-1840761450 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('0.9031921995027283'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0Xb1f6b88)<('0.641489424613424'))  WHEN (((('벹')AND('')))OR(NULL)) THEN 0xffffffff8862e697 COLLATE NOCASE WHEN TYPEOF(DISTINCT 'VvFqC딚9Z') THEN ((-1080524520)/(2.124204896E9)) WHEN (((0.39838501787460534))<>((9.31424001E8))) THEN (- ('987503180')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.7225597480109202' COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2101403509'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-2072417564 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('},EH7')OR(NULL)))AND(NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1299064089 sz=87769404 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-21170810 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-242880060 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1759676707 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-487536308'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4166646196235432)>>(x''))) NOT BETWEEN (((((((((0.8372608083442026)OR(x'')))OR('3')))OR(x'')))OR(x''))) AND (CASE WHEN NULL THEN x'' WHEN 0.09569545968262338 THEN '-666497139' WHEN NULL THEN 'j!^n' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN -1335742733 THEN CAST('0.4629714045885899' AS NUMERIC) WHEN ((0.5460984933826604) BETWEEN (1) AND (NULL)) THEN x'' WHEN ((0.9703511172384256)AND(NULL)) THEN CAST(x'a3b6' AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE)) NOT BETWEEN (CASE x''  WHEN '210817647' THEN NULL WHEN NULL THEN 0.2854992070354391 WHEN 'k錭aqs{' THEN 0.6672839156380584 ELSE '' END) AND ('205223739' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.20635239637697678)OR(x'')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-878943868 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-321271917 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8738367987013427) BETWEEN (0.2583791836641982) AND ('-1573301299')))|(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=676674047 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1271064787 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '519388100 sz=-1779275524'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-555042260 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'be6d'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'pP?~0!'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0X4d0c1da0)AND(x'')))OR(x'bcb0')))OR(NULL)))OR('-618345937')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE -1747019256  WHEN 0.7312090767014023 THEN 0.285986240316492 WHEN x'' THEN x'f936' WHEN '-483237972' THEN '739688767' END THEN x'3d8c' ELSE '720852070' COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1868268225 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1755114975'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1986595639')OR(('T<' IN ()))))AND((+ (0.4053824916868368)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=1380006715 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2 -122022560 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((((((((('DuEax4t[')AND(0.6560666867413818)))OR('l%')))OR(0Xfc55ed6)))AND(853941504)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1989800182 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=939964981 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1881430926 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1936602746 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=1881430926 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0X42b3e5f)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=2073485961 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '791245296 sz=-1585109603 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>>(0Xffffffffc0a86c62))) NOT BETWEEN (((NULL)<=(1.826853741E9))) AND ('-1434920134')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1102773176 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('<c%izk'''))<=(('z*~ddD	6)')))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('AH')*(CAST(x'93e9' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-775230422'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1339059040 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2084757183'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((0.47910673110217084)OR(0.01962484255960628)))OR('')))OR('Tx?m3')))AND(0.9544844814596374)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-928794023'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-371734482 sz=-605029369 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-421457634 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=2070686929 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xfffffffffed4e164; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1063991605 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' AS BLOB) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-476228699' IN ()))IS(CAST('984574812' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '56915180 sz=-795509114 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=317950927'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1839518416)) BETWEEN ((x'')) AND (('([Cs_wR퇱')))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)) NOT BETWEEN ((0.5838898810635232)) AND ((x''))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1826853741'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1376297622'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-1284379863 AS BLOB)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1155383184 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE NULL  WHEN 'D5' THEN NULL ELSE '-605029369' END)AND(((('B\'))=((x''))))))AND((('%d')OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE -1080524520  WHEN 'G⟚A' THEN NULL ELSE 0.9463129053341569 END)<((('')>>('79451404')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'5a81b9ef')<=(0.3622120645099616)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) NOTNULL), CAST(x'3b26' AS TEXT), CASE WHEN NULL THEN 1664117962 WHEN -168212234 THEN '?fIzK' WHEN 1843316759 THEN 0.3511966807901804 END))=(((('>z')==(-1.156593594E9)), ((1.864712624E9) ISNULL), CASE WHEN 0x5636fff8 THEN NULL ELSE NULL END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=273201050 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1362785786'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-929958799 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((JULIANDAY(x'', x'f341', '1851845923'))<<(0.970424477293186 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1851845923 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=567680511 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-313899669 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(x'c5e8', 0xfffffffff37cf812))*(CASE ''  WHEN NULL THEN '-665415170' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Z4-'))<>((CAST(NULL AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=503333779 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '376029100 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((((NULL)OR(NULL)))AND(x'')))AND('')))OR(1.76166854E8)))AND(x'7d40')))AND(x'')))OR('yC)')))AND(x'')))IS NOT((('}) v') NOT BETWEEN (NULL) AND (1433006450)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.20651358777287554 THEN NULL ELSE '153420579' END)|(((x'') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'J}' THEN ((0.33800755722340114) IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=651284398 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1989800182 sz=-1900610612 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'861d')AND(-1.181421415E9)))AND(0.11996186371113571))) NOT BETWEEN ((((1.446445048E9))=(('')))) AND (0.5924491976446293)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1362785786'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-963775354 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1269650843 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2083665630'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1978056770'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1475598109'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('1989800182' AS INTEGER), ('280087350' IN ()), ((NULL) BETWEEN (NULL) AND ('1851845923'))))<((UNLIKELY(NULL), CAST('-1080524520' AS BLOB), '96280345'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2139101445 sz=-95317446 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1809569279 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1327148050 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-739673858 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '38646564'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.36615385227919184 AS INTEGER) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1491358317'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-1834127493 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(0xffffffffe05c773e AS INTEGER))OR(((0.2707630391343352)<<(NULL)))))OR(((x'')OR(1.005727102E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-787330055 706169451 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1598129095'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR((+ ('-1156593594')))))AND(CAST(0X6d9635ca AS BLOB))))AND(((x'') NOT BETWEEN (845362344) AND ('-961845743')))))AND(CASE WHEN 1.446445048E9 THEN -2.0426506E9 ELSE -293099019 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-199265855 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=533662042 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((']+JvE|] R')-('527006639'))))=(((((0.12544849760479815))<=((1.005727102E9)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))%((('t*K/6VyIx') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=786312987 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1954361700 -798852220 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-528849116 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((+ (965875419)), ((0Xffffffffbb0fc846) IS FALSE)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1832095800'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1583868112 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-54860170 sz=-458084244 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1177630747')>(x'0fe4')))AND(((x'e4dfc92c') NOT NULL))))AND(((0.35578647903374294) NOT BETWEEN (NULL) AND ('0.8218582351054322')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET((('317950927') NOT NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1664117962'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6841701521893112 IN ('935305907', NULL)), ((NULL) BETWEEN (NULL) AND (0.7791024564747299)), ((0.6772613247934366) IS FALSE)))>=((((NULL) NOT BETWEEN (NULL) AND (0xffffffff89d58c3b)), ((((-803477744)AND(x'')))OR(NULL)), x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 0 sz=2668389 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '2047866393'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.9217608897335112 THEN NULL END) NOT BETWEEN (0.8623761866600026) AND (MAX(0.2463984967396856, x'45f2', '0.05911658116935892', NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=997046154'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-996242295'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'e96b') NOT BETWEEN (NULL) AND (NULL)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '1024202720'  WHEN x'' THEN NULL END)GLOB(UNLIKELY(DISTINCT 0.8458192758360642))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN (x'') AND (x'')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1532286245) NOT BETWEEN (x'2f87') AND (0xffffffffdb47745f)))GLOB(CASE WHEN '40绲p\r?I' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE 0.49064849354452733  WHEN '(\NQ慾Z' THEN NULL END  WHEN ((0xa8299f1) NOT BETWEEN (x'6ccc') AND (1083777874)) THEN NULL ELSE (((('1665965100')OR(NULL)))AND(0.5616182375587847)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-427828073 IN ('PyJsq 輌︿N')), CASE 1818098889  WHEN 0.19102603364328608 THEN 0x7a6e25ea ELSE 'Q(' END, ((x'7170') NOT NULL)))==(((~ (NULL)), (~ ('-1747019256')), (((('1744921433')AND(NULL)))OR('绕搦ez'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-268108351 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'4e49')) BETWEEN ((CASE x'6309'  WHEN -9223372036854775808 THEN NULL ELSE 0.8921427885012392 END)) AND ((NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ ('')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((748229993)<('[쨯Cy*')) IN (x'37af' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-206641701 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-1747019256') BETWEEN ('1971155112') AND ('843900638'))  WHEN x'' THEN x'93ec' COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 sz=1659869206'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=78928762 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=558154293'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1894619557')LIKE(NULL)))OR(HEX(DISTINCT NULL))))AND(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=748229993 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(-2.08366563E9 AS REAL) IN ((((((((('91475277')AND(NULL)))OR(0.6550365961634573)))OR('1479109445')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('1564277705')GLOB(0.5642715847186259)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')!=(0.11178253155935247))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1255374196 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SUBSTR(x'2f80', 0.21657844884376742))==(CAST(-1696151592 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('4L')OR(0.4333913956896085)))OR(NULL)))AND(NULL)))AND(NULL)))>((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))>>(NULL)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('G\n'); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1785111332); -- 0ms;
UPDATE OR ROLLBACK vt1 SET c0=NULL; -- 0ms;
UPDATE t1 SET c0=-1517448072 WHERE (((t1.c0)) NOT BETWEEN ((((((t1.c87)OR(t1.c0)))AND(t1.c0)))) AND ((((t1.c0) ISNULL)))); -- 0ms;
UPDATE vt1 SET c0=x'' WHERE (((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(x'') WHERE ((vt1.c0) NOT BETWEEN (NULL) AND (((vt1.c0) IS TRUE))); -- 1ms;
UPDATE vt0 SET (c0)=(1.664117962E9) WHERE (((((vt0.c0))>((vt0.c0)))) NOTNULL); -- 0ms;
REINDEX; -- 0ms;
UPDATE vt1 SET (c0)=(2.015696063E9); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x''); -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t10 (c0 INTEGER ); -- 0ms;
REINDEX i49; -- 0ms;
REINDEX  vt1; -- 0ms;
UPDATE t10 SET c0='857800585' WHERE t10.c0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE t10 SET (c0)=(NULL) WHERE CAST(t10.c0 AS NUMERIC) COLLATE NOCASE; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.08808701971414401); -- 1ms;
INSERT OR ABORT INTO vt1(c0) VALUES (NULL), (x''), (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE t0 SET c0='1199191592'; -- 0ms;
REINDEX  vt1; -- 0ms;
UPDATE OR FAIL vt1 SET (c0)=(x'9ab1'); -- 0ms;
COMMIT; -- 1ms;
INSERT OR REPLACE INTO t10 VALUES ('enow࿟'), (7.48229993E8), (NULL); -- 0ms;
INSERT OR IGNORE INTO t10(c0) VALUES ('-308858203'), ('-959510526'), (0X19094b9b); -- 4ms;
UPDATE OR IGNORE t10 SET c0=x''; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c87) VALUES (NULL); -- 0ms;
DELETE FROM vt0 WHERE ((vt0.c0) NOT BETWEEN (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (vt0.c0)); -- 0ms;
CREATE INDEX IF NOT EXISTS i67 ON t0(c87 DESC,((((c0) BETWEEN (c87) AND (c87)))LIKE(((c87) BETWEEN ('2102679214') AND (c87)))) ASC) WHERE ((SUBSTR(c0, c0)) NOTNULL); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i64 ON t10((((c0, c0, c0)) BETWEEN (((((c0)) BETWEEN ((c0)) AND ((c0))), CASE WHEN c0 THEN c0 END, (((c0))!=((c0))))) AND (((((c0, c0, c0)) BETWEEN ((c0, c0, c0)) AND (('', NULL, c0))), (((c0)) NOT BETWEEN ((c0)) AND ((c0))), c0))) COLLATE BINARY) WHERE (((c0)) BETWEEN (((((c0)) BETWEEN ((c0)) AND ((c0))))) AND ((((((c0)AND(c0)))AND(c0))))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
DROP TABLE IF EXISTS t0; -- 0ms;
UPDATE vt1 SET (c0)=(NULL) WHERE (((vt1.c0 IN ()))|(CAST(vt1.c0 AS INTEGER))); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 1ms;
PRAGMA foreign_keys = true; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i39 ON t10(CAST(((((((((c0)AND(c0)))AND(c0)))AND(c0)))AND(c0)) AS REAL) COLLATE NOCASE DESC); -- 0ms;
CREATE UNIQUE INDEX i9 ON t10((((c0, c0, c0)) NOT BETWEEN ((c0, c0 COLLATE NOCASE, (c0 IN ()))) AND ((((c0)AND(c0)), LOWER(c0), ((c0)&(c0))))) COLLATE BINARY); -- 0ms;
CREATE INDEX i57 ON t10('-1531272670'); -- 0ms;
CREATE INDEX IF NOT EXISTS i49 ON t10(((((((((((((c0)OR((('0.8682794713750451')||(c0)))))OR(c0 COLLATE RTRIM)))AND(CAST(c0 AS REAL))))OR((((c0))>((c0))))))AND(((c0)<<(c0)))))OR(CASE WHEN c0 THEN c0 END)) ASC); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t10(c0) VALUES (0x67e9206b); -- 0ms;
REINDEX i64; -- 0ms;
REINDEX RTRIM; -- 0ms;
REINDEX i64; -- 0ms;
REINDEX; -- 4ms;
UPDATE OR IGNORE t10 SET c0=NULL WHERE 328486949; -- 0ms;
REINDEX BINARY; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ANALYZE t10; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('1810365377'); -- 1ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'b6d7'; -- 0ms;
INSERT OR IGNORE INTO t10(c0) VALUES (0.4217286338959674); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (572855440); -- 0ms;
UPDATE OR ROLLBACK vt1 SET c0='g+65kC'; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 582705690); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(0.8632296269370847); -- 0ms;
ALTER TABLE t10 ADD COLUMN c30 INT; -- 1ms;
INSERT OR REPLACE INTO vt0 VALUES ('-176252130'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
REINDEX; -- 0ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM t10 LEFT OUTER JOIN vt0 ON (CASE t10.c0  WHEN t10.c30 THEN t10.c30 WHEN vt0.c0 THEN t10.c30 WHEN t10.c0 THEN NULL ELSE '0.7155794923928521' END IN ()) WHERE ((((t10.c30)) NOT BETWEEN ((((t10.c30)-(vt0.c0)))) AND ((((((vt0.c0)AND(t10.c0)))OR(vt0.c0)))))) ORDER BY (((t10.c0) BETWEEN (vt0.c0) AND (t10.c30)) IN ()) ASC, ((t10.c30) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((t10.c30)) NOT BETWEEN ((((t10.c30)-(vt0.c0)))) AND ((((((vt0.c0)AND(t10.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM t10 LEFT OUTER JOIN vt0 ON (CASE t10.c0  WHEN t10.c30 THEN t10.c30 WHEN vt0.c0 THEN t10.c30 WHEN t10.c0 THEN NULL ELSE '0.7155794923928521' END IN ()) ORDER BY (((t10.c0) BETWEEN (vt0.c0) AND (t10.c30)) IN ()) ASC, ((t10.c30) ISNULL) ASC);
SELECT * FROM t10 LEFT OUTER JOIN vt0 ON (CASE t10.c0  WHEN t10.c30 THEN t10.c30 WHEN vt0.c0 THEN t10.c30 WHEN t10.c0 THEN NULL ELSE '0.7155794923928521' END IN ()) WHERE ((((t10.c30)) NOT BETWEEN ((((t10.c30)-(vt0.c0)))) AND ((((((vt0.c0)AND(t10.c0)))OR(vt0.c0)))))) ORDER BY (((t10.c0) BETWEEN (vt0.c0) AND (t10.c30)) IN ()) ASC, ((t10.c30) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((t10.c30)) NOT BETWEEN ((((t10.c30)-(vt0.c0)))) AND ((((((vt0.c0)AND(t10.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM t10 LEFT OUTER JOIN vt0 ON (CASE t10.c0  WHEN t10.c30 THEN t10.c30 WHEN vt0.c0 THEN t10.c30 WHEN t10.c0 THEN NULL ELSE '0.7155794923928521' END IN ()) ORDER BY (((t10.c0) BETWEEN (vt0.c0) AND (t10.c30)) IN ()) ASC, ((t10.c30) ISNULL) ASC);
SELECT * FROM t10 LEFT OUTER JOIN vt0 ON (CASE t10.c0  WHEN t10.c30 THEN t10.c30 WHEN vt0.c0 THEN t10.c30 WHEN t10.c0 THEN NULL ELSE '0.7155794923928521' END IN ()) WHERE ((((t10.c30)) NOT BETWEEN ((((t10.c30)-(vt0.c0)))) AND ((((((vt0.c0)AND(t10.c0)))OR(vt0.c0)))))) ORDER BY (((t10.c0) BETWEEN (vt0.c0) AND (t10.c30)) IN ()) ASC, ((t10.c30) ISNULL) ASC;
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0)AND(t0.c0)) THEN t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)AND(t0.c0)) THEN t0.c0 END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0)AND(t0.c0)) THEN t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)AND(t0.c0)) THEN t0.c0 END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0)AND(t0.c0)) THEN t0.c0 END);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (t0.c0) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (t0.c0) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (t0.c0) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM t0, t10, vt0, vt1 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((((vt1.c0)OR(vt0.c0)))OR(t10.c30))) AND (CASE t0.c87  WHEN t0.c87 THEN t0.c87 ELSE vt0.c0 END))) ORDER BY (- (load_extension(0.6431829341153248)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (((((vt1.c0)OR(vt0.c0)))OR(t10.c30))) AND (CASE t0.c87  WHEN t0.c87 THEN t0.c87 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, t10, vt0, vt1 ORDER BY (- (load_extension(0.6431829341153248))));
SELECT ALL * FROM t0, t10, vt0, vt1 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((((vt1.c0)OR(vt0.c0)))OR(t10.c30))) AND (CASE t0.c87  WHEN t0.c87 THEN t0.c87 ELSE vt0.c0 END))) ORDER BY (- (load_extension(0.6431829341153248)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (((((vt1.c0)OR(vt0.c0)))OR(t10.c30))) AND (CASE t0.c87  WHEN t0.c87 THEN t0.c87 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, t10, vt0, vt1 ORDER BY (- (load_extension(0.6431829341153248))));
SELECT * FROM t0, vt0 WHERE ((((t0.c0, ((t0.c87) IS FALSE), (((vt0.c0))<=((vt0.c0)))))=((((t0.c0) NOT BETWEEN (t0.c87) AND (t0.c87)), CAST(t0.c87 AS BLOB), ((t0.c87)>=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, ((t0.c87) IS FALSE), (((vt0.c0))<=((vt0.c0)))))==((((t0.c0) NOT BETWEEN (t0.c87) AND (t0.c87)), CAST(t0.c87 AS BLOB), ((t0.c87)>=(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c0, ((t0.c87) IS FALSE), (((vt0.c0))<=((vt0.c0)))))=((((t0.c0) NOT BETWEEN (t0.c87) AND (t0.c87)), CAST(t0.c87 AS BLOB), ((t0.c87)>=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, ((t0.c87) IS FALSE), (((vt0.c0))<=((vt0.c0)))))==((((t0.c0) NOT BETWEEN (t0.c87) AND (t0.c87)), CAST(t0.c87 AS BLOB), ((t0.c87)>=(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c0, ((t0.c87) IS FALSE), (((vt0.c0))<=((vt0.c0)))))=((((t0.c0) NOT BETWEEN (t0.c87) AND (t0.c87)), CAST(t0.c87 AS BLOB), ((t0.c87)>=(vt0.c0))))));
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c87, t0.c87, t0.c0, t0.c0))<>((0.38661070738421, t0.c87, t0.c87, t0.c87, t0.c0)))) BETWEEN (CASE t0.c87  WHEN t0.c0 THEN t0.c87 ELSE t0.c0 END) AND ((- (t0.c0))))) ORDER BY CAST((- (t0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c87, t0.c87, t0.c0, t0.c0))!=((0.38661070738421, t0.c87, t0.c87, t0.c87, t0.c0)))) BETWEEN (CASE t0.c87  WHEN t0.c0 THEN t0.c87 ELSE t0.c0 END) AND ((- (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CAST((- (t0.c0)) AS BLOB)  NULLS LAST);
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c87, t0.c87, t0.c0, t0.c0))<>((0.38661070738421, t0.c87, t0.c87, t0.c87, t0.c0)))) BETWEEN (CASE t0.c87  WHEN t0.c0 THEN t0.c87 ELSE t0.c0 END) AND ((- (t0.c0))))) ORDER BY CAST((- (t0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c87, t0.c87, t0.c0, t0.c0))!=((0.38661070738421, t0.c87, t0.c87, t0.c87, t0.c0)))) BETWEEN (CASE t0.c87  WHEN t0.c0 THEN t0.c87 ELSE t0.c0 END) AND ((- (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CAST((- (t0.c0)) AS BLOB)  NULLS LAST);
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c87, t0.c87, t0.c0, t0.c0))<>((0.38661070738421, t0.c87, t0.c87, t0.c87, t0.c0)))) BETWEEN (CASE t0.c87  WHEN t0.c0 THEN t0.c87 ELSE t0.c0 END) AND ((- (t0.c0))))) ORDER BY CAST((- (t0.c0)) AS BLOB)  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((GLOB(vt1.c0, vt1.c0) IN (0.0012571686996006859)));
SELECT SUM(count) FROM (SELECT ALL (((GLOB(vt1.c0, vt1.c0) IN (0.0012571686996006859))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((GLOB(vt1.c0, vt1.c0) IN (0.0012571686996006859)));
SELECT SUM(count) FROM (SELECT ALL (((GLOB(vt1.c0, vt1.c0) IN (0.0012571686996006859))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((GLOB(vt1.c0, vt1.c0) IN (0.0012571686996006859)));
SELECT COUNT(*) FROM t10, vt0, vt1 WHERE (((((((((((((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt1.c0 AS REAL))))OR((vt0.c0 IN ()))))OR((t10.c0 IN (t10.c0)))))AND((NOT (t10.c0)))))OR(NULL)))AND(json_valid(t10.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt1.c0 AS REAL))))OR((vt0.c0 IN ()))))OR((t10.c0 IN (t10.c0)))))AND((NOT (t10.c0)))))OR(NULL)))AND(json_valid(t10.c0)))) IS TRUE)  as count FROM t10, vt0, vt1);
SELECT COUNT(*) FROM t10, vt0, vt1 WHERE (((((((((((((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt1.c0 AS REAL))))OR((vt0.c0 IN ()))))OR((t10.c0 IN (t10.c0)))))AND((NOT (t10.c0)))))OR(NULL)))AND(json_valid(t10.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt1.c0 AS REAL))))OR((vt0.c0 IN ()))))OR((t10.c0 IN (t10.c0)))))AND((NOT (t10.c0)))))OR(NULL)))AND(json_valid(t10.c0)))) IS TRUE)  as count FROM t10, vt0, vt1);
SELECT COUNT(*) FROM t10, vt0, vt1 WHERE (((((((((((((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))AND(CAST(vt1.c0 AS REAL))))OR((vt0.c0 IN ()))))OR((t10.c0 IN (t10.c0)))))AND((NOT (t10.c0)))))OR(NULL)))AND(json_valid(t10.c0))));
SELECT * FROM vt1 CROSS JOIN t0 ON ((~ (t10.c30)) IN ()) LEFT OUTER JOIN t10 ON (NOT (((0.36338979762477297) NOT BETWEEN (t10.c0) AND (vt1.c0)))) LEFT OUTER JOIN vt0 ON CASE WHEN CAST(t10.c30 AS NUMERIC) THEN t10.c0 COLLATE NOCASE ELSE CAST(vt0.c0 AS REAL) END WHERE (((((vt1.c0) IS FALSE))<<(((NULL) BETWEEN (NULL) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE))<<(((NULL) BETWEEN (NULL) AND (t0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((~ (t10.c30)) IN ()) LEFT OUTER JOIN t10 ON (NOT (((0.36338979762477297) NOT BETWEEN (t10.c0) AND (vt1.c0)))) LEFT OUTER JOIN vt0 ON CASE WHEN CAST(t10.c30 AS NUMERIC) THEN t10.c0 COLLATE NOCASE ELSE CAST(vt0.c0 AS REAL) END);
SELECT * FROM vt1 CROSS JOIN t0 ON ((~ (t10.c30)) IN ()) LEFT OUTER JOIN t10 ON (NOT (((0.36338979762477297) NOT BETWEEN (t10.c0) AND (vt1.c0)))) LEFT OUTER JOIN vt0 ON CASE WHEN CAST(t10.c30 AS NUMERIC) THEN t10.c0 COLLATE NOCASE ELSE CAST(vt0.c0 AS REAL) END WHERE (((((vt1.c0) IS FALSE))<<(((NULL) BETWEEN (NULL) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE))<<(((NULL) BETWEEN (NULL) AND (t0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((~ (t10.c30)) IN ()) LEFT OUTER JOIN t10 ON (NOT (((0.36338979762477297) NOT BETWEEN (t10.c0) AND (vt1.c0)))) LEFT OUTER JOIN vt0 ON CASE WHEN CAST(t10.c30 AS NUMERIC) THEN t10.c0 COLLATE NOCASE ELSE CAST(vt0.c0 AS REAL) END);
SELECT * FROM vt1 CROSS JOIN t0 ON ((~ (t10.c30)) IN ()) LEFT OUTER JOIN t10 ON (NOT (((0.36338979762477297) NOT BETWEEN (t10.c0) AND (vt1.c0)))) LEFT OUTER JOIN vt0 ON CASE WHEN CAST(t10.c30 AS NUMERIC) THEN t10.c0 COLLATE NOCASE ELSE CAST(vt0.c0 AS REAL) END WHERE (((((vt1.c0) IS FALSE))<<(((NULL) BETWEEN (NULL) AND (t0.c0)))));
SELECT * FROM vt0, t10, vt1 WHERE (json_array_length((- (vt0.c0)))) ORDER BY highlight(((t10.c30) BETWEEN (vt0.c0) AND (t10.c0)), (NOT (vt0.c0)), NULL, (((t10.c30)) BETWEEN ((vt0.c0)) AND ((t10.c30)))) ASC, ((((vt0.c0) NOT BETWEEN (t10.c30) AND (t10.c30)))>((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((json_array_length((- (vt0.c0)))) IS TRUE)  as count FROM vt0, t10, vt1 ORDER BY highlight(((t10.c30) BETWEEN (vt0.c0) AND (t10.c0)), (NOT (vt0.c0)), NULL, (((t10.c30)) BETWEEN ((vt0.c0)) AND ((t10.c30)))) ASC, ((((vt0.c0) NOT BETWEEN (t10.c30) AND (t10.c30)))>((vt1.c0 IN ()))));
SELECT * FROM vt0, t10, vt1 WHERE (json_array_length((- (vt0.c0)))) ORDER BY highlight(((t10.c30) BETWEEN (vt0.c0) AND (t10.c0)), (NOT (vt0.c0)), NULL, (((t10.c30)) BETWEEN ((vt0.c0)) AND ((t10.c30)))) ASC, ((((vt0.c0) NOT BETWEEN (t10.c30) AND (t10.c30)))>((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((json_array_length((- (vt0.c0)))) IS TRUE)  as count FROM vt0, t10, vt1 ORDER BY highlight(((t10.c30) BETWEEN (vt0.c0) AND (t10.c0)), (NOT (vt0.c0)), NULL, (((t10.c30)) BETWEEN ((vt0.c0)) AND ((t10.c30)))) ASC, ((((vt0.c0) NOT BETWEEN (t10.c30) AND (t10.c30)))>((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.08808701971414401 WHEN 'w*8 ' THEN vt1.c0 END THEN ((vt1.c0)>=(vt1.c0)) ELSE ((vt1.c0)-(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.08808701971414401 WHEN 'w*8 ' THEN vt1.c0 END THEN ((vt1.c0)>=(vt1.c0)) ELSE ((vt1.c0)-(NULL)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.08808701971414401 WHEN 'w*8 ' THEN vt1.c0 END THEN ((vt1.c0)>=(vt1.c0)) ELSE ((vt1.c0)-(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.08808701971414401 WHEN 'w*8 ' THEN vt1.c0 END THEN ((vt1.c0)>=(vt1.c0)) ELSE ((vt1.c0)-(NULL)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.08808701971414401 WHEN 'w*8 ' THEN vt1.c0 END THEN ((vt1.c0)>=(vt1.c0)) ELSE ((vt1.c0)-(NULL)) END);
SELECT * FROM t10 INNER JOIN t0 ON COALESCE(0X167e43d0, IFNULL(t10.c0, 1260617128), ((t0.c0)|(t10.c30)), vt0.c0 COLLATE NOCASE) LEFT OUTER JOIN vt0 ON ((x'')LIKE(((t0.c87)IS NOT(t10.c0)))) WHERE ((((t10.c0) NOT NULL) IN ('_' COLLATE NOCASE, x'b14c', ((t0.c0) BETWEEN (vt0.c0) AND (t10.c30)))));
SELECT SUM(count) FROM (SELECT ALL (((((t10.c0) NOT NULL) IN ('_' COLLATE NOCASE, x'b14c', ((t0.c0) BETWEEN (vt0.c0) AND (t10.c30))))) IS TRUE)  as count FROM t10 INNER JOIN t0 ON COALESCE(0x167e43d0, IFNULL(t10.c0, 1260617128), ((t0.c0)|(t10.c30)), vt0.c0 COLLATE NOCASE) LEFT OUTER JOIN vt0 ON ((x'')LIKE(((t0.c87)IS NOT(t10.c0)))));
SELECT * FROM t10 INNER JOIN t0 ON COALESCE(0X167e43d0, IFNULL(t10.c0, 1260617128), ((t0.c0)|(t10.c30)), vt0.c0 COLLATE NOCASE) LEFT OUTER JOIN vt0 ON ((x'')LIKE(((t0.c87)IS NOT(t10.c0)))) WHERE ((((t10.c0) NOT NULL) IN ('_' COLLATE NOCASE, x'b14c', ((t0.c0) BETWEEN (vt0.c0) AND (t10.c30)))));
SELECT SUM(count) FROM (SELECT ALL (((((t10.c0) NOT NULL) IN ('_' COLLATE NOCASE, x'b14c', ((t0.c0) BETWEEN (vt0.c0) AND (t10.c30))))) IS TRUE)  as count FROM t10 INNER JOIN t0 ON COALESCE(0x167e43d0, IFNULL(t10.c0, 1260617128), ((t0.c0)|(t10.c30)), vt0.c0 COLLATE NOCASE) LEFT OUTER JOIN vt0 ON ((x'')LIKE(((t0.c87)IS NOT(t10.c0)))));
SELECT * FROM t10 INNER JOIN t0 ON COALESCE(0X167e43d0, IFNULL(t10.c0, 1260617128), ((t0.c0)|(t10.c30)), vt0.c0 COLLATE NOCASE) LEFT OUTER JOIN vt0 ON ((x'')LIKE(((t0.c87)IS NOT(t10.c0)))) WHERE ((((t10.c0) NOT NULL) IN ('_' COLLATE NOCASE, x'b14c', ((t0.c0) BETWEEN (vt0.c0) AND (t10.c30)))));
SELECT COUNT(*) FROM vt1, t10, t0, vt0 WHERE (CAST(((t0.c0) ISNULL) AS INTEGER)) ORDER BY (((t0.c87 IN ()))%(((0.7572924280238161)||(t0.c87))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt1, t10, t0, vt0 ORDER BY (((t0.c87 IN ()))%(((0.7572924280238161)||(t0.c87)))));
SELECT COUNT(*) FROM vt1, t10, t0, vt0 WHERE (CAST(((t0.c0) ISNULL) AS INTEGER)) ORDER BY (((t0.c87 IN ()))%(((0.7572924280238161)||(t0.c87))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt1, t10, t0, vt0 ORDER BY (((t0.c87 IN ()))%(((0.7572924280238161)||(t0.c87)))));
SELECT COUNT(*) FROM vt1, t10, t0, vt0 WHERE (CAST(((t0.c0) ISNULL) AS INTEGER)) ORDER BY (((t0.c87 IN ()))%(((0.7572924280238161)||(t0.c87))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON vt0.c0 WHERE (t0.c87 COLLATE RTRIM) ORDER BY t0.c0, ((((t0.c0) BETWEEN (t0.c87) AND (vt0.c0))) NOT BETWEEN (((t0.c87)/(t0.c0))) AND (((((t0.c87)AND(t0.c0)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c87 COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON vt0.c0 ORDER BY t0.c0, ((((t0.c0) BETWEEN (t0.c87) AND (vt0.c0))) NOT BETWEEN (((t0.c87)/(t0.c0))) AND (((((t0.c87)AND(t0.c0)))OR(vt0.c0)))) DESC);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON vt0.c0 WHERE (t0.c87 COLLATE RTRIM) ORDER BY t0.c0, ((((t0.c0) BETWEEN (t0.c87) AND (vt0.c0))) NOT BETWEEN (((t0.c87)/(t0.c0))) AND (((((t0.c87)AND(t0.c0)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c87 COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON vt0.c0 ORDER BY t0.c0, ((((t0.c0) BETWEEN (t0.c87) AND (vt0.c0))) NOT BETWEEN (((t0.c87)/(t0.c0))) AND (((((t0.c87)AND(t0.c0)))OR(vt0.c0)))) DESC);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON vt0.c0 WHERE (t0.c87 COLLATE RTRIM) ORDER BY t0.c0, ((((t0.c0) BETWEEN (t0.c87) AND (vt0.c0))) NOT BETWEEN (((t0.c87)/(t0.c0))) AND (((((t0.c87)AND(t0.c0)))OR(vt0.c0)))) DESC;
SELECT ALL * FROM t10, vt0, vt1, t0 WHERE ((((~ (t10.c30))) NOT BETWEEN (0Xffffffff8bd8ff25) AND (CASE WHEN vt0.c0 THEN vt1.c0 WHEN t10.c0 THEN t0.c87 WHEN vt1.c0 THEN t10.c0 ELSE t10.c30 END)));
SELECT SUM(count) FROM (SELECT (((((~ (t10.c30))) NOT BETWEEN (0xffffffff8bd8ff25) AND (CASE WHEN vt0.c0 THEN vt1.c0 WHEN t10.c0 THEN t0.c87 WHEN vt1.c0 THEN t10.c0 ELSE t10.c30 END))) IS TRUE)  as count FROM t10, vt0, vt1, t0);
SELECT ALL * FROM t10, vt0, vt1, t0 WHERE ((((~ (t10.c30))) NOT BETWEEN (0Xffffffff8bd8ff25) AND (CASE WHEN vt0.c0 THEN vt1.c0 WHEN t10.c0 THEN t0.c87 WHEN vt1.c0 THEN t10.c0 ELSE t10.c30 END)));
SELECT SUM(count) FROM (SELECT (((((~ (t10.c30))) NOT BETWEEN (0xffffffff8bd8ff25) AND (CASE WHEN vt0.c0 THEN vt1.c0 WHEN t10.c0 THEN t0.c87 WHEN vt1.c0 THEN t10.c0 ELSE t10.c30 END))) IS TRUE)  as count FROM t10, vt0, vt1, t0);
SELECT ALL * FROM t10, vt0, vt1, t0 WHERE ((((~ (t10.c30))) NOT BETWEEN (0Xffffffff8bd8ff25) AND (CASE WHEN vt0.c0 THEN vt1.c0 WHEN t10.c0 THEN t0.c87 WHEN vt1.c0 THEN t10.c0 ELSE t10.c30 END)));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c87)) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c87)) END WHERE (CAST(DATE(t0.c0, t0.c0, NULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(DATE(t0.c0, t0.c0, NULL) AS INTEGER)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c87)) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c87)) END);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c87)) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c87)) END WHERE (CAST(DATE(t0.c0, t0.c0, NULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(DATE(t0.c0, t0.c0, NULL) AS INTEGER)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c87)) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c87)) END);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c87)) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c87)) END WHERE (CAST(DATE(t0.c0, t0.c0, NULL) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t0 ON (((vt0.c0)<=(t0.c87)) IN (CAST(vt1.c0 AS TEXT), UPPER(vt1.c0))) WHERE (x'63fb') ORDER BY ((t0.c0)<(t0.c87)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((x'63fb') IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t0 ON (((vt0.c0)<=(t0.c87)) IN (CAST(vt1.c0 AS TEXT), UPPER(vt1.c0))) ORDER BY ((t0.c0)<(t0.c87)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t0 ON (((vt0.c0)<=(t0.c87)) IN (CAST(vt1.c0 AS TEXT), UPPER(vt1.c0))) WHERE (x'63fb') ORDER BY ((t0.c0)<(t0.c87)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((x'63fb') IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t0 ON (((vt0.c0)<=(t0.c87)) IN (CAST(vt1.c0 AS TEXT), UPPER(vt1.c0))) ORDER BY ((t0.c0)<(t0.c87)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t0 ON (((vt0.c0)<=(t0.c87)) IN (CAST(vt1.c0 AS TEXT), UPPER(vt1.c0))) WHERE (x'63fb') ORDER BY ((t0.c0)<(t0.c87)) COLLATE BINARY COLLATE NOCASE;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c87)AND(t0.c0)))AND(t0.c0)) IN ((+ (t0.c87))))) ORDER BY ((CASE t0.c0  WHEN t0.c87 THEN t0.c87 WHEN t0.c87 THEN t0.c0 WHEN t0.c0 THEN 0.45704270359646315 END)OR((x'98a7d86d' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c87)AND(t0.c0)))AND(t0.c0)) IN ((+ (t0.c87))))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c0  WHEN t0.c87 THEN t0.c87 WHEN t0.c87 THEN t0.c0 WHEN t0.c0 THEN 0.45704270359646315 END)OR((x'98a7d86d' IN ()))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c87)AND(t0.c0)))AND(t0.c0)) IN ((+ (t0.c87))))) ORDER BY ((CASE t0.c0  WHEN t0.c87 THEN t0.c87 WHEN t0.c87 THEN t0.c0 WHEN t0.c0 THEN 0.45704270359646315 END)OR((x'98a7d86d' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c87)AND(t0.c0)))AND(t0.c0)) IN ((+ (t0.c87))))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c0  WHEN t0.c87 THEN t0.c87 WHEN t0.c87 THEN t0.c0 WHEN t0.c0 THEN 0.45704270359646315 END)OR((x'98a7d86d' IN ()))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c87)AND(t0.c0)))AND(t0.c0)) IN ((+ (t0.c87))))) ORDER BY ((CASE t0.c0  WHEN t0.c87 THEN t0.c87 WHEN t0.c87 THEN t0.c0 WHEN t0.c0 THEN 0.45704270359646315 END)OR((x'98a7d86d' IN ()))) DESC;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN '!\n7>%y' THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN '!\n7>%y' THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN '!\n7>%y' THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN '!\n7>%y' THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN '!\n7>%y' THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM t10, t0, vt0 WHERE ((NOT (((((t10.c0)AND(x'')))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((t10.c0)AND(x'')))OR(t0.c0))))) IS TRUE)  as count FROM t10, t0, vt0);
SELECT COUNT(*) FROM t10, t0, vt0 WHERE ((NOT (((((t10.c0)AND(x'')))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((t10.c0)AND(x'')))OR(t0.c0))))) IS TRUE)  as count FROM t10, t0, vt0);
SELECT COUNT(*) FROM t10, t0, vt0 WHERE ((NOT (((((t10.c0)AND(x'')))OR(t0.c0)))));
SELECT ALL * FROM t0, vt1, vt0, t10 WHERE ('1005727102') ORDER BY CASE WHEN t0.c0 THEN CASE t0.c87  WHEN t10.c0 THEN vt1.c0 END WHEN ((t10.c30)|(t0.c87)) THEN ((t0.c87) IS FALSE) WHEN (- (t10.c30)) THEN CASE t0.c0  WHEN t10.c30 THEN t10.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t10.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1005727102') IS TRUE)  as count FROM t0, vt1, vt0, t10 ORDER BY CASE WHEN t0.c0 THEN CASE t0.c87  WHEN t10.c0 THEN vt1.c0 END WHEN ((t10.c30)|(t0.c87)) THEN ((t0.c87) IS FALSE) WHEN (- (t10.c30)) THEN CASE t0.c0  WHEN t10.c30 THEN t10.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t10.c0 END END  NULLS LAST);
SELECT ALL * FROM t0, vt1, vt0, t10 WHERE ('1005727102') ORDER BY CASE WHEN t0.c0 THEN CASE t0.c87  WHEN t10.c0 THEN vt1.c0 END WHEN ((t10.c30)|(t0.c87)) THEN ((t0.c87) IS FALSE) WHEN (- (t10.c30)) THEN CASE t0.c0  WHEN t10.c30 THEN t10.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t10.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1005727102') IS TRUE)  as count FROM t0, vt1, vt0, t10 ORDER BY CASE WHEN t0.c0 THEN CASE t0.c87  WHEN t10.c0 THEN vt1.c0 END WHEN ((t10.c30)|(t0.c87)) THEN ((t0.c87) IS FALSE) WHEN (- (t10.c30)) THEN CASE t0.c0  WHEN t10.c30 THEN t10.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t10.c0 END END  NULLS LAST);
SELECT ALL * FROM t0, vt1, vt0, t10 WHERE ('1005727102') ORDER BY CASE WHEN t0.c0 THEN CASE t0.c87  WHEN t10.c0 THEN vt1.c0 END WHEN ((t10.c30)|(t0.c87)) THEN ((t0.c87) IS FALSE) WHEN (- (t10.c30)) THEN CASE t0.c0  WHEN t10.c30 THEN t10.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t10.c0 END END  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND(CAST(vt0.c0 AS BLOB))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS NUMERIC))AND(CAST(vt0.c0 AS BLOB))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND(CAST(vt0.c0 AS BLOB))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS NUMERIC))AND(CAST(vt0.c0 AS BLOB))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND(CAST(vt0.c0 AS BLOB))))AND(vt0.c0)));
SELECT ALL * FROM vt1, t10 WHERE ((MIN(vt1.c0, t10.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((MIN(vt1.c0, t10.c0) IN ())) IS TRUE)  as count FROM vt1, t10);
SELECT ALL * FROM vt1, t10 WHERE ((MIN(vt1.c0, t10.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((MIN(vt1.c0, t10.c0) IN ())) IS TRUE)  as count FROM vt1, t10);
SELECT ALL * FROM vt1, t10 WHERE ((MIN(vt1.c0, t10.c0) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL));
SELECT * FROM vt0, t10, vt1 CROSS JOIN t0 ON t0.c0 WHERE ((((vt1.c0)) BETWEEN ((t10.c0)) AND ((json_remove(t0.c87, t10.c0, t0.c0, t0.c87))))) ORDER BY (+ (((t0.c87)<=(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((t10.c0)) AND ((json_remove(t0.c87, t10.c0, t0.c0, t0.c87))))) IS TRUE)  as count FROM vt0, t10, vt1 CROSS JOIN t0 ON t0.c0 ORDER BY (+ (((t0.c87)<=(t0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0, t10, vt1 CROSS JOIN t0 ON t0.c0 WHERE ((((vt1.c0)) BETWEEN ((t10.c0)) AND ((json_remove(t0.c87, t10.c0, t0.c0, t0.c87))))) ORDER BY (+ (((t0.c87)<=(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((t10.c0)) AND ((json_remove(t0.c87, t10.c0, t0.c0, t0.c87))))) IS TRUE)  as count FROM vt0, t10, vt1 CROSS JOIN t0 ON t0.c0 ORDER BY (+ (((t0.c87)<=(t0.c0)))) DESC  NULLS LAST);
SELECT * FROM t10, vt1 WHERE (CAST(((((vt1.c0)AND(t10.c0)))AND(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)AND(t10.c0)))AND(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t10, vt1);
SELECT * FROM t10, vt1 WHERE (CAST(((((vt1.c0)AND(t10.c0)))AND(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)AND(t10.c0)))AND(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t10, vt1);
SELECT * FROM t10, vt1 WHERE (CAST(((((vt1.c0)AND(t10.c0)))AND(vt1.c0)) AS INTEGER));
SELECT COUNT(*) FROM t10, t0 RIGHT OUTER JOIN vt0 ON (((- (vt1.c0))) BETWEEN (((vt1.c0)>>(vt0.c0))) AND (CASE WHEN t10.c30 THEN t10.c30 END)) INNER JOIN vt1 ON ((t0.c0) ISNULL) WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY ((((t10.c30) NOT NULL)) NOT BETWEEN (((((vt0.c0)AND(t10.c0)))OR(t10.c0))) AND (((t10.c0)/(t10.c30)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t10, t0 RIGHT OUTER JOIN vt0 ON (((- (vt1.c0))) BETWEEN (((vt1.c0)>>(vt0.c0))) AND (CASE WHEN t10.c30 THEN t10.c30 END)) INNER JOIN vt1 ON ((t0.c0) ISNULL) ORDER BY ((((t10.c30) NOT NULL)) NOT BETWEEN (((((vt0.c0)AND(t10.c0)))OR(t10.c0))) AND (((t10.c0)/(t10.c30)))) DESC);
SELECT COUNT(*) FROM t10, t0 RIGHT OUTER JOIN vt0 ON (((- (vt1.c0))) BETWEEN (((vt1.c0)>>(vt0.c0))) AND (CASE WHEN t10.c30 THEN t10.c30 END)) INNER JOIN vt1 ON ((t0.c0) ISNULL) WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY ((((t10.c30) NOT NULL)) NOT BETWEEN (((((vt0.c0)AND(t10.c0)))OR(t10.c0))) AND (((t10.c0)/(t10.c30)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t10, t0 RIGHT OUTER JOIN vt0 ON (((- (vt1.c0))) BETWEEN (((vt1.c0)>>(vt0.c0))) AND (CASE WHEN t10.c30 THEN t10.c30 END)) INNER JOIN vt1 ON ((t0.c0) ISNULL) ORDER BY ((((t10.c30) NOT NULL)) NOT BETWEEN (((((vt0.c0)AND(t10.c0)))OR(t10.c0))) AND (((t10.c0)/(t10.c30)))) DESC);
SELECT ALL * FROM t10 WHERE (t10.c0);
SELECT SUM(count) FROM (SELECT ((t10.c0) IS TRUE)  as count FROM t10);
SELECT ALL * FROM t10 WHERE (t10.c0);
SELECT SUM(count) FROM (SELECT ((t10.c0) IS TRUE)  as count FROM t10);
SELECT ALL * FROM t10 WHERE (t10.c0);
SELECT ALL COUNT(*) FROM vt1, t10 WHERE (((((('205223739')) NOT BETWEEN ((vt1.c0)) AND ((t10.c30))))GLOB('0.04649808332780159' COLLATE BINARY))) ORDER BY (((((t10.c30, vt1.c0, vt1.c0)) BETWEEN ((t10.c0, t10.c0, t10.c30)) AND ((t10.c30, vt1.c0, t10.c0)))) BETWEEN ((+ (t10.c30))) AND (((((((((t10.c0)OR(t10.c0)))AND(t10.c30)))OR(t10.c0)))OR(t10.c30)))) DESC  NULLS FIRST, (- (((NULL) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((('205223739')) NOT BETWEEN ((vt1.c0)) AND ((t10.c30))))GLOB('0.04649808332780159' COLLATE BINARY))) IS TRUE)  as count FROM vt1, t10 ORDER BY (((((t10.c30, vt1.c0, vt1.c0)) BETWEEN ((t10.c0, t10.c0, t10.c30)) AND ((t10.c30, vt1.c0, t10.c0)))) BETWEEN ((+ (t10.c30))) AND (((((((((t10.c0)OR(t10.c0)))AND(t10.c30)))OR(t10.c0)))OR(t10.c30)))) DESC  NULLS FIRST, (- (((NULL) NOTNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t10 WHERE (((((('205223739')) NOT BETWEEN ((vt1.c0)) AND ((t10.c30))))GLOB('0.04649808332780159' COLLATE BINARY))) ORDER BY (((((t10.c30, vt1.c0, vt1.c0)) BETWEEN ((t10.c0, t10.c0, t10.c30)) AND ((t10.c30, vt1.c0, t10.c0)))) BETWEEN ((+ (t10.c30))) AND (((((((((t10.c0)OR(t10.c0)))AND(t10.c30)))OR(t10.c0)))OR(t10.c30)))) DESC  NULLS FIRST, (- (((NULL) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((('205223739')) NOT BETWEEN ((vt1.c0)) AND ((t10.c30))))GLOB('0.04649808332780159' COLLATE BINARY))) IS TRUE)  as count FROM vt1, t10 ORDER BY (((((t10.c30, vt1.c0, vt1.c0)) BETWEEN ((t10.c0, t10.c0, t10.c30)) AND ((t10.c30, vt1.c0, t10.c0)))) BETWEEN ((+ (t10.c30))) AND (((((((((t10.c0)OR(t10.c0)))AND(t10.c30)))OR(t10.c0)))OR(t10.c30)))) DESC  NULLS FIRST, (- (((NULL) NOTNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t10 WHERE (((((('205223739')) NOT BETWEEN ((vt1.c0)) AND ((t10.c30))))GLOB('0.04649808332780159' COLLATE BINARY))) ORDER BY (((((t10.c30, vt1.c0, vt1.c0)) BETWEEN ((t10.c0, t10.c0, t10.c30)) AND ((t10.c30, vt1.c0, t10.c0)))) BETWEEN ((+ (t10.c30))) AND (((((((((t10.c0)OR(t10.c0)))AND(t10.c30)))OR(t10.c0)))OR(t10.c30)))) DESC  NULLS FIRST, (- (((NULL) NOTNULL)))  NULLS FIRST;
SELECT ALL * FROM t10, vt0, vt1 WHERE (((NOT (t10.c0)) IN ())) ORDER BY ((((((((((t10.c0) IS FALSE))OR((+ (t10.c0)))))OR((- (t10.c30)))))OR(((t10.c30) BETWEEN (vt1.c0) AND (vt0.c0)))))AND(vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((NOT (t10.c0)) IN ())) IS TRUE)  as count FROM t10, vt0, vt1 ORDER BY ((((((((((t10.c0) IS FALSE))OR((+ (t10.c0)))))OR((- (t10.c30)))))OR(((t10.c30) BETWEEN (vt1.c0) AND (vt0.c0)))))AND(vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM t10, vt0, vt1 WHERE (((NOT (t10.c0)) IN ())) ORDER BY ((((((((((t10.c0) IS FALSE))OR((+ (t10.c0)))))OR((- (t10.c30)))))OR(((t10.c30) BETWEEN (vt1.c0) AND (vt0.c0)))))AND(vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((NOT (t10.c0)) IN ())) IS TRUE)  as count FROM t10, vt0, vt1 ORDER BY ((((((((((t10.c0) IS FALSE))OR((+ (t10.c0)))))OR((- (t10.c30)))))OR(((t10.c30) BETWEEN (vt1.c0) AND (vt0.c0)))))AND(vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM t10, vt0, vt1 WHERE (((NOT (t10.c0)) IN ())) ORDER BY ((((((((((t10.c0) IS FALSE))OR((+ (t10.c0)))))OR((- (t10.c30)))))OR(((t10.c30) BETWEEN (vt1.c0) AND (vt0.c0)))))AND(vt1.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t10 ON CASE ((vt0.c0)>>(t10.c0))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) ISNULL) ELSE ((t10.c30)>(t10.c30)) END WHERE (t10.c30 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t10.c30 COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t10 ON CASE ((vt0.c0)>>(t10.c0))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) ISNULL) ELSE ((t10.c30)>(t10.c30)) END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t10 ON CASE ((vt0.c0)>>(t10.c0))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) ISNULL) ELSE ((t10.c30)>(t10.c30)) END WHERE (t10.c30 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t10.c30 COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t10 ON CASE ((vt0.c0)>>(t10.c0))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) ISNULL) ELSE ((t10.c30)>(t10.c30)) END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t10 ON CASE ((vt0.c0)>>(t10.c0))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) ISNULL) ELSE ((t10.c30)>(t10.c30)) END WHERE (t10.c30 COLLATE RTRIM);
SELECT ALL * FROM t10 WHERE (0.020986030000388456);
SELECT SUM(count) FROM (SELECT ALL ((0.020986030000388456) IS TRUE)  as count FROM t10);
SELECT ALL * FROM t10 WHERE (0.020986030000388456);
SELECT SUM(count) FROM (SELECT ALL ((0.020986030000388456) IS TRUE)  as count FROM t10);
SELECT ALL * FROM t10 WHERE (0.020986030000388456);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((t0.c0)>(t0.c0)) THEN vt0.c0 ELSE ((((((((t10.c30)AND(t0.c87)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)) END INNER JOIN t0 ON CAST(CAST(t0.c87 AS INTEGER) AS INTEGER) CROSS JOIN t10 ON '453177610' WHERE ((((t10.c0)) NOT BETWEEN (((+ (t0.c87)))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t10.c0)) NOT BETWEEN (((+ (t0.c87)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((t0.c0)>(t0.c0)) THEN vt0.c0 ELSE ((((((((t10.c30)AND(t0.c87)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)) END INNER JOIN t0 ON CAST(CAST(t0.c87 AS INTEGER) AS INTEGER) CROSS JOIN t10 ON '453177610');
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((t0.c0)>(t0.c0)) THEN vt0.c0 ELSE ((((((((t10.c30)AND(t0.c87)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)) END INNER JOIN t0 ON CAST(CAST(t0.c87 AS INTEGER) AS INTEGER) CROSS JOIN t10 ON '453177610' WHERE ((((t10.c0)) NOT BETWEEN (((+ (t0.c87)))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t10.c0)) NOT BETWEEN (((+ (t0.c87)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((t0.c0)>(t0.c0)) THEN vt0.c0 ELSE ((((((((t10.c30)AND(t0.c87)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)) END INNER JOIN t0 ON CAST(CAST(t0.c87 AS INTEGER) AS INTEGER) CROSS JOIN t10 ON '453177610');
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((t0.c0)>(t0.c0)) THEN vt0.c0 ELSE ((((((((t10.c30)AND(t0.c87)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)) END INNER JOIN t0 ON CAST(CAST(t0.c87 AS INTEGER) AS INTEGER) CROSS JOIN t10 ON '453177610' WHERE ((((t10.c0)) NOT BETWEEN (((+ (t0.c87)))) AND (((vt0.c0 IN ())))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE COLLATE BINARY);
SELECT * FROM vt0, vt1, t10 WHERE (CASE WHEN ((vt1.c0)>(t10.c0)) THEN CASE WHEN '1881430926' THEN vt0.c0 ELSE t10.c0 END ELSE ((t10.c0) BETWEEN (t10.c0) AND (t10.c30)) END) ORDER BY ((((('k뾨', t10.c0, t10.c30)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))))IS(((vt1.c0)LIKE(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)>(t10.c0)) THEN CASE WHEN '1881430926' THEN vt0.c0 ELSE t10.c0 END ELSE ((t10.c0) BETWEEN (t10.c0) AND (t10.c30)) END) IS TRUE)  as count FROM vt0, vt1, t10 ORDER BY ((((('k뾨', t10.c0, t10.c30)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))))IS(((vt1.c0)LIKE(vt1.c0))))  NULLS LAST);
SELECT * FROM vt0, vt1, t10 WHERE (CASE WHEN ((vt1.c0)>(t10.c0)) THEN CASE WHEN '1881430926' THEN vt0.c0 ELSE t10.c0 END ELSE ((t10.c0) BETWEEN (t10.c0) AND (t10.c30)) END) ORDER BY ((((('k뾨', t10.c0, t10.c30)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))))IS(((vt1.c0)LIKE(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)>(t10.c0)) THEN CASE WHEN '1881430926' THEN vt0.c0 ELSE t10.c0 END ELSE ((t10.c0) BETWEEN (t10.c0) AND (t10.c30)) END) IS TRUE)  as count FROM vt0, vt1, t10 ORDER BY ((((('k뾨', t10.c0, t10.c30)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))))IS(((vt1.c0)LIKE(vt1.c0))))  NULLS LAST);
SELECT * FROM vt0, vt1, t10 WHERE (CASE WHEN ((vt1.c0)>(t10.c0)) THEN CASE WHEN '1881430926' THEN vt0.c0 ELSE t10.c0 END ELSE ((t10.c0) BETWEEN (t10.c0) AND (t10.c30)) END) ORDER BY ((((('k뾨', t10.c0, t10.c30)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))))IS(((vt1.c0)LIKE(vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t10, vt1 WHERE (LIKELIHOOD((((t10.c0))>((vt1.c0))), 0.19055168941068013)) ORDER BY (- (json(t10.c30))) DESC, (((t10.c0)) BETWEEN ((((vt1.c0)-(t10.c30)))) AND ((((((((((t10.c0)AND(t10.c0)))AND(t10.c30)))AND(vt1.c0)))AND(vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((t10.c0))>((vt1.c0))), 0.19055168941068013)) IS TRUE)  as count FROM t10, vt1 ORDER BY (- (json(t10.c30))) DESC, (((t10.c0)) BETWEEN ((((vt1.c0)-(t10.c30)))) AND ((((((((((t10.c0)AND(t10.c0)))AND(t10.c30)))AND(vt1.c0)))AND(vt1.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t10, vt1 WHERE (LIKELIHOOD((((t10.c0))>((vt1.c0))), 0.19055168941068013)) ORDER BY (- (json(t10.c30))) DESC, (((t10.c0)) BETWEEN ((((vt1.c0)-(t10.c30)))) AND ((((((((((t10.c0)AND(t10.c0)))AND(t10.c30)))AND(vt1.c0)))AND(vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((t10.c0))>((vt1.c0))), 0.19055168941068013)) IS TRUE)  as count FROM t10, vt1 ORDER BY (- (json(t10.c30))) DESC, (((t10.c0)) BETWEEN ((((vt1.c0)-(t10.c30)))) AND ((((((((((t10.c0)AND(t10.c0)))AND(t10.c30)))AND(vt1.c0)))AND(vt1.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t10, vt1 WHERE (LIKELIHOOD((((t10.c0))>((vt1.c0))), 0.19055168941068013)) ORDER BY (- (json(t10.c30))) DESC, (((t10.c0)) BETWEEN ((((vt1.c0)-(t10.c30)))) AND ((((((((((t10.c0)AND(t10.c0)))AND(t10.c30)))AND(vt1.c0)))AND(vt1.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN t0 ON CAST(((vt0.c0) NOT NULL) AS INTEGER) FULL OUTER JOIN t10 ON ((((((((((((((vt1.c0)IS(vt1.c0)))AND(CAST(t0.c0 AS TEXT))))AND(vt0.c0)))AND((t0.c0 IN (vt0.c0)))))OR((((t0.c87, t0.c0, '-361124900'))>=((NULL, t0.c0, '-1809912124'))))))OR(t10.c0)))AND(((((vt0.c0)AND(t0.c87)))AND(t0.c0)))) CROSS JOIN vt1 ON 0.9521635467630889 WHERE (CASE ((t0.c0)<=('-12549817'))  WHEN ((t0.c0) IS FALSE) THEN ((((t0.c87)AND(vt1.c0)))OR(vt1.c0)) WHEN (vt1.c0 IN (t10.c0)) THEN t10.c0 COLLATE NOCASE WHEN ((t0.c0)<=('K{hN)')) THEN ((t0.c87)OR('317950927')) ELSE ((t10.c0)||(t0.c0)) END) ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CAST(x'941e' AS REAL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)<=('-12549817'))  WHEN ((t0.c0) IS FALSE) THEN ((((t0.c87)AND(vt1.c0)))OR(vt1.c0)) WHEN (vt1.c0 IN (t10.c0)) THEN t10.c0 COLLATE NOCASE WHEN ((t0.c0)<=('K{hN)')) THEN ((t0.c87)OR('317950927')) ELSE ((t10.c0)||(t0.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST(((vt0.c0) NOT NULL) AS INTEGER) FULL OUTER JOIN t10 ON ((((((((((((((vt1.c0)IS(vt1.c0)))AND(CAST(t0.c0 AS TEXT))))AND(vt0.c0)))AND((t0.c0 IN (vt0.c0)))))OR((((t0.c87, t0.c0, '-361124900'))>=((NULL, t0.c0, '-1809912124'))))))OR(t10.c0)))AND(((((vt0.c0)AND(t0.c87)))AND(t0.c0)))) CROSS JOIN vt1 ON 0.9521635467630889 ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CAST(x'941e' AS REAL)))) ASC);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON CAST(((vt0.c0) NOT NULL) AS INTEGER) FULL OUTER JOIN t10 ON ((((((((((((((vt1.c0)IS(vt1.c0)))AND(CAST(t0.c0 AS TEXT))))AND(vt0.c0)))AND((t0.c0 IN (vt0.c0)))))OR((((t0.c87, t0.c0, '-361124900'))>=((NULL, t0.c0, '-1809912124'))))))OR(t10.c0)))AND(((((vt0.c0)AND(t0.c87)))AND(t0.c0)))) CROSS JOIN vt1 ON 0.9521635467630889 WHERE (CASE ((t0.c0)<=('-12549817'))  WHEN ((t0.c0) IS FALSE) THEN ((((t0.c87)AND(vt1.c0)))OR(vt1.c0)) WHEN (vt1.c0 IN (t10.c0)) THEN t10.c0 COLLATE NOCASE WHEN ((t0.c0)<=('K{hN)')) THEN ((t0.c87)OR('317950927')) ELSE ((t10.c0)||(t0.c0)) END) ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CAST(x'941e' AS REAL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)<=('-12549817'))  WHEN ((t0.c0) IS FALSE) THEN ((((t0.c87)AND(vt1.c0)))OR(vt1.c0)) WHEN (vt1.c0 IN (t10.c0)) THEN t10.c0 COLLATE NOCASE WHEN ((t0.c0)<=('K{hN)')) THEN ((t0.c87)OR('317950927')) ELSE ((t10.c0)||(t0.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST(((vt0.c0) NOT NULL) AS INTEGER) FULL OUTER JOIN t10 ON ((((((((((((((vt1.c0)IS(vt1.c0)))AND(CAST(t0.c0 AS TEXT))))AND(vt0.c0)))AND((t0.c0 IN (vt0.c0)))))OR((((t0.c87, t0.c0, '-361124900'))>=((NULL, t0.c0, '-1809912124'))))))OR(t10.c0)))AND(((((vt0.c0)AND(t0.c87)))AND(t0.c0)))) CROSS JOIN vt1 ON 0.9521635467630889 ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CAST(x'941e' AS REAL)))) ASC);
SELECT COUNT(*) FROM t10, vt0 WHERE (((t10.c0 COLLATE BINARY) BETWEEN ((t10.c30 IN (t10.c0, t10.c0))) AND (((vt0.c0)>(t10.c30)))));
SELECT SUM(count) FROM (SELECT ((((t10.c0 COLLATE BINARY) BETWEEN ((t10.c30 IN (t10.c0, t10.c0))) AND (((vt0.c0)>(t10.c30))))) IS TRUE)  as count FROM t10, vt0);
SELECT COUNT(*) FROM t10, vt0 WHERE (((t10.c0 COLLATE BINARY) BETWEEN ((t10.c30 IN (t10.c0, t10.c0))) AND (((vt0.c0)>(t10.c30)))));
SELECT SUM(count) FROM (SELECT ((((t10.c0 COLLATE BINARY) BETWEEN ((t10.c30 IN (t10.c0, t10.c0))) AND (((vt0.c0)>(t10.c30))))) IS TRUE)  as count FROM t10, vt0);
SELECT COUNT(*) FROM t10, vt0 WHERE (((t10.c0 COLLATE BINARY) BETWEEN ((t10.c30 IN (t10.c0, t10.c0))) AND (((vt0.c0)>(t10.c30)))));
SELECT ALL * FROM vt0, t10 WHERE ((- (((((((((t10.c0)OR(t10.c0)))AND('')))OR(t10.c30)))OR(t10.c30)))));
SELECT SUM(count) FROM (SELECT (((- (((((((((t10.c0)OR(t10.c0)))AND('')))OR(t10.c30)))OR(t10.c30))))) IS TRUE)  as count FROM vt0, t10);
SELECT ALL * FROM vt0, t10 WHERE ((- (((((((((t10.c0)OR(t10.c0)))AND('')))OR(t10.c30)))OR(t10.c30)))));
SELECT SUM(count) FROM (SELECT (((- (((((((((t10.c0)OR(t10.c0)))AND('')))OR(t10.c30)))OR(t10.c30))))) IS TRUE)  as count FROM vt0, t10);
SELECT ALL * FROM vt0, t10 WHERE ((- (((((((((t10.c0)OR(t10.c0)))AND('')))OR(t10.c30)))OR(t10.c30)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t10 WHERE (CASE WHEN t10.c0 THEN t10.c30 END COLLATE RTRIM) ORDER BY CASE WHEN ((vt1.c0)AND(vt0.c0)) THEN (t10.c0 IN ()) WHEN (- (t10.c0)) THEN ((t10.c0)*(vt1.c0)) WHEN x'0ad5' THEN ROUND(t10.c0, vt0.c0) WHEN CAST(t10.c30 AS INTEGER) THEN t10.c0 COLLATE NOCASE WHEN t10.c30 COLLATE BINARY THEN ((((0.33417965905526625)AND(t10.c0)))AND(vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t10.c0 THEN t10.c30 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t10 ORDER BY CASE WHEN ((vt1.c0)AND(vt0.c0)) THEN (t10.c0 IN ()) WHEN (- (t10.c0)) THEN ((t10.c0)*(vt1.c0)) WHEN x'0ad5' THEN ROUND(t10.c0, vt0.c0) WHEN CAST(t10.c30 AS INTEGER) THEN t10.c0 COLLATE NOCASE WHEN t10.c30 COLLATE BINARY THEN ((((0.33417965905526625)AND(t10.c0)))AND(vt0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t10 WHERE (CASE WHEN t10.c0 THEN t10.c30 END COLLATE RTRIM) ORDER BY CASE WHEN ((vt1.c0)AND(vt0.c0)) THEN (t10.c0 IN ()) WHEN (- (t10.c0)) THEN ((t10.c0)*(vt1.c0)) WHEN x'0ad5' THEN ROUND(t10.c0, vt0.c0) WHEN CAST(t10.c30 AS INTEGER) THEN t10.c0 COLLATE NOCASE WHEN t10.c30 COLLATE BINARY THEN ((((0.33417965905526625)AND(t10.c0)))AND(vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t10.c0 THEN t10.c30 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t10 ORDER BY CASE WHEN ((vt1.c0)AND(vt0.c0)) THEN (t10.c0 IN ()) WHEN (- (t10.c0)) THEN ((t10.c0)*(vt1.c0)) WHEN x'0ad5' THEN ROUND(t10.c0, vt0.c0) WHEN CAST(t10.c30 AS INTEGER) THEN t10.c0 COLLATE NOCASE WHEN t10.c30 COLLATE BINARY THEN ((((0.33417965905526625)AND(t10.c0)))AND(vt0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t10 WHERE (CASE WHEN t10.c0 THEN t10.c30 END COLLATE RTRIM) ORDER BY CASE WHEN ((vt1.c0)AND(vt0.c0)) THEN (t10.c0 IN ()) WHEN (- (t10.c0)) THEN ((t10.c0)*(vt1.c0)) WHEN x'0ad5' THEN ROUND(t10.c0, vt0.c0) WHEN CAST(t10.c30 AS INTEGER) THEN t10.c0 COLLATE NOCASE WHEN t10.c30 COLLATE BINARY THEN ((((0.33417965905526625)AND(t10.c0)))AND(vt0.c0)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (UPPER(CAST(t0.c87 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CAST(t0.c87 AS NUMERIC))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (UPPER(CAST(t0.c87 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CAST(t0.c87 AS NUMERIC))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (UPPER(CAST(t0.c87 AS NUMERIC)));
SELECT COUNT(*) FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL))OR((vt1.c0 IN ()))))AND(('' IN (x'', vt1.c0))))) ORDER BY (+ (((vt1.c0)+(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS REAL))OR((vt1.c0 IN ()))))AND(('' IN (x'', vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c0)+(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL))OR((vt1.c0 IN ()))))AND(('' IN (x'', vt1.c0))))) ORDER BY (+ (((vt1.c0)+(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS REAL))OR((vt1.c0 IN ()))))AND(('' IN (x'', vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c0)+(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL))OR((vt1.c0 IN ()))))AND(('' IN (x'', vt1.c0))))) ORDER BY (+ (((vt1.c0)+(vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON ((((t0.c87 COLLATE RTRIM)OR('Lf')))OR((((t10.c30)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))))) CROSS JOIN vt0 ON (NOT (TRIM(t0.c0))) FULL OUTER JOIN t10 ON CASE WHEN (t0.c87 IN ()) THEN CAST(t0.c0 AS REAL) ELSE ABS(DISTINCT vt1.c0) END WHERE (json_remove((NOT (NULL)), (((t10.c30))<((vt1.c0))))) ORDER BY (t10.c30 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_remove((NOT (NULL)), (((t10.c30))<((vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((t0.c87 COLLATE RTRIM)OR('Lf')))OR((((t10.c30)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))))) CROSS JOIN vt0 ON (NOT (TRIM(t0.c0))) FULL OUTER JOIN t10 ON CASE WHEN (t0.c87 IN ()) THEN CAST(t0.c0 AS REAL) ELSE ABS(DISTINCT vt1.c0) END ORDER BY (t10.c30 IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON ((((t0.c87 COLLATE RTRIM)OR('Lf')))OR((((t10.c30)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))))) CROSS JOIN vt0 ON (NOT (TRIM(t0.c0))) FULL OUTER JOIN t10 ON CASE WHEN (t0.c87 IN ()) THEN CAST(t0.c0 AS REAL) ELSE ABS(DISTINCT vt1.c0) END WHERE (json_remove((NOT (NULL)), (((t10.c30))<((vt1.c0))))) ORDER BY (t10.c30 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_remove((NOT (NULL)), (((t10.c30))<((vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((t0.c87 COLLATE RTRIM)OR('Lf')))OR((((t10.c30)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))))) CROSS JOIN vt0 ON (NOT (TRIM(t0.c0))) FULL OUTER JOIN t10 ON CASE WHEN (t0.c87 IN ()) THEN CAST(t0.c0 AS REAL) ELSE ABS(DISTINCT vt1.c0) END ORDER BY (t10.c30 IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY (((0.6732125861599507)) NOT BETWEEN ((((vt0.c0)/(vt0.c0)))) AND ((TRIM(DISTINCT vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (((0.6732125861599507)) NOT BETWEEN ((((vt0.c0)/(vt0.c0)))) AND ((TRIM(DISTINCT vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY (((0.6732125861599507)) NOT BETWEEN ((((vt0.c0)/(vt0.c0)))) AND ((TRIM(DISTINCT vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (((0.6732125861599507)) NOT BETWEEN ((((vt0.c0)/(vt0.c0)))) AND ((TRIM(DISTINCT vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY (((0.6732125861599507)) NOT BETWEEN ((((vt0.c0)/(vt0.c0)))) AND ((TRIM(DISTINCT vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t10 WHERE (((TYPEOF(DISTINCT 9.65875419E8))IS(((t10.c0) NOTNULL)))) ORDER BY t10.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT 9.65875419E8))IS(((t10.c0) NOTNULL)))) IS TRUE)  as count FROM t10 ORDER BY t10.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM t10 WHERE (((TYPEOF(DISTINCT 9.65875419E8))IS(((t10.c0) NOTNULL)))) ORDER BY t10.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT 9.65875419E8))IS(((t10.c0) NOTNULL)))) IS TRUE)  as count FROM t10 ORDER BY t10.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM t10 WHERE (((TYPEOF(DISTINCT 9.65875419E8))IS(((t10.c0) NOTNULL)))) ORDER BY t10.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED WHERE ((x'' IN ()));
SELECT ALL COUNT(*) FROM vt0, t10 WHERE ((- ((- (t10.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((- (t10.c0))))) IS TRUE)  as count FROM vt0, t10);
SELECT ALL COUNT(*) FROM vt0, t10 WHERE ((- ((- (t10.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((- (t10.c0))))) IS TRUE)  as count FROM vt0, t10);
SELECT ALL COUNT(*) FROM vt0, t10 WHERE ((- ((- (t10.c0)))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON (NOT (LIKELIHOOD('', 0.7778203714324021))) RIGHT OUTER JOIN t10 ON CASE WHEN CAST(t10.c0 AS TEXT) THEN COALESCE(t0.c87, vt1.c0, t0.c0, t10.c0) ELSE ((t0.c87)>=(t10.c30)) END WHERE (LIKELIHOOD(DISTINCT 1851845923, 0.32892889604284203));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT 1851845923, 0.32892889604284203)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (NOT (LIKELIHOOD('', 0.7778203714324021))) RIGHT OUTER JOIN t10 ON CASE WHEN CAST(t10.c0 AS TEXT) THEN COALESCE(t0.c87, vt1.c0, t0.c0, t10.c0) ELSE ((t0.c87)>=(t10.c30)) END);
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON (NOT (LIKELIHOOD('', 0.7778203714324021))) RIGHT OUTER JOIN t10 ON CASE WHEN CAST(t10.c0 AS TEXT) THEN COALESCE(t0.c87, vt1.c0, t0.c0, t10.c0) ELSE ((t0.c87)>=(t10.c30)) END WHERE (LIKELIHOOD(DISTINCT 1851845923, 0.32892889604284203));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT 1851845923, 0.32892889604284203)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (NOT (LIKELIHOOD('', 0.7778203714324021))) RIGHT OUTER JOIN t10 ON CASE WHEN CAST(t10.c0 AS TEXT) THEN COALESCE(t0.c87, vt1.c0, t0.c0, t10.c0) ELSE ((t0.c87)>=(t10.c30)) END);
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON (NOT (LIKELIHOOD('', 0.7778203714324021))) RIGHT OUTER JOIN t10 ON CASE WHEN CAST(t10.c0 AS TEXT) THEN COALESCE(t0.c87, vt1.c0, t0.c0, t10.c0) ELSE ((t0.c87)>=(t10.c30)) END WHERE (LIKELIHOOD(DISTINCT 1851845923, 0.32892889604284203));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON (t10.c0 IN ()) COLLATE RTRIM LEFT OUTER JOIN t10 ON (((vt1.c0) NOTNULL) IN ()) WHERE ((((vt1.c0)) NOT BETWEEN ((((t10.c0) BETWEEN (t0.c0) AND (t0.c87)))) AND ((((t10.c30) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((t10.c0) BETWEEN (t0.c0) AND (t0.c87)))) AND ((((t10.c30) IS FALSE))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (t10.c0 IN ()) COLLATE RTRIM LEFT OUTER JOIN t10 ON (((vt1.c0) NOTNULL) IN ()));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON (t10.c0 IN ()) COLLATE RTRIM LEFT OUTER JOIN t10 ON (((vt1.c0) NOTNULL) IN ()) WHERE ((((vt1.c0)) NOT BETWEEN ((((t10.c0) BETWEEN (t0.c0) AND (t0.c87)))) AND ((((t10.c30) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((t10.c0) BETWEEN (t0.c0) AND (t0.c87)))) AND ((((t10.c30) IS FALSE))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (t10.c0 IN ()) COLLATE RTRIM LEFT OUTER JOIN t10 ON (((vt1.c0) NOTNULL) IN ()));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON (t10.c0 IN ()) COLLATE RTRIM LEFT OUTER JOIN t10 ON (((vt1.c0) NOTNULL) IN ()) WHERE ((((vt1.c0)) NOT BETWEEN ((((t10.c0) BETWEEN (t0.c0) AND (t0.c87)))) AND ((((t10.c30) IS FALSE)))));
SELECT ALL * FROM vt0, t0, t10, vt1 WHERE ((((vt0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0, t0, t10, vt1);
SELECT ALL * FROM vt0, t0, t10, vt1 WHERE ((((vt0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0, t0, t10, vt1);
SELECT ALL * FROM vt0, t0, t10, vt1 WHERE ((((vt0.c0) ISNULL) IN ()));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt1, t10, t0 WHERE (HEX(DISTINCT ((t0.c87)/(vt0.c0)))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c87) AND (t10.c0)))%('')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((t0.c87)/(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1, t10, t0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c87) AND (t10.c0)))%('')) DESC);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt1, t10, t0 WHERE (HEX(DISTINCT ((t0.c87)/(vt0.c0)))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c87) AND (t10.c0)))%('')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((t0.c87)/(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1, t10, t0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c87) AND (t10.c0)))%('')) DESC);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt1, t10, t0 WHERE (HEX(DISTINCT ((t0.c87)/(vt0.c0)))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c87) AND (t10.c0)))%('')) DESC;
SELECT * FROM t0, t10, vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((t10.c0 COLLATE RTRIM)) AND ((NULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((t10.c0 COLLATE RTRIM)) AND ((NULL)))) IS TRUE)  as count FROM t0, t10, vt0, vt1);
SELECT * FROM t0, t10, vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((t10.c0 COLLATE RTRIM)) AND ((NULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((t10.c0 COLLATE RTRIM)) AND ((NULL)))) IS TRUE)  as count FROM t0, t10, vt0, vt1);
SELECT * FROM t0, t10, vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((t10.c0 COLLATE RTRIM)) AND ((NULL))));
SELECT COUNT(*) FROM t10 INNER JOIN t0 ON (((t0.c0) NOTNULL) IN ()) WHERE ((NOT ((t0.c87 IN ())))) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c87) AND (t10.c30)) THEN t0.c87 ELSE CAST(t0.c0 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c87 IN ())))) IS TRUE)  as count FROM t10 INNER JOIN t0 ON (((t0.c0) NOTNULL) IN ()) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c87) AND (t10.c30)) THEN t0.c87 ELSE CAST(t0.c0 AS INTEGER) END);
SELECT COUNT(*) FROM t10 INNER JOIN t0 ON (((t0.c0) NOTNULL) IN ()) WHERE ((NOT ((t0.c87 IN ())))) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c87) AND (t10.c30)) THEN t0.c87 ELSE CAST(t0.c0 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c87 IN ())))) IS TRUE)  as count FROM t10 INNER JOIN t0 ON (((t0.c0) NOTNULL) IN ()) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c87) AND (t10.c30)) THEN t0.c87 ELSE CAST(t0.c0 AS INTEGER) END);
SELECT COUNT(*) FROM t10 INNER JOIN t0 ON (((t0.c0) NOTNULL) IN ()) WHERE ((NOT ((t0.c87 IN ())))) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c87) AND (t10.c30)) THEN t0.c87 ELSE CAST(t0.c0 AS INTEGER) END;
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON x'' WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON x'');
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON x'' WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON x'');
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON x'' WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t10 WHERE (((+ (t10.c30)) IN (x'')));
SELECT SUM(count) FROM (SELECT ((((+ (t10.c30)) IN (x''))) IS TRUE)  as count FROM t10);
SELECT ALL COUNT(*) FROM t10 WHERE (((+ (t10.c30)) IN (x'')));
SELECT SUM(count) FROM (SELECT ((((+ (t10.c30)) IN (x''))) IS TRUE)  as count FROM t10);
SELECT ALL COUNT(*) FROM t10 WHERE (((+ (t10.c30)) IN (x'')));
SELECT ALL COUNT(*) FROM t10 WHERE ((NOT ((t10.c0 IN (t10.c0, t10.c30)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t10.c0 IN (t10.c0, t10.c30))))) IS TRUE)  as count FROM t10);
SELECT ALL COUNT(*) FROM t10 WHERE ((NOT ((t10.c0 IN (t10.c0, t10.c30)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t10.c0 IN (t10.c0, t10.c30))))) IS TRUE)  as count FROM t10);
SELECT ALL COUNT(*) FROM t10 WHERE ((NOT ((t10.c0 IN (t10.c0, t10.c30)))));
SELECT ALL * FROM t10, t0, vt1 WHERE (((((t10.c0)/(t10.c0))) NOT BETWEEN (((((((((t10.c0)AND(vt1.c0)))OR(NULL)))OR(t10.c0)))AND(t0.c0))) AND (CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c0)/(t10.c0))) NOT BETWEEN (((((((((t10.c0)AND(vt1.c0)))OR(NULL)))OR(t10.c0)))AND(t0.c0))) AND (CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t10, t0, vt1);
SELECT ALL * FROM t10, t0, vt1 WHERE (((((t10.c0)/(t10.c0))) NOT BETWEEN (((((((((t10.c0)AND(vt1.c0)))OR(NULL)))OR(t10.c0)))AND(t0.c0))) AND (CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c0)/(t10.c0))) NOT BETWEEN (((((((((t10.c0)AND(vt1.c0)))OR(NULL)))OR(t10.c0)))AND(t0.c0))) AND (CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t10, t0, vt1);
SELECT ALL * FROM t10, t0, vt1 WHERE (((((t10.c0)/(t10.c0))) NOT BETWEEN (((((((((t10.c0)AND(vt1.c0)))OR(NULL)))OR(t10.c0)))AND(t0.c0))) AND (CAST(t0.c0 AS BLOB))));
SELECT COUNT(*) FROM t10, vt0 WHERE ((((((0.823187425853019) BETWEEN (vt0.c0) AND (t10.c0))))!=(((- (t10.c30)))))) ORDER BY ((((((((IFNULL(DISTINCT vt0.c0, t10.c0))OR(((((x'')AND(t10.c0)))AND(t10.c30)))))AND(((t10.c30) ISNULL))))AND(CAST(x'' AS NUMERIC))))OR(((t10.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((0.823187425853019) BETWEEN (vt0.c0) AND (t10.c0))))!=(((- (t10.c30)))))) IS TRUE)  as count FROM t10, vt0 ORDER BY ((((((((IFNULL(DISTINCT vt0.c0, t10.c0))OR(((((x'')AND(t10.c0)))AND(t10.c30)))))AND(((t10.c30) ISNULL))))AND(CAST(x'' AS NUMERIC))))OR(((t10.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM t10, vt0 WHERE ((((((0.823187425853019) BETWEEN (vt0.c0) AND (t10.c0))))!=(((- (t10.c30)))))) ORDER BY ((((((((IFNULL(DISTINCT vt0.c0, t10.c0))OR(((((x'')AND(t10.c0)))AND(t10.c30)))))AND(((t10.c30) ISNULL))))AND(CAST(x'' AS NUMERIC))))OR(((t10.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((0.823187425853019) BETWEEN (vt0.c0) AND (t10.c0))))!=(((- (t10.c30)))))) IS TRUE)  as count FROM t10, vt0 ORDER BY ((((((((IFNULL(DISTINCT vt0.c0, t10.c0))OR(((((x'')AND(t10.c0)))AND(t10.c30)))))AND(((t10.c30) ISNULL))))AND(CAST(x'' AS NUMERIC))))OR(((t10.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM t10, vt0 WHERE ((((((0.823187425853019) BETWEEN (vt0.c0) AND (t10.c0))))!=(((- (t10.c30)))))) ORDER BY ((((((((IFNULL(DISTINCT vt0.c0, t10.c0))OR(((((x'')AND(t10.c0)))AND(t10.c30)))))AND(((t10.c30) ISNULL))))AND(CAST(x'' AS NUMERIC))))OR(((t10.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT COUNT(*) FROM t10, vt1, t0 WHERE (((vt1.c0)>=(t10.c30)) COLLATE RTRIM) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=(t10.c30)) COLLATE RTRIM) IS TRUE)  as count FROM t10, vt1, t0 ORDER BY NULL ASC);
SELECT COUNT(*) FROM t10, vt1, t0 WHERE (((vt1.c0)>=(t10.c30)) COLLATE RTRIM) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=(t10.c30)) COLLATE RTRIM) IS TRUE)  as count FROM t10, vt1, t0 ORDER BY NULL ASC);
SELECT COUNT(*) FROM t10, vt1, t0 WHERE (((vt1.c0)>=(t10.c30)) COLLATE RTRIM) ORDER BY NULL ASC;
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN t0 ON ((IFNULL(DISTINCT '-1300686217', t0.c87)) BETWEEN ((('1945928635') NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (vt1.c0)) RIGHT OUTER JOIN t10 ON NULL WHERE (((t10.c30) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t10.c30) ISNULL)) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON ((IFNULL(DISTINCT '-1300686217', t0.c87)) BETWEEN ((('1945928635') NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (vt1.c0)) RIGHT OUTER JOIN t10 ON NULL);
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN t0 ON ((IFNULL(DISTINCT '-1300686217', t0.c87)) BETWEEN ((('1945928635') NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (vt1.c0)) RIGHT OUTER JOIN t10 ON NULL WHERE (((t10.c30) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t10.c30) ISNULL)) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON ((IFNULL(DISTINCT '-1300686217', t0.c87)) BETWEEN ((('1945928635') NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (vt1.c0)) RIGHT OUTER JOIN t10 ON NULL);
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN t0 ON ((IFNULL(DISTINCT '-1300686217', t0.c87)) BETWEEN ((('1945928635') NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (vt1.c0)) RIGHT OUTER JOIN t10 ON NULL WHERE (((t10.c30) ISNULL));
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS BLOB));
SELECT * FROM vt0, t10, vt1, t0 WHERE (((TRIM(DISTINCT vt0.c0, vt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c0, vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0, t10, vt1, t0);
SELECT * FROM vt0, t10, vt1, t0 WHERE (((TRIM(DISTINCT vt0.c0, vt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c0, vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0, t10, vt1, t0);
SELECT * FROM vt0, t10, vt1, t0 WHERE (((TRIM(DISTINCT vt0.c0, vt0.c0)) ISNULL));
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN t10 ON (((+ (t10.c0)))<<((NOT (vt1.c0)))) INNER JOIN vt1 ON ((vt0.c0)==(vt0.c0)) COLLATE NOCASE WHERE (0.5989888215076868);
SELECT SUM(count) FROM (SELECT ALL ((0.5989888215076868) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN t10 ON (((+ (t10.c0)))<<((NOT (vt1.c0)))) INNER JOIN vt1 ON ((vt0.c0)=(vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN t10 ON (((+ (t10.c0)))<<((NOT (vt1.c0)))) INNER JOIN vt1 ON ((vt0.c0)==(vt0.c0)) COLLATE NOCASE WHERE (0.5989888215076868);
SELECT SUM(count) FROM (SELECT ALL ((0.5989888215076868) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN t10 ON (((+ (t10.c0)))<<((NOT (vt1.c0)))) INNER JOIN vt1 ON ((vt0.c0)=(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN vt1 ON CASE CASE t0.c87  WHEN t0.c0 THEN NULL WHEN t0.c87 THEN vt0.c0 WHEN t0.c0 THEN x'' WHEN vt0.c0 THEN '?*Y.w' WHEN x'' THEN vt1.c0 END  WHEN (~ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR('oDsTAYF')))AND(t0.c0)) END WHERE ('890354680');
SELECT SUM(count) FROM (SELECT (('890354680') IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON CASE CASE t0.c87  WHEN t0.c0 THEN NULL WHEN t0.c87 THEN vt0.c0 WHEN t0.c0 THEN x'' WHEN vt0.c0 THEN '?*Y.w' WHEN x'' THEN vt1.c0 END  WHEN (~ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR('oDsTAYF')))AND(t0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN vt1 ON CASE CASE t0.c87  WHEN t0.c0 THEN NULL WHEN t0.c87 THEN vt0.c0 WHEN t0.c0 THEN x'' WHEN vt0.c0 THEN '?*Y.w' WHEN x'' THEN vt1.c0 END  WHEN (~ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR('oDsTAYF')))AND(t0.c0)) END WHERE ('890354680');
SELECT SUM(count) FROM (SELECT (('890354680') IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON CASE CASE t0.c87  WHEN t0.c0 THEN NULL WHEN t0.c87 THEN vt0.c0 WHEN t0.c0 THEN x'' WHEN vt0.c0 THEN '?*Y.w' WHEN x'' THEN vt1.c0 END  WHEN (~ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR('oDsTAYF')))AND(t0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN vt1 ON CASE CASE t0.c87  WHEN t0.c0 THEN NULL WHEN t0.c87 THEN vt0.c0 WHEN t0.c0 THEN x'' WHEN vt0.c0 THEN '?*Y.w' WHEN x'' THEN vt1.c0 END  WHEN (~ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))OR('oDsTAYF')))AND(t0.c0)) END WHERE ('890354680');
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON LIKELY(CAST(t0.c0 AS BLOB)) WHERE ((('1950835647') ISNULL)) ORDER BY ((CASE WHEN t0.c87 THEN t0.c0 END)OR(-1.561960066E9));
SELECT SUM(count) FROM (SELECT ALL (((('1950835647') ISNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON LIKELY(CAST(t0.c0 AS BLOB)) ORDER BY ((CASE WHEN t0.c87 THEN t0.c0 END)OR(-1.561960066E9)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON LIKELY(CAST(t0.c0 AS BLOB)) WHERE ((('1950835647') ISNULL)) ORDER BY ((CASE WHEN t0.c87 THEN t0.c0 END)OR(-1.561960066E9));
SELECT SUM(count) FROM (SELECT ALL (((('1950835647') ISNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON LIKELY(CAST(t0.c0 AS BLOB)) ORDER BY ((CASE WHEN t0.c87 THEN t0.c0 END)OR(-1.561960066E9)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON LIKELY(CAST(t0.c0 AS BLOB)) WHERE ((('1950835647') ISNULL)) ORDER BY ((CASE WHEN t0.c87 THEN t0.c0 END)OR(-1.561960066E9));
SELECT ALL * FROM vt1 WHERE (TRIM(DISTINCT 0.9442479876362712, (vt1.c0 IN (vt1.c0)))) ORDER BY CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)AND('6f')) WHEN vt1.c0 THEN CAST(vt1.c0 AS NUMERIC) WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN (vt1.c0 IN (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 'N?' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN vt1.c0 THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT 0.9442479876362712, (vt1.c0 IN (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)AND('6f')) WHEN vt1.c0 THEN CAST(vt1.c0 AS NUMERIC) WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN (vt1.c0 IN (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 'N?' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN vt1.c0 THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END);
SELECT ALL * FROM vt1 WHERE (TRIM(DISTINCT 0.9442479876362712, (vt1.c0 IN (vt1.c0)))) ORDER BY CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)AND('6f')) WHEN vt1.c0 THEN CAST(vt1.c0 AS NUMERIC) WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN (vt1.c0 IN (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 'N?' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN vt1.c0 THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT 0.9442479876362712, (vt1.c0 IN (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)AND('6f')) WHEN vt1.c0 THEN CAST(vt1.c0 AS NUMERIC) WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN (vt1.c0 IN (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 'N?' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN vt1.c0 THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END);
SELECT ALL * FROM vt1 WHERE (TRIM(DISTINCT 0.9442479876362712, (vt1.c0 IN (vt1.c0)))) ORDER BY CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)AND('6f')) WHEN vt1.c0 THEN CAST(vt1.c0 AS NUMERIC) WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN (vt1.c0 IN (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 'N?' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN vt1.c0 THEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END;
SELECT ALL COUNT(*) FROM t10, vt1 NOT INDEXED WHERE (((((vt1.c0)>=(vt1.c0)))<(((t10.c0)-(t10.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(vt1.c0)))<(((t10.c0)-(t10.c0))))) IS TRUE)  as count FROM t10, vt1);
SELECT ALL COUNT(*) FROM t10, vt1 NOT INDEXED WHERE (((((vt1.c0)>=(vt1.c0)))<(((t10.c0)-(t10.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(vt1.c0)))<(((t10.c0)-(t10.c0))))) IS TRUE)  as count FROM t10, vt1);
SELECT ALL COUNT(*) FROM t10, vt1 NOT INDEXED WHERE (((((vt1.c0)>=(vt1.c0)))<(((t10.c0)-(t10.c0)))));
SELECT ALL COUNT(*) FROM t10 INNER JOIN vt1 ON ((t0.c87)<(vt1.c0)) COLLATE BINARY FULL OUTER JOIN vt0 ON t10.c0 LEFT OUTER JOIN t0 ON ((((((((TYPEOF(DISTINCT t0.c0))AND(CASE t0.c0  WHEN t10.c30 THEN t10.c0 ELSE t10.c0 END)))AND(((t0.c0)*(t0.c0)))))AND((vt0.c0 IN ()))))AND(NULL)) WHERE ((((((t0.c0, t0.c0, t0.c0))>=((vt1.c0, t10.c30, vt1.c0))))==(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c0, t0.c0))>=((vt1.c0, t10.c30, vt1.c0))))=(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t10 INNER JOIN vt1 ON ((t0.c87)<(vt1.c0)) COLLATE BINARY FULL OUTER JOIN vt0 ON t10.c0 LEFT OUTER JOIN t0 ON ((((((((TYPEOF(DISTINCT t0.c0))AND(CASE t0.c0  WHEN t10.c30 THEN t10.c0 ELSE t10.c0 END)))AND(((t0.c0)*(t0.c0)))))AND((vt0.c0 IN ()))))AND(NULL)));
SELECT ALL COUNT(*) FROM t10 INNER JOIN vt1 ON ((t0.c87)<(vt1.c0)) COLLATE BINARY FULL OUTER JOIN vt0 ON t10.c0 LEFT OUTER JOIN t0 ON ((((((((TYPEOF(DISTINCT t0.c0))AND(CASE t0.c0  WHEN t10.c30 THEN t10.c0 ELSE t10.c0 END)))AND(((t0.c0)*(t0.c0)))))AND((vt0.c0 IN ()))))AND(NULL)) WHERE ((((((t0.c0, t0.c0, t0.c0))>=((vt1.c0, t10.c30, vt1.c0))))==(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c0, t0.c0))>=((vt1.c0, t10.c30, vt1.c0))))=(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t10 INNER JOIN vt1 ON ((t0.c87)<(vt1.c0)) COLLATE BINARY FULL OUTER JOIN vt0 ON t10.c0 LEFT OUTER JOIN t0 ON ((((((((TYPEOF(DISTINCT t0.c0))AND(CASE t0.c0  WHEN t10.c30 THEN t10.c0 ELSE t10.c0 END)))AND(((t0.c0)*(t0.c0)))))AND((vt0.c0 IN ()))))AND(NULL)));
SELECT * FROM vt1, t10 WHERE (((((x'')*(t10.c30)))%((vt1.c0 IN ())))) ORDER BY ((LOWER(t10.c0))GLOB(CAST(vt1.c0 AS INTEGER)))  NULLS FIRST, ((t10.c0 COLLATE RTRIM)IS(((t10.c0)>(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'')*(t10.c30)))%((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t10 ORDER BY ((LOWER(t10.c0))GLOB(CAST(vt1.c0 AS INTEGER)))  NULLS FIRST, ((t10.c0 COLLATE RTRIM)IS(((t10.c0)>(vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1, t10 WHERE (((((x'')*(t10.c30)))%((vt1.c0 IN ())))) ORDER BY ((LOWER(t10.c0))GLOB(CAST(vt1.c0 AS INTEGER)))  NULLS FIRST, ((t10.c0 COLLATE RTRIM)IS(((t10.c0)>(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'')*(t10.c30)))%((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t10 ORDER BY ((LOWER(t10.c0))GLOB(CAST(vt1.c0 AS INTEGER)))  NULLS FIRST, ((t10.c0 COLLATE RTRIM)IS(((t10.c0)>(vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1, t10 WHERE (((((x'')*(t10.c30)))%((vt1.c0 IN ())))) ORDER BY ((LOWER(t10.c0))GLOB(CAST(vt1.c0 AS INTEGER)))  NULLS FIRST, ((t10.c0 COLLATE RTRIM)IS(((t10.c0)>(vt1.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST((+ (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST((+ (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST((+ (vt1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((+ (((vt1.c0) BETWEEN (t0.c87) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) BETWEEN (t0.c87) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((+ (((vt1.c0) BETWEEN (t0.c87) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) BETWEEN (t0.c87) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((+ (((vt1.c0) BETWEEN (t0.c87) AND (vt1.c0)))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD((((('')AND(t0.c0)))OR(t10.c0)), 0.9360671024464596) FULL OUTER JOIN t10 ON 0.06492476232589994 RIGHT OUTER JOIN vt1 ON (CAST(vt0.c0 AS REAL) IN ()) WHERE ((CASE WHEN vt1.c0 THEN t0.c0 END IN ())) ORDER BY ((((((((CAST(t0.c87 AS TEXT))AND(t10.c30)))AND(t10.c30)))AND(((t0.c87) ISNULL))))OR(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN t0.c0 END IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD((((('')AND(t0.c0)))OR(t10.c0)), 0.9360671024464596) FULL OUTER JOIN t10 ON 0.06492476232589994 RIGHT OUTER JOIN vt1 ON (CAST(vt0.c0 AS REAL) IN ()) ORDER BY ((((((((CAST(t0.c87 AS TEXT))AND(t10.c30)))AND(t10.c30)))AND(((t0.c87) ISNULL))))OR(vt0.c0 COLLATE RTRIM)));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD((((('')AND(t0.c0)))OR(t10.c0)), 0.9360671024464596) FULL OUTER JOIN t10 ON 0.06492476232589994 RIGHT OUTER JOIN vt1 ON (CAST(vt0.c0 AS REAL) IN ()) WHERE ((CASE WHEN vt1.c0 THEN t0.c0 END IN ())) ORDER BY ((((((((CAST(t0.c87 AS TEXT))AND(t10.c30)))AND(t10.c30)))AND(((t0.c87) ISNULL))))OR(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN t0.c0 END IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD((((('')AND(t0.c0)))OR(t10.c0)), 0.9360671024464596) FULL OUTER JOIN t10 ON 0.06492476232589994 RIGHT OUTER JOIN vt1 ON (CAST(vt0.c0 AS REAL) IN ()) ORDER BY ((((((((CAST(t0.c87 AS TEXT))AND(t10.c30)))AND(t10.c30)))AND(((t0.c87) ISNULL))))OR(vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, t0, t10 WHERE ((t10.c0 COLLATE RTRIM IN ((((t10.c30, 0.49815757369323954, t0.c0))>((t10.c30, t10.c30, t0.c87)))))) ORDER BY CASE CAST(t0.c87 AS BLOB)  WHEN CAST(t0.c87 AS NUMERIC) THEN (+ (t0.c87)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t10.c0 COLLATE RTRIM IN ((((t10.c30, 0.49815757369323954, t0.c0))>((t10.c30, t10.c30, t0.c87)))))) IS TRUE)  as count FROM vt0, t0, t10 ORDER BY CASE CAST(t0.c87 AS BLOB)  WHEN CAST(t0.c87 AS NUMERIC) THEN (+ (t0.c87)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, t10 WHERE ((t10.c0 COLLATE RTRIM IN ((((t10.c30, 0.49815757369323954, t0.c0))>((t10.c30, t10.c30, t0.c87)))))) ORDER BY CASE CAST(t0.c87 AS BLOB)  WHEN CAST(t0.c87 AS NUMERIC) THEN (+ (t0.c87)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t10.c0 COLLATE RTRIM IN ((((t10.c30, 0.49815757369323954, t0.c0))>((t10.c30, t10.c30, t0.c87)))))) IS TRUE)  as count FROM vt0, t0, t10 ORDER BY CASE CAST(t0.c87 AS BLOB)  WHEN CAST(t0.c87 AS NUMERIC) THEN (+ (t0.c87)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, t10 WHERE ((t10.c0 COLLATE RTRIM IN ((((t10.c30, 0.49815757369323954, t0.c0))>((t10.c30, t10.c30, t0.c87)))))) ORDER BY CASE CAST(t0.c87 AS BLOB)  WHEN CAST(t0.c87 AS NUMERIC) THEN (+ (t0.c87)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM t10, vt1 WHERE (((((t10.c0) IS TRUE))/((NOT (t10.c30)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c0) IS TRUE))/((NOT (t10.c30))))) IS TRUE)  as count FROM t10, vt1);
SELECT COUNT(*) FROM t10, vt1 WHERE (((((t10.c0) IS TRUE))/((NOT (t10.c30)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c0) IS TRUE))/((NOT (t10.c30))))) IS TRUE)  as count FROM t10, vt1);
SELECT COUNT(*) FROM t10, vt1 WHERE (((((t10.c0) IS TRUE))/((NOT (t10.c30)))));
SELECT ALL COUNT(*) FROM vt1, t10, t0 NATURAL JOIN vt0 WHERE (0.7113220580435013) ORDER BY ((((((((((vt1.c0)OR(t0.c87)))OR(t10.c30)))AND(t0.c87)))AND(vt1.c0)))GLOB((t0.c87 IN (t10.c30))));
SELECT SUM(count) FROM (SELECT ((0.7113220580435013) IS TRUE)  as count FROM vt1, t10, t0 NATURAL JOIN vt0 ORDER BY ((((((((((vt1.c0)OR(t0.c87)))OR(t10.c30)))AND(t0.c87)))AND(vt1.c0)))GLOB((t0.c87 IN (t10.c30)))));
SELECT ALL COUNT(*) FROM vt1, t10, t0 NATURAL JOIN vt0 WHERE (0.7113220580435013) ORDER BY ((((((((((vt1.c0)OR(t0.c87)))OR(t10.c30)))AND(t0.c87)))AND(vt1.c0)))GLOB((t0.c87 IN (t10.c30))));
SELECT SUM(count) FROM (SELECT ((0.7113220580435013) IS TRUE)  as count FROM vt1, t10, t0 NATURAL JOIN vt0 ORDER BY ((((((((((vt1.c0)OR(t0.c87)))OR(t10.c30)))AND(t0.c87)))AND(vt1.c0)))GLOB((t0.c87 IN (t10.c30)))));
SELECT ALL COUNT(*) FROM vt1, t10, t0 NATURAL JOIN vt0 WHERE (0.7113220580435013) ORDER BY ((((((((((vt1.c0)OR(t0.c87)))OR(t10.c30)))AND(t0.c87)))AND(vt1.c0)))GLOB((t0.c87 IN (t10.c30))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (json_valid(vt0.c0)))) ORDER BY (((- (vt0.c0))) IS FALSE), (((x'9ded') IS FALSE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (json_valid(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) IS FALSE), (((x'9ded') IS FALSE) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (json_valid(vt0.c0)))) ORDER BY (((- (vt0.c0))) IS FALSE), (((x'9ded') IS FALSE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (json_valid(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) IS FALSE), (((x'9ded') IS FALSE) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (json_valid(vt0.c0)))) ORDER BY (((- (vt0.c0))) IS FALSE), (((x'9ded') IS FALSE) IN ()) ASC;
SELECT COUNT(*) FROM t0 WHERE (json_array(x'', (- (t0.c87)))) ORDER BY ((CAST(t0.c0 AS INTEGER)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((json_array(x'', (- (t0.c87)))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS INTEGER)) NOT NULL) ASC);
SELECT COUNT(*) FROM t0 WHERE (json_array(x'', (- (t0.c87)))) ORDER BY ((CAST(t0.c0 AS INTEGER)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((json_array(x'', (- (t0.c87)))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS INTEGER)) NOT NULL) ASC);
SELECT ALL * FROM t10 LEFT OUTER JOIN t0 ON ((((t10.c30) NOT NULL))IS NOT(((t10.c0)||(t0.c87)))) WHERE ((CASE WHEN t10.c30 THEN t0.c87 END IN ())) ORDER BY x'' ASC  NULLS FIRST, LOWER(DISTINCT ((t10.c30) IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t10.c30 THEN t0.c87 END IN ())) IS TRUE)  as count FROM t10 LEFT OUTER JOIN t0 ON ((((t10.c30) NOT NULL))IS NOT(((t10.c0)||(t0.c87)))) ORDER BY x'' ASC  NULLS FIRST, LOWER(DISTINCT ((t10.c30) IS TRUE)) DESC);
SELECT ALL * FROM t10 LEFT OUTER JOIN t0 ON ((((t10.c30) NOT NULL))IS NOT(((t10.c0)||(t0.c87)))) WHERE ((CASE WHEN t10.c30 THEN t0.c87 END IN ())) ORDER BY x'' ASC  NULLS FIRST, LOWER(DISTINCT ((t10.c30) IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t10.c30 THEN t0.c87 END IN ())) IS TRUE)  as count FROM t10 LEFT OUTER JOIN t0 ON ((((t10.c30) NOT NULL))IS NOT(((t10.c0)||(t0.c87)))) ORDER BY x'' ASC  NULLS FIRST, LOWER(DISTINCT ((t10.c30) IS TRUE)) DESC);
SELECT ALL * FROM t10 LEFT OUTER JOIN t0 ON ((((t10.c30) NOT NULL))IS NOT(((t10.c0)||(t0.c87)))) WHERE ((CASE WHEN t10.c30 THEN t0.c87 END IN ())) ORDER BY x'' ASC  NULLS FIRST, LOWER(DISTINCT ((t10.c30) IS TRUE)) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN (vt0.c0, vt1.c0)) AS NUMERIC)) ORDER BY CASE (+ (vt1.c0))  WHEN ((vt0.c0)||('')) THEN NULLIF(vt0.c0, vt0.c0) END, ((CAST(vt1.c0 AS TEXT))!=('q.}᝟n'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (vt0.c0, vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE (+ (vt1.c0))  WHEN ((vt0.c0)||('')) THEN NULLIF(vt0.c0, vt0.c0) END, ((CAST(vt1.c0 AS TEXT))!=('q.}᝟n'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN (vt0.c0, vt1.c0)) AS NUMERIC)) ORDER BY CASE (+ (vt1.c0))  WHEN ((vt0.c0)||('')) THEN NULLIF(vt0.c0, vt0.c0) END, ((CAST(vt1.c0 AS TEXT))!=('q.}᝟n'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (vt0.c0, vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE (+ (vt1.c0))  WHEN ((vt0.c0)||('')) THEN NULLIF(vt0.c0, vt0.c0) END, ((CAST(vt1.c0 AS TEXT))!=('q.}᝟n'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN (vt0.c0, vt1.c0)) AS NUMERIC)) ORDER BY CASE (+ (vt1.c0))  WHEN ((vt0.c0)||('')) THEN NULLIF(vt0.c0, vt0.c0) END, ((CAST(vt1.c0 AS TEXT))!=('q.}᝟n'))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, t10, vt0 WHERE (((t0.c87)IS NOT(((t10.c30)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c87)IS NOT(((t10.c30)/(vt0.c0))))) IS TRUE)  as count FROM t0, t10, vt0);
SELECT ALL COUNT(*) FROM t0, t10, vt0 WHERE (((t0.c87)IS NOT(((t10.c30)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c87)IS NOT(((t10.c30)/(vt0.c0))))) IS TRUE)  as count FROM t0, t10, vt0);
SELECT ALL COUNT(*) FROM t0, t10, vt0 WHERE (((t0.c87)IS NOT(((t10.c30)/(vt0.c0)))));
SELECT ALL COUNT(*) FROM t10, vt1 WHERE (((((vt1.c0)>=(t10.c0))) NOT BETWEEN ((t10.c30 IN ())) AND (json_quote(x'8ce3'))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>=(t10.c0))) NOT BETWEEN ((t10.c30 IN ())) AND (json_quote(x'8ce3')))) IS TRUE)  as count FROM t10, vt1);
SELECT ALL COUNT(*) FROM t10, vt1 WHERE (((((vt1.c0)>=(t10.c0))) NOT BETWEEN ((t10.c30 IN ())) AND (json_quote(x'8ce3'))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>=(t10.c0))) NOT BETWEEN ((t10.c30 IN ())) AND (json_quote(x'8ce3')))) IS TRUE)  as count FROM t10, vt1);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c87)<(vt0.c0))) IS TRUE) WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c87)<(vt0.c0))) IS TRUE));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c87)<(vt0.c0))) IS TRUE) WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c87)<(vt0.c0))) IS TRUE));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c87)<(vt0.c0))) IS TRUE) WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT));
SELECT * FROM t10, vt0 WHERE (CASE WHEN NULL THEN (NOT (t10.c0)) ELSE ((t10.c0) NOT NULL) END) ORDER BY (NOT (t10.c0)) COLLATE NOCASE ASC, CAST(((vt0.c0)IS NOT(vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN (NOT (t10.c0)) ELSE ((t10.c0) NOT NULL) END) IS TRUE)  as count FROM t10, vt0 ORDER BY (NOT (t10.c0)) COLLATE NOCASE ASC, CAST(((vt0.c0)IS NOT(vt0.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT * FROM t10, vt0 WHERE (CASE WHEN NULL THEN (NOT (t10.c0)) ELSE ((t10.c0) NOT NULL) END) ORDER BY (NOT (t10.c0)) COLLATE NOCASE ASC, CAST(((vt0.c0)IS NOT(vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN (NOT (t10.c0)) ELSE ((t10.c0) NOT NULL) END) IS TRUE)  as count FROM t10, vt0 ORDER BY (NOT (t10.c0)) COLLATE NOCASE ASC, CAST(((vt0.c0)IS NOT(vt0.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT * FROM t10, vt0 WHERE (CASE WHEN NULL THEN (NOT (t10.c0)) ELSE ((t10.c0) NOT NULL) END) ORDER BY (NOT (t10.c0)) COLLATE NOCASE ASC, CAST(((vt0.c0)IS NOT(vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (((((((vt1.c0, vt1.c0, t0.c0))>=((t0.c0, vt1.c0, 0xffffffffeb47c70c))))AND(((((vt1.c0)OR(t0.c0)))AND(vt0.c0)))))OR(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((((((vt1.c0, vt1.c0, t0.c0))>=((t0.c0, vt1.c0, 0Xffffffffeb47c70c))))AND(((((vt1.c0)OR(t0.c0)))AND(vt0.c0)))))OR(vt1.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (((((((vt1.c0, vt1.c0, t0.c0))>=((t0.c0, vt1.c0, 0xffffffffeb47c70c))))AND(((((vt1.c0)OR(t0.c0)))AND(vt0.c0)))))OR(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((((((vt1.c0, vt1.c0, t0.c0))>=((t0.c0, vt1.c0, 0Xffffffffeb47c70c))))AND(((((vt1.c0)OR(t0.c0)))AND(vt0.c0)))))OR(vt1.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (((((((vt1.c0, vt1.c0, t0.c0))>=((t0.c0, vt1.c0, 0xffffffffeb47c70c))))AND(((((vt1.c0)OR(t0.c0)))AND(vt0.c0)))))OR(vt1.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t10 WHERE (json_array_length('eCu&\n*<颣#' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length('eCu&\n*<颣#' COLLATE NOCASE)) IS TRUE)  as count FROM vt0, t10);
SELECT ALL COUNT(*) FROM vt0, t10 WHERE (json_array_length('eCu&\n*<颣#' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length('eCu&\n*<颣#' COLLATE NOCASE)) IS TRUE)  as count FROM vt0, t10);
SELECT COUNT(*) FROM t0 WHERE ((CASE t0.c0  WHEN t0.c87 THEN t0.c87 END IN ())) ORDER BY (((((t0.c0)IS(t0.c87))))==((CAST(t0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c0  WHEN t0.c87 THEN t0.c87 END IN ())) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)IS(t0.c87))))=((CAST(t0.c0 AS NUMERIC)))));
SELECT COUNT(*) FROM t0 WHERE ((CASE t0.c0  WHEN t0.c87 THEN t0.c87 END IN ())) ORDER BY (((((t0.c0)IS(t0.c87))))==((CAST(t0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c0  WHEN t0.c87 THEN t0.c87 END IN ())) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)IS(t0.c87))))=((CAST(t0.c0 AS NUMERIC)))));
SELECT COUNT(*) FROM t0 WHERE ((CASE t0.c0  WHEN t0.c87 THEN t0.c87 END IN ())) ORDER BY (((((t0.c0)IS(t0.c87))))==((CAST(t0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM t10 LEFT OUTER JOIN t0 ON (((t10.c30)) BETWEEN ((((t10.c30)GLOB(t0.c0)))) AND ((t0.c87))) INNER JOIN vt0 ON ((t10.c0 COLLATE BINARY)OR(((t10.c0)<<(t10.c30)))) WHERE (CAST(CAST(t10.c0 AS TEXT) AS INTEGER)) ORDER BY 0.5529917138986316  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t10.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM t10 LEFT OUTER JOIN t0 ON (((t10.c30)) BETWEEN ((((t10.c30)GLOB(t0.c0)))) AND ((t0.c87))) INNER JOIN vt0 ON ((t10.c0 COLLATE BINARY)OR(((t10.c0)<<(t10.c30)))) ORDER BY 0.5529917138986316  NULLS LAST);
SELECT COUNT(*) FROM t10 LEFT OUTER JOIN t0 ON (((t10.c30)) BETWEEN ((((t10.c30)GLOB(t0.c0)))) AND ((t0.c87))) INNER JOIN vt0 ON ((t10.c0 COLLATE BINARY)OR(((t10.c0)<<(t10.c30)))) WHERE (CAST(CAST(t10.c0 AS TEXT) AS INTEGER)) ORDER BY 0.5529917138986316  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t10.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM t10 LEFT OUTER JOIN t0 ON (((t10.c30)) BETWEEN ((((t10.c30)GLOB(t0.c0)))) AND ((t0.c87))) INNER JOIN vt0 ON ((t10.c0 COLLATE BINARY)OR(((t10.c0)<<(t10.c30)))) ORDER BY 0.5529917138986316  NULLS LAST);
SELECT COUNT(*) FROM t10 LEFT OUTER JOIN t0 ON (((t10.c30)) BETWEEN ((((t10.c30)GLOB(t0.c0)))) AND ((t0.c87))) INNER JOIN vt0 ON ((t10.c0 COLLATE BINARY)OR(((t10.c0)<<(t10.c30)))) WHERE (CAST(CAST(t10.c0 AS TEXT) AS INTEGER)) ORDER BY 0.5529917138986316  NULLS LAST;
SELECT ALL COUNT(*) FROM t10, vt1 WHERE (LOWER(((0.9546332915645585) IS FALSE))) ORDER BY 0x19700464  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(((0.9546332915645585) IS FALSE))) IS TRUE)  as count FROM t10, vt1 ORDER BY 0X19700464  NULLS FIRST);
SELECT ALL COUNT(*) FROM t10, vt1 WHERE (LOWER(((0.9546332915645585) IS FALSE))) ORDER BY 0x19700464  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(((0.9546332915645585) IS FALSE))) IS TRUE)  as count FROM t10, vt1 ORDER BY 0X19700464  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t10, t0, vt0 WHERE (((((vt0.c0)IS(t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 END) AND ((NOT (x'5c66'))))) ORDER BY ((t0.c0 COLLATE NOCASE)>(LAST_INSERT_ROWID())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 END) AND ((NOT (x'5c66'))))) IS TRUE)  as count FROM vt1, t10, t0, vt0 ORDER BY ((t0.c0 COLLATE NOCASE)>(LAST_INSERT_ROWID())) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t10, t0, vt0 WHERE (((((vt0.c0)IS(t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 END) AND ((NOT (x'5c66'))))) ORDER BY ((t0.c0 COLLATE NOCASE)>(LAST_INSERT_ROWID())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 END) AND ((NOT (x'5c66'))))) IS TRUE)  as count FROM vt1, t10, t0, vt0 ORDER BY ((t0.c0 COLLATE NOCASE)>(LAST_INSERT_ROWID())) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t10, t0, vt0 WHERE (((((vt0.c0)IS(t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 END) AND ((NOT (x'5c66'))))) ORDER BY ((t0.c0 COLLATE NOCASE)>(LAST_INSERT_ROWID())) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((- (LOWER(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (LOWER(DISTINCT vt1.c0)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((- (LOWER(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (LOWER(DISTINCT vt1.c0)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((- (LOWER(DISTINCT vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((((LIKELY(DISTINCT vt0.c0))OR((((0.37860849451530976, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt1.c0)*(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((LIKELY(DISTINCT vt0.c0))OR((((0.37860849451530976, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt1.c0)*(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((((LIKELY(DISTINCT vt0.c0))OR((((0.37860849451530976, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt1.c0)*(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((LIKELY(DISTINCT vt0.c0))OR((((0.37860849451530976, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt1.c0)*(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((((LIKELY(DISTINCT vt0.c0))OR((((0.37860849451530976, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt1.c0)*(vt1.c0))));
SELECT ALL * FROM vt1 WHERE (UNLIKELY(vt1.c0) COLLATE BINARY) ORDER BY ((((((vt1.c0)>=(NULL)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)>=(NULL)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM vt1 WHERE (UNLIKELY(vt1.c0) COLLATE BINARY) ORDER BY ((((((vt1.c0)>=(NULL)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)>=(NULL)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM vt1 WHERE (UNLIKELY(vt1.c0) COLLATE BINARY) ORDER BY ((((((vt1.c0)>=(NULL)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT ALL * FROM t0, vt1, t10, vt0 WHERE (CAST(t0.c0 AS BLOB)) ORDER BY x'2837' DESC, IFNULL(((t10.c0)+(vt1.c0)), (NOT (t0.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS BLOB)) IS TRUE)  as count FROM t0, vt1, t10, vt0 ORDER BY x'2837' DESC, IFNULL(((t10.c0)+(vt1.c0)), (NOT (t0.c0))));
SELECT ALL * FROM t0, vt1, t10, vt0 WHERE (CAST(t0.c0 AS BLOB)) ORDER BY x'2837' DESC, IFNULL(((t10.c0)+(vt1.c0)), (NOT (t0.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS BLOB)) IS TRUE)  as count FROM t0, vt1, t10, vt0 ORDER BY x'2837' DESC, IFNULL(((t10.c0)+(vt1.c0)), (NOT (t0.c0))));
SELECT ALL * FROM t0, vt1, t10, vt0 WHERE (CAST(t0.c0 AS BLOB)) ORDER BY x'2837' DESC, IFNULL(((t10.c0)+(vt1.c0)), (NOT (t0.c0)));
SELECT * FROM vt1, t10, t0 WHERE (((((((t10.c0)OR(t0.c0)))AND(t10.c30)))OR('')));
SELECT SUM(count) FROM (SELECT ((((((((t10.c0)OR(t0.c0)))AND(t10.c30)))OR(''))) IS TRUE)  as count FROM vt1, t10, t0);
SELECT * FROM vt1, t10, t0 WHERE (((((((t10.c0)OR(t0.c0)))AND(t10.c30)))OR('')));
SELECT SUM(count) FROM (SELECT ((((((((t10.c0)OR(t0.c0)))AND(t10.c30)))OR(''))) IS TRUE)  as count FROM vt1, t10, t0);
SELECT * FROM vt1, t10, t0 WHERE (((((((t10.c0)OR(t0.c0)))AND(t10.c30)))OR('')));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT((((vt0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT((((vt0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT((((vt0.c0))>=((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN LOWER(vt0.c0) THEN MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0) END) ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN (('-1665736207')!=(vt0.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)!=(vt0.c0)) ELSE ((vt0.c0)||(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LOWER(vt0.c0) THEN MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN (('-1665736207')<>(vt0.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)!=(vt0.c0)) ELSE ((vt0.c0)||(vt0.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN LOWER(vt0.c0) THEN MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0) END) ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN (('-1665736207')!=(vt0.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)!=(vt0.c0)) ELSE ((vt0.c0)||(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LOWER(vt0.c0) THEN MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN (('-1665736207')<>(vt0.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)!=(vt0.c0)) ELSE ((vt0.c0)||(vt0.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN LOWER(vt0.c0) THEN MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0) END) ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN (('-1665736207')!=(vt0.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)!=(vt0.c0)) ELSE ((vt0.c0)||(vt0.c0)) END ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((~ (((t0.c87) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c87) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c87) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c87) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c87) ISNULL))));
SELECT ALL COUNT(*) FROM t10 WHERE (0.2970806500335025) ORDER BY t10.c0;
SELECT SUM(count) FROM (SELECT ((0.2970806500335025) IS TRUE)  as count FROM t10 ORDER BY t10.c0);
SELECT ALL COUNT(*) FROM t10 WHERE (0.2970806500335025) ORDER BY t10.c0;
SELECT SUM(count) FROM (SELECT ((0.2970806500335025) IS TRUE)  as count FROM t10 ORDER BY t10.c0);
SELECT ALL COUNT(*) FROM t10 WHERE (0.2970806500335025) ORDER BY t10.c0;
SELECT ALL COUNT(*) FROM vt0, vt1, t10 WHERE ((((0X3adc1a4c))>=((((t10.c30) NOT NULL))))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (t10.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0X3adc1a4c))>=((((t10.c30) NOT NULL))))) IS TRUE)  as count FROM vt0, vt1, t10 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (t10.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, t10 WHERE ((((0X3adc1a4c))>=((((t10.c30) NOT NULL))))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (t10.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0X3adc1a4c))>=((((t10.c30) NOT NULL))))) IS TRUE)  as count FROM vt0, vt1, t10 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (t10.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, t10 WHERE ((((0X3adc1a4c))>=((((t10.c30) NOT NULL))))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (t10.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t10 INNER JOIN t0 ON CAST((t10.c0 IN ()) AS INTEGER) FULL OUTER JOIN vt0 ON CASE WHEN ((((t0.c87)OR(t0.c0)))AND(t0.c0)) THEN (NOT (t0.c87)) END WHERE ((((t0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN t10.c30 WHEN t0.c0 THEN t0.c0 WHEN 'ㄴ#[+ 4ed,' THEN t0.c0 END)) AND ((((t0.c87)&(vt0.c0)))))) ORDER BY (+ ((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN t10.c30 WHEN t0.c0 THEN t0.c0 WHEN 'ㄴ#[+ 4ed,' THEN t0.c0 END)) AND ((((t0.c87)&(vt0.c0)))))) IS TRUE)  as count FROM vt1, t10 INNER JOIN t0 ON CAST((t10.c0 IN ()) AS INTEGER) FULL OUTER JOIN vt0 ON CASE WHEN ((((t0.c87)OR(t0.c0)))AND(t0.c0)) THEN (NOT (t0.c87)) END ORDER BY (+ ((vt0.c0 IN ()))) DESC);
SELECT COUNT(*) FROM vt1, t10 INNER JOIN t0 ON CAST((t10.c0 IN ()) AS INTEGER) FULL OUTER JOIN vt0 ON CASE WHEN ((((t0.c87)OR(t0.c0)))AND(t0.c0)) THEN (NOT (t0.c87)) END WHERE ((((t0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN t10.c30 WHEN t0.c0 THEN t0.c0 WHEN 'ㄴ#[+ 4ed,' THEN t0.c0 END)) AND ((((t0.c87)&(vt0.c0)))))) ORDER BY (+ ((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN t10.c30 WHEN t0.c0 THEN t0.c0 WHEN 'ㄴ#[+ 4ed,' THEN t0.c0 END)) AND ((((t0.c87)&(vt0.c0)))))) IS TRUE)  as count FROM vt1, t10 INNER JOIN t0 ON CAST((t10.c0 IN ()) AS INTEGER) FULL OUTER JOIN vt0 ON CASE WHEN ((((t0.c87)OR(t0.c0)))AND(t0.c0)) THEN (NOT (t0.c87)) END ORDER BY (+ ((vt0.c0 IN ()))) DESC);
SELECT COUNT(*) FROM vt1, t10 INNER JOIN t0 ON CAST((t10.c0 IN ()) AS INTEGER) FULL OUTER JOIN vt0 ON CASE WHEN ((((t0.c87)OR(t0.c0)))AND(t0.c0)) THEN (NOT (t0.c87)) END WHERE ((((t0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN t10.c30 WHEN t0.c0 THEN t0.c0 WHEN 'ㄴ#[+ 4ed,' THEN t0.c0 END)) AND ((((t0.c87)&(vt0.c0)))))) ORDER BY (+ ((vt0.c0 IN ()))) DESC;
SELECT ALL COUNT(*) FROM t10, vt1, vt0 RIGHT OUTER JOIN t0 ON CAST((((t0.c0))>((vt1.c0))) AS BLOB) WHERE (((((t10.c0)&(vt1.c0))) BETWEEN (0.7007368738991835) AND (x'03ae')));
SELECT SUM(count) FROM (SELECT ((((((t10.c0)&(vt1.c0))) BETWEEN (0.7007368738991835) AND (x'03ae'))) IS TRUE)  as count FROM t10, vt1, vt0 RIGHT OUTER JOIN t0 ON CAST((((t0.c0))>((vt1.c0))) AS BLOB));
SELECT ALL COUNT(*) FROM t10, vt1, vt0 RIGHT OUTER JOIN t0 ON CAST((((t0.c0))>((vt1.c0))) AS BLOB) WHERE (((((t10.c0)&(vt1.c0))) BETWEEN (0.7007368738991835) AND (x'03ae')));
SELECT SUM(count) FROM (SELECT ((((((t10.c0)&(vt1.c0))) BETWEEN (0.7007368738991835) AND (x'03ae'))) IS TRUE)  as count FROM t10, vt1, vt0 RIGHT OUTER JOIN t0 ON CAST((((t0.c0))>((vt1.c0))) AS BLOB));
SELECT ALL COUNT(*) FROM t10, vt1, vt0 RIGHT OUTER JOIN t0 ON CAST((((t0.c0))>((vt1.c0))) AS BLOB) WHERE (((((t10.c0)&(vt1.c0))) BETWEEN (0.7007368738991835) AND (x'03ae')));
SELECT * FROM t0, vt1 NOT INDEXED, vt0, t10 WHERE ((~ ((t0.c0 IN ())))) ORDER BY (vt1.c0 COLLATE RTRIM IN (((((t0.c87)AND(t0.c0)))OR(vt0.c0)), ((t0.c87) NOT BETWEEN (t10.c30) AND (t0.c0)), CAST(t0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c0 IN ())))) IS TRUE)  as count FROM t0, vt1, vt0, t10 ORDER BY (vt1.c0 COLLATE RTRIM IN (((((t0.c87)AND(t0.c0)))OR(vt0.c0)), ((t0.c87) NOT BETWEEN (t10.c30) AND (t0.c0)), CAST(t0.c0 AS TEXT))) ASC  NULLS FIRST);
SELECT * FROM t0, vt1 NOT INDEXED, vt0, t10 WHERE ((~ ((t0.c0 IN ())))) ORDER BY (vt1.c0 COLLATE RTRIM IN (((((t0.c87)AND(t0.c0)))OR(vt0.c0)), ((t0.c87) NOT BETWEEN (t10.c30) AND (t0.c0)), CAST(t0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c0 IN ())))) IS TRUE)  as count FROM t0, vt1, vt0, t10 ORDER BY (vt1.c0 COLLATE RTRIM IN (((((t0.c87)AND(t0.c0)))OR(vt0.c0)), ((t0.c87) NOT BETWEEN (t10.c30) AND (t0.c0)), CAST(t0.c0 AS TEXT))) ASC  NULLS FIRST);
SELECT * FROM t0, vt1 NOT INDEXED, vt0, t10 WHERE ((~ ((t0.c0 IN ())))) ORDER BY (vt1.c0 COLLATE RTRIM IN (((((t0.c87)AND(t0.c0)))OR(vt0.c0)), ((t0.c87) NOT BETWEEN (t10.c30) AND (t0.c0)), CAST(t0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 NOT INDEXED, t10 WHERE (((t10.c30 COLLATE NOCASE)-(((t10.c0)LIKE('fsb''M'''))))) ORDER BY (((vt1.c0)<=(t10.c30)) IN (((-2042650600) BETWEEN (t10.c0) AND ('-1156593594')), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((t10.c30 COLLATE NOCASE)-(((t10.c0)LIKE('fsb''M'''))))) IS TRUE)  as count FROM vt0, vt1, t10 ORDER BY (((vt1.c0)<=(t10.c30)) IN (((-2042650600) BETWEEN (t10.c0) AND ('-1156593594')), (vt0.c0 IN ()))));
SELECT ALL * FROM vt0, vt1 NOT INDEXED, t10 WHERE (((t10.c30 COLLATE NOCASE)-(((t10.c0)LIKE('fsb''M'''))))) ORDER BY (((vt1.c0)<=(t10.c30)) IN (((-2042650600) BETWEEN (t10.c0) AND ('-1156593594')), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((t10.c30 COLLATE NOCASE)-(((t10.c0)LIKE('fsb''M'''))))) IS TRUE)  as count FROM vt0, vt1, t10 ORDER BY (((vt1.c0)<=(t10.c30)) IN (((-2042650600) BETWEEN (t10.c0) AND ('-1156593594')), (vt0.c0 IN ()))));
SELECT ALL * FROM vt0, vt1 NOT INDEXED, t10 WHERE (((t10.c30 COLLATE NOCASE)-(((t10.c0)LIKE('fsb''M'''))))) ORDER BY (((vt1.c0)<=(t10.c30)) IN (((-2042650600) BETWEEN (t10.c0) AND ('-1156593594')), (vt0.c0 IN ())));
SELECT ALL * FROM vt1, t10 WHERE (((((((((LIKE(x'6f232c34401f', t10.c30))OR(((t10.c30) NOT BETWEEN (t10.c0) AND (t10.c30)))))OR(vt1.c0)))AND(t10.c30)))AND(vt1.c0))) ORDER BY ((IFNULL(DISTINCT vt1.c0, t10.c0)) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((LIKE(x'6f232c34401f', t10.c30))OR(((t10.c30) NOT BETWEEN (t10.c0) AND (t10.c30)))))OR(vt1.c0)))AND(t10.c30)))AND(vt1.c0))) IS TRUE)  as count FROM vt1, t10 ORDER BY ((IFNULL(DISTINCT vt1.c0, t10.c0)) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t10 WHERE (((((((((LIKE(x'6f232c34401f', t10.c30))OR(((t10.c30) NOT BETWEEN (t10.c0) AND (t10.c30)))))OR(vt1.c0)))AND(t10.c30)))AND(vt1.c0))) ORDER BY ((IFNULL(DISTINCT vt1.c0, t10.c0)) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((LIKE(x'6f232c34401f', t10.c30))OR(((t10.c30) NOT BETWEEN (t10.c0) AND (t10.c30)))))OR(vt1.c0)))AND(t10.c30)))AND(vt1.c0))) IS TRUE)  as count FROM vt1, t10 ORDER BY ((IFNULL(DISTINCT vt1.c0, t10.c0)) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t10 WHERE (((((((((LIKE(x'6f232c34401f', t10.c30))OR(((t10.c30) NOT BETWEEN (t10.c0) AND (t10.c30)))))OR(vt1.c0)))AND(t10.c30)))AND(vt1.c0))) ORDER BY ((IFNULL(DISTINCT vt1.c0, t10.c0)) ISNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0) IS FALSE) ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END) ORDER BY CAST((NOT (vt1.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0) IS FALSE) ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY CAST((NOT (vt1.c0)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0) IS FALSE) ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END) ORDER BY CAST((NOT (vt1.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0) IS FALSE) ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY CAST((NOT (vt1.c0)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0) IS FALSE) ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END) ORDER BY CAST((NOT (vt1.c0)) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(t10.c0 AS INTEGER)) IS TRUE) RIGHT OUTER JOIN vt1 ON ((((NULL) NOTNULL))<<((('Nl') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN t10 ON ((CAST(t0.c87 AS BLOB)) BETWEEN (CASE t0.c87  WHEN t0.c0 THEN t0.c87 END) AND (CAST(t10.c0 AS TEXT))) WHERE ((NOT ((+ (t10.c0))))) ORDER BY (vt1.c0 IN ()) COLLATE NOCASE  NULLS FIRST, CASE WHEN ((((t0.c0)OR(t10.c30)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) ELSE CAST(t10.c30 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (t10.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(t10.c0 AS INTEGER)) IS TRUE) RIGHT OUTER JOIN vt1 ON ((((NULL) NOTNULL))<<((('Nl') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN t10 ON ((CAST(t0.c87 AS BLOB)) BETWEEN (CASE t0.c87  WHEN t0.c0 THEN t0.c87 END) AND (CAST(t10.c0 AS TEXT))) ORDER BY (vt1.c0 IN ()) COLLATE NOCASE  NULLS FIRST, CASE WHEN ((((t0.c0)OR(t10.c30)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) ELSE CAST(t10.c30 AS INTEGER) END);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(t10.c0 AS INTEGER)) IS TRUE) RIGHT OUTER JOIN vt1 ON ((((NULL) NOTNULL))<<((('Nl') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN t10 ON ((CAST(t0.c87 AS BLOB)) BETWEEN (CASE t0.c87  WHEN t0.c0 THEN t0.c87 END) AND (CAST(t10.c0 AS TEXT))) WHERE ((NOT ((+ (t10.c0))))) ORDER BY (vt1.c0 IN ()) COLLATE NOCASE  NULLS FIRST, CASE WHEN ((((t0.c0)OR(t10.c30)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) ELSE CAST(t10.c30 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (t10.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(t10.c0 AS INTEGER)) IS TRUE) RIGHT OUTER JOIN vt1 ON ((((NULL) NOTNULL))<<((('Nl') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN t10 ON ((CAST(t0.c87 AS BLOB)) BETWEEN (CASE t0.c87  WHEN t0.c0 THEN t0.c87 END) AND (CAST(t10.c0 AS TEXT))) ORDER BY (vt1.c0 IN ()) COLLATE NOCASE  NULLS FIRST, CASE WHEN ((((t0.c0)OR(t10.c30)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) ELSE CAST(t10.c30 AS INTEGER) END);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))));
SELECT * FROM t0, vt1, t10 NOT INDEXED, vt0 WHERE ((((vt1.c0 IN ())) IS FALSE)) ORDER BY (((((t0.c87))<=((t0.c87))))||((- (t0.c87)))) ASC  NULLS FIRST, ((((vt1.c0) NOT BETWEEN (t10.c30) AND (t0.c87))) BETWEEN (t0.c87 COLLATE RTRIM) AND (t0.c87 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM t0, vt1, t10, vt0 ORDER BY (((((t0.c87))<=((t0.c87))))||((- (t0.c87)))) ASC  NULLS FIRST, ((((vt1.c0) NOT BETWEEN (t10.c30) AND (t0.c87))) BETWEEN (t0.c87 COLLATE RTRIM) AND (t0.c87 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT * FROM t0, vt1, t10 NOT INDEXED, vt0 WHERE ((((vt1.c0 IN ())) IS FALSE)) ORDER BY (((((t0.c87))<=((t0.c87))))||((- (t0.c87)))) ASC  NULLS FIRST, ((((vt1.c0) NOT BETWEEN (t10.c30) AND (t0.c87))) BETWEEN (t0.c87 COLLATE RTRIM) AND (t0.c87 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM t0, vt1, t10, vt0 ORDER BY (((((t0.c87))<=((t0.c87))))||((- (t0.c87)))) ASC  NULLS FIRST, ((((vt1.c0) NOT BETWEEN (t10.c30) AND (t0.c87))) BETWEEN (t0.c87 COLLATE RTRIM) AND (t0.c87 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT * FROM t0, vt1, t10 NOT INDEXED, vt0 WHERE ((((vt1.c0 IN ())) IS FALSE)) ORDER BY (((((t0.c87))<=((t0.c87))))||((- (t0.c87)))) ASC  NULLS FIRST, ((((vt1.c0) NOT BETWEEN (t10.c30) AND (t0.c87))) BETWEEN (t0.c87 COLLATE RTRIM) AND (t0.c87 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t10, vt1, t0 WHERE ((+ (((((t10.c30)AND(t10.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((t10.c30)AND(t10.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0, t10, vt1, t0);
SELECT COUNT(*) FROM vt0, t10, vt1, t0 WHERE ((+ (((((t10.c30)AND(t10.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((t10.c30)AND(t10.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0, t10, vt1, t0);
SELECT COUNT(*) FROM vt0, t10, vt1, t0 WHERE ((+ (((((t10.c30)AND(t10.c0)))OR(vt1.c0)))));
SELECT COUNT(*) FROM vt0, t0, t10 WHERE (CAST(((vt0.c0)LIKE(t0.c0)) AS TEXT)) ORDER BY ((t0.c87 IN ()) IN ()) ASC  NULLS FIRST, (t10.c30 IN ());
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)LIKE(t0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t0, t10 ORDER BY ((t0.c87 IN ()) IN ()) ASC  NULLS FIRST, (t10.c30 IN ()));
SELECT COUNT(*) FROM vt0, t0, t10 WHERE (CAST(((vt0.c0)LIKE(t0.c0)) AS TEXT)) ORDER BY ((t0.c87 IN ()) IN ()) ASC  NULLS FIRST, (t10.c30 IN ());
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)LIKE(t0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t0, t10 ORDER BY ((t0.c87 IN ()) IN ()) ASC  NULLS FIRST, (t10.c30 IN ()));
SELECT COUNT(*) FROM vt0, t0, t10 WHERE (CAST(((vt0.c0)LIKE(t0.c0)) AS TEXT)) ORDER BY ((t0.c87 IN ()) IN ()) ASC  NULLS FIRST, (t10.c30 IN ());
SELECT COUNT(*) FROM t10 WHERE (CAST(((NULL) NOT BETWEEN (t10.c30) AND (t10.c0)) AS INTEGER)) ORDER BY (NOT (t10.c30))  NULLS LAST, (((NOT (t10.c30))) BETWEEN (((t10.c30) NOT BETWEEN (t10.c30) AND (''))) AND (t10.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOT BETWEEN (t10.c30) AND (t10.c0)) AS INTEGER)) IS TRUE)  as count FROM t10 ORDER BY (NOT (t10.c30))  NULLS LAST, (((NOT (t10.c30))) BETWEEN (((t10.c30) NOT BETWEEN (t10.c30) AND (''))) AND (t10.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t10 WHERE (CAST(((NULL) NOT BETWEEN (t10.c30) AND (t10.c0)) AS INTEGER)) ORDER BY (NOT (t10.c30))  NULLS LAST, (((NOT (t10.c30))) BETWEEN (((t10.c30) NOT BETWEEN (t10.c30) AND (''))) AND (t10.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOT BETWEEN (t10.c30) AND (t10.c0)) AS INTEGER)) IS TRUE)  as count FROM t10 ORDER BY (NOT (t10.c30))  NULLS LAST, (((NOT (t10.c30))) BETWEEN (((t10.c30) NOT BETWEEN (t10.c30) AND (''))) AND (t10.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t10 WHERE (CAST(((NULL) NOT BETWEEN (t10.c30) AND (t10.c0)) AS INTEGER)) ORDER BY (NOT (t10.c30))  NULLS LAST, (((NOT (t10.c30))) BETWEEN (((t10.c30) NOT BETWEEN (t10.c30) AND (''))) AND (t10.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((t0.c0)AND(vt0.c0)) IN (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)AND(vt0.c0)) IN (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((t0.c0)AND(vt0.c0)) IN (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)AND(vt0.c0)) IN (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((t0.c0)AND(vt0.c0)) IN (CAST(vt1.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t10 ON (((- (t0.c87)))-(((t10.c0) BETWEEN ('\') AND (t10.c30)))) WHERE (((json_insert(t10.c30, t0.c87, '-417342258', t10.c30, 3.77373648E8)) NOT BETWEEN (((t10.c30)+(t10.c30))) AND (((t10.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((json_insert(t10.c30, t0.c87, '-417342258', t10.c30, 3.77373648E8)) NOT BETWEEN (((t10.c30)+(t10.c30))) AND (((t10.c0) IS FALSE)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t10 ON (((- (t0.c87)))-(((t10.c0) BETWEEN ('\') AND (t10.c30)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t10 ON (((- (t0.c87)))-(((t10.c0) BETWEEN ('\') AND (t10.c30)))) WHERE (((json_insert(t10.c30, t0.c87, '-417342258', t10.c30, 3.77373648E8)) NOT BETWEEN (((t10.c30)+(t10.c30))) AND (((t10.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((json_insert(t10.c30, t0.c87, '-417342258', t10.c30, 3.77373648E8)) NOT BETWEEN (((t10.c30)+(t10.c30))) AND (((t10.c0) IS FALSE)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t10 ON (((- (t0.c87)))-(((t10.c0) BETWEEN ('\') AND (t10.c30)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t10 ON (((- (t0.c87)))-(((t10.c0) BETWEEN ('\') AND (t10.c30)))) WHERE (((json_insert(t10.c30, t0.c87, '-417342258', t10.c30, 3.77373648E8)) NOT BETWEEN (((t10.c30)+(t10.c30))) AND (((t10.c0) IS FALSE))));
SELECT ALL * FROM t10, t0 FULL OUTER JOIN vt1 ON (((t0.c0)) BETWEEN ((STRFTIME(t0.c0, t10.c30, t0.c87))) AND ((CAST(vt1.c0 AS REAL)))) LEFT OUTER JOIN vt0 ON (((vt0.c0)|(vt1.c0)) IN ()) WHERE (((((t0.c87)IS NOT(vt0.c0)))&(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c87)IS NOT(vt0.c0)))&(vt1.c0))) IS TRUE)  as count FROM t10, t0 FULL OUTER JOIN vt1 ON (((t0.c0)) BETWEEN ((STRFTIME(t0.c0, t10.c30, t0.c87))) AND ((CAST(vt1.c0 AS REAL)))) LEFT OUTER JOIN vt0 ON (((vt0.c0)|(vt1.c0)) IN ()));
SELECT ALL * FROM t10, t0 FULL OUTER JOIN vt1 ON (((t0.c0)) BETWEEN ((STRFTIME(t0.c0, t10.c30, t0.c87))) AND ((CAST(vt1.c0 AS REAL)))) LEFT OUTER JOIN vt0 ON (((vt0.c0)|(vt1.c0)) IN ()) WHERE (((((t0.c87)IS NOT(vt0.c0)))&(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c87)IS NOT(vt0.c0)))&(vt1.c0))) IS TRUE)  as count FROM t10, t0 FULL OUTER JOIN vt1 ON (((t0.c0)) BETWEEN ((STRFTIME(t0.c0, t10.c30, t0.c87))) AND ((CAST(vt1.c0 AS REAL)))) LEFT OUTER JOIN vt0 ON (((vt0.c0)|(vt1.c0)) IN ()));
SELECT ALL * FROM t10, t0 FULL OUTER JOIN vt1 ON (((t0.c0)) BETWEEN ((STRFTIME(t0.c0, t10.c30, t0.c87))) AND ((CAST(vt1.c0 AS REAL)))) LEFT OUTER JOIN vt0 ON (((vt0.c0)|(vt1.c0)) IN ()) WHERE (((((t0.c87)IS NOT(vt0.c0)))&(vt1.c0)));
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY (((t0.c87 COLLATE NOCASE, ((((t0.c0)OR(t0.c87)))AND(t0.c0)), ((t0.c0)%(t0.c0))))<((((t0.c0) IS TRUE), HEX(t0.c0), '\nH'))) ASC  NULLS LAST, 0.8414880747578225;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY (((t0.c87 COLLATE NOCASE, ((((t0.c0)OR(t0.c87)))AND(t0.c0)), ((t0.c0)%(t0.c0))))<((((t0.c0) IS TRUE), HEX(t0.c0), '\nH'))) ASC  NULLS LAST, 0.8414880747578225);
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY (((t0.c87 COLLATE NOCASE, ((((t0.c0)OR(t0.c87)))AND(t0.c0)), ((t0.c0)%(t0.c0))))<((((t0.c0) IS TRUE), HEX(t0.c0), '\nH'))) ASC  NULLS LAST, 0.8414880747578225;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY (((t0.c87 COLLATE NOCASE, ((((t0.c0)OR(t0.c87)))AND(t0.c0)), ((t0.c0)%(t0.c0))))<((((t0.c0) IS TRUE), HEX(t0.c0), '\nH'))) ASC  NULLS LAST, 0.8414880747578225);
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY (((t0.c87 COLLATE NOCASE, ((((t0.c0)OR(t0.c87)))AND(t0.c0)), ((t0.c0)%(t0.c0))))<((((t0.c0) IS TRUE), HEX(t0.c0), '\nH'))) ASC  NULLS LAST, 0.8414880747578225;
SELECT COUNT(*) FROM vt1, t10 INNER JOIN vt0 ON (~ (((t10.c0) BETWEEN (t10.c0) AND (NULL)))) WHERE (CAST(CASE WHEN t10.c0 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER)) ORDER BY ((((((vt1.c0)OR(843900638)))OR(vt1.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t10.c0 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM vt1, t10 INNER JOIN vt0 ON (~ (((t10.c0) BETWEEN (t10.c0) AND (NULL)))) ORDER BY ((((((vt1.c0)OR(843900638)))OR(vt1.c0))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t10 INNER JOIN vt0 ON (~ (((t10.c0) BETWEEN (t10.c0) AND (NULL)))) WHERE (CAST(CASE WHEN t10.c0 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER)) ORDER BY ((((((vt1.c0)OR(843900638)))OR(vt1.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t10.c0 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM vt1, t10 INNER JOIN vt0 ON (~ (((t10.c0) BETWEEN (t10.c0) AND (NULL)))) ORDER BY ((((((vt1.c0)OR(843900638)))OR(vt1.c0))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t10 INNER JOIN vt0 ON (~ (((t10.c0) BETWEEN (t10.c0) AND (NULL)))) WHERE (CAST(CASE WHEN t10.c0 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER)) ORDER BY ((((((vt1.c0)OR(843900638)))OR(vt1.c0))) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, t10, vt1 WHERE (((((t0.c0)AND(vt1.c0))) NOT BETWEEN (t0.c87 COLLATE RTRIM) AND (CAST(vt1.c0 AS BLOB)))) ORDER BY (((t10.c30)<=(vt1.c0)) IN (x'')), (- (t0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)AND(vt1.c0))) NOT BETWEEN (t0.c87 COLLATE RTRIM) AND (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM t0, t10, vt1 ORDER BY (((t10.c30)<=(vt1.c0)) IN (x'')), (- (t0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t10, vt1 WHERE (((((t0.c0)AND(vt1.c0))) NOT BETWEEN (t0.c87 COLLATE RTRIM) AND (CAST(vt1.c0 AS BLOB)))) ORDER BY (((t10.c30)<=(vt1.c0)) IN (x'')), (- (t0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)AND(vt1.c0))) NOT BETWEEN (t0.c87 COLLATE RTRIM) AND (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM t0, t10, vt1 ORDER BY (((t10.c30)<=(vt1.c0)) IN (x'')), (- (t0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t10, vt1 WHERE (((((t0.c0)AND(vt1.c0))) NOT BETWEEN (t0.c87 COLLATE RTRIM) AND (CAST(vt1.c0 AS BLOB)))) ORDER BY (((t10.c30)<=(vt1.c0)) IN (x'')), (- (t0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c0)) BETWEEN ((CAST(t0.c87 AS REAL))) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((CAST(t0.c87 AS REAL))) AND ((t0.c0)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c0)) BETWEEN ((CAST(t0.c87 AS REAL))) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((CAST(t0.c87 AS REAL))) AND ((t0.c0)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c0)) BETWEEN ((CAST(t0.c87 AS REAL))) AND ((t0.c0))));
SELECT ALL * FROM vt1, vt0 WHERE (LIKELY((vt0.c0 IN (vt0.c0, vt1.c0)))) ORDER BY ((((vt1.c0 COLLATE NOCASE)AND(x'')))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY((vt0.c0 IN (vt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0 COLLATE NOCASE)AND(x'')))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (LIKELY((vt0.c0 IN (vt0.c0, vt1.c0)))) ORDER BY ((((vt1.c0 COLLATE NOCASE)AND(x'')))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY((vt0.c0 IN (vt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0 COLLATE NOCASE)AND(x'')))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (LIKELY((vt0.c0 IN (vt0.c0, vt1.c0)))) ORDER BY ((((vt1.c0 COLLATE NOCASE)AND(x'')))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))))  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN t10 ON CAST(((((((((vt0.c0)AND('')))OR(NULL)))OR(vt0.c0)))AND(t10.c30)) AS INTEGER) WHERE (((((NULL)OR(CASE WHEN t10.c0 THEN vt0.c0 ELSE t10.c0 END)))AND(((vt0.c0)>=(t10.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(CASE WHEN t10.c0 THEN vt0.c0 ELSE t10.c0 END)))AND(((vt0.c0)>=(t10.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t10 ON CAST(((((((((vt0.c0)AND('')))OR(NULL)))OR(vt0.c0)))AND(t10.c30)) AS INTEGER));
SELECT * FROM vt0 LEFT OUTER JOIN t10 ON CAST(((((((((vt0.c0)AND('')))OR(NULL)))OR(vt0.c0)))AND(t10.c30)) AS INTEGER) WHERE (((((NULL)OR(CASE WHEN t10.c0 THEN vt0.c0 ELSE t10.c0 END)))AND(((vt0.c0)>=(t10.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(CASE WHEN t10.c0 THEN vt0.c0 ELSE t10.c0 END)))AND(((vt0.c0)>=(t10.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t10 ON CAST(((((((((vt0.c0)AND('')))OR(NULL)))OR(vt0.c0)))AND(t10.c30)) AS INTEGER));
SELECT * FROM vt0 LEFT OUTER JOIN t10 ON CAST(((((((((vt0.c0)AND('')))OR(NULL)))OR(vt0.c0)))AND(t10.c30)) AS INTEGER) WHERE (((((NULL)OR(CASE WHEN t10.c0 THEN vt0.c0 ELSE t10.c0 END)))AND(((vt0.c0)>=(t10.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS TEXT));
SELECT ALL COUNT(*) FROM vt1 WHERE ((0.43564494154852407 IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((0.43564494154852407 IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((0.43564494154852407 IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((0.43564494154852407 IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((0.43564494154852407 IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM) IS FALSE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t10 WHERE ((((0.46253251820852515)) NOT BETWEEN ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(t10.c0)))) AND (((t10.c30 IN ()))))) ORDER BY ((CAST(t10.c0 AS REAL))<=((((t10.c30))<((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((0.46253251820852515)) NOT BETWEEN ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(t10.c0)))) AND (((t10.c30 IN ()))))) IS TRUE)  as count FROM vt1, t10 ORDER BY ((CAST(t10.c0 AS REAL))<=((((t10.c30))<((vt1.c0))))) ASC);
SELECT COUNT(*) FROM vt1, t10 WHERE ((((0.46253251820852515)) NOT BETWEEN ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(t10.c0)))) AND (((t10.c30 IN ()))))) ORDER BY ((CAST(t10.c0 AS REAL))<=((((t10.c30))<((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((0.46253251820852515)) NOT BETWEEN ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(t10.c0)))) AND (((t10.c30 IN ()))))) IS TRUE)  as count FROM vt1, t10 ORDER BY ((CAST(t10.c0 AS REAL))<=((((t10.c30))<((vt1.c0))))) ASC);
SELECT COUNT(*) FROM vt1, t10 WHERE ((((0.46253251820852515)) NOT BETWEEN ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(t10.c0)))) AND (((t10.c30 IN ()))))) ORDER BY ((CAST(t10.c0 AS REAL))<=((((t10.c30))<((vt1.c0))))) ASC;
SELECT COUNT(*) FROM t10, t0, vt0, vt1 WHERE (((t10.c30) BETWEEN ('>') AND (t10.c30)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t10.c30) BETWEEN ('>') AND (t10.c30)) COLLATE NOCASE) IS TRUE)  as count FROM t10, t0, vt0, vt1);
SELECT COUNT(*) FROM t10, t0, vt0, vt1 WHERE (((t10.c30) BETWEEN ('>') AND (t10.c30)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t10.c30) BETWEEN ('>') AND (t10.c30)) COLLATE NOCASE) IS TRUE)  as count FROM t10, t0, vt0, vt1);
SELECT COUNT(*) FROM t10, t0, vt0, vt1 WHERE (((t10.c30) BETWEEN ('>') AND (t10.c30)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY t0.c87 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY t0.c87 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY t0.c87 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY t0.c87 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY t0.c87 DESC  NULLS FIRST;
SELECT * FROM t10, t0, vt0 WHERE ((- (highlight(t10.c0, t0.c87, t10.c0, vt0.c0)))) ORDER BY ((((t10.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==(((vt0.c0)AND(vt0.c0)))), vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (highlight(t10.c0, t0.c87, t10.c0, vt0.c0)))) IS TRUE)  as count FROM t10, t0, vt0 ORDER BY ((((t10.c0) BETWEEN (vt0.c0) AND (vt0.c0)))=(((vt0.c0)AND(vt0.c0)))), vt0.c0  NULLS FIRST);
SELECT * FROM t10, t0, vt0 WHERE ((- (highlight(t10.c0, t0.c87, t10.c0, vt0.c0)))) ORDER BY ((((t10.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==(((vt0.c0)AND(vt0.c0)))), vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (highlight(t10.c0, t0.c87, t10.c0, vt0.c0)))) IS TRUE)  as count FROM t10, t0, vt0 ORDER BY ((((t10.c0) BETWEEN (vt0.c0) AND (vt0.c0)))=(((vt0.c0)AND(vt0.c0)))), vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), '', LOWER(t0.c0))) AND ((((t0.c0) NOTNULL), (vt0.c0 IN ()), (((t0.c87)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))))) ORDER BY (((t0.c87)) BETWEEN ((((t0.c87)||(t0.c87)))) AND ((((t0.c0) NOTNULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), '', LOWER(t0.c0))) AND ((((t0.c0) NOTNULL), (vt0.c0 IN ()), (((t0.c87)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c87)) BETWEEN ((((t0.c87)||(t0.c87)))) AND ((((t0.c0) NOTNULL)))) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), '', LOWER(t0.c0))) AND ((((t0.c0) NOTNULL), (vt0.c0 IN ()), (((t0.c87)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))))) ORDER BY (((t0.c87)) BETWEEN ((((t0.c87)||(t0.c87)))) AND ((((t0.c0) NOTNULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), '', LOWER(t0.c0))) AND ((((t0.c0) NOTNULL), (vt0.c0 IN ()), (((t0.c87)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c87)) BETWEEN ((((t0.c87)||(t0.c87)))) AND ((((t0.c0) NOTNULL)))) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), '', LOWER(t0.c0))) AND ((((t0.c0) NOTNULL), (vt0.c0 IN ()), (((t0.c87)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))))) ORDER BY (((t0.c87)) BETWEEN ((((t0.c87)||(t0.c87)))) AND ((((t0.c0) NOTNULL)))) DESC;
SELECT * FROM vt0, t0, vt1, t10 WHERE ((((NULL, 0.9532948352629447, vt0.c0)) NOT BETWEEN ((CASE WHEN t10.c0 THEN t10.c30 WHEN t0.c87 THEN vt1.c0 WHEN vt0.c0 THEN t0.c87 WHEN vt1.c0 THEN t0.c87 WHEN NULL THEN 0xffffffffd945bfd7 ELSE vt1.c0 END, ((t10.c0) IS FALSE), ((t10.c30)IS(t10.c30)))) AND ((((t0.c0)LIKE(t10.c30)), (vt0.c0 IN ()), vt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((NULL, 0.9532948352629447, vt0.c0)) NOT BETWEEN ((CASE WHEN t10.c0 THEN t10.c30 WHEN t0.c87 THEN vt1.c0 WHEN vt0.c0 THEN t0.c87 WHEN vt1.c0 THEN t0.c87 WHEN NULL THEN 0Xffffffffd945bfd7 ELSE vt1.c0 END, ((t10.c0) IS FALSE), ((t10.c30)IS(t10.c30)))) AND ((((t0.c0)LIKE(t10.c30)), (vt0.c0 IN ()), vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t0, vt1, t10);
SELECT * FROM vt0, t0, vt1, t10 WHERE ((((NULL, 0.9532948352629447, vt0.c0)) NOT BETWEEN ((CASE WHEN t10.c0 THEN t10.c30 WHEN t0.c87 THEN vt1.c0 WHEN vt0.c0 THEN t0.c87 WHEN vt1.c0 THEN t0.c87 WHEN NULL THEN 0xffffffffd945bfd7 ELSE vt1.c0 END, ((t10.c0) IS FALSE), ((t10.c30)IS(t10.c30)))) AND ((((t0.c0)LIKE(t10.c30)), (vt0.c0 IN ()), vt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((NULL, 0.9532948352629447, vt0.c0)) NOT BETWEEN ((CASE WHEN t10.c0 THEN t10.c30 WHEN t0.c87 THEN vt1.c0 WHEN vt0.c0 THEN t0.c87 WHEN vt1.c0 THEN t0.c87 WHEN NULL THEN 0Xffffffffd945bfd7 ELSE vt1.c0 END, ((t10.c0) IS FALSE), ((t10.c30)IS(t10.c30)))) AND ((((t0.c0)LIKE(t10.c30)), (vt0.c0 IN ()), vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t0, vt1, t10);
SELECT * FROM vt0, t0, vt1, t10 WHERE ((((NULL, 0.9532948352629447, vt0.c0)) NOT BETWEEN ((CASE WHEN t10.c0 THEN t10.c30 WHEN t0.c87 THEN vt1.c0 WHEN vt0.c0 THEN t0.c87 WHEN vt1.c0 THEN t0.c87 WHEN NULL THEN 0xffffffffd945bfd7 ELSE vt1.c0 END, ((t10.c0) IS FALSE), ((t10.c30)IS(t10.c30)))) AND ((((t0.c0)LIKE(t10.c30)), (vt0.c0 IN ()), vt1.c0 COLLATE NOCASE))));
SELECT * FROM vt0, vt1 FULL OUTER JOIN t10 ON ((t0.c0 IN ()) IN ()) LEFT OUTER JOIN t0 ON (CAST(t10.c0 AS BLOB) IN ()) WHERE (((((((vt1.c0)IS(NULL)))OR(COALESCE(DISTINCT vt1.c0, vt0.c0))))AND((t10.c30 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)IS(NULL)))OR(COALESCE(DISTINCT vt1.c0, vt0.c0))))AND((t10.c30 IN ())))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t10 ON ((t0.c0 IN ()) IN ()) LEFT OUTER JOIN t0 ON (CAST(t10.c0 AS BLOB) IN ()));
SELECT * FROM vt0, vt1 FULL OUTER JOIN t10 ON ((t0.c0 IN ()) IN ()) LEFT OUTER JOIN t0 ON (CAST(t10.c0 AS BLOB) IN ()) WHERE (((((((vt1.c0)IS(NULL)))OR(COALESCE(DISTINCT vt1.c0, vt0.c0))))AND((t10.c30 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)IS(NULL)))OR(COALESCE(DISTINCT vt1.c0, vt0.c0))))AND((t10.c30 IN ())))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t10 ON ((t0.c0 IN ()) IN ()) LEFT OUTER JOIN t0 ON (CAST(t10.c0 AS BLOB) IN ()));
SELECT * FROM vt0, vt1 FULL OUTER JOIN t10 ON ((t0.c0 IN ()) IN ()) LEFT OUTER JOIN t0 ON (CAST(t10.c0 AS BLOB) IN ()) WHERE (((((((vt1.c0)IS(NULL)))OR(COALESCE(DISTINCT vt1.c0, vt0.c0))))AND((t10.c30 IN ()))));
SELECT * FROM vt0, t0, vt1 WHERE ((- (vt0.c0 COLLATE NOCASE))) ORDER BY (~ (CAST('871125582' AS TEXT)))  NULLS LAST, (((TRIM(DISTINCT t0.c87, vt1.c0)))<=((((-1120012979)|('mT}')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (~ (CAST('871125582' AS TEXT)))  NULLS LAST, (((TRIM(DISTINCT t0.c87, vt1.c0)))<=((((-1120012979)|('mT}')))))  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE ((- (vt0.c0 COLLATE NOCASE))) ORDER BY (~ (CAST('871125582' AS TEXT)))  NULLS LAST, (((TRIM(DISTINCT t0.c87, vt1.c0)))<=((((-1120012979)|('mT}')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (~ (CAST('871125582' AS TEXT)))  NULLS LAST, (((TRIM(DISTINCT t0.c87, vt1.c0)))<=((((-1120012979)|('mT}')))))  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE ((- (vt0.c0 COLLATE NOCASE))) ORDER BY (~ (CAST('871125582' AS TEXT)))  NULLS LAST, (((TRIM(DISTINCT t0.c87, vt1.c0)))<=((((-1120012979)|('mT}')))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt0.c0)*(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)*(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt0.c0)*(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)*(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt0.c0)*(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0, t10 WHERE (0Xffffffffe39d53a5) ORDER BY ((+ (t10.c0)) IN (CASE t0.c87  WHEN t0.c0 THEN t0.c0 ELSE t0.c87 END));
SELECT SUM(count) FROM (SELECT ((0xffffffffe39d53a5) IS TRUE)  as count FROM t0, t10 ORDER BY ((+ (t10.c0)) IN (CASE t0.c87  WHEN t0.c0 THEN t0.c0 ELSE t0.c87 END)));
SELECT ALL COUNT(*) FROM t0, t10 WHERE (0Xffffffffe39d53a5) ORDER BY ((+ (t10.c0)) IN (CASE t0.c87  WHEN t0.c0 THEN t0.c0 ELSE t0.c87 END));
SELECT SUM(count) FROM (SELECT ((0xffffffffe39d53a5) IS TRUE)  as count FROM t0, t10 ORDER BY ((+ (t10.c0)) IN (CASE t0.c87  WHEN t0.c0 THEN t0.c0 ELSE t0.c87 END)));
SELECT ALL COUNT(*) FROM t0, t10 WHERE (0Xffffffffe39d53a5) ORDER BY ((+ (t10.c0)) IN (CASE t0.c87  WHEN t0.c0 THEN t0.c0 ELSE t0.c87 END));
SELECT ALL COUNT(*) FROM vt1, vt0, t10 FULL OUTER JOIN t0 ON (- (CAST(t10.c30 AS NUMERIC))) WHERE (TRIM(COALESCE(NULL, vt1.c0))) ORDER BY (- (CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(COALESCE(NULL, vt1.c0))) IS TRUE)  as count FROM vt1, vt0, t10 FULL OUTER JOIN t0 ON (- (CAST(t10.c30 AS NUMERIC))) ORDER BY (- (CAST(vt1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1, vt0, t10 FULL OUTER JOIN t0 ON (- (CAST(t10.c30 AS NUMERIC))) WHERE (TRIM(COALESCE(NULL, vt1.c0))) ORDER BY (- (CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(COALESCE(NULL, vt1.c0))) IS TRUE)  as count FROM vt1, vt0, t10 FULL OUTER JOIN t0 ON (- (CAST(t10.c30 AS NUMERIC))) ORDER BY (- (CAST(vt1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1, vt0, t10 FULL OUTER JOIN t0 ON (- (CAST(t10.c30 AS NUMERIC))) WHERE (TRIM(COALESCE(NULL, vt1.c0))) ORDER BY (- (CAST(vt1.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM vt1, t0, t10 CROSS JOIN vt0 ON vt1.c0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (CAST(t10.c0 AS NUMERIC)) AND (((t0.c87) NOT NULL)))) ORDER BY CAST(((t0.c87)<=(t0.c87)) AS REAL)  NULLS LAST, (- (((((((((x'ff7c')OR(t0.c87)))AND(t10.c0)))AND(vt0.c0)))AND(t10.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) BETWEEN (CAST(t10.c0 AS NUMERIC)) AND (((t0.c87) NOT NULL)))) IS TRUE)  as count FROM vt1, t0, t10 CROSS JOIN vt0 ON vt1.c0 ORDER BY CAST(((t0.c87)<=(t0.c87)) AS REAL)  NULLS LAST, (- (((((((((x'ff7c')OR(t0.c87)))AND(t10.c0)))AND(vt0.c0)))AND(t10.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, t10 CROSS JOIN vt0 ON vt1.c0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (CAST(t10.c0 AS NUMERIC)) AND (((t0.c87) NOT NULL)))) ORDER BY CAST(((t0.c87)<=(t0.c87)) AS REAL)  NULLS LAST, (- (((((((((x'ff7c')OR(t0.c87)))AND(t10.c0)))AND(vt0.c0)))AND(t10.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) BETWEEN (CAST(t10.c0 AS NUMERIC)) AND (((t0.c87) NOT NULL)))) IS TRUE)  as count FROM vt1, t0, t10 CROSS JOIN vt0 ON vt1.c0 ORDER BY CAST(((t0.c87)<=(t0.c87)) AS REAL)  NULLS LAST, (- (((((((((x'ff7c')OR(t0.c87)))AND(t10.c0)))AND(vt0.c0)))AND(t10.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, t10 CROSS JOIN vt0 ON vt1.c0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (CAST(t10.c0 AS NUMERIC)) AND (((t0.c87) NOT NULL)))) ORDER BY CAST(((t0.c87)<=(t0.c87)) AS REAL)  NULLS LAST, (- (((((((((x'ff7c')OR(t0.c87)))AND(t10.c0)))AND(vt0.c0)))AND(t10.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t10, vt1, vt0, t0 WHERE ((((t0.c87)) NOT BETWEEN ((((((((((((((x'e89f')AND(t0.c87)))AND(t0.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(0x7dbccdcc)))OR(vt0.c0)))) AND ((CAST(t10.c30 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((t0.c87)) NOT BETWEEN ((((((((((((((x'e89f')AND(t0.c87)))AND(t0.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(0x7dbccdcc)))OR(vt0.c0)))) AND ((CAST(t10.c30 AS BLOB))))) IS TRUE)  as count FROM t10, vt1, vt0, t0);
SELECT ALL COUNT(*) FROM t10, vt1, vt0, t0 WHERE ((((t0.c87)) NOT BETWEEN ((((((((((((((x'e89f')AND(t0.c87)))AND(t0.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(0x7dbccdcc)))OR(vt0.c0)))) AND ((CAST(t10.c30 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((t0.c87)) NOT BETWEEN ((((((((((((((x'e89f')AND(t0.c87)))AND(t0.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(0x7dbccdcc)))OR(vt0.c0)))) AND ((CAST(t10.c30 AS BLOB))))) IS TRUE)  as count FROM t10, vt1, vt0, t0);
SELECT ALL COUNT(*) FROM t10, vt1, vt0, t0 WHERE ((((t0.c87)) NOT BETWEEN ((((((((((((((x'e89f')AND(t0.c87)))AND(t0.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(0x7dbccdcc)))OR(vt0.c0)))) AND ((CAST(t10.c30 AS BLOB)))));
SELECT ALL * FROM t0, vt1 NOT INDEXED WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 NOT INDEXED WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 NOT INDEXED WHERE ((NULL IN ()));
SELECT COUNT(*) FROM t0, vt0, vt1, t10 WHERE (COALESCE((((x'')) BETWEEN ((vt0.c0)) AND ((t0.c87))), ((NULL) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((((x'')) BETWEEN ((vt0.c0)) AND ((t0.c87))), ((NULL) ISNULL))) IS TRUE)  as count FROM t0, vt0, vt1, t10);
SELECT COUNT(*) FROM t0, vt0, vt1, t10 WHERE (COALESCE((((x'')) BETWEEN ((vt0.c0)) AND ((t0.c87))), ((NULL) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((((x'')) BETWEEN ((vt0.c0)) AND ((t0.c87))), ((NULL) ISNULL))) IS TRUE)  as count FROM t0, vt0, vt1, t10);
SELECT COUNT(*) FROM t0, vt0, vt1, t10 WHERE (COALESCE((((x'')) BETWEEN ((vt0.c0)) AND ((t0.c87))), ((NULL) ISNULL)));
SELECT ALL * FROM t10 WHERE (((((t10.c30)OR(t10.c0))) IS FALSE)) ORDER BY ((((CASE WHEN t10.c0 THEN t10.c0 ELSE t10.c0 END)AND(((t10.c30)!=('Ct')))))OR(((((t10.c30)AND(t10.c0)))AND(t10.c30))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t10.c30)OR(t10.c0))) IS FALSE)) IS TRUE)  as count FROM t10 ORDER BY ((((CASE WHEN t10.c0 THEN t10.c0 ELSE t10.c0 END)AND(((t10.c30)!=('Ct')))))OR(((((t10.c30)AND(t10.c0)))AND(t10.c30))))  NULLS FIRST);
SELECT ALL * FROM t10 WHERE (((((t10.c30)OR(t10.c0))) IS FALSE)) ORDER BY ((((CASE WHEN t10.c0 THEN t10.c0 ELSE t10.c0 END)AND(((t10.c30)!=('Ct')))))OR(((((t10.c30)AND(t10.c0)))AND(t10.c30))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t10.c30)OR(t10.c0))) IS FALSE)) IS TRUE)  as count FROM t10 ORDER BY ((((CASE WHEN t10.c0 THEN t10.c0 ELSE t10.c0 END)AND(((t10.c30)!=('Ct')))))OR(((((t10.c30)AND(t10.c0)))AND(t10.c30))))  NULLS FIRST);
SELECT ALL * FROM t10 WHERE (((((t10.c30)OR(t10.c0))) IS FALSE)) ORDER BY ((((CASE WHEN t10.c0 THEN t10.c0 ELSE t10.c0 END)AND(((t10.c30)!=('Ct')))))OR(((((t10.c30)AND(t10.c0)))AND(t10.c30))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t10 INNER JOIN vt0 ON ((((((t0.c0) NOT BETWEEN (t0.c87) AND (t0.c87)))AND(((t0.c87)<<(vt0.c0)))))OR(t0.c0)) FULL OUTER JOIN t0 ON CAST((~ (vt0.c0)) AS REAL) WHERE (((x'')%(((t10.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')%(((t10.c0)>(vt0.c0))))) IS TRUE)  as count FROM t10 INNER JOIN vt0 ON ((((((t0.c0) NOT BETWEEN (t0.c87) AND (t0.c87)))AND(((t0.c87)<<(vt0.c0)))))OR(t0.c0)) FULL OUTER JOIN t0 ON CAST((~ (vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM t10 INNER JOIN vt0 ON ((((((t0.c0) NOT BETWEEN (t0.c87) AND (t0.c87)))AND(((t0.c87)<<(vt0.c0)))))OR(t0.c0)) FULL OUTER JOIN t0 ON CAST((~ (vt0.c0)) AS REAL) WHERE (((x'')%(((t10.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')%(((t10.c0)>(vt0.c0))))) IS TRUE)  as count FROM t10 INNER JOIN vt0 ON ((((((t0.c0) NOT BETWEEN (t0.c87) AND (t0.c87)))AND(((t0.c87)<<(vt0.c0)))))OR(t0.c0)) FULL OUTER JOIN t0 ON CAST((~ (vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((NOT (((vt1.c0)==(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0)==(t0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((NOT (((vt1.c0)==(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0)==(t0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((NOT (((vt1.c0)==(t0.c0)))));
SELECT ALL * FROM t10, vt0 WHERE (GLOB(((vt0.c0) BETWEEN (t10.c30) AND (t10.c0)), NULL));
SELECT SUM(count) FROM (SELECT ((GLOB(((vt0.c0) BETWEEN (t10.c30) AND (t10.c0)), NULL)) IS TRUE)  as count FROM t10, vt0);
SELECT ALL * FROM t10, vt0 WHERE (GLOB(((vt0.c0) BETWEEN (t10.c30) AND (t10.c0)), NULL));
SELECT SUM(count) FROM (SELECT ((GLOB(((vt0.c0) BETWEEN (t10.c30) AND (t10.c0)), NULL)) IS TRUE)  as count FROM t10, vt0);
SELECT ALL * FROM t10, vt0 WHERE (GLOB(((vt0.c0) BETWEEN (t10.c30) AND (t10.c0)), NULL));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY (((~ (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((((('1664117962')AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, ((96280345) BETWEEN (((vt0.c0)|(NULL))) AND (((vt0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((((('1664117962')AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, ((96280345) BETWEEN (((vt0.c0)|(NULL))) AND (((vt0.c0) ISNULL))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY (((~ (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((((('1664117962')AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, ((96280345) BETWEEN (((vt0.c0)|(NULL))) AND (((vt0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((((('1664117962')AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, ((96280345) BETWEEN (((vt0.c0)|(NULL))) AND (((vt0.c0) ISNULL))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY (((~ (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((((('1664117962')AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, ((96280345) BETWEEN (((vt0.c0)|(NULL))) AND (((vt0.c0) ISNULL))) DESC;
SELECT ALL COUNT(*) FROM vt1, t10 WHERE (json_type((((t10.c30))<((t10.c0)))));
SELECT SUM(count) FROM (SELECT ((json_type((((t10.c30))<((t10.c0))))) IS TRUE)  as count FROM vt1, t10);
SELECT ALL COUNT(*) FROM vt1, t10 WHERE (json_type((((t10.c30))<((t10.c0)))));
SELECT SUM(count) FROM (SELECT ((json_type((((t10.c30))<((t10.c0))))) IS TRUE)  as count FROM vt1, t10);
SELECT ALL COUNT(*) FROM vt1, t10 WHERE (json_type((((t10.c30))<((t10.c0)))));
SELECT COUNT(*) FROM t10, vt1, t0, vt0 WHERE ((NOT (t0.c0))) ORDER BY ((((t10.c0, vt0.c0, NULL, t10.c30, t0.c0)) BETWEEN ((t10.c30, t0.c87, t0.c0, vt1.c0, vt0.c0)) AND ((t0.c0, vt1.c0, t10.c0, t0.c0, t10.c30))) IN ())  NULLS LAST, ((vt1.c0) BETWEEN (((t0.c87) BETWEEN (vt0.c0) AND (x''))) AND (NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c0))) IS TRUE)  as count FROM t10, vt1, t0, vt0 ORDER BY ((((t10.c0, vt0.c0, NULL, t10.c30, t0.c0)) BETWEEN ((t10.c30, t0.c87, t0.c0, vt1.c0, vt0.c0)) AND ((t0.c0, vt1.c0, t10.c0, t0.c0, t10.c30))) IN ())  NULLS LAST, ((vt1.c0) BETWEEN (((t0.c87) BETWEEN (vt0.c0) AND (x''))) AND (NULL)) DESC);
SELECT COUNT(*) FROM t10, vt1, t0, vt0 WHERE ((NOT (t0.c0))) ORDER BY ((((t10.c0, vt0.c0, NULL, t10.c30, t0.c0)) BETWEEN ((t10.c30, t0.c87, t0.c0, vt1.c0, vt0.c0)) AND ((t0.c0, vt1.c0, t10.c0, t0.c0, t10.c30))) IN ())  NULLS LAST, ((vt1.c0) BETWEEN (((t0.c87) BETWEEN (vt0.c0) AND (x''))) AND (NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c0))) IS TRUE)  as count FROM t10, vt1, t0, vt0 ORDER BY ((((t10.c0, vt0.c0, NULL, t10.c30, t0.c0)) BETWEEN ((t10.c30, t0.c87, t0.c0, vt1.c0, vt0.c0)) AND ((t0.c0, vt1.c0, t10.c0, t0.c0, t10.c30))) IN ())  NULLS LAST, ((vt1.c0) BETWEEN (((t0.c87) BETWEEN (vt0.c0) AND (x''))) AND (NULL)) DESC);
SELECT COUNT(*) FROM t10, vt1, t0, vt0 WHERE ((NOT (t0.c0))) ORDER BY ((((t10.c0, vt0.c0, NULL, t10.c30, t0.c0)) BETWEEN ((t10.c30, t0.c87, t0.c0, vt1.c0, vt0.c0)) AND ((t0.c0, vt1.c0, t10.c0, t0.c0, t10.c30))) IN ())  NULLS LAST, ((vt1.c0) BETWEEN (((t0.c87) BETWEEN (vt0.c0) AND (x''))) AND (NULL)) DESC;
SELECT ALL * FROM t0, vt1, vt0, t10 WHERE (((('', (- ('MJl⯣n]')), vt0.c0 COLLATE RTRIM))!=((((t0.c87) IS TRUE), t0.c0, HEX(vt0.c0))))) ORDER BY (- (((t0.c0)LIKE(vt0.c0)))), CASE ((((vt0.c0)AND(vt1.c0)))OR(t0.c0))  WHEN t0.c0 COLLATE BINARY THEN t10.c0 ELSE ('E䏐' IN (t10.c30)) END ASC  NULLS LAST, CAST(t10.c30 AS NUMERIC) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((('', (- ('MJl⯣n]')), vt0.c0 COLLATE RTRIM))<>((((t0.c87) IS TRUE), t0.c0, HEX(vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, t10 ORDER BY (- (((t0.c0)LIKE(vt0.c0)))), CASE ((((vt0.c0)AND(vt1.c0)))OR(t0.c0))  WHEN t0.c0 COLLATE BINARY THEN t10.c0 ELSE ('E䏐' IN (t10.c30)) END ASC  NULLS LAST, CAST(t10.c30 AS NUMERIC) COLLATE NOCASE);
SELECT ALL * FROM t0, vt1, vt0, t10 WHERE (((('', (- ('MJl⯣n]')), vt0.c0 COLLATE RTRIM))!=((((t0.c87) IS TRUE), t0.c0, HEX(vt0.c0))))) ORDER BY (- (((t0.c0)LIKE(vt0.c0)))), CASE ((((vt0.c0)AND(vt1.c0)))OR(t0.c0))  WHEN t0.c0 COLLATE BINARY THEN t10.c0 ELSE ('E䏐' IN (t10.c30)) END ASC  NULLS LAST, CAST(t10.c30 AS NUMERIC) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((('', (- ('MJl⯣n]')), vt0.c0 COLLATE RTRIM))<>((((t0.c87) IS TRUE), t0.c0, HEX(vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, t10 ORDER BY (- (((t0.c0)LIKE(vt0.c0)))), CASE ((((vt0.c0)AND(vt1.c0)))OR(t0.c0))  WHEN t0.c0 COLLATE BINARY THEN t10.c0 ELSE ('E䏐' IN (t10.c30)) END ASC  NULLS LAST, CAST(t10.c30 AS NUMERIC) COLLATE NOCASE);
SELECT ALL * FROM t0, vt1, vt0, t10 WHERE (((('', (- ('MJl⯣n]')), vt0.c0 COLLATE RTRIM))!=((((t0.c87) IS TRUE), t0.c0, HEX(vt0.c0))))) ORDER BY (- (((t0.c0)LIKE(vt0.c0)))), CASE ((((vt0.c0)AND(vt1.c0)))OR(t0.c0))  WHEN t0.c0 COLLATE BINARY THEN t10.c0 ELSE ('E䏐' IN (t10.c30)) END ASC  NULLS LAST, CAST(t10.c30 AS NUMERIC) COLLATE NOCASE;
SELECT * FROM t0, vt0, t10, vt1 WHERE (NULLIF((- (t0.c0)), (((t0.c0))!=((t10.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((- (t0.c0)), (((t0.c0))!=((t10.c0))))) IS TRUE)  as count FROM t0, vt0, t10, vt1);
SELECT * FROM t0, vt0, t10, vt1 WHERE (NULLIF((- (t0.c0)), (((t0.c0))!=((t10.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((- (t0.c0)), (((t0.c0))!=((t10.c0))))) IS TRUE)  as count FROM t0, vt0, t10, vt1);
SELECT * FROM t0, vt0, t10, vt1 WHERE (NULLIF((- (t0.c0)), (((t0.c0))!=((t10.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY LIKELIHOOD(DISTINCT (NULL IN ()), 0.5108602314322457);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY LIKELIHOOD(DISTINCT (NULL IN ()), 0.5108602314322457));
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY LIKELIHOOD(DISTINCT (NULL IN ()), 0.5108602314322457);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY LIKELIHOOD(DISTINCT (NULL IN ()), 0.5108602314322457));
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY LIKELIHOOD(DISTINCT (NULL IN ()), 0.5108602314322457);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))+(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0)))+(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))+(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0)))+(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))+(((vt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1, t10, vt0 WHERE ((((t10.c30 IN ())) NOTNULL)) ORDER BY ((vt1.c0 COLLATE BINARY)AND(((vt1.c0)IS(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t10.c30 IN ())) NOTNULL)) IS TRUE)  as count FROM vt1, t10, vt0 ORDER BY ((vt1.c0 COLLATE BINARY)AND(((vt1.c0)IS(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t10, vt0 WHERE ((((t10.c30 IN ())) NOTNULL)) ORDER BY ((vt1.c0 COLLATE BINARY)AND(((vt1.c0)IS(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t10.c30 IN ())) NOTNULL)) IS TRUE)  as count FROM vt1, t10, vt0 ORDER BY ((vt1.c0 COLLATE BINARY)AND(((vt1.c0)IS(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t10, vt0 WHERE ((((t10.c30 IN ())) NOTNULL)) ORDER BY ((vt1.c0 COLLATE BINARY)AND(((vt1.c0)IS(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1, t10, vt0 WHERE ((((~ (vt0.c0)))<(LIKELIHOOD(DISTINCT t0.c87, 0.005338752395577795)))) ORDER BY CAST(NULLIF(DISTINCT t10.c30, vt0.c0) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))<(LIKELIHOOD(DISTINCT t0.c87, 0.005338752395577795)))) IS TRUE)  as count FROM t0, vt1, t10, vt0 ORDER BY CAST(NULLIF(DISTINCT t10.c30, vt0.c0) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, vt1, t10, vt0 WHERE ((((~ (vt0.c0)))<(LIKELIHOOD(DISTINCT t0.c87, 0.005338752395577795)))) ORDER BY CAST(NULLIF(DISTINCT t10.c30, vt0.c0) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))<(LIKELIHOOD(DISTINCT t0.c87, 0.005338752395577795)))) IS TRUE)  as count FROM t0, vt1, t10, vt0 ORDER BY CAST(NULLIF(DISTINCT t10.c30, vt0.c0) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, vt1, t10, vt0 WHERE ((((~ (vt0.c0)))<(LIKELIHOOD(DISTINCT t0.c87, 0.005338752395577795)))) ORDER BY CAST(NULLIF(DISTINCT t10.c30, vt0.c0) AS NUMERIC);
SELECT ALL * FROM t10, vt0, vt1 FULL OUTER JOIN t0 ON (((vt1.c0 IN (t10.c30)))||(((vt1.c0)OR(t10.c0)))) WHERE (LTRIM(((((((((t0.c87)AND(t0.c0)))AND(t10.c30)))AND(t0.c87)))AND(t10.c30)))) ORDER BY (((t10.c30 IN ()))GLOB('-801103250'))  NULLS FIRST, ((((((t10.c30)*(t0.c87)))AND(CASE WHEN t0.c87 THEN t10.c0 WHEN t0.c0 THEN t10.c0 WHEN t0.c87 THEN t0.c0 ELSE 752357415 END)))AND((NOT (x'')))) ASC  NULLS FIRST, ((((CAST(t10.c0 AS TEXT))OR(CAST(t10.c0 AS REAL))))AND(vt1.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((((((t0.c87)AND(t0.c0)))AND(t10.c30)))AND(t0.c87)))AND(t10.c30)))) IS TRUE)  as count FROM t10, vt0, vt1 FULL OUTER JOIN t0 ON (((vt1.c0 IN (t10.c30)))||(((vt1.c0)OR(t10.c0)))) ORDER BY (((t10.c30 IN ()))GLOB('-801103250'))  NULLS FIRST, ((((((t10.c30)*(t0.c87)))AND(CASE WHEN t0.c87 THEN t10.c0 WHEN t0.c0 THEN t10.c0 WHEN t0.c87 THEN t0.c0 ELSE 752357415 END)))AND((NOT (x'')))) ASC  NULLS FIRST, ((((CAST(t10.c0 AS TEXT))OR(CAST(t10.c0 AS REAL))))AND(vt1.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL * FROM t10, vt0, vt1 FULL OUTER JOIN t0 ON (((vt1.c0 IN (t10.c30)))||(((vt1.c0)OR(t10.c0)))) WHERE (LTRIM(((((((((t0.c87)AND(t0.c0)))AND(t10.c30)))AND(t0.c87)))AND(t10.c30)))) ORDER BY (((t10.c30 IN ()))GLOB('-801103250'))  NULLS FIRST, ((((((t10.c30)*(t0.c87)))AND(CASE WHEN t0.c87 THEN t10.c0 WHEN t0.c0 THEN t10.c0 WHEN t0.c87 THEN t0.c0 ELSE 752357415 END)))AND((NOT (x'')))) ASC  NULLS FIRST, ((((CAST(t10.c0 AS TEXT))OR(CAST(t10.c0 AS REAL))))AND(vt1.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((((((t0.c87)AND(t0.c0)))AND(t10.c30)))AND(t0.c87)))AND(t10.c30)))) IS TRUE)  as count FROM t10, vt0, vt1 FULL OUTER JOIN t0 ON (((vt1.c0 IN (t10.c30)))||(((vt1.c0)OR(t10.c0)))) ORDER BY (((t10.c30 IN ()))GLOB('-801103250'))  NULLS FIRST, ((((((t10.c30)*(t0.c87)))AND(CASE WHEN t0.c87 THEN t10.c0 WHEN t0.c0 THEN t10.c0 WHEN t0.c87 THEN t0.c0 ELSE 752357415 END)))AND((NOT (x'')))) ASC  NULLS FIRST, ((((CAST(t10.c0 AS TEXT))OR(CAST(t10.c0 AS REAL))))AND(vt1.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL * FROM t10, vt0, vt1 FULL OUTER JOIN t0 ON (((vt1.c0 IN (t10.c30)))||(((vt1.c0)OR(t10.c0)))) WHERE (LTRIM(((((((((t0.c87)AND(t0.c0)))AND(t10.c30)))AND(t0.c87)))AND(t10.c30)))) ORDER BY (((t10.c30 IN ()))GLOB('-801103250'))  NULLS FIRST, ((((((t10.c30)*(t0.c87)))AND(CASE WHEN t0.c87 THEN t10.c0 WHEN t0.c0 THEN t10.c0 WHEN t0.c87 THEN t0.c0 ELSE 752357415 END)))AND((NOT (x'')))) ASC  NULLS FIRST, ((((CAST(t10.c0 AS TEXT))OR(CAST(t10.c0 AS REAL))))AND(vt1.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT * FROM t10, vt0 WHERE ((((t10.c0, ((t10.c0)!=(vt0.c0)), (+ (t10.c0)), ((((vt0.c0)OR(t10.c30)))OR(t10.c0)), CAST(vt0.c0 AS REAL)))<=((((((t10.c30)OR(t10.c0)))AND(vt0.c0)), t10.c30 COLLATE RTRIM, ((t10.c0) BETWEEN (t10.c30) AND (vt0.c0)), (('')+(t10.c0)), (t10.c30 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t10.c0, ((t10.c0)!=(vt0.c0)), (+ (t10.c0)), ((((vt0.c0)OR(t10.c30)))OR(t10.c0)), CAST(vt0.c0 AS REAL)))<=((((((t10.c30)OR(t10.c0)))AND(vt0.c0)), t10.c30 COLLATE RTRIM, ((t10.c0) BETWEEN (t10.c30) AND (vt0.c0)), (('')+(t10.c0)), (t10.c30 IN ()))))) IS TRUE)  as count FROM t10, vt0);
SELECT * FROM t10, vt0 WHERE ((((t10.c0, ((t10.c0)!=(vt0.c0)), (+ (t10.c0)), ((((vt0.c0)OR(t10.c30)))OR(t10.c0)), CAST(vt0.c0 AS REAL)))<=((((((t10.c30)OR(t10.c0)))AND(vt0.c0)), t10.c30 COLLATE RTRIM, ((t10.c0) BETWEEN (t10.c30) AND (vt0.c0)), (('')+(t10.c0)), (t10.c30 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t10.c0, ((t10.c0)!=(vt0.c0)), (+ (t10.c0)), ((((vt0.c0)OR(t10.c30)))OR(t10.c0)), CAST(vt0.c0 AS REAL)))<=((((((t10.c30)OR(t10.c0)))AND(vt0.c0)), t10.c30 COLLATE RTRIM, ((t10.c0) BETWEEN (t10.c30) AND (vt0.c0)), (('')+(t10.c0)), (t10.c30 IN ()))))) IS TRUE)  as count FROM t10, vt0);
SELECT * FROM t10, vt0 WHERE ((((t10.c0, ((t10.c0)!=(vt0.c0)), (+ (t10.c0)), ((((vt0.c0)OR(t10.c30)))OR(t10.c0)), CAST(vt0.c0 AS REAL)))<=((((((t10.c30)OR(t10.c0)))AND(vt0.c0)), t10.c30 COLLATE RTRIM, ((t10.c0) BETWEEN (t10.c30) AND (vt0.c0)), (('')+(t10.c0)), (t10.c30 IN ())))));
SELECT * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c87))) BETWEEN (CASE t0.c0  WHEN t0.c87 THEN t0.c0 END) AND (((t0.c0)IS(1497383500)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(t0.c87))) BETWEEN (CASE t0.c0  WHEN t0.c87 THEN t0.c0 END) AND (((t0.c0)IS(1497383500))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c87))) BETWEEN (CASE t0.c0  WHEN t0.c87 THEN t0.c0 END) AND (((t0.c0)IS(1497383500)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(t0.c87))) BETWEEN (CASE t0.c0  WHEN t0.c87 THEN t0.c0 END) AND (((t0.c0)IS(1497383500))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c87))) BETWEEN (CASE t0.c0  WHEN t0.c87 THEN t0.c0 END) AND (((t0.c0)IS(1497383500)))));
SELECT COUNT(*) FROM vt0, t10, vt1 WHERE (((((t10.c30)OR(t10.c0)))AND(t10.c0)) COLLATE NOCASE) ORDER BY ((((CAST(0Xfffffffffb57e44b AS REAL))AND(((t10.c0)IS(vt1.c0)))))OR(((((t10.c0)OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c30)OR(t10.c0)))AND(t10.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t10, vt1 ORDER BY ((((CAST(0Xfffffffffb57e44b AS REAL))AND(((t10.c0)IS(vt1.c0)))))OR(((((t10.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt0, t10, vt1 WHERE (((((t10.c30)OR(t10.c0)))AND(t10.c0)) COLLATE NOCASE) ORDER BY ((((CAST(0Xfffffffffb57e44b AS REAL))AND(((t10.c0)IS(vt1.c0)))))OR(((((t10.c0)OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c30)OR(t10.c0)))AND(t10.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t10, vt1 ORDER BY ((((CAST(0Xfffffffffb57e44b AS REAL))AND(((t10.c0)IS(vt1.c0)))))OR(((((t10.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt0, t10, vt1 WHERE (((((t10.c30)OR(t10.c0)))AND(t10.c0)) COLLATE NOCASE) ORDER BY ((((CAST(0Xfffffffffb57e44b AS REAL))AND(((t10.c0)IS(vt1.c0)))))OR(((((t10.c0)OR(vt1.c0)))AND(vt1.c0))));
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((- (((0.10489239568071851) IS FALSE)))) ORDER BY (+ (vt0.c0 COLLATE NOCASE))  NULLS FIRST, CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (- (t0.c0)) THEN (NOT (vt0.c0)) ELSE t0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((- (((0.10489239568071851) IS FALSE)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (+ (vt0.c0 COLLATE NOCASE))  NULLS FIRST, CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (- (t0.c0)) THEN (NOT (vt0.c0)) ELSE t0.c0 END);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((- (((0.10489239568071851) IS FALSE)))) ORDER BY (+ (vt0.c0 COLLATE NOCASE))  NULLS FIRST, CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (- (t0.c0)) THEN (NOT (vt0.c0)) ELSE t0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((- (((0.10489239568071851) IS FALSE)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (+ (vt0.c0 COLLATE NOCASE))  NULLS FIRST, CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (- (t0.c0)) THEN (NOT (vt0.c0)) ELSE t0.c0 END);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((- (((0.10489239568071851) IS FALSE)))) ORDER BY (+ (vt0.c0 COLLATE NOCASE))  NULLS FIRST, CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (- (t0.c0)) THEN (NOT (vt0.c0)) ELSE t0.c0 END;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((('-649740329')IS(vt1.c0)))+(CAST(vt0.c0 AS REAL)))) ORDER BY (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('-649740329')IS(vt1.c0)))+(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((('-649740329')IS(vt1.c0)))+(CAST(vt0.c0 AS REAL)))) ORDER BY (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('-649740329')IS(vt1.c0)))+(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((('-649740329')IS(vt1.c0)))+(CAST(vt0.c0 AS REAL)))) ORDER BY (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC;
SELECT ALL * FROM t10, vt0 WHERE ('vT8#[w');
SELECT SUM(count) FROM (SELECT ALL (('vT8#[w') IS TRUE)  as count FROM t10, vt0);
SELECT ALL * FROM t10, vt0 WHERE ('vT8#[w');
SELECT SUM(count) FROM (SELECT ALL (('vT8#[w') IS TRUE)  as count FROM t10, vt0);
SELECT ALL * FROM t10, vt0 WHERE ('vT8#[w');
SELECT COUNT(*) FROM vt1 CROSS JOIN t10 ON CAST(((t10.c0)-(t0.c0)) AS INTEGER) CROSS JOIN t0 ON LIKE(((t10.c30)&(vt1.c0)), (- (vt1.c0)), '%') FULL OUTER JOIN vt0 ON CASE (((t10.c0))!=((vt1.c0)))  WHEN (+ ('v꼺')) THEN ((t10.c0) BETWEEN ('}') AND (vt1.c0)) ELSE ((t0.c87) BETWEEN ('eX') AND (t10.c0)) END WHERE (CASE ((t0.c0)*(x''))  WHEN json_array_length(t0.c0, t10.c30) THEN ((t10.c30)IS(t10.c30)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)*(x''))  WHEN json_array_length(t0.c0, t10.c30) THEN ((t10.c30)IS(t10.c30)) END) IS TRUE)  as count FROM vt1 CROSS JOIN t10 ON CAST(((t10.c0)-(t0.c0)) AS INTEGER) CROSS JOIN t0 ON LIKE(((t10.c30)&(vt1.c0)), (- (vt1.c0)), '%') FULL OUTER JOIN vt0 ON CASE (((t10.c0))!=((vt1.c0)))  WHEN (+ ('v꼺')) THEN ((t10.c0) BETWEEN ('}') AND (vt1.c0)) ELSE ((t0.c87) BETWEEN ('eX') AND (t10.c0)) END);
SELECT COUNT(*) FROM vt1 CROSS JOIN t10 ON CAST(((t10.c0)-(t0.c0)) AS INTEGER) CROSS JOIN t0 ON LIKE(((t10.c30)&(vt1.c0)), (- (vt1.c0)), '%') FULL OUTER JOIN vt0 ON CASE (((t10.c0))!=((vt1.c0)))  WHEN (+ ('v꼺')) THEN ((t10.c0) BETWEEN ('}') AND (vt1.c0)) ELSE ((t0.c87) BETWEEN ('eX') AND (t10.c0)) END WHERE (CASE ((t0.c0)*(x''))  WHEN json_array_length(t0.c0, t10.c30) THEN ((t10.c30)IS(t10.c30)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)*(x''))  WHEN json_array_length(t0.c0, t10.c30) THEN ((t10.c30)IS(t10.c30)) END) IS TRUE)  as count FROM vt1 CROSS JOIN t10 ON CAST(((t10.c0)-(t0.c0)) AS INTEGER) CROSS JOIN t0 ON LIKE(((t10.c30)&(vt1.c0)), (- (vt1.c0)), '%') FULL OUTER JOIN vt0 ON CASE (((t10.c0))!=((vt1.c0)))  WHEN (+ ('v꼺')) THEN ((t10.c0) BETWEEN ('}') AND (vt1.c0)) ELSE ((t0.c87) BETWEEN ('eX') AND (t10.c0)) END);
SELECT ALL * FROM t10 WHERE ((((0.6802854474114544))!=((((t10.c0) IS FALSE))))) ORDER BY ((CAST(t10.c0 AS BLOB))<<(CAST(t10.c30 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.6802854474114544))<>((((t10.c0) IS FALSE))))) IS TRUE)  as count FROM t10 ORDER BY ((CAST(t10.c0 AS BLOB))<<(CAST(t10.c30 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM t10 WHERE ((((0.6802854474114544))!=((((t10.c0) IS FALSE))))) ORDER BY ((CAST(t10.c0 AS BLOB))<<(CAST(t10.c30 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.6802854474114544))<>((((t10.c0) IS FALSE))))) IS TRUE)  as count FROM t10 ORDER BY ((CAST(t10.c0 AS BLOB))<<(CAST(t10.c30 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM t10 WHERE ((((0.6802854474114544))!=((((t10.c0) IS FALSE))))) ORDER BY ((CAST(t10.c0 AS BLOB))<<(CAST(t10.c30 AS TEXT)))  NULLS LAST;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON x'' CROSS JOIN t10 ON (((t0.c0))==((t10.c0))) COLLATE NOCASE COLLATE RTRIM RIGHT OUTER JOIN t0 ON CAST((((t0.c87))>=((vt1.c0))) AS TEXT) WHERE (TYPEOF(((t10.c0)%(vt1.c0)))) ORDER BY (((((t0.c87)AND(t0.c87)))OR(t0.c0)) IN ()), vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((t10.c0)%(vt1.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON x'' CROSS JOIN t10 ON (((t0.c0))==((t10.c0))) COLLATE NOCASE COLLATE RTRIM RIGHT OUTER JOIN t0 ON CAST((((t0.c87))>=((vt1.c0))) AS TEXT) ORDER BY (((((t0.c87)AND(t0.c87)))OR(t0.c0)) IN ()), vt1.c0 DESC  NULLS FIRST);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON x'' CROSS JOIN t10 ON (((t0.c0))==((t10.c0))) COLLATE NOCASE COLLATE RTRIM RIGHT OUTER JOIN t0 ON CAST((((t0.c87))>=((vt1.c0))) AS TEXT) WHERE (TYPEOF(((t10.c0)%(vt1.c0)))) ORDER BY (((((t0.c87)AND(t0.c87)))OR(t0.c0)) IN ()), vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((t10.c0)%(vt1.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON x'' CROSS JOIN t10 ON (((t0.c0))==((t10.c0))) COLLATE NOCASE COLLATE RTRIM RIGHT OUTER JOIN t0 ON CAST((((t0.c87))>=((vt1.c0))) AS TEXT) ORDER BY (((((t0.c87)AND(t0.c87)))OR(t0.c0)) IN ()), vt1.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t10, vt0 WHERE (((((t10.c30) IS TRUE)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((x'', t10.c30, x'')) NOT BETWEEN ((t10.c30, t10.c30, vt0.c0)) AND ((x'', vt0.c0, t10.c30))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c30) IS TRUE)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((x'', t10.c30, x'')) NOT BETWEEN ((t10.c30, t10.c30, vt0.c0)) AND ((x'', vt0.c0, t10.c30)))))) IS TRUE)  as count FROM t10, vt0);
SELECT ALL COUNT(*) FROM t10, vt0 WHERE (((((t10.c30) IS TRUE)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((x'', t10.c30, x'')) NOT BETWEEN ((t10.c30, t10.c30, vt0.c0)) AND ((x'', vt0.c0, t10.c30))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c30) IS TRUE)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((x'', t10.c30, x'')) NOT BETWEEN ((t10.c30, t10.c30, vt0.c0)) AND ((x'', vt0.c0, t10.c30)))))) IS TRUE)  as count FROM t10, vt0);
SELECT ALL COUNT(*) FROM t10, vt0 WHERE (((((t10.c30) IS TRUE)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((x'', t10.c30, x'')) NOT BETWEEN ((t10.c30, t10.c30, vt0.c0)) AND ((x'', vt0.c0, t10.c30))))));
SELECT ALL COUNT(*) FROM t0, t10 INDEXED BY i64, vt1, vt0 WHERE ((((((t0.c87)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c87)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, t10 INDEXED BY i64, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, t10 INDEXED BY i64, vt1, vt0 WHERE ((((((t0.c87)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c87)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, t10 INDEXED BY i64, vt1, vt0);
SELECT ALL * FROM t0 INDEXED BY i64, t10 WHERE (t10.c0) ORDER BY (((((((((((0xffffffff854a4286))!=((t10.c30))))OR(((NULL)AND(t10.c0)))))OR((((t10.c0))=((t0.c0))))))OR(((t10.c0) ISNULL))))AND(t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t10.c0) IS TRUE)  as count FROM t0 INDEXED BY i64, t10 ORDER BY (((((((((((0xffffffff854a4286))<>((t10.c30))))OR(((NULL)AND(t10.c0)))))OR((((t10.c0))==((t0.c0))))))OR(((t10.c0) ISNULL))))AND(t0.c0)) ASC);
SELECT ALL * FROM t0 INDEXED BY i64, t10 WHERE (t10.c0) ORDER BY (((((((((((0xffffffff854a4286))!=((t10.c30))))OR(((NULL)AND(t10.c0)))))OR((((t10.c0))=((t0.c0))))))OR(((t10.c0) ISNULL))))AND(t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t10.c0) IS TRUE)  as count FROM t0 INDEXED BY i64, t10 ORDER BY (((((((((((0xffffffff854a4286))<>((t10.c30))))OR(((NULL)AND(t10.c0)))))OR((((t10.c0))==((t0.c0))))))OR(((t10.c0) ISNULL))))AND(t0.c0)) ASC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((NULL) NOT NULL) WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN '-1347149242' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt0.c0)AND(vt0.c0)))OR(x'')) WHEN ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)) END WHERE (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS TEXT)) ORDER BY (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((((vt1.c0)>=(vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS TEXT)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((NULL) NOT NULL) WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN '-1347149242' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt0.c0)AND(vt0.c0)))OR(x'')) WHEN ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)) END ORDER BY (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((((vt1.c0)>=(vt1.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((NULL) NOT NULL) WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN '-1347149242' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt0.c0)AND(vt0.c0)))OR(x'')) WHEN ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)) END WHERE (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS TEXT)) ORDER BY (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((((vt1.c0)>=(vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS TEXT)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((NULL) NOT NULL) WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN '-1347149242' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt0.c0)AND(vt0.c0)))OR(x'')) WHEN ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)) END ORDER BY (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((((vt1.c0)>=(vt1.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((NULL) NOT NULL) WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN '-1347149242' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt0.c0)AND(vt0.c0)))OR(x'')) WHEN ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)) END WHERE (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS TEXT)) ORDER BY (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((((vt1.c0)>=(vt1.c0))))) DESC  NULLS LAST;
SELECT * FROM vt0, vt1, t10, t0 WHERE ((((- (t10.c30))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (t10.c30))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t10, t0);
SELECT * FROM vt0, vt1, t10, t0 WHERE ((((- (t10.c30))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (t10.c30))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t10, t0);
SELECT * FROM vt0, vt1, t10, t0 WHERE ((((- (t10.c30))) IS TRUE));
SELECT * FROM vt0, vt1, t10, t0 WHERE (vt0.c0) ORDER BY t0.c0 DESC, ((((((t0.c87) NOT BETWEEN (8.9035468E8) AND (t0.c87)))AND(((((vt1.c0)OR(vt0.c0)))AND(t0.c87)))))OR(((((((((t10.c30)OR(vt1.c0)))OR('')))OR(t0.c87)))AND(vt1.c0)))) ASC  NULLS LAST, ((((vt0.c0) IS FALSE)) NOT BETWEEN (((t0.c87)==(vt1.c0))) AND (CASE WHEN t10.c30 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1, t10, t0 ORDER BY t0.c0 DESC, ((((((t0.c87) NOT BETWEEN (8.9035468E8) AND (t0.c87)))AND(((((vt1.c0)OR(vt0.c0)))AND(t0.c87)))))OR(((((((((t10.c30)OR(vt1.c0)))OR('')))OR(t0.c87)))AND(vt1.c0)))) ASC  NULLS LAST, ((((vt0.c0) IS FALSE)) NOT BETWEEN (((t0.c87)==(vt1.c0))) AND (CASE WHEN t10.c30 THEN t0.c0 END)));
SELECT * FROM vt0, vt1, t10, t0 WHERE (vt0.c0) ORDER BY t0.c0 DESC, ((((((t0.c87) NOT BETWEEN (8.9035468E8) AND (t0.c87)))AND(((((vt1.c0)OR(vt0.c0)))AND(t0.c87)))))OR(((((((((t10.c30)OR(vt1.c0)))OR('')))OR(t0.c87)))AND(vt1.c0)))) ASC  NULLS LAST, ((((vt0.c0) IS FALSE)) NOT BETWEEN (((t0.c87)==(vt1.c0))) AND (CASE WHEN t10.c30 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1, t10, t0 ORDER BY t0.c0 DESC, ((((((t0.c87) NOT BETWEEN (8.9035468E8) AND (t0.c87)))AND(((((vt1.c0)OR(vt0.c0)))AND(t0.c87)))))OR(((((((((t10.c30)OR(vt1.c0)))OR('')))OR(t0.c87)))AND(vt1.c0)))) ASC  NULLS LAST, ((((vt0.c0) IS FALSE)) NOT BETWEEN (((t0.c87)==(vt1.c0))) AND (CASE WHEN t10.c30 THEN t0.c0 END)));
SELECT * FROM vt0, vt1, t10, t0 WHERE (vt0.c0) ORDER BY t0.c0 DESC, ((((((t0.c87) NOT BETWEEN (8.9035468E8) AND (t0.c87)))AND(((((vt1.c0)OR(vt0.c0)))AND(t0.c87)))))OR(((((((((t10.c30)OR(vt1.c0)))OR('')))OR(t0.c87)))AND(vt1.c0)))) ASC  NULLS LAST, ((((vt0.c0) IS FALSE)) NOT BETWEEN (((t0.c87)==(vt1.c0))) AND (CASE WHEN t10.c30 THEN t0.c0 END));
SELECT ALL * FROM t10, vt0 WHERE (((- (t10.c30)) IN (SUBSTR(t10.c30, t10.c0)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST, (- (CASE WHEN t10.c0 THEN t10.c0 WHEN t10.c30 THEN vt0.c0 WHEN t10.c0 THEN vt0.c0 ELSE t10.c30 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (t10.c30)) IN (SUBSTR(t10.c30, t10.c0)))) IS TRUE)  as count FROM t10, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST, (- (CASE WHEN t10.c0 THEN t10.c0 WHEN t10.c30 THEN vt0.c0 WHEN t10.c0 THEN vt0.c0 ELSE t10.c30 END))  NULLS LAST);
SELECT ALL * FROM t10, vt0 WHERE (((- (t10.c30)) IN (SUBSTR(t10.c30, t10.c0)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST, (- (CASE WHEN t10.c0 THEN t10.c0 WHEN t10.c30 THEN vt0.c0 WHEN t10.c0 THEN vt0.c0 ELSE t10.c30 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (t10.c30)) IN (SUBSTR(t10.c30, t10.c0)))) IS TRUE)  as count FROM t10, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST, (- (CASE WHEN t10.c0 THEN t10.c0 WHEN t10.c30 THEN vt0.c0 WHEN t10.c0 THEN vt0.c0 ELSE t10.c30 END))  NULLS LAST);
SELECT ALL * FROM t10, vt0 WHERE (((- (t10.c30)) IN (SUBSTR(t10.c30, t10.c0)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST, (- (CASE WHEN t10.c0 THEN t10.c0 WHEN t10.c30 THEN vt0.c0 WHEN t10.c0 THEN vt0.c0 ELSE t10.c30 END))  NULLS LAST;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((CASE t0.c87  WHEN vt1.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c87 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c87 END)IS((t0.c0 IN ()))) RIGHT OUTER JOIN t0 ON (((NOT (t0.c0)))<(vt0.c0)) WHERE (CAST((('tﰇ}(脘')<(t0.c87)) AS REAL)) ORDER BY (((vt0.c0)==(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((('tﰇ}(脘')<(t0.c87)) AS REAL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((CASE t0.c87  WHEN vt1.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c87 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c87 END)IS((t0.c0 IN ()))) RIGHT OUTER JOIN t0 ON (((NOT (t0.c0)))<(vt0.c0)) ORDER BY (((vt0.c0)==(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((CASE t0.c87  WHEN vt1.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c87 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c87 END)IS((t0.c0 IN ()))) RIGHT OUTER JOIN t0 ON (((NOT (t0.c0)))<(vt0.c0)) WHERE (CAST((('tﰇ}(脘')<(t0.c87)) AS REAL)) ORDER BY (((vt0.c0)==(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((('tﰇ}(脘')<(t0.c87)) AS REAL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((CASE t0.c87  WHEN vt1.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c87 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c87 END)IS((t0.c0 IN ()))) RIGHT OUTER JOIN t0 ON (((NOT (t0.c0)))<(vt0.c0)) ORDER BY (((vt0.c0)==(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON (((((t0.c87)AND(vt1.c0)))OR(t0.c87)) IN (((t0.c87) NOT NULL), (t0.c0 IN ()))) WHERE (((CAST(t0.c0 AS INTEGER))-(((t0.c87)=(vt1.c0))))) ORDER BY CAST(((t0.c0) ISNULL) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER))-(((t0.c87)=(vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (((((t0.c87)AND(vt1.c0)))OR(t0.c87)) IN (((t0.c87) NOT NULL), (t0.c0 IN ()))) ORDER BY CAST(((t0.c0) ISNULL) AS TEXT) ASC);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON (((((t0.c87)AND(vt1.c0)))OR(t0.c87)) IN (((t0.c87) NOT NULL), (t0.c0 IN ()))) WHERE (((CAST(t0.c0 AS INTEGER))-(((t0.c87)=(vt1.c0))))) ORDER BY CAST(((t0.c0) ISNULL) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER))-(((t0.c87)=(vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (((((t0.c87)AND(vt1.c0)))OR(t0.c87)) IN (((t0.c87) NOT NULL), (t0.c0 IN ()))) ORDER BY CAST(((t0.c0) ISNULL) AS TEXT) ASC);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON (((((t0.c87)AND(vt1.c0)))OR(t0.c87)) IN (((t0.c87) NOT NULL), (t0.c0 IN ()))) WHERE (((CAST(t0.c0 AS INTEGER))-(((t0.c87)=(vt1.c0))))) ORDER BY CAST(((t0.c0) ISNULL) AS TEXT) ASC;
SELECT * FROM vt1, t0, vt0, t10 WHERE (((((0.9229054663197604) IS TRUE)) BETWEEN (((vt0.c0)IS(vt1.c0))) AND (CASE t0.c0  WHEN vt0.c0 THEN t0.c87 WHEN t10.c30 THEN t0.c87 WHEN '' THEN t0.c87 END)));
SELECT SUM(count) FROM (SELECT ((((((0.9229054663197604) IS TRUE)) BETWEEN (((vt0.c0)IS(vt1.c0))) AND (CASE t0.c0  WHEN vt0.c0 THEN t0.c87 WHEN t10.c30 THEN t0.c87 WHEN '' THEN t0.c87 END))) IS TRUE)  as count FROM vt1, t0, vt0, t10);
SELECT * FROM vt1, t0, vt0, t10 WHERE (((((0.9229054663197604) IS TRUE)) BETWEEN (((vt0.c0)IS(vt1.c0))) AND (CASE t0.c0  WHEN vt0.c0 THEN t0.c87 WHEN t10.c30 THEN t0.c87 WHEN '' THEN t0.c87 END)));
SELECT SUM(count) FROM (SELECT ((((((0.9229054663197604) IS TRUE)) BETWEEN (((vt0.c0)IS(vt1.c0))) AND (CASE t0.c0  WHEN vt0.c0 THEN t0.c87 WHEN t10.c30 THEN t0.c87 WHEN '' THEN t0.c87 END))) IS TRUE)  as count FROM vt1, t0, vt0, t10);
SELECT * FROM vt1, t0, vt0, t10 WHERE (((((0.9229054663197604) IS TRUE)) BETWEEN (((vt0.c0)IS(vt1.c0))) AND (CASE t0.c0  WHEN vt0.c0 THEN t0.c87 WHEN t10.c30 THEN t0.c87 WHEN '' THEN t0.c87 END)));
SELECT * FROM t10, vt1, vt0, t0 WHERE ((((((t10.c30, t0.c87, vt0.c0))>((t0.c0, vt0.c0, t0.c87)))) IS FALSE)) ORDER BY NULL, CAST(CAST(vt1.c0 AS TEXT) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t10.c30, t0.c87, vt0.c0))>((t0.c0, vt0.c0, t0.c87)))) IS FALSE)) IS TRUE)  as count FROM t10, vt1, vt0, t0 ORDER BY NULL, CAST(CAST(vt1.c0 AS TEXT) AS BLOB) DESC);
SELECT * FROM t10, vt1, vt0, t0 WHERE ((((((t10.c30, t0.c87, vt0.c0))>((t0.c0, vt0.c0, t0.c87)))) IS FALSE)) ORDER BY NULL, CAST(CAST(vt1.c0 AS TEXT) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t10.c30, t0.c87, vt0.c0))>((t0.c0, vt0.c0, t0.c87)))) IS FALSE)) IS TRUE)  as count FROM t10, vt1, vt0, t0 ORDER BY NULL, CAST(CAST(vt1.c0 AS TEXT) AS BLOB) DESC);
SELECT * FROM t10, vt1, vt0, t0 WHERE ((((((t10.c30, t0.c87, vt0.c0))>((t0.c0, vt0.c0, t0.c87)))) IS FALSE)) ORDER BY NULL, CAST(CAST(vt1.c0 AS TEXT) AS BLOB) DESC;
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS REAL) RIGHT OUTER JOIN t10 ON (vt1.c0 IN ()) RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c87 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t10.c0 ELSE vt0.c0 END) IS TRUE) WHERE (CASE WHEN ((((t10.c30)AND(vt0.c0)))OR(vt1.c0)) THEN (NOT (NULL)) ELSE (~ (t10.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t10.c30)AND(vt0.c0)))OR(vt1.c0)) THEN (NOT (NULL)) ELSE (~ (t10.c0)) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS REAL) RIGHT OUTER JOIN t10 ON (vt1.c0 IN ()) RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c87 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t10.c0 ELSE vt0.c0 END) IS TRUE));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS REAL) RIGHT OUTER JOIN t10 ON (vt1.c0 IN ()) RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c87 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t10.c0 ELSE vt0.c0 END) IS TRUE) WHERE (CASE WHEN ((((t10.c30)AND(vt0.c0)))OR(vt1.c0)) THEN (NOT (NULL)) ELSE (~ (t10.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t10.c30)AND(vt0.c0)))OR(vt1.c0)) THEN (NOT (NULL)) ELSE (~ (t10.c0)) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS REAL) RIGHT OUTER JOIN t10 ON (vt1.c0 IN ()) RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c87 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t10.c0 ELSE vt0.c0 END) IS TRUE));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS REAL) RIGHT OUTER JOIN t10 ON (vt1.c0 IN ()) RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c87 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t10.c0 ELSE vt0.c0 END) IS TRUE) WHERE (CASE WHEN ((((t10.c30)AND(vt0.c0)))OR(vt1.c0)) THEN (NOT (NULL)) ELSE (~ (t10.c0)) END);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB));
SELECT COUNT(*) FROM vt1, vt0, t10, t0 WHERE ((+ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, t10, t0);
SELECT COUNT(*) FROM vt1, vt0, t10, t0 WHERE ((+ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, t10, t0);
SELECT COUNT(*) FROM vt1, vt0, t10, t0 WHERE ((+ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM t10, vt1, vt0 NOT INDEXED WHERE (0.05078108976355111);
SELECT SUM(count) FROM (SELECT ((0.05078108976355111) IS TRUE)  as count FROM t10, vt1, vt0);
SELECT ALL COUNT(*) FROM t10, vt1, vt0 NOT INDEXED WHERE (0.05078108976355111);
SELECT SUM(count) FROM (SELECT ((0.05078108976355111) IS TRUE)  as count FROM t10, vt1, vt0);
SELECT ALL COUNT(*) FROM t10, vt1, vt0 NOT INDEXED WHERE (0.05078108976355111);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULLIF(t0.c0, t0.c87)) NOT BETWEEN ((t0.c0 IN ())) AND ((t0.c0 IN ())))) ORDER BY ((((t0.c0)&(t0.c87))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t0.c0, t0.c87)) NOT BETWEEN ((t0.c0 IN ())) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)&(t0.c87))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULLIF(t0.c0, t0.c87)) NOT BETWEEN ((t0.c0 IN ())) AND ((t0.c0 IN ())))) ORDER BY ((((t0.c0)&(t0.c87))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t0.c0, t0.c87)) NOT BETWEEN ((t0.c0 IN ())) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)&(t0.c87))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULLIF(t0.c0, t0.c87)) NOT BETWEEN ((t0.c0 IN ())) AND ((t0.c0 IN ())))) ORDER BY ((((t0.c0)&(t0.c87))) NOTNULL) ASC;
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END COLLATE RTRIM);
SELECT * FROM t0, t10 LEFT OUTER JOIN vt0 ON COALESCE((((vt0.c0)) BETWEEN ((t10.c0)) AND ((t0.c0))), ((vt1.c0) NOT BETWEEN (t0.c87) AND (vt1.c0))) FULL OUTER JOIN vt1 ON ((t0.c0)*(NULL)) WHERE (((CAST(t0.c87 AS REAL)) BETWEEN (t0.c87) AND (CASE vt0.c0  WHEN vt1.c0 THEN t0.c87 WHEN '-973192313' THEN t10.c30 WHEN t0.c0 THEN vt1.c0 ELSE t10.c0 END))) ORDER BY ((0xffffffffd5881fe0) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((t10.c30)&(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c87 AS REAL)) BETWEEN (t0.c87) AND (CASE vt0.c0  WHEN vt1.c0 THEN t0.c87 WHEN '-973192313' THEN t10.c30 WHEN t0.c0 THEN vt1.c0 ELSE t10.c0 END))) IS TRUE)  as count FROM t0, t10 LEFT OUTER JOIN vt0 ON COALESCE((((vt0.c0)) BETWEEN ((t10.c0)) AND ((t0.c0))), ((vt1.c0) NOT BETWEEN (t0.c87) AND (vt1.c0))) FULL OUTER JOIN vt1 ON ((t0.c0)*(NULL)) ORDER BY ((0xffffffffd5881fe0) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((t10.c30)&(vt1.c0)))) DESC);
SELECT * FROM t0, t10 LEFT OUTER JOIN vt0 ON COALESCE((((vt0.c0)) BETWEEN ((t10.c0)) AND ((t0.c0))), ((vt1.c0) NOT BETWEEN (t0.c87) AND (vt1.c0))) FULL OUTER JOIN vt1 ON ((t0.c0)*(NULL)) WHERE (((CAST(t0.c87 AS REAL)) BETWEEN (t0.c87) AND (CASE vt0.c0  WHEN vt1.c0 THEN t0.c87 WHEN '-973192313' THEN t10.c30 WHEN t0.c0 THEN vt1.c0 ELSE t10.c0 END))) ORDER BY ((0xffffffffd5881fe0) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((t10.c30)&(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c87 AS REAL)) BETWEEN (t0.c87) AND (CASE vt0.c0  WHEN vt1.c0 THEN t0.c87 WHEN '-973192313' THEN t10.c30 WHEN t0.c0 THEN vt1.c0 ELSE t10.c0 END))) IS TRUE)  as count FROM t0, t10 LEFT OUTER JOIN vt0 ON COALESCE((((vt0.c0)) BETWEEN ((t10.c0)) AND ((t0.c0))), ((vt1.c0) NOT BETWEEN (t0.c87) AND (vt1.c0))) FULL OUTER JOIN vt1 ON ((t0.c0)*(NULL)) ORDER BY ((0xffffffffd5881fe0) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((t10.c30)&(vt1.c0)))) DESC);
SELECT * FROM vt0 LEFT OUTER JOIN t10 ON (~ (((((((((t10.c0)AND(t10.c0)))OR(t10.c30)))OR(t10.c30)))AND(vt0.c0)))) WHERE (((((vt0.c0) NOT BETWEEN (t10.c30) AND (x'')))/((vt0.c0 IN ())))) ORDER BY (((((t10.c30, t10.c0, t10.c0)) BETWEEN ((t10.c30, t10.c0, '1')) AND ((vt0.c0, vt0.c0, '[m&S')))) BETWEEN ((('\nU')<(t10.c0))) AND (t10.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t10.c30) AND (x'')))/((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t10 ON (~ (((((((((t10.c0)AND(t10.c0)))OR(t10.c30)))OR(t10.c30)))AND(vt0.c0)))) ORDER BY (((((t10.c30, t10.c0, t10.c0)) BETWEEN ((t10.c30, t10.c0, '1')) AND ((vt0.c0, vt0.c0, '[m&S')))) BETWEEN ((('\nU')<(t10.c0))) AND (t10.c0 COLLATE RTRIM)) ASC);
SELECT * FROM vt0 LEFT OUTER JOIN t10 ON (~ (((((((((t10.c0)AND(t10.c0)))OR(t10.c30)))OR(t10.c30)))AND(vt0.c0)))) WHERE (((((vt0.c0) NOT BETWEEN (t10.c30) AND (x'')))/((vt0.c0 IN ())))) ORDER BY (((((t10.c30, t10.c0, t10.c0)) BETWEEN ((t10.c30, t10.c0, '1')) AND ((vt0.c0, vt0.c0, '[m&S')))) BETWEEN ((('\nU')<(t10.c0))) AND (t10.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t10.c30) AND (x'')))/((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t10 ON (~ (((((((((t10.c0)AND(t10.c0)))OR(t10.c30)))OR(t10.c30)))AND(vt0.c0)))) ORDER BY (((((t10.c30, t10.c0, t10.c0)) BETWEEN ((t10.c30, t10.c0, '1')) AND ((vt0.c0, vt0.c0, '[m&S')))) BETWEEN ((('\nU')<(t10.c0))) AND (t10.c0 COLLATE RTRIM)) ASC);
SELECT * FROM vt0 LEFT OUTER JOIN t10 ON (~ (((((((((t10.c0)AND(t10.c0)))OR(t10.c30)))OR(t10.c30)))AND(vt0.c0)))) WHERE (((((vt0.c0) NOT BETWEEN (t10.c30) AND (x'')))/((vt0.c0 IN ())))) ORDER BY (((((t10.c30, t10.c0, t10.c0)) BETWEEN ((t10.c30, t10.c0, '1')) AND ((vt0.c0, vt0.c0, '[m&S')))) BETWEEN ((('\nU')<(t10.c0))) AND (t10.c0 COLLATE RTRIM)) ASC;
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON (((t0.c87 COLLATE BINARY, (vt0.c0 IN ()), INSTR(t0.c87, t0.c0)))<((x'', (((t0.c87))>=((NULL))), ((((((((t0.c87)AND(0.22095843055045017)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0))))) WHERE (LIKELY(DISTINCT (~ (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (~ (t0.c0)))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON (((t0.c87 COLLATE BINARY, (vt0.c0 IN ()), INSTR(t0.c87, t0.c0)))<((x'', (((t0.c87))>=((NULL))), ((((((((t0.c87)AND(0.22095843055045017)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON (((t0.c87 COLLATE BINARY, (vt0.c0 IN ()), INSTR(t0.c87, t0.c0)))<((x'', (((t0.c87))>=((NULL))), ((((((((t0.c87)AND(0.22095843055045017)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0))))) WHERE (LIKELY(DISTINCT (~ (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (~ (t0.c0)))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON (((t0.c87 COLLATE BINARY, (vt0.c0 IN ()), INSTR(t0.c87, t0.c0)))<((x'', (((t0.c87))>=((NULL))), ((((((((t0.c87)AND(0.22095843055045017)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON (((t0.c87 COLLATE BINARY, (vt0.c0 IN ()), INSTR(t0.c87, t0.c0)))<((x'', (((t0.c87))>=((NULL))), ((((((((t0.c87)AND(0.22095843055045017)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0))))) WHERE (LIKELY(DISTINCT (~ (t0.c0))));
SELECT ALL * FROM vt0, t0, t10 WHERE ((+ ((((t0.c87, t10.c30, t0.c0))<((t10.c30, t0.c87, 0.789348185331246)))))) ORDER BY (((t10.c0, t0.c87, t10.c30)) NOT BETWEEN (((~ ('-13818599')), CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END, ((t0.c87)AND(t0.c87)))) AND ((t10.c0 COLLATE NOCASE, LIKELIHOOD(t0.c0, 0.301870971274524), ((t0.c87)>(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((((t0.c87, t10.c30, t0.c0))<((t10.c30, t0.c87, 0.789348185331246)))))) IS TRUE)  as count FROM vt0, t0, t10 ORDER BY (((t10.c0, t0.c87, t10.c30)) NOT BETWEEN (((~ ('-13818599')), CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END, ((t0.c87)AND(t0.c87)))) AND ((t10.c0 COLLATE NOCASE, LIKELIHOOD(t0.c0, 0.301870971274524), ((t0.c87)>(vt0.c0))))) ASC);
SELECT ALL * FROM vt0, t0, t10 WHERE ((+ ((((t0.c87, t10.c30, t0.c0))<((t10.c30, t0.c87, 0.789348185331246)))))) ORDER BY (((t10.c0, t0.c87, t10.c30)) NOT BETWEEN (((~ ('-13818599')), CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END, ((t0.c87)AND(t0.c87)))) AND ((t10.c0 COLLATE NOCASE, LIKELIHOOD(t0.c0, 0.301870971274524), ((t0.c87)>(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((((t0.c87, t10.c30, t0.c0))<((t10.c30, t0.c87, 0.789348185331246)))))) IS TRUE)  as count FROM vt0, t0, t10 ORDER BY (((t10.c0, t0.c87, t10.c30)) NOT BETWEEN (((~ ('-13818599')), CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END, ((t0.c87)AND(t0.c87)))) AND ((t10.c0 COLLATE NOCASE, LIKELIHOOD(t0.c0, 0.301870971274524), ((t0.c87)>(vt0.c0))))) ASC);
SELECT ALL * FROM vt0, t0, t10 WHERE ((+ ((((t0.c87, t10.c30, t0.c0))<((t10.c30, t0.c87, 0.789348185331246)))))) ORDER BY (((t10.c0, t0.c87, t10.c30)) NOT BETWEEN (((~ ('-13818599')), CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END, ((t0.c87)AND(t0.c87)))) AND ((t10.c0 COLLATE NOCASE, LIKELIHOOD(t0.c0, 0.301870971274524), ((t0.c87)>(vt0.c0))))) ASC;
SELECT * FROM t10, t0 LEFT OUTER JOIN vt0 ON vt1.c0 FULL OUTER JOIN vt1 ON (((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))>=(((((NULL))<((t0.c0)))))) WHERE (((((UNICODE(NULL))OR(((t10.c0) NOT BETWEEN (x'') AND (t10.c30)))))OR(((t10.c0) NOT BETWEEN (x'') AND (t0.c87))))) ORDER BY (~ (((((((((t10.c0)OR(t10.c0)))OR(NULL)))AND(vt1.c0)))OR(t10.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((UNICODE(NULL))OR(((t10.c0) NOT BETWEEN (x'') AND (t10.c30)))))OR(((t10.c0) NOT BETWEEN (x'') AND (t0.c87))))) IS TRUE)  as count FROM t10, t0 LEFT OUTER JOIN vt0 ON vt1.c0 FULL OUTER JOIN vt1 ON (((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))>=(((((NULL))<((t0.c0)))))) ORDER BY (~ (((((((((t10.c0)OR(t10.c0)))OR(NULL)))AND(vt1.c0)))OR(t10.c0)))) ASC  NULLS LAST);
SELECT * FROM t10, t0 LEFT OUTER JOIN vt0 ON vt1.c0 FULL OUTER JOIN vt1 ON (((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))>=(((((NULL))<((t0.c0)))))) WHERE (((((UNICODE(NULL))OR(((t10.c0) NOT BETWEEN (x'') AND (t10.c30)))))OR(((t10.c0) NOT BETWEEN (x'') AND (t0.c87))))) ORDER BY (~ (((((((((t10.c0)OR(t10.c0)))OR(NULL)))AND(vt1.c0)))OR(t10.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((UNICODE(NULL))OR(((t10.c0) NOT BETWEEN (x'') AND (t10.c30)))))OR(((t10.c0) NOT BETWEEN (x'') AND (t0.c87))))) IS TRUE)  as count FROM t10, t0 LEFT OUTER JOIN vt0 ON vt1.c0 FULL OUTER JOIN vt1 ON (((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))>=(((((NULL))<((t0.c0)))))) ORDER BY (~ (((((((((t10.c0)OR(t10.c0)))OR(NULL)))AND(vt1.c0)))OR(t10.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((0.8500493529987118) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((t0.c87) IS FALSE)))) ORDER BY (t0.c87 IN ()) ASC  NULLS LAST, (((((t0.c87)IS NOT(t0.c0)), (((t0.c87))<((t0.c0))), ((t0.c87) IS FALSE)))<(((+ (t0.c0)), ((t0.c87)||(t0.c0)), ((((((((t0.c0)OR(0.7850635632531455)))OR(t0.c87)))AND(t0.c0)))AND(t0.c87))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.8500493529987118) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((t0.c87) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY (t0.c87 IN ()) ASC  NULLS LAST, (((((t0.c87)IS NOT(t0.c0)), (((t0.c87))<((t0.c0))), ((t0.c87) IS FALSE)))<(((+ (t0.c0)), ((t0.c87)||(t0.c0)), ((((((((t0.c0)OR(0.7850635632531455)))OR(t0.c87)))AND(t0.c0)))AND(t0.c87))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((0.8500493529987118) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((t0.c87) IS FALSE)))) ORDER BY (t0.c87 IN ()) ASC  NULLS LAST, (((((t0.c87)IS NOT(t0.c0)), (((t0.c87))<((t0.c0))), ((t0.c87) IS FALSE)))<(((+ (t0.c0)), ((t0.c87)||(t0.c0)), ((((((((t0.c0)OR(0.7850635632531455)))OR(t0.c87)))AND(t0.c0)))AND(t0.c87))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.8500493529987118) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((t0.c87) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY (t0.c87 IN ()) ASC  NULLS LAST, (((((t0.c87)IS NOT(t0.c0)), (((t0.c87))<((t0.c0))), ((t0.c87) IS FALSE)))<(((+ (t0.c0)), ((t0.c87)||(t0.c0)), ((((((((t0.c0)OR(0.7850635632531455)))OR(t0.c87)))AND(t0.c0)))AND(t0.c87))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((0.8500493529987118) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((t0.c87) IS FALSE)))) ORDER BY (t0.c87 IN ()) ASC  NULLS LAST, (((((t0.c87)IS NOT(t0.c0)), (((t0.c87))<((t0.c0))), ((t0.c87) IS FALSE)))<(((+ (t0.c0)), ((t0.c87)||(t0.c0)), ((((((((t0.c0)OR(0.7850635632531455)))OR(t0.c87)))AND(t0.c0)))AND(t0.c87))))) ASC  NULLS LAST;
SELECT * FROM vt1, t10, vt0, t0 WHERE (((CAST(vt1.c0 AS NUMERIC))*(((t10.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC))*(((t10.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1, t10, vt0, t0);
SELECT * FROM vt1, t10, vt0, t0 WHERE (((CAST(vt1.c0 AS NUMERIC))*(((t10.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC))*(((t10.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1, t10, vt0, t0);
SELECT * FROM vt1, t10, vt0, t0 WHERE (((CAST(vt1.c0 AS NUMERIC))*(((t10.c0)>=(vt1.c0)))));
SELECT * FROM vt1, t0, t10, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t0, t10, vt0);
SELECT * FROM vt1, t0, t10, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t0, t10, vt0);
SELECT * FROM vt1, t0, t10, vt0 WHERE (x'');
SELECT * FROM vt0, t10, t0 WHERE ((- (CASE t0.c87  WHEN t0.c87 THEN t10.c30 ELSE t10.c0 END))) ORDER BY t10.c0 DESC;
SELECT SUM(count) FROM (SELECT (((- (CASE t0.c87  WHEN t0.c87 THEN t10.c30 ELSE t10.c0 END))) IS TRUE)  as count FROM vt0, t10, t0 ORDER BY t10.c0 DESC);
SELECT * FROM vt0, t10, t0 WHERE ((- (CASE t0.c87  WHEN t0.c87 THEN t10.c30 ELSE t10.c0 END))) ORDER BY t10.c0 DESC;
SELECT SUM(count) FROM (SELECT (((- (CASE t0.c87  WHEN t0.c87 THEN t10.c30 ELSE t10.c0 END))) IS TRUE)  as count FROM vt0, t10, t0 ORDER BY t10.c0 DESC);
SELECT * FROM vt0, t10, t0 WHERE ((- (CASE t0.c87  WHEN t0.c87 THEN t10.c30 ELSE t10.c0 END))) ORDER BY t10.c0 DESC;
SELECT ALL COUNT(*) FROM t10, vt0, t0 NATURAL JOIN vt1 WHERE (((LIKELY(vt0.c0)) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('{h}k')))) AND (((t0.c87) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(vt0.c0)) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('{h}k')))) AND (((t0.c87) NOTNULL)))) IS TRUE)  as count FROM t10, vt0, t0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t10, vt0, t0 NATURAL JOIN vt1 WHERE (((LIKELY(vt0.c0)) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('{h}k')))) AND (((t0.c87) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(vt0.c0)) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('{h}k')))) AND (((t0.c87) NOTNULL)))) IS TRUE)  as count FROM t10, vt0, t0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t10, vt0, t0 NATURAL JOIN vt1 WHERE (((LIKELY(vt0.c0)) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('{h}k')))) AND (((t0.c87) NOTNULL))));
SELECT ALL * FROM t0 NATURAL JOIN vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT ALL * FROM t0 NATURAL JOIN vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT ALL * FROM t0 NATURAL JOIN vt1 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN t10 ON (((~ (t10.c0)))OR(LOWER(DISTINCT t0.c87))) WHERE (t10.c30);
SELECT SUM(count) FROM (SELECT ((t10.c30) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN t10 ON (((~ (t10.c0)))OR(LOWER(DISTINCT t0.c87))));
SELECT ALL COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN t10 ON (((~ (t10.c0)))OR(LOWER(DISTINCT t0.c87))) WHERE (t10.c30);
SELECT SUM(count) FROM (SELECT ((t10.c30) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN t10 ON (((~ (t10.c0)))OR(LOWER(DISTINCT t0.c87))));
SELECT ALL COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN t10 ON (((~ (t10.c0)))OR(LOWER(DISTINCT t0.c87))) WHERE (t10.c30);
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c0))) IS FALSE)) ORDER BY ((vt1.c0) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c0))) IS FALSE)) ORDER BY ((vt1.c0) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c0))) IS FALSE)) ORDER BY ((vt1.c0) IS TRUE) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)<<(vt1.c0))) BETWEEN (((t0.c87) ISNULL)) AND (GLOB(vt0.c0, vt0.c0))) WHERE (t0.c87);
SELECT SUM(count) FROM (SELECT ALL ((t0.c87) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)<<(vt1.c0))) BETWEEN (((t0.c87) ISNULL)) AND (GLOB(vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)<<(vt1.c0))) BETWEEN (((t0.c87) ISNULL)) AND (GLOB(vt0.c0, vt0.c0))) WHERE (t0.c87);
SELECT SUM(count) FROM (SELECT ALL ((t0.c87) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)<<(vt1.c0))) BETWEEN (((t0.c87) ISNULL)) AND (GLOB(vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)<<(vt1.c0))) BETWEEN (((t0.c87) ISNULL)) AND (GLOB(vt0.c0, vt0.c0))) WHERE (t0.c87);
SELECT ALL COUNT(*) FROM t10, vt1, vt0 WHERE (((vt1.c0) IS FALSE)) ORDER BY ((t10.c0) NOT BETWEEN (t10.c30) AND (CAST(t10.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE)) IS TRUE)  as count FROM t10, vt1, vt0 ORDER BY ((t10.c0) NOT BETWEEN (t10.c30) AND (CAST(t10.c0 AS REAL))));
SELECT ALL COUNT(*) FROM t10, vt1, vt0 WHERE (((vt1.c0) IS FALSE)) ORDER BY ((t10.c0) NOT BETWEEN (t10.c30) AND (CAST(t10.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE)) IS TRUE)  as count FROM t10, vt1, vt0 ORDER BY ((t10.c0) NOT BETWEEN (t10.c30) AND (CAST(t10.c0 AS REAL))));
SELECT ALL COUNT(*) FROM t10, vt1, vt0 WHERE (((vt1.c0) IS FALSE)) ORDER BY ((t10.c0) NOT BETWEEN (t10.c30) AND (CAST(t10.c0 AS REAL)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t10 ON vt0.c0 WHERE (0.6867114745783115) ORDER BY CASE WHEN CAST(t10.c0 AS BLOB) THEN CAST(vt0.c0 AS BLOB) END;
SELECT SUM(count) FROM (SELECT ALL ((0.6867114745783115) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t10 ON vt0.c0 ORDER BY CASE WHEN CAST(t10.c0 AS BLOB) THEN CAST(vt0.c0 AS BLOB) END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t10 ON vt0.c0 WHERE (0.6867114745783115) ORDER BY CASE WHEN CAST(t10.c0 AS BLOB) THEN CAST(vt0.c0 AS BLOB) END;
SELECT SUM(count) FROM (SELECT ALL ((0.6867114745783115) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t10 ON vt0.c0 ORDER BY CASE WHEN CAST(t10.c0 AS BLOB) THEN CAST(vt0.c0 AS BLOB) END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t10 ON vt0.c0 WHERE (0.6867114745783115) ORDER BY CASE WHEN CAST(t10.c0 AS BLOB) THEN CAST(vt0.c0 AS BLOB) END;
SELECT * FROM vt1 LEFT OUTER JOIN t10 ON CAST(((t10.c30)-(vt1.c0)) AS TEXT) WHERE ('935796163') ORDER BY ABS(((t10.c30) NOT BETWEEN (t10.c0) AND (t10.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('935796163') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t10 ON CAST(((t10.c30)-(vt1.c0)) AS TEXT) ORDER BY ABS(((t10.c30) NOT BETWEEN (t10.c0) AND (t10.c0))) ASC);
SELECT * FROM vt1 LEFT OUTER JOIN t10 ON CAST(((t10.c30)-(vt1.c0)) AS TEXT) WHERE ('935796163') ORDER BY ABS(((t10.c30) NOT BETWEEN (t10.c0) AND (t10.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('935796163') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t10 ON CAST(((t10.c30)-(vt1.c0)) AS TEXT) ORDER BY ABS(((t10.c30) NOT BETWEEN (t10.c0) AND (t10.c0))) ASC);
SELECT * FROM vt1 LEFT OUTER JOIN t10 ON CAST(((t10.c30)-(vt1.c0)) AS TEXT) WHERE ('935796163') ORDER BY ABS(((t10.c30) NOT BETWEEN (t10.c0) AND (t10.c0))) ASC;
SELECT ALL COUNT(*) FROM vt1, t0, t10 WHERE ((((t0.c87)>(t0.c0)) IN ())) ORDER BY LIKELIHOOD(DISTINCT t10.c30, 0.39564663121820476) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c87)>(t0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, t10 ORDER BY LIKELIHOOD(DISTINCT t10.c30, 0.39564663121820476) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, t0, t10 WHERE ((((t0.c87)>(t0.c0)) IN ())) ORDER BY LIKELIHOOD(DISTINCT t10.c30, 0.39564663121820476) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c87)>(t0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, t10 ORDER BY LIKELIHOOD(DISTINCT t10.c30, 0.39564663121820476) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, t0, t10 WHERE ((((t0.c87)>(t0.c0)) IN ())) ORDER BY LIKELIHOOD(DISTINCT t10.c30, 0.39564663121820476) COLLATE RTRIM;
SELECT * FROM t0, vt1, t10 FULL OUTER JOIN vt0 ON LIKE(((t0.c0) BETWEEN (t0.c87) AND (t0.c0)), ((vt1.c0)LIKE(t0.c0))) WHERE (((t10.c0 IN ()) IN ())) ORDER BY ((vt0.c0)<=(((t0.c87) ISNULL))), (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((vt0.c0) IS FALSE)) AND (t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t10.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, vt1, t10 FULL OUTER JOIN vt0 ON LIKE(((t0.c0) BETWEEN (t0.c87) AND (t0.c0)), ((vt1.c0)LIKE(t0.c0))) ORDER BY ((vt0.c0)<=(((t0.c87) ISNULL))), (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((vt0.c0) IS FALSE)) AND (t0.c0))  NULLS LAST);
SELECT * FROM t0, vt1, t10 FULL OUTER JOIN vt0 ON LIKE(((t0.c0) BETWEEN (t0.c87) AND (t0.c0)), ((vt1.c0)LIKE(t0.c0))) WHERE (((t10.c0 IN ()) IN ())) ORDER BY ((vt0.c0)<=(((t0.c87) ISNULL))), (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((vt0.c0) IS FALSE)) AND (t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t10.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, vt1, t10 FULL OUTER JOIN vt0 ON LIKE(((t0.c0) BETWEEN (t0.c87) AND (t0.c0)), ((vt1.c0)LIKE(t0.c0))) ORDER BY ((vt0.c0)<=(((t0.c87) ISNULL))), (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((vt0.c0) IS FALSE)) AND (t0.c0))  NULLS LAST);
SELECT * FROM t0, vt1, t10 FULL OUTER JOIN vt0 ON LIKE(((t0.c0) BETWEEN (t0.c87) AND (t0.c0)), ((vt1.c0)LIKE(t0.c0))) WHERE (((t10.c0 IN ()) IN ())) ORDER BY ((vt0.c0)<=(((t0.c87) ISNULL))), (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((vt0.c0) IS FALSE)) AND (t0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('뿗b (5', UNLIKELY(DISTINCT vt1.c0), ((vt0.c0)<<(vt1.c0)))) AND ((vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, ((vt1.c0)%(vt1.c0))))) WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)/(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)/(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('뿗b (5', UNLIKELY(DISTINCT vt1.c0), ((vt0.c0)<<(vt1.c0)))) AND ((vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, ((vt1.c0)%(vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('뿗b (5', UNLIKELY(DISTINCT vt1.c0), ((vt0.c0)<<(vt1.c0)))) AND ((vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, ((vt1.c0)%(vt1.c0))))) WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)/(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)/(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('뿗b (5', UNLIKELY(DISTINCT vt1.c0), ((vt0.c0)<<(vt1.c0)))) AND ((vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, ((vt1.c0)%(vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('뿗b (5', UNLIKELY(DISTINCT vt1.c0), ((vt0.c0)<<(vt1.c0)))) AND ((vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, ((vt1.c0)%(vt1.c0))))) WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)/(((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0)&(vt1.c0))))=((((t0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)&(vt1.c0))))=((((t0.c0) NOT NULL))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0)&(vt1.c0))))=((((t0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)&(vt1.c0))))=((((t0.c0) NOT NULL))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0)&(vt1.c0))))=((((t0.c0) NOT NULL)))));
SELECT COUNT(*) FROM t0, vt1 WHERE ((NOT (((((0Xffffffffc5025969)OR(t0.c0)))OR(t0.c87))))) ORDER BY ((((((t0.c0)>(t0.c0)))OR(((t0.c0)|(vt1.c0)))))AND(LOWER(vt1.c0))), (((vt1.c0) NOT BETWEEN (x'') AND (t0.c87)) IN (IFNULL(vt1.c0, vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((((0Xffffffffc5025969)OR(t0.c0)))OR(t0.c87))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((t0.c0)>(t0.c0)))OR(((t0.c0)|(vt1.c0)))))AND(LOWER(vt1.c0))), (((vt1.c0) NOT BETWEEN (x'') AND (t0.c87)) IN (IFNULL(vt1.c0, vt1.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE ((NOT (((((0Xffffffffc5025969)OR(t0.c0)))OR(t0.c87))))) ORDER BY ((((((t0.c0)>(t0.c0)))OR(((t0.c0)|(vt1.c0)))))AND(LOWER(vt1.c0))), (((vt1.c0) NOT BETWEEN (x'') AND (t0.c87)) IN (IFNULL(vt1.c0, vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((((0Xffffffffc5025969)OR(t0.c0)))OR(t0.c87))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((t0.c0)>(t0.c0)))OR(((t0.c0)|(vt1.c0)))))AND(LOWER(vt1.c0))), (((vt1.c0) NOT BETWEEN (x'') AND (t0.c87)) IN (IFNULL(vt1.c0, vt1.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE ((NOT (((((0Xffffffffc5025969)OR(t0.c0)))OR(t0.c87))))) ORDER BY ((((((t0.c0)>(t0.c0)))OR(((t0.c0)|(vt1.c0)))))AND(LOWER(vt1.c0))), (((vt1.c0) NOT BETWEEN (x'') AND (t0.c87)) IN (IFNULL(vt1.c0, vt1.c0))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ (0.9066298470374397)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (0.9066298470374397)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ (0.9066298470374397)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (0.9066298470374397)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ (0.9066298470374397)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((((((('1446445048') IS FALSE))OR(vt0.c0)))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)<=(vt0.c0)))))AND((((vt0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('1446445048') IS FALSE))OR(vt0.c0)))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)<=(vt0.c0)))))AND((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((((((('1446445048') IS FALSE))OR(vt0.c0)))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)<=(vt0.c0)))))AND((((vt0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('1446445048') IS FALSE))OR(vt0.c0)))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)<=(vt0.c0)))))AND((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((((((('1446445048') IS FALSE))OR(vt0.c0)))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)<=(vt0.c0)))))AND((((vt0.c0))>=((vt0.c0))))));
SELECT ALL COUNT(*) FROM t10, t0 WHERE (((t10.c0 COLLATE NOCASE) IS TRUE)) ORDER BY (~ ((((t10.c30, t0.c0, t0.c87))<=((t10.c0, t0.c87, t10.c0))))), x'' ASC, ((((0.6721640151816715)IS(t0.c87))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t10.c30)%(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((t10.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM t10, t0 ORDER BY (~ ((((t10.c30, t0.c0, t0.c87))<=((t10.c0, t0.c87, t10.c0))))), x'' ASC, ((((0.6721640151816715)IS(t0.c87))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t10.c30)%(t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t10, t0 WHERE (((t10.c0 COLLATE NOCASE) IS TRUE)) ORDER BY (~ ((((t10.c30, t0.c0, t0.c87))<=((t10.c0, t0.c87, t10.c0))))), x'' ASC, ((((0.6721640151816715)IS(t0.c87))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t10.c30)%(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((t10.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM t10, t0 ORDER BY (~ ((((t10.c30, t0.c0, t0.c87))<=((t10.c0, t0.c87, t10.c0))))), x'' ASC, ((((0.6721640151816715)IS(t0.c87))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t10.c30)%(t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t10, t0 WHERE (((t10.c0 COLLATE NOCASE) IS TRUE)) ORDER BY (~ ((((t10.c30, t0.c0, t0.c87))<=((t10.c0, t0.c87, t10.c0))))), x'' ASC, ((((0.6721640151816715)IS(t0.c87))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t10.c30)%(t0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t10 ON (((0.5009250180381939, vt0.c0, ((vt0.c0)==(vt0.c0))))>=((((((t10.c0)AND(vt0.c0)))AND(t10.c30)), ((((((((t10.c30)AND(vt0.c0)))AND(vt0.c0)))OR(t10.c30)))AND(t10.c30)), UNLIKELY(vt0.c0)))) WHERE ((~ (CAST(t10.c30 AS REAL))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(t10.c30 AS REAL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t10 ON (((0.5009250180381939, vt0.c0, ((vt0.c0)=(vt0.c0))))>=((((((t10.c0)AND(vt0.c0)))AND(t10.c30)), ((((((((t10.c30)AND(vt0.c0)))AND(vt0.c0)))OR(t10.c30)))AND(t10.c30)), UNLIKELY(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t10 ON (((0.5009250180381939, vt0.c0, ((vt0.c0)==(vt0.c0))))>=((((((t10.c0)AND(vt0.c0)))AND(t10.c30)), ((((((((t10.c30)AND(vt0.c0)))AND(vt0.c0)))OR(t10.c30)))AND(t10.c30)), UNLIKELY(vt0.c0)))) WHERE ((~ (CAST(t10.c30 AS REAL))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(t10.c30 AS REAL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t10 ON (((0.5009250180381939, vt0.c0, ((vt0.c0)=(vt0.c0))))>=((((((t10.c0)AND(vt0.c0)))AND(t10.c30)), ((((((((t10.c30)AND(vt0.c0)))AND(vt0.c0)))OR(t10.c30)))AND(t10.c30)), UNLIKELY(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t10 ON (((0.5009250180381939, vt0.c0, ((vt0.c0)==(vt0.c0))))>=((((((t10.c0)AND(vt0.c0)))AND(t10.c30)), ((((((((t10.c30)AND(vt0.c0)))AND(vt0.c0)))OR(t10.c30)))AND(t10.c30)), UNLIKELY(vt0.c0)))) WHERE ((~ (CAST(t10.c30 AS REAL))));
SELECT COUNT(*) FROM t10, t0, vt0, vt1 WHERE ((((((t0.c0 IN ()))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c87 END)))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0 IN ()))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c87 END)))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t10, t0, vt0, vt1);
SELECT COUNT(*) FROM t10, t0, vt0, vt1 WHERE ((((((t0.c0 IN ()))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c87 END)))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0 IN ()))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c87 END)))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t10, t0, vt0, vt1);
SELECT COUNT(*) FROM t10, t0, vt0, vt1 WHERE ((((((t0.c0 IN ()))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c87 END)))OR(vt0.c0 COLLATE BINARY)));
SELECT * FROM vt0, t0, t10, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0, t10, vt1);
SELECT * FROM vt0, t0, t10, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0, t10, vt1);
SELECT * FROM vt0, t0, t10, vt1 WHERE (x'');
SELECT * FROM vt1, t10 WHERE (((((NULL) NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt1, t10);
SELECT * FROM vt1, t10 WHERE (((((NULL) NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt1, t10);
SELECT * FROM vt1, t10 WHERE (((((NULL) NOT NULL)) NOTNULL));
SELECT ALL COUNT(*) FROM t10 WHERE (t10.c30);
SELECT SUM(count) FROM (SELECT ((t10.c30) IS TRUE)  as count FROM t10);
SELECT ALL COUNT(*) FROM t10 WHERE (t10.c30);
SELECT SUM(count) FROM (SELECT ((t10.c30) IS TRUE)  as count FROM t10);
SELECT ALL COUNT(*) FROM t10 WHERE (t10.c30);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 LEFT OUTER JOIN t10 ON (((((t10.c0, t0.c87, vt1.c0))==((t0.c87, 0.5863263541730616, t0.c0))))>=(vt1.c0 COLLATE RTRIM)) WHERE (CAST(t10.c30 AS NUMERIC) COLLATE RTRIM) ORDER BY t10.c30 DESC, (((vt0.c0, t10.c30, t0.c87)) BETWEEN (((t0.c87 IN ()), (+ (t10.c30)), ((((((((t10.c30)OR(x'002e3d2e')))AND(t10.c30)))OR(vt1.c0)))OR(vt1.c0)))) AND (((((t10.c0))>((t10.c0))), TYPEOF(DISTINCT t0.c87), t10.c30 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((CAST(t10.c30 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0 LEFT OUTER JOIN t10 ON (((((t10.c0, t0.c87, vt1.c0))==((t0.c87, 0.5863263541730616, t0.c0))))>=(vt1.c0 COLLATE RTRIM)) ORDER BY t10.c30 DESC, (((vt0.c0, t10.c30, t0.c87)) BETWEEN (((t0.c87 IN ()), (+ (t10.c30)), ((((((((t10.c30)OR(x'002e3d2e')))AND(t10.c30)))OR(vt1.c0)))OR(vt1.c0)))) AND (((((t10.c0))>((t10.c0))), TYPEOF(DISTINCT t0.c87), t10.c30 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 LEFT OUTER JOIN t10 ON (((((t10.c0, t0.c87, vt1.c0))==((t0.c87, 0.5863263541730616, t0.c0))))>=(vt1.c0 COLLATE RTRIM)) WHERE (CAST(t10.c30 AS NUMERIC) COLLATE RTRIM) ORDER BY t10.c30 DESC, (((vt0.c0, t10.c30, t0.c87)) BETWEEN (((t0.c87 IN ()), (+ (t10.c30)), ((((((((t10.c30)OR(x'002e3d2e')))AND(t10.c30)))OR(vt1.c0)))OR(vt1.c0)))) AND (((((t10.c0))>((t10.c0))), TYPEOF(DISTINCT t0.c87), t10.c30 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((CAST(t10.c30 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0 LEFT OUTER JOIN t10 ON (((((t10.c0, t0.c87, vt1.c0))==((t0.c87, 0.5863263541730616, t0.c0))))>=(vt1.c0 COLLATE RTRIM)) ORDER BY t10.c30 DESC, (((vt0.c0, t10.c30, t0.c87)) BETWEEN (((t0.c87 IN ()), (+ (t10.c30)), ((((((((t10.c30)OR(x'002e3d2e')))AND(t10.c30)))OR(vt1.c0)))OR(vt1.c0)))) AND (((((t10.c0))>((t10.c0))), TYPEOF(DISTINCT t0.c87), t10.c30 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 LEFT OUTER JOIN t10 ON (((((t10.c0, t0.c87, vt1.c0))==((t0.c87, 0.5863263541730616, t0.c0))))>=(vt1.c0 COLLATE RTRIM)) WHERE (CAST(t10.c30 AS NUMERIC) COLLATE RTRIM) ORDER BY t10.c30 DESC, (((vt0.c0, t10.c30, t0.c87)) BETWEEN (((t0.c87 IN ()), (+ (t10.c30)), ((((((((t10.c30)OR(x'002e3d2e')))AND(t10.c30)))OR(vt1.c0)))OR(vt1.c0)))) AND (((((t10.c0))>((t10.c0))), TYPEOF(DISTINCT t0.c87), t10.c30 COLLATE RTRIM)));
SELECT * FROM vt0, t0, t10, vt1 WHERE ((((((((vt1.c0)) BETWEEN ((t10.c30)) AND ((t0.c0))))AND(vt0.c0)))AND(CAST(t10.c0 AS BLOB)))) ORDER BY CASE WHEN (~ (vt1.c0)) THEN ((vt0.c0)==(vt0.c0)) ELSE (~ (t10.c30)) END;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)) BETWEEN ((t10.c30)) AND ((t0.c0))))AND(vt0.c0)))AND(CAST(t10.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, t0, t10, vt1 ORDER BY CASE WHEN (~ (vt1.c0)) THEN ((vt0.c0)==(vt0.c0)) ELSE (~ (t10.c30)) END);
SELECT * FROM vt0, t0, t10, vt1 WHERE ((((((((vt1.c0)) BETWEEN ((t10.c30)) AND ((t0.c0))))AND(vt0.c0)))AND(CAST(t10.c0 AS BLOB)))) ORDER BY CASE WHEN (~ (vt1.c0)) THEN ((vt0.c0)==(vt0.c0)) ELSE (~ (t10.c30)) END;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)) BETWEEN ((t10.c30)) AND ((t0.c0))))AND(vt0.c0)))AND(CAST(t10.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, t0, t10, vt1 ORDER BY CASE WHEN (~ (vt1.c0)) THEN ((vt0.c0)==(vt0.c0)) ELSE (~ (t10.c30)) END);
SELECT * FROM vt0, t0, t10, vt1 WHERE ((((((((vt1.c0)) BETWEEN ((t10.c30)) AND ((t0.c0))))AND(vt0.c0)))AND(CAST(t10.c0 AS BLOB)))) ORDER BY CASE WHEN (~ (vt1.c0)) THEN ((vt0.c0)==(vt0.c0)) ELSE (~ (t10.c30)) END;
SELECT COUNT(*) FROM vt1, vt0, t10 WHERE (((CAST(x'' AS TEXT))+(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))))) ORDER BY SQLITE_SOURCE_ID() ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS TEXT))+(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, t10 ORDER BY SQLITE_SOURCE_ID() ASC);
SELECT COUNT(*) FROM vt1, vt0, t10 WHERE (((CAST(x'' AS TEXT))+(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))))) ORDER BY SQLITE_SOURCE_ID() ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS TEXT))+(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, t10 ORDER BY SQLITE_SOURCE_ID() ASC);
SELECT COUNT(*) FROM vt1, vt0, t10 WHERE (((CAST(x'' AS TEXT))+(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))))) ORDER BY SQLITE_SOURCE_ID() ASC;
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(x'')))AND(t0.c87)))OR(((-3.21271917E8)IS NOT(t0.c0)))))OR((t0.c87 IN ()))))OR(CASE t0.c87  WHEN x'a6a2' THEN t0.c0 ELSE 0.9621106867733282 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)AND(x'')))AND(t0.c87)))OR(((-3.21271917E8)IS NOT(t0.c0)))))OR((t0.c87 IN ()))))OR(CASE t0.c87  WHEN x'a6a2' THEN t0.c0 ELSE 0.9621106867733282 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(x'')))AND(t0.c87)))OR(((-3.21271917E8)IS NOT(t0.c0)))))OR((t0.c87 IN ()))))OR(CASE t0.c87  WHEN x'a6a2' THEN t0.c0 ELSE 0.9621106867733282 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)AND(x'')))AND(t0.c87)))OR(((-3.21271917E8)IS NOT(t0.c0)))))OR((t0.c87 IN ()))))OR(CASE t0.c87  WHEN x'a6a2' THEN t0.c0 ELSE 0.9621106867733282 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(x'')))AND(t0.c87)))OR(((-3.21271917E8)IS NOT(t0.c0)))))OR((t0.c87 IN ()))))OR(CASE t0.c87  WHEN x'a6a2' THEN t0.c0 ELSE 0.9621106867733282 END)));
SELECT ALL * FROM t10 FULL OUTER JOIN vt1 ON CAST(vt0.c0 AS REAL) COLLATE BINARY INNER JOIN vt0 ON vt0.c0 WHERE (CAST(CAST(t10.c0 AS INTEGER) AS INTEGER)) ORDER BY t10.c30 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t10.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM t10 FULL OUTER JOIN vt1 ON CAST(vt0.c0 AS REAL) COLLATE BINARY INNER JOIN vt0 ON vt0.c0 ORDER BY t10.c30 DESC);
SELECT ALL * FROM t10 FULL OUTER JOIN vt1 ON CAST(vt0.c0 AS REAL) COLLATE BINARY INNER JOIN vt0 ON vt0.c0 WHERE (CAST(CAST(t10.c0 AS INTEGER) AS INTEGER)) ORDER BY t10.c30 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t10.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM t10 FULL OUTER JOIN vt1 ON CAST(vt0.c0 AS REAL) COLLATE BINARY INNER JOIN vt0 ON vt0.c0 ORDER BY t10.c30 DESC);
SELECT ALL * FROM vt1, t10 LEFT OUTER JOIN vt0 ON json_extract(CAST(t10.c30 AS BLOB), UNLIKELY(vt1.c0)) FULL OUTER JOIN t0 ON ABS(((((t10.c0)AND(t10.c0)))AND(NULL))) WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt1, t10 LEFT OUTER JOIN vt0 ON json_extract(CAST(t10.c30 AS BLOB), UNLIKELY(vt1.c0)) FULL OUTER JOIN t0 ON ABS(((((t10.c0)AND(t10.c0)))AND(NULL))));
SELECT ALL * FROM vt1, t10 LEFT OUTER JOIN vt0 ON json_extract(CAST(t10.c30 AS BLOB), UNLIKELY(vt1.c0)) FULL OUTER JOIN t0 ON ABS(((((t10.c0)AND(t10.c0)))AND(NULL))) WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt1, t10 LEFT OUTER JOIN vt0 ON json_extract(CAST(t10.c30 AS BLOB), UNLIKELY(vt1.c0)) FULL OUTER JOIN t0 ON ABS(((((t10.c0)AND(t10.c0)))AND(NULL))));
SELECT ALL * FROM vt1, t10 LEFT OUTER JOIN vt0 ON json_extract(CAST(t10.c30 AS BLOB), UNLIKELY(vt1.c0)) FULL OUTER JOIN t0 ON ABS(((((t10.c0)AND(t10.c0)))AND(NULL))) WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL));
SELECT COUNT(*) FROM t10, t0, vt0, vt1 WHERE ((((((NOT (vt0.c0)))OR((t0.c87 IN ()))))OR(PRINTF(t10.c30))));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))OR((t0.c87 IN ()))))OR(PRINTF(t10.c30)))) IS TRUE)  as count FROM t10, t0, vt0, vt1);
SELECT COUNT(*) FROM t10, t0, vt0, vt1 WHERE ((((((NOT (vt0.c0)))OR((t0.c87 IN ()))))OR(PRINTF(t10.c30))));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))OR((t0.c87 IN ()))))OR(PRINTF(t10.c30)))) IS TRUE)  as count FROM t10, t0, vt0, vt1);
SELECT COUNT(*) FROM t10, t0, vt0, vt1 WHERE ((((((NOT (vt0.c0)))OR((t0.c87 IN ()))))OR(PRINTF(t10.c30))));
SELECT * FROM vt0, t10, t0 WHERE (((t10.c30) NOT BETWEEN (CASE vt0.c0  WHEN t10.c0 THEN t10.c0 END) AND ((t0.c87 IN ()))));
SELECT SUM(count) FROM (SELECT ((((t10.c30) NOT BETWEEN (CASE vt0.c0  WHEN t10.c0 THEN t10.c0 END) AND ((t0.c87 IN ())))) IS TRUE)  as count FROM vt0, t10, t0);
SELECT * FROM vt0, t10, t0 WHERE (((t10.c30) NOT BETWEEN (CASE vt0.c0  WHEN t10.c0 THEN t10.c0 END) AND ((t0.c87 IN ()))));
SELECT SUM(count) FROM (SELECT ((((t10.c30) NOT BETWEEN (CASE vt0.c0  WHEN t10.c0 THEN t10.c0 END) AND ((t0.c87 IN ())))) IS TRUE)  as count FROM vt0, t10, t0);
SELECT * FROM vt0, t10, t0 WHERE (((t10.c30) NOT BETWEEN (CASE vt0.c0  WHEN t10.c0 THEN t10.c0 END) AND ((t0.c87 IN ()))));
SELECT * FROM t10 INDEXED BY i49 WHERE (((t10.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((t10.c0) IS FALSE)) IS TRUE)  as count FROM t10 INDEXED BY i49);
SELECT * FROM t10 INDEXED BY i49 WHERE (((t10.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((t10.c0) IS FALSE)) IS TRUE)  as count FROM t10 INDEXED BY i49);
SELECT ALL COUNT(*) FROM t10 CROSS JOIN vt0 ON ((CAST(vt1.c0 AS NUMERIC)) NOTNULL) FULL OUTER JOIN vt1 ON ((((((vt1.c0)|(t10.c0)))OR(t10.c0)))OR((vt0.c0 IN (vt0.c0)))) WHERE (UNLIKELY(((t10.c30)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t10.c30)<(vt0.c0)))) IS TRUE)  as count FROM t10 CROSS JOIN vt0 ON ((CAST(vt1.c0 AS NUMERIC)) NOTNULL) FULL OUTER JOIN vt1 ON ((((((vt1.c0)|(t10.c0)))OR(t10.c0)))OR((vt0.c0 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM t10 CROSS JOIN vt0 ON ((CAST(vt1.c0 AS NUMERIC)) NOTNULL) FULL OUTER JOIN vt1 ON ((((((vt1.c0)|(t10.c0)))OR(t10.c0)))OR((vt0.c0 IN (vt0.c0)))) WHERE (UNLIKELY(((t10.c30)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t10.c30)<(vt0.c0)))) IS TRUE)  as count FROM t10 CROSS JOIN vt0 ON ((CAST(vt1.c0 AS NUMERIC)) NOTNULL) FULL OUTER JOIN vt1 ON ((((((vt1.c0)|(t10.c0)))OR(t10.c0)))OR((vt0.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM t0, t10, vt0 WHERE (((((((((STRFTIME(t0.c87, t10.c30, NULL))OR(NULL COLLATE RTRIM)))AND(TIME(t10.c30, t0.c87, t0.c87, t10.c30, t10.c30))))OR(((t10.c30)<=(vt0.c0)))))AND(((t10.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((STRFTIME(t0.c87, t10.c30, NULL))OR(NULL COLLATE RTRIM)))AND(TIME(t10.c30, t0.c87, t0.c87, t10.c30, t10.c30))))OR(((t10.c30)<=(vt0.c0)))))AND(((t10.c0) NOTNULL)))) IS TRUE)  as count FROM t0, t10, vt0);
SELECT COUNT(*) FROM t0, t10, vt0 WHERE (((((((((STRFTIME(t0.c87, t10.c30, NULL))OR(NULL COLLATE RTRIM)))AND(TIME(t10.c30, t0.c87, t0.c87, t10.c30, t10.c30))))OR(((t10.c30)<=(vt0.c0)))))AND(((t10.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((STRFTIME(t0.c87, t10.c30, NULL))OR(NULL COLLATE RTRIM)))AND(TIME(t10.c30, t0.c87, t0.c87, t10.c30, t10.c30))))OR(((t10.c30)<=(vt0.c0)))))AND(((t10.c0) NOTNULL)))) IS TRUE)  as count FROM t0, t10, vt0);
SELECT COUNT(*) FROM t0, t10, vt0 WHERE (((((((((STRFTIME(t0.c87, t10.c30, NULL))OR(NULL COLLATE RTRIM)))AND(TIME(t10.c30, t0.c87, t0.c87, t10.c30, t10.c30))))OR(((t10.c30)<=(vt0.c0)))))AND(((t10.c0) NOTNULL))));
SELECT * FROM vt0, t10 WHERE (((((((((CAST(vt0.c0 AS REAL))OR(UNICODE(t10.c0))))OR((t10.c0 IN ()))))AND(t10.c0 COLLATE NOCASE)))AND(((t10.c0)|(t10.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS REAL))OR(UNICODE(t10.c0))))OR((t10.c0 IN ()))))AND(t10.c0 COLLATE NOCASE)))AND(((t10.c0)|(t10.c0))))) IS TRUE)  as count FROM vt0, t10);
SELECT * FROM vt0, t10 WHERE (((((((((CAST(vt0.c0 AS REAL))OR(UNICODE(t10.c0))))OR((t10.c0 IN ()))))AND(t10.c0 COLLATE NOCASE)))AND(((t10.c0)|(t10.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS REAL))OR(UNICODE(t10.c0))))OR((t10.c0 IN ()))))AND(t10.c0 COLLATE NOCASE)))AND(((t10.c0)|(t10.c0))))) IS TRUE)  as count FROM vt0, t10);
SELECT * FROM vt0, t10 WHERE (((((((((CAST(vt0.c0 AS REAL))OR(UNICODE(t10.c0))))OR((t10.c0 IN ()))))AND(t10.c0 COLLATE NOCASE)))AND(((t10.c0)|(t10.c0)))));
SELECT ALL COUNT(*) FROM t10 CROSS JOIN t0 ON CASE WHEN (t0.c87 IN ()) THEN ((NULL) NOT BETWEEN (t0.c87) AND (t10.c0)) END WHERE (((((t10.c0)<(t0.c87)))GLOB((((t0.c0))>=((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t10.c0)<(t0.c87)))GLOB((((t0.c0))>=((t0.c0)))))) IS TRUE)  as count FROM t10 CROSS JOIN t0 ON CASE WHEN (t0.c87 IN ()) THEN ((NULL) NOT BETWEEN (t0.c87) AND (t10.c0)) END);
SELECT ALL COUNT(*) FROM t10 CROSS JOIN t0 ON CASE WHEN (t0.c87 IN ()) THEN ((NULL) NOT BETWEEN (t0.c87) AND (t10.c0)) END WHERE (((((t10.c0)<(t0.c87)))GLOB((((t0.c0))>=((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t10.c0)<(t0.c87)))GLOB((((t0.c0))>=((t0.c0)))))) IS TRUE)  as count FROM t10 CROSS JOIN t0 ON CASE WHEN (t0.c87 IN ()) THEN ((NULL) NOT BETWEEN (t0.c87) AND (t10.c0)) END);
SELECT ALL COUNT(*) FROM t10 CROSS JOIN t0 ON CASE WHEN (t0.c87 IN ()) THEN ((NULL) NOT BETWEEN (t0.c87) AND (t10.c0)) END WHERE (((((t10.c0)<(t0.c87)))GLOB((((t0.c0))>=((t0.c0))))));
SELECT COUNT(*) FROM t0, t10 WHERE (CASE (~ (t0.c0))  WHEN ((((t0.c0)OR(t0.c87)))OR(t10.c30)) THEN 0.9572564430709831 WHEN SQLITE_VERSION() THEN ((((t0.c87)OR(t0.c0)))AND(t10.c30)) WHEN ((t0.c87)AND('6k(g>SBb?')) THEN CASE WHEN x'56c1' THEN t0.c87 ELSE t10.c0 END ELSE t0.c0 COLLATE RTRIM END) ORDER BY x'' ASC  NULLS FIRST, (HEX(t0.c87) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (t0.c0))  WHEN ((((t0.c0)OR(t0.c87)))OR(t10.c30)) THEN 0.9572564430709831 WHEN SQLITE_VERSION() THEN ((((t0.c87)OR(t0.c0)))AND(t10.c30)) WHEN ((t0.c87)AND('6k(g>SBb?')) THEN CASE WHEN x'56c1' THEN t0.c87 ELSE t10.c0 END ELSE t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0, t10 ORDER BY x'' ASC  NULLS FIRST, (HEX(t0.c87) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, t10 WHERE (CASE (~ (t0.c0))  WHEN ((((t0.c0)OR(t0.c87)))OR(t10.c30)) THEN 0.9572564430709831 WHEN SQLITE_VERSION() THEN ((((t0.c87)OR(t0.c0)))AND(t10.c30)) WHEN ((t0.c87)AND('6k(g>SBb?')) THEN CASE WHEN x'56c1' THEN t0.c87 ELSE t10.c0 END ELSE t0.c0 COLLATE RTRIM END) ORDER BY x'' ASC  NULLS FIRST, (HEX(t0.c87) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (t0.c0))  WHEN ((((t0.c0)OR(t0.c87)))OR(t10.c30)) THEN 0.9572564430709831 WHEN SQLITE_VERSION() THEN ((((t0.c87)OR(t0.c0)))AND(t10.c30)) WHEN ((t0.c87)AND('6k(g>SBb?')) THEN CASE WHEN x'56c1' THEN t0.c87 ELSE t10.c0 END ELSE t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0, t10 ORDER BY x'' ASC  NULLS FIRST, (HEX(t0.c87) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, t10 WHERE (CASE (~ (t0.c0))  WHEN ((((t0.c0)OR(t0.c87)))OR(t10.c30)) THEN 0.9572564430709831 WHEN SQLITE_VERSION() THEN ((((t0.c87)OR(t0.c0)))AND(t10.c30)) WHEN ((t0.c87)AND('6k(g>SBb?')) THEN CASE WHEN x'56c1' THEN t0.c87 ELSE t10.c0 END ELSE t0.c0 COLLATE RTRIM END) ORDER BY x'' ASC  NULLS FIRST, (HEX(t0.c87) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t10, vt0, t0 WHERE (((((t0.c0 COLLATE BINARY)AND(CAST(t0.c87 AS BLOB))))AND((t10.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 COLLATE BINARY)AND(CAST(t0.c87 AS BLOB))))AND((t10.c0 IN ())))) IS TRUE)  as count FROM t10, vt0, t0);
SELECT ALL COUNT(*) FROM t10, vt0, t0 WHERE (((((t0.c0 COLLATE BINARY)AND(CAST(t0.c87 AS BLOB))))AND((t10.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 COLLATE BINARY)AND(CAST(t0.c87 AS BLOB))))AND((t10.c0 IN ())))) IS TRUE)  as count FROM t10, vt0, t0);
SELECT ALL COUNT(*) FROM t10, vt0, t0 WHERE (((((t0.c0 COLLATE BINARY)AND(CAST(t0.c87 AS BLOB))))AND((t10.c0 IN ()))));
SELECT COUNT(*) FROM t10 FULL OUTER JOIN t0 ON ((((377373648) BETWEEN (t0.c0) AND (t10.c30))) BETWEEN (CASE t10.c0  WHEN t10.c0 THEN t10.c0 END) AND ((- (t0.c0)))) WHERE (TRIM(DISTINCT CAST(t0.c87 AS NUMERIC))) ORDER BY ((NULL COLLATE NOCASE) BETWEEN ((t10.c30 IN (x'edce'))) AND (CAST(t10.c30 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(t0.c87 AS NUMERIC))) IS TRUE)  as count FROM t10 FULL OUTER JOIN t0 ON ((((377373648) BETWEEN (t0.c0) AND (t10.c30))) BETWEEN (CASE t10.c0  WHEN t10.c0 THEN t10.c0 END) AND ((- (t0.c0)))) ORDER BY ((NULL COLLATE NOCASE) BETWEEN ((t10.c30 IN (x'edce'))) AND (CAST(t10.c30 AS BLOB))) DESC);
SELECT COUNT(*) FROM t10 FULL OUTER JOIN t0 ON ((((377373648) BETWEEN (t0.c0) AND (t10.c30))) BETWEEN (CASE t10.c0  WHEN t10.c0 THEN t10.c0 END) AND ((- (t0.c0)))) WHERE (TRIM(DISTINCT CAST(t0.c87 AS NUMERIC))) ORDER BY ((NULL COLLATE NOCASE) BETWEEN ((t10.c30 IN (x'edce'))) AND (CAST(t10.c30 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(t0.c87 AS NUMERIC))) IS TRUE)  as count FROM t10 FULL OUTER JOIN t0 ON ((((377373648) BETWEEN (t0.c0) AND (t10.c30))) BETWEEN (CASE t10.c0  WHEN t10.c0 THEN t10.c0 END) AND ((- (t0.c0)))) ORDER BY ((NULL COLLATE NOCASE) BETWEEN ((t10.c30 IN (x'edce'))) AND (CAST(t10.c30 AS BLOB))) DESC);
SELECT COUNT(*) FROM t10 FULL OUTER JOIN t0 ON ((((377373648) BETWEEN (t0.c0) AND (t10.c30))) BETWEEN (CASE t10.c0  WHEN t10.c0 THEN t10.c0 END) AND ((- (t0.c0)))) WHERE (TRIM(DISTINCT CAST(t0.c87 AS NUMERIC))) ORDER BY ((NULL COLLATE NOCASE) BETWEEN ((t10.c30 IN (x'edce'))) AND (CAST(t10.c30 AS BLOB))) DESC;
SELECT COUNT(*) FROM vt1, t0, t10 WHERE (((((((((vt1.c0)AND('>唘Mg\%&亐')))AND((- (NULL)))))OR(DATETIME(t0.c0, vt1.c0, 0.25267832337953233, t0.c87, t0.c87, t0.c87, t10.c30))))OR(((((((((t10.c30)OR('-1511896455')))AND(t0.c87)))OR(t0.c0)))AND(t10.c30))))) ORDER BY 0.2694718730124218;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND('>唘Mg\%&亐')))AND((- (NULL)))))OR(DATETIME(t0.c0, vt1.c0, 0.25267832337953233, t0.c87, t0.c87, t0.c87, t10.c30))))OR(((((((((t10.c30)OR('-1511896455')))AND(t0.c87)))OR(t0.c0)))AND(t10.c30))))) IS TRUE)  as count FROM vt1, t0, t10 ORDER BY 0.2694718730124218);
SELECT COUNT(*) FROM vt1, t0, t10 WHERE (((((((((vt1.c0)AND('>唘Mg\%&亐')))AND((- (NULL)))))OR(DATETIME(t0.c0, vt1.c0, 0.25267832337953233, t0.c87, t0.c87, t0.c87, t10.c30))))OR(((((((((t10.c30)OR('-1511896455')))AND(t0.c87)))OR(t0.c0)))AND(t10.c30))))) ORDER BY 0.2694718730124218;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND('>唘Mg\%&亐')))AND((- (NULL)))))OR(DATETIME(t0.c0, vt1.c0, 0.25267832337953233, t0.c87, t0.c87, t0.c87, t10.c30))))OR(((((((((t10.c30)OR('-1511896455')))AND(t0.c87)))OR(t0.c0)))AND(t10.c30))))) IS TRUE)  as count FROM vt1, t0, t10 ORDER BY 0.2694718730124218);
SELECT COUNT(*) FROM vt1, t0, t10 WHERE (((((((((vt1.c0)AND('>唘Mg\%&亐')))AND((- (NULL)))))OR(DATETIME(t0.c0, vt1.c0, 0.25267832337953233, t0.c87, t0.c87, t0.c87, t10.c30))))OR(((((((((t10.c30)OR('-1511896455')))AND(t0.c87)))OR(t0.c0)))AND(t10.c30))))) ORDER BY 0.2694718730124218;
SELECT * FROM vt0, vt1 WHERE (NULLIF(DISTINCT vt1.c0, vt0.c0) COLLATE RTRIM) ORDER BY (NOT (vt0.c0)) DESC, ((UNLIKELY(DISTINCT vt1.c0))&((((vt0.c0)) NOT BETWEEN (('-128069135')) AND ((NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT vt1.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (vt0.c0)) DESC, ((UNLIKELY(DISTINCT vt1.c0))&((((vt0.c0)) NOT BETWEEN (('-128069135')) AND ((NULL)))))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (NULLIF(DISTINCT vt1.c0, vt0.c0) COLLATE RTRIM) ORDER BY (NOT (vt0.c0)) DESC, ((UNLIKELY(DISTINCT vt1.c0))&((((vt0.c0)) NOT BETWEEN (('-128069135')) AND ((NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT vt1.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (vt0.c0)) DESC, ((UNLIKELY(DISTINCT vt1.c0))&((((vt0.c0)) NOT BETWEEN (('-128069135')) AND ((NULL)))))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (NULLIF(DISTINCT vt1.c0, vt0.c0) COLLATE RTRIM) ORDER BY (NOT (vt0.c0)) DESC, ((UNLIKELY(DISTINCT vt1.c0))&((((vt0.c0)) NOT BETWEEN (('-128069135')) AND ((NULL)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))/(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))/(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))/(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))/(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))/(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((('')LIKE((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('')LIKE((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('')LIKE((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('')LIKE((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('')LIKE((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c87)OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(vt1.c0)))>(((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))) INNER JOIN t0 ON CAST(TYPEOF(DISTINCT vt1.c0) AS REAL) WHERE ((- (CAST(vt1.c0 AS REAL)))) ORDER BY ((t0.c0)GLOB((((vt0.c0, t0.c87, vt0.c0, 0.8127135415883807, vt1.c0))<((t0.c0, t0.c87, vt1.c0, vt1.c0, t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c87)OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(vt1.c0)))>(((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))) INNER JOIN t0 ON CAST(TYPEOF(DISTINCT vt1.c0) AS REAL) ORDER BY ((t0.c0)GLOB((((vt0.c0, t0.c87, vt0.c0, 0.8127135415883807, vt1.c0))<((t0.c0, t0.c87, vt1.c0, vt1.c0, t0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c87)OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(vt1.c0)))>(((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))) INNER JOIN t0 ON CAST(TYPEOF(DISTINCT vt1.c0) AS REAL) WHERE ((- (CAST(vt1.c0 AS REAL)))) ORDER BY ((t0.c0)GLOB((((vt0.c0, t0.c87, vt0.c0, 0.8127135415883807, vt1.c0))<((t0.c0, t0.c87, vt1.c0, vt1.c0, t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c87)OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(vt1.c0)))>(((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))) INNER JOIN t0 ON CAST(TYPEOF(DISTINCT vt1.c0) AS REAL) ORDER BY ((t0.c0)GLOB((((vt0.c0, t0.c87, vt0.c0, 0.8127135415883807, vt1.c0))<((t0.c0, t0.c87, vt1.c0, vt1.c0, t0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t10, vt0 WHERE (CAST(t10.c30 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(t10.c30 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t10, vt0);
SELECT ALL COUNT(*) FROM t10, vt0 WHERE (CAST(t10.c30 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(t10.c30 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t10, vt0);
SELECT ALL COUNT(*) FROM t10, vt0 WHERE (CAST(t10.c30 COLLATE NOCASE AS TEXT));
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY '*v*WK' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY '*v*WK' DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY '*v*WK' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY '*v*WK' DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY '*v*WK' DESC  NULLS LAST;
SELECT * FROM t0, t10, vt0 WHERE (((NULL)<=(t0.c87)));
SELECT SUM(count) FROM (SELECT ((((NULL)<=(t0.c87))) IS TRUE)  as count FROM t0, t10, vt0);
SELECT * FROM t0, t10, vt0 WHERE (((NULL)<=(t0.c87)));
SELECT SUM(count) FROM (SELECT ((((NULL)<=(t0.c87))) IS TRUE)  as count FROM t0, t10, vt0);
SELECT * FROM t0, t10, vt0 WHERE (((NULL)<=(t0.c87)));
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON t10.c0 COLLATE NOCASE LEFT OUTER JOIN t10 ON (json_quote('UYha3yY') IN (CASE t10.c30  WHEN vt1.c0 THEN t10.c30 END, ((t0.c87)<>(t0.c87)))) WHERE (((vt0.c0) BETWEEN (t10.c30) AND (vt1.c0)) COLLATE RTRIM) ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE t10.c0  WHEN t0.c87 THEN t10.c0 WHEN t10.c0 THEN t0.c87 WHEN vt0.c0 THEN t10.c0 ELSE t0.c87 END) AND (vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (t10.c30) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON t10.c0 COLLATE NOCASE LEFT OUTER JOIN t10 ON (json_quote('UYha3yY') IN (CASE t10.c30  WHEN vt1.c0 THEN t10.c30 END, ((t0.c87)<>(t0.c87)))) ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE t10.c0  WHEN t0.c87 THEN t10.c0 WHEN t10.c0 THEN t0.c87 WHEN vt0.c0 THEN t10.c0 ELSE t0.c87 END) AND (vt1.c0))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON t10.c0 COLLATE NOCASE LEFT OUTER JOIN t10 ON (json_quote('UYha3yY') IN (CASE t10.c30  WHEN vt1.c0 THEN t10.c30 END, ((t0.c87)<>(t0.c87)))) WHERE (((vt0.c0) BETWEEN (t10.c30) AND (vt1.c0)) COLLATE RTRIM) ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE t10.c0  WHEN t0.c87 THEN t10.c0 WHEN t10.c0 THEN t0.c87 WHEN vt0.c0 THEN t10.c0 ELSE t0.c87 END) AND (vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (t10.c30) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON t10.c0 COLLATE NOCASE LEFT OUTER JOIN t10 ON (json_quote('UYha3yY') IN (CASE t10.c30  WHEN vt1.c0 THEN t10.c30 END, ((t0.c87)<>(t0.c87)))) ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE t10.c0  WHEN t0.c87 THEN t10.c0 WHEN t10.c0 THEN t0.c87 WHEN vt0.c0 THEN t10.c0 ELSE t0.c87 END) AND (vt1.c0))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN TOTAL_CHANGES() WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN x'' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN TOTAL_CHANGES() WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN x'' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN TOTAL_CHANGES() WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN x'' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN TOTAL_CHANGES() WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN x'' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN TOTAL_CHANGES() WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN x'' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE CAST(vt0.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM t10, vt1 RIGHT OUTER JOIN t0 ON ((((t0.c0)AND(t10.c30)))OR(t10.c0)) COLLATE RTRIM WHERE (((((((((t0.c0)OR(CAST(vt1.c0 AS BLOB))))AND(t0.c0 COLLATE NOCASE)))AND(((((((((t0.c87)OR(t0.c87)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c87)))))AND(((((t0.c87)OR(t10.c0)))AND(x'92b4')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)OR(CAST(vt1.c0 AS BLOB))))AND(t0.c0 COLLATE NOCASE)))AND(((((((((t0.c87)OR(t0.c87)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c87)))))AND(((((t0.c87)OR(t10.c0)))AND(x'92b4'))))) IS TRUE)  as count FROM t10, vt1 RIGHT OUTER JOIN t0 ON ((((t0.c0)AND(t10.c30)))OR(t10.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t10, vt1 RIGHT OUTER JOIN t0 ON ((((t0.c0)AND(t10.c30)))OR(t10.c0)) COLLATE RTRIM WHERE (((((((((t0.c0)OR(CAST(vt1.c0 AS BLOB))))AND(t0.c0 COLLATE NOCASE)))AND(((((((((t0.c87)OR(t0.c87)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c87)))))AND(((((t0.c87)OR(t10.c0)))AND(x'92b4')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)OR(CAST(vt1.c0 AS BLOB))))AND(t0.c0 COLLATE NOCASE)))AND(((((((((t0.c87)OR(t0.c87)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c87)))))AND(((((t0.c87)OR(t10.c0)))AND(x'92b4'))))) IS TRUE)  as count FROM t10, vt1 RIGHT OUTER JOIN t0 ON ((((t0.c0)AND(t10.c30)))OR(t10.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t10, vt1 RIGHT OUTER JOIN t0 ON ((((t0.c0)AND(t10.c30)))OR(t10.c0)) COLLATE RTRIM WHERE (((((((((t0.c0)OR(CAST(vt1.c0 AS BLOB))))AND(t0.c0 COLLATE NOCASE)))AND(((((((((t0.c87)OR(t0.c87)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c87)))))AND(((((t0.c87)OR(t10.c0)))AND(x'92b4')))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON (((CAST(t0.c87 AS BLOB), CAST(t0.c87 AS TEXT), 0.0))<>((((t0.c0) NOTNULL), ((((((((((((vt1.c0)AND(t0.c0)))OR(vt1.c0)))OR(t0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(t0.c0)), '1592802628'))) WHERE (((((((t0.c0)OR(t0.c87)))AND(vt1.c0)))||((t0.c0 IN ())))) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c87)))AND(vt1.c0)))||((t0.c0 IN ())))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (((CAST(t0.c87 AS BLOB), CAST(t0.c87 AS TEXT), 0.0))<>((((t0.c0) NOTNULL), ((((((((((((vt1.c0)AND(t0.c0)))OR(vt1.c0)))OR(t0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(t0.c0)), '1592802628'))) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOTNULL));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON (((CAST(t0.c87 AS BLOB), CAST(t0.c87 AS TEXT), 0.0))<>((((t0.c0) NOTNULL), ((((((((((((vt1.c0)AND(t0.c0)))OR(vt1.c0)))OR(t0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(t0.c0)), '1592802628'))) WHERE (((((((t0.c0)OR(t0.c87)))AND(vt1.c0)))||((t0.c0 IN ())))) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c87)))AND(vt1.c0)))||((t0.c0 IN ())))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (((CAST(t0.c87 AS BLOB), CAST(t0.c87 AS TEXT), 0.0))<>((((t0.c0) NOTNULL), ((((((((((((vt1.c0)AND(t0.c0)))OR(vt1.c0)))OR(t0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(t0.c0)), '1592802628'))) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOTNULL));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON (((CAST(t0.c87 AS BLOB), CAST(t0.c87 AS TEXT), 0.0))<>((((t0.c0) NOTNULL), ((((((((((((vt1.c0)AND(t0.c0)))OR(vt1.c0)))OR(t0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(t0.c0)), '1592802628'))) WHERE (((((((t0.c0)OR(t0.c87)))AND(vt1.c0)))||((t0.c0 IN ())))) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOTNULL);
SELECT * FROM vt1, vt0, t0 WHERE (LOWER(DISTINCT ((x'0595965b') NOTNULL))) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN NULL THEN 0xffffffffb57b44c1 ELSE CAST(t0.c0 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((x'0595965b') NOTNULL))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN NULL THEN 0xffffffffb57b44c1 ELSE CAST(t0.c0 AS NUMERIC) END);
SELECT * FROM vt1, vt0, t0 WHERE (LOWER(DISTINCT ((x'0595965b') NOTNULL))) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN NULL THEN 0xffffffffb57b44c1 ELSE CAST(t0.c0 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((x'0595965b') NOTNULL))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN NULL THEN 0xffffffffb57b44c1 ELSE CAST(t0.c0 AS NUMERIC) END);
SELECT * FROM vt1, vt0, t0 WHERE (LOWER(DISTINCT ((x'0595965b') NOTNULL))) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN NULL THEN 0xffffffffb57b44c1 ELSE CAST(t0.c0 AS NUMERIC) END;
SELECT ALL COUNT(*) FROM t10, vt0, t0 WHERE ((('1669581996') BETWEEN ((- (t10.c0))) AND (CASE WHEN t10.c0 THEN t0.c87 ELSE t0.c0 END))) ORDER BY ((t0.c87)IS((- (t0.c87)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('1669581996') BETWEEN ((- (t10.c0))) AND (CASE WHEN t10.c0 THEN t0.c87 ELSE t0.c0 END))) IS TRUE)  as count FROM t10, vt0, t0 ORDER BY ((t0.c87)IS((- (t0.c87)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t10, vt0, t0 WHERE ((('1669581996') BETWEEN ((- (t10.c0))) AND (CASE WHEN t10.c0 THEN t0.c87 ELSE t0.c0 END))) ORDER BY ((t0.c87)IS((- (t0.c87)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('1669581996') BETWEEN ((- (t10.c0))) AND (CASE WHEN t10.c0 THEN t0.c87 ELSE t0.c0 END))) IS TRUE)  as count FROM t10, vt0, t0 ORDER BY ((t0.c87)IS((- (t0.c87)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t10, vt0, t0 WHERE ((('1669581996') BETWEEN ((- (t10.c0))) AND (CASE WHEN t10.c0 THEN t0.c87 ELSE t0.c0 END))) ORDER BY ((t0.c87)IS((- (t0.c87)))) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (LTRIM(IFNULL(vt1.c0, vt1.c0))) ORDER BY ((((((vt1.c0)OR(0.1999736922446088)))OR(vt1.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(IFNULL(vt1.c0, vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(0.1999736922446088)))OR(vt1.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (LTRIM(IFNULL(vt1.c0, vt1.c0))) ORDER BY ((((((vt1.c0)OR(0.1999736922446088)))OR(vt1.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(IFNULL(vt1.c0, vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(0.1999736922446088)))OR(vt1.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (LTRIM(IFNULL(vt1.c0, vt1.c0))) ORDER BY ((((((vt1.c0)OR(0.1999736922446088)))OR(vt1.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT ALL * FROM t0, t10 WHERE (((t0.c87) BETWEEN (t10.c30) AND (t0.c87)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c87) BETWEEN (t10.c30) AND (t0.c87)) COLLATE NOCASE) IS TRUE)  as count FROM t0, t10);
SELECT ALL * FROM t0, t10 WHERE (((t0.c87) BETWEEN (t10.c30) AND (t0.c87)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c87) BETWEEN (t10.c30) AND (t0.c87)) COLLATE NOCASE) IS TRUE)  as count FROM t0, t10);
SELECT ALL * FROM t0, t10 WHERE (((t0.c87) BETWEEN (t10.c30) AND (t0.c87)) COLLATE NOCASE);
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM t10, vt0 WHERE ((x'd919' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'd919' IN ())) IS TRUE)  as count FROM t10, vt0);
SELECT ALL * FROM t10, vt0 WHERE ((x'd919' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'd919' IN ())) IS TRUE)  as count FROM t10, vt0);
SELECT ALL * FROM t10, vt0 WHERE ((x'd919' IN ()));
SELECT ALL COUNT(*) FROM vt1, t10 WHERE ((((((((((~ (t10.c30)))OR(((vt1.c0)==(t10.c0)))))OR(((t10.c30) BETWEEN (t10.c30) AND (t10.c30)))))OR(((t10.c30)OR(vt1.c0)))))OR(((((t10.c30)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (t10.c30)))OR(((vt1.c0)=(t10.c0)))))OR(((t10.c30) BETWEEN (t10.c30) AND (t10.c30)))))OR(((t10.c30)OR(vt1.c0)))))OR(((((t10.c30)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, t10);
SELECT ALL COUNT(*) FROM vt1, t10 WHERE ((((((((((~ (t10.c30)))OR(((vt1.c0)==(t10.c0)))))OR(((t10.c30) BETWEEN (t10.c30) AND (t10.c30)))))OR(((t10.c30)OR(vt1.c0)))))OR(((((t10.c30)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (t10.c30)))OR(((vt1.c0)=(t10.c0)))))OR(((t10.c30) BETWEEN (t10.c30) AND (t10.c30)))))OR(((t10.c30)OR(vt1.c0)))))OR(((((t10.c30)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, t10);
SELECT ALL COUNT(*) FROM vt1, t10 WHERE ((((((((((~ (t10.c30)))OR(((vt1.c0)==(t10.c0)))))OR(((t10.c30) BETWEEN (t10.c30) AND (t10.c30)))))OR(((t10.c30)OR(vt1.c0)))))OR(((((t10.c30)AND(vt1.c0)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM t10 NATURAL JOIN t0 WHERE (((((t0.c87)LIKE(-230655843)))-((~ (0.37061429994424966))))) ORDER BY ((((t0.c87) IS FALSE)) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c87)LIKE(-230655843)))-((~ (0.37061429994424966))))) IS TRUE)  as count FROM t10 NATURAL JOIN t0 ORDER BY ((((t0.c87) IS FALSE)) IS TRUE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t10 NATURAL JOIN t0 WHERE (((((t0.c87)LIKE(-230655843)))-((~ (0.37061429994424966))))) ORDER BY ((((t0.c87) IS FALSE)) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c87)LIKE(-230655843)))-((~ (0.37061429994424966))))) IS TRUE)  as count FROM t10 NATURAL JOIN t0 ORDER BY ((((t0.c87) IS FALSE)) IS TRUE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t10 NATURAL JOIN t0 WHERE (((((t0.c87)LIKE(-230655843)))-((~ (0.37061429994424966))))) ORDER BY ((((t0.c87) IS FALSE)) IS TRUE) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt1, vt0 WHERE (CAST(t0.c0 COLLATE NOCASE AS BLOB)) ORDER BY (((t0.c87)) NOT BETWEEN ((0.9801610471433336)) AND ((CAST(0x5f326055 AS REAL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((t0.c87)) NOT BETWEEN ((0.9801610471433336)) AND ((CAST(0X5f326055 AS REAL)))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (CAST(t0.c0 COLLATE NOCASE AS BLOB)) ORDER BY (((t0.c87)) NOT BETWEEN ((0.9801610471433336)) AND ((CAST(0x5f326055 AS REAL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((t0.c87)) NOT BETWEEN ((0.9801610471433336)) AND ((CAST(0X5f326055 AS REAL)))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (CAST(t0.c0 COLLATE NOCASE AS BLOB)) ORDER BY (((t0.c87)) NOT BETWEEN ((0.9801610471433336)) AND ((CAST(0x5f326055 AS REAL)))) ASC  NULLS LAST;
SELECT * FROM t0 INDEXED BY i64, vt1, vt0, t10 WHERE (((((((((((((t0.c0)AND(t10.c0)))OR(vt1.c0)))AND(vt1.c0)))AND('''鎈,E\Gv[U')))OR((t10.c0 IN ()))))OR(CASE vt1.c0  WHEN t10.c30 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t10.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c0)AND(t10.c0)))OR(vt1.c0)))AND(vt1.c0)))AND('''鎈,E\Gv[U')))OR((t10.c0 IN ()))))OR(CASE vt1.c0  WHEN t10.c30 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t10.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0 INDEXED BY i64, vt1, vt0, t10);
SELECT * FROM t0 INDEXED BY i64, vt1, vt0, t10 WHERE (((((((((((((t0.c0)AND(t10.c0)))OR(vt1.c0)))AND(vt1.c0)))AND('''鎈,E\Gv[U')))OR((t10.c0 IN ()))))OR(CASE vt1.c0  WHEN t10.c30 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t10.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c0)AND(t10.c0)))OR(vt1.c0)))AND(vt1.c0)))AND('''鎈,E\Gv[U')))OR((t10.c0 IN ()))))OR(CASE vt1.c0  WHEN t10.c30 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t10.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0 INDEXED BY i64, vt1, vt0, t10);
SELECT * FROM vt1, vt0, t0, t10 NOT INDEXED WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, t0, t10);
SELECT * FROM vt1, vt0, t0, t10 NOT INDEXED WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, t0, t10);
SELECT * FROM vt1, vt0, t0, t10 NOT INDEXED WHERE (NULL);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(x'')) AS REAL)) ORDER BY (((((vt0.c0))==((t0.c87))))|(((vt1.c0) IS TRUE))) ASC  NULLS LAST, ((SQLITE_COMPILEOPTION_GET('#/BXJG㇄ar'))|(t0.c87))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(x'')) AS REAL)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((((vt0.c0))=((t0.c87))))|(((vt1.c0) IS TRUE))) ASC  NULLS LAST, ((SQLITE_COMPILEOPTION_GET('#/BXJG㇄ar'))|(t0.c87))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(x'')) AS REAL)) ORDER BY (((((vt0.c0))==((t0.c87))))|(((vt1.c0) IS TRUE))) ASC  NULLS LAST, ((SQLITE_COMPILEOPTION_GET('#/BXJG㇄ar'))|(t0.c87))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(x'')) AS REAL)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((((vt0.c0))=((t0.c87))))|(((vt1.c0) IS TRUE))) ASC  NULLS LAST, ((SQLITE_COMPILEOPTION_GET('#/BXJG㇄ar'))|(t0.c87))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(x'')) AS REAL)) ORDER BY (((((vt0.c0))==((t0.c87))))|(((vt1.c0) IS TRUE))) ASC  NULLS LAST, ((SQLITE_COMPILEOPTION_GET('#/BXJG㇄ar'))|(t0.c87))  NULLS FIRST;
SELECT * FROM t10, t0 WHERE (CAST(t10.c30 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(t10.c30 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t10, t0);
SELECT * FROM t10, t0 WHERE (CAST(t10.c30 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(t10.c30 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t10, t0);
SELECT * FROM t10, t0 WHERE (CAST(t10.c30 AS NUMERIC) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t10 WHERE (((((((((((t10.c30)OR(t10.c30)))OR(t10.c0)))OR(t10.c0)))OR('-961845743')))<>(LTRIM(t10.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t10.c30)OR(t10.c30)))OR(t10.c0)))OR(t10.c0)))OR('-961845743')))!=(LTRIM(t10.c0)))) IS TRUE)  as count FROM t10);
SELECT ALL COUNT(*) FROM t10 WHERE (((((((((((t10.c30)OR(t10.c30)))OR(t10.c0)))OR(t10.c0)))OR('-961845743')))<>(LTRIM(t10.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t10.c30)OR(t10.c30)))OR(t10.c0)))OR(t10.c0)))OR('-961845743')))!=(LTRIM(t10.c0)))) IS TRUE)  as count FROM t10);
SELECT ALL COUNT(*) FROM t10 WHERE (((((((((((t10.c30)OR(t10.c30)))OR(t10.c0)))OR(t10.c0)))OR('-961845743')))<>(LTRIM(t10.c0))));
SELECT ALL * FROM t10, t0, vt0 RIGHT OUTER JOIN vt1 ON (((t0.c87, t0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), CASE WHEN vt1.c0 THEN t0.c0 WHEN t10.c0 THEN vt1.c0 WHEN t10.c30 THEN t0.c87 END, ((t0.c0)&(t10.c30)))) AND ((((vt0.c0) IS TRUE), (NOT (t0.c87)), NULLIF(0xffffffffaec58a06, t10.c0)))) WHERE (CASE t10.c30  WHEN (- (vt1.c0)) THEN ((t0.c0)&(vt0.c0)) WHEN ((((t0.c87)OR(t0.c0)))OR(t10.c0)) THEN (+ (t0.c87)) WHEN ((vt1.c0)>(t0.c87)) THEN CASE WHEN t10.c0 THEN vt1.c0 WHEN t10.c30 THEN t10.c0 WHEN t0.c0 THEN t0.c87 ELSE t10.c30 END WHEN (((vt0.c0))<((vt0.c0))) THEN CASE WHEN t10.c0 THEN vt0.c0 ELSE t10.c30 END WHEN ((0.8672655906121755)>(t0.c0)) THEN t0.c87 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE t10.c30  WHEN (- (vt1.c0)) THEN ((t0.c0)&(vt0.c0)) WHEN ((((t0.c87)OR(t0.c0)))OR(t10.c0)) THEN (+ (t0.c87)) WHEN ((vt1.c0)>(t0.c87)) THEN CASE WHEN t10.c0 THEN vt1.c0 WHEN t10.c30 THEN t10.c0 WHEN t0.c0 THEN t0.c87 ELSE t10.c30 END WHEN (((vt0.c0))<((vt0.c0))) THEN CASE WHEN t10.c0 THEN vt0.c0 ELSE t10.c30 END WHEN ((0.8672655906121755)>(t0.c0)) THEN t0.c87 COLLATE BINARY END) IS TRUE)  as count FROM t10, t0, vt0 RIGHT OUTER JOIN vt1 ON (((t0.c87, t0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), CASE WHEN vt1.c0 THEN t0.c0 WHEN t10.c0 THEN vt1.c0 WHEN t10.c30 THEN t0.c87 END, ((t0.c0)&(t10.c30)))) AND ((((vt0.c0) IS TRUE), (NOT (t0.c87)), NULLIF(0xffffffffaec58a06, t10.c0)))));
SELECT ALL * FROM t10, t0, vt0 RIGHT OUTER JOIN vt1 ON (((t0.c87, t0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), CASE WHEN vt1.c0 THEN t0.c0 WHEN t10.c0 THEN vt1.c0 WHEN t10.c30 THEN t0.c87 END, ((t0.c0)&(t10.c30)))) AND ((((vt0.c0) IS TRUE), (NOT (t0.c87)), NULLIF(0xffffffffaec58a06, t10.c0)))) WHERE (CASE t10.c30  WHEN (- (vt1.c0)) THEN ((t0.c0)&(vt0.c0)) WHEN ((((t0.c87)OR(t0.c0)))OR(t10.c0)) THEN (+ (t0.c87)) WHEN ((vt1.c0)>(t0.c87)) THEN CASE WHEN t10.c0 THEN vt1.c0 WHEN t10.c30 THEN t10.c0 WHEN t0.c0 THEN t0.c87 ELSE t10.c30 END WHEN (((vt0.c0))<((vt0.c0))) THEN CASE WHEN t10.c0 THEN vt0.c0 ELSE t10.c30 END WHEN ((0.8672655906121755)>(t0.c0)) THEN t0.c87 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE t10.c30  WHEN (- (vt1.c0)) THEN ((t0.c0)&(vt0.c0)) WHEN ((((t0.c87)OR(t0.c0)))OR(t10.c0)) THEN (+ (t0.c87)) WHEN ((vt1.c0)>(t0.c87)) THEN CASE WHEN t10.c0 THEN vt1.c0 WHEN t10.c30 THEN t10.c0 WHEN t0.c0 THEN t0.c87 ELSE t10.c30 END WHEN (((vt0.c0))<((vt0.c0))) THEN CASE WHEN t10.c0 THEN vt0.c0 ELSE t10.c30 END WHEN ((0.8672655906121755)>(t0.c0)) THEN t0.c87 COLLATE BINARY END) IS TRUE)  as count FROM t10, t0, vt0 RIGHT OUTER JOIN vt1 ON (((t0.c87, t0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), CASE WHEN vt1.c0 THEN t0.c0 WHEN t10.c0 THEN vt1.c0 WHEN t10.c30 THEN t0.c87 END, ((t0.c0)&(t10.c30)))) AND ((((vt0.c0) IS TRUE), (NOT (t0.c87)), NULLIF(0xffffffffaec58a06, t10.c0)))));
SELECT ALL * FROM t10, t0, vt0 RIGHT OUTER JOIN vt1 ON (((t0.c87, t0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), CASE WHEN vt1.c0 THEN t0.c0 WHEN t10.c0 THEN vt1.c0 WHEN t10.c30 THEN t0.c87 END, ((t0.c0)&(t10.c30)))) AND ((((vt0.c0) IS TRUE), (NOT (t0.c87)), NULLIF(0xffffffffaec58a06, t10.c0)))) WHERE (CASE t10.c30  WHEN (- (vt1.c0)) THEN ((t0.c0)&(vt0.c0)) WHEN ((((t0.c87)OR(t0.c0)))OR(t10.c0)) THEN (+ (t0.c87)) WHEN ((vt1.c0)>(t0.c87)) THEN CASE WHEN t10.c0 THEN vt1.c0 WHEN t10.c30 THEN t10.c0 WHEN t0.c0 THEN t0.c87 ELSE t10.c30 END WHEN (((vt0.c0))<((vt0.c0))) THEN CASE WHEN t10.c0 THEN vt0.c0 ELSE t10.c30 END WHEN ((0.8672655906121755)>(t0.c0)) THEN t0.c87 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN vt0 ON 8.53941504E8 INNER JOIN t10 ON CASE WHEN (((vt1.c0)) NOT BETWEEN ((t10.c0)) AND ((t10.c30))) THEN (t10.c30 IN ()) ELSE (NOT (-0.0)) END WHERE (((((t0.c0)IS(NULL))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS(NULL))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON 8.53941504E8 INNER JOIN t10 ON CASE WHEN (((vt1.c0)) NOT BETWEEN ((t10.c0)) AND ((t10.c30))) THEN (t10.c30 IN ()) ELSE (NOT (-0.0)) END);
SELECT ALL COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN vt0 ON 8.53941504E8 INNER JOIN t10 ON CASE WHEN (((vt1.c0)) NOT BETWEEN ((t10.c0)) AND ((t10.c30))) THEN (t10.c30 IN ()) ELSE (NOT (-0.0)) END WHERE (((((t0.c0)IS(NULL))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS(NULL))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON 8.53941504E8 INNER JOIN t10 ON CASE WHEN (((vt1.c0)) NOT BETWEEN ((t10.c0)) AND ((t10.c30))) THEN (t10.c30 IN ()) ELSE (NOT (-0.0)) END);
SELECT ALL COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN vt0 ON 8.53941504E8 INNER JOIN t10 ON CASE WHEN (((vt1.c0)) NOT BETWEEN ((t10.c0)) AND ((t10.c30))) THEN (t10.c30 IN ()) ELSE (NOT (-0.0)) END WHERE (((((t0.c0)IS(NULL))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((t0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1, t10, t0, vt0 WHERE ((((t0.c87, t0.c0, t10.c0)) NOT BETWEEN ((((t0.c0)IS NOT(vt1.c0)), (t10.c30 IN ()), ((t10.c30)LIKE(vt1.c0)))) AND ((((((((((t10.c30)OR(t10.c0)))AND(vt1.c0)))OR(t10.c0)))AND(t10.c0)), '', x''))));
SELECT SUM(count) FROM (SELECT (((((t0.c87, t0.c0, t10.c0)) NOT BETWEEN ((((t0.c0)IS NOT(vt1.c0)), (t10.c30 IN ()), ((t10.c30)LIKE(vt1.c0)))) AND ((((((((((t10.c30)OR(t10.c0)))AND(vt1.c0)))OR(t10.c0)))AND(t10.c0)), '', x'')))) IS TRUE)  as count FROM vt1, t10, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t10, t0, vt0 WHERE ((((t0.c87, t0.c0, t10.c0)) NOT BETWEEN ((((t0.c0)IS NOT(vt1.c0)), (t10.c30 IN ()), ((t10.c30)LIKE(vt1.c0)))) AND ((((((((((t10.c30)OR(t10.c0)))AND(vt1.c0)))OR(t10.c0)))AND(t10.c0)), '', x''))));
SELECT SUM(count) FROM (SELECT (((((t0.c87, t0.c0, t10.c0)) NOT BETWEEN ((((t0.c0)IS NOT(vt1.c0)), (t10.c30 IN ()), ((t10.c30)LIKE(vt1.c0)))) AND ((((((((((t10.c30)OR(t10.c0)))AND(vt1.c0)))OR(t10.c0)))AND(t10.c0)), '', x'')))) IS TRUE)  as count FROM vt1, t10, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t10, t0, vt0 WHERE ((((t0.c87, t0.c0, t10.c0)) NOT BETWEEN ((((t0.c0)IS NOT(vt1.c0)), (t10.c30 IN ()), ((t10.c30)LIKE(vt1.c0)))) AND ((((((((((t10.c30)OR(t10.c0)))AND(vt1.c0)))OR(t10.c0)))AND(t10.c0)), '', x''))));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)*(vt1.c0)) THEN (NOT (vt1.c0)) ELSE CAST(vt1.c0 AS NUMERIC) END) ORDER BY (((((vt1.c0) BETWEEN (vt1.c0) AND (0.21070561254673725)), (- (vt1.c0)), ((((vt1.c0)AND(1e500)))AND(0.6731150396074181))))!=((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, vt1.c0 COLLATE BINARY, TRIM(vt1.c0)))) DESC  NULLS FIRST, x'9486'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)*(vt1.c0)) THEN (NOT (vt1.c0)) ELSE CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) BETWEEN (vt1.c0) AND (0.21070561254673725)), (- (vt1.c0)), ((((vt1.c0)AND(1e500)))AND(0.6731150396074181))))!=((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, vt1.c0 COLLATE BINARY, TRIM(vt1.c0)))) DESC  NULLS FIRST, x'9486'  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)*(vt1.c0)) THEN (NOT (vt1.c0)) ELSE CAST(vt1.c0 AS NUMERIC) END) ORDER BY (((((vt1.c0) BETWEEN (vt1.c0) AND (0.21070561254673725)), (- (vt1.c0)), ((((vt1.c0)AND(1e500)))AND(0.6731150396074181))))!=((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, vt1.c0 COLLATE BINARY, TRIM(vt1.c0)))) DESC  NULLS FIRST, x'9486'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)*(vt1.c0)) THEN (NOT (vt1.c0)) ELSE CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) BETWEEN (vt1.c0) AND (0.21070561254673725)), (- (vt1.c0)), ((((vt1.c0)AND(1e500)))AND(0.6731150396074181))))!=((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, vt1.c0 COLLATE BINARY, TRIM(vt1.c0)))) DESC  NULLS FIRST, x'9486'  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)*(vt1.c0)) THEN (NOT (vt1.c0)) ELSE CAST(vt1.c0 AS NUMERIC) END) ORDER BY (((((vt1.c0) BETWEEN (vt1.c0) AND (0.21070561254673725)), (- (vt1.c0)), ((((vt1.c0)AND(1e500)))AND(0.6731150396074181))))!=((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, vt1.c0 COLLATE BINARY, TRIM(vt1.c0)))) DESC  NULLS FIRST, x'9486'  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM t10, vt0 WHERE (((((0.12479982290927549)=(vt0.c0)))<>(((vt0.c0)<=(t10.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.12479982290927549)=(vt0.c0)))<>(((vt0.c0)<=(t10.c0))))) IS TRUE)  as count FROM t10, vt0);
SELECT COUNT(*) FROM t10, vt0 WHERE (((((0.12479982290927549)=(vt0.c0)))<>(((vt0.c0)<=(t10.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.12479982290927549)=(vt0.c0)))<>(((vt0.c0)<=(t10.c0))))) IS TRUE)  as count FROM t10, vt0);
SELECT COUNT(*) FROM t10, vt0 WHERE (((((0.12479982290927549)=(vt0.c0)))<>(((vt0.c0)<=(t10.c0)))));
SELECT COUNT(*) FROM t10, vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (t10.c30) AND (vt1.c0))) BETWEEN ((((t10.c30)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((x'') NOTNULL))) WHERE (((vt1.c0) NOTNULL) COLLATE BINARY) ORDER BY 0.21399568371483302  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t10, vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (t10.c30) AND (vt1.c0))) BETWEEN ((((t10.c30)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((x'') NOTNULL))) ORDER BY 0.21399568371483302  NULLS LAST);
SELECT COUNT(*) FROM t10, vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (t10.c30) AND (vt1.c0))) BETWEEN ((((t10.c30)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((x'') NOTNULL))) WHERE (((vt1.c0) NOTNULL) COLLATE BINARY) ORDER BY 0.21399568371483302  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t10, vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (t10.c30) AND (vt1.c0))) BETWEEN ((((t10.c30)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((x'') NOTNULL))) ORDER BY 0.21399568371483302  NULLS LAST);
SELECT COUNT(*) FROM t10, vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (t10.c30) AND (vt1.c0))) BETWEEN ((((t10.c30)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((x'') NOTNULL))) WHERE (((vt1.c0) NOTNULL) COLLATE BINARY) ORDER BY 0.21399568371483302  NULLS LAST;
SELECT * FROM vt1, t10 WHERE (LIKELIHOOD(DISTINCT ((t10.c30) NOT BETWEEN (vt1.c0) AND (t10.c30)), 0.5410137444810271));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((t10.c30) NOT BETWEEN (vt1.c0) AND (t10.c30)), 0.5410137444810271)) IS TRUE)  as count FROM vt1, t10);
SELECT * FROM vt1, t10 WHERE (LIKELIHOOD(DISTINCT ((t10.c30) NOT BETWEEN (vt1.c0) AND (t10.c30)), 0.5410137444810271));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((t10.c30) NOT BETWEEN (vt1.c0) AND (t10.c30)), 0.5410137444810271)) IS TRUE)  as count FROM vt1, t10);
SELECT * FROM vt1, t10 WHERE (LIKELIHOOD(DISTINCT ((t10.c30) NOT BETWEEN (vt1.c0) AND (t10.c30)), 0.5410137444810271));
SELECT * FROM vt0, t10 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c87 THEN t0.c0 COLLATE BINARY ELSE ((t0.c0)>(t0.c87)) END WHERE (load_extension(t10.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((load_extension(t10.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, t10 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c87 THEN t0.c0 COLLATE BINARY ELSE ((t0.c0)>(t0.c87)) END);
SELECT * FROM vt0, t10 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c87 THEN t0.c0 COLLATE BINARY ELSE ((t0.c0)>(t0.c87)) END WHERE (load_extension(t10.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((load_extension(t10.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, t10 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c87 THEN t0.c0 COLLATE BINARY ELSE ((t0.c0)>(t0.c87)) END);
SELECT * FROM t0 NOT INDEXED, vt1, vt0 WHERE (CASE WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c87)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c87)) END) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0 NOT INDEXED, vt1, vt0 WHERE (CASE WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c87)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c87)) END) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0 NOT INDEXED, vt1, vt0 WHERE (CASE WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c87)) END);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0, t0.c0, t0.c87)) NOT BETWEEN ((((t0.c0) NOTNULL), LIKELY(vt0.c0), ((t0.c87) NOT NULL))) AND ((((((t0.c87)AND(t0.c0)))AND(vt0.c0)), t0.c0, (((t0.c87)) BETWEEN ((t0.c87)) AND ((vt1.c0)))))) LEFT OUTER JOIN vt1 ON (((vt0.c0) NOTNULL) IN ()) WHERE (rtreenode(((x'') NOT NULL), (((NULL))<>((t0.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM)GLOB(((t0.c87)/(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rtreenode(((x'') NOT NULL), (((NULL))!=((t0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0, t0.c0, t0.c87)) NOT BETWEEN ((((t0.c0) NOTNULL), LIKELY(vt0.c0), ((t0.c87) NOT NULL))) AND ((((((t0.c87)AND(t0.c0)))AND(vt0.c0)), t0.c0, (((t0.c87)) BETWEEN ((t0.c87)) AND ((vt1.c0)))))) LEFT OUTER JOIN vt1 ON (((vt0.c0) NOTNULL) IN ()) ORDER BY ((vt0.c0 COLLATE RTRIM)GLOB(((t0.c87)/(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0, t0.c0, t0.c87)) NOT BETWEEN ((((t0.c0) NOTNULL), LIKELY(vt0.c0), ((t0.c87) NOT NULL))) AND ((((((t0.c87)AND(t0.c0)))AND(vt0.c0)), t0.c0, (((t0.c87)) BETWEEN ((t0.c87)) AND ((vt1.c0)))))) LEFT OUTER JOIN vt1 ON (((vt0.c0) NOTNULL) IN ()) WHERE (rtreenode(((x'') NOT NULL), (((NULL))<>((t0.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM)GLOB(((t0.c87)/(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rtreenode(((x'') NOT NULL), (((NULL))!=((t0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0, t0.c0, t0.c87)) NOT BETWEEN ((((t0.c0) NOTNULL), LIKELY(vt0.c0), ((t0.c87) NOT NULL))) AND ((((((t0.c87)AND(t0.c0)))AND(vt0.c0)), t0.c0, (((t0.c87)) BETWEEN ((t0.c87)) AND ((vt1.c0)))))) LEFT OUTER JOIN vt1 ON (((vt0.c0) NOTNULL) IN ()) ORDER BY ((vt0.c0 COLLATE RTRIM)GLOB(((t0.c87)/(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0) BETWEEN (LIKE(vt1.c0, vt0.c0, 'L')) AND (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (LIKE(vt1.c0, vt0.c0, 'L')) AND (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0) BETWEEN (LIKE(vt1.c0, vt0.c0, 'L')) AND (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (LIKE(vt1.c0, vt0.c0, 'L')) AND (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0) BETWEEN (LIKE(vt1.c0, vt0.c0, 'L')) AND (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))));
SELECT * FROM t10, vt1, t0, vt0 WHERE (NULL) ORDER BY ((LOWER(DISTINCT t10.c30)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t10, vt1, t0, vt0 ORDER BY ((LOWER(DISTINCT t10.c30)) NOTNULL));
SELECT * FROM t10, vt1, t0, vt0 WHERE (NULL) ORDER BY ((LOWER(DISTINCT t10.c30)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t10, vt1, t0, vt0 ORDER BY ((LOWER(DISTINCT t10.c30)) NOTNULL));
SELECT * FROM t10, vt1, t0, vt0 WHERE (NULL) ORDER BY ((LOWER(DISTINCT t10.c30)) NOTNULL);
SELECT ALL * FROM vt1, t10 WHERE ('-1370609167' COLLATE RTRIM) ORDER BY (((((vt1.c0)OR(0.8592274434577357)))AND(t10.c30)) IN (((t10.c30) BETWEEN (x'') AND (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1370609167' COLLATE RTRIM) IS TRUE)  as count FROM vt1, t10 ORDER BY (((((vt1.c0)OR(0.8592274434577357)))AND(t10.c30)) IN (((t10.c30) BETWEEN (x'') AND (vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t10 WHERE ('-1370609167' COLLATE RTRIM) ORDER BY (((((vt1.c0)OR(0.8592274434577357)))AND(t10.c30)) IN (((t10.c30) BETWEEN (x'') AND (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1370609167' COLLATE RTRIM) IS TRUE)  as count FROM vt1, t10 ORDER BY (((((vt1.c0)OR(0.8592274434577357)))AND(t10.c30)) IN (((t10.c30) BETWEEN (x'') AND (vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t10 WHERE ('-1370609167' COLLATE RTRIM) ORDER BY (((((vt1.c0)OR(0.8592274434577357)))AND(t10.c30)) IN (((t10.c30) BETWEEN (x'') AND (vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c87) ORDER BY (((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((LOWER(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c87) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((LOWER(t0.c0)))) ASC);
SELECT ALL * FROM t0 WHERE (t0.c87) ORDER BY (((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((LOWER(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c87) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((LOWER(t0.c0)))) ASC);
SELECT ALL * FROM t0 WHERE (t0.c87) ORDER BY (((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((LOWER(t0.c0)))) ASC;
SELECT COUNT(*) FROM vt0, t10, t0 WHERE (CASE t0.c87  WHEN t0.c87 COLLATE RTRIM THEN ((t0.c87) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c87  WHEN t0.c87 COLLATE RTRIM THEN ((t0.c87) ISNULL) END) IS TRUE)  as count FROM vt0, t10, t0);
SELECT COUNT(*) FROM vt0, t10, t0 WHERE (CASE t0.c87  WHEN t0.c87 COLLATE RTRIM THEN ((t0.c87) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c87  WHEN t0.c87 COLLATE RTRIM THEN ((t0.c87) ISNULL) END) IS TRUE)  as count FROM vt0, t10, t0);
SELECT COUNT(*) FROM vt0, t10, t0 WHERE (CASE t0.c87  WHEN t0.c87 COLLATE RTRIM THEN ((t0.c87) ISNULL) END);
SELECT ALL COUNT(*) FROM vt0, t10 RIGHT OUTER JOIN vt1 ON x'' LEFT OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((((t0.c87) BETWEEN (t10.c30) AND (x'')))) AND (((+ (vt0.c0))))) WHERE (((((t10.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) ORDER BY ((((vt0.c0)>>(t10.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 ELSE t10.c30 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t10 RIGHT OUTER JOIN vt1 ON x'' LEFT OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((((t0.c87) BETWEEN (t10.c30) AND (x'')))) AND (((+ (vt0.c0))))) ORDER BY ((((vt0.c0)>>(t10.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 ELSE t10.c30 END)) DESC);
SELECT ALL COUNT(*) FROM vt0, t10 RIGHT OUTER JOIN vt1 ON x'' LEFT OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((((t0.c87) BETWEEN (t10.c30) AND (x'')))) AND (((+ (vt0.c0))))) WHERE (((((t10.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) ORDER BY ((((vt0.c0)>>(t10.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 ELSE t10.c30 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t10 RIGHT OUTER JOIN vt1 ON x'' LEFT OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((((t0.c87) BETWEEN (t10.c30) AND (x'')))) AND (((+ (vt0.c0))))) ORDER BY ((((vt0.c0)>>(t10.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 ELSE t10.c30 END)) DESC);
SELECT ALL COUNT(*) FROM vt0, t10 RIGHT OUTER JOIN vt1 ON x'' LEFT OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((((t0.c87) BETWEEN (t10.c30) AND (x'')))) AND (((+ (vt0.c0))))) WHERE (((((t10.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) ORDER BY ((((vt0.c0)>>(t10.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 ELSE t10.c30 END)) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0, t10, t0 WHERE ((+ (x'b185'))) ORDER BY ((LOWER(t10.c0))/(((vt0.c0) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (x'b185'))) IS TRUE)  as count FROM vt1, vt0, t10, t0 ORDER BY ((LOWER(t10.c0))/(((vt0.c0) NOTNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t10, t0 WHERE ((+ (x'b185'))) ORDER BY ((LOWER(t10.c0))/(((vt0.c0) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (x'b185'))) IS TRUE)  as count FROM vt1, vt0, t10, t0 ORDER BY ((LOWER(t10.c0))/(((vt0.c0) NOTNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t10, t0 WHERE ((+ (x'b185'))) ORDER BY ((LOWER(t10.c0))/(((vt0.c0) NOTNULL))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t10 NATURAL JOIN vt1 WHERE (CASE TRIM(NULL)  WHEN vt1.c0 THEN ((((t10.c0)OR(t10.c30)))OR(t10.c0)) ELSE (NOT ('je)dn8')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(NULL)  WHEN vt1.c0 THEN ((((t10.c0)OR(t10.c30)))OR(t10.c0)) ELSE (NOT ('je)dn8')) END) IS TRUE)  as count FROM vt0, t10 NATURAL JOIN vt1);
SELECT ALL * FROM vt0, t10 NATURAL JOIN vt1 WHERE (CASE TRIM(NULL)  WHEN vt1.c0 THEN ((((t10.c0)OR(t10.c30)))OR(t10.c0)) ELSE (NOT ('je)dn8')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(NULL)  WHEN vt1.c0 THEN ((((t10.c0)OR(t10.c30)))OR(t10.c0)) ELSE (NOT ('je)dn8')) END) IS TRUE)  as count FROM vt0, t10 NATURAL JOIN vt1);
SELECT ALL * FROM vt0, t10 NATURAL JOIN vt1 WHERE (CASE TRIM(NULL)  WHEN vt1.c0 THEN ((((t10.c0)OR(t10.c30)))OR(t10.c0)) ELSE (NOT ('je)dn8')) END);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 NATURAL JOIN t10 WHERE (CASE t10.c30  WHEN vt0.c0 THEN t0.c87 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE t10.c30  WHEN vt0.c0 THEN t0.c87 END COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, vt1 NATURAL JOIN t10);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 NATURAL JOIN t10 WHERE (CASE t10.c30  WHEN vt0.c0 THEN t0.c87 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE t10.c30  WHEN vt0.c0 THEN t0.c87 END COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, vt1 NATURAL JOIN t10);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 NATURAL JOIN t10 WHERE (CASE t10.c30  WHEN vt0.c0 THEN t0.c87 END COLLATE RTRIM);
SELECT COUNT(*) FROM t10, vt0 WHERE (((((((((TYPEOF(DISTINCT t10.c0))OR(((vt0.c0)<<(vt0.c0)))))AND(CASE t10.c30  WHEN t10.c0 THEN t10.c0 END)))AND(((t10.c0) NOT BETWEEN (vt0.c0) AND (t10.c30)))))OR(0.41725815836571356)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((TYPEOF(DISTINCT t10.c0))OR(((vt0.c0)<<(vt0.c0)))))AND(CASE t10.c30  WHEN t10.c0 THEN t10.c0 END)))AND(((t10.c0) NOT BETWEEN (vt0.c0) AND (t10.c30)))))OR(0.41725815836571356))) IS TRUE)  as count FROM t10, vt0);
SELECT COUNT(*) FROM t10, vt0 WHERE (((((((((TYPEOF(DISTINCT t10.c0))OR(((vt0.c0)<<(vt0.c0)))))AND(CASE t10.c30  WHEN t10.c0 THEN t10.c0 END)))AND(((t10.c0) NOT BETWEEN (vt0.c0) AND (t10.c30)))))OR(0.41725815836571356)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((TYPEOF(DISTINCT t10.c0))OR(((vt0.c0)<<(vt0.c0)))))AND(CASE t10.c30  WHEN t10.c0 THEN t10.c0 END)))AND(((t10.c0) NOT BETWEEN (vt0.c0) AND (t10.c30)))))OR(0.41725815836571356))) IS TRUE)  as count FROM t10, vt0);
SELECT COUNT(*) FROM t10, vt0 WHERE (((((((((TYPEOF(DISTINCT t10.c0))OR(((vt0.c0)<<(vt0.c0)))))AND(CASE t10.c30  WHEN t10.c0 THEN t10.c0 END)))AND(((t10.c0) NOT BETWEEN (vt0.c0) AND (t10.c30)))))OR(0.41725815836571356)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE ((t0.c87) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((NULL) NOTNULL) THEN t0.c87 ELSE (((vt0.c0))>((vt0.c0))) END) ORDER BY json_array((- (t0.c0)), t0.c87) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c87) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((NULL) NOTNULL) THEN t0.c87 ELSE (((vt0.c0))>((vt0.c0))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY json_array((- (t0.c0)), t0.c87) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE ((t0.c87) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((NULL) NOTNULL) THEN t0.c87 ELSE (((vt0.c0))>((vt0.c0))) END) ORDER BY json_array((- (t0.c0)), t0.c87) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c87) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((NULL) NOTNULL) THEN t0.c87 ELSE (((vt0.c0))>((vt0.c0))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY json_array((- (t0.c0)), t0.c87) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((((vt1.c0) NOT NULL)))>((JULIANDAY(vt0.c0, vt0.c0, t0.c87, t0.c87, x'')))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) NOT NULL)))>((JULIANDAY(vt0.c0, vt0.c0, t0.c87, t0.c87, x''))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((((vt1.c0) NOT NULL)))>((JULIANDAY(vt0.c0, vt0.c0, t0.c87, t0.c87, x'')))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) NOT NULL)))>((JULIANDAY(vt0.c0, vt0.c0, t0.c87, t0.c87, x''))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((((vt1.c0) NOT NULL)))>((JULIANDAY(vt0.c0, vt0.c0, t0.c87, t0.c87, x'')))));
SELECT ALL * FROM t10 FULL OUTER JOIN vt0 ON (t10.c30 COLLATE NOCASE IN (((((t10.c30)OR(t10.c0)))AND(vt0.c0)))) WHERE (CAST(((t10.c30) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t10.c30) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM t10 FULL OUTER JOIN vt0 ON (t10.c30 COLLATE NOCASE IN (((((t10.c30)OR(t10.c0)))AND(vt0.c0)))));
SELECT ALL * FROM t10 FULL OUTER JOIN vt0 ON (t10.c30 COLLATE NOCASE IN (((((t10.c30)OR(t10.c0)))AND(vt0.c0)))) WHERE (CAST(((t10.c30) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t10.c30) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM t10 FULL OUTER JOIN vt0 ON (t10.c30 COLLATE NOCASE IN (((((t10.c30)OR(t10.c0)))AND(vt0.c0)))));
SELECT ALL * FROM t10 FULL OUTER JOIN vt0 ON (t10.c30 COLLATE NOCASE IN (((((t10.c30)OR(t10.c0)))AND(vt0.c0)))) WHERE (CAST(((t10.c30) NOTNULL) AS INTEGER));
SELECT COUNT(*) FROM t10, vt0, vt1 WHERE (json_array_length(COALESCE(DISTINCT vt0.c0, t10.c0), (x'' IN ()))) ORDER BY ((((((((((((rtreenode(t10.c0, t10.c30))AND(((t10.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))))AND((((vt1.c0, vt1.c0, '1778963160')) BETWEEN ((t10.c0, t10.c0, vt1.c0)) AND ((t10.c30, vt1.c0, t10.c30))))))OR((vt0.c0 IN ()))))AND(((t10.c30)>>(vt1.c0)))))OR((vt1.c0 IN ())))  NULLS LAST, CAST(t10.c0 AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(COALESCE(DISTINCT vt0.c0, t10.c0), (x'' IN ()))) IS TRUE)  as count FROM t10, vt0, vt1 ORDER BY ((((((((((((rtreenode(t10.c0, t10.c30))AND(((t10.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))))AND((((vt1.c0, vt1.c0, '1778963160')) BETWEEN ((t10.c0, t10.c0, vt1.c0)) AND ((t10.c30, vt1.c0, t10.c30))))))OR((vt0.c0 IN ()))))AND(((t10.c30)>>(vt1.c0)))))OR((vt1.c0 IN ())))  NULLS LAST, CAST(t10.c0 AS TEXT) DESC);
SELECT COUNT(*) FROM t10, vt0, vt1 WHERE (json_array_length(COALESCE(DISTINCT vt0.c0, t10.c0), (x'' IN ()))) ORDER BY ((((((((((((rtreenode(t10.c0, t10.c30))AND(((t10.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))))AND((((vt1.c0, vt1.c0, '1778963160')) BETWEEN ((t10.c0, t10.c0, vt1.c0)) AND ((t10.c30, vt1.c0, t10.c30))))))OR((vt0.c0 IN ()))))AND(((t10.c30)>>(vt1.c0)))))OR((vt1.c0 IN ())))  NULLS LAST, CAST(t10.c0 AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(COALESCE(DISTINCT vt0.c0, t10.c0), (x'' IN ()))) IS TRUE)  as count FROM t10, vt0, vt1 ORDER BY ((((((((((((rtreenode(t10.c0, t10.c30))AND(((t10.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))))AND((((vt1.c0, vt1.c0, '1778963160')) BETWEEN ((t10.c0, t10.c0, vt1.c0)) AND ((t10.c30, vt1.c0, t10.c30))))))OR((vt0.c0 IN ()))))AND(((t10.c30)>>(vt1.c0)))))OR((vt1.c0 IN ())))  NULLS LAST, CAST(t10.c0 AS TEXT) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, t10, vt1 WHERE (((ABS(DISTINCT t0.c0)) NOT NULL)) ORDER BY CASE ((t10.c30) IS TRUE)  WHEN ((t10.c0) NOT BETWEEN (t0.c87) AND (t0.c87)) THEN t10.c30 WHEN ((t0.c87) NOTNULL) THEN ((t10.c30) NOT BETWEEN (t10.c0) AND (t0.c87)) WHEN ((t10.c0)%(t10.c30)) THEN ((vt0.c0)+(t10.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT t0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0, t0, t10, vt1 ORDER BY CASE ((t10.c30) IS TRUE)  WHEN ((t10.c0) NOT BETWEEN (t0.c87) AND (t0.c87)) THEN t10.c30 WHEN ((t0.c87) NOTNULL) THEN ((t10.c30) NOT BETWEEN (t10.c0) AND (t0.c87)) WHEN ((t10.c0)%(t10.c30)) THEN ((vt0.c0)+(t10.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, t10, vt1 WHERE (((ABS(DISTINCT t0.c0)) NOT NULL)) ORDER BY CASE ((t10.c30) IS TRUE)  WHEN ((t10.c0) NOT BETWEEN (t0.c87) AND (t0.c87)) THEN t10.c30 WHEN ((t0.c87) NOTNULL) THEN ((t10.c30) NOT BETWEEN (t10.c0) AND (t0.c87)) WHEN ((t10.c0)%(t10.c30)) THEN ((vt0.c0)+(t10.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT t0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0, t0, t10, vt1 ORDER BY CASE ((t10.c30) IS TRUE)  WHEN ((t10.c0) NOT BETWEEN (t0.c87) AND (t0.c87)) THEN t10.c30 WHEN ((t0.c87) NOTNULL) THEN ((t10.c30) NOT BETWEEN (t10.c0) AND (t0.c87)) WHEN ((t10.c0)%(t10.c30)) THEN ((vt0.c0)+(t10.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, t10, vt1 WHERE (((ABS(DISTINCT t0.c0)) NOT NULL)) ORDER BY CASE ((t10.c30) IS TRUE)  WHEN ((t10.c0) NOT BETWEEN (t0.c87) AND (t0.c87)) THEN t10.c30 WHEN ((t0.c87) NOTNULL) THEN ((t10.c30) NOT BETWEEN (t10.c0) AND (t0.c87)) WHEN ((t10.c0)%(t10.c30)) THEN ((vt0.c0)+(t10.c0)) END  NULLS LAST;
SELECT * FROM t10, vt0 WHERE ((((((t10.c0 IN ()))OR((~ (t10.c30)))))AND(((((((((vt0.c0)AND(t10.c30)))AND(t10.c0)))AND(vt0.c0)))AND(t10.c0))))) ORDER BY vt0.c0 DESC  NULLS FIRST, ((((((vt0.c0)<(t10.c30)))OR(t10.c0 COLLATE BINARY)))AND(((t10.c30)<<(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t10.c0 IN ()))OR((~ (t10.c30)))))AND(((((((((vt0.c0)AND(t10.c30)))AND(t10.c0)))AND(vt0.c0)))AND(t10.c0))))) IS TRUE)  as count FROM t10, vt0 ORDER BY vt0.c0 DESC  NULLS FIRST, ((((((vt0.c0)<(t10.c30)))OR(t10.c0 COLLATE BINARY)))AND(((t10.c30)<<(vt0.c0))))  NULLS LAST);
SELECT * FROM t10, vt0 WHERE ((((((t10.c0 IN ()))OR((~ (t10.c30)))))AND(((((((((vt0.c0)AND(t10.c30)))AND(t10.c0)))AND(vt0.c0)))AND(t10.c0))))) ORDER BY vt0.c0 DESC  NULLS FIRST, ((((((vt0.c0)<(t10.c30)))OR(t10.c0 COLLATE BINARY)))AND(((t10.c30)<<(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t10.c0 IN ()))OR((~ (t10.c30)))))AND(((((((((vt0.c0)AND(t10.c30)))AND(t10.c0)))AND(vt0.c0)))AND(t10.c0))))) IS TRUE)  as count FROM t10, vt0 ORDER BY vt0.c0 DESC  NULLS FIRST, ((((((vt0.c0)<(t10.c30)))OR(t10.c0 COLLATE BINARY)))AND(((t10.c30)<<(vt0.c0))))  NULLS LAST);
SELECT * FROM t10, vt0 WHERE ((((((t10.c0 IN ()))OR((~ (t10.c30)))))AND(((((((((vt0.c0)AND(t10.c30)))AND(t10.c0)))AND(vt0.c0)))AND(t10.c0))))) ORDER BY vt0.c0 DESC  NULLS FIRST, ((((((vt0.c0)<(t10.c30)))OR(t10.c0 COLLATE BINARY)))AND(((t10.c30)<<(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((((((((vt1.c0)>>(vt1.c0)))OR(((t0.c0)OR(t0.c87)))))AND(0.622291426740287)))OR((+ (vt1.c0)))))OR(((vt0.c0)/(vt1.c0))))) ORDER BY (((NOT (t0.c0)))%((x'f1234936' IN (vt1.c0, t0.c87)))), '\nN' COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)>>(vt1.c0)))OR(((t0.c0)OR(t0.c87)))))AND(0.622291426740287)))OR((+ (vt1.c0)))))OR(((vt0.c0)/(vt1.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((NOT (t0.c0)))%((x'f1234936' IN (vt1.c0, t0.c87)))), '\nN' COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((((((((vt1.c0)>>(vt1.c0)))OR(((t0.c0)OR(t0.c87)))))AND(0.622291426740287)))OR((+ (vt1.c0)))))OR(((vt0.c0)/(vt1.c0))))) ORDER BY (((NOT (t0.c0)))%((x'f1234936' IN (vt1.c0, t0.c87)))), '\nN' COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)>>(vt1.c0)))OR(((t0.c0)OR(t0.c87)))))AND(0.622291426740287)))OR((+ (vt1.c0)))))OR(((vt0.c0)/(vt1.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((NOT (t0.c0)))%((x'f1234936' IN (vt1.c0, t0.c87)))), '\nN' COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((((((((vt1.c0)>>(vt1.c0)))OR(((t0.c0)OR(t0.c87)))))AND(0.622291426740287)))OR((+ (vt1.c0)))))OR(((vt0.c0)/(vt1.c0))))) ORDER BY (((NOT (t0.c0)))%((x'f1234936' IN (vt1.c0, t0.c87)))), '\nN' COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (~ (((t0.c0) IS FALSE))) WHERE (CASE WHEN ((t0.c87) NOT BETWEEN (t0.c87) AND ('IQ')) THEN ((t0.c87) NOT NULL) WHEN '0.19102603364328608' THEN (vt0.c0 IN ()) WHEN ((t0.c0)IS(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) END) ORDER BY '-2047409704' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c87) NOT BETWEEN (t0.c87) AND ('IQ')) THEN ((t0.c87) NOT NULL) WHEN '0.19102603364328608' THEN (vt0.c0 IN ()) WHEN ((t0.c0)IS(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (~ (((t0.c0) IS FALSE))) ORDER BY '-2047409704' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (~ (((t0.c0) IS FALSE))) WHERE (CASE WHEN ((t0.c87) NOT BETWEEN (t0.c87) AND ('IQ')) THEN ((t0.c87) NOT NULL) WHEN '0.19102603364328608' THEN (vt0.c0 IN ()) WHEN ((t0.c0)IS(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) END) ORDER BY '-2047409704' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c87) NOT BETWEEN (t0.c87) AND ('IQ')) THEN ((t0.c87) NOT NULL) WHEN '0.19102603364328608' THEN (vt0.c0 IN ()) WHEN ((t0.c0)IS(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (~ (((t0.c0) IS FALSE))) ORDER BY '-2047409704' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (~ (((t0.c0) IS FALSE))) WHERE (CASE WHEN ((t0.c87) NOT BETWEEN (t0.c87) AND ('IQ')) THEN ((t0.c87) NOT NULL) WHEN '0.19102603364328608' THEN (vt0.c0 IN ()) WHEN ((t0.c0)IS(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) END) ORDER BY '-2047409704' ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (NULL) AND (NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (NULL) AND (NULL)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (NULL) AND (NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (NULL) AND (NULL)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (NULL) AND (NULL)) IN ()));
SELECT COUNT(*) FROM vt0, t0 WHERE (((NULL)==(vt0.c0 COLLATE NOCASE))) ORDER BY (((((t0.c0))<((t0.c87))))/(((x'') ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)=(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c0))<((t0.c87))))/(((x'') ISNULL))) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((NULL)==(vt0.c0 COLLATE NOCASE))) ORDER BY (((((t0.c0))<((t0.c87))))/(((x'') ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)=(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c0))<((t0.c87))))/(((x'') ISNULL))) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((NULL)==(vt0.c0 COLLATE NOCASE))) ORDER BY (((((t0.c0))<((t0.c87))))/(((x'') ISNULL))) ASC;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((((vt0.c0)+(vt0.c0)), (vt1.c0 IN ()), vt1.c0 COLLATE BINARY))<((0.4473012665505791, ((vt0.c0)+(vt0.c0)), ((vt1.c0)<<(vt1.c0)))))) ORDER BY LIKELY(DISTINCT (((vt1.c0))>=((vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)+(vt0.c0)), (vt1.c0 IN ()), vt1.c0 COLLATE BINARY))<((0.4473012665505791, ((vt0.c0)+(vt0.c0)), ((vt1.c0)<<(vt1.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY LIKELY(DISTINCT (((vt1.c0))>=((vt1.c0)))) ASC);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((((vt0.c0)+(vt0.c0)), (vt1.c0 IN ()), vt1.c0 COLLATE BINARY))<((0.4473012665505791, ((vt0.c0)+(vt0.c0)), ((vt1.c0)<<(vt1.c0)))))) ORDER BY LIKELY(DISTINCT (((vt1.c0))>=((vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)+(vt0.c0)), (vt1.c0 IN ()), vt1.c0 COLLATE BINARY))<((0.4473012665505791, ((vt0.c0)+(vt0.c0)), ((vt1.c0)<<(vt1.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY LIKELY(DISTINCT (((vt1.c0))>=((vt1.c0)))) ASC);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((((vt0.c0)+(vt0.c0)), (vt1.c0 IN ()), vt1.c0 COLLATE BINARY))<((0.4473012665505791, ((vt0.c0)+(vt0.c0)), ((vt1.c0)<<(vt1.c0)))))) ORDER BY LIKELY(DISTINCT (((vt1.c0))>=((vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((CAST(t0.c87 AS INTEGER))||(CAST(vt1.c0 AS BLOB))) CROSS JOIN vt0 ON vt0.c0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((CAST(t0.c87 AS INTEGER))||(CAST(vt1.c0 AS BLOB))) CROSS JOIN vt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((CAST(t0.c87 AS INTEGER))||(CAST(vt1.c0 AS BLOB))) CROSS JOIN vt0 ON vt0.c0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((CAST(t0.c87 AS INTEGER))||(CAST(vt1.c0 AS BLOB))) CROSS JOIN vt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((CAST(t0.c87 AS INTEGER))||(CAST(vt1.c0 AS BLOB))) CROSS JOIN vt0 ON vt0.c0 WHERE (t0.c0);
SELECT * FROM t10, vt1 WHERE (CASE ((vt1.c0)LIKE(t10.c30))  WHEN (vt1.c0 IN ()) THEN CAST(vt1.c0 AS INTEGER) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)LIKE(t10.c30))  WHEN (vt1.c0 IN ()) THEN CAST(vt1.c0 AS INTEGER) ELSE vt1.c0 END) IS TRUE)  as count FROM t10, vt1);
SELECT * FROM t10, vt1 WHERE (CASE ((vt1.c0)LIKE(t10.c30))  WHEN (vt1.c0 IN ()) THEN CAST(vt1.c0 AS INTEGER) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)LIKE(t10.c30))  WHEN (vt1.c0 IN ()) THEN CAST(vt1.c0 AS INTEGER) ELSE vt1.c0 END) IS TRUE)  as count FROM t10, vt1);
SELECT * FROM t10, vt1 WHERE (CASE ((vt1.c0)LIKE(t10.c30))  WHEN (vt1.c0 IN ()) THEN CAST(vt1.c0 AS INTEGER) ELSE vt1.c0 END);
SELECT COUNT(*) FROM vt0, t0, vt1 FULL OUTER JOIN t10 ON (((t10.c0) NOT BETWEEN (t0.c87) AND (vt1.c0)) IN ()) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0, vt1 FULL OUTER JOIN t10 ON (((t10.c0) NOT BETWEEN (t0.c87) AND (vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0, t0, vt1 FULL OUTER JOIN t10 ON (((t10.c0) NOT BETWEEN (t0.c87) AND (vt1.c0)) IN ()) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0, vt1 FULL OUTER JOIN t10 ON (((t10.c0) NOT BETWEEN (t0.c87) AND (vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0, t0, vt1 FULL OUTER JOIN t10 ON (((t10.c0) NOT BETWEEN (t0.c87) AND (vt1.c0)) IN ()) WHERE (x'');
SELECT * FROM t10, vt1 WHERE (((((vt1.c0) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM t10, vt1);
SELECT * FROM t10, vt1 WHERE (((((vt1.c0) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM t10, vt1);
SELECT * FROM t10, vt1 WHERE (((((vt1.c0) ISNULL)) ISNULL));
SELECT ALL * FROM t10 RIGHT OUTER JOIN t0 ON CAST((+ (t0.c0)) AS TEXT) RIGHT OUTER JOIN vt1 ON (- ((vt0.c0 IN ()))) INNER JOIN vt0 ON CAST(((t0.c0)*(t0.c0)) AS REAL) WHERE (((((t0.c0)=(t0.c0)))<(NULL))) ORDER BY TRIM((((t10.c30))=((t0.c87))), ((0.4277807820212036) IS TRUE)) DESC, ((((t0.c87)AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(NULL)), t0.c87 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)=(t0.c0)))<(NULL))) IS TRUE)  as count FROM t10 RIGHT OUTER JOIN t0 ON CAST((+ (t0.c0)) AS TEXT) RIGHT OUTER JOIN vt1 ON (- ((vt0.c0 IN ()))) INNER JOIN vt0 ON CAST(((t0.c0)*(t0.c0)) AS REAL) ORDER BY TRIM((((t10.c30))==((t0.c87))), ((0.4277807820212036) IS TRUE)) DESC, ((((t0.c87)AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(NULL)), t0.c87 ASC);
SELECT ALL * FROM t10 RIGHT OUTER JOIN t0 ON CAST((+ (t0.c0)) AS TEXT) RIGHT OUTER JOIN vt1 ON (- ((vt0.c0 IN ()))) INNER JOIN vt0 ON CAST(((t0.c0)*(t0.c0)) AS REAL) WHERE (((((t0.c0)=(t0.c0)))<(NULL))) ORDER BY TRIM((((t10.c30))=((t0.c87))), ((0.4277807820212036) IS TRUE)) DESC, ((((t0.c87)AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(NULL)), t0.c87 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)=(t0.c0)))<(NULL))) IS TRUE)  as count FROM t10 RIGHT OUTER JOIN t0 ON CAST((+ (t0.c0)) AS TEXT) RIGHT OUTER JOIN vt1 ON (- ((vt0.c0 IN ()))) INNER JOIN vt0 ON CAST(((t0.c0)*(t0.c0)) AS REAL) ORDER BY TRIM((((t10.c30))==((t0.c87))), ((0.4277807820212036) IS TRUE)) DESC, ((((t0.c87)AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(NULL)), t0.c87 ASC);
SELECT ALL * FROM t10 RIGHT OUTER JOIN t0 ON CAST((+ (t0.c0)) AS TEXT) RIGHT OUTER JOIN vt1 ON (- ((vt0.c0 IN ()))) INNER JOIN vt0 ON CAST(((t0.c0)*(t0.c0)) AS REAL) WHERE (((((t0.c0)=(t0.c0)))<(NULL))) ORDER BY TRIM((((t10.c30))=((t0.c87))), ((0.4277807820212036) IS TRUE)) DESC, ((((t0.c87)AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(NULL)), t0.c87 ASC;
SELECT COUNT(*) FROM vt1 CROSS JOIN t10 ON (CAST(t0.c87 AS BLOB) IN ()) FULL OUTER JOIN t0 ON t10.c0 CROSS JOIN vt0 ON CASE CAST(t10.c0 AS REAL)  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0)LIKE(t10.c0)) ELSE CASE WHEN t10.c30 THEN t0.c0 END END WHERE ('L?');
SELECT SUM(count) FROM (SELECT ALL (('L?') IS TRUE)  as count FROM vt1 CROSS JOIN t10 ON (CAST(t0.c87 AS BLOB) IN ()) FULL OUTER JOIN t0 ON t10.c0 CROSS JOIN vt0 ON CASE CAST(t10.c0 AS REAL)  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0)LIKE(t10.c0)) ELSE CASE WHEN t10.c30 THEN t0.c0 END END);
SELECT COUNT(*) FROM vt1 CROSS JOIN t10 ON (CAST(t0.c87 AS BLOB) IN ()) FULL OUTER JOIN t0 ON t10.c0 CROSS JOIN vt0 ON CASE CAST(t10.c0 AS REAL)  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0)LIKE(t10.c0)) ELSE CASE WHEN t10.c30 THEN t0.c0 END END WHERE ('L?');
SELECT SUM(count) FROM (SELECT ALL (('L?') IS TRUE)  as count FROM vt1 CROSS JOIN t10 ON (CAST(t0.c87 AS BLOB) IN ()) FULL OUTER JOIN t0 ON t10.c0 CROSS JOIN vt0 ON CASE CAST(t10.c0 AS REAL)  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0)LIKE(t10.c0)) ELSE CASE WHEN t10.c30 THEN t0.c0 END END);
SELECT COUNT(*) FROM vt1 CROSS JOIN t10 ON (CAST(t0.c87 AS BLOB) IN ()) FULL OUTER JOIN t0 ON t10.c0 CROSS JOIN vt0 ON CASE CAST(t10.c0 AS REAL)  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0)LIKE(t10.c0)) ELSE CASE WHEN t10.c30 THEN t0.c0 END END WHERE ('L?');
SELECT * FROM vt1, vt0, t10, t0 WHERE (CASE WHEN (('1260617128') IS FALSE) THEN ((t0.c87)IS NOT(vt0.c0)) WHEN CAST(t10.c0 AS REAL) THEN (NOT (t10.c0)) WHEN (((NULL)) NOT BETWEEN ((t0.c87)) AND ((t10.c30))) THEN ((((NULL)AND(t0.c0)))AND(t10.c30)) ELSE ((vt1.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('1260617128') IS FALSE) THEN ((t0.c87)IS NOT(vt0.c0)) WHEN CAST(t10.c0 AS REAL) THEN (NOT (t10.c0)) WHEN (((NULL)) NOT BETWEEN ((t0.c87)) AND ((t10.c30))) THEN ((((NULL)AND(t0.c0)))AND(t10.c30)) ELSE ((vt1.c0) NOTNULL) END) IS TRUE)  as count FROM vt1, vt0, t10, t0);
SELECT * FROM vt1, vt0, t10, t0 WHERE (CASE WHEN (('1260617128') IS FALSE) THEN ((t0.c87)IS NOT(vt0.c0)) WHEN CAST(t10.c0 AS REAL) THEN (NOT (t10.c0)) WHEN (((NULL)) NOT BETWEEN ((t0.c87)) AND ((t10.c30))) THEN ((((NULL)AND(t0.c0)))AND(t10.c30)) ELSE ((vt1.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('1260617128') IS FALSE) THEN ((t0.c87)IS NOT(vt0.c0)) WHEN CAST(t10.c0 AS REAL) THEN (NOT (t10.c0)) WHEN (((NULL)) NOT BETWEEN ((t0.c87)) AND ((t10.c30))) THEN ((((NULL)AND(t0.c0)))AND(t10.c30)) ELSE ((vt1.c0) NOTNULL) END) IS TRUE)  as count FROM vt1, vt0, t10, t0);
SELECT * FROM vt1, vt0, t10, t0 WHERE (CASE WHEN (('1260617128') IS FALSE) THEN ((t0.c87)IS NOT(vt0.c0)) WHEN CAST(t10.c0 AS REAL) THEN (NOT (t10.c0)) WHEN (((NULL)) NOT BETWEEN ((t0.c87)) AND ((t10.c30))) THEN ((((NULL)AND(t0.c0)))AND(t10.c30)) ELSE ((vt1.c0) NOTNULL) END);
SELECT ALL * FROM t0 WHERE (t0.c87);
SELECT SUM(count) FROM (SELECT ALL ((t0.c87) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL * FROM t0 WHERE (t0.c87);
SELECT SUM(count) FROM (SELECT ALL ((t0.c87) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL * FROM t0 WHERE (t0.c87);
SELECT ALL COUNT(*) FROM t10, vt0, vt1, t0 WHERE (t0.c0) ORDER BY ((vt0.c0)<<(((t10.c30) NOT BETWEEN (vt0.c0) AND (t0.c87)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t10, vt0 NOT INDEXED, vt1, t0 ORDER BY ((vt0.c0)<<(((t10.c30) NOT BETWEEN (vt0.c0) AND (t0.c87)))) ASC);
SELECT ALL COUNT(*) FROM t10, vt0, vt1, t0 WHERE (t0.c0) ORDER BY ((vt0.c0)<<(((t10.c30) NOT BETWEEN (vt0.c0) AND (t0.c87)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t10, vt0 NOT INDEXED, vt1, t0 ORDER BY ((vt0.c0)<<(((t10.c30) NOT BETWEEN (vt0.c0) AND (t0.c87)))) ASC);
SELECT ALL COUNT(*) FROM t10, vt0, vt1, t0 WHERE (t0.c0) ORDER BY ((vt0.c0)<<(((t10.c30) NOT BETWEEN (vt0.c0) AND (t0.c87)))) ASC;
SELECT ALL * FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))OR('1864712624')))AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0)AND(vt1.c0)))OR('1864712624')))AND(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))OR('1864712624')))AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0)AND(vt1.c0)))OR('1864712624')))AND(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))OR('1864712624')))AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c87 ELSE t0.c87 END)<>(((t0.c0)OR(t0.c0))))) ORDER BY t0.c0 DESC, (((((+ (t0.c87)))OR(CAST(t0.c87 AS INTEGER))))AND(((t0.c87)IS NOT(t0.c87))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c87 ELSE t0.c87 END)!=(((t0.c0)OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC, (((((+ (t0.c87)))OR(CAST(t0.c87 AS INTEGER))))AND(((t0.c87)IS NOT(t0.c87)))));
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c87 ELSE t0.c87 END)<>(((t0.c0)OR(t0.c0))))) ORDER BY t0.c0 DESC, (((((+ (t0.c87)))OR(CAST(t0.c87 AS INTEGER))))AND(((t0.c87)IS NOT(t0.c87))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c87 ELSE t0.c87 END)!=(((t0.c0)OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC, (((((+ (t0.c87)))OR(CAST(t0.c87 AS INTEGER))))AND(((t0.c87)IS NOT(t0.c87)))));
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c87 ELSE t0.c87 END)<>(((t0.c0)OR(t0.c0))))) ORDER BY t0.c0 DESC, (((((+ (t0.c87)))OR(CAST(t0.c87 AS INTEGER))))AND(((t0.c87)IS NOT(t0.c87))));
SELECT * FROM t0, vt0, vt1 WHERE (((vt0.c0) NOT NULL)) ORDER BY (NOT (json_valid(t0.c87)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM t0, vt0, vt1 NOT INDEXED ORDER BY (NOT (json_valid(t0.c87)))  NULLS LAST);
SELECT * FROM t0, vt0, vt1 WHERE (((vt0.c0) NOT NULL)) ORDER BY (NOT (json_valid(t0.c87)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM t0, vt0, vt1 NOT INDEXED ORDER BY (NOT (json_valid(t0.c87)))  NULLS LAST);
SELECT * FROM t0, vt0, vt1 WHERE (((vt0.c0) NOT NULL)) ORDER BY (NOT (json_valid(t0.c87)))  NULLS LAST;
SELECT * FROM vt1, t0, vt0, t10 WHERE ((t10.c30 COLLATE RTRIM IN (((((vt0.c0)OR(t10.c30)))OR(t10.c0))))) ORDER BY ((((CAST(t0.c87 AS TEXT))AND(((t0.c87)|('')))))OR(NULL));
SELECT SUM(count) FROM (SELECT ALL (((t10.c30 COLLATE RTRIM IN (((((vt0.c0)OR(t10.c30)))OR(t10.c0))))) IS TRUE)  as count FROM vt1, t0, vt0, t10 ORDER BY ((((CAST(t0.c87 AS TEXT))AND(((t0.c87)|('')))))OR(NULL)));
SELECT * FROM vt1, t0, vt0, t10 WHERE ((t10.c30 COLLATE RTRIM IN (((((vt0.c0)OR(t10.c30)))OR(t10.c0))))) ORDER BY ((((CAST(t0.c87 AS TEXT))AND(((t0.c87)|('')))))OR(NULL));
SELECT SUM(count) FROM (SELECT ALL (((t10.c30 COLLATE RTRIM IN (((((vt0.c0)OR(t10.c30)))OR(t10.c0))))) IS TRUE)  as count FROM vt1, t0, vt0, t10 ORDER BY ((((CAST(t0.c87 AS TEXT))AND(((t0.c87)|('')))))OR(NULL)));
SELECT * FROM vt1, t0, vt0, t10 WHERE ((t10.c30 COLLATE RTRIM IN (((((vt0.c0)OR(t10.c30)))OR(t10.c0))))) ORDER BY ((((CAST(t0.c87 AS TEXT))AND(((t0.c87)|('')))))OR(NULL));
SELECT * FROM vt0 RIGHT OUTER JOIN t10 ON ((((NULL) NOTNULL))<>(vt0.c0)) WHERE (t10.c0);
SELECT SUM(count) FROM (SELECT ((t10.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t10 ON ((((NULL) NOTNULL))!=(vt0.c0)));
SELECT * FROM vt0 RIGHT OUTER JOIN t10 ON ((((NULL) NOTNULL))<>(vt0.c0)) WHERE (t10.c0);
SELECT SUM(count) FROM (SELECT ((t10.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t10 ON ((((NULL) NOTNULL))!=(vt0.c0)));
SELECT * FROM vt0 RIGHT OUTER JOIN t10 ON ((((NULL) NOTNULL))<>(vt0.c0)) WHERE (t10.c0);
SELECT * FROM vt1, vt0 WHERE (TRIM(HEX(DISTINCT NULL), ((((((((((((vt1.c0)OR(vt1.c0)))OR(1374425842)))OR(vt0.c0)))AND(vt1.c0)))OR('')))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(HEX(DISTINCT NULL), ((((((((((((vt1.c0)OR(vt1.c0)))OR(1374425842)))OR(vt0.c0)))AND(vt1.c0)))OR('')))AND(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (TRIM(HEX(DISTINCT NULL), ((((((((((((vt1.c0)OR(vt1.c0)))OR(1374425842)))OR(vt0.c0)))AND(vt1.c0)))OR('')))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(HEX(DISTINCT NULL), ((((((((((((vt1.c0)OR(vt1.c0)))OR(1374425842)))OR(vt0.c0)))AND(vt1.c0)))OR('')))AND(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (TRIM(HEX(DISTINCT NULL), ((((((((((((vt1.c0)OR(vt1.c0)))OR(1374425842)))OR(vt0.c0)))AND(vt1.c0)))OR('')))AND(vt0.c0))));
SELECT ALL * FROM vt1, t10 WHERE ((LOWER(x'') IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LOWER(x'') IN ())) IS TRUE)  as count FROM vt1, t10);
SELECT ALL * FROM vt1, t10 WHERE ((LOWER(x'') IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LOWER(x'') IN ())) IS TRUE)  as count FROM vt1, t10);
SELECT ALL * FROM vt1, t10 WHERE ((LOWER(x'') IN ()));
SELECT COUNT(*) FROM t10 NATURAL JOIN t0 WHERE (((((((t0.c87)OR('玧Hs4r')))OR(t0.c87))) NOT BETWEEN (((t0.c87) BETWEEN (NULL) AND (t0.c87))) AND (CASE WHEN t10.c30 THEN t0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c87)OR('玧Hs4r')))OR(t0.c87))) NOT BETWEEN (((t0.c87) BETWEEN (NULL) AND (t0.c87))) AND (CASE WHEN t10.c30 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t10 NATURAL JOIN t0);
SELECT COUNT(*) FROM t10 NATURAL JOIN t0 WHERE (((((((t0.c87)OR('玧Hs4r')))OR(t0.c87))) NOT BETWEEN (((t0.c87) BETWEEN (NULL) AND (t0.c87))) AND (CASE WHEN t10.c30 THEN t0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c87)OR('玧Hs4r')))OR(t0.c87))) NOT BETWEEN (((t0.c87) BETWEEN (NULL) AND (t0.c87))) AND (CASE WHEN t10.c30 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t10 NATURAL JOIN t0);
SELECT COUNT(*) FROM t10 NATURAL JOIN t0 WHERE (((((((t0.c87)OR('玧Hs4r')))OR(t0.c87))) NOT BETWEEN (((t0.c87) BETWEEN (NULL) AND (t0.c87))) AND (CASE WHEN t10.c30 THEN t0.c0 ELSE t0.c0 END)));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND ((((vt1.c0))<((vt1.c0)))))) ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN UPPER(vt1.c0) ELSE ((vt1.c0) NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND ((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN UPPER(vt1.c0) ELSE ((vt1.c0) NOT NULL) END DESC);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND ((((vt1.c0))<((vt1.c0)))))) ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN UPPER(vt1.c0) ELSE ((vt1.c0) NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND ((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN UPPER(vt1.c0) ELSE ((vt1.c0) NOT NULL) END DESC);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND ((((vt1.c0))<((vt1.c0)))))) ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN UPPER(vt1.c0) ELSE ((vt1.c0) NOT NULL) END DESC;
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0)))/(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))/(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0)))/(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))/(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0)))/(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t10 ON (((0.9593178417980488))!=((t10.c0))) WHERE ((((t10.c30)) NOT BETWEEN ((((t10.c30) NOT BETWEEN (vt1.c0) AND (x'')))) AND ((((t10.c30)LIKE(t10.c30)))))) ORDER BY (NOT (LTRIM(vt1.c0))) ASC  NULLS LAST, ((((t10.c30) ISNULL))%(((((t10.c0)OR(t10.c30)))OR(t10.c30)))), ((vt1.c0 COLLATE BINARY)IS(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((((t10.c30)) NOT BETWEEN ((((t10.c30) NOT BETWEEN (vt1.c0) AND (x'')))) AND ((((t10.c30)LIKE(t10.c30)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t10 ON (((0.9593178417980488))<>((t10.c0))) ORDER BY (NOT (LTRIM(vt1.c0))) ASC  NULLS LAST, ((((t10.c30) ISNULL))%(((((t10.c0)OR(t10.c30)))OR(t10.c30)))), ((vt1.c0 COLLATE BINARY)IS(CAST(vt1.c0 AS REAL))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t10 ON (((0.9593178417980488))!=((t10.c0))) WHERE ((((t10.c30)) NOT BETWEEN ((((t10.c30) NOT BETWEEN (vt1.c0) AND (x'')))) AND ((((t10.c30)LIKE(t10.c30)))))) ORDER BY (NOT (LTRIM(vt1.c0))) ASC  NULLS LAST, ((((t10.c30) ISNULL))%(((((t10.c0)OR(t10.c30)))OR(t10.c30)))), ((vt1.c0 COLLATE BINARY)IS(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((((t10.c30)) NOT BETWEEN ((((t10.c30) NOT BETWEEN (vt1.c0) AND (x'')))) AND ((((t10.c30)LIKE(t10.c30)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t10 ON (((0.9593178417980488))<>((t10.c0))) ORDER BY (NOT (LTRIM(vt1.c0))) ASC  NULLS LAST, ((((t10.c30) ISNULL))%(((((t10.c0)OR(t10.c30)))OR(t10.c30)))), ((vt1.c0 COLLATE BINARY)IS(CAST(vt1.c0 AS REAL))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t10 ON (((0.9593178417980488))!=((t10.c0))) WHERE ((((t10.c30)) NOT BETWEEN ((((t10.c30) NOT BETWEEN (vt1.c0) AND (x'')))) AND ((((t10.c30)LIKE(t10.c30)))))) ORDER BY (NOT (LTRIM(vt1.c0))) ASC  NULLS LAST, ((((t10.c30) ISNULL))%(((((t10.c0)OR(t10.c30)))OR(t10.c30)))), ((vt1.c0 COLLATE BINARY)IS(CAST(vt1.c0 AS REAL)));
SELECT COUNT(*) FROM t10 FULL OUTER JOIN vt1 ON ((t10.c30 COLLATE NOCASE)<<((~ (t10.c30)))) WHERE ((((vt1.c0 IN ())) NOTNULL)) ORDER BY ((((t10.c30)OR('')))OR(CAST(t10.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t10 FULL OUTER JOIN vt1 ON ((t10.c30 COLLATE NOCASE)<<((~ (t10.c30)))) ORDER BY ((((t10.c30)OR('')))OR(CAST(t10.c0 AS TEXT))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t10 FULL OUTER JOIN vt1 ON ((t10.c30 COLLATE NOCASE)<<((~ (t10.c30)))) WHERE ((((vt1.c0 IN ())) NOTNULL)) ORDER BY ((((t10.c30)OR('')))OR(CAST(t10.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t10 FULL OUTER JOIN vt1 ON ((t10.c30 COLLATE NOCASE)<<((~ (t10.c30)))) ORDER BY ((((t10.c30)OR('')))OR(CAST(t10.c0 AS TEXT))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t10 FULL OUTER JOIN vt1 ON ((t10.c30 COLLATE NOCASE)<<((~ (t10.c30)))) WHERE ((((vt1.c0 IN ())) NOTNULL)) ORDER BY ((((t10.c30)OR('')))OR(CAST(t10.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT ALL * FROM t10, t0, vt0, vt1 WHERE (CASE (vt0.c0 IN ())  WHEN (vt1.c0 IN ()) THEN (((t0.c0)) BETWEEN ((t10.c30)) AND ((t0.c0))) ELSE ((t0.c87)/(t10.c30)) END) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (NULLIF(DISTINCT t10.c30, t10.c30)) AND (CASE t10.c0  WHEN t10.c30 THEN vt1.c0 ELSE t10.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN (vt1.c0 IN ()) THEN (((t0.c0)) BETWEEN ((t10.c30)) AND ((t0.c0))) ELSE ((t0.c87)/(t10.c30)) END) IS TRUE)  as count FROM t10, t0, vt0, vt1 ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (NULLIF(DISTINCT t10.c30, t10.c30)) AND (CASE t10.c0  WHEN t10.c30 THEN vt1.c0 ELSE t10.c0 END))  NULLS FIRST);
SELECT ALL * FROM t10, t0, vt0, vt1 WHERE (CASE (vt0.c0 IN ())  WHEN (vt1.c0 IN ()) THEN (((t0.c0)) BETWEEN ((t10.c30)) AND ((t0.c0))) ELSE ((t0.c87)/(t10.c30)) END) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (NULLIF(DISTINCT t10.c30, t10.c30)) AND (CASE t10.c0  WHEN t10.c30 THEN vt1.c0 ELSE t10.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN (vt1.c0 IN ()) THEN (((t0.c0)) BETWEEN ((t10.c30)) AND ((t0.c0))) ELSE ((t0.c87)/(t10.c30)) END) IS TRUE)  as count FROM t10, t0, vt0, vt1 ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (NULLIF(DISTINCT t10.c30, t10.c30)) AND (CASE t10.c0  WHEN t10.c30 THEN vt1.c0 ELSE t10.c0 END))  NULLS FIRST);
SELECT ALL * FROM t10, t0, vt0, vt1 WHERE (CASE (vt0.c0 IN ())  WHEN (vt1.c0 IN ()) THEN (((t0.c0)) BETWEEN ((t10.c30)) AND ((t0.c0))) ELSE ((t0.c87)/(t10.c30)) END) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (NULLIF(DISTINCT t10.c30, t10.c30)) AND (CASE t10.c0  WHEN t10.c30 THEN vt1.c0 ELSE t10.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (load_extension((vt1.c0 IN ()))) ORDER BY ((((t0.c87)+(t0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension((vt1.c0 IN ()))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((t0.c87)+(t0.c0))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (load_extension((vt1.c0 IN ()))) ORDER BY ((((t0.c87)+(t0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension((vt1.c0 IN ()))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((t0.c87)+(t0.c0))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t10 RIGHT OUTER JOIN vt0 ON CASE ((((t10.c30)OR(t10.c30)))AND(vt0.c0))  WHEN CAST(t10.c0 AS TEXT) THEN CAST(t10.c0 AS TEXT) END WHERE (((t10.c0)>=(vt0.c0)) COLLATE RTRIM) ORDER BY (- ((- (t10.c30)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t10.c0)>=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t10 RIGHT OUTER JOIN vt0 ON CASE ((((t10.c30)OR(t10.c30)))AND(vt0.c0))  WHEN CAST(t10.c0 AS TEXT) THEN CAST(t10.c0 AS TEXT) END ORDER BY (- ((- (t10.c30)))) ASC);
SELECT ALL COUNT(*) FROM t10 RIGHT OUTER JOIN vt0 ON CASE ((((t10.c30)OR(t10.c30)))AND(vt0.c0))  WHEN CAST(t10.c0 AS TEXT) THEN CAST(t10.c0 AS TEXT) END WHERE (((t10.c0)>=(vt0.c0)) COLLATE RTRIM) ORDER BY (- ((- (t10.c30)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t10.c0)>=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t10 RIGHT OUTER JOIN vt0 ON CASE ((((t10.c30)OR(t10.c30)))AND(vt0.c0))  WHEN CAST(t10.c0 AS TEXT) THEN CAST(t10.c0 AS TEXT) END ORDER BY (- ((- (t10.c30)))) ASC);
SELECT ALL COUNT(*) FROM t10 RIGHT OUTER JOIN vt0 ON CASE ((((t10.c30)OR(t10.c30)))AND(vt0.c0))  WHEN CAST(t10.c0 AS TEXT) THEN CAST(t10.c0 AS TEXT) END WHERE (((t10.c0)>=(vt0.c0)) COLLATE RTRIM) ORDER BY (- ((- (t10.c30)))) ASC;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON LIKELIHOOD(DISTINCT '1681058763', 0.6143473684151063) WHERE (LENGTH('-645443639')) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH('-645443639')) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON LIKELIHOOD(DISTINCT '1681058763', 0.6143473684151063) ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON LIKELIHOOD(DISTINCT '1681058763', 0.6143473684151063) WHERE (LENGTH('-645443639')) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH('-645443639')) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON LIKELIHOOD(DISTINCT '1681058763', 0.6143473684151063) ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON LIKELIHOOD(DISTINCT '1681058763', 0.6143473684151063) WHERE (LENGTH('-645443639')) ORDER BY NULL ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1 WHERE ((((((t0.c0, t0.c87, t0.c0)) NOT BETWEEN ((t0.c0, t0.c87, t0.c0)) AND ((vt1.c0, vt1.c0, t0.c0)))) BETWEEN (CAST(t0.c87 AS NUMERIC)) AND (('966914895' IN (vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0, t0.c87, t0.c0)) NOT BETWEEN ((t0.c0, t0.c87, t0.c0)) AND ((vt1.c0, vt1.c0, t0.c0)))) BETWEEN (CAST(t0.c87 AS NUMERIC)) AND (('966914895' IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((((t0.c0, t0.c87, t0.c0)) NOT BETWEEN ((t0.c0, t0.c87, t0.c0)) AND ((vt1.c0, vt1.c0, t0.c0)))) BETWEEN (CAST(t0.c87 AS NUMERIC)) AND (('966914895' IN (vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0, t0.c87, t0.c0)) NOT BETWEEN ((t0.c0, t0.c87, t0.c0)) AND ((vt1.c0, vt1.c0, t0.c0)))) BETWEEN (CAST(t0.c87 AS NUMERIC)) AND (('966914895' IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((((t0.c0, t0.c87, t0.c0)) NOT BETWEEN ((t0.c0, t0.c87, t0.c0)) AND ((vt1.c0, vt1.c0, t0.c0)))) BETWEEN (CAST(t0.c87 AS NUMERIC)) AND (('966914895' IN (vt1.c0, vt1.c0)))));
SELECT COUNT(*) FROM vt0 NOT INDEXED INNER JOIN vt1 ON ((((t0.c87) NOT BETWEEN (vt0.c0) AND (0.4712572594628466))) NOT BETWEEN (((((vt1.c0)AND(t0.c87)))OR(vt1.c0))) AND ((t0.c0 IN ()))) FULL OUTER JOIN t0 ON ((((t0.c0 IN (t0.c87, vt1.c0)), ((t0.c0) NOT NULL), CAST(t0.c0 AS REAL)))!=((((vt0.c0) IS FALSE), ((t0.c87)=(vt1.c0)), LOWER(DISTINCT t0.c0)))) WHERE ((((t0.c87)) NOT BETWEEN ((((t0.c87) NOT BETWEEN (t0.c0) AND (t0.c87)))) AND ((((t0.c87) NOT BETWEEN (t0.c0) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c87)) NOT BETWEEN ((((t0.c87) NOT BETWEEN (t0.c0) AND (t0.c87)))) AND ((((t0.c87) NOT BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((t0.c87) NOT BETWEEN (vt0.c0) AND (0.4712572594628466))) NOT BETWEEN (((((vt1.c0)AND(t0.c87)))OR(vt1.c0))) AND ((t0.c0 IN ()))) FULL OUTER JOIN t0 ON ((((t0.c0 IN (t0.c87, vt1.c0)), ((t0.c0) NOT NULL), CAST(t0.c0 AS REAL)))<>((((vt0.c0) IS FALSE), ((t0.c87)=(vt1.c0)), LOWER(DISTINCT t0.c0)))));
SELECT COUNT(*) FROM vt0 NOT INDEXED INNER JOIN vt1 ON ((((t0.c87) NOT BETWEEN (vt0.c0) AND (0.4712572594628466))) NOT BETWEEN (((((vt1.c0)AND(t0.c87)))OR(vt1.c0))) AND ((t0.c0 IN ()))) FULL OUTER JOIN t0 ON ((((t0.c0 IN (t0.c87, vt1.c0)), ((t0.c0) NOT NULL), CAST(t0.c0 AS REAL)))!=((((vt0.c0) IS FALSE), ((t0.c87)=(vt1.c0)), LOWER(DISTINCT t0.c0)))) WHERE ((((t0.c87)) NOT BETWEEN ((((t0.c87) NOT BETWEEN (t0.c0) AND (t0.c87)))) AND ((((t0.c87) NOT BETWEEN (t0.c0) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c87)) NOT BETWEEN ((((t0.c87) NOT BETWEEN (t0.c0) AND (t0.c87)))) AND ((((t0.c87) NOT BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((t0.c87) NOT BETWEEN (vt0.c0) AND (0.4712572594628466))) NOT BETWEEN (((((vt1.c0)AND(t0.c87)))OR(vt1.c0))) AND ((t0.c0 IN ()))) FULL OUTER JOIN t0 ON ((((t0.c0 IN (t0.c87, vt1.c0)), ((t0.c0) NOT NULL), CAST(t0.c0 AS REAL)))<>((((vt0.c0) IS FALSE), ((t0.c87)=(vt1.c0)), LOWER(DISTINCT t0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)||(vt0.c0)) IN ())) ORDER BY (((((vt0.c0)<(vt0.c0)), (vt0.c0 IN ()), vt0.c0))>((((vt0.c0) NOT BETWEEN (0.1371691519627648) AND (vt0.c0)), ((vt0.c0)>(NULL)), NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)||(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)<(vt0.c0)), (vt0.c0 IN ()), vt0.c0))>((((vt0.c0) NOT BETWEEN (0.1371691519627648) AND (vt0.c0)), ((vt0.c0)>(NULL)), NULL)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)||(vt0.c0)) IN ())) ORDER BY (((((vt0.c0)<(vt0.c0)), (vt0.c0 IN ()), vt0.c0))>((((vt0.c0) NOT BETWEEN (0.1371691519627648) AND (vt0.c0)), ((vt0.c0)>(NULL)), NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)||(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)<(vt0.c0)), (vt0.c0 IN ()), vt0.c0))>((((vt0.c0) NOT BETWEEN (0.1371691519627648) AND (vt0.c0)), ((vt0.c0)>(NULL)), NULL)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)||(vt0.c0)) IN ())) ORDER BY (((((vt0.c0)<(vt0.c0)), (vt0.c0 IN ()), vt0.c0))>((((vt0.c0) NOT BETWEEN (0.1371691519627648) AND (vt0.c0)), ((vt0.c0)>(NULL)), NULL)))  NULLS LAST;
SELECT * FROM t10, vt1 WHERE (((((((((((t10.c0)AND(vt1.c0)))OR(t10.c0)))OR(vt1.c0)))AND(NULL)))%(((t10.c0) NOT BETWEEN (t10.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t10.c0)AND(vt1.c0)))OR(t10.c0)))OR(vt1.c0)))AND(NULL)))%(((t10.c0) NOT BETWEEN (t10.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t10, vt1);
SELECT * FROM t10, vt1 WHERE (((((((((((t10.c0)AND(vt1.c0)))OR(t10.c0)))OR(vt1.c0)))AND(NULL)))%(((t10.c0) NOT BETWEEN (t10.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t10.c0)AND(vt1.c0)))OR(t10.c0)))OR(vt1.c0)))AND(NULL)))%(((t10.c0) NOT BETWEEN (t10.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t10, vt1);
SELECT * FROM t10, vt1 WHERE (((((((((((t10.c0)AND(vt1.c0)))OR(t10.c0)))OR(vt1.c0)))AND(NULL)))%(((t10.c0) NOT BETWEEN (t10.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((NULL)==('1987692747')) FULL OUTER JOIN t10 ON ((CAST(vt1.c0 AS TEXT))<=(((((t0.c0)OR(t10.c0)))AND(t0.c0)))) WHERE (CAST((t10.c0 IN (vt1.c0, t0.c87, t10.c0, t10.c30)) AS NUMERIC)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t10.c0 END) NOT BETWEEN (CAST(t10.c30 AS NUMERIC)) AND ((vt1.c0 IN ()))) ASC  NULLS LAST, (((NOT (vt1.c0)))>(CASE WHEN t0.c87 THEN t10.c30 END));
SELECT SUM(count) FROM (SELECT ((CAST((t10.c0 IN (vt1.c0, t0.c87, t10.c0, t10.c30)) AS NUMERIC)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((NULL)==('1987692747')) FULL OUTER JOIN t10 ON ((CAST(vt1.c0 AS TEXT))<=(((((t0.c0)OR(t10.c0)))AND(t0.c0)))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t10.c0 END) NOT BETWEEN (CAST(t10.c30 AS NUMERIC)) AND ((vt1.c0 IN ()))) ASC  NULLS LAST, (((NOT (vt1.c0)))>(CASE WHEN t0.c87 THEN t10.c30 END)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((NULL)==('1987692747')) FULL OUTER JOIN t10 ON ((CAST(vt1.c0 AS TEXT))<=(((((t0.c0)OR(t10.c0)))AND(t0.c0)))) WHERE (CAST((t10.c0 IN (vt1.c0, t0.c87, t10.c0, t10.c30)) AS NUMERIC)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t10.c0 END) NOT BETWEEN (CAST(t10.c30 AS NUMERIC)) AND ((vt1.c0 IN ()))) ASC  NULLS LAST, (((NOT (vt1.c0)))>(CASE WHEN t0.c87 THEN t10.c30 END));
SELECT SUM(count) FROM (SELECT ((CAST((t10.c0 IN (vt1.c0, t0.c87, t10.c0, t10.c30)) AS NUMERIC)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((NULL)==('1987692747')) FULL OUTER JOIN t10 ON ((CAST(vt1.c0 AS TEXT))<=(((((t0.c0)OR(t10.c0)))AND(t0.c0)))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t10.c0 END) NOT BETWEEN (CAST(t10.c30 AS NUMERIC)) AND ((vt1.c0 IN ()))) ASC  NULLS LAST, (((NOT (vt1.c0)))>(CASE WHEN t0.c87 THEN t10.c30 END)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((NULL)==('1987692747')) FULL OUTER JOIN t10 ON ((CAST(vt1.c0 AS TEXT))<=(((((t0.c0)OR(t10.c0)))AND(t0.c0)))) WHERE (CAST((t10.c0 IN (vt1.c0, t0.c87, t10.c0, t10.c30)) AS NUMERIC)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t10.c0 END) NOT BETWEEN (CAST(t10.c30 AS NUMERIC)) AND ((vt1.c0 IN ()))) ASC  NULLS LAST, (((NOT (vt1.c0)))>(CASE WHEN t0.c87 THEN t10.c30 END));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (x'85cb');
SELECT SUM(count) FROM (SELECT ((x'85cb') IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (x'85cb');
SELECT SUM(count) FROM (SELECT ((x'85cb') IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (x'85cb');
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c0) BETWEEN (t0.c0) AND (t10.c0)) IN (((((t0.c87)OR(t0.c87)))AND(vt0.c0)))) LEFT OUTER JOIN vt1 ON ((((vt0.c0) BETWEEN (t10.c0) AND (t10.c30)))|(CHAR(NULL))) CROSS JOIN t10 ON ((0x5636fff8) NOT BETWEEN (((vt0.c0)<>(t0.c87))) AND (((vt0.c0) NOT BETWEEN (t10.c30) AND (t10.c30)))) WHERE ((((t10.c0, t10.c30, NULL)) BETWEEN ((((t0.c87)+(t10.c30)), CAST(714475908 AS REAL), CAST(t0.c87 AS INTEGER))) AND (((vt0.c0 IN (t10.c0)), (vt0.c0 IN ()), rtreenode(NULL, t10.c30))))) ORDER BY ((0.06903329161757665) BETWEEN (vt0.c0) AND (x'3f04')) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((t10.c0, t10.c30, NULL)) BETWEEN ((((t0.c87)+(t10.c30)), CAST(714475908 AS REAL), CAST(t0.c87 AS INTEGER))) AND (((vt0.c0 IN (t10.c0)), (vt0.c0 IN ()), rtreenode(NULL, t10.c30))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c0) BETWEEN (t0.c0) AND (t10.c0)) IN (((((t0.c87)OR(t0.c87)))AND(vt0.c0)))) LEFT OUTER JOIN vt1 ON ((((vt0.c0) BETWEEN (t10.c0) AND (t10.c30)))|(CHAR(NULL))) CROSS JOIN t10 ON ((0X5636fff8) NOT BETWEEN (((vt0.c0)!=(t0.c87))) AND (((vt0.c0) NOT BETWEEN (t10.c30) AND (t10.c30)))) ORDER BY ((0.06903329161757665) BETWEEN (vt0.c0) AND (x'3f04')) COLLATE RTRIM);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c0) BETWEEN (t0.c0) AND (t10.c0)) IN (((((t0.c87)OR(t0.c87)))AND(vt0.c0)))) LEFT OUTER JOIN vt1 ON ((((vt0.c0) BETWEEN (t10.c0) AND (t10.c30)))|(CHAR(NULL))) CROSS JOIN t10 ON ((0x5636fff8) NOT BETWEEN (((vt0.c0)<>(t0.c87))) AND (((vt0.c0) NOT BETWEEN (t10.c30) AND (t10.c30)))) WHERE ((((t10.c0, t10.c30, NULL)) BETWEEN ((((t0.c87)+(t10.c30)), CAST(714475908 AS REAL), CAST(t0.c87 AS INTEGER))) AND (((vt0.c0 IN (t10.c0)), (vt0.c0 IN ()), rtreenode(NULL, t10.c30))))) ORDER BY ((0.06903329161757665) BETWEEN (vt0.c0) AND (x'3f04')) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((t10.c0, t10.c30, NULL)) BETWEEN ((((t0.c87)+(t10.c30)), CAST(714475908 AS REAL), CAST(t0.c87 AS INTEGER))) AND (((vt0.c0 IN (t10.c0)), (vt0.c0 IN ()), rtreenode(NULL, t10.c30))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c0) BETWEEN (t0.c0) AND (t10.c0)) IN (((((t0.c87)OR(t0.c87)))AND(vt0.c0)))) LEFT OUTER JOIN vt1 ON ((((vt0.c0) BETWEEN (t10.c0) AND (t10.c30)))|(CHAR(NULL))) CROSS JOIN t10 ON ((0X5636fff8) NOT BETWEEN (((vt0.c0)!=(t0.c87))) AND (((vt0.c0) NOT BETWEEN (t10.c30) AND (t10.c30)))) ORDER BY ((0.06903329161757665) BETWEEN (vt0.c0) AND (x'3f04')) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t10, vt0, t0 WHERE (t10.c30) ORDER BY (((t0.c0 IN (t10.c30, t0.c87)))||(t10.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((t10.c30) IS TRUE)  as count FROM t10, vt0, t0 ORDER BY (((t0.c0 IN (t10.c30, t0.c87)))||(t10.c0)) ASC);
SELECT ALL COUNT(*) FROM t10, vt0, t0 WHERE (t10.c30) ORDER BY (((t0.c0 IN (t10.c30, t0.c87)))||(t10.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((t10.c30) IS TRUE)  as count FROM t10, vt0, t0 ORDER BY (((t0.c0 IN (t10.c30, t0.c87)))||(t10.c0)) ASC);
SELECT ALL COUNT(*) FROM t10, vt0, t0 WHERE (t10.c30) ORDER BY (((t0.c0 IN (t10.c30, t0.c87)))||(t10.c0)) ASC;
SELECT ALL * FROM t10, t0, vt0 INDEXED BY i49 WHERE ((~ (vt0.c0 COLLATE BINARY))) ORDER BY ((((t0.c87) NOT NULL)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t10.c30))) AND (((vt0.c0)OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t10, t0, vt0 INDEXED BY i49 ORDER BY ((((t0.c87) NOT NULL)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t10.c30))) AND (((vt0.c0)OR(t0.c0)))));
SELECT ALL * FROM t10, t0, vt0 INDEXED BY i49 WHERE ((~ (vt0.c0 COLLATE BINARY))) ORDER BY ((((t0.c87) NOT NULL)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t10.c30))) AND (((vt0.c0)OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t10, t0, vt0 INDEXED BY i49 ORDER BY ((((t0.c87) NOT NULL)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t10.c30))) AND (((vt0.c0)OR(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c87)AND(t0.c0)))OR(t0.c87)))OR(t0.c0)))OR(t0.c0)))%(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c87)AND(t0.c0)))OR(t0.c87)))OR(t0.c0)))OR(t0.c0)))%(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c87)AND(t0.c0)))OR(t0.c87)))OR(t0.c0)))OR(t0.c0)))%(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c87)AND(t0.c0)))OR(t0.c87)))OR(t0.c0)))OR(t0.c0)))%(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c87)AND(t0.c0)))OR(t0.c87)))OR(t0.c0)))OR(t0.c0)))%(t0.c0 COLLATE RTRIM)));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (t10.c0 COLLATE RTRIM IN ()) LEFT OUTER JOIN t10 ON ((vt1.c0) IS FALSE) WHERE (((LOWER(t10.c30))<(((t10.c0)IS NOT(t10.c0))))) ORDER BY ((t10.c30 COLLATE RTRIM)OR(((t10.c0) NOT BETWEEN (vt0.c0) AND (0.725213616330071)))), ((((vt1.c0))==((t10.c30))) IN ()) DESC  NULLS LAST, (((t10.c0 IN ())) BETWEEN (SUBSTR(t10.c30, vt1.c0)) AND (((t10.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(t10.c30))<(((t10.c0)IS NOT(t10.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (t10.c0 COLLATE RTRIM IN ()) LEFT OUTER JOIN t10 ON ((vt1.c0) IS FALSE) ORDER BY ((t10.c30 COLLATE RTRIM)OR(((t10.c0) NOT BETWEEN (vt0.c0) AND (0.725213616330071)))), ((((vt1.c0))=((t10.c30))) IN ()) DESC  NULLS LAST, (((t10.c0 IN ())) BETWEEN (SUBSTR(t10.c30, vt1.c0)) AND (((t10.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (t10.c0 COLLATE RTRIM IN ()) LEFT OUTER JOIN t10 ON ((vt1.c0) IS FALSE) WHERE (((LOWER(t10.c30))<(((t10.c0)IS NOT(t10.c0))))) ORDER BY ((t10.c30 COLLATE RTRIM)OR(((t10.c0) NOT BETWEEN (vt0.c0) AND (0.725213616330071)))), ((((vt1.c0))==((t10.c30))) IN ()) DESC  NULLS LAST, (((t10.c0 IN ())) BETWEEN (SUBSTR(t10.c30, vt1.c0)) AND (((t10.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(t10.c30))<(((t10.c0)IS NOT(t10.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (t10.c0 COLLATE RTRIM IN ()) LEFT OUTER JOIN t10 ON ((vt1.c0) IS FALSE) ORDER BY ((t10.c30 COLLATE RTRIM)OR(((t10.c0) NOT BETWEEN (vt0.c0) AND (0.725213616330071)))), ((((vt1.c0))=((t10.c30))) IN ()) DESC  NULLS LAST, (((t10.c0 IN ())) BETWEEN (SUBSTR(t10.c30, vt1.c0)) AND (((t10.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (t10.c0 COLLATE RTRIM IN ()) LEFT OUTER JOIN t10 ON ((vt1.c0) IS FALSE) WHERE (((LOWER(t10.c30))<(((t10.c0)IS NOT(t10.c0))))) ORDER BY ((t10.c30 COLLATE RTRIM)OR(((t10.c0) NOT BETWEEN (vt0.c0) AND (0.725213616330071)))), ((((vt1.c0))==((t10.c30))) IN ()) DESC  NULLS LAST, (((t10.c0 IN ())) BETWEEN (SUBSTR(t10.c30, vt1.c0)) AND (((t10.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT ALL * FROM t10, vt1 WHERE (CASE WHEN ((t10.c0) IS TRUE) THEN (+ (vt1.c0)) WHEN ((((((((t10.c30)OR(t10.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(t10.c0)) THEN ((-1.983536127E9) NOT BETWEEN (t10.c0) AND (t10.c30)) WHEN ((t10.c0)GLOB(vt1.c0)) THEN (- (t10.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t10.c0) IS TRUE) THEN (+ (vt1.c0)) WHEN ((((((((t10.c30)OR(t10.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(t10.c0)) THEN ((-1.983536127E9) NOT BETWEEN (t10.c0) AND (t10.c30)) WHEN ((t10.c0)GLOB(vt1.c0)) THEN (- (t10.c0)) END) IS TRUE)  as count FROM t10, vt1);
SELECT ALL * FROM t10, vt1 WHERE (CASE WHEN ((t10.c0) IS TRUE) THEN (+ (vt1.c0)) WHEN ((((((((t10.c30)OR(t10.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(t10.c0)) THEN ((-1.983536127E9) NOT BETWEEN (t10.c0) AND (t10.c30)) WHEN ((t10.c0)GLOB(vt1.c0)) THEN (- (t10.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t10.c0) IS TRUE) THEN (+ (vt1.c0)) WHEN ((((((((t10.c30)OR(t10.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(t10.c0)) THEN ((-1.983536127E9) NOT BETWEEN (t10.c0) AND (t10.c30)) WHEN ((t10.c0)GLOB(vt1.c0)) THEN (- (t10.c0)) END) IS TRUE)  as count FROM t10, vt1);
SELECT ALL * FROM t10, vt1 WHERE (CASE WHEN ((t10.c0) IS TRUE) THEN (+ (vt1.c0)) WHEN ((((((((t10.c30)OR(t10.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(t10.c0)) THEN ((-1.983536127E9) NOT BETWEEN (t10.c0) AND (t10.c30)) WHEN ((t10.c0)GLOB(vt1.c0)) THEN (- (t10.c0)) END);
SELECT * FROM t0, vt0 WHERE (((((t0.c0) IS TRUE))||(TYPEOF(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE))||(TYPEOF(t0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c0) IS TRUE))||(TYPEOF(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE))||(TYPEOF(t0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c0) IS TRUE))||(TYPEOF(t0.c0))));
SELECT ALL * FROM t10, vt0 LEFT OUTER JOIN t0 ON (+ (((t0.c0) NOT NULL))) CROSS JOIN vt1 ON (((t0.c0)) NOT BETWEEN ((HEX(DISTINCT 0.8676113560197457))) AND ((((((t10.c0)OR(t10.c30)))OR(t10.c0))))) WHERE (CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (t10.c30)) AS REAL)) ORDER BY (((((t0.c87)) BETWEEN ((t10.c30)) AND ((vt0.c0)))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (t10.c30)) AS REAL)) IS TRUE)  as count FROM t10, vt0 LEFT OUTER JOIN t0 ON (+ (((t0.c0) NOT NULL))) CROSS JOIN vt1 ON (((t0.c0)) NOT BETWEEN ((HEX(DISTINCT 0.8676113560197457))) AND ((((((t10.c0)OR(t10.c30)))OR(t10.c0))))) ORDER BY (((((t0.c87)) BETWEEN ((t10.c30)) AND ((vt0.c0)))) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM t10, vt0 LEFT OUTER JOIN t0 ON (+ (((t0.c0) NOT NULL))) CROSS JOIN vt1 ON (((t0.c0)) NOT BETWEEN ((HEX(DISTINCT 0.8676113560197457))) AND ((((((t10.c0)OR(t10.c30)))OR(t10.c0))))) WHERE (CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (t10.c30)) AS REAL)) ORDER BY (((((t0.c87)) BETWEEN ((t10.c30)) AND ((vt0.c0)))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (t10.c30)) AS REAL)) IS TRUE)  as count FROM t10, vt0 LEFT OUTER JOIN t0 ON (+ (((t0.c0) NOT NULL))) CROSS JOIN vt1 ON (((t0.c0)) NOT BETWEEN ((HEX(DISTINCT 0.8676113560197457))) AND ((((((t10.c0)OR(t10.c30)))OR(t10.c0))))) ORDER BY (((((t0.c87)) BETWEEN ((t10.c30)) AND ((vt0.c0)))) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM t10, vt0 LEFT OUTER JOIN t0 ON (+ (((t0.c0) NOT NULL))) CROSS JOIN vt1 ON (((t0.c0)) NOT BETWEEN ((HEX(DISTINCT 0.8676113560197457))) AND ((((((t10.c0)OR(t10.c30)))OR(t10.c0))))) WHERE (CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (t10.c30)) AS REAL)) ORDER BY (((((t0.c87)) BETWEEN ((t10.c30)) AND ((vt0.c0)))) NOT NULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, t10, vt1 WHERE (CAST(((t10.c0)-(t0.c87)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t10.c0)-(t0.c87)) AS REAL)) IS TRUE)  as count FROM vt0, t0, t10, vt1);
SELECT COUNT(*) FROM vt0, t0, t10, vt1 WHERE (CAST(((t10.c0)-(t0.c87)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t10.c0)-(t0.c87)) AS REAL)) IS TRUE)  as count FROM vt0, t0, t10, vt1);
SELECT COUNT(*) FROM vt0, t0, t10, vt1 WHERE (CAST(((t10.c0)-(t0.c87)) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM t10, t0 WHERE ((+ (((((t0.c0)AND(t10.c30)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c0)AND(t10.c30)))OR(t0.c0))))) IS TRUE)  as count FROM t10, t0);
SELECT ALL COUNT(*) FROM t10, t0 WHERE ((+ (((((t0.c0)AND(t10.c30)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c0)AND(t10.c30)))OR(t0.c0))))) IS TRUE)  as count FROM t10, t0);
SELECT ALL COUNT(*) FROM t10, t0 WHERE ((+ (((((t0.c0)AND(t10.c30)))OR(t0.c0)))));
SELECT * FROM vt1, t10 INDEXED BY i64, vt0 WHERE (((CASE WHEN vt1.c0 THEN t10.c30 WHEN t10.c30 THEN vt1.c0 WHEN vt1.c0 THEN t10.c0 END)+(CAST(t10.c30 AS BLOB)))) ORDER BY t10.c30  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN t10.c30 WHEN t10.c30 THEN vt1.c0 WHEN vt1.c0 THEN t10.c0 END)+(CAST(t10.c30 AS BLOB)))) IS TRUE)  as count FROM vt1, t10 INDEXED BY i64, vt0 ORDER BY t10.c30  NULLS LAST);
SELECT * FROM vt1, t10 INDEXED BY i64, vt0 WHERE (((CASE WHEN vt1.c0 THEN t10.c30 WHEN t10.c30 THEN vt1.c0 WHEN vt1.c0 THEN t10.c0 END)+(CAST(t10.c30 AS BLOB)))) ORDER BY t10.c30  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN t10.c30 WHEN t10.c30 THEN vt1.c0 WHEN vt1.c0 THEN t10.c0 END)+(CAST(t10.c30 AS BLOB)))) IS TRUE)  as count FROM vt1, t10 INDEXED BY i64, vt0 ORDER BY t10.c30  NULLS LAST);
SELECT COUNT(*) FROM t10, vt0, t0 WHERE ((NOT ((+ (t10.c30)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (t10.c30))))) IS TRUE)  as count FROM t10, vt0, t0);
SELECT COUNT(*) FROM t10, vt0, t0 WHERE ((NOT ((+ (t10.c30)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (t10.c30))))) IS TRUE)  as count FROM t10, vt0, t0);
SELECT COUNT(*) FROM t10, vt0, t0 WHERE ((NOT ((+ (t10.c30)))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (LIKELIHOOD(((vt1.c0)|(vt1.c0)), 0.2728189829845765)) ORDER BY ((CAST(vt0.c0 AS NUMERIC))+((vt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt1.c0)|(vt1.c0)), 0.2728189829845765)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((CAST(vt0.c0 AS NUMERIC))+((vt1.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (LIKELIHOOD(((vt1.c0)|(vt1.c0)), 0.2728189829845765)) ORDER BY ((CAST(vt0.c0 AS NUMERIC))+((vt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt1.c0)|(vt1.c0)), 0.2728189829845765)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((CAST(vt0.c0 AS NUMERIC))+((vt1.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (LIKELIHOOD(((vt1.c0)|(vt1.c0)), 0.2728189829845765)) ORDER BY ((CAST(vt0.c0 AS NUMERIC))+((vt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, t10 WHERE ((('') NOT BETWEEN (((t0.c0) NOT BETWEEN (t10.c30) AND (t10.c30))) AND ((+ (t0.c87)))));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT BETWEEN (((t0.c0) NOT BETWEEN (t10.c30) AND (t10.c30))) AND ((+ (t0.c87))))) IS TRUE)  as count FROM t0, t10);
SELECT COUNT(*) FROM t0, t10 WHERE ((('') NOT BETWEEN (((t0.c0) NOT BETWEEN (t10.c30) AND (t10.c30))) AND ((+ (t0.c87)))));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT BETWEEN (((t0.c0) NOT BETWEEN (t10.c30) AND (t10.c30))) AND ((+ (t0.c87))))) IS TRUE)  as count FROM t0, t10);
SELECT COUNT(*) FROM t0, t10 WHERE ((('') NOT BETWEEN (((t0.c0) NOT BETWEEN (t10.c30) AND (t10.c30))) AND ((+ (t0.c87)))));
SELECT ALL COUNT(*) FROM vt0, vt1 INDEXED BY i64, t10 WHERE (((((t10.c30)*(vt1.c0))) BETWEEN (((((vt0.c0)AND(t10.c30)))AND(t10.c0))) AND (CAST(t10.c30 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c30)*(vt1.c0))) BETWEEN (((((vt0.c0)AND(t10.c30)))AND(t10.c0))) AND (CAST(t10.c30 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i64, t10);
SELECT ALL COUNT(*) FROM vt0, vt1 INDEXED BY i64, t10 WHERE (((((t10.c30)*(vt1.c0))) BETWEEN (((((vt0.c0)AND(t10.c30)))AND(t10.c0))) AND (CAST(t10.c30 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c30)*(vt1.c0))) BETWEEN (((((vt0.c0)AND(t10.c30)))AND(t10.c0))) AND (CAST(t10.c30 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i64, t10);
SELECT COUNT(*) FROM vt0, vt1, t10 WHERE (('567680511' IN ())) ORDER BY (0.973815332255178 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((('567680511' IN ())) IS TRUE)  as count FROM vt0, vt1, t10 ORDER BY (0.973815332255178 COLLATE BINARY IN ()) ASC);
SELECT COUNT(*) FROM vt0, vt1, t10 WHERE (('567680511' IN ())) ORDER BY (0.973815332255178 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((('567680511' IN ())) IS TRUE)  as count FROM vt0, vt1, t10 ORDER BY (0.973815332255178 COLLATE BINARY IN ()) ASC);
SELECT COUNT(*) FROM vt0, vt1, t10 WHERE (('567680511' IN ())) ORDER BY (0.973815332255178 COLLATE BINARY IN ()) ASC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)!=(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<>(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)!=(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<>(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)!=(vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM t10 WHERE ((((((t10.c30)) BETWEEN ((t10.c30)) AND ((x'7a31')))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t10.c30)) BETWEEN ((t10.c30)) AND ((x'7a31')))) NOTNULL)) IS TRUE)  as count FROM t10);
SELECT ALL COUNT(*) FROM t10 WHERE ((((((t10.c30)) BETWEEN ((t10.c30)) AND ((x'7a31')))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t10.c30)) BETWEEN ((t10.c30)) AND ((x'7a31')))) NOTNULL)) IS TRUE)  as count FROM t10);
SELECT ALL COUNT(*) FROM t10 WHERE ((((((t10.c30)) BETWEEN ((t10.c30)) AND ((x'7a31')))) NOTNULL));
SELECT * FROM t10, vt1, t0, vt0 WHERE (t0.c87) ORDER BY LIKE((((vt0.c0, -1.99265855E8, t10.c30)) NOT BETWEEN ((vt1.c0, t0.c87, vt1.c0)) AND ((0.7926169927937198, t0.c87, t10.c30))), ((t10.c30)|('843900638')));
SELECT SUM(count) FROM (SELECT ALL ((t0.c87) IS TRUE)  as count FROM t10, vt1, t0, vt0 ORDER BY LIKE((((vt0.c0, -1.99265855E8, t10.c30)) NOT BETWEEN ((vt1.c0, t0.c87, vt1.c0)) AND ((0.7926169927937198, t0.c87, t10.c30))), ((t10.c30)|('843900638'))));
SELECT * FROM t10, vt1, t0, vt0 WHERE (t0.c87) ORDER BY LIKE((((vt0.c0, -1.99265855E8, t10.c30)) NOT BETWEEN ((vt1.c0, t0.c87, vt1.c0)) AND ((0.7926169927937198, t0.c87, t10.c30))), ((t10.c30)|('843900638')));
SELECT SUM(count) FROM (SELECT ALL ((t0.c87) IS TRUE)  as count FROM t10, vt1, t0, vt0 ORDER BY LIKE((((vt0.c0, -1.99265855E8, t10.c30)) NOT BETWEEN ((vt1.c0, t0.c87, vt1.c0)) AND ((0.7926169927937198, t0.c87, t10.c30))), ((t10.c30)|('843900638'))));
SELECT * FROM t10, vt1, t0, vt0 WHERE (t0.c87) ORDER BY LIKE((((vt0.c0, -1.99265855E8, t10.c30)) NOT BETWEEN ((vt1.c0, t0.c87, vt1.c0)) AND ((0.7926169927937198, t0.c87, t10.c30))), ((t10.c30)|('843900638')));
SELECT ALL * FROM t0, t10 LEFT OUTER JOIN vt0 ON t0.c0 COLLATE BINARY FULL OUTER JOIN vt1 ON (((~ (t10.c0))) IS FALSE) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, t10 LEFT OUTER JOIN vt0 ON t0.c0 COLLATE BINARY FULL OUTER JOIN vt1 ON (((~ (t10.c0))) IS FALSE));
SELECT ALL * FROM t0, t10 LEFT OUTER JOIN vt0 ON t0.c0 COLLATE BINARY FULL OUTER JOIN vt1 ON (((~ (t10.c0))) IS FALSE) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, t10 LEFT OUTER JOIN vt0 ON t0.c0 COLLATE BINARY FULL OUTER JOIN vt1 ON (((~ (t10.c0))) IS FALSE));
SELECT ALL * FROM t0, t10 LEFT OUTER JOIN vt0 ON t0.c0 COLLATE BINARY FULL OUTER JOIN vt1 ON (((~ (t10.c0))) IS FALSE) WHERE (t0.c0);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM t10, vt0 WHERE (((NULL)+(json_array(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((NULL)+(json_array(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM t10, vt0);
SELECT COUNT(*) FROM t10, vt0 WHERE (((NULL)+(json_array(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((NULL)+(json_array(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM t10, vt0);
SELECT ALL * FROM t10 RIGHT OUTER JOIN vt1 ON ((CAST(t10.c30 AS BLOB)) BETWEEN (((t10.c0) BETWEEN (t10.c0) AND (t10.c30))) AND (x'fdd2')) WHERE ((~ (t10.c30 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t10.c30 COLLATE BINARY))) IS TRUE)  as count FROM t10 RIGHT OUTER JOIN vt1 ON ((CAST(t10.c30 AS BLOB)) BETWEEN (((t10.c0) BETWEEN (t10.c0) AND (t10.c30))) AND (x'fdd2')));
SELECT ALL * FROM t10 RIGHT OUTER JOIN vt1 ON ((CAST(t10.c30 AS BLOB)) BETWEEN (((t10.c0) BETWEEN (t10.c0) AND (t10.c30))) AND (x'fdd2')) WHERE ((~ (t10.c30 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t10.c30 COLLATE BINARY))) IS TRUE)  as count FROM t10 RIGHT OUTER JOIN vt1 ON ((CAST(t10.c30 AS BLOB)) BETWEEN (((t10.c0) BETWEEN (t10.c0) AND (t10.c30))) AND (x'fdd2')));
SELECT ALL * FROM t10 RIGHT OUTER JOIN vt1 ON ((CAST(t10.c30 AS BLOB)) BETWEEN (((t10.c0) BETWEEN (t10.c0) AND (t10.c30))) AND (x'fdd2')) WHERE ((~ (t10.c30 COLLATE BINARY)));
SELECT ALL * FROM t10, t0, vt1 WHERE ((NOT (((((((((vt1.c0)OR(t10.c30)))AND(vt1.c0)))AND(t10.c30)))OR(t10.c30)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((vt1.c0)OR(t10.c30)))AND(vt1.c0)))AND(t10.c30)))OR(t10.c30))))) IS TRUE)  as count FROM t10, t0, vt1);
SELECT ALL * FROM t10, t0, vt1 WHERE ((NOT (((((((((vt1.c0)OR(t10.c30)))AND(vt1.c0)))AND(t10.c30)))OR(t10.c30)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((vt1.c0)OR(t10.c30)))AND(vt1.c0)))AND(t10.c30)))OR(t10.c30))))) IS TRUE)  as count FROM t10, t0, vt1);
SELECT ALL * FROM t10, t0, vt1 WHERE ((NOT (((((((((vt1.c0)OR(t10.c30)))AND(vt1.c0)))AND(t10.c30)))OR(t10.c30)))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN t10 ON ((('1750073412'))>=((vt1.c0))) COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((((t10.c30, '1904490214', NULL))>((t0.c0, t10.c0, vt0.c0)))) NOT NULL) INNER JOIN vt1 ON (((t0.c87)) BETWEEN ((t10.c0)) AND ((vt1.c0))) WHERE (CASE ((vt1.c0)%(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN ('1700126398') AND (vt1.c0)) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)%(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN ('1700126398') AND (vt1.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t10 ON ((('1750073412'))>=((vt1.c0))) COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((((t10.c30, '1904490214', NULL))>((t0.c0, t10.c0, vt0.c0)))) NOT NULL) INNER JOIN vt1 ON (((t0.c87)) BETWEEN ((t10.c0)) AND ((vt1.c0))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN t10 ON ((('1750073412'))>=((vt1.c0))) COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((((t10.c30, '1904490214', NULL))>((t0.c0, t10.c0, vt0.c0)))) NOT NULL) INNER JOIN vt1 ON (((t0.c87)) BETWEEN ((t10.c0)) AND ((vt1.c0))) WHERE (CASE ((vt1.c0)%(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN ('1700126398') AND (vt1.c0)) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)%(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN ('1700126398') AND (vt1.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t10 ON ((('1750073412'))>=((vt1.c0))) COLLATE RTRIM LEFT OUTER JOIN vt0 ON (((((t10.c30, '1904490214', NULL))>((t0.c0, t10.c0, vt0.c0)))) NOT NULL) INNER JOIN vt1 ON (((t0.c87)) BETWEEN ((t10.c0)) AND ((vt1.c0))));
SELECT * FROM vt1, t10 LEFT OUTER JOIN vt0 ON ((CAST(t10.c0 AS NUMERIC)) NOT BETWEEN (t10.c30) AND (((vt0.c0) IS FALSE))) WHERE (((vt1.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE)) IS TRUE)  as count FROM vt1, t10 LEFT OUTER JOIN vt0 ON ((CAST(t10.c0 AS NUMERIC)) NOT BETWEEN (t10.c30) AND (((vt0.c0) IS FALSE))));
SELECT * FROM vt1, t10 LEFT OUTER JOIN vt0 ON ((CAST(t10.c0 AS NUMERIC)) NOT BETWEEN (t10.c30) AND (((vt0.c0) IS FALSE))) WHERE (((vt1.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE)) IS TRUE)  as count FROM vt1, t10 LEFT OUTER JOIN vt0 ON ((CAST(t10.c0 AS NUMERIC)) NOT BETWEEN (t10.c30) AND (((vt0.c0) IS FALSE))));
SELECT * FROM vt1, t10 LEFT OUTER JOIN vt0 ON ((CAST(t10.c0 AS NUMERIC)) NOT BETWEEN (t10.c30) AND (((vt0.c0) IS FALSE))) WHERE (((vt1.c0) IS FALSE));
SELECT COUNT(*) FROM t0 CROSS JOIN t10 ON ((((t0.c0)<>(t0.c87))) BETWEEN (t0.c87) AND (LAST_INSERT_ROWID())) RIGHT OUTER JOIN vt0 ON TOTAL_CHANGES() WHERE (((((NULL)||(t10.c0)))<=(LIKELY(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)||(t10.c0)))<=(LIKELY(t0.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN t10 ON ((((t0.c0)<>(t0.c87))) BETWEEN (t0.c87) AND (LAST_INSERT_ROWID())) RIGHT OUTER JOIN vt0 ON TOTAL_CHANGES());
SELECT COUNT(*) FROM t0 CROSS JOIN t10 ON ((((t0.c0)<>(t0.c87))) BETWEEN (t0.c87) AND (LAST_INSERT_ROWID())) RIGHT OUTER JOIN vt0 ON TOTAL_CHANGES() WHERE (((((NULL)||(t10.c0)))<=(LIKELY(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)||(t10.c0)))<=(LIKELY(t0.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN t10 ON ((((t0.c0)<>(t0.c87))) BETWEEN (t0.c87) AND (LAST_INSERT_ROWID())) RIGHT OUTER JOIN vt0 ON TOTAL_CHANGES());
SELECT COUNT(*) FROM t0 CROSS JOIN t10 ON ((((t0.c0)<>(t0.c87))) BETWEEN (t0.c87) AND (LAST_INSERT_ROWID())) RIGHT OUTER JOIN vt0 ON TOTAL_CHANGES() WHERE (((((NULL)||(t10.c0)))<=(LIKELY(t0.c0))));
SELECT * FROM vt0, t0, vt1, t10 WHERE ((((((((((((x'', vt0.c0, vt0.c0, t0.c87, t0.c87))=((t0.c0, t10.c30, vt0.c0, t0.c0, t0.c0))))AND((((t10.c30)) NOT BETWEEN ((t10.c30)) AND ((vt1.c0))))))OR(((vt0.c0)GLOB(t10.c0)))))AND(((t0.c0)>>(NULL)))))OR(((vt0.c0)AND(t10.c30))))) ORDER BY vt1.c0, (((t0.c0) NOT BETWEEN (t0.c0) AND (t10.c30)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((((((((x'', vt0.c0, vt0.c0, t0.c87, t0.c87))=((t0.c0, t10.c30, vt0.c0, t0.c0, t0.c0))))AND((((t10.c30)) NOT BETWEEN ((t10.c30)) AND ((vt1.c0))))))OR(((vt0.c0)GLOB(t10.c0)))))AND(((t0.c0)>>(NULL)))))OR(((vt0.c0)AND(t10.c30))))) IS TRUE)  as count FROM vt0, t0, vt1, t10 ORDER BY vt1.c0, (((t0.c0) NOT BETWEEN (t0.c0) AND (t10.c30)) IN ()));
SELECT * FROM vt0, t0, vt1, t10 WHERE ((((((((((((x'', vt0.c0, vt0.c0, t0.c87, t0.c87))=((t0.c0, t10.c30, vt0.c0, t0.c0, t0.c0))))AND((((t10.c30)) NOT BETWEEN ((t10.c30)) AND ((vt1.c0))))))OR(((vt0.c0)GLOB(t10.c0)))))AND(((t0.c0)>>(NULL)))))OR(((vt0.c0)AND(t10.c30))))) ORDER BY vt1.c0, (((t0.c0) NOT BETWEEN (t0.c0) AND (t10.c30)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((((((((x'', vt0.c0, vt0.c0, t0.c87, t0.c87))=((t0.c0, t10.c30, vt0.c0, t0.c0, t0.c0))))AND((((t10.c30)) NOT BETWEEN ((t10.c30)) AND ((vt1.c0))))))OR(((vt0.c0)GLOB(t10.c0)))))AND(((t0.c0)>>(NULL)))))OR(((vt0.c0)AND(t10.c30))))) IS TRUE)  as count FROM vt0, t0, vt1, t10 ORDER BY vt1.c0, (((t0.c0) NOT BETWEEN (t0.c0) AND (t10.c30)) IN ()));
SELECT * FROM vt0, t0, vt1, t10 WHERE ((((((((((((x'', vt0.c0, vt0.c0, t0.c87, t0.c87))=((t0.c0, t10.c30, vt0.c0, t0.c0, t0.c0))))AND((((t10.c30)) NOT BETWEEN ((t10.c30)) AND ((vt1.c0))))))OR(((vt0.c0)GLOB(t10.c0)))))AND(((t0.c0)>>(NULL)))))OR(((vt0.c0)AND(t10.c30))))) ORDER BY vt1.c0, (((t0.c0) NOT BETWEEN (t0.c0) AND (t10.c30)) IN ());
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ROUND(vt0.c0, vt0.c0) COLLATE BINARY ASC, 0.4645654213139736 ASC, CAST(((vt0.c0)IS NOT(0.2501651735023964)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ROUND(vt0.c0, vt0.c0) COLLATE BINARY ASC, 0.4645654213139736 ASC, CAST(((vt0.c0)IS NOT(0.2501651735023964)) AS REAL) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ROUND(vt0.c0, vt0.c0) COLLATE BINARY ASC, 0.4645654213139736 ASC, CAST(((vt0.c0)IS NOT(0.2501651735023964)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ROUND(vt0.c0, vt0.c0) COLLATE BINARY ASC, 0.4645654213139736 ASC, CAST(((vt0.c0)IS NOT(0.2501651735023964)) AS REAL) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ROUND(vt0.c0, vt0.c0) COLLATE BINARY ASC, 0.4645654213139736 ASC, CAST(((vt0.c0)IS NOT(0.2501651735023964)) AS REAL) DESC;
SELECT ALL * FROM vt0, t0 CROSS JOIN vt1 ON (+ ((('') NOT NULL))) RIGHT OUTER JOIN t10 ON (((t10.c30 IN (t10.c30, vt1.c0))) BETWEEN (TRIM(DISTINCT t10.c30, vt1.c0)) AND (CAST(vt1.c0 AS TEXT))) WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON (+ ((('') NOT NULL))) RIGHT OUTER JOIN t10 ON (((t10.c30 IN (t10.c30, vt1.c0))) BETWEEN (TRIM(DISTINCT t10.c30, vt1.c0)) AND (CAST(vt1.c0 AS TEXT))));
SELECT ALL * FROM vt0, t0 CROSS JOIN vt1 ON (+ ((('') NOT NULL))) RIGHT OUTER JOIN t10 ON (((t10.c30 IN (t10.c30, vt1.c0))) BETWEEN (TRIM(DISTINCT t10.c30, vt1.c0)) AND (CAST(vt1.c0 AS TEXT))) WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON (+ ((('') NOT NULL))) RIGHT OUTER JOIN t10 ON (((t10.c30 IN (t10.c30, vt1.c0))) BETWEEN (TRIM(DISTINCT t10.c30, vt1.c0)) AND (CAST(vt1.c0 AS TEXT))));
SELECT ALL * FROM vt0, t0 CROSS JOIN vt1 ON (+ ((('') NOT NULL))) RIGHT OUTER JOIN t10 ON (((t10.c30 IN (t10.c30, vt1.c0))) BETWEEN (TRIM(DISTINCT t10.c30, vt1.c0)) AND (CAST(vt1.c0 AS TEXT))) WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT * FROM vt0, t10 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN t10.c0 THEN ((((NULL)OR(vt0.c0)))AND(t10.c0)) ELSE (t10.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN t10.c0 THEN ((((NULL)OR(vt0.c0)))AND(t10.c0)) ELSE (t10.c0 IN ()) END) IS TRUE)  as count FROM vt0 NOT INDEXED, t10);
SELECT * FROM vt0, t10 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN t10.c0 THEN ((((NULL)OR(vt0.c0)))AND(t10.c0)) ELSE (t10.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN t10.c0 THEN ((((NULL)OR(vt0.c0)))AND(t10.c0)) ELSE (t10.c0 IN ()) END) IS TRUE)  as count FROM vt0 NOT INDEXED, t10);
SELECT * FROM vt0, t10 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN t10.c0 THEN ((((NULL)OR(vt0.c0)))AND(t10.c0)) ELSE (t10.c0 IN ()) END);
SELECT ALL COUNT(*) FROM t10, vt1 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((t10.c0) NOT BETWEEN (t10.c30) AND (t10.c0)) ELSE CAST(t10.c30 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((t10.c0) NOT BETWEEN (t10.c30) AND (t10.c0)) ELSE CAST(t10.c30 AS NUMERIC) END) IS TRUE)  as count FROM t10, vt1);
SELECT ALL COUNT(*) FROM t10, vt1 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((t10.c0) NOT BETWEEN (t10.c30) AND (t10.c0)) ELSE CAST(t10.c30 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((t10.c0) NOT BETWEEN (t10.c30) AND (t10.c0)) ELSE CAST(t10.c30 AS NUMERIC) END) IS TRUE)  as count FROM t10, vt1);
SELECT ALL COUNT(*) FROM t10, vt1 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((t10.c0) NOT BETWEEN (t10.c30) AND (t10.c0)) ELSE CAST(t10.c30 AS NUMERIC) END);
SELECT ALL * FROM t10, t0, vt1, vt0 WHERE ((- (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c0))) IS TRUE)  as count FROM t10, t0, vt1, vt0);
SELECT ALL * FROM t10, t0, vt1, vt0 WHERE ((- (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c0))) IS TRUE)  as count FROM t10, t0, vt1, vt0);
SELECT ALL * FROM t10, t0, vt1, vt0 WHERE ((- (t0.c0)));
SELECT COUNT(*) FROM vt1, t10 WHERE (SUBSTR(CASE WHEN t10.c30 THEN t10.c30 ELSE t10.c30 END, ((vt1.c0)/(t10.c0))));
SELECT SUM(count) FROM (SELECT ((SUBSTR(CASE WHEN t10.c30 THEN t10.c30 ELSE t10.c30 END, ((vt1.c0)/(t10.c0)))) IS TRUE)  as count FROM vt1, t10);
SELECT COUNT(*) FROM vt1, t10 WHERE (SUBSTR(CASE WHEN t10.c30 THEN t10.c30 ELSE t10.c30 END, ((vt1.c0)/(t10.c0))));
SELECT SUM(count) FROM (SELECT ((SUBSTR(CASE WHEN t10.c30 THEN t10.c30 ELSE t10.c30 END, ((vt1.c0)/(t10.c0)))) IS TRUE)  as count FROM vt1, t10);
SELECT COUNT(*) FROM vt1, t10 WHERE (SUBSTR(CASE WHEN t10.c30 THEN t10.c30 ELSE t10.c30 END, ((vt1.c0)/(t10.c0))));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT));
SELECT * FROM vt0, vt1, t0 INNER JOIN t10 ON IFNULL((~ (t0.c0)), t0.c0 COLLATE BINARY) WHERE (CASE CASE WHEN t0.c0 THEN t10.c30 END  WHEN (t0.c0 IN ()) THEN ((t0.c0)+(vt0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN (((t10.c30))>=((vt0.c0))) WHEN CAST(t0.c87 AS REAL) THEN ((vt1.c0) BETWEEN (t10.c0) AND (vt0.c0)) WHEN t10.c0 THEN ((t10.c0)>(t0.c0)) WHEN CAST(t0.c87 AS NUMERIC) THEN (t10.c0 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c0 THEN t10.c30 END  WHEN (t0.c0 IN ()) THEN ((t0.c0)+(vt0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN (((t10.c30))>=((vt0.c0))) WHEN CAST(t0.c87 AS REAL) THEN ((vt1.c0) BETWEEN (t10.c0) AND (vt0.c0)) WHEN t10.c0 THEN ((t10.c0)>(t0.c0)) WHEN CAST(t0.c87 AS NUMERIC) THEN (t10.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1, t0 INNER JOIN t10 ON IFNULL((~ (t0.c0)), t0.c0 COLLATE BINARY));
SELECT * FROM vt0, vt1, t0 INNER JOIN t10 ON IFNULL((~ (t0.c0)), t0.c0 COLLATE BINARY) WHERE (CASE CASE WHEN t0.c0 THEN t10.c30 END  WHEN (t0.c0 IN ()) THEN ((t0.c0)+(vt0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN (((t10.c30))>=((vt0.c0))) WHEN CAST(t0.c87 AS REAL) THEN ((vt1.c0) BETWEEN (t10.c0) AND (vt0.c0)) WHEN t10.c0 THEN ((t10.c0)>(t0.c0)) WHEN CAST(t0.c87 AS NUMERIC) THEN (t10.c0 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c0 THEN t10.c30 END  WHEN (t0.c0 IN ()) THEN ((t0.c0)+(vt0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN (((t10.c30))>=((vt0.c0))) WHEN CAST(t0.c87 AS REAL) THEN ((vt1.c0) BETWEEN (t10.c0) AND (vt0.c0)) WHEN t10.c0 THEN ((t10.c0)>(t0.c0)) WHEN CAST(t0.c87 AS NUMERIC) THEN (t10.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1, t0 INNER JOIN t10 ON IFNULL((~ (t0.c0)), t0.c0 COLLATE BINARY));
SELECT * FROM vt0, vt1, t0 INNER JOIN t10 ON IFNULL((~ (t0.c0)), t0.c0 COLLATE BINARY) WHERE (CASE CASE WHEN t0.c0 THEN t10.c30 END  WHEN (t0.c0 IN ()) THEN ((t0.c0)+(vt0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN (((t10.c30))>=((vt0.c0))) WHEN CAST(t0.c87 AS REAL) THEN ((vt1.c0) BETWEEN (t10.c0) AND (vt0.c0)) WHEN t10.c0 THEN ((t10.c0)>(t0.c0)) WHEN CAST(t0.c87 AS NUMERIC) THEN (t10.c0 IN (vt0.c0)) END);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) IS FALSE) ASC, CASE WHEN (((vt1.c0))<=((vt1.c0))) THEN ((vt1.c0)&(vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END END ASC  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) IS FALSE) ASC, CASE WHEN (((vt1.c0))<=((vt1.c0))) THEN ((vt1.c0)&(vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END END ASC  NULLS LAST, NULL  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) IS FALSE) ASC, CASE WHEN (((vt1.c0))<=((vt1.c0))) THEN ((vt1.c0)&(vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END END ASC  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) IS FALSE) ASC, CASE WHEN (((vt1.c0))<=((vt1.c0))) THEN ((vt1.c0)&(vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END END ASC  NULLS LAST, NULL  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) IS FALSE) ASC, CASE WHEN (((vt1.c0))<=((vt1.c0))) THEN ((vt1.c0)&(vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END END ASC  NULLS LAST, NULL  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((- (-1708132922 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (-1708132922 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (-1708132922 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (-1708132922 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (-1708132922 COLLATE RTRIM)));
SELECT * FROM t10 NATURAL JOIN t0 WHERE (TRIM(x'', t0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TRIM(x'', t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM t10 NATURAL JOIN t0);
SELECT * FROM t10 NATURAL JOIN t0 WHERE (TRIM(x'', t0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TRIM(x'', t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM t10 NATURAL JOIN t0);
SELECT * FROM t10 NATURAL JOIN t0 WHERE (TRIM(x'', t0.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c87)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE) ORDER BY (((((t0.c0)) BETWEEN ((t0.c87)) AND ((t0.c87))))LIKE(((t0.c87) ISNULL))), ((((((((((t0.c87) NOT NULL))OR(((t0.c0)>(t0.c87)))))OR((((t0.c87))>((t0.c87))))))OR((((t0.c87)) BETWEEN ((t0.c0)) AND ((t0.c87))))))AND((t0.c0 IN (t0.c87)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c87)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) BETWEEN ((t0.c87)) AND ((t0.c87))))LIKE(((t0.c87) ISNULL))), ((((((((((t0.c87) NOT NULL))OR(((t0.c0)>(t0.c87)))))OR((((t0.c87))>((t0.c87))))))OR((((t0.c87)) BETWEEN ((t0.c0)) AND ((t0.c87))))))AND((t0.c0 IN (t0.c87)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c87)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE) ORDER BY (((((t0.c0)) BETWEEN ((t0.c87)) AND ((t0.c87))))LIKE(((t0.c87) ISNULL))), ((((((((((t0.c87) NOT NULL))OR(((t0.c0)>(t0.c87)))))OR((((t0.c87))>((t0.c87))))))OR((((t0.c87)) BETWEEN ((t0.c0)) AND ((t0.c87))))))AND((t0.c0 IN (t0.c87)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c87)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) BETWEEN ((t0.c87)) AND ((t0.c87))))LIKE(((t0.c87) ISNULL))), ((((((((((t0.c87) NOT NULL))OR(((t0.c0)>(t0.c87)))))OR((((t0.c87))>((t0.c87))))))OR((((t0.c87)) BETWEEN ((t0.c0)) AND ((t0.c87))))))AND((t0.c0 IN (t0.c87)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c87)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE) ORDER BY (((((t0.c0)) BETWEEN ((t0.c87)) AND ((t0.c87))))LIKE(((t0.c87) ISNULL))), ((((((((((t0.c87) NOT NULL))OR(((t0.c0)>(t0.c87)))))OR((((t0.c87))>((t0.c87))))))OR((((t0.c87)) BETWEEN ((t0.c0)) AND ((t0.c87))))))AND((t0.c0 IN (t0.c87)))) ASC;
SELECT ALL * FROM t0, vt1, t10 LEFT OUTER JOIN vt0 ON (+ (ABS(DISTINCT t10.c30))) WHERE ((((((t0.c0))!=((t10.c30)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))<>((t10.c30)))) IS TRUE)) IS TRUE)  as count FROM t0, vt1, t10 LEFT OUTER JOIN vt0 ON (+ (ABS(DISTINCT t10.c30))));
SELECT ALL * FROM t0, vt1, t10 LEFT OUTER JOIN vt0 ON (+ (ABS(DISTINCT t10.c30))) WHERE ((((((t0.c0))!=((t10.c30)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))<>((t10.c30)))) IS TRUE)) IS TRUE)  as count FROM t0, vt1, t10 LEFT OUTER JOIN vt0 ON (+ (ABS(DISTINCT t10.c30))));
SELECT ALL * FROM t0, vt1, t10 LEFT OUTER JOIN vt0 ON (+ (ABS(DISTINCT t10.c30))) WHERE ((((((t0.c0))!=((t10.c30)))) IS TRUE));
SELECT ALL * FROM t10, vt1, vt0 WHERE ('1989800182') ORDER BY (((x'')) NOT BETWEEN ((t10.c30 COLLATE NOCASE)) AND (((((vt0.c0)) BETWEEN (('mN__')) AND ((t10.c0)))))) ASC  NULLS FIRST, ((CAST(t10.c0 AS NUMERIC)) ISNULL) ASC  NULLS FIRST, SQLITE_COMPILEOPTION_USED(((vt0.c0)IS NOT('0.4469169492620787'))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('1989800182') IS TRUE)  as count FROM t10, vt1, vt0 ORDER BY (((x'')) NOT BETWEEN ((t10.c30 COLLATE NOCASE)) AND (((((vt0.c0)) BETWEEN (('mN__')) AND ((t10.c0)))))) ASC  NULLS FIRST, ((CAST(t10.c0 AS NUMERIC)) ISNULL) ASC  NULLS FIRST, SQLITE_COMPILEOPTION_USED(((vt0.c0)IS NOT('0.4469169492620787'))) ASC);
SELECT ALL * FROM t10, vt1, vt0 WHERE ('1989800182') ORDER BY (((x'')) NOT BETWEEN ((t10.c30 COLLATE NOCASE)) AND (((((vt0.c0)) BETWEEN (('mN__')) AND ((t10.c0)))))) ASC  NULLS FIRST, ((CAST(t10.c0 AS NUMERIC)) ISNULL) ASC  NULLS FIRST, SQLITE_COMPILEOPTION_USED(((vt0.c0)IS NOT('0.4469169492620787'))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('1989800182') IS TRUE)  as count FROM t10, vt1, vt0 ORDER BY (((x'')) NOT BETWEEN ((t10.c30 COLLATE NOCASE)) AND (((((vt0.c0)) BETWEEN (('mN__')) AND ((t10.c0)))))) ASC  NULLS FIRST, ((CAST(t10.c0 AS NUMERIC)) ISNULL) ASC  NULLS FIRST, SQLITE_COMPILEOPTION_USED(((vt0.c0)IS NOT('0.4469169492620787'))) ASC);
SELECT ALL * FROM t10, vt1, vt0 WHERE ('1989800182') ORDER BY (((x'')) NOT BETWEEN ((t10.c30 COLLATE NOCASE)) AND (((((vt0.c0)) BETWEEN (('mN__')) AND ((t10.c0)))))) ASC  NULLS FIRST, ((CAST(t10.c0 AS NUMERIC)) ISNULL) ASC  NULLS FIRST, SQLITE_COMPILEOPTION_USED(((vt0.c0)IS NOT('0.4469169492620787'))) ASC;
SELECT * FROM vt1, t10, t0 WHERE (((t10.c0)%(t0.c0))) ORDER BY (NOT (((vt1.c0)&(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t10.c0)%(t0.c0))) IS TRUE)  as count FROM vt1, t10, t0 ORDER BY (NOT (((vt1.c0)&(t0.c0))))  NULLS LAST);
SELECT * FROM vt1, t10, t0 WHERE (((t10.c0)%(t0.c0))) ORDER BY (NOT (((vt1.c0)&(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t10.c0)%(t0.c0))) IS TRUE)  as count FROM vt1, t10, t0 ORDER BY (NOT (((vt1.c0)&(t0.c0))))  NULLS LAST);
SELECT * FROM vt1, t10, t0 WHERE (((t10.c0)%(t0.c0))) ORDER BY (NOT (((vt1.c0)&(t0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0, t10, vt1, t0 WHERE (LIKE(((t10.c30) NOTNULL), (t0.c0 IN (vt1.c0)), '+'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((t10.c30) NOTNULL), (t0.c0 IN (vt1.c0)), '+')) IS TRUE)  as count FROM vt0, t10, vt1, t0);
SELECT ALL * FROM vt0, t10, vt1, t0 WHERE (LIKE(((t10.c30) NOTNULL), (t0.c0 IN (vt1.c0)), '+'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((t10.c30) NOTNULL), (t0.c0 IN (vt1.c0)), '+')) IS TRUE)  as count FROM vt0, t10, vt1, t0);
SELECT ALL * FROM vt0, t10, vt1, t0 WHERE (LIKE(((t10.c30) NOTNULL), (t0.c0 IN (vt1.c0)), '+'));
SELECT ALL * FROM t0 WHERE (ABS(((t0.c87)GLOB(t0.c87))));
SELECT SUM(count) FROM (SELECT ((ABS(((t0.c87)GLOB(t0.c87)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (ABS(((t0.c87)GLOB(t0.c87))));
SELECT SUM(count) FROM (SELECT ((ABS(((t0.c87)GLOB(t0.c87)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (ABS(((t0.c87)GLOB(t0.c87))));
SELECT COUNT(*) FROM vt0, t10, vt1, t0 WHERE ((((+ (vt0.c0))) BETWEEN ((t0.c87 IN ())) AND (0.05897891537818578))) ORDER BY ((((CAST(t10.c0 AS TEXT))AND((((t0.c87)) BETWEEN ((1e500)) AND ((vt1.c0))))))AND((~ ('')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) BETWEEN ((t0.c87 IN ())) AND (0.05897891537818578))) IS TRUE)  as count FROM vt0, t10, vt1, t0 ORDER BY ((((CAST(t10.c0 AS TEXT))AND((((t0.c87)) BETWEEN ((1e500)) AND ((vt1.c0))))))AND((~ ('')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t10, vt1, t0 WHERE ((((+ (vt0.c0))) BETWEEN ((t0.c87 IN ())) AND (0.05897891537818578))) ORDER BY ((((CAST(t10.c0 AS TEXT))AND((((t0.c87)) BETWEEN ((1e500)) AND ((vt1.c0))))))AND((~ ('')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) BETWEEN ((t0.c87 IN ())) AND (0.05897891537818578))) IS TRUE)  as count FROM vt0, t10, vt1, t0 ORDER BY ((((CAST(t10.c0 AS TEXT))AND((((t0.c87)) BETWEEN ((1e500)) AND ((vt1.c0))))))AND((~ ('')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t10, vt1, t0 WHERE ((((+ (vt0.c0))) BETWEEN ((t0.c87 IN ())) AND (0.05897891537818578))) ORDER BY ((((CAST(t10.c0 AS TEXT))AND((((t0.c87)) BETWEEN ((1e500)) AND ((vt1.c0))))))AND((~ ('')))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0 NOT INDEXED, vt0 WHERE (((((t0.c87)/(t0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY (((NOT (vt0.c0)))>=('567680511')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c87)/(t0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((NOT (vt0.c0)))>=('567680511')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 NOT INDEXED, vt0 WHERE (((((t0.c87)/(t0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY (((NOT (vt0.c0)))>=('567680511')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c87)/(t0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((NOT (vt0.c0)))>=('567680511')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 NOT INDEXED, vt0 WHERE (((((t0.c87)/(t0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY (((NOT (vt0.c0)))>=('567680511')) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t10, vt0, vt1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t10, vt0, vt1, t0);
SELECT ALL COUNT(*) FROM t10, vt0, vt1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t10, vt0, vt1, t0);
SELECT ALL COUNT(*) FROM t10, vt0, vt1, t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((0.639455767712422)AND(((((((((t0.c87)OR(t0.c0)))AND(t0.c0)))AND(t0.c87)))AND(t0.c0)))))AND(((((t0.c87)OR(x'')))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((0.639455767712422)AND(((((((((t0.c87)OR(t0.c0)))AND(t0.c0)))AND(t0.c87)))AND(t0.c0)))))AND(((((t0.c87)OR(x'')))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((0.639455767712422)AND(((((((((t0.c87)OR(t0.c0)))AND(t0.c0)))AND(t0.c87)))AND(t0.c0)))))AND(((((t0.c87)OR(x'')))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((0.639455767712422)AND(((((((((t0.c87)OR(t0.c0)))AND(t0.c0)))AND(t0.c87)))AND(t0.c0)))))AND(((((t0.c87)OR(x'')))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((0.639455767712422)AND(((((((((t0.c87)OR(t0.c0)))AND(t0.c0)))AND(t0.c87)))AND(t0.c0)))))AND(((((t0.c87)OR(x'')))OR(t0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((((vt1.c0)<<(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((((vt1.c0)<<(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((((vt1.c0)<<(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((((vt1.c0)<<(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((((vt1.c0)<<(vt1.c0))))));
SELECT ALL * FROM vt1 WHERE (((((('*?') NOT BETWEEN (vt1.c0) AND (vt1.c0)), (+ (0Xffffffffa0610642)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))<>((x'ceaf', ((vt1.c0)<=(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))) ORDER BY NULL, (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(TYPEOF(vt1.c0))))AND(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((('*?') NOT BETWEEN (vt1.c0) AND (vt1.c0)), (+ (0Xffffffffa0610642)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))<>((x'ceaf', ((vt1.c0)<=(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1 ORDER BY NULL, (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(TYPEOF(vt1.c0))))AND(NULL)));
SELECT ALL * FROM vt1 WHERE (((((('*?') NOT BETWEEN (vt1.c0) AND (vt1.c0)), (+ (0Xffffffffa0610642)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))<>((x'ceaf', ((vt1.c0)<=(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))) ORDER BY NULL, (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(TYPEOF(vt1.c0))))AND(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((('*?') NOT BETWEEN (vt1.c0) AND (vt1.c0)), (+ (0Xffffffffa0610642)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))<>((x'ceaf', ((vt1.c0)<=(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1 ORDER BY NULL, (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(TYPEOF(vt1.c0))))AND(NULL)));
SELECT ALL * FROM vt1 WHERE (((((('*?') NOT BETWEEN (vt1.c0) AND (vt1.c0)), (+ (0Xffffffffa0610642)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))<>((x'ceaf', ((vt1.c0)<=(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))) ORDER BY NULL, (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(TYPEOF(vt1.c0))))AND(NULL));
SELECT ALL COUNT(*) FROM vt1, vt0, t10 WHERE (((t10.c0)||(vt0.c0)) COLLATE RTRIM) ORDER BY ((json_array_length(vt1.c0, NULL)) NOT BETWEEN (((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))) AND (vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((((t10.c0)||(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t10 ORDER BY ((json_array_length(vt1.c0, NULL)) NOT BETWEEN (((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))) AND (vt0.c0 COLLATE BINARY)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, t10 WHERE (((t10.c0)||(vt0.c0)) COLLATE RTRIM) ORDER BY ((json_array_length(vt1.c0, NULL)) NOT BETWEEN (((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))) AND (vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((((t10.c0)||(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t10 ORDER BY ((json_array_length(vt1.c0, NULL)) NOT BETWEEN (((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))) AND (vt0.c0 COLLATE BINARY)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, t10 WHERE (((t10.c0)||(vt0.c0)) COLLATE RTRIM) ORDER BY ((json_array_length(vt1.c0, NULL)) NOT BETWEEN (((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))) AND (vt0.c0 COLLATE BINARY)) DESC;
SELECT * FROM vt0, t0, t10 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t10.c0))) IS FALSE) WHERE (CASE (- (t0.c87))  WHEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) THEN CASE WHEN t10.c0 THEN t0.c87 END WHEN ((vt1.c0) NOTNULL) THEN (('tP')IS NOT('')) WHEN (vt1.c0 IN ()) THEN (t10.c0 IN ()) ELSE (((t10.c0, vt0.c0, vt0.c0))>((t10.c30, t10.c30, t10.c0))) END) ORDER BY (NOT ((('~mX7C') NOT NULL)))  NULLS LAST, ((t10.c30)|(CASE WHEN t10.c30 THEN t10.c30 ELSE t10.c0 END)) ASC  NULLS LAST, ((((((t10.c30)OR(t10.c30)))OR(NULL))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (t0.c87))  WHEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) THEN CASE WHEN t10.c0 THEN t0.c87 END WHEN ((vt1.c0) NOTNULL) THEN (('tP')IS NOT('')) WHEN (vt1.c0 IN ()) THEN (t10.c0 IN ()) ELSE (((t10.c0, vt0.c0, vt0.c0))>((t10.c30, t10.c30, t10.c0))) END) IS TRUE)  as count FROM vt0, t0, t10 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t10.c0))) IS FALSE) ORDER BY (NOT ((('~mX7C') NOT NULL)))  NULLS LAST, ((t10.c30)|(CASE WHEN t10.c30 THEN t10.c30 ELSE t10.c0 END)) ASC  NULLS LAST, ((((((t10.c30)OR(t10.c30)))OR(NULL))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM vt0, t0, t10 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t10.c0))) IS FALSE) WHERE (CASE (- (t0.c87))  WHEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) THEN CASE WHEN t10.c0 THEN t0.c87 END WHEN ((vt1.c0) NOTNULL) THEN (('tP')IS NOT('')) WHEN (vt1.c0 IN ()) THEN (t10.c0 IN ()) ELSE (((t10.c0, vt0.c0, vt0.c0))>((t10.c30, t10.c30, t10.c0))) END) ORDER BY (NOT ((('~mX7C') NOT NULL)))  NULLS LAST, ((t10.c30)|(CASE WHEN t10.c30 THEN t10.c30 ELSE t10.c0 END)) ASC  NULLS LAST, ((((((t10.c30)OR(t10.c30)))OR(NULL))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (t0.c87))  WHEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) THEN CASE WHEN t10.c0 THEN t0.c87 END WHEN ((vt1.c0) NOTNULL) THEN (('tP')IS NOT('')) WHEN (vt1.c0 IN ()) THEN (t10.c0 IN ()) ELSE (((t10.c0, vt0.c0, vt0.c0))>((t10.c30, t10.c30, t10.c0))) END) IS TRUE)  as count FROM vt0, t0, t10 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t10.c0))) IS FALSE) ORDER BY (NOT ((('~mX7C') NOT NULL)))  NULLS LAST, ((t10.c30)|(CASE WHEN t10.c30 THEN t10.c30 ELSE t10.c0 END)) ASC  NULLS LAST, ((((((t10.c30)OR(t10.c30)))OR(NULL))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM vt0, t0, t10 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t10.c0))) IS FALSE) WHERE (CASE (- (t0.c87))  WHEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) THEN CASE WHEN t10.c0 THEN t0.c87 END WHEN ((vt1.c0) NOTNULL) THEN (('tP')IS NOT('')) WHEN (vt1.c0 IN ()) THEN (t10.c0 IN ()) ELSE (((t10.c0, vt0.c0, vt0.c0))>((t10.c30, t10.c30, t10.c0))) END) ORDER BY (NOT ((('~mX7C') NOT NULL)))  NULLS LAST, ((t10.c30)|(CASE WHEN t10.c30 THEN t10.c30 ELSE t10.c0 END)) ASC  NULLS LAST, ((((((t10.c30)OR(t10.c30)))OR(NULL))) NOT NULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t10 ON NULL CROSS JOIN t0 ON ((0.7225597480109202)=(t0.c0)) COLLATE RTRIM WHERE (((+ (vt1.c0)) IN ((t10.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt1.c0)) IN ((t10.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t10 ON NULL CROSS JOIN t0 ON ((0.7225597480109202)==(t0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t10 ON NULL CROSS JOIN t0 ON ((0.7225597480109202)=(t0.c0)) COLLATE RTRIM WHERE (((+ (vt1.c0)) IN ((t10.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt1.c0)) IN ((t10.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t10 ON NULL CROSS JOIN t0 ON ((0.7225597480109202)==(t0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t10 ON NULL CROSS JOIN t0 ON ((0.7225597480109202)=(t0.c0)) COLLATE RTRIM WHERE (((+ (vt1.c0)) IN ((t10.c0 IN ()))));
SELECT * FROM t10, vt1, t0 WHERE ((+ (UNLIKELY(t10.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (UNLIKELY(t10.c0)))) IS TRUE)  as count FROM t10, vt1, t0);
SELECT * FROM t10, vt1, t0 WHERE ((+ (UNLIKELY(t10.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (UNLIKELY(t10.c0)))) IS TRUE)  as count FROM t10, vt1, t0);
SELECT * FROM t10, vt1, t0 WHERE ((+ (UNLIKELY(t10.c0))));
SELECT COUNT(*) FROM t10 WHERE (t10.c0);
SELECT SUM(count) FROM (SELECT ALL ((t10.c0) IS TRUE)  as count FROM t10);
SELECT COUNT(*) FROM t10 WHERE (t10.c0);
SELECT SUM(count) FROM (SELECT ALL ((t10.c0) IS TRUE)  as count FROM t10);
SELECT COUNT(*) FROM t10 WHERE (t10.c0);
SELECT * FROM t10, vt1 WHERE (CASE WHEN (((t10.c30))<>((t10.c0))) THEN (((vt1.c0, t10.c0, x''))<((t10.c0, t10.c30, vt1.c0))) ELSE t10.c30 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t10.c30))!=((t10.c0))) THEN (((vt1.c0, t10.c0, x''))<((t10.c0, t10.c30, vt1.c0))) ELSE t10.c30 END) IS TRUE)  as count FROM t10, vt1);
SELECT * FROM t10, vt1 WHERE (CASE WHEN (((t10.c30))<>((t10.c0))) THEN (((vt1.c0, t10.c0, x''))<((t10.c0, t10.c30, vt1.c0))) ELSE t10.c30 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t10.c30))!=((t10.c0))) THEN (((vt1.c0, t10.c0, x''))<((t10.c0, t10.c30, vt1.c0))) ELSE t10.c30 END) IS TRUE)  as count FROM t10, vt1);
SELECT * FROM t10, vt1 WHERE (CASE WHEN (((t10.c30))<>((t10.c0))) THEN (((vt1.c0, t10.c0, x''))<((t10.c0, t10.c30, vt1.c0))) ELSE t10.c30 END);
SELECT * FROM t10, t0, vt1, vt0 WHERE (TRIM(DISTINCT ((t0.c87) NOT BETWEEN (vt1.c0) AND (t0.c0)), ((t10.c0)IS NOT(vt0.c0)))) ORDER BY ((t0.c87)+(t10.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((t0.c87) NOT BETWEEN (vt1.c0) AND (t0.c0)), ((t10.c0)IS NOT(vt0.c0)))) IS TRUE)  as count FROM t10, t0, vt1, vt0 ORDER BY ((t0.c87)+(t10.c0)) COLLATE NOCASE);
SELECT * FROM t10, t0, vt1, vt0 WHERE (TRIM(DISTINCT ((t0.c87) NOT BETWEEN (vt1.c0) AND (t0.c0)), ((t10.c0)IS NOT(vt0.c0)))) ORDER BY ((t0.c87)+(t10.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((t0.c87) NOT BETWEEN (vt1.c0) AND (t0.c0)), ((t10.c0)IS NOT(vt0.c0)))) IS TRUE)  as count FROM t10, t0, vt1, vt0 ORDER BY ((t0.c87)+(t10.c0)) COLLATE NOCASE);
SELECT * FROM t10, t0, vt1, vt0 WHERE (TRIM(DISTINCT ((t0.c87) NOT BETWEEN (vt1.c0) AND (t0.c0)), ((t10.c0)IS NOT(vt0.c0)))) ORDER BY ((t0.c87)+(t10.c0)) COLLATE NOCASE;
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT * FROM t10, vt0 WHERE (((((t10.c0) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM t10, vt0);
SELECT * FROM t10, vt0 WHERE (((((t10.c0) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM t10, vt0);
SELECT * FROM t10, vt0 WHERE (((((t10.c0) ISNULL)) NOT NULL));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((NULL IN ()))*(CASE WHEN t0.c87 THEN t0.c0 END)) INNER JOIN vt0 ON ((SUBSTR(t0.c0, vt1.c0))>=((NOT (vt0.c0)))) WHERE ((((((vt1.c0)AND(t0.c87)))OR(vt1.c0)) IN (vt1.c0 COLLATE RTRIM, t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(t0.c87)))OR(vt1.c0)) IN (vt1.c0 COLLATE RTRIM, t0.c0))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((NULL IN ()))*(CASE WHEN t0.c87 THEN t0.c0 END)) INNER JOIN vt0 ON ((SUBSTR(t0.c0, vt1.c0))>=((NOT (vt0.c0)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((NULL IN ()))*(CASE WHEN t0.c87 THEN t0.c0 END)) INNER JOIN vt0 ON ((SUBSTR(t0.c0, vt1.c0))>=((NOT (vt0.c0)))) WHERE ((((((vt1.c0)AND(t0.c87)))OR(vt1.c0)) IN (vt1.c0 COLLATE RTRIM, t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(t0.c87)))OR(vt1.c0)) IN (vt1.c0 COLLATE RTRIM, t0.c0))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((NULL IN ()))*(CASE WHEN t0.c87 THEN t0.c0 END)) INNER JOIN vt0 ON ((SUBSTR(t0.c0, vt1.c0))>=((NOT (vt0.c0)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((NULL IN ()))*(CASE WHEN t0.c87 THEN t0.c0 END)) INNER JOIN vt0 ON ((SUBSTR(t0.c0, vt1.c0))>=((NOT (vt0.c0)))) WHERE ((((((vt1.c0)AND(t0.c87)))OR(vt1.c0)) IN (vt1.c0 COLLATE RTRIM, t0.c0)));
SELECT ALL * FROM t10, vt1, vt0, t0 WHERE (((((((((((t10.c30)OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(t0.c87)))&(x''))) ORDER BY CASE WHEN t10.c0 COLLATE BINARY THEN 0.7154774910726234 ELSE CASE WHEN t0.c87 THEN vt1.c0 ELSE t10.c0 END END ASC, t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t10.c30)OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(t0.c87)))&(x''))) IS TRUE)  as count FROM t10, vt1, vt0, t0 ORDER BY CASE WHEN t10.c0 COLLATE BINARY THEN 0.7154774910726234 ELSE CASE WHEN t0.c87 THEN vt1.c0 ELSE t10.c0 END END ASC, t0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM t10, vt1, vt0, t0 WHERE (((((((((((t10.c30)OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(t0.c87)))&(x''))) ORDER BY CASE WHEN t10.c0 COLLATE BINARY THEN 0.7154774910726234 ELSE CASE WHEN t0.c87 THEN vt1.c0 ELSE t10.c0 END END ASC, t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t10.c30)OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(t0.c87)))&(x''))) IS TRUE)  as count FROM t10, vt1, vt0, t0 ORDER BY CASE WHEN t10.c0 COLLATE BINARY THEN 0.7154774910726234 ELSE CASE WHEN t0.c87 THEN vt1.c0 ELSE t10.c0 END END ASC, t0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM t10, vt1, vt0, t0 WHERE (((((((((((t10.c30)OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(t0.c87)))&(x''))) ORDER BY CASE WHEN t10.c0 COLLATE BINARY THEN 0.7154774910726234 ELSE CASE WHEN t0.c87 THEN vt1.c0 ELSE t10.c0 END END ASC, t0.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((NULL)) BETWEEN ((((vt1.c0)>>(vt0.c0)))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((((vt1.c0)>>(vt0.c0)))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((NULL)) BETWEEN ((((vt1.c0)>>(vt0.c0)))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((((vt1.c0)>>(vt0.c0)))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((NULL)) BETWEEN ((((vt1.c0)>>(vt0.c0)))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))));
SELECT COUNT(*) FROM t0, t10 INNER JOIN vt0 ON ((t0.c87) BETWEEN (t0.c87) AND (t10.c0)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON 0.05911658116935892 WHERE (((((MAX(vt0.c0, t0.c0))AND(t0.c87)))OR((t0.c87 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((MAX(vt0.c0, t0.c0))AND(t0.c87)))OR((t0.c87 IN ())))) IS TRUE)  as count FROM t0, t10 INNER JOIN vt0 ON ((t0.c87) BETWEEN (t0.c87) AND (t10.c0)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON 0.05911658116935892);
SELECT COUNT(*) FROM t0, t10 INNER JOIN vt0 ON ((t0.c87) BETWEEN (t0.c87) AND (t10.c0)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON 0.05911658116935892 WHERE (((((MAX(vt0.c0, t0.c0))AND(t0.c87)))OR((t0.c87 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((MAX(vt0.c0, t0.c0))AND(t0.c87)))OR((t0.c87 IN ())))) IS TRUE)  as count FROM t0, t10 INNER JOIN vt0 ON ((t0.c87) BETWEEN (t0.c87) AND (t10.c0)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON 0.05911658116935892);
SELECT COUNT(*) FROM t0, t10 INNER JOIN vt0 ON ((t0.c87) BETWEEN (t0.c87) AND (t10.c0)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON 0.05911658116935892 WHERE (((((MAX(vt0.c0, t0.c0))AND(t0.c87)))OR((t0.c87 IN ()))));
SELECT * FROM t10, vt1, t0 WHERE ((NOT (((vt1.c0) BETWEEN (t10.c30) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) BETWEEN (t10.c30) AND (t0.c0))))) IS TRUE)  as count FROM t10, vt1 NOT INDEXED, t0);
SELECT * FROM t10, vt1, t0 WHERE ((NOT (((vt1.c0) BETWEEN (t10.c30) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) BETWEEN (t10.c30) AND (t0.c0))))) IS TRUE)  as count FROM t10, vt1 NOT INDEXED, t0);
SELECT * FROM t10, vt1, t0 WHERE ((NOT (((vt1.c0) BETWEEN (t10.c30) AND (t0.c0)))));
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((t0.c0)+(vt0.c0)))%(-1.08052452E9 COLLATE BINARY))) ORDER BY (((~ (vt1.c0)))/((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)+(vt0.c0)))%(-1.08052452E9 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((~ (vt1.c0)))/((vt0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((t0.c0)+(vt0.c0)))%(-1.08052452E9 COLLATE BINARY))) ORDER BY (((~ (vt1.c0)))/((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)+(vt0.c0)))%(-1.08052452E9 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((~ (vt1.c0)))/((vt0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((t0.c0)+(vt0.c0)))%(-1.08052452E9 COLLATE BINARY))) ORDER BY (((~ (vt1.c0)))/((vt0.c0 IN ())))  NULLS LAST;
SELECT ALL * FROM t10, vt0, t0, vt1 WHERE ((((((((('-1126677911')OR((NOT (vt1.c0)))))AND(t0.c0)))OR(TRIM(vt0.c0, t0.c87))))AND(((t10.c30)AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((('-1126677911')OR((NOT (vt1.c0)))))AND(t0.c0)))OR(TRIM(vt0.c0, t0.c87))))AND(((t10.c30)AND(vt1.c0))))) IS TRUE)  as count FROM t10, vt0, t0, vt1);
SELECT ALL * FROM t10, vt0, t0, vt1 WHERE ((((((((('-1126677911')OR((NOT (vt1.c0)))))AND(t0.c0)))OR(TRIM(vt0.c0, t0.c87))))AND(((t10.c30)AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((('-1126677911')OR((NOT (vt1.c0)))))AND(t0.c0)))OR(TRIM(vt0.c0, t0.c87))))AND(((t10.c30)AND(vt1.c0))))) IS TRUE)  as count FROM t10, vt0, t0, vt1);
SELECT ALL * FROM t10, vt0, t0, vt1 WHERE ((((((((('-1126677911')OR((NOT (vt1.c0)))))AND(t0.c0)))OR(TRIM(vt0.c0, t0.c87))))AND(((t10.c30)AND(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY CAST('cj' AS INTEGER) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST('cj' AS INTEGER) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY CAST('cj' AS INTEGER) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST('cj' AS INTEGER) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY CAST('cj' AS INTEGER) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM vt0, t10 WHERE ((~ (t10.c30)));
SELECT SUM(count) FROM (SELECT (((~ (t10.c30))) IS TRUE)  as count FROM vt0, t10);
SELECT ALL * FROM vt0, t10 WHERE ((~ (t10.c30)));
SELECT SUM(count) FROM (SELECT (((~ (t10.c30))) IS TRUE)  as count FROM vt0, t10);
SELECT ALL * FROM vt0, t10 WHERE ((~ (t10.c30)));
SELECT ALL * FROM vt1, t10 FULL OUTER JOIN vt0 ON ((((((((((('1743331435'))<=((t10.c30))))AND(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(CAST(vt1.c0 AS REAL))))AND(((((t10.c0)AND(t10.c30)))AND(vt1.c0)))) WHERE (((CAST('676674047' AS NUMERIC)) NOT NULL)) ORDER BY ((((((((((vt1.c0)AND(x'')))OR(vt1.c0)))OR(t10.c0)))OR(t10.c0)))LIKE(t10.c30)) ASC, UPPER(DISTINCT x'7818')  NULLS LAST, (((((t10.c30, t10.c0, t10.c30, vt1.c0, t10.c0)) BETWEEN ((x'52b7', t10.c30, t10.c30, t10.c0, vt1.c0)) AND ((t10.c30, NULL, 0.9286947011102036, vt1.c0, vt0.c0))))>((((vt1.c0))>((t10.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('676674047' AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt1, t10 FULL OUTER JOIN vt0 ON ((((((((((('1743331435'))<=((t10.c30))))AND(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(CAST(vt1.c0 AS REAL))))AND(((((t10.c0)AND(t10.c30)))AND(vt1.c0)))) ORDER BY ((((((((((vt1.c0)AND(x'')))OR(vt1.c0)))OR(t10.c0)))OR(t10.c0)))LIKE(t10.c30)) ASC, UPPER(DISTINCT x'7818')  NULLS LAST, (((((t10.c30, t10.c0, t10.c30, vt1.c0, t10.c0)) BETWEEN ((x'52b7', t10.c30, t10.c30, t10.c0, vt1.c0)) AND ((t10.c30, NULL, 0.9286947011102036, vt1.c0, vt0.c0))))>((((vt1.c0))>((t10.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, t10 FULL OUTER JOIN vt0 ON ((((((((((('1743331435'))<=((t10.c30))))AND(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(CAST(vt1.c0 AS REAL))))AND(((((t10.c0)AND(t10.c30)))AND(vt1.c0)))) WHERE (((CAST('676674047' AS NUMERIC)) NOT NULL)) ORDER BY ((((((((((vt1.c0)AND(x'')))OR(vt1.c0)))OR(t10.c0)))OR(t10.c0)))LIKE(t10.c30)) ASC, UPPER(DISTINCT x'7818')  NULLS LAST, (((((t10.c30, t10.c0, t10.c30, vt1.c0, t10.c0)) BETWEEN ((x'52b7', t10.c30, t10.c30, t10.c0, vt1.c0)) AND ((t10.c30, NULL, 0.9286947011102036, vt1.c0, vt0.c0))))>((((vt1.c0))>((t10.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('676674047' AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt1, t10 FULL OUTER JOIN vt0 ON ((((((((((('1743331435'))<=((t10.c30))))AND(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(CAST(vt1.c0 AS REAL))))AND(((((t10.c0)AND(t10.c30)))AND(vt1.c0)))) ORDER BY ((((((((((vt1.c0)AND(x'')))OR(vt1.c0)))OR(t10.c0)))OR(t10.c0)))LIKE(t10.c30)) ASC, UPPER(DISTINCT x'7818')  NULLS LAST, (((((t10.c30, t10.c0, t10.c30, vt1.c0, t10.c0)) BETWEEN ((x'52b7', t10.c30, t10.c30, t10.c0, vt1.c0)) AND ((t10.c30, NULL, 0.9286947011102036, vt1.c0, vt0.c0))))>((((vt1.c0))>((t10.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, t10 FULL OUTER JOIN vt0 ON ((((((((((('1743331435'))<=((t10.c30))))AND(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(CAST(vt1.c0 AS REAL))))AND(((((t10.c0)AND(t10.c30)))AND(vt1.c0)))) WHERE (((CAST('676674047' AS NUMERIC)) NOT NULL)) ORDER BY ((((((((((vt1.c0)AND(x'')))OR(vt1.c0)))OR(t10.c0)))OR(t10.c0)))LIKE(t10.c30)) ASC, UPPER(DISTINCT x'7818')  NULLS LAST, (((((t10.c30, t10.c0, t10.c30, vt1.c0, t10.c0)) BETWEEN ((x'52b7', t10.c30, t10.c30, t10.c0, vt1.c0)) AND ((t10.c30, NULL, 0.9286947011102036, vt1.c0, vt0.c0))))>((((vt1.c0))>((t10.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((CASE t0.c87  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c87 THEN t0.c0 END)OR(((((t0.c87)OR(t0.c87)))OR(t0.c87)))))AND(t0.c87))) ORDER BY json_array_length(t0.c87 COLLATE RTRIM, (NOT (t0.c87))) ASC  NULLS LAST, ((((t0.c87) NOTNULL))*(t0.c0 COLLATE NOCASE)) DESC, CASE WHEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c87, t0.c0, t0.c0)) AND ((0Xffffffff9a816e2d, NULL, t0.c0))) THEN t0.c0 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c87  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c87 THEN t0.c0 END)OR(((((t0.c87)OR(t0.c87)))OR(t0.c87)))))AND(t0.c87))) IS TRUE)  as count FROM t0 ORDER BY json_array_length(t0.c87 COLLATE RTRIM, (NOT (t0.c87))) ASC  NULLS LAST, ((((t0.c87) NOTNULL))*(t0.c0 COLLATE NOCASE)) DESC, CASE WHEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c87, t0.c0, t0.c0)) AND ((0xffffffff9a816e2d, NULL, t0.c0))) THEN t0.c0 COLLATE BINARY END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((CASE t0.c87  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c87 THEN t0.c0 END)OR(((((t0.c87)OR(t0.c87)))OR(t0.c87)))))AND(t0.c87))) ORDER BY json_array_length(t0.c87 COLLATE RTRIM, (NOT (t0.c87))) ASC  NULLS LAST, ((((t0.c87) NOTNULL))*(t0.c0 COLLATE NOCASE)) DESC, CASE WHEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c87, t0.c0, t0.c0)) AND ((0Xffffffff9a816e2d, NULL, t0.c0))) THEN t0.c0 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c87  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c87 THEN t0.c0 END)OR(((((t0.c87)OR(t0.c87)))OR(t0.c87)))))AND(t0.c87))) IS TRUE)  as count FROM t0 ORDER BY json_array_length(t0.c87 COLLATE RTRIM, (NOT (t0.c87))) ASC  NULLS LAST, ((((t0.c87) NOTNULL))*(t0.c0 COLLATE NOCASE)) DESC, CASE WHEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c87, t0.c0, t0.c0)) AND ((0xffffffff9a816e2d, NULL, t0.c0))) THEN t0.c0 COLLATE BINARY END ASC);
SELECT COUNT(*) FROM vt0, t10 WHERE ((((((((t10.c30)) NOT BETWEEN ((t10.c0)) AND ((t10.c0))))OR(((vt0.c0)IS(t10.c30)))))OR((((t10.c0, t10.c30, t10.c0)) BETWEEN ((vt0.c0, t10.c30, vt0.c0)) AND ((t10.c0, t10.c0, vt0.c0)))))) ORDER BY (((((~ (t10.c30)))OR(((((x'')AND(vt0.c0)))AND(vt0.c0)))))OR(CAST(t10.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((((((((t10.c30)) NOT BETWEEN ((t10.c0)) AND ((t10.c0))))OR(((vt0.c0)IS(t10.c30)))))OR((((t10.c0, t10.c30, t10.c0)) BETWEEN ((vt0.c0, t10.c30, vt0.c0)) AND ((t10.c0, t10.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, t10 ORDER BY (((((~ (t10.c30)))OR(((((x'')AND(vt0.c0)))AND(vt0.c0)))))OR(CAST(t10.c0 AS REAL))));
SELECT COUNT(*) FROM vt0, t10 WHERE ((((((((t10.c30)) NOT BETWEEN ((t10.c0)) AND ((t10.c0))))OR(((vt0.c0)IS(t10.c30)))))OR((((t10.c0, t10.c30, t10.c0)) BETWEEN ((vt0.c0, t10.c30, vt0.c0)) AND ((t10.c0, t10.c0, vt0.c0)))))) ORDER BY (((((~ (t10.c30)))OR(((((x'')AND(vt0.c0)))AND(vt0.c0)))))OR(CAST(t10.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((((((((t10.c30)) NOT BETWEEN ((t10.c0)) AND ((t10.c0))))OR(((vt0.c0)IS(t10.c30)))))OR((((t10.c0, t10.c30, t10.c0)) BETWEEN ((vt0.c0, t10.c30, vt0.c0)) AND ((t10.c0, t10.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, t10 ORDER BY (((((~ (t10.c30)))OR(((((x'')AND(vt0.c0)))AND(vt0.c0)))))OR(CAST(t10.c0 AS REAL))));
SELECT COUNT(*) FROM vt0, t10 WHERE ((((((((t10.c30)) NOT BETWEEN ((t10.c0)) AND ((t10.c0))))OR(((vt0.c0)IS(t10.c30)))))OR((((t10.c0, t10.c30, t10.c0)) BETWEEN ((vt0.c0, t10.c30, vt0.c0)) AND ((t10.c0, t10.c0, vt0.c0)))))) ORDER BY (((((~ (t10.c30)))OR(((((x'')AND(vt0.c0)))AND(vt0.c0)))))OR(CAST(t10.c0 AS REAL)));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt1, t0, t10 WHERE (((t10.c0) BETWEEN (t0.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t10.c0) BETWEEN (t0.c0) AND (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, t10);
SELECT COUNT(*) FROM vt1, t0, t10 WHERE (((t10.c0) BETWEEN (t0.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t10.c0) BETWEEN (t0.c0) AND (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, t10);
SELECT COUNT(*) FROM vt1, t0, t10 WHERE (((t10.c0) BETWEEN (t0.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT * FROM t0 CROSS JOIN vt1 ON ((0.04418886557431956) NOTNULL) INNER JOIN vt0 ON (((~ (vt0.c0))) BETWEEN ((((t0.c0, NULL, t0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, t0.c87)) AND ((t0.c87, t0.c87, t0.c0)))) AND (CASE t0.c0  WHEN t0.c87 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN 0Xffffffff8a5b16a9 THEN t0.c87 WHEN vt0.c0 THEN t0.c0 END)) WHERE ((((((t0.c87)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (NULL) AND (((vt1.c0)=(vt1.c0))))) ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((t0.c87)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (NULL) AND (((vt1.c0)=(vt1.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((0.04418886557431956) NOTNULL) INNER JOIN vt0 ON (((~ (vt0.c0))) BETWEEN ((((t0.c0, NULL, t0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, t0.c87)) AND ((t0.c87, t0.c87, t0.c0)))) AND (CASE t0.c0  WHEN t0.c87 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN 0xffffffff8a5b16a9 THEN t0.c87 WHEN vt0.c0 THEN t0.c0 END)) ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY);
SELECT * FROM t0 CROSS JOIN vt1 ON ((0.04418886557431956) NOTNULL) INNER JOIN vt0 ON (((~ (vt0.c0))) BETWEEN ((((t0.c0, NULL, t0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, t0.c87)) AND ((t0.c87, t0.c87, t0.c0)))) AND (CASE t0.c0  WHEN t0.c87 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN 0Xffffffff8a5b16a9 THEN t0.c87 WHEN vt0.c0 THEN t0.c0 END)) WHERE ((((((t0.c87)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (NULL) AND (((vt1.c0)=(vt1.c0))))) ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((t0.c87)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (NULL) AND (((vt1.c0)=(vt1.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((0.04418886557431956) NOTNULL) INNER JOIN vt0 ON (((~ (vt0.c0))) BETWEEN ((((t0.c0, NULL, t0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, t0.c87)) AND ((t0.c87, t0.c87, t0.c0)))) AND (CASE t0.c0  WHEN t0.c87 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN 0xffffffff8a5b16a9 THEN t0.c87 WHEN vt0.c0 THEN t0.c0 END)) ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY);
SELECT * FROM t0 CROSS JOIN vt1 ON ((0.04418886557431956) NOTNULL) INNER JOIN vt0 ON (((~ (vt0.c0))) BETWEEN ((((t0.c0, NULL, t0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, t0.c87)) AND ((t0.c87, t0.c87, t0.c0)))) AND (CASE t0.c0  WHEN t0.c87 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN 0Xffffffff8a5b16a9 THEN t0.c87 WHEN vt0.c0 THEN t0.c0 END)) WHERE ((((((t0.c87)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (NULL) AND (((vt1.c0)=(vt1.c0))))) ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY;
SELECT COUNT(*) FROM vt1, t0, t10 WHERE (x'6cc1');
SELECT SUM(count) FROM (SELECT ALL ((x'6cc1') IS TRUE)  as count FROM vt1, t0, t10);
SELECT COUNT(*) FROM vt1, t0, t10 WHERE (x'6cc1');
SELECT SUM(count) FROM (SELECT ALL ((x'6cc1') IS TRUE)  as count FROM vt1, t0, t10);
SELECT COUNT(*) FROM vt1, t0, t10 WHERE (x'6cc1');
SELECT COUNT(*) FROM vt1, t10, t0, vt0 WHERE (((CASE 0.9289513418500847  WHEN t0.c0 THEN vt1.c0 END)>>(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CASE 0.9289513418500847  WHEN t0.c0 THEN vt1.c0 END)>>(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t10, t0, vt0);
SELECT COUNT(*) FROM vt1, t10, t0, vt0 WHERE (((CASE 0.9289513418500847  WHEN t0.c0 THEN vt1.c0 END)>>(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CASE 0.9289513418500847  WHEN t0.c0 THEN vt1.c0 END)>>(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t10, t0, vt0);
SELECT COUNT(*) FROM vt1, t10, t0, vt0 WHERE (((CASE 0.9289513418500847  WHEN t0.c0 THEN vt1.c0 END)>>(t0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((t0.c87) IS FALSE))&(CAST(t0.c0 AS TEXT))) WHERE (t0.c0) ORDER BY CASE WHEN x'' COLLATE RTRIM THEN (- (t0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0 NOT INDEXED LEFT OUTER JOIN vt1 ON ((((t0.c87) IS FALSE))&(CAST(t0.c0 AS TEXT))) ORDER BY CASE WHEN x'' COLLATE RTRIM THEN (- (t0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((t0.c87) IS FALSE))&(CAST(t0.c0 AS TEXT))) WHERE (t0.c0) ORDER BY CASE WHEN x'' COLLATE RTRIM THEN (- (t0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0 NOT INDEXED LEFT OUTER JOIN vt1 ON ((((t0.c87) IS FALSE))&(CAST(t0.c0 AS TEXT))) ORDER BY CASE WHEN x'' COLLATE RTRIM THEN (- (t0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((t0.c87) IS FALSE))&(CAST(t0.c0 AS TEXT))) WHERE (t0.c0) ORDER BY CASE WHEN x'' COLLATE RTRIM THEN (- (t0.c0)) END  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, NULL))))>>(((vt0.c0)&(vt0.c0))))) ORDER BY JULIANDAY(-421006117, json_type(vt0.c0), (+ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)OR(vt0.c0))) DESC  NULLS LAST, (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((DATETIME(vt0.c0, vt0.c0, vt0.c0)))), (((CAST(vt0.c0 AS TEXT)))==((((vt0.c0)IS(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, NULL))))>>(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY JULIANDAY(-421006117, json_type(vt0.c0), (+ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)OR(vt0.c0))) DESC  NULLS LAST, (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((DATETIME(vt0.c0, vt0.c0, vt0.c0)))), (((CAST(vt0.c0 AS TEXT)))==((((vt0.c0)IS(vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, NULL))))>>(((vt0.c0)&(vt0.c0))))) ORDER BY JULIANDAY(-421006117, json_type(vt0.c0), (+ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)OR(vt0.c0))) DESC  NULLS LAST, (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((DATETIME(vt0.c0, vt0.c0, vt0.c0)))), (((CAST(vt0.c0 AS TEXT)))==((((vt0.c0)IS(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, NULL))))>>(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY JULIANDAY(-421006117, json_type(vt0.c0), (+ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)OR(vt0.c0))) DESC  NULLS LAST, (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((DATETIME(vt0.c0, vt0.c0, vt0.c0)))), (((CAST(vt0.c0 AS TEXT)))==((((vt0.c0)IS(vt0.c0)))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0))!=(('1743331435'))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<>(('1743331435')))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0))!=(('1743331435'))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<>(('1743331435')))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0))!=(('1743331435'))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON load_extension(CASE t10.c0  WHEN vt0.c0 THEN t10.c30 END, ((t0.c87)GLOB(t10.c30))) RIGHT OUTER JOIN t10 ON ((((t0.c87)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) IN ()) CROSS JOIN vt1 ON (+ (((t10.c30)%(t10.c0)))) WHERE ((((t0.c87)) BETWEEN ((((((NULL)OR(vt0.c0)))OR('')))) AND (((NOT (t10.c30))))));
SELECT SUM(count) FROM (SELECT (((((t0.c87)) BETWEEN ((((((NULL)OR(vt0.c0)))OR('')))) AND (((NOT (t10.c30)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON load_extension(CASE t10.c0  WHEN vt0.c0 THEN t10.c30 END, ((t0.c87)GLOB(t10.c30))) RIGHT OUTER JOIN t10 ON ((((t0.c87)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) IN ()) CROSS JOIN vt1 ON (+ (((t10.c30)%(t10.c0)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON load_extension(CASE t10.c0  WHEN vt0.c0 THEN t10.c30 END, ((t0.c87)GLOB(t10.c30))) RIGHT OUTER JOIN t10 ON ((((t0.c87)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) IN ()) CROSS JOIN vt1 ON (+ (((t10.c30)%(t10.c0)))) WHERE ((((t0.c87)) BETWEEN ((((((NULL)OR(vt0.c0)))OR('')))) AND (((NOT (t10.c30))))));
SELECT SUM(count) FROM (SELECT (((((t0.c87)) BETWEEN ((((((NULL)OR(vt0.c0)))OR('')))) AND (((NOT (t10.c30)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON load_extension(CASE t10.c0  WHEN vt0.c0 THEN t10.c30 END, ((t0.c87)GLOB(t10.c30))) RIGHT OUTER JOIN t10 ON ((((t0.c87)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) IN ()) CROSS JOIN vt1 ON (+ (((t10.c30)%(t10.c0)))));
SELECT ALL * FROM vt0, vt1, t10 FULL OUTER JOIN t0 ON (((NULL)) NOT BETWEEN ((('ox' IN (t10.c0)))) AND ((NULL))) WHERE ((((NOT (t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1, t10 FULL OUTER JOIN t0 ON (((NULL)) NOT BETWEEN ((('ox' IN (t10.c0)))) AND ((NULL))));
SELECT ALL * FROM vt0, vt1, t10 FULL OUTER JOIN t0 ON (((NULL)) NOT BETWEEN ((('ox' IN (t10.c0)))) AND ((NULL))) WHERE ((((NOT (t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1, t10 FULL OUTER JOIN t0 ON (((NULL)) NOT BETWEEN ((('ox' IN (t10.c0)))) AND ((NULL))));
SELECT ALL * FROM vt0, vt1, t10 FULL OUTER JOIN t0 ON (((NULL)) NOT BETWEEN ((('ox' IN (t10.c0)))) AND ((NULL))) WHERE ((((NOT (t0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT ALL * FROM vt0, t10 WHERE (((((t10.c30) NOT BETWEEN (t10.c0) AND (t10.c0))) IS TRUE)) ORDER BY ((((vt0.c0)AND(((t10.c30)GLOB(t10.c30)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t10.c30))));
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c30) NOT BETWEEN (t10.c0) AND (t10.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t10 ORDER BY ((((vt0.c0)AND(((t10.c30)GLOB(t10.c30)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t10.c30)))));
SELECT ALL * FROM vt0, t10 WHERE (((((t10.c30) NOT BETWEEN (t10.c0) AND (t10.c0))) IS TRUE)) ORDER BY ((((vt0.c0)AND(((t10.c30)GLOB(t10.c30)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t10.c30))));
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c30) NOT BETWEEN (t10.c0) AND (t10.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t10 ORDER BY ((((vt0.c0)AND(((t10.c30)GLOB(t10.c30)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t10.c30)))));
SELECT ALL * FROM vt0, t10 WHERE (((((t10.c30) NOT BETWEEN (t10.c0) AND (t10.c0))) IS TRUE)) ORDER BY ((((vt0.c0)AND(((t10.c30)GLOB(t10.c30)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t10.c30))));
SELECT * FROM vt1, t10, t0, vt0 WHERE ((((t0.c87)/('e*')) IN (((t0.c0) NOT BETWEEN (t10.c0) AND (t10.c0)), ((t0.c0)|(t10.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c87)/('e*')) IN (((t0.c0) NOT BETWEEN (t10.c0) AND (t10.c0)), ((t0.c0)|(t10.c0))))) IS TRUE)  as count FROM vt1, t10, t0, vt0);
SELECT * FROM vt1, t10, t0, vt0 WHERE ((((t0.c87)/('e*')) IN (((t0.c0) NOT BETWEEN (t10.c0) AND (t10.c0)), ((t0.c0)|(t10.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c87)/('e*')) IN (((t0.c0) NOT BETWEEN (t10.c0) AND (t10.c0)), ((t0.c0)|(t10.c0))))) IS TRUE)  as count FROM vt1, t10, t0, vt0);
SELECT * FROM vt1, t10, t0, vt0 WHERE ((((t0.c87)/('e*')) IN (((t0.c0) NOT BETWEEN (t10.c0) AND (t10.c0)), ((t0.c0)|(t10.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((0.998715457077991))<((vt1.c0)))) NOTNULL)) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL (((((((0.998715457077991))<((vt1.c0)))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY '');
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((0.998715457077991))<((vt1.c0)))) NOTNULL)) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL (((((((0.998715457077991))<((vt1.c0)))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY '');
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((0.998715457077991))<((vt1.c0)))) NOTNULL)) ORDER BY '';
SELECT ALL * FROM t0, vt0, t10, vt1 WHERE (((json_type(vt1.c0))*(((((t0.c87)AND(t0.c0)))AND(t10.c30)))));
SELECT SUM(count) FROM (SELECT ((((json_type(vt1.c0))*(((((t0.c87)AND(t0.c0)))AND(t10.c30))))) IS TRUE)  as count FROM t0, vt0, t10, vt1);
SELECT ALL * FROM t0, vt0, t10, vt1 WHERE (((json_type(vt1.c0))*(((((t0.c87)AND(t0.c0)))AND(t10.c30)))));
SELECT SUM(count) FROM (SELECT ((((json_type(vt1.c0))*(((((t0.c87)AND(t0.c0)))AND(t10.c30))))) IS TRUE)  as count FROM t0, vt0, t10, vt1);
SELECT ALL * FROM t0, vt0, t10, vt1 WHERE (((json_type(vt1.c0))*(((((t0.c87)AND(t0.c0)))AND(t10.c30)))));
SELECT ALL * FROM t0, vt0, t10, vt1 WHERE ((((t0.c87)||(t0.c0)) IN ())) ORDER BY (NOT ((t10.c30 IN (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c87)||(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0, t10, vt1 ORDER BY (NOT ((t10.c30 IN (vt1.c0)))) DESC);
SELECT ALL * FROM t0, vt0, t10, vt1 WHERE ((((t0.c87)||(t0.c0)) IN ())) ORDER BY (NOT ((t10.c30 IN (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c87)||(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0, t10, vt1 ORDER BY (NOT ((t10.c30 IN (vt1.c0)))) DESC);
SELECT ALL * FROM t0, vt0, t10, vt1 WHERE ((((t0.c87)||(t0.c0)) IN ())) ORDER BY (NOT ((t10.c30 IN (vt1.c0)))) DESC;
SELECT * FROM t10, vt0 WHERE (((((((((CASE t10.c0  WHEN t10.c30 THEN t10.c0 END)AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0)))OR((t10.c0 IN ()))))AND(CASE WHEN t10.c0 THEN vt0.c0 END))) ORDER BY (('-1496543905')AND(CASE WHEN vt0.c0 THEN t10.c0 ELSE vt0.c0 END)), ((((((((x'253b')OR(((t10.c30) NOT NULL))))AND(0.11095405597566543)))AND(CASE '-161485093'  WHEN t10.c0 THEN t10.c30 END)))AND(((t10.c30)OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE t10.c0  WHEN t10.c30 THEN t10.c0 END)AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0)))OR((t10.c0 IN ()))))AND(CASE WHEN t10.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t10, vt0 ORDER BY (('-1496543905')AND(CASE WHEN vt0.c0 THEN t10.c0 ELSE vt0.c0 END)), ((((((((x'253b')OR(((t10.c30) NOT NULL))))AND(0.11095405597566543)))AND(CASE '-161485093'  WHEN t10.c0 THEN t10.c30 END)))AND(((t10.c30)OR(vt0.c0)))) ASC);
SELECT * FROM t10, vt0 WHERE (((((((((CASE t10.c0  WHEN t10.c30 THEN t10.c0 END)AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0)))OR((t10.c0 IN ()))))AND(CASE WHEN t10.c0 THEN vt0.c0 END))) ORDER BY (('-1496543905')AND(CASE WHEN vt0.c0 THEN t10.c0 ELSE vt0.c0 END)), ((((((((x'253b')OR(((t10.c30) NOT NULL))))AND(0.11095405597566543)))AND(CASE '-161485093'  WHEN t10.c0 THEN t10.c30 END)))AND(((t10.c30)OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE t10.c0  WHEN t10.c30 THEN t10.c0 END)AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0)))OR((t10.c0 IN ()))))AND(CASE WHEN t10.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t10, vt0 ORDER BY (('-1496543905')AND(CASE WHEN vt0.c0 THEN t10.c0 ELSE vt0.c0 END)), ((((((((x'253b')OR(((t10.c30) NOT NULL))))AND(0.11095405597566543)))AND(CASE '-161485093'  WHEN t10.c0 THEN t10.c30 END)))AND(((t10.c30)OR(vt0.c0)))) ASC);
SELECT * FROM t10, vt0 WHERE (((((((((CASE t10.c0  WHEN t10.c30 THEN t10.c0 END)AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0)))OR((t10.c0 IN ()))))AND(CASE WHEN t10.c0 THEN vt0.c0 END))) ORDER BY (('-1496543905')AND(CASE WHEN vt0.c0 THEN t10.c0 ELSE vt0.c0 END)), ((((((((x'253b')OR(((t10.c30) NOT NULL))))AND(0.11095405597566543)))AND(CASE '-161485093'  WHEN t10.c0 THEN t10.c30 END)))AND(((t10.c30)OR(vt0.c0)))) ASC;
SELECT ALL * FROM vt1 INNER JOIN t10 ON (((t10.c30, t10.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN ()), ((t0.c87) BETWEEN (t0.c87) AND (t10.c30)), (- (t10.c0)))) AND ((t0.c87, t10.c30, ((t0.c87)&(0.8140314621383693))))) LEFT OUTER JOIN vt0 ON x'6917' COLLATE BINARY RIGHT OUTER JOIN t0 ON ((+ (t0.c0)) IN ()) WHERE ((- (((t10.c30) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t10.c30) NOTNULL)))) IS TRUE)  as count FROM vt1 INNER JOIN t10 ON (((t10.c30, t10.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN ()), ((t0.c87) BETWEEN (t0.c87) AND (t10.c30)), (- (t10.c0)))) AND ((t0.c87, t10.c30, ((t0.c87)&(0.8140314621383693))))) LEFT OUTER JOIN vt0 ON x'6917' COLLATE BINARY RIGHT OUTER JOIN t0 ON ((+ (t0.c0)) IN ()));
SELECT ALL * FROM vt1 INNER JOIN t10 ON (((t10.c30, t10.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN ()), ((t0.c87) BETWEEN (t0.c87) AND (t10.c30)), (- (t10.c0)))) AND ((t0.c87, t10.c30, ((t0.c87)&(0.8140314621383693))))) LEFT OUTER JOIN vt0 ON x'6917' COLLATE BINARY RIGHT OUTER JOIN t0 ON ((+ (t0.c0)) IN ()) WHERE ((- (((t10.c30) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t10.c30) NOTNULL)))) IS TRUE)  as count FROM vt1 INNER JOIN t10 ON (((t10.c30, t10.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN ()), ((t0.c87) BETWEEN (t0.c87) AND (t10.c30)), (- (t10.c0)))) AND ((t0.c87, t10.c30, ((t0.c87)&(0.8140314621383693))))) LEFT OUTER JOIN vt0 ON x'6917' COLLATE BINARY RIGHT OUTER JOIN t0 ON ((+ (t0.c0)) IN ()));
SELECT COUNT(*) FROM vt1, vt0, t0, t10 WHERE (((t10.c30 COLLATE NOCASE) BETWEEN ((+ (t10.c30))) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((t10.c30 COLLATE NOCASE) BETWEEN ((+ (t10.c30))) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0, t0, t10);
SELECT COUNT(*) FROM vt1, vt0, t0, t10 WHERE (((t10.c30 COLLATE NOCASE) BETWEEN ((+ (t10.c30))) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((t10.c30 COLLATE NOCASE) BETWEEN ((+ (t10.c30))) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0, t0, t10);
SELECT COUNT(*) FROM vt1, vt0, t0, t10 WHERE (((t10.c30 COLLATE NOCASE) BETWEEN ((+ (t10.c30))) AND (CAST(vt1.c0 AS TEXT))));
SELECT COUNT(*) FROM t0, vt1, t10 WHERE (CAST((t10.c30 IN (t0.c87)) AS NUMERIC)) ORDER BY (('1620307208') NOT BETWEEN (CAST(t10.c30 AS TEXT)) AND (vt1.c0 COLLATE BINARY))  NULLS FIRST, ((((((vt1.c0)OR(t10.c0)))AND(t10.c30)))IS((t10.c30 IN (t0.c87)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t10.c30 IN (t0.c87)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, t10 ORDER BY (('1620307208') NOT BETWEEN (CAST(t10.c30 AS TEXT)) AND (vt1.c0 COLLATE BINARY))  NULLS FIRST, ((((((vt1.c0)OR(t10.c0)))AND(t10.c30)))IS((t10.c30 IN (t0.c87)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, t10 WHERE (CAST((t10.c30 IN (t0.c87)) AS NUMERIC)) ORDER BY (('1620307208') NOT BETWEEN (CAST(t10.c30 AS TEXT)) AND (vt1.c0 COLLATE BINARY))  NULLS FIRST, ((((((vt1.c0)OR(t10.c0)))AND(t10.c30)))IS((t10.c30 IN (t0.c87)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t10.c30 IN (t0.c87)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, t10 ORDER BY (('1620307208') NOT BETWEEN (CAST(t10.c30 AS TEXT)) AND (vt1.c0 COLLATE BINARY))  NULLS FIRST, ((((((vt1.c0)OR(t10.c0)))AND(t10.c30)))IS((t10.c30 IN (t0.c87)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, t10 WHERE (CAST((t10.c30 IN (t0.c87)) AS NUMERIC)) ORDER BY (('1620307208') NOT BETWEEN (CAST(t10.c30 AS TEXT)) AND (vt1.c0 COLLATE BINARY))  NULLS FIRST, ((((((vt1.c0)OR(t10.c0)))AND(t10.c30)))IS((t10.c30 IN (t0.c87)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t10 INNER JOIN t0 ON (~ (((t10.c0) BETWEEN (t10.c30) AND (vt1.c0)))) INNER JOIN vt0 ON (- (CAST(NULL AS TEXT))) FULL OUTER JOIN vt1 ON (CAST(t10.c0 AS BLOB) IN ((t0.c0 IN ()))) WHERE (((CAST(vt0.c0 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM t10 INNER JOIN t0 ON (~ (((t10.c0) BETWEEN (t10.c30) AND (vt1.c0)))) INNER JOIN vt0 ON (- (CAST(NULL AS TEXT))) FULL OUTER JOIN vt1 ON (CAST(t10.c0 AS BLOB) IN ((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t10 INNER JOIN t0 ON (~ (((t10.c0) BETWEEN (t10.c30) AND (vt1.c0)))) INNER JOIN vt0 ON (- (CAST(NULL AS TEXT))) FULL OUTER JOIN vt1 ON (CAST(t10.c0 AS BLOB) IN ((t0.c0 IN ()))) WHERE (((CAST(vt0.c0 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM t10 INNER JOIN t0 ON (~ (((t10.c0) BETWEEN (t10.c30) AND (vt1.c0)))) INNER JOIN vt0 ON (- (CAST(NULL AS TEXT))) FULL OUTER JOIN vt1 ON (CAST(t10.c0 AS BLOB) IN ((t0.c0 IN ()))));
SELECT COUNT(*) FROM t10, vt1 WHERE (CASE (t10.c30 IN ())  WHEN t10.c30 COLLATE NOCASE THEN (~ (vt1.c0)) END) ORDER BY -1.102773176E9 ASC;
SELECT SUM(count) FROM (SELECT ((CASE (t10.c30 IN ())  WHEN t10.c30 COLLATE NOCASE THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM t10, vt1 ORDER BY -1.102773176E9 ASC);
SELECT COUNT(*) FROM t10, vt1 WHERE (CASE (t10.c30 IN ())  WHEN t10.c30 COLLATE NOCASE THEN (~ (vt1.c0)) END) ORDER BY -1.102773176E9 ASC;
SELECT SUM(count) FROM (SELECT ((CASE (t10.c30 IN ())  WHEN t10.c30 COLLATE NOCASE THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM t10, vt1 ORDER BY -1.102773176E9 ASC);
SELECT COUNT(*) FROM t10, vt1 WHERE (CASE (t10.c30 IN ())  WHEN t10.c30 COLLATE NOCASE THEN (~ (vt1.c0)) END) ORDER BY -1.102773176E9 ASC;
SELECT COUNT(*) FROM t0, t10, vt1, vt0 WHERE (ROUND(CASE vt0.c0  WHEN t10.c30 THEN t0.c0 ELSE t0.c87 END, ((vt1.c0)IS(t0.c0)))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(t0.c87))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ROUND(CASE vt0.c0  WHEN t10.c30 THEN t0.c0 ELSE t0.c87 END, ((vt1.c0)IS(t0.c0)))) IS TRUE)  as count FROM t0, t10, vt1, vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(t0.c87))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM t0, t10, vt1, vt0 WHERE (ROUND(CASE vt0.c0  WHEN t10.c30 THEN t0.c0 ELSE t0.c87 END, ((vt1.c0)IS(t0.c0)))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(t0.c87))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ROUND(CASE vt0.c0  WHEN t10.c30 THEN t0.c0 ELSE t0.c87 END, ((vt1.c0)IS(t0.c0)))) IS TRUE)  as count FROM t0, t10, vt1, vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(t0.c87))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM t0, t10, vt1, vt0 WHERE (ROUND(CASE vt0.c0  WHEN t10.c30 THEN t0.c0 ELSE t0.c87 END, ((vt1.c0)IS(t0.c0)))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(t0.c87))) IS TRUE)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((('-2104297471'))<(((vt0.c0 IN ()))))) ORDER BY CASE WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0) NOTNULL) END;
SELECT SUM(count) FROM (SELECT ((((('-2104297471'))<(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0) NOTNULL) END);
SELECT * FROM vt0 WHERE (((('-2104297471'))<(((vt0.c0 IN ()))))) ORDER BY CASE WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0) NOTNULL) END;
SELECT SUM(count) FROM (SELECT ((((('-2104297471'))<(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0) NOTNULL) END);
SELECT * FROM vt0 WHERE (((('-2104297471'))<(((vt0.c0 IN ()))))) ORDER BY CASE WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0) NOTNULL) END;
SELECT ALL COUNT(*) FROM vt0, t10 FULL OUTER JOIN vt1 ON (((((vt0.c0) NOT BETWEEN (t10.c0) AND (vt0.c0))))<>(((((t10.c0, t10.c0, t10.c0))==((t10.c0, t10.c30, vt0.c0)))))) WHERE ((NOT (t10.c0)) COLLATE NOCASE) ORDER BY (((((((((('')OR(t10.c0)))OR(vt1.c0)))OR(t10.c30)))OR(t10.c30))) NOT BETWEEN (((((t10.c0)OR(t10.c30)))AND(vt1.c0))) AND ((t10.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (t10.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t10 FULL OUTER JOIN vt1 ON (((((vt0.c0) NOT BETWEEN (t10.c0) AND (vt0.c0))))!=(((((t10.c0, t10.c0, t10.c0))=((t10.c0, t10.c30, vt0.c0)))))) ORDER BY (((((((((('')OR(t10.c0)))OR(vt1.c0)))OR(t10.c30)))OR(t10.c30))) NOT BETWEEN (((((t10.c0)OR(t10.c30)))AND(vt1.c0))) AND ((t10.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t10 FULL OUTER JOIN vt1 ON (((((vt0.c0) NOT BETWEEN (t10.c0) AND (vt0.c0))))<>(((((t10.c0, t10.c0, t10.c0))==((t10.c0, t10.c30, vt0.c0)))))) WHERE ((NOT (t10.c0)) COLLATE NOCASE) ORDER BY (((((((((('')OR(t10.c0)))OR(vt1.c0)))OR(t10.c30)))OR(t10.c30))) NOT BETWEEN (((((t10.c0)OR(t10.c30)))AND(vt1.c0))) AND ((t10.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (t10.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t10 FULL OUTER JOIN vt1 ON (((((vt0.c0) NOT BETWEEN (t10.c0) AND (vt0.c0))))!=(((((t10.c0, t10.c0, t10.c0))=((t10.c0, t10.c30, vt0.c0)))))) ORDER BY (((((((((('')OR(t10.c0)))OR(vt1.c0)))OR(t10.c30)))OR(t10.c30))) NOT BETWEEN (((((t10.c0)OR(t10.c30)))AND(vt1.c0))) AND ((t10.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t10 FULL OUTER JOIN vt1 ON (((((vt0.c0) NOT BETWEEN (t10.c0) AND (vt0.c0))))<>(((((t10.c0, t10.c0, t10.c0))==((t10.c0, t10.c30, vt0.c0)))))) WHERE ((NOT (t10.c0)) COLLATE NOCASE) ORDER BY (((((((((('')OR(t10.c0)))OR(vt1.c0)))OR(t10.c30)))OR(t10.c30))) NOT BETWEEN (((((t10.c0)OR(t10.c30)))AND(vt1.c0))) AND ((t10.c0 IN ())))  NULLS LAST;
SELECT * FROM t0, vt1, t10 WHERE ((t10.c30 IN ())) ORDER BY (((SQLITE_COMPILEOPTION_USED(NULL)))<=((ABS(DISTINCT t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t10.c30 IN ())) IS TRUE)  as count FROM t0, vt1, t10 ORDER BY (((SQLITE_COMPILEOPTION_USED(NULL)))<=((ABS(DISTINCT t0.c0)))) ASC  NULLS LAST);
SELECT * FROM t0, vt1, t10 WHERE ((t10.c30 IN ())) ORDER BY (((SQLITE_COMPILEOPTION_USED(NULL)))<=((ABS(DISTINCT t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t10.c30 IN ())) IS TRUE)  as count FROM t0, vt1, t10 ORDER BY (((SQLITE_COMPILEOPTION_USED(NULL)))<=((ABS(DISTINCT t0.c0)))) ASC  NULLS LAST);
SELECT * FROM t0, vt1, t10 WHERE ((t10.c30 IN ())) ORDER BY (((SQLITE_COMPILEOPTION_USED(NULL)))<=((ABS(DISTINCT t0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt1 WHERE ((LIKELIHOOD(t0.c87, 0.4625397156276112) IN (((t0.c87) IS TRUE), (((t0.c0, '1851845923', '', t0.c0, vt1.c0)) NOT BETWEEN ((t0.c87, vt1.c0, t0.c0, vt1.c0, vt1.c0)) AND ((t0.c87, t0.c87, vt1.c0, t0.c87, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(t0.c87, 0.4625397156276112) IN (((t0.c87) IS TRUE), (((t0.c0, '1851845923', '', t0.c0, vt1.c0)) NOT BETWEEN ((t0.c87, vt1.c0, t0.c0, vt1.c0, vt1.c0)) AND ((t0.c87, t0.c87, vt1.c0, t0.c87, vt1.c0)))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((LIKELIHOOD(t0.c87, 0.4625397156276112) IN (((t0.c87) IS TRUE), (((t0.c0, '1851845923', '', t0.c0, vt1.c0)) NOT BETWEEN ((t0.c87, vt1.c0, t0.c0, vt1.c0, vt1.c0)) AND ((t0.c87, t0.c87, vt1.c0, t0.c87, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(t0.c87, 0.4625397156276112) IN (((t0.c87) IS TRUE), (((t0.c0, '1851845923', '', t0.c0, vt1.c0)) NOT BETWEEN ((t0.c87, vt1.c0, t0.c0, vt1.c0, vt1.c0)) AND ((t0.c87, t0.c87, vt1.c0, t0.c87, vt1.c0)))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((LIKELIHOOD(t0.c87, 0.4625397156276112) IN (((t0.c87) IS TRUE), (((t0.c0, '1851845923', '', t0.c0, vt1.c0)) NOT BETWEEN ((t0.c87, vt1.c0, t0.c0, vt1.c0, vt1.c0)) AND ((t0.c87, t0.c87, vt1.c0, t0.c87, vt1.c0))))));
SELECT * FROM t0, t10, vt1 WHERE ((((((t0.c87) NOTNULL), ((((t10.c0)AND(t0.c87)))OR(t10.c30)), vt1.c0, '1681058763', (NOT (t0.c87))))!=(((NOT (t10.c0)), ((t0.c0)|(vt1.c0)), t10.c30 COLLATE RTRIM, load_extension(t0.c87, vt1.c0), CAST(t10.c0 AS INTEGER))))) ORDER BY (+ (t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c87) NOTNULL), ((((t10.c0)AND(t0.c87)))OR(t10.c30)), vt1.c0, '1681058763', (NOT (t0.c87))))<>(((NOT (t10.c0)), ((t0.c0)|(vt1.c0)), t10.c30 COLLATE RTRIM, load_extension(t0.c87, vt1.c0), CAST(t10.c0 AS INTEGER))))) IS TRUE)  as count FROM t0, t10, vt1 ORDER BY (+ (t0.c0)) ASC  NULLS FIRST);
SELECT * FROM t0, t10, vt1 WHERE ((((((t0.c87) NOTNULL), ((((t10.c0)AND(t0.c87)))OR(t10.c30)), vt1.c0, '1681058763', (NOT (t0.c87))))!=(((NOT (t10.c0)), ((t0.c0)|(vt1.c0)), t10.c30 COLLATE RTRIM, load_extension(t0.c87, vt1.c0), CAST(t10.c0 AS INTEGER))))) ORDER BY (+ (t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c87) NOTNULL), ((((t10.c0)AND(t0.c87)))OR(t10.c30)), vt1.c0, '1681058763', (NOT (t0.c87))))<>(((NOT (t10.c0)), ((t0.c0)|(vt1.c0)), t10.c30 COLLATE RTRIM, load_extension(t0.c87, vt1.c0), CAST(t10.c0 AS INTEGER))))) IS TRUE)  as count FROM t0, t10, vt1 ORDER BY (+ (t0.c0)) ASC  NULLS FIRST);
SELECT * FROM t10, vt1 WHERE (CAST(CASE WHEN '611549250' THEN t10.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN '611549250' THEN t10.c0 END AS TEXT)) IS TRUE)  as count FROM t10, vt1);
SELECT * FROM t10, vt1 WHERE (CAST(CASE WHEN '611549250' THEN t10.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN '611549250' THEN t10.c0 END AS TEXT)) IS TRUE)  as count FROM t10, vt1);
SELECT * FROM t10, vt1 WHERE (CAST(CASE WHEN '611549250' THEN t10.c0 END AS TEXT));
SELECT ALL * FROM vt1, t10, t0 RIGHT OUTER JOIN vt0 ON CAST(NULL AS REAL) WHERE ((((((((((t10.c30 IN (t10.c0)))OR(x'')))AND(((((t10.c0)OR(0x7e9ccb60)))OR(vt0.c0)))))AND(((vt1.c0) NOTNULL))))AND(COALESCE(DISTINCT t10.c0, vt1.c0)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((t10.c30 IN (t10.c0)))OR(x'')))AND(((((t10.c0)OR(0X7e9ccb60)))OR(vt0.c0)))))AND(((vt1.c0) NOTNULL))))AND(COALESCE(DISTINCT t10.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, t10, t0 RIGHT OUTER JOIN vt0 ON CAST(NULL AS REAL) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t10, t0 RIGHT OUTER JOIN vt0 ON CAST(NULL AS REAL) WHERE ((((((((((t10.c30 IN (t10.c0)))OR(x'')))AND(((((t10.c0)OR(0x7e9ccb60)))OR(vt0.c0)))))AND(((vt1.c0) NOTNULL))))AND(COALESCE(DISTINCT t10.c0, vt1.c0)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((t10.c30 IN (t10.c0)))OR(x'')))AND(((((t10.c0)OR(0X7e9ccb60)))OR(vt0.c0)))))AND(((vt1.c0) NOTNULL))))AND(COALESCE(DISTINCT t10.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, t10, t0 RIGHT OUTER JOIN vt0 ON CAST(NULL AS REAL) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t10, t0 RIGHT OUTER JOIN vt0 ON CAST(NULL AS REAL) WHERE ((((((((((t10.c30 IN (t10.c0)))OR(x'')))AND(((((t10.c0)OR(0x7e9ccb60)))OR(vt0.c0)))))AND(((vt1.c0) NOTNULL))))AND(COALESCE(DISTINCT t10.c0, vt1.c0)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT NULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM t10 LEFT OUTER JOIN vt1 ON (((- (t0.c0)))/(t10.c30 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON CASE WHEN (t10.c0 IN ()) THEN CAST(t10.c0 AS TEXT) END FULL OUTER JOIN t0 ON '쥌W' WHERE (t10.c30) ORDER BY ((((2072940749) IS TRUE)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((t10.c30) IS TRUE)  as count FROM t10 LEFT OUTER JOIN vt1 ON (((- (t0.c0)))/(t10.c30 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON CASE WHEN (t10.c0 IN ()) THEN CAST(t10.c0 AS TEXT) END FULL OUTER JOIN t0 ON '쥌W' ORDER BY ((((2072940749) IS TRUE)) NOTNULL));
SELECT COUNT(*) FROM t10 LEFT OUTER JOIN vt1 ON (((- (t0.c0)))/(t10.c30 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON CASE WHEN (t10.c0 IN ()) THEN CAST(t10.c0 AS TEXT) END FULL OUTER JOIN t0 ON '쥌W' WHERE (t10.c30) ORDER BY ((((2072940749) IS TRUE)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((t10.c30) IS TRUE)  as count FROM t10 LEFT OUTER JOIN vt1 ON (((- (t0.c0)))/(t10.c30 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON CASE WHEN (t10.c0 IN ()) THEN CAST(t10.c0 AS TEXT) END FULL OUTER JOIN t0 ON '쥌W' ORDER BY ((((2072940749) IS TRUE)) NOTNULL));
SELECT ALL * FROM vt0, t10, t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t10 NOT INDEXED, t0, vt1);
SELECT ALL * FROM vt0, t10, t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t10 NOT INDEXED, t0, vt1);
SELECT ALL * FROM vt0, t10, t0, vt1 WHERE (x'');
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((((t0.c0) IS TRUE)))=(((t0.c0 IN ()))))) ORDER BY '-1184597992' ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0) IS TRUE)))==(((t0.c0 IN ()))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY '-1184597992' ASC);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((((t0.c0) IS TRUE)))=(((t0.c0 IN ()))))) ORDER BY '-1184597992' ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0) IS TRUE)))==(((t0.c0 IN ()))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY '-1184597992' ASC);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((((t0.c0) IS TRUE)))=(((t0.c0 IN ()))))) ORDER BY '-1184597992' ASC;
SELECT ALL * FROM t10, t0 WHERE (((((t10.c0) NOT BETWEEN (t0.c87) AND (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c0) NOT BETWEEN (t0.c87) AND (t0.c0))) ISNULL)) IS TRUE)  as count FROM t10, t0);
SELECT ALL * FROM t10, t0 WHERE (((((t10.c0) NOT BETWEEN (t0.c87) AND (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t10.c0) NOT BETWEEN (t0.c87) AND (t0.c0))) ISNULL)) IS TRUE)  as count FROM t10, t0);
SELECT ALL * FROM t10, t0 WHERE (((((t10.c0) NOT BETWEEN (t0.c87) AND (t0.c0))) ISNULL));
SELECT * FROM vt1 WHERE (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((x'8393', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))<=((load_extension(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((x'8393', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))<=((load_extension(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((x'8393', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))<=((load_extension(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((x'8393', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))<=((load_extension(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1, t0 WHERE (('' IN ())) ORDER BY CASE t0.c87  WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN t0.c0 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('' IN ())) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE t0.c87  WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN t0.c0 END COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE (('' IN ())) ORDER BY CASE t0.c87  WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN t0.c0 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('' IN ())) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE t0.c87  WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN t0.c0 END COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE (('' IN ())) ORDER BY CASE t0.c87  WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN t0.c0 END COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((((0.618196260489614)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER)) ORDER BY (((((vt1.c0)IS NOT(vt1.c0))))<=(((~ (vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.618196260489614)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)IS NOT(vt1.c0))))<=(((~ (vt1.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((((0.618196260489614)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER)) ORDER BY (((((vt1.c0)IS NOT(vt1.c0))))<=(((~ (vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.618196260489614)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)IS NOT(vt1.c0))))<=(((~ (vt1.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((((0.618196260489614)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER)) ORDER BY (((((vt1.c0)IS NOT(vt1.c0))))<=(((~ (vt1.c0)))))  NULLS LAST;
SELECT * FROM t10, vt0, vt1 WHERE (COALESCE(CAST(vt0.c0 AS BLOB), (t10.c30 IN (vt1.c0)), ABS(vt1.c0), (t10.c0 IN ()))) ORDER BY ((((t10.c30) NOT BETWEEN (vt0.c0) AND (vt1.c0)))LIKE((((vt1.c0)) NOT BETWEEN ((t10.c30)) AND ((NULL))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(vt0.c0 AS BLOB), (t10.c30 IN (vt1.c0)), ABS(vt1.c0), (t10.c0 IN ()))) IS TRUE)  as count FROM t10, vt0, vt1 ORDER BY ((((t10.c30) NOT BETWEEN (vt0.c0) AND (vt1.c0)))LIKE((((vt1.c0)) NOT BETWEEN ((t10.c30)) AND ((NULL))))) ASC);
SELECT * FROM t10, vt0, vt1 WHERE (COALESCE(CAST(vt0.c0 AS BLOB), (t10.c30 IN (vt1.c0)), ABS(vt1.c0), (t10.c0 IN ()))) ORDER BY ((((t10.c30) NOT BETWEEN (vt0.c0) AND (vt1.c0)))LIKE((((vt1.c0)) NOT BETWEEN ((t10.c30)) AND ((NULL))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(vt0.c0 AS BLOB), (t10.c30 IN (vt1.c0)), ABS(vt1.c0), (t10.c0 IN ()))) IS TRUE)  as count FROM t10, vt0, vt1 ORDER BY ((((t10.c30) NOT BETWEEN (vt0.c0) AND (vt1.c0)))LIKE((((vt1.c0)) NOT BETWEEN ((t10.c30)) AND ((NULL))))) ASC);
SELECT * FROM t10, vt0, vt1 WHERE (COALESCE(CAST(vt0.c0 AS BLOB), (t10.c30 IN (vt1.c0)), ABS(vt1.c0), (t10.c0 IN ()))) ORDER BY ((((t10.c30) NOT BETWEEN (vt0.c0) AND (vt1.c0)))LIKE((((vt1.c0)) NOT BETWEEN ((t10.c30)) AND ((NULL))))) ASC;
SELECT ALL COUNT(*) FROM vt1, t10, t0 WHERE ((- (TRIM(DISTINCT t0.c87)))) ORDER BY (- (vt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((- (TRIM(DISTINCT t0.c87)))) IS TRUE)  as count FROM vt1, t10, t0 ORDER BY (- (vt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, t10, t0 WHERE ((- (TRIM(DISTINCT t0.c87)))) ORDER BY (- (vt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((- (TRIM(DISTINCT t0.c87)))) IS TRUE)  as count FROM vt1, t10, t0 ORDER BY (- (vt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, t10, t0 WHERE ((- (TRIM(DISTINCT t0.c87)))) ORDER BY (- (vt1.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt1, t10, t0 WHERE (CASE (((t0.c87)) NOT BETWEEN ((t0.c0)) AND ((t0.c87)))  WHEN COALESCE(t0.c87, 0.5890236328651983) THEN '-2042650600' ELSE ((t10.c30)<<(vt1.c0)) END) ORDER BY t0.c87  NULLS FIRST, ((((((((((t0.c87)OR(NULL)))AND(t0.c0)))AND(vt1.c0)))OR(vt1.c0)))<((~ (t0.c87)))) DESC, ((((((((((t0.c87)OR(t0.c87)))OR(-1.496543905E9)))OR(t0.c87)))OR(vt1.c0)))>=((t0.c0 IN (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c87)) NOT BETWEEN ((t0.c0)) AND ((t0.c87)))  WHEN COALESCE(t0.c87, 0.5890236328651983) THEN '-2042650600' ELSE ((t10.c30)<<(vt1.c0)) END) IS TRUE)  as count FROM vt1, t10, t0 ORDER BY t0.c87  NULLS FIRST, ((((((((((t0.c87)OR(NULL)))AND(t0.c0)))AND(vt1.c0)))OR(vt1.c0)))<((~ (t0.c87)))) DESC, ((((((((((t0.c87)OR(t0.c87)))OR(-1.496543905E9)))OR(t0.c87)))OR(vt1.c0)))>=((t0.c0 IN (vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t10, t0 WHERE (CASE (((t0.c87)) NOT BETWEEN ((t0.c0)) AND ((t0.c87)))  WHEN COALESCE(t0.c87, 0.5890236328651983) THEN '-2042650600' ELSE ((t10.c30)<<(vt1.c0)) END) ORDER BY t0.c87  NULLS FIRST, ((((((((((t0.c87)OR(NULL)))AND(t0.c0)))AND(vt1.c0)))OR(vt1.c0)))<((~ (t0.c87)))) DESC, ((((((((((t0.c87)OR(t0.c87)))OR(-1.496543905E9)))OR(t0.c87)))OR(vt1.c0)))>=((t0.c0 IN (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c87)) NOT BETWEEN ((t0.c0)) AND ((t0.c87)))  WHEN COALESCE(t0.c87, 0.5890236328651983) THEN '-2042650600' ELSE ((t10.c30)<<(vt1.c0)) END) IS TRUE)  as count FROM vt1, t10, t0 ORDER BY t0.c87  NULLS FIRST, ((((((((((t0.c87)OR(NULL)))AND(t0.c0)))AND(vt1.c0)))OR(vt1.c0)))<((~ (t0.c87)))) DESC, ((((((((((t0.c87)OR(t0.c87)))OR(-1.496543905E9)))OR(t0.c87)))OR(vt1.c0)))>=((t0.c0 IN (vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t10, t0 WHERE (CASE (((t0.c87)) NOT BETWEEN ((t0.c0)) AND ((t0.c87)))  WHEN COALESCE(t0.c87, 0.5890236328651983) THEN '-2042650600' ELSE ((t10.c30)<<(vt1.c0)) END) ORDER BY t0.c87  NULLS FIRST, ((((((((((t0.c87)OR(NULL)))AND(t0.c0)))AND(vt1.c0)))OR(vt1.c0)))<((~ (t0.c87)))) DESC, ((((((((((t0.c87)OR(t0.c87)))OR(-1.496543905E9)))OR(t0.c87)))OR(vt1.c0)))>=((t0.c0 IN (vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0, t10, vt1, t0 WHERE (0.9031921995027283) ORDER BY ((vt0.c0)<>(((t0.c0)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.9031921995027283) IS TRUE)  as count FROM vt0, t10, vt1, t0 ORDER BY ((vt0.c0)<>(((t0.c0)LIKE(vt0.c0)))));
SELECT ALL * FROM vt0, t10, vt1, t0 WHERE (0.9031921995027283) ORDER BY ((vt0.c0)<>(((t0.c0)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.9031921995027283) IS TRUE)  as count FROM vt0, t10, vt1, t0 ORDER BY ((vt0.c0)<>(((t0.c0)LIKE(vt0.c0)))));
SELECT ALL * FROM vt0, t10, vt1, t0 WHERE (0.9031921995027283) ORDER BY ((vt0.c0)<>(((t0.c0)LIKE(vt0.c0))));
SELECT ALL * FROM t10, vt1 WHERE (((((((t10.c30)OR(0.7673202341324161)))AND(t10.c0)))<=(UPPER(x''))));
SELECT SUM(count) FROM (SELECT ((((((((t10.c30)OR(0.7673202341324161)))AND(t10.c0)))<=(UPPER(x'')))) IS TRUE)  as count FROM t10, vt1);
SELECT ALL * FROM t10, vt1 WHERE (((((((t10.c30)OR(0.7673202341324161)))AND(t10.c0)))<=(UPPER(x''))));
SELECT SUM(count) FROM (SELECT ((((((((t10.c30)OR(0.7673202341324161)))AND(t10.c0)))<=(UPPER(x'')))) IS TRUE)  as count FROM t10, vt1);
SELECT ALL * FROM t10, vt1 WHERE (((((((t10.c30)OR(0.7673202341324161)))AND(t10.c0)))<=(UPPER(x''))));
SELECT COUNT(*) FROM vt0, t0, t10 FULL OUTER JOIN vt1 ON ((((((vt0.c0)AND(vt0.c0)))AND('-476228699')))!=(vt1.c0)) WHERE ((((t0.c87 IN ())) NOT BETWEEN (((t0.c0)<(vt1.c0))) AND ((~ (t0.c87))))) ORDER BY (- (((((vt1.c0)OR(vt0.c0)))AND(t0.c87)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c87 IN ())) NOT BETWEEN (((t0.c0)<(vt1.c0))) AND ((~ (t0.c87))))) IS TRUE)  as count FROM vt0, t0, t10 FULL OUTER JOIN vt1 ON ((((((vt0.c0)AND(vt0.c0)))AND('-476228699')))!=(vt1.c0)) ORDER BY (- (((((vt1.c0)OR(vt0.c0)))AND(t0.c87)))) ASC);
SELECT COUNT(*) FROM vt0, t0, t10 FULL OUTER JOIN vt1 ON ((((((vt0.c0)AND(vt0.c0)))AND('-476228699')))!=(vt1.c0)) WHERE ((((t0.c87 IN ())) NOT BETWEEN (((t0.c0)<(vt1.c0))) AND ((~ (t0.c87))))) ORDER BY (- (((((vt1.c0)OR(vt0.c0)))AND(t0.c87)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c87 IN ())) NOT BETWEEN (((t0.c0)<(vt1.c0))) AND ((~ (t0.c87))))) IS TRUE)  as count FROM vt0, t0, t10 FULL OUTER JOIN vt1 ON ((((((vt0.c0)AND(vt0.c0)))AND('-476228699')))!=(vt1.c0)) ORDER BY (- (((((vt1.c0)OR(vt0.c0)))AND(t0.c87)))) ASC);
SELECT COUNT(*) FROM vt0, t0, t10 FULL OUTER JOIN vt1 ON ((((((vt0.c0)AND(vt0.c0)))AND('-476228699')))!=(vt1.c0)) WHERE ((((t0.c87 IN ())) NOT BETWEEN (((t0.c0)<(vt1.c0))) AND ((~ (t0.c87))))) ORDER BY (- (((((vt1.c0)OR(vt0.c0)))AND(t0.c87)))) ASC;
SELECT COUNT(*) FROM t10, t0 RIGHT OUTER JOIN vt1 ON 0.5567364885596685 WHERE (((~ (t10.c0)) IN (CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((~ (t10.c0)) IN (CAST(NULL AS TEXT)))) IS TRUE)  as count FROM t10, t0 RIGHT OUTER JOIN vt1 ON 0.5567364885596685);
SELECT COUNT(*) FROM t10, t0 RIGHT OUTER JOIN vt1 ON 0.5567364885596685 WHERE (((~ (t10.c0)) IN (CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((~ (t10.c0)) IN (CAST(NULL AS TEXT)))) IS TRUE)  as count FROM t10, t0 RIGHT OUTER JOIN vt1 ON 0.5567364885596685);
SELECT COUNT(*) FROM t10, t0 RIGHT OUTER JOIN vt1 ON 0.5567364885596685 WHERE (((~ (t10.c0)) IN (CAST(NULL AS TEXT))));
SELECT * FROM t10 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t10);
SELECT * FROM t10 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t10);
SELECT * FROM t10 WHERE (NULL);
SELECT ALL * FROM vt1 INNER JOIN t0 ON TRIM(CASE t0.c0  WHEN t0.c0 THEN t0.c87 ELSE t0.c87 END) WHERE ((((vt1.c0 IN ())) IS TRUE)) ORDER BY ((CAST(t0.c0 AS TEXT))<<(t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON TRIM(CASE t0.c0  WHEN t0.c0 THEN t0.c87 ELSE t0.c87 END) ORDER BY ((CAST(t0.c0 AS TEXT))<<(t0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 INNER JOIN t0 ON TRIM(CASE t0.c0  WHEN t0.c0 THEN t0.c87 ELSE t0.c87 END) WHERE ((((vt1.c0 IN ())) IS TRUE)) ORDER BY ((CAST(t0.c0 AS TEXT))<<(t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON TRIM(CASE t0.c0  WHEN t0.c0 THEN t0.c87 ELSE t0.c87 END) ORDER BY ((CAST(t0.c0 AS TEXT))<<(t0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 INNER JOIN t0 ON TRIM(CASE t0.c0  WHEN t0.c0 THEN t0.c87 ELSE t0.c87 END) WHERE ((((vt1.c0 IN ())) IS TRUE)) ORDER BY ((CAST(t0.c0 AS TEXT))<<(t0.c0)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t10 ON '-1550553794' INNER JOIN t0 ON CASE WHEN t10.c30 COLLATE NOCASE THEN 'oY' ELSE CAST(t10.c30 AS BLOB) END WHERE (((t0.c87)OR(CASE t0.c0  WHEN t0.c87 THEN t10.c30 WHEN 0.5859762275955073 THEN t10.c0 WHEN t0.c87 THEN t0.c87 END))) ORDER BY (~ (x'')) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c87)OR(CASE t0.c0  WHEN t0.c87 THEN t10.c30 WHEN 0.5859762275955073 THEN t10.c0 WHEN t0.c87 THEN t0.c87 END))) IS TRUE)  as count FROM vt1 CROSS JOIN t10 ON '-1550553794' INNER JOIN t0 ON CASE WHEN t10.c30 COLLATE NOCASE THEN 'oY' ELSE CAST(t10.c30 AS BLOB) END ORDER BY (~ (x'')) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t10 ON '-1550553794' INNER JOIN t0 ON CASE WHEN t10.c30 COLLATE NOCASE THEN 'oY' ELSE CAST(t10.c30 AS BLOB) END WHERE (((t0.c87)OR(CASE t0.c0  WHEN t0.c87 THEN t10.c30 WHEN 0.5859762275955073 THEN t10.c0 WHEN t0.c87 THEN t0.c87 END))) ORDER BY (~ (x'')) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c87)OR(CASE t0.c0  WHEN t0.c87 THEN t10.c30 WHEN 0.5859762275955073 THEN t10.c0 WHEN t0.c87 THEN t0.c87 END))) IS TRUE)  as count FROM vt1 CROSS JOIN t10 ON '-1550553794' INNER JOIN t0 ON CASE WHEN t10.c30 COLLATE NOCASE THEN 'oY' ELSE CAST(t10.c30 AS BLOB) END ORDER BY (~ (x'')) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t10 ON '-1550553794' INNER JOIN t0 ON CASE WHEN t10.c30 COLLATE NOCASE THEN 'oY' ELSE CAST(t10.c30 AS BLOB) END WHERE (((t0.c87)OR(CASE t0.c0  WHEN t0.c87 THEN t10.c30 WHEN 0.5859762275955073 THEN t10.c0 WHEN t0.c87 THEN t0.c87 END))) ORDER BY (~ (x'')) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((0.7580694954525767)/(-1.053150814E9))) ORDER BY (((t0.c0)) BETWEEN ((ABS(vt0.c0))) AND ((((t0.c0) BETWEEN (t0.c87) AND (vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.7580694954525767)/(-1.053150814E9))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c0)) BETWEEN ((ABS(vt0.c0))) AND ((((t0.c0) BETWEEN (t0.c87) AND (vt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((0.7580694954525767)/(-1.053150814E9))) ORDER BY (((t0.c0)) BETWEEN ((ABS(vt0.c0))) AND ((((t0.c0) BETWEEN (t0.c87) AND (vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.7580694954525767)/(-1.053150814E9))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c0)) BETWEEN ((ABS(vt0.c0))) AND ((((t0.c0) BETWEEN (t0.c87) AND (vt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((0.7580694954525767)/(-1.053150814E9))) ORDER BY (((t0.c0)) BETWEEN ((ABS(vt0.c0))) AND ((((t0.c0) BETWEEN (t0.c87) AND (vt0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t10 ON ((((vt1.c0))<=((t10.c0))) IN ((((vt1.c0)) NOT BETWEEN ((t10.c30)) AND ((t10.c30))), ((t10.c0) NOT NULL))) WHERE (UNLIKELY(DISTINCT ((vt1.c0)/(t10.c0)))) ORDER BY t10.c0  NULLS FIRST, ((json_object(t10.c30, t10.c30, vt1.c0, t10.c30)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((vt1.c0)/(t10.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t10 ON ((((vt1.c0))<=((t10.c0))) IN ((((vt1.c0)) NOT BETWEEN ((t10.c30)) AND ((t10.c30))), ((t10.c0) NOT NULL))) ORDER BY t10.c0  NULLS FIRST, ((json_object(t10.c30, t10.c30, vt1.c0, t10.c30)) IS TRUE));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t10 ON ((((vt1.c0))<=((t10.c0))) IN ((((vt1.c0)) NOT BETWEEN ((t10.c30)) AND ((t10.c30))), ((t10.c0) NOT NULL))) WHERE (UNLIKELY(DISTINCT ((vt1.c0)/(t10.c0)))) ORDER BY t10.c0  NULLS FIRST, ((json_object(t10.c30, t10.c30, vt1.c0, t10.c30)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((vt1.c0)/(t10.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t10 ON ((((vt1.c0))<=((t10.c0))) IN ((((vt1.c0)) NOT BETWEEN ((t10.c30)) AND ((t10.c30))), ((t10.c0) NOT NULL))) ORDER BY t10.c0  NULLS FIRST, ((json_object(t10.c30, t10.c30, vt1.c0, t10.c30)) IS TRUE));
SELECT * FROM t10, vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t10 NOT INDEXED, vt0);
SELECT * FROM t10, vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t10 NOT INDEXED, vt0);
SELECT * FROM t10, vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)OR(CAST(t0.c87 AS INTEGER))))OR(((((t0.c0)AND(t0.c0)))AND(vt0.c0)))))OR(ABS(t0.c87))))OR(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((((((vt0.c0 COLLATE RTRIM)OR(CAST(t0.c87 AS INTEGER))))OR(((((t0.c0)AND(t0.c0)))AND(vt0.c0)))))OR(ABS(t0.c87))))OR(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)OR(CAST(t0.c87 AS INTEGER))))OR(((((t0.c0)AND(t0.c0)))AND(vt0.c0)))))OR(ABS(t0.c87))))OR(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((((((vt0.c0 COLLATE RTRIM)OR(CAST(t0.c87 AS INTEGER))))OR(((((t0.c0)AND(t0.c0)))AND(vt0.c0)))))OR(ABS(t0.c87))))OR(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)OR(CAST(t0.c87 AS INTEGER))))OR(((((t0.c0)AND(t0.c0)))AND(vt0.c0)))))OR(ABS(t0.c87))))OR(vt0.c0)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t10, vt1, t0 WHERE ((((((((t10.c30, t10.c30, '198278869'))>=((t10.c0, t10.c30, t10.c30))))OR(CASE t10.c30  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)))AND(((t10.c0) BETWEEN (vt1.c0) AND (t0.c0))))) ORDER BY ((x'')-(CAST(t10.c30 AS BLOB))) DESC, ((- (vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t10.c30, t10.c30, '198278869'))>=((t10.c0, t10.c30, t10.c30))))OR(CASE t10.c30  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)))AND(((t10.c0) BETWEEN (vt1.c0) AND (t0.c0))))) IS TRUE)  as count FROM t10, vt1, t0 ORDER BY ((x'')-(CAST(t10.c30 AS BLOB))) DESC, ((- (vt1.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t10, vt1, t0 WHERE ((((((((t10.c30, t10.c30, '198278869'))>=((t10.c0, t10.c30, t10.c30))))OR(CASE t10.c30  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)))AND(((t10.c0) BETWEEN (vt1.c0) AND (t0.c0))))) ORDER BY ((x'')-(CAST(t10.c30 AS BLOB))) DESC, ((- (vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t10.c30, t10.c30, '198278869'))>=((t10.c0, t10.c30, t10.c30))))OR(CASE t10.c30  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)))AND(((t10.c0) BETWEEN (vt1.c0) AND (t0.c0))))) IS TRUE)  as count FROM t10, vt1, t0 ORDER BY ((x'')-(CAST(t10.c30 AS BLOB))) DESC, ((- (vt1.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t10, vt1, t0 WHERE ((((((((t10.c30, t10.c30, '198278869'))>=((t10.c0, t10.c30, t10.c30))))OR(CASE t10.c30  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)))AND(((t10.c0) BETWEEN (vt1.c0) AND (t0.c0))))) ORDER BY ((x'')-(CAST(t10.c30 AS BLOB))) DESC, ((- (vt1.c0)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t10 CROSS JOIN vt1 ON ((((((((vt1.c0)AND(t10.c0)))AND(t10.c0)))AND(t10.c30)))AND(vt1.c0)) COLLATE BINARY WHERE ((((t10.c30)||(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t10.c30)||(vt1.c0)) IN ())) IS TRUE)  as count FROM t10 CROSS JOIN vt1 ON ((((((((vt1.c0)AND(t10.c0)))AND(t10.c0)))AND(t10.c30)))AND(vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t10 CROSS JOIN vt1 ON ((((((((vt1.c0)AND(t10.c0)))AND(t10.c0)))AND(t10.c30)))AND(vt1.c0)) COLLATE BINARY WHERE ((((t10.c30)||(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t10.c30)||(vt1.c0)) IN ())) IS TRUE)  as count FROM t10 CROSS JOIN vt1 ON ((((((((vt1.c0)AND(t10.c0)))AND(t10.c0)))AND(t10.c30)))AND(vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t10 CROSS JOIN vt1 ON ((((((((vt1.c0)AND(t10.c0)))AND(t10.c0)))AND(t10.c30)))AND(vt1.c0)) COLLATE BINARY WHERE ((((t10.c30)||(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)OR(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)OR(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)OR(vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((vt1.c0)>=(t10.c30))) NOT BETWEEN (vt0.c0) AND ((~ (t10.c30)))) LEFT OUTER JOIN t10 ON (- ((- (vt0.c0)))) WHERE (t10.c0 COLLATE NOCASE) ORDER BY ((((((NULL))>=(('Te')))))<=((((t10.c30)|(t10.c30)))));
SELECT SUM(count) FROM (SELECT ((t10.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((vt1.c0)>=(t10.c30))) NOT BETWEEN (vt0.c0) AND ((~ (t10.c30)))) LEFT OUTER JOIN t10 ON (- ((- (vt0.c0)))) ORDER BY ((((((NULL))>=(('Te')))))<=((((t10.c30)|(t10.c30))))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((vt1.c0)>=(t10.c30))) NOT BETWEEN (vt0.c0) AND ((~ (t10.c30)))) LEFT OUTER JOIN t10 ON (- ((- (vt0.c0)))) WHERE (t10.c0 COLLATE NOCASE) ORDER BY ((((((NULL))>=(('Te')))))<=((((t10.c30)|(t10.c30)))));
SELECT SUM(count) FROM (SELECT ((t10.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((vt1.c0)>=(t10.c30))) NOT BETWEEN (vt0.c0) AND ((~ (t10.c30)))) LEFT OUTER JOIN t10 ON (- ((- (vt0.c0)))) ORDER BY ((((((NULL))>=(('Te')))))<=((((t10.c30)|(t10.c30))))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((vt1.c0)>=(t10.c30))) NOT BETWEEN (vt0.c0) AND ((~ (t10.c30)))) LEFT OUTER JOIN t10 ON (- ((- (vt0.c0)))) WHERE (t10.c0 COLLATE NOCASE) ORDER BY ((((((NULL))>=(('Te')))))<=((((t10.c30)|(t10.c30)))));
SELECT ALL COUNT(*) FROM vt1, t10, t0, vt0 WHERE (CAST(((vt1.c0)&(t10.c30)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)&(t10.c30)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t10, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t10, t0, vt0 WHERE (CAST(((vt1.c0)&(t10.c30)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)&(t10.c30)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t10, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t10, t0, vt0 WHERE (CAST(((vt1.c0)&(t10.c30)) AS NUMERIC));
SELECT * FROM t0 WHERE (((0Xfffffffff2103022)>(t0.c87 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((0Xfffffffff2103022)>(t0.c87 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((0Xfffffffff2103022)>(t0.c87 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((0Xfffffffff2103022)>(t0.c87 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((0Xfffffffff2103022)>(t0.c87 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t10, vt0, vt1, t0 WHERE ((CAST(t0.c87 AS REAL) IN ())) ORDER BY NULLIF(((t0.c87)/(vt0.c0)), t0.c87) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c87 AS REAL) IN ())) IS TRUE)  as count FROM t10, vt0, vt1, t0 ORDER BY NULLIF(((t0.c87)/(vt0.c0)), t0.c87) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t10, vt0, vt1, t0 WHERE ((CAST(t0.c87 AS REAL) IN ())) ORDER BY NULLIF(((t0.c87)/(vt0.c0)), t0.c87) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c87 AS REAL) IN ())) IS TRUE)  as count FROM t10, vt0, vt1, t0 ORDER BY NULLIF(((t0.c87)/(vt0.c0)), t0.c87) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t10, vt0, vt1, t0 WHERE ((CAST(t0.c87 AS REAL) IN ())) ORDER BY NULLIF(((t0.c87)/(vt0.c0)), t0.c87) DESC  NULLS FIRST;
SELECT * FROM t10, t0, vt0 INDEXED BY i49 WHERE ((DATETIME(t10.c0, t10.c0, t10.c30) IN ())) ORDER BY (~ (((t10.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((DATETIME(t10.c0, t10.c0, t10.c30) IN ())) IS TRUE)  as count FROM t10, t0, vt0 INDEXED BY i49 ORDER BY (~ (((t10.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC);
SELECT * FROM t10, t0, vt0 INDEXED BY i49 WHERE ((DATETIME(t10.c0, t10.c0, t10.c30) IN ())) ORDER BY (~ (((t10.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((DATETIME(t10.c0, t10.c0, t10.c30) IN ())) IS TRUE)  as count FROM t10, t0, vt0 INDEXED BY i49 ORDER BY (~ (((t10.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC);
SELECT ALL * FROM vt1, t10 WHERE (t10.c0) ORDER BY ((((((x'')OR(t10.c30)))AND(0.7292102652927009)))%(((((t10.c30)AND(vt1.c0)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((t10.c0) IS TRUE)  as count FROM vt1, t10 ORDER BY ((((((x'')OR(t10.c30)))AND(0.7292102652927009)))%(((((t10.c30)AND(vt1.c0)))OR(vt1.c0)))));
SELECT ALL * FROM vt1, t10 WHERE (t10.c0) ORDER BY ((((((x'')OR(t10.c30)))AND(0.7292102652927009)))%(((((t10.c30)AND(vt1.c0)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((t10.c0) IS TRUE)  as count FROM vt1, t10 ORDER BY ((((((x'')OR(t10.c30)))AND(0.7292102652927009)))%(((((t10.c30)AND(vt1.c0)))OR(vt1.c0)))));
SELECT ALL * FROM vt1, t10 WHERE (t10.c0) ORDER BY ((((((x'')OR(t10.c30)))AND(0.7292102652927009)))%(((((t10.c30)AND(vt1.c0)))OR(vt1.c0))));
SELECT ALL COUNT(*) FROM vt0, t10 WHERE ((- (t10.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (t10.c0))) IS TRUE)  as count FROM vt0, t10);
SELECT ALL COUNT(*) FROM vt0, t10 WHERE ((- (t10.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (t10.c0))) IS TRUE)  as count FROM vt0, t10);
SELECT ALL COUNT(*) FROM vt0, t10 WHERE ((- (t10.c0)));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 CROSS JOIN t10 ON (((t10.c0 COLLATE NOCASE))==((CASE WHEN vt0.c0 THEN t10.c30 ELSE '' END))) WHERE (json_extract(t0.c87, vt1.c0) COLLATE RTRIM) ORDER BY ((t0.c0 COLLATE BINARY) NOT BETWEEN (((t10.c30) BETWEEN (NULL) AND (vt0.c0))) AND (t10.c30 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((json_extract(t0.c87, vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0 CROSS JOIN t10 ON (((t10.c0 COLLATE NOCASE))==((CASE WHEN vt0.c0 THEN t10.c30 ELSE '' END))) ORDER BY ((t0.c0 COLLATE BINARY) NOT BETWEEN (((t10.c30) BETWEEN (NULL) AND (vt0.c0))) AND (t10.c30 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 CROSS JOIN t10 ON (((t10.c0 COLLATE NOCASE))==((CASE WHEN vt0.c0 THEN t10.c30 ELSE '' END))) WHERE (json_extract(t0.c87, vt1.c0) COLLATE RTRIM) ORDER BY ((t0.c0 COLLATE BINARY) NOT BETWEEN (((t10.c30) BETWEEN (NULL) AND (vt0.c0))) AND (t10.c30 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((json_extract(t0.c87, vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0 CROSS JOIN t10 ON (((t10.c0 COLLATE NOCASE))==((CASE WHEN vt0.c0 THEN t10.c30 ELSE '' END))) ORDER BY ((t0.c0 COLLATE BINARY) NOT BETWEEN (((t10.c30) BETWEEN (NULL) AND (vt0.c0))) AND (t10.c30 COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT * FROM vt0 INNER JOIN vt1 ON ((((NOT (vt0.c0))))<(((~ (vt0.c0))))) LEFT OUTER JOIN t0 ON TRIM(DISTINCT 'd/', ((t0.c87)-(t0.c87))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((NOT (vt0.c0))))<(((~ (vt0.c0))))) LEFT OUTER JOIN t0 ON TRIM(DISTINCT 'd/', ((t0.c87)-(t0.c87))));
SELECT * FROM vt0 INNER JOIN vt1 ON ((((NOT (vt0.c0))))<(((~ (vt0.c0))))) LEFT OUTER JOIN t0 ON TRIM(DISTINCT 'd/', ((t0.c87)-(t0.c87))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((NOT (vt0.c0))))<(((~ (vt0.c0))))) LEFT OUTER JOIN t0 ON TRIM(DISTINCT 'd/', ((t0.c87)-(t0.c87))));
SELECT * FROM vt0 INNER JOIN vt1 ON ((((NOT (vt0.c0))))<(((~ (vt0.c0))))) LEFT OUTER JOIN t0 ON TRIM(DISTINCT 'd/', ((t0.c87)-(t0.c87))) WHERE (x'');
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((~ (t0.c87))) NOT BETWEEN ((t0.c0 IN ())) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c87))) NOT BETWEEN ((t0.c0 IN ())) AND (vt1.c0))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((~ (t0.c87))) NOT BETWEEN ((t0.c0 IN ())) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c87))) NOT BETWEEN ((t0.c0 IN ())) AND (vt1.c0))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((~ (t0.c87))) NOT BETWEEN ((t0.c0 IN ())) AND (vt1.c0)));
SELECT COUNT(*) FROM t10 NOT INDEXED, vt0 NATURAL JOIN vt1 WHERE (CAST(((vt0.c0)>(vt1.c0)) AS BLOB)) ORDER BY vt0.c0 DESC  NULLS FIRST, ((IFNULL(t10.c30, vt1.c0))<=(0.496443991584099)) ASC, (t10.c30 IN ('692047488', (~ (t10.c0)), vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM t10, vt0 NATURAL JOIN vt1 ORDER BY vt0.c0 DESC  NULLS FIRST, ((IFNULL(t10.c30, vt1.c0))<=(0.496443991584099)) ASC, (t10.c30 IN ('692047488', (~ (t10.c0)), vt1.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t10 NOT INDEXED, vt0 NATURAL JOIN vt1 WHERE (CAST(((vt0.c0)>(vt1.c0)) AS BLOB)) ORDER BY vt0.c0 DESC  NULLS FIRST, ((IFNULL(t10.c30, vt1.c0))<=(0.496443991584099)) ASC, (t10.c30 IN ('692047488', (~ (t10.c0)), vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM t10, vt0 NATURAL JOIN vt1 ORDER BY vt0.c0 DESC  NULLS FIRST, ((IFNULL(t10.c30, vt1.c0))<=(0.496443991584099)) ASC, (t10.c30 IN ('692047488', (~ (t10.c0)), vt1.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t10 NOT INDEXED, vt0 NATURAL JOIN vt1 WHERE (CAST(((vt0.c0)>(vt1.c0)) AS BLOB)) ORDER BY vt0.c0 DESC  NULLS FIRST, ((IFNULL(t10.c30, vt1.c0))<=(0.496443991584099)) ASC, (t10.c30 IN ('692047488', (~ (t10.c0)), vt1.c0)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t10, vt0, t0 WHERE ((+ (UNLIKELY(DISTINCT t10.c30))));
SELECT SUM(count) FROM (SELECT ALL (((+ (UNLIKELY(DISTINCT t10.c30)))) IS TRUE)  as count FROM vt1, t10, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, t10, vt0, t0 WHERE ((+ (UNLIKELY(DISTINCT t10.c30))));
SELECT SUM(count) FROM (SELECT ALL (((+ (UNLIKELY(DISTINCT t10.c30)))) IS TRUE)  as count FROM vt1, t10, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, t10, vt0, t0 WHERE ((+ (UNLIKELY(DISTINCT t10.c30))));
SELECT * FROM t0 WHERE (t0.c87);
SELECT SUM(count) FROM (SELECT ((t0.c87) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c87);
SELECT SUM(count) FROM (SELECT ((t0.c87) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c87);
SELECT * FROM vt1 INNER JOIN vt0 ON DATETIME((NOT (vt0.c0)), SQLITE_SOURCE_ID(), ((vt1.c0)%(vt0.c0))) WHERE ((CAST(vt0.c0 AS TEXT) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON DATETIME((NOT (vt0.c0)), SQLITE_SOURCE_ID(), ((vt1.c0)%(vt0.c0))));
SELECT * FROM vt1 INNER JOIN vt0 ON DATETIME((NOT (vt0.c0)), SQLITE_SOURCE_ID(), ((vt1.c0)%(vt0.c0))) WHERE ((CAST(vt0.c0 AS TEXT) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON DATETIME((NOT (vt0.c0)), SQLITE_SOURCE_ID(), ((vt1.c0)%(vt0.c0))));
SELECT * FROM vt1 INNER JOIN vt0 ON DATETIME((NOT (vt0.c0)), SQLITE_SOURCE_ID(), ((vt1.c0)%(vt0.c0))) WHERE ((CAST(vt0.c0 AS TEXT) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT * FROM t10, vt1, vt0, t0 WHERE (vt1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM t10, vt1, vt0, t0);
SELECT * FROM t10, vt1, vt0, t0 WHERE (vt1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM t10, vt1, vt0, t0);
SELECT * FROM t10, vt1, vt0, t0 WHERE (vt1.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t10 ON (+ (CAST(0Xffffffffdbeffc07 AS BLOB))) RIGHT OUTER JOIN t0 ON NULL WHERE (vt0.c0) ORDER BY CAST((~ (t0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t10 ON (+ (CAST(0xffffffffdbeffc07 AS BLOB))) RIGHT OUTER JOIN t0 ON NULL ORDER BY CAST((~ (t0.c0)) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t10 ON (+ (CAST(0Xffffffffdbeffc07 AS BLOB))) RIGHT OUTER JOIN t0 ON NULL WHERE (vt0.c0) ORDER BY CAST((~ (t0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t10 ON (+ (CAST(0xffffffffdbeffc07 AS BLOB))) RIGHT OUTER JOIN t0 ON NULL ORDER BY CAST((~ (t0.c0)) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t10 ON (+ (CAST(0Xffffffffdbeffc07 AS BLOB))) RIGHT OUTER JOIN t0 ON NULL WHERE (vt0.c0) ORDER BY CAST((~ (t0.c0)) AS NUMERIC) DESC;
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c0 IN ())) BETWEEN (CASE WHEN NULL THEN vt1.c0 END) AND (t0.c87)));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) BETWEEN (CASE WHEN NULL THEN vt1.c0 END) AND (t0.c87))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c0 IN ())) BETWEEN (CASE WHEN NULL THEN vt1.c0 END) AND (t0.c87)));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) BETWEEN (CASE WHEN NULL THEN vt1.c0 END) AND (t0.c87))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c0 IN ())) BETWEEN (CASE WHEN NULL THEN vt1.c0 END) AND (t0.c87)));
SELECT ALL * FROM t10, t0 WHERE (((0.10347056440863533)IS(CAST(t0.c87 AS TEXT)))) ORDER BY CASE NULL  WHEN ((x'') IS FALSE) THEN ((t0.c0) BETWEEN (t10.c30) AND (t0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.10347056440863533)IS(CAST(t0.c87 AS TEXT)))) IS TRUE)  as count FROM t10, t0 ORDER BY CASE NULL  WHEN ((x'') IS FALSE) THEN ((t0.c0) BETWEEN (t10.c30) AND (t0.c0)) END DESC  NULLS FIRST);
SELECT ALL * FROM t10, t0 WHERE (((0.10347056440863533)IS(CAST(t0.c87 AS TEXT)))) ORDER BY CASE NULL  WHEN ((x'') IS FALSE) THEN ((t0.c0) BETWEEN (t10.c30) AND (t0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.10347056440863533)IS(CAST(t0.c87 AS TEXT)))) IS TRUE)  as count FROM t10, t0 ORDER BY CASE NULL  WHEN ((x'') IS FALSE) THEN ((t0.c0) BETWEEN (t10.c30) AND (t0.c0)) END DESC  NULLS FIRST);
SELECT ALL * FROM t10, t0 WHERE (((0.10347056440863533)IS(CAST(t0.c87 AS TEXT)))) ORDER BY CASE NULL  WHEN ((x'') IS FALSE) THEN ((t0.c0) BETWEEN (t10.c30) AND (t0.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) ISNULL) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (0.004896576199637348) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (0X4d31891)) AS TEXT), CAST(((((vt0.c0)OR(vt0.c0)))OR('-739673858')) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.004896576199637348) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (0x4d31891)) AS TEXT), CAST(((((vt0.c0)OR(vt0.c0)))OR('-739673858')) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (0.004896576199637348) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (0X4d31891)) AS TEXT), CAST(((((vt0.c0)OR(vt0.c0)))OR('-739673858')) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.004896576199637348) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (0x4d31891)) AS TEXT), CAST(((((vt0.c0)OR(vt0.c0)))OR('-739673858')) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (0.004896576199637348) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (0X4d31891)) AS TEXT), CAST(((((vt0.c0)OR(vt0.c0)))OR('-739673858')) AS BLOB)  NULLS FIRST;
SELECT * FROM vt1 WHERE (((~ (vt1.c0)) IN ())) ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ()) ASC  NULLS FIRST, (vt1.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ()) ASC  NULLS FIRST, (vt1.c0 IN ()));
SELECT * FROM vt1 WHERE (((~ (vt1.c0)) IN ())) ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ()) ASC  NULLS FIRST, (vt1.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ()) ASC  NULLS FIRST, (vt1.c0 IN ()));
SELECT * FROM vt1 WHERE (((~ (vt1.c0)) IN ())) ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ()) ASC  NULLS FIRST, (vt1.c0 IN ());
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((TIME(t0.c0, vt0.c0, t0.c0, vt0.c0, t0.c87)) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOTNULL))) WHERE (((t0.c87 IN ()) IN ())) ORDER BY x'761b' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c87 IN ()) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((TIME(t0.c0, vt0.c0, t0.c0, vt0.c0, t0.c87)) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOTNULL))) ORDER BY x'761b' ASC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((TIME(t0.c0, vt0.c0, t0.c0, vt0.c0, t0.c87)) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOTNULL))) WHERE (((t0.c87 IN ()) IN ())) ORDER BY x'761b' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c87 IN ()) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((TIME(t0.c0, vt0.c0, t0.c0, vt0.c0, t0.c87)) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOTNULL))) ORDER BY x'761b' ASC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((TIME(t0.c0, vt0.c0, t0.c0, vt0.c0, t0.c87)) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOTNULL))) WHERE (((t0.c87 IN ()) IN ())) ORDER BY x'761b' ASC;
SELECT COUNT(*) FROM t10 INNER JOIN t0 ON (((('TRUE')AND((((('UA|\nYN')AND(t0.c0)))OR(0Xffffffffd14cfab8)))))OR(t0.c0)) WHERE (CASE CASE WHEN t0.c0 THEN t10.c0 ELSE t10.c30 END  WHEN ((t0.c87)!=(t10.c30)) THEN ((0.6774871093718389)<(t10.c30)) ELSE (NOT (t10.c30)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c0 THEN t10.c0 ELSE t10.c30 END  WHEN ((t0.c87)<>(t10.c30)) THEN ((0.6774871093718389)<(t10.c30)) ELSE (NOT (t10.c30)) END) IS TRUE)  as count FROM t10 INNER JOIN t0 ON (((('TRUE')AND((((('UA|\nYN')AND(t0.c0)))OR(0xffffffffd14cfab8)))))OR(t0.c0)));
SELECT COUNT(*) FROM t10 INNER JOIN t0 ON (((('TRUE')AND((((('UA|\nYN')AND(t0.c0)))OR(0Xffffffffd14cfab8)))))OR(t0.c0)) WHERE (CASE CASE WHEN t0.c0 THEN t10.c0 ELSE t10.c30 END  WHEN ((t0.c87)!=(t10.c30)) THEN ((0.6774871093718389)<(t10.c30)) ELSE (NOT (t10.c30)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c0 THEN t10.c0 ELSE t10.c30 END  WHEN ((t0.c87)<>(t10.c30)) THEN ((0.6774871093718389)<(t10.c30)) ELSE (NOT (t10.c30)) END) IS TRUE)  as count FROM t10 INNER JOIN t0 ON (((('TRUE')AND((((('UA|\nYN')AND(t0.c0)))OR(0xffffffffd14cfab8)))))OR(t0.c0)));
SELECT COUNT(*) FROM t10 INNER JOIN t0 ON (((('TRUE')AND((((('UA|\nYN')AND(t0.c0)))OR(0Xffffffffd14cfab8)))))OR(t0.c0)) WHERE (CASE CASE WHEN t0.c0 THEN t10.c0 ELSE t10.c30 END  WHEN ((t0.c87)!=(t10.c30)) THEN ((0.6774871093718389)<(t10.c30)) ELSE (NOT (t10.c30)) END);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON NULL CROSS JOIN t0 ON ((+ (vt0.c0)) IN ((t10.c0 IN (t10.c30)), (vt1.c0 IN ()))) RIGHT OUTER JOIN t10 ON t0.c0 WHERE ((- (((vt1.c0)>=(t0.c87))))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0)>=(t0.c87))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON NULL CROSS JOIN t0 ON ((+ (vt0.c0)) IN ((t10.c0 IN (t10.c30)), (vt1.c0 IN ()))) RIGHT OUTER JOIN t10 ON t0.c0 ORDER BY t0.c0 ASC);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON NULL CROSS JOIN t0 ON ((+ (vt0.c0)) IN ((t10.c0 IN (t10.c30)), (vt1.c0 IN ()))) RIGHT OUTER JOIN t10 ON t0.c0 WHERE ((- (((vt1.c0)>=(t0.c87))))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0)>=(t0.c87))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON NULL CROSS JOIN t0 ON ((+ (vt0.c0)) IN ((t10.c0 IN (t10.c30)), (vt1.c0 IN ()))) RIGHT OUTER JOIN t10 ON t0.c0 ORDER BY t0.c0 ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((t0.c0)OR(0.9286947521252488)))OR(vt0.c0)))AND(0.5969924811712242)))OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)OR(0.9286947521252488)))OR(vt0.c0)))AND(0.5969924811712242)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((t0.c0)OR(0.9286947521252488)))OR(vt0.c0)))AND(0.5969924811712242)))OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)OR(0.9286947521252488)))OR(vt0.c0)))AND(0.5969924811712242)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((t0.c0)OR(0.9286947521252488)))OR(vt0.c0)))AND(0.5969924811712242)))OR(vt0.c0)) COLLATE BINARY);
SELECT * FROM t0, vt0, vt1, t10 WHERE (CASE WHEN CAST(t0.c0 AS INTEGER) THEN 0.14582540653634402 END) ORDER BY ((CASE t0.c87  WHEN vt0.c0 THEN '-877457279' ELSE vt1.c0 END) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS INTEGER) THEN 0.14582540653634402 END) IS TRUE)  as count FROM t0, vt0, vt1, t10 ORDER BY ((CASE t0.c87  WHEN vt0.c0 THEN '-877457279' ELSE vt1.c0 END) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt1.c0 COLLATE NOCASE)));
SELECT * FROM t0, vt0, vt1, t10 WHERE (CASE WHEN CAST(t0.c0 AS INTEGER) THEN 0.14582540653634402 END) ORDER BY ((CASE t0.c87  WHEN vt0.c0 THEN '-877457279' ELSE vt1.c0 END) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS INTEGER) THEN 0.14582540653634402 END) IS TRUE)  as count FROM t0, vt0, vt1, t10 ORDER BY ((CASE t0.c87  WHEN vt0.c0 THEN '-877457279' ELSE vt1.c0 END) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt1.c0 COLLATE NOCASE)));
SELECT * FROM t0, vt0, vt1, t10 WHERE (CASE WHEN CAST(t0.c0 AS INTEGER) THEN 0.14582540653634402 END) ORDER BY ((CASE t0.c87  WHEN vt0.c0 THEN '-877457279' ELSE vt1.c0 END) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt1.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0, t0, t10 WHERE (json_insert(vt0.c0 COLLATE NOCASE, ((t10.c0)|(vt0.c0)), ((t10.c30)<=(vt0.c0)))) ORDER BY ((((((x'')AND(vt0.c0)))OR(t10.c0)))<=(((t10.c30) BETWEEN (t0.c0) AND (x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(vt0.c0 COLLATE NOCASE, ((t10.c0)|(vt0.c0)), ((t10.c30)<=(vt0.c0)))) IS TRUE)  as count FROM vt0, t0, t10 ORDER BY ((((((x'')AND(vt0.c0)))OR(t10.c0)))<=(((t10.c30) BETWEEN (t0.c0) AND (x''))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, t10 WHERE (json_insert(vt0.c0 COLLATE NOCASE, ((t10.c0)|(vt0.c0)), ((t10.c30)<=(vt0.c0)))) ORDER BY ((((((x'')AND(vt0.c0)))OR(t10.c0)))<=(((t10.c30) BETWEEN (t0.c0) AND (x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(vt0.c0 COLLATE NOCASE, ((t10.c0)|(vt0.c0)), ((t10.c30)<=(vt0.c0)))) IS TRUE)  as count FROM vt0, t0, t10 ORDER BY ((((((x'')AND(vt0.c0)))OR(t10.c0)))<=(((t10.c30) BETWEEN (t0.c0) AND (x''))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t10, vt0 WHERE ((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))OR((NOT (t0.c87)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))OR((NOT (t0.c87))))) IS TRUE)  as count FROM t0, t10, vt0);
SELECT ALL COUNT(*) FROM t0, t10, vt0 WHERE ((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))OR((NOT (t0.c87)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))OR((NOT (t0.c87))))) IS TRUE)  as count FROM t0, t10, vt0);
SELECT ALL COUNT(*) FROM t0, t10, vt0 WHERE ((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))OR((NOT (t0.c87)))));
SELECT * FROM t10 WHERE (CASE WHEN ((t10.c30)<(t10.c30)) THEN ((t10.c0) NOTNULL) WHEN ((t10.c30)<>(t10.c0)) THEN CASE t10.c30  WHEN t10.c30 THEN t10.c0 ELSE t10.c30 END WHEN t10.c0 THEN ((t10.c30)>(t10.c30)) ELSE ((t10.c30) BETWEEN (t10.c30) AND (t10.c0)) END) ORDER BY (~ ((- (3.77373648E8)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t10.c30)<(t10.c30)) THEN ((t10.c0) NOTNULL) WHEN ((t10.c30)<>(t10.c0)) THEN CASE t10.c30  WHEN t10.c30 THEN t10.c0 ELSE t10.c30 END WHEN t10.c0 THEN ((t10.c30)>(t10.c30)) ELSE ((t10.c30) BETWEEN (t10.c30) AND (t10.c0)) END) IS TRUE)  as count FROM t10 ORDER BY (~ ((- (3.77373648E8)))) DESC);
SELECT * FROM t10 WHERE (CASE WHEN ((t10.c30)<(t10.c30)) THEN ((t10.c0) NOTNULL) WHEN ((t10.c30)<>(t10.c0)) THEN CASE t10.c30  WHEN t10.c30 THEN t10.c0 ELSE t10.c30 END WHEN t10.c0 THEN ((t10.c30)>(t10.c30)) ELSE ((t10.c30) BETWEEN (t10.c30) AND (t10.c0)) END) ORDER BY (~ ((- (3.77373648E8)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t10.c30)<(t10.c30)) THEN ((t10.c0) NOTNULL) WHEN ((t10.c30)<>(t10.c0)) THEN CASE t10.c30  WHEN t10.c30 THEN t10.c0 ELSE t10.c30 END WHEN t10.c0 THEN ((t10.c30)>(t10.c30)) ELSE ((t10.c30) BETWEEN (t10.c30) AND (t10.c0)) END) IS TRUE)  as count FROM t10 ORDER BY (~ ((- (3.77373648E8)))) DESC);
SELECT * FROM t10 WHERE (CASE WHEN ((t10.c30)<(t10.c30)) THEN ((t10.c0) NOTNULL) WHEN ((t10.c30)<>(t10.c0)) THEN CASE t10.c30  WHEN t10.c30 THEN t10.c0 ELSE t10.c30 END WHEN t10.c0 THEN ((t10.c30)>(t10.c30)) ELSE ((t10.c30) BETWEEN (t10.c30) AND (t10.c0)) END) ORDER BY (~ ((- (3.77373648E8)))) DESC;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((('b')||(t0.c0))) NOTNULL) INNER JOIN vt1 ON vt1.c0 WHERE (HEX(DISTINCT ((vt1.c0)<>(t0.c87)))) ORDER BY ((((x'')OR(CAST(t0.c87 AS INTEGER))))AND(x'')) ASC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((vt1.c0)!=(t0.c87)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((('b')||(t0.c0))) NOTNULL) INNER JOIN vt1 ON vt1.c0 ORDER BY ((((x'')OR(CAST(t0.c87 AS INTEGER))))AND(x'')) ASC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((('b')||(t0.c0))) NOTNULL) INNER JOIN vt1 ON vt1.c0 WHERE (HEX(DISTINCT ((vt1.c0)<>(t0.c87)))) ORDER BY ((((x'')OR(CAST(t0.c87 AS INTEGER))))AND(x'')) ASC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((vt1.c0)!=(t0.c87)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((('b')||(t0.c0))) NOTNULL) INNER JOIN vt1 ON vt1.c0 ORDER BY ((((x'')OR(CAST(t0.c87 AS INTEGER))))AND(x'')) ASC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((('b')||(t0.c0))) NOTNULL) INNER JOIN vt1 ON vt1.c0 WHERE (HEX(DISTINCT ((vt1.c0)<>(t0.c87)))) ORDER BY ((((x'')OR(CAST(t0.c87 AS INTEGER))))AND(x'')) ASC;
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((~ (vt0.c0 COLLATE BINARY))) ORDER BY x'' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY x'' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((~ (vt0.c0 COLLATE BINARY))) ORDER BY x'' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY x'' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((~ (vt0.c0 COLLATE BINARY))) ORDER BY x'' COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt1, t10 WHERE (t10.c0 COLLATE RTRIM) ORDER BY (NOT (((t10.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST, QUOTE((- (vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t10.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1, t10 ORDER BY (NOT (((t10.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST, QUOTE((- (vt1.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t10 WHERE (t10.c0 COLLATE RTRIM) ORDER BY (NOT (((t10.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST, QUOTE((- (vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t10.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1, t10 ORDER BY (NOT (((t10.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST, QUOTE((- (vt1.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t10 WHERE (t10.c0 COLLATE RTRIM) ORDER BY (NOT (((t10.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST, QUOTE((- (vt1.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((('748229993') IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('748229993') IS TRUE) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((('748229993') IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('748229993') IS TRUE) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((('748229993') IS TRUE) IN ()));
SELECT * FROM t10, t0 WHERE (x'') ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t10, t0 ORDER BY x'' DESC);
SELECT * FROM t10, t0 WHERE (x'') ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t10, t0 ORDER BY x'' DESC);
SELECT * FROM t10, t0 WHERE (x'') ORDER BY x'' DESC;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST((vt0.c0 IN ()) AS BLOB) WHERE (((((CAST(vt1.c0 AS NUMERIC))OR(LIKE(vt1.c0, vt0.c0))))OR(((NULL)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS NUMERIC))OR(LIKE(vt1.c0, vt0.c0))))OR(((NULL)<=(vt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST((vt0.c0 IN ()) AS BLOB));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST((vt0.c0 IN ()) AS BLOB) WHERE (((((CAST(vt1.c0 AS NUMERIC))OR(LIKE(vt1.c0, vt0.c0))))OR(((NULL)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS NUMERIC))OR(LIKE(vt1.c0, vt0.c0))))OR(((NULL)<=(vt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST((vt0.c0 IN ()) AS BLOB));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST((vt0.c0 IN ()) AS BLOB) WHERE (((((CAST(vt1.c0 AS NUMERIC))OR(LIKE(vt1.c0, vt0.c0))))OR(((NULL)<=(vt0.c0)))));
SELECT * FROM t10, t0, vt0 WHERE (t10.c30);
SELECT SUM(count) FROM (SELECT ALL ((t10.c30) IS TRUE)  as count FROM t10, t0, vt0);
SELECT * FROM t10, t0, vt0 WHERE (t10.c30);
SELECT SUM(count) FROM (SELECT ALL ((t10.c30) IS TRUE)  as count FROM t10, t0, vt0);
SELECT * FROM t10, t0, vt0 WHERE (t10.c30);
SELECT ALL * FROM t10 WHERE (((TYPEOF(t10.c30))==(t10.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(t10.c30))=(t10.c0))) IS TRUE)  as count FROM t10);
SELECT ALL * FROM t10 WHERE (((TYPEOF(t10.c30))==(t10.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(t10.c30))=(t10.c0))) IS TRUE)  as count FROM t10);
SELECT ALL * FROM t10 WHERE (((TYPEOF(t10.c30))==(t10.c0)));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c87, t0.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, t0.c0)) AND ((t0.c0, NULL, t0.c87))) IN ()) WHERE (x'') ORDER BY ((t0.c0 COLLATE BINARY) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c87, t0.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, t0.c0)) AND ((t0.c0, NULL, t0.c87))) IN ()) ORDER BY ((t0.c0 COLLATE BINARY) NOTNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c87, t0.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, t0.c0)) AND ((t0.c0, NULL, t0.c87))) IN ()) WHERE (x'') ORDER BY ((t0.c0 COLLATE BINARY) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c87, t0.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, t0.c0)) AND ((t0.c0, NULL, t0.c87))) IN ()) ORDER BY ((t0.c0 COLLATE BINARY) NOTNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c87, t0.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, t0.c0)) AND ((t0.c0, NULL, t0.c87))) IN ()) WHERE (x'') ORDER BY ((t0.c0 COLLATE BINARY) NOTNULL);
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c87);
SELECT SUM(count) FROM (SELECT ((t0.c87) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c87);
SELECT SUM(count) FROM (SELECT ((t0.c87) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c87);
SELECT ALL COUNT(*) FROM t10, t0 WHERE (((((t10.c0 COLLATE RTRIM)OR(((((((((t0.c87)OR(t10.c0)))AND(t10.c0)))OR(t0.c87)))OR('&M 喈Gv')))))OR((((t0.c0))>=((t0.c87)))))) ORDER BY (((((t10.c0) NOT BETWEEN (t0.c87) AND (t0.c0))))>((t10.c0 COLLATE BINARY))) DESC  NULLS LAST, ((((t0.c0)%(t10.c30))) NOT BETWEEN (SUBSTR(t10.c0, t0.c87)) AND (t10.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t10.c0 COLLATE RTRIM)OR(((((((((t0.c87)OR(t10.c0)))AND(t10.c0)))OR(t0.c87)))OR('&M 喈Gv')))))OR((((t0.c0))>=((t0.c87)))))) IS TRUE)  as count FROM t10, t0 NOT INDEXED ORDER BY (((((t10.c0) NOT BETWEEN (t0.c87) AND (t0.c0))))>((t10.c0 COLLATE BINARY))) DESC  NULLS LAST, ((((t0.c0)%(t10.c30))) NOT BETWEEN (SUBSTR(t10.c0, t0.c87)) AND (t10.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t10, t0 WHERE (((((t10.c0 COLLATE RTRIM)OR(((((((((t0.c87)OR(t10.c0)))AND(t10.c0)))OR(t0.c87)))OR('&M 喈Gv')))))OR((((t0.c0))>=((t0.c87)))))) ORDER BY (((((t10.c0) NOT BETWEEN (t0.c87) AND (t0.c0))))>((t10.c0 COLLATE BINARY))) DESC  NULLS LAST, ((((t0.c0)%(t10.c30))) NOT BETWEEN (SUBSTR(t10.c0, t0.c87)) AND (t10.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t10.c0 COLLATE RTRIM)OR(((((((((t0.c87)OR(t10.c0)))AND(t10.c0)))OR(t0.c87)))OR('&M 喈Gv')))))OR((((t0.c0))>=((t0.c87)))))) IS TRUE)  as count FROM t10, t0 NOT INDEXED ORDER BY (((((t10.c0) NOT BETWEEN (t0.c87) AND (t0.c0))))>((t10.c0 COLLATE BINARY))) DESC  NULLS LAST, ((((t0.c0)%(t10.c30))) NOT BETWEEN (SUBSTR(t10.c0, t0.c87)) AND (t10.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t10, t0 WHERE (((((t10.c0 COLLATE RTRIM)OR(((((((((t0.c87)OR(t10.c0)))AND(t10.c0)))OR(t0.c87)))OR('&M 喈Gv')))))OR((((t0.c0))>=((t0.c87)))))) ORDER BY (((((t10.c0) NOT BETWEEN (t0.c87) AND (t0.c0))))>((t10.c0 COLLATE BINARY))) DESC  NULLS LAST, ((((t0.c0)%(t10.c30))) NOT BETWEEN (SUBSTR(t10.c0, t0.c87)) AND (t10.c0)) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, t0, t10 WHERE (((((x'')OR(1700126398)))AND(((((t0.c0)OR(t10.c0)))OR(t0.c87))))) ORDER BY (((t10.c30)) NOT BETWEEN ((t10.c0 COLLATE RTRIM)) AND ((t0.c87)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(1700126398)))AND(((((t0.c0)OR(t10.c0)))OR(t0.c87))))) IS TRUE)  as count FROM vt1, t0, t10 ORDER BY (((t10.c30)) NOT BETWEEN ((t10.c0 COLLATE RTRIM)) AND ((t0.c87)))  NULLS FIRST);
SELECT ALL * FROM vt1, t0, t10 WHERE (((((x'')OR(1700126398)))AND(((((t0.c0)OR(t10.c0)))OR(t0.c87))))) ORDER BY (((t10.c30)) NOT BETWEEN ((t10.c0 COLLATE RTRIM)) AND ((t0.c87)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(1700126398)))AND(((((t0.c0)OR(t10.c0)))OR(t0.c87))))) IS TRUE)  as count FROM vt1, t0, t10 ORDER BY (((t10.c30)) NOT BETWEEN ((t10.c0 COLLATE RTRIM)) AND ((t0.c87)))  NULLS FIRST);
SELECT ALL * FROM vt1, t0, t10 WHERE (((((x'')OR(1700126398)))AND(((((t0.c0)OR(t10.c0)))OR(t0.c87))))) ORDER BY (((t10.c30)) NOT BETWEEN ((t10.c0 COLLATE RTRIM)) AND ((t0.c87)))  NULLS FIRST;
SELECT * FROM t10 FULL OUTER JOIN vt1 ON ((NULLIF(vt0.c0, t10.c30))GLOB(((vt0.c0)-(NULL)))) INNER JOIN vt0 ON (+ (((((((((t10.c30)OR(t10.c30)))AND(t0.c87)))OR(vt1.c0)))AND(t0.c0)))) RIGHT OUTER JOIN t0 ON CASE WHEN LTRIM(t10.c30, t0.c0) THEN t10.c0 WHEN CASE t10.c30  WHEN vt0.c0 THEN '' END THEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((NULL))=((t0.c0))) THEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c87)) ELSE t10.c0 END WHERE ((((NOT (0Xffffffffa3654446)))+(t10.c30))) ORDER BY CAST((+ (t0.c87)) AS INTEGER), (NOT (CASE t0.c0  WHEN t10.c0 THEN t0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (0xffffffffa3654446)))+(t10.c30))) IS TRUE)  as count FROM t10 FULL OUTER JOIN vt1 ON ((NULLIF(vt0.c0, t10.c30))GLOB(((vt0.c0)-(NULL)))) INNER JOIN vt0 ON (+ (((((((((t10.c30)OR(t10.c30)))AND(t0.c87)))OR(vt1.c0)))AND(t0.c0)))) RIGHT OUTER JOIN t0 ON CASE WHEN LTRIM(t10.c30, t0.c0) THEN t10.c0 WHEN CASE t10.c30  WHEN vt0.c0 THEN '' END THEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((NULL))=((t0.c0))) THEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c87)) ELSE t10.c0 END ORDER BY CAST((+ (t0.c87)) AS INTEGER), (NOT (CASE t0.c0  WHEN t10.c0 THEN t0.c0 END))  NULLS FIRST);
SELECT * FROM t10 FULL OUTER JOIN vt1 ON ((NULLIF(vt0.c0, t10.c30))GLOB(((vt0.c0)-(NULL)))) INNER JOIN vt0 ON (+ (((((((((t10.c30)OR(t10.c30)))AND(t0.c87)))OR(vt1.c0)))AND(t0.c0)))) RIGHT OUTER JOIN t0 ON CASE WHEN LTRIM(t10.c30, t0.c0) THEN t10.c0 WHEN CASE t10.c30  WHEN vt0.c0 THEN '' END THEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((NULL))=((t0.c0))) THEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c87)) ELSE t10.c0 END WHERE ((((NOT (0Xffffffffa3654446)))+(t10.c30))) ORDER BY CAST((+ (t0.c87)) AS INTEGER), (NOT (CASE t0.c0  WHEN t10.c0 THEN t0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (0xffffffffa3654446)))+(t10.c30))) IS TRUE)  as count FROM t10 FULL OUTER JOIN vt1 ON ((NULLIF(vt0.c0, t10.c30))GLOB(((vt0.c0)-(NULL)))) INNER JOIN vt0 ON (+ (((((((((t10.c30)OR(t10.c30)))AND(t0.c87)))OR(vt1.c0)))AND(t0.c0)))) RIGHT OUTER JOIN t0 ON CASE WHEN LTRIM(t10.c30, t0.c0) THEN t10.c0 WHEN CASE t10.c30  WHEN vt0.c0 THEN '' END THEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((NULL))=((t0.c0))) THEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c87)) ELSE t10.c0 END ORDER BY CAST((+ (t0.c87)) AS INTEGER), (NOT (CASE t0.c0  WHEN t10.c0 THEN t0.c0 END))  NULLS FIRST);
SELECT ALL * FROM t10, vt0, vt1, t0 WHERE ((((((vt0.c0, t0.c0, t10.c0))>((vt0.c0, t0.c0, t10.c30)))) NOT NULL)) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)IS(CAST(t10.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, t0.c0, t10.c0))>((vt0.c0, t0.c0, t10.c30)))) NOT NULL)) IS TRUE)  as count FROM t10, vt0, vt1, t0 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)IS(CAST(t10.c0 AS REAL))) ASC);
SELECT ALL * FROM t10, vt0, vt1, t0 WHERE ((((((vt0.c0, t0.c0, t10.c0))>((vt0.c0, t0.c0, t10.c30)))) NOT NULL)) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)IS(CAST(t10.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, t0.c0, t10.c0))>((vt0.c0, t0.c0, t10.c30)))) NOT NULL)) IS TRUE)  as count FROM t10, vt0, vt1, t0 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)IS(CAST(t10.c0 AS REAL))) ASC);
SELECT ALL * FROM t10, vt0, vt1, t0 WHERE ((((((vt0.c0, t0.c0, t10.c0))>((vt0.c0, t0.c0, t10.c30)))) NOT NULL)) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)IS(CAST(t10.c0 AS REAL))) ASC;
SELECT * FROM t0, t10, vt1, vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c87 AS INTEGER)))  NULLS FIRST, (~ (vt1.c0)) COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM t0, t10, vt1, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c87 AS INTEGER)))  NULLS FIRST, (~ (vt1.c0)) COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM t0, t10, vt1, vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c87 AS INTEGER)))  NULLS FIRST, (~ (vt1.c0)) COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM t0, t10, vt1, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c87 AS INTEGER)))  NULLS FIRST, (~ (vt1.c0)) COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM t0, t10, vt1, vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c87 AS INTEGER)))  NULLS FIRST, (~ (vt1.c0)) COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t10 LEFT OUTER JOIN t0 ON CAST(((t0.c87) BETWEEN (t0.c0) AND (t10.c30)) AS INTEGER) WHERE (((((t10.c0)AND(((('-1983536127'))>((t0.c0))))))AND((~ (t10.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t10.c0)AND(((('-1983536127'))>((t0.c0))))))AND((~ (t10.c0))))) IS TRUE)  as count FROM t10 LEFT OUTER JOIN t0 ON CAST(((t0.c87) BETWEEN (t0.c0) AND (t10.c30)) AS INTEGER));
SELECT ALL COUNT(*) FROM t10 LEFT OUTER JOIN t0 ON CAST(((t0.c87) BETWEEN (t0.c0) AND (t10.c30)) AS INTEGER) WHERE (((((t10.c0)AND(((('-1983536127'))>((t0.c0))))))AND((~ (t10.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t10.c0)AND(((('-1983536127'))>((t0.c0))))))AND((~ (t10.c0))))) IS TRUE)  as count FROM t10 LEFT OUTER JOIN t0 ON CAST(((t0.c87) BETWEEN (t0.c0) AND (t10.c30)) AS INTEGER));
SELECT ALL COUNT(*) FROM t10 LEFT OUTER JOIN t0 ON CAST(((t0.c87) BETWEEN (t0.c0) AND (t10.c30)) AS INTEGER) WHERE (((((t10.c0)AND(((('-1983536127'))>((t0.c0))))))AND((~ (t10.c0)))));
SELECT ALL COUNT(*) FROM vt1, t10, vt0 WHERE ((((t10.c30, t10.c30, t10.c0, vt1.c0, '0.12479982290927549')) BETWEEN ((CAST(vt1.c0 AS TEXT), ((((((((t10.c0)OR(t10.c30)))OR(t10.c0)))AND(t10.c0)))AND(vt1.c0)), ((vt0.c0) NOT NULL), LAST_INSERT_ROWID(), CAST(t10.c30 AS TEXT))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(t10.c0)))OR(t10.c30)))AND(t10.c0)), (vt0.c0 IN ()), (- (t10.c0)), ((NULL)<(t10.c30)), LIKELIHOOD(DISTINCT t10.c0, 0.8795430148080562))))) ORDER BY CAST(((t10.c0)IS NOT(vt0.c0)) AS REAL) DESC  NULLS LAST, ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t10.c30, t10.c30, t10.c0, vt1.c0, '0.12479982290927549')) BETWEEN ((CAST(vt1.c0 AS TEXT), ((((((((t10.c0)OR(t10.c30)))OR(t10.c0)))AND(t10.c0)))AND(vt1.c0)), ((vt0.c0) NOT NULL), LAST_INSERT_ROWID(), CAST(t10.c30 AS TEXT))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(t10.c0)))OR(t10.c30)))AND(t10.c0)), (vt0.c0 IN ()), (- (t10.c0)), ((NULL)<(t10.c30)), LIKELIHOOD(DISTINCT t10.c0, 0.8795430148080562))))) IS TRUE)  as count FROM vt1, t10, vt0 ORDER BY CAST(((t10.c0)IS NOT(vt0.c0)) AS REAL) DESC  NULLS LAST, ''  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t10, vt0 WHERE ((((t10.c30, t10.c30, t10.c0, vt1.c0, '0.12479982290927549')) BETWEEN ((CAST(vt1.c0 AS TEXT), ((((((((t10.c0)OR(t10.c30)))OR(t10.c0)))AND(t10.c0)))AND(vt1.c0)), ((vt0.c0) NOT NULL), LAST_INSERT_ROWID(), CAST(t10.c30 AS TEXT))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(t10.c0)))OR(t10.c30)))AND(t10.c0)), (vt0.c0 IN ()), (- (t10.c0)), ((NULL)<(t10.c30)), LIKELIHOOD(DISTINCT t10.c0, 0.8795430148080562))))) ORDER BY CAST(((t10.c0)IS NOT(vt0.c0)) AS REAL) DESC  NULLS LAST, ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t10.c30, t10.c30, t10.c0, vt1.c0, '0.12479982290927549')) BETWEEN ((CAST(vt1.c0 AS TEXT), ((((((((t10.c0)OR(t10.c30)))OR(t10.c0)))AND(t10.c0)))AND(vt1.c0)), ((vt0.c0) NOT NULL), LAST_INSERT_ROWID(), CAST(t10.c30 AS TEXT))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(t10.c0)))OR(t10.c30)))AND(t10.c0)), (vt0.c0 IN ()), (- (t10.c0)), ((NULL)<(t10.c30)), LIKELIHOOD(DISTINCT t10.c0, 0.8795430148080562))))) IS TRUE)  as count FROM vt1, t10, vt0 ORDER BY CAST(((t10.c0)IS NOT(vt0.c0)) AS REAL) DESC  NULLS LAST, ''  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t10, vt0 WHERE ((((t10.c30, t10.c30, t10.c0, vt1.c0, '0.12479982290927549')) BETWEEN ((CAST(vt1.c0 AS TEXT), ((((((((t10.c0)OR(t10.c30)))OR(t10.c0)))AND(t10.c0)))AND(vt1.c0)), ((vt0.c0) NOT NULL), LAST_INSERT_ROWID(), CAST(t10.c30 AS TEXT))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(t10.c0)))OR(t10.c30)))AND(t10.c0)), (vt0.c0 IN ()), (- (t10.c0)), ((NULL)<(t10.c30)), LIKELIHOOD(DISTINCT t10.c0, 0.8795430148080562))))) ORDER BY CAST(((t10.c0)IS NOT(vt0.c0)) AS REAL) DESC  NULLS LAST, ''  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN (('-370528038')IS(vt1.c0)) THEN ((vt1.c0)AND(vt1.c0)) END) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN (('-370528038')IS(vt1.c0)) THEN ((vt1.c0)AND(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN (('-370528038')IS(vt1.c0)) THEN ((vt1.c0)AND(vt1.c0)) END) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN (('-370528038')IS(vt1.c0)) THEN ((vt1.c0)AND(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN (('-370528038')IS(vt1.c0)) THEN ((vt1.c0)AND(vt1.c0)) END) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM t10 WHERE (((CASE 0.7809674212352812  WHEN t10.c30 THEN t10.c0 END) BETWEEN (t10.c0 COLLATE BINARY) AND (((t10.c30) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CASE 0.7809674212352812  WHEN t10.c30 THEN t10.c0 END) BETWEEN (t10.c0 COLLATE BINARY) AND (((t10.c30) IS TRUE)))) IS TRUE)  as count FROM t10);
SELECT COUNT(*) FROM t10 WHERE (((CASE 0.7809674212352812  WHEN t10.c30 THEN t10.c0 END) BETWEEN (t10.c0 COLLATE BINARY) AND (((t10.c30) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CASE 0.7809674212352812  WHEN t10.c30 THEN t10.c0 END) BETWEEN (t10.c0 COLLATE BINARY) AND (((t10.c30) IS TRUE)))) IS TRUE)  as count FROM t10);
SELECT COUNT(*) FROM t10 WHERE (((CASE 0.7809674212352812  WHEN t10.c30 THEN t10.c0 END) BETWEEN (t10.c0 COLLATE BINARY) AND (((t10.c30) IS TRUE))));
SELECT ALL COUNT(*) FROM vt1, t10 WHERE ((((vt1.c0 IN ())) NOT NULL)) ORDER BY (+ ((((t10.c0, t10.c30, '-1983536127')) BETWEEN ((vt1.c0, t10.c0, t10.c0)) AND ((t10.c0, vt1.c0, vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt1, t10 ORDER BY (+ ((((t10.c0, t10.c30, '-1983536127')) BETWEEN ((vt1.c0, t10.c0, t10.c0)) AND ((t10.c0, vt1.c0, vt1.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t10 WHERE ((((vt1.c0 IN ())) NOT NULL)) ORDER BY (+ ((((t10.c0, t10.c30, '-1983536127')) BETWEEN ((vt1.c0, t10.c0, t10.c0)) AND ((t10.c0, vt1.c0, vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt1, t10 ORDER BY (+ ((((t10.c0, t10.c30, '-1983536127')) BETWEEN ((vt1.c0, t10.c0, t10.c0)) AND ((t10.c0, vt1.c0, vt1.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t10 WHERE ((((vt1.c0 IN ())) NOT NULL)) ORDER BY (+ ((((t10.c0, t10.c30, '-1983536127')) BETWEEN ((vt1.c0, t10.c0, t10.c0)) AND ((t10.c0, vt1.c0, vt1.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (rtreenode(vt1.c0, vt1.c0)) ORDER BY vt1.c0 ASC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))=(((vt1.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rtreenode(vt1.c0, vt1.c0)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))==(((vt1.c0) NOTNULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (rtreenode(vt1.c0, vt1.c0)) ORDER BY vt1.c0 ASC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))=(((vt1.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rtreenode(vt1.c0, vt1.c0)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))==(((vt1.c0) NOTNULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (rtreenode(vt1.c0, vt1.c0)) ORDER BY vt1.c0 ASC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))=(((vt1.c0) NOTNULL))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t10, t0, vt1, vt0 WHERE (((1950835647)LIKE(DATE(t10.c30, '745168321', vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((1950835647)LIKE(DATE(t10.c30, '745168321', vt1.c0)))) IS TRUE)  as count FROM t10, t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t10, t0, vt1, vt0 WHERE (((1950835647)LIKE(DATE(t10.c30, '745168321', vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((1950835647)LIKE(DATE(t10.c30, '745168321', vt1.c0)))) IS TRUE)  as count FROM t10, t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t10, t0, vt1, vt0 WHERE (((1950835647)LIKE(DATE(t10.c30, '745168321', vt1.c0))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((t0.c0)OR(t0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt1.c0)GLOB(vt1.c0))) AND (((((((((vt1.c0)AND(-293782734)))AND(0xffffffff9736c32f)))AND(0.36723366792108547)))AND(t0.c87)))) INNER JOIN t0 ON ((((t0.c87) NOT NULL)) IS TRUE) WHERE (((((t0.c87)IS(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c87)IS(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((t0.c0)OR(t0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt1.c0)GLOB(vt1.c0))) AND (((((((((vt1.c0)AND(-293782734)))AND(0xffffffff9736c32f)))AND(0.36723366792108547)))AND(t0.c87)))) INNER JOIN t0 ON ((((t0.c87) NOT NULL)) IS TRUE));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((t0.c0)OR(t0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt1.c0)GLOB(vt1.c0))) AND (((((((((vt1.c0)AND(-293782734)))AND(0xffffffff9736c32f)))AND(0.36723366792108547)))AND(t0.c87)))) INNER JOIN t0 ON ((((t0.c87) NOT NULL)) IS TRUE) WHERE (((((t0.c87)IS(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c87)IS(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((t0.c0)OR(t0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt1.c0)GLOB(vt1.c0))) AND (((((((((vt1.c0)AND(-293782734)))AND(0xffffffff9736c32f)))AND(0.36723366792108547)))AND(t0.c87)))) INNER JOIN t0 ON ((((t0.c87) NOT NULL)) IS TRUE));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c0, t0.c87, vt0.c0))>((vt0.c0, x'', t0.c87)))) BETWEEN ((t0.c87 IN (t0.c87, vt0.c0))) AND (((vt0.c0)%(t0.c0))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((((((t0.c0, t0.c87, vt0.c0))>((vt0.c0, x'', t0.c87)))) BETWEEN ((t0.c87 IN (t0.c87, vt0.c0))) AND (((vt0.c0)%(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY NULL);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c0, t0.c87, vt0.c0))>((vt0.c0, x'', t0.c87)))) BETWEEN ((t0.c87 IN (t0.c87, vt0.c0))) AND (((vt0.c0)%(t0.c0))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((((((t0.c0, t0.c87, vt0.c0))>((vt0.c0, x'', t0.c87)))) BETWEEN ((t0.c87 IN (t0.c87, vt0.c0))) AND (((vt0.c0)%(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY NULL);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c0, t0.c87, vt0.c0))>((vt0.c0, x'', t0.c87)))) BETWEEN ((t0.c87 IN (t0.c87, vt0.c0))) AND (((vt0.c0)%(t0.c0))))) ORDER BY NULL;
SELECT COUNT(*) FROM vt0, t10 WHERE ('1377794471') ORDER BY ((CASE t10.c30  WHEN t10.c30 THEN t10.c30 WHEN t10.c0 THEN t10.c0 WHEN vt0.c0 THEN t10.c0 ELSE t10.c30 END)<=(((t10.c30)LIKE(t10.c30))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1377794471') IS TRUE)  as count FROM vt0, t10 ORDER BY ((CASE t10.c30  WHEN t10.c30 THEN t10.c30 WHEN t10.c0 THEN t10.c0 WHEN vt0.c0 THEN t10.c0 ELSE t10.c30 END)<=(((t10.c30)LIKE(t10.c30))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t10 WHERE ('1377794471') ORDER BY ((CASE t10.c30  WHEN t10.c30 THEN t10.c30 WHEN t10.c0 THEN t10.c0 WHEN vt0.c0 THEN t10.c0 ELSE t10.c30 END)<=(((t10.c30)LIKE(t10.c30))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1377794471') IS TRUE)  as count FROM vt0, t10 ORDER BY ((CASE t10.c30  WHEN t10.c30 THEN t10.c30 WHEN t10.c0 THEN t10.c0 WHEN vt0.c0 THEN t10.c0 ELSE t10.c30 END)<=(((t10.c30)LIKE(t10.c30))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t10 WHERE ('1377794471') ORDER BY ((CASE t10.c30  WHEN t10.c30 THEN t10.c30 WHEN t10.c0 THEN t10.c0 WHEN vt0.c0 THEN t10.c0 ELSE t10.c30 END)<=(((t10.c30)LIKE(t10.c30))))  NULLS FIRST;
SELECT * FROM t10, vt1 WHERE ((~ (QUOTE(vt1.c0)))) ORDER BY CASE ((t10.c30) BETWEEN (t10.c0) AND ('*z'))  WHEN x'' THEN vt1.c0 COLLATE NOCASE END DESC, 0Xffffffffbce9a96b  NULLS FIRST, ((((t10.c30) BETWEEN (t10.c30) AND (vt1.c0)))&(CAST(t10.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (QUOTE(vt1.c0)))) IS TRUE)  as count FROM t10, vt1 ORDER BY CASE ((t10.c30) BETWEEN (t10.c0) AND ('*z'))  WHEN x'' THEN vt1.c0 COLLATE NOCASE END DESC, 0xffffffffbce9a96b  NULLS FIRST, ((((t10.c30) BETWEEN (t10.c30) AND (vt1.c0)))&(CAST(t10.c0 AS NUMERIC))) DESC);
SELECT * FROM t10, vt1 WHERE ((~ (QUOTE(vt1.c0)))) ORDER BY CASE ((t10.c30) BETWEEN (t10.c0) AND ('*z'))  WHEN x'' THEN vt1.c0 COLLATE NOCASE END DESC, 0Xffffffffbce9a96b  NULLS FIRST, ((((t10.c30) BETWEEN (t10.c30) AND (vt1.c0)))&(CAST(t10.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (QUOTE(vt1.c0)))) IS TRUE)  as count FROM t10, vt1 ORDER BY CASE ((t10.c30) BETWEEN (t10.c0) AND ('*z'))  WHEN x'' THEN vt1.c0 COLLATE NOCASE END DESC, 0xffffffffbce9a96b  NULLS FIRST, ((((t10.c30) BETWEEN (t10.c30) AND (vt1.c0)))&(CAST(t10.c0 AS NUMERIC))) DESC);
SELECT * FROM t10, vt1 WHERE ((~ (QUOTE(vt1.c0)))) ORDER BY CASE ((t10.c30) BETWEEN (t10.c0) AND ('*z'))  WHEN x'' THEN vt1.c0 COLLATE NOCASE END DESC, 0Xffffffffbce9a96b  NULLS FIRST, ((((t10.c30) BETWEEN (t10.c30) AND (vt1.c0)))&(CAST(t10.c0 AS NUMERIC))) DESC;
SELECT * FROM t10, vt1 NATURAL JOIN t0 WHERE ((((t0.c0))<((vt1.c0))) COLLATE BINARY) ORDER BY (((t0.c87)) NOT BETWEEN ((((t0.c0)IS(t10.c0)))) AND (((((vt1.c0)) BETWEEN ((t0.c87)) AND ((t10.c30))))))  NULLS FIRST, (- (t10.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))<((vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM t10, vt1 NATURAL JOIN t0 ORDER BY (((t0.c87)) NOT BETWEEN ((((t0.c0)IS(t10.c0)))) AND (((((vt1.c0)) BETWEEN ((t0.c87)) AND ((t10.c30))))))  NULLS FIRST, (- (t10.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM t10, vt1 NATURAL JOIN t0 WHERE ((((t0.c0))<((vt1.c0))) COLLATE BINARY) ORDER BY (((t0.c87)) NOT BETWEEN ((((t0.c0)IS(t10.c0)))) AND (((((vt1.c0)) BETWEEN ((t0.c87)) AND ((t10.c30))))))  NULLS FIRST, (- (t10.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))<((vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM t10, vt1 NATURAL JOIN t0 ORDER BY (((t0.c87)) NOT BETWEEN ((((t0.c0)IS(t10.c0)))) AND (((((vt1.c0)) BETWEEN ((t0.c87)) AND ((t10.c30))))))  NULLS FIRST, (- (t10.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM t10, vt1 NATURAL JOIN t0 WHERE ((((t0.c0))<((vt1.c0))) COLLATE BINARY) ORDER BY (((t0.c87)) NOT BETWEEN ((((t0.c0)IS(t10.c0)))) AND (((((vt1.c0)) BETWEEN ((t0.c87)) AND ((t10.c30))))))  NULLS FIRST, (- (t10.c0 COLLATE RTRIM))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS REAL)) ORDER BY (((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT * FROM vt0, vt1 WHERE (CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS REAL)) ORDER BY (((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT * FROM vt0, vt1 WHERE (CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS REAL)) ORDER BY (((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM vt0, vt1, t10 WHERE (vt0.c0) ORDER BY CASE NULL  WHEN ((vt0.c0)%(vt0.c0)) THEN (((vt1.c0, vt0.c0, vt0.c0))<((t10.c30, t10.c0, NULL))) END  NULLS FIRST, (NOT (vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1, t10 ORDER BY CASE NULL  WHEN ((vt0.c0)%(vt0.c0)) THEN (((vt1.c0, vt0.c0, vt0.c0))<((t10.c30, t10.c0, NULL))) END  NULLS FIRST, (NOT (vt0.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, t10 WHERE (vt0.c0) ORDER BY CASE NULL  WHEN ((vt0.c0)%(vt0.c0)) THEN (((vt1.c0, vt0.c0, vt0.c0))<((t10.c30, t10.c0, NULL))) END  NULLS FIRST, (NOT (vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1, t10 ORDER BY CASE NULL  WHEN ((vt0.c0)%(vt0.c0)) THEN (((vt1.c0, vt0.c0, vt0.c0))<((t10.c30, t10.c0, NULL))) END  NULLS FIRST, (NOT (vt0.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, t10 WHERE (vt0.c0) ORDER BY CASE NULL  WHEN ((vt0.c0)%(vt0.c0)) THEN (((vt1.c0, vt0.c0, vt0.c0))<((t10.c30, t10.c0, NULL))) END  NULLS FIRST, (NOT (vt0.c0)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((- (((((x'')AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))+(((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((x'')AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))+(((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((- (((((x'')AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))+(((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((x'')AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))+(((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((- (((((x'')AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))+(((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))));
SELECT COUNT(*) FROM vt0, t10 WHERE ((NOT (((t10.c0) NOT BETWEEN (t10.c30) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t10.c0) NOT BETWEEN (t10.c30) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t10);
SELECT COUNT(*) FROM vt0, t10 WHERE ((NOT (((t10.c0) NOT BETWEEN (t10.c30) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t10.c0) NOT BETWEEN (t10.c30) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t10);
SELECT COUNT(*) FROM vt0, t10 WHERE ((NOT (((t10.c0) NOT BETWEEN (t10.c30) AND (vt0.c0)))));
SELECT ALL * FROM t10 WHERE ((((((t10.c30, NULL, t10.c30)) BETWEEN ((t10.c30, t10.c30, t10.c0)) AND ((t10.c0, t10.c0, t10.c30))))%(((((t10.c30)AND(t10.c30)))AND(t10.c30)))));
SELECT SUM(count) FROM (SELECT (((((((t10.c30, NULL, t10.c30)) BETWEEN ((t10.c30, t10.c30, t10.c0)) AND ((t10.c0, t10.c0, t10.c30))))%(((((t10.c30)AND(t10.c30)))AND(t10.c30))))) IS TRUE)  as count FROM t10);
SELECT ALL * FROM t10 WHERE ((((((t10.c30, NULL, t10.c30)) BETWEEN ((t10.c30, t10.c30, t10.c0)) AND ((t10.c0, t10.c0, t10.c30))))%(((((t10.c30)AND(t10.c30)))AND(t10.c30)))));
SELECT SUM(count) FROM (SELECT (((((((t10.c30, NULL, t10.c30)) BETWEEN ((t10.c30, t10.c30, t10.c0)) AND ((t10.c0, t10.c0, t10.c30))))%(((((t10.c30)AND(t10.c30)))AND(t10.c30))))) IS TRUE)  as count FROM t10);
SELECT ALL * FROM t10 WHERE ((((((t10.c30, NULL, t10.c30)) BETWEEN ((t10.c30, t10.c30, t10.c0)) AND ((t10.c0, t10.c0, t10.c30))))%(((((t10.c30)AND(t10.c30)))AND(t10.c30)))));
SELECT ALL * FROM t10, t0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM t10, t0);
SELECT ALL * FROM t10, t0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM t10, t0);
SELECT ALL * FROM t10, t0 WHERE (CAST(NULL AS NUMERIC));
SELECT ALL * FROM t0, t10 WHERE (t0.c87) ORDER BY '1673885681';
SELECT SUM(count) FROM (SELECT ((t0.c87) IS TRUE)  as count FROM t0, t10 ORDER BY '1673885681');
SELECT ALL * FROM t0, t10 WHERE (t0.c87) ORDER BY '1673885681';
SELECT SUM(count) FROM (SELECT ((t0.c87) IS TRUE)  as count FROM t0, t10 ORDER BY '1673885681');
SELECT ALL * FROM t0, t10 WHERE (t0.c87) ORDER BY '1673885681';
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM t10, vt0, t0 WHERE (t10.c0);
SELECT SUM(count) FROM (SELECT ALL ((t10.c0) IS TRUE)  as count FROM t10, vt0, t0);
SELECT ALL COUNT(*) FROM t10, vt0, t0 WHERE (t10.c0);
SELECT SUM(count) FROM (SELECT ALL ((t10.c0) IS TRUE)  as count FROM t10, vt0, t0);
SELECT ALL COUNT(*) FROM t10, vt0, t0 WHERE (t10.c0);
SELECT COUNT(*) FROM vt1 WHERE ((+ (vt1.c0 COLLATE RTRIM))) ORDER BY UPPER(DISTINCT vt1.c0 COLLATE RTRIM) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY UPPER(DISTINCT vt1.c0 COLLATE RTRIM) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((+ (vt1.c0 COLLATE RTRIM))) ORDER BY UPPER(DISTINCT vt1.c0 COLLATE RTRIM) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY UPPER(DISTINCT vt1.c0 COLLATE RTRIM) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((+ (vt1.c0 COLLATE RTRIM))) ORDER BY UPPER(DISTINCT vt1.c0 COLLATE RTRIM) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t10, vt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)OR(t10.c30)))OR(t0.c87))) NOT NULL) WHERE (((t0.c0)>>(t10.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c0)>>(t10.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt1, t10, vt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)OR(t10.c30)))OR(t0.c87))) NOT NULL));
SELECT ALL COUNT(*) FROM vt1, t10, vt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)OR(t10.c30)))OR(t0.c87))) NOT NULL) WHERE (((t0.c0)>>(t10.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c0)>>(t10.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt1, t10, vt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)OR(t10.c30)))OR(t0.c87))) NOT NULL));
SELECT ALL COUNT(*) FROM vt1, t10, vt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)OR(t10.c30)))OR(t0.c87))) NOT NULL) WHERE (((t0.c0)>>(t10.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT * FROM t10, vt1 WHERE ((~ ((vt1.c0 IN ())))) ORDER BY rtreenode(NULL, CAST(vt1.c0 AS INTEGER)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM t10, vt1 ORDER BY rtreenode(NULL, CAST(vt1.c0 AS INTEGER)) ASC  NULLS LAST);
SELECT * FROM t10, vt1 WHERE ((~ ((vt1.c0 IN ())))) ORDER BY rtreenode(NULL, CAST(vt1.c0 AS INTEGER)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM t10, vt1 ORDER BY rtreenode(NULL, CAST(vt1.c0 AS INTEGER)) ASC  NULLS LAST);
SELECT * FROM t10, vt1 WHERE ((~ ((vt1.c0 IN ())))) ORDER BY rtreenode(NULL, CAST(vt1.c0 AS INTEGER)) ASC  NULLS LAST;
SELECT * FROM t0, vt0 WHERE ((((x'' IN ()))OR(((((((((((((vt0.c0)AND(NULL)))OR(t0.c87)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c87)))));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ()))OR(((((((((((((vt0.c0)AND(NULL)))OR(t0.c87)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c87))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((x'' IN ()))OR(((((((((((((vt0.c0)AND(NULL)))OR(t0.c87)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c87)))));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ()))OR(((((((((((((vt0.c0)AND(NULL)))OR(t0.c87)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c87))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((x'' IN ()))OR(((((((((((((vt0.c0)AND(NULL)))OR(t0.c87)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c87)))));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((vt1.c0) IS TRUE) IN ((vt0.c0 IN (vt1.c0)))) INNER JOIN vt1 ON (((((((vt1.c0)AND(vt1.c0)))AND(t0.c0))))>((t0.c87 COLLATE BINARY))) WHERE (((((vt1.c0)IS NOT(t0.c87))) IS TRUE)) ORDER BY ((t0.c87) IS TRUE) COLLATE BINARY  NULLS FIRST, ((((t0.c0) IS TRUE))*((+ (t0.c87)))) DESC  NULLS FIRST, CASE WHEN ((t0.c87)!=(vt0.c0)) THEN t0.c87 WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)) THEN ((vt1.c0)=(vt1.c0)) WHEN (+ (t0.c0)) THEN ((t0.c0) ISNULL) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS NOT(t0.c87))) IS TRUE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((vt1.c0) IS TRUE) IN ((vt0.c0 IN (vt1.c0)))) INNER JOIN vt1 ON (((((((vt1.c0)AND(vt1.c0)))AND(t0.c0))))>((t0.c87 COLLATE BINARY))) ORDER BY ((t0.c87) IS TRUE) COLLATE BINARY  NULLS FIRST, ((((t0.c0) IS TRUE))*((+ (t0.c87)))) DESC  NULLS FIRST, CASE WHEN ((t0.c87)!=(vt0.c0)) THEN t0.c87 WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)) THEN ((vt1.c0)=(vt1.c0)) WHEN (+ (t0.c0)) THEN ((t0.c0) ISNULL) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((vt1.c0) IS TRUE) IN ((vt0.c0 IN (vt1.c0)))) INNER JOIN vt1 ON (((((((vt1.c0)AND(vt1.c0)))AND(t0.c0))))>((t0.c87 COLLATE BINARY))) WHERE (((((vt1.c0)IS NOT(t0.c87))) IS TRUE)) ORDER BY ((t0.c87) IS TRUE) COLLATE BINARY  NULLS FIRST, ((((t0.c0) IS TRUE))*((+ (t0.c87)))) DESC  NULLS FIRST, CASE WHEN ((t0.c87)!=(vt0.c0)) THEN t0.c87 WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)) THEN ((vt1.c0)=(vt1.c0)) WHEN (+ (t0.c0)) THEN ((t0.c0) ISNULL) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS NOT(t0.c87))) IS TRUE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((vt1.c0) IS TRUE) IN ((vt0.c0 IN (vt1.c0)))) INNER JOIN vt1 ON (((((((vt1.c0)AND(vt1.c0)))AND(t0.c0))))>((t0.c87 COLLATE BINARY))) ORDER BY ((t0.c87) IS TRUE) COLLATE BINARY  NULLS FIRST, ((((t0.c0) IS TRUE))*((+ (t0.c87)))) DESC  NULLS FIRST, CASE WHEN ((t0.c87)!=(vt0.c0)) THEN t0.c87 WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)) THEN ((vt1.c0)=(vt1.c0)) WHEN (+ (t0.c0)) THEN ((t0.c0) ISNULL) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC);
SELECT * FROM t10, t0 WHERE (((((((((((((((((((((t10.c30)AND(t0.c87)))OR(t10.c0)))AND(t10.c30)))AND(t0.c0)))AND(t0.c0)))OR(CAST(t0.c87 AS BLOB))))OR(((t10.c0)GLOB(t0.c87)))))AND(t10.c0)))OR((t0.c87 IN ()))))OR(CASE t0.c0  WHEN t0.c0 THEN t10.c30 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((t10.c30)AND(t0.c87)))OR(t10.c0)))AND(t10.c30)))AND(t0.c0)))AND(t0.c0)))OR(CAST(t0.c87 AS BLOB))))OR(((t10.c0)GLOB(t0.c87)))))AND(t10.c0)))OR((t0.c87 IN ()))))OR(CASE t0.c0  WHEN t0.c0 THEN t10.c30 END))) IS TRUE)  as count FROM t10, t0);
SELECT * FROM t10, t0 WHERE (((((((((((((((((((((t10.c30)AND(t0.c87)))OR(t10.c0)))AND(t10.c30)))AND(t0.c0)))AND(t0.c0)))OR(CAST(t0.c87 AS BLOB))))OR(((t10.c0)GLOB(t0.c87)))))AND(t10.c0)))OR((t0.c87 IN ()))))OR(CASE t0.c0  WHEN t0.c0 THEN t10.c30 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((t10.c30)AND(t0.c87)))OR(t10.c0)))AND(t10.c30)))AND(t0.c0)))AND(t0.c0)))OR(CAST(t0.c87 AS BLOB))))OR(((t10.c0)GLOB(t0.c87)))))AND(t10.c0)))OR((t0.c87 IN ()))))OR(CASE t0.c0  WHEN t0.c0 THEN t10.c30 END))) IS TRUE)  as count FROM t10, t0);
SELECT * FROM t10, t0 WHERE (((((((((((((((((((((t10.c30)AND(t0.c87)))OR(t10.c0)))AND(t10.c30)))AND(t0.c0)))AND(t0.c0)))OR(CAST(t0.c87 AS BLOB))))OR(((t10.c0)GLOB(t0.c87)))))AND(t10.c0)))OR((t0.c87 IN ()))))OR(CASE t0.c0  WHEN t0.c0 THEN t10.c30 END)));
SELECT COUNT(*) FROM t10, t0, vt0, vt1 WHERE (((vt1.c0) NOTNULL) COLLATE BINARY) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t10, t0, vt0, vt1 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM t10, t0, vt0, vt1 WHERE (((vt1.c0) NOTNULL) COLLATE BINARY) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t10, t0, vt0, vt1 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM t10, t0, vt0, vt1 WHERE (((vt1.c0) NOTNULL) COLLATE BINARY) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM vt1, t10 WHERE ((+ (t10.c0)) COLLATE RTRIM) ORDER BY (((NOT (t10.c0)))IS NOT((((t10.c30))>=(('-2006784361')))));
SELECT SUM(count) FROM (SELECT ALL (((+ (t10.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t10 ORDER BY (((NOT (t10.c0)))IS NOT((((t10.c30))>=(('-2006784361'))))));
SELECT ALL * FROM vt1, t10 WHERE ((+ (t10.c0)) COLLATE RTRIM) ORDER BY (((NOT (t10.c0)))IS NOT((((t10.c30))>=(('-2006784361')))));
SELECT SUM(count) FROM (SELECT ALL (((+ (t10.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t10 ORDER BY (((NOT (t10.c0)))IS NOT((((t10.c30))>=(('-2006784361'))))));
SELECT ALL * FROM vt1, t10 WHERE ((+ (t10.c0)) COLLATE RTRIM) ORDER BY (((NOT (t10.c0)))IS NOT((((t10.c30))>=(('-2006784361')))));
SELECT * FROM t10, vt1, vt0 WHERE (CAST((((t10.c30)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) AS TEXT)) ORDER BY t10.c30  NULLS LAST, (((((((((~ (vt0.c0)))OR(CASE 2.124204896E9  WHEN vt0.c0 THEN vt0.c0 WHEN t10.c30 THEN t10.c30 WHEN t10.c0 THEN t10.c0 ELSE vt1.c0 END)))AND(CASE WHEN t10.c0 THEN vt1.c0 END)))AND(((t10.c0)|(vt0.c0)))))AND(0.9416928041648562)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((t10.c30)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) AS TEXT)) IS TRUE)  as count FROM t10, vt1, vt0 ORDER BY t10.c30  NULLS LAST, (((((((((~ (vt0.c0)))OR(CASE 2.124204896E9  WHEN vt0.c0 THEN vt0.c0 WHEN t10.c30 THEN t10.c30 WHEN t10.c0 THEN t10.c0 ELSE vt1.c0 END)))AND(CASE WHEN t10.c0 THEN vt1.c0 END)))AND(((t10.c0)|(vt0.c0)))))AND(0.9416928041648562)) ASC  NULLS LAST);
SELECT * FROM t10, vt1, vt0 WHERE (CAST((((t10.c30)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) AS TEXT)) ORDER BY t10.c30  NULLS LAST, (((((((((~ (vt0.c0)))OR(CASE 2.124204896E9  WHEN vt0.c0 THEN vt0.c0 WHEN t10.c30 THEN t10.c30 WHEN t10.c0 THEN t10.c0 ELSE vt1.c0 END)))AND(CASE WHEN t10.c0 THEN vt1.c0 END)))AND(((t10.c0)|(vt0.c0)))))AND(0.9416928041648562)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((t10.c30)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) AS TEXT)) IS TRUE)  as count FROM t10, vt1, vt0 ORDER BY t10.c30  NULLS LAST, (((((((((~ (vt0.c0)))OR(CASE 2.124204896E9  WHEN vt0.c0 THEN vt0.c0 WHEN t10.c30 THEN t10.c30 WHEN t10.c0 THEN t10.c0 ELSE vt1.c0 END)))AND(CASE WHEN t10.c0 THEN vt1.c0 END)))AND(((t10.c0)|(vt0.c0)))))AND(0.9416928041648562)) ASC  NULLS LAST);
SELECT * FROM t10, vt1, vt0 WHERE (CAST((((t10.c30)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) AS TEXT)) ORDER BY t10.c30  NULLS LAST, (((((((((~ (vt0.c0)))OR(CASE 2.124204896E9  WHEN vt0.c0 THEN vt0.c0 WHEN t10.c30 THEN t10.c30 WHEN t10.c0 THEN t10.c0 ELSE vt1.c0 END)))AND(CASE WHEN t10.c0 THEN vt1.c0 END)))AND(((t10.c0)|(vt0.c0)))))AND(0.9416928041648562)) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))OR((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))OR((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))OR((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))OR((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))OR((NOT (vt0.c0)))));
SELECT * FROM t10 INNER JOIN vt0 ON ((((t10.c0) NOT BETWEEN ('-1656251150') AND (t10.c0))) NOT BETWEEN (((t10.c0) ISNULL)) AND (vt0.c0 COLLATE NOCASE)) WHERE (((((('') BETWEEN (vt0.c0) AND (NULL)), (NOT (t10.c30)), (~ (vt0.c0))))<>((((t10.c0)IS NOT(vt0.c0)), (+ (vt0.c0)), (t10.c30 IN (t10.c30, t10.c30))))));
SELECT SUM(count) FROM (SELECT ALL ((((((('') BETWEEN (vt0.c0) AND (NULL)), (NOT (t10.c30)), (~ (vt0.c0))))<>((((t10.c0)IS NOT(vt0.c0)), (+ (vt0.c0)), (t10.c30 IN (t10.c30, t10.c30)))))) IS TRUE)  as count FROM t10 INNER JOIN vt0 ON ((((t10.c0) NOT BETWEEN ('-1656251150') AND (t10.c0))) NOT BETWEEN (((t10.c0) ISNULL)) AND (vt0.c0 COLLATE NOCASE)));
SELECT * FROM t10 INNER JOIN vt0 ON ((((t10.c0) NOT BETWEEN ('-1656251150') AND (t10.c0))) NOT BETWEEN (((t10.c0) ISNULL)) AND (vt0.c0 COLLATE NOCASE)) WHERE (((((('') BETWEEN (vt0.c0) AND (NULL)), (NOT (t10.c30)), (~ (vt0.c0))))<>((((t10.c0)IS NOT(vt0.c0)), (+ (vt0.c0)), (t10.c30 IN (t10.c30, t10.c30))))));
SELECT SUM(count) FROM (SELECT ALL ((((((('') BETWEEN (vt0.c0) AND (NULL)), (NOT (t10.c30)), (~ (vt0.c0))))<>((((t10.c0)IS NOT(vt0.c0)), (+ (vt0.c0)), (t10.c30 IN (t10.c30, t10.c30)))))) IS TRUE)  as count FROM t10 INNER JOIN vt0 ON ((((t10.c0) NOT BETWEEN ('-1656251150') AND (t10.c0))) NOT BETWEEN (((t10.c0) ISNULL)) AND (vt0.c0 COLLATE NOCASE)));
SELECT * FROM t10 INNER JOIN vt0 ON ((((t10.c0) NOT BETWEEN ('-1656251150') AND (t10.c0))) NOT BETWEEN (((t10.c0) ISNULL)) AND (vt0.c0 COLLATE NOCASE)) WHERE (((((('') BETWEEN (vt0.c0) AND (NULL)), (NOT (t10.c30)), (~ (vt0.c0))))<>((((t10.c0)IS NOT(vt0.c0)), (+ (vt0.c0)), (t10.c30 IN (t10.c30, t10.c30))))));
SELECT * FROM t0, t10 WHERE (((t10.c30) BETWEEN (t10.c30) AND (t10.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t10.c30) BETWEEN (t10.c30) AND (t10.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, t10);
SELECT * FROM t0, t10 WHERE (((t10.c30) BETWEEN (t10.c30) AND (t10.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t10.c30) BETWEEN (t10.c30) AND (t10.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, t10);
SELECT * FROM t0, t10 WHERE (((t10.c30) BETWEEN (t10.c30) AND (t10.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i64, t10 WHERE (((t10.c30 COLLATE BINARY)LIKE(((t0.c87)IS NOT(t10.c0))))) ORDER BY ((((CASE t0.c87  WHEN 'N	' THEN t10.c30 END)OR(((t10.c30) BETWEEN (t0.c87) AND (t0.c87)))))OR((t0.c0 IN (vt0.c0, t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t10.c30 COLLATE BINARY)LIKE(((t0.c87)IS NOT(t10.c0))))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i64, t10 ORDER BY ((((CASE t0.c87  WHEN 'N	' THEN t10.c30 END)OR(((t10.c30) BETWEEN (t0.c87) AND (t0.c87)))))OR((t0.c0 IN (vt0.c0, t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i64, t10 WHERE (((t10.c30 COLLATE BINARY)LIKE(((t0.c87)IS NOT(t10.c0))))) ORDER BY ((((CASE t0.c87  WHEN 'N	' THEN t10.c30 END)OR(((t10.c30) BETWEEN (t0.c87) AND (t0.c87)))))OR((t0.c0 IN (vt0.c0, t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t10.c30 COLLATE BINARY)LIKE(((t0.c87)IS NOT(t10.c0))))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i64, t10 ORDER BY ((((CASE t0.c87  WHEN 'N	' THEN t10.c30 END)OR(((t10.c30) BETWEEN (t0.c87) AND (t0.c87)))))OR((t0.c0 IN (vt0.c0, t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t10, t0 NOT INDEXED WHERE (CAST((((t10.c30))>((t0.c87))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t10.c30))>((t0.c87))) AS REAL)) IS TRUE)  as count FROM t10, t0);
SELECT COUNT(*) FROM t10, t0 NOT INDEXED WHERE (CAST((((t10.c30))>((t0.c87))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t10.c30))>((t0.c87))) AS REAL)) IS TRUE)  as count FROM t10, t0);
SELECT COUNT(*) FROM t10, t0 NOT INDEXED WHERE (CAST((((t10.c30))>((t0.c87))) AS REAL));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON CAST(t0.c87 AS BLOB) WHERE ((((~ (vt1.c0)))IS NOT(((vt1.c0) NOT BETWEEN (t0.c87) AND (t0.c87)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))IS NOT(((vt1.c0) NOT BETWEEN (t0.c87) AND (t0.c87))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CAST(t0.c87 AS BLOB));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON CAST(t0.c87 AS BLOB) WHERE ((((~ (vt1.c0)))IS NOT(((vt1.c0) NOT BETWEEN (t0.c87) AND (t0.c87)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))IS NOT(((vt1.c0) NOT BETWEEN (t0.c87) AND (t0.c87))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CAST(t0.c87 AS BLOB));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON CAST(t0.c87 AS BLOB) WHERE ((((~ (vt1.c0)))IS NOT(((vt1.c0) NOT BETWEEN (t0.c87) AND (t0.c87)))));
SELECT ALL * FROM vt0, vt1, t10 WHERE ((((t10.c0, t10.c0, vt1.c0)) NOT BETWEEN ((NULL, t10.c0, vt1.c0)) AND ((x'b671', t10.c0, vt1.c0))) COLLATE RTRIM) ORDER BY (JULIANDAY(t10.c0, vt0.c0, t10.c0) IN (t10.c0)), SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t10.c0, t10.c0, vt1.c0)) NOT BETWEEN ((NULL, t10.c0, vt1.c0)) AND ((x'b671', t10.c0, vt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, t10 ORDER BY (JULIANDAY(t10.c0, vt0.c0, t10.c0) IN (t10.c0)), SQLITE_SOURCE_ID()  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t10 WHERE ((((t10.c0, t10.c0, vt1.c0)) NOT BETWEEN ((NULL, t10.c0, vt1.c0)) AND ((x'b671', t10.c0, vt1.c0))) COLLATE RTRIM) ORDER BY (JULIANDAY(t10.c0, vt0.c0, t10.c0) IN (t10.c0)), SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t10.c0, t10.c0, vt1.c0)) NOT BETWEEN ((NULL, t10.c0, vt1.c0)) AND ((x'b671', t10.c0, vt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, t10 ORDER BY (JULIANDAY(t10.c0, vt0.c0, t10.c0) IN (t10.c0)), SQLITE_SOURCE_ID()  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t10 WHERE ((((t10.c0, t10.c0, vt1.c0)) NOT BETWEEN ((NULL, t10.c0, vt1.c0)) AND ((x'b671', t10.c0, vt1.c0))) COLLATE RTRIM) ORDER BY (JULIANDAY(t10.c0, vt0.c0, t10.c0) IN (t10.c0)), SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT * FROM vt0, vt1, t10 WHERE (vt1.c0) ORDER BY CASE ((vt0.c0)>>(t10.c30))  WHEN ((t10.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (t10.c0 IN ()) END DESC  NULLS LAST, (CASE WHEN t10.c0 THEN vt1.c0 WHEN vt0.c0 THEN t10.c0 WHEN '*w}F' THEN t10.c0 ELSE vt1.c0 END IN ()), (((t10.c0)) NOT BETWEEN ((x'441ed744')) AND ((NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, t10 ORDER BY CASE ((vt0.c0)>>(t10.c30))  WHEN ((t10.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (t10.c0 IN ()) END DESC  NULLS LAST, (CASE WHEN t10.c0 THEN vt1.c0 WHEN vt0.c0 THEN t10.c0 WHEN '*w}F' THEN t10.c0 ELSE vt1.c0 END IN ()), (((t10.c0)) NOT BETWEEN ((x'441ed744')) AND ((NULL)))  NULLS FIRST);
SELECT * FROM vt0, vt1, t10 WHERE (vt1.c0) ORDER BY CASE ((vt0.c0)>>(t10.c30))  WHEN ((t10.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (t10.c0 IN ()) END DESC  NULLS LAST, (CASE WHEN t10.c0 THEN vt1.c0 WHEN vt0.c0 THEN t10.c0 WHEN '*w}F' THEN t10.c0 ELSE vt1.c0 END IN ()), (((t10.c0)) NOT BETWEEN ((x'441ed744')) AND ((NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, t10 ORDER BY CASE ((vt0.c0)>>(t10.c30))  WHEN ((t10.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (t10.c0 IN ()) END DESC  NULLS LAST, (CASE WHEN t10.c0 THEN vt1.c0 WHEN vt0.c0 THEN t10.c0 WHEN '*w}F' THEN t10.c0 ELSE vt1.c0 END IN ()), (((t10.c0)) NOT BETWEEN ((x'441ed744')) AND ((NULL)))  NULLS FIRST);
SELECT * FROM vt0, vt1, t10 WHERE (vt1.c0) ORDER BY CASE ((vt0.c0)>>(t10.c30))  WHEN ((t10.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (t10.c0 IN ()) END DESC  NULLS LAST, (CASE WHEN t10.c0 THEN vt1.c0 WHEN vt0.c0 THEN t10.c0 WHEN '*w}F' THEN t10.c0 ELSE vt1.c0 END IN ()), (((t10.c0)) NOT BETWEEN ((x'441ed744')) AND ((NULL)))  NULLS FIRST;
SELECT COUNT(*) FROM t10 WHERE ((((t10.c30) ISNULL) IN ())) ORDER BY x'', (+ (CAST(t10.c30 AS REAL)))  NULLS LAST, CASE WHEN (((t10.c0)) BETWEEN (('-398523082')) AND ((t10.c0))) THEN CASE WHEN t10.c0 THEN t10.c30 WHEN t10.c30 THEN t10.c0 WHEN '''' THEN t10.c30 END WHEN ((t10.c30) BETWEEN (t10.c0) AND (t10.c0)) THEN x'' COLLATE NOCASE WHEN ((t10.c0)+(NULL)) THEN t10.c30 END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t10.c30) ISNULL) IN ())) IS TRUE)  as count FROM t10 ORDER BY x'', (+ (CAST(t10.c30 AS REAL)))  NULLS LAST, CASE WHEN (((t10.c0)) BETWEEN (('-398523082')) AND ((t10.c0))) THEN CASE WHEN t10.c0 THEN t10.c30 WHEN t10.c30 THEN t10.c0 WHEN '''' THEN t10.c30 END WHEN ((t10.c30) BETWEEN (t10.c0) AND (t10.c0)) THEN x'' COLLATE NOCASE WHEN ((t10.c0)+(NULL)) THEN t10.c30 END ASC);
SELECT COUNT(*) FROM t10 WHERE ((((t10.c30) ISNULL) IN ())) ORDER BY x'', (+ (CAST(t10.c30 AS REAL)))  NULLS LAST, CASE WHEN (((t10.c0)) BETWEEN (('-398523082')) AND ((t10.c0))) THEN CASE WHEN t10.c0 THEN t10.c30 WHEN t10.c30 THEN t10.c0 WHEN '''' THEN t10.c30 END WHEN ((t10.c30) BETWEEN (t10.c0) AND (t10.c0)) THEN x'' COLLATE NOCASE WHEN ((t10.c0)+(NULL)) THEN t10.c30 END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t10.c30) ISNULL) IN ())) IS TRUE)  as count FROM t10 ORDER BY x'', (+ (CAST(t10.c30 AS REAL)))  NULLS LAST, CASE WHEN (((t10.c0)) BETWEEN (('-398523082')) AND ((t10.c0))) THEN CASE WHEN t10.c0 THEN t10.c30 WHEN t10.c30 THEN t10.c0 WHEN '''' THEN t10.c30 END WHEN ((t10.c30) BETWEEN (t10.c0) AND (t10.c0)) THEN x'' COLLATE NOCASE WHEN ((t10.c0)+(NULL)) THEN t10.c30 END ASC);
SELECT COUNT(*) FROM t10 WHERE ((((t10.c30) ISNULL) IN ())) ORDER BY x'', (+ (CAST(t10.c30 AS REAL)))  NULLS LAST, CASE WHEN (((t10.c0)) BETWEEN (('-398523082')) AND ((t10.c0))) THEN CASE WHEN t10.c0 THEN t10.c30 WHEN t10.c30 THEN t10.c0 WHEN '''' THEN t10.c30 END WHEN ((t10.c30) BETWEEN (t10.c0) AND (t10.c0)) THEN x'' COLLATE NOCASE WHEN ((t10.c0)+(NULL)) THEN t10.c30 END ASC;
SELECT ALL * FROM t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ()) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ()) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE COLLATE BINARY);
SELECT ALL COUNT(*) FROM t10 WHERE ((((t10.c30 IN ())) NOT BETWEEN ((t10.c30 IN ())) AND (NULLIF(t10.c0, t10.c30)))) ORDER BY CASE WHEN (NOT (0.9632531999892626)) THEN ((((t10.c0)AND(0.9173651812575344)))OR(t10.c0)) END;
SELECT SUM(count) FROM (SELECT (((((t10.c30 IN ())) NOT BETWEEN ((t10.c30 IN ())) AND (NULLIF(t10.c0, t10.c30)))) IS TRUE)  as count FROM t10 ORDER BY CASE WHEN (NOT (0.9632531999892626)) THEN ((((t10.c0)AND(0.9173651812575344)))OR(t10.c0)) END);
SELECT ALL COUNT(*) FROM t10 WHERE ((((t10.c30 IN ())) NOT BETWEEN ((t10.c30 IN ())) AND (NULLIF(t10.c0, t10.c30)))) ORDER BY CASE WHEN (NOT (0.9632531999892626)) THEN ((((t10.c0)AND(0.9173651812575344)))OR(t10.c0)) END;
SELECT SUM(count) FROM (SELECT (((((t10.c30 IN ())) NOT BETWEEN ((t10.c30 IN ())) AND (NULLIF(t10.c0, t10.c30)))) IS TRUE)  as count FROM t10 ORDER BY CASE WHEN (NOT (0.9632531999892626)) THEN ((((t10.c0)AND(0.9173651812575344)))OR(t10.c0)) END);
SELECT ALL COUNT(*) FROM t10 WHERE ((((t10.c30 IN ())) NOT BETWEEN ((t10.c30 IN ())) AND (NULLIF(t10.c0, t10.c30)))) ORDER BY CASE WHEN (NOT (0.9632531999892626)) THEN ((((t10.c0)AND(0.9173651812575344)))OR(t10.c0)) END;
SELECT * FROM t0, vt1, vt0, t10 WHERE ((+ (((vt0.c0)<(vt0.c0))))) ORDER BY CASE TYPEOF(t10.c30)  WHEN (vt0.c0 IN ()) THEN 0.15050397890398826 WHEN json_array_length(t0.c0, t0.c87) THEN '' WHEN NULLIF(x'', vt0.c0) THEN t0.c0 WHEN ((((t0.c87)AND(NULL)))AND(t10.c0)) THEN '9223372036854775807' WHEN (vt0.c0 IN ()) THEN t0.c87 COLLATE BINARY ELSE (+ (t0.c87)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, t10 ORDER BY CASE TYPEOF(t10.c30)  WHEN (vt0.c0 IN ()) THEN 0.15050397890398826 WHEN json_array_length(t0.c0, t0.c87) THEN '' WHEN NULLIF(x'', vt0.c0) THEN t0.c0 WHEN ((((t0.c87)AND(NULL)))AND(t10.c0)) THEN '9223372036854775807' WHEN (vt0.c0 IN ()) THEN t0.c87 COLLATE BINARY ELSE (+ (t0.c87)) END ASC  NULLS FIRST);
SELECT * FROM t0, vt1, vt0, t10 WHERE ((+ (((vt0.c0)<(vt0.c0))))) ORDER BY CASE TYPEOF(t10.c30)  WHEN (vt0.c0 IN ()) THEN 0.15050397890398826 WHEN json_array_length(t0.c0, t0.c87) THEN '' WHEN NULLIF(x'', vt0.c0) THEN t0.c0 WHEN ((((t0.c87)AND(NULL)))AND(t10.c0)) THEN '9223372036854775807' WHEN (vt0.c0 IN ()) THEN t0.c87 COLLATE BINARY ELSE (+ (t0.c87)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, t10 ORDER BY CASE TYPEOF(t10.c30)  WHEN (vt0.c0 IN ()) THEN 0.15050397890398826 WHEN json_array_length(t0.c0, t0.c87) THEN '' WHEN NULLIF(x'', vt0.c0) THEN t0.c0 WHEN ((((t0.c87)AND(NULL)))AND(t10.c0)) THEN '9223372036854775807' WHEN (vt0.c0 IN ()) THEN t0.c87 COLLATE BINARY ELSE (+ (t0.c87)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, t10 WHERE (((t10.c0) NOT NULL)) ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((t10.c30)+(vt1.c0)))), ((((((t10.c30)GLOB(t10.c0)))AND(((t0.c87) BETWEEN (x'') AND (t10.c0)))))AND(((t0.c87)<>(t0.c87)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t10.c0) NOT NULL)) IS TRUE)  as count FROM vt0, t0, vt1, t10 ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((t10.c30)+(vt1.c0)))), ((((((t10.c30)GLOB(t10.c0)))AND(((t0.c87) BETWEEN (x'') AND (t10.c0)))))AND(((t0.c87)<>(t0.c87)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, t10 WHERE (((t10.c0) NOT NULL)) ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((t10.c30)+(vt1.c0)))), ((((((t10.c30)GLOB(t10.c0)))AND(((t0.c87) BETWEEN (x'') AND (t10.c0)))))AND(((t0.c87)<>(t0.c87)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t10.c0) NOT NULL)) IS TRUE)  as count FROM vt0, t0, vt1, t10 ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((t10.c30)+(vt1.c0)))), ((((((t10.c30)GLOB(t10.c0)))AND(((t0.c87) BETWEEN (x'') AND (t10.c0)))))AND(((t0.c87)<>(t0.c87)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, t10 WHERE (((t10.c0) NOT NULL)) ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((t10.c30)+(vt1.c0)))), ((((((t10.c30)GLOB(t10.c0)))AND(((t0.c87) BETWEEN (x'') AND (t10.c0)))))AND(((t0.c87)<>(t0.c87)))) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((vt1.c0 IN ()))))OR(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((-158686094) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), CASE WHEN ((x'')<(vt0.c0)) THEN ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) ELSE UNLIKELY('285685063') END ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((vt1.c0 IN ()))))OR(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((-158686094) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), CASE WHEN ((x'')<(vt0.c0)) THEN ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) ELSE UNLIKELY('285685063') END ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((vt1.c0 IN ()))))OR(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((-158686094) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), CASE WHEN ((x'')<(vt0.c0)) THEN ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) ELSE UNLIKELY('285685063') END ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((vt1.c0 IN ()))))OR(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((-158686094) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), CASE WHEN ((x'')<(vt0.c0)) THEN ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) ELSE UNLIKELY('285685063') END ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((vt1.c0 IN ()))))OR(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((-158686094) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), CASE WHEN ((x'')<(vt0.c0)) THEN ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) ELSE UNLIKELY('285685063') END ASC;
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0 COLLATE RTRIM  WHEN (t0.c87 IN (t0.c0)) THEN (((t0.c0))==((t0.c0))) WHEN ((NULL)!=(t0.c87)) THEN t0.c0 WHEN (t0.c0 IN ()) THEN ((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((((t0.c0)AND(t0.c0)))OR(x'')) END) ORDER BY ((((((t0.c0) ISNULL))AND(LIKELIHOOD(DISTINCT t0.c0, 0.5621864587042399))))OR(((0.3370375627035438) NOT NULL))) DESC  NULLS FIRST, ((((((((IFNULL(DISTINCT t0.c0, t0.c0))OR(0.7962990191279233)))AND(((t0.c87) BETWEEN (t0.c87) AND (t0.c87)))))OR((t0.c87 IN ()))))AND((t0.c0 IN ())))  NULLS FIRST, ((((-901279972)AND(((t0.c87) NOT BETWEEN (t0.c87) AND (t0.c0)))))AND(((((t0.c87)AND(t0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE t0.c0 COLLATE RTRIM  WHEN (t0.c87 IN (t0.c0)) THEN (((t0.c0))==((t0.c0))) WHEN ((NULL)<>(t0.c87)) THEN t0.c0 WHEN (t0.c0 IN ()) THEN ((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((((t0.c0)AND(t0.c0)))OR(x'')) END) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0) ISNULL))AND(LIKELIHOOD(DISTINCT t0.c0, 0.5621864587042399))))OR(((0.3370375627035438) NOT NULL))) DESC  NULLS FIRST, ((((((((IFNULL(DISTINCT t0.c0, t0.c0))OR(0.7962990191279233)))AND(((t0.c87) BETWEEN (t0.c87) AND (t0.c87)))))OR((t0.c87 IN ()))))AND((t0.c0 IN ())))  NULLS FIRST, ((((-901279972)AND(((t0.c87) NOT BETWEEN (t0.c87) AND (t0.c0)))))AND(((((t0.c87)AND(t0.c0)))OR(t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0 COLLATE RTRIM  WHEN (t0.c87 IN (t0.c0)) THEN (((t0.c0))==((t0.c0))) WHEN ((NULL)!=(t0.c87)) THEN t0.c0 WHEN (t0.c0 IN ()) THEN ((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((((t0.c0)AND(t0.c0)))OR(x'')) END) ORDER BY ((((((t0.c0) ISNULL))AND(LIKELIHOOD(DISTINCT t0.c0, 0.5621864587042399))))OR(((0.3370375627035438) NOT NULL))) DESC  NULLS FIRST, ((((((((IFNULL(DISTINCT t0.c0, t0.c0))OR(0.7962990191279233)))AND(((t0.c87) BETWEEN (t0.c87) AND (t0.c87)))))OR((t0.c87 IN ()))))AND((t0.c0 IN ())))  NULLS FIRST, ((((-901279972)AND(((t0.c87) NOT BETWEEN (t0.c87) AND (t0.c0)))))AND(((((t0.c87)AND(t0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE t0.c0 COLLATE RTRIM  WHEN (t0.c87 IN (t0.c0)) THEN (((t0.c0))==((t0.c0))) WHEN ((NULL)<>(t0.c87)) THEN t0.c0 WHEN (t0.c0 IN ()) THEN ((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((((t0.c0)AND(t0.c0)))OR(x'')) END) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0) ISNULL))AND(LIKELIHOOD(DISTINCT t0.c0, 0.5621864587042399))))OR(((0.3370375627035438) NOT NULL))) DESC  NULLS FIRST, ((((((((IFNULL(DISTINCT t0.c0, t0.c0))OR(0.7962990191279233)))AND(((t0.c87) BETWEEN (t0.c87) AND (t0.c87)))))OR((t0.c87 IN ()))))AND((t0.c0 IN ())))  NULLS FIRST, ((((-901279972)AND(((t0.c87) NOT BETWEEN (t0.c87) AND (t0.c0)))))AND(((((t0.c87)AND(t0.c0)))OR(t0.c0)))));
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM t10, vt0 FULL OUTER JOIN t0 ON ((((t0.c87)&(t10.c30)))>(NULL)) WHERE ((((~ (t0.c87)))||((((t0.c0)) NOT BETWEEN ((t0.c87)) AND ((t10.c30))))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c87)))||((((t0.c0)) NOT BETWEEN ((t0.c87)) AND ((t10.c30)))))) IS TRUE)  as count FROM t10, vt0 FULL OUTER JOIN t0 ON ((((t0.c87)&(t10.c30)))>(NULL)));
SELECT ALL COUNT(*) FROM t10, vt0 FULL OUTER JOIN t0 ON ((((t0.c87)&(t10.c30)))>(NULL)) WHERE ((((~ (t0.c87)))||((((t0.c0)) NOT BETWEEN ((t0.c87)) AND ((t10.c30))))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c87)))||((((t0.c0)) NOT BETWEEN ((t0.c87)) AND ((t10.c30)))))) IS TRUE)  as count FROM t10, vt0 FULL OUTER JOIN t0 ON ((((t0.c87)&(t10.c30)))>(NULL)));
SELECT ALL COUNT(*) FROM t10, vt0 FULL OUTER JOIN t0 ON ((((t0.c87)&(t10.c30)))>(NULL)) WHERE ((((~ (t0.c87)))||((((t0.c0)) NOT BETWEEN ((t0.c87)) AND ((t10.c30))))));
SELECT COUNT(*) FROM vt0, t10 WHERE (((t10.c30)GLOB(t10.c0)) COLLATE RTRIM) ORDER BY t10.c30 DESC;
SELECT SUM(count) FROM (SELECT ((((t10.c30)GLOB(t10.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t10 ORDER BY t10.c30 DESC);
SELECT COUNT(*) FROM vt0, t10 WHERE (((t10.c30)GLOB(t10.c0)) COLLATE RTRIM) ORDER BY t10.c30 DESC;
SELECT SUM(count) FROM (SELECT ((((t10.c30)GLOB(t10.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t10 ORDER BY t10.c30 DESC);
SELECT COUNT(*) FROM vt0, t10 WHERE (((t10.c30)GLOB(t10.c0)) COLLATE RTRIM) ORDER BY t10.c30 DESC;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (~ (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE (((x'')==(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((x'')==(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (~ (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (~ (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE (((x'')==(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((x'')==(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (~ (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (~ (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE (((x'')==(vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0, t10 WHERE (((t10.c30)&(t0.c0)) COLLATE NOCASE) ORDER BY CASE WHEN json_object(t0.c87, t10.c30, t0.c0, t10.c30) THEN ((t10.c30)GLOB(t10.c30)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t10.c30)&(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, t10 ORDER BY CASE WHEN json_object(t0.c87, t10.c30, t0.c0, t10.c30) THEN ((t10.c30)GLOB(t10.c30)) END  NULLS FIRST);
SELECT ALL * FROM t0, t10 WHERE (((t10.c30)&(t0.c0)) COLLATE NOCASE) ORDER BY CASE WHEN json_object(t0.c87, t10.c30, t0.c0, t10.c30) THEN ((t10.c30)GLOB(t10.c30)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t10.c30)&(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, t10 ORDER BY CASE WHEN json_object(t0.c87, t10.c30, t0.c0, t10.c30) THEN ((t10.c30)GLOB(t10.c30)) END  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON ((((((((CASE WHEN vt1.c0 THEN '0.8807125102727974' WHEN t0.c87 THEN '-+sxPN''' WHEN t0.c0 THEN t0.c87 ELSE t0.c0 END)AND(CAST(vt1.c0 AS TEXT))))OR(x'')))OR(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE WHEN t0.c87 THEN t0.c0 END)) WHERE (CAST(((t0.c87) NOTNULL) AS INTEGER)) ORDER BY (((vt1.c0 IN ()))||(CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c87) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((((((((CASE WHEN vt1.c0 THEN '0.8807125102727974' WHEN t0.c87 THEN '-+sxPN''' WHEN t0.c0 THEN t0.c87 ELSE t0.c0 END)AND(CAST(vt1.c0 AS TEXT))))OR(x'')))OR(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE WHEN t0.c87 THEN t0.c0 END)) ORDER BY (((vt1.c0 IN ()))||(CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON ((((((((CASE WHEN vt1.c0 THEN '0.8807125102727974' WHEN t0.c87 THEN '-+sxPN''' WHEN t0.c0 THEN t0.c87 ELSE t0.c0 END)AND(CAST(vt1.c0 AS TEXT))))OR(x'')))OR(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE WHEN t0.c87 THEN t0.c0 END)) WHERE (CAST(((t0.c87) NOTNULL) AS INTEGER)) ORDER BY (((vt1.c0 IN ()))||(CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c87) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((((((((CASE WHEN vt1.c0 THEN '0.8807125102727974' WHEN t0.c87 THEN '-+sxPN''' WHEN t0.c0 THEN t0.c87 ELSE t0.c0 END)AND(CAST(vt1.c0 AS TEXT))))OR(x'')))OR(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE WHEN t0.c87 THEN t0.c0 END)) ORDER BY (((vt1.c0 IN ()))||(CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON ((((((((CASE WHEN vt1.c0 THEN '0.8807125102727974' WHEN t0.c87 THEN '-+sxPN''' WHEN t0.c0 THEN t0.c87 ELSE t0.c0 END)AND(CAST(vt1.c0 AS TEXT))))OR(x'')))OR(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE WHEN t0.c87 THEN t0.c0 END)) WHERE (CAST(((t0.c87) NOTNULL) AS INTEGER)) ORDER BY (((vt1.c0 IN ()))||(CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT * FROM t0 INDEXED BY i64 WHERE (((((t0.c87)IS(t0.c87)))-(((((t0.c0)OR(t0.c87)))OR(t0.c87))))) ORDER BY (+ ((t0.c0 IN ()))) DESC  NULLS LAST, ((((t0.c87) NOT BETWEEN (t0.c87) AND (t0.c87))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c87)IS(t0.c87)))-(((((t0.c0)OR(t0.c87)))OR(t0.c87))))) IS TRUE)  as count FROM t0 INDEXED BY i64 ORDER BY (+ ((t0.c0 IN ()))) DESC  NULLS LAST, ((((t0.c87) NOT BETWEEN (t0.c87) AND (t0.c87))) IS TRUE) DESC);
SELECT * FROM t0 INDEXED BY i64 WHERE (((((t0.c87)IS(t0.c87)))-(((((t0.c0)OR(t0.c87)))OR(t0.c87))))) ORDER BY (+ ((t0.c0 IN ()))) DESC  NULLS LAST, ((((t0.c87) NOT BETWEEN (t0.c87) AND (t0.c87))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c87)IS(t0.c87)))-(((((t0.c0)OR(t0.c87)))OR(t0.c87))))) IS TRUE)  as count FROM t0 INDEXED BY i64 ORDER BY (+ ((t0.c0 IN ()))) DESC  NULLS LAST, ((((t0.c87) NOT BETWEEN (t0.c87) AND (t0.c87))) IS TRUE) DESC);
SELECT ALL * FROM vt1, vt0, t10 WHERE ((+ (vt0.c0)) COLLATE NOCASE) ORDER BY CAST((((('')OR(vt1.c0)))AND(t10.c0)) AS NUMERIC) DESC  NULLS FIRST, TRIM(DISTINCT DATE(t10.c30, t10.c30, t10.c0))  NULLS LAST, CASE t10.c0  WHEN (- (vt1.c0)) THEN ((((t10.c0)OR(t10.c30)))OR(vt0.c0)) WHEN ((t10.c30)<>(vt0.c0)) THEN ((t10.c30)<<(vt0.c0)) WHEN CAST(t10.c0 AS NUMERIC) THEN ((vt1.c0)>(t10.c0)) ELSE vt0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t10 ORDER BY CAST((((('')OR(vt1.c0)))AND(t10.c0)) AS NUMERIC) DESC  NULLS FIRST, TRIM(DISTINCT DATE(t10.c30, t10.c30, t10.c0))  NULLS LAST, CASE t10.c0  WHEN (- (vt1.c0)) THEN ((((t10.c0)OR(t10.c30)))OR(vt0.c0)) WHEN ((t10.c30)!=(vt0.c0)) THEN ((t10.c30)<<(vt0.c0)) WHEN CAST(t10.c0 AS NUMERIC) THEN ((vt1.c0)>(t10.c0)) ELSE vt0.c0 END ASC);
SELECT ALL * FROM vt1, vt0, t10 WHERE ((+ (vt0.c0)) COLLATE NOCASE) ORDER BY CAST((((('')OR(vt1.c0)))AND(t10.c0)) AS NUMERIC) DESC  NULLS FIRST, TRIM(DISTINCT DATE(t10.c30, t10.c30, t10.c0))  NULLS LAST, CASE t10.c0  WHEN (- (vt1.c0)) THEN ((((t10.c0)OR(t10.c30)))OR(vt0.c0)) WHEN ((t10.c30)<>(vt0.c0)) THEN ((t10.c30)<<(vt0.c0)) WHEN CAST(t10.c0 AS NUMERIC) THEN ((vt1.c0)>(t10.c0)) ELSE vt0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t10 ORDER BY CAST((((('')OR(vt1.c0)))AND(t10.c0)) AS NUMERIC) DESC  NULLS FIRST, TRIM(DISTINCT DATE(t10.c30, t10.c30, t10.c0))  NULLS LAST, CASE t10.c0  WHEN (- (vt1.c0)) THEN ((((t10.c0)OR(t10.c30)))OR(vt0.c0)) WHEN ((t10.c30)!=(vt0.c0)) THEN ((t10.c30)<<(vt0.c0)) WHEN CAST(t10.c0 AS NUMERIC) THEN ((vt1.c0)>(t10.c0)) ELSE vt0.c0 END ASC);
SELECT ALL * FROM vt1, vt0, t10 WHERE ((+ (vt0.c0)) COLLATE NOCASE) ORDER BY CAST((((('')OR(vt1.c0)))AND(t10.c0)) AS NUMERIC) DESC  NULLS FIRST, TRIM(DISTINCT DATE(t10.c30, t10.c30, t10.c0))  NULLS LAST, CASE t10.c0  WHEN (- (vt1.c0)) THEN ((((t10.c0)OR(t10.c30)))OR(vt0.c0)) WHEN ((t10.c30)<>(vt0.c0)) THEN ((t10.c30)<<(vt0.c0)) WHEN CAST(t10.c0 AS NUMERIC) THEN ((vt1.c0)>(t10.c0)) ELSE vt0.c0 END ASC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(SQLITE_COMPILEOPTION_GET(vt1.c0), 0.16311445153776116) WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN NULL THEN ((vt0.c0) IS TRUE) WHEN (('AF5[w诏') IS FALSE) THEN vt0.c0 ELSE (((vt0.c0, vt1.c0, vt1.c0))<=((vt1.c0, 0.2613860292714604, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN NULL THEN ((vt0.c0) IS TRUE) WHEN (('AF5[w诏') IS FALSE) THEN vt0.c0 ELSE (((vt0.c0, vt1.c0, vt1.c0))<=((vt1.c0, 0.2613860292714604, vt0.c0))) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(SQLITE_COMPILEOPTION_GET(vt1.c0), 0.16311445153776116));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(SQLITE_COMPILEOPTION_GET(vt1.c0), 0.16311445153776116) WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN NULL THEN ((vt0.c0) IS TRUE) WHEN (('AF5[w诏') IS FALSE) THEN vt0.c0 ELSE (((vt0.c0, vt1.c0, vt1.c0))<=((vt1.c0, 0.2613860292714604, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN NULL THEN ((vt0.c0) IS TRUE) WHEN (('AF5[w诏') IS FALSE) THEN vt0.c0 ELSE (((vt0.c0, vt1.c0, vt1.c0))<=((vt1.c0, 0.2613860292714604, vt0.c0))) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(SQLITE_COMPILEOPTION_GET(vt1.c0), 0.16311445153776116));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(SQLITE_COMPILEOPTION_GET(vt1.c0), 0.16311445153776116) WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN NULL THEN ((vt0.c0) IS TRUE) WHEN (('AF5[w诏') IS FALSE) THEN vt0.c0 ELSE (((vt0.c0, vt1.c0, vt1.c0))<=((vt1.c0, 0.2613860292714604, vt0.c0))) END);
SELECT ALL COUNT(*) FROM t10 WHERE ((((t10.c0, ((t10.c0) NOTNULL), 'CDpGn껠'))<>(((t10.c0 IN (t10.c0, t10.c30)), ((((t10.c0)OR(x'')))OR(t10.c0)), (((t10.c0)) NOT BETWEEN ((t10.c0)) AND ((t10.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t10.c0, ((t10.c0) NOTNULL), 'CDpGn껠'))!=(((t10.c0 IN (t10.c0, t10.c30)), ((((t10.c0)OR(x'')))OR(t10.c0)), (((t10.c0)) NOT BETWEEN ((t10.c0)) AND ((t10.c0))))))) IS TRUE)  as count FROM t10);
SELECT ALL COUNT(*) FROM t10 WHERE ((((t10.c0, ((t10.c0) NOTNULL), 'CDpGn껠'))<>(((t10.c0 IN (t10.c0, t10.c30)), ((((t10.c0)OR(x'')))OR(t10.c0)), (((t10.c0)) NOT BETWEEN ((t10.c0)) AND ((t10.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t10.c0, ((t10.c0) NOTNULL), 'CDpGn껠'))!=(((t10.c0 IN (t10.c0, t10.c30)), ((((t10.c0)OR(x'')))OR(t10.c0)), (((t10.c0)) NOT BETWEEN ((t10.c0)) AND ((t10.c0))))))) IS TRUE)  as count FROM t10);
SELECT ALL COUNT(*) FROM t10 WHERE ((((t10.c0, ((t10.c0) NOTNULL), 'CDpGn껠'))<>(((t10.c0 IN (t10.c0, t10.c30)), ((((t10.c0)OR(x'')))OR(t10.c0)), (((t10.c0)) NOT BETWEEN ((t10.c0)) AND ((t10.c0)))))));
SELECT COUNT(*) FROM t0, t10, vt1 WHERE (((NULLIF(t0.c0, t10.c0))+(((t0.c87) NOT BETWEEN (t0.c87) AND (t0.c0))))) ORDER BY ((NULL)&(((t10.c30)/(t0.c87))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(t0.c0, t10.c0))+(((t0.c87) NOT BETWEEN (t0.c87) AND (t0.c0))))) IS TRUE)  as count FROM t0, t10, vt1 ORDER BY ((NULL)&(((t10.c30)/(t0.c87)))));
SELECT COUNT(*) FROM t0, t10, vt1 WHERE (((NULLIF(t0.c0, t10.c0))+(((t0.c87) NOT BETWEEN (t0.c87) AND (t0.c0))))) ORDER BY ((NULL)&(((t10.c30)/(t0.c87))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(t0.c0, t10.c0))+(((t0.c87) NOT BETWEEN (t0.c87) AND (t0.c0))))) IS TRUE)  as count FROM t0, t10, vt1 ORDER BY ((NULL)&(((t10.c30)/(t0.c87)))));
SELECT COUNT(*) FROM t0, t10, vt1 WHERE (((NULLIF(t0.c0, t10.c0))+(((t0.c87) NOT BETWEEN (t0.c87) AND (t0.c0))))) ORDER BY ((NULL)&(((t10.c30)/(t0.c87))));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((LOWER(t0.c0))IS(CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)) WHERE (((-2.08366563E9)IS(CAST(t0.c87 AS INTEGER)))) ORDER BY CAST((((vt1.c0)) BETWEEN ((NULL)) AND ((t0.c0))) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((-2.08366563E9)IS(CAST(t0.c87 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((LOWER(t0.c0))IS(CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)) ORDER BY CAST((((vt1.c0)) BETWEEN ((NULL)) AND ((t0.c0))) AS BLOB) ASC);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((LOWER(t0.c0))IS(CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)) WHERE (((-2.08366563E9)IS(CAST(t0.c87 AS INTEGER)))) ORDER BY CAST((((vt1.c0)) BETWEEN ((NULL)) AND ((t0.c0))) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((-2.08366563E9)IS(CAST(t0.c87 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((LOWER(t0.c0))IS(CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)) ORDER BY CAST((((vt1.c0)) BETWEEN ((NULL)) AND ((t0.c0))) AS BLOB) ASC);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((LOWER(t0.c0))IS(CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)) WHERE (((-2.08366563E9)IS(CAST(t0.c87 AS INTEGER)))) ORDER BY CAST((((vt1.c0)) BETWEEN ((NULL)) AND ((t0.c0))) AS BLOB) ASC;
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((((vt0.c0))==((vt0.c0))))OR((vt0.c0 IN (vt0.c0, vt1.c0)))))AND((((vt1.c0))<((vt0.c0))))))AND(CASE vt1.c0  WHEN vt0.c0 THEN 0.39320493074776264 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0))=((vt0.c0))))OR((vt0.c0 IN (vt0.c0, vt1.c0)))))AND((((vt1.c0))<((vt0.c0))))))AND(CASE vt1.c0  WHEN vt0.c0 THEN 0.39320493074776264 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((((vt0.c0))==((vt0.c0))))OR((vt0.c0 IN (vt0.c0, vt1.c0)))))AND((((vt1.c0))<((vt0.c0))))))AND(CASE vt1.c0  WHEN vt0.c0 THEN 0.39320493074776264 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0))=((vt0.c0))))OR((vt0.c0 IN (vt0.c0, vt1.c0)))))AND((((vt1.c0))<((vt0.c0))))))AND(CASE vt1.c0  WHEN vt0.c0 THEN 0.39320493074776264 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((((vt0.c0))==((vt0.c0))))OR((vt0.c0 IN (vt0.c0, vt1.c0)))))AND((((vt1.c0))<((vt0.c0))))))AND(CASE vt1.c0  WHEN vt0.c0 THEN 0.39320493074776264 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(0.6067990922307185)) THEN ((((vt1.c0)AND(vt1.c0)))OR('V]18K/#')) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(0.6067990922307185)) THEN ((((vt1.c0)AND(vt1.c0)))OR('V]18K/#')) END) IS TRUE)  as count FROM vt1 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(0.6067990922307185)) THEN ((((vt1.c0)AND(vt1.c0)))OR('V]18K/#')) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(0.6067990922307185)) THEN ((((vt1.c0)AND(vt1.c0)))OR('V]18K/#')) END) IS TRUE)  as count FROM vt1 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(0.6067990922307185)) THEN ((((vt1.c0)AND(vt1.c0)))OR('V]18K/#')) END) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, t10 WHERE ((+ (((((t10.c0)OR(t0.c87)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((t10.c0)OR(t0.c87)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, t10);
SELECT ALL COUNT(*) FROM vt0, t0, t10 WHERE ((+ (((((t10.c0)OR(t0.c87)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((t10.c0)OR(t0.c87)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, t10);
SELECT ALL COUNT(*) FROM vt0, t0, t10 WHERE ((+ (((((t10.c0)OR(t0.c87)))AND(vt0.c0)))));
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0))<((vt0.c0))))||(vt0.c0 COLLATE NOCASE))) ORDER BY ((vt0.c0) BETWEEN (((t0.c0) NOT BETWEEN (x'') AND (t0.c0))) AND ((((vt0.c0))!=((t0.c87))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((vt0.c0))))||(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0) BETWEEN (((t0.c0) NOT BETWEEN (x'') AND (t0.c0))) AND ((((vt0.c0))<>((t0.c87))))) DESC);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0))<((vt0.c0))))||(vt0.c0 COLLATE NOCASE))) ORDER BY ((vt0.c0) BETWEEN (((t0.c0) NOT BETWEEN (x'') AND (t0.c0))) AND ((((vt0.c0))!=((t0.c87))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((vt0.c0))))||(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0) BETWEEN (((t0.c0) NOT BETWEEN (x'') AND (t0.c0))) AND ((((vt0.c0))<>((t0.c87))))) DESC);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0))<((vt0.c0))))||(vt0.c0 COLLATE NOCASE))) ORDER BY ((vt0.c0) BETWEEN (((t0.c0) NOT BETWEEN (x'') AND (t0.c0))) AND ((((vt0.c0))!=((t0.c87))))) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE NULLIF(DISTINCT vt1.c0, vt0.c0)  WHEN CAST(NULL AS NUMERIC) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(DISTINCT vt1.c0, vt0.c0)  WHEN CAST(NULL AS NUMERIC) THEN vt1.c0 END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE NULLIF(DISTINCT vt1.c0, vt0.c0)  WHEN CAST(NULL AS NUMERIC) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(DISTINCT vt1.c0, vt0.c0)  WHEN CAST(NULL AS NUMERIC) THEN vt1.c0 END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE NULLIF(DISTINCT vt1.c0, vt0.c0)  WHEN CAST(NULL AS NUMERIC) THEN vt1.c0 END);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ (((vt0.c0) IS FALSE)))) ORDER BY (((x'') NOT NULL) IN ()) ASC, COALESCE(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)), vt1.c0, '-616074145', (((vt1.c0))<((vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((x'') NOT NULL) IN ()) ASC, COALESCE(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)), vt1.c0, '-616074145', (((vt1.c0))<((vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ (((vt0.c0) IS FALSE)))) ORDER BY (((x'') NOT NULL) IN ()) ASC, COALESCE(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)), vt1.c0, '-616074145', (((vt1.c0))<((vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((x'') NOT NULL) IN ()) ASC, COALESCE(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)), vt1.c0, '-616074145', (((vt1.c0))<((vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ (((vt0.c0) IS FALSE)))) ORDER BY (((x'') NOT NULL) IN ()) ASC, COALESCE(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)), vt1.c0, '-616074145', (((vt1.c0))<((vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, t0, t10 WHERE (((((vt1.c0)-(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)-(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, t0, t10);
SELECT ALL * FROM vt1, vt0, t0, t10 WHERE (((((vt1.c0)-(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)-(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, t0, t10);
SELECT ALL * FROM vt1, vt0, t0, t10 WHERE (((((vt1.c0)-(vt1.c0))) NOTNULL));
SELECT COUNT(*) FROM t0, vt0, t10 WHERE (((CASE WHEN NULL THEN vt0.c0 WHEN t10.c30 THEN t0.c87 WHEN t0.c87 THEN t10.c30 ELSE t0.c0 END)>>(((NULL) NOT BETWEEN (t0.c87) AND (t0.c87))))) ORDER BY ((((t0.c87) BETWEEN (t10.c30) AND (t0.c0)))<=((t0.c0 IN (vt0.c0, t10.c0))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c87))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN vt0.c0 WHEN t10.c30 THEN t0.c87 WHEN t0.c87 THEN t10.c30 ELSE t0.c0 END)>>(((NULL) NOT BETWEEN (t0.c87) AND (t0.c87))))) IS TRUE)  as count FROM t0, vt0, t10 ORDER BY ((((t0.c87) BETWEEN (t10.c30) AND (t0.c0)))<=((t0.c0 IN (vt0.c0, t10.c0))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c87))) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, t10 WHERE (((CASE WHEN NULL THEN vt0.c0 WHEN t10.c30 THEN t0.c87 WHEN t0.c87 THEN t10.c30 ELSE t0.c0 END)>>(((NULL) NOT BETWEEN (t0.c87) AND (t0.c87))))) ORDER BY ((((t0.c87) BETWEEN (t10.c30) AND (t0.c0)))<=((t0.c0 IN (vt0.c0, t10.c0))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c87))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN vt0.c0 WHEN t10.c30 THEN t0.c87 WHEN t0.c87 THEN t10.c30 ELSE t0.c0 END)>>(((NULL) NOT BETWEEN (t0.c87) AND (t0.c87))))) IS TRUE)  as count FROM t0, vt0, t10 ORDER BY ((((t0.c87) BETWEEN (t10.c30) AND (t0.c0)))<=((t0.c0 IN (vt0.c0, t10.c0))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c87))) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, t10 WHERE (((CASE WHEN NULL THEN vt0.c0 WHEN t10.c30 THEN t0.c87 WHEN t0.c87 THEN t10.c30 ELSE t0.c0 END)>>(((NULL) NOT BETWEEN (t0.c87) AND (t0.c87))))) ORDER BY ((((t0.c87) BETWEEN (t10.c30) AND (t0.c0)))<=((t0.c0 IN (vt0.c0, t10.c0))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c87))) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM t10 RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.c0 THEN ((vt0.c0)=(t10.c0)) END CROSS JOIN vt0 ON CASE ((vt1.c0)IS NOT(t10.c30))  WHEN t10.c30 COLLATE BINARY THEN (t10.c0 IN ()) ELSE CAST(t10.c30 AS NUMERIC) END WHERE (((((((vt1.c0)AND(t10.c30)))AND(t10.c30)))||(((vt0.c0)+(t10.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(t10.c30)))AND(t10.c30)))||(((vt0.c0)+(t10.c0))))) IS TRUE)  as count FROM t10 RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.c0 THEN ((vt0.c0)=(t10.c0)) END CROSS JOIN vt0 ON CASE ((vt1.c0)IS NOT(t10.c30))  WHEN t10.c30 COLLATE BINARY THEN (t10.c0 IN ()) ELSE CAST(t10.c30 AS NUMERIC) END);
SELECT COUNT(*) FROM t10 RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.c0 THEN ((vt0.c0)=(t10.c0)) END CROSS JOIN vt0 ON CASE ((vt1.c0)IS NOT(t10.c30))  WHEN t10.c30 COLLATE BINARY THEN (t10.c0 IN ()) ELSE CAST(t10.c30 AS NUMERIC) END WHERE (((((((vt1.c0)AND(t10.c30)))AND(t10.c30)))||(((vt0.c0)+(t10.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(t10.c30)))AND(t10.c30)))||(((vt0.c0)+(t10.c0))))) IS TRUE)  as count FROM t10 RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.c0 THEN ((vt0.c0)=(t10.c0)) END CROSS JOIN vt0 ON CASE ((vt1.c0)IS NOT(t10.c30))  WHEN t10.c30 COLLATE BINARY THEN (t10.c0 IN ()) ELSE CAST(t10.c30 AS NUMERIC) END);
SELECT ALL * FROM vt1, vt0, t10 WHERE (CASE WHEN (((t10.c0, t10.c30, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((t10.c30, t10.c0, vt1.c0))) THEN ((vt1.c0)*(t10.c30)) ELSE ((vt1.c0)%(vt0.c0)) END) ORDER BY (NOT ((((vt1.c0, vt1.c0, t10.c30))<((t10.c30, vt1.c0, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t10.c0, t10.c30, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((t10.c30, t10.c0, vt1.c0))) THEN ((vt1.c0)*(t10.c30)) ELSE ((vt1.c0)%(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0, t10 ORDER BY (NOT ((((vt1.c0, vt1.c0, t10.c30))<((t10.c30, vt1.c0, vt0.c0))))) ASC);
SELECT ALL * FROM vt1, vt0, t10 WHERE (CASE WHEN (((t10.c0, t10.c30, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((t10.c30, t10.c0, vt1.c0))) THEN ((vt1.c0)*(t10.c30)) ELSE ((vt1.c0)%(vt0.c0)) END) ORDER BY (NOT ((((vt1.c0, vt1.c0, t10.c30))<((t10.c30, vt1.c0, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t10.c0, t10.c30, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((t10.c30, t10.c0, vt1.c0))) THEN ((vt1.c0)*(t10.c30)) ELSE ((vt1.c0)%(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0, t10 ORDER BY (NOT ((((vt1.c0, vt1.c0, t10.c30))<((t10.c30, vt1.c0, vt0.c0))))) ASC);
SELECT ALL * FROM vt1, vt0, t10 WHERE (CASE WHEN (((t10.c0, t10.c30, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((t10.c30, t10.c0, vt1.c0))) THEN ((vt1.c0)*(t10.c30)) ELSE ((vt1.c0)%(vt0.c0)) END) ORDER BY (NOT ((((vt1.c0, vt1.c0, t10.c30))<((t10.c30, vt1.c0, vt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM t0 INNER JOIN t10 ON ((CASE WHEN t0.c0 THEN t10.c0 END) NOT NULL) WHERE ('') ORDER BY (COALESCE(t10.c0, t0.c0) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 INNER JOIN t10 ON ((CASE WHEN t0.c0 THEN t10.c0 END) NOT NULL) ORDER BY (COALESCE(t10.c0, t0.c0) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN t10 ON ((CASE WHEN t0.c0 THEN t10.c0 END) NOT NULL) WHERE ('') ORDER BY (COALESCE(t10.c0, t0.c0) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 INNER JOIN t10 ON ((CASE WHEN t0.c0 THEN t10.c0 END) NOT NULL) ORDER BY (COALESCE(t10.c0, t0.c0) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN t10 ON ((CASE WHEN t0.c0 THEN t10.c0 END) NOT NULL) WHERE ('') ORDER BY (COALESCE(t10.c0, t0.c0) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t10, vt1, vt0 WHERE ((((((+ (t10.c30)))AND(vt0.c0)))AND(t10.c30 COLLATE RTRIM))) ORDER BY (((t10.c0)) BETWEEN ((((t10.c0)>>(t10.c30)))) AND ((vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((+ (t10.c30)))AND(vt0.c0)))AND(t10.c30 COLLATE RTRIM))) IS TRUE)  as count FROM t10, vt1, vt0 ORDER BY (((t10.c0)) BETWEEN ((((t10.c0)>>(t10.c30)))) AND ((vt0.c0))));
SELECT COUNT(*) FROM t10, vt1, vt0 WHERE ((((((+ (t10.c30)))AND(vt0.c0)))AND(t10.c30 COLLATE RTRIM))) ORDER BY (((t10.c0)) BETWEEN ((((t10.c0)>>(t10.c30)))) AND ((vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((+ (t10.c30)))AND(vt0.c0)))AND(t10.c30 COLLATE RTRIM))) IS TRUE)  as count FROM t10, vt1, vt0 ORDER BY (((t10.c0)) BETWEEN ((((t10.c0)>>(t10.c30)))) AND ((vt0.c0))));
SELECT COUNT(*) FROM t10, vt1, vt0 WHERE ((((((+ (t10.c30)))AND(vt0.c0)))AND(t10.c30 COLLATE RTRIM))) ORDER BY (((t10.c0)) BETWEEN ((((t10.c0)>>(t10.c30)))) AND ((vt0.c0)));
SELECT ALL COUNT(*) FROM t10 NATURAL JOIN t0 WHERE ((CAST(t10.c0 AS TEXT) IN ())) ORDER BY json_type((t0.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t10.c0 AS TEXT) IN ())) IS TRUE)  as count FROM t10 NATURAL JOIN t0 ORDER BY json_type((t0.c0 IN ()))  NULLS LAST);
SELECT ALL COUNT(*) FROM t10 NATURAL JOIN t0 WHERE ((CAST(t10.c0 AS TEXT) IN ())) ORDER BY json_type((t0.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t10.c0 AS TEXT) IN ())) IS TRUE)  as count FROM t10 NATURAL JOIN t0 ORDER BY json_type((t0.c0 IN ()))  NULLS LAST);
SELECT ALL COUNT(*) FROM t10 NATURAL JOIN t0 WHERE ((CAST(t10.c0 AS TEXT) IN ())) ORDER BY json_type((t0.c0 IN ()))  NULLS LAST;
SELECT ALL * FROM t10 WHERE (TRIM(t10.c30, t10.c30) COLLATE NOCASE) ORDER BY ((CASE t10.c0  WHEN t10.c30 THEN t10.c30 WHEN t10.c0 THEN t10.c0 WHEN t10.c0 THEN t10.c30 ELSE t10.c0 END)LIKE((t10.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(t10.c30, t10.c30) COLLATE NOCASE) IS TRUE)  as count FROM t10 ORDER BY ((CASE t10.c0  WHEN t10.c30 THEN t10.c30 WHEN t10.c0 THEN t10.c0 WHEN t10.c0 THEN t10.c30 ELSE t10.c0 END)LIKE((t10.c0 IN ()))) DESC);
SELECT ALL * FROM t10 WHERE (TRIM(t10.c30, t10.c30) COLLATE NOCASE) ORDER BY ((CASE t10.c0  WHEN t10.c30 THEN t10.c30 WHEN t10.c0 THEN t10.c0 WHEN t10.c0 THEN t10.c30 ELSE t10.c0 END)LIKE((t10.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(t10.c30, t10.c30) COLLATE NOCASE) IS TRUE)  as count FROM t10 ORDER BY ((CASE t10.c0  WHEN t10.c30 THEN t10.c30 WHEN t10.c0 THEN t10.c0 WHEN t10.c0 THEN t10.c30 ELSE t10.c0 END)LIKE((t10.c0 IN ()))) DESC);
SELECT ALL * FROM t10 WHERE (TRIM(t10.c30, t10.c30) COLLATE NOCASE) ORDER BY ((CASE t10.c0  WHEN t10.c30 THEN t10.c30 WHEN t10.c0 THEN t10.c0 WHEN t10.c0 THEN t10.c30 ELSE t10.c0 END)LIKE((t10.c0 IN ()))) DESC;
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((vt1.c0 IN ()))>>(vt0.c0 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON CASE WHEN ((t0.c87) NOTNULL) THEN (((t0.c87)) NOT BETWEEN (('-1413765807')) AND ((t0.c0))) END WHERE (((vt1.c0) NOT BETWEEN ((vt1.c0 IN (t0.c87, t0.c87))) AND (CASE WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN ((vt1.c0 IN (t0.c87, t0.c87))) AND (CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((vt1.c0 IN ()))>>(vt0.c0 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON CASE WHEN ((t0.c87) NOTNULL) THEN (((t0.c87)) NOT BETWEEN (('-1413765807')) AND ((t0.c0))) END);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((vt1.c0 IN ()))>>(vt0.c0 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON CASE WHEN ((t0.c87) NOTNULL) THEN (((t0.c87)) NOT BETWEEN (('-1413765807')) AND ((t0.c0))) END WHERE (((vt1.c0) NOT BETWEEN ((vt1.c0 IN (t0.c87, t0.c87))) AND (CASE WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN ((vt1.c0 IN (t0.c87, t0.c87))) AND (CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((vt1.c0 IN ()))>>(vt0.c0 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON CASE WHEN ((t0.c87) NOTNULL) THEN (((t0.c87)) NOT BETWEEN (('-1413765807')) AND ((t0.c0))) END);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((vt1.c0 IN ()))>>(vt0.c0 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON CASE WHEN ((t0.c87) NOTNULL) THEN (((t0.c87)) NOT BETWEEN (('-1413765807')) AND ((t0.c0))) END WHERE (((vt1.c0) NOT BETWEEN ((vt1.c0 IN (t0.c87, t0.c87))) AND (CASE WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL * FROM t0, vt1 WHERE (((vt1.c0)>(vt1.c0 COLLATE RTRIM))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE (((vt1.c0)>(vt1.c0 COLLATE RTRIM))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE (((vt1.c0)>(vt1.c0 COLLATE RTRIM))) ORDER BY NULL  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON UNLIKELY(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN '-961845743' THEN t0.c87 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c87 END) WHERE (t0.c87);
SELECT SUM(count) FROM (SELECT ALL ((t0.c87) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON UNLIKELY(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN '-961845743' THEN t0.c87 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c87 END));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON UNLIKELY(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN '-961845743' THEN t0.c87 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c87 END) WHERE (t0.c87);
SELECT SUM(count) FROM (SELECT ALL ((t0.c87) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON UNLIKELY(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN '-961845743' THEN t0.c87 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c87 END));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON UNLIKELY(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN '-961845743' THEN t0.c87 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c87 END) WHERE (t0.c87);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ABS(vt0.c0) THEN '0.00918448051281695' ELSE (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY ((vt0.c0 COLLATE BINARY) NOTNULL) ASC  NULLS LAST, ((((NULL)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ABS(vt0.c0) THEN '0.00918448051281695' ELSE (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) NOTNULL) ASC  NULLS LAST, ((((NULL)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ABS(vt0.c0) THEN '0.00918448051281695' ELSE (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY ((vt0.c0 COLLATE BINARY) NOTNULL) ASC  NULLS LAST, ((((NULL)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ABS(vt0.c0) THEN '0.00918448051281695' ELSE (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) NOTNULL) ASC  NULLS LAST, ((((NULL)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ABS(vt0.c0) THEN '0.00918448051281695' ELSE (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY ((vt0.c0 COLLATE BINARY) NOTNULL) ASC  NULLS LAST, ((((NULL)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (NULL) ORDER BY IFNULL(DISTINCT t0.c0, t0.c87) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY IFNULL(DISTINCT t0.c0, t0.c87) COLLATE RTRIM ASC);
SELECT ALL * FROM t0, vt0 WHERE (NULL) ORDER BY IFNULL(DISTINCT t0.c0, t0.c87) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY IFNULL(DISTINCT t0.c0, t0.c87) COLLATE RTRIM ASC);
SELECT ALL * FROM t0, vt0 WHERE (NULL) ORDER BY IFNULL(DISTINCT t0.c0, t0.c87) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM t0 WHERE (LOWER(DISTINCT NULL));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT NULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LOWER(DISTINCT NULL));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT NULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LOWER(DISTINCT NULL));
