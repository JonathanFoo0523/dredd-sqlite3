-- Time: 2024/06/09 14:43:27
-- Database: database91
-- Database version: 3.40.0
-- seed value: 869354491
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE TABLE t0 (c0 INT ); -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0x58e86e29), ('QL'), (1.491627561E9), (-1219406040), (NULL); -- 12ms;
INSERT OR FAIL INTO t1(c0) VALUES (x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(0x4c138e89); -- 0ms;
UPDATE OR IGNORE t1 SET c0=0.9626957932297937; -- 0ms;
END; -- 0ms;
CREATE TABLE t0 (c0 REAL ); -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
PRAGMA secure_delete = FAST; -- 0ms;
DROP TABLE IF EXISTS t1; -- 0ms;
REINDEX; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET c0=0x17ed26ff WHERE (((('401417983')|(t0.c0))) BETWEEN (t0.c0) AND ((NOT (t0.c0)))); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.legacy_file_format = true; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=x'' WHERE JULIANDAY((t0.c0 IN ()), (NOT (t0.c0)), ((t0.c0)/(t0.c0))); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('FALSE'), (0.9782077762442306), (x'51cc'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c0=x'', c0='1276350089'; -- 0ms;
ALTER TABLE t0 ADD COLUMN c38 BLOB; -- 0ms;
CREATE INDEX IF NOT EXISTS i30 ON t0(((c0) BETWEEN (c38) AND (c38)) COLLATE RTRIM,((((c38) IS FALSE))LIKE((((c38))!=((c38))))) ASC); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i61 ON t0(CAST((c0 IN (c0)) AS REAL),x'') WHERE (((((((((c38)AND(c0)))OR(c0)))AND(c0)))AND(c38)) IN ((((c38))=((c0))))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c38)=('401417983') WHERE (x'' IN ()); -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO t0(c0, c38) VALUES (NULL, NULL); -- 0ms;
REINDEX i61; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  t0; -- 1ms;
CREATE UNIQUE INDEX IF NOT EXISTS i21 ON t0(CAST(((c0) NOTNULL) AS BLOB) ASC,((((((((CASE WHEN c38 THEN c0 ELSE c38 END)OR(1.491627561E9)))OR(((c38) ISNULL))))AND(0.5148443864895)))OR((+ (c0)))) ASC) WHERE (((c38)) NOT BETWEEN ((CASE c0  WHEN c38 THEN 0.8271767723551211 END)) AND ((RTRIM(c38)))); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c20; -- 1ms;
INSERT OR ABORT INTO t0(c38) VALUES ('-186561600'), (1133840249), (NULL); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1); -- 1ms;
INSERT OR ABORT INTO t0(c20, c38) VALUES ('-550619555', 0.9007270396572196); -- 1ms;
PRAGMA secure_delete = false; -- 0ms;
UPDATE OR IGNORE t0 SET c20=NULL; -- 1ms;
CREATE TRIGGER IF NOT EXISTS tr2 BEFORE DELETE ON t0 FOR EACH ROW  BEGIN UPDATE OR IGNORE t0 SET (c20)=(x'') WHERE (((('-186561600')&(t0.c38)))<=(((t0.c38) BETWEEN (t0.c38) AND (t0.c38))));END; -- 1ms;
REINDEX i61; -- 0ms;
INSERT OR ROLLBACK INTO t0(c38, c20) VALUES (-1826413037, x''); -- 0ms;
UPDATE OR REPLACE t0 SET (c38)=(0.6804149558555801); -- 0ms;
PRAGMA temp.soft_heap_limit = 0; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL), (-1339622945), (NULL); -- 3ms;
CREATE UNIQUE INDEX IF NOT EXISTS i52 ON t0((((CAST(0.41831025384918585 AS TEXT)))>(((c20 IN (c38))))),TRIM((+ (c38)))) WHERE ((((c38)IS(NULL)))&(((c20)LIKE(c38)))); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i71 ON t0(CAST(((c20)<>(c38)) AS NUMERIC) COLLATE RTRIM,(((+ (c38))) BETWEEN (CASE c20  WHEN c38 THEN c20 ELSE c20 END) AND (((c38) ISNULL)))); -- 1ms;
PRAGMA main.cache_size; -- 0ms;
INSERT OR IGNORE INTO t0(c38, c20) VALUES ('1498906143', 'F椆4#~kHT☓'), ('1491627561', -766891332), (0.7887877892740187, NULL); -- 1ms;
PRAGMA cache_size = 0; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x'', NULL); -- 0ms;
REINDEX  t0; -- 0ms;
UPDATE OR IGNORE t0 SET (c20, c20)=(-5.50619555E8, x'1de1') WHERE (((((0Xffffffffffbe76ae)) BETWEEN ((t0.c38)) AND ((t0.c20)))) ISNULL); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES ('在E'), (0.6804149558555801), (NULL); -- 0ms;
COMMIT; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c20 TO c35; -- 1ms;
COMMIT; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (NULL), ('-1132137687'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1='-1400746978', c1=0.23102634681675904 WHERE vt0.c0 COLLATE BINARY; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
DROP INDEX "i71"; -- 8ms;
UPDATE OR IGNORE t0 SET (c35)=('-766891332'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.soft_heap_limit; -- 0ms;
UPDATE t0 SET (c38)=(x''); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.601259985072714 WHERE LIKE(vt0.c0 COLLATE NOCASE, vt0.c0, 'Q'); -- 2ms;
UPDATE t0 SET (c35)=(515392795); -- 0ms;
UPDATE OR IGNORE t0 SET (c35)=('-1339622945') WHERE (t0.c35 IN (CASE WHEN t0.c35 THEN t0.c35 END)); -- 0ms;
CREATE INDEX IF NOT EXISTS i30 ON t0((+ (((((0.8358330570565629)AND(c35)))OR(c38)))) COLLATE NOCASE,c38) WHERE ((c35 COLLATE BINARY)AND(((c35) NOTNULL))); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('6&'); -- 1ms;
PRAGMA temp.cache_size = 0; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=(NULL, 0.7440440848485012) WHERE CASE ((vt0.c0) IS TRUE)  WHEN NULL THEN ((vt0.c0)+(vt0.c1)) END; -- 1ms;
UPDATE OR FAIL t0 SET (c35)=(NULL) WHERE CAST(((t0.c38)%(t0.c38)) AS INTEGER); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35257'); -- 0ms;
UPDATE OR FAIL vt0 SET c1=0.8774942206723234, c1='-981061166' WHERE ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN 0.8271767723551211 THEN vt0.c0 ELSE vt0.c1 END) IS FALSE); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, c0)=(-1.21940604E9, NULL) WHERE (- ('#')); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-949875556'), (NULL), (0.8933795886204938); -- 0ms;
INSERT OR IGNORE INTO t0(c35) VALUES (x'4b36'); -- 0ms;
END; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT vt0.c1 COLLATE BINARY)) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT vt0.c1 COLLATE BINARY)) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT vt0.c1 COLLATE BINARY)) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((t0.c38))<((vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c38))<((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((t0.c38))<((vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c38))<((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((t0.c38))<((vt0.c0)))) ISNULL));
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0)&(((')QhNSᕟx') NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&(((')QhNSᕟx') NOTNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0)&(((')QhNSᕟx') NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&(((')QhNSᕟx') NOTNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0)&(((')QhNSᕟx') NOTNULL))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((((((((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((t0.c35))))OR((((vt0.c1))=((t0.c35))))))AND(((t0.c38)<<(t0.c35)))))AND(CASE WHEN t0.c38 THEN t0.c35 END)))OR(CASE t0.c38  WHEN t0.c35 THEN t0.c38 END)) WHERE (((vt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((((((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((t0.c35))))OR((((vt0.c1))==((t0.c35))))))AND(((t0.c38)<<(t0.c35)))))AND(CASE WHEN t0.c38 THEN t0.c35 END)))OR(CASE t0.c38  WHEN t0.c35 THEN t0.c38 END)));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((((((((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((t0.c35))))OR((((vt0.c1))=((t0.c35))))))AND(((t0.c38)<<(t0.c35)))))AND(CASE WHEN t0.c38 THEN t0.c35 END)))OR(CASE t0.c38  WHEN t0.c35 THEN t0.c38 END)) WHERE (((vt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((((((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((t0.c35))))OR((((vt0.c1))==((t0.c35))))))AND(((t0.c38)<<(t0.c35)))))AND(CASE WHEN t0.c38 THEN t0.c35 END)))OR(CASE t0.c38  WHEN t0.c35 THEN t0.c38 END)));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((((((((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((t0.c35))))OR((((vt0.c1))=((t0.c35))))))AND(((t0.c38)<<(t0.c35)))))AND(CASE WHEN t0.c38 THEN t0.c35 END)))OR(CASE t0.c38  WHEN t0.c35 THEN t0.c38 END)) WHERE (((vt0.c1) IS TRUE));
SELECT * FROM t0 WHERE ((- (t0.c38))) ORDER BY ((((((t0.c35) IS TRUE))OR(CASE t0.c38  WHEN x'8420' THEN t0.c38 END)))OR(t0.c35))  NULLS LAST, ((((((((((((((t0.c35)AND(t0.c38)))OR(t0.c35)))AND(t0.c38)))OR(t0.c38)))AND(t0.c35)))AND(t0.c38))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (t0.c38))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c35) IS TRUE))OR(CASE t0.c38  WHEN x'8420' THEN t0.c38 END)))OR(t0.c35))  NULLS LAST, ((((((((((((((t0.c35)AND(t0.c38)))OR(t0.c35)))AND(t0.c38)))OR(t0.c38)))AND(t0.c35)))AND(t0.c38))) NOTNULL) ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((- (t0.c38))) ORDER BY ((((((t0.c35) IS TRUE))OR(CASE t0.c38  WHEN x'8420' THEN t0.c38 END)))OR(t0.c35))  NULLS LAST, ((((((((((((((t0.c35)AND(t0.c38)))OR(t0.c35)))AND(t0.c38)))OR(t0.c38)))AND(t0.c35)))AND(t0.c38))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (t0.c38))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c35) IS TRUE))OR(CASE t0.c38  WHEN x'8420' THEN t0.c38 END)))OR(t0.c35))  NULLS LAST, ((((((((((((((t0.c35)AND(t0.c38)))OR(t0.c35)))AND(t0.c38)))OR(t0.c38)))AND(t0.c35)))AND(t0.c38))) NOTNULL) ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((- (t0.c38))) ORDER BY ((((((t0.c35) IS TRUE))OR(CASE t0.c38  WHEN x'8420' THEN t0.c38 END)))OR(t0.c35))  NULLS LAST, ((((((((((((((t0.c35)AND(t0.c38)))OR(t0.c35)))AND(t0.c38)))OR(t0.c38)))AND(t0.c35)))AND(t0.c38))) NOTNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT)) ORDER BY ((((((((((((CAST(vt0.c0 AS NUMERIC))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)))OR(((vt0.c1)==(vt0.c1)))))OR((- (vt0.c0)))))AND(RTRIM(NULL))))AND(vt0.c1)))AND((NULL IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((CAST(vt0.c0 AS NUMERIC))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)))OR(((vt0.c1)=(vt0.c1)))))OR((- (vt0.c0)))))AND(RTRIM(NULL))))AND(vt0.c1)))AND((NULL IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT)) ORDER BY ((((((((((((CAST(vt0.c0 AS NUMERIC))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)))OR(((vt0.c1)==(vt0.c1)))))OR((- (vt0.c0)))))AND(RTRIM(NULL))))AND(vt0.c1)))AND((NULL IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((CAST(vt0.c0 AS NUMERIC))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)))OR(((vt0.c1)=(vt0.c1)))))OR((- (vt0.c0)))))AND(RTRIM(NULL))))AND(vt0.c1)))AND((NULL IN ()))) DESC);
SELECT ALL * FROM t0, vt0 WHERE (STRFTIME(UPPER(vt0.c1), TYPEOF(DISTINCT '801566485'), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c38))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(UPPER(vt0.c1), TYPEOF(DISTINCT '801566485'), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c38)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (STRFTIME(UPPER(vt0.c1), TYPEOF(DISTINCT '801566485'), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c38))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(UPPER(vt0.c1), TYPEOF(DISTINCT '801566485'), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c38)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (STRFTIME(UPPER(vt0.c1), TYPEOF(DISTINCT '801566485'), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c38))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON 0.601259985072714 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN vt0.c0 THEN t0.c35 END) AND ((t0.c35 IN ())))) ORDER BY (((((((((t0.c38)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(t0.c35)) IN (CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN vt0.c0 THEN t0.c35 END) AND ((t0.c35 IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON 0.601259985072714 ORDER BY (((((((((t0.c38)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(t0.c35)) IN (CAST(vt0.c0 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON 0.601259985072714 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN vt0.c0 THEN t0.c35 END) AND ((t0.c35 IN ())))) ORDER BY (((((((((t0.c38)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(t0.c35)) IN (CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN vt0.c0 THEN t0.c35 END) AND ((t0.c35 IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON 0.601259985072714 ORDER BY (((((((((t0.c38)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(t0.c35)) IN (CAST(vt0.c0 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON 0.601259985072714 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN vt0.c0 THEN t0.c35 END) AND ((t0.c35 IN ())))) ORDER BY (((((((((t0.c38)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(t0.c35)) IN (CAST(vt0.c0 AS INTEGER))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0))<((vt0.c1)))))==((((vt0.c1)|(vt0.c0)))))) ORDER BY (((vt0.c1 IN (vt0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0))<((vt0.c1)))))=((((vt0.c1)|(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN (vt0.c0))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0))<((vt0.c1)))))==((((vt0.c1)|(vt0.c0)))))) ORDER BY (((vt0.c1 IN (vt0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0))<((vt0.c1)))))=((((vt0.c1)|(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN (vt0.c0))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0))<((vt0.c1)))))==((((vt0.c1)|(vt0.c0)))))) ORDER BY (((vt0.c1 IN (vt0.c0))) IS FALSE)  NULLS LAST;
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON t0.c38 COLLATE RTRIM WHERE (-5.50619555E8) ORDER BY CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-5.50619555E8) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON t0.c38 COLLATE RTRIM ORDER BY CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON t0.c38 COLLATE RTRIM WHERE (-5.50619555E8) ORDER BY CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-5.50619555E8) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON t0.c38 COLLATE RTRIM ORDER BY CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON t0.c38 COLLATE RTRIM WHERE (-5.50619555E8) ORDER BY CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c35) ORDER BY ((CAST(t0.c35 AS BLOB))OR(NULLIF(t0.c35, t0.c35)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c35) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c35 AS BLOB))OR(NULLIF(t0.c35, t0.c35)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c35) ORDER BY ((CAST(t0.c35 AS BLOB))OR(NULLIF(t0.c35, t0.c35)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c35) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c35 AS BLOB))OR(NULLIF(t0.c35, t0.c35)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c35) ORDER BY ((CAST(t0.c35 AS BLOB))OR(NULLIF(t0.c35, t0.c35)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))*(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))*(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))*(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))*(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))*(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY NULL  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (((CAST(t0.c38 AS REAL))<=(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c38 AS REAL))<=(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CAST(t0.c38 AS REAL))<=(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c38 AS REAL))<=(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CAST(t0.c38 AS REAL))<=(CAST(vt0.c1 AS TEXT))));
SELECT * FROM vt0 WHERE (((((((vt0.c0)=(vt0.c1)))AND(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN 0.6820225213829408 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)=(vt0.c1)))AND(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN 0.6820225213829408 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)=(vt0.c1)))AND(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN 0.6820225213829408 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)=(vt0.c1)))AND(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN 0.6820225213829408 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)=(vt0.c1)))AND(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN 0.6820225213829408 ELSE vt0.c0 END)));
SELECT * FROM t0 CROSS JOIN vt0 ON vt0.c0 WHERE ((((vt0.c0)) BETWEEN ((json(vt0.c0))) AND ((NULL)))) ORDER BY -1068822255  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((json(vt0.c0))) AND ((NULL)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON vt0.c0 ORDER BY -1068822255  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN vt0 ON vt0.c0 WHERE ((((vt0.c0)) BETWEEN ((json(vt0.c0))) AND ((NULL)))) ORDER BY -1068822255  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((json(vt0.c0))) AND ((NULL)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON vt0.c0 ORDER BY -1068822255  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c35, t0.c38, vt0.c0)) BETWEEN (((vt0.c0 IN ()), t0.c38 COLLATE BINARY, -5.50619555E8)) AND ((LIKE(vt0.c1, t0.c35, '*'), (((((((('0.8774942206723234')OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(t0.c35)), ((t0.c35) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c35, t0.c38, vt0.c0)) BETWEEN (((vt0.c0 IN ()), t0.c38 COLLATE BINARY, -5.50619555E8)) AND ((LIKE(vt0.c1, t0.c35, '*'), (((((((('0.8774942206723234')OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(t0.c35)), ((t0.c35) ISNULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c35, t0.c38, vt0.c0)) BETWEEN (((vt0.c0 IN ()), t0.c38 COLLATE BINARY, -5.50619555E8)) AND ((LIKE(vt0.c1, t0.c35, '*'), (((((((('0.8774942206723234')OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(t0.c35)), ((t0.c35) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c35, t0.c38, vt0.c0)) BETWEEN (((vt0.c0 IN ()), t0.c38 COLLATE BINARY, -5.50619555E8)) AND ((LIKE(vt0.c1, t0.c35, '*'), (((((((('0.8774942206723234')OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(t0.c35)), ((t0.c35) ISNULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c35, t0.c38, vt0.c0)) BETWEEN (((vt0.c0 IN ()), t0.c38 COLLATE BINARY, -5.50619555E8)) AND ((LIKE(vt0.c1, t0.c35, '*'), (((((((('0.8774942206723234')OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(t0.c35)), ((t0.c35) ISNULL)))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c38 IN (t0.c35)))==(((vt0.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c38 IN (t0.c35)))==(((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c38 IN (t0.c35)))==(((vt0.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c38 IN (t0.c35)))==(((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c38 IN (t0.c35)))==(((vt0.c0)<>(vt0.c0)))));
SELECT * FROM t0, vt0 WHERE ((- (t0.c38 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (t0.c38 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((- (t0.c38 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (t0.c38 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((- (t0.c38 COLLATE NOCASE)));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((TYPEOF(DISTINCT vt0.c1) IN ((~ (t0.c38)))));
SELECT SUM(count) FROM (SELECT (((TYPEOF(DISTINCT vt0.c1) IN ((~ (t0.c38))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((TYPEOF(DISTINCT vt0.c1) IN ((~ (t0.c38)))));
SELECT SUM(count) FROM (SELECT (((TYPEOF(DISTINCT vt0.c1) IN ((~ (t0.c38))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((TYPEOF(DISTINCT vt0.c1) IN ((~ (t0.c38)))));
SELECT * FROM vt0, t0 WHERE (((t0.c38) NOTNULL)) ORDER BY '-1961101564' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c38) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY '-1961101564' DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((t0.c38) NOTNULL)) ORDER BY '-1961101564' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c38) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY '-1961101564' DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((t0.c38) NOTNULL)) ORDER BY '-1961101564' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (x'4857') ORDER BY CASE 401417983  WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN CAST(vt0.c1 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ((x'4857') IS TRUE)  as count FROM vt0 ORDER BY CASE 401417983  WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN CAST(vt0.c1 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'4857') ORDER BY CASE 401417983  WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN CAST(vt0.c1 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ((x'4857') IS TRUE)  as count FROM vt0 ORDER BY CASE 401417983  WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN CAST(vt0.c1 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'4857') ORDER BY CASE 401417983  WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN CAST(vt0.c1 AS NUMERIC) END;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (((t0.c38))>=((t0.c35)))  WHEN ((t0.c38)<>(t0.c35)) THEN (t0.c38 IN ()) ELSE t0.c35 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c38))>=((t0.c35)))  WHEN ((t0.c38)<>(t0.c35)) THEN (t0.c38 IN ()) ELSE t0.c35 COLLATE NOCASE END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (((t0.c38))>=((t0.c35)))  WHEN ((t0.c38)<>(t0.c35)) THEN (t0.c38 IN ()) ELSE t0.c35 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c38))>=((t0.c35)))  WHEN ((t0.c38)<>(t0.c35)) THEN (t0.c38 IN ()) ELSE t0.c35 COLLATE NOCASE END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (((t0.c38))>=((t0.c35)))  WHEN ((t0.c38)<>(t0.c35)) THEN (t0.c38 IN ()) ELSE t0.c35 COLLATE NOCASE END);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c1)AND(vt0.c0)))OR('1722823678')))AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (((0xffffffffbc33ff31) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY (((((- (vt0.c1)))AND(((vt0.c1)*(vt0.c1)))))OR(SQLITE_SOURCE_ID())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)AND(vt0.c0)))OR('1722823678')))AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (((0Xffffffffbc33ff31) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((- (vt0.c1)))AND(((vt0.c1)*(vt0.c1)))))OR(SQLITE_SOURCE_ID())) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c1)AND(vt0.c0)))OR('1722823678')))AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (((0xffffffffbc33ff31) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY (((((- (vt0.c1)))AND(((vt0.c1)*(vt0.c1)))))OR(SQLITE_SOURCE_ID())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)AND(vt0.c0)))OR('1722823678')))AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (((0Xffffffffbc33ff31) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((- (vt0.c1)))AND(((vt0.c1)*(vt0.c1)))))OR(SQLITE_SOURCE_ID())) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c1)AND(vt0.c0)))OR('1722823678')))AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (((0xffffffffbc33ff31) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY (((((- (vt0.c1)))AND(((vt0.c1)*(vt0.c1)))))OR(SQLITE_SOURCE_ID())) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE ((((NOT (vt0.c0)))|((((vt0.c0))>((vt0.c0)))))) ORDER BY 0.9101519137749856 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))|((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.9101519137749856 ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((NOT (vt0.c0)))|((((vt0.c0))>((vt0.c0)))))) ORDER BY 0.9101519137749856 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))|((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.9101519137749856 ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((NOT (vt0.c0)))|((((vt0.c0))>((vt0.c0)))))) ORDER BY 0.9101519137749856 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c35);
SELECT SUM(count) FROM (SELECT ALL ((t0.c35) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c35);
SELECT SUM(count) FROM (SELECT ALL ((t0.c35) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c35);
SELECT COUNT(*) FROM t0 WHERE (json_array_length(t0.c38 COLLATE RTRIM, ' Dp1q')) ORDER BY ((0.4486036367167373) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(t0.c38 COLLATE RTRIM, ' Dp1q')) IS TRUE)  as count FROM t0 ORDER BY ((0.4486036367167373) IS TRUE));
SELECT COUNT(*) FROM t0 WHERE (json_array_length(t0.c38 COLLATE RTRIM, ' Dp1q')) ORDER BY ((0.4486036367167373) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(t0.c38 COLLATE RTRIM, ' Dp1q')) IS TRUE)  as count FROM t0 ORDER BY ((0.4486036367167373) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.09822563580528032) ORDER BY CAST((vt0.c1 IN ()) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.09822563580528032) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c1 IN ()) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.09822563580528032) ORDER BY CAST((vt0.c1 IN ()) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.09822563580528032) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c1 IN ()) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.09822563580528032) ORDER BY CAST((vt0.c1 IN ()) AS TEXT)  NULLS LAST;
SELECT * FROM t0 WHERE ('-1137777084');
SELECT SUM(count) FROM (SELECT (('-1137777084') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('-1137777084');
SELECT SUM(count) FROM (SELECT (('-1137777084') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('-1137777084');
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS BLOB) IN ())) ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), -1899568280, ((vt0.c0) ISNULL)))<>(('H}', vt0.c0, (~ (vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c1 AS BLOB) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), -1899568280, ((vt0.c0) ISNULL)))!=(('H}', vt0.c0, (~ (vt0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS BLOB) IN ())) ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), -1899568280, ((vt0.c0) ISNULL)))<>(('H}', vt0.c0, (~ (vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c1 AS BLOB) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), -1899568280, ((vt0.c0) ISNULL)))!=(('H}', vt0.c0, (~ (vt0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS BLOB) IN ())) ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), -1899568280, ((vt0.c0) ISNULL)))<>(('H}', vt0.c0, (~ (vt0.c1))))) ASC;
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS REAL));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (t0.c38)))>>(t0.c38))) ORDER BY CAST(((t0.c38)IS(vt0.c1)) AS TEXT) DESC, CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c0 ELSE t0.c35 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c38)))>>(t0.c38))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((t0.c38)IS(vt0.c1)) AS TEXT) DESC, CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c0 ELSE t0.c35 COLLATE BINARY END);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (t0.c38)))>>(t0.c38))) ORDER BY CAST(((t0.c38)IS(vt0.c1)) AS TEXT) DESC, CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c0 ELSE t0.c35 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c38)))>>(t0.c38))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((t0.c38)IS(vt0.c1)) AS TEXT) DESC, CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c0 ELSE t0.c35 COLLATE BINARY END);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (t0.c38)))>>(t0.c38))) ORDER BY CAST(((t0.c38)IS(vt0.c1)) AS TEXT) DESC, CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c0 ELSE t0.c35 COLLATE BINARY END;
SELECT * FROM vt0, t0 NOT INDEXED WHERE ((((((('0.4486036367167373') BETWEEN (vt0.c0) AND (t0.c38)))AND((t0.c35 IN ()))))AND(HEX(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((('0.4486036367167373') BETWEEN (vt0.c0) AND (t0.c38)))AND((t0.c35 IN ()))))AND(HEX(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 NOT INDEXED WHERE ((((((('0.4486036367167373') BETWEEN (vt0.c0) AND (t0.c38)))AND((t0.c35 IN ()))))AND(HEX(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((('0.4486036367167373') BETWEEN (vt0.c0) AND (t0.c38)))AND((t0.c35 IN ()))))AND(HEX(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 NOT INDEXED WHERE ((((((('0.4486036367167373') BETWEEN (vt0.c0) AND (t0.c38)))AND((t0.c35 IN ()))))AND(HEX(DISTINCT vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))OR(((((((((vt0.c1)OR(x'')))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))OR(((((((((vt0.c1)OR(x'')))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))OR(((((((((vt0.c1)OR(x'')))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))OR(((((((((vt0.c1)OR(x'')))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))OR(((((((((vt0.c1)OR(x'')))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c38 IN (vt0.c0, t0.c35))) ISNULL) WHERE ((CASE vt0.c0  WHEN t0.c38 THEN t0.c38 ELSE vt0.c0 END IN ())) ORDER BY ((vt0.c1) NOT BETWEEN (t0.c35 COLLATE RTRIM) AND (CASE t0.c38  WHEN t0.c38 THEN vt0.c0 ELSE '-1219406040' END)) ASC, vt0.c1 DESC, (CASE t0.c35  WHEN vt0.c0 THEN t0.c38 ELSE t0.c38 END IN (((vt0.c1) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN t0.c38 THEN t0.c38 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c38 IN (vt0.c0, t0.c35))) ISNULL) ORDER BY ((vt0.c1) NOT BETWEEN (t0.c35 COLLATE RTRIM) AND (CASE t0.c38  WHEN t0.c38 THEN vt0.c0 ELSE '-1219406040' END)) ASC, vt0.c1 DESC, (CASE t0.c35  WHEN vt0.c0 THEN t0.c38 ELSE t0.c38 END IN (((vt0.c1) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c38 IN (vt0.c0, t0.c35))) ISNULL) WHERE ((CASE vt0.c0  WHEN t0.c38 THEN t0.c38 ELSE vt0.c0 END IN ())) ORDER BY ((vt0.c1) NOT BETWEEN (t0.c35 COLLATE RTRIM) AND (CASE t0.c38  WHEN t0.c38 THEN vt0.c0 ELSE '-1219406040' END)) ASC, vt0.c1 DESC, (CASE t0.c35  WHEN vt0.c0 THEN t0.c38 ELSE t0.c38 END IN (((vt0.c1) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN t0.c38 THEN t0.c38 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c38 IN (vt0.c0, t0.c35))) ISNULL) ORDER BY ((vt0.c1) NOT BETWEEN (t0.c35 COLLATE RTRIM) AND (CASE t0.c38  WHEN t0.c38 THEN vt0.c0 ELSE '-1219406040' END)) ASC, vt0.c1 DESC, (CASE t0.c35  WHEN vt0.c0 THEN t0.c38 ELSE t0.c38 END IN (((vt0.c1) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c38 IN (vt0.c0, t0.c35))) ISNULL) WHERE ((CASE vt0.c0  WHEN t0.c38 THEN t0.c38 ELSE vt0.c0 END IN ())) ORDER BY ((vt0.c1) NOT BETWEEN (t0.c35 COLLATE RTRIM) AND (CASE t0.c38  WHEN t0.c38 THEN vt0.c0 ELSE '-1219406040' END)) ASC, vt0.c1 DESC, (CASE t0.c35  WHEN vt0.c0 THEN t0.c38 ELSE t0.c38 END IN (((vt0.c1) IS TRUE)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)>>(vt0.c1))) NOTNULL)) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) AND (PRINTF(' Dp1q')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>>(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) AND (PRINTF(' Dp1q')))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)>>(vt0.c1))) NOTNULL)) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) AND (PRINTF(' Dp1q')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>>(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) AND (PRINTF(' Dp1q')))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)>>(vt0.c1))) NOTNULL)) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) AND (PRINTF(' Dp1q')))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) IS TRUE));
SELECT ALL * FROM vt0, t0 WHERE (((((((((((((0Xffffffffebb957b9)AND(vt0.c1)))AND(t0.c35)))AND(CAST(t0.c38 AS NUMERIC))))OR(CAST(vt0.c1 AS BLOB))))AND('')))AND(-1400746978)));
SELECT SUM(count) FROM (SELECT ((((((((((((((0Xffffffffebb957b9)AND(vt0.c1)))AND(t0.c35)))AND(CAST(t0.c38 AS NUMERIC))))OR(CAST(vt0.c1 AS BLOB))))AND('')))AND(-1400746978))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((((((((0Xffffffffebb957b9)AND(vt0.c1)))AND(t0.c35)))AND(CAST(t0.c38 AS NUMERIC))))OR(CAST(vt0.c1 AS BLOB))))AND('')))AND(-1400746978)));
SELECT SUM(count) FROM (SELECT ((((((((((((((0Xffffffffebb957b9)AND(vt0.c1)))AND(t0.c35)))AND(CAST(t0.c38 AS NUMERIC))))OR(CAST(vt0.c1 AS BLOB))))AND('')))AND(-1400746978))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((((((((0Xffffffffebb957b9)AND(vt0.c1)))AND(t0.c35)))AND(CAST(t0.c38 AS NUMERIC))))OR(CAST(vt0.c1 AS BLOB))))AND('')))AND(-1400746978)));
SELECT ALL * FROM t0 WHERE (((((((t0.c38) NOTNULL))AND(((t0.c38) BETWEEN (t0.c38) AND (t0.c35)))))OR(((t0.c35) IS TRUE)))) ORDER BY ((t0.c35 IN ()) IN ((((t0.c38, t0.c38, t0.c35)) BETWEEN ((t0.c38, t0.c35, t0.c38)) AND ((x'', t0.c35, t0.c35)))))  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c38) NOTNULL))AND(((t0.c38) BETWEEN (t0.c38) AND (t0.c35)))))OR(((t0.c35) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c35 IN ()) IN ((((t0.c38, t0.c38, t0.c35)) BETWEEN ((t0.c38, t0.c35, t0.c38)) AND ((x'', t0.c35, t0.c35)))))  NULLS LAST, NULL  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((((t0.c38) NOTNULL))AND(((t0.c38) BETWEEN (t0.c38) AND (t0.c35)))))OR(((t0.c35) IS TRUE)))) ORDER BY ((t0.c35 IN ()) IN ((((t0.c38, t0.c38, t0.c35)) BETWEEN ((t0.c38, t0.c35, t0.c38)) AND ((x'', t0.c35, t0.c35)))))  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c38) NOTNULL))AND(((t0.c38) BETWEEN (t0.c38) AND (t0.c35)))))OR(((t0.c35) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c35 IN ()) IN ((((t0.c38, t0.c38, t0.c35)) BETWEEN ((t0.c38, t0.c35, t0.c38)) AND ((x'', t0.c35, t0.c35)))))  NULLS LAST, NULL  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((((t0.c38) NOTNULL))AND(((t0.c38) BETWEEN (t0.c38) AND (t0.c35)))))OR(((t0.c35) IS TRUE)))) ORDER BY ((t0.c35 IN ()) IN ((((t0.c38, t0.c38, t0.c35)) BETWEEN ((t0.c38, t0.c35, t0.c38)) AND ((x'', t0.c35, t0.c35)))))  NULLS LAST, NULL  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c38)<>(t0.c35)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c38)!=(t0.c35)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c38)<>(t0.c35)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c38)!=(t0.c35)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c38)<>(t0.c35)) AS BLOB));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (1.491627561E9)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (1.491627561E9))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (1.491627561E9)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (1.491627561E9))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (1.491627561E9)));
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1) ORDER BY ((((t0.c35)OR(((vt0.c1) NOT NULL))))AND(-1.89956828E9)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c35)OR(((vt0.c1) NOT NULL))))AND(-1.89956828E9)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1) ORDER BY ((((t0.c35)OR(((vt0.c1) NOT NULL))))AND(-1.89956828E9)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c35)OR(((vt0.c1) NOT NULL))))AND(-1.89956828E9)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1) ORDER BY ((((t0.c35)OR(((vt0.c1) NOT NULL))))AND(-1.89956828E9)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(0.8316570039304124)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS NOT(0.8316570039304124)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(0.8316570039304124)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS NOT(0.8316570039304124)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(0.8316570039304124)) AS BLOB));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c38) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c38) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c38) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c38) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c38) NOTNULL) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((+ (vt0.c0)))) AND ((vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN (((+ (vt0.c0)))) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((+ (vt0.c0)))) AND ((vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN (((+ (vt0.c0)))) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((+ (vt0.c0)))) AND ((vt0.c1))));
SELECT * FROM vt0 WHERE (0.829284771877806);
SELECT SUM(count) FROM (SELECT ALL ((0.829284771877806) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.829284771877806);
SELECT SUM(count) FROM (SELECT ALL ((0.829284771877806) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.829284771877806);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c38))<((vt0.c0))) COLLATE BINARY) ORDER BY 0.9778359734738642;
SELECT SUM(count) FROM (SELECT (((((t0.c38))<((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.9778359734738642);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c38))<((vt0.c0))) COLLATE BINARY) ORDER BY 0.9778359734738642;
SELECT SUM(count) FROM (SELECT (((((t0.c38))<((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.9778359734738642);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c38))<((vt0.c0))) COLLATE BINARY) ORDER BY 0.9778359734738642;
SELECT ALL * FROM vt0, t0 WHERE ((~ (CASE WHEN t0.c38 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN t0.c38 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((~ (CASE WHEN t0.c38 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN t0.c38 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((~ (CASE WHEN t0.c38 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)&(vt0.c0))))=(((+ (vt0.c1)))))) ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END THEN x'' ELSE (~ (vt0.c0)) END ASC, ((x'fb09') NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c0)-(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)&(vt0.c0))))==(((+ (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END THEN x'' ELSE (~ (vt0.c0)) END ASC, ((x'fb09') NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c0)-(vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)&(vt0.c0))))=(((+ (vt0.c1)))))) ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END THEN x'' ELSE (~ (vt0.c0)) END ASC, ((x'fb09') NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c0)-(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)&(vt0.c0))))==(((+ (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END THEN x'' ELSE (~ (vt0.c0)) END ASC, ((x'fb09') NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c0)-(vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)&(vt0.c0))))=(((+ (vt0.c1)))))) ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END THEN x'' ELSE (~ (vt0.c0)) END ASC, ((x'fb09') NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c0)-(vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (x'8c97');
SELECT SUM(count) FROM (SELECT ((x'8c97') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'8c97');
SELECT SUM(count) FROM (SELECT ((x'8c97') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'8c97');
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))%(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))%(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))%(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))%(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))%(((vt0.c0) IS FALSE))));
SELECT * FROM t0, vt0 WHERE (((((vt0.c1))>=((t0.c35))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1))>=((t0.c35))) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((vt0.c1))>=((t0.c35))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1))>=((t0.c35))) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((vt0.c1))>=((t0.c35))) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c35) NOT NULL))IS((vt0.c0 IN ())))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35) NOT NULL))IS((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c35) NOT NULL))IS((vt0.c0 IN ())))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35) NOT NULL))IS((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c35) NOT NULL))IS((vt0.c0 IN ())))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c35 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c35 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c35 COLLATE RTRIM) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((x'c0a4')) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN ((((('-948808802')AND(vt0.c1)))AND(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY CASE 0.9784714857773509  WHEN '1329334149' THEN TRIM(DISTINCT vt0.c0, vt0.c1) END DESC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'c0a4')) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN ((((('-948808802')AND(vt0.c1)))AND(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE 0.9784714857773509  WHEN '1329334149' THEN TRIM(DISTINCT vt0.c0, vt0.c1) END DESC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((x'c0a4')) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN ((((('-948808802')AND(vt0.c1)))AND(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY CASE 0.9784714857773509  WHEN '1329334149' THEN TRIM(DISTINCT vt0.c0, vt0.c1) END DESC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'c0a4')) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN ((((('-948808802')AND(vt0.c1)))AND(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE 0.9784714857773509  WHEN '1329334149' THEN TRIM(DISTINCT vt0.c0, vt0.c1) END DESC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((x'c0a4')) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN ((((('-948808802')AND(vt0.c1)))AND(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY CASE 0.9784714857773509  WHEN '1329334149' THEN TRIM(DISTINCT vt0.c0, vt0.c1) END DESC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c38) ORDER BY (((CASE x''  WHEN t0.c35 THEN t0.c38 WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c35 WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN t0.c38 ELSE t0.c35 END))!=((((((t0.c35)AND(t0.c35)))AND(t0.c35)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c38) IS TRUE)  as count FROM t0 ORDER BY (((CASE x''  WHEN t0.c35 THEN t0.c38 WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c35 WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN t0.c38 ELSE t0.c35 END))!=((((((t0.c35)AND(t0.c35)))AND(t0.c35)))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c38) ORDER BY (((CASE x''  WHEN t0.c35 THEN t0.c38 WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c35 WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN t0.c38 ELSE t0.c35 END))!=((((((t0.c35)AND(t0.c35)))AND(t0.c35)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c38) IS TRUE)  as count FROM t0 ORDER BY (((CASE x''  WHEN t0.c35 THEN t0.c38 WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c35 WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN t0.c38 ELSE t0.c35 END))!=((((((t0.c35)AND(t0.c35)))AND(t0.c35)))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c38) ORDER BY (((CASE x''  WHEN t0.c35 THEN t0.c38 WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c35 WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN t0.c38 ELSE t0.c35 END))!=((((((t0.c35)AND(t0.c35)))AND(t0.c35)))))  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (CASE WHEN (t0.c35 IN (vt0.c0)) THEN t0.c35 WHEN (vt0.c1 IN ()) THEN CASE WHEN NULL THEN vt0.c1 END WHEN (NOT (vt0.c0)) THEN CASE t0.c38  WHEN vt0.c0 THEN t0.c38 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c35 IN (vt0.c0)) THEN t0.c35 WHEN (vt0.c1 IN ()) THEN CASE WHEN NULL THEN vt0.c1 END WHEN (NOT (vt0.c0)) THEN CASE t0.c38  WHEN vt0.c0 THEN t0.c38 END END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE WHEN (t0.c35 IN (vt0.c0)) THEN t0.c35 WHEN (vt0.c1 IN ()) THEN CASE WHEN NULL THEN vt0.c1 END WHEN (NOT (vt0.c0)) THEN CASE t0.c38  WHEN vt0.c0 THEN t0.c38 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c35 IN (vt0.c0)) THEN t0.c35 WHEN (vt0.c1 IN ()) THEN CASE WHEN NULL THEN vt0.c1 END WHEN (NOT (vt0.c0)) THEN CASE t0.c38  WHEN vt0.c0 THEN t0.c38 END END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE WHEN (t0.c35 IN (vt0.c0)) THEN t0.c35 WHEN (vt0.c1 IN ()) THEN CASE WHEN NULL THEN vt0.c1 END WHEN (NOT (vt0.c0)) THEN CASE t0.c38  WHEN vt0.c0 THEN t0.c38 END END);
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c0)) NOT BETWEEN ((x'f08d')) AND ((vt0.c1))))OR(vt0.c0)))AND(('Wws' IN ()))))OR(0.5173770012045389)))AND(CAST(vt0.c1 AS TEXT)))) ORDER BY ((0xffffffffbc84f329) NOT BETWEEN (((vt0.c1)LIKE(vt0.c1))) AND (((vt0.c0)<(vt0.c1)))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM COLLATE BINARY, '-1311153372' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)) NOT BETWEEN ((x'f08d')) AND ((vt0.c1))))OR(vt0.c0)))AND(('Wws' IN ()))))OR(0.5173770012045389)))AND(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((0xffffffffbc84f329) NOT BETWEEN (((vt0.c1)LIKE(vt0.c1))) AND (((vt0.c0)<(vt0.c1)))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM COLLATE BINARY, '-1311153372' DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c0)) NOT BETWEEN ((x'f08d')) AND ((vt0.c1))))OR(vt0.c0)))AND(('Wws' IN ()))))OR(0.5173770012045389)))AND(CAST(vt0.c1 AS TEXT)))) ORDER BY ((0xffffffffbc84f329) NOT BETWEEN (((vt0.c1)LIKE(vt0.c1))) AND (((vt0.c0)<(vt0.c1)))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM COLLATE BINARY, '-1311153372' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)) NOT BETWEEN ((x'f08d')) AND ((vt0.c1))))OR(vt0.c0)))AND(('Wws' IN ()))))OR(0.5173770012045389)))AND(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((0xffffffffbc84f329) NOT BETWEEN (((vt0.c1)LIKE(vt0.c1))) AND (((vt0.c0)<(vt0.c1)))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM COLLATE BINARY, '-1311153372' DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c0)) NOT BETWEEN ((x'f08d')) AND ((vt0.c1))))OR(vt0.c0)))AND(('Wws' IN ()))))OR(0.5173770012045389)))AND(CAST(vt0.c1 AS TEXT)))) ORDER BY ((0xffffffffbc84f329) NOT BETWEEN (((vt0.c1)LIKE(vt0.c1))) AND (((vt0.c0)<(vt0.c1)))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM COLLATE BINARY, '-1311153372' DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1) ISNULL))/((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, t0.c38)) AND ((t0.c35, vt0.c1, vt0.c1)))))) ORDER BY ((vt0.c0 COLLATE NOCASE)LIKE((((vt0.c0))<((vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL))/((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, t0.c38)) AND ((t0.c35, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)LIKE((((vt0.c0))<((vt0.c1))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1) ISNULL))/((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, t0.c38)) AND ((t0.c35, vt0.c1, vt0.c1)))))) ORDER BY ((vt0.c0 COLLATE NOCASE)LIKE((((vt0.c0))<((vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL))/((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, t0.c38)) AND ((t0.c35, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)LIKE((((vt0.c0))<((vt0.c1))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1) ISNULL))/((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, t0.c38)) AND ((t0.c35, vt0.c1, vt0.c1)))))) ORDER BY ((vt0.c0 COLLATE NOCASE)LIKE((((vt0.c0))<((vt0.c1))))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((CASE vt0.c1  WHEN x'520c' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND('')))))AND((vt0.c0 IN ()))) ASC, json_object(CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c1  WHEN x'520c' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND('')))))AND((vt0.c0 IN ()))) ASC, json_object(CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE NOCASE));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((CASE vt0.c1  WHEN x'520c' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND('')))))AND((vt0.c0 IN ()))) ASC, json_object(CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c1  WHEN x'520c' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND('')))))AND((vt0.c0 IN ()))) ASC, json_object(CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE NOCASE));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) ORDER BY ((((JULIANDAY(NULL, vt0.c1, vt0.c0, vt0.c1, vt0.c1))AND(x'')))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'e3f9'))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((JULIANDAY(NULL, vt0.c1, vt0.c0, vt0.c1, vt0.c1))AND(x'')))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'e3f9')))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) ORDER BY ((((JULIANDAY(NULL, vt0.c1, vt0.c0, vt0.c1, vt0.c1))AND(x'')))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'e3f9'))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((JULIANDAY(NULL, vt0.c1, vt0.c0, vt0.c1, vt0.c1))AND(x'')))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'e3f9')))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) ORDER BY ((((JULIANDAY(NULL, vt0.c1, vt0.c0, vt0.c1, vt0.c1))AND(x'')))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'e3f9'))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((~ (t0.c35)))%((t0.c38 IN (vt0.c1, t0.c35)))) WHERE (UNLIKELY(DISTINCT vt0.c1)) ORDER BY (((((((((x'a4c3' IN ()))OR(vt0.c0)))OR(LIKELY(t0.c35))))OR(0xffffffff8b1bf704)))AND(((t0.c38)!=(t0.c38))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT vt0.c1)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((~ (t0.c35)))%((t0.c38 IN (vt0.c1, t0.c35)))) ORDER BY (((((((((x'a4c3' IN ()))OR(vt0.c0)))OR(LIKELY(t0.c35))))OR(0Xffffffff8b1bf704)))AND(((t0.c38)!=(t0.c38)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((~ (t0.c35)))%((t0.c38 IN (vt0.c1, t0.c35)))) WHERE (UNLIKELY(DISTINCT vt0.c1)) ORDER BY (((((((((x'a4c3' IN ()))OR(vt0.c0)))OR(LIKELY(t0.c35))))OR(0xffffffff8b1bf704)))AND(((t0.c38)!=(t0.c38))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT vt0.c1)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((~ (t0.c35)))%((t0.c38 IN (vt0.c1, t0.c35)))) ORDER BY (((((((((x'a4c3' IN ()))OR(vt0.c0)))OR(LIKELY(t0.c35))))OR(0Xffffffff8b1bf704)))AND(((t0.c38)!=(t0.c38)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((~ (t0.c35)))%((t0.c38 IN (vt0.c1, t0.c35)))) WHERE (UNLIKELY(DISTINCT vt0.c1)) ORDER BY (((((((((x'a4c3' IN ()))OR(vt0.c0)))OR(LIKELY(t0.c35))))OR(0xffffffff8b1bf704)))AND(((t0.c38)!=(t0.c38))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))IS(((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC))IS(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))IS(((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC))IS(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))IS(((vt0.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c35)|('')) COLLATE RTRIM) ORDER BY (((t0.c38)IS(t0.c35)) IN ((t0.c35 IN (t0.c38)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c35)|('')) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((t0.c38)IS(t0.c35)) IN ((t0.c35 IN (t0.c38)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c35)|('')) COLLATE RTRIM) ORDER BY (((t0.c38)IS(t0.c35)) IN ((t0.c35 IN (t0.c38)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c35)|('')) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((t0.c38)IS(t0.c35)) IN ((t0.c35 IN (t0.c38)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c35)|('')) COLLATE RTRIM) ORDER BY (((t0.c38)IS(t0.c35)) IN ((t0.c35 IN (t0.c38)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c35)<>(vt0.c1)))=((+ (t0.c35)))) WHERE (CHAR((((vt0.c1)) NOT BETWEEN ((t0.c38)) AND (('')))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR((((vt0.c1)) NOT BETWEEN ((t0.c38)) AND ((''))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c35)!=(vt0.c1)))=((+ (t0.c35)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c35)<>(vt0.c1)))=((+ (t0.c35)))) WHERE (CHAR((((vt0.c1)) NOT BETWEEN ((t0.c38)) AND (('')))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR((((vt0.c1)) NOT BETWEEN ((t0.c38)) AND ((''))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c35)!=(vt0.c1)))=((+ (t0.c35)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c35)<>(vt0.c1)))=((+ (t0.c35)))) WHERE (CHAR((((vt0.c1)) NOT BETWEEN ((t0.c38)) AND (('')))));
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT * FROM t0 WHERE (t0.c38) ORDER BY CASE WHEN CAST(t0.c35 AS NUMERIC) THEN (~ (t0.c38)) WHEN ((t0.c35)GLOB(t0.c35)) THEN ((t0.c38)<(t0.c35)) WHEN (NOT (t0.c35)) THEN '418833038' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c38) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(t0.c35 AS NUMERIC) THEN (~ (t0.c38)) WHEN ((t0.c35)GLOB(t0.c35)) THEN ((t0.c38)<(t0.c35)) WHEN (NOT (t0.c35)) THEN '418833038' END ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (t0.c38) ORDER BY CASE WHEN CAST(t0.c35 AS NUMERIC) THEN (~ (t0.c38)) WHEN ((t0.c35)GLOB(t0.c35)) THEN ((t0.c38)<(t0.c35)) WHEN (NOT (t0.c35)) THEN '418833038' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c38) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(t0.c35 AS NUMERIC) THEN (~ (t0.c38)) WHEN ((t0.c35)GLOB(t0.c35)) THEN ((t0.c38)<(t0.c35)) WHEN (NOT (t0.c35)) THEN '418833038' END ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (t0.c38) ORDER BY CASE WHEN CAST(t0.c35 AS NUMERIC) THEN (~ (t0.c38)) WHEN ((t0.c35)GLOB(t0.c35)) THEN ((t0.c38)<(t0.c35)) WHEN (NOT (t0.c35)) THEN '418833038' END ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((+ ((((-5.50619555E8))=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((-5.50619555E8))=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ ((((-5.50619555E8))=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((-5.50619555E8))=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ ((((-5.50619555E8))=((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(((vt0.c0)|(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))OR(((((((((t0.c35)OR(vt0.c0)))OR(t0.c38)))AND(t0.c38)))OR(t0.c38)))))AND(t0.c38 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(((vt0.c0)|(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))OR(((((((((t0.c35)OR(vt0.c0)))OR(t0.c38)))AND(t0.c38)))OR(t0.c38)))))AND(t0.c38 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(((vt0.c0)|(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))OR(((((((((t0.c35)OR(vt0.c0)))OR(t0.c38)))AND(t0.c38)))OR(t0.c38)))))AND(t0.c38 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(((vt0.c0)|(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))OR(((((((((t0.c35)OR(vt0.c0)))OR(t0.c38)))AND(t0.c38)))OR(t0.c38)))))AND(t0.c38 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(((vt0.c0)|(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))OR(((((((((t0.c35)OR(vt0.c0)))OR(t0.c38)))AND(t0.c38)))OR(t0.c38)))))AND(t0.c38 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TYPEOF(vt0.c1))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((TYPEOF(vt0.c1))) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TYPEOF(vt0.c1))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((TYPEOF(vt0.c1))) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TYPEOF(vt0.c1))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c38)*(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c38)*(vt0.c0)) AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c38)*(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c38)*(vt0.c0)) AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c38)*(vt0.c0)) AS REAL));
SELECT ALL * FROM vt0 WHERE ((((((+ (vt0.c1)))OR(IFNULL(DISTINCT vt0.c0, vt0.c1))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (((NULL, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))==((CAST(vt0.c0 AS NUMERIC), ((vt0.c1)<(vt0.c0)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))), ((((vt0.c0)=(vt0.c0)))>=(((vt0.c0) NOT BETWEEN ('801566485') AND (vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((+ (vt0.c1)))OR(IFNULL(DISTINCT vt0.c0, vt0.c1))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((NULL, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))==((CAST(vt0.c0 AS NUMERIC), ((vt0.c1)<(vt0.c0)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))), ((((vt0.c0)==(vt0.c0)))>=(((vt0.c0) NOT BETWEEN ('801566485') AND (vt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((+ (vt0.c1)))OR(IFNULL(DISTINCT vt0.c0, vt0.c1))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (((NULL, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))==((CAST(vt0.c0 AS NUMERIC), ((vt0.c1)<(vt0.c0)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))), ((((vt0.c0)=(vt0.c0)))>=(((vt0.c0) NOT BETWEEN ('801566485') AND (vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((+ (vt0.c1)))OR(IFNULL(DISTINCT vt0.c0, vt0.c1))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((NULL, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))==((CAST(vt0.c0 AS NUMERIC), ((vt0.c1)<(vt0.c0)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))), ((((vt0.c0)==(vt0.c0)))>=(((vt0.c0) NOT BETWEEN ('801566485') AND (vt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((+ (vt0.c1)))OR(IFNULL(DISTINCT vt0.c0, vt0.c1))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (((NULL, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))==((CAST(vt0.c0 AS NUMERIC), ((vt0.c1)<(vt0.c0)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))), ((((vt0.c0)=(vt0.c0)))>=(((vt0.c0) NOT BETWEEN ('801566485') AND (vt0.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ (((t0.c35) IS TRUE)))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c35) IS TRUE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ (((t0.c35) IS TRUE)))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c35) IS TRUE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ (((t0.c35) IS TRUE)))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((((vt0.c1)IS(vt0.c1))) NOT BETWEEN ((NOT (vt0.c0))) AND (CASE vt0.c1  WHEN t0.c38 THEN x'' END)) WHERE ((- (CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((vt0.c1)IS(vt0.c1))) NOT BETWEEN ((NOT (vt0.c0))) AND (CASE vt0.c1  WHEN t0.c38 THEN x'' END)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((((vt0.c1)IS(vt0.c1))) NOT BETWEEN ((NOT (vt0.c0))) AND (CASE vt0.c1  WHEN t0.c38 THEN x'' END)) WHERE ((- (CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((vt0.c1)IS(vt0.c1))) NOT BETWEEN ((NOT (vt0.c0))) AND (CASE vt0.c1  WHEN t0.c38 THEN x'' END)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((((vt0.c1)IS(vt0.c1))) NOT BETWEEN ((NOT (vt0.c0))) AND (CASE vt0.c1  WHEN t0.c38 THEN x'' END)) WHERE ((- (CAST(vt0.c1 AS TEXT))));
SELECT * FROM t0, vt0 WHERE ((((((t0.c35)) NOT BETWEEN ((NULL)) AND ((t0.c35))))/(CAST(vt0.c0 AS REAL)))) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((t0.c38 COLLATE NOCASE, ((((vt0.c0)OR(vt0.c1)))OR(t0.c38)), ((((t0.c38)OR(vt0.c0)))AND(vt0.c1)))) AND ((((vt0.c0) BETWEEN (t0.c38) AND (',랫{llB,C')), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, ((((((((t0.c38)OR(t0.c38)))AND(vt0.c1)))AND(t0.c35)))OR(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c35)) NOT BETWEEN ((NULL)) AND ((t0.c35))))/(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((t0.c38 COLLATE NOCASE, ((((vt0.c0)OR(vt0.c1)))OR(t0.c38)), ((((t0.c38)OR(vt0.c0)))AND(vt0.c1)))) AND ((((vt0.c0) BETWEEN (t0.c38) AND (',랫{llB,C')), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, ((((((((t0.c38)OR(t0.c38)))AND(vt0.c1)))AND(t0.c35)))OR(vt0.c0))))) ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ((((((t0.c35)) NOT BETWEEN ((NULL)) AND ((t0.c35))))/(CAST(vt0.c0 AS REAL)))) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((t0.c38 COLLATE NOCASE, ((((vt0.c0)OR(vt0.c1)))OR(t0.c38)), ((((t0.c38)OR(vt0.c0)))AND(vt0.c1)))) AND ((((vt0.c0) BETWEEN (t0.c38) AND (',랫{llB,C')), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, ((((((((t0.c38)OR(t0.c38)))AND(vt0.c1)))AND(t0.c35)))OR(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c35)) NOT BETWEEN ((NULL)) AND ((t0.c35))))/(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((t0.c38 COLLATE NOCASE, ((((vt0.c0)OR(vt0.c1)))OR(t0.c38)), ((((t0.c38)OR(vt0.c0)))AND(vt0.c1)))) AND ((((vt0.c0) BETWEEN (t0.c38) AND (',랫{llB,C')), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, ((((((((t0.c38)OR(t0.c38)))AND(vt0.c1)))AND(t0.c35)))OR(vt0.c0))))) ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ((((((t0.c35)) NOT BETWEEN ((NULL)) AND ((t0.c35))))/(CAST(vt0.c0 AS REAL)))) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((t0.c38 COLLATE NOCASE, ((((vt0.c0)OR(vt0.c1)))OR(t0.c38)), ((((t0.c38)OR(vt0.c0)))AND(vt0.c1)))) AND ((((vt0.c0) BETWEEN (t0.c38) AND (',랫{llB,C')), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, ((((((((t0.c38)OR(t0.c38)))AND(vt0.c1)))AND(t0.c35)))OR(vt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))AND(CAST(vt0.c1 AS INTEGER))))OR(0xffffffffd2396906)))AND(((vt0.c0) NOT BETWEEN ('2B') AND (vt0.c1)))))OR('-684604543')));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))AND(CAST(vt0.c1 AS INTEGER))))OR(0Xffffffffd2396906)))AND(((vt0.c0) NOT BETWEEN ('2B') AND (vt0.c1)))))OR('-684604543'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))AND(CAST(vt0.c1 AS INTEGER))))OR(0xffffffffd2396906)))AND(((vt0.c0) NOT BETWEEN ('2B') AND (vt0.c1)))))OR('-684604543')));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))AND(CAST(vt0.c1 AS INTEGER))))OR(0Xffffffffd2396906)))AND(((vt0.c0) NOT BETWEEN ('2B') AND (vt0.c1)))))OR('-684604543'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))AND(CAST(vt0.c1 AS INTEGER))))OR(0xffffffffd2396906)))AND(((vt0.c0) NOT BETWEEN ('2B') AND (vt0.c1)))))OR('-684604543')));
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY ((((t0.c38)*(t0.c35))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY ((((t0.c38)*(t0.c35))) NOTNULL));
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY ((((t0.c38)*(t0.c35))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY ((((t0.c38)*(t0.c35))) NOTNULL));
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY ((((t0.c38)*(t0.c35))) NOTNULL);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER));
SELECT ALL * FROM vt0, t0 WHERE (CAST((vt0.c1 IN (vt0.c0)) AS INTEGER)) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0 ORDER BY x'' ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (CAST((vt0.c1 IN (vt0.c0)) AS INTEGER)) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0 ORDER BY x'' ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (CAST((vt0.c1 IN (vt0.c0)) AS INTEGER)) ORDER BY x'' ASC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (json_insert((((t0.c35, vt0.c1, x'')) BETWEEN ((t0.c35, vt0.c1, t0.c35)) AND ((vt0.c0, vt0.c1, 'X6⊈~^G'))), ((((((((vt0.c0)AND(t0.c35)))AND(t0.c35)))OR(0.3364159251340182)))OR(vt0.c1)), t0.c35));
SELECT SUM(count) FROM (SELECT ((json_insert((((t0.c35, vt0.c1, x'')) BETWEEN ((t0.c35, vt0.c1, t0.c35)) AND ((vt0.c0, vt0.c1, 'X6⊈~^G'))), ((((((((vt0.c0)AND(t0.c35)))AND(t0.c35)))OR(0.3364159251340182)))OR(vt0.c1)), t0.c35)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (json_insert((((t0.c35, vt0.c1, x'')) BETWEEN ((t0.c35, vt0.c1, t0.c35)) AND ((vt0.c0, vt0.c1, 'X6⊈~^G'))), ((((((((vt0.c0)AND(t0.c35)))AND(t0.c35)))OR(0.3364159251340182)))OR(vt0.c1)), t0.c35));
SELECT SUM(count) FROM (SELECT ((json_insert((((t0.c35, vt0.c1, x'')) BETWEEN ((t0.c35, vt0.c1, t0.c35)) AND ((vt0.c0, vt0.c1, 'X6⊈~^G'))), ((((((((vt0.c0)AND(t0.c35)))AND(t0.c35)))OR(0.3364159251340182)))OR(vt0.c1)), t0.c35)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)IS NOT(vt0.c1)) COLLATE NOCASE) ORDER BY CASE WHEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c1 IN (vt0.c1)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (0.9370858223426338)) THEN CAST(vt0.c1 AS TEXT) WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (NULL IN ()) THEN ((vt0.c0)|(vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)IS NOT(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c1 IN (vt0.c1)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (0.9370858223426338)) THEN CAST(vt0.c1 AS TEXT) WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (NULL IN ()) THEN ((vt0.c0)|(vt0.c1)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)IS NOT(vt0.c1)) COLLATE NOCASE) ORDER BY CASE WHEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c1 IN (vt0.c1)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (0.9370858223426338)) THEN CAST(vt0.c1 AS TEXT) WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (NULL IN ()) THEN ((vt0.c0)|(vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)IS NOT(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c1 IN (vt0.c1)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (0.9370858223426338)) THEN CAST(vt0.c1 AS TEXT) WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (NULL IN ()) THEN ((vt0.c0)|(vt0.c1)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)IS NOT(vt0.c1)) COLLATE NOCASE) ORDER BY CASE WHEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c1 IN (vt0.c1)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (0.9370858223426338)) THEN CAST(vt0.c1 AS TEXT) WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (NULL IN ()) THEN ((vt0.c0)|(vt0.c1)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (rtreenode(t0.c35, t0.c35)))) ORDER BY (NOT (CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rtreenode(t0.c35, t0.c35)))) IS TRUE)  as count FROM t0 ORDER BY (NOT (CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (rtreenode(t0.c35, t0.c35)))) ORDER BY (NOT (CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rtreenode(t0.c35, t0.c35)))) IS TRUE)  as count FROM t0 ORDER BY (NOT (CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (rtreenode(t0.c35, t0.c35)))) ORDER BY (NOT (CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY CASE (((vt0.c1))<=((vt0.c0)))  WHEN CAST(vt0.c0 AS BLOB) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c1))<=((vt0.c0)))  WHEN CAST(vt0.c0 AS BLOB) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) END DESC);
SELECT * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY CASE (((vt0.c1))<=((vt0.c0)))  WHEN CAST(vt0.c0 AS BLOB) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c1))<=((vt0.c0)))  WHEN CAST(vt0.c0 AS BLOB) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) END DESC);
SELECT * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY CASE (((vt0.c1))<=((vt0.c0)))  WHEN CAST(vt0.c0 AS BLOB) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) END DESC;
SELECT ALL * FROM vt0, t0 WHERE (((((x'29c6')GLOB('-1839373145'))) IS TRUE)) ORDER BY ((((- (vt0.c0))))<=((((vt0.c1) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'29c6')GLOB('-1839373145'))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((- (vt0.c0))))<=((((vt0.c1) IS TRUE))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((x'29c6')GLOB('-1839373145'))) IS TRUE)) ORDER BY ((((- (vt0.c0))))<=((((vt0.c1) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'29c6')GLOB('-1839373145'))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((- (vt0.c0))))<=((((vt0.c1) IS TRUE))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((x'29c6')GLOB('-1839373145'))) IS TRUE)) ORDER BY ((((- (vt0.c0))))<=((((vt0.c1) IS TRUE))))  NULLS FIRST;
SELECT * FROM t0 CROSS JOIN vt0 ON ((t0.c38) NOT NULL) WHERE ((NOT (t0.c38)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c38)) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((t0.c38) NOT NULL));
SELECT * FROM t0 CROSS JOIN vt0 ON ((t0.c38) NOT NULL) WHERE ((NOT (t0.c38)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c38)) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((t0.c38) NOT NULL));
SELECT * FROM t0 CROSS JOIN vt0 ON ((t0.c38) NOT NULL) WHERE ((NOT (t0.c38)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c38) BETWEEN (t0.c38) AND (t0.c35))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c38) BETWEEN (t0.c38) AND (t0.c35))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c38) BETWEEN (t0.c38) AND (t0.c35))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c38) BETWEEN (t0.c38) AND (t0.c35))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c38) BETWEEN (t0.c38) AND (t0.c35))) NOTNULL));
SELECT * FROM vt0 INDEXED BY i21, t0 WHERE (NULL) ORDER BY (((((vt0.c0)OR(NULL)))OR(vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INDEXED BY i21, t0 ORDER BY (((((vt0.c0)OR(NULL)))OR(vt0.c1)) IN ()));
SELECT * FROM vt0 INDEXED BY i21, t0 WHERE (NULL) ORDER BY (((((vt0.c0)OR(NULL)))OR(vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INDEXED BY i21, t0 ORDER BY (((((vt0.c0)OR(NULL)))OR(vt0.c1)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ('HrR5MvvQ'))) NOT BETWEEN (NULL) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ('HrR5MvvQ'))) NOT BETWEEN (NULL) AND (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ('HrR5MvvQ'))) NOT BETWEEN (NULL) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ('HrR5MvvQ'))) NOT BETWEEN (NULL) AND (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ('HrR5MvvQ'))) NOT BETWEEN (NULL) AND (vt0.c1)));
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (CASE (t0.c38 IN ())  WHEN ((vt0.c0)>>(t0.c35)) THEN ((t0.c38)IS(t0.c38)) WHEN (NOT (vt0.c1)) THEN ((vt0.c0)OR(t0.c35)) WHEN ((NULL) BETWEEN (vt0.c0) AND (t0.c38)) THEN ((t0.c35) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((vt0.c0) BETWEEN (x'') AND (t0.c38)) END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c38 IN ())  WHEN ((vt0.c0)>>(t0.c35)) THEN ((t0.c38)IS(t0.c38)) WHEN (NOT (vt0.c1)) THEN ((vt0.c0)OR(t0.c35)) WHEN ((NULL) BETWEEN (vt0.c0) AND (t0.c38)) THEN ((t0.c35) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((vt0.c0) BETWEEN (x'') AND (t0.c38)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (CASE (t0.c38 IN ())  WHEN ((vt0.c0)>>(t0.c35)) THEN ((t0.c38)IS(t0.c38)) WHEN (NOT (vt0.c1)) THEN ((vt0.c0)OR(t0.c35)) WHEN ((NULL) BETWEEN (vt0.c0) AND (t0.c38)) THEN ((t0.c35) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((vt0.c0) BETWEEN (x'') AND (t0.c38)) END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c38 IN ())  WHEN ((vt0.c0)>>(t0.c35)) THEN ((t0.c38)IS(t0.c38)) WHEN (NOT (vt0.c1)) THEN ((vt0.c0)OR(t0.c35)) WHEN ((NULL) BETWEEN (vt0.c0) AND (t0.c38)) THEN ((t0.c35) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((vt0.c0) BETWEEN (x'') AND (t0.c38)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (CASE (t0.c38 IN ())  WHEN ((vt0.c0)>>(t0.c35)) THEN ((t0.c38)IS(t0.c38)) WHEN (NOT (vt0.c1)) THEN ((vt0.c0)OR(t0.c35)) WHEN ((NULL) BETWEEN (vt0.c0) AND (t0.c38)) THEN ((t0.c35) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((vt0.c0) BETWEEN (x'') AND (t0.c38)) END);
SELECT * FROM vt0 WHERE ('-180828281') ORDER BY ((((vt0.c1)OR(-948808802)))OR(vt0.c1)) COLLATE BINARY  NULLS LAST, (NOT ((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c1, vt0.c0, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-180828281') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)OR(-948808802)))OR(vt0.c1)) COLLATE BINARY  NULLS LAST, (NOT ((((vt0.c1, vt0.c1, vt0.c1))=((vt0.c1, vt0.c0, vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ('-180828281') ORDER BY ((((vt0.c1)OR(-948808802)))OR(vt0.c1)) COLLATE BINARY  NULLS LAST, (NOT ((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c1, vt0.c0, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-180828281') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)OR(-948808802)))OR(vt0.c1)) COLLATE BINARY  NULLS LAST, (NOT ((((vt0.c1, vt0.c1, vt0.c1))=((vt0.c1, vt0.c0, vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ('-180828281') ORDER BY ((((vt0.c1)OR(-948808802)))OR(vt0.c1)) COLLATE BINARY  NULLS LAST, (NOT ((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c1, vt0.c0, vt0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c38 AS BLOB))&(((t0.c38)+(t0.c38))))) ORDER BY CAST(0.16124447780954987 AS REAL);
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c38 AS BLOB))&(((t0.c38)+(t0.c38))))) IS TRUE)  as count FROM t0 ORDER BY CAST(0.16124447780954987 AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c38 AS BLOB))&(((t0.c38)+(t0.c38))))) ORDER BY CAST(0.16124447780954987 AS REAL);
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c38 AS BLOB))&(((t0.c38)+(t0.c38))))) IS TRUE)  as count FROM t0 ORDER BY CAST(0.16124447780954987 AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c38 AS BLOB))&(((t0.c38)+(t0.c38))))) ORDER BY CAST(0.16124447780954987 AS REAL);
SELECT ALL COUNT(*) FROM vt0 WHERE (MIN(SUBSTR(vt0.c1, vt0.c0), ((vt0.c1)OR(vt0.c1)))) ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE) DESC, CASE TRIM(DISTINCT vt0.c1)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1)&(vt0.c1)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((MIN(SUBSTR(vt0.c1, vt0.c0), ((vt0.c1)OR(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE) DESC, CASE TRIM(DISTINCT vt0.c1)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1)&(vt0.c1)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (MIN(SUBSTR(vt0.c1, vt0.c0), ((vt0.c1)OR(vt0.c1)))) ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE) DESC, CASE TRIM(DISTINCT vt0.c1)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1)&(vt0.c1)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((MIN(SUBSTR(vt0.c1, vt0.c0), ((vt0.c1)OR(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE) DESC, CASE TRIM(DISTINCT vt0.c1)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1)&(vt0.c1)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (MIN(SUBSTR(vt0.c1, vt0.c0), ((vt0.c1)OR(vt0.c1)))) ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE) DESC, CASE TRIM(DISTINCT vt0.c1)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1)&(vt0.c1)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ASC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (((t0.c35)>>(t0.c35)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35)>>(t0.c35)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c35)>>(t0.c35)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35)>>(t0.c35)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c35)>>(t0.c35)) COLLATE RTRIM);
SELECT * FROM t0 WHERE ((((~ (t0.c38)))&(t0.c38)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c38)))&(t0.c38))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((~ (t0.c38)))&(t0.c38)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c38)))&(t0.c38))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((~ (t0.c38)))&(t0.c38)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c1)=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)==(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c1)=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)==(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c1)=(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c38)<(0.5279390998972134)))AND(((t0.c38) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c38)<(0.5279390998972134)))AND(((t0.c38) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c38)<(0.5279390998972134)))AND(((t0.c38) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c38)<(0.5279390998972134)))AND(((t0.c38) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c38)<(0.5279390998972134)))AND(((t0.c38) IS FALSE))));
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c38)) NOT BETWEEN ((((t0.c38)/(vt0.c0)))) AND ((t0.c35 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((t0.c38)) NOT BETWEEN ((((t0.c38)/(vt0.c0)))) AND ((t0.c35 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c38)) NOT BETWEEN ((((t0.c38)/(vt0.c0)))) AND ((t0.c35 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((t0.c38)) NOT BETWEEN ((((t0.c38)/(vt0.c0)))) AND ((t0.c35 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c38)) NOT BETWEEN ((((t0.c38)/(vt0.c0)))) AND ((t0.c35 COLLATE RTRIM))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON CAST(((t0.c38) IS TRUE) AS REAL) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST(((t0.c38) IS TRUE) AS REAL));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON CAST(((t0.c38) IS TRUE) AS REAL) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST(((t0.c38) IS TRUE) AS REAL));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON CAST(((t0.c38) IS TRUE) AS REAL) WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELIHOOD(DISTINCT (t0.c38 IN (t0.c38)), 0.6426167775277364));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (t0.c38 IN (t0.c38)), 0.6426167775277364)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELIHOOD(DISTINCT (t0.c38 IN (t0.c38)), 0.6426167775277364));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (t0.c38 IN (t0.c38)), 0.6426167775277364)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELIHOOD(DISTINCT (t0.c38 IN (t0.c38)), 0.6426167775277364));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN (((vt0.c0, vt0.c0, x''))<=((t0.c35, vt0.c0, t0.c38))) THEN ((t0.c38)IS(vt0.c1)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN t0.c38 WHEN vt0.c0 THEN t0.c35 WHEN vt0.c1 THEN t0.c35 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS BLOB)  WHEN (((vt0.c0, vt0.c0, x''))<=((t0.c35, vt0.c0, t0.c38))) THEN ((t0.c38)IS(vt0.c1)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN t0.c38 WHEN vt0.c0 THEN t0.c35 WHEN vt0.c1 THEN t0.c35 ELSE vt0.c0 END END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN (((vt0.c0, vt0.c0, x''))<=((t0.c35, vt0.c0, t0.c38))) THEN ((t0.c38)IS(vt0.c1)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN t0.c38 WHEN vt0.c0 THEN t0.c35 WHEN vt0.c1 THEN t0.c35 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS BLOB)  WHEN (((vt0.c0, vt0.c0, x''))<=((t0.c35, vt0.c0, t0.c38))) THEN ((t0.c38)IS(vt0.c1)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN t0.c38 WHEN vt0.c0 THEN t0.c35 WHEN vt0.c1 THEN t0.c35 ELSE vt0.c0 END END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN (((vt0.c0, vt0.c0, x''))<=((t0.c35, vt0.c0, t0.c38))) THEN ((t0.c38)IS(vt0.c1)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN t0.c38 WHEN vt0.c0 THEN t0.c35 WHEN vt0.c1 THEN t0.c35 ELSE vt0.c0 END END);
SELECT COUNT(*) FROM vt0, t0 WHERE (x'3cf1' COLLATE RTRIM) ORDER BY CASE CASE vt0.c1  WHEN t0.c35 THEN vt0.c0 END  WHEN ((((((((t0.c38)OR(t0.c35)))OR(vt0.c0)))OR(vt0.c1)))AND(t0.c35)) THEN (((t0.c38))<((t0.c35))) END ASC, NULL, ((((t0.c38)%(t0.c38)))<<(vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'3cf1' COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE CASE vt0.c1  WHEN t0.c35 THEN vt0.c0 END  WHEN ((((((((t0.c38)OR(t0.c35)))OR(vt0.c0)))OR(vt0.c1)))AND(t0.c35)) THEN (((t0.c38))<((t0.c35))) END ASC, NULL, ((((t0.c38)%(t0.c38)))<<(vt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (x'3cf1' COLLATE RTRIM) ORDER BY CASE CASE vt0.c1  WHEN t0.c35 THEN vt0.c0 END  WHEN ((((((((t0.c38)OR(t0.c35)))OR(vt0.c0)))OR(vt0.c1)))AND(t0.c35)) THEN (((t0.c38))<((t0.c35))) END ASC, NULL, ((((t0.c38)%(t0.c38)))<<(vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'3cf1' COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE CASE vt0.c1  WHEN t0.c35 THEN vt0.c0 END  WHEN ((((((((t0.c38)OR(t0.c35)))OR(vt0.c0)))OR(vt0.c1)))AND(t0.c35)) THEN (((t0.c38))<((t0.c35))) END ASC, NULL, ((((t0.c38)%(t0.c38)))<<(vt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (x'3cf1' COLLATE RTRIM) ORDER BY CASE CASE vt0.c1  WHEN t0.c35 THEN vt0.c0 END  WHEN ((((((((t0.c38)OR(t0.c35)))OR(vt0.c0)))OR(vt0.c1)))AND(t0.c35)) THEN (((t0.c38))<((t0.c35))) END ASC, NULL, ((((t0.c38)%(t0.c38)))<<(vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((- (((vt0.c0)IS NOT(t0.c38))))) ORDER BY (((t0.c35 IN (vt0.c1))) NOT BETWEEN (GLOB(t0.c38, vt0.c0)) AND (IFNULL(t0.c38, t0.c38))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)IS NOT(t0.c38))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (((t0.c35 IN (vt0.c1))) NOT BETWEEN (GLOB(t0.c38, vt0.c0)) AND (IFNULL(t0.c38, t0.c38))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((- (((vt0.c0)IS NOT(t0.c38))))) ORDER BY (((t0.c35 IN (vt0.c1))) NOT BETWEEN (GLOB(t0.c38, vt0.c0)) AND (IFNULL(t0.c38, t0.c38))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)IS NOT(t0.c38))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (((t0.c35 IN (vt0.c1))) NOT BETWEEN (GLOB(t0.c38, vt0.c0)) AND (IFNULL(t0.c38, t0.c38))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((- (((vt0.c0)IS NOT(t0.c38))))) ORDER BY (((t0.c35 IN (vt0.c1))) NOT BETWEEN (GLOB(t0.c38, vt0.c0)) AND (IFNULL(t0.c38, t0.c38))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT * FROM vt0, t0 INDEXED BY i21 WHERE (((((vt0.c1)IS NOT(t0.c35))) NOTNULL)) ORDER BY CAST(((t0.c35) ISNULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS NOT(t0.c35))) NOTNULL)) IS TRUE)  as count FROM vt0, t0 INDEXED BY i21 ORDER BY CAST(((t0.c35) ISNULL) AS TEXT));
SELECT * FROM vt0, t0 INDEXED BY i21 WHERE (((((vt0.c1)IS NOT(t0.c35))) NOTNULL)) ORDER BY CAST(((t0.c35) ISNULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS NOT(t0.c35))) NOTNULL)) IS TRUE)  as count FROM vt0, t0 INDEXED BY i21 ORDER BY CAST(((t0.c35) ISNULL) AS TEXT));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) IN ())) ORDER BY NULLIF(DISTINCT (0.5999355089923196 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(DISTINCT (0.5999355089923196 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) IN ())) ORDER BY NULLIF(DISTINCT (0.5999355089923196 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(DISTINCT (0.5999355089923196 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) IN ())) ORDER BY NULLIF(DISTINCT (0.5999355089923196 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c35)) AS BLOB) WHERE ((((((-1311153372, t0.c38, vt0.c0))<>((t0.c35, vt0.c1, vt0.c1)))) NOT BETWEEN (((vt0.c1) IS FALSE)) AND (((t0.c35) NOT BETWEEN (t0.c35) AND (vt0.c0))))) ORDER BY CAST(t0.c38 COLLATE RTRIM AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((((-1311153372, t0.c38, vt0.c0))!=((t0.c35, vt0.c1, vt0.c1)))) NOT BETWEEN (((vt0.c1) IS FALSE)) AND (((t0.c35) NOT BETWEEN (t0.c35) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c35)) AS BLOB) ORDER BY CAST(t0.c38 COLLATE RTRIM AS NUMERIC));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c35)) AS BLOB) WHERE ((((((-1311153372, t0.c38, vt0.c0))<>((t0.c35, vt0.c1, vt0.c1)))) NOT BETWEEN (((vt0.c1) IS FALSE)) AND (((t0.c35) NOT BETWEEN (t0.c35) AND (vt0.c0))))) ORDER BY CAST(t0.c38 COLLATE RTRIM AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((((-1311153372, t0.c38, vt0.c0))!=((t0.c35, vt0.c1, vt0.c1)))) NOT BETWEEN (((vt0.c1) IS FALSE)) AND (((t0.c35) NOT BETWEEN (t0.c35) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c35)) AS BLOB) ORDER BY CAST(t0.c38 COLLATE RTRIM AS NUMERIC));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c35)) AS BLOB) WHERE ((((((-1311153372, t0.c38, vt0.c0))<>((t0.c35, vt0.c1, vt0.c1)))) NOT BETWEEN (((vt0.c1) IS FALSE)) AND (((t0.c35) NOT BETWEEN (t0.c35) AND (vt0.c0))))) ORDER BY CAST(t0.c38 COLLATE RTRIM AS NUMERIC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c1)) AND (('-684604543')))) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (((x'bc69')%(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c1)) AND (('-684604543')))) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (((x'bc69')%(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c1)) AND (('-684604543')))) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (((x'bc69')%(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c1)) AND (('-684604543')))) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (((x'bc69')%(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c1)) AND (('-684604543')))) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (((x'bc69')%(vt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (LTRIM((+ (vt0.c1)))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((+ (vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY x''  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (LTRIM((+ (vt0.c1)))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((+ (vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY x''  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (LTRIM((+ (vt0.c1)))) ORDER BY x''  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (CASE ABS(DISTINCT vt0.c1)  WHEN '' THEN LOWER(t0.c35) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(DISTINCT vt0.c1)  WHEN '' THEN LOWER(t0.c35) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE ABS(DISTINCT vt0.c1)  WHEN '' THEN LOWER(t0.c35) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(DISTINCT vt0.c1)  WHEN '' THEN LOWER(t0.c35) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE ABS(DISTINCT vt0.c1)  WHEN '' THEN LOWER(t0.c35) END);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c1, 437909263, t0.c38, t0.c35, '')) NOT BETWEEN ((vt0.c1 COLLATE RTRIM, (t0.c35 IN ()), 0Xffffffffbaa673b5, UNLIKELY(DISTINCT vt0.c0), CASE WHEN t0.c35 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c38 THEN t0.c35 END)) AND ((STRFTIME(t0.c35, vt0.c1, vt0.c0), ((((vt0.c0)OR(t0.c38)))OR(vt0.c1)), LIKELIHOOD(vt0.c0, 0.8882008528049031), t0.c35 COLLATE RTRIM, UNLIKELY(DISTINCT vt0.c0))))) ORDER BY (NOT ((- (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, 437909263, t0.c38, t0.c35, '')) NOT BETWEEN ((vt0.c1 COLLATE RTRIM, (t0.c35 IN ()), 0xffffffffbaa673b5, UNLIKELY(DISTINCT vt0.c0), CASE WHEN t0.c35 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c38 THEN t0.c35 END)) AND ((STRFTIME(t0.c35, vt0.c1, vt0.c0), ((((vt0.c0)OR(t0.c38)))OR(vt0.c1)), LIKELIHOOD(vt0.c0, 0.8882008528049031), t0.c35 COLLATE RTRIM, UNLIKELY(DISTINCT vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT ((- (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c1, 437909263, t0.c38, t0.c35, '')) NOT BETWEEN ((vt0.c1 COLLATE RTRIM, (t0.c35 IN ()), 0Xffffffffbaa673b5, UNLIKELY(DISTINCT vt0.c0), CASE WHEN t0.c35 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c38 THEN t0.c35 END)) AND ((STRFTIME(t0.c35, vt0.c1, vt0.c0), ((((vt0.c0)OR(t0.c38)))OR(vt0.c1)), LIKELIHOOD(vt0.c0, 0.8882008528049031), t0.c35 COLLATE RTRIM, UNLIKELY(DISTINCT vt0.c0))))) ORDER BY (NOT ((- (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, 437909263, t0.c38, t0.c35, '')) NOT BETWEEN ((vt0.c1 COLLATE RTRIM, (t0.c35 IN ()), 0xffffffffbaa673b5, UNLIKELY(DISTINCT vt0.c0), CASE WHEN t0.c35 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c38 THEN t0.c35 END)) AND ((STRFTIME(t0.c35, vt0.c1, vt0.c0), ((((vt0.c0)OR(t0.c38)))OR(vt0.c1)), LIKELIHOOD(vt0.c0, 0.8882008528049031), t0.c35 COLLATE RTRIM, UNLIKELY(DISTINCT vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT ((- (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c1, 437909263, t0.c38, t0.c35, '')) NOT BETWEEN ((vt0.c1 COLLATE RTRIM, (t0.c35 IN ()), 0Xffffffffbaa673b5, UNLIKELY(DISTINCT vt0.c0), CASE WHEN t0.c35 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c38 THEN t0.c35 END)) AND ((STRFTIME(t0.c35, vt0.c1, vt0.c0), ((((vt0.c0)OR(t0.c38)))OR(vt0.c1)), LIKELIHOOD(vt0.c0, 0.8882008528049031), t0.c35 COLLATE RTRIM, UNLIKELY(DISTINCT vt0.c0))))) ORDER BY (NOT ((- (vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE (-1.339622945E9) ORDER BY ((t0.c35) NOT NULL)  NULLS FIRST, CASE ((((((((((((t0.c38)OR(t0.c35)))AND(t0.c35)))OR(t0.c38)))AND(NULL)))AND(t0.c38)))AND(t0.c35))  WHEN CAST(t0.c38 AS INTEGER) THEN ((t0.c35) BETWEEN (t0.c38) AND (t0.c38)) WHEN (t0.c35 IN ()) THEN ((t0.c38) NOTNULL) WHEN (t0.c35 IN ()) THEN (NOT (t0.c38)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1.339622945E9) IS TRUE)  as count FROM t0 ORDER BY ((t0.c35) NOT NULL)  NULLS FIRST, CASE ((((((((((((t0.c38)OR(t0.c35)))AND(t0.c35)))OR(t0.c38)))AND(NULL)))AND(t0.c38)))AND(t0.c35))  WHEN CAST(t0.c38 AS INTEGER) THEN ((t0.c35) BETWEEN (t0.c38) AND (t0.c38)) WHEN (t0.c35 IN ()) THEN ((t0.c38) NOTNULL) WHEN (t0.c35 IN ()) THEN (NOT (t0.c38)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (-1.339622945E9) ORDER BY ((t0.c35) NOT NULL)  NULLS FIRST, CASE ((((((((((((t0.c38)OR(t0.c35)))AND(t0.c35)))OR(t0.c38)))AND(NULL)))AND(t0.c38)))AND(t0.c35))  WHEN CAST(t0.c38 AS INTEGER) THEN ((t0.c35) BETWEEN (t0.c38) AND (t0.c38)) WHEN (t0.c35 IN ()) THEN ((t0.c38) NOTNULL) WHEN (t0.c35 IN ()) THEN (NOT (t0.c38)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1.339622945E9) IS TRUE)  as count FROM t0 ORDER BY ((t0.c35) NOT NULL)  NULLS FIRST, CASE ((((((((((((t0.c38)OR(t0.c35)))AND(t0.c35)))OR(t0.c38)))AND(NULL)))AND(t0.c38)))AND(t0.c35))  WHEN CAST(t0.c38 AS INTEGER) THEN ((t0.c35) BETWEEN (t0.c38) AND (t0.c38)) WHEN (t0.c35 IN ()) THEN ((t0.c38) NOTNULL) WHEN (t0.c35 IN ()) THEN (NOT (t0.c38)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (-1.339622945E9) ORDER BY ((t0.c35) NOT NULL)  NULLS FIRST, CASE ((((((((((((t0.c38)OR(t0.c35)))AND(t0.c35)))OR(t0.c38)))AND(NULL)))AND(t0.c38)))AND(t0.c35))  WHEN CAST(t0.c38 AS INTEGER) THEN ((t0.c35) BETWEEN (t0.c38) AND (t0.c38)) WHEN (t0.c35 IN ()) THEN ((t0.c38) NOTNULL) WHEN (t0.c35 IN ()) THEN (NOT (t0.c38)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((NULLIF(t0.c35, vt0.c0))|(((vt0.c0)>>(vt0.c1))))) ORDER BY (((+ (t0.c38)))*((vt0.c1 IN (t0.c35)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t0.c35, vt0.c0))|(((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((+ (t0.c38)))*((vt0.c1 IN (t0.c35)))) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((NULLIF(t0.c35, vt0.c0))|(((vt0.c0)>>(vt0.c1))))) ORDER BY (((+ (t0.c38)))*((vt0.c1 IN (t0.c35)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t0.c35, vt0.c0))|(((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((+ (t0.c38)))*((vt0.c1 IN (t0.c35)))) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((NULLIF(t0.c35, vt0.c0))|(((vt0.c0)>>(vt0.c1))))) ORDER BY (((+ (t0.c38)))*((vt0.c1 IN (t0.c35)))) ASC;
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((t0.c35)) NOT BETWEEN ((t0.c35)) AND ((t0.c38))))OR(((t0.c38) NOTNULL))))OR(((t0.c35) NOT NULL))))OR(((t0.c35) NOT BETWEEN ('-1068822255') AND (0Xffffffffd7371a9a)))))AND(((t0.c35)&(vt0.c1)))) WHERE ('515392795');
SELECT SUM(count) FROM (SELECT (('515392795') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((t0.c35)) NOT BETWEEN ((t0.c35)) AND ((t0.c38))))OR(((t0.c38) NOTNULL))))OR(((t0.c35) NOT NULL))))OR(((t0.c35) NOT BETWEEN ('-1068822255') AND (0xffffffffd7371a9a)))))AND(((t0.c35)&(vt0.c1)))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((t0.c35)) NOT BETWEEN ((t0.c35)) AND ((t0.c38))))OR(((t0.c38) NOTNULL))))OR(((t0.c35) NOT NULL))))OR(((t0.c35) NOT BETWEEN ('-1068822255') AND (0Xffffffffd7371a9a)))))AND(((t0.c35)&(vt0.c1)))) WHERE ('515392795');
SELECT SUM(count) FROM (SELECT (('515392795') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((t0.c35)) NOT BETWEEN ((t0.c35)) AND ((t0.c38))))OR(((t0.c38) NOTNULL))))OR(((t0.c35) NOT NULL))))OR(((t0.c35) NOT BETWEEN ('-1068822255') AND (0xffffffffd7371a9a)))))AND(((t0.c35)&(vt0.c1)))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((t0.c35)) NOT BETWEEN ((t0.c35)) AND ((t0.c38))))OR(((t0.c38) NOTNULL))))OR(((t0.c35) NOT NULL))))OR(((t0.c35) NOT BETWEEN ('-1068822255') AND (0Xffffffffd7371a9a)))))AND(((t0.c35)&(vt0.c1)))) WHERE ('515392795');
SELECT * FROM t0 WHERE (((t0.c35 IN ()) IN (((((((((t0.c38)OR(t0.c38)))AND(t0.c35)))OR(t0.c38)))OR(t0.c38))))) ORDER BY '-594470168' DESC  NULLS FIRST, (((t0.c38)IS(t0.c35)) IN ()) ASC  NULLS FIRST, (((+ (t0.c38)))/(((t0.c38) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35 IN ()) IN (((((((((t0.c38)OR(t0.c38)))AND(t0.c35)))OR(t0.c38)))OR(t0.c38))))) IS TRUE)  as count FROM t0 ORDER BY '-594470168' DESC  NULLS FIRST, (((t0.c38)IS(t0.c35)) IN ()) ASC  NULLS FIRST, (((+ (t0.c38)))/(((t0.c38) IS FALSE))) ASC);
SELECT * FROM t0 WHERE (((t0.c35 IN ()) IN (((((((((t0.c38)OR(t0.c38)))AND(t0.c35)))OR(t0.c38)))OR(t0.c38))))) ORDER BY '-594470168' DESC  NULLS FIRST, (((t0.c38)IS(t0.c35)) IN ()) ASC  NULLS FIRST, (((+ (t0.c38)))/(((t0.c38) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35 IN ()) IN (((((((((t0.c38)OR(t0.c38)))AND(t0.c35)))OR(t0.c38)))OR(t0.c38))))) IS TRUE)  as count FROM t0 ORDER BY '-594470168' DESC  NULLS FIRST, (((t0.c38)IS(t0.c35)) IN ()) ASC  NULLS FIRST, (((+ (t0.c38)))/(((t0.c38) IS FALSE))) ASC);
SELECT * FROM t0 WHERE (((t0.c35 IN ()) IN (((((((((t0.c38)OR(t0.c38)))AND(t0.c35)))OR(t0.c38)))OR(t0.c38))))) ORDER BY '-594470168' DESC  NULLS FIRST, (((t0.c38)IS(t0.c35)) IN ()) ASC  NULLS FIRST, (((+ (t0.c38)))/(((t0.c38) IS FALSE))) ASC;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (- (vt0.c0 COLLATE RTRIM)) WHERE (SQLITE_COMPILEOPTION_GET(((((((((((((vt0.c1)AND(vt0.c1)))AND('-1826413037')))AND(t0.c35)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((((((((((((vt0.c1)AND(vt0.c1)))AND('-1826413037')))AND(t0.c35)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (- (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (- (vt0.c0 COLLATE RTRIM)) WHERE (SQLITE_COMPILEOPTION_GET(((((((((((((vt0.c1)AND(vt0.c1)))AND('-1826413037')))AND(t0.c35)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((((((((((((vt0.c1)AND(vt0.c1)))AND('-1826413037')))AND(t0.c35)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (- (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (- (vt0.c0 COLLATE RTRIM)) WHERE (SQLITE_COMPILEOPTION_GET(((((((((((((vt0.c1)AND(vt0.c1)))AND('-1826413037')))AND(t0.c35)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))));
SELECT * FROM vt0, t0 WHERE ((NOT (CAST(t0.c35 AS TEXT)))) ORDER BY LIKELY(((((((((vt0.c1)OR(vt0.c1)))AND(t0.c35)))OR('-1e500')))AND(vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c35 AS TEXT)))) IS TRUE)  as count FROM vt0, t0 ORDER BY LIKELY(((((((((vt0.c1)OR(vt0.c1)))AND(t0.c35)))OR('-1e500')))AND(vt0.c0))) DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((NOT (CAST(t0.c35 AS TEXT)))) ORDER BY LIKELY(((((((((vt0.c1)OR(vt0.c1)))AND(t0.c35)))OR('-1e500')))AND(vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c35 AS TEXT)))) IS TRUE)  as count FROM vt0, t0 ORDER BY LIKELY(((((((((vt0.c1)OR(vt0.c1)))AND(t0.c35)))OR('-1e500')))AND(vt0.c0))) DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((NOT (CAST(t0.c35 AS TEXT)))) ORDER BY LIKELY(((((((((vt0.c1)OR(vt0.c1)))AND(t0.c35)))OR('-1e500')))AND(vt0.c0))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((+ (CAST(vt0.c1 AS REAL)))) ORDER BY (CAST(vt0.c1 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c1 AS REAL) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((+ (CAST(vt0.c1 AS REAL)))) ORDER BY (CAST(vt0.c1 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c1 AS REAL) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((+ (CAST(vt0.c1 AS REAL)))) ORDER BY (CAST(vt0.c1 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c35)AND(t0.c35)))AND(t0.c35))))) ORDER BY CAST(CASE t0.c35  WHEN t0.c38 THEN t0.c35 ELSE t0.c38 END AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((t0.c35)AND(t0.c35)))AND(t0.c35))))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c35  WHEN t0.c38 THEN t0.c35 ELSE t0.c38 END AS BLOB) DESC);
SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c35)AND(t0.c35)))AND(t0.c35))))) ORDER BY CAST(CASE t0.c35  WHEN t0.c38 THEN t0.c35 ELSE t0.c38 END AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((t0.c35)AND(t0.c35)))AND(t0.c35))))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c35  WHEN t0.c38 THEN t0.c35 ELSE t0.c38 END AS BLOB) DESC);
SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c35)AND(t0.c35)))AND(t0.c35))))) ORDER BY CAST(CASE t0.c35  WHEN t0.c38 THEN t0.c35 ELSE t0.c38 END AS BLOB) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((LOWER(DISTINCT t0.c35) IN ((t0.c38 IN ()), ((t0.c35) ISNULL)))) ORDER BY (((t0.c38) NOT BETWEEN (t0.c38) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((LOWER(DISTINCT t0.c35) IN ((t0.c38 IN ()), ((t0.c35) ISNULL)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c38) NOT BETWEEN (t0.c38) AND (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((LOWER(DISTINCT t0.c35) IN ((t0.c38 IN ()), ((t0.c35) ISNULL)))) ORDER BY (((t0.c38) NOT BETWEEN (t0.c38) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((LOWER(DISTINCT t0.c35) IN ((t0.c38 IN ()), ((t0.c35) ISNULL)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c38) NOT BETWEEN (t0.c38) AND (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((LOWER(DISTINCT t0.c35) IN ((t0.c38 IN ()), ((t0.c35) ISNULL)))) ORDER BY (((t0.c38) NOT BETWEEN (t0.c38) AND (vt0.c0)) IN ());
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN (CAST(t0.c38 AS REAL)) AND ((vt0.c0 IN ()))) WHERE ((rtreenode(vt0.c1, t0.c38) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rtreenode(vt0.c1, t0.c38) IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN (CAST(t0.c38 AS REAL)) AND ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN (CAST(t0.c38 AS REAL)) AND ((vt0.c0 IN ()))) WHERE ((rtreenode(vt0.c1, t0.c38) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rtreenode(vt0.c1, t0.c38) IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN (CAST(t0.c38 AS REAL)) AND ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN (CAST(t0.c38 AS REAL)) AND ((vt0.c0 IN ()))) WHERE ((rtreenode(vt0.c1, t0.c38) IN ()));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c35)) NOT BETWEEN (((~ (t0.c38)))) AND (((t0.c35 IN (t0.c38))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35)) NOT BETWEEN (((~ (t0.c38)))) AND (((t0.c35 IN (t0.c38)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c35)) NOT BETWEEN (((~ (t0.c38)))) AND (((t0.c35 IN (t0.c38))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35)) NOT BETWEEN (((~ (t0.c38)))) AND (((t0.c35 IN (t0.c38)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c35)) NOT BETWEEN (((~ (t0.c38)))) AND (((t0.c35 IN (t0.c38))))));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN ((('*)') NOT BETWEEN ('>6') AND (vt0.c0))) AND ((NOT (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN ((('*)') NOT BETWEEN ('>6') AND (vt0.c0))) AND ((NOT (vt0.c1)))) ASC);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN ((('*)') NOT BETWEEN ('>6') AND (vt0.c0))) AND ((NOT (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN ((('*)') NOT BETWEEN ('>6') AND (vt0.c0))) AND ((NOT (vt0.c1)))) ASC);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN ((('*)') NOT BETWEEN ('>6') AND (vt0.c0))) AND ((NOT (vt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON x'' WHERE (((x'')AND(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')AND(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON x'');
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON x'' WHERE (((x'')AND(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')AND(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON x'');
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON x'' WHERE (((x'')AND(((vt0.c1) ISNULL))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (CASE WHEN t0.c35 THEN t0.c38 WHEN vt0.c0 THEN t0.c35 WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY ((((t0.c35)<<(x'41f5'))) BETWEEN (LIKELIHOOD(vt0.c1, 0.30009362359414127)) AND (((((((((vt0.c0)OR(t0.c38)))OR(t0.c35)))AND(t0.c38)))AND(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0, vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (CASE WHEN t0.c35 THEN t0.c38 WHEN vt0.c0 THEN t0.c35 WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c35)<<(x'41f5'))) BETWEEN (LIKELIHOOD(vt0.c1, 0.30009362359414127)) AND (((((((((vt0.c0)OR(t0.c38)))OR(t0.c35)))AND(t0.c38)))AND(vt0.c1)))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (CASE WHEN t0.c35 THEN t0.c38 WHEN vt0.c0 THEN t0.c35 WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY ((((t0.c35)<<(x'41f5'))) BETWEEN (LIKELIHOOD(vt0.c1, 0.30009362359414127)) AND (((((((((vt0.c0)OR(t0.c38)))OR(t0.c35)))AND(t0.c38)))AND(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0, vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (CASE WHEN t0.c35 THEN t0.c38 WHEN vt0.c0 THEN t0.c35 WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c35)<<(x'41f5'))) BETWEEN (LIKELIHOOD(vt0.c1, 0.30009362359414127)) AND (((((((((vt0.c0)OR(t0.c38)))OR(t0.c35)))AND(t0.c38)))AND(vt0.c1)))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (CASE WHEN t0.c35 THEN t0.c38 WHEN vt0.c0 THEN t0.c35 WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY ((((t0.c35)<<(x'41f5'))) BETWEEN (LIKELIHOOD(vt0.c1, 0.30009362359414127)) AND (((((((((vt0.c0)OR(t0.c38)))OR(t0.c35)))AND(t0.c38)))AND(vt0.c1)))) DESC;
SELECT ALL * FROM t0, vt0 WHERE ((NOT (((t0.c35)/(0Xffffffffbaa673b5)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c35)/(0Xffffffffbaa673b5))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((NOT (((t0.c35)/(0Xffffffffbaa673b5)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c35)/(0Xffffffffbaa673b5))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((NOT (((t0.c35)/(0Xffffffffbaa673b5)))));
SELECT * FROM t0 WHERE (CASE WHEN UNLIKELY(t0.c38) THEN '' ELSE CAST(t0.c35 AS INTEGER) END) ORDER BY NULLIF(0.610678043403607, CASE t0.c38  WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN UNLIKELY(t0.c38) THEN '' ELSE CAST(t0.c35 AS INTEGER) END) IS TRUE)  as count FROM t0 ORDER BY NULLIF(0.610678043403607, CASE t0.c38  WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (CASE WHEN UNLIKELY(t0.c38) THEN '' ELSE CAST(t0.c35 AS INTEGER) END) ORDER BY NULLIF(0.610678043403607, CASE t0.c38  WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN UNLIKELY(t0.c38) THEN '' ELSE CAST(t0.c35 AS INTEGER) END) IS TRUE)  as count FROM t0 ORDER BY NULLIF(0.610678043403607, CASE t0.c38  WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (CASE WHEN UNLIKELY(t0.c38) THEN '' ELSE CAST(t0.c35 AS INTEGER) END) ORDER BY NULLIF(0.610678043403607, CASE t0.c38  WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) IS TRUE) THEN json_patch(t0.c38, t0.c38) WHEN (('-186561600')+(t0.c35)) THEN CAST(vt0.c0 AS REAL) WHEN ((t0.c35)+(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) END WHERE (t0.c38);
SELECT SUM(count) FROM (SELECT ALL ((t0.c38) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) IS TRUE) THEN json_patch(t0.c38, t0.c38) WHEN (('-186561600')+(t0.c35)) THEN CAST(vt0.c0 AS REAL) WHEN ((t0.c35)+(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) END);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) IS TRUE) THEN json_patch(t0.c38, t0.c38) WHEN (('-186561600')+(t0.c35)) THEN CAST(vt0.c0 AS REAL) WHEN ((t0.c35)+(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) END WHERE (t0.c38);
SELECT SUM(count) FROM (SELECT ALL ((t0.c38) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) IS TRUE) THEN json_patch(t0.c38, t0.c38) WHEN (('-186561600')+(t0.c35)) THEN CAST(vt0.c0 AS REAL) WHEN ((t0.c35)+(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) END);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) IS TRUE) THEN json_patch(t0.c38, t0.c38) WHEN (('-186561600')+(t0.c35)) THEN CAST(vt0.c0 AS REAL) WHEN ((t0.c35)+(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) END WHERE (t0.c38);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c38);
SELECT SUM(count) FROM (SELECT ALL ((t0.c38) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c38);
SELECT SUM(count) FROM (SELECT ALL ((t0.c38) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c38);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0)AND(LTRIM(vt0.c0, vt0.c1)))) ORDER BY ((t0.c38) BETWEEN (t0.c35) AND ((((t0.c35)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)AND(LTRIM(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c38) BETWEEN (t0.c35) AND ((((t0.c35)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0)AND(LTRIM(vt0.c0, vt0.c1)))) ORDER BY ((t0.c38) BETWEEN (t0.c35) AND ((((t0.c35)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)AND(LTRIM(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c38) BETWEEN (t0.c35) AND ((((t0.c35)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0)AND(LTRIM(vt0.c0, vt0.c1)))) ORDER BY ((t0.c38) BETWEEN (t0.c35) AND ((((t0.c35)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c35)%(vt0.c1)))OR((1267558146 IN (vt0.c1)))))AND(CASE t0.c38  WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN t0.c38 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c35 THEN vt0.c0 WHEN t0.c38 THEN t0.c38 END))) ORDER BY (((NOT (t0.c38))) BETWEEN (t0.c35 COLLATE BINARY) AND (((vt0.c1)>>(vt0.c0)))), '-1826413037' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c35)%(vt0.c1)))OR((1267558146 IN (vt0.c1)))))AND(CASE t0.c38  WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN t0.c38 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c35 THEN vt0.c0 WHEN t0.c38 THEN t0.c38 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((NOT (t0.c38))) BETWEEN (t0.c35 COLLATE BINARY) AND (((vt0.c1)>>(vt0.c0)))), '-1826413037' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c35)%(vt0.c1)))OR((1267558146 IN (vt0.c1)))))AND(CASE t0.c38  WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN t0.c38 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c35 THEN vt0.c0 WHEN t0.c38 THEN t0.c38 END))) ORDER BY (((NOT (t0.c38))) BETWEEN (t0.c35 COLLATE BINARY) AND (((vt0.c1)>>(vt0.c0)))), '-1826413037' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c35)%(vt0.c1)))OR((1267558146 IN (vt0.c1)))))AND(CASE t0.c38  WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN t0.c38 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c35 THEN vt0.c0 WHEN t0.c38 THEN t0.c38 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((NOT (t0.c38))) BETWEEN (t0.c35 COLLATE BINARY) AND (((vt0.c1)>>(vt0.c0)))), '-1826413037' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c35)%(vt0.c1)))OR((1267558146 IN (vt0.c1)))))AND(CASE t0.c38  WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN t0.c38 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c35 THEN vt0.c0 WHEN t0.c38 THEN t0.c38 END))) ORDER BY (((NOT (t0.c38))) BETWEEN (t0.c35 COLLATE BINARY) AND (((vt0.c1)>>(vt0.c0)))), '-1826413037' ASC  NULLS LAST;
SELECT ALL * FROM t0 INDEXED BY i30, vt0 WHERE (((('QL' IN ()))<('H}' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((('QL' IN ()))<('H}' COLLATE BINARY))) IS TRUE)  as count FROM t0 INDEXED BY i30, vt0);
SELECT ALL * FROM t0 INDEXED BY i30, vt0 WHERE (((('QL' IN ()))<('H}' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((('QL' IN ()))<('H}' COLLATE BINARY))) IS TRUE)  as count FROM t0 INDEXED BY i30, vt0);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON t0.c35 COLLATE RTRIM WHERE ((((((vt0.c1)-(t0.c38)), ((vt0.c0)!=(vt0.c0)), CAST(vt0.c1 AS NUMERIC)))<=((((((vt0.c1)AND(t0.c35)))OR(t0.c38)), vt0.c1 COLLATE NOCASE, CASE t0.c35  WHEN vt0.c1 THEN t0.c35 ELSE vt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)-(t0.c38)), ((vt0.c0)!=(vt0.c0)), CAST(vt0.c1 AS NUMERIC)))<=((((((vt0.c1)AND(t0.c35)))OR(t0.c38)), vt0.c1 COLLATE NOCASE, CASE t0.c35  WHEN vt0.c1 THEN t0.c35 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON t0.c35 COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON t0.c35 COLLATE RTRIM WHERE ((((((vt0.c1)-(t0.c38)), ((vt0.c0)!=(vt0.c0)), CAST(vt0.c1 AS NUMERIC)))<=((((((vt0.c1)AND(t0.c35)))OR(t0.c38)), vt0.c1 COLLATE NOCASE, CASE t0.c35  WHEN vt0.c1 THEN t0.c35 ELSE vt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)-(t0.c38)), ((vt0.c0)!=(vt0.c0)), CAST(vt0.c1 AS NUMERIC)))<=((((((vt0.c1)AND(t0.c35)))OR(t0.c38)), vt0.c1 COLLATE NOCASE, CASE t0.c35  WHEN vt0.c1 THEN t0.c35 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON t0.c35 COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON t0.c35 COLLATE RTRIM WHERE ((((((vt0.c1)-(t0.c38)), ((vt0.c0)!=(vt0.c0)), CAST(vt0.c1 AS NUMERIC)))<=((((((vt0.c1)AND(t0.c35)))OR(t0.c38)), vt0.c1 COLLATE NOCASE, CASE t0.c35  WHEN vt0.c1 THEN t0.c35 ELSE vt0.c1 END))));
SELECT ALL * FROM vt0 WHERE (((0.4100645347189855)>>(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((0.4100645347189855)>>(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.4100645347189855)>>(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((0.4100645347189855)>>(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.4100645347189855)>>(vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT ((NOT (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<=(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<=(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<=(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<=(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<=(((vt0.c1) ISNULL))));
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((t0.c38) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CHANGES() END) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c38) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CHANGES() END) IS TRUE)  as count FROM vt0, t0 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((t0.c38) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CHANGES() END) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c38) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CHANGES() END) IS TRUE)  as count FROM vt0, t0 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((t0.c38) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CHANGES() END) ORDER BY x''  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((((vt0.c0)OR(0.009276017668260028)))OR(vt0.c0)))) AND ((((vt0.c0)<(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((((vt0.c0)OR(0.009276017668260028)))OR(vt0.c0)))) AND ((((vt0.c0)<(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((((vt0.c0)OR(0.009276017668260028)))OR(vt0.c0)))) AND ((((vt0.c0)<(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((((vt0.c0)OR(0.009276017668260028)))OR(vt0.c0)))) AND ((((vt0.c0)<(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((((vt0.c0)OR(0.009276017668260028)))OR(vt0.c0)))) AND ((((vt0.c0)<(vt0.c1))))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(CAST(vt0.c1 AS BLOB) AS TEXT) WHERE ((NOT (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(CAST(vt0.c1 AS BLOB) AS TEXT));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(CAST(vt0.c1 AS BLOB) AS TEXT) WHERE ((NOT (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(CAST(vt0.c1 AS BLOB) AS TEXT));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(CAST(vt0.c1 AS BLOB) AS TEXT) WHERE ((NOT (vt0.c1)) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE ((('-4294994')||((t0.c35 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((('-4294994')||((t0.c35 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((('-4294994')||((t0.c35 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((('-4294994')||((t0.c35 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((('-4294994')||((t0.c35 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0) NOT NULL)))<=((0.4045548533788803))) DESC  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((~ (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT NULL)))<=((0.4045548533788803))) DESC  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((~ (vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0) NOT NULL)))<=((0.4045548533788803))) DESC  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((~ (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT NULL)))<=((0.4045548533788803))) DESC  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((~ (vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0) NOT NULL)))<=((0.4045548533788803))) DESC  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((~ (vt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c38) BETWEEN (((vt0.c1)*(t0.c38))) AND ((~ (t0.c38)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c38) BETWEEN (((vt0.c1)*(t0.c38))) AND ((~ (t0.c38))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c38) BETWEEN (((vt0.c1)*(t0.c38))) AND ((~ (t0.c38)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c38) BETWEEN (((vt0.c1)*(t0.c38))) AND ((~ (t0.c38))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c38) BETWEEN (((vt0.c1)*(t0.c38))) AND ((~ (t0.c38)))));
SELECT ALL * FROM t0 WHERE ((((((t0.c38)||(t0.c35))))=(((((t0.c35)) NOT BETWEEN ((t0.c38)) AND ((t0.c35)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c38)||(t0.c35))))==(((((t0.c35)) NOT BETWEEN ((t0.c38)) AND ((t0.c35))))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c38)||(t0.c35))))=(((((t0.c35)) NOT BETWEEN ((t0.c38)) AND ((t0.c35)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c38)||(t0.c35))))==(((((t0.c35)) NOT BETWEEN ((t0.c38)) AND ((t0.c35))))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c38)||(t0.c35))))=(((((t0.c35)) NOT BETWEEN ((t0.c38)) AND ((t0.c35)))))));
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (((CASE WHEN 0x5d724927 THEN vt0.c1 END)IS((~ (vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c1)&(vt0.c0)))) AND ((PRINTF(vt0.c0)))), ((((vt0.c1)|(vt0.c1))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0x5d724927 THEN vt0.c1 END)IS((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c1)&(vt0.c0)))) AND ((PRINTF(vt0.c0)))), ((((vt0.c1)|(vt0.c1))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN 0x5d724927 THEN vt0.c1 END)IS((~ (vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c1)&(vt0.c0)))) AND ((PRINTF(vt0.c0)))), ((((vt0.c1)|(vt0.c1))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0x5d724927 THEN vt0.c1 END)IS((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c1)&(vt0.c0)))) AND ((PRINTF(vt0.c0)))), ((((vt0.c1)|(vt0.c1))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN 0x5d724927 THEN vt0.c1 END)IS((~ (vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c1)&(vt0.c0)))) AND ((PRINTF(vt0.c0)))), ((((vt0.c1)|(vt0.c1))) IS TRUE) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((TRIM(DISTINCT t0.c35))<<(((vt0.c1)%(t0.c38))))) ORDER BY CHANGES() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT t0.c35))<<(((vt0.c1)%(t0.c38))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CHANGES() ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((TRIM(DISTINCT t0.c35))<<(((vt0.c1)%(t0.c38))))) ORDER BY CHANGES() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT t0.c35))<<(((vt0.c1)%(t0.c38))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CHANGES() ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((TRIM(DISTINCT t0.c35))<<(((vt0.c1)%(t0.c38))))) ORDER BY CHANGES() ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC))>=(((t0.c35) NOT NULL))) WHERE (((((NULLIF(t0.c38, t0.c35))OR(ROUND(vt0.c0, vt0.c0))))OR((((vt0.c1, '-1163496523', t0.c35)) NOT BETWEEN ((t0.c35, t0.c35, t0.c35)) AND ((vt0.c0, t0.c38, vt0.c0)))))) ORDER BY ((((((t0.c38) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR(vt0.c1 COLLATE NOCASE)))AND(((((t0.c38)OR(vt0.c1)))OR(t0.c38)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULLIF(t0.c38, t0.c35))OR(ROUND(vt0.c0, vt0.c0))))OR((((vt0.c1, '-1163496523', t0.c35)) NOT BETWEEN ((t0.c35, t0.c35, t0.c35)) AND ((vt0.c0, t0.c38, vt0.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC))>=(((t0.c35) NOT NULL))) ORDER BY ((((((t0.c38) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR(vt0.c1 COLLATE NOCASE)))AND(((((t0.c38)OR(vt0.c1)))OR(t0.c38)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC))>=(((t0.c35) NOT NULL))) WHERE (((((NULLIF(t0.c38, t0.c35))OR(ROUND(vt0.c0, vt0.c0))))OR((((vt0.c1, '-1163496523', t0.c35)) NOT BETWEEN ((t0.c35, t0.c35, t0.c35)) AND ((vt0.c0, t0.c38, vt0.c0)))))) ORDER BY ((((((t0.c38) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR(vt0.c1 COLLATE NOCASE)))AND(((((t0.c38)OR(vt0.c1)))OR(t0.c38)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULLIF(t0.c38, t0.c35))OR(ROUND(vt0.c0, vt0.c0))))OR((((vt0.c1, '-1163496523', t0.c35)) NOT BETWEEN ((t0.c35, t0.c35, t0.c35)) AND ((vt0.c0, t0.c38, vt0.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC))>=(((t0.c35) NOT NULL))) ORDER BY ((((((t0.c38) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR(vt0.c1 COLLATE NOCASE)))AND(((((t0.c38)OR(vt0.c1)))OR(t0.c38)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC))>=(((t0.c35) NOT NULL))) WHERE (((((NULLIF(t0.c38, t0.c35))OR(ROUND(vt0.c0, vt0.c0))))OR((((vt0.c1, '-1163496523', t0.c35)) NOT BETWEEN ((t0.c35, t0.c35, t0.c35)) AND ((vt0.c0, t0.c38, vt0.c0)))))) ORDER BY ((((((t0.c38) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR(vt0.c1 COLLATE NOCASE)))AND(((((t0.c38)OR(vt0.c1)))OR(t0.c38)))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN ((((((((('2B')AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND ('')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) BETWEEN ((((((((('2B')AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN ((((((((('2B')AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND ('')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) BETWEEN ((((((((('2B')AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN ((((((((('2B')AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND ('')));
SELECT * FROM t0 WHERE (((CAST(0.31307607338409815 AS TEXT))*(((t0.c35) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.31307607338409815 AS TEXT))*(((t0.c35) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CAST(0.31307607338409815 AS TEXT))*(((t0.c35) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.31307607338409815 AS TEXT))*(((t0.c35) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CAST(0.31307607338409815 AS TEXT))*(((t0.c35) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) AND ((UPPER(vt0.c0))))) ORDER BY CAST('2y.0' AS NUMERIC) DESC  NULLS FIRST, CAST(((vt0.c1) NOTNULL) AS INTEGER) ASC  NULLS LAST, '-1219406040' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) AND ((UPPER(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST('2y.0' AS NUMERIC) DESC  NULLS FIRST, CAST(((vt0.c1) NOTNULL) AS INTEGER) ASC  NULLS LAST, '-1219406040' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) AND ((UPPER(vt0.c0))))) ORDER BY CAST('2y.0' AS NUMERIC) DESC  NULLS FIRST, CAST(((vt0.c1) NOTNULL) AS INTEGER) ASC  NULLS LAST, '-1219406040' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) AND ((UPPER(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST('2y.0' AS NUMERIC) DESC  NULLS FIRST, CAST(((vt0.c1) NOTNULL) AS INTEGER) ASC  NULLS LAST, '-1219406040' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) AND ((UPPER(vt0.c0))))) ORDER BY CAST('2y.0' AS NUMERIC) DESC  NULLS FIRST, CAST(((vt0.c1) NOTNULL) AS INTEGER) ASC  NULLS LAST, '-1219406040' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY ((((((((((t0.c38)|(t0.c35)))AND(((((t0.c38)OR(t0.c35)))OR(t0.c38)))))AND(vt0.c1)))OR((vt0.c1 IN (vt0.c1)))))OR((t0.c35 IN (t0.c38))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((t0.c38)|(t0.c35)))AND(((((t0.c38)OR(t0.c35)))OR(t0.c38)))))AND(vt0.c1)))OR((vt0.c1 IN (vt0.c1)))))OR((t0.c35 IN (t0.c38))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY ((((((((((t0.c38)|(t0.c35)))AND(((((t0.c38)OR(t0.c35)))OR(t0.c38)))))AND(vt0.c1)))OR((vt0.c1 IN (vt0.c1)))))OR((t0.c35 IN (t0.c38))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((t0.c38)|(t0.c35)))AND(((((t0.c38)OR(t0.c35)))OR(t0.c38)))))AND(vt0.c1)))OR((vt0.c1 IN (vt0.c1)))))OR((t0.c35 IN (t0.c38))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY ((((((((((t0.c38)|(t0.c35)))AND(((((t0.c38)OR(t0.c35)))OR(t0.c38)))))AND(vt0.c1)))OR((vt0.c1 IN (vt0.c1)))))OR((t0.c35 IN (t0.c38))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((UNLIKELY(t0.c35) IN (CAST(t0.c38 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(t0.c35) IN (CAST(t0.c38 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((UNLIKELY(t0.c35) IN (CAST(t0.c38 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(t0.c35) IN (CAST(t0.c38 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((UNLIKELY(t0.c35) IN (CAST(t0.c38 AS TEXT))));
SELECT * FROM vt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL COLLATE RTRIM);
SELECT * FROM vt0, t0 WHERE (((t0.c35) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c35) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((t0.c35) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c35) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((t0.c35) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c38)) THEN ((t0.c38)<=(t0.c35)) ELSE (+ ('')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c38)) THEN ((t0.c38)<=(t0.c35)) ELSE (+ ('')) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c38)) THEN ((t0.c38)<=(t0.c35)) ELSE (+ ('')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c38)) THEN ((t0.c38)<=(t0.c35)) ELSE (+ ('')) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c38)) THEN ((t0.c38)<=(t0.c35)) ELSE (+ ('')) END);
SELECT * FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('');
SELECT * FROM t0 INNER JOIN vt0 ON ((0.769226377816358)>>(vt0.c0)) COLLATE BINARY WHERE (LIKELY(((t0.c35) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t0.c35) IS FALSE))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((0.769226377816358)>>(vt0.c0)) COLLATE BINARY);
SELECT * FROM t0 INNER JOIN vt0 ON ((0.769226377816358)>>(vt0.c0)) COLLATE BINARY WHERE (LIKELY(((t0.c35) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t0.c35) IS FALSE))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((0.769226377816358)>>(vt0.c0)) COLLATE BINARY);
SELECT * FROM t0 INNER JOIN vt0 ON ((0.769226377816358)>>(vt0.c0)) COLLATE BINARY WHERE (LIKELY(((t0.c35) IS FALSE)));
SELECT COUNT(*) FROM t0 WHERE (DATE(CASE WHEN t0.c35 THEN t0.c35 END, ((((x'')AND(t0.c38)))OR(t0.c35)), ((((((((t0.c38)OR(t0.c35)))AND(t0.c35)))OR(t0.c35)))AND(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((DATE(CASE WHEN t0.c35 THEN t0.c35 END, ((((x'')AND(t0.c38)))OR(t0.c35)), ((((((((t0.c38)OR(t0.c35)))AND(t0.c35)))OR(t0.c35)))AND(NULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (DATE(CASE WHEN t0.c35 THEN t0.c35 END, ((((x'')AND(t0.c38)))OR(t0.c35)), ((((((((t0.c38)OR(t0.c35)))AND(t0.c35)))OR(t0.c35)))AND(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((DATE(CASE WHEN t0.c35 THEN t0.c35 END, ((((x'')AND(t0.c38)))OR(t0.c35)), ((((((((t0.c38)OR(t0.c35)))AND(t0.c35)))OR(t0.c35)))AND(NULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (DATE(CASE WHEN t0.c35 THEN t0.c35 END, ((((x'')AND(t0.c38)))OR(t0.c35)), ((((((((t0.c38)OR(t0.c35)))AND(t0.c35)))OR(t0.c35)))AND(NULL))));
SELECT COUNT(*) FROM t0 WHERE (((+ (t0.c38)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (t0.c38)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((+ (t0.c38)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (t0.c38)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((+ (t0.c38)) IN ()));
SELECT * FROM vt0, t0 WHERE ((((vt0.c1)) BETWEEN ((((t0.c35) NOT BETWEEN ('1701492651') AND (vt0.c0)))) AND ((highlight(vt0.c0, t0.c38, vt0.c1, t0.c35))))) ORDER BY t0.c35 ASC, ((((((t0.c35)OR(vt0.c1)))AND(vt0.c0)))GLOB(((vt0.c1) IS FALSE))) DESC  NULLS FIRST, '611170730' COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((t0.c35) NOT BETWEEN ('1701492651') AND (vt0.c0)))) AND ((highlight(vt0.c0, t0.c38, vt0.c1, t0.c35))))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c35 ASC, ((((((t0.c35)OR(vt0.c1)))AND(vt0.c0)))GLOB(((vt0.c1) IS FALSE))) DESC  NULLS FIRST, '611170730' COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c1)) BETWEEN ((((t0.c35) NOT BETWEEN ('1701492651') AND (vt0.c0)))) AND ((highlight(vt0.c0, t0.c38, vt0.c1, t0.c35))))) ORDER BY t0.c35 ASC, ((((((t0.c35)OR(vt0.c1)))AND(vt0.c0)))GLOB(((vt0.c1) IS FALSE))) DESC  NULLS FIRST, '611170730' COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((t0.c35) NOT BETWEEN ('1701492651') AND (vt0.c0)))) AND ((highlight(vt0.c0, t0.c38, vt0.c1, t0.c35))))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c35 ASC, ((((((t0.c35)OR(vt0.c1)))AND(vt0.c0)))GLOB(((vt0.c1) IS FALSE))) DESC  NULLS FIRST, '611170730' COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (DATE(((vt0.c0)-(t0.c35)), (((x'ddec', t0.c38, t0.c35)) BETWEEN ((vt0.c1, t0.c38, t0.c38)) AND ((t0.c35, vt0.c1, t0.c38))), 0.006784007573916506, (((vt0.c0))>=((vt0.c0))), t0.c35));
SELECT SUM(count) FROM (SELECT ALL ((DATE(((vt0.c0)-(t0.c35)), (((x'ddec', t0.c38, t0.c35)) BETWEEN ((vt0.c1, t0.c38, t0.c38)) AND ((t0.c35, vt0.c1, t0.c38))), 0.006784007573916506, (((vt0.c0))>=((vt0.c0))), t0.c35)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (DATE(((vt0.c0)-(t0.c35)), (((x'ddec', t0.c38, t0.c35)) BETWEEN ((vt0.c1, t0.c38, t0.c38)) AND ((t0.c35, vt0.c1, t0.c38))), 0.006784007573916506, (((vt0.c0))>=((vt0.c0))), t0.c35));
SELECT SUM(count) FROM (SELECT ALL ((DATE(((vt0.c0)-(t0.c35)), (((x'ddec', t0.c38, t0.c35)) BETWEEN ((vt0.c1, t0.c38, t0.c38)) AND ((t0.c35, vt0.c1, t0.c38))), 0.006784007573916506, (((vt0.c0))>=((vt0.c0))), t0.c35)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (DATE(((vt0.c0)-(t0.c35)), (((x'ddec', t0.c38, t0.c35)) BETWEEN ((vt0.c1, t0.c38, t0.c38)) AND ((t0.c35, vt0.c1, t0.c38))), 0.006784007573916506, (((vt0.c0))>=((vt0.c0))), t0.c35));
SELECT ALL * FROM t0, vt0 WHERE (x'20c9');
SELECT SUM(count) FROM (SELECT ((x'20c9') IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (x'20c9');
SELECT SUM(count) FROM (SELECT ((x'20c9') IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (x'20c9');
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (t0.c35) AND (vt0.c0)))|((((vt0.c1, NULL, t0.c35)) BETWEEN ((t0.c38, 0xffffffffd731c381, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))))) WHERE (json(CASE t0.c38  WHEN t0.c38 THEN t0.c38 ELSE vt0.c0 END)) ORDER BY (((vt0.c1) IS FALSE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json(CASE t0.c38  WHEN t0.c38 THEN t0.c38 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (t0.c35) AND (vt0.c0)))|((((vt0.c1, NULL, t0.c35)) BETWEEN ((t0.c38, 0xffffffffd731c381, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))))) ORDER BY (((vt0.c1) IS FALSE) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (t0.c35) AND (vt0.c0)))|((((vt0.c1, NULL, t0.c35)) BETWEEN ((t0.c38, 0xffffffffd731c381, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))))) WHERE (json(CASE t0.c38  WHEN t0.c38 THEN t0.c38 ELSE vt0.c0 END)) ORDER BY (((vt0.c1) IS FALSE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json(CASE t0.c38  WHEN t0.c38 THEN t0.c38 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (t0.c35) AND (vt0.c0)))|((((vt0.c1, NULL, t0.c35)) BETWEEN ((t0.c38, 0xffffffffd731c381, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))))) ORDER BY (((vt0.c1) IS FALSE) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (t0.c35) AND (vt0.c0)))|((((vt0.c1, NULL, t0.c35)) BETWEEN ((t0.c38, 0xffffffffd731c381, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))))) WHERE (json(CASE t0.c38  WHEN t0.c38 THEN t0.c38 ELSE vt0.c0 END)) ORDER BY (((vt0.c1) IS FALSE) IN ()) DESC;
SELECT ALL * FROM t0 WHERE (CASE ((t0.c35)<(t0.c38))  WHEN ((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c38)) THEN t0.c35 COLLATE NOCASE WHEN CAST(t0.c35 AS NUMERIC) THEN (NOT (t0.c35)) WHEN ((t0.c35) NOT BETWEEN (t0.c38) AND (t0.c35)) THEN (~ (t0.c38)) ELSE CASE t0.c38  WHEN t0.c38 THEN 1.701492651E9 WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c38 END END) ORDER BY x'c6a2' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c35)<(t0.c38))  WHEN ((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c38)) THEN t0.c35 COLLATE NOCASE WHEN CAST(t0.c35 AS NUMERIC) THEN (NOT (t0.c35)) WHEN ((t0.c35) NOT BETWEEN (t0.c38) AND (t0.c35)) THEN (~ (t0.c38)) ELSE CASE t0.c38  WHEN t0.c38 THEN 1.701492651E9 WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c38 END END) IS TRUE)  as count FROM t0 ORDER BY x'c6a2' DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c35)<(t0.c38))  WHEN ((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c38)) THEN t0.c35 COLLATE NOCASE WHEN CAST(t0.c35 AS NUMERIC) THEN (NOT (t0.c35)) WHEN ((t0.c35) NOT BETWEEN (t0.c38) AND (t0.c35)) THEN (~ (t0.c38)) ELSE CASE t0.c38  WHEN t0.c38 THEN 1.701492651E9 WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c38 END END) ORDER BY x'c6a2' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c35)<(t0.c38))  WHEN ((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c38)) THEN t0.c35 COLLATE NOCASE WHEN CAST(t0.c35 AS NUMERIC) THEN (NOT (t0.c35)) WHEN ((t0.c35) NOT BETWEEN (t0.c38) AND (t0.c35)) THEN (~ (t0.c38)) ELSE CASE t0.c38  WHEN t0.c38 THEN 1.701492651E9 WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c38 END END) IS TRUE)  as count FROM t0 ORDER BY x'c6a2' DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c35)<(t0.c38))  WHEN ((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c38)) THEN t0.c35 COLLATE NOCASE WHEN CAST(t0.c35 AS NUMERIC) THEN (NOT (t0.c35)) WHEN ((t0.c35) NOT BETWEEN (t0.c38) AND (t0.c35)) THEN (~ (t0.c38)) ELSE CASE t0.c38  WHEN t0.c38 THEN 1.701492651E9 WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c38 END END) ORDER BY x'c6a2' DESC  NULLS LAST;
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((((((t0.c35)) BETWEEN ((t0.c35)) AND ((vt0.c0)))) BETWEEN (((vt0.c1)*(t0.c35))) AND ((t0.c35 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c35)) BETWEEN ((t0.c35)) AND ((vt0.c0)))) BETWEEN (((vt0.c1)*(t0.c35))) AND ((t0.c35 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((((((t0.c35)) BETWEEN ((t0.c35)) AND ((vt0.c0)))) BETWEEN (((vt0.c1)*(t0.c35))) AND ((t0.c35 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c35)) BETWEEN ((t0.c35)) AND ((vt0.c0)))) BETWEEN (((vt0.c1)*(t0.c35))) AND ((t0.c35 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((((((t0.c35)) BETWEEN ((t0.c35)) AND ((vt0.c0)))) BETWEEN (((vt0.c1)*(t0.c35))) AND ((t0.c35 IN (vt0.c0, vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN t0.c38 COLLATE NOCASE THEN (NOT (t0.c35)) ELSE ((t0.c38) BETWEEN (vt0.c1) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c38 COLLATE NOCASE THEN (NOT (t0.c35)) ELSE ((t0.c38) BETWEEN (vt0.c1) AND (vt0.c1)) END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN t0.c38 COLLATE NOCASE THEN (NOT (t0.c35)) ELSE ((t0.c38) BETWEEN (vt0.c1) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c38 COLLATE NOCASE THEN (NOT (t0.c35)) ELSE ((t0.c38) BETWEEN (vt0.c1) AND (vt0.c1)) END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN t0.c38 COLLATE NOCASE THEN (NOT (t0.c35)) ELSE ((t0.c38) BETWEEN (vt0.c1) AND (vt0.c1)) END);
SELECT ALL * FROM t0, vt0 WHERE ((~ ((- (t0.c35))))) ORDER BY CASE ((t0.c35)&(NULL))  WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c1) IS FALSE) ELSE highlight(t0.c35, vt0.c0, vt0.c0, vt0.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((- (t0.c35))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE ((t0.c35)&(NULL))  WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c1) IS FALSE) ELSE highlight(t0.c35, vt0.c0, vt0.c0, vt0.c1) END  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((~ ((- (t0.c35))))) ORDER BY CASE ((t0.c35)&(NULL))  WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c1) IS FALSE) ELSE highlight(t0.c35, vt0.c0, vt0.c0, vt0.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((- (t0.c35))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE ((t0.c35)&(NULL))  WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c1) IS FALSE) ELSE highlight(t0.c35, vt0.c0, vt0.c0, vt0.c1) END  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0)<=(t0.c35))))>(((t0.c38 IN (t0.c38)))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)<=(t0.c35))))>(((t0.c38 IN (t0.c38)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY x'' ASC);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0)<=(t0.c35))))>(((t0.c38 IN (t0.c38)))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)<=(t0.c35))))>(((t0.c38 IN (t0.c38)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY x'' ASC);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0)<=(t0.c35))))>(((t0.c38 IN (t0.c38)))))) ORDER BY x'' ASC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<>(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)!=(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<>(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)!=(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<>(vt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELY(DISTINCT (- (t0.c35)))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (t0.c35)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (- (t0.c35)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (t0.c35)) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELY(DISTINCT (- (t0.c35)))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (t0.c35)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (- (t0.c35)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (t0.c35)) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELY(DISTINCT (- (t0.c35)))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (t0.c35)) AS REAL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((x'')OR(t0.c35)))AND(t0.c38))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')OR(t0.c35)))AND(t0.c38))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((x'')OR(t0.c35)))AND(t0.c38))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')OR(t0.c35)))AND(t0.c38))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((x'')OR(t0.c35)))AND(t0.c38))) IS TRUE));
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c38 THEN vt0.c0 END) BETWEEN (vt0.c1) AND ('3홨'))) ORDER BY (((((vt0.c1, vt0.c1, t0.c35))=((t0.c38, t0.c35, vt0.c1)))) BETWEEN (((((t0.c35)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN t0.c38 THEN vt0.c0 END) BETWEEN (vt0.c1) AND ('3홨'))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c1, vt0.c1, t0.c35))=((t0.c38, t0.c35, vt0.c1)))) BETWEEN (((((t0.c35)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS REAL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c38 THEN vt0.c0 END) BETWEEN (vt0.c1) AND ('3홨'))) ORDER BY (((((vt0.c1, vt0.c1, t0.c35))=((t0.c38, t0.c35, vt0.c1)))) BETWEEN (((((t0.c35)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN t0.c38 THEN vt0.c0 END) BETWEEN (vt0.c1) AND ('3홨'))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c1, vt0.c1, t0.c35))=((t0.c38, t0.c35, vt0.c1)))) BETWEEN (((((t0.c35)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS REAL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c38 THEN vt0.c0 END) BETWEEN (vt0.c1) AND ('3홨'))) ORDER BY (((((vt0.c1, vt0.c1, t0.c35))=((t0.c38, t0.c35, vt0.c1)))) BETWEEN (((((t0.c35)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS REAL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c35)) NOT BETWEEN (((t0.c38 IN ()))) AND (((((t0.c35, t0.c38, t0.c38)) NOT BETWEEN ((t0.c38, t0.c35, t0.c35)) AND ((t0.c38, t0.c35, t0.c35)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c35)) NOT BETWEEN (((t0.c38 IN ()))) AND (((((t0.c35, t0.c38, t0.c38)) NOT BETWEEN ((t0.c38, t0.c35, t0.c35)) AND ((t0.c38, t0.c35, t0.c35))))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c35)) NOT BETWEEN (((t0.c38 IN ()))) AND (((((t0.c35, t0.c38, t0.c38)) NOT BETWEEN ((t0.c38, t0.c35, t0.c35)) AND ((t0.c38, t0.c35, t0.c35)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c35)) NOT BETWEEN (((t0.c38 IN ()))) AND (((((t0.c35, t0.c38, t0.c38)) NOT BETWEEN ((t0.c38, t0.c35, t0.c35)) AND ((t0.c38, t0.c35, t0.c35))))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c35)) NOT BETWEEN (((t0.c38 IN ()))) AND (((((t0.c35, t0.c38, t0.c38)) NOT BETWEEN ((t0.c38, t0.c35, t0.c35)) AND ((t0.c38, t0.c35, t0.c35)))))));
SELECT * FROM t0 WHERE (CAST(((t0.c38) IS TRUE) AS NUMERIC)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c38) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY NULL);
SELECT * FROM t0 WHERE (CAST(((t0.c38) IS TRUE) AS NUMERIC)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c38) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY NULL);
SELECT * FROM t0 WHERE (CAST(((t0.c38) IS TRUE) AS NUMERIC)) ORDER BY NULL;
SELECT * FROM vt0, t0 WHERE ((~ (UPPER(t0.c35)))) ORDER BY 'BN' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (UPPER(t0.c35)))) IS TRUE)  as count FROM vt0, t0 ORDER BY 'BN' DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((~ (UPPER(t0.c35)))) ORDER BY 'BN' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (UPPER(t0.c35)))) IS TRUE)  as count FROM vt0, t0 ORDER BY 'BN' DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((~ (UPPER(t0.c35)))) ORDER BY 'BN' DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)) WHEN NULL COLLATE BINARY THEN CAST(vt0.c1 AS NUMERIC) WHEN (NOT ('439403634')) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)) WHEN NULL COLLATE BINARY THEN CAST(vt0.c1 AS NUMERIC) WHEN (NOT ('439403634')) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)) WHEN NULL COLLATE BINARY THEN CAST(vt0.c1 AS NUMERIC) WHEN (NOT ('439403634')) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)) WHEN NULL COLLATE BINARY THEN CAST(vt0.c1 AS NUMERIC) WHEN (NOT ('439403634')) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)) WHEN NULL COLLATE BINARY THEN CAST(vt0.c1 AS NUMERIC) WHEN (NOT ('439403634')) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))>=(vt0.c0))) ORDER BY (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER))>=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((NULL)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))>=(vt0.c0))) ORDER BY (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER))>=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((NULL)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))>=(vt0.c0))) ORDER BY (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((NULL)))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c38);
SELECT SUM(count) FROM (SELECT ((t0.c38) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c38);
SELECT SUM(count) FROM (SELECT ((t0.c38) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c38);
SELECT * FROM t0 NOT INDEXED WHERE (((t0.c35 COLLATE BINARY) NOT BETWEEN (t0.c35 COLLATE BINARY) AND (((((t0.c35)OR(t0.c35)))AND(t0.c35))))) ORDER BY ((t0.c35) ISNULL) COLLATE NOCASE, ((((t0.c38) BETWEEN (t0.c35) AND (t0.c38))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35 COLLATE BINARY) NOT BETWEEN (t0.c35 COLLATE BINARY) AND (((((t0.c35)OR(t0.c35)))AND(t0.c35))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c35) ISNULL) COLLATE NOCASE, ((((t0.c38) BETWEEN (t0.c35) AND (t0.c38))) NOTNULL));
SELECT * FROM t0 NOT INDEXED WHERE (((t0.c35 COLLATE BINARY) NOT BETWEEN (t0.c35 COLLATE BINARY) AND (((((t0.c35)OR(t0.c35)))AND(t0.c35))))) ORDER BY ((t0.c35) ISNULL) COLLATE NOCASE, ((((t0.c38) BETWEEN (t0.c35) AND (t0.c38))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35 COLLATE BINARY) NOT BETWEEN (t0.c35 COLLATE BINARY) AND (((((t0.c35)OR(t0.c35)))AND(t0.c35))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c35) ISNULL) COLLATE NOCASE, ((((t0.c38) BETWEEN (t0.c35) AND (t0.c38))) NOTNULL));
SELECT * FROM t0 NOT INDEXED WHERE (((t0.c35 COLLATE BINARY) NOT BETWEEN (t0.c35 COLLATE BINARY) AND (((((t0.c35)OR(t0.c35)))AND(t0.c35))))) ORDER BY ((t0.c35) ISNULL) COLLATE NOCASE, ((((t0.c38) BETWEEN (t0.c35) AND (t0.c38))) NOTNULL);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST(t0.c35 AS REAL) WHERE ((((- (vt0.c0)))GLOB((+ (t0.c38)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))GLOB((+ (t0.c38))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST(t0.c35 AS REAL));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST(t0.c35 AS REAL) WHERE ((((- (vt0.c0)))GLOB((+ (t0.c38)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))GLOB((+ (t0.c38))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST(t0.c35 AS REAL));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST(t0.c35 AS REAL) WHERE ((((- (vt0.c0)))GLOB((+ (t0.c38)))));
SELECT * FROM t0, vt0 WHERE (((((((((MIN(vt0.c0, vt0.c1))OR(((vt0.c1) BETWEEN (vt0.c1) AND (t0.c38)))))OR(((t0.c38)&(vt0.c1)))))AND(CASE t0.c35  WHEN t0.c35 THEN vt0.c1 END)))AND(x''))) ORDER BY ((t0.c35) BETWEEN (vt0.c0) AND (t0.c38)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((MIN(vt0.c0, vt0.c1))OR(((vt0.c1) BETWEEN (vt0.c1) AND (t0.c38)))))OR(((t0.c38)&(vt0.c1)))))AND(CASE t0.c35  WHEN t0.c35 THEN vt0.c1 END)))AND(x''))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c35) BETWEEN (vt0.c0) AND (t0.c38)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((((((MIN(vt0.c0, vt0.c1))OR(((vt0.c1) BETWEEN (vt0.c1) AND (t0.c38)))))OR(((t0.c38)&(vt0.c1)))))AND(CASE t0.c35  WHEN t0.c35 THEN vt0.c1 END)))AND(x''))) ORDER BY ((t0.c35) BETWEEN (vt0.c0) AND (t0.c38)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((MIN(vt0.c0, vt0.c1))OR(((vt0.c1) BETWEEN (vt0.c1) AND (t0.c38)))))OR(((t0.c38)&(vt0.c1)))))AND(CASE t0.c35  WHEN t0.c35 THEN vt0.c1 END)))AND(x''))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c35) BETWEEN (vt0.c0) AND (t0.c38)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((((((MIN(vt0.c0, vt0.c1))OR(((vt0.c1) BETWEEN (vt0.c1) AND (t0.c38)))))OR(((t0.c38)&(vt0.c1)))))AND(CASE t0.c35  WHEN t0.c35 THEN vt0.c1 END)))AND(x''))) ORDER BY ((t0.c35) BETWEEN (vt0.c0) AND (t0.c38)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1) ISNULL))>=(CAST(t0.c38 AS NUMERIC)))) ORDER BY ((rtreenode(vt0.c1, vt0.c1))IS NOT('-764687838')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL))>=(CAST(t0.c38 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((rtreenode(vt0.c1, vt0.c1))IS NOT('-764687838')) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1) ISNULL))>=(CAST(t0.c38 AS NUMERIC)))) ORDER BY ((rtreenode(vt0.c1, vt0.c1))IS NOT('-764687838')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL))>=(CAST(t0.c38 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((rtreenode(vt0.c1, vt0.c1))IS NOT('-764687838')) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1) ISNULL))>=(CAST(t0.c38 AS NUMERIC)))) ORDER BY ((rtreenode(vt0.c1, vt0.c1))IS NOT('-764687838')) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c38)<=(load_extension(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((t0.c38)<=(load_extension(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c38)<=(load_extension(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((t0.c38)<=(load_extension(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c35)-(vt0.c1)) AS NUMERIC)) ORDER BY COALESCE(((t0.c38) NOTNULL), (+ (t0.c35)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c35)-(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 ORDER BY COALESCE(((t0.c38) NOTNULL), (+ (t0.c35)))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c35)-(vt0.c1)) AS NUMERIC)) ORDER BY COALESCE(((t0.c38) NOTNULL), (+ (t0.c35)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c35)-(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 ORDER BY COALESCE(((t0.c38) NOTNULL), (+ (t0.c35)))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c35)-(vt0.c1)) AS NUMERIC)) ORDER BY COALESCE(((t0.c38) NOTNULL), (+ (t0.c35)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) IS TRUE) DESC  NULLS FIRST, json_extract((+ (vt0.c1)), CAST(vt0.c0 AS BLOB)) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) IS TRUE) DESC  NULLS FIRST, json_extract((+ (vt0.c1)), CAST(vt0.c0 AS BLOB)) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) IS TRUE) DESC  NULLS FIRST, json_extract((+ (vt0.c1)), CAST(vt0.c0 AS BLOB)) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) IS TRUE) DESC  NULLS FIRST, json_extract((+ (vt0.c1)), CAST(vt0.c0 AS BLOB)) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((x'') ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((x'') ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c1 IN ()))AND((vt0.c0 IN ()))))OR(((((((((NULL)OR(t0.c38)))AND(vt0.c1)))AND(t0.c38)))OR(vt0.c0))))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(CAST(vt0.c1 AS TEXT))))OR(((t0.c35)>=(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN ()))AND((vt0.c0 IN ()))))OR(((((((((NULL)OR(t0.c38)))AND(vt0.c1)))AND(t0.c38)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(CAST(vt0.c1 AS TEXT))))OR(((t0.c35)>=(vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c1 IN ()))AND((vt0.c0 IN ()))))OR(((((((((NULL)OR(t0.c38)))AND(vt0.c1)))AND(t0.c38)))OR(vt0.c0))))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(CAST(vt0.c1 AS TEXT))))OR(((t0.c35)>=(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN ()))AND((vt0.c0 IN ()))))OR(((((((((NULL)OR(t0.c38)))AND(vt0.c1)))AND(t0.c38)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(CAST(vt0.c1 AS TEXT))))OR(((t0.c35)>=(vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c1 IN ()))AND((vt0.c0 IN ()))))OR(((((((((NULL)OR(t0.c38)))AND(vt0.c1)))AND(t0.c38)))OR(vt0.c0))))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(CAST(vt0.c1 AS TEXT))))OR(((t0.c35)>=(vt0.c1))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((t0.c38)OR(((t0.c38) ISNULL))))OR(t0.c38 COLLATE NOCASE)))OR('418833038')))OR(UNLIKELY(t0.c35))))AND(((((t0.c38)AND(t0.c38)))OR('-1163496523')))))OR('H5<\r')));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c38)OR(((t0.c38) ISNULL))))OR(t0.c38 COLLATE NOCASE)))OR('418833038')))OR(UNLIKELY(t0.c35))))AND(((((t0.c38)AND(t0.c38)))OR('-1163496523')))))OR('H5<\r'))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((t0.c38)OR(((t0.c38) ISNULL))))OR(t0.c38 COLLATE NOCASE)))OR('418833038')))OR(UNLIKELY(t0.c35))))AND(((((t0.c38)AND(t0.c38)))OR('-1163496523')))))OR('H5<\r')));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c38)OR(((t0.c38) ISNULL))))OR(t0.c38 COLLATE NOCASE)))OR('418833038')))OR(UNLIKELY(t0.c35))))AND(((((t0.c38)AND(t0.c38)))OR('-1163496523')))))OR('H5<\r'))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((t0.c38)OR(((t0.c38) ISNULL))))OR(t0.c38 COLLATE NOCASE)))OR('418833038')))OR(UNLIKELY(t0.c35))))AND(((((t0.c38)AND(t0.c38)))OR('-1163496523')))))OR('H5<\r')));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0, t0 WHERE (CAST((+ (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST((+ (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST((+ (vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (NULLIF(t0.c35, vt0.c0) IN (vt0.c1 COLLATE RTRIM, (((0.989572070992373)) NOT BETWEEN ((t0.c35)) AND ((vt0.c1))))) WHERE (((CAST(t0.c38 AS NUMERIC))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c35))))) ORDER BY ((((0.0585190063162736)AND(t0.c35)))AND(t0.c35)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c38 AS NUMERIC))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c35))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (NULLIF(t0.c35, vt0.c0) IN (vt0.c1 COLLATE RTRIM, (((0.989572070992373)) NOT BETWEEN ((t0.c35)) AND ((vt0.c1))))) ORDER BY ((((0.0585190063162736)AND(t0.c35)))AND(t0.c35)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (NULLIF(t0.c35, vt0.c0) IN (vt0.c1 COLLATE RTRIM, (((0.989572070992373)) NOT BETWEEN ((t0.c35)) AND ((vt0.c1))))) WHERE (((CAST(t0.c38 AS NUMERIC))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c35))))) ORDER BY ((((0.0585190063162736)AND(t0.c35)))AND(t0.c35)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c38 AS NUMERIC))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c35))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (NULLIF(t0.c35, vt0.c0) IN (vt0.c1 COLLATE RTRIM, (((0.989572070992373)) NOT BETWEEN ((t0.c35)) AND ((vt0.c1))))) ORDER BY ((((0.0585190063162736)AND(t0.c35)))AND(t0.c35)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (NULLIF(t0.c35, vt0.c0) IN (vt0.c1 COLLATE RTRIM, (((0.989572070992373)) NOT BETWEEN ((t0.c35)) AND ((vt0.c1))))) WHERE (((CAST(t0.c38 AS NUMERIC))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c35))))) ORDER BY ((((0.0585190063162736)AND(t0.c35)))AND(t0.c35)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM t0 WHERE (((CHANGES())|(((((t0.c35)AND(t0.c38)))AND(t0.c35))))) ORDER BY CAST(CASE t0.c35  WHEN t0.c38 THEN t0.c35 ELSE t0.c35 END AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())|(((((t0.c35)AND(t0.c38)))AND(t0.c35))))) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY CAST(CASE t0.c35  WHEN t0.c38 THEN t0.c35 ELSE t0.c35 END AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((CHANGES())|(((((t0.c35)AND(t0.c38)))AND(t0.c35))))) ORDER BY CAST(CASE t0.c35  WHEN t0.c38 THEN t0.c35 ELSE t0.c35 END AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())|(((((t0.c35)AND(t0.c38)))AND(t0.c35))))) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY CAST(CASE t0.c35  WHEN t0.c38 THEN t0.c35 ELSE t0.c35 END AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((CHANGES())|(((((t0.c35)AND(t0.c38)))AND(t0.c35))))) ORDER BY CAST(CASE t0.c35  WHEN t0.c38 THEN t0.c35 ELSE t0.c35 END AS REAL)  NULLS FIRST;
SELECT * FROM t0 CROSS JOIN vt0 ON vt0.c0 WHERE ((t0.c38 IN ()) COLLATE RTRIM) ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c38 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON vt0.c0 ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN vt0 ON vt0.c0 WHERE ((t0.c38 IN ()) COLLATE RTRIM) ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c38 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON vt0.c0 ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN vt0 ON vt0.c0 WHERE ((t0.c38 IN ()) COLLATE RTRIM) ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((0.8316570039304124)>>(HEX(DISTINCT t0.c38))));
SELECT SUM(count) FROM (SELECT ALL ((((0.8316570039304124)>>(HEX(DISTINCT t0.c38)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((0.8316570039304124)>>(HEX(DISTINCT t0.c38))));
SELECT SUM(count) FROM (SELECT ALL ((((0.8316570039304124)>>(HEX(DISTINCT t0.c38)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((0.8316570039304124)>>(HEX(DISTINCT t0.c38))));
SELECT ALL * FROM t0 WHERE (0.9491009178895503);
SELECT SUM(count) FROM (SELECT ALL ((0.9491009178895503) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (0.9491009178895503);
SELECT SUM(count) FROM (SELECT ALL ((0.9491009178895503) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (0.9491009178895503);
SELECT ALL * FROM t0, vt0 WHERE ((((- (vt0.c1))) BETWEEN (((t0.c38)>=(t0.c35))) AND (x''))) ORDER BY ((((t0.c38)<<(t0.c35))) NOT BETWEEN (((((t0.c38)OR(vt0.c1)))AND(vt0.c1))) AND (((((t0.c35)OR('uhS\r')))AND(t0.c35))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) BETWEEN (((t0.c38)>=(t0.c35))) AND (x''))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c38)<<(t0.c35))) NOT BETWEEN (((((t0.c38)OR(vt0.c1)))AND(vt0.c1))) AND (((((t0.c35)OR('uhS\r')))AND(t0.c35))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((- (vt0.c1))) BETWEEN (((t0.c38)>=(t0.c35))) AND (x''))) ORDER BY ((((t0.c38)<<(t0.c35))) NOT BETWEEN (((((t0.c38)OR(vt0.c1)))AND(vt0.c1))) AND (((((t0.c35)OR('uhS\r')))AND(t0.c35))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) BETWEEN (((t0.c38)>=(t0.c35))) AND (x''))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c38)<<(t0.c35))) NOT BETWEEN (((((t0.c38)OR(vt0.c1)))AND(vt0.c1))) AND (((((t0.c35)OR('uhS\r')))AND(t0.c35))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((- (vt0.c1))) BETWEEN (((t0.c38)>=(t0.c35))) AND (x''))) ORDER BY ((((t0.c38)<<(t0.c35))) NOT BETWEEN (((((t0.c38)OR(vt0.c1)))AND(vt0.c1))) AND (((((t0.c35)OR('uhS\r')))AND(t0.c35))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (('-638995644' COLLATE BINARY) NOT NULL) WHERE (CASE WHEN HEX(t0.c38) THEN (t0.c35 IN ()) WHEN ((vt0.c0)&(vt0.c0)) THEN ((t0.c35)IS NOT(vt0.c0)) WHEN 1719342902 COLLATE BINARY THEN (((x''))!=((t0.c38))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN HEX(t0.c38) THEN (t0.c35 IN ()) WHEN ((vt0.c0)&(vt0.c0)) THEN ((t0.c35)IS NOT(vt0.c0)) WHEN 1719342902 COLLATE BINARY THEN (((x''))<>((t0.c38))) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (('-638995644' COLLATE BINARY) NOT NULL));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (('-638995644' COLLATE BINARY) NOT NULL) WHERE (CASE WHEN HEX(t0.c38) THEN (t0.c35 IN ()) WHEN ((vt0.c0)&(vt0.c0)) THEN ((t0.c35)IS NOT(vt0.c0)) WHEN 1719342902 COLLATE BINARY THEN (((x''))!=((t0.c38))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN HEX(t0.c38) THEN (t0.c35 IN ()) WHEN ((vt0.c0)&(vt0.c0)) THEN ((t0.c35)IS NOT(vt0.c0)) WHEN 1719342902 COLLATE BINARY THEN (((x''))<>((t0.c38))) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (('-638995644' COLLATE BINARY) NOT NULL));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (('-638995644' COLLATE BINARY) NOT NULL) WHERE (CASE WHEN HEX(t0.c38) THEN (t0.c35 IN ()) WHEN ((vt0.c0)&(vt0.c0)) THEN ((t0.c35)IS NOT(vt0.c0)) WHEN 1719342902 COLLATE BINARY THEN (((x''))!=((t0.c38))) END);
SELECT * FROM t0, vt0 WHERE (rtreenode(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END, vt0.c0 COLLATE RTRIM)) ORDER BY CAST((((t0.c38))<=((t0.c35))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END, vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((((t0.c38))<=((t0.c35))) AS BLOB)  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (rtreenode(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END, vt0.c0 COLLATE RTRIM)) ORDER BY CAST((((t0.c38))<=((t0.c35))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END, vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((((t0.c38))<=((t0.c35))) AS BLOB)  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (rtreenode(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END, vt0.c0 COLLATE RTRIM)) ORDER BY CAST((((t0.c38))<=((t0.c35))) AS BLOB)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((((0.24977804114058655)OR(t0.c38 COLLATE NOCASE)))OR((t0.c35 IN (t0.c38)))))OR(SQLITE_SOURCE_ID())))OR(t0.c38))) ORDER BY (((((t0.c35)) BETWEEN ((t0.c35)) AND (('>6'))))||(CAST(t0.c38 AS TEXT))) ASC  NULLS FIRST, ((((((t0.c35)) NOT BETWEEN ((t0.c38)) AND ((t0.c35))), '1722823678', x''))!=((t0.c38 COLLATE RTRIM, (t0.c35 IN (x'', t0.c38)), CASE t0.c35  WHEN t0.c35 THEN t0.c38 ELSE t0.c35 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.24977804114058655)OR(t0.c38 COLLATE NOCASE)))OR((t0.c35 IN (t0.c38)))))OR(SQLITE_SOURCE_ID())))OR(t0.c38))) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((((t0.c35)) BETWEEN ((t0.c35)) AND (('>6'))))||(CAST(t0.c38 AS TEXT))) ASC  NULLS FIRST, ((((((t0.c35)) NOT BETWEEN ((t0.c38)) AND ((t0.c35))), '1722823678', x''))<>((t0.c38 COLLATE RTRIM, (t0.c35 IN (x'', t0.c38)), CASE t0.c35  WHEN t0.c35 THEN t0.c38 ELSE t0.c35 END))));
SELECT ALL * FROM t0 WHERE (((((((((0.24977804114058655)OR(t0.c38 COLLATE NOCASE)))OR((t0.c35 IN (t0.c38)))))OR(SQLITE_SOURCE_ID())))OR(t0.c38))) ORDER BY (((((t0.c35)) BETWEEN ((t0.c35)) AND (('>6'))))||(CAST(t0.c38 AS TEXT))) ASC  NULLS FIRST, ((((((t0.c35)) NOT BETWEEN ((t0.c38)) AND ((t0.c35))), '1722823678', x''))!=((t0.c38 COLLATE RTRIM, (t0.c35 IN (x'', t0.c38)), CASE t0.c35  WHEN t0.c35 THEN t0.c38 ELSE t0.c35 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.24977804114058655)OR(t0.c38 COLLATE NOCASE)))OR((t0.c35 IN (t0.c38)))))OR(SQLITE_SOURCE_ID())))OR(t0.c38))) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((((t0.c35)) BETWEEN ((t0.c35)) AND (('>6'))))||(CAST(t0.c38 AS TEXT))) ASC  NULLS FIRST, ((((((t0.c35)) NOT BETWEEN ((t0.c38)) AND ((t0.c35))), '1722823678', x''))<>((t0.c38 COLLATE RTRIM, (t0.c35 IN (x'', t0.c38)), CASE t0.c35  WHEN t0.c35 THEN t0.c38 ELSE t0.c35 END))));
SELECT ALL * FROM t0 WHERE (((((((((0.24977804114058655)OR(t0.c38 COLLATE NOCASE)))OR((t0.c35 IN (t0.c38)))))OR(SQLITE_SOURCE_ID())))OR(t0.c38))) ORDER BY (((((t0.c35)) BETWEEN ((t0.c35)) AND (('>6'))))||(CAST(t0.c38 AS TEXT))) ASC  NULLS FIRST, ((((((t0.c35)) NOT BETWEEN ((t0.c38)) AND ((t0.c35))), '1722823678', x''))!=((t0.c38 COLLATE RTRIM, (t0.c35 IN (x'', t0.c38)), CASE t0.c35  WHEN t0.c35 THEN t0.c38 ELSE t0.c35 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((((x'')) BETWEEN (('r?')) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((x'')) BETWEEN (('r?')) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((((x'')) BETWEEN (('r?')) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((x'')) BETWEEN (('r?')) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((((x'')) BETWEEN (('r?')) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c35 COLLATE NOCASE) ISNULL)) ORDER BY t0.c35  NULLS FIRST, (((((((('-456666856')OR((((('/	J')OR(t0.c35)))AND(t0.c35)))))OR(NULL)))OR(((t0.c35)GLOB(t0.c38)))))AND(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c35  NULLS FIRST, (((((((('-456666856')OR((((('/	J')OR(t0.c35)))AND(t0.c35)))))OR(NULL)))OR(((t0.c35)GLOB(t0.c38)))))AND(NULL)));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c35 COLLATE NOCASE) ISNULL)) ORDER BY t0.c35  NULLS FIRST, (((((((('-456666856')OR((((('/	J')OR(t0.c35)))AND(t0.c35)))))OR(NULL)))OR(((t0.c35)GLOB(t0.c38)))))AND(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c35  NULLS FIRST, (((((((('-456666856')OR((((('/	J')OR(t0.c35)))AND(t0.c35)))))OR(NULL)))OR(((t0.c35)GLOB(t0.c38)))))AND(NULL)));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c35 COLLATE NOCASE) ISNULL)) ORDER BY t0.c35  NULLS FIRST, (((((((('-456666856')OR((((('/	J')OR(t0.c35)))AND(t0.c35)))))OR(NULL)))OR(((t0.c35)GLOB(t0.c38)))))AND(NULL));
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT ('sC'))))) ORDER BY ((((((vt0.c1))<((vt0.c0)))))<=((((vt0.c1)+(vt0.c1))))), ((((NULL)AND(((vt0.c1) IS TRUE))))OR(vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT ('sC'))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1))<((vt0.c0)))))<=((((vt0.c1)+(vt0.c1))))), ((((NULL)AND(((vt0.c1) IS TRUE))))OR(vt0.c0 COLLATE BINARY)) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT ('sC'))))) ORDER BY ((((((vt0.c1))<((vt0.c0)))))<=((((vt0.c1)+(vt0.c1))))), ((((NULL)AND(((vt0.c1) IS TRUE))))OR(vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT ('sC'))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1))<((vt0.c0)))))<=((((vt0.c1)+(vt0.c1))))), ((((NULL)AND(((vt0.c1) IS TRUE))))OR(vt0.c0 COLLATE BINARY)) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT ('sC'))))) ORDER BY ((((((vt0.c1))<((vt0.c0)))))<=((((vt0.c1)+(vt0.c1))))), ((((NULL)AND(((vt0.c1) IS TRUE))))OR(vt0.c0 COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CASE WHEN t0.c35 THEN t0.c38 WHEN 'TRUE' THEN t0.c38 WHEN t0.c35 THEN t0.c38 ELSE t0.c38 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c35 THEN t0.c38 WHEN 'TRUE' THEN t0.c38 WHEN t0.c35 THEN t0.c38 ELSE t0.c38 END AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CASE WHEN t0.c35 THEN t0.c38 WHEN 'TRUE' THEN t0.c38 WHEN t0.c35 THEN t0.c38 ELSE t0.c38 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c35 THEN t0.c38 WHEN 'TRUE' THEN t0.c38 WHEN t0.c35 THEN t0.c38 ELSE t0.c38 END AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CASE WHEN t0.c35 THEN t0.c38 WHEN 'TRUE' THEN t0.c38 WHEN t0.c35 THEN t0.c38 ELSE t0.c38 END AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE x'9da7'  WHEN load_extension(vt0.c1, t0.c38) THEN LIKELIHOOD(t0.c35, 0.6342904691967826) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x'9da7'  WHEN load_extension(vt0.c1, t0.c38) THEN LIKELIHOOD(t0.c35, 0.6342904691967826) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE x'9da7'  WHEN load_extension(vt0.c1, t0.c38) THEN LIKELIHOOD(t0.c35, 0.6342904691967826) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x'9da7'  WHEN load_extension(vt0.c1, t0.c38) THEN LIKELIHOOD(t0.c35, 0.6342904691967826) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM t0 WHERE ((CASE WHEN t0.c35 THEN t0.c35 WHEN t0.c38 THEN '-933458643' WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN NULL WHEN t0.c38 THEN 4.39403634E8 ELSE t0.c35 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c35 THEN t0.c35 WHEN t0.c38 THEN '-933458643' WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN NULL WHEN t0.c38 THEN 4.39403634E8 ELSE t0.c35 END IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((CASE WHEN t0.c35 THEN t0.c35 WHEN t0.c38 THEN '-933458643' WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN NULL WHEN t0.c38 THEN 4.39403634E8 ELSE t0.c35 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c35 THEN t0.c35 WHEN t0.c38 THEN '-933458643' WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN NULL WHEN t0.c38 THEN 4.39403634E8 ELSE t0.c35 END IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((CASE WHEN t0.c35 THEN t0.c35 WHEN t0.c38 THEN '-933458643' WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN NULL WHEN t0.c38 THEN 4.39403634E8 ELSE t0.c35 END IN ()));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CASE WHEN ((vt0.c0)/(vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END WHEN vt0.c0 THEN COALESCE(DISTINCT 'am', vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((((((((vt0.c1)OR(' !S-t%o)')))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)/(vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END WHEN vt0.c0 THEN COALESCE(DISTINCT 'am', vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((((((((vt0.c1)OR(' !S-t%o)')))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CASE WHEN ((vt0.c0)/(vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END WHEN vt0.c0 THEN COALESCE(DISTINCT 'am', vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((((((((vt0.c1)OR(' !S-t%o)')))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)/(vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END WHEN vt0.c0 THEN COALESCE(DISTINCT 'am', vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((((((((vt0.c1)OR(' !S-t%o)')))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CASE WHEN ((vt0.c0)/(vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END WHEN vt0.c0 THEN COALESCE(DISTINCT 'am', vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((((((((vt0.c1)OR(' !S-t%o)')))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) END DESC  NULLS LAST;
SELECT * FROM t0 WHERE (CASE (((t0.c35))<(('UC\rQ')))  WHEN t0.c35 THEN t0.c35 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c35))<(('UC\rQ')))  WHEN t0.c35 THEN t0.c35 COLLATE BINARY END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE (((t0.c35))<(('UC\rQ')))  WHEN t0.c35 THEN t0.c35 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c35))<(('UC\rQ')))  WHEN t0.c35 THEN t0.c35 COLLATE BINARY END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE (((t0.c35))<(('UC\rQ')))  WHEN t0.c35 THEN t0.c35 COLLATE BINARY END);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1))!=((vt0.c1)))) BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (((('-981061166', vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))!=((vt0.c1)))) BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (((('-981061166', vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1))!=((vt0.c1)))) BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (((('-981061166', vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))!=((vt0.c1)))) BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (((('-981061166', vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1))!=((vt0.c1)))) BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (((('-981061166', vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) ORDER BY x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((NULLIF(NULL, t0.c35))OR(vt0.c0)))AND('-552175790')));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(NULL, t0.c35))OR(vt0.c0)))AND('-552175790'))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((NULLIF(NULL, t0.c35))OR(vt0.c0)))AND('-552175790')));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(NULL, t0.c35))OR(vt0.c0)))AND('-552175790'))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((NULLIF(NULL, t0.c35))OR(vt0.c0)))AND('-552175790')));
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN t0.c35 THEN t0.c38 END THEN TIME(t0.c35, vt0.c0, vt0.c1) ELSE ((vt0.c1) NOTNULL) END) ORDER BY ((((t0.c35) NOTNULL))+(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c1  WHEN t0.c35 THEN t0.c38 END THEN TIME(t0.c35, vt0.c0, vt0.c1) ELSE ((vt0.c1) NOTNULL) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c35) NOTNULL))+(CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN t0.c35 THEN t0.c38 END THEN TIME(t0.c35, vt0.c0, vt0.c1) ELSE ((vt0.c1) NOTNULL) END) ORDER BY ((((t0.c35) NOTNULL))+(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c1  WHEN t0.c35 THEN t0.c38 END THEN TIME(t0.c35, vt0.c0, vt0.c1) ELSE ((vt0.c1) NOTNULL) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c35) NOTNULL))+(CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN t0.c35 THEN t0.c38 END THEN TIME(t0.c35, vt0.c0, vt0.c1) ELSE ((vt0.c1) NOTNULL) END) ORDER BY ((((t0.c35) NOTNULL))+(CAST(vt0.c0 AS TEXT)));
SELECT COUNT(*) FROM t0 WHERE (t0.c38) ORDER BY ((((t0.c35) IS FALSE))||(CASE WHEN t0.c35 THEN t0.c35 END));
SELECT SUM(count) FROM (SELECT ALL ((t0.c38) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c35) IS FALSE))||(CASE WHEN t0.c35 THEN t0.c35 END)));
SELECT COUNT(*) FROM t0 WHERE (t0.c38) ORDER BY ((((t0.c35) IS FALSE))||(CASE WHEN t0.c35 THEN t0.c35 END));
SELECT SUM(count) FROM (SELECT ALL ((t0.c38) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c35) IS FALSE))||(CASE WHEN t0.c35 THEN t0.c35 END)));
SELECT COUNT(*) FROM t0 WHERE (t0.c38) ORDER BY ((((t0.c35) IS FALSE))||(CASE WHEN t0.c35 THEN t0.c35 END));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((((((t0.c35)OR(vt0.c1)))OR(vt0.c1)))OR(t0.c35)))AND(t0.c35))))<(((vt0.c1 IN ()))))) ORDER BY 'sC'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c35)OR(vt0.c1)))OR(vt0.c1)))OR(t0.c35)))AND(t0.c35))))<(((vt0.c1 IN ()))))) IS TRUE)  as count FROM t0, vt0 ORDER BY 'sC'  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((((((t0.c35)OR(vt0.c1)))OR(vt0.c1)))OR(t0.c35)))AND(t0.c35))))<(((vt0.c1 IN ()))))) ORDER BY 'sC'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c35)OR(vt0.c1)))OR(vt0.c1)))OR(t0.c35)))AND(t0.c35))))<(((vt0.c1 IN ()))))) IS TRUE)  as count FROM t0, vt0 ORDER BY 'sC'  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((((((t0.c35)OR(vt0.c1)))OR(vt0.c1)))OR(t0.c35)))AND(t0.c35))))<(((vt0.c1 IN ()))))) ORDER BY 'sC'  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((NULL IN ()));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (t0.c35 COLLATE NOCASE IN ((NOT (vt0.c0)))) WHERE ((vt0.c1 IN (NULL, vt0.c0)) COLLATE RTRIM) ORDER BY vt0.c1 DESC, '-1137777084' DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN (NULL, vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (t0.c35 COLLATE NOCASE IN ((NOT (vt0.c0)))) ORDER BY vt0.c1 DESC, '-1137777084' DESC);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (t0.c35 COLLATE NOCASE IN ((NOT (vt0.c0)))) WHERE ((vt0.c1 IN (NULL, vt0.c0)) COLLATE RTRIM) ORDER BY vt0.c1 DESC, '-1137777084' DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN (NULL, vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (t0.c35 COLLATE NOCASE IN ((NOT (vt0.c0)))) ORDER BY vt0.c1 DESC, '-1137777084' DESC);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (t0.c35 COLLATE NOCASE IN ((NOT (vt0.c0)))) WHERE ((vt0.c1 IN (NULL, vt0.c0)) COLLATE RTRIM) ORDER BY vt0.c1 DESC, '-1137777084' DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c35 IN (t0.c38))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((t0.c35)OR(t0.c35))))) ORDER BY (((vt0.c1) ISNULL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35 IN (t0.c38))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((t0.c35)OR(t0.c35))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c1) ISNULL) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c35 IN (t0.c38))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((t0.c35)OR(t0.c35))))) ORDER BY (((vt0.c1) ISNULL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35 IN (t0.c38))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((t0.c35)OR(t0.c35))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c1) ISNULL) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c35 IN (t0.c38))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((t0.c35)OR(t0.c35))))) ORDER BY (((vt0.c1) ISNULL) IN ()) ASC;
SELECT * FROM t0, vt0 WHERE (CAST('' AS REAL)) ORDER BY CASE WHEN CAST(t0.c38 AS INTEGER) THEN (('') IS TRUE) WHEN (t0.c38 IN (vt0.c1, t0.c38)) THEN ((t0.c38)<=(t0.c35)) WHEN '' THEN ((t0.c35) BETWEEN (vt0.c1) AND (t0.c35)) END  NULLS LAST, vt0.c0  NULLS FIRST, (((t0.c35 IN ()))IS NOT(((vt0.c1)-(t0.c35)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN CAST(t0.c38 AS INTEGER) THEN (('') IS TRUE) WHEN (t0.c38 IN (vt0.c1, t0.c38)) THEN ((t0.c38)<=(t0.c35)) WHEN '' THEN ((t0.c35) BETWEEN (vt0.c1) AND (t0.c35)) END  NULLS LAST, vt0.c0  NULLS FIRST, (((t0.c35 IN ()))IS NOT(((vt0.c1)-(t0.c35)))) ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (CAST('' AS REAL)) ORDER BY CASE WHEN CAST(t0.c38 AS INTEGER) THEN (('') IS TRUE) WHEN (t0.c38 IN (vt0.c1, t0.c38)) THEN ((t0.c38)<=(t0.c35)) WHEN '' THEN ((t0.c35) BETWEEN (vt0.c1) AND (t0.c35)) END  NULLS LAST, vt0.c0  NULLS FIRST, (((t0.c35 IN ()))IS NOT(((vt0.c1)-(t0.c35)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN CAST(t0.c38 AS INTEGER) THEN (('') IS TRUE) WHEN (t0.c38 IN (vt0.c1, t0.c38)) THEN ((t0.c38)<=(t0.c35)) WHEN '' THEN ((t0.c35) BETWEEN (vt0.c1) AND (t0.c35)) END  NULLS LAST, vt0.c0  NULLS FIRST, (((t0.c35 IN ()))IS NOT(((vt0.c1)-(t0.c35)))) ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (CAST('' AS REAL)) ORDER BY CASE WHEN CAST(t0.c38 AS INTEGER) THEN (('') IS TRUE) WHEN (t0.c38 IN (vt0.c1, t0.c38)) THEN ((t0.c38)<=(t0.c35)) WHEN '' THEN ((t0.c35) BETWEEN (vt0.c1) AND (t0.c35)) END  NULLS LAST, vt0.c0  NULLS FIRST, (((t0.c35 IN ()))IS NOT(((vt0.c1)-(t0.c35)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((+ (vt0.c0)), -1910878429, ((x'') ISNULL)))>((vt0.c1 COLLATE NOCASE, ((vt0.c0)&(NULL)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((+ (vt0.c0)), -1910878429, ((x'') ISNULL)))>((vt0.c1 COLLATE NOCASE, ((vt0.c0)&(NULL)), vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((+ (vt0.c0)), -1910878429, ((x'') ISNULL)))>((vt0.c1 COLLATE NOCASE, ((vt0.c0)&(NULL)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((+ (vt0.c0)), -1910878429, ((x'') ISNULL)))>((vt0.c1 COLLATE NOCASE, ((vt0.c0)&(NULL)), vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((+ (vt0.c0)), -1910878429, ((x'') ISNULL)))>((vt0.c1 COLLATE NOCASE, ((vt0.c0)&(NULL)), vt0.c0))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ())) ORDER BY CAST(((t0.c38)+('i)LdZMB')) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((t0.c38)+('i)LdZMB')) AS REAL) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ())) ORDER BY CAST(((t0.c38)+('i)LdZMB')) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((t0.c38)+('i)LdZMB')) AS REAL) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ())) ORDER BY CAST(((t0.c38)+('i)LdZMB')) AS REAL) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (rtreenode((NOT (t0.c38)), CASE WHEN t0.c38 THEN t0.c35 ELSE t0.c35 END));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode((NOT (t0.c38)), CASE WHEN t0.c38 THEN t0.c35 ELSE t0.c35 END)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (rtreenode((NOT (t0.c38)), CASE WHEN t0.c38 THEN t0.c35 ELSE t0.c35 END));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode((NOT (t0.c38)), CASE WHEN t0.c38 THEN t0.c35 ELSE t0.c35 END)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (rtreenode((NOT (t0.c38)), CASE WHEN t0.c38 THEN t0.c35 ELSE t0.c35 END));
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c38)|(t0.c35))) BETWEEN (LIKELIHOOD(vt0.c1, 0.8691329016749387)) AND ((('')OR(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c38)|(t0.c35))) BETWEEN (LIKELIHOOD(vt0.c1, 0.8691329016749387)) AND ((('')OR(NULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c38)|(t0.c35))) BETWEEN (LIKELIHOOD(vt0.c1, 0.8691329016749387)) AND ((('')OR(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c38)|(t0.c35))) BETWEEN (LIKELIHOOD(vt0.c1, 0.8691329016749387)) AND ((('')OR(NULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c38)|(t0.c35))) BETWEEN (LIKELIHOOD(vt0.c1, 0.8691329016749387)) AND ((('')OR(NULL)))));
SELECT ALL * FROM t0 WHERE ((~ (((t0.c38)>('-692460744')))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c38)>('-692460744'))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c38)>('-692460744')))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c38)>('-692460744'))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c38)>('-692460744')))));
SELECT ALL * FROM t0 WHERE (((((t0.c35)AND(t0.c35))) NOT BETWEEN (t0.c38 COLLATE BINARY) AND (t0.c38 COLLATE RTRIM))) ORDER BY ((NULLIF(t0.c38, 0.25859375170639765))>=(((t0.c35) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35)AND(t0.c35))) NOT BETWEEN (t0.c38 COLLATE BINARY) AND (t0.c38 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY ((NULLIF(t0.c38, 0.25859375170639765))>=(((t0.c35) ISNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c35)AND(t0.c35))) NOT BETWEEN (t0.c38 COLLATE BINARY) AND (t0.c38 COLLATE RTRIM))) ORDER BY ((NULLIF(t0.c38, 0.25859375170639765))>=(((t0.c35) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35)AND(t0.c35))) NOT BETWEEN (t0.c38 COLLATE BINARY) AND (t0.c38 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY ((NULLIF(t0.c38, 0.25859375170639765))>=(((t0.c35) ISNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c35)AND(t0.c35))) NOT BETWEEN (t0.c38 COLLATE BINARY) AND (t0.c38 COLLATE RTRIM))) ORDER BY ((NULLIF(t0.c38, 0.25859375170639765))>=(((t0.c35) ISNULL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c38)-(vt0.c0)) COLLATE NOCASE) ORDER BY ((CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END)<(CAST(vt0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c38)-(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END)<(CAST(vt0.c1 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c38)-(vt0.c0)) COLLATE NOCASE) ORDER BY ((CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END)<(CAST(vt0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c38)-(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END)<(CAST(vt0.c1 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c38)-(vt0.c0)) COLLATE NOCASE) ORDER BY ((CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END)<(CAST(vt0.c1 AS TEXT)))  NULLS FIRST;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))==(CAST(t0.c38 AS BLOB))) WHERE (LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN t0.c35 END, 0.3494436528813001));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN t0.c35 END, 0.3494436528813001)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))==(CAST(t0.c38 AS BLOB))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))==(CAST(t0.c38 AS BLOB))) WHERE (LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN t0.c35 END, 0.3494436528813001));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN t0.c35 END, 0.3494436528813001)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))==(CAST(t0.c38 AS BLOB))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))==(CAST(t0.c38 AS BLOB))) WHERE (LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN t0.c35 END, 0.3494436528813001));
SELECT COUNT(*) FROM t0 WHERE (((t0.c38) BETWEEN (t0.c35 COLLATE RTRIM) AND (((t0.c38) NOT BETWEEN (t0.c38) AND (t0.c38))))) ORDER BY ((t0.c38) ISNULL) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c38) BETWEEN (t0.c35 COLLATE RTRIM) AND (((t0.c38) NOT BETWEEN (t0.c38) AND (t0.c38))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c38) ISNULL) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c38) BETWEEN (t0.c35 COLLATE RTRIM) AND (((t0.c38) NOT BETWEEN (t0.c38) AND (t0.c38))))) ORDER BY ((t0.c38) ISNULL) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c38) BETWEEN (t0.c35 COLLATE RTRIM) AND (((t0.c38) NOT BETWEEN (t0.c38) AND (t0.c38))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c38) ISNULL) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c38) BETWEEN (t0.c35 COLLATE RTRIM) AND (((t0.c38) NOT BETWEEN (t0.c38) AND (t0.c38))))) ORDER BY ((t0.c38) ISNULL) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((('sc') IS TRUE));
SELECT SUM(count) FROM (SELECT (((('sc') IS TRUE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((('sc') IS TRUE));
SELECT SUM(count) FROM (SELECT (((('sc') IS TRUE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((('sc') IS TRUE));
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c35 THEN x'aeae' END)*(t0.c38)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c35 THEN x'aeae' END)*(t0.c38))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c35 THEN x'aeae' END)*(t0.c38)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c35 THEN x'aeae' END)*(t0.c38))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c35 THEN x'aeae' END)*(t0.c38)));
SELECT * FROM t0, vt0 WHERE (((((vt0.c1)>(t0.c38))) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0)OR(t0.c35)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>(t0.c38))) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0)OR(t0.c35))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((vt0.c1)>(t0.c38))) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0)OR(t0.c35)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>(t0.c38))) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0)OR(t0.c35))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((vt0.c1)>(t0.c38))) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0)OR(t0.c35)))));
SELECT * FROM vt0, t0 WHERE ((((((((((t0.c35)OR(t0.c38)))OR(t0.c38)))OR(t0.c35)))OR(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c35)OR(t0.c38)))OR(t0.c38)))OR(t0.c35)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((((((t0.c35)OR(t0.c38)))OR(t0.c38)))OR(t0.c35)))OR(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c35)OR(t0.c38)))OR(t0.c38)))OR(t0.c35)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((((((t0.c35)OR(t0.c38)))OR(t0.c38)))OR(t0.c35)))OR(vt0.c1)) IN ()));
SELECT * FROM t0, vt0 WHERE ((((((((t0.c35))<>((vt0.c1))))OR(((((vt0.c0)OR(t0.c38)))AND(t0.c35)))))OR(UPPER(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c35))<>((vt0.c1))))OR(((((vt0.c0)OR(t0.c38)))AND(t0.c35)))))OR(UPPER(vt0.c1)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((((t0.c35))<>((vt0.c1))))OR(((((vt0.c0)OR(t0.c38)))AND(t0.c35)))))OR(UPPER(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c35))<>((vt0.c1))))OR(((((vt0.c0)OR(t0.c38)))AND(t0.c35)))))OR(UPPER(vt0.c1)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((((t0.c35))<>((vt0.c1))))OR(((((vt0.c0)OR(t0.c38)))AND(t0.c35)))))OR(UPPER(vt0.c1))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE CAST(t0.c38 AS BLOB)  WHEN ((t0.c35) NOTNULL) THEN t0.c38 COLLATE RTRIM ELSE vt0.c0 END) ORDER BY ((((((((((((t0.c35)OR(vt0.c1)))AND(vt0.c1)))AND(t0.c35 COLLATE BINARY)))AND(t0.c38)))AND(vt0.c1)))AND(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c38 AS BLOB)  WHEN ((t0.c35) NOTNULL) THEN t0.c38 COLLATE RTRIM ELSE vt0.c0 END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((((t0.c35)OR(vt0.c1)))AND(vt0.c1)))AND(t0.c35 COLLATE BINARY)))AND(t0.c38)))AND(vt0.c1)))AND(vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE CAST(t0.c38 AS BLOB)  WHEN ((t0.c35) NOTNULL) THEN t0.c38 COLLATE RTRIM ELSE vt0.c0 END) ORDER BY ((((((((((((t0.c35)OR(vt0.c1)))AND(vt0.c1)))AND(t0.c35 COLLATE BINARY)))AND(t0.c38)))AND(vt0.c1)))AND(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c38 AS BLOB)  WHEN ((t0.c35) NOTNULL) THEN t0.c38 COLLATE RTRIM ELSE vt0.c0 END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((((t0.c35)OR(vt0.c1)))AND(vt0.c1)))AND(t0.c35 COLLATE BINARY)))AND(t0.c38)))AND(vt0.c1)))AND(vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE CAST(t0.c38 AS BLOB)  WHEN ((t0.c35) NOTNULL) THEN t0.c38 COLLATE RTRIM ELSE vt0.c0 END) ORDER BY ((((((((((((t0.c35)OR(vt0.c1)))AND(vt0.c1)))AND(t0.c35 COLLATE BINARY)))AND(t0.c38)))AND(vt0.c1)))AND(vt0.c0))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (0.8774942206723234) ORDER BY 0X65ca4ef7 COLLATE BINARY ASC, LAST_INSERT_ROWID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8774942206723234) IS TRUE)  as count FROM t0 ORDER BY 0X65ca4ef7 COLLATE BINARY ASC, LAST_INSERT_ROWID()  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (0.8774942206723234) ORDER BY 0X65ca4ef7 COLLATE BINARY ASC, LAST_INSERT_ROWID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8774942206723234) IS TRUE)  as count FROM t0 ORDER BY 0X65ca4ef7 COLLATE BINARY ASC, LAST_INSERT_ROWID()  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) IN ()));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)|(t0.c35)))&(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)|(t0.c35)))&(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)|(t0.c35)))&(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)|(t0.c35)))&(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)|(t0.c35)))&(((vt0.c1) ISNULL))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((CASE t0.c35  WHEN t0.c38 THEN 'H5<\r' WHEN t0.c35 THEN '382063104' WHEN vt0.c0 THEN t0.c38 WHEN t0.c38 THEN 0x43950779 WHEN t0.c38 THEN vt0.c0 ELSE vt0.c0 END)OR(((((vt0.c1)AND(t0.c38)))OR(vt0.c0)))))OR(x'')) WHERE ((((HEX(DISTINCT vt0.c1), x'', ((((vt0.c0)OR(t0.c35)))OR(t0.c38))))<=((vt0.c0 COLLATE RTRIM, ((t0.c35)GLOB(t0.c38)), ((((vt0.c0)AND(t0.c35)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((HEX(DISTINCT vt0.c1), x'', ((((vt0.c0)OR(t0.c35)))OR(t0.c38))))<=((vt0.c0 COLLATE RTRIM, ((t0.c35)GLOB(t0.c38)), ((((vt0.c0)AND(t0.c35)))AND(vt0.c0)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((CASE t0.c35  WHEN t0.c38 THEN 'H5<\r' WHEN t0.c35 THEN '382063104' WHEN vt0.c0 THEN t0.c38 WHEN t0.c38 THEN 0X43950779 WHEN t0.c38 THEN vt0.c0 ELSE vt0.c0 END)OR(((((vt0.c1)AND(t0.c38)))OR(vt0.c0)))))OR(x'')));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((CASE t0.c35  WHEN t0.c38 THEN 'H5<\r' WHEN t0.c35 THEN '382063104' WHEN vt0.c0 THEN t0.c38 WHEN t0.c38 THEN 0x43950779 WHEN t0.c38 THEN vt0.c0 ELSE vt0.c0 END)OR(((((vt0.c1)AND(t0.c38)))OR(vt0.c0)))))OR(x'')) WHERE ((((HEX(DISTINCT vt0.c1), x'', ((((vt0.c0)OR(t0.c35)))OR(t0.c38))))<=((vt0.c0 COLLATE RTRIM, ((t0.c35)GLOB(t0.c38)), ((((vt0.c0)AND(t0.c35)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((HEX(DISTINCT vt0.c1), x'', ((((vt0.c0)OR(t0.c35)))OR(t0.c38))))<=((vt0.c0 COLLATE RTRIM, ((t0.c35)GLOB(t0.c38)), ((((vt0.c0)AND(t0.c35)))AND(vt0.c0)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((CASE t0.c35  WHEN t0.c38 THEN 'H5<\r' WHEN t0.c35 THEN '382063104' WHEN vt0.c0 THEN t0.c38 WHEN t0.c38 THEN 0X43950779 WHEN t0.c38 THEN vt0.c0 ELSE vt0.c0 END)OR(((((vt0.c1)AND(t0.c38)))OR(vt0.c0)))))OR(x'')));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((CASE t0.c35  WHEN t0.c38 THEN 'H5<\r' WHEN t0.c35 THEN '382063104' WHEN vt0.c0 THEN t0.c38 WHEN t0.c38 THEN 0x43950779 WHEN t0.c38 THEN vt0.c0 ELSE vt0.c0 END)OR(((((vt0.c1)AND(t0.c38)))OR(vt0.c0)))))OR(x'')) WHERE ((((HEX(DISTINCT vt0.c1), x'', ((((vt0.c0)OR(t0.c35)))OR(t0.c38))))<=((vt0.c0 COLLATE RTRIM, ((t0.c35)GLOB(t0.c38)), ((((vt0.c0)AND(t0.c35)))AND(vt0.c0))))));
SELECT ALL * FROM t0 WHERE (t0.c35) ORDER BY (- (((((((((((((t0.c35)AND(t0.c38)))AND(t0.c35)))AND(t0.c38)))OR(t0.c38)))OR(t0.c38)))OR(t0.c35)))) ASC  NULLS FIRST, CAST(CAST(t0.c38 AS BLOB) AS REAL);
SELECT SUM(count) FROM (SELECT ((t0.c35) IS TRUE)  as count FROM t0 ORDER BY (- (((((((((((((t0.c35)AND(t0.c38)))AND(t0.c35)))AND(t0.c38)))OR(t0.c38)))OR(t0.c38)))OR(t0.c35)))) ASC  NULLS FIRST, CAST(CAST(t0.c38 AS BLOB) AS REAL));
SELECT ALL * FROM t0 WHERE (t0.c35) ORDER BY (- (((((((((((((t0.c35)AND(t0.c38)))AND(t0.c35)))AND(t0.c38)))OR(t0.c38)))OR(t0.c38)))OR(t0.c35)))) ASC  NULLS FIRST, CAST(CAST(t0.c38 AS BLOB) AS REAL);
SELECT SUM(count) FROM (SELECT ((t0.c35) IS TRUE)  as count FROM t0 ORDER BY (- (((((((((((((t0.c35)AND(t0.c38)))AND(t0.c35)))AND(t0.c38)))OR(t0.c38)))OR(t0.c38)))OR(t0.c35)))) ASC  NULLS FIRST, CAST(CAST(t0.c38 AS BLOB) AS REAL));
SELECT ALL * FROM t0 WHERE (t0.c35) ORDER BY (- (((((((((((((t0.c35)AND(t0.c38)))AND(t0.c35)))AND(t0.c38)))OR(t0.c38)))OR(t0.c38)))OR(t0.c35)))) ASC  NULLS FIRST, CAST(CAST(t0.c38 AS BLOB) AS REAL);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c38)GLOB(vt0.c0))))!=((t0.c38))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c38)GLOB(vt0.c0))))!=((t0.c38)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c38)GLOB(vt0.c0))))!=((t0.c38))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c38)GLOB(vt0.c0))))!=((t0.c38)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c38)GLOB(vt0.c0))))!=((t0.c38))));
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c1)))/((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))/((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c1)))/((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))/((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c1)))/((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((+ (x'')));
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((+ (x'')));
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((+ (x'')));
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) IS TRUE)) IS FALSE) DESC  NULLS FIRST, CASE CAST(vt0.c0 AS INTEGER)  WHEN t0.c38 COLLATE NOCASE THEN CAST(t0.c38 AS BLOB) END ASC, '-1226213202' ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) IS TRUE)) IS FALSE) DESC  NULLS FIRST, CASE CAST(vt0.c0 AS INTEGER)  WHEN t0.c38 COLLATE NOCASE THEN CAST(t0.c38 AS BLOB) END ASC, '-1226213202' ASC);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) IS TRUE)) IS FALSE) DESC  NULLS FIRST, CASE CAST(vt0.c0 AS INTEGER)  WHEN t0.c38 COLLATE NOCASE THEN CAST(t0.c38 AS BLOB) END ASC, '-1226213202' ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) IS TRUE)) IS FALSE) DESC  NULLS FIRST, CASE CAST(vt0.c0 AS INTEGER)  WHEN t0.c38 COLLATE NOCASE THEN CAST(t0.c38 AS BLOB) END ASC, '-1226213202' ASC);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) IS TRUE)) IS FALSE) DESC  NULLS FIRST, CASE CAST(vt0.c0 AS INTEGER)  WHEN t0.c38 COLLATE NOCASE THEN CAST(t0.c38 AS BLOB) END ASC, '-1226213202' ASC;
SELECT * FROM vt0 WHERE (NULLIF(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((-1820924718)==(vt0.c0)))) ORDER BY NULLIF(DISTINCT vt0.c1, vt0.c0) COLLATE RTRIM ASC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((-1820924718)=(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(DISTINCT vt0.c1, vt0.c0) COLLATE RTRIM ASC, vt0.c0 DESC);
SELECT * FROM vt0 WHERE (NULLIF(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((-1820924718)==(vt0.c0)))) ORDER BY NULLIF(DISTINCT vt0.c1, vt0.c0) COLLATE RTRIM ASC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((-1820924718)=(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(DISTINCT vt0.c1, vt0.c0) COLLATE RTRIM ASC, vt0.c0 DESC);
SELECT * FROM vt0 WHERE (NULLIF(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((-1820924718)==(vt0.c0)))) ORDER BY NULLIF(DISTINCT vt0.c1, vt0.c0) COLLATE RTRIM ASC, vt0.c0 DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1 IN ())))>=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN ())))>=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1 IN ())))>=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN ())))>=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1 IN ())))>=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT ALL * FROM t0 WHERE (t0.c35);
SELECT SUM(count) FROM (SELECT ((t0.c35) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c35);
SELECT SUM(count) FROM (SELECT ((t0.c35) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c35);
SELECT * FROM t0 WHERE (0.9784714857773509) ORDER BY (~ (((t0.c38) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9784714857773509) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c38) ISNULL)))  NULLS LAST);
SELECT * FROM t0 WHERE (0.9784714857773509) ORDER BY (~ (((t0.c38) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9784714857773509) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c38) ISNULL)))  NULLS LAST);
SELECT * FROM t0 WHERE (0.9784714857773509) ORDER BY (~ (((t0.c38) ISNULL)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((x'bb92')) AND ((0.19160244472455157 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) NOT BETWEEN ((x'bb92')) AND ((0.19160244472455157 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((x'bb92')) AND ((0.19160244472455157 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) NOT BETWEEN ((x'bb92')) AND ((0.19160244472455157 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((x'bb92')) AND ((0.19160244472455157 COLLATE RTRIM))));
SELECT * FROM t0 WHERE (((t0.c38)IS(((t0.c38)>>(t0.c35))))) ORDER BY t0.c35 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c38)IS(((t0.c38)>>(t0.c35))))) IS TRUE)  as count FROM t0 ORDER BY t0.c35 ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c38)IS(((t0.c38)>>(t0.c35))))) ORDER BY t0.c35 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c38)IS(((t0.c38)>>(t0.c35))))) IS TRUE)  as count FROM t0 ORDER BY t0.c35 ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c38)IS(((t0.c38)>>(t0.c35))))) ORDER BY t0.c35 ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT (t0.c38 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c38 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT (t0.c38 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c38 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT (t0.c38 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c35, t0.c38, t0.c35)) BETWEEN ((((t0.c38)+(t0.c35)), t0.c35, t0.c38 COLLATE RTRIM)) AND (((t0.c35 IN ()), t0.c35 COLLATE NOCASE, (('1525054684')OR(t0.c38))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35, t0.c38, t0.c35)) BETWEEN ((((t0.c38)+(t0.c35)), t0.c35, t0.c38 COLLATE RTRIM)) AND (((t0.c35 IN ()), t0.c35 COLLATE NOCASE, (('1525054684')OR(t0.c38)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c35, t0.c38, t0.c35)) BETWEEN ((((t0.c38)+(t0.c35)), t0.c35, t0.c38 COLLATE RTRIM)) AND (((t0.c35 IN ()), t0.c35 COLLATE NOCASE, (('1525054684')OR(t0.c38))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35, t0.c38, t0.c35)) BETWEEN ((((t0.c38)+(t0.c35)), t0.c35, t0.c38 COLLATE RTRIM)) AND (((t0.c35 IN ()), t0.c35 COLLATE NOCASE, (('1525054684')OR(t0.c38)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c35, t0.c38, t0.c35)) BETWEEN ((((t0.c38)+(t0.c35)), t0.c35, t0.c38 COLLATE RTRIM)) AND (((t0.c35 IN ()), t0.c35 COLLATE NOCASE, (('1525054684')OR(t0.c38))))));
SELECT * FROM t0, vt0 WHERE (CASE WHEN (NOT (t0.c35)) THEN 0X16c5d200 END) ORDER BY UPPER(((vt0.c0) NOTNULL)), (((('\m')AND('1120666182')))OR(((vt0.c1) BETWEEN (t0.c35) AND (vt0.c1))))  NULLS LAST, ((0.6443320013634783)||(((t0.c35)<(t0.c38)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (t0.c35)) THEN 0X16c5d200 END) IS TRUE)  as count FROM t0, vt0 ORDER BY UPPER(((vt0.c0) NOTNULL)), (((('\m')AND('1120666182')))OR(((vt0.c1) BETWEEN (t0.c35) AND (vt0.c1))))  NULLS LAST, ((0.6443320013634783)||(((t0.c35)<(t0.c38)))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (CASE WHEN (NOT (t0.c35)) THEN 0X16c5d200 END) ORDER BY UPPER(((vt0.c0) NOTNULL)), (((('\m')AND('1120666182')))OR(((vt0.c1) BETWEEN (t0.c35) AND (vt0.c1))))  NULLS LAST, ((0.6443320013634783)||(((t0.c35)<(t0.c38)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (t0.c35)) THEN 0X16c5d200 END) IS TRUE)  as count FROM t0, vt0 ORDER BY UPPER(((vt0.c0) NOTNULL)), (((('\m')AND('1120666182')))OR(((vt0.c1) BETWEEN (t0.c35) AND (vt0.c1))))  NULLS LAST, ((0.6443320013634783)||(((t0.c35)<(t0.c38)))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (CASE WHEN (NOT (t0.c35)) THEN 0X16c5d200 END) ORDER BY UPPER(((vt0.c0) NOTNULL)), (((('\m')AND('1120666182')))OR(((vt0.c1) BETWEEN (t0.c35) AND (vt0.c1))))  NULLS LAST, ((0.6443320013634783)||(((t0.c35)<(t0.c38)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 NOT INDEXED WHERE ((((t0.c35)) NOT BETWEEN ((TYPEOF(t0.c38))) AND ((HEX(t0.c38)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35)) NOT BETWEEN ((TYPEOF(t0.c38))) AND ((HEX(t0.c38))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 NOT INDEXED WHERE ((((t0.c35)) NOT BETWEEN ((TYPEOF(t0.c38))) AND ((HEX(t0.c38)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35)) NOT BETWEEN ((TYPEOF(t0.c38))) AND ((HEX(t0.c38))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 NOT INDEXED WHERE ((((t0.c35)) NOT BETWEEN ((TYPEOF(t0.c38))) AND ((HEX(t0.c38)))));
SELECT ALL * FROM vt0 WHERE (((json_array(x'', vt0.c1)) BETWEEN (0.75246282669791) AND (((vt0.c1)+(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_array(x'', vt0.c1)) BETWEEN (0.75246282669791) AND (((vt0.c1)+(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((json_array(x'', vt0.c1)) BETWEEN (0.75246282669791) AND (((vt0.c1)+(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_array(x'', vt0.c1)) BETWEEN (0.75246282669791) AND (((vt0.c1)+(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((CASE vt0.c0  WHEN x'' THEN vt0.c1 WHEN t0.c38 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (TYPEOF(t0.c38)) AND ((((t0.c38, t0.c35, t0.c38)) NOT BETWEEN ((vt0.c1, vt0.c0, t0.c38)) AND ((t0.c38, NULL, vt0.c0)))))) ORDER BY (t0.c35 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN x'' THEN vt0.c1 WHEN t0.c38 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (TYPEOF(t0.c38)) AND ((((t0.c38, t0.c35, t0.c38)) NOT BETWEEN ((vt0.c1, vt0.c0, t0.c38)) AND ((t0.c38, NULL, vt0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (t0.c35 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((CASE vt0.c0  WHEN x'' THEN vt0.c1 WHEN t0.c38 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (TYPEOF(t0.c38)) AND ((((t0.c38, t0.c35, t0.c38)) NOT BETWEEN ((vt0.c1, vt0.c0, t0.c38)) AND ((t0.c38, NULL, vt0.c0)))))) ORDER BY (t0.c35 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN x'' THEN vt0.c1 WHEN t0.c38 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (TYPEOF(t0.c38)) AND ((((t0.c38, t0.c35, t0.c38)) NOT BETWEEN ((vt0.c1, vt0.c0, t0.c38)) AND ((t0.c38, NULL, vt0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (t0.c35 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((CASE vt0.c0  WHEN x'' THEN vt0.c1 WHEN t0.c38 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (TYPEOF(t0.c38)) AND ((((t0.c38, t0.c35, t0.c38)) NOT BETWEEN ((vt0.c1, vt0.c0, t0.c38)) AND ((t0.c38, NULL, vt0.c0)))))) ORDER BY (t0.c35 IN ())  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((- (t0.c35)) COLLATE BINARY) ORDER BY ((((((((((vt0.c1)AND(t0.c35)))AND(vt0.c0)))AND(t0.c38)))OR(x''))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (NULL COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c35)) COLLATE BINARY) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON vt0.c0 ORDER BY ((((((((((vt0.c1)AND(t0.c35)))AND(vt0.c0)))AND(t0.c38)))OR(x''))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (NULL COLLATE RTRIM)) DESC);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((- (t0.c35)) COLLATE BINARY) ORDER BY ((((((((((vt0.c1)AND(t0.c35)))AND(vt0.c0)))AND(t0.c38)))OR(x''))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (NULL COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c35)) COLLATE BINARY) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON vt0.c0 ORDER BY ((((((((((vt0.c1)AND(t0.c35)))AND(vt0.c0)))AND(t0.c38)))OR(x''))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (NULL COLLATE RTRIM)) DESC);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((- (t0.c35)) COLLATE BINARY) ORDER BY ((((((((((vt0.c1)AND(t0.c35)))AND(vt0.c0)))AND(t0.c38)))OR(x''))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (NULL COLLATE RTRIM)) DESC;
SELECT * FROM vt0 WHERE ((((x'')) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((vt0.c1) ISNULL))))) ORDER BY (((((((vt0.c0, '567312391', vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))AND(((((((((vt0.c1)AND('1222174678')))AND(vt0.c0)))OR(vt0.c0)))AND(x'')))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'')) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((vt0.c1) ISNULL))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0, '567312391', vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))AND(((((((((vt0.c1)AND('1222174678')))AND(vt0.c0)))OR(vt0.c0)))AND(x'')))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((x'')) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((vt0.c1) ISNULL))))) ORDER BY (((((((vt0.c0, '567312391', vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))AND(((((((((vt0.c1)AND('1222174678')))AND(vt0.c0)))OR(vt0.c0)))AND(x'')))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'')) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((vt0.c1) ISNULL))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0, '567312391', vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))AND(((((((((vt0.c1)AND('1222174678')))AND(vt0.c0)))OR(vt0.c0)))AND(x'')))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((x'')) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((vt0.c1) ISNULL))))) ORDER BY (((((((vt0.c0, '567312391', vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))AND(((((((((vt0.c1)AND('1222174678')))AND(vt0.c0)))OR(vt0.c0)))AND(x'')))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('') ORDER BY ((t0.c38) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE  NULLS LAST, t0.c35  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c38) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE  NULLS LAST, t0.c35  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('') ORDER BY ((t0.c38) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE  NULLS LAST, t0.c35  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c38) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE  NULLS LAST, t0.c35  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('') ORDER BY ((t0.c38) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE  NULLS LAST, t0.c35  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(t0.c38 COLLATE BINARY AS BLOB)) ORDER BY CASE WHEN ((vt0.c0)GLOB(0xffffffffadc66fa3)) THEN CAST(t0.c35 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c38 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN ((vt0.c0)GLOB(0xffffffffadc66fa3)) THEN CAST(t0.c35 AS INTEGER) END);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(t0.c38 COLLATE BINARY AS BLOB)) ORDER BY CASE WHEN ((vt0.c0)GLOB(0xffffffffadc66fa3)) THEN CAST(t0.c35 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c38 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN ((vt0.c0)GLOB(0xffffffffadc66fa3)) THEN CAST(t0.c35 AS INTEGER) END);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(t0.c38 COLLATE BINARY AS BLOB)) ORDER BY CASE WHEN ((vt0.c0)GLOB(0xffffffffadc66fa3)) THEN CAST(t0.c35 AS INTEGER) END;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c35) ORDER BY (CAST(t0.c38 AS NUMERIC) IN (CAST(x'' AS REAL), x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c35) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c38 AS NUMERIC) IN (CAST(x'' AS REAL), x''))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c35) ORDER BY (CAST(t0.c38 AS NUMERIC) IN (CAST(x'' AS REAL), x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c35) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c38 AS NUMERIC) IN (CAST(x'' AS REAL), x''))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c35) ORDER BY (CAST(t0.c38 AS NUMERIC) IN (CAST(x'' AS REAL), x''))  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((~ (t0.c35)));
SELECT SUM(count) FROM (SELECT (((~ (t0.c35))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (t0.c35)));
SELECT SUM(count) FROM (SELECT (((~ (t0.c35))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (t0.c35)));
SELECT * FROM t0 WHERE (NULLIF(DISTINCT t0.c38 COLLATE RTRIM, (~ (t0.c38))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT t0.c38 COLLATE RTRIM, (~ (t0.c38)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULLIF(DISTINCT t0.c38 COLLATE RTRIM, (~ (t0.c38))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT t0.c38 COLLATE RTRIM, (~ (t0.c38)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULLIF(DISTINCT t0.c38 COLLATE RTRIM, (~ (t0.c38))));
SELECT * FROM vt0, t0 WHERE (LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, 0.08547148769085566));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, 0.08547148769085566)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, 0.08547148769085566));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, 0.08547148769085566)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, 0.08547148769085566));
SELECT ALL * FROM t0 WHERE (((t0.c38) BETWEEN (t0.c35) AND (t0.c35)) COLLATE RTRIM) ORDER BY CASE WHEN x'' THEN ((t0.c38)IS(t0.c38)) ELSE ((t0.c38)==(t0.c35)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c38) BETWEEN (t0.c35) AND (t0.c35)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN x'' THEN ((t0.c38)IS(t0.c38)) ELSE ((t0.c38)=(t0.c35)) END ASC);
SELECT ALL * FROM t0 WHERE (((t0.c38) BETWEEN (t0.c35) AND (t0.c35)) COLLATE RTRIM) ORDER BY CASE WHEN x'' THEN ((t0.c38)IS(t0.c38)) ELSE ((t0.c38)==(t0.c35)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c38) BETWEEN (t0.c35) AND (t0.c35)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN x'' THEN ((t0.c38)IS(t0.c38)) ELSE ((t0.c38)=(t0.c35)) END ASC);
SELECT ALL * FROM t0 WHERE (((t0.c38) BETWEEN (t0.c35) AND (t0.c35)) COLLATE RTRIM) ORDER BY CASE WHEN x'' THEN ((t0.c38)IS(t0.c38)) ELSE ((t0.c38)==(t0.c35)) END ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1) ISNULL)) NOT BETWEEN (((t0.c38)<<(vt0.c0))) AND (((t0.c35) NOT NULL)))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (x'')) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL)) NOT BETWEEN (((t0.c38)<<(vt0.c0))) AND (((t0.c35) NOT NULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (x'')) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1) ISNULL)) NOT BETWEEN (((t0.c38)<<(vt0.c0))) AND (((t0.c35) NOT NULL)))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (x'')) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL)) NOT BETWEEN (((t0.c38)<<(vt0.c0))) AND (((t0.c35) NOT NULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (x'')) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1) ISNULL)) NOT BETWEEN (((t0.c38)<<(vt0.c0))) AND (((t0.c35) NOT NULL)))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (x'')) AS NUMERIC) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c35)AND(t0.c38)))AND(t0.c35)) AS INTEGER)) ORDER BY ((((~ (t0.c38)), ((x'')IS NOT(t0.c38)), ((t0.c35) BETWEEN (t0.c38) AND (t0.c35))))<(((- (t0.c35)), ((t0.c35) NOTNULL), NULL)));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c35)AND(t0.c38)))AND(t0.c35)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((((~ (t0.c38)), ((x'')IS NOT(t0.c38)), ((t0.c35) BETWEEN (t0.c38) AND (t0.c35))))<(((- (t0.c35)), ((t0.c35) NOTNULL), NULL))));
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c35)AND(t0.c38)))AND(t0.c35)) AS INTEGER)) ORDER BY ((((~ (t0.c38)), ((x'')IS NOT(t0.c38)), ((t0.c35) BETWEEN (t0.c38) AND (t0.c35))))<(((- (t0.c35)), ((t0.c35) NOTNULL), NULL)));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c35)AND(t0.c38)))AND(t0.c35)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((((~ (t0.c38)), ((x'')IS NOT(t0.c38)), ((t0.c35) BETWEEN (t0.c38) AND (t0.c35))))<(((- (t0.c35)), ((t0.c35) NOTNULL), NULL))));
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c35)AND(t0.c38)))AND(t0.c35)) AS INTEGER)) ORDER BY ((((~ (t0.c38)), ((x'')IS NOT(t0.c38)), ((t0.c35) BETWEEN (t0.c38) AND (t0.c35))))<(((- (t0.c35)), ((t0.c35) NOTNULL), NULL)));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c38) BETWEEN (t0.c38) AND (t0.c35)) AS NUMERIC)) ORDER BY ((CASE t0.c38  WHEN t0.c38 THEN 0.8556298551281659 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c38) BETWEEN (t0.c38) AND (t0.c35)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c38  WHEN t0.c38 THEN 0.8556298551281659 END) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c38) BETWEEN (t0.c38) AND (t0.c35)) AS NUMERIC)) ORDER BY ((CASE t0.c38  WHEN t0.c38 THEN 0.8556298551281659 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c38) BETWEEN (t0.c38) AND (t0.c35)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c38  WHEN t0.c38 THEN 0.8556298551281659 END) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c38) BETWEEN (t0.c38) AND (t0.c35)) AS NUMERIC)) ORDER BY ((CASE t0.c38  WHEN t0.c38 THEN 0.8556298551281659 END) NOTNULL)  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (((((((((CAST(vt0.c0 AS TEXT))OR(((((((((t0.c35)OR('-692460744')))OR('{Ur')))OR(vt0.c1)))OR(vt0.c1)))))AND(0.16668303430820597 COLLATE BINARY)))AND(((((t0.c35)OR(vt0.c1)))AND(t0.c35)))))OR((((t0.c38)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS TEXT))OR(((((((((t0.c35)OR('-692460744')))OR('{Ur')))OR(vt0.c1)))OR(vt0.c1)))))AND(0.16668303430820597 COLLATE BINARY)))AND(((((t0.c35)OR(vt0.c1)))AND(t0.c35)))))OR((((t0.c38)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((((CAST(vt0.c0 AS TEXT))OR(((((((((t0.c35)OR('-692460744')))OR('{Ur')))OR(vt0.c1)))OR(vt0.c1)))))AND(0.16668303430820597 COLLATE BINARY)))AND(((((t0.c35)OR(vt0.c1)))AND(t0.c35)))))OR((((t0.c38)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS TEXT))OR(((((((((t0.c35)OR('-692460744')))OR('{Ur')))OR(vt0.c1)))OR(vt0.c1)))))AND(0.16668303430820597 COLLATE BINARY)))AND(((((t0.c35)OR(vt0.c1)))AND(t0.c35)))))OR((((t0.c38)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((((CAST(vt0.c0 AS TEXT))OR(((((((((t0.c35)OR('-692460744')))OR('{Ur')))OR(vt0.c1)))OR(vt0.c1)))))AND(0.16668303430820597 COLLATE BINARY)))AND(((((t0.c35)OR(vt0.c1)))AND(t0.c35)))))OR((((t0.c38)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT ALL * FROM t0 WHERE ((((((t0.c35) BETWEEN (t0.c35) AND (t0.c38))))==((((((t0.c35)AND(t0.c35)))AND(t0.c35)))))) ORDER BY (((t0.c35, '1707757303', t0.c35)) BETWEEN ((t0.c35, t0.c38, t0.c38)) AND ((t0.c35, t0.c35, t0.c38))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c35) BETWEEN (t0.c35) AND (t0.c38))))=((((((t0.c35)AND(t0.c35)))AND(t0.c35)))))) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((t0.c35, '1707757303', t0.c35)) BETWEEN ((t0.c35, t0.c38, t0.c38)) AND ((t0.c35, t0.c35, t0.c38))) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((t0.c35) BETWEEN (t0.c35) AND (t0.c38))))==((((((t0.c35)AND(t0.c35)))AND(t0.c35)))))) ORDER BY (((t0.c35, '1707757303', t0.c35)) BETWEEN ((t0.c35, t0.c38, t0.c38)) AND ((t0.c35, t0.c35, t0.c38))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c35) BETWEEN (t0.c35) AND (t0.c38))))=((((((t0.c35)AND(t0.c35)))AND(t0.c35)))))) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((t0.c35, '1707757303', t0.c35)) BETWEEN ((t0.c35, t0.c38, t0.c38)) AND ((t0.c35, t0.c35, t0.c38))) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((t0.c35) BETWEEN (t0.c35) AND (t0.c38))))==((((((t0.c35)AND(t0.c35)))AND(t0.c35)))))) ORDER BY (((t0.c35, '1707757303', t0.c35)) BETWEEN ((t0.c35, t0.c38, t0.c38)) AND ((t0.c35, t0.c35, t0.c38))) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c35);
SELECT SUM(count) FROM (SELECT ((t0.c35) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c35);
SELECT SUM(count) FROM (SELECT ((t0.c35) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c35);
SELECT * FROM t0, vt0 WHERE (SUBSTR((t0.c38 IN (t0.c35, vt0.c0)), CASE NULL  WHEN t0.c35 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((SUBSTR((t0.c38 IN (t0.c35, vt0.c0)), CASE NULL  WHEN t0.c35 THEN vt0.c0 END)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (SUBSTR((t0.c38 IN (t0.c35, vt0.c0)), CASE NULL  WHEN t0.c35 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((SUBSTR((t0.c38 IN (t0.c35, vt0.c0)), CASE NULL  WHEN t0.c35 THEN vt0.c0 END)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (SUBSTR((t0.c38 IN (t0.c35, vt0.c0)), CASE NULL  WHEN t0.c35 THEN vt0.c0 END));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT NULL))=(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))==(NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT NULL))=(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))==(NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT NULL))=(NULL)));
SELECT ALL * FROM vt0, t0 WHERE ((('-623988626')%(CAST(t0.c38 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((('-623988626')%(CAST(t0.c38 AS TEXT)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((('-623988626')%(CAST(t0.c38 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((('-623988626')%(CAST(t0.c38 AS TEXT)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((('-623988626')%(CAST(t0.c38 AS TEXT))));
SELECT * FROM t0, vt0 WHERE (((((t0.c35)GLOB(t0.c38)))!=((t0.c35 IN ())))) ORDER BY ((vt0.c1)%((+ (t0.c35)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c35)GLOB(t0.c38)))!=((t0.c35 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c1)%((+ (t0.c35)))) ASC);
SELECT * FROM t0, vt0 WHERE (((((t0.c35)GLOB(t0.c38)))!=((t0.c35 IN ())))) ORDER BY ((vt0.c1)%((+ (t0.c35)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c35)GLOB(t0.c38)))!=((t0.c35 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c1)%((+ (t0.c35)))) ASC);
SELECT * FROM t0, vt0 WHERE (((((t0.c35)GLOB(t0.c38)))!=((t0.c35 IN ())))) ORDER BY ((vt0.c1)%((+ (t0.c35)))) ASC;
SELECT * FROM vt0, t0 WHERE ((((((vt0.c1)AND(t0.c35)))OR(t0.c38)) IN (CAST(t0.c38 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)AND(t0.c35)))OR(t0.c38)) IN (CAST(t0.c38 AS REAL)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c1)AND(t0.c35)))OR(t0.c38)) IN (CAST(t0.c38 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)AND(t0.c35)))OR(t0.c38)) IN (CAST(t0.c38 AS REAL)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c1)AND(t0.c35)))OR(t0.c38)) IN (CAST(t0.c38 AS REAL))));
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(-1016715637 AS BLOB))AND('>6')))OR(vt0.c1))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))GLOB((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c1))))), (vt0.c0 IN ()) COLLATE BINARY DESC  NULLS FIRST, (((CAST(vt0.c1 AS INTEGER), ((vt0.c0) NOTNULL), json_object(vt0.c1, vt0.c0)))>=((CAST(vt0.c0 AS TEXT), (+ (x'306b8f28')), (- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(-1016715637 AS BLOB))AND('>6')))OR(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))GLOB((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c1))))), (vt0.c0 IN ()) COLLATE BINARY DESC  NULLS FIRST, (((CAST(vt0.c1 AS INTEGER), ((vt0.c0) NOTNULL), json_object(vt0.c1, vt0.c0)))>=((CAST(vt0.c0 AS TEXT), (+ (x'306b8f28')), (- (vt0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(-1016715637 AS BLOB))AND('>6')))OR(vt0.c1))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))GLOB((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c1))))), (vt0.c0 IN ()) COLLATE BINARY DESC  NULLS FIRST, (((CAST(vt0.c1 AS INTEGER), ((vt0.c0) NOTNULL), json_object(vt0.c1, vt0.c0)))>=((CAST(vt0.c0 AS TEXT), (+ (x'306b8f28')), (- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(-1016715637 AS BLOB))AND('>6')))OR(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))GLOB((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c1))))), (vt0.c0 IN ()) COLLATE BINARY DESC  NULLS FIRST, (((CAST(vt0.c1 AS INTEGER), ((vt0.c0) NOTNULL), json_object(vt0.c1, vt0.c0)))>=((CAST(vt0.c0 AS TEXT), (+ (x'306b8f28')), (- (vt0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(-1016715637 AS BLOB))AND('>6')))OR(vt0.c1))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))GLOB((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c1))))), (vt0.c0 IN ()) COLLATE BINARY DESC  NULLS FIRST, (((CAST(vt0.c1 AS INTEGER), ((vt0.c0) NOTNULL), json_object(vt0.c1, vt0.c0)))>=((CAST(vt0.c0 AS TEXT), (+ (x'306b8f28')), (- (vt0.c1)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELIHOOD(NULLIF(DISTINCT '1890005886', t0.c38), 0.4639610477290633)) ORDER BY (0Xffffffffdf2e365d IN (((t0.c38) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(NULLIF(DISTINCT '1890005886', t0.c38), 0.4639610477290633)) IS TRUE)  as count FROM t0, vt0 ORDER BY (0Xffffffffdf2e365d IN (((t0.c38) IS TRUE))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELIHOOD(NULLIF(DISTINCT '1890005886', t0.c38), 0.4639610477290633)) ORDER BY (0Xffffffffdf2e365d IN (((t0.c38) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(NULLIF(DISTINCT '1890005886', t0.c38), 0.4639610477290633)) IS TRUE)  as count FROM t0, vt0 ORDER BY (0Xffffffffdf2e365d IN (((t0.c38) IS TRUE))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LIKELIHOOD(NULLIF(DISTINCT '1890005886', t0.c38), 0.4639610477290633)) ORDER BY (0Xffffffffdf2e365d IN (((t0.c38) IS TRUE)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c35, t0.c38 COLLATE NOCASE, ((((t0.c38)AND(t0.c35)))OR(t0.c38))))!=(((vt0.c0 IN ()), CAST(t0.c38 AS REAL), ((((t0.c35)AND(t0.c35)))AND(t0.c35)))))) ORDER BY ((((((((((t0.c38)>=(t0.c38)))OR((- (0.3364159251340182)))))OR((~ (vt0.c0)))))AND(TYPEOF(t0.c38))))AND(((((t0.c38)OR(vt0.c0)))AND(t0.c35))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c35, t0.c38 COLLATE NOCASE, ((((t0.c38)AND(t0.c35)))OR(t0.c38))))!=(((vt0.c0 IN ()), CAST(t0.c38 AS REAL), ((((t0.c35)AND(t0.c35)))AND(t0.c35)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((t0.c38)>=(t0.c38)))OR((- (0.3364159251340182)))))OR((~ (vt0.c0)))))AND(TYPEOF(t0.c38))))AND(((((t0.c38)OR(vt0.c0)))AND(t0.c35))))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c35, t0.c38 COLLATE NOCASE, ((((t0.c38)AND(t0.c35)))OR(t0.c38))))!=(((vt0.c0 IN ()), CAST(t0.c38 AS REAL), ((((t0.c35)AND(t0.c35)))AND(t0.c35)))))) ORDER BY ((((((((((t0.c38)>=(t0.c38)))OR((- (0.3364159251340182)))))OR((~ (vt0.c0)))))AND(TYPEOF(t0.c38))))AND(((((t0.c38)OR(vt0.c0)))AND(t0.c35))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c35, t0.c38 COLLATE NOCASE, ((((t0.c38)AND(t0.c35)))OR(t0.c38))))!=(((vt0.c0 IN ()), CAST(t0.c38 AS REAL), ((((t0.c35)AND(t0.c35)))AND(t0.c35)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((t0.c38)>=(t0.c38)))OR((- (0.3364159251340182)))))OR((~ (vt0.c0)))))AND(TYPEOF(t0.c38))))AND(((((t0.c38)OR(vt0.c0)))AND(t0.c35))))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c35, t0.c38 COLLATE NOCASE, ((((t0.c38)AND(t0.c35)))OR(t0.c38))))!=(((vt0.c0 IN ()), CAST(t0.c38 AS REAL), ((((t0.c35)AND(t0.c35)))AND(t0.c35)))))) ORDER BY ((((((((((t0.c38)>=(t0.c38)))OR((- (0.3364159251340182)))))OR((~ (vt0.c0)))))AND(TYPEOF(t0.c38))))AND(((((t0.c38)OR(vt0.c0)))AND(t0.c35))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (PRINTF(CAST(t0.c38 AS INTEGER), ((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c35)), ((t0.c38) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((PRINTF(CAST(t0.c38 AS INTEGER), ((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c35)), ((t0.c38) NOTNULL))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (PRINTF(CAST(t0.c38 AS INTEGER), ((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c35)), ((t0.c38) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((PRINTF(CAST(t0.c38 AS INTEGER), ((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c35)), ((t0.c38) NOTNULL))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (PRINTF(CAST(t0.c38 AS INTEGER), ((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c35)), ((t0.c38) NOTNULL)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CAST(vt0.c1 COLLATE RTRIM AS NUMERIC) WHERE (((((t0.c35)==(vt0.c1)))=(((t0.c35)<(t0.c35)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35)=(vt0.c1)))==(((t0.c35)<(t0.c35))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(vt0.c1 COLLATE RTRIM AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CAST(vt0.c1 COLLATE RTRIM AS NUMERIC) WHERE (((((t0.c35)==(vt0.c1)))=(((t0.c35)<(t0.c35)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35)=(vt0.c1)))==(((t0.c35)<(t0.c35))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(vt0.c1 COLLATE RTRIM AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CAST(vt0.c1 COLLATE RTRIM AS NUMERIC) WHERE (((((t0.c35)==(vt0.c1)))=(((t0.c35)<(t0.c35)))));
SELECT ALL * FROM t0 WHERE (((CASE t0.c35  WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c35 WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END)OR(((t0.c38) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c35  WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c35 WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END)OR(((t0.c38) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE t0.c35  WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c35 WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END)OR(((t0.c38) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c35  WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c35 WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END)OR(((t0.c38) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE t0.c35  WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c35 WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END)OR(((t0.c38) IS TRUE))));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c38))<>((t0.c35)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((t0.c38))!=((t0.c35)))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c38))<>((t0.c35)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((t0.c38))!=((t0.c35)))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c38))<>((t0.c35)))) IS TRUE));
SELECT * FROM vt0 INNER JOIN t0 ON ((((CASE vt0.c0  WHEN t0.c35 THEN vt0.c0 WHEN '-1200028924' THEN t0.c35 WHEN t0.c38 THEN vt0.c0 END)OR(((vt0.c0) NOT BETWEEN (t0.c35) AND (t0.c35)))))AND(CAST(t0.c35 AS INTEGER))) WHERE (((x'' COLLATE NOCASE) NOT BETWEEN (UNLIKELY(DISTINCT t0.c35)) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE NOCASE) NOT BETWEEN (UNLIKELY(DISTINCT t0.c35)) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((CASE vt0.c0  WHEN t0.c35 THEN vt0.c0 WHEN '-1200028924' THEN t0.c35 WHEN t0.c38 THEN vt0.c0 END)OR(((vt0.c0) NOT BETWEEN (t0.c35) AND (t0.c35)))))AND(CAST(t0.c35 AS INTEGER))));
SELECT * FROM vt0 INNER JOIN t0 ON ((((CASE vt0.c0  WHEN t0.c35 THEN vt0.c0 WHEN '-1200028924' THEN t0.c35 WHEN t0.c38 THEN vt0.c0 END)OR(((vt0.c0) NOT BETWEEN (t0.c35) AND (t0.c35)))))AND(CAST(t0.c35 AS INTEGER))) WHERE (((x'' COLLATE NOCASE) NOT BETWEEN (UNLIKELY(DISTINCT t0.c35)) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE NOCASE) NOT BETWEEN (UNLIKELY(DISTINCT t0.c35)) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((CASE vt0.c0  WHEN t0.c35 THEN vt0.c0 WHEN '-1200028924' THEN t0.c35 WHEN t0.c38 THEN vt0.c0 END)OR(((vt0.c0) NOT BETWEEN (t0.c35) AND (t0.c35)))))AND(CAST(t0.c35 AS INTEGER))));
SELECT * FROM vt0 INNER JOIN t0 ON ((((CASE vt0.c0  WHEN t0.c35 THEN vt0.c0 WHEN '-1200028924' THEN t0.c35 WHEN t0.c38 THEN vt0.c0 END)OR(((vt0.c0) NOT BETWEEN (t0.c35) AND (t0.c35)))))AND(CAST(t0.c35 AS INTEGER))) WHERE (((x'' COLLATE NOCASE) NOT BETWEEN (UNLIKELY(DISTINCT t0.c35)) AND ((NOT (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)/(vt0.c1)) IN ())) ORDER BY ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY DESC, ((((vt0.c0)*(0.07937245476331733)))|((('')<>(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)/(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY DESC, ((((vt0.c0)*(0.07937245476331733)))|((('')!=(vt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)/(vt0.c1)) IN ())) ORDER BY ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY DESC, ((((vt0.c0)*(0.07937245476331733)))|((('')<>(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)/(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY DESC, ((((vt0.c0)*(0.07937245476331733)))|((('')!=(vt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)/(vt0.c1)) IN ())) ORDER BY ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY DESC, ((((vt0.c0)*(0.07937245476331733)))|((('')<>(vt0.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON '' COLLATE NOCASE COLLATE BINARY WHERE (((((MIN(vt0.c1, vt0.c0))AND(x'')))OR((t0.c35 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((MIN(vt0.c1, vt0.c0))AND(x'')))OR((t0.c35 IN (vt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON '' COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON '' COLLATE NOCASE COLLATE BINARY WHERE (((((MIN(vt0.c1, vt0.c0))AND(x'')))OR((t0.c35 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((MIN(vt0.c1, vt0.c0))AND(x'')))OR((t0.c35 IN (vt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON '' COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON '' COLLATE NOCASE COLLATE BINARY WHERE (((((MIN(vt0.c1, vt0.c0))AND(x'')))OR((t0.c35 IN (vt0.c1)))));
SELECT ALL * FROM vt0 INDEXED BY i30, t0 WHERE ((~ (((vt0.c1)|(vt0.c1))))) ORDER BY ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c35)))))<=((((NULL)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1)|(vt0.c1))))) IS TRUE)  as count FROM vt0 INDEXED BY i30, t0 ORDER BY ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c35)))))<=((((NULL)||(vt0.c0))))));
SELECT ALL * FROM vt0 INDEXED BY i30, t0 WHERE ((~ (((vt0.c1)|(vt0.c1))))) ORDER BY ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c35)))))<=((((NULL)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1)|(vt0.c1))))) IS TRUE)  as count FROM vt0 INDEXED BY i30, t0 ORDER BY ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c35)))))<=((((NULL)||(vt0.c0))))));
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))) BETWEEN ((vt0.c1 IN ())) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))) BETWEEN ((vt0.c1 IN ())) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))) BETWEEN ((vt0.c1 IN ())) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))) BETWEEN ((vt0.c1 IN ())) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))) BETWEEN ((vt0.c1 IN ())) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) ORDER BY vt0.c0  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (CAST(((vt0.c0)>>(vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>>(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(((vt0.c0)>>(vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>>(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(((vt0.c0)>>(vt0.c1)) AS TEXT));
SELECT * FROM t0 WHERE (CASE t0.c35  WHEN t0.c35 THEN t0.c38 ELSE t0.c38 END COLLATE NOCASE) ORDER BY (- (t0.c35));
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c35  WHEN t0.c35 THEN t0.c38 ELSE t0.c38 END COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (- (t0.c35)));
SELECT * FROM t0 WHERE (CASE t0.c35  WHEN t0.c35 THEN t0.c38 ELSE t0.c38 END COLLATE NOCASE) ORDER BY (- (t0.c35));
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c35  WHEN t0.c35 THEN t0.c38 ELSE t0.c38 END COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (- (t0.c35)));
SELECT * FROM t0 WHERE (CASE t0.c35  WHEN t0.c35 THEN t0.c38 ELSE t0.c38 END COLLATE NOCASE) ORDER BY (- (t0.c35));
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c38 AS REAL))+(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c38 AS REAL))+(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c38 AS REAL))+(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c38 AS REAL))+(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c38 AS REAL))+(((vt0.c0) NOT NULL))));
SELECT ALL * FROM t0 WHERE ((((((('-2138587680')OR(t0.c35)))OR(t0.c35))) BETWEEN (t0.c35 COLLATE NOCASE) AND (TYPEOF(DISTINCT t0.c38))));
SELECT SUM(count) FROM (SELECT (((((((('-2138587680')OR(t0.c35)))OR(t0.c35))) BETWEEN (t0.c35 COLLATE NOCASE) AND (TYPEOF(DISTINCT t0.c38)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((('-2138587680')OR(t0.c35)))OR(t0.c35))) BETWEEN (t0.c35 COLLATE NOCASE) AND (TYPEOF(DISTINCT t0.c38))));
SELECT SUM(count) FROM (SELECT (((((((('-2138587680')OR(t0.c35)))OR(t0.c35))) BETWEEN (t0.c35 COLLATE NOCASE) AND (TYPEOF(DISTINCT t0.c38)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((('-2138587680')OR(t0.c35)))OR(t0.c35))) BETWEEN (t0.c35 COLLATE NOCASE) AND (TYPEOF(DISTINCT t0.c38))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (- (((t0.c38)!=(t0.c35)))) WHERE ((((- (vt0.c1)))AND(((t0.c38) NOTNULL)))) ORDER BY ((((vt0.c1)AND(vt0.c1))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))AND(((t0.c38) NOTNULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (- (((t0.c38)<>(t0.c35)))) ORDER BY ((((vt0.c1)AND(vt0.c1))) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (- (((t0.c38)!=(t0.c35)))) WHERE ((((- (vt0.c1)))AND(((t0.c38) NOTNULL)))) ORDER BY ((((vt0.c1)AND(vt0.c1))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))AND(((t0.c38) NOTNULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (- (((t0.c38)<>(t0.c35)))) ORDER BY ((((vt0.c1)AND(vt0.c1))) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (- (((t0.c38)!=(t0.c35)))) WHERE ((((- (vt0.c1)))AND(((t0.c38) NOTNULL)))) ORDER BY ((((vt0.c1)AND(vt0.c1))) NOT NULL)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CASE WHEN (NOT (t0.c38)) THEN (((x'')) NOT BETWEEN ((t0.c38)) AND ((t0.c35))) ELSE ((t0.c38) NOT BETWEEN (NULL) AND (t0.c38)) END) ORDER BY t0.c35 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (t0.c38)) THEN (((x'')) NOT BETWEEN ((t0.c38)) AND ((t0.c35))) ELSE ((t0.c38) NOT BETWEEN (NULL) AND (t0.c38)) END) IS TRUE)  as count FROM t0 ORDER BY t0.c35 ASC);
SELECT ALL * FROM t0 WHERE (CASE WHEN (NOT (t0.c38)) THEN (((x'')) NOT BETWEEN ((t0.c38)) AND ((t0.c35))) ELSE ((t0.c38) NOT BETWEEN (NULL) AND (t0.c38)) END) ORDER BY t0.c35 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (t0.c38)) THEN (((x'')) NOT BETWEEN ((t0.c38)) AND ((t0.c35))) ELSE ((t0.c38) NOT BETWEEN (NULL) AND (t0.c38)) END) IS TRUE)  as count FROM t0 ORDER BY t0.c35 ASC);
SELECT ALL * FROM t0 WHERE (CASE WHEN (NOT (t0.c38)) THEN (((x'')) NOT BETWEEN ((t0.c38)) AND ((t0.c35))) ELSE ((t0.c38) NOT BETWEEN (NULL) AND (t0.c38)) END) ORDER BY t0.c35 ASC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (t0.c35 IN ()) COLLATE BINARY WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (t0.c35 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (t0.c35 IN ()) COLLATE BINARY WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (t0.c35 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (t0.c35 IN ()) COLLATE BINARY WHERE (NULL);
SELECT ALL * FROM t0 WHERE (UNLIKELY(((t0.c38) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t0.c38) NOTNULL))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (UNLIKELY(((t0.c38) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t0.c38) NOTNULL))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (UNLIKELY(((t0.c38) NOTNULL)));
SELECT * FROM vt0, t0 WHERE ((((- (vt0.c0))) BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) AND ((- (0.13000583635361807)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) AND ((- (0.13000583635361807))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((- (vt0.c0))) BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) AND ((- (0.13000583635361807)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) AND ((- (0.13000583635361807))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((- (vt0.c0))) BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) AND ((- (0.13000583635361807)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CAST(((t0.c38) IS TRUE) AS INTEGER) WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN ((t0.c35)<>(t0.c35)) THEN ((vt0.c1)=(t0.c38)) WHEN (- (vt0.c1)) THEN ((t0.c38) NOT BETWEEN (t0.c38) AND (t0.c35)) WHEN ((t0.c38)/(t0.c38)) THEN CAST(vt0.c1 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE RTRIM  WHEN ((t0.c35)!=(t0.c35)) THEN ((vt0.c1)==(t0.c38)) WHEN (- (vt0.c1)) THEN ((t0.c38) NOT BETWEEN (t0.c38) AND (t0.c35)) WHEN ((t0.c38)/(t0.c38)) THEN CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST(((t0.c38) IS TRUE) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CAST(((t0.c38) IS TRUE) AS INTEGER) WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN ((t0.c35)<>(t0.c35)) THEN ((vt0.c1)=(t0.c38)) WHEN (- (vt0.c1)) THEN ((t0.c38) NOT BETWEEN (t0.c38) AND (t0.c35)) WHEN ((t0.c38)/(t0.c38)) THEN CAST(vt0.c1 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE RTRIM  WHEN ((t0.c35)!=(t0.c35)) THEN ((vt0.c1)==(t0.c38)) WHEN (- (vt0.c1)) THEN ((t0.c38) NOT BETWEEN (t0.c38) AND (t0.c35)) WHEN ((t0.c38)/(t0.c38)) THEN CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST(((t0.c38) IS TRUE) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CAST(((t0.c38) IS TRUE) AS INTEGER) WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN ((t0.c35)<>(t0.c35)) THEN ((vt0.c1)=(t0.c38)) WHEN (- (vt0.c1)) THEN ((t0.c38) NOT BETWEEN (t0.c38) AND (t0.c35)) WHEN ((t0.c38)/(t0.c38)) THEN CAST(vt0.c1 AS NUMERIC) END);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0)IS(t0.c38))))!=(((NOT (t0.c38))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)IS(t0.c38))))!=(((NOT (t0.c38)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0)IS(t0.c38))))!=(((NOT (t0.c38))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)IS(t0.c38))))!=(((NOT (t0.c38)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0)IS(t0.c38))))!=(((NOT (t0.c38))))));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (ABS((((t0.c38)) NOT BETWEEN ((t0.c35)) AND ((t0.c35)))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((((t0.c38)) NOT BETWEEN ((t0.c35)) AND ((t0.c35))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (ABS((((t0.c38)) NOT BETWEEN ((t0.c35)) AND ((t0.c35)))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((((t0.c38)) NOT BETWEEN ((t0.c35)) AND ((t0.c35))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (ABS((((t0.c38)) NOT BETWEEN ((t0.c35)) AND ((t0.c35)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UNLIKELY(((t0.c38)&(vt0.c1)))) ORDER BY LOWER(TYPEOF(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t0.c38)&(vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY LOWER(TYPEOF(vt0.c0)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UNLIKELY(((t0.c38)&(vt0.c1)))) ORDER BY LOWER(TYPEOF(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t0.c38)&(vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY LOWER(TYPEOF(vt0.c0)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UNLIKELY(((t0.c38)&(vt0.c1)))) ORDER BY LOWER(TYPEOF(vt0.c0));
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c38 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c38 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c38 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c38 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c38 AS REAL) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((vt0.c1)OR(t0.c35)))AND(t0.c35)))AND(CAST(vt0.c0 AS NUMERIC))))AND(CASE t0.c38  WHEN vt0.c1 THEN x'' WHEN t0.c38 THEN vt0.c0 WHEN t0.c38 THEN t0.c35 END))) ORDER BY ((vt0.c1) NOT NULL), 0.14891589444730502 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)OR(t0.c35)))AND(t0.c35)))AND(CAST(vt0.c0 AS NUMERIC))))AND(CASE t0.c38  WHEN vt0.c1 THEN x'' WHEN t0.c38 THEN vt0.c0 WHEN t0.c38 THEN t0.c35 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1) NOT NULL), 0.14891589444730502 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((vt0.c1)OR(t0.c35)))AND(t0.c35)))AND(CAST(vt0.c0 AS NUMERIC))))AND(CASE t0.c38  WHEN vt0.c1 THEN x'' WHEN t0.c38 THEN vt0.c0 WHEN t0.c38 THEN t0.c35 END))) ORDER BY ((vt0.c1) NOT NULL), 0.14891589444730502 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)OR(t0.c35)))AND(t0.c35)))AND(CAST(vt0.c0 AS NUMERIC))))AND(CASE t0.c38  WHEN vt0.c1 THEN x'' WHEN t0.c38 THEN vt0.c0 WHEN t0.c38 THEN t0.c35 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1) NOT NULL), 0.14891589444730502 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((vt0.c1)OR(t0.c35)))AND(t0.c35)))AND(CAST(vt0.c0 AS NUMERIC))))AND(CASE t0.c38  WHEN vt0.c1 THEN x'' WHEN t0.c38 THEN vt0.c0 WHEN t0.c38 THEN t0.c35 END))) ORDER BY ((vt0.c1) NOT NULL), 0.14891589444730502 ASC  NULLS LAST;
SELECT * FROM t0 WHERE (-1553945018) ORDER BY 'Muc8B%[' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1553945018) IS TRUE)  as count FROM t0 ORDER BY 'Muc8B%[' ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (-1553945018) ORDER BY 'Muc8B%[' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1553945018) IS TRUE)  as count FROM t0 ORDER BY 'Muc8B%[' ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (-1553945018) ORDER BY 'Muc8B%[' ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((((((((t0.c35)AND(t0.c35)))AND(t0.c35)))OR(((((t0.c35)AND(t0.c38)))AND(t0.c35)))))OR(((t0.c35) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c35)AND(t0.c35)))AND(t0.c35)))OR(((((t0.c35)AND(t0.c38)))AND(t0.c35)))))OR(((t0.c35) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((t0.c35)AND(t0.c35)))AND(t0.c35)))OR(((((t0.c35)AND(t0.c38)))AND(t0.c35)))))OR(((t0.c35) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c35)AND(t0.c35)))AND(t0.c35)))OR(((((t0.c35)AND(t0.c38)))AND(t0.c35)))))OR(((t0.c35) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((t0.c35)AND(t0.c35)))AND(t0.c35)))OR(((((t0.c35)AND(t0.c38)))AND(t0.c35)))))OR(((t0.c35) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0.6393881450041795 THEN vt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0.6393881450041795 THEN vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0.6393881450041795 THEN vt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0.6393881450041795 THEN vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0.6393881450041795 THEN vt0.c0 END AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1)LIKE(vt0.c0)), (vt0.c0 IN (vt0.c1, vt0.c1)), ((((((((vt0.c1)AND(0.8406752561840493)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))!=((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), ((vt0.c1) ISNULL), vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)LIKE(vt0.c0)), (vt0.c0 IN (vt0.c1, vt0.c1)), ((((((((vt0.c1)AND(0.8406752561840493)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))<>((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), ((vt0.c1) ISNULL), vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1)LIKE(vt0.c0)), (vt0.c0 IN (vt0.c1, vt0.c1)), ((((((((vt0.c1)AND(0.8406752561840493)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))!=((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), ((vt0.c1) ISNULL), vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)LIKE(vt0.c0)), (vt0.c0 IN (vt0.c1, vt0.c1)), ((((((((vt0.c1)AND(0.8406752561840493)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))<>((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), ((vt0.c1) ISNULL), vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1)LIKE(vt0.c0)), (vt0.c0 IN (vt0.c1, vt0.c1)), ((((((((vt0.c1)AND(0.8406752561840493)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))!=((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), ((vt0.c1) ISNULL), vt0.c0))));
SELECT * FROM t0, vt0 WHERE ('-1137443023') ORDER BY (((t0.c35 IN (t0.c38)))<(t0.c38 COLLATE NOCASE)), ((vt0.c0) IS FALSE) COLLATE RTRIM  NULLS LAST, (((t0.c38)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c1)LIKE(t0.c38)))));
SELECT SUM(count) FROM (SELECT ALL (('-1137443023') IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c35 IN (t0.c38)))<(t0.c38 COLLATE NOCASE)), ((vt0.c0) IS FALSE) COLLATE RTRIM  NULLS LAST, (((t0.c38)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c1)LIKE(t0.c38))))));
SELECT * FROM t0, vt0 WHERE ('-1137443023') ORDER BY (((t0.c35 IN (t0.c38)))<(t0.c38 COLLATE NOCASE)), ((vt0.c0) IS FALSE) COLLATE RTRIM  NULLS LAST, (((t0.c38)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c1)LIKE(t0.c38)))));
SELECT SUM(count) FROM (SELECT ALL (('-1137443023') IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c35 IN (t0.c38)))<(t0.c38 COLLATE NOCASE)), ((vt0.c0) IS FALSE) COLLATE RTRIM  NULLS LAST, (((t0.c38)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c1)LIKE(t0.c38))))));
SELECT * FROM t0, vt0 WHERE ('-1137443023') ORDER BY (((t0.c35 IN (t0.c38)))<(t0.c38 COLLATE NOCASE)), ((vt0.c0) IS FALSE) COLLATE RTRIM  NULLS LAST, (((t0.c38)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c1)LIKE(t0.c38)))));
SELECT * FROM t0 WHERE (((((((t0.c38) IS TRUE))AND(TYPEOF(DISTINCT '418833038'))))AND('뭗6厞')));
SELECT SUM(count) FROM (SELECT ((((((((t0.c38) IS TRUE))AND(TYPEOF(DISTINCT '418833038'))))AND('뭗6厞'))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c38) IS TRUE))AND(TYPEOF(DISTINCT '418833038'))))AND('뭗6厞')));
SELECT SUM(count) FROM (SELECT ((((((((t0.c38) IS TRUE))AND(TYPEOF(DISTINCT '418833038'))))AND('뭗6厞'))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c38) IS TRUE))AND(TYPEOF(DISTINCT '418833038'))))AND('뭗6厞')));
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(CASE WHEN vt0.c0 THEN vt0.c1 END)))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))))OR(vt0.c1 COLLATE BINARY)))OR(((vt0.c1)%(x''))))) ORDER BY ((vt0.c1 COLLATE BINARY) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(CASE WHEN vt0.c0 THEN vt0.c1 END)))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))))OR(vt0.c1 COLLATE BINARY)))OR(((vt0.c1)%(x''))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE BINARY) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(CASE WHEN vt0.c0 THEN vt0.c1 END)))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))))OR(vt0.c1 COLLATE BINARY)))OR(((vt0.c1)%(x''))))) ORDER BY ((vt0.c1 COLLATE BINARY) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(CASE WHEN vt0.c0 THEN vt0.c1 END)))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))))OR(vt0.c1 COLLATE BINARY)))OR(((vt0.c1)%(x''))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE BINARY) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(CASE WHEN vt0.c0 THEN vt0.c1 END)))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))))OR(vt0.c1 COLLATE BINARY)))OR(((vt0.c1)%(x''))))) ORDER BY ((vt0.c1 COLLATE BINARY) NOT NULL) DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (CAST(UNLIKELY(t0.c38) AS NUMERIC)) ORDER BY (CASE vt0.c1  WHEN vt0.c1 THEN t0.c38 ELSE t0.c35 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(UNLIKELY(t0.c38) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 ORDER BY (CASE vt0.c1  WHEN vt0.c1 THEN t0.c38 ELSE t0.c35 END IN ()) DESC);
SELECT ALL * FROM t0, vt0 WHERE (CAST(UNLIKELY(t0.c38) AS NUMERIC)) ORDER BY (CASE vt0.c1  WHEN vt0.c1 THEN t0.c38 ELSE t0.c35 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(UNLIKELY(t0.c38) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 ORDER BY (CASE vt0.c1  WHEN vt0.c1 THEN t0.c38 ELSE t0.c35 END IN ()) DESC);
SELECT ALL * FROM t0, vt0 WHERE (CAST(UNLIKELY(t0.c38) AS NUMERIC)) ORDER BY (CASE vt0.c1  WHEN vt0.c1 THEN t0.c38 ELSE t0.c35 END IN ()) DESC;
SELECT ALL * FROM t0, vt0 WHERE (0.015502661256742378) ORDER BY ((t0.c38 COLLATE NOCASE) BETWEEN ((- (vt0.c0))) AND (((t0.c35) BETWEEN (t0.c38) AND (t0.c38)))) ASC  NULLS FIRST, (((t0.c38 IN (vt0.c1, t0.c38))) BETWEEN ('' COLLATE BINARY) AND (((t0.c38)OR(NULL))))  NULLS FIRST, (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(t0.c35)))OR(vt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.015502661256742378) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c38 COLLATE NOCASE) BETWEEN ((- (vt0.c0))) AND (((t0.c35) BETWEEN (t0.c38) AND (t0.c38)))) ASC  NULLS FIRST, (((t0.c38 IN (vt0.c1, t0.c38))) BETWEEN ('' COLLATE BINARY) AND (((t0.c38)OR(NULL))))  NULLS FIRST, (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(t0.c35)))OR(vt0.c1)) IN ())  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (0.015502661256742378) ORDER BY ((t0.c38 COLLATE NOCASE) BETWEEN ((- (vt0.c0))) AND (((t0.c35) BETWEEN (t0.c38) AND (t0.c38)))) ASC  NULLS FIRST, (((t0.c38 IN (vt0.c1, t0.c38))) BETWEEN ('' COLLATE BINARY) AND (((t0.c38)OR(NULL))))  NULLS FIRST, (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(t0.c35)))OR(vt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.015502661256742378) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c38 COLLATE NOCASE) BETWEEN ((- (vt0.c0))) AND (((t0.c35) BETWEEN (t0.c38) AND (t0.c38)))) ASC  NULLS FIRST, (((t0.c38 IN (vt0.c1, t0.c38))) BETWEEN ('' COLLATE BINARY) AND (((t0.c38)OR(NULL))))  NULLS FIRST, (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(t0.c35)))OR(vt0.c1)) IN ())  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (0.015502661256742378) ORDER BY ((t0.c38 COLLATE NOCASE) BETWEEN ((- (vt0.c0))) AND (((t0.c35) BETWEEN (t0.c38) AND (t0.c38)))) ASC  NULLS FIRST, (((t0.c38 IN (vt0.c1, t0.c38))) BETWEEN ('' COLLATE BINARY) AND (((t0.c38)OR(NULL))))  NULLS FIRST, (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(t0.c35)))OR(vt0.c1)) IN ())  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (((((NULL)IS(vt0.c1))) ISNULL)) ORDER BY (+ (t0.c38 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)IS(vt0.c1))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (t0.c38 COLLATE BINARY)));
SELECT ALL * FROM t0, vt0 WHERE (((((NULL)IS(vt0.c1))) ISNULL)) ORDER BY (+ (t0.c38 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)IS(vt0.c1))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (t0.c38 COLLATE BINARY)));
SELECT ALL * FROM t0, vt0 WHERE (((((NULL)IS(vt0.c1))) ISNULL)) ORDER BY (+ (t0.c38 COLLATE BINARY));
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))  WHEN t0.c35 THEN x'' END) ORDER BY CASE ((t0.c38)>=(t0.c35))  WHEN (((vt0.c1))>=((vt0.c1))) THEN ((t0.c38)<=(NULL)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))  WHEN t0.c35 THEN x'' END) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE ((t0.c38)>=(t0.c35))  WHEN (((vt0.c1))>=((vt0.c1))) THEN ((t0.c38)<=(NULL)) END ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))  WHEN t0.c35 THEN x'' END) ORDER BY CASE ((t0.c38)>=(t0.c35))  WHEN (((vt0.c1))>=((vt0.c1))) THEN ((t0.c38)<=(NULL)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))  WHEN t0.c35 THEN x'' END) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE ((t0.c38)>=(t0.c35))  WHEN (((vt0.c1))>=((vt0.c1))) THEN ((t0.c38)<=(NULL)) END ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))  WHEN t0.c35 THEN x'' END) ORDER BY CASE ((t0.c38)>=(t0.c35))  WHEN (((vt0.c1))>=((vt0.c1))) THEN ((t0.c38)<=(NULL)) END ASC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c35 AS INTEGER))*(t0.c38))) ORDER BY ((((vt0.c1))<=((vt0.c1))) IN ((((t0.c38, x'', t0.c38, vt0.c1, vt0.c0)) NOT BETWEEN (('-527482054', t0.c35, t0.c35, vt0.c0, vt0.c1)) AND ((x'', vt0.c1, t0.c38, vt0.c0, t0.c38))), (- ('-767989498')))) DESC, ((t0.c35)LIKE(vt0.c0)) COLLATE NOCASE, ((((STRFTIME(t0.c35, 0.17780132650970226, vt0.c1))AND(x'c8b79e76')))AND(CAST(vt0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c35 AS INTEGER))*(t0.c38))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c1))<=((vt0.c1))) IN ((((t0.c38, x'', t0.c38, vt0.c1, vt0.c0)) NOT BETWEEN (('-527482054', t0.c35, t0.c35, vt0.c0, vt0.c1)) AND ((x'', vt0.c1, t0.c38, vt0.c0, t0.c38))), (- ('-767989498')))) DESC, ((t0.c35)LIKE(vt0.c0)) COLLATE NOCASE, ((((STRFTIME(t0.c35, 0.17780132650970226, vt0.c1))AND(x'c8b79e76')))AND(CAST(vt0.c0 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c35 AS INTEGER))*(t0.c38))) ORDER BY ((((vt0.c1))<=((vt0.c1))) IN ((((t0.c38, x'', t0.c38, vt0.c1, vt0.c0)) NOT BETWEEN (('-527482054', t0.c35, t0.c35, vt0.c0, vt0.c1)) AND ((x'', vt0.c1, t0.c38, vt0.c0, t0.c38))), (- ('-767989498')))) DESC, ((t0.c35)LIKE(vt0.c0)) COLLATE NOCASE, ((((STRFTIME(t0.c35, 0.17780132650970226, vt0.c1))AND(x'c8b79e76')))AND(CAST(vt0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c35 AS INTEGER))*(t0.c38))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c1))<=((vt0.c1))) IN ((((t0.c38, x'', t0.c38, vt0.c1, vt0.c0)) NOT BETWEEN (('-527482054', t0.c35, t0.c35, vt0.c0, vt0.c1)) AND ((x'', vt0.c1, t0.c38, vt0.c0, t0.c38))), (- ('-767989498')))) DESC, ((t0.c35)LIKE(vt0.c0)) COLLATE NOCASE, ((((STRFTIME(t0.c35, 0.17780132650970226, vt0.c1))AND(x'c8b79e76')))AND(CAST(vt0.c0 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c35 AS INTEGER))*(t0.c38))) ORDER BY ((((vt0.c1))<=((vt0.c1))) IN ((((t0.c38, x'', t0.c38, vt0.c1, vt0.c0)) NOT BETWEEN (('-527482054', t0.c35, t0.c35, vt0.c0, vt0.c1)) AND ((x'', vt0.c1, t0.c38, vt0.c0, t0.c38))), (- ('-767989498')))) DESC, ((t0.c35)LIKE(vt0.c0)) COLLATE NOCASE, ((((STRFTIME(t0.c35, 0.17780132650970226, vt0.c1))AND(x'c8b79e76')))AND(CAST(vt0.c0 AS BLOB)))  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE ((~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((~ (vt0.c0)));
SELECT * FROM vt0, t0 WHERE (CAST(vt0.c1 COLLATE NOCASE AS REAL)) ORDER BY ((x'')<>(vt0.c0)) DESC  NULLS FIRST, json_quote(CAST(t0.c35 AS INTEGER)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 ORDER BY ((x'')<>(vt0.c0)) DESC  NULLS FIRST, json_quote(CAST(t0.c35 AS INTEGER)) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (CAST(vt0.c1 COLLATE NOCASE AS REAL)) ORDER BY ((x'')<>(vt0.c0)) DESC  NULLS FIRST, json_quote(CAST(t0.c35 AS INTEGER)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 ORDER BY ((x'')<>(vt0.c0)) DESC  NULLS FIRST, json_quote(CAST(t0.c35 AS INTEGER)) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (CAST(vt0.c1 COLLATE NOCASE AS REAL)) ORDER BY ((x'')<>(vt0.c0)) DESC  NULLS FIRST, json_quote(CAST(t0.c35 AS INTEGER)) DESC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (json_array(((NULL)LIKE(t0.c38)), (NOT (t0.c38))));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((NULL)LIKE(t0.c38)), (NOT (t0.c38)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (json_array(((NULL)LIKE(t0.c38)), (NOT (t0.c38))));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((NULL)LIKE(t0.c38)), (NOT (t0.c38)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (json_array(((NULL)LIKE(t0.c38)), (NOT (t0.c38))));
SELECT COUNT(*) FROM t0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((t0.c35)>>(t0.c38))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((t0.c35)>>(t0.c38)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((t0.c35)>>(t0.c38))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((t0.c35)>>(t0.c38)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((t0.c35)>>(t0.c38))));
SELECT * FROM t0 WHERE ((((t0.c38)) NOT BETWEEN ((t0.c38)) AND ((t0.c38))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c38)) NOT BETWEEN ((t0.c38)) AND ((t0.c38))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c38)) NOT BETWEEN ((t0.c38)) AND ((t0.c38))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c38)) NOT BETWEEN ((t0.c38)) AND ((t0.c38))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c38)) NOT BETWEEN ((t0.c38)) AND ((t0.c38))) COLLATE RTRIM);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) ORDER BY ((IFNULL(DISTINCT t0.c38, vt0.c0))>(CASE 0.3394806715686045  WHEN vt0.c1 THEN t0.c35 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((IFNULL(DISTINCT t0.c38, vt0.c0))>(CASE 0.3394806715686045  WHEN vt0.c1 THEN t0.c35 ELSE vt0.c0 END)));
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) ORDER BY ((IFNULL(DISTINCT t0.c38, vt0.c0))>(CASE 0.3394806715686045  WHEN vt0.c1 THEN t0.c35 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((IFNULL(DISTINCT t0.c38, vt0.c0))>(CASE 0.3394806715686045  WHEN vt0.c1 THEN t0.c35 ELSE vt0.c0 END)));
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) ORDER BY ((IFNULL(DISTINCT t0.c38, vt0.c0))>(CASE 0.3394806715686045  WHEN vt0.c1 THEN t0.c35 ELSE vt0.c0 END));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)&(vt0.c1)) COLLATE BINARY) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1) NOTNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1) NOTNULL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)&(vt0.c1)) COLLATE BINARY) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1) NOTNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1) NOTNULL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)&(vt0.c1)) COLLATE BINARY) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1) NOTNULL) END  NULLS LAST;
SELECT * FROM vt0 WHERE ('992483079');
SELECT SUM(count) FROM (SELECT ALL (('992483079') IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE ('992483079');
SELECT SUM(count) FROM (SELECT ALL (('992483079') IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE ('992483079');
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST(t0.c38 AS INTEGER)) ORDER BY ((t0.c38)<>(t0.c35));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c38 AS INTEGER)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((t0.c38)<>(t0.c35)));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST(t0.c38 AS INTEGER)) ORDER BY ((t0.c38)<>(t0.c35));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c38 AS INTEGER)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((t0.c38)<>(t0.c35)));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST(t0.c38 AS INTEGER)) ORDER BY ((t0.c38)<>(t0.c35));
SELECT ALL * FROM t0, vt0 WHERE ((~ (((vt0.c1)&(t0.c38))))) ORDER BY ((((vt0.c1)>>(t0.c35))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND (vt0.c1)) ASC, CASE WHEN '739831705' THEN ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(t0.c38)))AND(vt0.c1)) ELSE CAST(vt0.c1 AS TEXT) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1)&(t0.c38))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c1)>>(t0.c35))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND (vt0.c1)) ASC, CASE WHEN '739831705' THEN ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(t0.c38)))AND(vt0.c1)) ELSE CAST(vt0.c1 AS TEXT) END DESC);
SELECT ALL * FROM t0, vt0 WHERE ((~ (((vt0.c1)&(t0.c38))))) ORDER BY ((((vt0.c1)>>(t0.c35))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND (vt0.c1)) ASC, CASE WHEN '739831705' THEN ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(t0.c38)))AND(vt0.c1)) ELSE CAST(vt0.c1 AS TEXT) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1)&(t0.c38))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c1)>>(t0.c35))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND (vt0.c1)) ASC, CASE WHEN '739831705' THEN ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(t0.c38)))AND(vt0.c1)) ELSE CAST(vt0.c1 AS TEXT) END DESC);
SELECT ALL * FROM t0, vt0 WHERE ((~ (((vt0.c1)&(t0.c38))))) ORDER BY ((((vt0.c1)>>(t0.c35))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND (vt0.c1)) ASC, CASE WHEN '739831705' THEN ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(t0.c38)))AND(vt0.c1)) ELSE CAST(vt0.c1 AS TEXT) END DESC;
SELECT ALL * FROM vt0 WHERE (((NULL)-((+ (vt0.c1))))) ORDER BY (+ (vt0.c0 COLLATE BINARY))  NULLS FIRST, (- (((vt0.c1) ISNULL))) DESC, (((NULL, vt0.c1, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS REAL), (('-195621301')>=(vt0.c1)), ((vt0.c0)&(vt0.c1)))) AND ((((vt0.c0)*(vt0.c0)), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c1 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT ((((NULL)-((+ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0 COLLATE BINARY))  NULLS FIRST, (- (((vt0.c1) ISNULL))) DESC, (((NULL, vt0.c1, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS REAL), (('-195621301')>=(vt0.c1)), ((vt0.c0)&(vt0.c1)))) AND ((((vt0.c0)*(vt0.c0)), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c1 AS BLOB)))) ASC);
SELECT ALL * FROM vt0 WHERE (((NULL)-((+ (vt0.c1))))) ORDER BY (+ (vt0.c0 COLLATE BINARY))  NULLS FIRST, (- (((vt0.c1) ISNULL))) DESC, (((NULL, vt0.c1, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS REAL), (('-195621301')>=(vt0.c1)), ((vt0.c0)&(vt0.c1)))) AND ((((vt0.c0)*(vt0.c0)), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c1 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT ((((NULL)-((+ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0 COLLATE BINARY))  NULLS FIRST, (- (((vt0.c1) ISNULL))) DESC, (((NULL, vt0.c1, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS REAL), (('-195621301')>=(vt0.c1)), ((vt0.c0)&(vt0.c1)))) AND ((((vt0.c0)*(vt0.c0)), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c1 AS BLOB)))) ASC);
SELECT ALL * FROM vt0 WHERE (((NULL)-((+ (vt0.c1))))) ORDER BY (+ (vt0.c0 COLLATE BINARY))  NULLS FIRST, (- (((vt0.c1) ISNULL))) DESC, (((NULL, vt0.c1, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS REAL), (('-195621301')>=(vt0.c1)), ((vt0.c0)&(vt0.c1)))) AND ((((vt0.c0)*(vt0.c0)), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c1 AS BLOB)))) ASC;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c35, t0.c35, t0.c35)) NOT BETWEEN ((vt0.c1, t0.c38, t0.c35)) AND ((t0.c38, vt0.c0, t0.c38)))))!=((((t0.c35) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c35, t0.c35, t0.c35)) NOT BETWEEN ((vt0.c1, t0.c38, t0.c35)) AND ((t0.c38, vt0.c0, t0.c38)))))!=((((t0.c35) IS FALSE))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c35, t0.c35, t0.c35)) NOT BETWEEN ((vt0.c1, t0.c38, t0.c35)) AND ((t0.c38, vt0.c0, t0.c38)))))!=((((t0.c35) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c35, t0.c35, t0.c35)) NOT BETWEEN ((vt0.c1, t0.c38, t0.c35)) AND ((t0.c38, vt0.c0, t0.c38)))))!=((((t0.c35) IS FALSE))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c35, t0.c35, t0.c35)) NOT BETWEEN ((vt0.c1, t0.c38, t0.c35)) AND ((t0.c38, vt0.c0, t0.c38)))))!=((((t0.c35) IS FALSE)))));
SELECT COUNT(*) FROM t0 WHERE ((- (CAST(t0.c38 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t0.c38 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (CAST(t0.c38 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t0.c38 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (CAST(t0.c38 AS NUMERIC))));
SELECT * FROM vt0, t0 WHERE ((NOT (t0.c38)) COLLATE BINARY) ORDER BY CAST(CASE t0.c38  WHEN t0.c38 THEN vt0.c0 ELSE vt0.c1 END AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c38)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(CASE t0.c38  WHEN t0.c38 THEN vt0.c0 ELSE vt0.c1 END AS NUMERIC)  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((NOT (t0.c38)) COLLATE BINARY) ORDER BY CAST(CASE t0.c38  WHEN t0.c38 THEN vt0.c0 ELSE vt0.c1 END AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c38)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(CASE t0.c38  WHEN t0.c38 THEN vt0.c0 ELSE vt0.c1 END AS NUMERIC)  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((NOT (t0.c38)) COLLATE BINARY) ORDER BY CAST(CASE t0.c38  WHEN t0.c38 THEN vt0.c0 ELSE vt0.c1 END AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c35) ORDER BY (((('-981061166')<<(t0.c38)))IS(((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c35))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c35) IS TRUE)  as count FROM t0 ORDER BY (((('-981061166')<<(t0.c38)))IS(((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c35))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c35) ORDER BY (((('-981061166')<<(t0.c38)))IS(((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c35))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c35) IS TRUE)  as count FROM t0 ORDER BY (((('-981061166')<<(t0.c38)))IS(((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c35))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c35) ORDER BY (((('-981061166')<<(t0.c38)))IS(((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c35))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c35)AND(t0.c35)))AND(t0.c38)))%(CASE t0.c35  WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN t0.c35 WHEN x'' THEN t0.c35 ELSE t0.c38 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c35)AND(t0.c35)))AND(t0.c38)))%(CASE t0.c35  WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN t0.c35 WHEN x'' THEN t0.c35 ELSE t0.c38 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c35)AND(t0.c35)))AND(t0.c38)))%(CASE t0.c35  WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN t0.c35 WHEN x'' THEN t0.c35 ELSE t0.c38 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c35)AND(t0.c35)))AND(t0.c38)))%(CASE t0.c35  WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN t0.c35 WHEN x'' THEN t0.c35 ELSE t0.c38 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c35)AND(t0.c35)))AND(t0.c38)))%(CASE t0.c35  WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN t0.c35 WHEN x'' THEN t0.c35 ELSE t0.c38 END)));
SELECT * FROM t0 WHERE (CAST(t0.c38 AS NUMERIC) COLLATE RTRIM) ORDER BY ((((((((0.4062069201803614)OR((t0.c35 IN (t0.c38)))))OR(t0.c35)))OR(((t0.c35)GLOB(t0.c38)))))OR(((t0.c35) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c38 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((((((((0.4062069201803614)OR((t0.c35 IN (t0.c38)))))OR(t0.c35)))OR(((t0.c35)GLOB(t0.c38)))))OR(((t0.c35) IS FALSE))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(t0.c38 AS NUMERIC) COLLATE RTRIM) ORDER BY ((((((((0.4062069201803614)OR((t0.c35 IN (t0.c38)))))OR(t0.c35)))OR(((t0.c35)GLOB(t0.c38)))))OR(((t0.c35) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c38 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((((((((0.4062069201803614)OR((t0.c35 IN (t0.c38)))))OR(t0.c35)))OR(((t0.c35)GLOB(t0.c38)))))OR(((t0.c35) IS FALSE))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(t0.c38 AS NUMERIC) COLLATE RTRIM) ORDER BY ((((((((0.4062069201803614)OR((t0.c35 IN (t0.c38)))))OR(t0.c35)))OR(((t0.c35)GLOB(t0.c38)))))OR(((t0.c35) IS FALSE))) ASC  NULLS LAST;
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((t0.c38)*(t0.c35)))) AND ((json_array(t0.c38, vt0.c1)))) WHERE (t0.c35) ORDER BY x'' COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c35) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((t0.c38)*(t0.c35)))) AND ((json_array(t0.c38, vt0.c1)))) ORDER BY x'' COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((t0.c38)*(t0.c35)))) AND ((json_array(t0.c38, vt0.c1)))) WHERE (t0.c35) ORDER BY x'' COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c35) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((t0.c38)*(t0.c35)))) AND ((json_array(t0.c38, vt0.c1)))) ORDER BY x'' COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((t0.c38)*(t0.c35)))) AND ((json_array(t0.c38, vt0.c1)))) WHERE (t0.c35) ORDER BY x'' COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (vt0.c1) ORDER BY ((CASE vt0.c0  WHEN t0.c38 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN t0.c35 END) NOT BETWEEN (((t0.c38)%(t0.c38))) AND ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE vt0.c0  WHEN t0.c38 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN t0.c35 END) NOT BETWEEN (((t0.c38)%(t0.c38))) AND ((vt0.c0 IN ()))));
SELECT * FROM vt0, t0 WHERE (vt0.c1) ORDER BY ((CASE vt0.c0  WHEN t0.c38 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN t0.c35 END) NOT BETWEEN (((t0.c38)%(t0.c38))) AND ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE vt0.c0  WHEN t0.c38 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN t0.c35 END) NOT BETWEEN (((t0.c38)%(t0.c38))) AND ((vt0.c0 IN ()))));
SELECT * FROM vt0, t0 WHERE (vt0.c1) ORDER BY ((CASE vt0.c0  WHEN t0.c38 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN t0.c35 END) NOT BETWEEN (((t0.c38)%(t0.c38))) AND ((vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c38) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY ((CAST(t0.c38 AS TEXT))<=(json_insert(t0.c35, vt0.c1, 0.0585190063162736)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c38) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c38 AS TEXT))<=(json_insert(t0.c35, vt0.c1, 0.0585190063162736)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c38) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY ((CAST(t0.c38 AS TEXT))<=(json_insert(t0.c35, vt0.c1, 0.0585190063162736)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c38) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c38 AS TEXT))<=(json_insert(t0.c35, vt0.c1, 0.0585190063162736)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((- (t0.c35)))<((- (t0.c35)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c35)))<((- (t0.c35))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((- (t0.c35)))<((- (t0.c35)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c35)))<((- (t0.c35))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((- (t0.c35)))<((- (t0.c35)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((0x662c80c6) BETWEEN (json_array_length(t0.c35)) AND ((t0.c35 IN (t0.c35))))) ORDER BY t0.c35 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0x662c80c6) BETWEEN (json_array_length(t0.c35)) AND ((t0.c35 IN (t0.c35))))) IS TRUE)  as count FROM t0 ORDER BY t0.c35 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((0x662c80c6) BETWEEN (json_array_length(t0.c35)) AND ((t0.c35 IN (t0.c35))))) ORDER BY t0.c35 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0x662c80c6) BETWEEN (json_array_length(t0.c35)) AND ((t0.c35 IN (t0.c35))))) IS TRUE)  as count FROM t0 ORDER BY t0.c35 DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c38);
SELECT SUM(count) FROM (SELECT ALL ((t0.c38) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c38);
SELECT SUM(count) FROM (SELECT ALL ((t0.c38) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c38);
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c1))<((vt0.c1))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))AND(TYPEOF(vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '0.610678043403607' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))AND(((vt0.c1)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c1))<((vt0.c1))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))AND(TYPEOF(vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '0.610678043403607' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))AND(((vt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c1))<((vt0.c1))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))AND(TYPEOF(vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '0.610678043403607' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))AND(((vt0.c1)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c1))<((vt0.c1))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))AND(TYPEOF(vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '0.610678043403607' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))AND(((vt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c1))<((vt0.c1))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))AND(TYPEOF(vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '0.610678043403607' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))AND(((vt0.c1)%(vt0.c0)))));
SELECT * FROM vt0 INDEXED BY i21 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 INDEXED BY i21);
SELECT * FROM vt0 INDEXED BY i21 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 INDEXED BY i21);
SELECT * FROM vt0 WHERE (CAST(COALESCE(vt0.c0, vt0.c1) AS TEXT)) ORDER BY CASE WHEN IFNULL(vt0.c0, vt0.c0) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE (vt0.c0 IN ()) END ASC, (((CASE WHEN '801566485' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.8013785653966489 THEN vt0.c1 WHEN 1400613734 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))<=((vt0.c1 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(vt0.c0, vt0.c1) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN IFNULL(vt0.c0, vt0.c0) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE (vt0.c0 IN ()) END ASC, (((CASE WHEN '801566485' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.8013785653966489 THEN vt0.c1 WHEN 1400613734 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))<=((vt0.c1 COLLATE RTRIM)))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(COALESCE(vt0.c0, vt0.c1) AS TEXT)) ORDER BY CASE WHEN IFNULL(vt0.c0, vt0.c0) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE (vt0.c0 IN ()) END ASC, (((CASE WHEN '801566485' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.8013785653966489 THEN vt0.c1 WHEN 1400613734 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))<=((vt0.c1 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(vt0.c0, vt0.c1) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN IFNULL(vt0.c0, vt0.c0) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE (vt0.c0 IN ()) END ASC, (((CASE WHEN '801566485' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.8013785653966489 THEN vt0.c1 WHEN 1400613734 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))<=((vt0.c1 COLLATE RTRIM)))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(COALESCE(vt0.c0, vt0.c1) AS TEXT)) ORDER BY CASE WHEN IFNULL(vt0.c0, vt0.c0) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE (vt0.c0 IN ()) END ASC, (((CASE WHEN '801566485' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.8013785653966489 THEN vt0.c1 WHEN 1400613734 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))<=((vt0.c1 COLLATE RTRIM)))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((t0.c35)>>(((t0.c38)AND(t0.c38))))) ORDER BY (((t0.c38) ISNULL) IN ()) DESC, CAST((((t0.c38))>((t0.c38))) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c35)>>(((t0.c38)AND(t0.c38))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c38) ISNULL) IN ()) DESC, CAST((((t0.c38))>((t0.c38))) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c35)>>(((t0.c38)AND(t0.c38))))) ORDER BY (((t0.c38) ISNULL) IN ()) DESC, CAST((((t0.c38))>((t0.c38))) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c35)>>(((t0.c38)AND(t0.c38))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c38) ISNULL) IN ()) DESC, CAST((((t0.c38))>((t0.c38))) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c35)>>(((t0.c38)AND(t0.c38))))) ORDER BY (((t0.c38) ISNULL) IN ()) DESC, CAST((((t0.c38))>((t0.c38))) AS NUMERIC)  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE ((((x'4949')) BETWEEN (((((t0.c35)) NOT BETWEEN (('U*Ahra^t\r')) AND ((vt0.c0))))) AND ((((vt0.c0)*(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((x'4949')) BETWEEN (((((t0.c35)) NOT BETWEEN (('U*Ahra^t\r')) AND ((vt0.c0))))) AND ((((vt0.c0)*(vt0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((x'4949')) BETWEEN (((((t0.c35)) NOT BETWEEN (('U*Ahra^t\r')) AND ((vt0.c0))))) AND ((((vt0.c0)*(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((x'4949')) BETWEEN (((((t0.c35)) NOT BETWEEN (('U*Ahra^t\r')) AND ((vt0.c0))))) AND ((((vt0.c0)*(vt0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((x'4949')) BETWEEN (((((t0.c35)) NOT BETWEEN (('U*Ahra^t\r')) AND ((vt0.c0))))) AND ((((vt0.c0)*(vt0.c1))))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((TYPEOF(DISTINCT t0.c35))OR(TRIM(t0.c35))) WHERE ((~ (((t0.c38) BETWEEN ('1400613734') AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c38) BETWEEN ('1400613734') AND (vt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((TYPEOF(DISTINCT t0.c35))OR(TRIM(t0.c35))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((TYPEOF(DISTINCT t0.c35))OR(TRIM(t0.c35))) WHERE ((~ (((t0.c38) BETWEEN ('1400613734') AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c38) BETWEEN ('1400613734') AND (vt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((TYPEOF(DISTINCT t0.c35))OR(TRIM(t0.c35))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((TYPEOF(DISTINCT t0.c35))OR(TRIM(t0.c35))) WHERE ((~ (((t0.c38) BETWEEN ('1400613734') AND (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (0.9626957932297937);
SELECT SUM(count) FROM (SELECT ALL ((0.9626957932297937) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.9626957932297937);
SELECT SUM(count) FROM (SELECT ALL ((0.9626957932297937) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.9626957932297937);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((vt0.c0)|(t0.c38))) BETWEEN ('-') AND (t0.c38 COLLATE BINARY)) WHERE ((((t0.c38))>=(((((((((('1761792598')OR(vt0.c1)))OR(vt0.c0)))OR(t0.c38)))OR(vt0.c1)))))) ORDER BY x'5493' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c38))>=(((((((((('1761792598')OR(vt0.c1)))OR(vt0.c0)))OR(t0.c38)))OR(vt0.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((vt0.c0)|(t0.c38))) BETWEEN ('-') AND (t0.c38 COLLATE BINARY)) ORDER BY x'5493' COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((vt0.c0)|(t0.c38))) BETWEEN ('-') AND (t0.c38 COLLATE BINARY)) WHERE ((((t0.c38))>=(((((((((('1761792598')OR(vt0.c1)))OR(vt0.c0)))OR(t0.c38)))OR(vt0.c1)))))) ORDER BY x'5493' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c38))>=(((((((((('1761792598')OR(vt0.c1)))OR(vt0.c0)))OR(t0.c38)))OR(vt0.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((vt0.c0)|(t0.c38))) BETWEEN ('-') AND (t0.c38 COLLATE BINARY)) ORDER BY x'5493' COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((vt0.c0)|(t0.c38))) BETWEEN ('-') AND (t0.c38 COLLATE BINARY)) WHERE ((((t0.c38))>=(((((((((('1761792598')OR(vt0.c1)))OR(vt0.c0)))OR(t0.c38)))OR(vt0.c1)))))) ORDER BY x'5493' COLLATE NOCASE DESC;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c35 IN ())) NOT BETWEEN (((t0.c38)LIKE(t0.c35))) AND ((((t0.c38)) NOT BETWEEN ((t0.c38)) AND ((t0.c35))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35 IN ())) NOT BETWEEN (((t0.c38)LIKE(t0.c35))) AND ((((t0.c38)) NOT BETWEEN ((t0.c38)) AND ((t0.c35)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c35 IN ())) NOT BETWEEN (((t0.c38)LIKE(t0.c35))) AND ((((t0.c38)) NOT BETWEEN ((t0.c38)) AND ((t0.c35))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35 IN ())) NOT BETWEEN (((t0.c38)LIKE(t0.c35))) AND ((((t0.c38)) NOT BETWEEN ((t0.c38)) AND ((t0.c35)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c35 IN ())) NOT BETWEEN (((t0.c38)LIKE(t0.c35))) AND ((((t0.c38)) NOT BETWEEN ((t0.c38)) AND ((t0.c35))))));
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c1, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.c1, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c1, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.c1, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c1, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM vt0, t0 WHERE (vt0.c1) ORDER BY ((((t0.c35)OR(x'')))>>(((((t0.c38)OR('mywţb멯*')))OR(t0.c38))));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c35)OR(x'')))>>(((((t0.c38)OR('mywţb멯*')))OR(t0.c38)))));
SELECT * FROM vt0, t0 WHERE (vt0.c1) ORDER BY ((((t0.c35)OR(x'')))>>(((((t0.c38)OR('mywţb멯*')))OR(t0.c38))));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c35)OR(x'')))>>(((((t0.c38)OR('mywţb멯*')))OR(t0.c38)))));
SELECT * FROM vt0, t0 WHERE (vt0.c1) ORDER BY ((((t0.c35)OR(x'')))>>(((((t0.c38)OR('mywţb멯*')))OR(t0.c38))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c35) BETWEEN (t0.c38) AND (0.5925127722068723)) COLLATE RTRIM) ORDER BY -354895249 DESC, (((vt0.c0, t0.c35, t0.c38)) BETWEEN ((CAST(t0.c35 AS REAL), ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)), 1.567770919E9)) AND ((')QhNSᕟx', TRIM(DISTINCT t0.c35), ((t0.c35)>(t0.c35)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35) BETWEEN (t0.c38) AND (0.5925127722068723)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY -354895249 DESC, (((vt0.c0, t0.c35, t0.c38)) BETWEEN ((CAST(t0.c35 AS REAL), ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)), 1.567770919E9)) AND ((')QhNSᕟx', TRIM(DISTINCT t0.c35), ((t0.c35)>(t0.c35))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c35) BETWEEN (t0.c38) AND (0.5925127722068723)) COLLATE RTRIM) ORDER BY -354895249 DESC, (((vt0.c0, t0.c35, t0.c38)) BETWEEN ((CAST(t0.c35 AS REAL), ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)), 1.567770919E9)) AND ((')QhNSᕟx', TRIM(DISTINCT t0.c35), ((t0.c35)>(t0.c35)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35) BETWEEN (t0.c38) AND (0.5925127722068723)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY -354895249 DESC, (((vt0.c0, t0.c35, t0.c38)) BETWEEN ((CAST(t0.c35 AS REAL), ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)), 1.567770919E9)) AND ((')QhNSᕟx', TRIM(DISTINCT t0.c35), ((t0.c35)>(t0.c35))))));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c35 AS TEXT)) NOT BETWEEN (((((t0.c35)OR(x'')))AND(t0.c38))) AND (((t0.c38) ISNULL)))) ORDER BY CASE t0.c38  WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN t0.c38 WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c35 ELSE t0.c38 END COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c35 AS TEXT)) NOT BETWEEN (((((t0.c35)OR(x'')))AND(t0.c38))) AND (((t0.c38) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c38  WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN t0.c38 WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c35 ELSE t0.c38 END COLLATE NOCASE COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c35 AS TEXT)) NOT BETWEEN (((((t0.c35)OR(x'')))AND(t0.c38))) AND (((t0.c38) ISNULL)))) ORDER BY CASE t0.c38  WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN t0.c38 WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c35 ELSE t0.c38 END COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c35 AS TEXT)) NOT BETWEEN (((((t0.c35)OR(x'')))AND(t0.c38))) AND (((t0.c38) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c38  WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN t0.c38 WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c35 ELSE t0.c38 END COLLATE NOCASE COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c35 AS TEXT)) NOT BETWEEN (((((t0.c35)OR(x'')))AND(t0.c38))) AND (((t0.c38) ISNULL)))) ORDER BY CASE t0.c38  WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN t0.c38 WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN t0.c38 WHEN t0.c38 THEN t0.c35 ELSE t0.c38 END COLLATE NOCASE COLLATE RTRIM;
SELECT * FROM t0 WHERE (((((((((json_patch(t0.c35, t0.c35))OR((((t0.c35, '', t0.c38, t0.c38, t0.c35))<=((NULL, t0.c35, t0.c38, t0.c38, t0.c38))))))AND(((-456666856)LIKE(1.267558146E9)))))AND((+ (t0.c35)))))OR((((t0.c38)) BETWEEN ((t0.c38)) AND ((t0.c35)))))) ORDER BY CAST((NOT (t0.c35)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((json_patch(t0.c35, t0.c35))OR((((t0.c35, '', t0.c38, t0.c38, t0.c35))<=((NULL, t0.c35, t0.c38, t0.c38, t0.c38))))))AND(((-456666856)LIKE(1.267558146E9)))))AND((+ (t0.c35)))))OR((((t0.c38)) BETWEEN ((t0.c38)) AND ((t0.c35)))))) IS TRUE)  as count FROM t0 ORDER BY CAST((NOT (t0.c35)) AS TEXT) DESC);
SELECT * FROM t0 WHERE (((((((((json_patch(t0.c35, t0.c35))OR((((t0.c35, '', t0.c38, t0.c38, t0.c35))<=((NULL, t0.c35, t0.c38, t0.c38, t0.c38))))))AND(((-456666856)LIKE(1.267558146E9)))))AND((+ (t0.c35)))))OR((((t0.c38)) BETWEEN ((t0.c38)) AND ((t0.c35)))))) ORDER BY CAST((NOT (t0.c35)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((json_patch(t0.c35, t0.c35))OR((((t0.c35, '', t0.c38, t0.c38, t0.c35))<=((NULL, t0.c35, t0.c38, t0.c38, t0.c38))))))AND(((-456666856)LIKE(1.267558146E9)))))AND((+ (t0.c35)))))OR((((t0.c38)) BETWEEN ((t0.c38)) AND ((t0.c35)))))) IS TRUE)  as count FROM t0 ORDER BY CAST((NOT (t0.c35)) AS TEXT) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1)OR(vt0.c0)))<<(PRINTF(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(vt0.c0)))<<(PRINTF(vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1)OR(vt0.c0)))<<(PRINTF(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(vt0.c0)))<<(PRINTF(vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1)OR(vt0.c0)))<<(PRINTF(vt0.c0))));
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 INDEXED BY i61, t0 WHERE ((+ (((((t0.c38)AND('MN')))OR(vt0.c1))))) ORDER BY ((CASE WHEN 0.006784007573916506 THEN t0.c38 WHEN t0.c38 THEN t0.c38 WHEN t0.c35 THEN vt0.c1 END)!=('U*AHRA^T\r')) DESC, (((vt0.c0, vt0.c1, t0.c38)) NOT BETWEEN ((CASE WHEN '' THEN vt0.c1 WHEN t0.c35 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-948300449' THEN vt0.c1 WHEN vt0.c1 THEN NULL END, ((vt0.c0)==(x'a780')), ((vt0.c0)|(vt0.c1)))) AND ((((((((((t0.c35)OR(vt0.c0)))AND(vt0.c1)))AND('-127049385')))AND(vt0.c1)), ((t0.c35)<=(vt0.c1)), ((t0.c38)GLOB(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((((t0.c38)AND('MN')))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 INDEXED BY i61, t0 ORDER BY ((CASE WHEN 0.006784007573916506 THEN t0.c38 WHEN t0.c38 THEN t0.c38 WHEN t0.c35 THEN vt0.c1 END)<>('U*AHRA^T\r')) DESC, (((vt0.c0, vt0.c1, t0.c38)) NOT BETWEEN ((CASE WHEN '' THEN vt0.c1 WHEN t0.c35 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-948300449' THEN vt0.c1 WHEN vt0.c1 THEN NULL END, ((vt0.c0)==(x'a780')), ((vt0.c0)|(vt0.c1)))) AND ((((((((((t0.c35)OR(vt0.c0)))AND(vt0.c1)))AND('-127049385')))AND(vt0.c1)), ((t0.c35)<=(vt0.c1)), ((t0.c38)GLOB(vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 INDEXED BY i61, t0 WHERE ((+ (((((t0.c38)AND('MN')))OR(vt0.c1))))) ORDER BY ((CASE WHEN 0.006784007573916506 THEN t0.c38 WHEN t0.c38 THEN t0.c38 WHEN t0.c35 THEN vt0.c1 END)!=('U*AHRA^T\r')) DESC, (((vt0.c0, vt0.c1, t0.c38)) NOT BETWEEN ((CASE WHEN '' THEN vt0.c1 WHEN t0.c35 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-948300449' THEN vt0.c1 WHEN vt0.c1 THEN NULL END, ((vt0.c0)==(x'a780')), ((vt0.c0)|(vt0.c1)))) AND ((((((((((t0.c35)OR(vt0.c0)))AND(vt0.c1)))AND('-127049385')))AND(vt0.c1)), ((t0.c35)<=(vt0.c1)), ((t0.c38)GLOB(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((((t0.c38)AND('MN')))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 INDEXED BY i61, t0 ORDER BY ((CASE WHEN 0.006784007573916506 THEN t0.c38 WHEN t0.c38 THEN t0.c38 WHEN t0.c35 THEN vt0.c1 END)<>('U*AHRA^T\r')) DESC, (((vt0.c0, vt0.c1, t0.c38)) NOT BETWEEN ((CASE WHEN '' THEN vt0.c1 WHEN t0.c35 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-948300449' THEN vt0.c1 WHEN vt0.c1 THEN NULL END, ((vt0.c0)==(x'a780')), ((vt0.c0)|(vt0.c1)))) AND ((((((((((t0.c35)OR(vt0.c0)))AND(vt0.c1)))AND('-127049385')))AND(vt0.c1)), ((t0.c35)<=(vt0.c1)), ((t0.c38)GLOB(vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((+ (ABS(t0.c38))));
SELECT SUM(count) FROM (SELECT (((+ (ABS(t0.c38)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (ABS(t0.c38))));
SELECT SUM(count) FROM (SELECT (((+ (ABS(t0.c38)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (ABS(t0.c38))));
SELECT COUNT(*) FROM t0 WHERE (0x73060ac3) ORDER BY (((t0.c35 IN (t0.c38)))OR((((t0.c38, t0.c35, t0.c38)) NOT BETWEEN ((t0.c38, t0.c38, t0.c38)) AND ((t0.c35, t0.c38, t0.c38)))));
SELECT SUM(count) FROM (SELECT ALL ((0X73060ac3) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((t0.c35 IN (t0.c38)))OR((((t0.c38, t0.c35, t0.c38)) NOT BETWEEN ((t0.c38, t0.c38, t0.c38)) AND ((t0.c35, t0.c38, t0.c38))))));
SELECT COUNT(*) FROM t0 WHERE (0x73060ac3) ORDER BY (((t0.c35 IN (t0.c38)))OR((((t0.c38, t0.c35, t0.c38)) NOT BETWEEN ((t0.c38, t0.c38, t0.c38)) AND ((t0.c35, t0.c38, t0.c38)))));
SELECT SUM(count) FROM (SELECT ALL ((0X73060ac3) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((t0.c35 IN (t0.c38)))OR((((t0.c38, t0.c35, t0.c38)) NOT BETWEEN ((t0.c38, t0.c38, t0.c38)) AND ((t0.c35, t0.c38, t0.c38))))));
SELECT COUNT(*) FROM t0 WHERE (0x73060ac3) ORDER BY (((t0.c35 IN (t0.c38)))OR((((t0.c38, t0.c35, t0.c38)) NOT BETWEEN ((t0.c38, t0.c38, t0.c38)) AND ((t0.c35, t0.c38, t0.c38)))));
SELECT * FROM vt0, t0 WHERE (((((t0.c35)AND(vt0.c0)))GLOB(((vt0.c0)IS(vt0.c1))))) ORDER BY CASE WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN x'097f' WHEN NULL THEN vt0.c1 END COLLATE RTRIM ASC  NULLS LAST, ((t0.c38 COLLATE NOCASE) NOTNULL) ASC, ((CAST(t0.c38 AS INTEGER)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35)AND(vt0.c0)))GLOB(((vt0.c0)IS(vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN x'097f' WHEN NULL THEN vt0.c1 END COLLATE RTRIM ASC  NULLS LAST, ((t0.c38 COLLATE NOCASE) NOTNULL) ASC, ((CAST(t0.c38 AS INTEGER)) ISNULL));
SELECT * FROM vt0, t0 WHERE (((((t0.c35)AND(vt0.c0)))GLOB(((vt0.c0)IS(vt0.c1))))) ORDER BY CASE WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN x'097f' WHEN NULL THEN vt0.c1 END COLLATE RTRIM ASC  NULLS LAST, ((t0.c38 COLLATE NOCASE) NOTNULL) ASC, ((CAST(t0.c38 AS INTEGER)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35)AND(vt0.c0)))GLOB(((vt0.c0)IS(vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN x'097f' WHEN NULL THEN vt0.c1 END COLLATE RTRIM ASC  NULLS LAST, ((t0.c38 COLLATE NOCASE) NOTNULL) ASC, ((CAST(t0.c38 AS INTEGER)) ISNULL));
SELECT * FROM vt0, t0 WHERE (((((t0.c35)AND(vt0.c0)))GLOB(((vt0.c0)IS(vt0.c1))))) ORDER BY CASE WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN x'097f' WHEN NULL THEN vt0.c1 END COLLATE RTRIM ASC  NULLS LAST, ((t0.c38 COLLATE NOCASE) NOTNULL) ASC, ((CAST(t0.c38 AS INTEGER)) ISNULL);
SELECT ALL * FROM t0 WHERE (CAST(NULLIF(DISTINCT t0.c38, t0.c38) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(NULLIF(DISTINCT t0.c38, t0.c38) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(NULLIF(DISTINCT t0.c38, t0.c38) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(NULLIF(DISTINCT t0.c38, t0.c38) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(NULLIF(DISTINCT t0.c38, t0.c38) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c1)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt0.c1)||(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c1)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt0.c1)||(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c1)||(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((t0.c38)OR(vt0.c0)))AND(0.09298429466961233))))>=(((((vt0.c1, t0.c35, vt0.c1))=((t0.c38, t0.c38, t0.c35))))))) ORDER BY (((t0.c38)) NOT BETWEEN ((((1.722823678E9) NOT BETWEEN ('1400613734') AND (vt0.c1)))) AND (((((t0.c38, vt0.c0, vt0.c1))<>((t0.c38, t0.c35, t0.c38)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c38)OR(vt0.c0)))AND(0.09298429466961233))))>=(((((vt0.c1, t0.c35, vt0.c1))=((t0.c38, t0.c38, t0.c35))))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c38)) NOT BETWEEN ((((1.722823678E9) NOT BETWEEN ('1400613734') AND (vt0.c1)))) AND (((((t0.c38, vt0.c0, vt0.c1))!=((t0.c38, t0.c35, t0.c38)))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((t0.c38)OR(vt0.c0)))AND(0.09298429466961233))))>=(((((vt0.c1, t0.c35, vt0.c1))=((t0.c38, t0.c38, t0.c35))))))) ORDER BY (((t0.c38)) NOT BETWEEN ((((1.722823678E9) NOT BETWEEN ('1400613734') AND (vt0.c1)))) AND (((((t0.c38, vt0.c0, vt0.c1))<>((t0.c38, t0.c35, t0.c38)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c38)OR(vt0.c0)))AND(0.09298429466961233))))>=(((((vt0.c1, t0.c35, vt0.c1))=((t0.c38, t0.c38, t0.c35))))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c38)) NOT BETWEEN ((((1.722823678E9) NOT BETWEEN ('1400613734') AND (vt0.c1)))) AND (((((t0.c38, vt0.c0, vt0.c1))!=((t0.c38, t0.c35, t0.c38)))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((t0.c38)OR(vt0.c0)))AND(0.09298429466961233))))>=(((((vt0.c1, t0.c35, vt0.c1))=((t0.c38, t0.c38, t0.c35))))))) ORDER BY (((t0.c38)) NOT BETWEEN ((((1.722823678E9) NOT BETWEEN ('1400613734') AND (vt0.c1)))) AND (((((t0.c38, vt0.c0, vt0.c1))<>((t0.c38, t0.c35, t0.c38)))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c35)=(t0.c38)))AND(((((((((((((t0.c38)AND(t0.c35)))AND(t0.c38)))OR(t0.c38)))AND(t0.c35)))OR(t0.c38)))AND(t0.c38)))))OR(((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c38)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c35)=(t0.c38)))AND(((((((((((((t0.c38)AND(t0.c35)))AND(t0.c38)))OR(t0.c38)))AND(t0.c35)))OR(t0.c38)))AND(t0.c38)))))OR(((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c38))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c35)=(t0.c38)))AND(((((((((((((t0.c38)AND(t0.c35)))AND(t0.c38)))OR(t0.c38)))AND(t0.c35)))OR(t0.c38)))AND(t0.c38)))))OR(((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c38)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c35)=(t0.c38)))AND(((((((((((((t0.c38)AND(t0.c35)))AND(t0.c38)))OR(t0.c38)))AND(t0.c35)))OR(t0.c38)))AND(t0.c38)))))OR(((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c38))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c35)=(t0.c38)))AND(((((((((((((t0.c38)AND(t0.c35)))AND(t0.c38)))OR(t0.c38)))AND(t0.c35)))OR(t0.c38)))AND(t0.c38)))))OR(((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c38)))));
SELECT ALL * FROM t0 WHERE (CASE ((t0.c35) ISNULL)  WHEN (((t0.c35))==((x''))) THEN ((t0.c35) NOT BETWEEN (t0.c38) AND (t0.c38)) ELSE ((t0.c35)|(t0.c38)) END) ORDER BY ((((t0.c35) IS TRUE))-(CASE WHEN '1890005886' THEN t0.c35 ELSE t0.c38 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c35) ISNULL)  WHEN (((t0.c35))=((x''))) THEN ((t0.c35) NOT BETWEEN (t0.c38) AND (t0.c38)) ELSE ((t0.c35)|(t0.c38)) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c35) IS TRUE))-(CASE WHEN '1890005886' THEN t0.c35 ELSE t0.c38 END)) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c35) ISNULL)  WHEN (((t0.c35))==((x''))) THEN ((t0.c35) NOT BETWEEN (t0.c38) AND (t0.c38)) ELSE ((t0.c35)|(t0.c38)) END) ORDER BY ((((t0.c35) IS TRUE))-(CASE WHEN '1890005886' THEN t0.c35 ELSE t0.c38 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c35) ISNULL)  WHEN (((t0.c35))=((x''))) THEN ((t0.c35) NOT BETWEEN (t0.c38) AND (t0.c38)) ELSE ((t0.c35)|(t0.c38)) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c35) IS TRUE))-(CASE WHEN '1890005886' THEN t0.c35 ELSE t0.c38 END)) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c35) ISNULL)  WHEN (((t0.c35))==((x''))) THEN ((t0.c35) NOT BETWEEN (t0.c38) AND (t0.c38)) ELSE ((t0.c35)|(t0.c38)) END) ORDER BY ((((t0.c35) IS TRUE))-(CASE WHEN '1890005886' THEN t0.c35 ELSE t0.c38 END)) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) IS TRUE), (('3홨') NOT BETWEEN ('+峴') AND (vt0.c1)), ((1722823678)OR(vt0.c0))))<=((HEX(DISTINCT vt0.c1), CAST(vt0.c0 AS REAL), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY (COALESCE(vt0.c0, vt0.c0) IN ()) ASC, CASE WHEN COALESCE(DISTINCT vt0.c1, 0.7440440848485012) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((vt0.c1)>=(vt0.c1)) THEN vt0.c1 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) IS TRUE), (('3홨') NOT BETWEEN ('+峴') AND (vt0.c1)), ((1722823678)OR(vt0.c0))))<=((HEX(DISTINCT vt0.c1), CAST(vt0.c0 AS REAL), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY (COALESCE(vt0.c0, vt0.c0) IN ()) ASC, CASE WHEN COALESCE(DISTINCT vt0.c1, 0.7440440848485012) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((vt0.c1)>=(vt0.c1)) THEN vt0.c1 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) IS TRUE), (('3홨') NOT BETWEEN ('+峴') AND (vt0.c1)), ((1722823678)OR(vt0.c0))))<=((HEX(DISTINCT vt0.c1), CAST(vt0.c0 AS REAL), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY (COALESCE(vt0.c0, vt0.c0) IN ()) ASC, CASE WHEN COALESCE(DISTINCT vt0.c1, 0.7440440848485012) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((vt0.c1)>=(vt0.c1)) THEN vt0.c1 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) IS TRUE), (('3홨') NOT BETWEEN ('+峴') AND (vt0.c1)), ((1722823678)OR(vt0.c0))))<=((HEX(DISTINCT vt0.c1), CAST(vt0.c0 AS REAL), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY (COALESCE(vt0.c0, vt0.c0) IN ()) ASC, CASE WHEN COALESCE(DISTINCT vt0.c1, 0.7440440848485012) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((vt0.c1)>=(vt0.c1)) THEN vt0.c1 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) IS TRUE), (('3홨') NOT BETWEEN ('+峴') AND (vt0.c1)), ((1722823678)OR(vt0.c0))))<=((HEX(DISTINCT vt0.c1), CAST(vt0.c0 AS REAL), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY (COALESCE(vt0.c0, vt0.c0) IN ()) ASC, CASE WHEN COALESCE(DISTINCT vt0.c1, 0.7440440848485012) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((vt0.c1)>=(vt0.c1)) THEN vt0.c1 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 END  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (CAST((~ (t0.c35)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c35)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST((~ (t0.c35)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c35)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST((~ (t0.c35)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c38 IN ()) IN ()) WHERE (((QUOTE(vt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(vt0.c1)) NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c38 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c38 IN ()) IN ()) WHERE (((QUOTE(vt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(vt0.c1)) NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c38 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c38 IN ()) IN ()) WHERE (((QUOTE(vt0.c1)) NOTNULL));
SELECT COUNT(*) FROM vt0, t0 WHERE (((TYPEOF(t0.c35))IS(UPPER(t0.c38))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(t0.c35))IS(UPPER(t0.c38)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((TYPEOF(t0.c35))IS(UPPER(t0.c38))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(t0.c35))IS(UPPER(t0.c38)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((TYPEOF(t0.c35))IS(UPPER(t0.c38))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((('') BETWEEN (t0.c35) AND (vt0.c0)))LIKE((NOT (vt0.c1)))) WHERE (((vt0.c1 COLLATE RTRIM)<>((t0.c35 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM)<>((t0.c35 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((('') BETWEEN (t0.c35) AND (vt0.c0)))LIKE((NOT (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((('') BETWEEN (t0.c35) AND (vt0.c0)))LIKE((NOT (vt0.c1)))) WHERE (((vt0.c1 COLLATE RTRIM)<>((t0.c35 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM)<>((t0.c35 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((('') BETWEEN (t0.c35) AND (vt0.c0)))LIKE((NOT (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((('') BETWEEN (t0.c35) AND (vt0.c0)))LIKE((NOT (vt0.c1)))) WHERE (((vt0.c1 COLLATE RTRIM)<>((t0.c35 IN ()))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((0.2725652592449803) NOT NULL)) ORDER BY LIKELIHOOD(t0.c38 COLLATE NOCASE, 0.9357640478634797) DESC, (vt0.c0 IN (vt0.c1)) COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((0.2725652592449803) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY LIKELIHOOD(t0.c38 COLLATE NOCASE, 0.9357640478634797) DESC, (vt0.c0 IN (vt0.c1)) COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t0 WHERE (((0.2725652592449803) NOT NULL)) ORDER BY LIKELIHOOD(t0.c38 COLLATE NOCASE, 0.9357640478634797) DESC, (vt0.c0 IN (vt0.c1)) COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((0.2725652592449803) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY LIKELIHOOD(t0.c38 COLLATE NOCASE, 0.9357640478634797) DESC, (vt0.c0 IN (vt0.c1)) COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t0 WHERE (((0.2725652592449803) NOT NULL)) ORDER BY LIKELIHOOD(t0.c38 COLLATE NOCASE, 0.9357640478634797) DESC, (vt0.c0 IN (vt0.c1)) COLLATE NOCASE COLLATE RTRIM;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CASE t0.c35 COLLATE RTRIM  WHEN (- (t0.c38)) THEN ((vt0.c1) BETWEEN (t0.c38) AND (-1219406040)) END WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1) NOT BETWEEN (0xffffffffc4b08b91) AND (vt0.c0)))) AND ((CAST(t0.c35 AS INTEGER))))) ORDER BY ((vt0.c1) NOT BETWEEN (x'') AND (t0.c38)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((vt0.c1) NOT BETWEEN (0xffffffffc4b08b91) AND (vt0.c0)))) AND ((CAST(t0.c35 AS INTEGER))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CASE t0.c35 COLLATE RTRIM  WHEN (- (t0.c38)) THEN ((vt0.c1) BETWEEN (t0.c38) AND (-1219406040)) END ORDER BY ((vt0.c1) NOT BETWEEN (x'') AND (t0.c38)) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CASE t0.c35 COLLATE RTRIM  WHEN (- (t0.c38)) THEN ((vt0.c1) BETWEEN (t0.c38) AND (-1219406040)) END WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1) NOT BETWEEN (0xffffffffc4b08b91) AND (vt0.c0)))) AND ((CAST(t0.c35 AS INTEGER))))) ORDER BY ((vt0.c1) NOT BETWEEN (x'') AND (t0.c38)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((vt0.c1) NOT BETWEEN (0xffffffffc4b08b91) AND (vt0.c0)))) AND ((CAST(t0.c35 AS INTEGER))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CASE t0.c35 COLLATE RTRIM  WHEN (- (t0.c38)) THEN ((vt0.c1) BETWEEN (t0.c38) AND (-1219406040)) END ORDER BY ((vt0.c1) NOT BETWEEN (x'') AND (t0.c38)) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CASE t0.c35 COLLATE RTRIM  WHEN (- (t0.c38)) THEN ((vt0.c1) BETWEEN (t0.c38) AND (-1219406040)) END WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1) NOT BETWEEN (0xffffffffc4b08b91) AND (vt0.c0)))) AND ((CAST(t0.c35 AS INTEGER))))) ORDER BY ((vt0.c1) NOT BETWEEN (x'') AND (t0.c38)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)>>((((vt0.c0))>=(('Wws'))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE)>>((((vt0.c0))>=(('Wws')))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)>>((((vt0.c0))>=(('Wws'))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE)>>((((vt0.c0))>=(('Wws')))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)>>((((vt0.c0))>=(('Wws'))))));
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c1 AS TEXT))OR(CAST(vt0.c0 AS TEXT))))OR(((NULL)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c1 AS TEXT))OR(CAST(vt0.c0 AS TEXT))))OR(((NULL)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c1 AS TEXT))OR(CAST(vt0.c0 AS TEXT))))OR(((NULL)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c1 AS TEXT))OR(CAST(vt0.c0 AS TEXT))))OR(((NULL)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c1 AS TEXT))OR(CAST(vt0.c0 AS TEXT))))OR(((NULL)LIKE(vt0.c0)))));
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1) BETWEEN (((vt0.c1) NOT NULL)) AND (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (((vt0.c1) NOT NULL)) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1) BETWEEN (((vt0.c1) NOT NULL)) AND (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (((vt0.c1) NOT NULL)) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1) BETWEEN (((vt0.c1) NOT NULL)) AND (((vt0.c0) ISNULL))));
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((((vt0.c0) IS TRUE))AND(((vt0.c1) ISNULL))))AND(CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))AND(((vt0.c1) ISNULL))))AND(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((((vt0.c0) IS TRUE))AND(((vt0.c1) ISNULL))))AND(CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))AND(((vt0.c1) ISNULL))))AND(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((((vt0.c0) IS TRUE))AND(((vt0.c1) ISNULL))))AND(CAST(vt0.c1 AS REAL))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN '0.0585190063162736' END)AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN '0.0585190063162736' END)AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN '0.0585190063162736' END)AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN '0.0585190063162736' END)AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN '0.0585190063162736' END)AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) ORDER BY x'' DESC;
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE (((((x'2dde7d20')OR(((t0.c35) BETWEEN (t0.c38) AND (t0.c35)))))OR((t0.c35 IN ())))) ORDER BY (((t0.c38)/(t0.c35)) IN ());
SELECT SUM(count) FROM (SELECT ((((((x'2dde7d20')OR(((t0.c35) BETWEEN (t0.c38) AND (t0.c35)))))OR((t0.c35 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c38)/(t0.c35)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (((((x'2dde7d20')OR(((t0.c35) BETWEEN (t0.c38) AND (t0.c35)))))OR((t0.c35 IN ())))) ORDER BY (((t0.c38)/(t0.c35)) IN ());
SELECT SUM(count) FROM (SELECT ((((((x'2dde7d20')OR(((t0.c35) BETWEEN (t0.c38) AND (t0.c35)))))OR((t0.c35 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c38)/(t0.c35)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (((((x'2dde7d20')OR(((t0.c35) BETWEEN (t0.c38) AND (t0.c35)))))OR((t0.c35 IN ())))) ORDER BY (((t0.c38)/(t0.c35)) IN ());
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c35)+(t0.c38))))>((CAST(t0.c38 AS INTEGER))))) ORDER BY t0.c35;
SELECT SUM(count) FROM (SELECT (((((((t0.c35)+(t0.c38))))>((CAST(t0.c38 AS INTEGER))))) IS TRUE)  as count FROM t0 ORDER BY t0.c35);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c35)+(t0.c38))))>((CAST(t0.c38 AS INTEGER))))) ORDER BY t0.c35;
SELECT SUM(count) FROM (SELECT (((((((t0.c35)+(t0.c38))))>((CAST(t0.c38 AS INTEGER))))) IS TRUE)  as count FROM t0 ORDER BY t0.c35);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c35)+(t0.c38))))>((CAST(t0.c38 AS INTEGER))))) ORDER BY t0.c35;
SELECT * FROM vt0, t0 WHERE (((((t0.c38) BETWEEN (x'847f') AND (t0.c35))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c38) BETWEEN (x'847f') AND (t0.c35))) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c38) BETWEEN (x'847f') AND (t0.c35))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c38) BETWEEN (x'847f') AND (t0.c35))) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c38) BETWEEN (x'847f') AND (t0.c35))) IS TRUE));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c35)%(vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c35)%(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c35)%(vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c35)%(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c35)%(vt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c35) IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c35) IS FALSE) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c35) IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c35) IS FALSE) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c35) IS FALSE) AS BLOB));
SELECT COUNT(*) FROM t0 WHERE ((((CAST(NULL AS BLOB), ((t0.c38)IS NOT(t0.c38)), t0.c38))>((((t0.c38)>=(NULL)), t0.c35, t0.c35 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(NULL AS BLOB), ((t0.c38)IS NOT(t0.c38)), t0.c38))>((((t0.c38)>=(NULL)), t0.c35, t0.c35 COLLATE RTRIM)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((CAST(NULL AS BLOB), ((t0.c38)IS NOT(t0.c38)), t0.c38))>((((t0.c38)>=(NULL)), t0.c35, t0.c35 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(NULL AS BLOB), ((t0.c38)IS NOT(t0.c38)), t0.c38))>((((t0.c38)>=(NULL)), t0.c35, t0.c35 COLLATE RTRIM)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((CAST(NULL AS BLOB), ((t0.c38)IS NOT(t0.c38)), t0.c38))>((((t0.c38)>=(NULL)), t0.c35, t0.c35 COLLATE RTRIM))));
SELECT ALL * FROM t0 WHERE (1343321068);
SELECT SUM(count) FROM (SELECT ALL ((1343321068) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (1343321068);
SELECT SUM(count) FROM (SELECT ALL ((1343321068) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (1343321068);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c1 COLLATE NOCASE, 0.8309768849616362));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT vt0.c1 COLLATE NOCASE, 0.8309768849616362)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c1 COLLATE NOCASE, 0.8309768849616362));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT vt0.c1 COLLATE NOCASE, 0.8309768849616362)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c1 COLLATE NOCASE, 0.8309768849616362));
SELECT ALL * FROM t0 WHERE (((((((t0.c38)AND(t0.c35)))AND(t0.c35))) NOT NULL)) ORDER BY ((t0.c38)IS(t0.c35)) COLLATE NOCASE  NULLS FIRST, (~ (t0.c38 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c38)AND(t0.c35)))AND(t0.c35))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c38)IS(t0.c35)) COLLATE NOCASE  NULLS FIRST, (~ (t0.c38 COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE (((((((t0.c38)AND(t0.c35)))AND(t0.c35))) NOT NULL)) ORDER BY ((t0.c38)IS(t0.c35)) COLLATE NOCASE  NULLS FIRST, (~ (t0.c38 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c38)AND(t0.c35)))AND(t0.c35))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c38)IS(t0.c35)) COLLATE NOCASE  NULLS FIRST, (~ (t0.c38 COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE (((((((t0.c38)AND(t0.c35)))AND(t0.c35))) NOT NULL)) ORDER BY ((t0.c38)IS(t0.c35)) COLLATE NOCASE  NULLS FIRST, (~ (t0.c38 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((t0.c35)>(t0.c35)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c35)>(t0.c35))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((t0.c35)>(t0.c35)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c35)>(t0.c35))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((t0.c35)>(t0.c35)))));
SELECT ALL * FROM t0, vt0 WHERE ((((((t0.c38))>((-767989498)))) BETWEEN (((t0.c38)==(vt0.c0))) AND ((t0.c35 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c38))>((-767989498)))) BETWEEN (((t0.c38)=(vt0.c0))) AND ((t0.c35 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((t0.c38))>((-767989498)))) BETWEEN (((t0.c38)==(vt0.c0))) AND ((t0.c35 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c38))>((-767989498)))) BETWEEN (((t0.c38)=(vt0.c0))) AND ((t0.c35 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((t0.c38))>((-767989498)))) BETWEEN (((t0.c38)==(vt0.c0))) AND ((t0.c35 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c1))) IS TRUE)) ORDER BY ((CAST(vt0.c1 AS BLOB))>=(((0xfffffffff5d04924)>>(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS BLOB))>=(((0xfffffffff5d04924)>>(vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c1))) IS TRUE)) ORDER BY ((CAST(vt0.c1 AS BLOB))>=(((0xfffffffff5d04924)>>(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS BLOB))>=(((0xfffffffff5d04924)>>(vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c1))) IS TRUE)) ORDER BY ((CAST(vt0.c1 AS BLOB))>=(((0xfffffffff5d04924)>>(vt0.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c38)) NOT BETWEEN ((vt0.c1)) AND ((0.8151044083176209))) COLLATE BINARY) ORDER BY ((((CASE WHEN t0.c38 THEN t0.c38 WHEN t0.c35 THEN t0.c35 WHEN vt0.c1 THEN vt0.c1 END)AND(((x'') ISNULL))))AND(NULL))  NULLS LAST, CASE WHEN ((vt0.c1) BETWEEN ('-2041908971') AND (vt0.c0)) THEN ((t0.c38) NOT NULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c38)) NOT BETWEEN ((vt0.c1)) AND ((0.8151044083176209))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((CASE WHEN t0.c38 THEN t0.c38 WHEN t0.c35 THEN t0.c35 WHEN vt0.c1 THEN vt0.c1 END)AND(((x'') ISNULL))))AND(NULL))  NULLS LAST, CASE WHEN ((vt0.c1) BETWEEN ('-2041908971') AND (vt0.c0)) THEN ((t0.c38) NOT NULL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c38)) NOT BETWEEN ((vt0.c1)) AND ((0.8151044083176209))) COLLATE BINARY) ORDER BY ((((CASE WHEN t0.c38 THEN t0.c38 WHEN t0.c35 THEN t0.c35 WHEN vt0.c1 THEN vt0.c1 END)AND(((x'') ISNULL))))AND(NULL))  NULLS LAST, CASE WHEN ((vt0.c1) BETWEEN ('-2041908971') AND (vt0.c0)) THEN ((t0.c38) NOT NULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c38)) NOT BETWEEN ((vt0.c1)) AND ((0.8151044083176209))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((CASE WHEN t0.c38 THEN t0.c38 WHEN t0.c35 THEN t0.c35 WHEN vt0.c1 THEN vt0.c1 END)AND(((x'') ISNULL))))AND(NULL))  NULLS LAST, CASE WHEN ((vt0.c1) BETWEEN ('-2041908971') AND (vt0.c0)) THEN ((t0.c38) NOT NULL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c38)) NOT BETWEEN ((vt0.c1)) AND ((0.8151044083176209))) COLLATE BINARY) ORDER BY ((((CASE WHEN t0.c38 THEN t0.c38 WHEN t0.c35 THEN t0.c35 WHEN vt0.c1 THEN vt0.c1 END)AND(((x'') ISNULL))))AND(NULL))  NULLS LAST, CASE WHEN ((vt0.c1) BETWEEN ('-2041908971') AND (vt0.c0)) THEN ((t0.c38) NOT NULL) END  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((~ (1729295085)));
SELECT SUM(count) FROM (SELECT ALL (((~ (1729295085))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (1729295085)));
SELECT SUM(count) FROM (SELECT ALL (((~ (1729295085))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (1729295085)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST('1788484173' AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('1788484173' AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST('1788484173' AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('1788484173' AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST('1788484173' AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0, t0 WHERE (t0.c35);
SELECT SUM(count) FROM (SELECT ((t0.c35) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c35);
SELECT SUM(count) FROM (SELECT ((t0.c35) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c35);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)||(vt0.c1)))AND(x'485f')))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (((vt0.c1)>(vt0.c1)) IN (((vt0.c0)&(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)||(vt0.c1)))AND(x'485f')))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)>(vt0.c1)) IN (((vt0.c0)&(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)||(vt0.c1)))AND(x'485f')))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (((vt0.c1)>(vt0.c1)) IN (((vt0.c0)&(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)||(vt0.c1)))AND(x'485f')))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)>(vt0.c1)) IN (((vt0.c0)&(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)||(vt0.c1)))AND(x'485f')))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (((vt0.c1)>(vt0.c1)) IN (((vt0.c0)&(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((t0.c38) BETWEEN (t0.c38) AND (''))))) ORDER BY CASE CAST(t0.c38 AS BLOB)  WHEN t0.c35 THEN COALESCE(t0.c38, t0.c35, t0.c38, t0.c38) ELSE CAST('-623988626' AS INTEGER) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c38) BETWEEN (t0.c38) AND (''))))) IS TRUE)  as count FROM t0 ORDER BY CASE CAST(t0.c38 AS BLOB)  WHEN t0.c35 THEN COALESCE(t0.c38, t0.c35, t0.c38, t0.c38) ELSE CAST('-623988626' AS INTEGER) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((t0.c38) BETWEEN (t0.c38) AND (''))))) ORDER BY CASE CAST(t0.c38 AS BLOB)  WHEN t0.c35 THEN COALESCE(t0.c38, t0.c35, t0.c38, t0.c38) ELSE CAST('-623988626' AS INTEGER) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c38) BETWEEN (t0.c38) AND (''))))) IS TRUE)  as count FROM t0 ORDER BY CASE CAST(t0.c38 AS BLOB)  WHEN t0.c35 THEN COALESCE(t0.c38, t0.c35, t0.c38, t0.c38) ELSE CAST('-623988626' AS INTEGER) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((t0.c38) BETWEEN (t0.c38) AND (''))))) ORDER BY CASE CAST(t0.c38 AS BLOB)  WHEN t0.c35 THEN COALESCE(t0.c38, t0.c35, t0.c38, t0.c38) ELSE CAST('-623988626' AS INTEGER) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST((t0.c38 IN (t0.c35, t0.c38)) AS TEXT)) ORDER BY SQLITE_COMPILEOPTION_GET(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))), (- (((((vt0.c0)AND(vt0.c1)))AND('-278011352')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c38 IN (t0.c35, t0.c38)) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY SQLITE_COMPILEOPTION_GET(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))), (- (((((vt0.c0)AND(vt0.c1)))AND('-278011352')))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST((t0.c38 IN (t0.c35, t0.c38)) AS TEXT)) ORDER BY SQLITE_COMPILEOPTION_GET(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))), (- (((((vt0.c0)AND(vt0.c1)))AND('-278011352')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c38 IN (t0.c35, t0.c38)) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY SQLITE_COMPILEOPTION_GET(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))), (- (((((vt0.c0)AND(vt0.c1)))AND('-278011352')))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST((t0.c38 IN (t0.c35, t0.c38)) AS TEXT)) ORDER BY SQLITE_COMPILEOPTION_GET(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))), (- (((((vt0.c0)AND(vt0.c1)))AND('-278011352')))) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (((((((((vt0.c0)AND(t0.c38)))AND(vt0.c0)))OR(t0.c35)))OR('405796734')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(t0.c38)))AND(vt0.c0)))OR(t0.c35)))OR('405796734')) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((((vt0.c0)AND(t0.c38)))AND(vt0.c0)))OR(t0.c35)))OR('405796734')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(t0.c38)))AND(vt0.c0)))OR(t0.c35)))OR('405796734')) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((((vt0.c0)AND(t0.c38)))AND(vt0.c0)))OR(t0.c35)))OR('405796734')) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>>(vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>>(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>>(vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>>(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>>(vt0.c1)) AS TEXT));
SELECT * FROM t0 WHERE (((NOT (t0.c35)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (t0.c35)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((NOT (t0.c35)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (t0.c35)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((NOT (t0.c35)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (CAST('1753599191' AS REAL) COLLATE NOCASE) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE, CAST(((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR('-1254375234')))AND(vt0.c1)))AND(NULL)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('1753599191' AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE, CAST(((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR('-1254375234')))AND(vt0.c1)))AND(NULL)) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST('1753599191' AS REAL) COLLATE NOCASE) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE, CAST(((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR('-1254375234')))AND(vt0.c1)))AND(NULL)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('1753599191' AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE, CAST(((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR('-1254375234')))AND(vt0.c1)))AND(NULL)) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST('1753599191' AS REAL) COLLATE NOCASE) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE, CAST(((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR('-1254375234')))AND(vt0.c1)))AND(NULL)) AS REAL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c35)AND(t0.c35)))AND(t0.c38)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c35)AND(t0.c35)))AND(t0.c38)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c35)AND(t0.c35)))AND(t0.c38)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c35)AND(t0.c35)))AND(t0.c38)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c35)AND(t0.c35)))AND(t0.c38)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c1)))AND(vt0.c0)))OR(UPPER(vt0.c1)))) ORDER BY ((('	^	Z̄nTT3', vt0.c0, x'cc4e')) BETWEEN ((vt0.c1, '-311442559', ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))) AND (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(vt0.c1)))AND(vt0.c0)))OR(UPPER(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((('	^	Z̄nTT3', vt0.c0, x'cc4e')) BETWEEN ((vt0.c1, '-311442559', ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))) AND (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c1)))AND(vt0.c0)))OR(UPPER(vt0.c1)))) ORDER BY ((('	^	Z̄nTT3', vt0.c0, x'cc4e')) BETWEEN ((vt0.c1, '-311442559', ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))) AND (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(vt0.c1)))AND(vt0.c0)))OR(UPPER(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((('	^	Z̄nTT3', vt0.c0, x'cc4e')) BETWEEN ((vt0.c1, '-311442559', ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))) AND (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c1)))AND(vt0.c0)))OR(UPPER(vt0.c1)))) ORDER BY ((('	^	Z̄nTT3', vt0.c0, x'cc4e')) BETWEEN ((vt0.c1, '-311442559', ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))) AND (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c38)/(t0.c35)))OR(((t0.c38)<(t0.c38)))))OR(0.9136675259009546))) ORDER BY (- (NULLIF(t0.c35, t0.c38)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c38)/(t0.c35)))OR(((t0.c38)<(t0.c38)))))OR(0.9136675259009546))) IS TRUE)  as count FROM t0 ORDER BY (- (NULLIF(t0.c35, t0.c38)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c38)/(t0.c35)))OR(((t0.c38)<(t0.c38)))))OR(0.9136675259009546))) ORDER BY (- (NULLIF(t0.c35, t0.c38)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c38)/(t0.c35)))OR(((t0.c38)<(t0.c38)))))OR(0.9136675259009546))) IS TRUE)  as count FROM t0 ORDER BY (- (NULLIF(t0.c35, t0.c38)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c38)/(t0.c35)))OR(((t0.c38)<(t0.c38)))))OR(0.9136675259009546))) ORDER BY (- (NULLIF(t0.c35, t0.c38)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c35)LIKE(vt0.c0)))||('' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35)LIKE(vt0.c0)))||('' COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c35)LIKE(vt0.c0)))||('' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35)LIKE(vt0.c0)))||('' COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c35)LIKE(vt0.c0)))||('' COLLATE RTRIM)));
SELECT * FROM vt0, t0 WHERE (((((vt0.c1)<>(0.5279390998972134)))LIKE(((((t0.c35)OR(t0.c38)))OR(x''))))) ORDER BY (CAST(vt0.c1 AS REAL) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)!=(0.5279390998972134)))LIKE(((((t0.c35)OR(t0.c38)))OR(x''))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (CAST(vt0.c1 AS REAL) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((((vt0.c1)<>(0.5279390998972134)))LIKE(((((t0.c35)OR(t0.c38)))OR(x''))))) ORDER BY (CAST(vt0.c1 AS REAL) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)!=(0.5279390998972134)))LIKE(((((t0.c35)OR(t0.c38)))OR(x''))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (CAST(vt0.c1 AS REAL) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((((vt0.c1)<>(0.5279390998972134)))LIKE(((((t0.c35)OR(t0.c38)))OR(x''))))) ORDER BY (CAST(vt0.c1 AS REAL) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0) NOT NULL) IN ()) DESC, ((((t0.c35)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) IN (CAST(vt0.c1 AS INTEGER))) ASC, ((((CAST(vt0.c1 AS REAL))OR(HEX(t0.c38))))AND(t0.c38)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0) NOT NULL) IN ()) DESC, ((((t0.c35)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) IN (CAST(vt0.c1 AS INTEGER))) ASC, ((((CAST(vt0.c1 AS REAL))OR(HEX(t0.c38))))AND(t0.c38)) ASC);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0) NOT NULL) IN ()) DESC, ((((t0.c35)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) IN (CAST(vt0.c1 AS INTEGER))) ASC, ((((CAST(vt0.c1 AS REAL))OR(HEX(t0.c38))))AND(t0.c38)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0) NOT NULL) IN ()) DESC, ((((t0.c35)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) IN (CAST(vt0.c1 AS INTEGER))) ASC, ((((CAST(vt0.c1 AS REAL))OR(HEX(t0.c38))))AND(t0.c38)) ASC);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0) NOT NULL) IN ()) DESC, ((((t0.c35)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) IN (CAST(vt0.c1 AS INTEGER))) ASC, ((((CAST(vt0.c1 AS REAL))OR(HEX(t0.c38))))AND(t0.c38)) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((x''))))+(vt0.c1 COLLATE BINARY))) ORDER BY 0.8543328521147903 DESC, (((vt0.c1 IN ())) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)AND(vt0.c1)))OR(0.4994454943701784)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((x''))))+(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY 0.8543328521147903 DESC, (((vt0.c1 IN ())) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)AND(vt0.c1)))OR(0.4994454943701784)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((x''))))+(vt0.c1 COLLATE BINARY))) ORDER BY 0.8543328521147903 DESC, (((vt0.c1 IN ())) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)AND(vt0.c1)))OR(0.4994454943701784)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((x''))))+(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY 0.8543328521147903 DESC, (((vt0.c1 IN ())) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)AND(vt0.c1)))OR(0.4994454943701784)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((x''))))+(vt0.c1 COLLATE BINARY))) ORDER BY 0.8543328521147903 DESC, (((vt0.c1 IN ())) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)AND(vt0.c1)))OR(0.4994454943701784)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0, t0 WHERE (0Xffffffffb7515728);
SELECT SUM(count) FROM (SELECT ((0xffffffffb7515728) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (0Xffffffffb7515728);
SELECT SUM(count) FROM (SELECT ((0xffffffffb7515728) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (0Xffffffffb7515728);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE CASE vt0.c1  WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END  WHEN (NOT (t0.c38)) THEN ((t0.c38)<=(vt0.c0)) ELSE (((t0.c38)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) ORDER BY (((vt0.c1)>>(NULL)) IN (vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c1  WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END  WHEN (NOT (t0.c38)) THEN ((t0.c38)<=(vt0.c0)) ELSE (((t0.c38)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c1)>>(NULL)) IN (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE CASE vt0.c1  WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END  WHEN (NOT (t0.c38)) THEN ((t0.c38)<=(vt0.c0)) ELSE (((t0.c38)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) ORDER BY (((vt0.c1)>>(NULL)) IN (vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c1  WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END  WHEN (NOT (t0.c38)) THEN ((t0.c38)<=(vt0.c0)) ELSE (((t0.c38)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c1)>>(NULL)) IN (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE CASE vt0.c1  WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END  WHEN (NOT (t0.c38)) THEN ((t0.c38)<=(vt0.c0)) ELSE (((t0.c38)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) ORDER BY (((vt0.c1)>>(NULL)) IN (vt0.c0 COLLATE BINARY));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, 'O3&rtN\n')) AND ((vt0.c0, vt0.c0, vt0.c0))))LIKE(x'')));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, 'O3&rtN\n')) AND ((vt0.c0, vt0.c0, vt0.c0))))LIKE(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, 'O3&rtN\n')) AND ((vt0.c0, vt0.c0, vt0.c0))))LIKE(x'')));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, 'O3&rtN\n')) AND ((vt0.c0, vt0.c0, vt0.c0))))LIKE(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, 'O3&rtN\n')) AND ((vt0.c0, vt0.c0, vt0.c0))))LIKE(x'')));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY 0.825454535621324 ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY 0.825454535621324 ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY 0.825454535621324 ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY 0.825454535621324 ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY 0.825454535621324 ASC;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL)) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((- (vt0.c1)))) WHERE (((0.006784007573916506)IS NOT((+ ('-684254566')))));
SELECT SUM(count) FROM (SELECT ((((0.006784007573916506)IS NOT((+ ('-684254566'))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL)) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((- (vt0.c1)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL)) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((- (vt0.c1)))) WHERE (((0.006784007573916506)IS NOT((+ ('-684254566')))));
SELECT SUM(count) FROM (SELECT ((((0.006784007573916506)IS NOT((+ ('-684254566'))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL)) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((- (vt0.c1)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL)) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((- (vt0.c1)))) WHERE (((0.006784007573916506)IS NOT((+ ('-684254566')))));
SELECT ALL * FROM t0, vt0 WHERE (CASE ((vt0.c1)|(t0.c35))  WHEN (((t0.c35, vt0.c1, vt0.c0))>=((vt0.c0, vt0.c0, t0.c35))) THEN ((t0.c35) BETWEEN (t0.c38) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)|(t0.c35))  WHEN (((t0.c35, vt0.c1, vt0.c0))>=((vt0.c0, vt0.c0, t0.c35))) THEN ((t0.c35) BETWEEN (t0.c38) AND (vt0.c1)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE ((vt0.c1)|(t0.c35))  WHEN (((t0.c35, vt0.c1, vt0.c0))>=((vt0.c0, vt0.c0, t0.c35))) THEN ((t0.c35) BETWEEN (t0.c38) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)|(t0.c35))  WHEN (((t0.c35, vt0.c1, vt0.c0))>=((vt0.c0, vt0.c0, t0.c35))) THEN ((t0.c35) BETWEEN (t0.c38) AND (vt0.c1)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE ((vt0.c1)|(t0.c35))  WHEN (((t0.c35, vt0.c1, vt0.c0))>=((vt0.c0, vt0.c0, t0.c35))) THEN ((t0.c35) BETWEEN (t0.c38) AND (vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.11863652450151185);
SELECT SUM(count) FROM (SELECT ALL ((0.11863652450151185) IS TRUE)  as count FROM vt0, t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.11863652450151185);
SELECT SUM(count) FROM (SELECT ALL ((0.11863652450151185) IS TRUE)  as count FROM vt0, t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.11863652450151185);
SELECT * FROM t0 WHERE (((((((t0.c38)*(t0.c35)))OR(((t0.c35)GLOB(t0.c38)))))AND(CAST(t0.c35 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c38)*(t0.c35)))OR(((t0.c35)GLOB(t0.c38)))))AND(CAST(t0.c35 AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c38)*(t0.c35)))OR(((t0.c35)GLOB(t0.c38)))))AND(CAST(t0.c35 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c38)*(t0.c35)))OR(((t0.c35)GLOB(t0.c38)))))AND(CAST(t0.c35 AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c38)*(t0.c35)))OR(((t0.c35)GLOB(t0.c38)))))AND(CAST(t0.c35 AS INTEGER))));
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (((((((((vt0.c0 IN ()))OR('0.41831025384918585')))AND(vt0.c0)))OR(((vt0.c1)>(vt0.c0)))))OR((NOT (0Xffffffffd7371a9a)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0 IN ()))OR('0.41831025384918585')))AND(vt0.c0)))OR(((vt0.c1)>(vt0.c0)))))OR((NOT (0Xffffffffd7371a9a)))) DESC);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (((((((((vt0.c0 IN ()))OR('0.41831025384918585')))AND(vt0.c0)))OR(((vt0.c1)>(vt0.c0)))))OR((NOT (0Xffffffffd7371a9a)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0 IN ()))OR('0.41831025384918585')))AND(vt0.c0)))OR(((vt0.c1)>(vt0.c0)))))OR((NOT (0Xffffffffd7371a9a)))) DESC);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (((((((((vt0.c0 IN ()))OR('0.41831025384918585')))AND(vt0.c0)))OR(((vt0.c1)>(vt0.c0)))))OR((NOT (0Xffffffffd7371a9a)))) DESC;
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0);
SELECT ALL * FROM t0 WHERE (((((t0.c35) NOT NULL))<=(0.5173770012045389)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35) NOT NULL))<=(0.5173770012045389))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c35) NOT NULL))<=(0.5173770012045389)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35) NOT NULL))<=(0.5173770012045389))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c35) NOT NULL))<=(0.5173770012045389)));
SELECT ALL * FROM t0 INDEXED BY i61 WHERE ((NOT (t0.c38)) COLLATE BINARY) ORDER BY UNLIKELY(t0.c38) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c38)) COLLATE BINARY) IS TRUE)  as count FROM t0 INDEXED BY i61 ORDER BY UNLIKELY(t0.c38) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM t0 INDEXED BY i61 WHERE ((NOT (t0.c38)) COLLATE BINARY) ORDER BY UNLIKELY(t0.c38) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c38)) COLLATE BINARY) IS TRUE)  as count FROM t0 INDEXED BY i61 ORDER BY UNLIKELY(t0.c38) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c35 THEN t0.c38 WHEN vt0.c0 THEN t0.c35 WHEN t0.c38 THEN vt0.c1 ELSE 0.595215998452247 END)|(CASE WHEN t0.c38 THEN t0.c38 WHEN NULL THEN vt0.c1 WHEN t0.c35 THEN t0.c38 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c38 END)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN t0.c35 THEN t0.c38 WHEN vt0.c0 THEN t0.c35 WHEN t0.c38 THEN vt0.c1 ELSE 0.595215998452247 END)|(CASE WHEN t0.c38 THEN t0.c38 WHEN NULL THEN vt0.c1 WHEN t0.c35 THEN t0.c38 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c38 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c35 THEN t0.c38 WHEN vt0.c0 THEN t0.c35 WHEN t0.c38 THEN vt0.c1 ELSE 0.595215998452247 END)|(CASE WHEN t0.c38 THEN t0.c38 WHEN NULL THEN vt0.c1 WHEN t0.c35 THEN t0.c38 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c38 END)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN t0.c35 THEN t0.c38 WHEN vt0.c0 THEN t0.c35 WHEN t0.c38 THEN vt0.c1 ELSE 0.595215998452247 END)|(CASE WHEN t0.c38 THEN t0.c38 WHEN NULL THEN vt0.c1 WHEN t0.c35 THEN t0.c38 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c38 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c35 THEN t0.c38 WHEN vt0.c0 THEN t0.c35 WHEN t0.c38 THEN vt0.c1 ELSE 0.595215998452247 END)|(CASE WHEN t0.c38 THEN t0.c38 WHEN NULL THEN vt0.c1 WHEN t0.c35 THEN t0.c38 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c38 END)));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c35) BETWEEN (t0.c38) AND (t0.c38)))<(CAST(t0.c38 AS BLOB)))) ORDER BY ((~ (t0.c35)) IN ())  NULLS LAST, ((((((t0.c35)AND(0Xffffffffa753db68)))AND(t0.c35)))AND(((t0.c38)<(t0.c35))));
SELECT SUM(count) FROM (SELECT ((((((t0.c35) BETWEEN (t0.c38) AND (t0.c38)))<(CAST(t0.c38 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY ((~ (t0.c35)) IN ())  NULLS LAST, ((((((t0.c35)AND(0xffffffffa753db68)))AND(t0.c35)))AND(((t0.c38)<(t0.c35)))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c35) BETWEEN (t0.c38) AND (t0.c38)))<(CAST(t0.c38 AS BLOB)))) ORDER BY ((~ (t0.c35)) IN ())  NULLS LAST, ((((((t0.c35)AND(0Xffffffffa753db68)))AND(t0.c35)))AND(((t0.c38)<(t0.c35))));
SELECT SUM(count) FROM (SELECT ((((((t0.c35) BETWEEN (t0.c38) AND (t0.c38)))<(CAST(t0.c38 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY ((~ (t0.c35)) IN ())  NULLS LAST, ((((((t0.c35)AND(0xffffffffa753db68)))AND(t0.c35)))AND(((t0.c38)<(t0.c35)))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c35) BETWEEN (t0.c38) AND (t0.c38)))<(CAST(t0.c38 AS BLOB)))) ORDER BY ((~ (t0.c35)) IN ())  NULLS LAST, ((((((t0.c35)AND(0Xffffffffa753db68)))AND(t0.c35)))AND(((t0.c38)<(t0.c35))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CAST(CASE t0.c35  WHEN t0.c35 THEN vt0.c0 WHEN t0.c35 THEN -1837814903 WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN vt0.c1 WHEN t0.c38 THEN vt0.c1 ELSE vt0.c1 END AS INTEGER) WHERE (DATETIME((((vt0.c0, vt0.c1, t0.c38))<=((t0.c35, vt0.c0, vt0.c1))), ((vt0.c1) NOT BETWEEN (382063104) AND (vt0.c0)), ((vt0.c0)<(t0.c35))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME((((vt0.c0, vt0.c1, t0.c38))<=((t0.c35, vt0.c0, vt0.c1))), ((vt0.c1) NOT BETWEEN (382063104) AND (vt0.c0)), ((vt0.c0)<(t0.c35)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CAST(CASE t0.c35  WHEN t0.c35 THEN vt0.c0 WHEN t0.c35 THEN -1837814903 WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN vt0.c1 WHEN t0.c38 THEN vt0.c1 ELSE vt0.c1 END AS INTEGER));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CAST(CASE t0.c35  WHEN t0.c35 THEN vt0.c0 WHEN t0.c35 THEN -1837814903 WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN vt0.c1 WHEN t0.c38 THEN vt0.c1 ELSE vt0.c1 END AS INTEGER) WHERE (DATETIME((((vt0.c0, vt0.c1, t0.c38))<=((t0.c35, vt0.c0, vt0.c1))), ((vt0.c1) NOT BETWEEN (382063104) AND (vt0.c0)), ((vt0.c0)<(t0.c35))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME((((vt0.c0, vt0.c1, t0.c38))<=((t0.c35, vt0.c0, vt0.c1))), ((vt0.c1) NOT BETWEEN (382063104) AND (vt0.c0)), ((vt0.c0)<(t0.c35)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CAST(CASE t0.c35  WHEN t0.c35 THEN vt0.c0 WHEN t0.c35 THEN -1837814903 WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN vt0.c1 WHEN t0.c38 THEN vt0.c1 ELSE vt0.c1 END AS INTEGER));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CAST(CASE t0.c35  WHEN t0.c35 THEN vt0.c0 WHEN t0.c35 THEN -1837814903 WHEN t0.c35 THEN t0.c38 WHEN t0.c35 THEN vt0.c1 WHEN t0.c38 THEN vt0.c1 ELSE vt0.c1 END AS INTEGER) WHERE (DATETIME((((vt0.c0, vt0.c1, t0.c38))<=((t0.c35, vt0.c0, vt0.c1))), ((vt0.c1) NOT BETWEEN (382063104) AND (vt0.c0)), ((vt0.c0)<(t0.c35))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c1, vt0.c0)) NOT BETWEEN ((+ (NULL))) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY (((vt0.c1, vt0.c1, 0.9172456664293154)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)=(-4.56666856E8)), ((vt0.c0)GLOB(vt0.c0)))) AND ((((vt0.c1) ISNULL), vt0.c0, (vt0.c0 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c1, vt0.c0)) NOT BETWEEN ((+ (NULL))) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, 0.9172456664293154)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)==(-4.56666856E8)), ((vt0.c0)GLOB(vt0.c0)))) AND ((((vt0.c1) ISNULL), vt0.c0, (vt0.c0 IN ())))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c1, vt0.c0)) NOT BETWEEN ((+ (NULL))) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY (((vt0.c1, vt0.c1, 0.9172456664293154)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)=(-4.56666856E8)), ((vt0.c0)GLOB(vt0.c0)))) AND ((((vt0.c1) ISNULL), vt0.c0, (vt0.c0 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c1, vt0.c0)) NOT BETWEEN ((+ (NULL))) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, 0.9172456664293154)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)==(-4.56666856E8)), ((vt0.c0)GLOB(vt0.c0)))) AND ((((vt0.c1) ISNULL), vt0.c0, (vt0.c0 IN ())))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c1, vt0.c0)) NOT BETWEEN ((+ (NULL))) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY (((vt0.c1, vt0.c1, 0.9172456664293154)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)=(-4.56666856E8)), ((vt0.c0)GLOB(vt0.c0)))) AND ((((vt0.c1) ISNULL), vt0.c0, (vt0.c0 IN ())))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (0.46942123647773126) ORDER BY 1.714192582E9 ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.46942123647773126) IS TRUE)  as count FROM vt0, t0 ORDER BY 1.714192582E9 ASC);
SELECT ALL * FROM vt0, t0 WHERE (0.46942123647773126) ORDER BY 1.714192582E9 ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.46942123647773126) IS TRUE)  as count FROM vt0, t0 ORDER BY 1.714192582E9 ASC);
SELECT ALL * FROM vt0, t0 WHERE (0.46942123647773126) ORDER BY 1.714192582E9 ASC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((~ (vt0.c0)) IN ((((('-752409976')AND(vt0.c0)))OR(vt0.c1))))) ORDER BY 0.7573060875387193 DESC;
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN ((((('-752409976')AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.7573060875387193 DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((~ (vt0.c0)) IN ((((('-752409976')AND(vt0.c0)))OR(vt0.c1))))) ORDER BY 0.7573060875387193 DESC;
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN ((((('-752409976')AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.7573060875387193 DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((~ (vt0.c0)) IN ((((('-752409976')AND(vt0.c0)))OR(vt0.c1))))) ORDER BY 0.7573060875387193 DESC;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CASE x'6a58'  WHEN (t0.c38 IN ()) THEN ((((vt0.c1)AND(t0.c38)))AND('1761792598')) ELSE (((t0.c38))<=((vt0.c0))) END WHERE ((CAST(vt0.c1 AS NUMERIC) IN ())) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE x'6a58'  WHEN (t0.c38 IN ()) THEN ((((vt0.c1)AND(t0.c38)))AND('1761792598')) ELSE (((t0.c38))<=((vt0.c0))) END ORDER BY NULL ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CASE x'6a58'  WHEN (t0.c38 IN ()) THEN ((((vt0.c1)AND(t0.c38)))AND('1761792598')) ELSE (((t0.c38))<=((vt0.c0))) END WHERE ((CAST(vt0.c1 AS NUMERIC) IN ())) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE x'6a58'  WHEN (t0.c38 IN ()) THEN ((((vt0.c1)AND(t0.c38)))AND('1761792598')) ELSE (((t0.c38))<=((vt0.c0))) END ORDER BY NULL ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CASE x'6a58'  WHEN (t0.c38 IN ()) THEN ((((vt0.c1)AND(t0.c38)))AND('1761792598')) ELSE (((t0.c38))<=((vt0.c0))) END WHERE ((CAST(vt0.c1 AS NUMERIC) IN ())) ORDER BY NULL ASC;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((DATETIME(t0.c35, vt0.c1, vt0.c0, vt0.c1, vt0.c0))IS(((vt0.c1)*(0.13905151598265664)))) WHERE (vt0.c0) ORDER BY (((((vt0.c0)AND(t0.c35)))AND(t0.c35)) IN ())  NULLS LAST, CAST(t0.c38 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((DATETIME(t0.c35, vt0.c1, vt0.c0, vt0.c1, vt0.c0))IS(((vt0.c1)*(0.13905151598265664)))) ORDER BY (((((vt0.c0)AND(t0.c35)))AND(t0.c35)) IN ())  NULLS LAST, CAST(t0.c38 COLLATE RTRIM AS BLOB)  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((DATETIME(t0.c35, vt0.c1, vt0.c0, vt0.c1, vt0.c0))IS(((vt0.c1)*(0.13905151598265664)))) WHERE (vt0.c0) ORDER BY (((((vt0.c0)AND(t0.c35)))AND(t0.c35)) IN ())  NULLS LAST, CAST(t0.c38 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((DATETIME(t0.c35, vt0.c1, vt0.c0, vt0.c1, vt0.c0))IS(((vt0.c1)*(0.13905151598265664)))) ORDER BY (((((vt0.c0)AND(t0.c35)))AND(t0.c35)) IN ())  NULLS LAST, CAST(t0.c38 COLLATE RTRIM AS BLOB)  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((DATETIME(t0.c35, vt0.c1, vt0.c0, vt0.c1, vt0.c0))IS(((vt0.c1)*(0.13905151598265664)))) WHERE (vt0.c0) ORDER BY (((((vt0.c0)AND(t0.c35)))AND(t0.c35)) IN ())  NULLS LAST, CAST(t0.c38 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))AND((- (vt0.c0)))))AND(((vt0.c0) IS TRUE)))) ORDER BY 0xffffffffb85c2284, (- (vt0.c1)) COLLATE RTRIM COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))AND((- (vt0.c0)))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY 0Xffffffffb85c2284, (- (vt0.c1)) COLLATE RTRIM COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))AND((- (vt0.c0)))))AND(((vt0.c0) IS TRUE)))) ORDER BY 0xffffffffb85c2284, (- (vt0.c1)) COLLATE RTRIM COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))AND((- (vt0.c0)))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY 0Xffffffffb85c2284, (- (vt0.c1)) COLLATE RTRIM COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))AND((- (vt0.c0)))))AND(((vt0.c0) IS TRUE)))) ORDER BY 0xffffffffb85c2284, (- (vt0.c1)) COLLATE RTRIM COLLATE NOCASE ASC;
SELECT * FROM t0 WHERE (((CAST(t0.c38 AS REAL)) NOT NULL)) ORDER BY t0.c38  NULLS FIRST, ((((t0.c35)AND(t0.c38)))AND(x'')) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c38 AS REAL)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c38  NULLS FIRST, ((((t0.c35)AND(t0.c38)))AND(x'')) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM t0 WHERE (((CAST(t0.c38 AS REAL)) NOT NULL)) ORDER BY t0.c38  NULLS FIRST, ((((t0.c35)AND(t0.c38)))AND(x'')) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c38 AS REAL)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c38  NULLS FIRST, ((((t0.c35)AND(t0.c38)))AND(x'')) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM t0 WHERE (((CAST(t0.c38 AS REAL)) NOT NULL)) ORDER BY t0.c38  NULLS FIRST, ((((t0.c35)AND(t0.c38)))AND(x'')) COLLATE BINARY COLLATE NOCASE;
SELECT * FROM t0 WHERE (((t0.c35)>>((- (t0.c35)))));
SELECT SUM(count) FROM (SELECT ((((t0.c35)>>((- (t0.c35))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c35)>>((- (t0.c35)))));
SELECT SUM(count) FROM (SELECT ((((t0.c35)>>((- (t0.c35))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c35)>>((- (t0.c35)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), NULLIF(DISTINCT vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), NULLIF(DISTINCT vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), NULLIF(DISTINCT vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), NULLIF(DISTINCT vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), NULLIF(DISTINCT vt0.c0, vt0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((- (t0.c35))) NOT BETWEEN (((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c38))) AND (t0.c35 COLLATE BINARY))) ORDER BY ((t0.c35) NOT BETWEEN (0.8991193156058581) AND (t0.c35)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((- (t0.c35))) NOT BETWEEN (((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c38))) AND (t0.c35 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c35) NOT BETWEEN (0.8991193156058581) AND (t0.c35)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE ((((- (t0.c35))) NOT BETWEEN (((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c38))) AND (t0.c35 COLLATE BINARY))) ORDER BY ((t0.c35) NOT BETWEEN (0.8991193156058581) AND (t0.c35)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((- (t0.c35))) NOT BETWEEN (((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c38))) AND (t0.c35 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c35) NOT BETWEEN (0.8991193156058581) AND (t0.c35)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE ((((- (t0.c35))) NOT BETWEEN (((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c38))) AND (t0.c35 COLLATE BINARY))) ORDER BY ((t0.c35) NOT BETWEEN (0.8991193156058581) AND (t0.c35)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((~ (vt0.c0))) NOTNULL)) ORDER BY CAST((NOT (t0.c38)) AS BLOB) DESC  NULLS FIRST, CAST(vt0.c1 AS INTEGER) COLLATE RTRIM DESC, 1.707757303E9;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((NOT (t0.c38)) AS BLOB) DESC  NULLS FIRST, CAST(vt0.c1 AS INTEGER) COLLATE RTRIM DESC, 1.707757303E9);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((~ (vt0.c0))) NOTNULL)) ORDER BY CAST((NOT (t0.c38)) AS BLOB) DESC  NULLS FIRST, CAST(vt0.c1 AS INTEGER) COLLATE RTRIM DESC, 1.707757303E9;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((NOT (t0.c38)) AS BLOB) DESC  NULLS FIRST, CAST(vt0.c1 AS INTEGER) COLLATE RTRIM DESC, 1.707757303E9);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((~ (vt0.c0))) NOTNULL)) ORDER BY CAST((NOT (t0.c38)) AS BLOB) DESC  NULLS FIRST, CAST(vt0.c1 AS INTEGER) COLLATE RTRIM DESC, 1.707757303E9;
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CASE ((((((((t0.c35)AND(vt0.c0)))AND(t0.c38)))AND(t0.c38)))AND(NULL))  WHEN CASE t0.c38  WHEN vt0.c1 THEN t0.c35 ELSE vt0.c1 END THEN NULL END WHERE (CAST((t0.c35 IN ()) AS INTEGER)) ORDER BY ((GLOB(vt0.c1, t0.c38))IS(vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, HEX(DISTINCT (t0.c35 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c35 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE ((((((((t0.c35)AND(vt0.c0)))AND(t0.c38)))AND(t0.c38)))AND(NULL))  WHEN CASE t0.c38  WHEN vt0.c1 THEN t0.c35 ELSE vt0.c1 END THEN NULL END ORDER BY ((GLOB(vt0.c1, t0.c38))IS(vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, HEX(DISTINCT (t0.c35 IN ())) ASC);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CASE ((((((((t0.c35)AND(vt0.c0)))AND(t0.c38)))AND(t0.c38)))AND(NULL))  WHEN CASE t0.c38  WHEN vt0.c1 THEN t0.c35 ELSE vt0.c1 END THEN NULL END WHERE (CAST((t0.c35 IN ()) AS INTEGER)) ORDER BY ((GLOB(vt0.c1, t0.c38))IS(vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, HEX(DISTINCT (t0.c35 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c35 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE ((((((((t0.c35)AND(vt0.c0)))AND(t0.c38)))AND(t0.c38)))AND(NULL))  WHEN CASE t0.c38  WHEN vt0.c1 THEN t0.c35 ELSE vt0.c1 END THEN NULL END ORDER BY ((GLOB(vt0.c1, t0.c38))IS(vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, HEX(DISTINCT (t0.c35 IN ())) ASC);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CASE ((((((((t0.c35)AND(vt0.c0)))AND(t0.c38)))AND(t0.c38)))AND(NULL))  WHEN CASE t0.c38  WHEN vt0.c1 THEN t0.c35 ELSE vt0.c1 END THEN NULL END WHERE (CAST((t0.c35 IN ()) AS INTEGER)) ORDER BY ((GLOB(vt0.c1, t0.c38))IS(vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, HEX(DISTINCT (t0.c35 IN ())) ASC;
SELECT COUNT(*) FROM vt0, t0 WHERE ('Lo');
SELECT SUM(count) FROM (SELECT ALL (('Lo') IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ('Lo');
SELECT SUM(count) FROM (SELECT ALL (('Lo') IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ('Lo');
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c38)OR(vt0.c0)))OR(t0.c38)))OR(t0.c35)))OR(NULL))) NOT BETWEEN (((0Xffffffffcdfdc00e) BETWEEN (t0.c38) AND (vt0.c1))) AND ((t0.c38 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c38)OR(vt0.c0)))OR(t0.c38)))OR(t0.c35)))OR(NULL))) NOT BETWEEN (((0Xffffffffcdfdc00e) BETWEEN (t0.c38) AND (vt0.c1))) AND ((t0.c38 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c38)OR(vt0.c0)))OR(t0.c38)))OR(t0.c35)))OR(NULL))) NOT BETWEEN (((0Xffffffffcdfdc00e) BETWEEN (t0.c38) AND (vt0.c1))) AND ((t0.c38 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c38)OR(vt0.c0)))OR(t0.c38)))OR(t0.c35)))OR(NULL))) NOT BETWEEN (((0Xffffffffcdfdc00e) BETWEEN (t0.c38) AND (vt0.c1))) AND ((t0.c38 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c38)OR(vt0.c0)))OR(t0.c38)))OR(t0.c35)))OR(NULL))) NOT BETWEEN (((0Xffffffffcdfdc00e) BETWEEN (t0.c38) AND (vt0.c1))) AND ((t0.c38 IN ()))));
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1) IS TRUE) COLLATE BINARY) ORDER BY (NOT (vt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (vt0.c1)) ASC);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1) IS TRUE) COLLATE BINARY) ORDER BY (NOT (vt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (vt0.c1)) ASC);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1) IS TRUE) COLLATE BINARY) ORDER BY (NOT (vt0.c1)) ASC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CASE WHEN ((vt0.c0)/(t0.c38)) THEN t0.c35 COLLATE RTRIM END WHERE (((((vt0.c0) NOTNULL))-(((t0.c35) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((t0.c38)IS NOT(((((((((vt0.c1)OR(vt0.c1)))AND(t0.c35)))OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST, (- ((((x''))<((t0.c38)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))-(((t0.c35) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CASE WHEN ((vt0.c0)/(t0.c38)) THEN t0.c35 COLLATE RTRIM END ORDER BY ((t0.c38)IS NOT(((((((((vt0.c1)OR(vt0.c1)))AND(t0.c35)))OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST, (- ((((x''))<((t0.c38))))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CASE WHEN ((vt0.c0)/(t0.c38)) THEN t0.c35 COLLATE RTRIM END WHERE (((((vt0.c0) NOTNULL))-(((t0.c35) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((t0.c38)IS NOT(((((((((vt0.c1)OR(vt0.c1)))AND(t0.c35)))OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST, (- ((((x''))<((t0.c38)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))-(((t0.c35) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CASE WHEN ((vt0.c0)/(t0.c38)) THEN t0.c35 COLLATE RTRIM END ORDER BY ((t0.c38)IS NOT(((((((((vt0.c1)OR(vt0.c1)))AND(t0.c35)))OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST, (- ((((x''))<((t0.c38))))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CASE WHEN ((vt0.c0)/(t0.c38)) THEN t0.c35 COLLATE RTRIM END WHERE (((((vt0.c0) NOTNULL))-(((t0.c35) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((t0.c38)IS NOT(((((((((vt0.c1)OR(vt0.c1)))AND(t0.c35)))OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST, (- ((((x''))<((t0.c38)))));
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c35) BETWEEN (t0.c38) AND (t0.c38)) THEN ((t0.c35)!=(t0.c35)) ELSE 'WvIT].&xp' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c35) BETWEEN (t0.c38) AND (t0.c38)) THEN ((t0.c35)!=(t0.c35)) ELSE 'WvIT].&xp' END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c35) BETWEEN (t0.c38) AND (t0.c38)) THEN ((t0.c35)!=(t0.c35)) ELSE 'WvIT].&xp' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c35) BETWEEN (t0.c38) AND (t0.c38)) THEN ((t0.c35)!=(t0.c35)) ELSE 'WvIT].&xp' END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c35) BETWEEN (t0.c38) AND (t0.c38)) THEN ((t0.c35)!=(t0.c35)) ELSE 'WvIT].&xp' END);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c1 AS REAL))<<((vt0.c0 IN ())))  NULLS LAST, CAST(CAST(0.3224956160482191 AS REAL) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS REAL))<<((vt0.c0 IN ())))  NULLS LAST, CAST(CAST(0.3224956160482191 AS REAL) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c1 AS REAL))<<((vt0.c0 IN ())))  NULLS LAST, CAST(CAST(0.3224956160482191 AS REAL) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS REAL))<<((vt0.c0 IN ())))  NULLS LAST, CAST(CAST(0.3224956160482191 AS REAL) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c1 AS REAL))<<((vt0.c0 IN ())))  NULLS LAST, CAST(CAST(0.3224956160482191 AS REAL) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((- (vt0.c0)))OR(NULL)))OR(CASE t0.c38  WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END)));
SELECT SUM(count) FROM (SELECT (((((((- (vt0.c0)))OR(NULL)))OR(CASE t0.c38  WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((- (vt0.c0)))OR(NULL)))OR(CASE t0.c38  WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END)));
SELECT SUM(count) FROM (SELECT (((((((- (vt0.c0)))OR(NULL)))OR(CASE t0.c38  WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((- (vt0.c0)))OR(NULL)))OR(CASE t0.c38  WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END)));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (418833038) ORDER BY t0.c38  NULLS FIRST, ((t0.c35) NOT BETWEEN (t0.c35) AND (vt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((418833038) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY t0.c38  NULLS FIRST, ((t0.c35) NOT BETWEEN (t0.c35) AND (vt0.c1)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (418833038) ORDER BY t0.c38  NULLS FIRST, ((t0.c35) NOT BETWEEN (t0.c35) AND (vt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((418833038) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY t0.c38  NULLS FIRST, ((t0.c35) NOT BETWEEN (t0.c35) AND (vt0.c1)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (418833038) ORDER BY t0.c38  NULLS FIRST, ((t0.c35) NOT BETWEEN (t0.c35) AND (vt0.c1)) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0 WHERE (CAST(((t0.c38) IS TRUE) AS INTEGER)) ORDER BY ''  NULLS LAST, LOWER(CASE WHEN t0.c35 THEN t0.c35 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c38) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt0, t0 ORDER BY ''  NULLS LAST, LOWER(CASE WHEN t0.c35 THEN t0.c35 END) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0 WHERE (CAST(((t0.c38) IS TRUE) AS INTEGER)) ORDER BY ''  NULLS LAST, LOWER(CASE WHEN t0.c35 THEN t0.c35 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c38) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt0, t0 ORDER BY ''  NULLS LAST, LOWER(CASE WHEN t0.c35 THEN t0.c35 END) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0 WHERE (CAST(((t0.c38) IS TRUE) AS INTEGER)) ORDER BY ''  NULLS LAST, LOWER(CASE WHEN t0.c35 THEN t0.c35 END) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c35 IN (t0.c35)) COLLATE RTRIM) ORDER BY json_remove(CASE t0.c35  WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END, t0.c35 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c35 IN (t0.c35)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY json_remove(CASE t0.c35  WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END, t0.c35 COLLATE NOCASE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c35 IN (t0.c35)) COLLATE RTRIM) ORDER BY json_remove(CASE t0.c35  WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END, t0.c35 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c35 IN (t0.c35)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY json_remove(CASE t0.c35  WHEN t0.c35 THEN t0.c35 ELSE t0.c38 END, t0.c35 COLLATE NOCASE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c35 COLLATE NOCASE) ORDER BY ((((t0.c38)||(vt0.c0)))AND(CAST(t0.c35 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c35 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c38)||(vt0.c0)))AND(CAST(t0.c35 AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c35 COLLATE NOCASE) ORDER BY ((((t0.c38)||(vt0.c0)))AND(CAST(t0.c35 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c35 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c38)||(vt0.c0)))AND(CAST(t0.c35 AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c35 COLLATE NOCASE) ORDER BY ((((t0.c38)||(vt0.c0)))AND(CAST(t0.c35 AS NUMERIC)))  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((NOT (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c35)AND(t0.c38)))AND(t0.c38)))AND(t0.c38)))AND('%{x|i_ax')))=(CASE WHEN vt0.c1 THEN t0.c35 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c35)AND(t0.c38)))AND(t0.c38)))AND(t0.c38)))AND('%{x|i_ax')))==(CASE WHEN vt0.c1 THEN t0.c35 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c35)AND(t0.c38)))AND(t0.c38)))AND(t0.c38)))AND('%{x|i_ax')))=(CASE WHEN vt0.c1 THEN t0.c35 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c35)AND(t0.c38)))AND(t0.c38)))AND(t0.c38)))AND('%{x|i_ax')))==(CASE WHEN vt0.c1 THEN t0.c35 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c35)AND(t0.c38)))AND(t0.c38)))AND(t0.c38)))AND('%{x|i_ax')))=(CASE WHEN vt0.c1 THEN t0.c35 END)));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c35) NOT NULL))|(((t0.c38) NOTNULL)))) ORDER BY ((t0.c35 COLLATE RTRIM) BETWEEN (((t0.c38) BETWEEN (t0.c38) AND (t0.c38))) AND (((t0.c35)<>(t0.c35)))) ASC, ((t0.c35 IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35) NOT NULL))|(((t0.c38) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c35 COLLATE RTRIM) BETWEEN (((t0.c38) BETWEEN (t0.c38) AND (t0.c38))) AND (((t0.c35)<>(t0.c35)))) ASC, ((t0.c35 IN ()) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c35) NOT NULL))|(((t0.c38) NOTNULL)))) ORDER BY ((t0.c35 COLLATE RTRIM) BETWEEN (((t0.c38) BETWEEN (t0.c38) AND (t0.c38))) AND (((t0.c35)<>(t0.c35)))) ASC, ((t0.c35 IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35) NOT NULL))|(((t0.c38) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c35 COLLATE RTRIM) BETWEEN (((t0.c38) BETWEEN (t0.c38) AND (t0.c38))) AND (((t0.c35)<>(t0.c35)))) ASC, ((t0.c35 IN ()) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c35) NOT NULL))|(((t0.c38) NOTNULL)))) ORDER BY ((t0.c35 COLLATE RTRIM) BETWEEN (((t0.c38) BETWEEN (t0.c38) AND (t0.c38))) AND (((t0.c35)<>(t0.c35)))) ASC, ((t0.c35 IN ()) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))||(vt0.c1))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))>((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))||(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))>((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))||(vt0.c1))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))>((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))||(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))>((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))||(vt0.c1))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))>((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE NOCASE);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1) NOT BETWEEN (NULL) AND (t0.c35))) BETWEEN (t0.c35) AND (CAST('-752409976' AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (NULL) AND (t0.c35))) BETWEEN (t0.c35) AND (CAST('-752409976' AS BLOB)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1) NOT BETWEEN (NULL) AND (t0.c35))) BETWEEN (t0.c35) AND (CAST('-752409976' AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (NULL) AND (t0.c35))) BETWEEN (t0.c35) AND (CAST('-752409976' AS BLOB)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1) NOT BETWEEN (NULL) AND (t0.c35))) BETWEEN (t0.c35) AND (CAST('-752409976' AS BLOB))));
SELECT * FROM t0, vt0 WHERE (((t0.c35 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c35 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c35 COLLATE RTRIM) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT CASE WHEN 0.605423044704061 THEN vt0.c1 WHEN 0.4789438119034043 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY ((vt0.c1)>=(((vt0.c1)<<(vt0.c0)))), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))>(TYPEOF(DISTINCT vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CASE WHEN 0.605423044704061 THEN vt0.c1 WHEN 0.4789438119034043 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)>=(((vt0.c1)<<(vt0.c0)))), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))>(TYPEOF(DISTINCT vt0.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT CASE WHEN 0.605423044704061 THEN vt0.c1 WHEN 0.4789438119034043 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY ((vt0.c1)>=(((vt0.c1)<<(vt0.c0)))), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))>(TYPEOF(DISTINCT vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CASE WHEN 0.605423044704061 THEN vt0.c1 WHEN 0.4789438119034043 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)>=(((vt0.c1)<<(vt0.c0)))), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))>(TYPEOF(DISTINCT vt0.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT CASE WHEN 0.605423044704061 THEN vt0.c1 WHEN 0.4789438119034043 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY ((vt0.c1)>=(((vt0.c1)<<(vt0.c0)))), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))>(TYPEOF(DISTINCT vt0.c1)))  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((((vt0.c1)/(vt0.c0))))) WHERE (((vt0.c0)||((- (vt0.c1))))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||((- (vt0.c1))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((((vt0.c1)/(vt0.c0))))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)  NULLS FIRST);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((((vt0.c1)/(vt0.c0))))) WHERE (((vt0.c0)||((- (vt0.c1))))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||((- (vt0.c1))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((((vt0.c1)/(vt0.c0))))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)  NULLS FIRST);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((((vt0.c1)/(vt0.c0))))) WHERE (((vt0.c0)||((- (vt0.c1))))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((- ((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, 0.39484148300375277)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, NULL, vt0.c1, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, 0.39484148300375277)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, NULL, vt0.c1, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- ((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, 0.39484148300375277)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, NULL, vt0.c1, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, 0.39484148300375277)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, NULL, vt0.c1, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- ((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, 0.39484148300375277)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, NULL, vt0.c1, vt0.c0, vt0.c1))))));
SELECT * FROM t0 WHERE (((t0.c35) BETWEEN ((NOT (NULL))) AND (((t0.c38)/(t0.c38))))) ORDER BY CAST(((t0.c38) NOT BETWEEN (t0.c38) AND (t0.c38)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c35) BETWEEN ((NOT (NULL))) AND (((t0.c38)/(t0.c38))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c38) NOT BETWEEN (t0.c38) AND (t0.c38)) AS NUMERIC) DESC);
SELECT * FROM t0 WHERE (((t0.c35) BETWEEN ((NOT (NULL))) AND (((t0.c38)/(t0.c38))))) ORDER BY CAST(((t0.c38) NOT BETWEEN (t0.c38) AND (t0.c38)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c35) BETWEEN ((NOT (NULL))) AND (((t0.c38)/(t0.c38))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c38) NOT BETWEEN (t0.c38) AND (t0.c38)) AS NUMERIC) DESC);
SELECT * FROM t0 WHERE (((t0.c35) BETWEEN ((NOT (NULL))) AND (((t0.c38)/(t0.c38))))) ORDER BY CAST(((t0.c38) NOT BETWEEN (t0.c38) AND (t0.c38)) AS NUMERIC) DESC;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c38 IN ()))IS((NOT (NULL))))) ORDER BY ((((((t0.c35))<((t0.c35))), (~ (t0.c38)), (+ (t0.c38))))==(((NOT (t0.c35)), ((t0.c38) BETWEEN (t0.c35) AND (t0.c38)), (NOT (x'')))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c38 IN ()))IS((NOT (NULL))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c35))<((t0.c35))), (~ (t0.c38)), (+ (t0.c38))))==(((NOT (t0.c35)), ((t0.c38) BETWEEN (t0.c35) AND (t0.c38)), (NOT (x''))))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c38 IN ()))IS((NOT (NULL))))) ORDER BY ((((((t0.c35))<((t0.c35))), (~ (t0.c38)), (+ (t0.c38))))==(((NOT (t0.c35)), ((t0.c38) BETWEEN (t0.c35) AND (t0.c38)), (NOT (x'')))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c38 IN ()))IS((NOT (NULL))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c35))<((t0.c35))), (~ (t0.c38)), (+ (t0.c38))))==(((NOT (t0.c35)), ((t0.c38) BETWEEN (t0.c35) AND (t0.c38)), (NOT (x''))))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c38 IN ()))IS((NOT (NULL))))) ORDER BY ((((((t0.c35))<((t0.c35))), (~ (t0.c38)), (+ (t0.c38))))==(((NOT (t0.c35)), ((t0.c38) BETWEEN (t0.c35) AND (t0.c38)), (NOT (x'')))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c35)!=(((t0.c35)IS(t0.c35))))) ORDER BY ((t0.c38)>(t0.c38)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35)!=(((t0.c35)IS(t0.c35))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c38)>(t0.c38)) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c35)!=(((t0.c35)IS(t0.c35))))) ORDER BY ((t0.c38)>(t0.c38)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35)!=(((t0.c35)IS(t0.c35))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c38)>(t0.c38)) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c35)!=(((t0.c35)IS(t0.c35))))) ORDER BY ((t0.c38)>(t0.c38)) DESC;
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN t0.c38 ELSE t0.c38 END AS REAL) WHERE (LIKELY(DISTINCT (- (t0.c35)))) ORDER BY UNLIKELY(DISTINCT vt0.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (- (t0.c35)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN t0.c38 ELSE t0.c38 END AS REAL) ORDER BY UNLIKELY(DISTINCT vt0.c0 COLLATE RTRIM)  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN t0.c38 ELSE t0.c38 END AS REAL) WHERE (LIKELY(DISTINCT (- (t0.c35)))) ORDER BY UNLIKELY(DISTINCT vt0.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (- (t0.c35)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN t0.c38 ELSE t0.c38 END AS REAL) ORDER BY UNLIKELY(DISTINCT vt0.c0 COLLATE RTRIM)  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN t0.c38 ELSE t0.c38 END AS REAL) WHERE (LIKELY(DISTINCT (- (t0.c35)))) ORDER BY UNLIKELY(DISTINCT vt0.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE ((((((t0.c35, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((t0.c35, vt0.c0, t0.c35, t0.c38, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0, t0.c38, t0.c35)))) IS TRUE)) ORDER BY (((t0.c38)/(t0.c38)) IN ()) ASC  NULLS FIRST, ((t0.c35) BETWEEN (t0.c35) AND (t0.c38)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c35, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((t0.c35, vt0.c0, t0.c35, t0.c38, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0, t0.c38, t0.c35)))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c38)/(t0.c38)) IN ()) ASC  NULLS FIRST, ((t0.c35) BETWEEN (t0.c35) AND (t0.c38)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((((t0.c35, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((t0.c35, vt0.c0, t0.c35, t0.c38, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0, t0.c38, t0.c35)))) IS TRUE)) ORDER BY (((t0.c38)/(t0.c38)) IN ()) ASC  NULLS FIRST, ((t0.c35) BETWEEN (t0.c35) AND (t0.c38)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c35, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((t0.c35, vt0.c0, t0.c35, t0.c38, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0, t0.c38, t0.c35)))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c38)/(t0.c38)) IN ()) ASC  NULLS FIRST, ((t0.c35) BETWEEN (t0.c35) AND (t0.c38)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((((t0.c35, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((t0.c35, vt0.c0, t0.c35, t0.c38, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0, t0.c38, t0.c35)))) IS TRUE)) ORDER BY (((t0.c38)/(t0.c38)) IN ()) ASC  NULLS FIRST, ((t0.c35) BETWEEN (t0.c35) AND (t0.c38)) COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt0 WHERE (0.7622056964939602) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7622056964939602) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (0.7622056964939602) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7622056964939602) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (0.7622056964939602) ORDER BY x'' ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CAST((((t0.c38)) NOT BETWEEN ((t0.c35)) AND ((vt0.c0))) AS BLOB) WHERE (CASE ((vt0.c0) NOT BETWEEN (t0.c35) AND (''))  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) THEN (~ (vt0.c1)) END) ORDER BY (NOT (vt0.c1))  NULLS FIRST, (t0.c35 IN ()) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (t0.c35) AND (''))  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) THEN (~ (vt0.c1)) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST((((t0.c38)) NOT BETWEEN ((t0.c35)) AND ((vt0.c0))) AS BLOB) ORDER BY (NOT (vt0.c1))  NULLS FIRST, (t0.c35 IN ()) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CAST((((t0.c38)) NOT BETWEEN ((t0.c35)) AND ((vt0.c0))) AS BLOB) WHERE (CASE ((vt0.c0) NOT BETWEEN (t0.c35) AND (''))  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) THEN (~ (vt0.c1)) END) ORDER BY (NOT (vt0.c1))  NULLS FIRST, (t0.c35 IN ()) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (t0.c35) AND (''))  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) THEN (~ (vt0.c1)) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST((((t0.c38)) NOT BETWEEN ((t0.c35)) AND ((vt0.c0))) AS BLOB) ORDER BY (NOT (vt0.c1))  NULLS FIRST, (t0.c35 IN ()) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CAST((((t0.c38)) NOT BETWEEN ((t0.c35)) AND ((vt0.c0))) AS BLOB) WHERE (CASE ((vt0.c0) NOT BETWEEN (t0.c35) AND (''))  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) THEN (~ (vt0.c1)) END) ORDER BY (NOT (vt0.c1))  NULLS FIRST, (t0.c35 IN ()) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((((((((0.9679857473859003)OR(x'')))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR((NOT (vt0.c1))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND ('-552175790'))) NOT NULL) ASC, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((0.9679857473859003)OR(x'')))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND ('-552175790'))) NOT NULL) ASC, vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((((((((0.9679857473859003)OR(x'')))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR((NOT (vt0.c1))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND ('-552175790'))) NOT NULL) ASC, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((0.9679857473859003)OR(x'')))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND ('-552175790'))) NOT NULL) ASC, vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((((((((0.9679857473859003)OR(x'')))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR((NOT (vt0.c1))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND ('-552175790'))) NOT NULL) ASC, vt0.c0  NULLS FIRST;
SELECT * FROM t0 WHERE (((((CASE WHEN t0.c38 THEN t0.c38 END)OR(((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c38)))))AND(CASE t0.c35  WHEN t0.c35 THEN t0.c38 END)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c38 THEN t0.c38 END)OR(((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c38)))))AND(CASE t0.c35  WHEN t0.c35 THEN t0.c38 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((CASE WHEN t0.c38 THEN t0.c38 END)OR(((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c38)))))AND(CASE t0.c35  WHEN t0.c35 THEN t0.c38 END)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c38 THEN t0.c38 END)OR(((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c38)))))AND(CASE t0.c35  WHEN t0.c35 THEN t0.c38 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((CASE WHEN t0.c38 THEN t0.c38 END)OR(((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c38)))))AND(CASE t0.c35  WHEN t0.c35 THEN t0.c38 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1))!=((vt0.c0)))) IS FALSE)) ORDER BY (((((((((((((vt0.c1 IN ()))OR(vt0.c0)))AND(CAST(vt0.c1 AS TEXT))))OR(vt0.c1)))OR((~ (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<>((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((((vt0.c1 IN ()))OR(vt0.c0)))AND(CAST(vt0.c1 AS TEXT))))OR(vt0.c1)))OR((~ (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1))!=((vt0.c0)))) IS FALSE)) ORDER BY (((((((((((((vt0.c1 IN ()))OR(vt0.c0)))AND(CAST(vt0.c1 AS TEXT))))OR(vt0.c1)))OR((~ (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<>((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((((vt0.c1 IN ()))OR(vt0.c0)))AND(CAST(vt0.c1 AS TEXT))))OR(vt0.c1)))OR((~ (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1))!=((vt0.c0)))) IS FALSE)) ORDER BY (((((((((((((vt0.c1 IN ()))OR(vt0.c0)))AND(CAST(vt0.c1 AS TEXT))))OR(vt0.c1)))OR((~ (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (CAST(0.6398933985100459 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(0.6398933985100459 AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(0.6398933985100459 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(0.6398933985100459 AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(0.6398933985100459 AS INTEGER));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c35) NOT NULL)) NOT NULL)) ORDER BY t0.c38  NULLS LAST, (- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'4f4ff6d4')))));
SELECT SUM(count) FROM (SELECT ((((((t0.c35) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c38  NULLS LAST, (- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'4f4ff6d4'))))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c35) NOT NULL)) NOT NULL)) ORDER BY t0.c38  NULLS LAST, (- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'4f4ff6d4')))));
SELECT SUM(count) FROM (SELECT ((((((t0.c35) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c38  NULLS LAST, (- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'4f4ff6d4'))))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c35) NOT NULL)) NOT NULL)) ORDER BY t0.c38  NULLS LAST, (- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'4f4ff6d4')))));
SELECT * FROM t0 WHERE (CAST((((t0.c38)) BETWEEN ((t0.c38)) AND ((''))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c38)) BETWEEN ((t0.c38)) AND ((''))) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((((t0.c38)) BETWEEN ((t0.c38)) AND ((''))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c38)) BETWEEN ((t0.c38)) AND ((''))) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((((t0.c38)) BETWEEN ((t0.c38)) AND ((''))) AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c35) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c35) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c35) IS FALSE) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((~ (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((~ (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((~ (vt0.c0)) AS NUMERIC));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON CAST(((-1820924718) IS TRUE) AS INTEGER) WHERE (CASE WHEN t0.c35 COLLATE RTRIM THEN ((((((((t0.c38)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c1)<>(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c35 COLLATE RTRIM THEN ((((((((t0.c38)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c1)<>(vt0.c1)) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CAST(((-1820924718) IS TRUE) AS INTEGER));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON CAST(((-1820924718) IS TRUE) AS INTEGER) WHERE (CASE WHEN t0.c35 COLLATE RTRIM THEN ((((((((t0.c38)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c1)<>(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c35 COLLATE RTRIM THEN ((((((((t0.c38)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c1)<>(vt0.c1)) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CAST(((-1820924718) IS TRUE) AS INTEGER));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON CAST(((-1820924718) IS TRUE) AS INTEGER) WHERE (CASE WHEN t0.c35 COLLATE RTRIM THEN ((((((((t0.c38)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c1)<>(vt0.c1)) END);
SELECT ALL * FROM vt0, t0 WHERE ((~ (((t0.c38) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c38) IS FALSE)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((~ (((t0.c38) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c38) IS FALSE)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((~ (((t0.c38) IS FALSE))));
SELECT * FROM vt0 WHERE (((((vt0.c0)/(x'826dea36')))=((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(x'826dea36')))=((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)/(x'826dea36')))=((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(x'826dea36')))=((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)/(x'826dea36')))=((NOT (vt0.c1)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (x'08e0f709');
SELECT SUM(count) FROM (SELECT ((x'08e0f709') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'08e0f709');
SELECT SUM(count) FROM (SELECT ((x'08e0f709') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'08e0f709');
SELECT ALL COUNT(*) FROM t0 WHERE ((- (t0.c38)) COLLATE BINARY) ORDER BY ((CASE WHEN t0.c35 THEN t0.c38 END) IS TRUE), ((((t0.c35))==((t0.c35))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (t0.c38)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c35 THEN t0.c38 END) IS TRUE), ((((t0.c35))=((t0.c35))) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (t0.c38)) COLLATE BINARY) ORDER BY ((CASE WHEN t0.c35 THEN t0.c38 END) IS TRUE), ((((t0.c35))==((t0.c35))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (t0.c38)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c35 THEN t0.c38 END) IS TRUE), ((((t0.c35))=((t0.c35))) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (t0.c38)) COLLATE BINARY) ORDER BY ((CASE WHEN t0.c35 THEN t0.c38 END) IS TRUE), ((((t0.c35))==((t0.c35))) IN ())  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (((CAST(vt0.c1 AS NUMERIC)) NOT NULL)) ORDER BY (((t0.c38))>((((vt0.c0) BETWEEN (t0.c38) AND (t0.c35)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c38))>((((vt0.c0) BETWEEN (t0.c38) AND (t0.c35))))));
SELECT * FROM vt0, t0 WHERE (((CAST(vt0.c1 AS NUMERIC)) NOT NULL)) ORDER BY (((t0.c38))>((((vt0.c0) BETWEEN (t0.c38) AND (t0.c35)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c38))>((((vt0.c0) BETWEEN (t0.c38) AND (t0.c35))))));
SELECT * FROM vt0, t0 WHERE (((CAST(vt0.c1 AS NUMERIC)) NOT NULL)) ORDER BY (((t0.c38))>((((vt0.c0) BETWEEN (t0.c38) AND (t0.c35)))));
SELECT COUNT(*) FROM t0 WHERE (-940718037);
SELECT SUM(count) FROM (SELECT ((-940718037) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (-940718037);
SELECT SUM(count) FROM (SELECT ((-940718037) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (-940718037);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (CAST(CAST(t0.c35 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c35 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (CAST(CAST(t0.c35 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c35 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (CAST(CAST(t0.c35 AS TEXT) AS BLOB));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (COALESCE(t0.c38 COLLATE BINARY, TYPEOF(DISTINCT t0.c38), (~ (vt0.c1)), CAST(vt0.c0 AS BLOB), LIKE(t0.c35, vt0.c0), TOTAL_CHANGES())) ORDER BY CAST(0.9151325971708424 AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(t0.c38 COLLATE BINARY, TYPEOF(DISTINCT t0.c38), (~ (vt0.c1)), CAST(vt0.c0 AS BLOB), LIKE(t0.c35, vt0.c0), TOTAL_CHANGES())) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(0.9151325971708424 AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (COALESCE(t0.c38 COLLATE BINARY, TYPEOF(DISTINCT t0.c38), (~ (vt0.c1)), CAST(vt0.c0 AS BLOB), LIKE(t0.c35, vt0.c0), TOTAL_CHANGES())) ORDER BY CAST(0.9151325971708424 AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(t0.c38 COLLATE BINARY, TYPEOF(DISTINCT t0.c38), (~ (vt0.c1)), CAST(vt0.c0 AS BLOB), LIKE(t0.c35, vt0.c0), TOTAL_CHANGES())) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(0.9151325971708424 AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (COALESCE(t0.c38 COLLATE BINARY, TYPEOF(DISTINCT t0.c38), (~ (vt0.c1)), CAST(vt0.c0 AS BLOB), LIKE(t0.c35, vt0.c0), TOTAL_CHANGES())) ORDER BY CAST(0.9151325971708424 AS BLOB) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (-301165619) ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((-301165619) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (-301165619) ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((-301165619) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (-301165619) ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE RTRIM ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL)) ORDER BY CAST(((x'') BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((x'') BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL)) ORDER BY CAST(((x'') BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((x'') BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL)) ORDER BY CAST(((x'') BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c1)>=(vt0.c1)) COLLATE BINARY) ORDER BY x'4ce7' COLLATE NOCASE DESC, ((((t0.c35) NOT BETWEEN (vt0.c0) AND (t0.c35)))==(((vt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>=(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY x'4ce7' COLLATE NOCASE DESC, ((((t0.c35) NOT BETWEEN (vt0.c0) AND (t0.c35)))=(((vt0.c0) NOTNULL))) DESC);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c1)>=(vt0.c1)) COLLATE BINARY) ORDER BY x'4ce7' COLLATE NOCASE DESC, ((((t0.c35) NOT BETWEEN (vt0.c0) AND (t0.c35)))==(((vt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>=(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY x'4ce7' COLLATE NOCASE DESC, ((((t0.c35) NOT BETWEEN (vt0.c0) AND (t0.c35)))=(((vt0.c0) NOTNULL))) DESC);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c1)>=(vt0.c1)) COLLATE BINARY) ORDER BY x'4ce7' COLLATE NOCASE DESC, ((((t0.c35) NOT BETWEEN (vt0.c0) AND (t0.c35)))==(((vt0.c0) NOTNULL))) DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c38) ISNULL))OR((vt0.c1 IN ()))))AND(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c38) ISNULL))OR((vt0.c1 IN ()))))AND(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c38) ISNULL))OR((vt0.c1 IN ()))))AND(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c38) ISNULL))OR((vt0.c1 IN ()))))AND(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c38) ISNULL))OR((vt0.c1 IN ()))))AND(CAST(vt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL) NOT BETWEEN ((((t0.c38))<=((t0.c35)))) AND (0.0)));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN ((((t0.c38))<=((t0.c35)))) AND (0.0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL) NOT BETWEEN ((((t0.c38))<=((t0.c35)))) AND (0.0)));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN ((((t0.c38))<=((t0.c35)))) AND (0.0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL) NOT BETWEEN ((((t0.c38))<=((t0.c35)))) AND (0.0)));
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE WHEN x'c33e' THEN vt0.c1 ELSE vt0.c1 END)OR((vt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(x'')))AND(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN x'c33e' THEN vt0.c1 ELSE vt0.c1 END)OR((vt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(x'')))AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE WHEN x'c33e' THEN vt0.c1 ELSE vt0.c1 END)OR((vt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(x'')))AND(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN x'c33e' THEN vt0.c1 ELSE vt0.c1 END)OR((vt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(x'')))AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE WHEN x'c33e' THEN vt0.c1 ELSE vt0.c1 END)OR((vt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(x'')))AND(vt0.c1 COLLATE NOCASE)));
SELECT * FROM t0, vt0 WHERE (CAST((((vt0.c1)) BETWEEN ((t0.c38)) AND ((vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1)) BETWEEN ((t0.c38)) AND ((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST((((vt0.c1)) BETWEEN ((t0.c38)) AND ((vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1)) BETWEEN ((t0.c38)) AND ((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST((((vt0.c1)) BETWEEN ((t0.c38)) AND ((vt0.c0))) AS BLOB));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((((((t0.c35) IS TRUE))OR(LTRIM('735419300', t0.c38))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE t0.c35 END)) WHERE (vt0.c1) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c38)))))AND(((t0.c38) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((t0.c35) IS TRUE))OR(LTRIM('735419300', t0.c38))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE t0.c35 END)) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c38)))))AND(((t0.c38) IS TRUE))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((((((t0.c35) IS TRUE))OR(LTRIM('735419300', t0.c38))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE t0.c35 END)) WHERE (vt0.c1) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c38)))))AND(((t0.c38) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((t0.c35) IS TRUE))OR(LTRIM('735419300', t0.c38))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE t0.c35 END)) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c38)))))AND(((t0.c38) IS TRUE))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((((((t0.c35) IS TRUE))OR(LTRIM('735419300', t0.c38))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE t0.c35 END)) WHERE (vt0.c1) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c38)))))AND(((t0.c38) IS TRUE)));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c38) BETWEEN (t0.c35) AND (t0.c38)))>>((((t0.c38)) BETWEEN (('1186956108')) AND ((t0.c35))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c38) BETWEEN (t0.c35) AND (t0.c38)))>>((((t0.c38)) BETWEEN (('1186956108')) AND ((t0.c35)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c38) BETWEEN (t0.c35) AND (t0.c38)))>>((((t0.c38)) BETWEEN (('1186956108')) AND ((t0.c35))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c38) BETWEEN (t0.c35) AND (t0.c38)))>>((((t0.c38)) BETWEEN (('1186956108')) AND ((t0.c35)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c38) BETWEEN (t0.c35) AND (t0.c38)))>>((((t0.c38)) BETWEEN (('1186956108')) AND ((t0.c35))))));
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1)) BETWEEN ((t0.c38)) AND (('*yUB'))) IN ())) ORDER BY (((vt0.c0 IN ()))>(t0.c35 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)) BETWEEN ((t0.c38)) AND (('*yUB'))) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 IN ()))>(t0.c35 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1)) BETWEEN ((t0.c38)) AND (('*yUB'))) IN ())) ORDER BY (((vt0.c0 IN ()))>(t0.c35 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)) BETWEEN ((t0.c38)) AND (('*yUB'))) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 IN ()))>(t0.c35 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1)) BETWEEN ((t0.c38)) AND (('*yUB'))) IN ())) ORDER BY (((vt0.c0 IN ()))>(t0.c35 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c38)<<(t0.c38)))OR((NOT (t0.c38)))))AND(CAST(t0.c35 AS TEXT))))AND(CASE t0.c38  WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN t0.c35 WHEN t0.c35 THEN t0.c38 ELSE t0.c38 END)))AND(0.17780132650970226))) ORDER BY ((((t0.c35)/(t0.c35))) NOT NULL), (((t0.c38) ISNULL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c38)<<(t0.c38)))OR((NOT (t0.c38)))))AND(CAST(t0.c35 AS TEXT))))AND(CASE t0.c38  WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN t0.c35 WHEN t0.c35 THEN t0.c38 ELSE t0.c38 END)))AND(0.17780132650970226))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c35)/(t0.c35))) NOT NULL), (((t0.c38) ISNULL) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c38)<<(t0.c38)))OR((NOT (t0.c38)))))AND(CAST(t0.c35 AS TEXT))))AND(CASE t0.c38  WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN t0.c35 WHEN t0.c35 THEN t0.c38 ELSE t0.c38 END)))AND(0.17780132650970226))) ORDER BY ((((t0.c35)/(t0.c35))) NOT NULL), (((t0.c38) ISNULL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c38)<<(t0.c38)))OR((NOT (t0.c38)))))AND(CAST(t0.c35 AS TEXT))))AND(CASE t0.c38  WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN t0.c35 WHEN t0.c35 THEN t0.c38 ELSE t0.c38 END)))AND(0.17780132650970226))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c35)/(t0.c35))) NOT NULL), (((t0.c38) ISNULL) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c38)<<(t0.c38)))OR((NOT (t0.c38)))))AND(CAST(t0.c35 AS TEXT))))AND(CASE t0.c38  WHEN t0.c38 THEN t0.c35 WHEN t0.c38 THEN t0.c35 WHEN t0.c35 THEN t0.c38 ELSE t0.c38 END)))AND(0.17780132650970226))) ORDER BY ((((t0.c35)/(t0.c35))) NOT NULL), (((t0.c38) ISNULL) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))));
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c1, vt0.c1, 0.78758773928611))<=((t0.c35, t0.c35, vt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt0.c1, 0.78758773928611))<=((t0.c35, t0.c35, vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c1, vt0.c1, 0.78758773928611))<=((t0.c35, t0.c35, vt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt0.c1, 0.78758773928611))<=((t0.c35, t0.c35, vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c1, vt0.c1, 0.78758773928611))<=((t0.c35, t0.c35, vt0.c0)))) IS TRUE));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN NULL THEN ABS(DISTINCT t0.c35) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ABS(DISTINCT t0.c35) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN NULL THEN ABS(DISTINCT t0.c35) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ABS(DISTINCT t0.c35) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN NULL THEN ABS(DISTINCT t0.c35) END);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN (('-947081565')) AND ((t0.c35))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (('-947081565')) AND ((t0.c35))) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN (('-947081565')) AND ((t0.c35))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (('-947081565')) AND ((t0.c35))) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN (('-947081565')) AND ((t0.c35))) COLLATE BINARY);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'') ORDER BY (((t0.c38)) NOT BETWEEN (((((t0.c35)) NOT BETWEEN ((t0.c38)) AND ((t0.c38))))) AND ((vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c38)) NOT BETWEEN (((((t0.c35)) NOT BETWEEN ((t0.c38)) AND ((t0.c38))))) AND ((vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'') ORDER BY (((t0.c38)) NOT BETWEEN (((((t0.c35)) NOT BETWEEN ((t0.c38)) AND ((t0.c38))))) AND ((vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c38)) NOT BETWEEN (((((t0.c35)) NOT BETWEEN ((t0.c38)) AND ((t0.c38))))) AND ((vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'') ORDER BY (((t0.c38)) NOT BETWEEN (((((t0.c35)) NOT BETWEEN ((t0.c38)) AND ((t0.c38))))) AND ((vt0.c0)))  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (HEX(DISTINCT vt0.c1 COLLATE BINARY)) ORDER BY ((CAST(t0.c35 AS BLOB))>>(8.01566485E8))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c35 AS BLOB))>>(8.01566485E8))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (HEX(DISTINCT vt0.c1 COLLATE BINARY)) ORDER BY ((CAST(t0.c35 AS BLOB))>>(8.01566485E8))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c35 AS BLOB))>>(8.01566485E8))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (HEX(DISTINCT vt0.c1 COLLATE BINARY)) ORDER BY ((CAST(t0.c35 AS BLOB))>>(8.01566485E8))  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c38) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (t0.c35) AND (((((((((t0.c35)OR(vt0.c0)))OR(t0.c38)))AND(vt0.c0)))OR(t0.c38)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c38) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (t0.c35) AND (((((((((t0.c35)OR(vt0.c0)))OR(t0.c38)))AND(vt0.c0)))OR(t0.c38))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c38) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (t0.c35) AND (((((((((t0.c35)OR(vt0.c0)))OR(t0.c38)))AND(vt0.c0)))OR(t0.c38)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c38) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (t0.c35) AND (((((((((t0.c35)OR(vt0.c0)))OR(t0.c38)))AND(vt0.c0)))OR(t0.c38))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c38) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (t0.c35) AND (((((((((t0.c35)OR(vt0.c0)))OR(t0.c38)))AND(vt0.c0)))OR(t0.c38)))));
SELECT * FROM vt0, t0 WHERE (t0.c38);
SELECT SUM(count) FROM (SELECT ALL ((t0.c38) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (t0.c38);
SELECT SUM(count) FROM (SELECT ALL ((t0.c38) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (t0.c38);
SELECT ALL * FROM t0 WHERE (((((t0.c35) BETWEEN (t0.c38) AND (x''))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c35) BETWEEN (t0.c38) AND (x''))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c35) BETWEEN (t0.c38) AND (x''))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c35) BETWEEN (t0.c38) AND (x''))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c35) BETWEEN (t0.c38) AND (x''))) IS TRUE));
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c38)OR(t0.c38)))OR(t0.c35)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c38)OR(t0.c38)))OR(t0.c35)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c38)OR(t0.c38)))OR(t0.c35)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c38)OR(t0.c38)))OR(t0.c35)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c38)OR(t0.c38)))OR(t0.c35)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c35)IS(t0.c38)))IS NOT(LIKELY(DISTINCT t0.c35)))) ORDER BY ((((((t0.c38)*(t0.c38)))AND(t0.c35)))OR(((t0.c35)>(0xffffffff93232613))))  NULLS FIRST, CASE WHEN t0.c38 THEN ((t0.c38) BETWEEN (t0.c38) AND (t0.c38)) WHEN ((x'') NOT BETWEEN (t0.c38) AND ('F\ro')) THEN ((t0.c35)*(x'')) WHEN ((t0.c38)IS(t0.c38)) THEN t0.c35 COLLATE BINARY WHEN CASE t0.c35  WHEN x'' THEN t0.c38 END THEN ((((t0.c38)AND(t0.c35)))OR(t0.c35)) WHEN CASE t0.c38  WHEN t0.c38 THEN t0.c38 WHEN t0.c35 THEN t0.c35 WHEN t0.c35 THEN t0.c35 END THEN ((t0.c35)AND(t0.c38)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35)IS(t0.c38)))IS NOT(LIKELY(DISTINCT t0.c35)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c38)*(t0.c38)))AND(t0.c35)))OR(((t0.c35)>(0Xffffffff93232613))))  NULLS FIRST, CASE WHEN t0.c38 THEN ((t0.c38) BETWEEN (t0.c38) AND (t0.c38)) WHEN ((x'') NOT BETWEEN (t0.c38) AND ('F\ro')) THEN ((t0.c35)*(x'')) WHEN ((t0.c38)IS(t0.c38)) THEN t0.c35 COLLATE BINARY WHEN CASE t0.c35  WHEN x'' THEN t0.c38 END THEN ((((t0.c38)AND(t0.c35)))OR(t0.c35)) WHEN CASE t0.c38  WHEN t0.c38 THEN t0.c38 WHEN t0.c35 THEN t0.c35 WHEN t0.c35 THEN t0.c35 END THEN ((t0.c35)AND(t0.c38)) END);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c35)IS(t0.c38)))IS NOT(LIKELY(DISTINCT t0.c35)))) ORDER BY ((((((t0.c38)*(t0.c38)))AND(t0.c35)))OR(((t0.c35)>(0xffffffff93232613))))  NULLS FIRST, CASE WHEN t0.c38 THEN ((t0.c38) BETWEEN (t0.c38) AND (t0.c38)) WHEN ((x'') NOT BETWEEN (t0.c38) AND ('F\ro')) THEN ((t0.c35)*(x'')) WHEN ((t0.c38)IS(t0.c38)) THEN t0.c35 COLLATE BINARY WHEN CASE t0.c35  WHEN x'' THEN t0.c38 END THEN ((((t0.c38)AND(t0.c35)))OR(t0.c35)) WHEN CASE t0.c38  WHEN t0.c38 THEN t0.c38 WHEN t0.c35 THEN t0.c35 WHEN t0.c35 THEN t0.c35 END THEN ((t0.c35)AND(t0.c38)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35)IS(t0.c38)))IS NOT(LIKELY(DISTINCT t0.c35)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c38)*(t0.c38)))AND(t0.c35)))OR(((t0.c35)>(0Xffffffff93232613))))  NULLS FIRST, CASE WHEN t0.c38 THEN ((t0.c38) BETWEEN (t0.c38) AND (t0.c38)) WHEN ((x'') NOT BETWEEN (t0.c38) AND ('F\ro')) THEN ((t0.c35)*(x'')) WHEN ((t0.c38)IS(t0.c38)) THEN t0.c35 COLLATE BINARY WHEN CASE t0.c35  WHEN x'' THEN t0.c38 END THEN ((((t0.c38)AND(t0.c35)))OR(t0.c35)) WHEN CASE t0.c38  WHEN t0.c38 THEN t0.c38 WHEN t0.c35 THEN t0.c35 WHEN t0.c35 THEN t0.c35 END THEN ((t0.c35)AND(t0.c38)) END);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c35)IS(t0.c38)))IS NOT(LIKELY(DISTINCT t0.c35)))) ORDER BY ((((((t0.c38)*(t0.c38)))AND(t0.c35)))OR(((t0.c35)>(0xffffffff93232613))))  NULLS FIRST, CASE WHEN t0.c38 THEN ((t0.c38) BETWEEN (t0.c38) AND (t0.c38)) WHEN ((x'') NOT BETWEEN (t0.c38) AND ('F\ro')) THEN ((t0.c35)*(x'')) WHEN ((t0.c38)IS(t0.c38)) THEN t0.c35 COLLATE BINARY WHEN CASE t0.c35  WHEN x'' THEN t0.c38 END THEN ((((t0.c38)AND(t0.c35)))OR(t0.c35)) WHEN CASE t0.c38  WHEN t0.c38 THEN t0.c38 WHEN t0.c35 THEN t0.c35 WHEN t0.c35 THEN t0.c35 END THEN ((t0.c35)AND(t0.c38)) END;
SELECT * FROM vt0 INNER JOIN t0 ON (((((t0.c35)|(t0.c35)), vt0.c0, vt0.c1))=(((t0.c35 IN ()), ((t0.c38)+(t0.c38)), 0Xffffffffdf167752))) WHERE (CASE ((vt0.c0)<>(t0.c38))  WHEN CASE WHEN t0.c35 THEN t0.c35 END THEN ((((vt0.c0)OR(t0.c38)))OR(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)<>(t0.c38))  WHEN CASE WHEN t0.c35 THEN t0.c35 END THEN ((((vt0.c0)OR(t0.c38)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((((t0.c35)|(t0.c35)), vt0.c0, vt0.c1))==(((t0.c35 IN ()), ((t0.c38)+(t0.c38)), 0xffffffffdf167752))));
SELECT * FROM vt0 INNER JOIN t0 ON (((((t0.c35)|(t0.c35)), vt0.c0, vt0.c1))=(((t0.c35 IN ()), ((t0.c38)+(t0.c38)), 0Xffffffffdf167752))) WHERE (CASE ((vt0.c0)<>(t0.c38))  WHEN CASE WHEN t0.c35 THEN t0.c35 END THEN ((((vt0.c0)OR(t0.c38)))OR(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)<>(t0.c38))  WHEN CASE WHEN t0.c35 THEN t0.c35 END THEN ((((vt0.c0)OR(t0.c38)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((((t0.c35)|(t0.c35)), vt0.c0, vt0.c1))==(((t0.c35 IN ()), ((t0.c38)+(t0.c38)), 0xffffffffdf167752))));
SELECT * FROM vt0 INNER JOIN t0 ON (((((t0.c35)|(t0.c35)), vt0.c0, vt0.c1))=(((t0.c35 IN ()), ((t0.c38)+(t0.c38)), 0Xffffffffdf167752))) WHERE (CASE ((vt0.c0)<>(t0.c38))  WHEN CASE WHEN t0.c35 THEN t0.c35 END THEN ((((vt0.c0)OR(t0.c38)))OR(vt0.c1)) END);
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT vt0.c1 COLLATE BINARY));
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY ((vt0.c1) ISNULL);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c1) ISNULL));
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY ((vt0.c1) ISNULL);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c1) ISNULL));
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY ((vt0.c1) ISNULL);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c38)AND('1567770919')))AND(t0.c35)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c38)AND('1567770919')))AND(t0.c35)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c38)AND('1567770919')))AND(t0.c35)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c38)AND('1567770919')))AND(t0.c35)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c38)AND('1567770919')))AND(t0.c35)) COLLATE BINARY);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN -1.820924718E9 THEN (NOT (vt0.c0)) END) ORDER BY CASE WHEN LOWER(vt0.c1) THEN ROUND(vt0.c0, t0.c38) WHEN ((t0.c35)AND(t0.c35)) THEN ((vt0.c0)<>(vt0.c1)) WHEN vt0.c0 THEN ((vt0.c0) IS TRUE) ELSE (((vt0.c0, t0.c38, t0.c38))<((vt0.c0, t0.c38, t0.c38))) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN -1.820924718E9 THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN LOWER(vt0.c1) THEN ROUND(vt0.c0, t0.c38) WHEN ((t0.c35)AND(t0.c35)) THEN ((vt0.c0)!=(vt0.c1)) WHEN vt0.c0 THEN ((vt0.c0) IS TRUE) ELSE (((vt0.c0, t0.c38, t0.c38))<((vt0.c0, t0.c38, t0.c38))) END DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN -1.820924718E9 THEN (NOT (vt0.c0)) END) ORDER BY CASE WHEN LOWER(vt0.c1) THEN ROUND(vt0.c0, t0.c38) WHEN ((t0.c35)AND(t0.c35)) THEN ((vt0.c0)<>(vt0.c1)) WHEN vt0.c0 THEN ((vt0.c0) IS TRUE) ELSE (((vt0.c0, t0.c38, t0.c38))<((vt0.c0, t0.c38, t0.c38))) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN -1.820924718E9 THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN LOWER(vt0.c1) THEN ROUND(vt0.c0, t0.c38) WHEN ((t0.c35)AND(t0.c35)) THEN ((vt0.c0)!=(vt0.c1)) WHEN vt0.c0 THEN ((vt0.c0) IS TRUE) ELSE (((vt0.c0, t0.c38, t0.c38))<((vt0.c0, t0.c38, t0.c38))) END DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN -1.820924718E9 THEN (NOT (vt0.c0)) END) ORDER BY CASE WHEN LOWER(vt0.c1) THEN ROUND(vt0.c0, t0.c38) WHEN ((t0.c35)AND(t0.c35)) THEN ((vt0.c0)<>(vt0.c1)) WHEN vt0.c0 THEN ((vt0.c0) IS TRUE) ELSE (((vt0.c0, t0.c38, t0.c38))<((vt0.c0, t0.c38, t0.c38))) END DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((+ (-1.553945018E9)), t0.c35, ((NULL)OR(t0.c35))))<((((t0.c35) BETWEEN (NULL) AND (t0.c35)), ((t0.c38)>(t0.c35)), (NULL IN ()))))) ORDER BY ((((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c35))) NOT BETWEEN ((t0.c38 IN (t0.c35, t0.c35))) AND (((t0.c38) NOT BETWEEN (-3.11442559E8) AND (t0.c38))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((+ (-1.553945018E9)), t0.c35, ((NULL)OR(t0.c35))))<((((t0.c35) BETWEEN (NULL) AND (t0.c35)), ((t0.c38)>(t0.c35)), (NULL IN ()))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c35))) NOT BETWEEN ((t0.c38 IN (t0.c35, t0.c35))) AND (((t0.c38) NOT BETWEEN (-3.11442559E8) AND (t0.c38))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((+ (-1.553945018E9)), t0.c35, ((NULL)OR(t0.c35))))<((((t0.c35) BETWEEN (NULL) AND (t0.c35)), ((t0.c38)>(t0.c35)), (NULL IN ()))))) ORDER BY ((((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c35))) NOT BETWEEN ((t0.c38 IN (t0.c35, t0.c35))) AND (((t0.c38) NOT BETWEEN (-3.11442559E8) AND (t0.c38))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((+ (-1.553945018E9)), t0.c35, ((NULL)OR(t0.c35))))<((((t0.c35) BETWEEN (NULL) AND (t0.c35)), ((t0.c38)>(t0.c35)), (NULL IN ()))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c35))) NOT BETWEEN ((t0.c38 IN (t0.c35, t0.c35))) AND (((t0.c38) NOT BETWEEN (-3.11442559E8) AND (t0.c38))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((+ (-1.553945018E9)), t0.c35, ((NULL)OR(t0.c35))))<((((t0.c35) BETWEEN (NULL) AND (t0.c35)), ((t0.c38)>(t0.c35)), (NULL IN ()))))) ORDER BY ((((t0.c38) NOT BETWEEN (t0.c35) AND (t0.c35))) NOT BETWEEN ((t0.c38 IN (t0.c35, t0.c35))) AND (((t0.c38) NOT BETWEEN (-3.11442559E8) AND (t0.c38))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (NULL)) AS BLOB)) ORDER BY (((vt0.c1 IN (vt0.c0, vt0.c0, vt0.c1)))>((((vt0.c0))<((vt0.c0))))) ASC  NULLS LAST, ((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1)!=(vt0.c0))) AND (vt0.c0)) ASC, CASE (((vt0.c1))<=((vt0.c1)))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) ELSE vt0.c1 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((- (NULL)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN (vt0.c0, vt0.c0, vt0.c1)))>((((vt0.c0))<((vt0.c0))))) ASC  NULLS LAST, ((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1)<>(vt0.c0))) AND (vt0.c0)) ASC, CASE (((vt0.c1))<=((vt0.c1)))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) ELSE vt0.c1 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (NULL)) AS BLOB)) ORDER BY (((vt0.c1 IN (vt0.c0, vt0.c0, vt0.c1)))>((((vt0.c0))<((vt0.c0))))) ASC  NULLS LAST, ((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1)!=(vt0.c0))) AND (vt0.c0)) ASC, CASE (((vt0.c1))<=((vt0.c1)))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) ELSE vt0.c1 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((- (NULL)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN (vt0.c0, vt0.c0, vt0.c1)))>((((vt0.c0))<((vt0.c0))))) ASC  NULLS LAST, ((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1)<>(vt0.c0))) AND (vt0.c0)) ASC, CASE (((vt0.c1))<=((vt0.c1)))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) ELSE vt0.c1 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (NULL)) AS BLOB)) ORDER BY (((vt0.c1 IN (vt0.c0, vt0.c0, vt0.c1)))>((((vt0.c0))<((vt0.c0))))) ASC  NULLS LAST, ((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1)!=(vt0.c0))) AND (vt0.c0)) ASC, CASE (((vt0.c1))<=((vt0.c1)))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) ELSE vt0.c1 END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((- (vt0.c0))))<((((vt0.c0)&(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c0))))<((((vt0.c0)&(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((- (vt0.c0))))<((((vt0.c0)&(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c0))))<((((vt0.c0)&(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((- (vt0.c0))))<((((vt0.c0)&(vt0.c1))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((((t0.c35)IS NOT(t0.c35)))OR(((t0.c38) IS TRUE))))OR(SQLITE_COMPILEOPTION_GET(t0.c38))))OR(CAST(t0.c35 AS REAL))))AND(((t0.c35) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CASE WHEN t0.c38 THEN t0.c38 END)/(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c35)IS NOT(t0.c35)))OR(((t0.c38) IS TRUE))))OR(SQLITE_COMPILEOPTION_GET(t0.c38))))OR(CAST(t0.c35 AS REAL))))AND(((t0.c35) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE WHEN t0.c38 THEN t0.c38 END)/(vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((((t0.c35)IS NOT(t0.c35)))OR(((t0.c38) IS TRUE))))OR(SQLITE_COMPILEOPTION_GET(t0.c38))))OR(CAST(t0.c35 AS REAL))))AND(((t0.c35) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CASE WHEN t0.c38 THEN t0.c38 END)/(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c35)IS NOT(t0.c35)))OR(((t0.c38) IS TRUE))))OR(SQLITE_COMPILEOPTION_GET(t0.c38))))OR(CAST(t0.c35 AS REAL))))AND(((t0.c35) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE WHEN t0.c38 THEN t0.c38 END)/(vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((((t0.c35)IS NOT(t0.c35)))OR(((t0.c38) IS TRUE))))OR(SQLITE_COMPILEOPTION_GET(t0.c38))))OR(CAST(t0.c35 AS REAL))))AND(((t0.c35) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CASE WHEN t0.c38 THEN t0.c38 END)/(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (CASE ((t0.c35)&('%w'))  WHEN CAST(t0.c35 AS NUMERIC) THEN 0.9914800902846622 END) ORDER BY ((CAST(vt0.c1 AS TEXT))<(vt0.c1));
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c35)&('%w'))  WHEN CAST(t0.c35 AS NUMERIC) THEN 0.9914800902846622 END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(vt0.c1 AS TEXT))<(vt0.c1)));
SELECT * FROM t0, vt0 WHERE (CASE ((t0.c35)&('%w'))  WHEN CAST(t0.c35 AS NUMERIC) THEN 0.9914800902846622 END) ORDER BY ((CAST(vt0.c1 AS TEXT))<(vt0.c1));
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c35)&('%w'))  WHEN CAST(t0.c35 AS NUMERIC) THEN 0.9914800902846622 END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(vt0.c1 AS TEXT))<(vt0.c1)));
SELECT * FROM t0, vt0 WHERE (CASE ((t0.c35)&('%w'))  WHEN CAST(t0.c35 AS NUMERIC) THEN 0.9914800902846622 END) ORDER BY ((CAST(vt0.c1 AS TEXT))<(vt0.c1));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (((t0.c35)||(t0.c38))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) NOT BETWEEN (((t0.c35)||(t0.c38))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (((t0.c35)||(t0.c38))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) NOT BETWEEN (((t0.c35)||(t0.c38))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (((t0.c35)||(t0.c38))) AND ((vt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((((vt0.c0)OR(t0.c35)))AND(NULL))))) ORDER BY CAST(CASE vt0.c1  WHEN t0.c35 THEN t0.c35 END AS REAL)  NULLS FIRST, ((((t0.c35)<(t0.c38))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c0)OR(t0.c35)))AND(NULL))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(CASE vt0.c1  WHEN t0.c35 THEN t0.c35 END AS REAL)  NULLS FIRST, ((((t0.c35)<(t0.c38))) NOT NULL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((((vt0.c0)OR(t0.c35)))AND(NULL))))) ORDER BY CAST(CASE vt0.c1  WHEN t0.c35 THEN t0.c35 END AS REAL)  NULLS FIRST, ((((t0.c35)<(t0.c38))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c0)OR(t0.c35)))AND(NULL))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(CASE vt0.c1  WHEN t0.c35 THEN t0.c35 END AS REAL)  NULLS FIRST, ((((t0.c35)<(t0.c38))) NOT NULL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((((vt0.c0)OR(t0.c35)))AND(NULL))))) ORDER BY CAST(CASE vt0.c1  WHEN t0.c35 THEN t0.c35 END AS REAL)  NULLS FIRST, ((((t0.c35)<(t0.c38))) NOT NULL);
