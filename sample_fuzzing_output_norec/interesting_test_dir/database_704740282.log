-- Time: 2024/06/09 12:28:26
-- Database: database82
-- Database version: 3.40.0
-- seed value: 704740282
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1446050733); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='*U'; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES ('-577374574'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1550854215); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (9223372036854775807), (0.05721447987423822), (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES (-5.77374574E8, '633837011'), (0.13590111009889072, 'IS'), ('', -577374574); -- 0ms;
REINDEX RTRIM; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '25498'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1644667780,13');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.5604175000474556); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1634284838,6');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA cache_spill; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1976666557,9');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1644667780,14');\n; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (NULL); -- 0ms;
COMMIT; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (0X6207a384), ('0.13590111009889072'), (x''); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c2) VALUES (NULL, 0.05721447987423822); -- 0ms;
UPDATE vt1 SET c0='' WHERE ((((((((((vt1.c0)/(vt1.c0)))AND(((vt1.c0)!=(vt1.c0)))))AND(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0) IS FALSE))))AND(vt1.c0 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.3815574574074794); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1864139370,7');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '3915'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2000856400); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=138471100,14');\n; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (x''); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=''; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='138471100', c0='', c0=NULL; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -887805283);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 889659612); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 916166796); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 86362217); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1933796712); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-8.87805283E8); -- 1ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.6597359523278938); -- 0ms;
UPDATE vt1 SET c0=x''; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (''), (NULL), ('ä¿§h'); -- 0ms;
CREATE VIRTUAL TABLE vt2 USING fts5(c0 UNINDEXED, c1 UNINDEXED, c2 UNINDEXED); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''), (0X25c795d3), (x''), ('-1207218201'), (NULL); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES (-1.207218201E9); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('0.05721447987423822'); -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
UPDATE vt0 SET c0=1695375169; -- 1ms;
DELETE FROM rt0; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (1587254871); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('288799144'); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (x''); -- 9ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43035'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1560627533); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1686949953); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '61578'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x''); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES (NULL, NULL, ''), (x'', x'', NULL), ('', 0xffffffffb49b708a, 0.2057099651996337); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE (~ (((x'5cba')>=(vt0.c0)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2) VALUES (x'', -372462081); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE temp; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('646030115') WHERE ((((0.8265470845916619)>>(rt0.c2))) NOT BETWEEN ((NOT (rt0.c2))) AND (NULL)); -- 0ms;
REINDEX; -- 0ms;
UPDATE vt1 SET (c0)=(NULL) WHERE (((vt1.c0) IS TRUE) IN ()); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 41566204); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-794716733,11');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0 WHERE (UPPER(((rt0.c1)+(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c1)+(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (UPPER(((rt0.c1)+(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c1)+(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (UPPER(((rt0.c1)+(rt0.c2))));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((((((rt0.c1) NOT NULL))OR((- (vt1.c0)))))OR((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOT NULL))OR((- (vt1.c0)))))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((((((rt0.c1) NOT NULL))OR((- (vt1.c0)))))OR((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOT NULL))OR((- (vt1.c0)))))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((((((rt0.c1) NOT NULL))OR((- (vt1.c0)))))OR((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ('-1667213878') ORDER BY ((((rt0.c2)!=(rt0.c0)))<(((vt1.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1667213878') IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2)<>(rt0.c0)))<(((vt1.c0) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ('-1667213878') ORDER BY ((((rt0.c2)!=(rt0.c0)))<(((vt1.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1667213878') IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2)<>(rt0.c0)))<(((vt1.c0) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ('-1667213878') ORDER BY ((((rt0.c2)!=(rt0.c0)))<(((vt1.c0) ISNULL))) DESC;
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))AND(((vt0.c0) NOT NULL))))OR(((rt0.c0) NOT NULL))))OR(((((rt0.c0)AND(vt0.c0)))AND(rt0.c0))))) ORDER BY (~ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))AND(((vt0.c0) NOT NULL))))OR(((rt0.c0) NOT NULL))))OR(((((rt0.c0)AND(vt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))AND(((vt0.c0) NOT NULL))))OR(((rt0.c0) NOT NULL))))OR(((((rt0.c0)AND(vt0.c0)))AND(rt0.c0))))) ORDER BY (~ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))AND(((vt0.c0) NOT NULL))))OR(((rt0.c0) NOT NULL))))OR(((((rt0.c0)AND(vt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))AND(((vt0.c0) NOT NULL))))OR(((rt0.c0) NOT NULL))))OR(((((rt0.c0)AND(vt0.c0)))AND(rt0.c0))))) ORDER BY (~ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY 0.5282337971257017 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.5282337971257017 COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY 0.5282337971257017 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.5282337971257017 COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY 0.5282337971257017 COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (NULL);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c0))) IN ())) ORDER BY ((-5.77374574E8)>>(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0 ORDER BY ((-5.77374574E8)>>(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c0))) IN ())) ORDER BY ((-5.77374574E8)>>(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0 ORDER BY ((-5.77374574E8)>>(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c0))) IN ())) ORDER BY ((-5.77374574E8)>>(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((vt1.c0))));
SELECT ALL * FROM rt0, vt0 CROSS JOIN vt1 ON NULL WHERE ((+ (rt0.c0))) ORDER BY (((vt1.c0)IS(vt1.c0)) IN ()), ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (vt1.c0) AND (CAST(rt0.c0 AS REAL))) ASC, ((((x'')AND(((rt0.c2)&(0.22617473307311053)))))OR((('1587254871')>(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt1 ON NULL ORDER BY (((vt1.c0)IS(vt1.c0)) IN ()), ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (vt1.c0) AND (CAST(rt0.c0 AS REAL))) ASC, ((((x'')AND(((rt0.c2)&(0.22617473307311053)))))OR((('1587254871')>(rt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 CROSS JOIN vt1 ON NULL WHERE ((+ (rt0.c0))) ORDER BY (((vt1.c0)IS(vt1.c0)) IN ()), ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (vt1.c0) AND (CAST(rt0.c0 AS REAL))) ASC, ((((x'')AND(((rt0.c2)&(0.22617473307311053)))))OR((('1587254871')>(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt1 ON NULL ORDER BY (((vt1.c0)IS(vt1.c0)) IN ()), ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (vt1.c0) AND (CAST(rt0.c0 AS REAL))) ASC, ((((x'')AND(((rt0.c2)&(0.22617473307311053)))))OR((('1587254871')>(rt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 CROSS JOIN vt1 ON NULL WHERE ((+ (rt0.c0))) ORDER BY (((vt1.c0)IS(vt1.c0)) IN ()), ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (vt1.c0) AND (CAST(rt0.c0 AS REAL))) ASC, ((((x'')AND(((rt0.c2)&(0.22617473307311053)))))OR((('1587254871')>(rt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) ORDER BY vt1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0) IS TRUE)) BETWEEN (((rt0.c1)<<(x'e736'))) AND (((rt0.c0)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) BETWEEN (((rt0.c1)<<(x'e736'))) AND (((rt0.c0)GLOB(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0) IS TRUE)) BETWEEN (((rt0.c1)<<(x'e736'))) AND (((rt0.c0)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) BETWEEN (((rt0.c1)<<(x'e736'))) AND (((rt0.c0)GLOB(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0) IS TRUE)) BETWEEN (((rt0.c1)<<(x'e736'))) AND (((rt0.c0)GLOB(rt0.c2)))));
SELECT * FROM vt0, rt0, vt1 WHERE (((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON (((rt0.c2 IN ()))<((~ (vt0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON (((rt0.c2 IN ()))<((~ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON (((rt0.c2 IN ()))<((~ (vt0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON (((rt0.c2 IN ()))<((~ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON (((rt0.c2 IN ()))<((~ (vt0.c0)))) WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN rt0 ON NULL WHERE (((NULL)/(((((NULL)AND(vt0.c0)))AND(rt0.c2))))) ORDER BY ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)/(((((NULL)AND(vt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON NULL ORDER BY ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN rt0 ON NULL WHERE (((NULL)/(((((NULL)AND(vt0.c0)))AND(rt0.c2))))) ORDER BY ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)/(((((NULL)AND(vt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON NULL ORDER BY ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN rt0 ON NULL WHERE (((NULL)/(((((NULL)AND(vt0.c0)))AND(rt0.c2))))) ORDER BY ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) IS TRUE) ASC;
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CASE COALESCE(DISTINCT vt0.c0, rt0.c2)  WHEN (- (rt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE IFNULL(vt1.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT vt0.c0, rt0.c2)  WHEN (- (rt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE IFNULL(vt1.c0, vt1.c0) END) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CASE COALESCE(DISTINCT vt0.c0, rt0.c2)  WHEN (- (rt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE IFNULL(vt1.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT vt0.c0, rt0.c2)  WHEN (- (rt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE IFNULL(vt1.c0, vt1.c0) END) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CASE COALESCE(DISTINCT vt0.c0, rt0.c2)  WHEN (- (rt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE IFNULL(vt1.c0, vt1.c0) END);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON vt1.c0 COLLATE RTRIM WHERE ((('1587254871')<=(((rt0.c0)>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((('1587254871')<=(((rt0.c0)>(vt1.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON vt1.c0 COLLATE RTRIM);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON vt1.c0 COLLATE RTRIM WHERE ((('1587254871')<=(((rt0.c0)>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((('1587254871')<=(((rt0.c0)>(vt1.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON vt1.c0 COLLATE RTRIM);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON vt1.c0 COLLATE RTRIM WHERE ((('1587254871')<=(((rt0.c0)>(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (689543777) AND (rt0.c2))  WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE rt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) NOT BETWEEN (689543777) AND (rt0.c2))  WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE rt0.c0 END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (689543777) AND (rt0.c2))  WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE rt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) NOT BETWEEN (689543777) AND (rt0.c2))  WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE rt0.c0 END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (689543777) AND (rt0.c2))  WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE rt0.c0 END);
SELECT ALL * FROM vt1, vt0, rt0 NOT INDEXED WHERE ((((vt1.c0)) NOT BETWEEN (((NOT (0.6105869791704382)))) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (((NOT (0.6105869791704382)))) AND ((rt0.c1)))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 NOT INDEXED WHERE ((((vt1.c0)) NOT BETWEEN (((NOT (0.6105869791704382)))) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (((NOT (0.6105869791704382)))) AND ((rt0.c1)))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 NOT INDEXED WHERE ((((vt1.c0)) NOT BETWEEN (((NOT (0.6105869791704382)))) AND ((rt0.c1))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)-((((vt1.c0))<=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)-((((vt1.c0))<=((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)-((((vt1.c0))<=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)-((((vt1.c0))<=((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)-((((vt1.c0))<=((vt1.c0))))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)<>(rt0.c0)))*((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<>(rt0.c0)))*((~ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)<>(rt0.c0)))*((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<>(rt0.c0)))*((~ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)<>(rt0.c0)))*((~ (rt0.c1)))));
SELECT * FROM vt1, rt0, vt0 WHERE (689543777) ORDER BY (NOT (((rt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((689543777) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (NOT (((rt0.c1) NOTNULL))));
SELECT * FROM vt1, rt0, vt0 WHERE (689543777) ORDER BY (NOT (((rt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((689543777) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (NOT (((rt0.c1) NOTNULL))));
SELECT * FROM vt1, rt0, vt0 WHERE (689543777) ORDER BY (NOT (((rt0.c1) NOTNULL)));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON vt1.c0 LEFT OUTER JOIN vt0 ON NULL WHERE ((((rt0.c2 IN (vt1.c0))) NOT BETWEEN (((x'') BETWEEN (vt1.c0) AND (rt0.c2))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (vt1.c0))) NOT BETWEEN (((x'') BETWEEN (vt1.c0) AND (rt0.c2))) AND (vt0.c0))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON vt1.c0 LEFT OUTER JOIN vt0 ON NULL);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON vt1.c0 LEFT OUTER JOIN vt0 ON NULL WHERE ((((rt0.c2 IN (vt1.c0))) NOT BETWEEN (((x'') BETWEEN (vt1.c0) AND (rt0.c2))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (vt1.c0))) NOT BETWEEN (((x'') BETWEEN (vt1.c0) AND (rt0.c2))) AND (vt0.c0))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON vt1.c0 LEFT OUTER JOIN vt0 ON NULL);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON vt1.c0 LEFT OUTER JOIN vt0 ON NULL WHERE ((((rt0.c2 IN (vt1.c0))) NOT BETWEEN (((x'') BETWEEN (vt1.c0) AND (rt0.c2))) AND (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON HEX(DISTINCT ((x'')||(rt0.c2))) WHERE (((((((((((((((((('-794716733' IN ()))AND((('-1793560662')/(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 END)))OR(vt0.c0 COLLATE NOCASE)))AND((((rt0.c0, vt0.c0, vt0.c0))<>((rt0.c0, vt0.c0, rt0.c1))))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (-372462081)))))OR((- (rt0.c2)))))OR(rt0.c0 COLLATE NOCASE)))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((('-794716733' IN ()))AND((('-1793560662')/(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 END)))OR(vt0.c0 COLLATE NOCASE)))AND((((rt0.c0, vt0.c0, vt0.c0))<>((rt0.c0, vt0.c0, rt0.c1))))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (-372462081)))))OR((- (rt0.c2)))))OR(rt0.c0 COLLATE NOCASE)))OR(rt0.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON HEX(DISTINCT ((x'')||(rt0.c2))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON HEX(DISTINCT ((x'')||(rt0.c2))) WHERE (((((((((((((((((('-794716733' IN ()))AND((('-1793560662')/(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 END)))OR(vt0.c0 COLLATE NOCASE)))AND((((rt0.c0, vt0.c0, vt0.c0))<>((rt0.c0, vt0.c0, rt0.c1))))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (-372462081)))))OR((- (rt0.c2)))))OR(rt0.c0 COLLATE NOCASE)))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((('-794716733' IN ()))AND((('-1793560662')/(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 END)))OR(vt0.c0 COLLATE NOCASE)))AND((((rt0.c0, vt0.c0, vt0.c0))<>((rt0.c0, vt0.c0, rt0.c1))))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (-372462081)))))OR((- (rt0.c2)))))OR(rt0.c0 COLLATE NOCASE)))OR(rt0.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON HEX(DISTINCT ((x'')||(rt0.c2))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON HEX(DISTINCT ((x'')||(rt0.c2))) WHERE (((((((((((((((((('-794716733' IN ()))AND((('-1793560662')/(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 END)))OR(vt0.c0 COLLATE NOCASE)))AND((((rt0.c0, vt0.c0, vt0.c0))<>((rt0.c0, vt0.c0, rt0.c1))))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (-372462081)))))OR((- (rt0.c2)))))OR(rt0.c0 COLLATE NOCASE)))OR(rt0.c0)));
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((((- (rt0.c2)))OR(((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))))AND(COALESCE(DISTINCT vt0.c0, vt1.c0)))) ORDER BY (((x'139c81cf', ((((vt0.c0)AND(rt0.c1)))OR(vt1.c0)), CASE WHEN 'å½4' THEN vt0.c0 END))>=(((rt0.c2 IN (x'')), (((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c1))), (- (rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c2)))OR(((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))))AND(COALESCE(DISTINCT vt0.c0, vt1.c0)))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((x'139c81cf', ((((vt0.c0)AND(rt0.c1)))OR(vt1.c0)), CASE WHEN 'å½4' THEN vt0.c0 END))>=(((rt0.c2 IN (x'')), (((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c1))), (- (rt0.c0))))) DESC);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((((- (rt0.c2)))OR(((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))))AND(COALESCE(DISTINCT vt0.c0, vt1.c0)))) ORDER BY (((x'139c81cf', ((((vt0.c0)AND(rt0.c1)))OR(vt1.c0)), CASE WHEN 'å½4' THEN vt0.c0 END))>=(((rt0.c2 IN (x'')), (((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c1))), (- (rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c2)))OR(((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))))AND(COALESCE(DISTINCT vt0.c0, vt1.c0)))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((x'139c81cf', ((((vt0.c0)AND(rt0.c1)))OR(vt1.c0)), CASE WHEN 'å½4' THEN vt0.c0 END))>=(((rt0.c2 IN (x'')), (((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c1))), (- (rt0.c0))))) DESC);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((((- (rt0.c2)))OR(((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))))AND(COALESCE(DISTINCT vt0.c0, vt1.c0)))) ORDER BY (((x'139c81cf', ((((vt0.c0)AND(rt0.c1)))OR(vt1.c0)), CASE WHEN 'å½4' THEN vt0.c0 END))>=(((rt0.c2 IN (x'')), (((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c1))), (- (rt0.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c2 COLLATE RTRIM)IS NOT(HEX(vt0.c0))) WHERE (CAST((- (rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c2 COLLATE RTRIM)IS NOT(HEX(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c2 COLLATE RTRIM)IS NOT(HEX(vt0.c0))) WHERE (CAST((- (rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c2 COLLATE RTRIM)IS NOT(HEX(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c2 COLLATE RTRIM)IS NOT(HEX(vt0.c0))) WHERE (CAST((- (rt0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY WHERE ((((vt1.c0)) BETWEEN (((+ (rt0.c0)))) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((+ (rt0.c0)))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY WHERE ((((vt1.c0)) BETWEEN (((+ (rt0.c0)))) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((+ (rt0.c0)))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY WHERE ((((vt1.c0)) BETWEEN (((+ (rt0.c0)))) AND ((rt0.c2))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0)OR(NULL)))AND(rt0.c2 COLLATE BINARY)))OR(-7.94716733E8 COLLATE BINARY)))AND((~ (rt0.c1)))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0)OR(NULL)))AND(rt0.c2 COLLATE BINARY)))OR(-7.94716733E8 COLLATE BINARY)))AND((~ (rt0.c1)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0)OR(NULL)))AND(rt0.c2 COLLATE BINARY)))OR(-7.94716733E8 COLLATE BINARY)))AND((~ (rt0.c1)))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0)OR(NULL)))AND(rt0.c2 COLLATE BINARY)))OR(-7.94716733E8 COLLATE BINARY)))AND((~ (rt0.c1)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0)OR(NULL)))AND(rt0.c2 COLLATE BINARY)))OR(-7.94716733E8 COLLATE BINARY)))AND((~ (rt0.c1)))) WHERE (rt0.c0);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((NULL COLLATE NOCASE)+(CAST(rt0.c0 AS TEXT))) INNER JOIN vt1 ON ((((((rt0.c1)GLOB(vt0.c0)))AND(((x'') BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (((((rt0.c1)<>(rt0.c2))) NOT BETWEEN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (- (rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<>(rt0.c2))) NOT BETWEEN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((NULL COLLATE NOCASE)+(CAST(rt0.c0 AS TEXT))) INNER JOIN vt1 ON ((((((rt0.c1)GLOB(vt0.c0)))AND(((x'') BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY (- (rt0.c2))  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((NULL COLLATE NOCASE)+(CAST(rt0.c0 AS TEXT))) INNER JOIN vt1 ON ((((((rt0.c1)GLOB(vt0.c0)))AND(((x'') BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (((((rt0.c1)<>(rt0.c2))) NOT BETWEEN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (- (rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<>(rt0.c2))) NOT BETWEEN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((NULL COLLATE NOCASE)+(CAST(rt0.c0 AS TEXT))) INNER JOIN vt1 ON ((((((rt0.c1)GLOB(vt0.c0)))AND(((x'') BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY (- (rt0.c2))  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((NULL COLLATE NOCASE)+(CAST(rt0.c0 AS TEXT))) INNER JOIN vt1 ON ((((((rt0.c1)GLOB(vt0.c0)))AND(((x'') BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (((((rt0.c1)<>(rt0.c2))) NOT BETWEEN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (- (rt0.c2))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((('')) BETWEEN ((((NULL) NOTNULL))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)))) ORDER BY ((((rt0.c2)GLOB(rt0.c0)))<>(((rt0.c1)AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('')) BETWEEN ((((NULL) NOTNULL))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)GLOB(rt0.c0)))<>(((rt0.c1)AND(rt0.c2)))) ASC);
SELECT * FROM rt0 WHERE (((('')) BETWEEN ((((NULL) NOTNULL))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)))) ORDER BY ((((rt0.c2)GLOB(rt0.c0)))<>(((rt0.c1)AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('')) BETWEEN ((((NULL) NOTNULL))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)GLOB(rt0.c0)))<>(((rt0.c1)AND(rt0.c2)))) ASC);
SELECT * FROM rt0 WHERE (((('')) BETWEEN ((((NULL) NOTNULL))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)))) ORDER BY ((((rt0.c2)GLOB(rt0.c0)))<>(((rt0.c1)AND(rt0.c2)))) ASC;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (x'') ORDER BY 0xffffffffbaa15752  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY 0Xffffffffbaa15752  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (x'') ORDER BY 0xffffffffbaa15752  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY 0Xffffffffbaa15752  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (x'') ORDER BY 0xffffffffbaa15752  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) IS TRUE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) IS TRUE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) IS TRUE)) NOT NULL));
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))<(((('72583599')) BETWEEN (('257932978')) AND ((vt0.c0))))) WHERE ((+ (rt0.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))<(((('72583599')) BETWEEN (('257932978')) AND ((vt0.c0))))));
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))<(((('72583599')) BETWEEN (('257932978')) AND ((vt0.c0))))) WHERE ((+ (rt0.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))<(((('72583599')) BETWEEN (('257932978')) AND ((vt0.c0))))));
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))<(((('72583599')) BETWEEN (('257932978')) AND ((vt0.c0))))) WHERE ((+ (rt0.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT * FROM vt0 WHERE ('-507805495') ORDER BY ((vt0.c0)IS(((vt0.c0)|(vt0.c0))))  NULLS FIRST, CASE WHEN ((0.33649618238135737) ISNULL) THEN vt0.c0 COLLATE BINARY END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-507805495') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS(((vt0.c0)|(vt0.c0))))  NULLS FIRST, CASE WHEN ((0.33649618238135737) ISNULL) THEN vt0.c0 COLLATE BINARY END  NULLS FIRST);
SELECT * FROM vt0 WHERE ('-507805495') ORDER BY ((vt0.c0)IS(((vt0.c0)|(vt0.c0))))  NULLS FIRST, CASE WHEN ((0.33649618238135737) ISNULL) THEN vt0.c0 COLLATE BINARY END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-507805495') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS(((vt0.c0)|(vt0.c0))))  NULLS FIRST, CASE WHEN ((0.33649618238135737) ISNULL) THEN vt0.c0 COLLATE BINARY END  NULLS FIRST);
SELECT * FROM vt0 WHERE ('-507805495') ORDER BY ((vt0.c0)IS(((vt0.c0)|(vt0.c0))))  NULLS FIRST, CASE WHEN ((0.33649618238135737) ISNULL) THEN vt0.c0 COLLATE BINARY END  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (rt0.c1);
SELECT * FROM vt1, vt0 WHERE (TRIM((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((vt0.c0) NOT BETWEEN ('Ff') AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((vt0.c0) NOT BETWEEN ('Ff') AND (vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (TRIM((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((vt0.c0) NOT BETWEEN ('Ff') AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((vt0.c0) NOT BETWEEN ('Ff') AND (vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (TRIM((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((vt0.c0) NOT BETWEEN ('Ff') AND (vt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) IS FALSE) THEN QUOTE(rt0.c1) ELSE '0.8265470845916619' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) IS FALSE) THEN QUOTE(rt0.c1) ELSE '0.8265470845916619' END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) IS FALSE) THEN QUOTE(rt0.c1) ELSE '0.8265470845916619' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) IS FALSE) THEN QUOTE(rt0.c1) ELSE '0.8265470845916619' END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) IS FALSE) THEN QUOTE(rt0.c1) ELSE '0.8265470845916619' END);
SELECT * FROM rt0, vt0 WHERE (CAST(((rt0.c0) ISNULL) AS BLOB)) ORDER BY ((rt0.c2 COLLATE BINARY)||(LIKELIHOOD(vt0.c0, 0.18607270384133978))) ASC, LIKELY(((rt0.c2)AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2 COLLATE BINARY)||(LIKELIHOOD(vt0.c0, 0.18607270384133978))) ASC, LIKELY(((rt0.c2)AND(rt0.c2))));
SELECT * FROM rt0, vt0 WHERE (CAST(((rt0.c0) ISNULL) AS BLOB)) ORDER BY ((rt0.c2 COLLATE BINARY)||(LIKELIHOOD(vt0.c0, 0.18607270384133978))) ASC, LIKELY(((rt0.c2)AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2 COLLATE BINARY)||(LIKELIHOOD(vt0.c0, 0.18607270384133978))) ASC, LIKELY(((rt0.c2)AND(rt0.c2))));
SELECT * FROM rt0, vt0 WHERE (CAST(((rt0.c0) ISNULL) AS BLOB)) ORDER BY ((rt0.c2 COLLATE BINARY)||(LIKELIHOOD(vt0.c0, 0.18607270384133978))) ASC, LIKELY(((rt0.c2)AND(rt0.c2)));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1)) BETWEEN (('')) AND ((497654557))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (('')) AND ((497654557)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1)) BETWEEN (('')) AND ((497654557))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (('')) AND ((497654557)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1)) BETWEEN (('')) AND ((497654557))));
SELECT COUNT(*) FROM rt0 WHERE (x'5d26');
SELECT SUM(count) FROM (SELECT ALL ((x'5d26') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'5d26');
SELECT SUM(count) FROM (SELECT ALL ((x'5d26') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'5d26');
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN (vt1.c0 IN ()) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN x'367d' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY ((vt1.c0)|(((((((((x'')OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE NOCASE THEN (vt1.c0 IN ()) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN x'367d' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)|(((((((((x'')OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN (vt1.c0 IN ()) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN x'367d' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY ((vt1.c0)|(((((((((x'')OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE NOCASE THEN (vt1.c0 IN ()) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN x'367d' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)|(((((((((x'')OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN (vt1.c0 IN ()) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN x'367d' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY ((vt1.c0)|(((((((((x'')OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) ASC;
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((+ (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS REAL))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((+ (NULL))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((+ (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS REAL))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((+ (NULL))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((+ (NULL)))));
SELECT * FROM rt0 WHERE ((~ (((rt0.c0) IS TRUE)))) ORDER BY ((LIKELY(rt0.c2))-(CAST(rt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELY(rt0.c2))-(CAST(rt0.c0 AS INTEGER))));
SELECT * FROM rt0 WHERE ((~ (((rt0.c0) IS TRUE)))) ORDER BY ((LIKELY(rt0.c2))-(CAST(rt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELY(rt0.c2))-(CAST(rt0.c0 AS INTEGER))));
SELECT * FROM rt0 WHERE ((~ (((rt0.c0) IS TRUE)))) ORDER BY ((LIKELY(rt0.c2))-(CAST(rt0.c0 AS INTEGER)));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((rt0.c2)/(rt0.c1))) IS FALSE) CROSS JOIN rt0 ON (+ ((((rt0.c2))>((rt0.c2))))) WHERE ((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)), CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 ELSE vt0.c0 END, ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c2)))) AND (((NOT ('138471100')), CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c0 END, (vt0.c0 IN ()))))) ORDER BY ((((rt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS NUMERIC))))OR(rt0.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)), CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 ELSE vt0.c0 END, ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c2)))) AND (((NOT ('138471100')), CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c0 END, (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((rt0.c2)/(rt0.c1))) IS FALSE) CROSS JOIN rt0 ON (+ ((((rt0.c2))>((rt0.c2))))) ORDER BY ((((rt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS NUMERIC))))OR(rt0.c2 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((rt0.c2)/(rt0.c1))) IS FALSE) CROSS JOIN rt0 ON (+ ((((rt0.c2))>((rt0.c2))))) WHERE ((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)), CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 ELSE vt0.c0 END, ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c2)))) AND (((NOT ('138471100')), CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c0 END, (vt0.c0 IN ()))))) ORDER BY ((((rt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS NUMERIC))))OR(rt0.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)), CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 ELSE vt0.c0 END, ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c2)))) AND (((NOT ('138471100')), CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c0 END, (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((rt0.c2)/(rt0.c1))) IS FALSE) CROSS JOIN rt0 ON (+ ((((rt0.c2))>((rt0.c2))))) ORDER BY ((((rt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS NUMERIC))))OR(rt0.c2 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((rt0.c2)/(rt0.c1))) IS FALSE) CROSS JOIN rt0 ON (+ ((((rt0.c2))>((rt0.c2))))) WHERE ((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)), CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 ELSE vt0.c0 END, ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c2)))) AND (((NOT ('138471100')), CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c0 END, (vt0.c0 IN ()))))) ORDER BY ((((rt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS NUMERIC))))OR(rt0.c2 COLLATE RTRIM)) ASC;
SELECT * FROM vt0, rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c2 END))>=((CAST(rt0.c0 AS BLOB))))) ORDER BY 0.2847358284843192 ASC, (~ (vt0.c0)) ASC, (((~ (rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (vt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c0 THEN rt0.c2 END))>=((CAST(rt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.2847358284843192 ASC, (~ (vt0.c0)) ASC, (((~ (rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (vt0.c0 COLLATE RTRIM)) DESC);
SELECT * FROM vt0, rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c2 END))>=((CAST(rt0.c0 AS BLOB))))) ORDER BY 0.2847358284843192 ASC, (~ (vt0.c0)) ASC, (((~ (rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (vt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c0 THEN rt0.c2 END))>=((CAST(rt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.2847358284843192 ASC, (~ (vt0.c0)) ASC, (((~ (rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (vt0.c0 COLLATE RTRIM)) DESC);
SELECT * FROM vt0, rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c2 END))>=((CAST(rt0.c0 AS BLOB))))) ORDER BY 0.2847358284843192 ASC, (~ (vt0.c0)) ASC, (((~ (rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (vt0.c0 COLLATE RTRIM)) DESC;
SELECT ALL * FROM vt0, rt0, vt1 WHERE ('rQAeRr' COLLATE NOCASE) ORDER BY ((((vt1.c0)<<(vt1.c0)))/(CAST(vt0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('rQAeRr' COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((vt1.c0)<<(vt1.c0)))/(CAST(vt0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ('rQAeRr' COLLATE NOCASE) ORDER BY ((((vt1.c0)<<(vt1.c0)))/(CAST(vt0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('rQAeRr' COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((vt1.c0)<<(vt1.c0)))/(CAST(vt0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ('rQAeRr' COLLATE NOCASE) ORDER BY ((((vt1.c0)<<(vt1.c0)))/(CAST(vt0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0, rt0 WHERE (((vt1.c0)>=(vt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c2 IN ())) NOT NULL) DESC, SQLITE_COMPILEOPTION_GET(CAST(rt0.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((rt0.c2 IN ())) NOT NULL) DESC, SQLITE_COMPILEOPTION_GET(CAST(rt0.c1 AS BLOB)));
SELECT * FROM vt1, vt0, rt0 WHERE (((vt1.c0)>=(vt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c2 IN ())) NOT NULL) DESC, SQLITE_COMPILEOPTION_GET(CAST(rt0.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((rt0.c2 IN ())) NOT NULL) DESC, SQLITE_COMPILEOPTION_GET(CAST(rt0.c1 AS BLOB)));
SELECT * FROM vt1, vt0, rt0 WHERE (((vt1.c0)>=(vt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c2 IN ())) NOT NULL) DESC, SQLITE_COMPILEOPTION_GET(CAST(rt0.c1 AS BLOB));
SELECT ALL * FROM rt0, vt1 WHERE (CASE ((rt0.c2)|(vt1.c0))  WHEN ((rt0.c2) NOT BETWEEN (x'0bf6') AND (vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) WHEN (NOT (rt0.c2)) THEN (('FALSE')&(vt1.c0)) WHEN ((((((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(x'')) THEN rt0.c1 ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END END) ORDER BY '-1283818779'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)|(vt1.c0))  WHEN ((rt0.c2) NOT BETWEEN (x'0bf6') AND (vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) WHEN (NOT (rt0.c2)) THEN (('FALSE')&(vt1.c0)) WHEN ((((((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(x'')) THEN rt0.c1 ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0, vt1 ORDER BY '-1283818779'  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (CASE ((rt0.c2)|(vt1.c0))  WHEN ((rt0.c2) NOT BETWEEN (x'0bf6') AND (vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) WHEN (NOT (rt0.c2)) THEN (('FALSE')&(vt1.c0)) WHEN ((((((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(x'')) THEN rt0.c1 ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END END) ORDER BY '-1283818779'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)|(vt1.c0))  WHEN ((rt0.c2) NOT BETWEEN (x'0bf6') AND (vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) WHEN (NOT (rt0.c2)) THEN (('FALSE')&(vt1.c0)) WHEN ((((((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(x'')) THEN rt0.c1 ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0, vt1 ORDER BY '-1283818779'  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (CASE ((rt0.c2)|(vt1.c0))  WHEN ((rt0.c2) NOT BETWEEN (x'0bf6') AND (vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) WHEN (NOT (rt0.c2)) THEN (('FALSE')&(vt1.c0)) WHEN ((((((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(x'')) THEN rt0.c1 ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END END) ORDER BY '-1283818779'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CAST(((vt1.c0)||(NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)||(NULL)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CAST(((vt1.c0)||(NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)||(NULL)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CAST(((vt1.c0)||(NULL)) AS INTEGER));
SELECT * FROM rt0, vt0 WHERE (((CHANGES()) BETWEEN (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c2))) AND (NULL))) ORDER BY ((CAST(vt0.c0 AS TEXT))%(((NULL) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((((CHANGES()) BETWEEN (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c2))) AND (NULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))%(((NULL) NOT NULL))));
SELECT * FROM rt0, vt0 WHERE (((CHANGES()) BETWEEN (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c2))) AND (NULL))) ORDER BY ((CAST(vt0.c0 AS TEXT))%(((NULL) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((((CHANGES()) BETWEEN (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c2))) AND (NULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))%(((NULL) NOT NULL))));
SELECT * FROM rt0, vt0 WHERE (((CHANGES()) BETWEEN (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c2))) AND (NULL))) ORDER BY ((CAST(vt0.c0 AS TEXT))%(((NULL) NOT NULL)));
SELECT ALL * FROM rt0, vt0 WHERE (IFNULL(((rt0.c2)GLOB(rt0.c2)), vt0.c0 COLLATE NOCASE)) ORDER BY MAX((('-1308243833') IS TRUE), (NOT (rt0.c2))) ASC, rt0.c2  NULLS LAST, TYPEOF((rt0.c2 IN (NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt0.c2)GLOB(rt0.c2)), vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY MAX((('-1308243833') IS TRUE), (NOT (rt0.c2))) ASC, rt0.c2  NULLS LAST, TYPEOF((rt0.c2 IN (NULL)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (IFNULL(((rt0.c2)GLOB(rt0.c2)), vt0.c0 COLLATE NOCASE)) ORDER BY MAX((('-1308243833') IS TRUE), (NOT (rt0.c2))) ASC, rt0.c2  NULLS LAST, TYPEOF((rt0.c2 IN (NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt0.c2)GLOB(rt0.c2)), vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY MAX((('-1308243833') IS TRUE), (NOT (rt0.c2))) ASC, rt0.c2  NULLS LAST, TYPEOF((rt0.c2 IN (NULL)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (IFNULL(((rt0.c2)GLOB(rt0.c2)), vt0.c0 COLLATE NOCASE)) ORDER BY MAX((('-1308243833') IS TRUE), (NOT (rt0.c2))) ASC, rt0.c2  NULLS LAST, TYPEOF((rt0.c2 IN (NULL)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c1)AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (CAST(((rt0.c2) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (CAST(((rt0.c2) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (CAST(((rt0.c2) NOTNULL) AS BLOB));
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((((+ (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((((+ (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((((+ (rt0.c2))) IS TRUE));
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS TEXT))));
SELECT * FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((x'')OR(rt0.c1)))) CROSS JOIN vt0 ON json_extract(x'', ((rt0.c0)AND(rt0.c2))) WHERE ((((rt0.c1)) BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((rt0.c2 IN ()))))) ORDER BY ((0.6105869791704382) BETWEEN (((vt1.c0)-(rt0.c0))) AND (UNICODE(rt0.c2))) ASC  NULLS FIRST, TRIM(DISTINCT CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN x'' ELSE rt0.c2 END, ((rt0.c2) IS TRUE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((x'')OR(rt0.c1)))) CROSS JOIN vt0 ON json_extract(x'', ((rt0.c0)AND(rt0.c2))) ORDER BY ((0.6105869791704382) BETWEEN (((vt1.c0)-(rt0.c0))) AND (UNICODE(rt0.c2))) ASC  NULLS FIRST, TRIM(DISTINCT CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN x'' ELSE rt0.c2 END, ((rt0.c2) IS TRUE)) ASC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((x'')OR(rt0.c1)))) CROSS JOIN vt0 ON json_extract(x'', ((rt0.c0)AND(rt0.c2))) WHERE ((((rt0.c1)) BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((rt0.c2 IN ()))))) ORDER BY ((0.6105869791704382) BETWEEN (((vt1.c0)-(rt0.c0))) AND (UNICODE(rt0.c2))) ASC  NULLS FIRST, TRIM(DISTINCT CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN x'' ELSE rt0.c2 END, ((rt0.c2) IS TRUE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((x'')OR(rt0.c1)))) CROSS JOIN vt0 ON json_extract(x'', ((rt0.c0)AND(rt0.c2))) ORDER BY ((0.6105869791704382) BETWEEN (((vt1.c0)-(rt0.c0))) AND (UNICODE(rt0.c2))) ASC  NULLS FIRST, TRIM(DISTINCT CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN x'' ELSE rt0.c2 END, ((rt0.c2) IS TRUE)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt1.c0) BETWEEN (vt0.c0) AND (0.926987923416857)))AND((vt1.c0 IN (vt1.c0)))))AND(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))))OR((- (vt1.c0)))))AND(((NULL)OR(vt1.c0))))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0) BETWEEN (vt0.c0) AND (0.926987923416857)))AND((vt1.c0 IN (vt1.c0)))))AND(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))))OR((- (vt1.c0)))))AND(((NULL)OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt1.c0) BETWEEN (vt0.c0) AND (0.926987923416857)))AND((vt1.c0 IN (vt1.c0)))))AND(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))))OR((- (vt1.c0)))))AND(((NULL)OR(vt1.c0))))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0) BETWEEN (vt0.c0) AND (0.926987923416857)))AND((vt1.c0 IN (vt1.c0)))))AND(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))))OR((- (vt1.c0)))))AND(((NULL)OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt1.c0) BETWEEN (vt0.c0) AND (0.926987923416857)))AND((vt1.c0 IN (vt1.c0)))))AND(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))))OR((- (vt1.c0)))))AND(((NULL)OR(vt1.c0))))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0 IN ()))+(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))+(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0 IN ()))+(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))+(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0 IN ()))+(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY UNLIKELY(vt1.c0 COLLATE BINARY) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY UNLIKELY(vt1.c0 COLLATE BINARY) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY UNLIKELY(vt1.c0 COLLATE BINARY) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY UNLIKELY(vt1.c0 COLLATE BINARY) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY UNLIKELY(vt1.c0 COLLATE BINARY) DESC;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON TRIM((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), (vt0.c0 IN (vt0.c0))) WHERE (LIKELY(DISTINCT ((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt0.c1) NOT NULL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON TRIM((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), (vt0.c0 IN (vt0.c0))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON TRIM((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), (vt0.c0 IN (vt0.c0))) WHERE (LIKELY(DISTINCT ((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt0.c1) NOT NULL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON TRIM((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), (vt0.c0 IN (vt0.c0))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON TRIM((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), (vt0.c0 IN (vt0.c0))) WHERE (LIKELY(DISTINCT ((rt0.c1) NOT NULL)));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (CAST('689543777' AS TEXT)) ORDER BY (((vt1.c0 IN ()))%(((vt1.c0)>=(rt0.c2))))  NULLS FIRST, CHANGES() DESC, (- ((+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((CAST('689543777' AS TEXT)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY (((vt1.c0 IN ()))%(((vt1.c0)>=(rt0.c2))))  NULLS FIRST, CHANGES() DESC, (- ((+ (rt0.c1)))));
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (CAST('689543777' AS TEXT)) ORDER BY (((vt1.c0 IN ()))%(((vt1.c0)>=(rt0.c2))))  NULLS FIRST, CHANGES() DESC, (- ((+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((CAST('689543777' AS TEXT)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY (((vt1.c0 IN ()))%(((vt1.c0)>=(rt0.c2))))  NULLS FIRST, CHANGES() DESC, (- ((+ (rt0.c1)))));
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (CAST('689543777' AS TEXT)) ORDER BY (((vt1.c0 IN ()))%(((vt1.c0)>=(rt0.c2))))  NULLS FIRST, CHANGES() DESC, (- ((+ (rt0.c1))));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (TRIM(((((rt0.c0)OR(rt0.c2)))AND('')), ((vt0.c0)OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((rt0.c0)OR(rt0.c2)))AND('')), ((vt0.c0)OR(vt1.c0)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (TRIM(((((rt0.c0)OR(rt0.c2)))AND('')), ((vt0.c0)OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((rt0.c0)OR(rt0.c2)))AND('')), ((vt0.c0)OR(vt1.c0)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (TRIM(((((rt0.c0)OR(rt0.c2)))AND('')), ((vt0.c0)OR(vt1.c0))));
SELECT ALL * FROM rt0 WHERE (((rt0.c0)OR(rt0.c2)) COLLATE BINARY) ORDER BY (HEX(rt0.c0) IN ()) ASC  NULLS FIRST, ((rt0.c0)*(CASE WHEN rt0.c1 THEN rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)OR(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (HEX(rt0.c0) IN ()) ASC  NULLS FIRST, ((rt0.c0)*(CASE WHEN rt0.c1 THEN rt0.c1 END)) DESC);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)OR(rt0.c2)) COLLATE BINARY) ORDER BY (HEX(rt0.c0) IN ()) ASC  NULLS FIRST, ((rt0.c0)*(CASE WHEN rt0.c1 THEN rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)OR(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (HEX(rt0.c0) IN ()) ASC  NULLS FIRST, ((rt0.c0)*(CASE WHEN rt0.c1 THEN rt0.c1 END)) DESC);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)OR(rt0.c2)) COLLATE BINARY) ORDER BY (HEX(rt0.c0) IN ()) ASC  NULLS FIRST, ((rt0.c0)*(CASE WHEN rt0.c1 THEN rt0.c1 END)) DESC;
SELECT * FROM vt1, rt0, vt0 WHERE ((((((rt0.c0))<((rt0.c2))))>(CASE WHEN rt0.c2 THEN '' END))) ORDER BY TYPEOF((((rt0.c1))==((rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))<((rt0.c2))))>(CASE WHEN rt0.c2 THEN '' END))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY TYPEOF((((rt0.c1))==((rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM vt1, rt0, vt0 WHERE ((((((rt0.c0))<((rt0.c2))))>(CASE WHEN rt0.c2 THEN '' END))) ORDER BY TYPEOF((((rt0.c1))==((rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))<((rt0.c2))))>(CASE WHEN rt0.c2 THEN '' END))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY TYPEOF((((rt0.c1))==((rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM vt1, rt0, vt0 WHERE ((((((rt0.c0))<((rt0.c2))))>(CASE WHEN rt0.c2 THEN '' END))) ORDER BY TYPEOF((((rt0.c1))==((rt0.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(SUBSTR(vt1.c0, vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(SUBSTR(vt1.c0, vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(SUBSTR(vt1.c0, vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(SUBSTR(vt1.c0, vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(SUBSTR(vt1.c0, vt0.c0) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)-(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)-(x''))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)-(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)-(x''))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)-(x'')));
SELECT COUNT(*) FROM vt1 WHERE (CASE x''  WHEN vt1.c0 THEN ((NULL)||(vt1.c0)) WHEN (((vt1.c0))<((vt1.c0))) THEN ((vt1.c0) BETWEEN (-3.72462081E8) AND (vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((x'')IS NOT(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN vt1.c0 THEN ((NULL)||(vt1.c0)) WHEN (((vt1.c0))<((vt1.c0))) THEN ((vt1.c0) BETWEEN (-3.72462081E8) AND (vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((x'')IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE x''  WHEN vt1.c0 THEN ((NULL)||(vt1.c0)) WHEN (((vt1.c0))<((vt1.c0))) THEN ((vt1.c0) BETWEEN (-3.72462081E8) AND (vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((x'')IS NOT(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN vt1.c0 THEN ((NULL)||(vt1.c0)) WHEN (((vt1.c0))<((vt1.c0))) THEN ((vt1.c0) BETWEEN (-3.72462081E8) AND (vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((x'')IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE x''  WHEN vt1.c0 THEN ((NULL)||(vt1.c0)) WHEN (((vt1.c0))<((vt1.c0))) THEN ((vt1.c0) BETWEEN (-3.72462081E8) AND (vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((x'')IS NOT(vt1.c0)) END);
SELECT * FROM vt1, rt0, vt0 WHERE ((((((vt1.c0))<((rt0.c0)))) BETWEEN (((0.5357847497274191)>=(rt0.c1))) AND (((rt0.c1)-(rt0.c1))))) ORDER BY ((((rt0.c1) IS TRUE))<((rt0.c2 IN (vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<((rt0.c0)))) BETWEEN (((0.5357847497274191)>=(rt0.c1))) AND (((rt0.c1)-(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((rt0.c1) IS TRUE))<((rt0.c2 IN (vt0.c0, vt0.c0)))));
SELECT * FROM vt1, rt0, vt0 WHERE ((((((vt1.c0))<((rt0.c0)))) BETWEEN (((0.5357847497274191)>=(rt0.c1))) AND (((rt0.c1)-(rt0.c1))))) ORDER BY ((((rt0.c1) IS TRUE))<((rt0.c2 IN (vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<((rt0.c0)))) BETWEEN (((0.5357847497274191)>=(rt0.c1))) AND (((rt0.c1)-(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((rt0.c1) IS TRUE))<((rt0.c2 IN (vt0.c0, vt0.c0)))));
SELECT * FROM vt1, rt0, vt0 WHERE ((((((vt1.c0))<((rt0.c0)))) BETWEEN (((0.5357847497274191)>=(rt0.c1))) AND (((rt0.c1)-(rt0.c1))))) ORDER BY ((((rt0.c1) IS TRUE))<((rt0.c2 IN (vt0.c0, vt0.c0))));
SELECT * FROM vt0, rt0, vt1 WHERE (CASE (~ (rt0.c2))  WHEN rt0.c2 THEN (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt0.c2))  WHEN rt0.c2 THEN (- (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (CASE (~ (rt0.c2))  WHEN rt0.c2 THEN (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt0.c2))  WHEN rt0.c2 THEN (- (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (CASE (~ (rt0.c2))  WHEN rt0.c2 THEN (- (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (((1864139370)IS(vt1.c0 COLLATE BINARY))) ORDER BY (((((vt1.c0))=((vt1.c0))))<<(((vt1.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((((1864139370)IS(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))=((vt1.c0))))<<(((vt1.c0) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((1864139370)IS(vt1.c0 COLLATE BINARY))) ORDER BY (((((vt1.c0))=((vt1.c0))))<<(((vt1.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((((1864139370)IS(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))=((vt1.c0))))<<(((vt1.c0) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((1864139370)IS(vt1.c0 COLLATE BINARY))) ORDER BY (((((vt1.c0))=((vt1.c0))))<<(((vt1.c0) IS TRUE))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(MAX(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(MAX(vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(MAX(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(MAX(vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(MAX(vt0.c0, vt0.c0)));
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c0)) AS NUMERIC));
SELECT * FROM vt1 NOT INDEXED, rt0 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY ((json_valid(rt0.c2)) NOT BETWEEN ((('1587254871')IS NOT(vt1.c0))) AND (((vt1.c0)LIKE(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((json_valid(rt0.c2)) NOT BETWEEN ((('1587254871')IS NOT(vt1.c0))) AND (((vt1.c0)LIKE(vt1.c0)))) ASC);
SELECT * FROM vt1 NOT INDEXED, rt0 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY ((json_valid(rt0.c2)) NOT BETWEEN ((('1587254871')IS NOT(vt1.c0))) AND (((vt1.c0)LIKE(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((json_valid(rt0.c2)) NOT BETWEEN ((('1587254871')IS NOT(vt1.c0))) AND (((vt1.c0)LIKE(vt1.c0)))) ASC);
SELECT * FROM vt1 NOT INDEXED, rt0 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY ((json_valid(rt0.c2)) NOT BETWEEN ((('1587254871')IS NOT(vt1.c0))) AND (((vt1.c0)LIKE(vt1.c0)))) ASC;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c1 THEN x'7d11' END WHERE (((((rt0.c2)AND(vt0.c0))) BETWEEN ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0)))) AND (rt0.c0))) ORDER BY ('257932978' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(vt0.c0))) BETWEEN ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0)))) AND (rt0.c0))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c1 THEN x'7d11' END ORDER BY ('257932978' IN ()) DESC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c1 THEN x'7d11' END WHERE (((((rt0.c2)AND(vt0.c0))) BETWEEN ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0)))) AND (rt0.c0))) ORDER BY ('257932978' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(vt0.c0))) BETWEEN ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0)))) AND (rt0.c0))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c1 THEN x'7d11' END ORDER BY ('257932978' IN ()) DESC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c1 THEN x'7d11' END WHERE (((((rt0.c2)AND(vt0.c0))) BETWEEN ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0)))) AND (rt0.c0))) ORDER BY ('257932978' IN ()) DESC;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY HEX(vt1.c0) DESC  NULLS FIRST, (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY HEX(vt1.c0) DESC  NULLS FIRST, (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY HEX(vt1.c0) DESC  NULLS FIRST, (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY HEX(vt1.c0) DESC  NULLS FIRST, (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY HEX(vt1.c0) DESC  NULLS FIRST, (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) COLLATE BINARY DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST((rt0.c1 IN (rt0.c1)) AS TEXT)) ORDER BY (((((((((- (rt0.c2)))OR(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR((+ (rt0.c2)))))AND((((rt0.c0))<>((rt0.c1))))))AND(((rt0.c2)+(0.2220687211841016)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((((((((- (rt0.c2)))OR(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR((+ (rt0.c2)))))AND((((rt0.c0))!=((rt0.c1))))))AND(((rt0.c2)+(0.2220687211841016)))) DESC);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST((rt0.c1 IN (rt0.c1)) AS TEXT)) ORDER BY (((((((((- (rt0.c2)))OR(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR((+ (rt0.c2)))))AND((((rt0.c0))<>((rt0.c1))))))AND(((rt0.c2)+(0.2220687211841016)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((((((((- (rt0.c2)))OR(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR((+ (rt0.c2)))))AND((((rt0.c0))!=((rt0.c1))))))AND(((rt0.c2)+(0.2220687211841016)))) DESC);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST((rt0.c1 IN (rt0.c1)) AS TEXT)) ORDER BY (((((((((- (rt0.c2)))OR(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR((+ (rt0.c2)))))AND((((rt0.c0))<>((rt0.c1))))))AND(((rt0.c2)+(0.2220687211841016)))) DESC;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))&(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((((((((((rt0.c2)OR(((rt0.c2)>(rt0.c1)))))OR(((rt0.c0)>(rt0.c0)))))OR(((rt0.c1)LIKE(rt0.c1)))))OR('')))AND('|kOaOèI')))AND(((((((((rt0.c1)OR(rt0.c0)))OR('å½4')))AND(rt0.c1)))AND(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER))&(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((rt0.c2)OR(((rt0.c2)>(rt0.c1)))))OR(((rt0.c0)>(rt0.c0)))))OR(((rt0.c1)LIKE(rt0.c1)))))OR('')))AND('|kOaOèI')))AND(((((((((rt0.c1)OR(rt0.c0)))OR('å½4')))AND(rt0.c1)))AND(rt0.c2)))) DESC);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))&(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((((((((((rt0.c2)OR(((rt0.c2)>(rt0.c1)))))OR(((rt0.c0)>(rt0.c0)))))OR(((rt0.c1)LIKE(rt0.c1)))))OR('')))AND('|kOaOèI')))AND(((((((((rt0.c1)OR(rt0.c0)))OR('å½4')))AND(rt0.c1)))AND(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER))&(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((rt0.c2)OR(((rt0.c2)>(rt0.c1)))))OR(((rt0.c0)>(rt0.c0)))))OR(((rt0.c1)LIKE(rt0.c1)))))OR('')))AND('|kOaOèI')))AND(((((((((rt0.c1)OR(rt0.c0)))OR('å½4')))AND(rt0.c1)))AND(rt0.c2)))) DESC);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))&(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((((((((((rt0.c2)OR(((rt0.c2)>(rt0.c1)))))OR(((rt0.c0)>(rt0.c0)))))OR(((rt0.c1)LIKE(rt0.c1)))))OR('')))AND('|kOaOèI')))AND(((((((((rt0.c1)OR(rt0.c0)))OR('å½4')))AND(rt0.c1)))AND(rt0.c2)))) DESC;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c2) AND (x''))))>(((- (vt0.c0)))))) ORDER BY 742616714 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) BETWEEN (rt0.c2) AND (x''))))>(((- (vt0.c0)))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY 742616714 COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c2) AND (x''))))>(((- (vt0.c0)))))) ORDER BY 742616714 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) BETWEEN (rt0.c2) AND (x''))))>(((- (vt0.c0)))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY 742616714 COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 NATURAL JOIN vt1 WHERE (CASE WHEN (- (vt1.c0)) THEN load_extension(rt0.c0, 0.8779715008850063) ELSE ((((((((rt0.c2)OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) END) ORDER BY ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(json_type(rt0.c2))))OR(((rt0.c1)<(rt0.c2)))))OR(((vt1.c0) NOT NULL))))AND(rt0.c2 COLLATE NOCASE))  NULLS FIRST, SUBSTR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), CASE WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt1.c0)) THEN load_extension(rt0.c0, 0.8779715008850063) ELSE ((((((((rt0.c2)OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1 ORDER BY ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(json_type(rt0.c2))))OR(((rt0.c1)<(rt0.c2)))))OR(((vt1.c0) NOT NULL))))AND(rt0.c2 COLLATE NOCASE))  NULLS FIRST, SUBSTR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), CASE WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END) ASC  NULLS LAST);
SELECT * FROM vt0, rt0 NATURAL JOIN vt1 WHERE (CASE WHEN (- (vt1.c0)) THEN load_extension(rt0.c0, 0.8779715008850063) ELSE ((((((((rt0.c2)OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) END) ORDER BY ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(json_type(rt0.c2))))OR(((rt0.c1)<(rt0.c2)))))OR(((vt1.c0) NOT NULL))))AND(rt0.c2 COLLATE NOCASE))  NULLS FIRST, SUBSTR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), CASE WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt1.c0)) THEN load_extension(rt0.c0, 0.8779715008850063) ELSE ((((((((rt0.c2)OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1 ORDER BY ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(json_type(rt0.c2))))OR(((rt0.c1)<(rt0.c2)))))OR(((vt1.c0) NOT NULL))))AND(rt0.c2 COLLATE NOCASE))  NULLS FIRST, SUBSTR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), CASE WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END) ASC  NULLS LAST);
SELECT * FROM vt0, rt0 NATURAL JOIN vt1 WHERE (CASE WHEN (- (vt1.c0)) THEN load_extension(rt0.c0, 0.8779715008850063) ELSE ((((((((rt0.c2)OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) END) ORDER BY ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(json_type(rt0.c2))))OR(((rt0.c1)<(rt0.c2)))))OR(((vt1.c0) NOT NULL))))AND(rt0.c2 COLLATE NOCASE))  NULLS FIRST, SUBSTR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), CASE WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(TYPEOF(DISTINCT vt0.c0))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((vt0.c0)<(vt0.c0))) IS TRUE), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (json(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC, (((vt0.c0 IN ()))LIKE(((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(TYPEOF(DISTINCT vt0.c0))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c0))) IS TRUE), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (json(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC, (((vt0.c0 IN ()))LIKE(((vt0.c0) NOT NULL))) ASC);
SELECT * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(TYPEOF(DISTINCT vt0.c0))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((vt0.c0)<(vt0.c0))) IS TRUE), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (json(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC, (((vt0.c0 IN ()))LIKE(((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(TYPEOF(DISTINCT vt0.c0))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c0))) IS TRUE), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (json(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC, (((vt0.c0 IN ()))LIKE(((vt0.c0) NOT NULL))) ASC);
SELECT * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(TYPEOF(DISTINCT vt0.c0))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((vt0.c0)<(vt0.c0))) IS TRUE), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (json(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC, (((vt0.c0 IN ()))LIKE(((vt0.c0) NOT NULL))) ASC;
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) IS FALSE));
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))==((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))==((x'')))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))==((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))==((x'')))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))==((x''))));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE ((((((('')AND(rt0.c2)))OR(rt0.c0)))LIKE(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((('')AND(rt0.c2)))OR(rt0.c0)))LIKE(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((('')AND(rt0.c2)))OR(rt0.c0)))LIKE(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((('')AND(rt0.c2)))OR(rt0.c0)))LIKE(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((('')AND(rt0.c2)))OR(rt0.c0)))LIKE(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT ALL * FROM vt1, rt0 WHERE (CASE ((((vt1.c0)AND(rt0.c1)))AND(vt1.c0))  WHEN UNLIKELY(vt1.c0) THEN (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, 'bâ´'))) WHEN ((((rt0.c1)OR('')))OR(rt0.c1)) THEN ((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN x'' THEN (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c0)AND(rt0.c1)))AND(vt1.c0))  WHEN UNLIKELY(vt1.c0) THEN (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, 'bâ´'))) WHEN ((((rt0.c1)OR('')))OR(rt0.c1)) THEN ((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN x'' THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE ((((vt1.c0)AND(rt0.c1)))AND(vt1.c0))  WHEN UNLIKELY(vt1.c0) THEN (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, 'bâ´'))) WHEN ((((rt0.c1)OR('')))OR(rt0.c1)) THEN ((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN x'' THEN (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c0)AND(rt0.c1)))AND(vt1.c0))  WHEN UNLIKELY(vt1.c0) THEN (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, 'bâ´'))) WHEN ((((rt0.c1)OR('')))OR(rt0.c1)) THEN ((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN x'' THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE ((((vt1.c0)AND(rt0.c1)))AND(vt1.c0))  WHEN UNLIKELY(vt1.c0) THEN (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, 'bâ´'))) WHEN ((((rt0.c1)OR('')))OR(rt0.c1)) THEN ((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN x'' THEN (~ (vt1.c0)) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0)>=(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>=(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0)>=(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>=(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0)>=(rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CAST((rt0.c2 IN (rt0.c1)) AS BLOB)) ORDER BY (+ (((((NULL)OR(rt0.c2)))OR(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (+ (((((NULL)OR(rt0.c2)))OR(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CAST((rt0.c2 IN (rt0.c1)) AS BLOB)) ORDER BY (+ (((((NULL)OR(rt0.c2)))OR(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (+ (((((NULL)OR(rt0.c2)))OR(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CAST((rt0.c2 IN (rt0.c1)) AS BLOB)) ORDER BY (+ (((((NULL)OR(rt0.c2)))OR(vt1.c0)))) ASC;
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c1 IN (vt1.c0)))||(((rt0.c1)*(rt0.c2)))) WHERE ((~ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c1 IN (vt1.c0)))||(((rt0.c1)*(rt0.c2)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c1 IN (vt1.c0)))||(((rt0.c1)*(rt0.c2)))) WHERE ((~ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c1 IN (vt1.c0)))||(((rt0.c1)*(rt0.c2)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c1 IN (vt1.c0)))||(((rt0.c1)*(rt0.c2)))) WHERE ((~ ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c2 IN (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((rt0.c2 IN (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c2 IN (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((rt0.c2 IN (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c2 IN (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))));
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (rt0.c0);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0) IS FALSE) COLLATE BINARY WHERE (((vt0.c0)<=(vt0.c0)) COLLATE RTRIM) ORDER BY CASE vt0.c0  WHEN vt1.c0 THEN '-1667213878' WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 END COLLATE BINARY  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0) IS FALSE) COLLATE BINARY ORDER BY CASE vt0.c0  WHEN vt1.c0 THEN '-1667213878' WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 END COLLATE BINARY  NULLS LAST, vt0.c0);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0) IS FALSE) COLLATE BINARY WHERE (((vt0.c0)<=(vt0.c0)) COLLATE RTRIM) ORDER BY CASE vt0.c0  WHEN vt1.c0 THEN '-1667213878' WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 END COLLATE BINARY  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0) IS FALSE) COLLATE BINARY ORDER BY CASE vt0.c0  WHEN vt1.c0 THEN '-1667213878' WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 END COLLATE BINARY  NULLS LAST, vt0.c0);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0) IS FALSE) COLLATE BINARY WHERE (((vt0.c0)<=(vt0.c0)) COLLATE RTRIM) ORDER BY CASE vt0.c0  WHEN vt1.c0 THEN '-1667213878' WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 END COLLATE BINARY  NULLS LAST, vt0.c0;
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)LIKE('W,')) IN (((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))) INNER JOIN rt0 ON (+ (rt0.c1)) WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY ((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE BINARY  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)LIKE('W,')) IN (((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))) INNER JOIN rt0 ON (+ (rt0.c1)) ORDER BY ((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE BINARY  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)LIKE('W,')) IN (((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))) INNER JOIN rt0 ON (+ (rt0.c1)) WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY ((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE BINARY  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)LIKE('W,')) IN (((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))) INNER JOIN rt0 ON (+ (rt0.c1)) ORDER BY ((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE BINARY  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)LIKE('W,')) IN (((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))) INNER JOIN rt0 ON (+ (rt0.c1)) WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY ((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE BINARY  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON CAST((((rt0.c1, vt1.c0, vt1.c0))>((vt1.c0, rt0.c0, rt0.c2))) AS NUMERIC) WHERE (rt0.c2) ORDER BY rt0.c0, CAST(CASE WHEN vt1.c0 THEN rt0.c2 ELSE NULL END AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CAST((((rt0.c1, vt1.c0, vt1.c0))>((vt1.c0, rt0.c0, rt0.c2))) AS NUMERIC) ORDER BY rt0.c0, CAST(CASE WHEN vt1.c0 THEN rt0.c2 ELSE NULL END AS REAL));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON CAST((((rt0.c1, vt1.c0, vt1.c0))>((vt1.c0, rt0.c0, rt0.c2))) AS NUMERIC) WHERE (rt0.c2) ORDER BY rt0.c0, CAST(CASE WHEN vt1.c0 THEN rt0.c2 ELSE NULL END AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CAST((((rt0.c1, vt1.c0, vt1.c0))>((vt1.c0, rt0.c0, rt0.c2))) AS NUMERIC) ORDER BY rt0.c0, CAST(CASE WHEN vt1.c0 THEN rt0.c2 ELSE NULL END AS REAL));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON CAST((((rt0.c1, vt1.c0, vt1.c0))>((vt1.c0, rt0.c0, rt0.c2))) AS NUMERIC) WHERE (rt0.c2) ORDER BY rt0.c0, CAST(CASE WHEN vt1.c0 THEN rt0.c2 ELSE NULL END AS REAL);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0) BETWEEN ('ZoFAA') AND (vt1.c0)))) INNER JOIN rt0 ON rt0.c2 WHERE ((- ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0) BETWEEN ('ZoFAA') AND (vt1.c0)))) INNER JOIN rt0 ON rt0.c2);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0) BETWEEN ('ZoFAA') AND (vt1.c0)))) INNER JOIN rt0 ON rt0.c2 WHERE ((- ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0) BETWEEN ('ZoFAA') AND (vt1.c0)))) INNER JOIN rt0 ON rt0.c2);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0) BETWEEN ('ZoFAA') AND (vt1.c0)))) INNER JOIN rt0 ON rt0.c2 WHERE ((- ((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, 0xffffffffd0a195c3)) BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, vt1.c0, 0xffffffffd0a195c3)) BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, 0xffffffffd0a195c3)) BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, vt1.c0, 0xffffffffd0a195c3)) BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, 0xffffffffd0a195c3)) BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS TEXT));
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) IS TRUE));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((+ (rt0.c0)) COLLATE NOCASE) ORDER BY ((((((((((vt1.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))*(((NULL) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((((((vt1.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))*(((NULL) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((+ (rt0.c0)) COLLATE NOCASE) ORDER BY ((((((((((vt1.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))*(((NULL) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((((((vt1.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))*(((NULL) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((+ (rt0.c0)) COLLATE NOCASE) ORDER BY ((((((((((vt1.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))*(((NULL) IS TRUE))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (ABS(DISTINCT ((vt1.c0)&(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt1.c0)&(vt1.c0)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (ABS(DISTINCT ((vt1.c0)&(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt1.c0)&(vt1.c0)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (ABS(DISTINCT ((vt1.c0)&(vt1.c0))));
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (CASE WHEN CAST(0.991051331119211 AS REAL) THEN (rt0.c1 IN (rt0.c1, vt0.c0)) ELSE 'h(' END) ORDER BY CASE ((rt0.c2)IS NOT(x''))  WHEN ((rt0.c1)>=(vt0.c0)) THEN vt0.c0 COLLATE RTRIM END, (((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((rt0.c0 COLLATE NOCASE, vt0.c0 COLLATE RTRIM, (('')<(rt0.c1)))) AND (((NOT (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0)<>(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(0.991051331119211 AS REAL) THEN (rt0.c1 IN (rt0.c1, vt0.c0)) ELSE 'h(' END) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c2)IS NOT(x''))  WHEN ((rt0.c1)>=(vt0.c0)) THEN vt0.c0 COLLATE RTRIM END, (((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((rt0.c0 COLLATE NOCASE, vt0.c0 COLLATE RTRIM, (('')<(rt0.c1)))) AND (((NOT (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0)!=(rt0.c2)))))  NULLS LAST);
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (CASE WHEN CAST(0.991051331119211 AS REAL) THEN (rt0.c1 IN (rt0.c1, vt0.c0)) ELSE 'h(' END) ORDER BY CASE ((rt0.c2)IS NOT(x''))  WHEN ((rt0.c1)>=(vt0.c0)) THEN vt0.c0 COLLATE RTRIM END, (((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((rt0.c0 COLLATE NOCASE, vt0.c0 COLLATE RTRIM, (('')<(rt0.c1)))) AND (((NOT (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0)<>(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(0.991051331119211 AS REAL) THEN (rt0.c1 IN (rt0.c1, vt0.c0)) ELSE 'h(' END) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c2)IS NOT(x''))  WHEN ((rt0.c1)>=(vt0.c0)) THEN vt0.c0 COLLATE RTRIM END, (((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((rt0.c0 COLLATE NOCASE, vt0.c0 COLLATE RTRIM, (('')<(rt0.c1)))) AND (((NOT (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0)!=(rt0.c2)))))  NULLS LAST);
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (CASE WHEN CAST(0.991051331119211 AS REAL) THEN (rt0.c1 IN (rt0.c1, vt0.c0)) ELSE 'h(' END) ORDER BY CASE ((rt0.c2)IS NOT(x''))  WHEN ((rt0.c1)>=(vt0.c0)) THEN vt0.c0 COLLATE RTRIM END, (((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((rt0.c0 COLLATE NOCASE, vt0.c0 COLLATE RTRIM, (('')<(rt0.c1)))) AND (((NOT (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0)<>(rt0.c2)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)|(vt1.c0)) END) ORDER BY (NOT ('>pf'));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)|(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (NOT ('>pf')));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)|(vt1.c0)) END) ORDER BY (NOT ('>pf'));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)|(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (NOT ('>pf')));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)|(vt1.c0)) END) ORDER BY (NOT ('>pf'));
SELECT ALL * FROM rt0, vt1 WHERE ((NOT (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((NOT (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((NOT (CAST(vt1.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((x'72c5' IN ())) ORDER BY ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (rt0.c2) AND ((vt1.c0 IN ()))) DESC, CAST(((vt0.c0) NOT BETWEEN (x'') AND (rt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'72c5' IN ())) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (rt0.c2) AND ((vt1.c0 IN ()))) DESC, CAST(((vt0.c0) NOT BETWEEN (x'') AND (rt0.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((x'72c5' IN ())) ORDER BY ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (rt0.c2) AND ((vt1.c0 IN ()))) DESC, CAST(((vt0.c0) NOT BETWEEN (x'') AND (rt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'72c5' IN ())) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (rt0.c2) AND ((vt1.c0 IN ()))) DESC, CAST(((vt0.c0) NOT BETWEEN (x'') AND (rt0.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((x'72c5' IN ())) ORDER BY ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (rt0.c2) AND ((vt1.c0 IN ()))) DESC, CAST(((vt0.c0) NOT BETWEEN (x'') AND (rt0.c0)) AS INTEGER)  NULLS LAST;
SELECT * FROM vt1 CROSS JOIN rt0 ON CAST(((rt0.c1)OR(vt1.c0)) AS TEXT) WHERE (x'' COLLATE BINARY) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 END) IS FALSE) DESC  NULLS FIRST, x'', ((((vt1.c0) ISNULL))<<(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN x'' THEN vt1.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST(((rt0.c1)OR(vt1.c0)) AS TEXT) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 END) IS FALSE) DESC  NULLS FIRST, x'', ((((vt1.c0) ISNULL))<<(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN x'' THEN vt1.c0 ELSE rt0.c0 END)));
SELECT * FROM vt1 CROSS JOIN rt0 ON CAST(((rt0.c1)OR(vt1.c0)) AS TEXT) WHERE (x'' COLLATE BINARY) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 END) IS FALSE) DESC  NULLS FIRST, x'', ((((vt1.c0) ISNULL))<<(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN x'' THEN vt1.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST(((rt0.c1)OR(vt1.c0)) AS TEXT) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 END) IS FALSE) DESC  NULLS FIRST, x'', ((((vt1.c0) ISNULL))<<(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN x'' THEN vt1.c0 ELSE rt0.c0 END)));
SELECT * FROM vt1 CROSS JOIN rt0 ON CAST(((rt0.c1)OR(vt1.c0)) AS TEXT) WHERE (x'' COLLATE BINARY) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 END) IS FALSE) DESC  NULLS FIRST, x'', ((((vt1.c0) ISNULL))<<(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN x'' THEN vt1.c0 ELSE rt0.c0 END));
SELECT * FROM vt1 WHERE ((((- (vt1.c0)))!=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.9840047788008959)))));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))<>(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.9840047788008959))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((- (vt1.c0)))!=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.9840047788008959)))));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))<>(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.9840047788008959))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((- (vt1.c0)))!=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.9840047788008959)))));
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN JULIANDAY(vt0.c0, vt0.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN JULIANDAY(vt0.c0, vt0.c0, vt1.c0) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN JULIANDAY(vt0.c0, vt0.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN JULIANDAY(vt0.c0, vt0.c0, vt1.c0) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN JULIANDAY(vt0.c0, vt0.c0, vt1.c0) END);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c0)OR(0.13590111009889072)))AND(1644667780)))OR(vt0.c0)))AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)OR(0.13590111009889072)))AND(1644667780)))OR(vt0.c0)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c0)OR(0.13590111009889072)))AND(1644667780)))OR(vt0.c0)))AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)OR(0.13590111009889072)))AND(1644667780)))OR(vt0.c0)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c0)OR(0.13590111009889072)))AND(1644667780)))OR(vt0.c0)))AND(vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (UPPER(DISTINCT ('-1283818779' IN ())));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ('-1283818779' IN ()))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (UPPER(DISTINCT ('-1283818779' IN ())));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ('-1283818779' IN ()))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (UPPER(DISTINCT ('-1283818779' IN ())));
SELECT * FROM rt0, vt1, vt0 WHERE (((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY (rt0.c1 IN ());
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (rt0.c1 IN ()));
SELECT * FROM rt0, vt1, vt0 WHERE (((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY (rt0.c1 IN ());
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (rt0.c1 IN ()));
SELECT * FROM rt0, vt1, vt0 WHERE (((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY (rt0.c1 IN ());
SELECT ALL * FROM vt1 INNER JOIN vt0 ON vt0.c0 WHERE ((- (((vt0.c0)%(vt0.c0))))) ORDER BY (('K/6~b8j') ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON vt0.c0 ORDER BY (('K/6~b8j') ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON vt0.c0 WHERE ((- (((vt0.c0)%(vt0.c0))))) ORDER BY (('K/6~b8j') ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON vt0.c0 ORDER BY (('K/6~b8j') ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON vt0.c0 WHERE ((- (((vt0.c0)%(vt0.c0))))) ORDER BY (('K/6~b8j') ISNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))==((vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))=((vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))==((vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))=((vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))==((vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC))));
SELECT ALL * FROM rt0, vt1, vt0 WHERE (UPPER(CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(vt1.c0 AS INTEGER))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (UPPER(CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(vt1.c0 AS INTEGER))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (UPPER(CAST(vt1.c0 AS INTEGER)));
SELECT * FROM vt0, vt1 CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE BINARY WHERE (json_patch(((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)), (((rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, vt1.c0, rt0.c0)) AND ((0x25c795d3, vt0.c0, rt0.c1))))) ORDER BY ((- (vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((json_patch(((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)), (((rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, vt1.c0, rt0.c0)) AND ((0x25c795d3, vt0.c0, rt0.c1))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE BINARY ORDER BY ((- (vt1.c0)) IN ()) ASC);
SELECT * FROM vt0, vt1 CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE BINARY WHERE (json_patch(((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)), (((rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, vt1.c0, rt0.c0)) AND ((0x25c795d3, vt0.c0, rt0.c1))))) ORDER BY ((- (vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((json_patch(((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)), (((rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, vt1.c0, rt0.c0)) AND ((0x25c795d3, vt0.c0, rt0.c1))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE BINARY ORDER BY ((- (vt1.c0)) IN ()) ASC);
SELECT * FROM vt0, vt1 CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE BINARY WHERE (json_patch(((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)), (((rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, vt1.c0, rt0.c0)) AND ((0x25c795d3, vt0.c0, rt0.c1))))) ORDER BY ((- (vt1.c0)) IN ()) ASC;
SELECT ALL * FROM rt0, vt1 NATURAL JOIN vt0 WHERE ((((((((vt1.c0))=((rt0.c2))))OR((rt0.c2 IN (vt0.c0, rt0.c2)))))AND((((vt0.c0))>=((vt1.c0)))))) ORDER BY ((((CASE rt0.c2  WHEN rt0.c0 THEN NULL END)OR(vt1.c0 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0))=((rt0.c2))))OR((rt0.c2 IN (vt0.c0, rt0.c2)))))AND((((vt0.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN vt0 ORDER BY ((((CASE rt0.c2  WHEN rt0.c0 THEN NULL END)OR(vt1.c0 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 NATURAL JOIN vt0 WHERE ((((((((vt1.c0))=((rt0.c2))))OR((rt0.c2 IN (vt0.c0, rt0.c2)))))AND((((vt0.c0))>=((vt1.c0)))))) ORDER BY ((((CASE rt0.c2  WHEN rt0.c0 THEN NULL END)OR(vt1.c0 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0))=((rt0.c2))))OR((rt0.c2 IN (vt0.c0, rt0.c2)))))AND((((vt0.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN vt0 ORDER BY ((((CASE rt0.c2  WHEN rt0.c0 THEN NULL END)OR(vt1.c0 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 NATURAL JOIN vt0 WHERE ((((((((vt1.c0))=((rt0.c2))))OR((rt0.c2 IN (vt0.c0, rt0.c2)))))AND((((vt0.c0))>=((vt1.c0)))))) ORDER BY ((((CASE rt0.c2  WHEN rt0.c0 THEN NULL END)OR(vt1.c0 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c1) ORDER BY ((LIKELY(vt1.c0)) ISNULL);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((LIKELY(vt1.c0)) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c1) ORDER BY ((LIKELY(vt1.c0)) ISNULL);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((LIKELY(vt1.c0)) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c1) ORDER BY ((LIKELY(vt1.c0)) ISNULL);
SELECT ALL * FROM vt1 WHERE (CASE WHEN 0X429ac959 THEN (vt1.c0 IN ()) ELSE ((vt1.c0)>=(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0X429ac959 THEN (vt1.c0 IN ()) ELSE ((vt1.c0)>=(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN 0X429ac959 THEN (vt1.c0 IN ()) ELSE ((vt1.c0)>=(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0X429ac959 THEN (vt1.c0 IN ()) ELSE ((vt1.c0)>=(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN 0X429ac959 THEN (vt1.c0 IN ()) ELSE ((vt1.c0)>=(vt1.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((+ (vt0.c0)))==((rt0.c0 IN ())))) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(CASE '1953644662'  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))OR((((rt0.c0))<>((rt0.c0))))), 0Xffffffff880dd8cc  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))==((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(CASE '1953644662'  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))OR((((rt0.c0))!=((rt0.c0))))), 0Xffffffff880dd8cc  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((+ (vt0.c0)))==((rt0.c0 IN ())))) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(CASE '1953644662'  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))OR((((rt0.c0))<>((rt0.c0))))), 0Xffffffff880dd8cc  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))==((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(CASE '1953644662'  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))OR((((rt0.c0))!=((rt0.c0))))), 0Xffffffff880dd8cc  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((+ (vt0.c0)))==((rt0.c0 IN ())))) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(CASE '1953644662'  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))OR((((rt0.c0))<>((rt0.c0))))), 0Xffffffff880dd8cc  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((288799144)AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(CAST(vt1.c0 AS BLOB)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((288799144)AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL));
SELECT COUNT(*) FROM vt1 WHERE (((((288799144)AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(CAST(vt1.c0 AS BLOB)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((288799144)AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL));
SELECT COUNT(*) FROM vt1 WHERE (((((288799144)AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(CAST(vt1.c0 AS BLOB)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL);
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c2)>=(rt0.c1))) AND (((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)))) WHERE (TRIM((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c2)>=(rt0.c1))) AND (((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)))));
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c2)>=(rt0.c1))) AND (((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)))) WHERE (TRIM((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c2)>=(rt0.c1))) AND (((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)))));
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c2)>=(rt0.c1))) AND (((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)))) WHERE (TRIM((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND((rt0.c0 IN ()))))AND((rt0.c0 IN (rt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND((rt0.c0 IN ()))))AND((rt0.c0 IN (rt0.c0, rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND((rt0.c0 IN ()))))AND((rt0.c0 IN (rt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND((rt0.c0 IN ()))))AND((rt0.c0 IN (rt0.c0, rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND((rt0.c0 IN ()))))AND((rt0.c0 IN (rt0.c0, rt0.c1)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1)AND(((rt0.c0)+(rt0.c0)))))AND(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(((rt0.c0)+(rt0.c0)))))AND(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1)AND(((rt0.c0)+(rt0.c0)))))AND(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(((rt0.c0)+(rt0.c0)))))AND(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1)AND(((rt0.c0)+(rt0.c0)))))AND(((rt0.c0) NOT NULL))));
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL)) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)>=('|koaoèi')), CASE WHEN vt0.c0 THEN vt0.c0 END, (((0Xf5fbeb2))>((vt0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)>=('|koaoèi')), CASE WHEN vt0.c0 THEN vt0.c0 END, (((0Xf5fbeb2))>((vt0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), vt0.c0))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL)) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)>=('|koaoèi')), CASE WHEN vt0.c0 THEN vt0.c0 END, (((0Xf5fbeb2))>((vt0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)>=('|koaoèi')), CASE WHEN vt0.c0 THEN vt0.c0 END, (((0Xf5fbeb2))>((vt0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), vt0.c0))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL)) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)>=('|koaoèi')), CASE WHEN vt0.c0 THEN vt0.c0 END, (((0Xf5fbeb2))>((vt0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), vt0.c0))) DESC;
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (LIKELY(rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (LIKELY(rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (LIKELY(rt0.c1 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2)/(rt0.c0 COLLATE RTRIM))) ORDER BY CAST((~ (rt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)/(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((~ (rt0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2)/(rt0.c0 COLLATE RTRIM))) ORDER BY CAST((~ (rt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)/(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((~ (rt0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2)/(rt0.c0 COLLATE RTRIM))) ORDER BY CAST((~ (rt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((- (0.8063822987851604))) ORDER BY vt1.c0 ASC, CAST(rt0.c2 COLLATE NOCASE AS BLOB) DESC  NULLS FIRST, (((rt0.c1 IN ())) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (IFNULL(DISTINCT rt0.c1, rt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (0.8063822987851604))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY vt1.c0 ASC, CAST(rt0.c2 COLLATE NOCASE AS BLOB) DESC  NULLS FIRST, (((rt0.c1 IN ())) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (IFNULL(DISTINCT rt0.c1, rt0.c1))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((- (0.8063822987851604))) ORDER BY vt1.c0 ASC, CAST(rt0.c2 COLLATE NOCASE AS BLOB) DESC  NULLS FIRST, (((rt0.c1 IN ())) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (IFNULL(DISTINCT rt0.c1, rt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (0.8063822987851604))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY vt1.c0 ASC, CAST(rt0.c2 COLLATE NOCASE AS BLOB) DESC  NULLS FIRST, (((rt0.c1 IN ())) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (IFNULL(DISTINCT rt0.c1, rt0.c1))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((- (0.8063822987851604))) ORDER BY vt1.c0 ASC, CAST(rt0.c2 COLLATE NOCASE AS BLOB) DESC  NULLS FIRST, (((rt0.c1 IN ())) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (IFNULL(DISTINCT rt0.c1, rt0.c1))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)>=(vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)>=(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)>=(vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)>=(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)>=(vt1.c0)) AS BLOB));
SELECT ALL * FROM rt0, vt1 FULL OUTER JOIN vt0 ON ((((0.0864759650660355)OR(TYPEOF(vt0.c0))))AND(CAST(vt1.c0 AS TEXT))) WHERE (json_insert(CAST(rt0.c0 AS REAL), ((vt0.c0)>>(vt0.c0)), vt1.c0, json(rt0.c2), CAST(rt0.c0 AS TEXT))) ORDER BY (((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR(CAST(vt0.c0 AS REAL))))OR(((((vt1.c0)AND(vt1.c0)))OR(rt0.c1))))  NULLS LAST, -5.07805495E8 COLLATE RTRIM  NULLS LAST, (NOT (rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(CAST(rt0.c0 AS REAL), ((vt0.c0)>>(vt0.c0)), vt1.c0, json(rt0.c2), CAST(rt0.c0 AS TEXT))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON ((((0.0864759650660355)OR(TYPEOF(vt0.c0))))AND(CAST(vt1.c0 AS TEXT))) ORDER BY (((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR(CAST(vt0.c0 AS REAL))))OR(((((vt1.c0)AND(vt1.c0)))OR(rt0.c1))))  NULLS LAST, -5.07805495E8 COLLATE RTRIM  NULLS LAST, (NOT (rt0.c0))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 FULL OUTER JOIN vt0 ON ((((0.0864759650660355)OR(TYPEOF(vt0.c0))))AND(CAST(vt1.c0 AS TEXT))) WHERE (json_insert(CAST(rt0.c0 AS REAL), ((vt0.c0)>>(vt0.c0)), vt1.c0, json(rt0.c2), CAST(rt0.c0 AS TEXT))) ORDER BY (((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR(CAST(vt0.c0 AS REAL))))OR(((((vt1.c0)AND(vt1.c0)))OR(rt0.c1))))  NULLS LAST, -5.07805495E8 COLLATE RTRIM  NULLS LAST, (NOT (rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(CAST(rt0.c0 AS REAL), ((vt0.c0)>>(vt0.c0)), vt1.c0, json(rt0.c2), CAST(rt0.c0 AS TEXT))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON ((((0.0864759650660355)OR(TYPEOF(vt0.c0))))AND(CAST(vt1.c0 AS TEXT))) ORDER BY (((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR(CAST(vt0.c0 AS REAL))))OR(((((vt1.c0)AND(vt1.c0)))OR(rt0.c1))))  NULLS LAST, -5.07805495E8 COLLATE RTRIM  NULLS LAST, (NOT (rt0.c0))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (0xffffffffb205c887) ORDER BY CASE vt1.c0  WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) THEN CAST(x'ebae' AS REAL) ELSE ((vt1.c0)>>(vt1.c0)) END DESC, ((CAST(vt1.c0 AS REAL))AND(((vt1.c0)==(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffb205c887) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c0  WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) THEN CAST(x'ebae' AS REAL) ELSE ((vt1.c0)>>(vt1.c0)) END DESC, ((CAST(vt1.c0 AS REAL))AND(((vt1.c0)==(vt1.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (0xffffffffb205c887) ORDER BY CASE vt1.c0  WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) THEN CAST(x'ebae' AS REAL) ELSE ((vt1.c0)>>(vt1.c0)) END DESC, ((CAST(vt1.c0 AS REAL))AND(((vt1.c0)==(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffb205c887) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c0  WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) THEN CAST(x'ebae' AS REAL) ELSE ((vt1.c0)>>(vt1.c0)) END DESC, ((CAST(vt1.c0 AS REAL))AND(((vt1.c0)==(vt1.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (0xffffffffb205c887) ORDER BY CASE vt1.c0  WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) THEN CAST(x'ebae' AS REAL) ELSE ((vt1.c0)>>(vt1.c0)) END DESC, ((CAST(vt1.c0 AS REAL))AND(((vt1.c0)==(vt1.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON (((vt1.c0, vt0.c0, rt0.c1))=((vt1.c0, vt1.c0, vt0.c0))) COLLATE BINARY WHERE (((((rt0.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON (((vt1.c0, vt0.c0, rt0.c1))==((vt1.c0, vt1.c0, vt0.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON (((vt1.c0, vt0.c0, rt0.c1))=((vt1.c0, vt1.c0, vt0.c0))) COLLATE BINARY WHERE (((((rt0.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON (((vt1.c0, vt0.c0, rt0.c1))==((vt1.c0, vt1.c0, vt0.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON (((vt1.c0, vt0.c0, rt0.c1))=((vt1.c0, vt1.c0, vt0.c0))) COLLATE BINARY WHERE (((((rt0.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((-1.7976931348623157E308)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((-1.7976931348623157E308)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((-1.7976931348623157E308)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((-1.7976931348623157E308)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((-1.7976931348623157E308)<<(vt0.c0)))));
SELECT * FROM vt1, rt0, vt0 WHERE (CAST(TYPEOF(vt1.c0) AS BLOB)) ORDER BY ((((((((((rt0.c0) IS TRUE))OR(CASE WHEN rt0.c1 THEN 1644667780 ELSE vt1.c0 END)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-849939094')))))AND(rt0.c1 COLLATE RTRIM)))OR(((vt0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((((((((rt0.c0) IS TRUE))OR(CASE WHEN rt0.c1 THEN 1644667780 ELSE vt1.c0 END)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-849939094')))))AND(rt0.c1 COLLATE RTRIM)))OR(((vt0.c0) NOT NULL))) DESC);
SELECT * FROM vt1, rt0, vt0 WHERE (CAST(TYPEOF(vt1.c0) AS BLOB)) ORDER BY ((((((((((rt0.c0) IS TRUE))OR(CASE WHEN rt0.c1 THEN 1644667780 ELSE vt1.c0 END)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-849939094')))))AND(rt0.c1 COLLATE RTRIM)))OR(((vt0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((((((((rt0.c0) IS TRUE))OR(CASE WHEN rt0.c1 THEN 1644667780 ELSE vt1.c0 END)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-849939094')))))AND(rt0.c1 COLLATE RTRIM)))OR(((vt0.c0) NOT NULL))) DESC);
SELECT * FROM vt1, rt0, vt0 WHERE (CAST(TYPEOF(vt1.c0) AS BLOB)) ORDER BY ((((((((((rt0.c0) IS TRUE))OR(CASE WHEN rt0.c1 THEN 1644667780 ELSE vt1.c0 END)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-849939094')))))AND(rt0.c1 COLLATE RTRIM)))OR(((vt0.c0) NOT NULL))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS TRUE)) IS FALSE));
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER)))<((((vt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS INTEGER)))<((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER)))<((((vt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS INTEGER)))<((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER)))<((((vt0.c0) IS TRUE)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0 COLLATE BINARY)AND(((((vt0.c0)AND(vt0.c0)))OR(0Xffffffffb205c887)))))AND(LTRIM(vt0.c0))))AND(CAST(vt0.c0 AS BLOB))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE BINARY)AND(((((vt0.c0)AND(vt0.c0)))OR(0xffffffffb205c887)))))AND(LTRIM(vt0.c0))))AND(CAST(vt0.c0 AS BLOB))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0 COLLATE BINARY)AND(((((vt0.c0)AND(vt0.c0)))OR(0Xffffffffb205c887)))))AND(LTRIM(vt0.c0))))AND(CAST(vt0.c0 AS BLOB))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE BINARY)AND(((((vt0.c0)AND(vt0.c0)))OR(0xffffffffb205c887)))))AND(LTRIM(vt0.c0))))AND(CAST(vt0.c0 AS BLOB))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0 COLLATE BINARY)AND(((((vt0.c0)AND(vt0.c0)))OR(0Xffffffffb205c887)))))AND(LTRIM(vt0.c0))))AND(CAST(vt0.c0 AS BLOB))))OR(vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt1 WHERE ((((((vt1.c0) NOT NULL)))<=((CAST(vt1.c0 AS NUMERIC))))) ORDER BY (x'' IN (((vt1.c0)AND(vt1.c0)), vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) NOT NULL)))<=((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1 ORDER BY (x'' IN (((vt1.c0)AND(vt1.c0)), vt1.c0)) ASC);
SELECT * FROM vt1 WHERE ((((((vt1.c0) NOT NULL)))<=((CAST(vt1.c0 AS NUMERIC))))) ORDER BY (x'' IN (((vt1.c0)AND(vt1.c0)), vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) NOT NULL)))<=((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1 ORDER BY (x'' IN (((vt1.c0)AND(vt1.c0)), vt1.c0)) ASC);
SELECT * FROM vt1 WHERE ((((((vt1.c0) NOT NULL)))<=((CAST(vt1.c0 AS NUMERIC))))) ORDER BY (x'' IN (((vt1.c0)AND(vt1.c0)), vt1.c0)) ASC;
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON CASE vt0.c0 COLLATE NOCASE  WHEN 0.21420710194718917 THEN (NOT (x'')) ELSE ((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)) END FULL OUTER JOIN vt0 ON (~ (0Xffffffff9d231fd7)) WHERE (HEX(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, 0.5095529192178132))) ORDER BY ((((rt0.c1)!=(rt0.c2))) NOTNULL)  NULLS LAST, (((vt1.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt1.c0) AND ('-2012358452')))) AND ((rt0.c1 COLLATE RTRIM))), (((x''))<=(((((vt0.c0, rt0.c1, rt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, rt0.c1, rt0.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, 0.5095529192178132))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CASE vt0.c0 COLLATE NOCASE  WHEN 0.21420710194718917 THEN (NOT (x'')) ELSE ((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)) END FULL OUTER JOIN vt0 ON (~ (0xffffffff9d231fd7)) ORDER BY ((((rt0.c1)!=(rt0.c2))) NOTNULL)  NULLS LAST, (((vt1.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt1.c0) AND ('-2012358452')))) AND ((rt0.c1 COLLATE RTRIM))), (((x''))<=(((((vt0.c0, rt0.c1, rt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, rt0.c1, rt0.c0)))))) DESC  NULLS FIRST);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON CASE vt0.c0 COLLATE NOCASE  WHEN 0.21420710194718917 THEN (NOT (x'')) ELSE ((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)) END FULL OUTER JOIN vt0 ON (~ (0Xffffffff9d231fd7)) WHERE (HEX(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, 0.5095529192178132))) ORDER BY ((((rt0.c1)!=(rt0.c2))) NOTNULL)  NULLS LAST, (((vt1.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt1.c0) AND ('-2012358452')))) AND ((rt0.c1 COLLATE RTRIM))), (((x''))<=(((((vt0.c0, rt0.c1, rt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, rt0.c1, rt0.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, 0.5095529192178132))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CASE vt0.c0 COLLATE NOCASE  WHEN 0.21420710194718917 THEN (NOT (x'')) ELSE ((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)) END FULL OUTER JOIN vt0 ON (~ (0xffffffff9d231fd7)) ORDER BY ((((rt0.c1)!=(rt0.c2))) NOTNULL)  NULLS LAST, (((vt1.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt1.c0) AND ('-2012358452')))) AND ((rt0.c1 COLLATE RTRIM))), (((x''))<=(((((vt0.c0, rt0.c1, rt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, rt0.c1, rt0.c0)))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 INNER JOIN rt0 ON ((((rt0.c1)<(vt0.c0)))>=(((rt0.c2) IS FALSE))) WHERE ((((((x'', rt0.c0, vt0.c0, vt0.c0, '-849939094')) BETWEEN ((x'622f', rt0.c2, rt0.c2, rt0.c1, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0)))) NOT BETWEEN ((rt0.c0 IN ())) AND (((vt1.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((x'', rt0.c0, vt0.c0, vt0.c0, '-849939094')) BETWEEN ((x'622f', rt0.c2, rt0.c2, rt0.c1, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0)))) NOT BETWEEN ((rt0.c0 IN ())) AND (((vt1.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 INNER JOIN rt0 ON ((((rt0.c1)<(vt0.c0)))>=(((rt0.c2) IS FALSE))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 INNER JOIN rt0 ON ((((rt0.c1)<(vt0.c0)))>=(((rt0.c2) IS FALSE))) WHERE ((((((x'', rt0.c0, vt0.c0, vt0.c0, '-849939094')) BETWEEN ((x'622f', rt0.c2, rt0.c2, rt0.c1, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0)))) NOT BETWEEN ((rt0.c0 IN ())) AND (((vt1.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((x'', rt0.c0, vt0.c0, vt0.c0, '-849939094')) BETWEEN ((x'622f', rt0.c2, rt0.c2, rt0.c1, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0)))) NOT BETWEEN ((rt0.c0 IN ())) AND (((vt1.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 INNER JOIN rt0 ON ((((rt0.c1)<(vt0.c0)))>=(((rt0.c2) IS FALSE))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 INNER JOIN rt0 ON ((((rt0.c1)<(vt0.c0)))>=(((rt0.c2) IS FALSE))) WHERE ((((((x'', rt0.c0, vt0.c0, vt0.c0, '-849939094')) BETWEEN ((x'622f', rt0.c2, rt0.c2, rt0.c1, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0)))) NOT BETWEEN ((rt0.c0 IN ())) AND (((vt1.c0)<(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (0xffffffffbc96ea4d) AND ((- (vt0.c0)))) CROSS JOIN vt1 ON CASE WHEN ((rt0.c2)<=(rt0.c2)) THEN ((rt0.c1)<>(rt0.c0)) ELSE ((((rt0.c1)AND(vt1.c0)))OR(vt1.c0)) END WHERE (LIKE(vt0.c0, rt0.c2, '-') COLLATE NOCASE) ORDER BY ((((rt0.c2)%(vt1.c0)))||(rt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((LIKE(vt0.c0, rt0.c2, '-') COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (0xffffffffbc96ea4d) AND ((- (vt0.c0)))) CROSS JOIN vt1 ON CASE WHEN ((rt0.c2)<=(rt0.c2)) THEN ((rt0.c1)!=(rt0.c0)) ELSE ((((rt0.c1)AND(vt1.c0)))OR(vt1.c0)) END ORDER BY ((((rt0.c2)%(vt1.c0)))||(rt0.c0 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (0xffffffffbc96ea4d) AND ((- (vt0.c0)))) CROSS JOIN vt1 ON CASE WHEN ((rt0.c2)<=(rt0.c2)) THEN ((rt0.c1)<>(rt0.c0)) ELSE ((((rt0.c1)AND(vt1.c0)))OR(vt1.c0)) END WHERE (LIKE(vt0.c0, rt0.c2, '-') COLLATE NOCASE) ORDER BY ((((rt0.c2)%(vt1.c0)))||(rt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((LIKE(vt0.c0, rt0.c2, '-') COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (0xffffffffbc96ea4d) AND ((- (vt0.c0)))) CROSS JOIN vt1 ON CASE WHEN ((rt0.c2)<=(rt0.c2)) THEN ((rt0.c1)!=(rt0.c0)) ELSE ((((rt0.c1)AND(vt1.c0)))OR(vt1.c0)) END ORDER BY ((((rt0.c2)%(vt1.c0)))||(rt0.c0 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (0xffffffffbc96ea4d) AND ((- (vt0.c0)))) CROSS JOIN vt1 ON CASE WHEN ((rt0.c2)<=(rt0.c2)) THEN ((rt0.c1)<>(rt0.c0)) ELSE ((((rt0.c1)AND(vt1.c0)))OR(vt1.c0)) END WHERE (LIKE(vt0.c0, rt0.c2, '-') COLLATE NOCASE) ORDER BY ((((rt0.c2)%(vt1.c0)))||(rt0.c0 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE -1581852511 END) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (vt0.c0))) ORDER BY (((0Xffffffffb49b708a)<=(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE -1581852511 END) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((0xffffffffb49b708a)<=(vt0.c0)) IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE -1581852511 END) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (vt0.c0))) ORDER BY (((0Xffffffffb49b708a)<=(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE -1581852511 END) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((0xffffffffb49b708a)<=(vt0.c0)) IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE -1581852511 END) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (vt0.c0))) ORDER BY (((0Xffffffffb49b708a)<=(vt0.c0)) IN ()) DESC;
SELECT ALL * FROM rt0 WHERE (((NULL) NOT BETWEEN (((rt0.c0)>=(rt0.c1))) AND (((rt0.c1)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((rt0.c0)>=(rt0.c1))) AND (((rt0.c1)<<(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((NULL) NOT BETWEEN (((rt0.c0)>=(rt0.c1))) AND (((rt0.c1)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((rt0.c0)>=(rt0.c1))) AND (((rt0.c1)<<(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((NULL) NOT BETWEEN (((rt0.c0)>=(rt0.c1))) AND (((rt0.c1)<<(rt0.c0)))));
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CASE ((vt0.c0) IS FALSE)  WHEN ((vt0.c0) IS TRUE) THEN '-1264881526' END WHERE ((NOT (((vt0.c0)LIKE(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CASE ((vt0.c0) IS FALSE)  WHEN ((vt0.c0) IS TRUE) THEN '-1264881526' END);
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CASE ((vt0.c0) IS FALSE)  WHEN ((vt0.c0) IS TRUE) THEN '-1264881526' END WHERE ((NOT (((vt0.c0)LIKE(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CASE ((vt0.c0) IS FALSE)  WHEN ((vt0.c0) IS TRUE) THEN '-1264881526' END);
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CASE ((vt0.c0) IS FALSE)  WHEN ((vt0.c0) IS TRUE) THEN '-1264881526' END WHERE ((NOT (((vt0.c0)LIKE(vt1.c0)))));
SELECT * FROM vt0, vt1 WHERE (((((((vt1.c0) ISNULL))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(0xffffffff8770e5e0))) ORDER BY CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 512223016 THEN vt1.c0 WHEN '355946674' THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY, CASE WHEN ((vt1.c0)-(NULL)) THEN CAST(0.3715910548429424 AS TEXT) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) ISNULL))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(0Xffffffff8770e5e0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 512223016 THEN vt1.c0 WHEN '355946674' THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY, CASE WHEN ((vt1.c0)-(NULL)) THEN CAST(0.3715910548429424 AS TEXT) END ASC);
SELECT * FROM vt0, vt1 WHERE (((((((vt1.c0) ISNULL))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(0xffffffff8770e5e0))) ORDER BY CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 512223016 THEN vt1.c0 WHEN '355946674' THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY, CASE WHEN ((vt1.c0)-(NULL)) THEN CAST(0.3715910548429424 AS TEXT) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) ISNULL))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(0Xffffffff8770e5e0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 512223016 THEN vt1.c0 WHEN '355946674' THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY, CASE WHEN ((vt1.c0)-(NULL)) THEN CAST(0.3715910548429424 AS TEXT) END ASC);
SELECT * FROM vt0, vt1 WHERE (((((((vt1.c0) ISNULL))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(0xffffffff8770e5e0))) ORDER BY CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 512223016 THEN vt1.c0 WHEN '355946674' THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY, CASE WHEN ((vt1.c0)-(NULL)) THEN CAST(0.3715910548429424 AS TEXT) END ASC;
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST((+ (vt0.c0)) AS NUMERIC)) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST((+ (vt0.c0)) AS NUMERIC)) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST((+ (vt0.c0)) AS NUMERIC)) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) COLLATE NOCASE  NULLS LAST;
SELECT * FROM vt1, rt0, vt0 WHERE (CASE WHEN (((vt0.c0))<=((rt0.c2))) THEN CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN (rt0.c0 IN (x'')) THEN (+ (rt0.c2)) WHEN ((rt0.c0)*(rt0.c2)) THEN json_object(0.7367586449000157, vt1.c0, '-379677671', rt0.c1) ELSE ((vt1.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))<=((rt0.c2))) THEN CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN (rt0.c0 IN (x'')) THEN (+ (rt0.c2)) WHEN ((rt0.c0)*(rt0.c2)) THEN json_object(0.7367586449000157, vt1.c0, '-379677671', rt0.c1) ELSE ((vt1.c0) NOT NULL) END) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (CASE WHEN (((vt0.c0))<=((rt0.c2))) THEN CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN (rt0.c0 IN (x'')) THEN (+ (rt0.c2)) WHEN ((rt0.c0)*(rt0.c2)) THEN json_object(0.7367586449000157, vt1.c0, '-379677671', rt0.c1) ELSE ((vt1.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))<=((rt0.c2))) THEN CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN (rt0.c0 IN (x'')) THEN (+ (rt0.c2)) WHEN ((rt0.c0)*(rt0.c2)) THEN json_object(0.7367586449000157, vt1.c0, '-379677671', rt0.c1) ELSE ((vt1.c0) NOT NULL) END) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (CASE WHEN (((vt0.c0))<=((rt0.c2))) THEN CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN (rt0.c0 IN (x'')) THEN (+ (rt0.c2)) WHEN ((rt0.c0)*(rt0.c2)) THEN json_object(0.7367586449000157, vt1.c0, '-379677671', rt0.c1) ELSE ((vt1.c0) NOT NULL) END);
SELECT * FROM vt0 WHERE (x'cacb') ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)==('Hà«'));
SELECT SUM(count) FROM (SELECT ALL ((x'cacb') IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)=('Hà«')));
SELECT * FROM vt0 WHERE (x'cacb') ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)==('Hà«'));
SELECT SUM(count) FROM (SELECT ALL ((x'cacb') IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)=('Hà«')));
SELECT * FROM vt0 WHERE (x'cacb') ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)==('Hà«'));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c2) IS TRUE))AND((((rt0.c0, rt0.c0, vt1.c0))<=((vt1.c0, vt1.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))AND((((rt0.c0, rt0.c0, vt1.c0))<=((vt1.c0, vt1.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c2) IS TRUE))AND((((rt0.c0, rt0.c0, vt1.c0))<=((vt1.c0, vt1.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))AND((((rt0.c0, rt0.c0, vt1.c0))<=((vt1.c0, vt1.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c2) IS TRUE))AND((((rt0.c0, rt0.c0, vt1.c0))<=((vt1.c0, vt1.c0, rt0.c1))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE RTRIM) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ((0xffffffffb8f65778 IN ()), ((vt1.c0)<<(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ((0Xffffffffb8f65778 IN ()), ((vt1.c0)<<(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE RTRIM) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ((0xffffffffb8f65778 IN ()), ((vt1.c0)<<(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ((0Xffffffffb8f65778 IN ()), ((vt1.c0)<<(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE RTRIM) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ((0xffffffffb8f65778 IN ()), ((vt1.c0)<<(vt1.c0)))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))<=(((rt0.c1)<=(rt0.c1)))), ((((0X18f4995a IN ())))<>(('Bâ´')));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))<=(((rt0.c1)<=(rt0.c1)))), ((((0X18f4995a IN ())))<>(('Bâ´'))));
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))<=(((rt0.c1)<=(rt0.c1)))), ((((0X18f4995a IN ())))<>(('Bâ´')));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))<=(((rt0.c1)<=(rt0.c1)))), ((((0X18f4995a IN ())))<>(('Bâ´'))));
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))<=(((rt0.c1)<=(rt0.c1)))), ((((0X18f4995a IN ())))<>(('Bâ´')));
SELECT ALL COUNT(*) FROM rt0 WHERE (highlight(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)), rt0.c1, rt0.c0 COLLATE RTRIM, ((0.4380803905151063)+(rt0.c1)))) ORDER BY (((((((rt0.c2))!=((rt0.c0))))AND(CAST(rt0.c1 AS REAL))))OR(rt0.c0)), ((((rt0.c1, -5.77374574E8, rt0.c1)) NOT BETWEEN ((rt0.c1, x'', rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2))) IN (CAST(rt0.c2 AS NUMERIC)))  NULLS LAST, x'';
SELECT SUM(count) FROM (SELECT ALL ((highlight(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)), rt0.c1, rt0.c0 COLLATE RTRIM, ((0.4380803905151063)+(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c2))<>((rt0.c0))))AND(CAST(rt0.c1 AS REAL))))OR(rt0.c0)), ((((rt0.c1, -5.77374574E8, rt0.c1)) NOT BETWEEN ((rt0.c1, x'', rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2))) IN (CAST(rt0.c2 AS NUMERIC)))  NULLS LAST, x'');
SELECT ALL COUNT(*) FROM rt0 WHERE (highlight(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)), rt0.c1, rt0.c0 COLLATE RTRIM, ((0.4380803905151063)+(rt0.c1)))) ORDER BY (((((((rt0.c2))!=((rt0.c0))))AND(CAST(rt0.c1 AS REAL))))OR(rt0.c0)), ((((rt0.c1, -5.77374574E8, rt0.c1)) NOT BETWEEN ((rt0.c1, x'', rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2))) IN (CAST(rt0.c2 AS NUMERIC)))  NULLS LAST, x'';
SELECT SUM(count) FROM (SELECT ALL ((highlight(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)), rt0.c1, rt0.c0 COLLATE RTRIM, ((0.4380803905151063)+(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c2))<>((rt0.c0))))AND(CAST(rt0.c1 AS REAL))))OR(rt0.c0)), ((((rt0.c1, -5.77374574E8, rt0.c1)) NOT BETWEEN ((rt0.c1, x'', rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2))) IN (CAST(rt0.c2 AS NUMERIC)))  NULLS LAST, x'');
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)|(rt0.c1))) BETWEEN (HEX(rt0.c0)) AND ((NOT (vt0.c0)))) WHERE (CAST((~ (rt0.c2)) AS REAL)) ORDER BY vt0.c0  NULLS LAST, ((((rt0.c0)GLOB(NULL))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)|(rt0.c1))) BETWEEN (HEX(rt0.c0)) AND ((NOT (vt0.c0)))) ORDER BY vt0.c0  NULLS LAST, ((((rt0.c0)GLOB(NULL))) IS FALSE) ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)|(rt0.c1))) BETWEEN (HEX(rt0.c0)) AND ((NOT (vt0.c0)))) WHERE (CAST((~ (rt0.c2)) AS REAL)) ORDER BY vt0.c0  NULLS LAST, ((((rt0.c0)GLOB(NULL))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)|(rt0.c1))) BETWEEN (HEX(rt0.c0)) AND ((NOT (vt0.c0)))) ORDER BY vt0.c0  NULLS LAST, ((((rt0.c0)GLOB(NULL))) IS FALSE) ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)|(rt0.c1))) BETWEEN (HEX(rt0.c0)) AND ((NOT (vt0.c0)))) WHERE (CAST((~ (rt0.c2)) AS REAL)) ORDER BY vt0.c0  NULLS LAST, ((((rt0.c0)GLOB(NULL))) IS FALSE) ASC;
SELECT * FROM vt0 WHERE (((((((vt0.c0) IS FALSE))AND(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c0)+(vt0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (x'052b') AND ((vt0.c0 IN (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS FALSE))AND(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (x'052b') AND ((vt0.c0 IN (vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (((((((vt0.c0) IS FALSE))AND(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c0)+(vt0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (x'052b') AND ((vt0.c0 IN (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS FALSE))AND(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (x'052b') AND ((vt0.c0 IN (vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (((((((vt0.c0) IS FALSE))AND(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c0)+(vt0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (x'052b') AND ((vt0.c0 IN (vt0.c0)))) DESC;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((CAST(rt0.c1 AS TEXT))||((- (rt0.c2)))) LEFT OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((CAST(rt0.c1 AS TEXT))||((- (rt0.c2)))) LEFT OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((CAST(rt0.c1 AS TEXT))||((- (rt0.c2)))) LEFT OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((CAST(rt0.c1 AS TEXT))||((- (rt0.c2)))) LEFT OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((CAST(rt0.c1 AS TEXT))||((- (rt0.c2)))) LEFT OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE(vt0.c0, vt0.c0, '*') COLLATE BINARY) ORDER BY (((+ (vt0.c0))) ISNULL) DESC  NULLS FIRST, ((vt0.c0)*(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((LIKE(vt0.c0, vt0.c0, '*') COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0))) ISNULL) DESC  NULLS FIRST, ((vt0.c0)*(vt0.c0)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE(vt0.c0, vt0.c0, '*') COLLATE BINARY) ORDER BY (((+ (vt0.c0))) ISNULL) DESC  NULLS FIRST, ((vt0.c0)*(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((LIKE(vt0.c0, vt0.c0, '*') COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0))) ISNULL) DESC  NULLS FIRST, ((vt0.c0)*(vt0.c0)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE(vt0.c0, vt0.c0, '*') COLLATE BINARY) ORDER BY (((+ (vt0.c0))) ISNULL) DESC  NULLS FIRST, ((vt0.c0)*(vt0.c0)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (NULL);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt1.c0)IS(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt1.c0)IS(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt1.c0)IS(vt1.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((rt0.c0) IS TRUE)) ORDER BY (((vt1.c0)) NOT BETWEEN ((LTRIM(vt1.c0))) AND ((CAST(vt0.c0 AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((LTRIM(vt1.c0))) AND ((CAST(vt0.c0 AS BLOB))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((rt0.c0) IS TRUE)) ORDER BY (((vt1.c0)) NOT BETWEEN ((LTRIM(vt1.c0))) AND ((CAST(vt0.c0 AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((LTRIM(vt1.c0))) AND ((CAST(vt0.c0 AS BLOB))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((rt0.c0) IS TRUE)) ORDER BY (((vt1.c0)) NOT BETWEEN ((LTRIM(vt1.c0))) AND ((CAST(vt0.c0 AS BLOB))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (vt0.c0);
SELECT ALL * FROM rt0 WHERE ((- (CASE x'fdaa'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE '-1664391321' END))) ORDER BY (IFNULL(rt0.c0, rt0.c1) IN ())  NULLS FIRST, (((rt0.c2, rt0.c2, rt0.c2)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), 0X5cf38b2d, ((((rt0.c2)OR('ì¥7u')))AND(rt0.c2)))) AND ((-7.94716733E8, rt0.c0 COLLATE BINARY, (+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (CASE x'fdaa'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE '-1664391321' END))) IS TRUE)  as count FROM rt0 ORDER BY (IFNULL(rt0.c0, rt0.c1) IN ())  NULLS FIRST, (((rt0.c2, rt0.c2, rt0.c2)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), 0x5cf38b2d, ((((rt0.c2)OR('ì¥7u')))AND(rt0.c2)))) AND ((-7.94716733E8, rt0.c0 COLLATE BINARY, (+ (rt0.c0))))));
SELECT ALL * FROM rt0 WHERE ((- (CASE x'fdaa'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE '-1664391321' END))) ORDER BY (IFNULL(rt0.c0, rt0.c1) IN ())  NULLS FIRST, (((rt0.c2, rt0.c2, rt0.c2)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), 0X5cf38b2d, ((((rt0.c2)OR('ì¥7u')))AND(rt0.c2)))) AND ((-7.94716733E8, rt0.c0 COLLATE BINARY, (+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (CASE x'fdaa'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE '-1664391321' END))) IS TRUE)  as count FROM rt0 ORDER BY (IFNULL(rt0.c0, rt0.c1) IN ())  NULLS FIRST, (((rt0.c2, rt0.c2, rt0.c2)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), 0x5cf38b2d, ((((rt0.c2)OR('ì¥7u')))AND(rt0.c2)))) AND ((-7.94716733E8, rt0.c0 COLLATE BINARY, (+ (rt0.c0))))));
SELECT ALL * FROM rt0 WHERE ((- (CASE x'fdaa'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE '-1664391321' END))) ORDER BY (IFNULL(rt0.c0, rt0.c1) IN ())  NULLS FIRST, (((rt0.c2, rt0.c2, rt0.c2)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), 0X5cf38b2d, ((((rt0.c2)OR('ì¥7u')))AND(rt0.c2)))) AND ((-7.94716733E8, rt0.c0 COLLATE BINARY, (+ (rt0.c0)))));
SELECT * FROM vt1 WHERE (MAX(vt1.c0 COLLATE NOCASE, CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((MAX(vt1.c0 COLLATE NOCASE, CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((vt1.c0)))  NULLS LAST);
SELECT * FROM vt1 WHERE (MAX(vt1.c0 COLLATE NOCASE, CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((MAX(vt1.c0 COLLATE NOCASE, CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((vt1.c0)))  NULLS LAST);
SELECT * FROM vt1 WHERE (MAX(vt1.c0 COLLATE NOCASE, CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((vt1.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((load_extension(vt1.c0, vt1.c0))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((load_extension(vt1.c0, vt1.c0))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((load_extension(vt1.c0, vt1.c0))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((load_extension(vt1.c0, vt1.c0))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE ((((rt0.c0 IN ()))%(SQLITE_COMPILEOPTION_GET(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))%(SQLITE_COMPILEOPTION_GET(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE ((((rt0.c0 IN ()))%(SQLITE_COMPILEOPTION_GET(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))%(SQLITE_COMPILEOPTION_GET(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE ((((rt0.c0 IN ()))%(SQLITE_COMPILEOPTION_GET(rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, 0.8558172044139966, ((vt0.c0)IS NOT(vt0.c0)))) AND ((((vt1.c0)/(NULL)), ((vt0.c0)==(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) ORDER BY json_quote(((NULL) IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, 0.8558172044139966, ((vt0.c0)IS NOT(vt0.c0)))) AND ((((vt1.c0)/(NULL)), ((vt0.c0)==(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY json_quote(((NULL) IS TRUE)) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, 0.8558172044139966, ((vt0.c0)IS NOT(vt0.c0)))) AND ((((vt1.c0)/(NULL)), ((vt0.c0)==(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) ORDER BY json_quote(((NULL) IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, 0.8558172044139966, ((vt0.c0)IS NOT(vt0.c0)))) AND ((((vt1.c0)/(NULL)), ((vt0.c0)==(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY json_quote(((NULL) IS TRUE)) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, 0.8558172044139966, ((vt0.c0)IS NOT(vt0.c0)))) AND ((((vt1.c0)/(NULL)), ((vt0.c0)==(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) ORDER BY json_quote(((NULL) IS TRUE)) DESC;
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) IS FALSE)) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) IS FALSE)) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) IS FALSE)) ORDER BY rt0.c0 ASC;
SELECT * FROM vt0, rt0 WHERE (0.36583300989337764) ORDER BY (((rt0.c0)) NOT BETWEEN ((0.926987923416857)) AND (('-1664391321' COLLATE RTRIM))) DESC, (((((((vt0.c0))!=((rt0.c2))))AND(rt0.c2)))AND(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.36583300989337764) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((0.926987923416857)) AND (('-1664391321' COLLATE RTRIM))) DESC, (((((((vt0.c0))!=((rt0.c2))))AND(rt0.c2)))AND(rt0.c1))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (0.36583300989337764) ORDER BY (((rt0.c0)) NOT BETWEEN ((0.926987923416857)) AND (('-1664391321' COLLATE RTRIM))) DESC, (((((((vt0.c0))!=((rt0.c2))))AND(rt0.c2)))AND(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.36583300989337764) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((0.926987923416857)) AND (('-1664391321' COLLATE RTRIM))) DESC, (((((((vt0.c0))!=((rt0.c2))))AND(rt0.c2)))AND(rt0.c1))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (0.36583300989337764) ORDER BY (((rt0.c0)) NOT BETWEEN ((0.926987923416857)) AND (('-1664391321' COLLATE RTRIM))) DESC, (((((((vt0.c0))!=((rt0.c2))))AND(rt0.c2)))AND(rt0.c1))  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (LIKELY(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (LIKELY(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (LIKELY(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(vt1.c0))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END) NOT BETWEEN (IFNULL(x'', rt0.c2)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (('451158079')<<(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))), (((vt1.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((vt1.c0)||(rt0.c0)))))  NULLS LAST, vt1.c0, rt0.c1 COLLATE RTRIM COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END) NOT BETWEEN (IFNULL(x'', rt0.c2)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (('451158079')<<(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))), (((vt1.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((vt1.c0)||(rt0.c0)))))  NULLS LAST, vt1.c0, rt0.c1 COLLATE RTRIM COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END) NOT BETWEEN (IFNULL(x'', rt0.c2)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (('451158079')<<(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))), (((vt1.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((vt1.c0)||(rt0.c0)))))  NULLS LAST, vt1.c0, rt0.c1 COLLATE RTRIM COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END) NOT BETWEEN (IFNULL(x'', rt0.c2)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (('451158079')<<(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))), (((vt1.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((vt1.c0)||(rt0.c0)))))  NULLS LAST, vt1.c0, rt0.c1 COLLATE RTRIM COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END) NOT BETWEEN (IFNULL(x'', rt0.c2)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (('451158079')<<(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))), (((vt1.c0)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((vt1.c0)||(rt0.c0)))))  NULLS LAST, vt1.c0, rt0.c1 COLLATE RTRIM COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.5964537455710587 END AS NUMERIC) WHERE (((0.18599244280995764 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.18599244280995764 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.5964537455710587 END AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.5964537455710587 END AS NUMERIC) WHERE (((0.18599244280995764 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.18599244280995764 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.5964537455710587 END AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.5964537455710587 END AS NUMERIC) WHERE (((0.18599244280995764 COLLATE RTRIM) NOT NULL));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(((rt0.c2) IS FALSE))));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST((+ (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST((+ (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST((+ (vt0.c0)) AS REAL));
SELECT ALL * FROM vt0 WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM rt0 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (NULL)));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)AND(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)AND(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)AND(vt0.c0)) AS REAL));
SELECT ALL * FROM rt0, vt1 WHERE ((+ (((rt0.c1)%(rt0.c1))))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)%(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c2 DESC);
SELECT ALL * FROM rt0, vt1 WHERE ((+ (((rt0.c1)%(rt0.c1))))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)%(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c2 DESC);
SELECT ALL * FROM rt0, vt1 WHERE ((+ (((rt0.c1)%(rt0.c1))))) ORDER BY rt0.c2 DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF(((((vt1.c0)AND(vt1.c0)))AND(0X107ee0da)), GLOB(vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((vt1.c0)AND(vt1.c0)))AND(0X107ee0da)), GLOB(vt1.c0, vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF(((((vt1.c0)AND(vt1.c0)))AND(0X107ee0da)), GLOB(vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((vt1.c0)AND(vt1.c0)))AND(0X107ee0da)), GLOB(vt1.c0, vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF(((((vt1.c0)AND(vt1.c0)))AND(0X107ee0da)), GLOB(vt1.c0, vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((x'5341', vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))))+(x'bbbe')));
SELECT SUM(count) FROM (SELECT ALL (((((((x'5341', vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))+(x'bbbe'))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((x'5341', vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))))+(x'bbbe')));
SELECT SUM(count) FROM (SELECT ALL (((((((x'5341', vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))+(x'bbbe'))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((x'5341', vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))))+(x'bbbe')));
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE (HEX(vt0.c0));
SELECT SUM(count) FROM (SELECT ((HEX(vt0.c0)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE (HEX(vt0.c0));
SELECT SUM(count) FROM (SELECT ((HEX(vt0.c0)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE (HEX(vt0.c0));
SELECT * FROM vt1 WHERE (CASE MIN(vt1.c0, 0x650d5f41, vt1.c0, vt1.c0)  WHEN ((vt1.c0)*(vt1.c0)) THEN CAST('lë¢' AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE MIN(vt1.c0, 0x650d5f41, vt1.c0, vt1.c0)  WHEN ((vt1.c0)*(vt1.c0)) THEN CAST('lë¢' AS INTEGER) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE MIN(vt1.c0, 0x650d5f41, vt1.c0, vt1.c0)  WHEN ((vt1.c0)*(vt1.c0)) THEN CAST('lë¢' AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE MIN(vt1.c0, 0x650d5f41, vt1.c0, vt1.c0)  WHEN ((vt1.c0)*(vt1.c0)) THEN CAST('lë¢' AS INTEGER) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE MIN(vt1.c0, 0x650d5f41, vt1.c0, vt1.c0)  WHEN ((vt1.c0)*(vt1.c0)) THEN CAST('lë¢' AS INTEGER) END);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0) NOTNULL) IN (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOTNULL) IN (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0) NOTNULL) IN (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOTNULL) IN (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0) NOTNULL) IN (vt1.c0 COLLATE BINARY)));
SELECT * FROM rt0, vt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((rt0.c1 IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((NULL)LIKE(rt0.c0)))) AND (('-372462081'))) WHERE (0X3786cc63);
SELECT SUM(count) FROM (SELECT ALL ((0x3786cc63) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((NULL)LIKE(rt0.c0)))) AND (('-372462081'))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((NULL)LIKE(rt0.c0)))) AND (('-372462081'))) WHERE (0X3786cc63);
SELECT SUM(count) FROM (SELECT ALL ((0x3786cc63) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((NULL)LIKE(rt0.c0)))) AND (('-372462081'))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((NULL)LIKE(rt0.c0)))) AND (('-372462081'))) WHERE (0X3786cc63);
SELECT COUNT(*) FROM vt0 WHERE ((~ (0xffffffffd0a195c3))) ORDER BY (((('zofaa')OR(vt0.c0)))|(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (0Xffffffffd0a195c3))) IS TRUE)  as count FROM vt0 ORDER BY (((('zofaa')OR(vt0.c0)))|(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (0xffffffffd0a195c3))) ORDER BY (((('zofaa')OR(vt0.c0)))|(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (0Xffffffffd0a195c3))) IS TRUE)  as count FROM vt0 ORDER BY (((('zofaa')OR(vt0.c0)))|(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (0xffffffffd0a195c3))) ORDER BY (((('zofaa')OR(vt0.c0)))|(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) ISNULL)))<((UNLIKELY('('))))) ORDER BY rt0.c1 ASC, CASE rt0.c2  WHEN CAST(rt0.c1 AS TEXT) THEN x'dffe' END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) ISNULL)))<((UNLIKELY('('))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC, CASE rt0.c2  WHEN CAST(rt0.c1 AS TEXT) THEN x'dffe' END ASC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) ISNULL)))<((UNLIKELY('('))))) ORDER BY rt0.c1 ASC, CASE rt0.c2  WHEN CAST(rt0.c1 AS TEXT) THEN x'dffe' END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) ISNULL)))<((UNLIKELY('('))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC, CASE rt0.c2  WHEN CAST(rt0.c1 AS TEXT) THEN x'dffe' END ASC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) ISNULL)))<((UNLIKELY('('))))) ORDER BY rt0.c1 ASC, CASE rt0.c2  WHEN CAST(rt0.c1 AS TEXT) THEN x'dffe' END ASC;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END AS INTEGER)) ORDER BY ((rt0.c2 COLLATE RTRIM)==((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), CAST(rt0.c2 AS NUMERIC) ASC, ((NULL) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (SQLITE_COMPILEOPTION_GET(rt0.c1)))  NULLS FIRST, (((+ (rt0.c0))) BETWEEN (((rt0.c2)-(vt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END)) ASC, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2 COLLATE RTRIM)=((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), CAST(rt0.c2 AS NUMERIC) ASC, ((NULL) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (SQLITE_COMPILEOPTION_GET(rt0.c1)))  NULLS FIRST, (((+ (rt0.c0))) BETWEEN (((rt0.c2)-(vt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END)) ASC, rt0.c1 ASC);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END AS INTEGER)) ORDER BY ((rt0.c2 COLLATE RTRIM)==((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), CAST(rt0.c2 AS NUMERIC) ASC, ((NULL) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (SQLITE_COMPILEOPTION_GET(rt0.c1)))  NULLS FIRST, (((+ (rt0.c0))) BETWEEN (((rt0.c2)-(vt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END)) ASC, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2 COLLATE RTRIM)=((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), CAST(rt0.c2 AS NUMERIC) ASC, ((NULL) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (SQLITE_COMPILEOPTION_GET(rt0.c1)))  NULLS FIRST, (((+ (rt0.c0))) BETWEEN (((rt0.c2)-(vt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END)) ASC, rt0.c1 ASC);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END AS INTEGER)) ORDER BY ((rt0.c2 COLLATE RTRIM)==((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), CAST(rt0.c2 AS NUMERIC) ASC, ((NULL) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (SQLITE_COMPILEOPTION_GET(rt0.c1)))  NULLS FIRST, (((+ (rt0.c0))) BETWEEN (((rt0.c2)-(vt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END)) ASC, rt0.c1 ASC;
SELECT ALL COUNT(*) FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((((TRIM(rt0.c2, '1348733649'), (- (rt0.c0)), '742616714'))==((NULL, ((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), rt0.c1 COLLATE BINARY)))) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((TRIM(rt0.c2, '1348733649'), (- (rt0.c0)), '742616714'))==((NULL, ((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0 ORDER BY CAST(rt0.c2 COLLATE RTRIM AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((((TRIM(rt0.c2, '1348733649'), (- (rt0.c0)), '742616714'))==((NULL, ((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), rt0.c1 COLLATE BINARY)))) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((TRIM(rt0.c2, '1348733649'), (- (rt0.c0)), '742616714'))==((NULL, ((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0 ORDER BY CAST(rt0.c2 COLLATE RTRIM AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((((TRIM(rt0.c2, '1348733649'), (- (rt0.c0)), '742616714'))==((NULL, ((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), rt0.c1 COLLATE BINARY)))) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS REAL)  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 'OQYtb9I<n' WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) WHERE (HEX(vt0.c0)) ORDER BY ((COALESCE(rt0.c0, rt0.c0))||((((rt0.c2, rt0.c1, vt0.c0))<>((vt0.c0, rt0.c1, vt0.c0))))) DESC, (((((((((rt0.c0 IN (NULL)))AND((rt0.c0 IN ()))))AND(1412354857)))OR((((vt0.c0, rt0.c1, vt0.c0))<>((rt0.c1, vt0.c0, rt0.c1))))))OR(((rt0.c2)>>(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(vt0.c0)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 'OQYtb9I<n' WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) ORDER BY ((COALESCE(rt0.c0, rt0.c0))||((((rt0.c2, rt0.c1, vt0.c0))!=((vt0.c0, rt0.c1, vt0.c0))))) DESC, (((((((((rt0.c0 IN (NULL)))AND((rt0.c0 IN ()))))AND(1412354857)))OR((((vt0.c0, rt0.c1, vt0.c0))!=((rt0.c1, vt0.c0, rt0.c1))))))OR(((rt0.c2)>>(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 'OQYtb9I<n' WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) WHERE (HEX(vt0.c0)) ORDER BY ((COALESCE(rt0.c0, rt0.c0))||((((rt0.c2, rt0.c1, vt0.c0))<>((vt0.c0, rt0.c1, vt0.c0))))) DESC, (((((((((rt0.c0 IN (NULL)))AND((rt0.c0 IN ()))))AND(1412354857)))OR((((vt0.c0, rt0.c1, vt0.c0))<>((rt0.c1, vt0.c0, rt0.c1))))))OR(((rt0.c2)>>(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(vt0.c0)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 'OQYtb9I<n' WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) ORDER BY ((COALESCE(rt0.c0, rt0.c0))||((((rt0.c2, rt0.c1, vt0.c0))!=((vt0.c0, rt0.c1, vt0.c0))))) DESC, (((((((((rt0.c0 IN (NULL)))AND((rt0.c0 IN ()))))AND(1412354857)))OR((((vt0.c0, rt0.c1, vt0.c0))!=((rt0.c1, vt0.c0, rt0.c1))))))OR(((rt0.c2)>>(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 'OQYtb9I<n' WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) WHERE (HEX(vt0.c0)) ORDER BY ((COALESCE(rt0.c0, rt0.c0))||((((rt0.c2, rt0.c1, vt0.c0))<>((vt0.c0, rt0.c1, vt0.c0))))) DESC, (((((((((rt0.c0 IN (NULL)))AND((rt0.c0 IN ()))))AND(1412354857)))OR((((vt0.c0, rt0.c1, vt0.c0))<>((rt0.c1, vt0.c0, rt0.c1))))))OR(((rt0.c2)>>(rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (UPPER(((rt0.c1)|(rt0.c1)))) ORDER BY ((~ (vt0.c0)) IN ()) DESC  NULLS LAST, ((((((rt0.c1)/(vt0.c0)))OR((((rt0.c1))<>((rt0.c1))))))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c1)|(rt0.c1)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((~ (vt0.c0)) IN ()) DESC  NULLS LAST, ((((((rt0.c1)/(vt0.c0)))OR((((rt0.c1))<>((rt0.c1))))))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (UPPER(((rt0.c1)|(rt0.c1)))) ORDER BY ((~ (vt0.c0)) IN ()) DESC  NULLS LAST, ((((((rt0.c1)/(vt0.c0)))OR((((rt0.c1))<>((rt0.c1))))))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c1)|(rt0.c1)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((~ (vt0.c0)) IN ()) DESC  NULLS LAST, ((((((rt0.c1)/(vt0.c0)))OR((((rt0.c1))<>((rt0.c1))))))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (UPPER(((rt0.c1)|(rt0.c1)))) ORDER BY ((~ (vt0.c0)) IN ()) DESC  NULLS LAST, ((((((rt0.c1)/(vt0.c0)))OR((((rt0.c1))<>((rt0.c1))))))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE BINARY);
SELECT * FROM rt0, vt1, vt0 WHERE (CAST(((vt0.c0)LIKE(rt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)*(vt1.c0)))>(rt0.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)LIKE(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((((vt0.c0)*(vt1.c0)))>(rt0.c1 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM rt0, vt1, vt0 WHERE (CAST(((vt0.c0)LIKE(rt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)*(vt1.c0)))>(rt0.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)LIKE(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((((vt0.c0)*(vt1.c0)))>(rt0.c1 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM rt0, vt1, vt0 WHERE (CAST(((vt0.c0)LIKE(rt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)*(vt1.c0)))>(rt0.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (CASE WHEN CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN rt0.c2 WHEN rt0.c0 THEN ((((rt0.c0)AND(vt0.c0)))AND(rt0.c0)) WHEN GLOB(rt0.c2, vt1.c0) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) END) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN rt0.c2 WHEN rt0.c0 THEN ((((rt0.c0)AND(vt0.c0)))AND(rt0.c0)) WHEN GLOB(rt0.c2, vt1.c0) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (CASE WHEN CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN rt0.c2 WHEN rt0.c0 THEN ((((rt0.c0)AND(vt0.c0)))AND(rt0.c0)) WHEN GLOB(rt0.c2, vt1.c0) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) END) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN rt0.c2 WHEN rt0.c0 THEN ((((rt0.c0)AND(vt0.c0)))AND(rt0.c0)) WHEN GLOB(rt0.c2, vt1.c0) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (CASE WHEN CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN rt0.c2 WHEN rt0.c0 THEN ((((rt0.c0)AND(vt0.c0)))AND(rt0.c0)) WHEN GLOB(rt0.c2, vt1.c0) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) END) ORDER BY rt0.c2;
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0)>=(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0)>=(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0)>=(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0)>=(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0)>=(vt1.c0)) END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) ORDER BY (((~ (vt1.c0)))GLOB(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((~ (vt1.c0)))GLOB(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) ORDER BY (((~ (vt1.c0)))GLOB(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((~ (vt1.c0)))GLOB(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) ORDER BY (((~ (vt1.c0)))GLOB(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON UNLIKELY(DISTINCT ((vt1.c0)>=(vt0.c0))) WHERE (((((load_extension(vt0.c0))AND(-1658642473)))OR(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((load_extension(vt0.c0))AND(-1658642473)))OR(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON UNLIKELY(DISTINCT ((vt1.c0)>=(vt0.c0))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON UNLIKELY(DISTINCT ((vt1.c0)>=(vt0.c0))) WHERE (((((load_extension(vt0.c0))AND(-1658642473)))OR(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((load_extension(vt0.c0))AND(-1658642473)))OR(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON UNLIKELY(DISTINCT ((vt1.c0)>=(vt0.c0))));
SELECT * FROM vt1 WHERE (TYPEOF(DISTINCT (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (TYPEOF(DISTINCT (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (TYPEOF(DISTINCT (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))));
SELECT * FROM vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB));
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS REAL) COLLATE NOCASE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c0)+(rt0.c2))) IS FALSE) WHERE (((((rt0.c0)%(rt0.c1)))-(((rt0.c0)/(vt0.c0))))) ORDER BY (~ (((vt0.c0)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)%(rt0.c1)))-(((rt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c0)+(rt0.c2))) IS FALSE) ORDER BY (~ (((vt0.c0)||(vt0.c0)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c0)+(rt0.c2))) IS FALSE) WHERE (((((rt0.c0)%(rt0.c1)))-(((rt0.c0)/(vt0.c0))))) ORDER BY (~ (((vt0.c0)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)%(rt0.c1)))-(((rt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c0)+(rt0.c2))) IS FALSE) ORDER BY (~ (((vt0.c0)||(vt0.c0)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c0)+(rt0.c2))) IS FALSE) WHERE (((((rt0.c0)%(rt0.c1)))-(((rt0.c0)/(vt0.c0))))) ORDER BY (~ (((vt0.c0)||(vt0.c0))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY (((vt1.c0 IN ()))-((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ()))-((vt1.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY (((vt1.c0 IN ()))-((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ()))-((vt1.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY (((vt1.c0 IN ()))-((vt1.c0 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE -3.72462081E8  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END AS TEXT)) ORDER BY ((NULL) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE -3.72462081E8  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((NULL) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE -3.72462081E8  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END AS TEXT)) ORDER BY ((NULL) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE -3.72462081E8  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((NULL) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE -3.72462081E8  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END AS TEXT)) ORDER BY ((NULL) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((json_quote(rt0.c2)))==(((('zofaa')OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((json_quote(rt0.c2)))==(((('zofaa')OR(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((json_quote(rt0.c2)))==(((('zofaa')OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((json_quote(rt0.c2)))==(((('zofaa')OR(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((json_quote(rt0.c2)))==(((('zofaa')OR(rt0.c0))))));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((CAST(rt0.c1 AS REAL)) NOT BETWEEN (((rt0.c0)*('PxI]Ko,'))) AND (((rt0.c2) BETWEEN ('931581027') AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL)) NOT BETWEEN (((rt0.c0)*('PxI]Ko,'))) AND (((rt0.c2) BETWEEN ('931581027') AND (rt0.c2))))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((CAST(rt0.c1 AS REAL)) NOT BETWEEN (((rt0.c0)*('PxI]Ko,'))) AND (((rt0.c2) BETWEEN ('931581027') AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL)) NOT BETWEEN (((rt0.c0)*('PxI]Ko,'))) AND (((rt0.c2) BETWEEN ('931581027') AND (rt0.c2))))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((CAST(rt0.c1 AS REAL)) NOT BETWEEN (((rt0.c0)*('PxI]Ko,'))) AND (((rt0.c2) BETWEEN ('931581027') AND (rt0.c2)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'3343')>>(vt0.c0)))&(((vt1.c0)IS(vt1.c0))))) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(CASE WHEN vt1.c0 THEN -1.308243833E9 ELSE vt1.c0 END)))OR(vt1.c0)) ASC  NULLS LAST, ((((((((((vt1.c0) BETWEEN (-1.581852511E9) AND (0.9199808572698351)))OR((vt0.c0 IN ()))))OR(((vt1.c0)!=(vt1.c0)))))AND(((vt1.c0)IS(vt0.c0)))))OR('XR'))  NULLS FIRST, ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (x'1177'))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'3343')>>(vt0.c0)))&(((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(CASE WHEN vt1.c0 THEN -1.308243833E9 ELSE vt1.c0 END)))OR(vt1.c0)) ASC  NULLS LAST, ((((((((((vt1.c0) BETWEEN (-1.581852511E9) AND (0.9199808572698351)))OR((vt0.c0 IN ()))))OR(((vt1.c0)<>(vt1.c0)))))AND(((vt1.c0)IS(vt0.c0)))))OR('XR'))  NULLS FIRST, ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (x'1177'))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'3343')>>(vt0.c0)))&(((vt1.c0)IS(vt1.c0))))) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(CASE WHEN vt1.c0 THEN -1.308243833E9 ELSE vt1.c0 END)))OR(vt1.c0)) ASC  NULLS LAST, ((((((((((vt1.c0) BETWEEN (-1.581852511E9) AND (0.9199808572698351)))OR((vt0.c0 IN ()))))OR(((vt1.c0)!=(vt1.c0)))))AND(((vt1.c0)IS(vt0.c0)))))OR('XR'))  NULLS FIRST, ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (x'1177'))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'3343')>>(vt0.c0)))&(((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(CASE WHEN vt1.c0 THEN -1.308243833E9 ELSE vt1.c0 END)))OR(vt1.c0)) ASC  NULLS LAST, ((((((((((vt1.c0) BETWEEN (-1.581852511E9) AND (0.9199808572698351)))OR((vt0.c0 IN ()))))OR(((vt1.c0)<>(vt1.c0)))))AND(((vt1.c0)IS(vt0.c0)))))OR('XR'))  NULLS FIRST, ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (x'1177'))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'3343')>>(vt0.c0)))&(((vt1.c0)IS(vt1.c0))))) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(CASE WHEN vt1.c0 THEN -1.308243833E9 ELSE vt1.c0 END)))OR(vt1.c0)) ASC  NULLS LAST, ((((((((((vt1.c0) BETWEEN (-1.581852511E9) AND (0.9199808572698351)))OR((vt0.c0 IN ()))))OR(((vt1.c0)!=(vt1.c0)))))AND(((vt1.c0)IS(vt0.c0)))))OR('XR'))  NULLS FIRST, ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (x'1177'))) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((~ (((rt0.c2)LIKE(vt1.c0))))) ORDER BY NULLIF(DISTINCT ((((((((((((vt0.c0)OR(rt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)), NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY NULLIF(DISTINCT ((((((((((((vt0.c0)OR(rt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)), NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((~ (((rt0.c2)LIKE(vt1.c0))))) ORDER BY NULLIF(DISTINCT ((((((((((((vt0.c0)OR(rt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)), NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY NULLIF(DISTINCT ((((((((((((vt0.c0)OR(rt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)), NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((~ (((rt0.c2)LIKE(vt1.c0))))) ORDER BY NULLIF(DISTINCT ((((((((((((vt0.c0)OR(rt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)), NULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END) ORDER BY (- (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(NULL)))OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(NULL)))OR(vt1.c0)))AND(vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END) ORDER BY (- (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(NULL)))OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(NULL)))OR(vt1.c0)))AND(vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END) ORDER BY (- (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(NULL)))OR(vt1.c0)))AND(vt1.c0))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (1981490610) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((1981490610) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (1981490610) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((1981490610) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (1981490610) ORDER BY rt0.c1  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0 IN ())))<>((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ())))!=((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0 IN ())))<>((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ())))!=((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0 IN ())))<>((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON vt1.c0 WHERE (((-1.581852511E9) BETWEEN (json_valid(rt0.c2)) AND (SQLITE_COMPILEOPTION_USED(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((-1.581852511E9) BETWEEN (json_valid(rt0.c2)) AND (SQLITE_COMPILEOPTION_USED(rt0.c2)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON vt1.c0);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON vt1.c0 WHERE (((-1.581852511E9) BETWEEN (json_valid(rt0.c2)) AND (SQLITE_COMPILEOPTION_USED(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((-1.581852511E9) BETWEEN (json_valid(rt0.c2)) AND (SQLITE_COMPILEOPTION_USED(rt0.c2)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON vt1.c0);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON vt1.c0 WHERE (((-1.581852511E9) BETWEEN (json_valid(rt0.c2)) AND (SQLITE_COMPILEOPTION_USED(rt0.c2))));
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)LIKE('1203813155')))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, '')) AND ((vt1.c0, NULL, vt1.c0)))))) ORDER BY json(vt1.c0);
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)LIKE('1203813155')))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, '')) AND ((vt1.c0, NULL, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY json(vt1.c0));
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)LIKE('1203813155')))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, '')) AND ((vt1.c0, NULL, vt1.c0)))))) ORDER BY json(vt1.c0);
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)LIKE('1203813155')))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, '')) AND ((vt1.c0, NULL, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY json(vt1.c0));
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN '' ELSE rt0.c0 END IN ())) ORDER BY ((rt0.c1) NOT BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) AND ((vt1.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN '' ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((rt0.c1) NOT BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) AND ((vt1.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN '' ELSE rt0.c0 END IN ())) ORDER BY ((rt0.c1) NOT BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) AND ((vt1.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN '' ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((rt0.c1) NOT BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) AND ((vt1.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN '' ELSE rt0.c0 END IN ())) ORDER BY ((rt0.c1) NOT BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) AND ((vt1.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (COALESCE(((rt0.c0) NOT NULL), ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) ORDER BY (((vt0.c0 IN ()))>=(((((((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(rt0.c1)))), (((- (rt0.c2))) NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END) AND (((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt0.c0) NOT NULL), ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((vt0.c0 IN ()))>=(((((((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(rt0.c1)))), (((- (rt0.c2))) NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END) AND (((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (COALESCE(((rt0.c0) NOT NULL), ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) ORDER BY (((vt0.c0 IN ()))>=(((((((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(rt0.c1)))), (((- (rt0.c2))) NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END) AND (((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt0.c0) NOT NULL), ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((vt0.c0 IN ()))>=(((((((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(rt0.c1)))), (((- (rt0.c2))) NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END) AND (((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (COALESCE(((rt0.c0) NOT NULL), ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) ORDER BY (((vt0.c0 IN ()))>=(((((((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(rt0.c1)))), (((- (rt0.c2))) NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END) AND (((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT ALL * FROM vt1, vt0 INNER JOIN rt0 ON rt0.c1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 INNER JOIN rt0 ON rt0.c1);
SELECT ALL * FROM vt1, vt0 INNER JOIN rt0 ON rt0.c1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 INNER JOIN rt0 ON rt0.c1);
SELECT ALL * FROM vt1, vt0 INNER JOIN rt0 ON rt0.c1 WHERE (vt0.c0);
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (CASE rt0.c2  WHEN ((((rt0.c1)AND(vt0.c0)))AND('-1349974672')) THEN (0x429ac959 IN ()) END) ORDER BY CASE WHEN rt0.c0 THEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c2)!=(rt0.c0)) WHEN (((vt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, 'á§_C', vt0.c0)) AND ((NULL, vt1.c0, rt0.c1))) THEN vt0.c0 ELSE (vt0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN ((((rt0.c1)AND(vt0.c0)))AND('-1349974672')) THEN (0x429ac959 IN ()) END) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0 ORDER BY CASE WHEN rt0.c0 THEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c2)!=(rt0.c0)) WHEN (((vt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, 'á§_C', vt0.c0)) AND ((NULL, vt1.c0, rt0.c1))) THEN vt0.c0 ELSE (vt0.c0 IN ()) END DESC);
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (CASE rt0.c2  WHEN ((((rt0.c1)AND(vt0.c0)))AND('-1349974672')) THEN (0x429ac959 IN ()) END) ORDER BY CASE WHEN rt0.c0 THEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c2)!=(rt0.c0)) WHEN (((vt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, 'á§_C', vt0.c0)) AND ((NULL, vt1.c0, rt0.c1))) THEN vt0.c0 ELSE (vt0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN ((((rt0.c1)AND(vt0.c0)))AND('-1349974672')) THEN (0x429ac959 IN ()) END) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0 ORDER BY CASE WHEN rt0.c0 THEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c2)!=(rt0.c0)) WHEN (((vt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, 'á§_C', vt0.c0)) AND ((NULL, vt1.c0, rt0.c1))) THEN vt0.c0 ELSE (vt0.c0 IN ()) END DESC);
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (CASE rt0.c2  WHEN ((((rt0.c1)AND(vt0.c0)))AND('-1349974672')) THEN (0x429ac959 IN ()) END) ORDER BY CASE WHEN rt0.c0 THEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c2)!=(rt0.c0)) WHEN (((vt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, 'á§_C', vt0.c0)) AND ((NULL, vt1.c0, rt0.c1))) THEN vt0.c0 ELSE (vt0.c0 IN ()) END DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT ((rt0.c0 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT ((rt0.c0 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT ((rt0.c0 IN (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0)) WHERE (LOWER(DISTINCT vt1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0)));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0)) WHERE (LOWER(DISTINCT vt1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0)));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0)) WHERE (LOWER(DISTINCT vt1.c0) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS BLOB)) ORDER BY ((((rt0.c0)OR(rt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((rt0.c0)OR(rt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS BLOB)) ORDER BY ((((rt0.c0)OR(rt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((rt0.c0)OR(rt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS BLOB)) ORDER BY ((((rt0.c0)OR(rt0.c0))) IS TRUE);
SELECT * FROM vt0, vt1, rt0 WHERE (((((((rt0.c2) IS TRUE))AND(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END)))OR(vt1.c0 COLLATE BINARY))) ORDER BY '-2059155878', CAST(((rt0.c2)>(vt1.c0)) AS BLOB)  NULLS LAST, CASE WHEN rt0.c1 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND ('(,D.2\rG')) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) IS TRUE))AND(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END)))OR(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, rt0 ORDER BY '-2059155878', CAST(((rt0.c2)>(vt1.c0)) AS BLOB)  NULLS LAST, CASE WHEN rt0.c1 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND ('(,D.2\rG')) END);
SELECT * FROM vt0, vt1, rt0 WHERE (((((((rt0.c2) IS TRUE))AND(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END)))OR(vt1.c0 COLLATE BINARY))) ORDER BY '-2059155878', CAST(((rt0.c2)>(vt1.c0)) AS BLOB)  NULLS LAST, CASE WHEN rt0.c1 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND ('(,D.2\rG')) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) IS TRUE))AND(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END)))OR(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, rt0 ORDER BY '-2059155878', CAST(((rt0.c2)>(vt1.c0)) AS BLOB)  NULLS LAST, CASE WHEN rt0.c1 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND ('(,D.2\rG')) END);
SELECT * FROM vt0, vt1, rt0 WHERE (((((((rt0.c2) IS TRUE))AND(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END)))OR(vt1.c0 COLLATE BINARY))) ORDER BY '-2059155878', CAST(((rt0.c2)>(vt1.c0)) AS BLOB)  NULLS LAST, CASE WHEN rt0.c1 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND ('(,D.2\rG')) END;
SELECT * FROM vt0 CROSS JOIN vt1 ON 0.5604175000474556 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS REAL)) ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (0.5545095111855385))) IS TRUE) DESC  NULLS LAST, ((((((vt1.c0) NOTNULL))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(vt1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON 0.5604175000474556 ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (0.5545095111855385))) IS TRUE) DESC  NULLS LAST, ((((((vt1.c0) NOTNULL))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(vt1.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN vt1 ON 0.5604175000474556 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS REAL)) ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (0.5545095111855385))) IS TRUE) DESC  NULLS LAST, ((((((vt1.c0) NOTNULL))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(vt1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON 0.5604175000474556 ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (0.5545095111855385))) IS TRUE) DESC  NULLS LAST, ((((((vt1.c0) NOTNULL))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(vt1.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN vt1 ON 0.5604175000474556 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS REAL)) ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (0.5545095111855385))) IS TRUE) DESC  NULLS LAST, ((((((vt1.c0) NOTNULL))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(vt1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((rt0.c2 IN ()))));
SELECT * FROM rt0, vt1, vt0 WHERE (UPPER(((rt0.c2)*(rt0.c1)))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c2)*(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, vt0 ORDER BY '' DESC);
SELECT * FROM rt0, vt1, vt0 WHERE (UPPER(((rt0.c2)*(rt0.c1)))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c2)*(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, vt0 ORDER BY '' DESC);
SELECT * FROM rt0, vt1, vt0 WHERE (UPPER(((rt0.c2)*(rt0.c1)))) ORDER BY '' DESC;
SELECT * FROM vt1, rt0, vt0 WHERE (((rt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (((rt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (((rt0.c1) IS TRUE));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON '808329268' WHERE (0.26460170494007484);
SELECT SUM(count) FROM (SELECT ALL ((0.26460170494007484) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON '808329268');
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON '808329268' WHERE (0.26460170494007484);
SELECT SUM(count) FROM (SELECT ALL ((0.26460170494007484) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON '808329268');
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON '808329268' WHERE (0.26460170494007484);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)|(vt0.c0)) COLLATE RTRIM WHERE (((LTRIM(vt1.c0)) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(vt1.c0)) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)|(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)|(vt0.c0)) COLLATE RTRIM WHERE (((LTRIM(vt1.c0)) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(vt1.c0)) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)|(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)|(vt0.c0)) COLLATE RTRIM WHERE (((LTRIM(vt1.c0)) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c0) ORDER BY CASE WHEN ((((rt0.c2)OR(vt1.c0)))AND(rt0.c2)) THEN rt0.c2 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN ((((rt0.c2)OR(vt1.c0)))AND(rt0.c2)) THEN rt0.c2 END DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c0) ORDER BY CASE WHEN ((((rt0.c2)OR(vt1.c0)))AND(rt0.c2)) THEN rt0.c2 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN ((((rt0.c2)OR(vt1.c0)))AND(rt0.c2)) THEN rt0.c2 END DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c0) ORDER BY CASE WHEN ((((rt0.c2)OR(vt1.c0)))AND(rt0.c2)) THEN rt0.c2 END DESC;
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((((((((((rt0.c2)OR(vt1.c0)))AND(vt0.c0)))OR(rt0.c1)))OR(vt1.c0)))AND((rt0.c2 IN ()))))AND((~ (vt1.c0))))) ORDER BY (NOT (rt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c2)OR(vt1.c0)))AND(vt0.c0)))OR(rt0.c1)))OR(vt1.c0)))AND((rt0.c2 IN ()))))AND((~ (vt1.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (NOT (rt0.c1)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((((((((((rt0.c2)OR(vt1.c0)))AND(vt0.c0)))OR(rt0.c1)))OR(vt1.c0)))AND((rt0.c2 IN ()))))AND((~ (vt1.c0))))) ORDER BY (NOT (rt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c2)OR(vt1.c0)))AND(vt0.c0)))OR(rt0.c1)))OR(vt1.c0)))AND((rt0.c2 IN ()))))AND((~ (vt1.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (NOT (rt0.c1)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((((((((((rt0.c2)OR(vt1.c0)))AND(vt0.c0)))OR(rt0.c1)))OR(vt1.c0)))AND((rt0.c2 IN ()))))AND((~ (vt1.c0))))) ORDER BY (NOT (rt0.c1)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ('<J');
SELECT SUM(count) FROM (SELECT (('<J') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('<J');
SELECT SUM(count) FROM (SELECT (('<J') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('<J');
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c0)>>(rt0.c1)), ((rt0.c0) NOT NULL), rt0.c0)) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END, CAST(vt0.c0 AS TEXT), (((vt0.c0, rt0.c1, rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((rt0.c0, vt0.c0, rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c0, rt0.c2, vt0.c0))))))) ORDER BY CASE WHEN ((rt0.c0)GLOB(rt0.c2)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) ELSE SQLITE_SOURCE_ID() END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c0)>>(rt0.c1)), ((rt0.c0) NOT NULL), rt0.c0)) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END, CAST(vt0.c0 AS TEXT), (((vt0.c0, rt0.c1, rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((rt0.c0, vt0.c0, rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c0, rt0.c2, vt0.c0))))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((rt0.c0)GLOB(rt0.c2)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) ELSE SQLITE_SOURCE_ID() END DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c0)>>(rt0.c1)), ((rt0.c0) NOT NULL), rt0.c0)) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END, CAST(vt0.c0 AS TEXT), (((vt0.c0, rt0.c1, rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((rt0.c0, vt0.c0, rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c0, rt0.c2, vt0.c0))))))) ORDER BY CASE WHEN ((rt0.c0)GLOB(rt0.c2)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) ELSE SQLITE_SOURCE_ID() END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c0)>>(rt0.c1)), ((rt0.c0) NOT NULL), rt0.c0)) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END, CAST(vt0.c0 AS TEXT), (((vt0.c0, rt0.c1, rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((rt0.c0, vt0.c0, rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c0, rt0.c2, vt0.c0))))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((rt0.c0)GLOB(rt0.c2)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) ELSE SQLITE_SOURCE_ID() END DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c0)>>(rt0.c1)), ((rt0.c0) NOT NULL), rt0.c0)) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END, CAST(vt0.c0 AS TEXT), (((vt0.c0, rt0.c1, rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((rt0.c0, vt0.c0, rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c0, rt0.c2, vt0.c0))))))) ORDER BY CASE WHEN ((rt0.c0)GLOB(rt0.c2)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) ELSE SQLITE_SOURCE_ID() END DESC;
SELECT * FROM rt0 WHERE (((CASE rt0.c0  WHEN '-944263643' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)IS NOT(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN '-944263643' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)IS NOT(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE rt0.c0  WHEN '-944263643' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)IS NOT(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN '-944263643' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)IS NOT(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE rt0.c0  WHEN '-944263643' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)IS NOT(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END))) ORDER BY ((((vt0.c0)|(rt0.c1))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((vt0.c0)|(rt0.c1))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END))) ORDER BY ((((vt0.c0)|(rt0.c1))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((vt0.c0)|(rt0.c1))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END))) ORDER BY ((((vt0.c0)|(rt0.c1))) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((0Xffffffff9b2b521e)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((0xffffffff9b2b521e)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE NOCASE)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((0Xffffffff9b2b521e)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((0xffffffff9b2b521e)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE NOCASE)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((0Xffffffff9b2b521e)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)&(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)&(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)&(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)&(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)&(vt1.c0)) AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((UNLIKELY(vt0.c0) IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(vt0.c0) IN (rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((UNLIKELY(vt0.c0) IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(vt0.c0) IN (rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((UNLIKELY(vt0.c0) IN (rt0.c1)));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 END))) ORDER BY ((vt1.c0) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((vt1.c0) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2) IS FALSE))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 END))) ORDER BY ((vt1.c0) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((vt1.c0) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2) IS FALSE))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 END))) ORDER BY ((vt1.c0) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2) IS FALSE))) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((NULL) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (NULLIF(DISTINCT (rt0.c0 IN (rt0.c2)), CASE WHEN rt0.c2 THEN rt0.c2 END)) ORDER BY LOWER(rt0.c0) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (rt0.c0 IN (rt0.c2)), CASE WHEN rt0.c2 THEN rt0.c2 END)) IS TRUE)  as count FROM vt1, rt0 ORDER BY LOWER(rt0.c0) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (NULLIF(DISTINCT (rt0.c0 IN (rt0.c2)), CASE WHEN rt0.c2 THEN rt0.c2 END)) ORDER BY LOWER(rt0.c0) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (rt0.c0 IN (rt0.c2)), CASE WHEN rt0.c2 THEN rt0.c2 END)) IS TRUE)  as count FROM vt1, rt0 ORDER BY LOWER(rt0.c0) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (NULLIF(DISTINCT (rt0.c0 IN (rt0.c2)), CASE WHEN rt0.c2 THEN rt0.c2 END)) ORDER BY LOWER(rt0.c0) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0) IS TRUE)))) ORDER BY ((vt1.c0) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0) IS TRUE)))) ORDER BY ((vt1.c0) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0) IS TRUE)))) ORDER BY ((vt1.c0) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM vt1, rt0, vt0 WHERE (((rt0.c1)AND(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (((rt0.c1)AND(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (((rt0.c1)AND(rt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c0))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c0))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- (rt0.c0)));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c0 IN ()));
SELECT * FROM vt1 WHERE (((vt1.c0) IS TRUE)) ORDER BY CASE WHEN (vt1.c0 IN (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (vt1.c0 IN (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END  NULLS FIRST);
SELECT * FROM vt1 WHERE (((vt1.c0) IS TRUE)) ORDER BY CASE WHEN (vt1.c0 IN (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (vt1.c0 IN (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END  NULLS FIRST);
SELECT * FROM vt1 WHERE (((vt1.c0) IS TRUE)) ORDER BY CASE WHEN (vt1.c0 IN (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (x'6f2c');
SELECT SUM(count) FROM (SELECT ((x'6f2c') IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (x'6f2c');
SELECT SUM(count) FROM (SELECT ((x'6f2c') IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (x'6f2c');
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('');
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(0Xffffffffdcff0cb7)))OR(vt0.c0)))OR(vt0.c0)))*((vt0.c0 IN ())))) ORDER BY (((((('\nha')!=(vt0.c0)))OR(CAST(NULL AS REAL))))OR(((vt0.c0)*(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))OR(0xffffffffdcff0cb7)))OR(vt0.c0)))OR(vt0.c0)))*((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((('\nha')<>(vt0.c0)))OR(CAST(NULL AS REAL))))OR(((vt0.c0)*(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(0Xffffffffdcff0cb7)))OR(vt0.c0)))OR(vt0.c0)))*((vt0.c0 IN ())))) ORDER BY (((((('\nha')!=(vt0.c0)))OR(CAST(NULL AS REAL))))OR(((vt0.c0)*(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))OR(0xffffffffdcff0cb7)))OR(vt0.c0)))OR(vt0.c0)))*((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((('\nha')<>(vt0.c0)))OR(CAST(NULL AS REAL))))OR(((vt0.c0)*(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(0Xffffffffdcff0cb7)))OR(vt0.c0)))OR(vt0.c0)))*((vt0.c0 IN ())))) ORDER BY (((((('\nha')!=(vt0.c0)))OR(CAST(NULL AS REAL))))OR(((vt0.c0)*(vt0.c0))))  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN vt0 ON rt0.c2 WHERE (0.26574893116796405 COLLATE RTRIM) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)<<(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.26574893116796405 COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON rt0.c2 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)<<(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)) ASC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN vt0 ON rt0.c2 WHERE (0.26574893116796405 COLLATE RTRIM) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)<<(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.26574893116796405 COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON rt0.c2 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)<<(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)) ASC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN vt0 ON rt0.c2 WHERE (0.26574893116796405 COLLATE RTRIM) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)<<(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 NOT INDEXED WHERE (((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0)) COLLATE NOCASE) ORDER BY (- (((rt0.c1)IS NOT(vt1.c0))))  NULLS LAST, load_extension(x'');
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (- (((rt0.c1)IS NOT(vt1.c0))))  NULLS LAST, load_extension(x''));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 NOT INDEXED WHERE (((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0)) COLLATE NOCASE) ORDER BY (- (((rt0.c1)IS NOT(vt1.c0))))  NULLS LAST, load_extension(x'');
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (- (((rt0.c1)IS NOT(vt1.c0))))  NULLS LAST, load_extension(x''));
SELECT * FROM rt0 CROSS JOIN vt0 ON (((((rt0.c0)>>(rt0.c0)), 'mq', ((rt0.c2) IS TRUE)))==((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))AND(x'')))AND(rt0.c2)), ((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)), rt0.c0))) INNER JOIN vt1 ON ABS(((rt0.c2)>>(vt0.c0))) WHERE (IFNULL(DISTINCT 'Ff', ((rt0.c0)<<(x'')))) ORDER BY CAST(((vt0.c0)LIKE(rt0.c1)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT 'Ff', ((rt0.c0)<<(x'')))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((((rt0.c0)>>(rt0.c0)), 'mq', ((rt0.c2) IS TRUE)))==((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))AND(x'')))AND(rt0.c2)), ((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)), rt0.c0))) INNER JOIN vt1 ON ABS(((rt0.c2)>>(vt0.c0))) ORDER BY CAST(((vt0.c0)LIKE(rt0.c1)) AS TEXT) ASC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN vt0 ON (((((rt0.c0)>>(rt0.c0)), 'mq', ((rt0.c2) IS TRUE)))==((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))AND(x'')))AND(rt0.c2)), ((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)), rt0.c0))) INNER JOIN vt1 ON ABS(((rt0.c2)>>(vt0.c0))) WHERE (IFNULL(DISTINCT 'Ff', ((rt0.c0)<<(x'')))) ORDER BY CAST(((vt0.c0)LIKE(rt0.c1)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT 'Ff', ((rt0.c0)<<(x'')))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((((rt0.c0)>>(rt0.c0)), 'mq', ((rt0.c2) IS TRUE)))==((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))AND(x'')))AND(rt0.c2)), ((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)), rt0.c0))) INNER JOIN vt1 ON ABS(((rt0.c2)>>(vt0.c0))) ORDER BY CAST(((vt0.c0)LIKE(rt0.c1)) AS TEXT) ASC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN vt0 ON (((((rt0.c0)>>(rt0.c0)), 'mq', ((rt0.c2) IS TRUE)))==((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))AND(x'')))AND(rt0.c2)), ((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)), rt0.c0))) INNER JOIN vt1 ON ABS(((rt0.c2)>>(vt0.c0))) WHERE (IFNULL(DISTINCT 'Ff', ((rt0.c0)<<(x'')))) ORDER BY CAST(((vt0.c0)LIKE(rt0.c1)) AS TEXT) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))<((CAST(rt0.c2 AS REAL))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) COLLATE BINARY, ((COALESCE(DISTINCT vt0.c0, rt0.c0))!=(((rt0.c2)>>(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))<((CAST(rt0.c2 AS REAL))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) COLLATE BINARY, ((COALESCE(DISTINCT vt0.c0, rt0.c0))!=(((rt0.c2)>>(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))<((CAST(rt0.c2 AS REAL))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) COLLATE BINARY, ((COALESCE(DISTINCT vt0.c0, rt0.c0))!=(((rt0.c2)>>(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))<((CAST(rt0.c2 AS REAL))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) COLLATE BINARY, ((COALESCE(DISTINCT vt0.c0, rt0.c0))!=(((rt0.c2)>>(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))<((CAST(rt0.c2 AS REAL))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) COLLATE BINARY, ((COALESCE(DISTINCT vt0.c0, rt0.c0))!=(((rt0.c2)>>(rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)%(vt0.c0))) IS FALSE)) ORDER BY CAST(HEX(DISTINCT vt0.c0) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)%(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(HEX(DISTINCT vt0.c0) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)%(vt0.c0))) IS FALSE)) ORDER BY CAST(HEX(DISTINCT vt0.c0) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)%(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(HEX(DISTINCT vt0.c0) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)%(vt0.c0))) IS FALSE)) ORDER BY CAST(HEX(DISTINCT vt0.c0) AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE (- ('1559464749'))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)AND(vt0.c0)) END) ORDER BY (~ (UPPER(vt1.c0))) ASC, CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN vt1.c0 WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt1.c0)GLOB(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CASE (- ('1559464749'))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (UPPER(vt1.c0))) ASC, CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN vt1.c0 WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt1.c0)GLOB(vt0.c0)) END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE (- ('1559464749'))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)AND(vt0.c0)) END) ORDER BY (~ (UPPER(vt1.c0))) ASC, CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN vt1.c0 WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt1.c0)GLOB(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CASE (- ('1559464749'))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (UPPER(vt1.c0))) ASC, CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN vt1.c0 WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt1.c0)GLOB(vt0.c0)) END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE (- ('1559464749'))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)AND(vt0.c0)) END) ORDER BY (~ (UPPER(vt1.c0))) ASC, CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN vt1.c0 WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt1.c0)GLOB(vt0.c0)) END;
SELECT * FROM rt0, vt0, vt1 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) THEN ((vt1.c0)OR(vt0.c0)) WHEN x'b485' THEN vt1.c0 COLLATE NOCASE WHEN (rt0.c1 IN ()) THEN ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)) ELSE vt1.c0 END) ORDER BY CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)) END, (+ (((rt0.c0)+(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) THEN ((vt1.c0)OR(vt0.c0)) WHEN x'b485' THEN vt1.c0 COLLATE NOCASE WHEN (rt0.c1 IN ()) THEN ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)) ELSE vt1.c0 END) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)) END, (+ (((rt0.c0)+(vt1.c0)))));
SELECT * FROM rt0, vt0, vt1 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) THEN ((vt1.c0)OR(vt0.c0)) WHEN x'b485' THEN vt1.c0 COLLATE NOCASE WHEN (rt0.c1 IN ()) THEN ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)) ELSE vt1.c0 END) ORDER BY CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)) END, (+ (((rt0.c0)+(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) THEN ((vt1.c0)OR(vt0.c0)) WHEN x'b485' THEN vt1.c0 COLLATE NOCASE WHEN (rt0.c1 IN ()) THEN ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)) ELSE vt1.c0 END) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)) END, (+ (((rt0.c0)+(vt1.c0)))));
SELECT * FROM rt0, vt0, vt1 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) THEN ((vt1.c0)OR(vt0.c0)) WHEN x'b485' THEN vt1.c0 COLLATE NOCASE WHEN (rt0.c1 IN ()) THEN ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)) ELSE vt1.c0 END) ORDER BY CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)) END, (+ (((rt0.c0)+(vt1.c0))));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER));
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((vt0.c0) ISNULL)) IS FALSE)) ORDER BY (NOT (rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (NOT (rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((vt0.c0) ISNULL)) IS FALSE)) ORDER BY (NOT (rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (NOT (rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((vt0.c0) ISNULL)) IS FALSE)) ORDER BY (NOT (rt0.c1 COLLATE BINARY));
SELECT ALL * FROM vt0, vt1 WHERE (-3.72462081E8);
SELECT SUM(count) FROM (SELECT ((-3.72462081E8) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (-3.72462081E8);
SELECT SUM(count) FROM (SELECT ((-3.72462081E8) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (-3.72462081E8);
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY CAST((((vt0.c0))>((vt0.c0))) AS INTEGER) ASC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))/(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0))>((vt0.c0))) AS INTEGER) ASC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))/(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY CAST((((vt0.c0))>((vt0.c0))) AS INTEGER) ASC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))/(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0))>((vt0.c0))) AS INTEGER) ASC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))/(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY CAST((((vt0.c0))>((vt0.c0))) AS INTEGER) ASC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))/(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array_length(((((rt0.c2)OR(rt0.c0)))AND('-2022644256')), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((json_array_length(((((rt0.c2)OR(rt0.c0)))AND('-2022644256')), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array_length(((((rt0.c2)OR(rt0.c0)))AND('-2022644256')), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((json_array_length(((((rt0.c2)OR(rt0.c0)))AND('-2022644256')), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 END))) ORDER BY CASE WHEN ((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)) THEN NULL WHEN ((('-2059155878', NULL, vt1.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, vt1.c0))) THEN ('0.21420710194718917' IN ()) WHEN GLOB(rt0.c0, vt1.c0) THEN rt0.c2 COLLATE NOCASE ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN ((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)) THEN NULL WHEN ((('-2059155878', NULL, vt1.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, vt1.c0))) THEN ('0.21420710194718917' IN ()) WHEN GLOB(rt0.c0, vt1.c0) THEN rt0.c2 COLLATE NOCASE ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 END))) ORDER BY CASE WHEN ((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)) THEN NULL WHEN ((('-2059155878', NULL, vt1.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, vt1.c0))) THEN ('0.21420710194718917' IN ()) WHEN GLOB(rt0.c0, vt1.c0) THEN rt0.c2 COLLATE NOCASE ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN ((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)) THEN NULL WHEN ((('-2059155878', NULL, vt1.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, vt1.c0))) THEN ('0.21420710194718917' IN ()) WHEN GLOB(rt0.c0, vt1.c0) THEN rt0.c2 COLLATE NOCASE ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 END))) ORDER BY CASE WHEN ((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)) THEN NULL WHEN ((('-2059155878', NULL, vt1.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, vt1.c0))) THEN ('0.21420710194718917' IN ()) WHEN GLOB(rt0.c0, vt1.c0) THEN rt0.c2 COLLATE NOCASE ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((((-9.44263643E8)AND(rt0.c2)))AND(rt0.c2)) AS INTEGER)) ORDER BY (((vt0.c0 IN (rt0.c1)))-((- (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((-9.44263643E8)AND(rt0.c2)))AND(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0 IN (rt0.c1)))-((- (rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((((-9.44263643E8)AND(rt0.c2)))AND(rt0.c2)) AS INTEGER)) ORDER BY (((vt0.c0 IN (rt0.c1)))-((- (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((-9.44263643E8)AND(rt0.c2)))AND(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0 IN (rt0.c1)))-((- (rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((((-9.44263643E8)AND(rt0.c2)))AND(rt0.c2)) AS INTEGER)) ORDER BY (((vt0.c0 IN (rt0.c1)))-((- (rt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((('276750554') IS TRUE) COLLATE BINARY) ORDER BY (- (CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((('276750554') IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (- (CAST(vt1.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((('276750554') IS TRUE) COLLATE BINARY) ORDER BY (- (CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((('276750554') IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (- (CAST(vt1.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((('276750554') IS TRUE) COLLATE BINARY) ORDER BY (- (CAST(vt1.c0 AS BLOB)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (LOWER(DISTINCT ('-1664391321' IN ()))) ORDER BY (+ ((- (rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ('-1664391321' IN ()))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((- (rt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (LOWER(DISTINCT ('-1664391321' IN ()))) ORDER BY (+ ((- (rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ('-1664391321' IN ()))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((- (rt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (LOWER(DISTINCT ('-1664391321' IN ()))) ORDER BY (+ ((- (rt0.c1)))) DESC  NULLS FIRST;
SELECT * FROM vt1, rt0, vt0 WHERE (((((rt0.c1)%(rt0.c1))) NOTNULL)) ORDER BY ((rt0.c2)/((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)%(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((rt0.c2)/((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC);
SELECT * FROM vt1, rt0, vt0 WHERE (((((rt0.c1)%(rt0.c1))) NOTNULL)) ORDER BY ((rt0.c2)/((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)%(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((rt0.c2)/((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC);
SELECT * FROM vt1, rt0, vt0 WHERE (((((rt0.c1)%(rt0.c1))) NOTNULL)) ORDER BY ((rt0.c2)/((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((('-1') IS TRUE));
SELECT SUM(count) FROM (SELECT (((('-1') IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('-1') IS TRUE));
SELECT SUM(count) FROM (SELECT (((('-1') IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('-1') IS TRUE));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt1.c0 IN (vt0.c0, vt1.c0)) IN ()) WHERE ((((NULL)>>('ã´H')) IN (CAST(vt0.c0 AS INTEGER), '1883380545'))) ORDER BY ((((vt0.c0)AND(vt0.c0))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0)<>(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL)>>('ã´H')) IN (CAST(vt0.c0 AS INTEGER), '1883380545'))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((vt1.c0 IN (vt0.c0, vt1.c0)) IN ()) ORDER BY ((((vt0.c0)AND(vt0.c0))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0)<>(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt1.c0 IN (vt0.c0, vt1.c0)) IN ()) WHERE ((((NULL)>>('ã´H')) IN (CAST(vt0.c0 AS INTEGER), '1883380545'))) ORDER BY ((((vt0.c0)AND(vt0.c0))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0)<>(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL)>>('ã´H')) IN (CAST(vt0.c0 AS INTEGER), '1883380545'))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((vt1.c0 IN (vt0.c0, vt1.c0)) IN ()) ORDER BY ((((vt0.c0)AND(vt0.c0))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0)<>(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt1.c0 IN (vt0.c0, vt1.c0)) IN ()) WHERE ((((NULL)>>('ã´H')) IN (CAST(vt0.c0 AS INTEGER), '1883380545'))) ORDER BY ((((vt0.c0)AND(vt0.c0))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0)<>(vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)<=(((rt0.c0)AND(rt0.c0))))) ORDER BY CAST(CAST(NULL AS NUMERIC) AS TEXT) DESC  NULLS FIRST, (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))||(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST, STRFTIME(((rt0.c1) IS FALSE), ((rt0.c0) NOTNULL), ((rt0.c0)%(0.038399798680175734))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)<=(((rt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(NULL AS NUMERIC) AS TEXT) DESC  NULLS FIRST, (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))||(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST, STRFTIME(((rt0.c1) IS FALSE), ((rt0.c0) NOTNULL), ((rt0.c0)%(0.038399798680175734))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)<=(((rt0.c0)AND(rt0.c0))))) ORDER BY CAST(CAST(NULL AS NUMERIC) AS TEXT) DESC  NULLS FIRST, (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))||(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST, STRFTIME(((rt0.c1) IS FALSE), ((rt0.c0) NOTNULL), ((rt0.c0)%(0.038399798680175734))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)<=(((rt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(NULL AS NUMERIC) AS TEXT) DESC  NULLS FIRST, (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))||(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST, STRFTIME(((rt0.c1) IS FALSE), ((rt0.c0) NOTNULL), ((rt0.c0)%(0.038399798680175734))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)<=(((rt0.c0)AND(rt0.c0))))) ORDER BY CAST(CAST(NULL AS NUMERIC) AS TEXT) DESC  NULLS FIRST, (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))||(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST, STRFTIME(((rt0.c1) IS FALSE), ((rt0.c0) NOTNULL), ((rt0.c0)%(0.038399798680175734))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (0.56937148264812);
SELECT SUM(count) FROM (SELECT ALL ((0.56937148264812) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (0.56937148264812);
SELECT SUM(count) FROM (SELECT ALL ((0.56937148264812) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (0.56937148264812);
SELECT * FROM vt1 WHERE (NULLIF(DISTINCT CAST(vt1.c0 AS BLOB), ((vt1.c0) BETWEEN (vt1.c0) AND (x'')))) ORDER BY CASE CAST(vt1.c0 AS NUMERIC)  WHEN CASE WHEN 0.8469923679353051 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE TRIM(DISTINCT vt1.c0) END;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT CAST(vt1.c0 AS BLOB), ((vt1.c0) BETWEEN (vt1.c0) AND (x'')))) IS TRUE)  as count FROM vt1 ORDER BY CASE CAST(vt1.c0 AS NUMERIC)  WHEN CASE WHEN 0.8469923679353051 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE TRIM(DISTINCT vt1.c0) END);
SELECT * FROM vt1 WHERE (NULLIF(DISTINCT CAST(vt1.c0 AS BLOB), ((vt1.c0) BETWEEN (vt1.c0) AND (x'')))) ORDER BY CASE CAST(vt1.c0 AS NUMERIC)  WHEN CASE WHEN 0.8469923679353051 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE TRIM(DISTINCT vt1.c0) END;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT CAST(vt1.c0 AS BLOB), ((vt1.c0) BETWEEN (vt1.c0) AND (x'')))) IS TRUE)  as count FROM vt1 ORDER BY CASE CAST(vt1.c0 AS NUMERIC)  WHEN CASE WHEN 0.8469923679353051 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE TRIM(DISTINCT vt1.c0) END);
SELECT * FROM vt1 WHERE (NULLIF(DISTINCT CAST(vt1.c0 AS BLOB), ((vt1.c0) BETWEEN (vt1.c0) AND (x'')))) ORDER BY CASE CAST(vt1.c0 AS NUMERIC)  WHEN CASE WHEN 0.8469923679353051 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE TRIM(DISTINCT vt1.c0) END;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((0.36583300989337764)>>(vt1.c0)))OR(x'' COLLATE NOCASE)))AND(CAST(vt1.c0 AS NUMERIC)))) ORDER BY CAST(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS NUMERIC) DESC, (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))<<(vt1.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((0.36583300989337764)>>(vt1.c0)))OR(x'' COLLATE NOCASE)))AND(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY CAST(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS NUMERIC) DESC, (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))<<(vt1.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((0.36583300989337764)>>(vt1.c0)))OR(x'' COLLATE NOCASE)))AND(CAST(vt1.c0 AS NUMERIC)))) ORDER BY CAST(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS NUMERIC) DESC, (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))<<(vt1.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((0.36583300989337764)>>(vt1.c0)))OR(x'' COLLATE NOCASE)))AND(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY CAST(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS NUMERIC) DESC, (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))<<(vt1.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((0.36583300989337764)>>(vt1.c0)))OR(x'' COLLATE NOCASE)))AND(CAST(vt1.c0 AS NUMERIC)))) ORDER BY CAST(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS NUMERIC) DESC, (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))<<(vt1.c0)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (json_array_length((NOT ('6]4'))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((NOT ('6]4')))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (json_array_length((NOT ('6]4'))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((NOT ('6]4')))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (json_array_length((NOT ('6]4'))));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((((vt0.c0 IN (rt0.c2, rt0.c0))) BETWEEN (((vt1.c0)>>(rt0.c1))) AND (rt0.c0))) ORDER BY 'ho#M+à®¡*K>' ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt0.c2, rt0.c0))) BETWEEN (((vt1.c0)>>(rt0.c1))) AND (rt0.c0))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY 'ho#M+à®¡*K>' ASC);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((((vt0.c0 IN (rt0.c2, rt0.c0))) BETWEEN (((vt1.c0)>>(rt0.c1))) AND (rt0.c0))) ORDER BY 'ho#M+à®¡*K>' ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt0.c2, rt0.c0))) BETWEEN (((vt1.c0)>>(rt0.c1))) AND (rt0.c0))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY 'ho#M+à®¡*K>' ASC);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((((vt0.c0 IN (rt0.c2, rt0.c0))) BETWEEN (((vt1.c0)>>(rt0.c1))) AND (rt0.c0))) ORDER BY 'ho#M+à®¡*K>' ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY ((((vt1.c0) ISNULL)) NOT BETWEEN ((vt1.c0 IN ())) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.31133331074160664 END)) DESC, (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))), (((((('-1191815304')OR(vt1.c0)))OR(vt1.c0)))||(vt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL)) NOT BETWEEN ((vt1.c0 IN ())) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.31133331074160664 END)) DESC, (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))), (((((('-1191815304')OR(vt1.c0)))OR(vt1.c0)))||(vt1.c0)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY ((((vt1.c0) ISNULL)) NOT BETWEEN ((vt1.c0 IN ())) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.31133331074160664 END)) DESC, (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))), (((((('-1191815304')OR(vt1.c0)))OR(vt1.c0)))||(vt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL)) NOT BETWEEN ((vt1.c0 IN ())) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.31133331074160664 END)) DESC, (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))), (((((('-1191815304')OR(vt1.c0)))OR(vt1.c0)))||(vt1.c0)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY ((((vt1.c0) ISNULL)) NOT BETWEEN ((vt1.c0 IN ())) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.31133331074160664 END)) DESC, (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))), (((((('-1191815304')OR(vt1.c0)))OR(vt1.c0)))||(vt1.c0)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CAST(0.2949653721758684 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(0.2949653721758684 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CAST(0.2949653721758684 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(0.2949653721758684 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CAST(0.2949653721758684 AS TEXT) COLLATE RTRIM);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END)) AND ((((rt0.c1)<<(vt1.c0))))) FULL OUTER JOIN vt1 ON (((rt0.c0 IN ())) ISNULL) WHERE ((((+ (rt0.c1)))GLOB(((276750554)>(rt0.c2))))) ORDER BY (CAST(rt0.c0 AS BLOB) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))GLOB(((276750554)>(rt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END)) AND ((((rt0.c1)<<(vt1.c0))))) FULL OUTER JOIN vt1 ON (((rt0.c0 IN ())) ISNULL) ORDER BY (CAST(rt0.c0 AS BLOB) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END)) AND ((((rt0.c1)<<(vt1.c0))))) FULL OUTER JOIN vt1 ON (((rt0.c0 IN ())) ISNULL) WHERE ((((+ (rt0.c1)))GLOB(((276750554)>(rt0.c2))))) ORDER BY (CAST(rt0.c0 AS BLOB) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))GLOB(((276750554)>(rt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END)) AND ((((rt0.c1)<<(vt1.c0))))) FULL OUTER JOIN vt1 ON (((rt0.c0 IN ())) ISNULL) ORDER BY (CAST(rt0.c0 AS BLOB) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN vt0 ON rt0.c0 WHERE (CAST(rt0.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN vt0 ON rt0.c0);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN vt0 ON rt0.c0 WHERE (CAST(rt0.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN vt0 ON rt0.c0);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN vt0 ON rt0.c0 WHERE (CAST(rt0.c0 AS BLOB) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((UPPER(0.926987923416857))AND(CASE vt0.c0  WHEN 0.6215261787078317 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((0.5964537455710587)OR('p'))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((UPPER(0.926987923416857))AND(CASE vt0.c0  WHEN 0.6215261787078317 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((0.5964537455710587)OR('p'))) NOTNULL) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((UPPER(0.926987923416857))AND(CASE vt0.c0  WHEN 0.6215261787078317 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((0.5964537455710587)OR('p'))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((UPPER(0.926987923416857))AND(CASE vt0.c0  WHEN 0.6215261787078317 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((0.5964537455710587)OR('p'))) NOTNULL) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((UPPER(0.926987923416857))AND(CASE vt0.c0  WHEN 0.6215261787078317 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((0.5964537455710587)OR('p'))) NOTNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN x'' COLLATE NOCASE THEN (+ (vt1.c0)) WHEN (~ (vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS BLOB) END) ORDER BY '-864689883' COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' COLLATE NOCASE THEN (+ (vt1.c0)) WHEN (~ (vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS BLOB) END) IS TRUE)  as count FROM vt1 ORDER BY '-864689883' COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN x'' COLLATE NOCASE THEN (+ (vt1.c0)) WHEN (~ (vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS BLOB) END) ORDER BY '-864689883' COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' COLLATE NOCASE THEN (+ (vt1.c0)) WHEN (~ (vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS BLOB) END) IS TRUE)  as count FROM vt1 ORDER BY '-864689883' COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN x'' COLLATE NOCASE THEN (+ (vt1.c0)) WHEN (~ (vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS BLOB) END) ORDER BY '-864689883' COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (NULLIF(DISTINCT (rt0.c1 IN ()), vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (rt0.c1 IN ()), vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (NULLIF(DISTINCT (rt0.c1 IN ()), vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (rt0.c1 IN ()), vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (NULLIF(DISTINCT (rt0.c1 IN ()), vt0.c0 COLLATE NOCASE));
SELECT * FROM vt1, vt0, rt0 WHERE (x'') ORDER BY ((rt0.c1 COLLATE NOCASE) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((rt0.c1 COLLATE NOCASE) NOTNULL)  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0 WHERE (x'') ORDER BY ((rt0.c1 COLLATE NOCASE) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((rt0.c1 COLLATE NOCASE) NOTNULL)  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0 WHERE (x'') ORDER BY ((rt0.c1 COLLATE NOCASE) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((CAST(vt1.c0 AS TEXT))IS(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM DESC, (((vt0.c0 IN ())) NOT NULL), (((rt0.c0) BETWEEN (0xffffffffc491e464) AND (rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))IS(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM DESC, (((vt0.c0 IN ())) NOT NULL), (((rt0.c0) BETWEEN (0Xffffffffc491e464) AND (rt0.c0)) IN ()));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((CAST(vt1.c0 AS TEXT))IS(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM DESC, (((vt0.c0 IN ())) NOT NULL), (((rt0.c0) BETWEEN (0xffffffffc491e464) AND (rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))IS(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM DESC, (((vt0.c0 IN ())) NOT NULL), (((rt0.c0) BETWEEN (0Xffffffffc491e464) AND (rt0.c0)) IN ()));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((CAST(vt1.c0 AS TEXT))IS(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM DESC, (((vt0.c0 IN ())) NOT NULL), (((rt0.c0) BETWEEN (0xffffffffc491e464) AND (rt0.c0)) IN ());
SELECT * FROM vt1 WHERE (highlight(vt1.c0, ((vt1.c0)<<(vt1.c0)), vt1.c0 COLLATE RTRIM, (((vt1.c0))>=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((highlight(vt1.c0, ((vt1.c0)<<(vt1.c0)), vt1.c0 COLLATE RTRIM, (((vt1.c0))>=((vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (highlight(vt1.c0, ((vt1.c0)<<(vt1.c0)), vt1.c0 COLLATE RTRIM, (((vt1.c0))>=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((highlight(vt1.c0, ((vt1.c0)<<(vt1.c0)), vt1.c0 COLLATE RTRIM, (((vt1.c0))>=((vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((NULL)AND(((0.43884544711618434)|(rt0.c1)))))OR(rt0.c1)) CROSS JOIN vt1 ON CAST(vt0.c0 AS INTEGER) WHERE ((((0.28029785246266503)=(vt1.c0)) IN (((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((0.28029785246266503)==(vt1.c0)) IN (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((NULL)AND(((0.43884544711618434)|(rt0.c1)))))OR(rt0.c1)) CROSS JOIN vt1 ON CAST(vt0.c0 AS INTEGER));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((NULL)AND(((0.43884544711618434)|(rt0.c1)))))OR(rt0.c1)) CROSS JOIN vt1 ON CAST(vt0.c0 AS INTEGER) WHERE ((((0.28029785246266503)=(vt1.c0)) IN (((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((0.28029785246266503)==(vt1.c0)) IN (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((NULL)AND(((0.43884544711618434)|(rt0.c1)))))OR(rt0.c1)) CROSS JOIN vt1 ON CAST(vt0.c0 AS INTEGER));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((NULL)AND(((0.43884544711618434)|(rt0.c1)))))OR(rt0.c1)) CROSS JOIN vt1 ON CAST(vt0.c0 AS INTEGER) WHERE ((((0.28029785246266503)=(vt1.c0)) IN (((rt0.c0) IS TRUE))));
SELECT ALL * FROM rt0 WHERE (CASE x''  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END THEN '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END THEN '' END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE x''  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END THEN '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END THEN '' END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE x''  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END THEN '' END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((vt0.c0)LIKE(vt0.c0)))) WHERE (((x'')AND(rt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0) ISNULL))||(((rt0.c2)%(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((vt0.c0)LIKE(vt0.c0)))) ORDER BY ((((vt0.c0) ISNULL))||(((rt0.c2)%(rt0.c2)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((vt0.c0)LIKE(vt0.c0)))) WHERE (((x'')AND(rt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0) ISNULL))||(((rt0.c2)%(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((vt0.c0)LIKE(vt0.c0)))) ORDER BY ((((vt0.c0) ISNULL))||(((rt0.c2)%(rt0.c2)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((vt0.c0)LIKE(vt0.c0)))) WHERE (((x'')AND(rt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0) ISNULL))||(((rt0.c2)%(rt0.c2))));
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((((rt0.c0)OR(rt0.c1)))AND(0.991051331119211))))) ORDER BY ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(CAST(rt0.c2 AS NUMERIC))))OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt0.c0 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c0)OR(rt0.c1)))AND(0.991051331119211))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(CAST(rt0.c2 AS NUMERIC))))OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt0.c0 ELSE rt0.c1 END)));
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((((rt0.c0)OR(rt0.c1)))AND(0.991051331119211))))) ORDER BY ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(CAST(rt0.c2 AS NUMERIC))))OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt0.c0 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c0)OR(rt0.c1)))AND(0.991051331119211))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(CAST(rt0.c2 AS NUMERIC))))OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt0.c0 ELSE rt0.c1 END)));
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((((rt0.c0)OR(rt0.c1)))AND(0.991051331119211))))) ORDER BY ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(CAST(rt0.c2 AS NUMERIC))))OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt0.c0 ELSE rt0.c1 END));
SELECT * FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)))) AND ((~ (vt0.c0))))) ORDER BY (((('0')/(vt1.c0)))-(LOWER(vt0.c0)))  NULLS FIRST, ((- (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((('0')/(vt1.c0)))-(LOWER(vt0.c0)))  NULLS FIRST, ((- (vt1.c0)) IN ()));
SELECT * FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)))) AND ((~ (vt0.c0))))) ORDER BY (((('0')/(vt1.c0)))-(LOWER(vt0.c0)))  NULLS FIRST, ((- (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((('0')/(vt1.c0)))-(LOWER(vt0.c0)))  NULLS FIRST, ((- (vt1.c0)) IN ()));
SELECT * FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)))) AND ((~ (vt0.c0))))) ORDER BY (((('0')/(vt1.c0)))-(LOWER(vt0.c0)))  NULLS FIRST, ((- (vt1.c0)) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, NULL))>=((vt0.c0, vt0.c0, vt0.c0))))==((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, NULL))>=((vt0.c0, vt0.c0, vt0.c0))))=((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, NULL))>=((vt0.c0, vt0.c0, vt0.c0))))==((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, NULL))>=((vt0.c0, vt0.c0, vt0.c0))))=((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, NULL))>=((vt0.c0, vt0.c0, vt0.c0))))==((vt0.c0 IN (vt0.c0)))));
SELECT * FROM rt0 WHERE (LIKELY(DISTINCT '1522381765'));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT '1522381765')) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LIKELY(DISTINCT '1522381765'));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT '1522381765')) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LIKELY(DISTINCT '1522381765'));
SELECT * FROM vt1, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END) IS FALSE)) ORDER BY ((rt0.c2) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0))) AND (CAST(rt0.c2 AS NUMERIC))) ASC, ((SUBSTR(vt1.c0, rt0.c1)) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (((rt0.c0)+(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c2) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0))) AND (CAST(rt0.c2 AS NUMERIC))) ASC, ((SUBSTR(vt1.c0, rt0.c1)) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (((rt0.c0)+(vt1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END) IS FALSE)) ORDER BY ((rt0.c2) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0))) AND (CAST(rt0.c2 AS NUMERIC))) ASC, ((SUBSTR(vt1.c0, rt0.c1)) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (((rt0.c0)+(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c2) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0))) AND (CAST(rt0.c2 AS NUMERIC))) ASC, ((SUBSTR(vt1.c0, rt0.c1)) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (((rt0.c0)+(vt1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END) IS FALSE)) ORDER BY ((rt0.c2) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0))) AND (CAST(rt0.c2 AS NUMERIC))) ASC, ((SUBSTR(vt1.c0, rt0.c1)) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (((rt0.c0)+(vt1.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((x'')<>(((vt0.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<>(((vt0.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((x'')<>(((vt0.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<>(((vt0.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((x'')<>(((vt0.c0)>=(vt1.c0)))));
SELECT * FROM rt0, vt0, vt1 WHERE ((((rt0.c1)<=(rt0.c2)) IN ())) ORDER BY (((rt0.c0 IN ())) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)<=(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((rt0.c0 IN ())) IS TRUE)  NULLS FIRST);
SELECT * FROM rt0, vt0, vt1 WHERE ((((rt0.c1)<=(rt0.c2)) IN ())) ORDER BY (((rt0.c0 IN ())) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)<=(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((rt0.c0 IN ())) IS TRUE)  NULLS FIRST);
SELECT * FROM rt0, vt0, vt1 WHERE ((((rt0.c1)<=(rt0.c2)) IN ())) ORDER BY (((rt0.c0 IN ())) IS TRUE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((('ã') NOTNULL));
SELECT SUM(count) FROM (SELECT (((('ã') NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((('ã') NOTNULL));
SELECT SUM(count) FROM (SELECT (((('ã') NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((('ã') NOTNULL));
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()), (NOT (rt0.c0)), CAST(rt0.c2 AS REAL))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN 'k/6~b8j' WHEN rt0.c1 THEN rt0.c2 END, (NOT (x'')), rt0.c1 COLLATE NOCASE)))) ORDER BY ((NOT (rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()), (NOT (rt0.c0)), CAST(rt0.c2 AS REAL))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN 'k/6~b8j' WHEN rt0.c1 THEN rt0.c2 END, (NOT (x'')), rt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 ORDER BY ((NOT (rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()), (NOT (rt0.c0)), CAST(rt0.c2 AS REAL))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN 'k/6~b8j' WHEN rt0.c1 THEN rt0.c2 END, (NOT (x'')), rt0.c1 COLLATE NOCASE)))) ORDER BY ((NOT (rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()), (NOT (rt0.c0)), CAST(rt0.c2 AS REAL))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN 'k/6~b8j' WHEN rt0.c1 THEN rt0.c2 END, (NOT (x'')), rt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 ORDER BY ((NOT (rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()), (NOT (rt0.c0)), CAST(rt0.c2 AS REAL))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN 'k/6~b8j' WHEN rt0.c1 THEN rt0.c2 END, (NOT (x'')), rt0.c1 COLLATE NOCASE)))) ORDER BY ((NOT (rt0.c1)) IN ());
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY CASE WHEN CAST(rt0.c1 AS REAL) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) WHEN (('497654557')IS(vt0.c0)) THEN ((vt1.c0) NOT NULL) WHEN (rt0.c0 IN ()) THEN (((vt1.c0, vt0.c0, vt1.c0))!=((vt1.c0, rt0.c0, rt0.c2))) ELSE ((vt1.c0)>>(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE WHEN CAST(rt0.c1 AS REAL) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) WHEN (('497654557')IS(vt0.c0)) THEN ((vt1.c0) NOT NULL) WHEN (rt0.c0 IN ()) THEN (((vt1.c0, vt0.c0, vt1.c0))!=((vt1.c0, rt0.c0, rt0.c2))) ELSE ((vt1.c0)>>(rt0.c1)) END);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY CASE WHEN CAST(rt0.c1 AS REAL) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) WHEN (('497654557')IS(vt0.c0)) THEN ((vt1.c0) NOT NULL) WHEN (rt0.c0 IN ()) THEN (((vt1.c0, vt0.c0, vt1.c0))!=((vt1.c0, rt0.c0, rt0.c2))) ELSE ((vt1.c0)>>(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE WHEN CAST(rt0.c1 AS REAL) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) WHEN (('497654557')IS(vt0.c0)) THEN ((vt1.c0) NOT NULL) WHEN (rt0.c0 IN ()) THEN (((vt1.c0, vt0.c0, vt1.c0))!=((vt1.c0, rt0.c0, rt0.c2))) ELSE ((vt1.c0)>>(rt0.c1)) END);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY CASE WHEN CAST(rt0.c1 AS REAL) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) WHEN (('497654557')IS(vt0.c0)) THEN ((vt1.c0) NOT NULL) WHEN (rt0.c0 IN ()) THEN (((vt1.c0, vt0.c0, vt1.c0))!=((vt1.c0, rt0.c0, rt0.c2))) ELSE ((vt1.c0)>>(rt0.c1)) END;
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY (((vt1.c0)) NOT BETWEEN (((((rt0.c1, vt0.c0, x'')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND (('', vt0.c0, vt0.c0))))) AND ((CAST(vt0.c0 AS TEXT)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0 ORDER BY (((vt1.c0)) NOT BETWEEN (((((rt0.c1, vt0.c0, x'')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND (('', vt0.c0, vt0.c0))))) AND ((CAST(vt0.c0 AS TEXT)))) DESC);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY (((vt1.c0)) NOT BETWEEN (((((rt0.c1, vt0.c0, x'')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND (('', vt0.c0, vt0.c0))))) AND ((CAST(vt0.c0 AS TEXT)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0 ORDER BY (((vt1.c0)) NOT BETWEEN (((((rt0.c1, vt0.c0, x'')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND (('', vt0.c0, vt0.c0))))) AND ((CAST(vt0.c0 AS TEXT)))) DESC);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY (((vt1.c0)) NOT BETWEEN (((((rt0.c1, vt0.c0, x'')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND (('', vt0.c0, vt0.c0))))) AND ((CAST(vt0.c0 AS TEXT)))) DESC;
SELECT * FROM vt1, vt0 WHERE (((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))AND(0.0447111657050876)))AND(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))AND(0.0447111657050876)))AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))AND(0.0447111657050876)))AND(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))AND(0.0447111657050876)))AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))AND(0.0447111657050876)))AND(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))OR(('VâY&x!' IN (vt0.c0)))))OR(TYPEOF(vt0.c0)))) ORDER BY MAX(((vt0.c0)<(vt0.c0)), (vt0.c0 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))OR(('VâY&x!' IN (vt0.c0)))))OR(TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY MAX(((vt0.c0)<(vt0.c0)), (vt0.c0 IN ())) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))OR(('VâY&x!' IN (vt0.c0)))))OR(TYPEOF(vt0.c0)))) ORDER BY MAX(((vt0.c0)<(vt0.c0)), (vt0.c0 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))OR(('VâY&x!' IN (vt0.c0)))))OR(TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY MAX(((vt0.c0)<(vt0.c0)), (vt0.c0 IN ())) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))OR(('VâY&x!' IN (vt0.c0)))))OR(TYPEOF(vt0.c0)))) ORDER BY MAX(((vt0.c0)<(vt0.c0)), (vt0.c0 IN ())) ASC;
SELECT COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))AND((~ (rt0.c0)))))AND(vt0.c0)))AND(((rt0.c2) ISNULL))))OR(vt1.c0 COLLATE NOCASE))) ORDER BY (- ((NOT (rt0.c2)))) ASC  NULLS FIRST, (((-887805283, (~ (vt1.c0)), vt0.c0))<((NULL, (('')IS NOT(rt0.c2)), STRFTIME(vt1.c0, vt1.c0, x'', rt0.c1, x'')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))AND((~ (rt0.c0)))))AND(vt0.c0)))AND(((rt0.c2) ISNULL))))OR(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (- ((NOT (rt0.c2)))) ASC  NULLS FIRST, (((-887805283, (~ (vt1.c0)), vt0.c0))<((NULL, (('')IS NOT(rt0.c2)), STRFTIME(vt1.c0, vt1.c0, x'', rt0.c1, x'')))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))AND((~ (rt0.c0)))))AND(vt0.c0)))AND(((rt0.c2) ISNULL))))OR(vt1.c0 COLLATE NOCASE))) ORDER BY (- ((NOT (rt0.c2)))) ASC  NULLS FIRST, (((-887805283, (~ (vt1.c0)), vt0.c0))<((NULL, (('')IS NOT(rt0.c2)), STRFTIME(vt1.c0, vt1.c0, x'', rt0.c1, x'')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))AND((~ (rt0.c0)))))AND(vt0.c0)))AND(((rt0.c2) ISNULL))))OR(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (- ((NOT (rt0.c2)))) ASC  NULLS FIRST, (((-887805283, (~ (vt1.c0)), vt0.c0))<((NULL, (('')IS NOT(rt0.c2)), STRFTIME(vt1.c0, vt1.c0, x'', rt0.c1, x'')))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))AND((~ (rt0.c0)))))AND(vt0.c0)))AND(((rt0.c2) ISNULL))))OR(vt1.c0 COLLATE NOCASE))) ORDER BY (- ((NOT (rt0.c2)))) ASC  NULLS FIRST, (((-887805283, (~ (vt1.c0)), vt0.c0))<((NULL, (('')IS NOT(rt0.c2)), STRFTIME(vt1.c0, vt1.c0, x'', rt0.c1, x'')))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE ((((rt0.c0)OR(rt0.c1)))AND(''))  WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c2))<((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c0)OR(rt0.c1)))AND(''))  WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c2))<((rt0.c2))) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((((rt0.c0)OR(rt0.c1)))AND(''))  WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c2))<((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c0)OR(rt0.c1)))AND(''))  WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c2))<((rt0.c2))) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((((rt0.c0)OR(rt0.c1)))AND(''))  WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c2))<((rt0.c2))) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))+(((vt1.c0)<=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))+(((vt1.c0)<=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))+(((vt1.c0)<=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))+(((vt1.c0)<=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))+(((vt1.c0)<=(vt1.c0)))));
SELECT ALL * FROM rt0, vt0, vt1 WHERE (CASE (NOT (NULL))  WHEN ((((vt1.c0)AND(rt0.c2)))OR(vt1.c0)) THEN 0.26574893116796405 ELSE CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt1.c0 END END) ORDER BY ((CAST(rt0.c2 AS REAL))GLOB((NOT (rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (NULL))  WHEN ((((vt1.c0)AND(rt0.c2)))OR(vt1.c0)) THEN 0.26574893116796405 ELSE CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((CAST(rt0.c2 AS REAL))GLOB((NOT (rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (CASE (NOT (NULL))  WHEN ((((vt1.c0)AND(rt0.c2)))OR(vt1.c0)) THEN 0.26574893116796405 ELSE CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt1.c0 END END) ORDER BY ((CAST(rt0.c2 AS REAL))GLOB((NOT (rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (NULL))  WHEN ((((vt1.c0)AND(rt0.c2)))OR(vt1.c0)) THEN 0.26574893116796405 ELSE CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((CAST(rt0.c2 AS REAL))GLOB((NOT (rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (CASE (NOT (NULL))  WHEN ((((vt1.c0)AND(rt0.c2)))OR(vt1.c0)) THEN 0.26574893116796405 ELSE CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt1.c0 END END) ORDER BY ((CAST(rt0.c2 AS REAL))GLOB((NOT (rt0.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((- ((((rt0.c0, rt0.c2, 0x29199a61))<=((rt0.c2, vt1.c0, vt0.c0)))))) ORDER BY ((((vt0.c0)==(rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c0, rt0.c2, 0X29199a61))<=((rt0.c2, vt1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((vt0.c0)=(rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((- ((((rt0.c0, rt0.c2, 0x29199a61))<=((rt0.c2, vt1.c0, vt0.c0)))))) ORDER BY ((((vt0.c0)==(rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c0, rt0.c2, 0X29199a61))<=((rt0.c2, vt1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((vt0.c0)=(rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((- ((((rt0.c0, rt0.c2, 0x29199a61))<=((rt0.c2, vt1.c0, vt0.c0)))))) ORDER BY ((((vt0.c0)==(rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN '10370823' ELSE rt0.c0 END)GLOB(((rt0.c0) NOT NULL)))) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))<=((((rt0.c2) BETWEEN (rt0.c0) AND (x'517c'))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN '10370823' ELSE rt0.c0 END)GLOB(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))<=((((rt0.c2) BETWEEN (rt0.c0) AND (x'517c'))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN '10370823' ELSE rt0.c0 END)GLOB(((rt0.c0) NOT NULL)))) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))<=((((rt0.c2) BETWEEN (rt0.c0) AND (x'517c'))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN '10370823' ELSE rt0.c0 END)GLOB(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))<=((((rt0.c2) BETWEEN (rt0.c0) AND (x'517c'))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN '10370823' ELSE rt0.c0 END)GLOB(((rt0.c0) NOT NULL)))) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))<=((((rt0.c2) BETWEEN (rt0.c0) AND (x'517c'))))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON 1606825460 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END END) ORDER BY (((vt1.c0) BETWEEN (x'') AND (vt0.c0)) IN (TRIM(DISTINCT vt1.c0, vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON 1606825460 ORDER BY (((vt1.c0) BETWEEN (x'') AND (vt0.c0)) IN (TRIM(DISTINCT vt1.c0, vt1.c0))) ASC);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON 1606825460 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END END) ORDER BY (((vt1.c0) BETWEEN (x'') AND (vt0.c0)) IN (TRIM(DISTINCT vt1.c0, vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON 1606825460 ORDER BY (((vt1.c0) BETWEEN (x'') AND (vt0.c0)) IN (TRIM(DISTINCT vt1.c0, vt1.c0))) ASC);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON 1606825460 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END END) ORDER BY (((vt1.c0) BETWEEN (x'') AND (vt0.c0)) IN (TRIM(DISTINCT vt1.c0, vt1.c0))) ASC;
SELECT ALL * FROM rt0, vt1, vt0 WHERE (LIKELY(((vt1.c0) ISNULL))) ORDER BY (('') NOT BETWEEN ((rt0.c2 IN ())) AND (((NULL) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((vt1.c0) ISNULL))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (('') NOT BETWEEN ((rt0.c2 IN ())) AND (((NULL) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (LIKELY(((vt1.c0) ISNULL))) ORDER BY (('') NOT BETWEEN ((rt0.c2 IN ())) AND (((NULL) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((vt1.c0) ISNULL))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (('') NOT BETWEEN ((rt0.c2 IN ())) AND (((NULL) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (LIKELY(((vt1.c0) ISNULL))) ORDER BY (('') NOT BETWEEN ((rt0.c2 IN ())) AND (((NULL) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(((rt0.c1)IS(rt0.c2)))))AND(CAST(rt0.c2 AS NUMERIC))))AND(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT NULL))) LEFT OUTER JOIN vt0 ON (NOT (rt0.c1)) COLLATE RTRIM WHERE ((((('1100738834')/(vt0.c0)))IS(CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((('1100738834')/(vt0.c0)))IS(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(((rt0.c1)IS(rt0.c2)))))AND(CAST(rt0.c2 AS NUMERIC))))AND(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT NULL))) LEFT OUTER JOIN vt0 ON (NOT (rt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(((rt0.c1)IS(rt0.c2)))))AND(CAST(rt0.c2 AS NUMERIC))))AND(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT NULL))) LEFT OUTER JOIN vt0 ON (NOT (rt0.c1)) COLLATE RTRIM WHERE ((((('1100738834')/(vt0.c0)))IS(CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((('1100738834')/(vt0.c0)))IS(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(((rt0.c1)IS(rt0.c2)))))AND(CAST(rt0.c2 AS NUMERIC))))AND(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT NULL))) LEFT OUTER JOIN vt0 ON (NOT (rt0.c1)) COLLATE RTRIM);
SELECT * FROM rt0, vt1 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END)&(rt0.c0))) ORDER BY ((vt1.c0) IS TRUE) ASC  NULLS FIRST, (((rt0.c0) IS TRUE) IN (LIKELY(rt0.c0))) ASC  NULLS FIRST, (((rt0.c1 IN ())) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c2 END)&(rt0.c0))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0) IS TRUE) ASC  NULLS FIRST, (((rt0.c0) IS TRUE) IN (LIKELY(rt0.c0))) ASC  NULLS FIRST, (((rt0.c1 IN ())) IS FALSE)  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END)&(rt0.c0))) ORDER BY ((vt1.c0) IS TRUE) ASC  NULLS FIRST, (((rt0.c0) IS TRUE) IN (LIKELY(rt0.c0))) ASC  NULLS FIRST, (((rt0.c1 IN ())) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c2 END)&(rt0.c0))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0) IS TRUE) ASC  NULLS FIRST, (((rt0.c0) IS TRUE) IN (LIKELY(rt0.c0))) ASC  NULLS FIRST, (((rt0.c1 IN ())) IS FALSE)  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END)&(rt0.c0))) ORDER BY ((vt1.c0) IS TRUE) ASC  NULLS FIRST, (((rt0.c0) IS TRUE) IN (LIKELY(rt0.c0))) ASC  NULLS FIRST, (((rt0.c1 IN ())) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (0.9256407463032446);
SELECT SUM(count) FROM (SELECT ((0.9256407463032446) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.9256407463032446);
SELECT SUM(count) FROM (SELECT ((0.9256407463032446) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.9256407463032446);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST(((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST(((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST(((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (0.5964537455710587) ORDER BY ((((rt0.c0)IS NOT(rt0.c2))) IS FALSE), ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((rt0.c2) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.5964537455710587) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)IS NOT(rt0.c2))) IS FALSE), ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((rt0.c2) ISNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (0.5964537455710587) ORDER BY ((((rt0.c0)IS NOT(rt0.c2))) IS FALSE), ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((rt0.c2) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.5964537455710587) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)IS NOT(rt0.c2))) IS FALSE), ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((rt0.c2) ISNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (0.5964537455710587) ORDER BY ((((rt0.c0)IS NOT(rt0.c2))) IS FALSE), ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((rt0.c2) ISNULL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN x'153c' THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 ELSE x'' END)) WHERE ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END IN ((((0X1832d752, rt0.c0, vt1.c0))==((rt0.c1, rt0.c0, NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END IN ((((0x1832d752, rt0.c0, vt1.c0))=((rt0.c1, rt0.c0, NULL)))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN x'153c' THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 ELSE x'' END)));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN x'153c' THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 ELSE x'' END)) WHERE ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END IN ((((0X1832d752, rt0.c0, vt1.c0))==((rt0.c1, rt0.c0, NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END IN ((((0x1832d752, rt0.c0, vt1.c0))=((rt0.c1, rt0.c0, NULL)))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN x'153c' THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 ELSE x'' END)));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN x'153c' THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 ELSE x'' END)) WHERE ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END IN ((((0X1832d752, rt0.c0, vt1.c0))==((rt0.c1, rt0.c0, NULL))))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0.4121018034022701);
SELECT SUM(count) FROM (SELECT ((0.4121018034022701) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0.4121018034022701);
SELECT SUM(count) FROM (SELECT ((0.4121018034022701) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0.4121018034022701);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ())) BETWEEN (0.9703697202621759) AND (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)) WHERE ((~ (((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ())) BETWEEN (0.9703697202621759) AND (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ())) BETWEEN (0.9703697202621759) AND (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)) WHERE ((~ (((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ())) BETWEEN (0.9703697202621759) AND (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ())) BETWEEN (0.9703697202621759) AND (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)) WHERE ((~ (((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))));
SELECT * FROM rt0, vt1 WHERE (((rt0.c0) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt0.c1 IN (rt0.c1, vt1.c0))))) ORDER BY (((((vt1.c0)AND(rt0.c0)))OR(rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt0.c1 IN (rt0.c1, vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((vt1.c0)AND(rt0.c0)))OR(rt0.c0)) IN ())  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (((rt0.c0) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt0.c1 IN (rt0.c1, vt1.c0))))) ORDER BY (((((vt1.c0)AND(rt0.c0)))OR(rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt0.c1 IN (rt0.c1, vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((vt1.c0)AND(rt0.c0)))OR(rt0.c0)) IN ())  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (((rt0.c0) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt0.c1 IN (rt0.c1, vt1.c0))))) ORDER BY (((((vt1.c0)AND(rt0.c0)))OR(rt0.c0)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0, NULL, vt0.c0)))))AND(vt0.c0))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0, NULL, vt0.c0)))))AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0, NULL, vt0.c0)))))AND(vt0.c0))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0, NULL, vt0.c0)))))AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0, NULL, vt0.c0)))))AND(vt0.c0))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((((((rt0.c1))>=((rt0.c1))))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))OR(((rt0.c2)GLOB(rt0.c0))))) ORDER BY (+ ((+ (-2.022644256E9)))), ((rt0.c2)IS NOT(rt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1))>=((rt0.c1))))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))OR(((rt0.c2)GLOB(rt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (+ ((+ (-2.022644256E9)))), ((rt0.c2)IS NOT(rt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((((((rt0.c1))>=((rt0.c1))))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))OR(((rt0.c2)GLOB(rt0.c0))))) ORDER BY (+ ((+ (-2.022644256E9)))), ((rt0.c2)IS NOT(rt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1))>=((rt0.c1))))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))OR(((rt0.c2)GLOB(rt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (+ ((+ (-2.022644256E9)))), ((rt0.c2)IS NOT(rt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((((((rt0.c1))>=((rt0.c1))))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))OR(((rt0.c2)GLOB(rt0.c0))))) ORDER BY (+ ((+ (-2.022644256E9)))), ((rt0.c2)IS NOT(rt0.c1)) COLLATE RTRIM;
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON vt0.c0 WHERE (((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0))) NOTNULL)) ORDER BY ((((vt0.c0)&(rt0.c2)))>>(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON vt0.c0 ORDER BY ((((vt0.c0)&(rt0.c2)))>>(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON vt0.c0 WHERE (((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0))) NOTNULL)) ORDER BY ((((vt0.c0)&(rt0.c2)))>>(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON vt0.c0 ORDER BY ((((vt0.c0)&(rt0.c2)))>>(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON vt0.c0 WHERE (((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0))) NOTNULL)) ORDER BY ((((vt0.c0)&(rt0.c2)))>>(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST((((vt0.c0))<=((vt0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))<=((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0))<=((vt0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))<=((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0))<=((vt0.c0))) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)%(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)%(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)%(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)%(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)%(vt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS TEXT));
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND(HEX(vt0.c0))))AND(vt0.c0 COLLATE BINARY))) ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), vt0.c0 COLLATE BINARY))>=((ROUND(vt0.c0, vt0.c0), ((vt0.c0)IS(0Xffffffffb4394a72)), ((vt0.c0)>>(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)AND(HEX(vt0.c0))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), vt0.c0 COLLATE BINARY))>=((ROUND(vt0.c0, vt0.c0), ((vt0.c0)IS(0Xffffffffb4394a72)), ((vt0.c0)>>(vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND(HEX(vt0.c0))))AND(vt0.c0 COLLATE BINARY))) ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), vt0.c0 COLLATE BINARY))>=((ROUND(vt0.c0, vt0.c0), ((vt0.c0)IS(0Xffffffffb4394a72)), ((vt0.c0)>>(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)AND(HEX(vt0.c0))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), vt0.c0 COLLATE BINARY))>=((ROUND(vt0.c0, vt0.c0), ((vt0.c0)IS(0Xffffffffb4394a72)), ((vt0.c0)>>(vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND(HEX(vt0.c0))))AND(vt0.c0 COLLATE BINARY))) ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), vt0.c0 COLLATE BINARY))>=((ROUND(vt0.c0, vt0.c0), ((vt0.c0)IS(0Xffffffffb4394a72)), ((vt0.c0)>>(vt0.c0))))) ASC;
SELECT * FROM vt1, rt0 WHERE ((- (((rt0.c2)IS NOT(rt0.c2))))) ORDER BY ((TRIM(DISTINCT rt0.c2, rt0.c1))+(TRIM(DISTINCT vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((TRIM(DISTINCT rt0.c2, rt0.c1))+(TRIM(DISTINCT vt1.c0))) ASC);
SELECT * FROM vt1, rt0 WHERE ((- (((rt0.c2)IS NOT(rt0.c2))))) ORDER BY ((TRIM(DISTINCT rt0.c2, rt0.c1))+(TRIM(DISTINCT vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((TRIM(DISTINCT rt0.c2, rt0.c1))+(TRIM(DISTINCT vt1.c0))) ASC);
SELECT * FROM vt1, rt0 WHERE ((- (((rt0.c2)IS NOT(rt0.c2))))) ORDER BY ((TRIM(DISTINCT rt0.c2, rt0.c1))+(TRIM(DISTINCT vt1.c0))) ASC;
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON '0.5357847497274191' INNER JOIN rt0 ON (((rt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, (((rt0.c1))<>((vt1.c0))), ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0)))) AND ((((rt0.c1)!=(rt0.c1)), ((0.12946179040163752)GLOB(rt0.c1)), CAST(vt1.c0 AS INTEGER)))) WHERE (((0.09360388796841135 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (x''))) ORDER BY ((vt0.c0)IS NOT(vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST, TOTAL_CHANGES() COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((0.09360388796841135 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (x''))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON '0.5357847497274191' INNER JOIN rt0 ON (((rt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, (((rt0.c1))!=((vt1.c0))), ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0)))) AND ((((rt0.c1)<>(rt0.c1)), ((0.12946179040163752)GLOB(rt0.c1)), CAST(vt1.c0 AS INTEGER)))) ORDER BY ((vt0.c0)IS NOT(vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST, TOTAL_CHANGES() COLLATE BINARY);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON '0.5357847497274191' INNER JOIN rt0 ON (((rt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, (((rt0.c1))<>((vt1.c0))), ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0)))) AND ((((rt0.c1)!=(rt0.c1)), ((0.12946179040163752)GLOB(rt0.c1)), CAST(vt1.c0 AS INTEGER)))) WHERE (((0.09360388796841135 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (x''))) ORDER BY ((vt0.c0)IS NOT(vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST, TOTAL_CHANGES() COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((0.09360388796841135 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (x''))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON '0.5357847497274191' INNER JOIN rt0 ON (((rt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, (((rt0.c1))!=((vt1.c0))), ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0)))) AND ((((rt0.c1)<>(rt0.c1)), ((0.12946179040163752)GLOB(rt0.c1)), CAST(vt1.c0 AS INTEGER)))) ORDER BY ((vt0.c0)IS NOT(vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST, TOTAL_CHANGES() COLLATE BINARY);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON '0.5357847497274191' INNER JOIN rt0 ON (((rt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, (((rt0.c1))<>((vt1.c0))), ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0)))) AND ((((rt0.c1)!=(rt0.c1)), ((0.12946179040163752)GLOB(rt0.c1)), CAST(vt1.c0 AS INTEGER)))) WHERE (((0.09360388796841135 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (x''))) ORDER BY ((vt0.c0)IS NOT(vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST, TOTAL_CHANGES() COLLATE BINARY;
SELECT ALL * FROM vt0, rt0 NOT INDEXED, vt1 WHERE (((((CAST(rt0.c2 AS NUMERIC))OR((((vt0.c0))=(('-1349974672'))))))AND(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END))) ORDER BY (((((((((NOT (rt0.c2)))OR(json_object(vt1.c0, rt0.c1))))AND(LOWER(vt0.c0))))AND(LIKELY(rt0.c1))))AND(((NULL)IS(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS NUMERIC))OR((((vt0.c0))==(('-1349974672'))))))AND(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((((((((NOT (rt0.c2)))OR(json_object(vt1.c0, rt0.c1))))AND(LOWER(vt0.c0))))AND(LIKELY(rt0.c1))))AND(((NULL)IS(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 NOT INDEXED, vt1 WHERE (((((CAST(rt0.c2 AS NUMERIC))OR((((vt0.c0))=(('-1349974672'))))))AND(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END))) ORDER BY (((((((((NOT (rt0.c2)))OR(json_object(vt1.c0, rt0.c1))))AND(LOWER(vt0.c0))))AND(LIKELY(rt0.c1))))AND(((NULL)IS(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS NUMERIC))OR((((vt0.c0))==(('-1349974672'))))))AND(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((((((((NOT (rt0.c2)))OR(json_object(vt1.c0, rt0.c1))))AND(LOWER(vt0.c0))))AND(LIKELY(rt0.c1))))AND(((NULL)IS(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))!=((vt0.c0 IN (vt0.c0))))) ORDER BY ((CAST(0x37e4c44b AS NUMERIC))<(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))<>((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(0X37e4c44b AS NUMERIC))<(vt0.c0)) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))!=((vt0.c0 IN (vt0.c0))))) ORDER BY ((CAST(0x37e4c44b AS NUMERIC))<(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))<>((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(0X37e4c44b AS NUMERIC))<(vt0.c0)) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))!=((vt0.c0 IN (vt0.c0))))) ORDER BY ((CAST(0x37e4c44b AS NUMERIC))<(vt0.c0)) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (CASE rt0.c2  WHEN (((NULL))<=((vt0.c0))) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(x'')) WHEN vt1.c0 THEN ((x'') NOT NULL) ELSE CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN (((NULL))<=((vt0.c0))) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(x'')) WHEN vt1.c0 THEN ((x'') NOT NULL) ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (CASE rt0.c2  WHEN (((NULL))<=((vt0.c0))) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(x'')) WHEN vt1.c0 THEN ((x'') NOT NULL) ELSE CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN (((NULL))<=((vt0.c0))) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(x'')) WHEN vt1.c0 THEN ((x'') NOT NULL) ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (CASE rt0.c2  WHEN (((NULL))<=((vt0.c0))) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(x'')) WHEN vt1.c0 THEN ((x'') NOT NULL) ELSE CAST(vt0.c0 AS REAL) END);
SELECT * FROM vt0, rt0 FULL OUTER JOIN vt1 ON (UNLIKELY(rt0.c0) IN ()) WHERE ((NOT (0.7123038384907285)));
SELECT SUM(count) FROM (SELECT (((NOT (0.7123038384907285))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON (UNLIKELY(rt0.c0) IN ()));
SELECT * FROM vt0, rt0 FULL OUTER JOIN vt1 ON (UNLIKELY(rt0.c0) IN ()) WHERE ((NOT (0.7123038384907285)));
SELECT SUM(count) FROM (SELECT (((NOT (0.7123038384907285))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON (UNLIKELY(rt0.c0) IN ()));
SELECT * FROM vt0, rt0 FULL OUTER JOIN vt1 ON (UNLIKELY(rt0.c0) IN ()) WHERE ((NOT (0.7123038384907285)));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (0.07512460667188348) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.07512460667188348) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY CAST(rt0.c1 COLLATE RTRIM AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (0.07512460667188348) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.07512460667188348) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY CAST(rt0.c1 COLLATE RTRIM AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (0.07512460667188348) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS REAL)  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)))OR(((vt1.c0) BETWEEN ('2F<\Mmo') AND (rt0.c0)))))OR((vt0.c0 IN (rt0.c2))))) ORDER BY (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (TRIM(DISTINCT rt0.c0, rt0.c0)) AND (((((rt0.c2)OR(rt0.c0)))OR(vt1.c0)))) ASC  NULLS FIRST, 'sA' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)))OR(((vt1.c0) BETWEEN ('2F<\Mmo') AND (rt0.c0)))))OR((vt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (TRIM(DISTINCT rt0.c0, rt0.c0)) AND (((((rt0.c2)OR(rt0.c0)))OR(vt1.c0)))) ASC  NULLS FIRST, 'sA' DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)))OR(((vt1.c0) BETWEEN ('2F<\Mmo') AND (rt0.c0)))))OR((vt0.c0 IN (rt0.c2))))) ORDER BY (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (TRIM(DISTINCT rt0.c0, rt0.c0)) AND (((((rt0.c2)OR(rt0.c0)))OR(vt1.c0)))) ASC  NULLS FIRST, 'sA' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)))OR(((vt1.c0) BETWEEN ('2F<\Mmo') AND (rt0.c0)))))OR((vt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (TRIM(DISTINCT rt0.c0, rt0.c0)) AND (((((rt0.c2)OR(rt0.c0)))OR(vt1.c0)))) ASC  NULLS FIRST, 'sA' DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)))OR(((vt1.c0) BETWEEN ('2F<\Mmo') AND (rt0.c0)))))OR((vt0.c0 IN (rt0.c2))))) ORDER BY (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (TRIM(DISTINCT rt0.c0, rt0.c0)) AND (((((rt0.c2)OR(rt0.c0)))OR(vt1.c0)))) ASC  NULLS FIRST, 'sA' DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE RTRIM);
SELECT * FROM rt0, vt1 CROSS JOIN vt0 ON LENGTH(((vt0.c0)<<(vt1.c0))) WHERE (((vt1.c0 COLLATE RTRIM)|(((0.18346147683907899)*(rt0.c0))))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)|(((0.18346147683907899)*(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON LENGTH(((vt0.c0)<<(vt1.c0))) ORDER BY rt0.c1  NULLS LAST);
SELECT * FROM rt0, vt1 CROSS JOIN vt0 ON LENGTH(((vt0.c0)<<(vt1.c0))) WHERE (((vt1.c0 COLLATE RTRIM)|(((0.18346147683907899)*(rt0.c0))))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)|(((0.18346147683907899)*(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON LENGTH(((vt0.c0)<<(vt1.c0))) ORDER BY rt0.c1  NULLS LAST);
SELECT * FROM rt0, vt1 CROSS JOIN vt0 ON LENGTH(((vt0.c0)<<(vt1.c0))) WHERE (((vt1.c0 COLLATE RTRIM)|(((0.18346147683907899)*(rt0.c0))))) ORDER BY rt0.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((((vt1.c0)AND(rt0.c0)))AND(rt0.c0)))IS NOT('10370823'))) ORDER BY ((((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))OR(vt0.c0)))OR(((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(rt0.c0)))AND(rt0.c0)))IS NOT('10370823'))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))OR(vt0.c0)))OR(((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((((vt1.c0)AND(rt0.c0)))AND(rt0.c0)))IS NOT('10370823'))) ORDER BY ((((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))OR(vt0.c0)))OR(((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(rt0.c0)))AND(rt0.c0)))IS NOT('10370823'))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))OR(vt0.c0)))OR(((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((((vt1.c0)AND(rt0.c0)))AND(rt0.c0)))IS NOT('10370823'))) ORDER BY ((((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))OR(vt0.c0)))OR(((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c2))))  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (DATE(rt0.c1 COLLATE BINARY, ((rt0.c0)LIKE(rt0.c2)), ((((vt1.c0)AND(rt0.c2)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((DATE(rt0.c1 COLLATE BINARY, ((rt0.c0)LIKE(rt0.c2)), ((((vt1.c0)AND(rt0.c2)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (DATE(rt0.c1 COLLATE BINARY, ((rt0.c0)LIKE(rt0.c2)), ((((vt1.c0)AND(rt0.c2)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((DATE(rt0.c1 COLLATE BINARY, ((rt0.c0)LIKE(rt0.c2)), ((((vt1.c0)AND(rt0.c2)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (DATE(rt0.c1 COLLATE BINARY, ((rt0.c0)LIKE(rt0.c2)), ((((vt1.c0)AND(rt0.c2)))OR(rt0.c1))));
SELECT * FROM vt0 WHERE (CASE WHEN TOTAL_CHANGES() THEN ((vt0.c0) NOTNULL) END) ORDER BY json_extract(UNLIKELY(vt0.c0), vt0.c0) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TOTAL_CHANGES() THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 ORDER BY json_extract(UNLIKELY(vt0.c0), vt0.c0) ASC);
SELECT * FROM vt0 WHERE (CASE WHEN TOTAL_CHANGES() THEN ((vt0.c0) NOTNULL) END) ORDER BY json_extract(UNLIKELY(vt0.c0), vt0.c0) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TOTAL_CHANGES() THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 ORDER BY json_extract(UNLIKELY(vt0.c0), vt0.c0) ASC);
SELECT * FROM vt0 WHERE (CASE WHEN TOTAL_CHANGES() THEN ((vt0.c0) NOTNULL) END) ORDER BY json_extract(UNLIKELY(vt0.c0), vt0.c0) ASC;
SELECT ALL * FROM rt0, vt1, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)AND((rt0.c1 IN ()))))AND(((NULL)OR(rt0.c0)))) WHERE (((((((rt0.c1)<(rt0.c1)))OR(((rt0.c1) IS FALSE))))OR(((rt0.c2) IS FALSE)))) ORDER BY ((vt0.c0)==(rt0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)<(rt0.c1)))OR(((rt0.c1) IS FALSE))))OR(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)AND((rt0.c1 IN ()))))AND(((NULL)OR(rt0.c0)))) ORDER BY ((vt0.c0)==(rt0.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)AND((rt0.c1 IN ()))))AND(((NULL)OR(rt0.c0)))) WHERE (((((((rt0.c1)<(rt0.c1)))OR(((rt0.c1) IS FALSE))))OR(((rt0.c2) IS FALSE)))) ORDER BY ((vt0.c0)==(rt0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)<(rt0.c1)))OR(((rt0.c1) IS FALSE))))OR(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)AND((rt0.c1 IN ()))))AND(((NULL)OR(rt0.c0)))) ORDER BY ((vt0.c0)==(rt0.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)AND((rt0.c1 IN ()))))AND(((NULL)OR(rt0.c0)))) WHERE (((((((rt0.c1)<(rt0.c1)))OR(((rt0.c1) IS FALSE))))OR(((rt0.c2) IS FALSE)))) ORDER BY ((vt0.c0)==(rt0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN rt0 WHERE ('-189694761');
SELECT SUM(count) FROM (SELECT (('-189694761') IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN rt0 WHERE ('-189694761');
SELECT SUM(count) FROM (SELECT (('-189694761') IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN rt0 WHERE ('-189694761');
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c1))) ORDER BY (+ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS FIRST, (('1634284838') NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)) ASC, rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS FIRST, (('1634284838') NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)) ASC, rt0.c0 ASC);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c1))) ORDER BY (+ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS FIRST, (('1634284838') NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)) ASC, rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS FIRST, (('1634284838') NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)) ASC, rt0.c0 ASC);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c1))) ORDER BY (+ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS FIRST, (('1634284838') NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)) ASC, rt0.c0 ASC;
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((vt1.c0)|((NOT (rt0.c2))))) ORDER BY LIKELIHOOD(-20159965, 8.316424956367197E-4) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)|((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY LIKELIHOOD(-20159965, 8.316424956367197E-4) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((vt1.c0)|((NOT (rt0.c2))))) ORDER BY LIKELIHOOD(-20159965, 8.316424956367197E-4) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)|((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY LIKELIHOOD(-20159965, 8.316424956367197E-4) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((vt1.c0)|((NOT (rt0.c2))))) ORDER BY LIKELIHOOD(-20159965, 8.316424956367197E-4) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(vt1.c0 AS BLOB)) ORDER BY ((((vt0.c0)/(rt0.c1))) NOT BETWEEN (rtreenode(rt0.c2, rt0.c2)) AND ((((vt1.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((NULL, vt1.c0, rt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((vt0.c0)/(rt0.c1))) NOT BETWEEN (rtreenode(rt0.c2, rt0.c2)) AND ((((vt1.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((NULL, vt1.c0, rt0.c2))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(vt1.c0 AS BLOB)) ORDER BY ((((vt0.c0)/(rt0.c1))) NOT BETWEEN (rtreenode(rt0.c2, rt0.c2)) AND ((((vt1.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((NULL, vt1.c0, rt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((vt0.c0)/(rt0.c1))) NOT BETWEEN (rtreenode(rt0.c2, rt0.c2)) AND ((((vt1.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((NULL, vt1.c0, rt0.c2))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(vt1.c0 AS BLOB)) ORDER BY ((((vt0.c0)/(rt0.c1))) NOT BETWEEN (rtreenode(rt0.c2, rt0.c2)) AND ((((vt1.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((NULL, vt1.c0, rt0.c2))))) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0 INNER JOIN vt1 ON LIKELIHOOD(((rt0.c2) ISNULL), 0.14362518831692983) WHERE ((NOT ((((vt0.c0, vt0.c0, rt0.c0))==((rt0.c0, vt1.c0, rt0.c1)))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0, vt0.c0, rt0.c0))=((rt0.c0, vt1.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON LIKELIHOOD(((rt0.c2) ISNULL), 0.14362518831692983) ORDER BY rt0.c0);
SELECT * FROM rt0, vt0 INNER JOIN vt1 ON LIKELIHOOD(((rt0.c2) ISNULL), 0.14362518831692983) WHERE ((NOT ((((vt0.c0, vt0.c0, rt0.c0))==((rt0.c0, vt1.c0, rt0.c1)))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0, vt0.c0, rt0.c0))=((rt0.c0, vt1.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON LIKELIHOOD(((rt0.c2) ISNULL), 0.14362518831692983) ORDER BY rt0.c0);
SELECT * FROM rt0, vt0 INNER JOIN vt1 ON LIKELIHOOD(((rt0.c2) ISNULL), 0.14362518831692983) WHERE ((NOT ((((vt0.c0, vt0.c0, rt0.c0))==((rt0.c0, vt1.c0, rt0.c1)))))) ORDER BY rt0.c0;
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0)))*(((rt0.c2)<=(rt0.c0))))) ORDER BY (((~ (rt0.c1)))>(CAST(rt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))*(((rt0.c2)<=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c1)))>(CAST(rt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0)))*(((rt0.c2)<=(rt0.c0))))) ORDER BY (((~ (rt0.c1)))>(CAST(rt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))*(((rt0.c2)<=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c1)))>(CAST(rt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0)))*(((rt0.c2)<=(rt0.c0))))) ORDER BY (((~ (rt0.c1)))>(CAST(rt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS INTEGER) FULL OUTER JOIN rt0 ON ((((((vt0.c0) IS TRUE))AND(rt0.c2 COLLATE NOCASE)))OR((~ (vt1.c0)))) WHERE (CASE WHEN 0xd32b75c COLLATE RTRIM THEN vt1.c0 COLLATE BINARY ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0Xd32b75c COLLATE RTRIM THEN vt1.c0 COLLATE BINARY ELSE vt0.c0 END) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS INTEGER) FULL OUTER JOIN rt0 ON ((((((vt0.c0) IS TRUE))AND(rt0.c2 COLLATE NOCASE)))OR((~ (vt1.c0)))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS INTEGER) FULL OUTER JOIN rt0 ON ((((((vt0.c0) IS TRUE))AND(rt0.c2 COLLATE NOCASE)))OR((~ (vt1.c0)))) WHERE (CASE WHEN 0xd32b75c COLLATE RTRIM THEN vt1.c0 COLLATE BINARY ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0Xd32b75c COLLATE RTRIM THEN vt1.c0 COLLATE BINARY ELSE vt0.c0 END) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS INTEGER) FULL OUTER JOIN rt0 ON ((((((vt0.c0) IS TRUE))AND(rt0.c2 COLLATE NOCASE)))OR((~ (vt1.c0)))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS INTEGER) FULL OUTER JOIN rt0 ON ((((((vt0.c0) IS TRUE))AND(rt0.c2 COLLATE NOCASE)))OR((~ (vt1.c0)))) WHERE (CASE WHEN 0xd32b75c COLLATE RTRIM THEN vt1.c0 COLLATE BINARY ELSE vt0.c0 END);
SELECT COUNT(*) FROM vt0 WHERE (((((x'')OR((~ (vt0.c0)))))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR((~ (vt0.c0)))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((x'')OR((~ (vt0.c0)))))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR((~ (vt0.c0)))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((x'')OR((~ (vt0.c0)))))OR((- (vt0.c0)))));
SELECT * FROM vt1 WHERE ((((NULL, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(0.04271907397988228 AS NUMERIC), 0.8063822987851604 COLLATE RTRIM, x'', (vt1.c0 IN ()), 0.008192609994203015, ((vt1.c0) BETWEEN (vt1.c0) AND (x'c033')), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((((vt1.c0)AND('é£pP/ä±[8s')))OR(vt1.c0)), ((vt1.c0) NOT NULL), ((vt1.c0)<<(vt1.c0)), (~ (vt1.c0)), (vt1.c0 IN ()), ((vt1.c0)OR(vt1.c0)), vt1.c0)))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((NULL, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(0.04271907397988228 AS NUMERIC), 0.8063822987851604 COLLATE RTRIM, x'', (vt1.c0 IN ()), 0.008192609994203015, ((vt1.c0) BETWEEN (vt1.c0) AND (x'c033')), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((((vt1.c0)AND('é£pP/ä±[8s')))OR(vt1.c0)), ((vt1.c0) NOT NULL), ((vt1.c0)<<(vt1.c0)), (~ (vt1.c0)), (vt1.c0 IN ()), ((vt1.c0)OR(vt1.c0)), vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT * FROM vt1 WHERE ((((NULL, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(0.04271907397988228 AS NUMERIC), 0.8063822987851604 COLLATE RTRIM, x'', (vt1.c0 IN ()), 0.008192609994203015, ((vt1.c0) BETWEEN (vt1.c0) AND (x'c033')), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((((vt1.c0)AND('é£pP/ä±[8s')))OR(vt1.c0)), ((vt1.c0) NOT NULL), ((vt1.c0)<<(vt1.c0)), (~ (vt1.c0)), (vt1.c0 IN ()), ((vt1.c0)OR(vt1.c0)), vt1.c0)))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((NULL, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(0.04271907397988228 AS NUMERIC), 0.8063822987851604 COLLATE RTRIM, x'', (vt1.c0 IN ()), 0.008192609994203015, ((vt1.c0) BETWEEN (vt1.c0) AND (x'c033')), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((((vt1.c0)AND('é£pP/ä±[8s')))OR(vt1.c0)), ((vt1.c0) NOT NULL), ((vt1.c0)<<(vt1.c0)), (~ (vt1.c0)), (vt1.c0 IN ()), ((vt1.c0)OR(vt1.c0)), vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT * FROM vt1 WHERE ((((NULL, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(0.04271907397988228 AS NUMERIC), 0.8063822987851604 COLLATE RTRIM, x'', (vt1.c0 IN ()), 0.008192609994203015, ((vt1.c0) BETWEEN (vt1.c0) AND (x'c033')), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((((vt1.c0)AND('é£pP/ä±[8s')))OR(vt1.c0)), ((vt1.c0) NOT NULL), ((vt1.c0)<<(vt1.c0)), (~ (vt1.c0)), (vt1.c0 IN ()), ((vt1.c0)OR(vt1.c0)), vt1.c0)))) ORDER BY vt1.c0 ASC;
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ())) ORDER BY (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))<(((((rt0.c2, rt0.c1, vt1.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c1, vt1.c0)) AND ((rt0.c0, rt0.c1, vt1.c0, rt0.c1, vt1.c0)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))<(((((rt0.c2, rt0.c1, vt1.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c1, vt1.c0)) AND ((rt0.c0, rt0.c1, vt1.c0, rt0.c1, vt1.c0)))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ())) ORDER BY (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))<(((((rt0.c2, rt0.c1, vt1.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c1, vt1.c0)) AND ((rt0.c0, rt0.c1, vt1.c0, rt0.c1, vt1.c0)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))<(((((rt0.c2, rt0.c1, vt1.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c1, vt1.c0)) AND ((rt0.c0, rt0.c1, vt1.c0, rt0.c1, vt1.c0)))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ())) ORDER BY (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))<(((((rt0.c2, rt0.c1, vt1.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c1, vt1.c0)) AND ((rt0.c0, rt0.c1, vt1.c0, rt0.c1, vt1.c0)))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((vt1.c0) BETWEEN (((rt0.c0) NOT NULL)) AND (CASE rt0.c0  WHEN vt0.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (((rt0.c0) NOT NULL)) AND (CASE rt0.c0  WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((vt1.c0) BETWEEN (((rt0.c0) NOT NULL)) AND (CASE rt0.c0  WHEN vt0.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (((rt0.c0) NOT NULL)) AND (CASE rt0.c0  WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((vt1.c0) BETWEEN (((rt0.c0) NOT NULL)) AND (CASE rt0.c0  WHEN vt0.c0 THEN vt1.c0 END)));
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE ((~ ('0.07512460667188348'))) ORDER BY (((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))==(((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ('0.07512460667188348'))) IS TRUE)  as count FROM vt0 NOT INDEXED NATURAL JOIN vt1 ORDER BY (((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))=(((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE ((~ ('0.07512460667188348'))) ORDER BY (((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))==(((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ('0.07512460667188348'))) IS TRUE)  as count FROM vt0 NOT INDEXED NATURAL JOIN vt1 ORDER BY (((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))=(((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE ((~ ('0.07512460667188348'))) ORDER BY (((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))==(((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT * FROM vt0 INNER JOIN rt0 ON UPPER(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) CROSS JOIN vt1 ON (((rt0.c2)<<(vt0.c0)) IN ()) WHERE ((((vt1.c0)) BETWEEN ((json_array(vt0.c0, vt0.c0))) AND ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))) ORDER BY ((((vt1.c0)IS NOT(rt0.c2))) NOT BETWEEN (rt0.c1) AND (rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((json_array(vt0.c0, vt0.c0))) AND ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON UPPER(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) CROSS JOIN vt1 ON (((rt0.c2)<<(vt0.c0)) IN ()) ORDER BY ((((vt1.c0)IS NOT(rt0.c2))) NOT BETWEEN (rt0.c1) AND (rt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0 INNER JOIN rt0 ON UPPER(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) CROSS JOIN vt1 ON (((rt0.c2)<<(vt0.c0)) IN ()) WHERE ((((vt1.c0)) BETWEEN ((json_array(vt0.c0, vt0.c0))) AND ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))) ORDER BY ((((vt1.c0)IS NOT(rt0.c2))) NOT BETWEEN (rt0.c1) AND (rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((json_array(vt0.c0, vt0.c0))) AND ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON UPPER(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) CROSS JOIN vt1 ON (((rt0.c2)<<(vt0.c0)) IN ()) ORDER BY ((((vt1.c0)IS NOT(rt0.c2))) NOT BETWEEN (rt0.c1) AND (rt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0 INNER JOIN rt0 ON UPPER(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) CROSS JOIN vt1 ON (((rt0.c2)<<(vt0.c0)) IN ()) WHERE ((((vt1.c0)) BETWEEN ((json_array(vt0.c0, vt0.c0))) AND ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))) ORDER BY ((((vt1.c0)IS NOT(rt0.c2))) NOT BETWEEN (rt0.c1) AND (rt0.c0 COLLATE NOCASE));
SELECT ALL * FROM vt1, vt0 WHERE ((vt1.c0 IN ()) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((vt1.c0 IN ()) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((vt1.c0 IN ()) COLLATE RTRIM COLLATE BINARY);
SELECT * FROM rt0 CROSS JOIN vt0 ON CAST(((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) AS NUMERIC) WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))+(((rt0.c0) NOT BETWEEN (0.8204902773458694) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))+(((rt0.c0) NOT BETWEEN (0.8204902773458694) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CAST(((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) AS NUMERIC));
SELECT * FROM rt0 CROSS JOIN vt0 ON CAST(((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) AS NUMERIC) WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))+(((rt0.c0) NOT BETWEEN (0.8204902773458694) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))+(((rt0.c0) NOT BETWEEN (0.8204902773458694) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CAST(((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) AS NUMERIC));
SELECT * FROM rt0 CROSS JOIN vt0 ON CAST(((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) AS NUMERIC) WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))+(((rt0.c0) NOT BETWEEN (0.8204902773458694) AND (rt0.c0)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END  WHEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((NULL))) THEN ((rt0.c0)>>(rt0.c0)) WHEN MIN(rt0.c0, vt0.c0) THEN rt0.c0 COLLATE NOCASE WHEN LIKE(rt0.c2, rt0.c0) THEN CAST(vt0.c0 AS NUMERIC) END WHERE (((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END  WHEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((NULL))) THEN ((rt0.c0)>>(rt0.c0)) WHEN MIN(rt0.c0, vt0.c0) THEN rt0.c0 COLLATE NOCASE WHEN LIKE(rt0.c2, rt0.c0) THEN CAST(vt0.c0 AS NUMERIC) END);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END  WHEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((NULL))) THEN ((rt0.c0)>>(rt0.c0)) WHEN MIN(rt0.c0, vt0.c0) THEN rt0.c0 COLLATE NOCASE WHEN LIKE(rt0.c2, rt0.c0) THEN CAST(vt0.c0 AS NUMERIC) END WHERE (((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END  WHEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((NULL))) THEN ((rt0.c0)>>(rt0.c0)) WHEN MIN(rt0.c0, vt0.c0) THEN rt0.c0 COLLATE NOCASE WHEN LIKE(rt0.c2, rt0.c0) THEN CAST(vt0.c0 AS NUMERIC) END);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END  WHEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((NULL))) THEN ((rt0.c0)>>(rt0.c0)) WHEN MIN(rt0.c0, vt0.c0) THEN rt0.c0 COLLATE NOCASE WHEN LIKE(rt0.c2, rt0.c0) THEN CAST(vt0.c0 AS NUMERIC) END WHERE (((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c1)<=(rt0.c2)) AS NUMERIC) LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)) THEN NULL END WHERE (((((rt0.c0)/(rt0.c0)))<<((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY ((vt1.c0) NOT NULL) COLLATE BINARY DESC, 0.18346147683907899  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)/(rt0.c0)))<<((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c1)<=(rt0.c2)) AS NUMERIC) LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)) THEN NULL END ORDER BY ((vt1.c0) NOT NULL) COLLATE BINARY DESC, 0.18346147683907899  NULLS FIRST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c1)<=(rt0.c2)) AS NUMERIC) LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)) THEN NULL END WHERE (((((rt0.c0)/(rt0.c0)))<<((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY ((vt1.c0) NOT NULL) COLLATE BINARY DESC, 0.18346147683907899  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)/(rt0.c0)))<<((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c1)<=(rt0.c2)) AS NUMERIC) LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)) THEN NULL END ORDER BY ((vt1.c0) NOT NULL) COLLATE BINARY DESC, 0.18346147683907899  NULLS FIRST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c1)<=(rt0.c2)) AS NUMERIC) LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)) THEN NULL END WHERE (((((rt0.c0)/(rt0.c0)))<<((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY ((vt1.c0) NOT NULL) COLLATE BINARY DESC, 0.18346147683907899  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) ISNULL)) NOT NULL)) ORDER BY CASE WHEN -887805283 THEN rt0.c2 COLLATE NOCASE ELSE (~ (rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN -887805283 THEN rt0.c2 COLLATE NOCASE ELSE (~ (rt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) ISNULL)) NOT NULL)) ORDER BY CASE WHEN -887805283 THEN rt0.c2 COLLATE NOCASE ELSE (~ (rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN -887805283 THEN rt0.c2 COLLATE NOCASE ELSE (~ (rt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) ISNULL)) NOT NULL)) ORDER BY CASE WHEN -887805283 THEN rt0.c2 COLLATE NOCASE ELSE (~ (rt0.c1)) END  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('PX') ORDER BY ((rt0.c0)+(vt0.c0)) COLLATE RTRIM DESC, (((CAST(NULL AS REAL)))<=((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('PX') IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((rt0.c0)+(vt0.c0)) COLLATE RTRIM DESC, (((CAST(NULL AS REAL)))<=((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('PX') ORDER BY ((rt0.c0)+(vt0.c0)) COLLATE RTRIM DESC, (((CAST(NULL AS REAL)))<=((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('PX') IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((rt0.c0)+(vt0.c0)) COLLATE RTRIM DESC, (((CAST(NULL AS REAL)))<=((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('PX') ORDER BY ((rt0.c0)+(vt0.c0)) COLLATE RTRIM DESC, (((CAST(NULL AS REAL)))<=((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c0)&(rt0.c0))))<=((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)&(rt0.c0))))<=((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c0)&(rt0.c0))))<=((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)&(rt0.c0))))<=((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c0)&(rt0.c0))))<=((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0))))));
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)=(rt0.c2))) NOT BETWEEN ((rt0.c0 IN (vt0.c0))) AND (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)=(rt0.c2))) NOT BETWEEN ((rt0.c0 IN (vt0.c0))) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)=(rt0.c2))) NOT BETWEEN ((rt0.c0 IN (vt0.c0))) AND (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)=(rt0.c2))) NOT BETWEEN ((rt0.c0 IN (vt0.c0))) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)=(rt0.c2))) NOT BETWEEN ((rt0.c0 IN (vt0.c0))) AND (rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1, vt0 WHERE (((NULLIF(vt1.c0, vt0.c0)) NOT NULL)) ORDER BY TRIM(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0);
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt1.c0, vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY TRIM(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0));
SELECT ALL * FROM vt1, vt0 WHERE (((NULLIF(vt1.c0, vt0.c0)) NOT NULL)) ORDER BY TRIM(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0);
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt1.c0, vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY TRIM(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0));
SELECT ALL * FROM vt1, vt0 WHERE (((NULLIF(vt1.c0, vt0.c0)) NOT NULL)) ORDER BY TRIM(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0);
SELECT * FROM vt1 INNER JOIN rt0 ON ((((((((((rt0.c2)|(NULL)))OR(((rt0.c0)&(rt0.c2)))))AND(((rt0.c1)-(rt0.c2)))))OR(vt1.c0)))OR(((rt0.c0) ISNULL))) CROSS JOIN vt0 ON (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))>=(((vt1.c0)<<(rt0.c1)))) WHERE (CAST(((((((((rt0.c1)AND(rt0.c1)))AND(x'')))OR(rt0.c1)))AND(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)AND(rt0.c1)))AND(x'')))OR(rt0.c1)))AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((((((((rt0.c2)|(NULL)))OR(((rt0.c0)&(rt0.c2)))))AND(((rt0.c1)-(rt0.c2)))))OR(vt1.c0)))OR(((rt0.c0) ISNULL))) CROSS JOIN vt0 ON (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))>=(((vt1.c0)<<(rt0.c1)))));
SELECT * FROM vt1 INNER JOIN rt0 ON ((((((((((rt0.c2)|(NULL)))OR(((rt0.c0)&(rt0.c2)))))AND(((rt0.c1)-(rt0.c2)))))OR(vt1.c0)))OR(((rt0.c0) ISNULL))) CROSS JOIN vt0 ON (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))>=(((vt1.c0)<<(rt0.c1)))) WHERE (CAST(((((((((rt0.c1)AND(rt0.c1)))AND(x'')))OR(rt0.c1)))AND(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)AND(rt0.c1)))AND(x'')))OR(rt0.c1)))AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((((((((rt0.c2)|(NULL)))OR(((rt0.c0)&(rt0.c2)))))AND(((rt0.c1)-(rt0.c2)))))OR(vt1.c0)))OR(((rt0.c0) ISNULL))) CROSS JOIN vt0 ON (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))>=(((vt1.c0)<<(rt0.c1)))));
SELECT * FROM vt1 INNER JOIN rt0 ON ((((((((((rt0.c2)|(NULL)))OR(((rt0.c0)&(rt0.c2)))))AND(((rt0.c1)-(rt0.c2)))))OR(vt1.c0)))OR(((rt0.c0) ISNULL))) CROSS JOIN vt0 ON (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))>=(((vt1.c0)<<(rt0.c1)))) WHERE (CAST(((((((((rt0.c1)AND(rt0.c1)))AND(x'')))OR(rt0.c1)))AND(rt0.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((x'' IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ())) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((x'' IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ())) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((x'' IN ())) IS TRUE));
SELECT * FROM vt0, vt1 WHERE ((x'' COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((x'' COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((x'' COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((x'' COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((x'' COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((((((vt0.c0)AND(vt1.c0)))OR(rt0.c1)))IS(((rt0.c2)+(vt0.c0))))) ORDER BY NULL DESC, vt0.c0, CASE WHEN ((rt0.c0)OR(vt1.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END ELSE ((rt0.c2)||(rt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt1.c0)))OR(rt0.c1)))IS(((rt0.c2)+(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY NULL DESC, vt0.c0, CASE WHEN ((rt0.c0)OR(vt1.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END ELSE ((rt0.c2)||(rt0.c1)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((((((vt0.c0)AND(vt1.c0)))OR(rt0.c1)))IS(((rt0.c2)+(vt0.c0))))) ORDER BY NULL DESC, vt0.c0, CASE WHEN ((rt0.c0)OR(vt1.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END ELSE ((rt0.c2)||(rt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt1.c0)))OR(rt0.c1)))IS(((rt0.c2)+(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY NULL DESC, vt0.c0, CASE WHEN ((rt0.c0)OR(vt1.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END ELSE ((rt0.c2)||(rt0.c1)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((((((vt0.c0)AND(vt1.c0)))OR(rt0.c1)))IS(((rt0.c2)+(vt0.c0))))) ORDER BY NULL DESC, vt0.c0, CASE WHEN ((rt0.c0)OR(vt1.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END ELSE ((rt0.c2)||(rt0.c1)) END DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((NULL) ISNULL)) ORDER BY ((((vt1.c0) NOT NULL)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '1931266426' WHEN vt1.c0 THEN vt1.c0 END) AND (CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, (- ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT NULL)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '1931266426' WHEN vt1.c0 THEN vt1.c0 END) AND (CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, (- ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((NULL) ISNULL)) ORDER BY ((((vt1.c0) NOT NULL)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '1931266426' WHEN vt1.c0 THEN vt1.c0 END) AND (CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, (- ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT NULL)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '1931266426' WHEN vt1.c0 THEN vt1.c0 END) AND (CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, (- ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((NULL) ISNULL)) ORDER BY ((((vt1.c0) NOT NULL)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '1931266426' WHEN vt1.c0 THEN vt1.c0 END) AND (CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, (- ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0, vt1 WHERE ((+ (json(rt0.c2)))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (json(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY rt0.c2  NULLS LAST);
SELECT * FROM rt0, vt0, vt1 WHERE ((+ (json(rt0.c2)))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (json(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY rt0.c2  NULLS LAST);
SELECT * FROM rt0, vt0, vt1 WHERE ((+ (json(rt0.c2)))) ORDER BY rt0.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE CASE WHEN rt0.c1 THEN 0.17889280065395163 WHEN -1.16383147E9 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 END  WHEN 0.765906577322782 THEN ((rt0.c1)OR(rt0.c1)) END) ORDER BY (('497654557')GLOB(((rt0.c1)|(NULL))));
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c1 THEN 0.17889280065395163 WHEN -1.16383147E9 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 END  WHEN 0.765906577322782 THEN ((rt0.c1)OR(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY (('497654557')GLOB(((rt0.c1)|(NULL)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE CASE WHEN rt0.c1 THEN 0.17889280065395163 WHEN -1.16383147E9 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 END  WHEN 0.765906577322782 THEN ((rt0.c1)OR(rt0.c1)) END) ORDER BY (('497654557')GLOB(((rt0.c1)|(NULL))));
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c1 THEN 0.17889280065395163 WHEN -1.16383147E9 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 END  WHEN 0.765906577322782 THEN ((rt0.c1)OR(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY (('497654557')GLOB(((rt0.c1)|(NULL)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE CASE WHEN rt0.c1 THEN 0.17889280065395163 WHEN -1.16383147E9 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 END  WHEN 0.765906577322782 THEN ((rt0.c1)OR(rt0.c1)) END) ORDER BY (('497654557')GLOB(((rt0.c1)|(NULL))));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(0.5951452149787119 AS BLOB))IS(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS LAST, (+ (json_extract(rt0.c0, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(0.5951452149787119 AS BLOB))IS(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS LAST, (+ (json_extract(rt0.c0, rt0.c1))) ASC);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(0.5951452149787119 AS BLOB))IS(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS LAST, (+ (json_extract(rt0.c0, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(0.5951452149787119 AS BLOB))IS(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS LAST, (+ (json_extract(rt0.c0, rt0.c1))) ASC);
SELECT * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))%(((rt0.c0)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))%(((rt0.c0)AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))%(((rt0.c0)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))%(((rt0.c0)AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))%(((rt0.c0)AND(rt0.c1)))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON rt0.c1 COLLATE RTRIM COLLATE BINARY COLLATE BINARY FULL OUTER JOIN rt0 ON NULL WHERE (x'') ORDER BY CASE WHEN COALESCE(rt0.c2, rt0.c0) THEN vt1.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON rt0.c1 COLLATE RTRIM COLLATE BINARY COLLATE BINARY FULL OUTER JOIN rt0 ON NULL ORDER BY CASE WHEN COALESCE(rt0.c2, rt0.c0) THEN vt1.c0 END DESC);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON rt0.c1 COLLATE RTRIM COLLATE BINARY COLLATE BINARY FULL OUTER JOIN rt0 ON NULL WHERE (x'') ORDER BY CASE WHEN COALESCE(rt0.c2, rt0.c0) THEN vt1.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON rt0.c1 COLLATE RTRIM COLLATE BINARY COLLATE BINARY FULL OUTER JOIN rt0 ON NULL ORDER BY CASE WHEN COALESCE(rt0.c2, rt0.c0) THEN vt1.c0 END DESC);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)!=(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)<>(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)!=(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)<>(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)!=(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END IN ())) ORDER BY '187351698' ASC;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY '187351698' ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END IN ())) ORDER BY '187351698' ASC;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY '187351698' ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END IN ())) ORDER BY '187351698' ASC;
SELECT * FROM rt0, vt1, vt0 WHERE (((((rt0.c0 IN ()), CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 END, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))==(((vt1.c0 IN ()), 0x2c436e8a, ((((-1.283818779E9)OR(rt0.c0)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ()), CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 END, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))==(((vt1.c0 IN ()), 0x2c436e8a, ((((-1.283818779E9)OR(rt0.c0)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (((((rt0.c0 IN ()), CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 END, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))==(((vt1.c0 IN ()), 0x2c436e8a, ((((-1.283818779E9)OR(rt0.c0)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ()), CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 END, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))==(((vt1.c0 IN ()), 0x2c436e8a, ((((-1.283818779E9)OR(rt0.c0)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (((((rt0.c0 IN ()), CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 END, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))==(((vt1.c0 IN ()), 0x2c436e8a, ((((-1.283818779E9)OR(rt0.c0)))OR(rt0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE)AND(((vt1.c0)%(vt1.c0)))))AND(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE NOCASE)AND(((vt1.c0)%(vt1.c0)))))AND(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE)AND(((vt1.c0)%(vt1.c0)))))AND(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE NOCASE)AND(((vt1.c0)%(vt1.c0)))))AND(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE)AND(((vt1.c0)%(vt1.c0)))))AND(((vt1.c0) NOT NULL))));
SELECT * FROM vt1 WHERE ((((vt1.c0)+(vt1.c0)) IN ())) ORDER BY NULLIF(vt1.c0 COLLATE BINARY, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)+(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY NULLIF(vt1.c0 COLLATE BINARY, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c0)+(vt1.c0)) IN ())) ORDER BY NULLIF(vt1.c0 COLLATE BINARY, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)+(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY NULLIF(vt1.c0 COLLATE BINARY, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c0)+(vt1.c0)) IN ())) ORDER BY NULLIF(vt1.c0 COLLATE BINARY, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT ALL * FROM rt0, vt1 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (SQLITE_VERSION());
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT * FROM vt0, vt1 WHERE (((0.22617473307311053) IS TRUE) COLLATE RTRIM) ORDER BY ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((0.22617473307311053) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN ()));
SELECT * FROM vt0, vt1 WHERE (((0.22617473307311053) IS TRUE) COLLATE RTRIM) ORDER BY ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((0.22617473307311053) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN ()));
SELECT * FROM vt0, vt1 WHERE (((0.22617473307311053) IS TRUE) COLLATE RTRIM) ORDER BY ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN ());
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)<((((rt0.c1, 0.8656530656763454, rt0.c2)) BETWEEN ((rt0.c0, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c1, rt0.c0))))) WHERE (CAST(NULL COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)<((((rt0.c1, 0.8656530656763454, rt0.c2)) BETWEEN ((rt0.c0, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c1, rt0.c0))))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)<((((rt0.c1, 0.8656530656763454, rt0.c2)) BETWEEN ((rt0.c0, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c1, rt0.c0))))) WHERE (CAST(NULL COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)<((((rt0.c1, 0.8656530656763454, rt0.c2)) BETWEEN ((rt0.c0, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c1, rt0.c0))))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)<((((rt0.c1, 0.8656530656763454, rt0.c2)) BETWEEN ((rt0.c0, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c1, rt0.c0))))) WHERE (CAST(NULL COLLATE RTRIM AS TEXT));
SELECT ALL * FROM rt0, vt1 WHERE (TYPEOF(((rt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c1) ISNULL))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (TYPEOF(((rt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c1) ISNULL))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (TYPEOF(((rt0.c1) ISNULL)));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((((((((rt0.c2) ISNULL))OR(x'')))OR(CAST(rt0.c2 AS INTEGER))))OR(((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)))))AND(((vt0.c0)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) ISNULL))OR(x'')))OR(CAST(rt0.c2 AS INTEGER))))OR(((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)))))AND(((vt0.c0)*(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((((((((rt0.c2) ISNULL))OR(x'')))OR(CAST(rt0.c2 AS INTEGER))))OR(((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)))))AND(((vt0.c0)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) ISNULL))OR(x'')))OR(CAST(rt0.c2 AS INTEGER))))OR(((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)))))AND(((vt0.c0)*(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((((((((rt0.c2) ISNULL))OR(x'')))OR(CAST(rt0.c2 AS INTEGER))))OR(((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)))))AND(((vt0.c0)*(rt0.c2)))));
SELECT * FROM vt0, rt0, vt1 WHERE (rt0.c2) ORDER BY CASE WHEN rt0.c2 THEN ((vt1.c0)OR(rt0.c0)) ELSE (((vt0.c0, rt0.c0, rt0.c2))<=((vt1.c0, vt1.c0, rt0.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY CASE WHEN rt0.c2 THEN ((vt1.c0)OR(rt0.c0)) ELSE (((vt0.c0, rt0.c0, rt0.c2))<=((vt1.c0, vt1.c0, rt0.c0))) END ASC  NULLS LAST);
SELECT * FROM vt0, rt0, vt1 WHERE (rt0.c2) ORDER BY CASE WHEN rt0.c2 THEN ((vt1.c0)OR(rt0.c0)) ELSE (((vt0.c0, rt0.c0, rt0.c2))<=((vt1.c0, vt1.c0, rt0.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY CASE WHEN rt0.c2 THEN ((vt1.c0)OR(rt0.c0)) ELSE (((vt0.c0, rt0.c0, rt0.c2))<=((vt1.c0, vt1.c0, rt0.c0))) END ASC  NULLS LAST);
SELECT * FROM vt0, rt0, vt1 WHERE (rt0.c2) ORDER BY CASE WHEN rt0.c2 THEN ((vt1.c0)OR(rt0.c0)) ELSE (((vt0.c0, rt0.c0, rt0.c2))<=((vt1.c0, vt1.c0, rt0.c0))) END ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) IS TRUE), vt0.c0 COLLATE RTRIM))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1570570299' END, vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM)))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) IS TRUE), vt0.c0 COLLATE RTRIM))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1570570299' END, vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC);
SELECT * FROM vt0 WHERE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) IS TRUE), vt0.c0 COLLATE RTRIM))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1570570299' END, vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM)))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) IS TRUE), vt0.c0 COLLATE RTRIM))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1570570299' END, vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC);
SELECT * FROM vt0 WHERE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) IS TRUE), vt0.c0 COLLATE RTRIM))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1570570299' END, vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM)))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON DATE(CASE '512223016'  WHEN '' THEN rt0.c2 END, ((x'')GLOB(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))) WHERE (rt0.c0) ORDER BY ((((rt0.c1)/(x'392e')))>>(((rt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON DATE(CASE '512223016'  WHEN '' THEN rt0.c2 END, ((x'')GLOB(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))) ORDER BY ((((rt0.c1)/(x'392e')))>>(((rt0.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON DATE(CASE '512223016'  WHEN '' THEN rt0.c2 END, ((x'')GLOB(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))) WHERE (rt0.c0) ORDER BY ((((rt0.c1)/(x'392e')))>>(((rt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON DATE(CASE '512223016'  WHEN '' THEN rt0.c2 END, ((x'')GLOB(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))) ORDER BY ((((rt0.c1)/(x'392e')))>>(((rt0.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON DATE(CASE '512223016'  WHEN '' THEN rt0.c2 END, ((x'')GLOB(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))) WHERE (rt0.c0) ORDER BY ((((rt0.c1)/(x'392e')))>>(((rt0.c0) NOT NULL))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND ('zofaa')))OR(CAST(vt0.c0 AS INTEGER))))OR(NULL))) ORDER BY vt0.c0 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND ('zofaa')))OR(CAST(vt0.c0 AS INTEGER))))OR(NULL))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND ('zofaa')))OR(CAST(vt0.c0 AS INTEGER))))OR(NULL))) ORDER BY vt0.c0 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND ('zofaa')))OR(CAST(vt0.c0 AS INTEGER))))OR(NULL))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND ('zofaa')))OR(CAST(vt0.c0 AS INTEGER))))OR(NULL))) ORDER BY vt0.c0 COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('-1471922627');
SELECT SUM(count) FROM (SELECT ALL (('-1471922627') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('-1471922627');
SELECT SUM(count) FROM (SELECT ALL (('-1471922627') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('-1471922627');
SELECT ALL * FROM vt1 WHERE (CASE (~ (vt1.c0))  WHEN NULL THEN CAST(vt1.c0 AS NUMERIC) END) ORDER BY (- ((((vt1.c0))<((vt1.c0))))) DESC  NULLS FIRST, ((vt1.c0) IS TRUE) DESC  NULLS FIRST, x'c01dce58'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt1.c0))  WHEN NULL THEN CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1 ORDER BY (- ((((vt1.c0))<((vt1.c0))))) DESC  NULLS FIRST, ((vt1.c0) IS TRUE) DESC  NULLS FIRST, x'c01dce58'  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE (~ (vt1.c0))  WHEN NULL THEN CAST(vt1.c0 AS NUMERIC) END) ORDER BY (- ((((vt1.c0))<((vt1.c0))))) DESC  NULLS FIRST, ((vt1.c0) IS TRUE) DESC  NULLS FIRST, x'c01dce58'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt1.c0))  WHEN NULL THEN CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1 ORDER BY (- ((((vt1.c0))<((vt1.c0))))) DESC  NULLS FIRST, ((vt1.c0) IS TRUE) DESC  NULLS FIRST, x'c01dce58'  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE (~ (vt1.c0))  WHEN NULL THEN CAST(vt1.c0 AS NUMERIC) END) ORDER BY (- ((((vt1.c0))<((vt1.c0))))) DESC  NULLS FIRST, ((vt1.c0) IS TRUE) DESC  NULLS FIRST, x'c01dce58'  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (((((((x'a52f'))>=((rt0.c0)))))<>(('2f<\mmo' COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((((((x'a52f'))>=((rt0.c0)))))!=(('2f<\mmo' COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((x'a52f'))>=((rt0.c0)))))<>(('2f<\mmo' COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((((((x'a52f'))>=((rt0.c0)))))!=(('2f<\mmo' COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((x'a52f'))>=((rt0.c0)))))<>(('2f<\mmo' COLLATE NOCASE))));
SELECT * FROM vt0 WHERE ((((+ (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0))) NOTNULL));
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((0X49b9483e) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((0x49b9483e) IS TRUE)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((0X49b9483e) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((0x49b9483e) IS TRUE)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((0X49b9483e) IS TRUE));
SELECT * FROM vt1, vt0, rt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0)=(rt0.c1)) END) ORDER BY ((((NULL)OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0)=(rt0.c1)) END) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((NULL)OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(rt0.c1))  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0)=(rt0.c1)) END) ORDER BY ((((NULL)OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0)=(rt0.c1)) END) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((NULL)OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(rt0.c1))  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0)=(rt0.c1)) END) ORDER BY ((((NULL)OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(rt0.c1))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_GET((NULL IN ())) LEFT OUTER JOIN vt1 ON CASE (~ (vt1.c0))  WHEN QUOTE(rt0.c0) THEN (+ (rt0.c2)) ELSE rt0.c2 END WHERE ((((rt0.c2)>>(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)>>(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_GET((NULL IN ())) LEFT OUTER JOIN vt1 ON CASE (~ (vt1.c0))  WHEN QUOTE(rt0.c0) THEN (+ (rt0.c2)) ELSE rt0.c2 END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_GET((NULL IN ())) LEFT OUTER JOIN vt1 ON CASE (~ (vt1.c0))  WHEN QUOTE(rt0.c0) THEN (+ (rt0.c2)) ELSE rt0.c2 END WHERE ((((rt0.c2)>>(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)>>(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_GET((NULL IN ())) LEFT OUTER JOIN vt1 ON CASE (~ (vt1.c0))  WHEN QUOTE(rt0.c0) THEN (+ (rt0.c2)) ELSE rt0.c2 END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_GET((NULL IN ())) LEFT OUTER JOIN vt1 ON CASE (~ (vt1.c0))  WHEN QUOTE(rt0.c0) THEN (+ (rt0.c2)) ELSE rt0.c2 END WHERE ((((rt0.c2)>>(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0)OR(x'')) WHEN (((vt1.c0))>=((vt1.c0))) THEN ((((NULL)AND(vt1.c0)))AND(vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN (((vt1.c0))>((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0)OR(x'')) WHEN (((vt1.c0))>=((vt1.c0))) THEN ((((NULL)AND(vt1.c0)))AND(vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN (((vt1.c0))>((vt1.c0))) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0)OR(x'')) WHEN (((vt1.c0))>=((vt1.c0))) THEN ((((NULL)AND(vt1.c0)))AND(vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN (((vt1.c0))>((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0)OR(x'')) WHEN (((vt1.c0))>=((vt1.c0))) THEN ((((NULL)AND(vt1.c0)))AND(vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN (((vt1.c0))>((vt1.c0))) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0)OR(x'')) WHEN (((vt1.c0))>=((vt1.c0))) THEN ((((NULL)AND(vt1.c0)))AND(vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN (((vt1.c0))>((vt1.c0))) END);
SELECT * FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)>=(vt0.c0)))!=(rt0.c2 COLLATE NOCASE)) WHERE (TRIM(-1.691659746E9)) ORDER BY ((CASE WHEN rt0.c2 THEN vt1.c0 END)<((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(-1.691659746E9)) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)>=(vt0.c0)))<>(rt0.c2 COLLATE NOCASE)) ORDER BY ((CASE WHEN rt0.c2 THEN vt1.c0 END)<((NOT (vt0.c0)))));
SELECT * FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)>=(vt0.c0)))!=(rt0.c2 COLLATE NOCASE)) WHERE (TRIM(-1.691659746E9)) ORDER BY ((CASE WHEN rt0.c2 THEN vt1.c0 END)<((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(-1.691659746E9)) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)>=(vt0.c0)))<>(rt0.c2 COLLATE NOCASE)) ORDER BY ((CASE WHEN rt0.c2 THEN vt1.c0 END)<((NOT (vt0.c0)))));
SELECT * FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)>=(vt0.c0)))!=(rt0.c2 COLLATE NOCASE)) WHERE (TRIM(-1.691659746E9)) ORDER BY ((CASE WHEN rt0.c2 THEN vt1.c0 END)<((NOT (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((((vt0.c0)OR(vt0.c0)))AND(' %H')) THEN '0.5282337971257017' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((((vt0.c0)OR(vt0.c0)))AND(' %H')) THEN '0.5282337971257017' END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((((vt0.c0)OR(vt0.c0)))AND(' %H')) THEN '0.5282337971257017' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((((vt0.c0)OR(vt0.c0)))AND(' %H')) THEN '0.5282337971257017' END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((((vt0.c0)OR(vt0.c0)))AND(' %H')) THEN '0.5282337971257017' END);
SELECT * FROM vt0, rt0 INNER JOIN vt1 ON x'' WHERE ((((rt0.c0)IS NOT(rt0.c0)) IN ())) ORDER BY ((((((vt0.c0)OR(rt0.c0)))OR(rt0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)IS NOT(rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0 INNER JOIN vt1 ON x'' ORDER BY ((((((vt0.c0)OR(rt0.c0)))OR(rt0.c1))) IS FALSE));
SELECT * FROM vt0, rt0 INNER JOIN vt1 ON x'' WHERE ((((rt0.c0)IS NOT(rt0.c0)) IN ())) ORDER BY ((((((vt0.c0)OR(rt0.c0)))OR(rt0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)IS NOT(rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0 INNER JOIN vt1 ON x'' ORDER BY ((((((vt0.c0)OR(rt0.c0)))OR(rt0.c1))) IS FALSE));
SELECT * FROM vt0, rt0 INNER JOIN vt1 ON x'' WHERE ((((rt0.c0)IS NOT(rt0.c0)) IN ())) ORDER BY ((((((vt0.c0)OR(rt0.c0)))OR(rt0.c1))) IS FALSE);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((rt0.c1 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((rt0.c1 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((rt0.c1 COLLATE RTRIM) NOTNULL));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (rt0.c0) ORDER BY CAST(NULL AS INTEGER) ASC, CASE WHEN ((vt1.c0) IS TRUE) THEN '42514138' ELSE CAST(rt0.c2 AS INTEGER) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY CAST(NULL AS INTEGER) ASC, CASE WHEN ((vt1.c0) IS TRUE) THEN '42514138' ELSE CAST(rt0.c2 AS INTEGER) END  NULLS LAST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (rt0.c0) ORDER BY CAST(NULL AS INTEGER) ASC, CASE WHEN ((vt1.c0) IS TRUE) THEN '42514138' ELSE CAST(rt0.c2 AS INTEGER) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY CAST(NULL AS INTEGER) ASC, CASE WHEN ((vt1.c0) IS TRUE) THEN '42514138' ELSE CAST(rt0.c2 AS INTEGER) END  NULLS LAST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (rt0.c0) ORDER BY CAST(NULL AS INTEGER) ASC, CASE WHEN ((vt1.c0) IS TRUE) THEN '42514138' ELSE CAST(rt0.c2 AS INTEGER) END  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN vt1 ON CAST(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 END AS INTEGER) WHERE (((rt0.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((rt0.c0)AND(vt1.c0)))OR(0.3443110209860838))))) ORDER BY CASE WHEN rt0.c0 THEN vt1.c0 ELSE -562992418 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((rt0.c0)AND(vt1.c0)))OR(0.3443110209860838))))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt1 ON CAST(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 END AS INTEGER) ORDER BY CASE WHEN rt0.c0 THEN vt1.c0 ELSE -562992418 END COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN vt1 ON CAST(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 END AS INTEGER) WHERE (((rt0.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((rt0.c0)AND(vt1.c0)))OR(0.3443110209860838))))) ORDER BY CASE WHEN rt0.c0 THEN vt1.c0 ELSE -562992418 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((rt0.c0)AND(vt1.c0)))OR(0.3443110209860838))))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt1 ON CAST(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 END AS INTEGER) ORDER BY CASE WHEN rt0.c0 THEN vt1.c0 ELSE -562992418 END COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN vt1 ON CAST(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 END AS INTEGER) WHERE (((rt0.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((rt0.c0)AND(vt1.c0)))OR(0.3443110209860838))))) ORDER BY CASE WHEN rt0.c0 THEN vt1.c0 ELSE -562992418 END COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((highlight(NULL, vt1.c0, vt1.c0, vt1.c0), NULL, ((vt1.c0)>=(vt1.c0)))) AND (((~ (vt1.c0)), vt1.c0, (vt1.c0 IN (-1252270646, vt1.c0)))))) ORDER BY ((((((((HEX(vt1.c0))AND(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(CAST(vt1.c0 AS REAL))))AND(((vt1.c0)<<(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((highlight(NULL, vt1.c0, vt1.c0, vt1.c0), NULL, ((vt1.c0)>=(vt1.c0)))) AND (((~ (vt1.c0)), vt1.c0, (vt1.c0 IN (-1252270646, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((HEX(vt1.c0))AND(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(CAST(vt1.c0 AS REAL))))AND(((vt1.c0)<<(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((highlight(NULL, vt1.c0, vt1.c0, vt1.c0), NULL, ((vt1.c0)>=(vt1.c0)))) AND (((~ (vt1.c0)), vt1.c0, (vt1.c0 IN (-1252270646, vt1.c0)))))) ORDER BY ((((((((HEX(vt1.c0))AND(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(CAST(vt1.c0 AS REAL))))AND(((vt1.c0)<<(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((highlight(NULL, vt1.c0, vt1.c0, vt1.c0), NULL, ((vt1.c0)>=(vt1.c0)))) AND (((~ (vt1.c0)), vt1.c0, (vt1.c0 IN (-1252270646, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((HEX(vt1.c0))AND(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(CAST(vt1.c0 AS REAL))))AND(((vt1.c0)<<(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (SQLITE_VERSION());
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((0.00873660251085373) BETWEEN (0.5291899065645794) AND (rt0.c1))) ORDER BY CASE (((rt0.c0))<=((rt0.c1)))  WHEN ((vt0.c0)IS NOT(rt0.c1)) THEN CASE WHEN 0.6601759626531802 THEN rt0.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ((((0.00873660251085373) BETWEEN (0.5291899065645794) AND (rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE (((rt0.c0))<=((rt0.c1)))  WHEN ((vt0.c0)IS NOT(rt0.c1)) THEN CASE WHEN 0.6601759626531802 THEN rt0.c0 END END ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((0.00873660251085373) BETWEEN (0.5291899065645794) AND (rt0.c1))) ORDER BY CASE (((rt0.c0))<=((rt0.c1)))  WHEN ((vt0.c0)IS NOT(rt0.c1)) THEN CASE WHEN 0.6601759626531802 THEN rt0.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ((((0.00873660251085373) BETWEEN (0.5291899065645794) AND (rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE (((rt0.c0))<=((rt0.c1)))  WHEN ((vt0.c0)IS NOT(rt0.c1)) THEN CASE WHEN 0.6601759626531802 THEN rt0.c0 END END ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((0.00873660251085373) BETWEEN (0.5291899065645794) AND (rt0.c1))) ORDER BY CASE (((rt0.c0))<=((rt0.c1)))  WHEN ((vt0.c0)IS NOT(rt0.c1)) THEN CASE WHEN 0.6601759626531802 THEN rt0.c0 END END ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c1 END)IS NOT((vt0.c0 IN ())))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c1 END)IS NOT((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY rt0.c2 DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c1 END)IS NOT((vt0.c0 IN ())))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c1 END)IS NOT((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY rt0.c2 DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c1 END)IS NOT((vt0.c0 IN ())))) ORDER BY rt0.c2 DESC;
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((rt0.c2))=((rt0.c1))))>>(rt0.c0))) ORDER BY (NULL IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))==((rt0.c1))))>>(rt0.c0))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (NULL IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((rt0.c2))=((rt0.c1))))>>(rt0.c0))) ORDER BY (NULL IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))==((rt0.c1))))>>(rt0.c0))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (NULL IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((rt0.c2))=((rt0.c1))))>>(rt0.c0))) ORDER BY (NULL IN ())  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((vt0.c0)<=(rt0.c2))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)<=(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((vt0.c0)<=(rt0.c2))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)<=(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((vt0.c0)<=(rt0.c2))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT * FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)>>(rt0.c0)))<=(((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))) WHERE (((((((vt0.c0) NOT NULL))OR(LOWER(DISTINCT rt0.c2))))OR(((vt0.c0) NOT NULL)))) ORDER BY (rt0.c0 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT NULL))OR(LOWER(DISTINCT rt0.c2))))OR(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED FULL OUTER JOIN vt0 ON ((((rt0.c2)>>(rt0.c0)))<=(((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))) ORDER BY (rt0.c0 IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)>>(rt0.c0)))<=(((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))) WHERE (((((((vt0.c0) NOT NULL))OR(LOWER(DISTINCT rt0.c2))))OR(((vt0.c0) NOT NULL)))) ORDER BY (rt0.c0 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT NULL))OR(LOWER(DISTINCT rt0.c2))))OR(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED FULL OUTER JOIN vt0 ON ((((rt0.c2)>>(rt0.c0)))<=(((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))) ORDER BY (rt0.c0 IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)>>(rt0.c0)))<=(((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))) WHERE (((((((vt0.c0) NOT NULL))OR(LOWER(DISTINCT rt0.c2))))OR(((vt0.c0) NOT NULL)))) ORDER BY (rt0.c0 IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((TRIM(DISTINCT vt0.c0, vt0.c0) IN (((vt0.c0) NOTNULL), vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT vt0.c0, vt0.c0) IN (((vt0.c0) NOTNULL), vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((TRIM(DISTINCT vt0.c0, vt0.c0) IN (((vt0.c0) NOTNULL), vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT vt0.c0, vt0.c0) IN (((vt0.c0) NOTNULL), vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((TRIM(DISTINCT vt0.c0, vt0.c0) IN (((vt0.c0) NOTNULL), vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) ORDER BY (~ (CAST(vt1.c0 AS BLOB))), CAST(vt1.c0 COLLATE BINARY AS NUMERIC)  NULLS LAST, CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (~ (CAST(vt1.c0 AS BLOB))), CAST(vt1.c0 COLLATE BINARY AS NUMERIC)  NULLS LAST, CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) ORDER BY (~ (CAST(vt1.c0 AS BLOB))), CAST(vt1.c0 COLLATE BINARY AS NUMERIC)  NULLS LAST, CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (~ (CAST(vt1.c0 AS BLOB))), CAST(vt1.c0 COLLATE BINARY AS NUMERIC)  NULLS LAST, CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) ORDER BY (~ (CAST(vt1.c0 AS BLOB))), CAST(vt1.c0 COLLATE BINARY AS NUMERIC)  NULLS LAST, CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1)<=(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<=(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1)<=(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<=(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1)<=(rt0.c1)) COLLATE BINARY);
SELECT * FROM rt0 WHERE (CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((rt0.c2) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((rt0.c2) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((rt0.c2) ISNULL) END);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((((vt0.c0)) BETWEEN ((vt1.c0)) AND (('-587264841'))))GLOB(vt0.c0)) WHERE (vt0.c0) ORDER BY (((((vt1.c0))==((vt1.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((((vt0.c0)) BETWEEN ((vt1.c0)) AND (('-587264841'))))GLOB(vt0.c0)) ORDER BY (((((vt1.c0))=((vt1.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((((vt0.c0)) BETWEEN ((vt1.c0)) AND (('-587264841'))))GLOB(vt0.c0)) WHERE (vt0.c0) ORDER BY (((((vt1.c0))==((vt1.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((((vt0.c0)) BETWEEN ((vt1.c0)) AND (('-587264841'))))GLOB(vt0.c0)) ORDER BY (((((vt1.c0))=((vt1.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((((vt0.c0)) BETWEEN ((vt1.c0)) AND (('-587264841'))))GLOB(vt0.c0)) WHERE (vt0.c0) ORDER BY (((((vt1.c0))==((vt1.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(NULLIF(DISTINCT rt0.c2, rt0.c0) AS TEXT) INNER JOIN vt1 ON (- (((vt1.c0)%(rt0.c2)))) WHERE ((((((rt0.c2))<=((rt0.c1))))IS NOT(((rt0.c0) BETWEEN (rt0.c2) AND ('1'))))) ORDER BY ((((vt1.c0)||(rt0.c0))) BETWEEN (rt0.c2) AND (((rt0.c2)/(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<=((rt0.c1))))IS NOT(((rt0.c0) BETWEEN (rt0.c2) AND ('1'))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(NULLIF(DISTINCT rt0.c2, rt0.c0) AS TEXT) INNER JOIN vt1 ON (- (((vt1.c0)%(rt0.c2)))) ORDER BY ((((vt1.c0)||(rt0.c0))) BETWEEN (rt0.c2) AND (((rt0.c2)/(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(NULLIF(DISTINCT rt0.c2, rt0.c0) AS TEXT) INNER JOIN vt1 ON (- (((vt1.c0)%(rt0.c2)))) WHERE ((((((rt0.c2))<=((rt0.c1))))IS NOT(((rt0.c0) BETWEEN (rt0.c2) AND ('1'))))) ORDER BY ((((vt1.c0)||(rt0.c0))) BETWEEN (rt0.c2) AND (((rt0.c2)/(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<=((rt0.c1))))IS NOT(((rt0.c0) BETWEEN (rt0.c2) AND ('1'))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(NULLIF(DISTINCT rt0.c2, rt0.c0) AS TEXT) INNER JOIN vt1 ON (- (((vt1.c0)%(rt0.c2)))) ORDER BY ((((vt1.c0)||(rt0.c0))) BETWEEN (rt0.c2) AND (((rt0.c2)/(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(NULLIF(DISTINCT rt0.c2, rt0.c0) AS TEXT) INNER JOIN vt1 ON (- (((vt1.c0)%(rt0.c2)))) WHERE ((((((rt0.c2))<=((rt0.c1))))IS NOT(((rt0.c0) BETWEEN (rt0.c2) AND ('1'))))) ORDER BY ((((vt1.c0)||(rt0.c0))) BETWEEN (rt0.c2) AND (((rt0.c2)/(rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((-1349974672 IN ())) ORDER BY (((LIKELY(DISTINCT vt1.c0)))!=((UNLIKELY(DISTINCT vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((-1349974672 IN ())) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED ORDER BY (((LIKELY(DISTINCT vt1.c0)))!=((UNLIKELY(DISTINCT vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((-1349974672 IN ())) ORDER BY (((LIKELY(DISTINCT vt1.c0)))!=((UNLIKELY(DISTINCT vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((-1349974672 IN ())) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED ORDER BY (((LIKELY(DISTINCT vt1.c0)))!=((UNLIKELY(DISTINCT vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((-1349974672 IN ())) ORDER BY (((LIKELY(DISTINCT vt1.c0)))!=((UNLIKELY(DISTINCT vt1.c0)))) DESC;
SELECT ALL * FROM rt0, vt0 INNER JOIN vt1 ON ((((((((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(json_object(vt0.c0, rt0.c1))))AND((vt0.c0 IN ()))))OR((- (x'')))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c2 END)) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON ((((((((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(json_object(vt0.c0, rt0.c1))))AND((vt0.c0 IN ()))))OR((- (x'')))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT ALL * FROM rt0, vt0 INNER JOIN vt1 ON ((((((((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(json_object(vt0.c0, rt0.c1))))AND((vt0.c0 IN ()))))OR((- (x'')))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c2 END)) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON ((((((((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(json_object(vt0.c0, rt0.c1))))AND((vt0.c0 IN ()))))OR((- (x'')))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT ALL * FROM rt0, vt0 INNER JOIN vt1 ON ((((((((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(json_object(vt0.c0, rt0.c1))))AND((vt0.c0 IN ()))))OR((- (x'')))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c2 END)) WHERE (rt0.c2);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 END))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((vt1.c0)GLOB(rt0.c2)))*(((((x'53e6')OR(rt0.c0)))OR(rt0.c0)))) WHERE ((((((rt0.c0, rt0.c2, vt1.c0)) BETWEEN ((rt0.c1, rt0.c1, vt1.c0)) AND ((1260778370, vt1.c0, rt0.c2))))<((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c2, vt1.c0)) BETWEEN ((rt0.c1, rt0.c1, vt1.c0)) AND ((1260778370, vt1.c0, rt0.c2))))<((+ (rt0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((vt1.c0)GLOB(rt0.c2)))*(((((x'53e6')OR(rt0.c0)))OR(rt0.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((vt1.c0)GLOB(rt0.c2)))*(((((x'53e6')OR(rt0.c0)))OR(rt0.c0)))) WHERE ((((((rt0.c0, rt0.c2, vt1.c0)) BETWEEN ((rt0.c1, rt0.c1, vt1.c0)) AND ((1260778370, vt1.c0, rt0.c2))))<((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c2, vt1.c0)) BETWEEN ((rt0.c1, rt0.c1, vt1.c0)) AND ((1260778370, vt1.c0, rt0.c2))))<((+ (rt0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((vt1.c0)GLOB(rt0.c2)))*(((((x'53e6')OR(rt0.c0)))OR(rt0.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((vt1.c0)GLOB(rt0.c2)))*(((((x'53e6')OR(rt0.c0)))OR(rt0.c0)))) WHERE ((((((rt0.c0, rt0.c2, vt1.c0)) BETWEEN ((rt0.c1, rt0.c1, vt1.c0)) AND ((1260778370, vt1.c0, rt0.c2))))<((+ (rt0.c1)))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE x'' END) BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c0 COLLATE RTRIM)) WHERE (json_type(0.9714086759735724 COLLATE NOCASE)) ORDER BY (((((((((((rt0.c0))>((rt0.c2))))OR((NOT (rt0.c2)))))OR(json_extract(rt0.c2, rt0.c0, rt0.c1, rt0.c2))))AND(rt0.c0 COLLATE NOCASE)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_type(0.9714086759735724 COLLATE NOCASE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE x'' END) BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c0 COLLATE RTRIM)) ORDER BY (((((((((((rt0.c0))>((rt0.c2))))OR((NOT (rt0.c2)))))OR(json_extract(rt0.c2, rt0.c0, rt0.c1, rt0.c2))))AND(rt0.c0 COLLATE NOCASE)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL))))) ASC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE x'' END) BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c0 COLLATE RTRIM)) WHERE (json_type(0.9714086759735724 COLLATE NOCASE)) ORDER BY (((((((((((rt0.c0))>((rt0.c2))))OR((NOT (rt0.c2)))))OR(json_extract(rt0.c2, rt0.c0, rt0.c1, rt0.c2))))AND(rt0.c0 COLLATE NOCASE)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_type(0.9714086759735724 COLLATE NOCASE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE x'' END) BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c0 COLLATE RTRIM)) ORDER BY (((((((((((rt0.c0))>((rt0.c2))))OR((NOT (rt0.c2)))))OR(json_extract(rt0.c2, rt0.c0, rt0.c1, rt0.c2))))AND(rt0.c0 COLLATE NOCASE)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL))))) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)) IN ())) ORDER BY (CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 END IN (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))), rt0.c2 ASC  NULLS FIRST, (((rt0.c1) NOTNULL) IN (((vt1.c0)*(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY (CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 END IN (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))), rt0.c2 ASC  NULLS FIRST, (((rt0.c1) NOTNULL) IN (((vt1.c0)*(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)) IN ())) ORDER BY (CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 END IN (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))), rt0.c2 ASC  NULLS FIRST, (((rt0.c1) NOTNULL) IN (((vt1.c0)*(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY (CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 END IN (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))), rt0.c2 ASC  NULLS FIRST, (((rt0.c1) NOTNULL) IN (((vt1.c0)*(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)) IN ())) ORDER BY (CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 END IN (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))), rt0.c2 ASC  NULLS FIRST, (((rt0.c1) NOTNULL) IN (((vt1.c0)*(rt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ('.éTC6ä² r1Q') ORDER BY CASE WHEN rt0.c0 THEN rt0.c1 END, (((rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((vt0.c0)%(vt0.c0)), NULL)) AND ((((rt0.c1)>>('633837011')), (rt0.c0 IN ()), ((rt0.c0)<=(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (('.éTC6ä² r1Q') IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN rt0.c0 THEN rt0.c1 END, (((rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((vt0.c0)%(vt0.c0)), NULL)) AND ((((rt0.c1)>>('633837011')), (rt0.c0 IN ()), ((rt0.c0)<=(vt0.c0))))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ('.éTC6ä² r1Q') ORDER BY CASE WHEN rt0.c0 THEN rt0.c1 END, (((rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((vt0.c0)%(vt0.c0)), NULL)) AND ((((rt0.c1)>>('633837011')), (rt0.c0 IN ()), ((rt0.c0)<=(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (('.éTC6ä² r1Q') IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN rt0.c0 THEN rt0.c1 END, (((rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((vt0.c0)%(vt0.c0)), NULL)) AND ((((rt0.c1)>>('633837011')), (rt0.c0 IN ()), ((rt0.c0)<=(vt0.c0))))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ('.éTC6ä² r1Q') ORDER BY CASE WHEN rt0.c0 THEN rt0.c1 END, (((rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((vt0.c0)%(vt0.c0)), NULL)) AND ((((rt0.c1)>>('633837011')), (rt0.c0 IN ()), ((rt0.c0)<=(vt0.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((0X761b25b2))<>((vt1.c0)))) ORDER BY HEX(((vt1.c0)-(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((0x761b25b2))<>((vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY HEX(((vt1.c0)-(vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((0X761b25b2))<>((vt1.c0)))) ORDER BY HEX(((vt1.c0)-(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((0x761b25b2))<>((vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY HEX(((vt1.c0)-(vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((0X761b25b2))<>((vt1.c0)))) ORDER BY HEX(((vt1.c0)-(vt1.c0)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))||((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))||((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))||((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))||((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))||((+ (vt1.c0)))));
SELECT * FROM vt1 CROSS JOIN rt0 ON ((((- (0.43884544711618434))))>=((((rt0.c2) IS FALSE)))) RIGHT OUTER JOIN vt0 ON (((rt0.c1 IN ()))>((+ (rt0.c0)))) WHERE ((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0 COLLATE RTRIM, '-1271313806', ((rt0.c1)<=(rt0.c1)))) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)), (~ (vt1.c0)), (rt0.c0 IN (rt0.c1)))))) ORDER BY -1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0 COLLATE RTRIM, '-1271313806', ((rt0.c1)<=(rt0.c1)))) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)), (~ (vt1.c0)), (rt0.c0 IN (rt0.c1)))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((- (0.43884544711618434))))>=((((rt0.c2) IS FALSE)))) RIGHT OUTER JOIN vt0 ON (((rt0.c1 IN ()))>((+ (rt0.c0)))) ORDER BY -1 DESC);
SELECT * FROM vt1 CROSS JOIN rt0 ON ((((- (0.43884544711618434))))>=((((rt0.c2) IS FALSE)))) RIGHT OUTER JOIN vt0 ON (((rt0.c1 IN ()))>((+ (rt0.c0)))) WHERE ((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0 COLLATE RTRIM, '-1271313806', ((rt0.c1)<=(rt0.c1)))) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)), (~ (vt1.c0)), (rt0.c0 IN (rt0.c1)))))) ORDER BY -1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0 COLLATE RTRIM, '-1271313806', ((rt0.c1)<=(rt0.c1)))) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)), (~ (vt1.c0)), (rt0.c0 IN (rt0.c1)))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((- (0.43884544711618434))))>=((((rt0.c2) IS FALSE)))) RIGHT OUTER JOIN vt0 ON (((rt0.c1 IN ()))>((+ (rt0.c0)))) ORDER BY -1 DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM vt0 WHERE (1.522381765E9) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)==(vt0.c0)))) ASC  NULLS FIRST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END AS BLOB);
SELECT SUM(count) FROM (SELECT ((1.522381765E9) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)==(vt0.c0)))) ASC  NULLS FIRST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (1.522381765E9) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)==(vt0.c0)))) ASC  NULLS FIRST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END AS BLOB);
SELECT SUM(count) FROM (SELECT ((1.522381765E9) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)==(vt0.c0)))) ASC  NULLS FIRST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (1.522381765E9) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)==(vt0.c0)))) ASC  NULLS FIRST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END AS BLOB);
SELECT * FROM vt1 WHERE ((((vt1.c0)*(vt1.c0)) IN ('-1241043443'))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)*(vt1.c0)) IN ('-1241043443'))) IS TRUE)  as count FROM vt1 ORDER BY '' DESC);
SELECT * FROM vt1 WHERE ((((vt1.c0)*(vt1.c0)) IN ('-1241043443'))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)*(vt1.c0)) IN ('-1241043443'))) IS TRUE)  as count FROM vt1 ORDER BY '' DESC);
SELECT * FROM vt1 WHERE ((((vt1.c0)*(vt1.c0)) IN ('-1241043443'))) ORDER BY '' DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (x''))) ORDER BY vt1.c0, CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((- (x''))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (x''))) ORDER BY vt1.c0, CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((- (x''))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (x''))) ORDER BY vt1.c0, CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (x'');
SELECT ALL * FROM vt0 WHERE (((((((((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))OR('5T')))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(CASE vt0.c0  WHEN vt0.c0 THEN '-1896250539' ELSE vt0.c0 END))) ORDER BY SQLITE_SOURCE_ID() ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))OR('5T')))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(CASE vt0.c0  WHEN vt0.c0 THEN '-1896250539' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_SOURCE_ID() ASC);
SELECT ALL * FROM vt0 WHERE (((((((((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))OR('5T')))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(CASE vt0.c0  WHEN vt0.c0 THEN '-1896250539' ELSE vt0.c0 END))) ORDER BY SQLITE_SOURCE_ID() ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))OR('5T')))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(CASE vt0.c0  WHEN vt0.c0 THEN '-1896250539' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_SOURCE_ID() ASC);
SELECT ALL * FROM vt0 WHERE (((((((((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))OR('5T')))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(CASE vt0.c0  WHEN vt0.c0 THEN '-1896250539' ELSE vt0.c0 END))) ORDER BY SQLITE_SOURCE_ID() ASC;
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE RTRIM);
SELECT * FROM rt0, vt1 FULL OUTER JOIN vt0 ON x'4c13' WHERE ((((vt0.c0 IN ()))>=((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>=((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON x'4c13');
SELECT * FROM rt0, vt1 FULL OUTER JOIN vt0 ON x'4c13' WHERE ((((vt0.c0 IN ()))>=((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>=((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON x'4c13');
SELECT * FROM rt0, vt1 FULL OUTER JOIN vt0 ON x'4c13' WHERE ((((vt0.c0 IN ()))>=((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))));
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c0)>=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c0)>=(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c0)>=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c0)>=(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c0)>=(rt0.c2))));
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c1) NOTNULL)))) ORDER BY CASE ((rt0.c1)LIKE(rt0.c0))  WHEN (rt0.c0 IN ()) THEN (((rt0.c1))>=((rt0.c0))) ELSE (((((((('')AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c1)LIKE(rt0.c0))  WHEN (rt0.c0 IN ()) THEN (((rt0.c1))>=((rt0.c0))) ELSE (((((((('')AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)) END);
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c1) NOTNULL)))) ORDER BY CASE ((rt0.c1)LIKE(rt0.c0))  WHEN (rt0.c0 IN ()) THEN (((rt0.c1))>=((rt0.c0))) ELSE (((((((('')AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c1)LIKE(rt0.c0))  WHEN (rt0.c0 IN ()) THEN (((rt0.c1))>=((rt0.c0))) ELSE (((((((('')AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)) END);
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c1) NOTNULL)))) ORDER BY CASE ((rt0.c1)LIKE(rt0.c0))  WHEN (rt0.c0 IN ()) THEN (((rt0.c1))>=((rt0.c0))) ELSE (((((((('')AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)) END;
SELECT * FROM vt0 WHERE ((((- ('F'))) NOT NULL)) ORDER BY -1.207218201E9;
SELECT SUM(count) FROM (SELECT (((((- ('F'))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY -1.207218201E9);
SELECT * FROM vt0 WHERE ((((- ('F'))) NOT NULL)) ORDER BY -1.207218201E9;
SELECT SUM(count) FROM (SELECT (((((- ('F'))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY -1.207218201E9);
SELECT * FROM vt0 WHERE ((((- ('F'))) NOT NULL)) ORDER BY -1.207218201E9;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)>(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)>(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)>(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY ((((vt0.c0)<<(vt0.c0)))>((((vt0.c0))>=((vt0.c0)))))  NULLS FIRST, 1.341990024E9 ASC  NULLS FIRST, ((((((x'') BETWEEN (vt0.c0) AND ('IU''nSfLA')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<<(vt0.c0)))>((((vt0.c0))>=((vt0.c0)))))  NULLS FIRST, 1.341990024E9 ASC  NULLS FIRST, ((((((x'') BETWEEN (vt0.c0) AND ('IU''nSfLA')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY ((((vt0.c0)<<(vt0.c0)))>((((vt0.c0))>=((vt0.c0)))))  NULLS FIRST, 1.341990024E9 ASC  NULLS FIRST, ((((((x'') BETWEEN (vt0.c0) AND ('IU''nSfLA')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<<(vt0.c0)))>((((vt0.c0))>=((vt0.c0)))))  NULLS FIRST, 1.341990024E9 ASC  NULLS FIRST, ((((((x'') BETWEEN (vt0.c0) AND ('IU''nSfLA')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY ((((vt0.c0)<<(vt0.c0)))>((((vt0.c0))>=((vt0.c0)))))  NULLS FIRST, 1.341990024E9 ASC  NULLS FIRST, ((((((x'') BETWEEN (vt0.c0) AND ('IU''nSfLA')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST(((rt0.c0)+(rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)+(rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST(((rt0.c0)+(rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)+(rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST(((rt0.c0)+(rt0.c2)) AS REAL));
SELECT * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY CASE WHEN rt0.c1 THEN (NOT (vt0.c0)) WHEN (((rt0.c2))!=((vt0.c0))) THEN CASE 'XZë¬£'  WHEN rt0.c0 THEN rt0.c1 END WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c2) IS TRUE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN rt0.c1 THEN (NOT (vt0.c0)) WHEN (((rt0.c2))!=((vt0.c0))) THEN CASE 'XZë¬£'  WHEN rt0.c0 THEN rt0.c1 END WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c2) IS TRUE) END DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY CASE WHEN rt0.c1 THEN (NOT (vt0.c0)) WHEN (((rt0.c2))!=((vt0.c0))) THEN CASE 'XZë¬£'  WHEN rt0.c0 THEN rt0.c1 END WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c2) IS TRUE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN rt0.c1 THEN (NOT (vt0.c0)) WHEN (((rt0.c2))!=((vt0.c0))) THEN CASE 'XZë¬£'  WHEN rt0.c0 THEN rt0.c1 END WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c2) IS TRUE) END DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY CASE WHEN rt0.c1 THEN (NOT (vt0.c0)) WHEN (((rt0.c2))!=((vt0.c0))) THEN CASE 'XZë¬£'  WHEN rt0.c0 THEN rt0.c1 END WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c2) IS TRUE) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)||(rt0.c2)))<>(((vt1.c0) IS FALSE))) WHERE (CAST(vt1.c0 AS BLOB) COLLATE NOCASE) ORDER BY (- (((0xffffffffafb24233)AND(rt0.c0))))  NULLS LAST, ((x'') BETWEEN (((rt0.c0)>=(x''))) AND (((rt0.c0)>>(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)||(rt0.c2)))!=(((vt1.c0) IS FALSE))) ORDER BY (- (((0xffffffffafb24233)AND(rt0.c0))))  NULLS LAST, ((x'') BETWEEN (((rt0.c0)>=(x''))) AND (((rt0.c0)>>(rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)||(rt0.c2)))<>(((vt1.c0) IS FALSE))) WHERE (CAST(vt1.c0 AS BLOB) COLLATE NOCASE) ORDER BY (- (((0xffffffffafb24233)AND(rt0.c0))))  NULLS LAST, ((x'') BETWEEN (((rt0.c0)>=(x''))) AND (((rt0.c0)>>(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)||(rt0.c2)))!=(((vt1.c0) IS FALSE))) ORDER BY (- (((0xffffffffafb24233)AND(rt0.c0))))  NULLS LAST, ((x'') BETWEEN (((rt0.c0)>=(x''))) AND (((rt0.c0)>>(rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)||(rt0.c2)))<>(((vt1.c0) IS FALSE))) WHERE (CAST(vt1.c0 AS BLOB) COLLATE NOCASE) ORDER BY (- (((0xffffffffafb24233)AND(rt0.c0))))  NULLS LAST, ((x'') BETWEEN (((rt0.c0)>=(x''))) AND (((rt0.c0)>>(rt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '' END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '' END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '' END);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(1070264422 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(1070264422 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(1070264422 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(1070264422 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(1070264422 AS NUMERIC) AS TEXT));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0;
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON CAST(TRIM(DISTINCT rt0.c1, vt0.c0) AS REAL) LEFT OUTER JOIN rt0 ON ((((rt0.c1) IS TRUE)) NOTNULL) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(TRIM(DISTINCT rt0.c1, vt0.c0) AS REAL) LEFT OUTER JOIN rt0 ON ((((rt0.c1) IS TRUE)) NOTNULL));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON CAST(TRIM(DISTINCT rt0.c1, vt0.c0) AS REAL) LEFT OUTER JOIN rt0 ON ((((rt0.c1) IS TRUE)) NOTNULL) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(TRIM(DISTINCT rt0.c1, vt0.c0) AS REAL) LEFT OUTER JOIN rt0 ON ((((rt0.c1) IS TRUE)) NOTNULL));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS TEXT))<<(((vt1.c0)>>(vt1.c0)))) WHERE (json_type(CAST(rt0.c0 AS NUMERIC))) ORDER BY (((rt0.c1 IN ()))&(LIKELY(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((json_type(CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS TEXT))<<(((vt1.c0)>>(vt1.c0)))) ORDER BY (((rt0.c1 IN ()))&(LIKELY(vt1.c0))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS TEXT))<<(((vt1.c0)>>(vt1.c0)))) WHERE (json_type(CAST(rt0.c0 AS NUMERIC))) ORDER BY (((rt0.c1 IN ()))&(LIKELY(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((json_type(CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS TEXT))<<(((vt1.c0)>>(vt1.c0)))) ORDER BY (((rt0.c1 IN ()))&(LIKELY(vt1.c0))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS TEXT))<<(((vt1.c0)>>(vt1.c0)))) WHERE (json_type(CAST(rt0.c0 AS NUMERIC))) ORDER BY (((rt0.c1 IN ()))&(LIKELY(vt1.c0)));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((rt0.c2 COLLATE NOCASE IN (SQLITE_COMPILEOPTION_GET(rt0.c2)))) ORDER BY x'7079';
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN (SQLITE_COMPILEOPTION_GET(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY x'7079');
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((rt0.c2 COLLATE NOCASE IN (SQLITE_COMPILEOPTION_GET(rt0.c2)))) ORDER BY x'7079';
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN (SQLITE_COMPILEOPTION_GET(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY x'7079');
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((rt0.c2 COLLATE NOCASE IN (SQLITE_COMPILEOPTION_GET(rt0.c2)))) ORDER BY x'7079';
SELECT * FROM rt0, vt1 NATURAL JOIN vt0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((vt0.c0) NOT BETWEEN ('-1283818779') AND (rt0.c2)) THEN json_extract(rt0.c2, NULL) ELSE ((rt0.c1)!=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE BINARY  WHEN ((vt0.c0) NOT BETWEEN ('-1283818779') AND (rt0.c2)) THEN json_extract(rt0.c2, NULL) ELSE ((rt0.c1)!=(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN vt0);
SELECT * FROM rt0, vt1 NATURAL JOIN vt0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((vt0.c0) NOT BETWEEN ('-1283818779') AND (rt0.c2)) THEN json_extract(rt0.c2, NULL) ELSE ((rt0.c1)!=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE BINARY  WHEN ((vt0.c0) NOT BETWEEN ('-1283818779') AND (rt0.c2)) THEN json_extract(rt0.c2, NULL) ELSE ((rt0.c1)!=(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN vt0);
SELECT * FROM rt0, vt1 NATURAL JOIN vt0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((vt0.c0) NOT BETWEEN ('-1283818779') AND (rt0.c2)) THEN json_extract(rt0.c2, NULL) ELSE ((rt0.c1)!=(vt0.c0)) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (TYPEOF(COALESCE(rt0.c0, rt0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2))) ORDER BY (+ ((((rt0.c1))=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(COALESCE(rt0.c0, rt0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ ((((rt0.c1))==((vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (TYPEOF(COALESCE(rt0.c0, rt0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2))) ORDER BY (+ ((((rt0.c1))=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(COALESCE(rt0.c0, rt0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ ((((rt0.c1))==((vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (TYPEOF(COALESCE(rt0.c0, rt0.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2))) ORDER BY (+ ((((rt0.c1))=((vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((- (vt0.c0)))AND(((vt0.c0)<=(vt1.c0)))))AND(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((- (vt0.c0)))AND(((vt0.c0)<=(vt1.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((- (vt0.c0)))AND(((vt0.c0)<=(vt1.c0)))))AND(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((- (vt0.c0)))AND(((vt0.c0)<=(vt1.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((- (vt0.c0)))AND(((vt0.c0)<=(vt1.c0)))))AND(CAST(vt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2) NOT NULL)) ORDER BY ((((vt0.c0) IS FALSE))+(((vt0.c0)&(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0) IS FALSE))+(((vt0.c0)&(rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2) NOT NULL)) ORDER BY ((((vt0.c0) IS FALSE))+(((vt0.c0)&(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0) IS FALSE))+(((vt0.c0)&(rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2) NOT NULL)) ORDER BY ((((vt0.c0) IS FALSE))+(((vt0.c0)&(rt0.c1)))) DESC;
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (NOT (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((CAST(x'' AS NUMERIC)) BETWEEN (((vt0.c0)==(vt0.c0))) AND ((NOT (vt0.c0))))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS NUMERIC)) BETWEEN (((vt0.c0)==(vt0.c0))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (NOT (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (NOT (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((CAST(x'' AS NUMERIC)) BETWEEN (((vt0.c0)==(vt0.c0))) AND ((NOT (vt0.c0))))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS NUMERIC)) BETWEEN (((vt0.c0)==(vt0.c0))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (NOT (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (NOT (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((CAST(x'' AS NUMERIC)) BETWEEN (((vt0.c0)==(vt0.c0))) AND ((NOT (vt0.c0))))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)>(vt0.c0)))|((((vt1.c0))<((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>(vt0.c0)))|((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)>(vt0.c0)))|((((vt1.c0))<((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>(vt0.c0)))|((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)>(vt0.c0)))|((((vt1.c0))<((vt1.c0))))));
SELECT COUNT(*) FROM rt0 WHERE ((~ ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((~ (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)GLOB(x'')))<(((vt1.c0)>(vt1.c0))))) ORDER BY (LIKELY(DISTINCT vt0.c0) IN ((vt1.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)GLOB(x'')))<(((vt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (LIKELY(DISTINCT vt0.c0) IN ((vt1.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)GLOB(x'')))<(((vt1.c0)>(vt1.c0))))) ORDER BY (LIKELY(DISTINCT vt0.c0) IN ((vt1.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)GLOB(x'')))<(((vt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (LIKELY(DISTINCT vt0.c0) IN ((vt1.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)GLOB(x'')))<(((vt1.c0)>(vt1.c0))))) ORDER BY (LIKELY(DISTINCT vt0.c0) IN ((vt1.c0 IN ()))) DESC  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 FULL OUTER JOIN vt1 ON (((x'')) BETWEEN ((LIKELIHOOD(DISTINCT rt0.c2, 0.9029181594577702))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE (vt1.c0) ORDER BY ((((((((((NULL) BETWEEN (rt0.c2) AND (vt0.c0)))AND(((((((((vt0.c0)OR('-503411434')))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))))AND(((rt0.c2)-(vt1.c0)))))OR(((vt1.c0)<>(vt1.c0)))))OR(((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 FULL OUTER JOIN vt1 ON (((x'')) BETWEEN ((LIKELIHOOD(DISTINCT rt0.c2, 0.9029181594577702))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((((((((NULL) BETWEEN (rt0.c2) AND (vt0.c0)))AND(((((((((vt0.c0)OR('-503411434')))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))))AND(((rt0.c2)-(vt1.c0)))))OR(((vt1.c0)<>(vt1.c0)))))OR(((vt1.c0) ISNULL))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 FULL OUTER JOIN vt1 ON (((x'')) BETWEEN ((LIKELIHOOD(DISTINCT rt0.c2, 0.9029181594577702))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE (vt1.c0) ORDER BY ((((((((((NULL) BETWEEN (rt0.c2) AND (vt0.c0)))AND(((((((((vt0.c0)OR('-503411434')))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))))AND(((rt0.c2)-(vt1.c0)))))OR(((vt1.c0)<>(vt1.c0)))))OR(((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 FULL OUTER JOIN vt1 ON (((x'')) BETWEEN ((LIKELIHOOD(DISTINCT rt0.c2, 0.9029181594577702))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((((((((NULL) BETWEEN (rt0.c2) AND (vt0.c0)))AND(((((((((vt0.c0)OR('-503411434')))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))))AND(((rt0.c2)-(vt1.c0)))))OR(((vt1.c0)<>(vt1.c0)))))OR(((vt1.c0) ISNULL))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 FULL OUTER JOIN vt1 ON (((x'')) BETWEEN ((LIKELIHOOD(DISTINCT rt0.c2, 0.9029181594577702))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE (vt1.c0) ORDER BY ((((((((((NULL) BETWEEN (rt0.c2) AND (vt0.c0)))AND(((((((((vt0.c0)OR('-503411434')))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))))AND(((rt0.c2)-(vt1.c0)))))OR(((vt1.c0)<>(vt1.c0)))))OR(((vt1.c0) ISNULL)));
SELECT * FROM vt0, rt0 WHERE ((NOT (rt0.c2))) ORDER BY 79514784  NULLS LAST, (((((rt0.c1, '*Mw', rt0.c2))=(('!K', rt0.c0, x''))))>=(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 79514784  NULLS LAST, (((((rt0.c1, '*Mw', rt0.c2))==(('!K', rt0.c0, x''))))>=(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT * FROM vt0, rt0 WHERE ((NOT (rt0.c2))) ORDER BY 79514784  NULLS LAST, (((((rt0.c1, '*Mw', rt0.c2))=(('!K', rt0.c0, x''))))>=(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 79514784  NULLS LAST, (((((rt0.c1, '*Mw', rt0.c2))==(('!K', rt0.c0, x''))))>=(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT * FROM vt0 WHERE (((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS REAL)))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS REAL)))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS REAL)))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))/(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)GLOB(vt0.c0)))/(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))/(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)GLOB(vt0.c0)))/(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))/(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY CASE SQLITE_COMPILEOPTION_USED(vt0.c0)  WHEN ((((vt0.c0)OR(-1494226570)))OR(vt0.c0)) THEN ((vt0.c0)>>(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)||(vt0.c0)) ELSE ((vt0.c0)%(vt0.c0)) END DESC, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((NOT (vt0.c0)))))OR(((vt0.c0)+(vt0.c0)))) DESC, '1530401191' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS INTEGER))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY CASE SQLITE_COMPILEOPTION_USED(vt0.c0)  WHEN ((((vt0.c0)OR(-1494226570)))OR(vt0.c0)) THEN ((vt0.c0)>>(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)||(vt0.c0)) ELSE ((vt0.c0)%(vt0.c0)) END DESC, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((NOT (vt0.c0)))))OR(((vt0.c0)+(vt0.c0)))) DESC, '1530401191' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY CASE SQLITE_COMPILEOPTION_USED(vt0.c0)  WHEN ((((vt0.c0)OR(-1494226570)))OR(vt0.c0)) THEN ((vt0.c0)>>(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)||(vt0.c0)) ELSE ((vt0.c0)%(vt0.c0)) END DESC, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((NOT (vt0.c0)))))OR(((vt0.c0)+(vt0.c0)))) DESC, '1530401191' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS INTEGER))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY CASE SQLITE_COMPILEOPTION_USED(vt0.c0)  WHEN ((((vt0.c0)OR(-1494226570)))OR(vt0.c0)) THEN ((vt0.c0)>>(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)||(vt0.c0)) ELSE ((vt0.c0)%(vt0.c0)) END DESC, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((NOT (vt0.c0)))))OR(((vt0.c0)+(vt0.c0)))) DESC, '1530401191' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY CASE SQLITE_COMPILEOPTION_USED(vt0.c0)  WHEN ((((vt0.c0)OR(-1494226570)))OR(vt0.c0)) THEN ((vt0.c0)>>(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)||(vt0.c0)) ELSE ((vt0.c0)%(vt0.c0)) END DESC, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((NOT (vt0.c0)))))OR(((vt0.c0)+(vt0.c0)))) DESC, '1530401191' ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((NOT ((rt0.c2 IN ())))) ORDER BY ((((((vt0.c0) ISNULL))OR(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END)))OR(NULL));
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((((((vt0.c0) ISNULL))OR(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END)))OR(NULL)));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((NOT ((rt0.c2 IN ())))) ORDER BY ((((((vt0.c0) ISNULL))OR(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END)))OR(NULL));
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((((((vt0.c0) ISNULL))OR(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END)))OR(NULL)));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((NOT ((rt0.c2 IN ())))) ORDER BY ((((((vt0.c0) ISNULL))OR(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END)))OR(NULL));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (TYPEOF(vt1.c0));
SELECT SUM(count) FROM (SELECT ((TYPEOF(vt1.c0)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (TYPEOF(vt1.c0));
SELECT SUM(count) FROM (SELECT ((TYPEOF(vt1.c0)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (TYPEOF(vt1.c0));
SELECT * FROM rt0, vt1 WHERE (CAST(CASE rt0.c2  WHEN rt0.c0 THEN '<' WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN 0xffffffffb628cacd ELSE vt1.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c0 THEN '<' WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN 0Xffffffffb628cacd ELSE vt1.c0 END AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST(CASE rt0.c2  WHEN rt0.c0 THEN '<' WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN 0xffffffffb628cacd ELSE vt1.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c0 THEN '<' WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN 0Xffffffffb628cacd ELSE vt1.c0 END AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST(CASE rt0.c2  WHEN rt0.c0 THEN '<' WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN 0xffffffffb628cacd ELSE vt1.c0 END AS REAL));
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ((vt1.c0 IN ()))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)==(vt1.c0))) BETWEEN ((('1953644662')>(vt1.c0))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)=(vt1.c0))) BETWEEN ((('1953644662')>(vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)==(vt1.c0))) BETWEEN ((('1953644662')>(vt1.c0))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)=(vt1.c0))) BETWEEN ((('1953644662')>(vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)==(vt1.c0))) BETWEEN ((('1953644662')>(vt1.c0))) AND (vt1.c0)));
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (0Xffffffffd6adefd4);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffd6adefd4) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (0Xffffffffd6adefd4);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffd6adefd4) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (0Xffffffffd6adefd4);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (+ ((rt0.c1 IN ()))) WHERE (((UNLIKELY(rt0.c1)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((vt0.c0)||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt0.c1)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((vt0.c0)||(rt0.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (+ ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (+ ((rt0.c1 IN ()))) WHERE (((UNLIKELY(rt0.c1)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((vt0.c0)||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt0.c1)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((vt0.c0)||(rt0.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (+ ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (+ ((rt0.c1 IN ()))) WHERE (((UNLIKELY(rt0.c1)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((vt0.c0)||(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0))) ORDER BY rt0.c0;
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (NULL))) ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0))==((vt0.c0))) END DESC  NULLS LAST, ((')z#g9*!' COLLATE BINARY) BETWEEN (IFNULL(vt0.c0, vt0.c0)) AND ((vt0.c0 IN ('jo|o1*'))));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0))==((vt0.c0))) END DESC  NULLS LAST, ((')z#g9*!' COLLATE BINARY) BETWEEN (IFNULL(vt0.c0, vt0.c0)) AND ((vt0.c0 IN ('jo|o1*')))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (NULL))) ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0))==((vt0.c0))) END DESC  NULLS LAST, ((')z#g9*!' COLLATE BINARY) BETWEEN (IFNULL(vt0.c0, vt0.c0)) AND ((vt0.c0 IN ('jo|o1*'))));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0))==((vt0.c0))) END DESC  NULLS LAST, ((')z#g9*!' COLLATE BINARY) BETWEEN (IFNULL(vt0.c0, vt0.c0)) AND ((vt0.c0 IN ('jo|o1*')))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (NULL))) ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0))==((vt0.c0))) END DESC  NULLS LAST, ((')z#g9*!' COLLATE BINARY) BETWEEN (IFNULL(vt0.c0, vt0.c0)) AND ((vt0.c0 IN ('jo|o1*'))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE (((((((((rt0.c2)AND(((rt0.c2)<<(rt0.c0)))))AND(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((- (rt0.c2))))) ORDER BY CASE WHEN (- (rt0.c1)) THEN (rt0.c0 IN ()) END DESC, ((TYPEOF(vt0.c0)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)AND(((rt0.c2)<<(rt0.c0)))))AND(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((- (rt0.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 ORDER BY CASE WHEN (- (rt0.c1)) THEN (rt0.c0 IN ()) END DESC, ((TYPEOF(vt0.c0)) IS FALSE));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE (((((((((rt0.c2)AND(((rt0.c2)<<(rt0.c0)))))AND(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((- (rt0.c2))))) ORDER BY CASE WHEN (- (rt0.c1)) THEN (rt0.c0 IN ()) END DESC, ((TYPEOF(vt0.c0)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)AND(((rt0.c2)<<(rt0.c0)))))AND(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((- (rt0.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 ORDER BY CASE WHEN (- (rt0.c1)) THEN (rt0.c0 IN ()) END DESC, ((TYPEOF(vt0.c0)) IS FALSE));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE (((((((((rt0.c2)AND(((rt0.c2)<<(rt0.c0)))))AND(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((- (rt0.c2))))) ORDER BY CASE WHEN (- (rt0.c1)) THEN (rt0.c0 IN ()) END DESC, ((TYPEOF(vt0.c0)) IS FALSE);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((((((((CAST(vt0.c0 AS BLOB))AND(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))))AND((((rt0.c1))<>((rt0.c0))))))AND((((rt0.c2))<>((rt0.c0))))))OR(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS BLOB))AND(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))))AND((((rt0.c1))<>((rt0.c0))))))AND((((rt0.c2))<>((rt0.c0))))))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((((((((CAST(vt0.c0 AS BLOB))AND(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))))AND((((rt0.c1))<>((rt0.c0))))))AND((((rt0.c2))<>((rt0.c0))))))OR(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS BLOB))AND(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))))AND((((rt0.c1))<>((rt0.c0))))))AND((((rt0.c2))<>((rt0.c0))))))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((((((((CAST(vt0.c0 AS BLOB))AND(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))))AND((((rt0.c1))<>((rt0.c0))))))AND((((rt0.c2))<>((rt0.c0))))))OR(CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((((NULL)&(vt1.c0)))AND(rt0.c0)))OR(rt0.c2 COLLATE BINARY))) ORDER BY (((rt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((LIKELIHOOD(DISTINCT rt0.c2, 0.4466829817520308))))  NULLS LAST, ((NULL)AND(((vt1.c0)/(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((NULL)&(vt1.c0)))AND(rt0.c0)))OR(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((rt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((LIKELIHOOD(DISTINCT rt0.c2, 0.4466829817520308))))  NULLS LAST, ((NULL)AND(((vt1.c0)/(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((((NULL)&(vt1.c0)))AND(rt0.c0)))OR(rt0.c2 COLLATE BINARY))) ORDER BY (((rt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((LIKELIHOOD(DISTINCT rt0.c2, 0.4466829817520308))))  NULLS LAST, ((NULL)AND(((vt1.c0)/(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((NULL)&(vt1.c0)))AND(rt0.c0)))OR(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((rt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((LIKELIHOOD(DISTINCT rt0.c2, 0.4466829817520308))))  NULLS LAST, ((NULL)AND(((vt1.c0)/(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((((NULL)&(vt1.c0)))AND(rt0.c0)))OR(rt0.c2 COLLATE BINARY))) ORDER BY (((rt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((LIKELIHOOD(DISTINCT rt0.c2, 0.4466829817520308))))  NULLS LAST, ((NULL)AND(((vt1.c0)/(rt0.c2))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (IFNULL(DISTINCT vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((0.17765774050760952) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((0.17765774050760952) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (IFNULL(DISTINCT vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((0.17765774050760952) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((0.17765774050760952) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (IFNULL(DISTINCT vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((0.17765774050760952) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT * FROM rt0 WHERE (CAST((rt0.c0 IN (x'')) AS BLOB)) ORDER BY (((((rt0.c0))<>((rt0.c2)))) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND ((((rt0.c0))<>((rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (x'')) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0))<>((rt0.c2)))) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND ((((rt0.c0))<>((rt0.c1)))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST((rt0.c0 IN (x'')) AS BLOB)) ORDER BY (((((rt0.c0))<>((rt0.c2)))) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND ((((rt0.c0))<>((rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (x'')) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0))<>((rt0.c2)))) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND ((((rt0.c0))<>((rt0.c1)))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST((rt0.c0 IN (x'')) AS BLOB)) ORDER BY (((((rt0.c0))<>((rt0.c2)))) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND ((((rt0.c0))<>((rt0.c1)))))  NULLS FIRST;
SELECT * FROM vt1 WHERE (LIKELY(vt1.c0) COLLATE BINARY) ORDER BY (+ (CHAR(vt1.c0))), CAST(vt1.c0 AS TEXT) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (+ (CHAR(vt1.c0))), CAST(vt1.c0 AS TEXT) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (LIKELY(vt1.c0) COLLATE BINARY) ORDER BY (+ (CHAR(vt1.c0))), CAST(vt1.c0 AS TEXT) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (+ (CHAR(vt1.c0))), CAST(vt1.c0 AS TEXT) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (LIKELY(vt1.c0) COLLATE BINARY) ORDER BY (+ (CHAR(vt1.c0))), CAST(vt1.c0 AS TEXT) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((NOT (CAST(rt0.c0 AS BLOB)))) ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))LIKE((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))LIKE((vt1.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((NOT (CAST(rt0.c0 AS BLOB)))) ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))LIKE((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))LIKE((vt1.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((NOT (CAST(rt0.c0 AS BLOB)))) ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))LIKE((vt1.c0 IN ())))  NULLS LAST;
SELECT * FROM vt1, vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, vt1.c0)) AND ((-800160337, vt0.c0, rt0.c0)))) BETWEEN ((~ (rt0.c0))) AND (x'')) WHERE (CAST(IFNULL(rt0.c1, vt1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(rt0.c1, vt1.c0) AS REAL)) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, vt1.c0)) AND ((-800160337, vt0.c0, rt0.c0)))) BETWEEN ((~ (rt0.c0))) AND (x'')));
SELECT * FROM vt1, vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, vt1.c0)) AND ((-800160337, vt0.c0, rt0.c0)))) BETWEEN ((~ (rt0.c0))) AND (x'')) WHERE (CAST(IFNULL(rt0.c1, vt1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(rt0.c1, vt1.c0) AS REAL)) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, vt1.c0)) AND ((-800160337, vt0.c0, rt0.c0)))) BETWEEN ((~ (rt0.c0))) AND (x'')));
SELECT * FROM vt1, vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, vt1.c0)) AND ((-800160337, vt0.c0, rt0.c0)))) BETWEEN ((~ (rt0.c0))) AND (x'')) WHERE (CAST(IFNULL(rt0.c1, vt1.c0) AS REAL));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON 1.953644662E9 COLLATE BINARY WHERE (((((vt1.c0) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON 1.953644662E9 COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON 1.953644662E9 COLLATE BINARY WHERE (((((vt1.c0) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON 1.953644662E9 COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON 1.953644662E9 COLLATE BINARY WHERE (((((vt1.c0) IS FALSE)) NOT NULL));
SELECT * FROM vt0 WHERE (((json_object(vt0.c0, vt0.c0))IS NOT((~ (vt0.c0))))) ORDER BY ((vt0.c0)>>((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_object(vt0.c0, vt0.c0))IS NOT((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)>>((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((json_object(vt0.c0, vt0.c0))IS NOT((~ (vt0.c0))))) ORDER BY ((vt0.c0)>>((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_object(vt0.c0, vt0.c0))IS NOT((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)>>((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM vt1, rt0, vt0 WHERE (CASE WHEN NULL THEN CASE rt0.c0  WHEN vt1.c0 THEN rt0.c2 END END) ORDER BY (((rt0.c0)+(vt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN CASE rt0.c0  WHEN vt1.c0 THEN rt0.c2 END END) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((rt0.c0)+(vt1.c0)) IN ()) DESC);
SELECT * FROM vt1, rt0, vt0 WHERE (CASE WHEN NULL THEN CASE rt0.c0  WHEN vt1.c0 THEN rt0.c2 END END) ORDER BY (((rt0.c0)+(vt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN CASE rt0.c0  WHEN vt1.c0 THEN rt0.c2 END END) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((rt0.c0)+(vt1.c0)) IN ()) DESC);
SELECT * FROM vt1, rt0, vt0 WHERE (CASE WHEN NULL THEN CASE rt0.c0  WHEN vt1.c0 THEN rt0.c2 END END) ORDER BY (((rt0.c0)+(vt1.c0)) IN ()) DESC;
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (NULL IN ()) WHERE (((((CAST(rt0.c1 AS BLOB))OR(rt0.c0 COLLATE RTRIM)))AND(rt0.c0 COLLATE RTRIM))) ORDER BY ((((((((((rt0.c1)/(rt0.c0)))OR(LIKE(rt0.c1, rt0.c2, '2'))))OR('')))OR((((rt0.c2))>((rt0.c0))))))OR(((rt0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c1 AS BLOB))OR(rt0.c0 COLLATE RTRIM)))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (NULL IN ()) ORDER BY ((((((((((rt0.c1)/(rt0.c0)))OR(LIKE(rt0.c1, rt0.c2, '2'))))OR('')))OR((((rt0.c2))>((rt0.c0))))))OR(((rt0.c2) NOTNULL))));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (NULL IN ()) WHERE (((((CAST(rt0.c1 AS BLOB))OR(rt0.c0 COLLATE RTRIM)))AND(rt0.c0 COLLATE RTRIM))) ORDER BY ((((((((((rt0.c1)/(rt0.c0)))OR(LIKE(rt0.c1, rt0.c2, '2'))))OR('')))OR((((rt0.c2))>((rt0.c0))))))OR(((rt0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c1 AS BLOB))OR(rt0.c0 COLLATE RTRIM)))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (NULL IN ()) ORDER BY ((((((((((rt0.c1)/(rt0.c0)))OR(LIKE(rt0.c1, rt0.c2, '2'))))OR('')))OR((((rt0.c2))>((rt0.c0))))))OR(((rt0.c2) NOTNULL))));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (NULL IN ()) WHERE (((((CAST(rt0.c1 AS BLOB))OR(rt0.c0 COLLATE RTRIM)))AND(rt0.c0 COLLATE RTRIM))) ORDER BY ((((((((((rt0.c1)/(rt0.c0)))OR(LIKE(rt0.c1, rt0.c2, '2'))))OR('')))OR((((rt0.c2))>((rt0.c0))))))OR(((rt0.c2) NOTNULL)));
SELECT ALL * FROM vt0 WHERE ((((((('~D')*(vt0.c0)))OR((NULL IN ()))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (NOT (((((((((0.04624111081685722)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((('~D')*(vt0.c0)))OR((NULL IN ()))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((((((((0.04624111081685722)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE ((((((('~D')*(vt0.c0)))OR((NULL IN ()))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (NOT (((((((((0.04624111081685722)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((('~D')*(vt0.c0)))OR((NULL IN ()))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((((((((0.04624111081685722)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE ((((((('~D')*(vt0.c0)))OR((NULL IN ()))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (NOT (((((((((0.04624111081685722)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((vt1.c0) IS TRUE) LEFT OUTER JOIN vt0 ON ((((rt0.c1))<(('177471071'))) IN ()) WHERE (((((rt0.c1)!=(x'')))||(((rt0.c2)OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<>(x'')))||(((rt0.c2)OR(rt0.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((vt1.c0) IS TRUE) LEFT OUTER JOIN vt0 ON ((((rt0.c1))<(('177471071'))) IN ()));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((vt1.c0) IS TRUE) LEFT OUTER JOIN vt0 ON ((((rt0.c1))<(('177471071'))) IN ()) WHERE (((((rt0.c1)!=(x'')))||(((rt0.c2)OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<>(x'')))||(((rt0.c2)OR(rt0.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((vt1.c0) IS TRUE) LEFT OUTER JOIN vt0 ON ((((rt0.c1))<(('177471071'))) IN ()));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((vt1.c0) IS TRUE) LEFT OUTER JOIN vt0 ON ((((rt0.c1))<(('177471071'))) IN ()) WHERE (((((rt0.c1)!=(x'')))||(((rt0.c2)OR(rt0.c1)))));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c1))<>((rt0.c0, vt0.c0, vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c2, rt0.c1))<>((rt0.c0, vt0.c0, vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c1))<>((rt0.c0, vt0.c0, vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c2, rt0.c1))<>((rt0.c0, vt0.c0, vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c1))<>((rt0.c0, vt0.c0, vt1.c0)))) IS TRUE));
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)>(((vt1.c0) NOT BETWEEN (0.31723548132697765) AND (vt1.c0))))) ORDER BY x'' DESC, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (('' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)>(((vt1.c0) NOT BETWEEN (0.31723548132697765) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY x'' DESC, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (('' IN ()))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)>(((vt1.c0) NOT BETWEEN (0.31723548132697765) AND (vt1.c0))))) ORDER BY x'' DESC, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (('' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)>(((vt1.c0) NOT BETWEEN (0.31723548132697765) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY x'' DESC, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (('' IN ()))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)>(((vt1.c0) NOT BETWEEN (0.31723548132697765) AND (vt1.c0))))) ORDER BY x'' DESC, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (('' IN ())));
SELECT ALL * FROM vt0, rt0 WHERE (CAST((((rt0.c2))<=((rt0.c2))) AS REAL)) ORDER BY (((~ (rt0.c2)))LIKE(LAST_INSERT_ROWID()))  NULLS FIRST, CASE WHEN (~ (rt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END DESC  NULLS LAST, rt0.c0 ASC  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((x'5c15')) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))<=((rt0.c2))) AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((~ (rt0.c2)))LIKE(LAST_INSERT_ROWID()))  NULLS FIRST, CASE WHEN (~ (rt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END DESC  NULLS LAST, rt0.c0 ASC  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((x'5c15')) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (CAST((((rt0.c2))<=((rt0.c2))) AS REAL)) ORDER BY (((~ (rt0.c2)))LIKE(LAST_INSERT_ROWID()))  NULLS FIRST, CASE WHEN (~ (rt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END DESC  NULLS LAST, rt0.c0 ASC  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((x'5c15')) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))<=((rt0.c2))) AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((~ (rt0.c2)))LIKE(LAST_INSERT_ROWID()))  NULLS FIRST, CASE WHEN (~ (rt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END DESC  NULLS LAST, rt0.c0 ASC  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((x'5c15')) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (CAST((((rt0.c2))<=((rt0.c2))) AS REAL)) ORDER BY (((~ (rt0.c2)))LIKE(LAST_INSERT_ROWID()))  NULLS FIRST, CASE WHEN (~ (rt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END DESC  NULLS LAST, rt0.c0 ASC  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((x'5c15')) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(x'' AS NUMERIC)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) WHEN HEX(rt0.c2) THEN ((rt0.c1)||(rt0.c0)) WHEN (((rt0.c2))<((rt0.c1))) THEN (rt0.c0 IN ()) END) ORDER BY (~ (rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(x'' AS NUMERIC)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) WHEN HEX(rt0.c2) THEN ((rt0.c1)||(rt0.c0)) WHEN (((rt0.c2))<((rt0.c1))) THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(x'' AS NUMERIC)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) WHEN HEX(rt0.c2) THEN ((rt0.c1)||(rt0.c0)) WHEN (((rt0.c2))<((rt0.c1))) THEN (rt0.c0 IN ()) END) ORDER BY (~ (rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(x'' AS NUMERIC)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) WHEN HEX(rt0.c2) THEN ((rt0.c1)||(rt0.c0)) WHEN (((rt0.c2))<((rt0.c1))) THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(x'' AS NUMERIC)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) WHEN HEX(rt0.c2) THEN ((rt0.c1)||(rt0.c0)) WHEN (((rt0.c2))<((rt0.c1))) THEN (rt0.c0 IN ()) END) ORDER BY (~ (rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)>>(rt0.c0))) ISNULL)) ORDER BY UPPER(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>>(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY UPPER(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)>>(rt0.c0))) ISNULL)) ORDER BY UPPER(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>>(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY UPPER(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)>>(rt0.c0))) ISNULL)) ORDER BY UPPER(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((((('2023659738') BETWEEN (rt0.c0) AND (rt0.c0)))+(((rt0.c0) NOT NULL)))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2)<(rt0.c0)))) AND ((rt0.c0)))  NULLS FIRST, (((rt0.c1 IN ())) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('2023659738') BETWEEN (rt0.c0) AND (rt0.c0)))+(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2)<(rt0.c0)))) AND ((rt0.c0)))  NULLS FIRST, (((rt0.c1 IN ())) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((((('2023659738') BETWEEN (rt0.c0) AND (rt0.c0)))+(((rt0.c0) NOT NULL)))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2)<(rt0.c0)))) AND ((rt0.c0)))  NULLS FIRST, (((rt0.c1 IN ())) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('2023659738') BETWEEN (rt0.c0) AND (rt0.c0)))+(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2)<(rt0.c0)))) AND ((rt0.c0)))  NULLS FIRST, (((rt0.c1 IN ())) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((((('2023659738') BETWEEN (rt0.c0) AND (rt0.c0)))+(((rt0.c0) NOT NULL)))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2)<(rt0.c0)))) AND ((rt0.c0)))  NULLS FIRST, (((rt0.c1 IN ())) NOT NULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((x'')<<((vt1.c0 IN (rt0.c0))))) ORDER BY 'mZX^O1%a)' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'')<<((vt1.c0 IN (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY 'mZX^O1%a)' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((x'')<<((vt1.c0 IN (rt0.c0))))) ORDER BY 'mZX^O1%a)' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'')<<((vt1.c0 IN (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY 'mZX^O1%a)' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((x'')<<((vt1.c0 IN (rt0.c0))))) ORDER BY 'mZX^O1%a)' DESC  NULLS LAST;
SELECT * FROM vt1, rt0, vt0 WHERE (((x'3b94')GLOB((((vt1.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((x'3b94')GLOB((((vt1.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (((x'3b94')GLOB((((vt1.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((x'3b94')GLOB((((vt1.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (((x'3b94')GLOB((((vt1.c0))>=((vt0.c0))))));
SELECT ALL * FROM rt0, vt0 CROSS JOIN vt1 ON (- (((rt0.c0)LIKE('')))) WHERE (NULLIF(DISTINCT ((rt0.c2)>>(rt0.c2)), ((vt0.c0)|(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt0.c2)>>(rt0.c2)), ((vt0.c0)|(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt1 ON (- (((rt0.c0)LIKE('')))));
SELECT ALL * FROM rt0, vt0 CROSS JOIN vt1 ON (- (((rt0.c0)LIKE('')))) WHERE (NULLIF(DISTINCT ((rt0.c2)>>(rt0.c2)), ((vt0.c0)|(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt0.c2)>>(rt0.c2)), ((vt0.c0)|(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt1 ON (- (((rt0.c0)LIKE('')))));
SELECT ALL * FROM rt0, vt0 CROSS JOIN vt1 ON (- (((rt0.c0)LIKE('')))) WHERE (NULLIF(DISTINCT ((rt0.c2)>>(rt0.c2)), ((vt0.c0)|(vt0.c0))));
SELECT * FROM vt1 WHERE ((- ((x'' IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((x'' IN (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- ((x'' IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((x'' IN (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- ((x'' IN (vt1.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)|(vt0.c0)))<<(LIKELIHOOD(DISTINCT rt0.c2, 0.26404299858184477)))) ORDER BY (((- (rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)|(vt0.c0)))<<(LIKELIHOOD(DISTINCT rt0.c2, 0.26404299858184477)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((- (rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)|(vt0.c0)))<<(LIKELIHOOD(DISTINCT rt0.c2, 0.26404299858184477)))) ORDER BY (((- (rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)|(vt0.c0)))<<(LIKELIHOOD(DISTINCT rt0.c2, 0.26404299858184477)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((- (rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)|(vt0.c0)))<<(LIKELIHOOD(DISTINCT rt0.c2, 0.26404299858184477)))) ORDER BY (((- (rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) ISNULL)) ORDER BY 'DL'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY 'DL'  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) ISNULL)) ORDER BY 'DL'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY 'DL'  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) ISNULL)) ORDER BY 'DL'  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE (CASE WHEN (((vt1.c0, rt0.c2, rt0.c2))<((rt0.c0, 0.24768026669808774, rt0.c1))) THEN CAST(rt0.c2 AS BLOB) WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2) BETWEEN ('418683226') AND (rt0.c1)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN '-1667213878' THEN rt0.c2 ELSE rt0.c2 END END) ORDER BY ((COALESCE(rt0.c2, rt0.c0, rt0.c0, vt1.c0)) NOT BETWEEN (((NULL)GLOB(rt0.c1))) AND (rt0.c2));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c0, rt0.c2, rt0.c2))<((rt0.c0, 0.24768026669808774, rt0.c1))) THEN CAST(rt0.c2 AS BLOB) WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2) BETWEEN ('418683226') AND (rt0.c1)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN '-1667213878' THEN rt0.c2 ELSE rt0.c2 END END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((COALESCE(rt0.c2, rt0.c0, rt0.c0, vt1.c0)) NOT BETWEEN (((NULL)GLOB(rt0.c1))) AND (rt0.c2)));
SELECT * FROM vt1, rt0 WHERE (CASE WHEN (((vt1.c0, rt0.c2, rt0.c2))<((rt0.c0, 0.24768026669808774, rt0.c1))) THEN CAST(rt0.c2 AS BLOB) WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2) BETWEEN ('418683226') AND (rt0.c1)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN '-1667213878' THEN rt0.c2 ELSE rt0.c2 END END) ORDER BY ((COALESCE(rt0.c2, rt0.c0, rt0.c0, vt1.c0)) NOT BETWEEN (((NULL)GLOB(rt0.c1))) AND (rt0.c2));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c0, rt0.c2, rt0.c2))<((rt0.c0, 0.24768026669808774, rt0.c1))) THEN CAST(rt0.c2 AS BLOB) WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2) BETWEEN ('418683226') AND (rt0.c1)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN '-1667213878' THEN rt0.c2 ELSE rt0.c2 END END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((COALESCE(rt0.c2, rt0.c0, rt0.c0, vt1.c0)) NOT BETWEEN (((NULL)GLOB(rt0.c1))) AND (rt0.c2)));
SELECT * FROM vt1, rt0 WHERE (CASE WHEN (((vt1.c0, rt0.c2, rt0.c2))<((rt0.c0, 0.24768026669808774, rt0.c1))) THEN CAST(rt0.c2 AS BLOB) WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2) BETWEEN ('418683226') AND (rt0.c1)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN '-1667213878' THEN rt0.c2 ELSE rt0.c2 END END) ORDER BY ((COALESCE(rt0.c2, rt0.c0, rt0.c0, vt1.c0)) NOT BETWEEN (((NULL)GLOB(rt0.c1))) AND (rt0.c2));
SELECT * FROM rt0 INNER JOIN vt1 ON ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()) WHERE (((((CASE WHEN rt0.c0 THEN rt0.c2 END)AND((vt1.c0 IN ()))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c0 THEN rt0.c2 END)AND((vt1.c0 IN ()))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()));
SELECT * FROM rt0 INNER JOIN vt1 ON ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()) WHERE (((((CASE WHEN rt0.c0 THEN rt0.c2 END)AND((vt1.c0 IN ()))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c0 THEN rt0.c2 END)AND((vt1.c0 IN ()))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()));
SELECT * FROM rt0 INNER JOIN vt1 ON ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()) WHERE (((((CASE WHEN rt0.c0 THEN rt0.c2 END)AND((vt1.c0 IN ()))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((- (rt0.c1)))IS NOT((((rt0.c1))<=((vt0.c0)))))) ORDER BY rt0.c1 DESC  NULLS FIRST, (((rt0.c2))=((CASE WHEN 0.6441483404476457 THEN vt0.c0 ELSE rt0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1)))IS NOT((((rt0.c1))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1 DESC  NULLS FIRST, (((rt0.c2))=((CASE WHEN 0.6441483404476457 THEN vt0.c0 ELSE rt0.c0 END))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((- (rt0.c1)))IS NOT((((rt0.c1))<=((vt0.c0)))))) ORDER BY rt0.c1 DESC  NULLS FIRST, (((rt0.c2))=((CASE WHEN 0.6441483404476457 THEN vt0.c0 ELSE rt0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1)))IS NOT((((rt0.c1))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1 DESC  NULLS FIRST, (((rt0.c2))=((CASE WHEN 0.6441483404476457 THEN vt0.c0 ELSE rt0.c0 END))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((- (rt0.c1)))IS NOT((((rt0.c1))<=((vt0.c0)))))) ORDER BY rt0.c1 DESC  NULLS FIRST, (((rt0.c2))=((CASE WHEN 0.6441483404476457 THEN vt0.c0 ELSE rt0.c0 END))) ASC;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))|(((rt0.c1) NOT NULL))) LEFT OUTER JOIN vt0 ON (~ (((rt0.c0)&(rt0.c1)))) WHERE ((((((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND((+ ('E-')))))AND(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND((+ ('E-')))))AND(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))|(((rt0.c1) NOT NULL))) LEFT OUTER JOIN vt0 ON (~ (((rt0.c0)&(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))|(((rt0.c1) NOT NULL))) LEFT OUTER JOIN vt0 ON (~ (((rt0.c0)&(rt0.c1)))) WHERE ((((((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND((+ ('E-')))))AND(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND((+ ('E-')))))AND(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))|(((rt0.c1) NOT NULL))) LEFT OUTER JOIN vt0 ON (~ (((rt0.c0)&(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))|(((rt0.c1) NOT NULL))) LEFT OUTER JOIN vt0 ON (~ (((rt0.c0)&(rt0.c1)))) WHERE ((((((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND((+ ('E-')))))AND(CAST(rt0.c0 AS NUMERIC))));
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c1)-(rt0.c0)) IN ((NOT (rt0.c0))))) ORDER BY rt0.c0, TRIM(DISTINCT LIKELY(DISTINCT rt0.c0), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)-(rt0.c0)) IN ((NOT (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY rt0.c0, TRIM(DISTINCT LIKELY(DISTINCT rt0.c0), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))  NULLS FIRST);
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c1)-(rt0.c0)) IN ((NOT (rt0.c0))))) ORDER BY rt0.c0, TRIM(DISTINCT LIKELY(DISTINCT rt0.c0), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)-(rt0.c0)) IN ((NOT (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY rt0.c0, TRIM(DISTINCT LIKELY(DISTINCT rt0.c0), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))  NULLS FIRST);
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c1)-(rt0.c0)) IN ((NOT (rt0.c0))))) ORDER BY rt0.c0, TRIM(DISTINCT LIKELY(DISTINCT rt0.c0), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(((NULL) NOTNULL) AS NUMERIC)) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER));
SELECT * FROM vt0 WHERE (CAST(((NULL) NOTNULL) AS NUMERIC)) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER));
SELECT * FROM vt0 WHERE (CAST(((NULL) NOTNULL) AS NUMERIC)) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0) IS FALSE) IN ((~ (vt1.c0)), (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN (('633837011', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS FALSE) IN ((~ (vt1.c0)), (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN (('633837011', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0) IS FALSE) IN ((~ (vt1.c0)), (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN (('633837011', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS FALSE) IN ((~ (vt1.c0)), (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN (('633837011', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0) IS FALSE) IN ((~ (vt1.c0)), (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN (('633837011', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))))));
SELECT * FROM rt0 CROSS JOIN vt1 ON '\nha' LEFT OUTER JOIN vt0 ON DATETIME(((rt0.c2)&(rt0.c0)), (vt0.c0 IN ()), CAST(rt0.c2 AS BLOB)) WHERE ((~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON '\nha' LEFT OUTER JOIN vt0 ON DATETIME(((rt0.c2)&(rt0.c0)), (vt0.c0 IN ()), CAST(rt0.c2 AS BLOB)));
SELECT * FROM rt0 CROSS JOIN vt1 ON '\nha' LEFT OUTER JOIN vt0 ON DATETIME(((rt0.c2)&(rt0.c0)), (vt0.c0 IN ()), CAST(rt0.c2 AS BLOB)) WHERE ((~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON '\nha' LEFT OUTER JOIN vt0 ON DATETIME(((rt0.c2)&(rt0.c0)), (vt0.c0 IN ()), CAST(rt0.c2 AS BLOB)));
SELECT * FROM rt0 CROSS JOIN vt1 ON '\nha' LEFT OUTER JOIN vt0 ON DATETIME(((rt0.c2)&(rt0.c0)), (vt0.c0 IN ()), CAST(rt0.c2 AS BLOB)) WHERE ((~ (vt0.c0)));
SELECT * FROM vt0 WHERE ((+ (((0.5964537455710587)>=(vt0.c0))))) ORDER BY (((((('g') ISNULL))AND(CASE '418683226'  WHEN 0.6655488113576584 THEN vt0.c0 END)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((0.5964537455710587)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((('g') ISNULL))AND(CASE '418683226'  WHEN 0.6655488113576584 THEN vt0.c0 END)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE ((+ (((0.5964537455710587)>=(vt0.c0))))) ORDER BY (((((('g') ISNULL))AND(CASE '418683226'  WHEN 0.6655488113576584 THEN vt0.c0 END)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((0.5964537455710587)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((('g') ISNULL))AND(CASE '418683226'  WHEN 0.6655488113576584 THEN vt0.c0 END)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE ((+ (((0.5964537455710587)>=(vt0.c0))))) ORDER BY (((((('g') ISNULL))AND(CASE '418683226'  WHEN 0.6655488113576584 THEN vt0.c0 END)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC;
