-- Time: 2024/06/09 09:01:55
-- Database: database63
-- Database version: 3.40.0
-- seed value: 3456794663
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE TABLE t0 (c0 REAL UNIQUE ON CONFLICT REPLACE CHECK ( ((((c0)<(c0)))|(x''))) , c1 REAL , c2 REAL ); -- 0ms;
CREATE TABLE IF NOT EXISTS t1 (c0 BLOB ); -- 1ms;
INSERT OR REPLACE INTO t1(c0) VALUES (''); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
PRAGMA incremental_vacuum(-942725934); -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
VACUUM; -- 17ms;
UPDATE OR ROLLBACK t0 SET (c1)=('!_'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
UPDATE OR IGNORE t1 SET c0='-510440514' WHERE t1.c0; -- 0ms;
ANALYZE; -- 21ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-942725934 sz=1860206005 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (0xffffffffb23b51d6, NULL, '-34921614'); -- 0ms;
REINDEX; -- 1ms;
PRAGMA temp.shrink_memory; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
CREATE INDEX IF NOT EXISTS i73 ON t1(CASE (~ (c0))  WHEN CASE c0  WHEN c0 THEN c0 END THEN CASE WHEN c0 THEN c0 ELSE c0 END END COLLATE BINARY); -- 12ms;
REINDEX  t0; -- 0ms;
UPDATE OR ABORT rt0 SET c2=NULL; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE rt0 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c2)=(NULL, '3\nq') WHERE (((NULL)/(t0.c2)) IN (t0.c1, t0.c2 COLLATE RTRIM)); -- 0ms;
PRAGMA journal_size_limit = 0; -- 4ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL); -- 1ms;
DROP TABLE IF EXISTS t1; -- 0ms;
UPDATE OR ABORT rt0 SET (c1)=(0.7499419397417746) WHERE rt0.c0; -- 0ms;
PRAGMA journal_mode; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c1) VALUES (0.03331502403877529); -- 19ms;
UPDATE OR IGNORE rt0 SET (c2, c1)=('GⓒwZ1_', x'') WHERE (NOT (CAST(rt0.c1 AS INTEGER))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(x'44de', 'BK\nJnY{t'); -- 0ms;
ANALYZE; -- 0ms;
VACUUM main; -- 1ms;
UPDATE OR ABORT rt0 SET (c0)=(0.7499419397417746) WHERE (((- (rt0.c1))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (SQLITE_COMPILEOPTION_GET(rt0.c2))); -- 1ms;
UPDATE OR IGNORE t0 SET (c2)=(x''); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (0Xffffffffc7cf24d2); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(-5.10440514E8) WHERE (- (GLOB(0x71c5c900, t0.c2))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0, c2) VALUES (0.35340277089701055, NULL); -- 0ms;
CREATE INDEX i39 ON t0(CASE WHEN x'' THEN rtreenode(c2, c2) WHEN c2 COLLATE NOCASE THEN ((((((((c1)OR(c2)))AND(c0)))AND(c0)))OR(NULL)) WHEN ((((((((c2)AND(c0)))AND(c1)))AND(c2)))AND(c0)) THEN (c1 IN ()) END DESC,(((c1)) NOT BETWEEN (((c2 IN ()))) AND ((((((c1)AND(c0)))OR(c1))))) ASC,(load_extension(c0) IN ()) COLLATE NOCASE DESC) WHERE CAST(c1 AS REAL) COLLATE RTRIM; -- 0ms;
CREATE UNIQUE INDEX i87 ON t0((('1860206005')*(('-1304735274' IN ()))) COLLATE BINARY ASC,((NULL)+(json_remove(c0, c1))),((((c1)<>(c0))) NOTNULL) COLLATE BINARY ASC) WHERE 0.11591833974767407; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i59 ON t0(CASE UNLIKELY(c1)  WHEN ((c0) ISNULL) THEN CAST(c2 AS NUMERIC) WHEN (~ (c1)) THEN c2 WHEN ((c1)||(0.11591833974767407)) THEN ((((c2)OR(c0)))AND(c2)) ELSE COALESCE(-1.304735274E9, c1, c2, c1) END COLLATE BINARY ASC,'-34921614' COLLATE BINARY DESC,((((((c0)AND(c2)))OR(((c1) IS TRUE))))AND((('/y\*') BETWEEN (c1) AND (c0))))) WHERE (+ (((c1) NOT NULL))); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i11 ON t0(((((c1) NOTNULL)) NOT BETWEEN (((c0) NOT BETWEEN (c2) AND (c1))) AND ((x'' IN ()))) DESC,x'e6ea' ASC,'-1304735274' DESC) WHERE (CAST(c1 AS REAL) IN (CASE x''  WHEN c2 THEN NULL END, ((c0)GLOB(c1)))); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i79 ON t0(((((((((json_array_length(c1))OR((c0 IN ()))))OR(CASE c0  WHEN c2 THEN c2 ELSE c0 END)))OR((((c1)) BETWEEN ((c2)) AND ((c2))))))AND(((c2)/(c0)))),CASE WHEN ((c2)*(c2)) THEN ((c1)IS(c0)) ELSE (c0 IN ()) END COLLATE BINARY,CASE WHEN (~ (c1)) THEN (~ (c0)) ELSE (NOT (c0)) END COLLATE RTRIM DESC); -- 11ms;
UPDATE OR FAIL t0 SET c1='!_' WHERE 0X51d07528; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'', c1=NULL; -- 15ms;
UPDATE OR REPLACE t0 SET c0='-1304735274'; -- 0ms;
REINDEX; -- 20ms;
CREATE VIEW v0(c0) AS SELECT DISTINCT (((rt0.c2 IN ())) ISNULL) FROM t0, rt0 WHERE (CAST(((((NULL)OR(x'')))AND('Uv(+Xb,')) AS REAL)); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2) VALUES ('aM븿oSm', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (x'b277', '1'); -- 0ms;
UPDATE t0 SET (c2)=(0.4411489065004761); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX; -- 18ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i79', ' sz=1908787456 unordered'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='aM븿oSm', c2='Q+&?roC\n'; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES (x''), (x''), (x''); -- 15ms;
INSERT OR ABORT INTO t0(c1) VALUES ('O3X'), ('_bQElI%'), (0.7179895398269772), (0.988173108059154), ('-701432128'); -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (x''), (ABS(DISTINCT (('144227903') NOT BETWEEN (0.27285756956507623) AND ('24')))), ('閿!u('); -- 0ms;
PRAGMA secure_delete = FAST; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
END; -- 0ms;
REINDEX i79; -- 20ms;
PRAGMA secure_delete = FAST; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.03331502403877529), (48698117), (NULL); -- 1ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE (((((t0.c0)LIKE(t0.c0))))<((t0.c2))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE t0 SET c2=x'', c0=x'28b0' WHERE SQLITE_COMPILEOPTION_USED(((t0.c2) IS FALSE)); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(NULL) WHERE (json_remove(t0.c0, t0.c1) IN ()); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL) WHERE (((- (rt0.c1))) ISNULL); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DROP VIEW v0; -- 25ms;
END; -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.8704852919404928, x'0ce32c68'); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER UPDATE OF c2 ON t0 WHEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c1)) COLLATE BINARY BEGIN SELECT RAISE(IGNORE);END; -- 14ms;
PRAGMA main.soft_heap_limit = 8921933952335163113; -- 0ms;
PRAGMA main.application_id; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-701432128 unordered'); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES ('', 0.6633704041521965, ((((NULL IN ())))<((('-1199378940' IN ()))))); -- 0ms;
PRAGMA main.checkpoint_fullfsync = false; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA optimize; -- 14ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ('144227903' IN ()) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((('-1199378940' IN ())))>=(((NOT (t0.c2))))) WHERE ('') ORDER BY (((((~ (t0.c1)))AND((t0.c2 IN ()))))AND(IFNULL(t0.c2, t0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ('144227903' IN ()) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((('-1199378940' IN ())))>=(((NOT (t0.c2))))) ORDER BY (((((~ (t0.c1)))AND((t0.c2 IN ()))))AND(IFNULL(t0.c2, t0.c2))) DESC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ('144227903' IN ()) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((('-1199378940' IN ())))>=(((NOT (t0.c2))))) WHERE ('') ORDER BY (((((~ (t0.c1)))AND((t0.c2 IN ()))))AND(IFNULL(t0.c2, t0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ('144227903' IN ()) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((('-1199378940' IN ())))>=(((NOT (t0.c2))))) ORDER BY (((((~ (t0.c1)))AND((t0.c2 IN ()))))AND(IFNULL(t0.c2, t0.c2))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((json_remove(t0.c2, t0.c1))GLOB(((t0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(t0.c2, t0.c1))GLOB(((t0.c1) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((json_remove(t0.c2, t0.c1))GLOB(((t0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(t0.c2, t0.c1))GLOB(((t0.c1) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0, vt0, rt0 WHERE (CASE WHEN NULL THEN ((t0.c0)&(rt0.c0)) ELSE TRIM(rt0.c1) END) ORDER BY ((t0.c2 COLLATE NOCASE)AND(((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((t0.c0)&(rt0.c0)) ELSE TRIM(rt0.c1) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((t0.c2 COLLATE NOCASE)AND(((rt0.c2) NOT NULL))));
SELECT * FROM t0, vt0, rt0 WHERE (CASE WHEN NULL THEN ((t0.c0)&(rt0.c0)) ELSE TRIM(rt0.c1) END) ORDER BY ((t0.c2 COLLATE NOCASE)AND(((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((t0.c0)&(rt0.c0)) ELSE TRIM(rt0.c1) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((t0.c2 COLLATE NOCASE)AND(((rt0.c2) NOT NULL))));
SELECT * FROM t0, vt0, rt0 WHERE (CASE WHEN NULL THEN ((t0.c0)&(rt0.c0)) ELSE TRIM(rt0.c1) END) ORDER BY ((t0.c2 COLLATE NOCASE)AND(((rt0.c2) NOT NULL)));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((NOT (rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((NOT (rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((NOT (rt0.c1))) IS TRUE));
SELECT ALL * FROM vt0, t0 WHERE ((((((((((((((vt0.c0 IN (0.5234797774777664)))OR(CASE t0.c2  WHEN t0.c1 THEN x'' END)))OR(((t0.c2)<(t0.c2)))))OR(((t0.c2) IS FALSE))))AND(((((t0.c2)AND(t0.c2)))AND(t0.c1)))))OR(CASE WHEN t0.c2 THEN t0.c0 END)))AND(((t0.c0)=(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c0 IN (0.5234797774777664)))OR(CASE t0.c2  WHEN t0.c1 THEN x'' END)))OR(((t0.c2)<(t0.c2)))))OR(((t0.c2) IS FALSE))))AND(((((t0.c2)AND(t0.c2)))AND(t0.c1)))))OR(CASE WHEN t0.c2 THEN t0.c0 END)))AND(((t0.c0)==(x''))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((((((((((vt0.c0 IN (0.5234797774777664)))OR(CASE t0.c2  WHEN t0.c1 THEN x'' END)))OR(((t0.c2)<(t0.c2)))))OR(((t0.c2) IS FALSE))))AND(((((t0.c2)AND(t0.c2)))AND(t0.c1)))))OR(CASE WHEN t0.c2 THEN t0.c0 END)))AND(((t0.c0)=(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c0 IN (0.5234797774777664)))OR(CASE t0.c2  WHEN t0.c1 THEN x'' END)))OR(((t0.c2)<(t0.c2)))))OR(((t0.c2) IS FALSE))))AND(((((t0.c2)AND(t0.c2)))AND(t0.c1)))))OR(CASE WHEN t0.c2 THEN t0.c0 END)))AND(((t0.c0)==(x''))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((((((((((vt0.c0 IN (0.5234797774777664)))OR(CASE t0.c2  WHEN t0.c1 THEN x'' END)))OR(((t0.c2)<(t0.c2)))))OR(((t0.c2) IS FALSE))))AND(((((t0.c2)AND(t0.c2)))AND(t0.c1)))))OR(CASE WHEN t0.c2 THEN t0.c0 END)))AND(((t0.c0)=(x'')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((0X61764b4c) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)IS(vt0.c0)))))OR('L쌈G)IA2>/'))  NULLS LAST, CAST(0.670502596727777 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((0x61764b4c) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)IS(vt0.c0)))))OR('L쌈G)IA2>/'))  NULLS LAST, CAST(0.670502596727777 AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((0X61764b4c) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)IS(vt0.c0)))))OR('L쌈G)IA2>/'))  NULLS LAST, CAST(0.670502596727777 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((0x61764b4c) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)IS(vt0.c0)))))OR('L쌈G)IA2>/'))  NULLS LAST, CAST(0.670502596727777 AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((0X61764b4c) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)IS(vt0.c0)))))OR('L쌈G)IA2>/'))  NULLS LAST, CAST(0.670502596727777 AS TEXT) ASC;
SELECT ALL * FROM rt0 WHERE (DATE(((rt0.c1) IS FALSE), ((rt0.c0)+(rt0.c0)), rt0.c2 COLLATE RTRIM, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), TYPEOF(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((DATE(((rt0.c1) IS FALSE), ((rt0.c0)+(rt0.c0)), rt0.c2 COLLATE RTRIM, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), TYPEOF(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (DATE(((rt0.c1) IS FALSE), ((rt0.c0)+(rt0.c0)), rt0.c2 COLLATE RTRIM, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), TYPEOF(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((DATE(((rt0.c1) IS FALSE), ((rt0.c0)+(rt0.c0)), rt0.c2 COLLATE RTRIM, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), TYPEOF(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (DATE(((rt0.c1) IS FALSE), ((rt0.c0)+(rt0.c0)), rt0.c2 COLLATE RTRIM, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), TYPEOF(rt0.c1)));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c0)<>(t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<>(t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c0)<>(t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<>(t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c0)<>(t0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((- (vt0.c0))))==((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)))) ORDER BY CAST(x'56ebac94' AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (vt0.c0))))=((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(x'56ebac94' AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((- (vt0.c0))))==((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)))) ORDER BY CAST(x'56ebac94' AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (vt0.c0))))=((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(x'56ebac94' AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((- (vt0.c0))))==((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)))) ORDER BY CAST(x'56ebac94' AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((+ ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((+ ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((+ ((rt0.c0 IN ()))));
SELECT ALL * FROM t0 WHERE (CASE NULL COLLATE BINARY  WHEN load_extension(t0.c0, t0.c2) THEN TRIM(t0.c0) ELSE ((t0.c1) BETWEEN (t0.c0) AND (x'')) END) ORDER BY ((t0.c2 COLLATE NOCASE) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL COLLATE BINARY  WHEN load_extension(t0.c0, t0.c2) THEN TRIM(t0.c0) ELSE ((t0.c1) BETWEEN (t0.c0) AND (x'')) END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t0 WHERE (CASE NULL COLLATE BINARY  WHEN load_extension(t0.c0, t0.c2) THEN TRIM(t0.c0) ELSE ((t0.c1) BETWEEN (t0.c0) AND (x'')) END) ORDER BY ((t0.c2 COLLATE NOCASE) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL COLLATE BINARY  WHEN load_extension(t0.c0, t0.c2) THEN TRIM(t0.c0) ELSE ((t0.c1) BETWEEN (t0.c0) AND (x'')) END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2 COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((((NOT (t0.c1)))OR(json_valid(vt0.c0))))AND(CASE t0.c0  WHEN t0.c2 THEN vt0.c0 ELSE t0.c0 END)))AND(((((((((t0.c0)OR(t0.c2)))OR(t0.c2)))OR(t0.c1)))OR(t0.c2)))))AND(((t0.c0)LIKE(t0.c2))))) ORDER BY CASE WHEN ((NULL) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN (NOT (vt0.c0)) ELSE CASE WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN 'PX(Kz?<' ELSE vt0.c0 END END;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (t0.c1)))OR(json_valid(vt0.c0))))AND(CASE t0.c0  WHEN t0.c2 THEN vt0.c0 ELSE t0.c0 END)))AND(((((((((t0.c0)OR(t0.c2)))OR(t0.c2)))OR(t0.c1)))OR(t0.c2)))))AND(((t0.c0)LIKE(t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN ((NULL) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN (NOT (vt0.c0)) ELSE CASE WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN 'PX(Kz?<' ELSE vt0.c0 END END);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((((NOT (t0.c1)))OR(json_valid(vt0.c0))))AND(CASE t0.c0  WHEN t0.c2 THEN vt0.c0 ELSE t0.c0 END)))AND(((((((((t0.c0)OR(t0.c2)))OR(t0.c2)))OR(t0.c1)))OR(t0.c2)))))AND(((t0.c0)LIKE(t0.c2))))) ORDER BY CASE WHEN ((NULL) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN (NOT (vt0.c0)) ELSE CASE WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN 'PX(Kz?<' ELSE vt0.c0 END END;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (t0.c1)))OR(json_valid(vt0.c0))))AND(CASE t0.c0  WHEN t0.c2 THEN vt0.c0 ELSE t0.c0 END)))AND(((((((((t0.c0)OR(t0.c2)))OR(t0.c2)))OR(t0.c1)))OR(t0.c2)))))AND(((t0.c0)LIKE(t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN ((NULL) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN (NOT (vt0.c0)) ELSE CASE WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN 'PX(Kz?<' ELSE vt0.c0 END END);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((((NOT (t0.c1)))OR(json_valid(vt0.c0))))AND(CASE t0.c0  WHEN t0.c2 THEN vt0.c0 ELSE t0.c0 END)))AND(((((((((t0.c0)OR(t0.c2)))OR(t0.c2)))OR(t0.c1)))OR(t0.c2)))))AND(((t0.c0)LIKE(t0.c2))))) ORDER BY CASE WHEN ((NULL) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN (NOT (vt0.c0)) ELSE CASE WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN 'PX(Kz?<' ELSE vt0.c0 END END;
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON (((rt0.c2, rt0.c0, t0.c2)) BETWEEN ((NULLIF(DISTINCT t0.c2, rt0.c1), CASE WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN 0.2737944626396245 THEN rt0.c0 END, LAST_INSERT_ROWID())) AND ((((t0.c1)GLOB(vt0.c0)), ((t0.c1)<(rt0.c2)), rt0.c2))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON (((rt0.c2, rt0.c0, t0.c2)) BETWEEN ((NULLIF(DISTINCT t0.c2, rt0.c1), CASE WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN 0.2737944626396245 THEN rt0.c0 END, LAST_INSERT_ROWID())) AND ((((t0.c1)GLOB(vt0.c0)), ((t0.c1)<(rt0.c2)), rt0.c2))));
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON (((rt0.c2, rt0.c0, t0.c2)) BETWEEN ((NULLIF(DISTINCT t0.c2, rt0.c1), CASE WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN 0.2737944626396245 THEN rt0.c0 END, LAST_INSERT_ROWID())) AND ((((t0.c1)GLOB(vt0.c0)), ((t0.c1)<(rt0.c2)), rt0.c2))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON (((rt0.c2, rt0.c0, t0.c2)) BETWEEN ((NULLIF(DISTINCT t0.c2, rt0.c1), CASE WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN 0.2737944626396245 THEN rt0.c0 END, LAST_INSERT_ROWID())) AND ((((t0.c1)GLOB(vt0.c0)), ((t0.c1)<(rt0.c2)), rt0.c2))));
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON (((rt0.c2, rt0.c0, t0.c2)) BETWEEN ((NULLIF(DISTINCT t0.c2, rt0.c1), CASE WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN 0.2737944626396245 THEN rt0.c0 END, LAST_INSERT_ROWID())) AND ((((t0.c1)GLOB(vt0.c0)), ((t0.c1)<(rt0.c2)), rt0.c2))) WHERE (t0.c0);
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((IFNULL(rt0.c0, 0.8924526947156655))-(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN 'AY' THEN t0.c1 WHEN rt0.c2 THEN t0.c2 ELSE rt0.c2 END)) WHERE ((((t0.c2) NOTNULL) IN (((t0.c2) BETWEEN (t0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2) NOTNULL) IN (((t0.c2) BETWEEN (t0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((IFNULL(rt0.c0, 0.8924526947156655))-(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN 'AY' THEN t0.c1 WHEN rt0.c2 THEN t0.c2 ELSE rt0.c2 END)));
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((IFNULL(rt0.c0, 0.8924526947156655))-(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN 'AY' THEN t0.c1 WHEN rt0.c2 THEN t0.c2 ELSE rt0.c2 END)) WHERE ((((t0.c2) NOTNULL) IN (((t0.c2) BETWEEN (t0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2) NOTNULL) IN (((t0.c2) BETWEEN (t0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((IFNULL(rt0.c0, 0.8924526947156655))-(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN 'AY' THEN t0.c1 WHEN rt0.c2 THEN t0.c2 ELSE rt0.c2 END)));
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((IFNULL(rt0.c0, 0.8924526947156655))-(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN 'AY' THEN t0.c1 WHEN rt0.c2 THEN t0.c2 ELSE rt0.c2 END)) WHERE ((((t0.c2) NOTNULL) IN (((t0.c2) BETWEEN (t0.c2) AND (rt0.c0)))));
SELECT ALL * FROM rt0, t0, vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN CAST(rt0.c1 AS INTEGER) ELSE CAST(rt0.c1 AS REAL) END) ORDER BY (((rt0.c0)) NOT BETWEEN (((NOT (t0.c1)))) AND ((NULL)))  NULLS FIRST, ((((((((((t0.c0)OR(rt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(rt0.c0)))==((NOT ('144227903'))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c0)) THEN CAST(rt0.c1 AS INTEGER) ELSE CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((rt0.c0)) NOT BETWEEN (((NOT (t0.c1)))) AND ((NULL)))  NULLS FIRST, ((((((((((t0.c0)OR(rt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(rt0.c0)))==((NOT ('144227903')))));
SELECT ALL * FROM rt0, t0, vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN CAST(rt0.c1 AS INTEGER) ELSE CAST(rt0.c1 AS REAL) END) ORDER BY (((rt0.c0)) NOT BETWEEN (((NOT (t0.c1)))) AND ((NULL)))  NULLS FIRST, ((((((((((t0.c0)OR(rt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(rt0.c0)))==((NOT ('144227903'))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c0)) THEN CAST(rt0.c1 AS INTEGER) ELSE CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((rt0.c0)) NOT BETWEEN (((NOT (t0.c1)))) AND ((NULL)))  NULLS FIRST, ((((((((((t0.c0)OR(rt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(rt0.c0)))==((NOT ('144227903')))));
SELECT ALL * FROM rt0, t0, vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN CAST(rt0.c1 AS INTEGER) ELSE CAST(rt0.c1 AS REAL) END) ORDER BY (((rt0.c0)) NOT BETWEEN (((NOT (t0.c1)))) AND ((NULL)))  NULLS FIRST, ((((((((((t0.c0)OR(rt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(rt0.c0)))==((NOT ('144227903'))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))/((+ (vt0.c0))))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))/((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))/((+ (vt0.c0))))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))/((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))/((+ (vt0.c0))))) ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((t0.c0) NOT BETWEEN ('1860206005') AND (rt0.c0))) NOTNULL)) ORDER BY CAST((0.3668939386421056 IN ()) AS NUMERIC)  NULLS FIRST, CAST(CAST(rt0.c0 AS INTEGER) AS INTEGER) ASC, CASE t0.c0 COLLATE NOCASE  WHEN CAST(0x61764b4c AS INTEGER) THEN ((NULL) IS FALSE) ELSE CASE rt0.c1  WHEN t0.c2 THEN vt0.c0 WHEN rt0.c0 THEN t0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN ('1860206005') AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST((0.3668939386421056 IN ()) AS NUMERIC)  NULLS FIRST, CAST(CAST(rt0.c0 AS INTEGER) AS INTEGER) ASC, CASE t0.c0 COLLATE NOCASE  WHEN CAST(0x61764b4c AS INTEGER) THEN ((NULL) IS FALSE) ELSE CASE rt0.c1  WHEN t0.c2 THEN vt0.c0 WHEN rt0.c0 THEN t0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((t0.c0) NOT BETWEEN ('1860206005') AND (rt0.c0))) NOTNULL)) ORDER BY CAST((0.3668939386421056 IN ()) AS NUMERIC)  NULLS FIRST, CAST(CAST(rt0.c0 AS INTEGER) AS INTEGER) ASC, CASE t0.c0 COLLATE NOCASE  WHEN CAST(0x61764b4c AS INTEGER) THEN ((NULL) IS FALSE) ELSE CASE rt0.c1  WHEN t0.c2 THEN vt0.c0 WHEN rt0.c0 THEN t0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN ('1860206005') AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST((0.3668939386421056 IN ()) AS NUMERIC)  NULLS FIRST, CAST(CAST(rt0.c0 AS INTEGER) AS INTEGER) ASC, CASE t0.c0 COLLATE NOCASE  WHEN CAST(0x61764b4c AS INTEGER) THEN ((NULL) IS FALSE) ELSE CASE rt0.c1  WHEN t0.c2 THEN vt0.c0 WHEN rt0.c0 THEN t0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((t0.c0) NOT BETWEEN ('1860206005') AND (rt0.c0))) NOTNULL)) ORDER BY CAST((0.3668939386421056 IN ()) AS NUMERIC)  NULLS FIRST, CAST(CAST(rt0.c0 AS INTEGER) AS INTEGER) ASC, CASE t0.c0 COLLATE NOCASE  WHEN CAST(0x61764b4c AS INTEGER) THEN ((NULL) IS FALSE) ELSE CASE rt0.c1  WHEN t0.c2 THEN vt0.c0 WHEN rt0.c0 THEN t0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END END DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE ((((+ (x'')))%(((((t0.c0)AND(vt0.c0)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (x'')))%(((((t0.c0)AND(vt0.c0)))OR(t0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((+ (x'')))%(((((t0.c0)AND(vt0.c0)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (x'')))%(((((t0.c0)AND(vt0.c0)))OR(t0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((+ (x'')))%(((((t0.c0)AND(vt0.c0)))OR(t0.c1)))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((t0.c1, 0xffffffff902cec97, rt0.c0)) NOT BETWEEN ((((vt0.c0)*(t0.c1)), x'6a45', ((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2)))) AND (('-1819963709', CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN -1e500 THEN rt0.c0 WHEN t0.c2 THEN t0.c0 ELSE rt0.c1 END, COALESCE(x'a252', vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, 0xffffffff902cec97, rt0.c0)) NOT BETWEEN ((((vt0.c0)*(t0.c1)), x'6a45', ((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2)))) AND (('-1819963709', CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN -1e500 THEN rt0.c0 WHEN t0.c2 THEN t0.c0 ELSE rt0.c1 END, COALESCE(x'a252', vt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((t0.c1, 0xffffffff902cec97, rt0.c0)) NOT BETWEEN ((((vt0.c0)*(t0.c1)), x'6a45', ((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2)))) AND (('-1819963709', CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN -1e500 THEN rt0.c0 WHEN t0.c2 THEN t0.c0 ELSE rt0.c1 END, COALESCE(x'a252', vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, 0xffffffff902cec97, rt0.c0)) NOT BETWEEN ((((vt0.c0)*(t0.c1)), x'6a45', ((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2)))) AND (('-1819963709', CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN -1e500 THEN rt0.c0 WHEN t0.c2 THEN t0.c0 ELSE rt0.c1 END, COALESCE(x'a252', vt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((t0.c1, 0xffffffff902cec97, rt0.c0)) NOT BETWEEN ((((vt0.c0)*(t0.c1)), x'6a45', ((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2)))) AND (('-1819963709', CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN -1e500 THEN rt0.c0 WHEN t0.c2 THEN t0.c0 ELSE rt0.c1 END, COALESCE(x'a252', vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((vt0.c0)!=(((NULL) IS TRUE)))) ORDER BY ((((rt0.c0, t0.c0, t0.c0)) BETWEEN ((NULL, vt0.c0, t0.c0)) AND (('\', rt0.c1, x''))) IN (((rt0.c1)%(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<>(((NULL) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((rt0.c0, t0.c0, t0.c0)) BETWEEN ((NULL, vt0.c0, t0.c0)) AND (('\', rt0.c1, x''))) IN (((rt0.c1)%(rt0.c1)))) ASC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((vt0.c0)!=(((NULL) IS TRUE)))) ORDER BY ((((rt0.c0, t0.c0, t0.c0)) BETWEEN ((NULL, vt0.c0, t0.c0)) AND (('\', rt0.c1, x''))) IN (((rt0.c1)%(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<>(((NULL) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((rt0.c0, t0.c0, t0.c0)) BETWEEN ((NULL, vt0.c0, t0.c0)) AND (('\', rt0.c1, x''))) IN (((rt0.c1)%(rt0.c1)))) ASC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((vt0.c0)!=(((NULL) IS TRUE)))) ORDER BY ((((rt0.c0, t0.c0, t0.c0)) BETWEEN ((NULL, vt0.c0, t0.c0)) AND (('\', rt0.c1, x''))) IN (((rt0.c1)%(rt0.c1)))) ASC;
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (MAX(((t0.c1) NOT BETWEEN ('910364361') AND (t0.c0)), CAST(t0.c2 AS NUMERIC), CAST(t0.c1 AS INTEGER), CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN NULL THEN 0.9104608280784717 END)) ORDER BY (((((t0.c1)AND(t0.c1)))OR(t0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((MAX(((t0.c1) NOT BETWEEN ('910364361') AND (t0.c0)), CAST(t0.c2 AS NUMERIC), CAST(t0.c1 AS INTEGER), CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN NULL THEN 0.9104608280784717 END)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c1)AND(t0.c1)))OR(t0.c1)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (MAX(((t0.c1) NOT BETWEEN ('910364361') AND (t0.c0)), CAST(t0.c2 AS NUMERIC), CAST(t0.c1 AS INTEGER), CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN NULL THEN 0.9104608280784717 END)) ORDER BY (((((t0.c1)AND(t0.c1)))OR(t0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((MAX(((t0.c1) NOT BETWEEN ('910364361') AND (t0.c0)), CAST(t0.c2 AS NUMERIC), CAST(t0.c1 AS INTEGER), CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN NULL THEN 0.9104608280784717 END)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c1)AND(t0.c1)))OR(t0.c1)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (MAX(((t0.c1) NOT BETWEEN ('910364361') AND (t0.c0)), CAST(t0.c2 AS NUMERIC), CAST(t0.c1 AS INTEGER), CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN NULL THEN 0.9104608280784717 END)) ORDER BY (((((t0.c1)AND(t0.c1)))OR(t0.c1)) IN ());
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)) COLLATE RTRIM WHERE (((((t0.c1)<(x'1d87'))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)<(x'1d87'))) NOTNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)) COLLATE RTRIM WHERE (((((t0.c1)<(x'1d87'))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)<(x'1d87'))) NOTNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)) COLLATE RTRIM WHERE (((((t0.c1)<(x'1d87'))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((TRIM(DISTINCT vt0.c0))<(CASE vt0.c0  WHEN 'vZ9L' THEN rt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c0))<(CASE vt0.c0  WHEN 'vZ9L' THEN rt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((TRIM(DISTINCT vt0.c0))<(CASE vt0.c0  WHEN 'vZ9L' THEN rt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c0))<(CASE vt0.c0  WHEN 'vZ9L' THEN rt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((TRIM(DISTINCT vt0.c0))<(CASE vt0.c0  WHEN 'vZ9L' THEN rt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN (('1418892735') NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN rt0.c1 WHEN CAST(rt0.c2 AS TEXT) THEN CAST(rt0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c2 AS BLOB) THEN (('1418892735') NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN rt0.c1 WHEN CAST(rt0.c2 AS TEXT) THEN CAST(rt0.c2 AS BLOB) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN (('1418892735') NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN rt0.c1 WHEN CAST(rt0.c2 AS TEXT) THEN CAST(rt0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c2 AS BLOB) THEN (('1418892735') NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN rt0.c1 WHEN CAST(rt0.c2 AS TEXT) THEN CAST(rt0.c2 AS BLOB) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN (('1418892735') NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN rt0.c1 WHEN CAST(rt0.c2 AS TEXT) THEN CAST(rt0.c2 AS BLOB) END);
SELECT * FROM rt0, t0 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)) COLLATE NOCASE) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c0 DESC);
SELECT * FROM rt0, t0 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)) COLLATE NOCASE) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c0 DESC);
SELECT * FROM rt0, t0 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)) COLLATE NOCASE) ORDER BY t0.c0 DESC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)<<(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))))) ORDER BY ((((((((0.37557784614021383)OR(((rt0.c1) NOT BETWEEN ('1635142476') AND (rt0.c0)))))AND(TRIM(rt0.c0))))OR(rt0.c0 COLLATE RTRIM)))OR((rt0.c1 IN (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<<(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((0.37557784614021383)OR(((rt0.c1) NOT BETWEEN ('1635142476') AND (rt0.c0)))))AND(TRIM(rt0.c0))))OR(rt0.c0 COLLATE RTRIM)))OR((rt0.c1 IN (rt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)<<(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))))) ORDER BY ((((((((0.37557784614021383)OR(((rt0.c1) NOT BETWEEN ('1635142476') AND (rt0.c0)))))AND(TRIM(rt0.c0))))OR(rt0.c0 COLLATE RTRIM)))OR((rt0.c1 IN (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<<(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((0.37557784614021383)OR(((rt0.c1) NOT BETWEEN ('1635142476') AND (rt0.c0)))))AND(TRIM(rt0.c0))))OR(rt0.c0 COLLATE RTRIM)))OR((rt0.c1 IN (rt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)<<(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))))) ORDER BY ((((((((0.37557784614021383)OR(((rt0.c1) NOT BETWEEN ('1635142476') AND (rt0.c0)))))AND(TRIM(rt0.c0))))OR(rt0.c0 COLLATE RTRIM)))OR((rt0.c1 IN (rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((t0.c2) NOTNULL)) ORDER BY ((((x'')OR(LIKE(rt0.c2, t0.c2, '['))))OR(((t0.c1) IS FALSE))), (((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOTNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((x'')OR(LIKE(rt0.c2, t0.c2, '['))))OR(((t0.c1) IS FALSE))), (((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((t0.c2) NOTNULL)) ORDER BY ((((x'')OR(LIKE(rt0.c2, t0.c2, '['))))OR(((t0.c1) IS FALSE))), (((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOTNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((x'')OR(LIKE(rt0.c2, t0.c2, '['))))OR(((t0.c1) IS FALSE))), (((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((t0.c2) NOTNULL)) ORDER BY ((((x'')OR(LIKE(rt0.c2, t0.c2, '['))))OR(((t0.c1) IS FALSE))), (((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c2)) IN ());
SELECT ALL * FROM rt0, t0, vt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (t0.c2);
SELECT * FROM vt0, t0 WHERE (((((t0.c2) ISNULL))IS NOT((t0.c1 IN (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) ISNULL))IS NOT((t0.c1 IN (t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c2) ISNULL))IS NOT((t0.c1 IN (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) ISNULL))IS NOT((t0.c1 IN (t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c2) ISNULL))IS NOT((t0.c1 IN (t0.c2)))));
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (CASE WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 END THEN (- (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 END THEN (- (rt0.c0)) END) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (CASE WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 END THEN (- (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 END THEN (- (rt0.c0)) END) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (CASE WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 END THEN (- (rt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CASE NULL  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN LIKELY(DISTINCT rt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN LIKELY(DISTINCT rt0.c1) END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CASE NULL  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN LIKELY(DISTINCT rt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN LIKELY(DISTINCT rt0.c1) END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CASE NULL  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN LIKELY(DISTINCT rt0.c1) END);
SELECT * FROM vt0 INNER JOIN rt0 ON (((+ (rt0.c0)))LIKE(TRIM(DISTINCT rt0.c0))) WHERE ((((rt0.c0) NOTNULL) IN (((rt0.c2)%(rt0.c0)), 0.8924526947156655 COLLATE NOCASE))) ORDER BY (((rt0.c2)) NOT BETWEEN ((UNLIKELY(DISTINCT rt0.c1))) AND ((vt0.c0))), ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)))GLOB(((vt0.c0)|(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOTNULL) IN (((rt0.c2)%(rt0.c0)), 0.8924526947156655 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((+ (rt0.c0)))LIKE(TRIM(DISTINCT rt0.c0))) ORDER BY (((rt0.c2)) NOT BETWEEN ((UNLIKELY(DISTINCT rt0.c1))) AND ((vt0.c0))), ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)))GLOB(((vt0.c0)|(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt0 ON (((+ (rt0.c0)))LIKE(TRIM(DISTINCT rt0.c0))) WHERE ((((rt0.c0) NOTNULL) IN (((rt0.c2)%(rt0.c0)), 0.8924526947156655 COLLATE NOCASE))) ORDER BY (((rt0.c2)) NOT BETWEEN ((UNLIKELY(DISTINCT rt0.c1))) AND ((vt0.c0))), ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)))GLOB(((vt0.c0)|(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOTNULL) IN (((rt0.c2)%(rt0.c0)), 0.8924526947156655 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((+ (rt0.c0)))LIKE(TRIM(DISTINCT rt0.c0))) ORDER BY (((rt0.c2)) NOT BETWEEN ((UNLIKELY(DISTINCT rt0.c1))) AND ((vt0.c0))), ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)))GLOB(((vt0.c0)|(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt0 ON (((+ (rt0.c0)))LIKE(TRIM(DISTINCT rt0.c0))) WHERE ((((rt0.c0) NOTNULL) IN (((rt0.c2)%(rt0.c0)), 0.8924526947156655 COLLATE NOCASE))) ORDER BY (((rt0.c2)) NOT BETWEEN ((UNLIKELY(DISTINCT rt0.c1))) AND ((vt0.c0))), ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)))GLOB(((vt0.c0)|(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0 WHERE ((CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY CHAR(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) ASC  NULLS FIRST, ((((rt0.c0, t0.c0, t0.c2))>((t0.c2, t0.c0, t0.c2))) IN (t0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, t0 ORDER BY CHAR(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) ASC  NULLS FIRST, ((((rt0.c0, t0.c0, t0.c2))>((t0.c2, t0.c0, t0.c2))) IN (t0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY CHAR(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) ASC  NULLS FIRST, ((((rt0.c0, t0.c0, t0.c2))>((t0.c2, t0.c0, t0.c2))) IN (t0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, t0 ORDER BY CHAR(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) ASC  NULLS FIRST, ((((rt0.c0, t0.c0, t0.c2))>((t0.c2, t0.c0, t0.c2))) IN (t0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY CHAR(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) ASC  NULLS FIRST, ((((rt0.c0, t0.c0, t0.c2))>((t0.c2, t0.c0, t0.c2))) IN (t0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST((NOT (t0.c2)) AS NUMERIC)) ORDER BY (((t0.c1 IN ()))==((('0.7179895398269772') BETWEEN (t0.c0) AND (t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1 IN ()))=((('0.7179895398269772') BETWEEN (t0.c0) AND (t0.c2))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST((NOT (t0.c2)) AS NUMERIC)) ORDER BY (((t0.c1 IN ()))==((('0.7179895398269772') BETWEEN (t0.c0) AND (t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1 IN ()))=((('0.7179895398269772') BETWEEN (t0.c0) AND (t0.c2))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST((NOT (t0.c2)) AS NUMERIC)) ORDER BY (((t0.c1 IN ()))==((('0.7179895398269772') BETWEEN (t0.c0) AND (t0.c2))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, t0 WHERE (json_remove((~ (rt0.c0)), CASE t0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) ORDER BY ((((t0.c0)IS NOT(rt0.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_remove((~ (rt0.c0)), CASE t0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((t0.c0)IS NOT(rt0.c1))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (json_remove((~ (rt0.c0)), CASE t0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) ORDER BY ((((t0.c0)IS NOT(rt0.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_remove((~ (rt0.c0)), CASE t0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((t0.c0)IS NOT(rt0.c1))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (LTRIM(((((((((t0.c0)AND('1635142476')))AND(t0.c1)))OR(rt0.c2)))OR(rt0.c2)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((((((t0.c0)AND('1635142476')))AND(t0.c1)))OR(rt0.c2)))OR(rt0.c2)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (LTRIM(((((((((t0.c0)AND('1635142476')))AND(t0.c1)))OR(rt0.c2)))OR(rt0.c2)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((((((t0.c0)AND('1635142476')))AND(t0.c1)))OR(rt0.c2)))OR(rt0.c2)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (LTRIM(((((((((t0.c0)AND('1635142476')))AND(t0.c1)))OR(rt0.c2)))OR(rt0.c2)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0)>=('^eG[er')) IN (((vt0.c0) NOT BETWEEN (t0.c0) AND ('䖢xJZh')), ((vt0.c0)>=(t0.c2)))) WHERE (((CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN x'37b8' ELSE t0.c2 END)LIKE(CASE WHEN t0.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN x'37b8' ELSE t0.c2 END)LIKE(CASE WHEN t0.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0)>=('^eG[er')) IN (((vt0.c0) NOT BETWEEN (t0.c0) AND ('䖢xJZh')), ((vt0.c0)>=(t0.c2)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0)>=('^eG[er')) IN (((vt0.c0) NOT BETWEEN (t0.c0) AND ('䖢xJZh')), ((vt0.c0)>=(t0.c2)))) WHERE (((CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN x'37b8' ELSE t0.c2 END)LIKE(CASE WHEN t0.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN x'37b8' ELSE t0.c2 END)LIKE(CASE WHEN t0.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0)>=('^eG[er')) IN (((vt0.c0) NOT BETWEEN (t0.c0) AND ('䖢xJZh')), ((vt0.c0)>=(t0.c2)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0)>=('^eG[er')) IN (((vt0.c0) NOT BETWEEN (t0.c0) AND ('䖢xJZh')), ((vt0.c0)>=(t0.c2)))) WHERE (((CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN x'37b8' ELSE t0.c2 END)LIKE(CASE WHEN t0.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)));
SELECT * FROM vt0, rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (rt0.c1);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END) IS FALSE) DESC  NULLS LAST, (((rt0.c0 IN ())) IS TRUE)  NULLS LAST, rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END) IS FALSE) DESC  NULLS LAST, (((rt0.c0 IN ())) IS TRUE)  NULLS LAST, rt0.c2  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END) IS FALSE) DESC  NULLS LAST, (((rt0.c0 IN ())) IS TRUE)  NULLS LAST, rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END) IS FALSE) DESC  NULLS LAST, (((rt0.c0 IN ())) IS TRUE)  NULLS LAST, rt0.c2  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END) IS FALSE) DESC  NULLS LAST, (((rt0.c0 IN ())) IS TRUE)  NULLS LAST, rt0.c2  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c1))=((rt0.c2))) IN ())) ORDER BY x'691a' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1))==((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY x'691a' ASC);
SELECT * FROM rt0 WHERE (((((rt0.c1))=((rt0.c2))) IN ())) ORDER BY x'691a' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1))==((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY x'691a' ASC);
SELECT * FROM rt0 WHERE (((((rt0.c1))=((rt0.c2))) IN ())) ORDER BY x'691a' ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE ((vt0.c0)!=(rt0.c1))  WHEN (- (vt0.c0)) THEN CAST(-1171923099 AS BLOB) ELSE ((vt0.c0)LIKE(vt0.c0)) END) ORDER BY (NOT (-1304735274)) ASC  NULLS LAST, (((((rt0.c2, 0.35734434749217014, x''))>=((rt0.c2, x'', rt0.c0))))|(((rt0.c2)<=(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<>(rt0.c1))  WHEN (- (vt0.c0)) THEN CAST(-1171923099 AS BLOB) ELSE ((vt0.c0)LIKE(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (-1304735274)) ASC  NULLS LAST, (((((rt0.c2, 0.35734434749217014, x''))>=((rt0.c2, x'', rt0.c0))))|(((rt0.c2)<=(rt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE ((vt0.c0)!=(rt0.c1))  WHEN (- (vt0.c0)) THEN CAST(-1171923099 AS BLOB) ELSE ((vt0.c0)LIKE(vt0.c0)) END) ORDER BY (NOT (-1304735274)) ASC  NULLS LAST, (((((rt0.c2, 0.35734434749217014, x''))>=((rt0.c2, x'', rt0.c0))))|(((rt0.c2)<=(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<>(rt0.c1))  WHEN (- (vt0.c0)) THEN CAST(-1171923099 AS BLOB) ELSE ((vt0.c0)LIKE(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (-1304735274)) ASC  NULLS LAST, (((((rt0.c2, 0.35734434749217014, x''))>=((rt0.c2, x'', rt0.c0))))|(((rt0.c2)<=(rt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE ((vt0.c0)!=(rt0.c1))  WHEN (- (vt0.c0)) THEN CAST(-1171923099 AS BLOB) ELSE ((vt0.c0)LIKE(vt0.c0)) END) ORDER BY (NOT (-1304735274)) ASC  NULLS LAST, (((((rt0.c2, 0.35734434749217014, x''))>=((rt0.c2, x'', rt0.c0))))|(((rt0.c2)<=(rt0.c1)))) DESC  NULLS FIRST;
SELECT * FROM vt0, t0, rt0 WHERE (((((((rt0.c2, t0.c0, -689213518)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, t0.c0, vt0.c0)))))!=(((NOT (t0.c2)))))) ORDER BY rt0.c1 COLLATE NOCASE COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2, t0.c0, -689213518)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, t0.c0, vt0.c0)))))<>(((NOT (t0.c2)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY rt0.c1 COLLATE NOCASE COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt0, t0, rt0 WHERE (((((((rt0.c2, t0.c0, -689213518)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, t0.c0, vt0.c0)))))!=(((NOT (t0.c2)))))) ORDER BY rt0.c1 COLLATE NOCASE COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2, t0.c0, -689213518)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, t0.c0, vt0.c0)))))<>(((NOT (t0.c2)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY rt0.c1 COLLATE NOCASE COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt0, t0, rt0 WHERE (((((((rt0.c2, t0.c0, -689213518)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, t0.c0, vt0.c0)))))!=(((NOT (t0.c2)))))) ORDER BY rt0.c1 COLLATE NOCASE COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (t0.c0) ORDER BY ((IFNULL(rt0.c1, t0.c0)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((IFNULL(rt0.c1, t0.c0)) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (t0.c0) ORDER BY ((IFNULL(rt0.c1, t0.c0)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((IFNULL(rt0.c1, t0.c0)) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (t0.c0) ORDER BY ((IFNULL(rt0.c1, t0.c0)) ISNULL) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT 0.4648516685026759, rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT 0.4648516685026759, rt0.c1)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT 0.4648516685026759, rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT 0.4648516685026759, rt0.c1)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT 0.4648516685026759, rt0.c1));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CASE WHEN (vt0.c0 IN ()) THEN t0.c1 COLLATE BINARY ELSE CASE WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END END WHERE (((((t0.c2) IS TRUE))>(NULL))) ORDER BY (NOT (CAST(t0.c1 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS TRUE))>(NULL))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE WHEN (vt0.c0 IN ()) THEN t0.c1 COLLATE BINARY ELSE CASE WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END END ORDER BY (NOT (CAST(t0.c1 AS TEXT))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CASE WHEN (vt0.c0 IN ()) THEN t0.c1 COLLATE BINARY ELSE CASE WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END END WHERE (((((t0.c2) IS TRUE))>(NULL))) ORDER BY (NOT (CAST(t0.c1 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS TRUE))>(NULL))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE WHEN (vt0.c0 IN ()) THEN t0.c1 COLLATE BINARY ELSE CASE WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END END ORDER BY (NOT (CAST(t0.c1 AS TEXT))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CASE WHEN (vt0.c0 IN ()) THEN t0.c1 COLLATE BINARY ELSE CASE WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END END WHERE (((((t0.c2) IS TRUE))>(NULL))) ORDER BY (NOT (CAST(t0.c1 AS TEXT))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT))/((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT))/((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT))/((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT))/((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT))/((rt0.c2 IN ()))));
SELECT * FROM t0 WHERE (((((((t0.c2)OR('144227903')))AND(t0.c1))) BETWEEN (((((t0.c2)OR(t0.c2)))OR(t0.c0))) AND (((t0.c1)OR(t0.c1))))) ORDER BY (((((((((((t0.c0))=((t0.c1))))OR(t0.c0)))AND(((t0.c1)<>(t0.c2)))))AND(((t0.c0) IS FALSE))))OR(x'' COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)OR('144227903')))AND(t0.c1))) BETWEEN (((((t0.c2)OR(t0.c2)))OR(t0.c0))) AND (((t0.c1)OR(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c0))==((t0.c1))))OR(t0.c0)))AND(((t0.c1)!=(t0.c2)))))AND(((t0.c0) IS FALSE))))OR(x'' COLLATE BINARY)) DESC);
SELECT * FROM t0 WHERE (((((((t0.c2)OR('144227903')))AND(t0.c1))) BETWEEN (((((t0.c2)OR(t0.c2)))OR(t0.c0))) AND (((t0.c1)OR(t0.c1))))) ORDER BY (((((((((((t0.c0))=((t0.c1))))OR(t0.c0)))AND(((t0.c1)<>(t0.c2)))))AND(((t0.c0) IS FALSE))))OR(x'' COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)OR('144227903')))AND(t0.c1))) BETWEEN (((((t0.c2)OR(t0.c2)))OR(t0.c0))) AND (((t0.c1)OR(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c0))==((t0.c1))))OR(t0.c0)))AND(((t0.c1)!=(t0.c2)))))AND(((t0.c0) IS FALSE))))OR(x'' COLLATE BINARY)) DESC);
SELECT * FROM t0 WHERE (((((((t0.c2)OR('144227903')))AND(t0.c1))) BETWEEN (((((t0.c2)OR(t0.c2)))OR(t0.c0))) AND (((t0.c1)OR(t0.c1))))) ORDER BY (((((((((((t0.c0))=((t0.c1))))OR(t0.c0)))AND(((t0.c1)<>(t0.c2)))))AND(((t0.c0) IS FALSE))))OR(x'' COLLATE BINARY)) DESC;
SELECT ALL * FROM vt0, t0, rt0 WHERE (JULIANDAY(CASE vt0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END, ((((t0.c1)AND(t0.c1)))OR(t0.c0)), (((rt0.c0, '-1304735274', rt0.c0))>((rt0.c2, x'', rt0.c1))), t0.c0 COLLATE NOCASE, ((t0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(CASE vt0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END, ((((t0.c1)AND(t0.c1)))OR(t0.c0)), (((rt0.c0, '-1304735274', rt0.c0))>((rt0.c2, x'', rt0.c1))), t0.c0 COLLATE NOCASE, ((t0.c1) IS FALSE))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (JULIANDAY(CASE vt0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END, ((((t0.c1)AND(t0.c1)))OR(t0.c0)), (((rt0.c0, '-1304735274', rt0.c0))>((rt0.c2, x'', rt0.c1))), t0.c0 COLLATE NOCASE, ((t0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(CASE vt0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END, ((((t0.c1)AND(t0.c1)))OR(t0.c0)), (((rt0.c0, '-1304735274', rt0.c0))>((rt0.c2, x'', rt0.c1))), t0.c0 COLLATE NOCASE, ((t0.c1) IS FALSE))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (JULIANDAY(CASE vt0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END, ((((t0.c1)AND(t0.c1)))OR(t0.c0)), (((rt0.c0, '-1304735274', rt0.c0))>((rt0.c2, x'', rt0.c1))), t0.c0 COLLATE NOCASE, ((t0.c1) IS FALSE)));
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE ((t0.c2)!=(t0.c0))  WHEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c1)) THEN CASE WHEN vt0.c0 THEN t0.c0 END ELSE CAST(t0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c2)<>(t0.c0))  WHEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c1)) THEN CASE WHEN vt0.c0 THEN t0.c0 END ELSE CAST(t0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE ((t0.c2)!=(t0.c0))  WHEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c1)) THEN CASE WHEN vt0.c0 THEN t0.c0 END ELSE CAST(t0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c2)<>(t0.c0))  WHEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c1)) THEN CASE WHEN vt0.c0 THEN t0.c0 END ELSE CAST(t0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE ((t0.c2)!=(t0.c0))  WHEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c1)) THEN CASE WHEN vt0.c0 THEN t0.c0 END ELSE CAST(t0.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CASE WHEN (t0.c0 IN (t0.c1)) THEN MIN(t0.c2, vt0.c0) WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (rt0.c0)) THEN (((rt0.c1, t0.c1, t0.c1)) BETWEEN ((t0.c1, t0.c0, vt0.c0)) AND ((rt0.c2, t0.c2, rt0.c0))) WHEN ((vt0.c0)/(t0.c1)) THEN CASE WHEN t0.c1 THEN rt0.c1 ELSE vt0.c0 END ELSE (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((t0.c0, x'', t0.c1)) AND ((rt0.c0, vt0.c0, vt0.c0))) END) ORDER BY ((((rt0.c0)*(t0.c0)))<<(((((t0.c1)OR('-996633277')))AND(t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN (t0.c1)) THEN MIN(t0.c2, vt0.c0) WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (rt0.c0)) THEN (((rt0.c1, t0.c1, t0.c1)) BETWEEN ((t0.c1, t0.c0, vt0.c0)) AND ((rt0.c2, t0.c2, rt0.c0))) WHEN ((vt0.c0)/(t0.c1)) THEN CASE WHEN t0.c1 THEN rt0.c1 ELSE vt0.c0 END ELSE (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((t0.c0, x'', t0.c1)) AND ((rt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((rt0.c0)*(t0.c0)))<<(((((t0.c1)OR('-996633277')))AND(t0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CASE WHEN (t0.c0 IN (t0.c1)) THEN MIN(t0.c2, vt0.c0) WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (rt0.c0)) THEN (((rt0.c1, t0.c1, t0.c1)) BETWEEN ((t0.c1, t0.c0, vt0.c0)) AND ((rt0.c2, t0.c2, rt0.c0))) WHEN ((vt0.c0)/(t0.c1)) THEN CASE WHEN t0.c1 THEN rt0.c1 ELSE vt0.c0 END ELSE (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((t0.c0, x'', t0.c1)) AND ((rt0.c0, vt0.c0, vt0.c0))) END) ORDER BY ((((rt0.c0)*(t0.c0)))<<(((((t0.c1)OR('-996633277')))AND(t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN (t0.c1)) THEN MIN(t0.c2, vt0.c0) WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (rt0.c0)) THEN (((rt0.c1, t0.c1, t0.c1)) BETWEEN ((t0.c1, t0.c0, vt0.c0)) AND ((rt0.c2, t0.c2, rt0.c0))) WHEN ((vt0.c0)/(t0.c1)) THEN CASE WHEN t0.c1 THEN rt0.c1 ELSE vt0.c0 END ELSE (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((t0.c0, x'', t0.c1)) AND ((rt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((rt0.c0)*(t0.c0)))<<(((((t0.c1)OR('-996633277')))AND(t0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CASE WHEN (t0.c0 IN (t0.c1)) THEN MIN(t0.c2, vt0.c0) WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (rt0.c0)) THEN (((rt0.c1, t0.c1, t0.c1)) BETWEEN ((t0.c1, t0.c0, vt0.c0)) AND ((rt0.c2, t0.c2, rt0.c0))) WHEN ((vt0.c0)/(t0.c1)) THEN CASE WHEN t0.c1 THEN rt0.c1 ELSE vt0.c0 END ELSE (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((t0.c0, x'', t0.c1)) AND ((rt0.c0, vt0.c0, vt0.c0))) END) ORDER BY ((((rt0.c0)*(t0.c0)))<<(((((t0.c1)OR('-996633277')))AND(t0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((vt0.c0)>>(0.731804682451266)) AS BLOB)) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>>(0.731804682451266)) AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c1);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((vt0.c0)>>(0.731804682451266)) AS BLOB)) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>>(0.731804682451266)) AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c1);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((vt0.c0)>>(0.731804682451266)) AS BLOB)) ORDER BY t0.c1;
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CAST(rt0.c1 AS BLOB) COLLATE RTRIM INNER JOIN vt0 ON ((-34921614) NOT BETWEEN (((rt0.c0)GLOB(t0.c0))) AND ((+ (t0.c2)))) WHERE ((((NULL IN ())) BETWEEN (CAST(t0.c0 AS REAL)) AND (json_type(x'79e3'))));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) BETWEEN (CAST(t0.c0 AS REAL)) AND (json_type(x'79e3')))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CAST(rt0.c1 AS BLOB) COLLATE RTRIM INNER JOIN vt0 ON ((-34921614) NOT BETWEEN (((rt0.c0)GLOB(t0.c0))) AND ((+ (t0.c2)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CAST(rt0.c1 AS BLOB) COLLATE RTRIM INNER JOIN vt0 ON ((-34921614) NOT BETWEEN (((rt0.c0)GLOB(t0.c0))) AND ((+ (t0.c2)))) WHERE ((((NULL IN ())) BETWEEN (CAST(t0.c0 AS REAL)) AND (json_type(x'79e3'))));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) BETWEEN (CAST(t0.c0 AS REAL)) AND (json_type(x'79e3')))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CAST(rt0.c1 AS BLOB) COLLATE RTRIM INNER JOIN vt0 ON ((-34921614) NOT BETWEEN (((rt0.c0)GLOB(t0.c0))) AND ((+ (t0.c2)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CAST(rt0.c1 AS BLOB) COLLATE RTRIM INNER JOIN vt0 ON ((-34921614) NOT BETWEEN (((rt0.c0)GLOB(t0.c0))) AND ((+ (t0.c2)))) WHERE ((((NULL IN ())) BETWEEN (CAST(t0.c0 AS REAL)) AND (json_type(x'79e3'))));
SELECT * FROM t0 WHERE ((~ ((((t0.c0, t0.c1, t0.c2)) BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c0, t0.c0, t0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c0, t0.c1, t0.c2)) BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c0, t0.c0, t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ ((((t0.c0, t0.c1, t0.c2)) BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c0, t0.c0, t0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c0, t0.c1, t0.c2)) BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c0, t0.c0, t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ ((((t0.c0, t0.c1, t0.c2)) BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c0, t0.c0, t0.c2))))));
SELECT * FROM vt0, rt0, t0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c1))) COLLATE NOCASE);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((CASE WHEN rt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c0 WHEN rt0.c2 THEN 0.2070684472615676 END)OR(((((t0.c2)OR(t0.c2)))AND(t0.c0)))))OR('0.988173108059154'))) ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 END) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c0 WHEN rt0.c2 THEN 0.2070684472615676 END)OR(((((t0.c2)OR(t0.c2)))AND(t0.c0)))))OR('0.988173108059154'))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 END) ISNULL));
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((CASE WHEN rt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c0 WHEN rt0.c2 THEN 0.2070684472615676 END)OR(((((t0.c2)OR(t0.c2)))AND(t0.c0)))))OR('0.988173108059154'))) ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 END) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c0 WHEN rt0.c2 THEN 0.2070684472615676 END)OR(((((t0.c2)OR(t0.c2)))AND(t0.c0)))))OR('0.988173108059154'))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 END) ISNULL));
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((CASE WHEN rt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t0.c0 WHEN rt0.c2 THEN 0.2070684472615676 END)OR(((((t0.c2)OR(t0.c2)))AND(t0.c0)))))OR('0.988173108059154'))) ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 END) ISNULL);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN 0.05327832766119911 THEN CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END END) ORDER BY ((((t0.c2)>(t0.c2)))>((~ (t0.c1)))), ((((((t0.c2)<>(t0.c0)))AND(t0.c1 COLLATE NOCASE)))OR(((t0.c1)*(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.05327832766119911 THEN CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2)>(t0.c2)))>((~ (t0.c1)))), ((((((t0.c2)!=(t0.c0)))AND(t0.c1 COLLATE NOCASE)))OR(((t0.c1)*(t0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN 0.05327832766119911 THEN CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END END) ORDER BY ((((t0.c2)>(t0.c2)))>((~ (t0.c1)))), ((((((t0.c2)<>(t0.c0)))AND(t0.c1 COLLATE NOCASE)))OR(((t0.c1)*(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.05327832766119911 THEN CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2)>(t0.c2)))>((~ (t0.c1)))), ((((((t0.c2)!=(t0.c0)))AND(t0.c1 COLLATE NOCASE)))OR(((t0.c1)*(t0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN 0.05327832766119911 THEN CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END END) ORDER BY ((((t0.c2)>(t0.c2)))>((~ (t0.c1)))), ((((((t0.c2)<>(t0.c0)))AND(t0.c1 COLLATE NOCASE)))OR(((t0.c1)*(t0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (t0.c0) ORDER BY (((t0.c2, rt0.c0, t0.c1)) NOT BETWEEN ((t0.c0, CASE WHEN t0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN x'd2bd' END, ((((t0.c2)AND(t0.c1)))OR(vt0.c0)))) AND ((((rt0.c2)<=(t0.c2)), x'', ((rt0.c1)+(NULL))))) ASC  NULLS LAST, ((t0.c2) ISNULL) DESC  NULLS LAST, ((CASE rt0.c0  WHEN t0.c2 THEN rt0.c2 END)LIKE(t0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((t0.c2, rt0.c0, t0.c1)) NOT BETWEEN ((t0.c0, CASE WHEN t0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN x'd2bd' END, ((((t0.c2)AND(t0.c1)))OR(vt0.c0)))) AND ((((rt0.c2)<=(t0.c2)), x'', ((rt0.c1)+(NULL))))) ASC  NULLS LAST, ((t0.c2) ISNULL) DESC  NULLS LAST, ((CASE rt0.c0  WHEN t0.c2 THEN rt0.c2 END)LIKE(t0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (t0.c0) ORDER BY (((t0.c2, rt0.c0, t0.c1)) NOT BETWEEN ((t0.c0, CASE WHEN t0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN x'd2bd' END, ((((t0.c2)AND(t0.c1)))OR(vt0.c0)))) AND ((((rt0.c2)<=(t0.c2)), x'', ((rt0.c1)+(NULL))))) ASC  NULLS LAST, ((t0.c2) ISNULL) DESC  NULLS LAST, ((CASE rt0.c0  WHEN t0.c2 THEN rt0.c2 END)LIKE(t0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((t0.c2, rt0.c0, t0.c1)) NOT BETWEEN ((t0.c0, CASE WHEN t0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN x'd2bd' END, ((((t0.c2)AND(t0.c1)))OR(vt0.c0)))) AND ((((rt0.c2)<=(t0.c2)), x'', ((rt0.c1)+(NULL))))) ASC  NULLS LAST, ((t0.c2) ISNULL) DESC  NULLS LAST, ((CASE rt0.c0  WHEN t0.c2 THEN rt0.c2 END)LIKE(t0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (t0.c0) ORDER BY (((t0.c2, rt0.c0, t0.c1)) NOT BETWEEN ((t0.c0, CASE WHEN t0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN x'd2bd' END, ((((t0.c2)AND(t0.c1)))OR(vt0.c0)))) AND ((((rt0.c2)<=(t0.c2)), x'', ((rt0.c1)+(NULL))))) ASC  NULLS LAST, ((t0.c2) ISNULL) DESC  NULLS LAST, ((CASE rt0.c0  WHEN t0.c2 THEN rt0.c2 END)LIKE(t0.c2))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((IFNULL(DISTINCT rt0.c0, rt0.c0)) IS TRUE)) ORDER BY (((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((((((((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))AND(0.9632846210790359)))AND(rt0.c2)), ((vt0.c0)&(rt0.c1)), 0.6633704041521965)) AND ((rt0.c2 COLLATE RTRIM, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN '-112995626' WHEN rt0.c2 THEN rt0.c0 WHEN 0.4129910608468026 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END, (rt0.c1 IN (rt0.c2, rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt0.c0, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((((((((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))AND(0.9632846210790359)))AND(rt0.c2)), ((vt0.c0)&(rt0.c1)), 0.6633704041521965)) AND ((rt0.c2 COLLATE RTRIM, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN '-112995626' WHEN rt0.c2 THEN rt0.c0 WHEN 0.4129910608468026 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END, (rt0.c1 IN (rt0.c2, rt0.c2))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((IFNULL(DISTINCT rt0.c0, rt0.c0)) IS TRUE)) ORDER BY (((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((((((((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))AND(0.9632846210790359)))AND(rt0.c2)), ((vt0.c0)&(rt0.c1)), 0.6633704041521965)) AND ((rt0.c2 COLLATE RTRIM, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN '-112995626' WHEN rt0.c2 THEN rt0.c0 WHEN 0.4129910608468026 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END, (rt0.c1 IN (rt0.c2, rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt0.c0, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((((((((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))AND(0.9632846210790359)))AND(rt0.c2)), ((vt0.c0)&(rt0.c1)), 0.6633704041521965)) AND ((rt0.c2 COLLATE RTRIM, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN '-112995626' WHEN rt0.c2 THEN rt0.c0 WHEN 0.4129910608468026 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END, (rt0.c1 IN (rt0.c2, rt0.c2))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((IFNULL(DISTINCT rt0.c0, rt0.c0)) IS TRUE)) ORDER BY (((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((((((((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))AND(0.9632846210790359)))AND(rt0.c2)), ((vt0.c0)&(rt0.c1)), 0.6633704041521965)) AND ((rt0.c2 COLLATE RTRIM, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN '-112995626' WHEN rt0.c2 THEN rt0.c0 WHEN 0.4129910608468026 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END, (rt0.c1 IN (rt0.c2, rt0.c2))))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (((('-780930687')) BETWEEN ((NULL COLLATE RTRIM)) AND ((x''))));
SELECT SUM(count) FROM (SELECT ALL ((((('-780930687')) BETWEEN ((NULL COLLATE RTRIM)) AND ((x'')))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((('-780930687')) BETWEEN ((NULL COLLATE RTRIM)) AND ((x''))));
SELECT SUM(count) FROM (SELECT ALL ((((('-780930687')) BETWEEN ((NULL COLLATE RTRIM)) AND ((x'')))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((('-780930687')) BETWEEN ((NULL COLLATE RTRIM)) AND ((x''))));
SELECT * FROM rt0 WHERE (LIKELY(rt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LIKELY(rt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LIKELY(rt0.c0) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((CAST(t0.c2 AS REAL) IN ())) ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (((t0.c0)*(rt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c2 AS REAL) IN ())) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (((t0.c0)*(rt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((CAST(t0.c2 AS REAL) IN ())) ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (((t0.c0)*(rt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c2 AS REAL) IN ())) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (((t0.c0)*(rt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((CAST(t0.c2 AS REAL) IN ())) ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (((t0.c0)*(rt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN CAST(t0.c2 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c0 IN ()) THEN CAST(t0.c2 AS INTEGER) END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN CAST(t0.c2 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c0 IN ()) THEN CAST(t0.c2 AS INTEGER) END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN CAST(t0.c2 AS INTEGER) END);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0) IS TRUE))) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ABS(vt0.c0) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN '' WHEN 0.8500932586774876 THEN 0.5569252292159232 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ABS(vt0.c0) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN '' WHEN 0.8500932586774876 THEN 0.5569252292159232 END DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0) IS TRUE))) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ABS(vt0.c0) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN '' WHEN 0.8500932586774876 THEN 0.5569252292159232 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ABS(vt0.c0) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN '' WHEN 0.8500932586774876 THEN 0.5569252292159232 END DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0) IS TRUE))) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ABS(vt0.c0) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN '' WHEN 0.8500932586774876 THEN 0.5569252292159232 END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<>((vt0.c0))))IS NOT((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<>((vt0.c0))))IS NOT((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<>((vt0.c0))))IS NOT((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<>((vt0.c0))))IS NOT((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<>((vt0.c0))))IS NOT((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (CASE WHEN CASE WHEN t0.c1 THEN rt0.c1 WHEN rt0.c0 THEN 0.4648516685026759 WHEN t0.c0 THEN t0.c0 END THEN ((((NULL)OR(t0.c0)))AND(x'')) WHEN PRINTF(rt0.c2) THEN t0.c2 COLLATE NOCASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN rt0.c1 ELSE t0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t0.c1 THEN rt0.c1 WHEN rt0.c0 THEN 0.4648516685026759 WHEN t0.c0 THEN t0.c0 END THEN ((((NULL)OR(t0.c0)))AND(x'')) WHEN PRINTF(rt0.c2) THEN t0.c2 COLLATE NOCASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN rt0.c1 ELSE t0.c2 END) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (CASE WHEN CASE WHEN t0.c1 THEN rt0.c1 WHEN rt0.c0 THEN 0.4648516685026759 WHEN t0.c0 THEN t0.c0 END THEN ((((NULL)OR(t0.c0)))AND(x'')) WHEN PRINTF(rt0.c2) THEN t0.c2 COLLATE NOCASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN rt0.c1 ELSE t0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t0.c1 THEN rt0.c1 WHEN rt0.c0 THEN 0.4648516685026759 WHEN t0.c0 THEN t0.c0 END THEN ((((NULL)OR(t0.c0)))AND(x'')) WHEN PRINTF(rt0.c2) THEN t0.c2 COLLATE NOCASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN rt0.c1 ELSE t0.c2 END) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (CASE WHEN CASE WHEN t0.c1 THEN rt0.c1 WHEN rt0.c0 THEN 0.4648516685026759 WHEN t0.c0 THEN t0.c0 END THEN ((((NULL)OR(t0.c0)))AND(x'')) WHEN PRINTF(rt0.c2) THEN t0.c2 COLLATE NOCASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN rt0.c1 ELSE t0.c2 END);
SELECT ALL * FROM vt0 INDEXED BY i79 WHERE (((((vt0.c0)<=(vt0.c0))) IS TRUE)) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (~ (NULL)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 INDEXED BY i79 ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (~ (NULL)) END);
SELECT ALL * FROM vt0 INDEXED BY i79 WHERE (((((vt0.c0)<=(vt0.c0))) IS TRUE)) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (~ (NULL)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 INDEXED BY i79 ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (~ (NULL)) END);
SELECT * FROM vt0, rt0, t0 WHERE (IFNULL(NULLIF(DISTINCT t0.c0, rt0.c1), t0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((IFNULL(NULLIF(DISTINCT t0.c0, rt0.c1), t0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (IFNULL(NULLIF(DISTINCT t0.c0, rt0.c1), t0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((IFNULL(NULLIF(DISTINCT t0.c0, rt0.c1), t0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (IFNULL(NULLIF(DISTINCT t0.c0, rt0.c1), t0.c1 COLLATE BINARY));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (CASE 910364361  WHEN ((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)) THEN ((rt0.c2)-(rt0.c2)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 910364361  WHEN ((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)) THEN ((rt0.c2)-(rt0.c2)) ELSE x'' END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (CASE 910364361  WHEN ((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)) THEN ((rt0.c2)-(rt0.c2)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 910364361  WHEN ((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)) THEN ((rt0.c2)-(rt0.c2)) ELSE x'' END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (CASE 910364361  WHEN ((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)) THEN ((rt0.c2)-(rt0.c2)) ELSE x'' END);
SELECT * FROM vt0, t0 WHERE (CAST(((vt0.c0) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) ISNULL) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(((vt0.c0) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) ISNULL) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(((vt0.c0) ISNULL) AS REAL));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (SQLITE_COMPILEOPTION_USED(((t0.c2)<=(t0.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((t0.c2)<=(t0.c0)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (SQLITE_COMPILEOPTION_USED(((t0.c2)<=(t0.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((t0.c2)<=(t0.c0)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (SQLITE_COMPILEOPTION_USED(((t0.c2)<=(t0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY LOWER(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY LOWER(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY LOWER(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY LOWER(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY LOWER(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) DESC;
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON x'' FULL OUTER JOIN rt0 ON rt0.c0 WHERE (CASE WHEN 0.8461972066715885 THEN '1372615976' ELSE LIKELY(t0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.8461972066715885 THEN '1372615976' ELSE LIKELY(t0.c0) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON x'' FULL OUTER JOIN rt0 ON rt0.c0);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON x'' FULL OUTER JOIN rt0 ON rt0.c0 WHERE (CASE WHEN 0.8461972066715885 THEN '1372615976' ELSE LIKELY(t0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.8461972066715885 THEN '1372615976' ELSE LIKELY(t0.c0) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON x'' FULL OUTER JOIN rt0 ON rt0.c0);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON x'' FULL OUTER JOIN rt0 ON rt0.c0 WHERE (CASE WHEN 0.8461972066715885 THEN '1372615976' ELSE LIKELY(t0.c0) END);
SELECT COUNT(*) FROM t0, vt0 WHERE ((CAST(t0.c0 AS BLOB) IN (t0.c2, ((t0.c2)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS BLOB) IN (t0.c2, ((t0.c2)<>(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((CAST(t0.c0 AS BLOB) IN (t0.c2, ((t0.c2)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS BLOB) IN (t0.c2, ((t0.c2)<>(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((CAST(t0.c0 AS BLOB) IN (t0.c2, ((t0.c2)<>(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE 0.6187695958539993  WHEN t0.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE BINARY) ORDER BY (((((((rt0.c2)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1))))OR((((t0.c1))>=((rt0.c0))))))AND((t0.c2 IN (rt0.c1)))) DESC  NULLS LAST, CASE ((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))  WHEN x'' THEN ((t0.c2)>>(rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.6187695958539993  WHEN t0.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((((rt0.c2)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1))))OR((((t0.c1))>=((rt0.c0))))))AND((t0.c2 IN (rt0.c1)))) DESC  NULLS LAST, CASE ((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))  WHEN x'' THEN ((t0.c2)>>(rt0.c2)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE 0.6187695958539993  WHEN t0.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE BINARY) ORDER BY (((((((rt0.c2)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1))))OR((((t0.c1))>=((rt0.c0))))))AND((t0.c2 IN (rt0.c1)))) DESC  NULLS LAST, CASE ((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))  WHEN x'' THEN ((t0.c2)>>(rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.6187695958539993  WHEN t0.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((((rt0.c2)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1))))OR((((t0.c1))>=((rt0.c0))))))AND((t0.c2 IN (rt0.c1)))) DESC  NULLS LAST, CASE ((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))  WHEN x'' THEN ((t0.c2)>>(rt0.c2)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE 0.6187695958539993  WHEN t0.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE BINARY) ORDER BY (((((((rt0.c2)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1))))OR((((t0.c1))>=((rt0.c0))))))AND((t0.c2 IN (rt0.c1)))) DESC  NULLS LAST, CASE ((rt0.c1) BETWEEN (t0.c0) AND (t0.c0))  WHEN x'' THEN ((t0.c2)>>(rt0.c2)) END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2))) NOT NULL)) ORDER BY CAST(rt0.c2 AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 AS INTEGER)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2))) NOT NULL)) ORDER BY CAST(rt0.c2 AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 AS INTEGER)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2))) NOT NULL)) ORDER BY CAST(rt0.c2 AS INTEGER)  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY (((rt0.c1)) NOT BETWEEN (((+ (rt0.c1)))) AND (((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1)) NOT BETWEEN (((+ (rt0.c1)))) AND (((rt0.c0 IN ())))));
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY (((rt0.c1)) NOT BETWEEN (((+ (rt0.c1)))) AND (((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1)) NOT BETWEEN (((+ (rt0.c1)))) AND (((rt0.c0 IN ())))));
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY (((rt0.c1)) NOT BETWEEN (((+ (rt0.c1)))) AND (((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT * FROM t0, rt0, vt0 WHERE (((LIKELIHOOD(rt0.c2, 0.5549206600688857))/(((rt0.c2)*(rt0.c1))))) ORDER BY (((CASE WHEN t0.c1 THEN t0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE t0.c2 END, CASE WHEN 0.8478532802578956 THEN 0.13994711928761994 END, ((rt0.c2)IS(x'94e9e84f')), ((vt0.c0)GLOB(t0.c1)), (rt0.c0 IN ())))=((CAST(rt0.c2 AS TEXT), NULLIF(DISTINCT NULL, t0.c1), ((t0.c0)/(vt0.c0)), ((t0.c2)IS(t0.c0)), ((rt0.c2)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt0.c2, 0.5549206600688857))/(((rt0.c2)*(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((CASE WHEN t0.c1 THEN t0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE t0.c2 END, CASE WHEN 0.8478532802578956 THEN 0.13994711928761994 END, ((rt0.c2)IS(x'94e9e84f')), ((vt0.c0)GLOB(t0.c1)), (rt0.c0 IN ())))==((CAST(rt0.c2 AS TEXT), NULLIF(DISTINCT NULL, t0.c1), ((t0.c0)/(vt0.c0)), ((t0.c2)IS(t0.c0)), ((rt0.c2)IS(vt0.c0))))));
SELECT * FROM t0, rt0, vt0 WHERE (((LIKELIHOOD(rt0.c2, 0.5549206600688857))/(((rt0.c2)*(rt0.c1))))) ORDER BY (((CASE WHEN t0.c1 THEN t0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE t0.c2 END, CASE WHEN 0.8478532802578956 THEN 0.13994711928761994 END, ((rt0.c2)IS(x'94e9e84f')), ((vt0.c0)GLOB(t0.c1)), (rt0.c0 IN ())))=((CAST(rt0.c2 AS TEXT), NULLIF(DISTINCT NULL, t0.c1), ((t0.c0)/(vt0.c0)), ((t0.c2)IS(t0.c0)), ((rt0.c2)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt0.c2, 0.5549206600688857))/(((rt0.c2)*(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((CASE WHEN t0.c1 THEN t0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE t0.c2 END, CASE WHEN 0.8478532802578956 THEN 0.13994711928761994 END, ((rt0.c2)IS(x'94e9e84f')), ((vt0.c0)GLOB(t0.c1)), (rt0.c0 IN ())))==((CAST(rt0.c2 AS TEXT), NULLIF(DISTINCT NULL, t0.c1), ((t0.c0)/(vt0.c0)), ((t0.c2)IS(t0.c0)), ((rt0.c2)IS(vt0.c0))))));
SELECT * FROM t0, rt0, vt0 WHERE (((LIKELIHOOD(rt0.c2, 0.5549206600688857))/(((rt0.c2)*(rt0.c1))))) ORDER BY (((CASE WHEN t0.c1 THEN t0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE t0.c2 END, CASE WHEN 0.8478532802578956 THEN 0.13994711928761994 END, ((rt0.c2)IS(x'94e9e84f')), ((vt0.c0)GLOB(t0.c1)), (rt0.c0 IN ())))=((CAST(rt0.c2 AS TEXT), NULLIF(DISTINCT NULL, t0.c1), ((t0.c0)/(vt0.c0)), ((t0.c2)IS(t0.c0)), ((rt0.c2)IS(vt0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1 COLLATE RTRIM)OR(NULL)))OR(t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t0.c1 COLLATE RTRIM)OR(NULL)))OR(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1 COLLATE RTRIM)OR(NULL)))OR(t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t0.c1 COLLATE RTRIM)OR(NULL)))OR(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1 COLLATE RTRIM)OR(NULL)))OR(t0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((vt0.c0 IN (rt0.c2))) NOT NULL) CROSS JOIN t0 ON ((IFNULL(DISTINCT rt0.c0, rt0.c0)) NOT NULL) WHERE (((CAST(t0.c2 AS REAL)) NOTNULL)) ORDER BY (((((NULL)LIKE(t0.c0)), rt0.c2 COLLATE NOCASE, (~ (rt0.c0))))>((((t0.c2)-(vt0.c0)), (rt0.c2 IN ()), ABS(t0.c1)))) ASC, CASE WHEN ((t0.c1)>(rt0.c1)) THEN ((t0.c2) NOT BETWEEN (t0.c1) AND (rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS REAL)) NOTNULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((vt0.c0 IN (rt0.c2))) NOT NULL) CROSS JOIN t0 ON ((IFNULL(DISTINCT rt0.c0, rt0.c0)) NOT NULL) ORDER BY (((((NULL)LIKE(t0.c0)), rt0.c2 COLLATE NOCASE, (~ (rt0.c0))))>((((t0.c2)-(vt0.c0)), (rt0.c2 IN ()), ABS(t0.c1)))) ASC, CASE WHEN ((t0.c1)>(rt0.c1)) THEN ((t0.c2) NOT BETWEEN (t0.c1) AND (rt0.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((vt0.c0 IN (rt0.c2))) NOT NULL) CROSS JOIN t0 ON ((IFNULL(DISTINCT rt0.c0, rt0.c0)) NOT NULL) WHERE (((CAST(t0.c2 AS REAL)) NOTNULL)) ORDER BY (((((NULL)LIKE(t0.c0)), rt0.c2 COLLATE NOCASE, (~ (rt0.c0))))>((((t0.c2)-(vt0.c0)), (rt0.c2 IN ()), ABS(t0.c1)))) ASC, CASE WHEN ((t0.c1)>(rt0.c1)) THEN ((t0.c2) NOT BETWEEN (t0.c1) AND (rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS REAL)) NOTNULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((vt0.c0 IN (rt0.c2))) NOT NULL) CROSS JOIN t0 ON ((IFNULL(DISTINCT rt0.c0, rt0.c0)) NOT NULL) ORDER BY (((((NULL)LIKE(t0.c0)), rt0.c2 COLLATE NOCASE, (~ (rt0.c0))))>((((t0.c2)-(vt0.c0)), (rt0.c2 IN ()), ABS(t0.c1)))) ASC, CASE WHEN ((t0.c1)>(rt0.c1)) THEN ((t0.c2) NOT BETWEEN (t0.c1) AND (rt0.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((vt0.c0 IN (rt0.c2))) NOT NULL) CROSS JOIN t0 ON ((IFNULL(DISTINCT rt0.c0, rt0.c0)) NOT NULL) WHERE (((CAST(t0.c2 AS REAL)) NOTNULL)) ORDER BY (((((NULL)LIKE(t0.c0)), rt0.c2 COLLATE NOCASE, (~ (rt0.c0))))>((((t0.c2)-(vt0.c0)), (rt0.c2 IN ()), ABS(t0.c1)))) ASC, CASE WHEN ((t0.c1)>(rt0.c1)) THEN ((t0.c2) NOT BETWEEN (t0.c1) AND (rt0.c1)) END  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE ((+ (((t0.c2) BETWEEN (NULL) AND (0xffffffff91eb72d0)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c2) BETWEEN (NULL) AND (0xffffffff91eb72d0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((+ (((t0.c2) BETWEEN (NULL) AND (0xffffffff91eb72d0)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c2) BETWEEN (NULL) AND (0xffffffff91eb72d0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((+ (((t0.c2) BETWEEN (NULL) AND (0xffffffff91eb72d0)))));
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN t0.c2 THEN rt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c2 THEN rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN t0.c2 THEN rt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c2 THEN rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN t0.c2 THEN rt0.c0 END COLLATE BINARY);
SELECT * FROM t0 INNER JOIN vt0 ON CASE ((vt0.c0) NOTNULL)  WHEN (t0.c2 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN t0.c2 COLLATE NOCASE THEN COALESCE(t0.c2, vt0.c0) WHEN (- (t0.c2)) THEN ((t0.c0) BETWEEN (t0.c1) AND (vt0.c0)) END WHERE (((((((((t0.c0)OR('')))OR(t0.c1)))AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)>>(t0.c2))))) ORDER BY ((CASE x''  WHEN t0.c1 THEN '.女' ELSE t0.c0 END)OR(CASE WHEN NULL THEN t0.c1 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)OR('')))OR(t0.c1)))AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)>>(t0.c2))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE ((vt0.c0) NOTNULL)  WHEN (t0.c2 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN t0.c2 COLLATE NOCASE THEN COALESCE(t0.c2, vt0.c0) WHEN (- (t0.c2)) THEN ((t0.c0) BETWEEN (t0.c1) AND (vt0.c0)) END ORDER BY ((CASE x''  WHEN t0.c1 THEN '.女' ELSE t0.c0 END)OR(CASE WHEN NULL THEN t0.c1 ELSE t0.c0 END)));
SELECT * FROM t0 INNER JOIN vt0 ON CASE ((vt0.c0) NOTNULL)  WHEN (t0.c2 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN t0.c2 COLLATE NOCASE THEN COALESCE(t0.c2, vt0.c0) WHEN (- (t0.c2)) THEN ((t0.c0) BETWEEN (t0.c1) AND (vt0.c0)) END WHERE (((((((((t0.c0)OR('')))OR(t0.c1)))AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)>>(t0.c2))))) ORDER BY ((CASE x''  WHEN t0.c1 THEN '.女' ELSE t0.c0 END)OR(CASE WHEN NULL THEN t0.c1 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)OR('')))OR(t0.c1)))AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)>>(t0.c2))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE ((vt0.c0) NOTNULL)  WHEN (t0.c2 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN t0.c2 COLLATE NOCASE THEN COALESCE(t0.c2, vt0.c0) WHEN (- (t0.c2)) THEN ((t0.c0) BETWEEN (t0.c1) AND (vt0.c0)) END ORDER BY ((CASE x''  WHEN t0.c1 THEN '.女' ELSE t0.c0 END)OR(CASE WHEN NULL THEN t0.c1 ELSE t0.c0 END)));
SELECT * FROM t0 INNER JOIN vt0 ON CASE ((vt0.c0) NOTNULL)  WHEN (t0.c2 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN t0.c2 COLLATE NOCASE THEN COALESCE(t0.c2, vt0.c0) WHEN (- (t0.c2)) THEN ((t0.c0) BETWEEN (t0.c1) AND (vt0.c0)) END WHERE (((((((((t0.c0)OR('')))OR(t0.c1)))AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)>>(t0.c2))))) ORDER BY ((CASE x''  WHEN t0.c1 THEN '.女' ELSE t0.c0 END)OR(CASE WHEN NULL THEN t0.c1 ELSE t0.c0 END));
SELECT * FROM t0 WHERE ((~ (((t0.c0) NOTNULL)))) ORDER BY (((((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))OR(t0.c1)))OR(t0.c2))))<=((LENGTH(t0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))OR(t0.c1)))OR(t0.c2))))<=((LENGTH(t0.c1)))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((~ (((t0.c0) NOTNULL)))) ORDER BY (((((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))OR(t0.c1)))OR(t0.c2))))<=((LENGTH(t0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))OR(t0.c1)))OR(t0.c2))))<=((LENGTH(t0.c1)))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((~ (((t0.c0) NOTNULL)))) ORDER BY (((((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))OR(t0.c1)))OR(t0.c2))))<=((LENGTH(t0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((x'43d8')AND(rt0.c1)))OR(rt0.c1)) AS NUMERIC)) ORDER BY INSTR(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END, CASE WHEN rt0.c1 THEN rt0.c2 END), (((vt0.c0, rt0.c0, rt0.c2)) BETWEEN (((rt0.c0 IN (rt0.c1)), ((rt0.c2) IS TRUE), CASE WHEN rt0.c1 THEN rt0.c2 END)) AND ((rt0.c2 COLLATE NOCASE, ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.18755354710347372))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((x'43d8')AND(rt0.c1)))OR(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY INSTR(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END, CASE WHEN rt0.c1 THEN rt0.c2 END), (((vt0.c0, rt0.c0, rt0.c2)) BETWEEN (((rt0.c0 IN (rt0.c1)), ((rt0.c2) IS TRUE), CASE WHEN rt0.c1 THEN rt0.c2 END)) AND ((rt0.c2 COLLATE NOCASE, ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.18755354710347372))))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((x'43d8')AND(rt0.c1)))OR(rt0.c1)) AS NUMERIC)) ORDER BY INSTR(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END, CASE WHEN rt0.c1 THEN rt0.c2 END), (((vt0.c0, rt0.c0, rt0.c2)) BETWEEN (((rt0.c0 IN (rt0.c1)), ((rt0.c2) IS TRUE), CASE WHEN rt0.c1 THEN rt0.c2 END)) AND ((rt0.c2 COLLATE NOCASE, ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.18755354710347372))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((x'43d8')AND(rt0.c1)))OR(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY INSTR(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END, CASE WHEN rt0.c1 THEN rt0.c2 END), (((vt0.c0, rt0.c0, rt0.c2)) BETWEEN (((rt0.c0 IN (rt0.c1)), ((rt0.c2) IS TRUE), CASE WHEN rt0.c1 THEN rt0.c2 END)) AND ((rt0.c2 COLLATE NOCASE, ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.18755354710347372))))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((x'43d8')AND(rt0.c1)))OR(rt0.c1)) AS NUMERIC)) ORDER BY INSTR(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END, CASE WHEN rt0.c1 THEN rt0.c2 END), (((vt0.c0, rt0.c0, rt0.c2)) BETWEEN (((rt0.c0 IN (rt0.c1)), ((rt0.c2) IS TRUE), CASE WHEN rt0.c1 THEN rt0.c2 END)) AND ((rt0.c2 COLLATE NOCASE, ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.18755354710347372))))) DESC;
SELECT * FROM rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL) IS TRUE) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((CASE WHEN x'' THEN t0.c1 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE t0.c0 END)AND((((-1.12995626E8))<=((t0.c0))))))OR(CAST(x'' AS TEXT)))) ORDER BY (- (((t0.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN x'' THEN t0.c1 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE t0.c0 END)AND((((-1.12995626E8))<=((t0.c0))))))OR(CAST(x'' AS TEXT)))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, rt0 ORDER BY (- (((t0.c1) NOTNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((CASE WHEN x'' THEN t0.c1 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE t0.c0 END)AND((((-1.12995626E8))<=((t0.c0))))))OR(CAST(x'' AS TEXT)))) ORDER BY (- (((t0.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN x'' THEN t0.c1 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE t0.c0 END)AND((((-1.12995626E8))<=((t0.c0))))))OR(CAST(x'' AS TEXT)))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, rt0 ORDER BY (- (((t0.c1) NOTNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((CASE WHEN x'' THEN t0.c1 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE t0.c0 END)AND((((-1.12995626E8))<=((t0.c0))))))OR(CAST(x'' AS TEXT)))) ORDER BY (- (((t0.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)%((+ (0xffffffff95fd09c0))))) ORDER BY IFNULL(DISTINCT (vt0.c0 IN ('-1066767838')), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)%((+ (0xffffffff95fd09c0))))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(DISTINCT (vt0.c0 IN ('-1066767838')), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)%((+ (0xffffffff95fd09c0))))) ORDER BY IFNULL(DISTINCT (vt0.c0 IN ('-1066767838')), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)%((+ (0xffffffff95fd09c0))))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(DISTINCT (vt0.c0 IN ('-1066767838')), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)%((+ (0xffffffff95fd09c0))))) ORDER BY IFNULL(DISTINCT (vt0.c0 IN ('-1066767838')), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '-1819963709' THEN rtreenode(t0.c1, t0.c2) WHEN ((t0.c2)<<(t0.c2)) THEN vt0.c0 WHEN (t0.c0 IN (t0.c0)) THEN ((vt0.c0) ISNULL) ELSE (vt0.c0 IN (vt0.c0)) END) ORDER BY ((t0.c1)/(t0.c0)) COLLATE NOCASE COLLATE NOCASE, (NOT (t0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '-1819963709' THEN rtreenode(t0.c1, t0.c2) WHEN ((t0.c2)<<(t0.c2)) THEN vt0.c0 WHEN (t0.c0 IN (t0.c0)) THEN ((vt0.c0) ISNULL) ELSE (vt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c1)/(t0.c0)) COLLATE NOCASE COLLATE NOCASE, (NOT (t0.c0 COLLATE BINARY)) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '-1819963709' THEN rtreenode(t0.c1, t0.c2) WHEN ((t0.c2)<<(t0.c2)) THEN vt0.c0 WHEN (t0.c0 IN (t0.c0)) THEN ((vt0.c0) ISNULL) ELSE (vt0.c0 IN (vt0.c0)) END) ORDER BY ((t0.c1)/(t0.c0)) COLLATE NOCASE COLLATE NOCASE, (NOT (t0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '-1819963709' THEN rtreenode(t0.c1, t0.c2) WHEN ((t0.c2)<<(t0.c2)) THEN vt0.c0 WHEN (t0.c0 IN (t0.c0)) THEN ((vt0.c0) ISNULL) ELSE (vt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c1)/(t0.c0)) COLLATE NOCASE COLLATE NOCASE, (NOT (t0.c0 COLLATE BINARY)) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN '-1819963709' THEN rtreenode(t0.c1, t0.c2) WHEN ((t0.c2)<<(t0.c2)) THEN vt0.c0 WHEN (t0.c0 IN (t0.c0)) THEN ((vt0.c0) ISNULL) ELSE (vt0.c0 IN (vt0.c0)) END) ORDER BY ((t0.c1)/(t0.c0)) COLLATE NOCASE COLLATE NOCASE, (NOT (t0.c0 COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON ((x'bfab')IS NOT(((x'') IS TRUE))) WHERE (((CAST(t0.c1 AS INTEGER)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS INTEGER)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((x'bfab')IS NOT(((x'') IS TRUE))));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON ((x'bfab')IS NOT(((x'') IS TRUE))) WHERE (((CAST(t0.c1 AS INTEGER)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS INTEGER)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((x'bfab')IS NOT(((x'') IS TRUE))));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON ((x'bfab')IS NOT(((x'') IS TRUE))) WHERE (((CAST(t0.c1 AS INTEGER)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) IS FALSE))));
SELECT * FROM t0, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0)>=(0.8611151881609185)) IN ()) WHERE (t0.c0) ORDER BY '[^6(2	Q&Y', (~ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0))))  NULLS LAST, t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0)>=(0.8611151881609185)) IN ()) ORDER BY '[^6(2	Q&Y', (~ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0))))  NULLS LAST, t0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0)>=(0.8611151881609185)) IN ()) WHERE (t0.c0) ORDER BY '[^6(2	Q&Y', (~ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0))))  NULLS LAST, t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0)>=(0.8611151881609185)) IN ()) ORDER BY '[^6(2	Q&Y', (~ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0))))  NULLS LAST, t0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0)>=(0.8611151881609185)) IN ()) WHERE (t0.c0) ORDER BY '[^6(2	Q&Y', (~ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0))))  NULLS LAST, t0.c0 ASC;
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c1 END) BETWEEN (0.9271219381580691) AND (COALESCE(DISTINCT t0.c2, t0.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c2 THEN t0.c1 END) BETWEEN (0.9271219381580691) AND (COALESCE(DISTINCT t0.c2, t0.c2)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c1 END) BETWEEN (0.9271219381580691) AND (COALESCE(DISTINCT t0.c2, t0.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c2 THEN t0.c1 END) BETWEEN (0.9271219381580691) AND (COALESCE(DISTINCT t0.c2, t0.c2)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c1 END) BETWEEN (0.9271219381580691) AND (COALESCE(DISTINCT t0.c2, t0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((('砀F') NOT BETWEEN (vt0.c0) AND (rt0.c1)))&(rt0.c0 COLLATE NOCASE))) ORDER BY LOWER(json_type(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('砀F') NOT BETWEEN (vt0.c0) AND (rt0.c1)))&(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY LOWER(json_type(vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((('砀F') NOT BETWEEN (vt0.c0) AND (rt0.c1)))&(rt0.c0 COLLATE NOCASE))) ORDER BY LOWER(json_type(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('砀F') NOT BETWEEN (vt0.c0) AND (rt0.c1)))&(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY LOWER(json_type(vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON UNLIKELY(DISTINCT ABS(DISTINCT rt0.c1)) WHERE ((((rt0.c2) NOT NULL) IN ())) ORDER BY CAST(((rt0.c0)+(rt0.c2)) AS TEXT)  NULLS LAST, ((rt0.c1) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT NULL) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON UNLIKELY(DISTINCT ABS(DISTINCT rt0.c1)) ORDER BY CAST(((rt0.c0)+(rt0.c2)) AS TEXT)  NULLS LAST, ((rt0.c1) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (rt0.c1))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON UNLIKELY(DISTINCT ABS(DISTINCT rt0.c1)) WHERE ((((rt0.c2) NOT NULL) IN ())) ORDER BY CAST(((rt0.c0)+(rt0.c2)) AS TEXT)  NULLS LAST, ((rt0.c1) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT NULL) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON UNLIKELY(DISTINCT ABS(DISTINCT rt0.c1)) ORDER BY CAST(((rt0.c0)+(rt0.c2)) AS TEXT)  NULLS LAST, ((rt0.c1) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (rt0.c1))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON UNLIKELY(DISTINCT ABS(DISTINCT rt0.c1)) WHERE ((((rt0.c2) NOT NULL) IN ())) ORDER BY CAST(((rt0.c0)+(rt0.c2)) AS TEXT)  NULLS LAST, ((rt0.c1) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 END) AND (rt0.c1))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c1)>>(t0.c1))) NOT BETWEEN (103617745 COLLATE RTRIM) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>>(t0.c1))) NOT BETWEEN (103617745 COLLATE RTRIM) AND (t0.c0))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c1)>>(t0.c1))) NOT BETWEEN (103617745 COLLATE RTRIM) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>>(t0.c1))) NOT BETWEEN (103617745 COLLATE RTRIM) AND (t0.c0))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c1)>>(t0.c1))) NOT BETWEEN (103617745 COLLATE RTRIM) AND (t0.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1)))||(((NULL) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c1)))||(((NULL) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1)))||(((NULL) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c1)))||(((NULL) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1)))||(((NULL) NOT NULL))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (0.35340277089701055) AND (x'5a52')))|((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0)))))) ORDER BY (((((((((vt0.c0 IN (rt0.c1)))AND(((rt0.c0)%(rt0.c2)))))OR(((t0.c2) IS FALSE))))OR(((t0.c0)IS NOT(NULL)))))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)), (LOWER(rt0.c1) IN ()) ASC, CAST(t0.c0 AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (0.35340277089701055) AND (x'5a52')))|((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((((((vt0.c0 IN (rt0.c1)))AND(((rt0.c0)%(rt0.c2)))))OR(((t0.c2) IS FALSE))))OR(((t0.c0)IS NOT(NULL)))))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)), (LOWER(rt0.c1) IN ()) ASC, CAST(t0.c0 AS BLOB));
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (0.35340277089701055) AND (x'5a52')))|((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0)))))) ORDER BY (((((((((vt0.c0 IN (rt0.c1)))AND(((rt0.c0)%(rt0.c2)))))OR(((t0.c2) IS FALSE))))OR(((t0.c0)IS NOT(NULL)))))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)), (LOWER(rt0.c1) IN ()) ASC, CAST(t0.c0 AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (0.35340277089701055) AND (x'5a52')))|((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((((((vt0.c0 IN (rt0.c1)))AND(((rt0.c0)%(rt0.c2)))))OR(((t0.c2) IS FALSE))))OR(((t0.c0)IS NOT(NULL)))))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)), (LOWER(rt0.c1) IN ()) ASC, CAST(t0.c0 AS BLOB));
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (0.35340277089701055) AND (x'5a52')))|((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0)))))) ORDER BY (((((((((vt0.c0 IN (rt0.c1)))AND(((rt0.c0)%(rt0.c2)))))OR(((t0.c2) IS FALSE))))OR(((t0.c0)IS NOT(NULL)))))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)), (LOWER(rt0.c1) IN ()) ASC, CAST(t0.c0 AS BLOB);
SELECT * FROM rt0 WHERE (((((((rt0.c0) IS FALSE))AND(highlight(rt0.c0, rt0.c1, rt0.c0, rt0.c2))))OR((((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c1, rt0.c0, rt0.c2)))))) ORDER BY (((UNICODE(rt0.c2)))<((((rt0.c2)|(rt0.c2))))) DESC, LOWER(((rt0.c2) IS FALSE)) DESC, (~ (CAST(rt0.c1 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) IS FALSE))AND(highlight(rt0.c0, rt0.c1, rt0.c0, rt0.c2))))OR((((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c1, rt0.c0, rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (((UNICODE(rt0.c2)))<((((rt0.c2)|(rt0.c2))))) DESC, LOWER(((rt0.c2) IS FALSE)) DESC, (~ (CAST(rt0.c1 AS NUMERIC))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((rt0.c0) IS FALSE))AND(highlight(rt0.c0, rt0.c1, rt0.c0, rt0.c2))))OR((((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c1, rt0.c0, rt0.c2)))))) ORDER BY (((UNICODE(rt0.c2)))<((((rt0.c2)|(rt0.c2))))) DESC, LOWER(((rt0.c2) IS FALSE)) DESC, (~ (CAST(rt0.c1 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) IS FALSE))AND(highlight(rt0.c0, rt0.c1, rt0.c0, rt0.c2))))OR((((rt0.c2, rt0.c2, rt0.c0))>=((rt0.c1, rt0.c0, rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (((UNICODE(rt0.c2)))<((((rt0.c2)|(rt0.c2))))) DESC, LOWER(((rt0.c2) IS FALSE)) DESC, (~ (CAST(rt0.c1 AS NUMERIC))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((('')) BETWEEN ((NULL)) AND ((t0.c2))))<(((t0.c2) BETWEEN (NULL) AND (t0.c2))))) ORDER BY -761864921 ASC, ((GLOB(t0.c2, t0.c0))IS(((((t0.c1)AND(t0.c2)))OR(t0.c0))))  NULLS FIRST, x'b7b4' COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('')) BETWEEN ((NULL)) AND ((t0.c2))))<(((t0.c2) BETWEEN (NULL) AND (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY -761864921 ASC, ((GLOB(t0.c2, t0.c0))IS(((((t0.c1)AND(t0.c2)))OR(t0.c0))))  NULLS FIRST, x'b7b4' COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((('')) BETWEEN ((NULL)) AND ((t0.c2))))<(((t0.c2) BETWEEN (NULL) AND (t0.c2))))) ORDER BY -761864921 ASC, ((GLOB(t0.c2, t0.c0))IS(((((t0.c1)AND(t0.c2)))OR(t0.c0))))  NULLS FIRST, x'b7b4' COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('')) BETWEEN ((NULL)) AND ((t0.c2))))<(((t0.c2) BETWEEN (NULL) AND (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY -761864921 ASC, ((GLOB(t0.c2, t0.c0))IS(((((t0.c1)AND(t0.c2)))OR(t0.c0))))  NULLS FIRST, x'b7b4' COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS TEXT) THEN (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS TEXT) THEN (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c2 IN ()))<(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ()))<(t0.c1))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c2 IN ()))<(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ()))<(t0.c1))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c2 IN ()))<(t0.c1)));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE (+ (t0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN ((t0.c0)<(t0.c2)) END WHERE (CAST(UPPER(t0.c1) AS REAL)) ORDER BY ((CAST(vt0.c0 AS TEXT))*((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(t0.c1) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE (+ (t0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN ((t0.c0)<(t0.c2)) END ORDER BY ((CAST(vt0.c0 AS TEXT))*((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE (+ (t0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN ((t0.c0)<(t0.c2)) END WHERE (CAST(UPPER(t0.c1) AS REAL)) ORDER BY ((CAST(vt0.c0 AS TEXT))*((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(t0.c1) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE (+ (t0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN ((t0.c0)<(t0.c2)) END ORDER BY ((CAST(vt0.c0 AS TEXT))*((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE (+ (t0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN ((t0.c0)<(t0.c2)) END WHERE (CAST(UPPER(t0.c1) AS REAL)) ORDER BY ((CAST(vt0.c0 AS TEXT))*((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT * FROM rt0, vt0, t0 WHERE (x'06c6');
SELECT SUM(count) FROM (SELECT ALL ((x'06c6') IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (x'06c6');
SELECT SUM(count) FROM (SELECT ALL ((x'06c6') IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (x'06c6');
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c2) NOT NULL))&(((((((((t0.c1)OR(t0.c1)))AND(vt0.c0)))AND(t0.c1)))AND(t0.c2)))) WHERE ((((((((((t0.c0 IN ()))AND((+ (t0.c0)))))OR(((t0.c2)-(vt0.c0)))))OR(((t0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)))))OR((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c0 IN ()))AND((+ (t0.c0)))))OR(((t0.c2)-(vt0.c0)))))OR(((t0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)))))OR((t0.c0 IN ())))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c2) NOT NULL))&(((((((((t0.c1)OR(t0.c1)))AND(vt0.c0)))AND(t0.c1)))AND(t0.c2)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c2) NOT NULL))&(((((((((t0.c1)OR(t0.c1)))AND(vt0.c0)))AND(t0.c1)))AND(t0.c2)))) WHERE ((((((((((t0.c0 IN ()))AND((+ (t0.c0)))))OR(((t0.c2)-(vt0.c0)))))OR(((t0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)))))OR((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c0 IN ()))AND((+ (t0.c0)))))OR(((t0.c2)-(vt0.c0)))))OR(((t0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)))))OR((t0.c0 IN ())))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c2) NOT NULL))&(((((((((t0.c1)OR(t0.c1)))AND(vt0.c0)))AND(t0.c1)))AND(t0.c2)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c2) NOT NULL))&(((((((((t0.c1)OR(t0.c1)))AND(vt0.c0)))AND(t0.c1)))AND(t0.c2)))) WHERE ((((((((((t0.c0 IN ()))AND((+ (t0.c0)))))OR(((t0.c2)-(vt0.c0)))))OR(((t0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)))))OR((t0.c0 IN ()))));
SELECT ALL * FROM t0, vt0 WHERE ((~ ((- (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (t0.c2))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((~ ((- (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (t0.c2))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((~ ((- (t0.c2)))));
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((NOT (vt0.c0)))))OR(((vt0.c0) NOTNULL)))) ORDER BY (((CAST(vt0.c0 AS BLOB)))==((((vt0.c0)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((NOT (vt0.c0)))))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS BLOB)))==((((vt0.c0)==(vt0.c0))))));
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((NOT (vt0.c0)))))OR(((vt0.c0) NOTNULL)))) ORDER BY (((CAST(vt0.c0 AS BLOB)))==((((vt0.c0)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((NOT (vt0.c0)))))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS BLOB)))==((((vt0.c0)==(vt0.c0))))));
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((NOT (vt0.c0)))))OR(((vt0.c0) NOTNULL)))) ORDER BY (((CAST(vt0.c0 AS BLOB)))==((((vt0.c0)=(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))<=(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(vt0.c0)))<=(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))<=(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(vt0.c0)))<=(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))<=(CAST(vt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))-(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))-(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))-(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))-(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))-(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((~ (CAST('cC' AS TEXT))));
SELECT SUM(count) FROM (SELECT (((~ (CAST('cC' AS TEXT)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((~ (CAST('cC' AS TEXT))));
SELECT SUM(count) FROM (SELECT (((~ (CAST('cC' AS TEXT)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((~ (CAST('cC' AS TEXT))));
SELECT * FROM vt0, t0 WHERE (((((t0.c2)<(vt0.c0)))-(CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)<(vt0.c0)))-(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c2)<(vt0.c0)))-(CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)<(vt0.c0)))-(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c2)<(vt0.c0)))-(CAST(t0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((vt0.c0) BETWEEN ('0') AND (vt0.c0))) AND (((vt0.c0)+(vt0.c0))))) ORDER BY (- (((vt0.c0) IS FALSE))) ASC, (((- (vt0.c0)))==(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (((vt0.c0) BETWEEN ('0') AND (vt0.c0))) AND (((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) IS FALSE))) ASC, (((- (vt0.c0)))==(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((vt0.c0) BETWEEN ('0') AND (vt0.c0))) AND (((vt0.c0)+(vt0.c0))))) ORDER BY (- (((vt0.c0) IS FALSE))) ASC, (((- (vt0.c0)))==(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (((vt0.c0) BETWEEN ('0') AND (vt0.c0))) AND (((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) IS FALSE))) ASC, (((- (vt0.c0)))==(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((vt0.c0) BETWEEN ('0') AND (vt0.c0))) AND (((vt0.c0)+(vt0.c0))))) ORDER BY (- (((vt0.c0) IS FALSE))) ASC, (((- (vt0.c0)))==(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT * FROM t0, vt0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (((((((((((((((t0.c1)OR(t0.c2)))AND(rt0.c2)))OR('910364361')))AND(vt0.c0)))OR(t0.c2)))AND(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c1)OR(t0.c2)))AND(rt0.c2)))OR('910364361')))AND(vt0.c0)))OR(t0.c2)))AND(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON rt0.c1);
SELECT * FROM t0, vt0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (((((((((((((((t0.c1)OR(t0.c2)))AND(rt0.c2)))OR('910364361')))AND(vt0.c0)))OR(t0.c2)))AND(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c1)OR(t0.c2)))AND(rt0.c2)))OR('910364361')))AND(vt0.c0)))OR(t0.c2)))AND(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON rt0.c1);
SELECT * FROM t0, vt0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (((((((((((((((t0.c1)OR(t0.c2)))AND(rt0.c2)))OR('910364361')))AND(vt0.c0)))OR(t0.c2)))AND(t0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c2 IN ())))>=((((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(0.5900179789626875))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN ())))>=((((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(0.5900179789626875)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c2 IN ())))>=((((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(0.5900179789626875))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN ())))>=((((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(0.5900179789626875)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c2 IN ())))>=((((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(0.5900179789626875))))));
SELECT * FROM vt0 WHERE (0.4275517989606974) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (0.9072848933116926) AND ((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.4275517989606974) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (0.9072848933116926) AND ((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (0.4275517989606974) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (0.9072848933116926) AND ((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.4275517989606974) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (0.9072848933116926) AND ((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (0.4275517989606974) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (0.9072848933116926) AND ((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((('7' IN ()))OR(((((t0.c1)OR(vt0.c0)))OR(vt0.c0)))))AND(((t0.c0)==(t0.c1))))) ORDER BY (((((((((((t0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(NULL)))AND(t0.c0))))<=((((t0.c2)<=(vt0.c0)))))  NULLS FIRST, '-938106819' ASC  NULLS LAST, ((((((((((t0.c0) BETWEEN ('') AND (t0.c2)))AND((vt0.c0 IN ()))))OR((~ (t0.c1)))))OR(t0.c2)))AND((((t0.c1, t0.c1, t0.c2))<>((t0.c2, vt0.c0, t0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((('7' IN ()))OR(((((t0.c1)OR(vt0.c0)))OR(vt0.c0)))))AND(((t0.c0)=(t0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((((((t0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(NULL)))AND(t0.c0))))<=((((t0.c2)<=(vt0.c0)))))  NULLS FIRST, '-938106819' ASC  NULLS LAST, ((((((((((t0.c0) BETWEEN ('') AND (t0.c2)))AND((vt0.c0 IN ()))))OR((~ (t0.c1)))))OR(t0.c2)))AND((((t0.c1, t0.c1, t0.c2))<>((t0.c2, vt0.c0, t0.c1))))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((('7' IN ()))OR(((((t0.c1)OR(vt0.c0)))OR(vt0.c0)))))AND(((t0.c0)==(t0.c1))))) ORDER BY (((((((((((t0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(NULL)))AND(t0.c0))))<=((((t0.c2)<=(vt0.c0)))))  NULLS FIRST, '-938106819' ASC  NULLS LAST, ((((((((((t0.c0) BETWEEN ('') AND (t0.c2)))AND((vt0.c0 IN ()))))OR((~ (t0.c1)))))OR(t0.c2)))AND((((t0.c1, t0.c1, t0.c2))<>((t0.c2, vt0.c0, t0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((('7' IN ()))OR(((((t0.c1)OR(vt0.c0)))OR(vt0.c0)))))AND(((t0.c0)=(t0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((((((t0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(NULL)))AND(t0.c0))))<=((((t0.c2)<=(vt0.c0)))))  NULLS FIRST, '-938106819' ASC  NULLS LAST, ((((((((((t0.c0) BETWEEN ('') AND (t0.c2)))AND((vt0.c0 IN ()))))OR((~ (t0.c1)))))OR(t0.c2)))AND((((t0.c1, t0.c1, t0.c2))<>((t0.c2, vt0.c0, t0.c1))))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((('7' IN ()))OR(((((t0.c1)OR(vt0.c0)))OR(vt0.c0)))))AND(((t0.c0)==(t0.c1))))) ORDER BY (((((((((((t0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(NULL)))AND(t0.c0))))<=((((t0.c2)<=(vt0.c0)))))  NULLS FIRST, '-938106819' ASC  NULLS LAST, ((((((((((t0.c0) BETWEEN ('') AND (t0.c2)))AND((vt0.c0 IN ()))))OR((~ (t0.c1)))))OR(t0.c2)))AND((((t0.c1, t0.c1, t0.c2))<>((t0.c2, vt0.c0, t0.c1))))) DESC;
SELECT * FROM rt0 WHERE (x'') ORDER BY ((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)<=(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)<=(rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (x'') ORDER BY ((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)<=(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)<=(rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (x'') ORDER BY ((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)<=(rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(PRINTF(rt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(PRINTF(rt0.c0) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(PRINTF(rt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(PRINTF(rt0.c0) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(PRINTF(rt0.c0) AS INTEGER));
SELECT * FROM t0, vt0 WHERE ((CASE WHEN t0.c2 THEN 1362450334 ELSE t0.c2 END IN ())) ORDER BY ((((((t0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))==((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c2 THEN 1362450334 ELSE t0.c2 END IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))=((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END))));
SELECT * FROM t0, vt0 WHERE ((CASE WHEN t0.c2 THEN 1362450334 ELSE t0.c2 END IN ())) ORDER BY ((((((t0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))==((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c2 THEN 1362450334 ELSE t0.c2 END IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))=((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END))));
SELECT * FROM t0, vt0 WHERE ((CASE WHEN t0.c2 THEN 1362450334 ELSE t0.c2 END IN ())) ORDER BY ((((((t0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))==((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON rt0.c2 FULL OUTER JOIN rt0 ON (~ ((NOT (rt0.c1)))) WHERE ((((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(t0.c2)))AND(vt0.c0)))AND(t0.c1)))AND(vt0.c0)), SQLITE_COMPILEOPTION_GET(rt0.c0), CAST(rt0.c1 AS TEXT)))>=((CASE t0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(t0.c2 AS BLOB), ((t0.c1)OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(t0.c2)))AND(vt0.c0)))AND(t0.c1)))AND(vt0.c0)), SQLITE_COMPILEOPTION_GET(rt0.c0), CAST(rt0.c1 AS TEXT)))>=((CASE t0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(t0.c2 AS BLOB), ((t0.c1)OR(vt0.c0)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON rt0.c2 FULL OUTER JOIN rt0 ON (~ ((NOT (rt0.c1)))));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON rt0.c2 FULL OUTER JOIN rt0 ON (~ ((NOT (rt0.c1)))) WHERE ((((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(t0.c2)))AND(vt0.c0)))AND(t0.c1)))AND(vt0.c0)), SQLITE_COMPILEOPTION_GET(rt0.c0), CAST(rt0.c1 AS TEXT)))>=((CASE t0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(t0.c2 AS BLOB), ((t0.c1)OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(t0.c2)))AND(vt0.c0)))AND(t0.c1)))AND(vt0.c0)), SQLITE_COMPILEOPTION_GET(rt0.c0), CAST(rt0.c1 AS TEXT)))>=((CASE t0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(t0.c2 AS BLOB), ((t0.c1)OR(vt0.c0)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON rt0.c2 FULL OUTER JOIN rt0 ON (~ ((NOT (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0) BETWEEN (((vt0.c0) NOTNULL)) AND (-1.876104041E9))) ORDER BY 0.34437443789448574;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((vt0.c0) NOTNULL)) AND (-1.876104041E9))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.34437443789448574);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0) BETWEEN (((vt0.c0) NOTNULL)) AND (-1.876104041E9))) ORDER BY 0.34437443789448574;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((vt0.c0) NOTNULL)) AND (-1.876104041E9))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.34437443789448574);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0) BETWEEN (((vt0.c0) NOTNULL)) AND (-1.876104041E9))) ORDER BY 0.34437443789448574;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((vt0.c0)GLOB(CASE WHEN rt0.c1 THEN '\' ELSE rt0.c1 END))) ORDER BY (+ ((~ (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)GLOB(CASE WHEN rt0.c1 THEN '\' ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (+ ((~ (rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((vt0.c0)GLOB(CASE WHEN rt0.c1 THEN '\' ELSE rt0.c1 END))) ORDER BY (+ ((~ (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)GLOB(CASE WHEN rt0.c1 THEN '\' ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (+ ((~ (rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((vt0.c0)GLOB(CASE WHEN rt0.c1 THEN '\' ELSE rt0.c1 END))) ORDER BY (+ ((~ (rt0.c1)))) DESC;
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((t0.c1)OR(t0.c2)))OR(vt0.c0))))!=((((t0.c1)!=(vt0.c0)))))) ORDER BY ((((vt0.c0)*(t0.c2)))<=((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c1)OR(t0.c2)))OR(vt0.c0))))!=((((t0.c1)!=(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)*(t0.c2)))<=((t0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((t0.c1)OR(t0.c2)))OR(vt0.c0))))!=((((t0.c1)!=(vt0.c0)))))) ORDER BY ((((vt0.c0)*(t0.c2)))<=((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c1)OR(t0.c2)))OR(vt0.c0))))!=((((t0.c1)!=(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)*(t0.c2)))<=((t0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((t0.c1)OR(t0.c2)))OR(vt0.c0))))!=((((t0.c1)!=(vt0.c0)))))) ORDER BY ((((vt0.c0)*(t0.c2)))<=((t0.c0 IN ()))) ASC;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 NOT INDEXED NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 NOT INDEXED NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (x'');
SELECT ALL * FROM t0 WHERE ((((t0.c2)GLOB(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c2)GLOB(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c2)GLOB(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c2)GLOB(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c2)GLOB(t0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON ((CASE WHEN t0.c0 THEN t0.c1 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END) AND (((t0.c0)||(t0.c0)))) WHERE (((((rt0.c1)%(t0.c1))) NOT BETWEEN ((vt0.c0 IN (t0.c0))) AND (NULLIF(t0.c0, rt0.c0)))) ORDER BY ((rt0.c2) ISNULL)  NULLS FIRST, CAST(CAST(NULL AS TEXT) AS NUMERIC), CASE 0.14472890887732026  WHEN -1842415295 THEN rt0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)%(t0.c1))) NOT BETWEEN ((vt0.c0 IN (t0.c0))) AND (NULLIF(t0.c0, rt0.c0)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON ((CASE WHEN t0.c0 THEN t0.c1 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END) AND (((t0.c0)||(t0.c0)))) ORDER BY ((rt0.c2) ISNULL)  NULLS FIRST, CAST(CAST(NULL AS TEXT) AS NUMERIC), CASE 0.14472890887732026  WHEN -1842415295 THEN rt0.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON ((CASE WHEN t0.c0 THEN t0.c1 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END) AND (((t0.c0)||(t0.c0)))) WHERE (((((rt0.c1)%(t0.c1))) NOT BETWEEN ((vt0.c0 IN (t0.c0))) AND (NULLIF(t0.c0, rt0.c0)))) ORDER BY ((rt0.c2) ISNULL)  NULLS FIRST, CAST(CAST(NULL AS TEXT) AS NUMERIC), CASE 0.14472890887732026  WHEN -1842415295 THEN rt0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)%(t0.c1))) NOT BETWEEN ((vt0.c0 IN (t0.c0))) AND (NULLIF(t0.c0, rt0.c0)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON ((CASE WHEN t0.c0 THEN t0.c1 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END) AND (((t0.c0)||(t0.c0)))) ORDER BY ((rt0.c2) ISNULL)  NULLS FIRST, CAST(CAST(NULL AS TEXT) AS NUMERIC), CASE 0.14472890887732026  WHEN -1842415295 THEN rt0.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON ((CASE WHEN t0.c0 THEN t0.c1 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END) AND (((t0.c0)||(t0.c0)))) WHERE (((((rt0.c1)%(t0.c1))) NOT BETWEEN ((vt0.c0 IN (t0.c0))) AND (NULLIF(t0.c0, rt0.c0)))) ORDER BY ((rt0.c2) ISNULL)  NULLS FIRST, CAST(CAST(NULL AS TEXT) AS NUMERIC), CASE 0.14472890887732026  WHEN -1842415295 THEN rt0.c0 COLLATE RTRIM END;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((t0.c2)AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2)AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((t0.c2)AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2)AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((t0.c2)AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))) ORDER BY rt0.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0)-(t0.c0)) IN ()) WHERE ((((t0.c2)) NOT BETWEEN (((t0.c2 IN ()))) AND ((301714128)))) ORDER BY CASE WHEN ((t0.c2) IS FALSE) THEN x'2d62' WHEN ((0.03331502403877529)OR(t0.c2)) THEN ((t0.c2)<=(0.6633704041521965)) WHEN CAST(t0.c1 AS BLOB) THEN ((t0.c1)<(t0.c0)) ELSE ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN (((t0.c2 IN ()))) AND ((301714128)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0)-(t0.c0)) IN ()) ORDER BY CASE WHEN ((t0.c2) IS FALSE) THEN x'2d62' WHEN ((0.03331502403877529)OR(t0.c2)) THEN ((t0.c2)<=(0.6633704041521965)) WHEN CAST(t0.c1 AS BLOB) THEN ((t0.c1)<(t0.c0)) ELSE ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0)-(t0.c0)) IN ()) WHERE ((((t0.c2)) NOT BETWEEN (((t0.c2 IN ()))) AND ((301714128)))) ORDER BY CASE WHEN ((t0.c2) IS FALSE) THEN x'2d62' WHEN ((0.03331502403877529)OR(t0.c2)) THEN ((t0.c2)<=(0.6633704041521965)) WHEN CAST(t0.c1 AS BLOB) THEN ((t0.c1)<(t0.c0)) ELSE ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN (((t0.c2 IN ()))) AND ((301714128)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0)-(t0.c0)) IN ()) ORDER BY CASE WHEN ((t0.c2) IS FALSE) THEN x'2d62' WHEN ((0.03331502403877529)OR(t0.c2)) THEN ((t0.c2)<=(0.6633704041521965)) WHEN CAST(t0.c1 AS BLOB) THEN ((t0.c1)<(t0.c0)) ELSE ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0)-(t0.c0)) IN ()) WHERE ((((t0.c2)) NOT BETWEEN (((t0.c2 IN ()))) AND ((301714128)))) ORDER BY CASE WHEN ((t0.c2) IS FALSE) THEN x'2d62' WHEN ((0.03331502403877529)OR(t0.c2)) THEN ((t0.c2)<=(0.6633704041521965)) WHEN CAST(t0.c1 AS BLOB) THEN ((t0.c1)<(t0.c0)) ELSE ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c1)<(vt0.c0)))IS((-1319636710 IN ()))) INNER JOIN rt0 ON (~ (0.03438499719735022)) WHERE (CASE ((rt0.c2) NOT NULL)  WHEN LIKE(t0.c0, t0.c0) THEN ((t0.c1) BETWEEN (rt0.c1) AND (t0.c2)) ELSE ((rt0.c1)AND(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) NOT NULL)  WHEN LIKE(t0.c0, t0.c0) THEN ((t0.c1) BETWEEN (rt0.c1) AND (t0.c2)) ELSE ((rt0.c1)AND(t0.c1)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c1)<(vt0.c0)))IS((-1319636710 IN ()))) INNER JOIN rt0 ON (~ (0.03438499719735022)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c1)<(vt0.c0)))IS((-1319636710 IN ()))) INNER JOIN rt0 ON (~ (0.03438499719735022)) WHERE (CASE ((rt0.c2) NOT NULL)  WHEN LIKE(t0.c0, t0.c0) THEN ((t0.c1) BETWEEN (rt0.c1) AND (t0.c2)) ELSE ((rt0.c1)AND(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) NOT NULL)  WHEN LIKE(t0.c0, t0.c0) THEN ((t0.c1) BETWEEN (rt0.c1) AND (t0.c2)) ELSE ((rt0.c1)AND(t0.c1)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c1)<(vt0.c0)))IS((-1319636710 IN ()))) INNER JOIN rt0 ON (~ (0.03438499719735022)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c1)<(vt0.c0)))IS((-1319636710 IN ()))) INNER JOIN rt0 ON (~ (0.03438499719735022)) WHERE (CASE ((rt0.c2) NOT NULL)  WHEN LIKE(t0.c0, t0.c0) THEN ((t0.c1) BETWEEN (rt0.c1) AND (t0.c2)) ELSE ((rt0.c1)AND(t0.c1)) END);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON SUBSTR(((0.9426047699856526) NOTNULL), ((rt0.c2)LIKE(rt0.c1))) WHERE ((NOT (((x'6af5') NOT BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((x'6af5') NOT BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON SUBSTR(((0.9426047699856526) NOTNULL), ((rt0.c2)LIKE(rt0.c1))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON SUBSTR(((0.9426047699856526) NOTNULL), ((rt0.c2)LIKE(rt0.c1))) WHERE ((NOT (((x'6af5') NOT BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((x'6af5') NOT BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON SUBSTR(((0.9426047699856526) NOTNULL), ((rt0.c2)LIKE(rt0.c1))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON SUBSTR(((0.9426047699856526) NOTNULL), ((rt0.c2)LIKE(rt0.c1))) WHERE ((NOT (((x'6af5') NOT BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (rt0.c1 COLLATE BINARY IN ()) CROSS JOIN rt0 ON (t0.c1 COLLATE NOCASE IN (t0.c2 COLLATE BINARY)) WHERE (((HEX(rt0.c1))GLOB(((t0.c2)||(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c1))GLOB(((t0.c2)||(t0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (rt0.c1 COLLATE BINARY IN ()) CROSS JOIN rt0 ON (t0.c1 COLLATE NOCASE IN (t0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (rt0.c1 COLLATE BINARY IN ()) CROSS JOIN rt0 ON (t0.c1 COLLATE NOCASE IN (t0.c2 COLLATE BINARY)) WHERE (((HEX(rt0.c1))GLOB(((t0.c2)||(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c1))GLOB(((t0.c2)||(t0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (rt0.c1 COLLATE BINARY IN ()) CROSS JOIN rt0 ON (t0.c1 COLLATE NOCASE IN (t0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (rt0.c1 COLLATE BINARY IN ()) CROSS JOIN rt0 ON (t0.c1 COLLATE NOCASE IN (t0.c2 COLLATE BINARY)) WHERE (((HEX(rt0.c1))GLOB(((t0.c2)||(t0.c2)))));
SELECT * FROM rt0, t0, vt0 WHERE (CASE 0.6205923976205632  WHEN CASE rt0.c0  WHEN rt0.c2 THEN NULL ELSE vt0.c0 END THEN t0.c0 COLLATE RTRIM WHEN rt0.c0 COLLATE NOCASE THEN t0.c1 WHEN t0.c1 THEN IFNULL(DISTINCT t0.c0, t0.c2) ELSE ((t0.c0) BETWEEN (rt0.c0) AND (t0.c2)) END) ORDER BY ((t0.c2)GLOB(CAST(vt0.c0 AS REAL))), UPPER(-6.89213518E8)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.6205923976205632  WHEN CASE rt0.c0  WHEN rt0.c2 THEN NULL ELSE vt0.c0 END THEN t0.c0 COLLATE RTRIM WHEN rt0.c0 COLLATE NOCASE THEN t0.c1 WHEN t0.c1 THEN IFNULL(DISTINCT t0.c0, t0.c2) ELSE ((t0.c0) BETWEEN (rt0.c0) AND (t0.c2)) END) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((t0.c2)GLOB(CAST(vt0.c0 AS REAL))), UPPER(-6.89213518E8)  NULLS FIRST);
SELECT * FROM rt0, t0, vt0 WHERE (CASE 0.6205923976205632  WHEN CASE rt0.c0  WHEN rt0.c2 THEN NULL ELSE vt0.c0 END THEN t0.c0 COLLATE RTRIM WHEN rt0.c0 COLLATE NOCASE THEN t0.c1 WHEN t0.c1 THEN IFNULL(DISTINCT t0.c0, t0.c2) ELSE ((t0.c0) BETWEEN (rt0.c0) AND (t0.c2)) END) ORDER BY ((t0.c2)GLOB(CAST(vt0.c0 AS REAL))), UPPER(-6.89213518E8)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.6205923976205632  WHEN CASE rt0.c0  WHEN rt0.c2 THEN NULL ELSE vt0.c0 END THEN t0.c0 COLLATE RTRIM WHEN rt0.c0 COLLATE NOCASE THEN t0.c1 WHEN t0.c1 THEN IFNULL(DISTINCT t0.c0, t0.c2) ELSE ((t0.c0) BETWEEN (rt0.c0) AND (t0.c2)) END) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((t0.c2)GLOB(CAST(vt0.c0 AS REAL))), UPPER(-6.89213518E8)  NULLS FIRST);
SELECT * FROM rt0, t0, vt0 WHERE (CASE 0.6205923976205632  WHEN CASE rt0.c0  WHEN rt0.c2 THEN NULL ELSE vt0.c0 END THEN t0.c0 COLLATE RTRIM WHEN rt0.c0 COLLATE NOCASE THEN t0.c1 WHEN t0.c1 THEN IFNULL(DISTINCT t0.c0, t0.c2) ELSE ((t0.c0) BETWEEN (rt0.c0) AND (t0.c2)) END) ORDER BY ((t0.c2)GLOB(CAST(vt0.c0 AS REAL))), UPPER(-6.89213518E8)  NULLS FIRST;
SELECT * FROM vt0 NOT INDEXED WHERE (vt0.c0) ORDER BY ((((vt0.c0 IN ())))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ())))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT * FROM vt0 NOT INDEXED WHERE (vt0.c0) ORDER BY ((((vt0.c0 IN ())))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ())))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT * FROM vt0 NOT INDEXED WHERE (vt0.c0) ORDER BY ((((vt0.c0 IN ())))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM t0 WHERE (((t0.c2) NOT BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (CAST(t0.c2 AS REAL)))) ORDER BY (((((t0.c1, t0.c2, '-789082697')) BETWEEN ((t0.c2, NULL, t0.c1)) AND ((x'', t0.c0, t0.c0)))) NOT BETWEEN (NULL) AND (t0.c1)) DESC  NULLS LAST, ((('䖢G(pi%2{}' IN ()))LIKE((~ (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOT BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (CAST(t0.c2 AS REAL)))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c1, t0.c2, '-789082697')) BETWEEN ((t0.c2, NULL, t0.c1)) AND ((x'', t0.c0, t0.c0)))) NOT BETWEEN (NULL) AND (t0.c1)) DESC  NULLS LAST, ((('䖢G(pi%2{}' IN ()))LIKE((~ (t0.c0)))) DESC);
SELECT * FROM t0 WHERE (((t0.c2) NOT BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (CAST(t0.c2 AS REAL)))) ORDER BY (((((t0.c1, t0.c2, '-789082697')) BETWEEN ((t0.c2, NULL, t0.c1)) AND ((x'', t0.c0, t0.c0)))) NOT BETWEEN (NULL) AND (t0.c1)) DESC  NULLS LAST, ((('䖢G(pi%2{}' IN ()))LIKE((~ (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOT BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (CAST(t0.c2 AS REAL)))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c1, t0.c2, '-789082697')) BETWEEN ((t0.c2, NULL, t0.c1)) AND ((x'', t0.c0, t0.c0)))) NOT BETWEEN (NULL) AND (t0.c1)) DESC  NULLS LAST, ((('䖢G(pi%2{}' IN ()))LIKE((~ (t0.c0)))) DESC);
SELECT * FROM t0 WHERE (((t0.c2) NOT BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (CAST(t0.c2 AS REAL)))) ORDER BY (((((t0.c1, t0.c2, '-789082697')) BETWEEN ((t0.c2, NULL, t0.c1)) AND ((x'', t0.c0, t0.c0)))) NOT BETWEEN (NULL) AND (t0.c1)) DESC  NULLS LAST, ((('䖢G(pi%2{}' IN ()))LIKE((~ (t0.c0)))) DESC;
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT ALL * FROM t0, rt0 NATURAL JOIN vt0 WHERE (rt0.c1) ORDER BY ((CASE WHEN rt0.c1 THEN t0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN 'O3X' THEN rt0.c2 ELSE rt0.c2 END)>=((vt0.c0 IN (t0.c2)))), ((COALESCE(DISTINCT rt0.c0, rt0.c1))<(((t0.c1) BETWEEN (t0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0 ORDER BY ((CASE WHEN rt0.c1 THEN t0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN 'O3X' THEN rt0.c2 ELSE rt0.c2 END)>=((vt0.c0 IN (t0.c2)))), ((COALESCE(DISTINCT rt0.c0, rt0.c1))<(((t0.c1) BETWEEN (t0.c2) AND (rt0.c0))))  NULLS LAST);
SELECT ALL * FROM t0, rt0 NATURAL JOIN vt0 WHERE (rt0.c1) ORDER BY ((CASE WHEN rt0.c1 THEN t0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN 'O3X' THEN rt0.c2 ELSE rt0.c2 END)>=((vt0.c0 IN (t0.c2)))), ((COALESCE(DISTINCT rt0.c0, rt0.c1))<(((t0.c1) BETWEEN (t0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0 ORDER BY ((CASE WHEN rt0.c1 THEN t0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN 'O3X' THEN rt0.c2 ELSE rt0.c2 END)>=((vt0.c0 IN (t0.c2)))), ((COALESCE(DISTINCT rt0.c0, rt0.c1))<(((t0.c1) BETWEEN (t0.c2) AND (rt0.c0))))  NULLS LAST);
SELECT ALL * FROM t0, rt0 NATURAL JOIN vt0 WHERE (rt0.c1) ORDER BY ((CASE WHEN rt0.c1 THEN t0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN 'O3X' THEN rt0.c2 ELSE rt0.c2 END)>=((vt0.c0 IN (t0.c2)))), ((COALESCE(DISTINCT rt0.c0, rt0.c1))<(((t0.c1) BETWEEN (t0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(x'9286')))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2))) NOT BETWEEN ('-510440514') AND (((rt0.c0)/(rt0.c1))))) ORDER BY (~ ((rt0.c2 IN ()))) ASC, ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(x'9286')))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2))) NOT BETWEEN ('-510440514') AND (((rt0.c0)/(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((rt0.c2 IN ()))) ASC, ''  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(x'9286')))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2))) NOT BETWEEN ('-510440514') AND (((rt0.c0)/(rt0.c1))))) ORDER BY (~ ((rt0.c2 IN ()))) ASC, ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(x'9286')))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2))) NOT BETWEEN ('-510440514') AND (((rt0.c0)/(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((rt0.c2 IN ()))) ASC, ''  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(x'9286')))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2))) NOT BETWEEN ('-510440514') AND (((rt0.c0)/(rt0.c1))))) ORDER BY (~ ((rt0.c2 IN ()))) ASC, ''  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c0)))AND(TRIM(DISTINCT vt0.c0, vt0.c0))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((vt0.c0)<>(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST, (((vt0.c0 IN ()))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c0)))AND(TRIM(DISTINCT vt0.c0, vt0.c0))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)!=(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST, (((vt0.c0 IN ()))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c0)))AND(TRIM(DISTINCT vt0.c0, vt0.c0))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((vt0.c0)<>(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST, (((vt0.c0 IN ()))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c0)))AND(TRIM(DISTINCT vt0.c0, vt0.c0))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)!=(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST, (((vt0.c0 IN ()))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c0)))AND(TRIM(DISTINCT vt0.c0, vt0.c0))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((vt0.c0)<>(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST, (((vt0.c0 IN ()))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i79, t0 WHERE (((((t0.c2) IS TRUE)) NOT NULL)) ORDER BY ABS(DISTINCT (-1.19937894E9 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM rt0 INDEXED BY i79, t0 ORDER BY ABS(DISTINCT (-1.19937894E9 IN ()))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i79, t0 WHERE (((((t0.c2) IS TRUE)) NOT NULL)) ORDER BY ABS(DISTINCT (-1.19937894E9 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM rt0 INDEXED BY i79, t0 ORDER BY ABS(DISTINCT (-1.19937894E9 IN ()))  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1 IN ()))LIKE((rt0.c0 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))LIKE((rt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1 IN ()))LIKE((rt0.c0 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))LIKE((rt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1 IN ()))LIKE((rt0.c0 IN (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c0 WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c1 END))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt0.c1 THEN rt0.c0 WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c0 WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c1 END))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt0.c1 THEN rt0.c0 WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c0 WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c1 END))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((((t0.c2) IS TRUE)))<=(((+ (rt0.c1))))) WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) COLLATE RTRIM) ORDER BY json_valid(((t0.c1)<>(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((t0.c2) IS TRUE)))<=(((+ (rt0.c1))))) ORDER BY json_valid(((t0.c1)<>(rt0.c1))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((((t0.c2) IS TRUE)))<=(((+ (rt0.c1))))) WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) COLLATE RTRIM) ORDER BY json_valid(((t0.c1)<>(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((t0.c2) IS TRUE)))<=(((+ (rt0.c1))))) ORDER BY json_valid(((t0.c1)<>(rt0.c1))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((((t0.c2) IS TRUE)))<=(((+ (rt0.c1))))) WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) COLLATE RTRIM) ORDER BY json_valid(((t0.c1)<>(rt0.c1)));
SELECT * FROM rt0 INDEXED BY i79 WHERE ((CASE WHEN rt0.c0 THEN rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c0 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0 INDEXED BY i79);
SELECT * FROM rt0 INDEXED BY i79 WHERE ((CASE WHEN rt0.c0 THEN rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c0 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0 INDEXED BY i79);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0))<((((rt0.c2) NOT BETWEEN (t0.c0) AND ('910364361')))))) ORDER BY ((((t0.c2) IS FALSE))=(CAST(t0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))<((((rt0.c2) NOT BETWEEN (t0.c0) AND ('910364361')))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c2) IS FALSE))==(CAST(t0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0))<((((rt0.c2) NOT BETWEEN (t0.c0) AND ('910364361')))))) ORDER BY ((((t0.c2) IS FALSE))=(CAST(t0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))<((((rt0.c2) NOT BETWEEN (t0.c0) AND ('910364361')))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c2) IS FALSE))==(CAST(t0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0))<((((rt0.c2) NOT BETWEEN (t0.c0) AND ('910364361')))))) ORDER BY ((((t0.c2) IS FALSE))=(CAST(t0.c0 AS BLOB)));
SELECT ALL * FROM t0 WHERE (CASE t0.c1  WHEN (- (t0.c1)) THEN ((x'cc29') IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c1  WHEN (- (t0.c1)) THEN ((x'cc29') IS TRUE) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE t0.c1  WHEN (- (t0.c1)) THEN ((x'cc29') IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c1  WHEN (- (t0.c1)) THEN ((x'cc29') IS TRUE) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE t0.c1  WHEN (- (t0.c1)) THEN ((x'cc29') IS TRUE) END);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c0  WHEN t0.c2 THEN t0.c1 END)/(t0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE rt0.c0  WHEN t0.c2 THEN t0.c1 END)/(t0.c1)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c0  WHEN t0.c2 THEN t0.c1 END)/(t0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE rt0.c0  WHEN t0.c2 THEN t0.c1 END)/(t0.c1)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c0  WHEN t0.c2 THEN t0.c1 END)/(t0.c1)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (t0.c2) ORDER BY ((0.8823705732281825)<=(CAST(t0.c0 AS REAL))) ASC  NULLS LAST, CAST(((t0.c0)<>(x'')) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((0.8823705732281825)<=(CAST(t0.c0 AS REAL))) ASC  NULLS LAST, CAST(((t0.c0)!=(x'')) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (t0.c2) ORDER BY ((0.8823705732281825)<=(CAST(t0.c0 AS REAL))) ASC  NULLS LAST, CAST(((t0.c0)<>(x'')) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((0.8823705732281825)<=(CAST(t0.c0 AS REAL))) ASC  NULLS LAST, CAST(((t0.c0)!=(x'')) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (t0.c2) ORDER BY ((0.8823705732281825)<=(CAST(t0.c0 AS REAL))) ASC  NULLS LAST, CAST(((t0.c0)<>(x'')) AS TEXT) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY UNLIKELY(DISTINCT (t0.c2 IN ())), ((t0.c0)<(ABS(DISTINCT t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(DISTINCT (t0.c2 IN ())), ((t0.c0)<(ABS(DISTINCT t0.c2))));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY UNLIKELY(DISTINCT (t0.c2 IN ())), ((t0.c0)<(ABS(DISTINCT t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(DISTINCT (t0.c2 IN ())), ((t0.c0)<(ABS(DISTINCT t0.c2))));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY UNLIKELY(DISTINCT (t0.c2 IN ())), ((t0.c0)<(ABS(DISTINCT t0.c2)));
SELECT * FROM vt0, t0, rt0 INDEXED BY i79 WHERE (((((rt0.c1)AND(((((t0.c0)OR(rt0.c0)))AND(t0.c2)))))OR(((t0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(((((t0.c0)OR(rt0.c0)))AND(t0.c2)))))OR(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, t0, rt0 INDEXED BY i79);
SELECT * FROM vt0, t0, rt0 INDEXED BY i79 WHERE (((((rt0.c1)AND(((((t0.c0)OR(rt0.c0)))AND(t0.c2)))))OR(((t0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(((((t0.c0)OR(rt0.c0)))AND(t0.c2)))))OR(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, t0, rt0 INDEXED BY i79);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((UPPER(rt0.c0)))<=((rt0.c0 COLLATE BINARY)))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((UPPER(rt0.c0)))<=((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((UPPER(rt0.c0)))<=((rt0.c0 COLLATE BINARY)))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((UPPER(rt0.c0)))<=((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((UPPER(rt0.c0)))<=((rt0.c0 COLLATE BINARY)))) ORDER BY rt0.c2;
SELECT * FROM t0, rt0 WHERE (CAST((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c2))) AS INTEGER)) ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE NOCASE DESC  NULLS LAST, rt0.c0 DESC  NULLS LAST, (((((rt0.c2))<=((t0.c0)))) BETWEEN (((t0.c0) IS TRUE)) AND (CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c2))) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE NOCASE DESC  NULLS LAST, rt0.c0 DESC  NULLS LAST, (((((rt0.c2))<=((t0.c0)))) BETWEEN (((t0.c0) IS TRUE)) AND (CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (CAST((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c2))) AS INTEGER)) ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE NOCASE DESC  NULLS LAST, rt0.c0 DESC  NULLS LAST, (((((rt0.c2))<=((t0.c0)))) BETWEEN (((t0.c0) IS TRUE)) AND (CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c2))) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE NOCASE DESC  NULLS LAST, rt0.c0 DESC  NULLS LAST, (((((rt0.c2))<=((t0.c0)))) BETWEEN (((t0.c0) IS TRUE)) AND (CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (CAST((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c2))) AS INTEGER)) ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE NOCASE DESC  NULLS LAST, rt0.c0 DESC  NULLS LAST, (((((rt0.c2))<=((t0.c0)))) BETWEEN (((t0.c0) IS TRUE)) AND (CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE WHEN (((0.49742416459111094)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) THEN LOWER(DISTINCT t0.c0) WHEN t0.c2 COLLATE RTRIM THEN json(t0.c2) WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END THEN CAST(t0.c0 AS INTEGER) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((0.49742416459111094)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) THEN LOWER(DISTINCT t0.c0) WHEN t0.c2 COLLATE RTRIM THEN json(t0.c2) WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END THEN CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE WHEN (((0.49742416459111094)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) THEN LOWER(DISTINCT t0.c0) WHEN t0.c2 COLLATE RTRIM THEN json(t0.c2) WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END THEN CAST(t0.c0 AS INTEGER) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((0.49742416459111094)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) THEN LOWER(DISTINCT t0.c0) WHEN t0.c2 COLLATE RTRIM THEN json(t0.c2) WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END THEN CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE WHEN (((0.49742416459111094)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) THEN LOWER(DISTINCT t0.c0) WHEN t0.c2 COLLATE RTRIM THEN json(t0.c2) WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END THEN CAST(t0.c0 AS INTEGER) END) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((NOT (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((NOT (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((NOT (vt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS TEXT)) ORDER BY CASE LIKELIHOOD(DISTINCT rt0.c1, 0.4742909180817708)  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CAST(rt0.c2 AS BLOB) WHEN ((((rt0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((rt0.c2) IS FALSE) WHEN NULLIF(DISTINCT rt0.c0, t0.c1) THEN t0.c1 COLLATE BINARY ELSE (((t0.c2))!=((rt0.c2))) END, '1130517838', ((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE LIKELIHOOD(DISTINCT rt0.c1, 0.4742909180817708)  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CAST(rt0.c2 AS BLOB) WHEN ((((rt0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((rt0.c2) IS FALSE) WHEN NULLIF(DISTINCT rt0.c0, t0.c1) THEN t0.c1 COLLATE BINARY ELSE (((t0.c2))<>((rt0.c2))) END, '1130517838', ((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS TEXT)) ORDER BY CASE LIKELIHOOD(DISTINCT rt0.c1, 0.4742909180817708)  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CAST(rt0.c2 AS BLOB) WHEN ((((rt0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((rt0.c2) IS FALSE) WHEN NULLIF(DISTINCT rt0.c0, t0.c1) THEN t0.c1 COLLATE BINARY ELSE (((t0.c2))!=((rt0.c2))) END, '1130517838', ((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE LIKELIHOOD(DISTINCT rt0.c1, 0.4742909180817708)  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CAST(rt0.c2 AS BLOB) WHEN ((((rt0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((rt0.c2) IS FALSE) WHEN NULLIF(DISTINCT rt0.c0, t0.c1) THEN t0.c1 COLLATE BINARY ELSE (((t0.c2))<>((rt0.c2))) END, '1130517838', ((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS TEXT)) ORDER BY CASE LIKELIHOOD(DISTINCT rt0.c1, 0.4742909180817708)  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CAST(rt0.c2 AS BLOB) WHEN ((((rt0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((rt0.c2) IS FALSE) WHEN NULLIF(DISTINCT rt0.c0, t0.c1) THEN t0.c1 COLLATE BINARY ELSE (((t0.c2))!=((rt0.c2))) END, '1130517838', ((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE ASC;
SELECT * FROM rt0 CROSS JOIN t0 ON ((- (rt0.c1)) IN ()) WHERE ((- (t0.c2 COLLATE NOCASE))) ORDER BY ((((((rt0.c0)LIKE(rt0.c1)))OR(LIKELIHOOD(t0.c1, 0.38534459124463427))))OR(((((t0.c1)AND(rt0.c0)))OR(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((- (rt0.c1)) IN ()) ORDER BY ((((((rt0.c0)LIKE(rt0.c1)))OR(LIKELIHOOD(t0.c1, 0.38534459124463427))))OR(((((t0.c1)AND(rt0.c0)))OR(rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN t0 ON ((- (rt0.c1)) IN ()) WHERE ((- (t0.c2 COLLATE NOCASE))) ORDER BY ((((((rt0.c0)LIKE(rt0.c1)))OR(LIKELIHOOD(t0.c1, 0.38534459124463427))))OR(((((t0.c1)AND(rt0.c0)))OR(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((- (rt0.c1)) IN ()) ORDER BY ((((((rt0.c0)LIKE(rt0.c1)))OR(LIKELIHOOD(t0.c1, 0.38534459124463427))))OR(((((t0.c1)AND(rt0.c0)))OR(rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN t0 ON ((- (rt0.c1)) IN ()) WHERE ((- (t0.c2 COLLATE NOCASE))) ORDER BY ((((((rt0.c0)LIKE(rt0.c1)))OR(LIKELIHOOD(t0.c1, 0.38534459124463427))))OR(((((t0.c1)AND(rt0.c0)))OR(rt0.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))-(-771953524)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))-(-771953524))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))-(-771953524)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))-(-771953524))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))-(-771953524)));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (UPPER(DISTINCT t0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT t0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (UPPER(DISTINCT t0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT t0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (UPPER(DISTINCT t0.c2 COLLATE RTRIM));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((0.6187695958539993)LIKE('1908787456')));
SELECT SUM(count) FROM (SELECT ALL ((((0.6187695958539993)LIKE('1908787456'))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((0.6187695958539993)LIKE('1908787456')));
SELECT SUM(count) FROM (SELECT ALL ((((0.6187695958539993)LIKE('1908787456'))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((0.6187695958539993)LIKE('1908787456')));
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE CAST(t0.c0 AS INTEGER)  WHEN NULL COLLATE BINARY THEN HEX(DISTINCT t0.c0) WHEN ((t0.c0)>=(rt0.c2)) THEN HEX(rt0.c2) WHEN CASE t0.c2  WHEN rt0.c2 THEN t0.c2 ELSE rt0.c1 END THEN ((('952919118')) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c0 AS INTEGER)  WHEN NULL COLLATE BINARY THEN HEX(DISTINCT t0.c0) WHEN ((t0.c0)>=(rt0.c2)) THEN HEX(rt0.c2) WHEN CASE t0.c2  WHEN rt0.c2 THEN t0.c2 ELSE rt0.c1 END THEN ((('952919118')) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE CAST(t0.c0 AS INTEGER)  WHEN NULL COLLATE BINARY THEN HEX(DISTINCT t0.c0) WHEN ((t0.c0)>=(rt0.c2)) THEN HEX(rt0.c2) WHEN CASE t0.c2  WHEN rt0.c2 THEN t0.c2 ELSE rt0.c1 END THEN ((('952919118')) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c0 AS INTEGER)  WHEN NULL COLLATE BINARY THEN HEX(DISTINCT t0.c0) WHEN ((t0.c0)>=(rt0.c2)) THEN HEX(rt0.c2) WHEN CASE t0.c2  WHEN rt0.c2 THEN t0.c2 ELSE rt0.c1 END THEN ((('952919118')) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE CAST(t0.c0 AS INTEGER)  WHEN NULL COLLATE BINARY THEN HEX(DISTINCT t0.c0) WHEN ((t0.c0)>=(rt0.c2)) THEN HEX(rt0.c2) WHEN CASE t0.c2  WHEN rt0.c2 THEN t0.c2 ELSE rt0.c1 END THEN ((('952919118')) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE rt0.c2 COLLATE RTRIM END);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (t0.c1 IN ()) WHERE (0X1815136a) ORDER BY (((t0.c2)GLOB(t0.c2)) IN (((t0.c2)IS NOT(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0X1815136a) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (t0.c1 IN ()) ORDER BY (((t0.c2)GLOB(t0.c2)) IN (((t0.c2)IS NOT(t0.c0)))) DESC);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (t0.c1 IN ()) WHERE (0X1815136a) ORDER BY (((t0.c2)GLOB(t0.c2)) IN (((t0.c2)IS NOT(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0X1815136a) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (t0.c1 IN ()) ORDER BY (((t0.c2)GLOB(t0.c2)) IN (((t0.c2)IS NOT(t0.c0)))) DESC);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (t0.c1 IN ()) WHERE (0X1815136a) ORDER BY (((t0.c2)GLOB(t0.c2)) IN (((t0.c2)IS NOT(t0.c0)))) DESC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ('1%욅	3NP') ORDER BY (+ (((t0.c1) BETWEEN (t0.c0) AND (t0.c1))));
SELECT SUM(count) FROM (SELECT (('1%욅	3NP') IS TRUE)  as count FROM t0, rt0 ORDER BY (+ (((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ('1%욅	3NP') ORDER BY (+ (((t0.c1) BETWEEN (t0.c0) AND (t0.c1))));
SELECT SUM(count) FROM (SELECT (('1%욅	3NP') IS TRUE)  as count FROM t0, rt0 ORDER BY (+ (((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ('1%욅	3NP') ORDER BY (+ (((t0.c1) BETWEEN (t0.c0) AND (t0.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((- (vt0.c0)))AND(x'4b97')))OR(vt0.c0)))OR(((vt0.c0) NOTNULL))))OR(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (vt0.c0)))AND(x'4b97')))OR(vt0.c0)))OR(((vt0.c0) NOTNULL))))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((- (vt0.c0)))AND(x'4b97')))OR(vt0.c0)))OR(((vt0.c0) NOTNULL))))OR(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (vt0.c0)))AND(x'4b97')))OR(vt0.c0)))OR(((vt0.c0) NOTNULL))))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((- (vt0.c0)))AND(x'4b97')))OR(vt0.c0)))OR(((vt0.c0) NOTNULL))))OR(CAST(vt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM t0 INDEXED BY i79 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT NULL)) IS TRUE) INNER JOIN rt0 ON CASE rt0.c2  WHEN (((rt0.c2))>((rt0.c1))) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE t0.c0 END WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN CAST(0.05481011809362035 AS TEXT) WHEN ((t0.c2)<<(rt0.c2)) THEN (t0.c2 IN (rt0.c1, rt0.c1)) ELSE (((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((t0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, t0.c1, rt0.c2))) END WHERE ((+ ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (rt0.c2))))) IS TRUE)  as count FROM t0 INDEXED BY i79 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT NULL)) IS TRUE) INNER JOIN rt0 ON CASE rt0.c2  WHEN (((rt0.c2))>((rt0.c1))) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE t0.c0 END WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN CAST(0.05481011809362035 AS TEXT) WHEN ((t0.c2)<<(rt0.c2)) THEN (t0.c2 IN (rt0.c1, rt0.c1)) ELSE (((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((t0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, t0.c1, rt0.c2))) END);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i79 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT NULL)) IS TRUE) INNER JOIN rt0 ON CASE rt0.c2  WHEN (((rt0.c2))>((rt0.c1))) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE t0.c0 END WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN CAST(0.05481011809362035 AS TEXT) WHEN ((t0.c2)<<(rt0.c2)) THEN (t0.c2 IN (rt0.c1, rt0.c1)) ELSE (((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((t0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, t0.c1, rt0.c2))) END WHERE ((+ ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (rt0.c2))))) IS TRUE)  as count FROM t0 INDEXED BY i79 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT NULL)) IS TRUE) INNER JOIN rt0 ON CASE rt0.c2  WHEN (((rt0.c2))>((rt0.c1))) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE t0.c0 END WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN CAST(0.05481011809362035 AS TEXT) WHEN ((t0.c2)<<(rt0.c2)) THEN (t0.c2 IN (rt0.c1, rt0.c1)) ELSE (((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((t0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, t0.c1, rt0.c2))) END);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0)|(rt0.c1)) AS NUMERIC) WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END) IS FALSE)) ORDER BY ((((0.9667494498315334) NOT NULL)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (UNICODE(rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0)|(rt0.c1)) AS NUMERIC) ORDER BY ((((0.9667494498315334) NOT NULL)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (UNICODE(rt0.c2))) ASC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0)|(rt0.c1)) AS NUMERIC) WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END) IS FALSE)) ORDER BY ((((0.9667494498315334) NOT NULL)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (UNICODE(rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0)|(rt0.c1)) AS NUMERIC) ORDER BY ((((0.9667494498315334) NOT NULL)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (UNICODE(rt0.c2))) ASC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0)|(rt0.c1)) AS NUMERIC) WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END) IS FALSE)) ORDER BY ((((0.9667494498315334) NOT NULL)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (UNICODE(rt0.c2))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c1) NOTNULL) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOTNULL) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c1) NOTNULL) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOTNULL) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c1) NOTNULL) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE ((~ (((0x12a08aa4) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((((((((((vt0.c0 IN ()))OR((vt0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))))AND(((0.21155549188873235) NOTNULL))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((0x12a08aa4) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((((vt0.c0 IN ()))OR((vt0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))))AND(((0.21155549188873235) NOTNULL))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ (((0x12a08aa4) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((((((((((vt0.c0 IN ()))OR((vt0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))))AND(((0.21155549188873235) NOTNULL))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((0x12a08aa4) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((((vt0.c0 IN ()))OR((vt0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))))AND(((0.21155549188873235) NOTNULL))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ (((0x12a08aa4) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((((((((((vt0.c0 IN ()))OR((vt0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))))AND(((0.21155549188873235) NOTNULL))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((UNLIKELY(DISTINCT rt0.c0))<=(MAX(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT rt0.c0))<=(MAX(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((UNLIKELY(DISTINCT rt0.c0))<=(MAX(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT rt0.c0))<=(MAX(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((UNLIKELY(DISTINCT rt0.c0))<=(MAX(vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt0, t0 WHERE (LOWER(DISTINCT '716215054')) ORDER BY (NOT ('')) ASC, CASE WHEN t0.c0 THEN t0.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT '716215054')) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT ('')) ASC, CASE WHEN t0.c0 THEN t0.c1 END COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0 WHERE (LOWER(DISTINCT '716215054')) ORDER BY (NOT ('')) ASC, CASE WHEN t0.c0 THEN t0.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT '716215054')) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT ('')) ASC, CASE WHEN t0.c0 THEN t0.c1 END COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0 WHERE (LOWER(DISTINCT '716215054')) ORDER BY (NOT ('')) ASC, CASE WHEN t0.c0 THEN t0.c1 END COLLATE NOCASE;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((~ ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((~ ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((~ ((~ (rt0.c1)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((((15513942))!=((rt0.c1)))) IS FALSE) RIGHT OUTER JOIN vt0 ON '1e500' WHERE (CAST(('-899459439' IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(('-899459439' IN ()) AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((((15513942))<>((rt0.c1)))) IS FALSE) RIGHT OUTER JOIN vt0 ON '1e500');
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((((15513942))!=((rt0.c1)))) IS FALSE) RIGHT OUTER JOIN vt0 ON '1e500' WHERE (CAST(('-899459439' IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(('-899459439' IN ()) AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((((15513942))<>((rt0.c1)))) IS FALSE) RIGHT OUTER JOIN vt0 ON '1e500');
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((((15513942))!=((rt0.c1)))) IS FALSE) RIGHT OUTER JOIN vt0 ON '1e500' WHERE (CAST(('-899459439' IN ()) AS BLOB));
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)) AND ((CASE rt0.c2  WHEN rt0.c1 THEN 0.6633704041521965 ELSE rt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)) AND ((CASE rt0.c2  WHEN rt0.c1 THEN 0.6633704041521965 ELSE rt0.c2 END)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)) AND ((CASE rt0.c2  WHEN rt0.c1 THEN 0.6633704041521965 ELSE rt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)) AND ((CASE rt0.c2  WHEN rt0.c1 THEN 0.6633704041521965 ELSE rt0.c2 END)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)) AND ((CASE rt0.c2  WHEN rt0.c1 THEN 0.6633704041521965 ELSE rt0.c2 END))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))IS(((vt0.c0)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt0.c0)))IS(((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))IS(((vt0.c0)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt0.c0)))IS(((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))IS(((vt0.c0)==(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 ELSE t0.c1 END COLLATE BINARY) ORDER BY ((((((rt0.c0)OR(t0.c1)))OR(rt0.c1))) IS TRUE)  NULLS LAST, 0.10299288217123403, ((0.3463253304364574)/((rt0.c0 IN (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE t0.c1 END COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((rt0.c0)OR(t0.c1)))OR(rt0.c1))) IS TRUE)  NULLS LAST, 0.10299288217123403, ((0.3463253304364574)/((rt0.c0 IN (rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 ELSE t0.c1 END COLLATE BINARY) ORDER BY ((((((rt0.c0)OR(t0.c1)))OR(rt0.c1))) IS TRUE)  NULLS LAST, 0.10299288217123403, ((0.3463253304364574)/((rt0.c0 IN (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE t0.c1 END COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((rt0.c0)OR(t0.c1)))OR(rt0.c1))) IS TRUE)  NULLS LAST, 0.10299288217123403, ((0.3463253304364574)/((rt0.c0 IN (rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 ELSE t0.c1 END COLLATE BINARY) ORDER BY ((((((rt0.c0)OR(t0.c1)))OR(rt0.c1))) IS TRUE)  NULLS LAST, 0.10299288217123403, ((0.3463253304364574)/((rt0.c0 IN (rt0.c2)))) DESC;
SELECT ALL * FROM t0, rt0 WHERE ((((('s] ')<=(NULL))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN rt0.c2 WHEN t0.c2 THEN t0.c1 WHEN rt0.c0 THEN rt0.c1 END) AND (((0x5a88acde)<<(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((('s] ')<=(NULL))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN rt0.c2 WHEN t0.c2 THEN t0.c1 WHEN rt0.c0 THEN rt0.c1 END) AND (((0x5a88acde)<<(t0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((('s] ')<=(NULL))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN rt0.c2 WHEN t0.c2 THEN t0.c1 WHEN rt0.c0 THEN rt0.c1 END) AND (((0x5a88acde)<<(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((('s] ')<=(NULL))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN rt0.c2 WHEN t0.c2 THEN t0.c1 WHEN rt0.c0 THEN rt0.c1 END) AND (((0x5a88acde)<<(t0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((('s] ')<=(NULL))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN rt0.c2 WHEN t0.c2 THEN t0.c1 WHEN rt0.c0 THEN rt0.c1 END) AND (((0x5a88acde)<<(t0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY);
SELECT * FROM t0, vt0, rt0 WHERE ((~ (CASE WHEN t0.c0 THEN t0.c1 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN t0.c0 THEN t0.c1 END))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE ((~ (CASE WHEN t0.c0 THEN t0.c1 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN t0.c0 THEN t0.c1 END))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE ((~ (CASE WHEN t0.c0 THEN t0.c1 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON ((((rt0.c2 COLLATE NOCASE)OR(((rt0.c1)|(t0.c2)))))OR((~ (t0.c0)))) WHERE (ABS(t0.c0) COLLATE BINARY) ORDER BY CASE CAST(t0.c0 AS BLOB)  WHEN ((rt0.c0) ISNULL) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN '' COLLATE RTRIM THEN SUBSTR(rt0.c1, rt0.c1) WHEN CASE WHEN t0.c0 THEN t0.c2 ELSE '' END THEN INSTR(rt0.c1, 0.3885922507491829) ELSE ((rt0.c0) IS FALSE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(t0.c0) COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((rt0.c2 COLLATE NOCASE)OR(((rt0.c1)|(t0.c2)))))OR((~ (t0.c0)))) ORDER BY CASE CAST(t0.c0 AS BLOB)  WHEN ((rt0.c0) ISNULL) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN '' COLLATE RTRIM THEN SUBSTR(rt0.c1, rt0.c1) WHEN CASE WHEN t0.c0 THEN t0.c2 ELSE '' END THEN INSTR(rt0.c1, 0.3885922507491829) ELSE ((rt0.c0) IS FALSE) END  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON ((((rt0.c2 COLLATE NOCASE)OR(((rt0.c1)|(t0.c2)))))OR((~ (t0.c0)))) WHERE (ABS(t0.c0) COLLATE BINARY) ORDER BY CASE CAST(t0.c0 AS BLOB)  WHEN ((rt0.c0) ISNULL) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN '' COLLATE RTRIM THEN SUBSTR(rt0.c1, rt0.c1) WHEN CASE WHEN t0.c0 THEN t0.c2 ELSE '' END THEN INSTR(rt0.c1, 0.3885922507491829) ELSE ((rt0.c0) IS FALSE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(t0.c0) COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((rt0.c2 COLLATE NOCASE)OR(((rt0.c1)|(t0.c2)))))OR((~ (t0.c0)))) ORDER BY CASE CAST(t0.c0 AS BLOB)  WHEN ((rt0.c0) ISNULL) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN '' COLLATE RTRIM THEN SUBSTR(rt0.c1, rt0.c1) WHEN CASE WHEN t0.c0 THEN t0.c2 ELSE '' END THEN INSTR(rt0.c1, 0.3885922507491829) ELSE ((rt0.c0) IS FALSE) END  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON ((((rt0.c2 COLLATE NOCASE)OR(((rt0.c1)|(t0.c2)))))OR((~ (t0.c0)))) WHERE (ABS(t0.c0) COLLATE BINARY) ORDER BY CASE CAST(t0.c0 AS BLOB)  WHEN ((rt0.c0) ISNULL) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN '' COLLATE RTRIM THEN SUBSTR(rt0.c1, rt0.c1) WHEN CASE WHEN t0.c0 THEN t0.c2 ELSE '' END THEN INSTR(rt0.c1, 0.3885922507491829) ELSE ((rt0.c0) IS FALSE) END  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((- (t0.c2))) NOT BETWEEN (((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(t0.c2))) AND (((rt0.c2)<(rt0.c0))))) ORDER BY ((CAST(t0.c0 AS TEXT))||(CASE vt0.c0  WHEN t0.c1 THEN t0.c2 ELSE vt0.c0 END)) DESC, ((((-928926455)>=(vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((- (t0.c2))) NOT BETWEEN (((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(t0.c2))) AND (((rt0.c2)<(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0 NOT INDEXED ORDER BY ((CAST(t0.c0 AS TEXT))||(CASE vt0.c0  WHEN t0.c1 THEN t0.c2 ELSE vt0.c0 END)) DESC, ((((-928926455)>=(vt0.c0))) NOT NULL) ASC);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((- (t0.c2))) NOT BETWEEN (((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(t0.c2))) AND (((rt0.c2)<(rt0.c0))))) ORDER BY ((CAST(t0.c0 AS TEXT))||(CASE vt0.c0  WHEN t0.c1 THEN t0.c2 ELSE vt0.c0 END)) DESC, ((((-928926455)>=(vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((- (t0.c2))) NOT BETWEEN (((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(t0.c2))) AND (((rt0.c2)<(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0 NOT INDEXED ORDER BY ((CAST(t0.c0 AS TEXT))||(CASE vt0.c0  WHEN t0.c1 THEN t0.c2 ELSE vt0.c0 END)) DESC, ((((-928926455)>=(vt0.c0))) NOT NULL) ASC);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((- (t0.c2))) NOT BETWEEN (((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(t0.c2))) AND (((rt0.c2)<(rt0.c0))))) ORDER BY ((CAST(t0.c0 AS TEXT))||(CASE vt0.c0  WHEN t0.c1 THEN t0.c2 ELSE vt0.c0 END)) DESC, ((((-928926455)>=(vt0.c0))) NOT NULL) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((json_type(x'7b86e316')) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_type(x'7b86e316')) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)OR(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((json_type(x'7b86e316')) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_type(x'7b86e316')) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2)OR(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((((rt0.c0) NOTNULL))GLOB(CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL))GLOB(CAST(NULL AS TEXT)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((((rt0.c0) NOTNULL))GLOB(CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL))GLOB(CAST(NULL AS TEXT)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((((rt0.c0) NOTNULL))GLOB(CAST(NULL AS TEXT))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c2)>(0.5012676620991052)))<<((t0.c0 IN ())))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>(0.5012676620991052)))<<((t0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c2)>(0.5012676620991052)))<<((t0.c0 IN ())))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>(0.5012676620991052)))<<((t0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c2)>(0.5012676620991052)))<<((t0.c0 IN ())))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((+ (t0.c2))) IS TRUE)) ORDER BY '', t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY '', t0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((+ (t0.c2))) IS TRUE)) ORDER BY '', t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY '', t0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((+ (t0.c2))) IS TRUE)) ORDER BY '', t0.c0  NULLS LAST;
SELECT ALL * FROM t0, rt0, vt0 WHERE (((t0.c2 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((t0.c2 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((t0.c2 COLLATE NOCASE) NOTNULL));
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((t0.c0, t0.c0, rt0.c0))<((t0.c1, t0.c2, rt0.c1))) COLLATE BINARY WHERE ((- (UNLIKELY(DISTINCT t0.c0)))) ORDER BY (((rt0.c1 IN ())) BETWEEN (((t0.c0) BETWEEN (t0.c1) AND ('8921933952335163113'))) AND (((rt0.c2) BETWEEN (t0.c1) AND (rt0.c2)))) ASC  NULLS FIRST, (((((((vt0.c0, rt0.c2, vt0.c0, t0.c2, t0.c0, rt0.c1, t0.c1))>=((vt0.c0, rt0.c1, vt0.c0, 'z', t0.c2, t0.c1, rt0.c2))))AND(CAST(rt0.c0 AS REAL))))OR(CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((- (UNLIKELY(DISTINCT t0.c0)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((t0.c0, t0.c0, rt0.c0))<((t0.c1, t0.c2, rt0.c1))) COLLATE BINARY ORDER BY (((rt0.c1 IN ())) BETWEEN (((t0.c0) BETWEEN (t0.c1) AND ('8921933952335163113'))) AND (((rt0.c2) BETWEEN (t0.c1) AND (rt0.c2)))) ASC  NULLS FIRST, (((((((vt0.c0, rt0.c2, vt0.c0, t0.c2, t0.c0, rt0.c1, t0.c1))>=((vt0.c0, rt0.c1, vt0.c0, 'z', t0.c2, t0.c1, rt0.c2))))AND(CAST(rt0.c0 AS REAL))))OR(CAST(rt0.c1 AS BLOB))));
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((t0.c0, t0.c0, rt0.c0))<((t0.c1, t0.c2, rt0.c1))) COLLATE BINARY WHERE ((- (UNLIKELY(DISTINCT t0.c0)))) ORDER BY (((rt0.c1 IN ())) BETWEEN (((t0.c0) BETWEEN (t0.c1) AND ('8921933952335163113'))) AND (((rt0.c2) BETWEEN (t0.c1) AND (rt0.c2)))) ASC  NULLS FIRST, (((((((vt0.c0, rt0.c2, vt0.c0, t0.c2, t0.c0, rt0.c1, t0.c1))>=((vt0.c0, rt0.c1, vt0.c0, 'z', t0.c2, t0.c1, rt0.c2))))AND(CAST(rt0.c0 AS REAL))))OR(CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((- (UNLIKELY(DISTINCT t0.c0)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((t0.c0, t0.c0, rt0.c0))<((t0.c1, t0.c2, rt0.c1))) COLLATE BINARY ORDER BY (((rt0.c1 IN ())) BETWEEN (((t0.c0) BETWEEN (t0.c1) AND ('8921933952335163113'))) AND (((rt0.c2) BETWEEN (t0.c1) AND (rt0.c2)))) ASC  NULLS FIRST, (((((((vt0.c0, rt0.c2, vt0.c0, t0.c2, t0.c0, rt0.c1, t0.c1))>=((vt0.c0, rt0.c1, vt0.c0, 'z', t0.c2, t0.c1, rt0.c2))))AND(CAST(rt0.c0 AS REAL))))OR(CAST(rt0.c1 AS BLOB))));
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((t0.c0, t0.c0, rt0.c0))<((t0.c1, t0.c2, rt0.c1))) COLLATE BINARY WHERE ((- (UNLIKELY(DISTINCT t0.c0)))) ORDER BY (((rt0.c1 IN ())) BETWEEN (((t0.c0) BETWEEN (t0.c1) AND ('8921933952335163113'))) AND (((rt0.c2) BETWEEN (t0.c1) AND (rt0.c2)))) ASC  NULLS FIRST, (((((((vt0.c0, rt0.c2, vt0.c0, t0.c2, t0.c0, rt0.c1, t0.c1))>=((vt0.c0, rt0.c1, vt0.c0, 'z', t0.c2, t0.c1, rt0.c2))))AND(CAST(rt0.c0 AS REAL))))OR(CAST(rt0.c1 AS BLOB)));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((CASE t0.c1  WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 END)>=(NULL)) WHERE (CAST(CAST(vt0.c0 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((CASE t0.c1  WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 END)>=(NULL)));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((CASE t0.c1  WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 END)>=(NULL)) WHERE (CAST(CAST(vt0.c0 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((CASE t0.c1  WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 END)>=(NULL)));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((CASE t0.c1  WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 END)>=(NULL)) WHERE (CAST(CAST(vt0.c0 AS TEXT) AS REAL));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0 NATURAL JOIN vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0 NATURAL JOIN vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0 NATURAL JOIN vt0 WHERE (LAST_INSERT_ROWID());
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON (((((rt0.c0)) BETWEEN (('<&')) AND ((rt0.c1))))>>(((0.9202691196678376)+(rt0.c0)))) CROSS JOIN vt0 ON ((((((((((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2)))AND(((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)))))AND(CAST(t0.c1 AS BLOB))))AND(t0.c2)))AND(CAST(1.44227903E8 AS INTEGER))) WHERE (LTRIM(((((((((t0.c2)AND('-701432128')))OR(t0.c0)))OR(x'')))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((LTRIM(((((((((t0.c2)AND('-701432128')))OR(t0.c0)))OR(x'')))AND(rt0.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((((rt0.c0)) BETWEEN (('<&')) AND ((rt0.c1))))>>(((0.9202691196678376)+(rt0.c0)))) CROSS JOIN vt0 ON ((((((((((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2)))AND(((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)))))AND(CAST(t0.c1 AS BLOB))))AND(t0.c2)))AND(CAST(1.44227903E8 AS INTEGER))));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON (((((rt0.c0)) BETWEEN (('<&')) AND ((rt0.c1))))>>(((0.9202691196678376)+(rt0.c0)))) CROSS JOIN vt0 ON ((((((((((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2)))AND(((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)))))AND(CAST(t0.c1 AS BLOB))))AND(t0.c2)))AND(CAST(1.44227903E8 AS INTEGER))) WHERE (LTRIM(((((((((t0.c2)AND('-701432128')))OR(t0.c0)))OR(x'')))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((LTRIM(((((((((t0.c2)AND('-701432128')))OR(t0.c0)))OR(x'')))AND(rt0.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((((rt0.c0)) BETWEEN (('<&')) AND ((rt0.c1))))>>(((0.9202691196678376)+(rt0.c0)))) CROSS JOIN vt0 ON ((((((((((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2)))AND(((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)))))AND(CAST(t0.c1 AS BLOB))))AND(t0.c2)))AND(CAST(1.44227903E8 AS INTEGER))));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON (((((rt0.c0)) BETWEEN (('<&')) AND ((rt0.c1))))>>(((0.9202691196678376)+(rt0.c0)))) CROSS JOIN vt0 ON ((((((((((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2)))AND(((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)))))AND(CAST(t0.c1 AS BLOB))))AND(t0.c2)))AND(CAST(1.44227903E8 AS INTEGER))) WHERE (LTRIM(((((((((t0.c2)AND('-701432128')))OR(t0.c0)))OR(x'')))AND(rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c2))<((rt0.c0))))>((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<((rt0.c0))))>((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c2))<((rt0.c0))))>((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<((rt0.c0))))>((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c2))<((rt0.c0))))>((rt0.c1 IN ()))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON (((((t0.c1)AND(t0.c1)))AND(t0.c0)) IN ()) INNER JOIN vt0 ON CASE vt0.c0  WHEN ((rt0.c0)>=(rt0.c2)) THEN t0.c0 COLLATE BINARY WHEN vt0.c0 THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN t0.c1 THEN rt0.c1 ELSE t0.c2 END THEN json_patch(t0.c0, rt0.c2) END WHERE (((rt0.c0)*((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)*((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((((t0.c1)AND(t0.c1)))AND(t0.c0)) IN ()) INNER JOIN vt0 ON CASE vt0.c0  WHEN ((rt0.c0)>=(rt0.c2)) THEN t0.c0 COLLATE BINARY WHEN vt0.c0 THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN t0.c1 THEN rt0.c1 ELSE t0.c2 END THEN json_patch(t0.c0, rt0.c2) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON (((((t0.c1)AND(t0.c1)))AND(t0.c0)) IN ()) INNER JOIN vt0 ON CASE vt0.c0  WHEN ((rt0.c0)>=(rt0.c2)) THEN t0.c0 COLLATE BINARY WHEN vt0.c0 THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN t0.c1 THEN rt0.c1 ELSE t0.c2 END THEN json_patch(t0.c0, rt0.c2) END WHERE (((rt0.c0)*((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)*((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((((t0.c1)AND(t0.c1)))AND(t0.c0)) IN ()) INNER JOIN vt0 ON CASE vt0.c0  WHEN ((rt0.c0)>=(rt0.c2)) THEN t0.c0 COLLATE BINARY WHEN vt0.c0 THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN t0.c1 THEN rt0.c1 ELSE t0.c2 END THEN json_patch(t0.c0, rt0.c2) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON (((((t0.c1)AND(t0.c1)))AND(t0.c0)) IN ()) INNER JOIN vt0 ON CASE vt0.c0  WHEN ((rt0.c0)>=(rt0.c2)) THEN t0.c0 COLLATE BINARY WHEN vt0.c0 THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN t0.c1 THEN rt0.c1 ELSE t0.c2 END THEN json_patch(t0.c0, rt0.c2) END WHERE (((rt0.c0)*((NOT (rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c0);
SELECT * FROM t0, vt0 WHERE ((((t0.c2)) NOT BETWEEN ((CASE WHEN '95125136' THEN t0.c2 ELSE x'' END)) AND ((CASE WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN ((CASE WHEN '95125136' THEN t0.c2 ELSE x'' END)) AND ((CASE WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 END)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c2)) NOT BETWEEN ((CASE WHEN '95125136' THEN t0.c2 ELSE x'' END)) AND ((CASE WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN ((CASE WHEN '95125136' THEN t0.c2 ELSE x'' END)) AND ((CASE WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 END)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c2)) NOT BETWEEN ((CASE WHEN '95125136' THEN t0.c2 ELSE x'' END)) AND ((CASE WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 END))));
SELECT COUNT(*) FROM rt0 WHERE (TRIM(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))) ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c0 WHEN '&{᫼XB' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE x'' END AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c0 WHEN '&{᫼XB' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE x'' END AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (TRIM(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))) ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c0 WHEN '&{᫼XB' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE x'' END AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c0 WHEN '&{᫼XB' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE x'' END AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (TRIM(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))) ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c0 WHEN '&{᫼XB' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE x'' END AS TEXT);
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOTNULL)) IS TRUE));
SELECT * FROM vt0, t0 WHERE ((((UNLIKELY(t0.c2)))>=((CAST(t0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((UNLIKELY(t0.c2)))>=((CAST(t0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT * FROM vt0, t0 WHERE ((((UNLIKELY(t0.c2)))>=((CAST(t0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((UNLIKELY(t0.c2)))>=((CAST(t0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT * FROM vt0, t0 WHERE ((((UNLIKELY(t0.c2)))>=((CAST(t0.c0 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'577a') ORDER BY ((((NULL) NOT NULL)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((rt0.c2)AND(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'577a') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((NULL) NOT NULL)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((rt0.c2)AND(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'577a') ORDER BY ((((NULL) NOT NULL)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((rt0.c2)AND(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'577a') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((NULL) NOT NULL)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((rt0.c2)AND(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'577a') ORDER BY ((((NULL) NOT NULL)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((rt0.c2)AND(rt0.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (CASE ((vt0.c0)%(1.5513942E7))  WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((x'') IS TRUE) THEN (((('816247663')OR(vt0.c0)))OR(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN UPPER(vt0.c0) WHEN ('*0m' IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (+ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)%(1.5513942E7))  WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((x'') IS TRUE) THEN (((('816247663')OR(vt0.c0)))OR(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN UPPER(vt0.c0) WHEN ('*0m' IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (+ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (CASE ((vt0.c0)%(1.5513942E7))  WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((x'') IS TRUE) THEN (((('816247663')OR(vt0.c0)))OR(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN UPPER(vt0.c0) WHEN ('*0m' IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (+ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)%(1.5513942E7))  WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((x'') IS TRUE) THEN (((('816247663')OR(vt0.c0)))OR(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN UPPER(vt0.c0) WHEN ('*0m' IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (+ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (CASE ((vt0.c0)%(1.5513942E7))  WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((x'') IS TRUE) THEN (((('816247663')OR(vt0.c0)))OR(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN UPPER(vt0.c0) WHEN ('*0m' IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (+ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((UNICODE(t0.c2))&((((t0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE ((((t0.c1 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((UNICODE(t0.c2))&((((t0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((UNICODE(t0.c2))&((((t0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE ((((t0.c1 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((UNICODE(t0.c2))&((((t0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((UNICODE(t0.c2))&((((t0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE ((((t0.c1 IN ())) ISNULL));
SELECT * FROM t0, rt0 WHERE (LIKELIHOOD(((rt0.c0) IS FALSE), 0.45466073138758956)) ORDER BY ((t0.c1)<=(t0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c0) IS FALSE), 0.45466073138758956)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c1)<=(t0.c2)) COLLATE RTRIM);
SELECT * FROM t0, rt0 WHERE (LIKELIHOOD(((rt0.c0) IS FALSE), 0.45466073138758956)) ORDER BY ((t0.c1)<=(t0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c0) IS FALSE), 0.45466073138758956)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c1)<=(t0.c2)) COLLATE RTRIM);
SELECT * FROM t0, rt0 WHERE (LIKELIHOOD(((rt0.c0) IS FALSE), 0.45466073138758956)) ORDER BY ((t0.c1)<=(t0.c2)) COLLATE RTRIM;
SELECT * FROM rt0, t0 WHERE ((('1009280239') NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (0.5417486199939539))) ORDER BY CAST(x'' AS BLOB) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('1009280239') NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (0.5417486199939539))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(x'' AS BLOB) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE ((('1009280239') NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (0.5417486199939539))) ORDER BY CAST(x'' AS BLOB) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('1009280239') NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (0.5417486199939539))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(x'' AS BLOB) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE ((('1009280239') NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (0.5417486199939539))) ORDER BY CAST(x'' AS BLOB) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, t0 WHERE ((t0.c1 IN ()) COLLATE RTRIM) ORDER BY (~ ((rt0.c1 IN (t0.c1)))) ASC, CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN rt0.c1 WHEN t0.c2 THEN vt0.c0 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (~ ((rt0.c1 IN (t0.c1)))) ASC, CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN rt0.c1 WHEN t0.c2 THEN vt0.c0 END COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((t0.c1 IN ()) COLLATE RTRIM) ORDER BY (~ ((rt0.c1 IN (t0.c1)))) ASC, CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN rt0.c1 WHEN t0.c2 THEN vt0.c0 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (~ ((rt0.c1 IN (t0.c1)))) ASC, CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN rt0.c1 WHEN t0.c2 THEN vt0.c0 END COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((t0.c1 IN ()) COLLATE RTRIM) ORDER BY (~ ((rt0.c1 IN (t0.c1)))) ASC, CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN rt0.c1 WHEN t0.c2 THEN vt0.c0 END COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT ALL * FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((t0.c0)<=('952919118')))AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND((t0.c1 IN ())))) ORDER BY ((((((vt0.c0)AND(rt0.c1)))OR(rt0.c0)))<>(t0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)<=('952919118')))AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND((t0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, t0 ORDER BY ((((((vt0.c0)AND(rt0.c1)))OR(rt0.c0)))!=(t0.c1)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((t0.c0)<=('952919118')))AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND((t0.c1 IN ())))) ORDER BY ((((((vt0.c0)AND(rt0.c1)))OR(rt0.c0)))<>(t0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)<=('952919118')))AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND((t0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, t0 ORDER BY ((((((vt0.c0)AND(rt0.c1)))OR(rt0.c0)))!=(t0.c1)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((t0.c0)<=('952919118')))AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND((t0.c1 IN ())))) ORDER BY ((((((vt0.c0)AND(rt0.c1)))OR(rt0.c0)))<>(t0.c1)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN rt0 ON ((((CAST(rt0.c2 AS REAL))OR(((0.9251735817477013) NOT NULL))))AND('')) WHERE (((rt0.c2)||(((vt0.c0) NOTNULL)))) ORDER BY LOWER((~ (rt0.c2)))  NULLS FIRST, CASE WHEN (((t0.c2))<>((t0.c1))) THEN ((rt0.c2)>(t0.c1)) WHEN ((rt0.c2)<(t0.c0)) THEN ((t0.c1)<<(vt0.c0)) WHEN ((((t0.c2)AND(t0.c0)))OR(vt0.c0)) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END ELSE ((rt0.c0)>(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)||(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON ((((CAST(rt0.c2 AS REAL))OR(((0.9251735817477013) NOT NULL))))AND('')) ORDER BY LOWER((~ (rt0.c2)))  NULLS FIRST, CASE WHEN (((t0.c2))!=((t0.c1))) THEN ((rt0.c2)>(t0.c1)) WHEN ((rt0.c2)<(t0.c0)) THEN ((t0.c1)<<(vt0.c0)) WHEN ((((t0.c2)AND(t0.c0)))OR(vt0.c0)) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END ELSE ((rt0.c0)>(rt0.c0)) END);
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN rt0 ON ((((CAST(rt0.c2 AS REAL))OR(((0.9251735817477013) NOT NULL))))AND('')) WHERE (((rt0.c2)||(((vt0.c0) NOTNULL)))) ORDER BY LOWER((~ (rt0.c2)))  NULLS FIRST, CASE WHEN (((t0.c2))<>((t0.c1))) THEN ((rt0.c2)>(t0.c1)) WHEN ((rt0.c2)<(t0.c0)) THEN ((t0.c1)<<(vt0.c0)) WHEN ((((t0.c2)AND(t0.c0)))OR(vt0.c0)) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END ELSE ((rt0.c0)>(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)||(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON ((((CAST(rt0.c2 AS REAL))OR(((0.9251735817477013) NOT NULL))))AND('')) ORDER BY LOWER((~ (rt0.c2)))  NULLS FIRST, CASE WHEN (((t0.c2))!=((t0.c1))) THEN ((rt0.c2)>(t0.c1)) WHEN ((rt0.c2)<(t0.c0)) THEN ((t0.c1)<<(vt0.c0)) WHEN ((((t0.c2)AND(t0.c0)))OR(vt0.c0)) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END ELSE ((rt0.c0)>(rt0.c0)) END);
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN rt0 ON ((((CAST(rt0.c2 AS REAL))OR(((0.9251735817477013) NOT NULL))))AND('')) WHERE (((rt0.c2)||(((vt0.c0) NOTNULL)))) ORDER BY LOWER((~ (rt0.c2)))  NULLS FIRST, CASE WHEN (((t0.c2))<>((t0.c1))) THEN ((rt0.c2)>(t0.c1)) WHEN ((rt0.c2)<(t0.c0)) THEN ((t0.c1)<<(vt0.c0)) WHEN ((((t0.c2)AND(t0.c0)))OR(vt0.c0)) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END ELSE ((rt0.c0)>(rt0.c0)) END;
SELECT * FROM t0 WHERE (((CASE t0.c1  WHEN t0.c2 THEN t0.c1 END)==((((('')OR(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c1  WHEN t0.c2 THEN t0.c1 END)=((((('')OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE t0.c1  WHEN t0.c2 THEN t0.c1 END)==((((('')OR(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c1  WHEN t0.c2 THEN t0.c1 END)=((((('')OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE t0.c1  WHEN t0.c2 THEN t0.c1 END)==((((('')OR(t0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) ORDER BY CAST((((t0.c1, t0.c0, vt0.c0)) BETWEEN ((t0.c1, t0.c2, vt0.c0)) AND ((t0.c1, vt0.c0, NULL))) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((((t0.c1, t0.c0, vt0.c0)) BETWEEN ((t0.c1, t0.c2, vt0.c0)) AND ((t0.c1, vt0.c0, NULL))) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) ORDER BY CAST((((t0.c1, t0.c0, vt0.c0)) BETWEEN ((t0.c1, t0.c2, vt0.c0)) AND ((t0.c1, vt0.c0, NULL))) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((((t0.c1, t0.c0, vt0.c0)) BETWEEN ((t0.c1, t0.c2, vt0.c0)) AND ((t0.c1, vt0.c0, NULL))) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) ORDER BY CAST((((t0.c1, t0.c0, vt0.c0)) BETWEEN ((t0.c1, t0.c2, vt0.c0)) AND ((t0.c1, vt0.c0, NULL))) AS TEXT) ASC  NULLS FIRST;
SELECT ALL * FROM t0 INNER JOIN rt0 ON x'' WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC)) ORDER BY (+ (rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON x'' ORDER BY (+ (rt0.c2)) ASC);
SELECT ALL * FROM t0 INNER JOIN rt0 ON x'' WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC)) ORDER BY (+ (rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON x'' ORDER BY (+ (rt0.c2)) ASC);
SELECT ALL * FROM t0 INNER JOIN rt0 ON x'' WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC)) ORDER BY (+ (rt0.c2)) ASC;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (TRIM(DISTINCT ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), ((t0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))) ORDER BY ((rt0.c2 COLLATE NOCASE)<<(x'8ad5c9d5'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), ((t0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((rt0.c2 COLLATE NOCASE)<<(x'8ad5c9d5'))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (TRIM(DISTINCT ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), ((t0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))) ORDER BY ((rt0.c2 COLLATE NOCASE)<<(x'8ad5c9d5'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), ((t0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((rt0.c2 COLLATE NOCASE)<<(x'8ad5c9d5'))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (TRIM(DISTINCT ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), ((t0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))) ORDER BY ((rt0.c2 COLLATE NOCASE)<<(x'8ad5c9d5'))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB), x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB), x'' ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB), x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB), x'' ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB), x'' ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt0 WHERE (COALESCE(((((rt0.c0)AND(vt0.c0)))OR(t0.c2)), ((t0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((((rt0.c0)AND(vt0.c0)))OR(t0.c2)), ((t0.c2) ISNULL))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (COALESCE(((((rt0.c0)AND(vt0.c0)))OR(t0.c2)), ((t0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((((rt0.c0)AND(vt0.c0)))OR(t0.c2)), ((t0.c2) ISNULL))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (COALESCE(((((rt0.c0)AND(vt0.c0)))OR(t0.c2)), ((t0.c2) ISNULL)));
SELECT ALL * FROM vt0, t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ('');
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ('-1');
SELECT SUM(count) FROM (SELECT (('-1') IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ('-1');
SELECT SUM(count) FROM (SELECT (('-1') IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ('-1');
SELECT ALL * FROM rt0, vt0 WHERE ('784921756') ORDER BY (((vt0.c0)IS(rt0.c2)) IN ()), CAST(TRIM(DISTINCT rt0.c2, vt0.c0) AS TEXT) DESC  NULLS LAST, (((rt0.c1)) BETWEEN ((((vt0.c0)-(rt0.c2)))) AND (((~ (rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('784921756') IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0)IS(rt0.c2)) IN ()), CAST(TRIM(DISTINCT rt0.c2, vt0.c0) AS TEXT) DESC  NULLS LAST, (((rt0.c1)) BETWEEN ((((vt0.c0)-(rt0.c2)))) AND (((~ (rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ('784921756') ORDER BY (((vt0.c0)IS(rt0.c2)) IN ()), CAST(TRIM(DISTINCT rt0.c2, vt0.c0) AS TEXT) DESC  NULLS LAST, (((rt0.c1)) BETWEEN ((((vt0.c0)-(rt0.c2)))) AND (((~ (rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('784921756') IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0)IS(rt0.c2)) IN ()), CAST(TRIM(DISTINCT rt0.c2, vt0.c0) AS TEXT) DESC  NULLS LAST, (((rt0.c1)) BETWEEN ((((vt0.c0)-(rt0.c2)))) AND (((~ (rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ('784921756') ORDER BY (((vt0.c0)IS(rt0.c2)) IN ()), CAST(TRIM(DISTINCT rt0.c2, vt0.c0) AS TEXT) DESC  NULLS LAST, (((rt0.c1)) BETWEEN ((((vt0.c0)-(rt0.c2)))) AND (((~ (rt0.c1))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (('1713016953') BETWEEN (((t0.c1) IS TRUE)) AND ((((t0.c0, rt0.c0, t0.c2))>=((t0.c2, rt0.c0, rt0.c1))))) FULL OUTER JOIN vt0 ON rt0.c2 WHERE (TOTAL_CHANGES()) ORDER BY (('507320189') NOT BETWEEN (((((((((rt0.c2)AND(t0.c1)))AND(vt0.c0)))AND('1067357501')))OR(t0.c2))) AND (((rt0.c2)-(vt0.c0))))  NULLS FIRST, 0.22898550354567315;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (('1713016953') BETWEEN (((t0.c1) IS TRUE)) AND ((((t0.c0, rt0.c0, t0.c2))>=((t0.c2, rt0.c0, rt0.c1))))) FULL OUTER JOIN vt0 ON rt0.c2 ORDER BY (('507320189') NOT BETWEEN (((((((((rt0.c2)AND(t0.c1)))AND(vt0.c0)))AND('1067357501')))OR(t0.c2))) AND (((rt0.c2)-(vt0.c0))))  NULLS FIRST, 0.22898550354567315);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (('1713016953') BETWEEN (((t0.c1) IS TRUE)) AND ((((t0.c0, rt0.c0, t0.c2))>=((t0.c2, rt0.c0, rt0.c1))))) FULL OUTER JOIN vt0 ON rt0.c2 WHERE (TOTAL_CHANGES()) ORDER BY (('507320189') NOT BETWEEN (((((((((rt0.c2)AND(t0.c1)))AND(vt0.c0)))AND('1067357501')))OR(t0.c2))) AND (((rt0.c2)-(vt0.c0))))  NULLS FIRST, 0.22898550354567315;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (('1713016953') BETWEEN (((t0.c1) IS TRUE)) AND ((((t0.c0, rt0.c0, t0.c2))>=((t0.c2, rt0.c0, rt0.c1))))) FULL OUTER JOIN vt0 ON rt0.c2 ORDER BY (('507320189') NOT BETWEEN (((((((((rt0.c2)AND(t0.c1)))AND(vt0.c0)))AND('1067357501')))OR(t0.c2))) AND (((rt0.c2)-(vt0.c0))))  NULLS FIRST, 0.22898550354567315);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (('1713016953') BETWEEN (((t0.c1) IS TRUE)) AND ((((t0.c0, rt0.c0, t0.c2))>=((t0.c2, rt0.c0, rt0.c1))))) FULL OUTER JOIN vt0 ON rt0.c2 WHERE (TOTAL_CHANGES()) ORDER BY (('507320189') NOT BETWEEN (((((((((rt0.c2)AND(t0.c1)))AND(vt0.c0)))AND('1067357501')))OR(t0.c2))) AND (((rt0.c2)-(vt0.c0))))  NULLS FIRST, 0.22898550354567315;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT ALL * FROM t0, vt0 WHERE ((+ (t0.c1))) ORDER BY CAST(t0.c2 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c1))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(t0.c2 AS TEXT) ASC);
SELECT ALL * FROM t0, vt0 WHERE ((+ (t0.c1))) ORDER BY CAST(t0.c2 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c1))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(t0.c2 AS TEXT) ASC);
SELECT ALL * FROM t0, vt0 WHERE ((+ (t0.c1))) ORDER BY CAST(t0.c2 AS TEXT) ASC;
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((((((t0.c0) IS FALSE)))>=(((((t0.c0, t0.c1, vt0.c0))==((t0.c1, vt0.c0, vt0.c0))))))) ORDER BY (((('1197995106') BETWEEN ('-771953524') AND (t0.c0)))*((('')IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0) IS FALSE)))>=(((((t0.c0, t0.c1, vt0.c0))==((t0.c1, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM t0 NOT INDEXED NATURAL JOIN vt0 ORDER BY (((('1197995106') BETWEEN ('-771953524') AND (t0.c0)))*((('')IS(vt0.c0)))));
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((((((t0.c0) IS FALSE)))>=(((((t0.c0, t0.c1, vt0.c0))==((t0.c1, vt0.c0, vt0.c0))))))) ORDER BY (((('1197995106') BETWEEN ('-771953524') AND (t0.c0)))*((('')IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0) IS FALSE)))>=(((((t0.c0, t0.c1, vt0.c0))==((t0.c1, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM t0 NOT INDEXED NATURAL JOIN vt0 ORDER BY (((('1197995106') BETWEEN ('-771953524') AND (t0.c0)))*((('')IS(vt0.c0)))));
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((((((t0.c0) IS FALSE)))>=(((((t0.c0, t0.c1, vt0.c0))==((t0.c1, vt0.c0, vt0.c0))))))) ORDER BY (((('1197995106') BETWEEN ('-771953524') AND (t0.c0)))*((('')IS(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c2 AS BLOB))<=((t0.c1 IN ()))) FULL OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((t0.c2 COLLATE NOCASE)) AND (((+ (rt0.c1))))) WHERE (CAST(((t0.c0) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c2 AS BLOB))<=((t0.c1 IN ()))) FULL OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((t0.c2 COLLATE NOCASE)) AND (((+ (rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c2 AS BLOB))<=((t0.c1 IN ()))) FULL OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((t0.c2 COLLATE NOCASE)) AND (((+ (rt0.c1))))) WHERE (CAST(((t0.c0) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c2 AS BLOB))<=((t0.c1 IN ()))) FULL OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((t0.c2 COLLATE NOCASE)) AND (((+ (rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c2 AS BLOB))<=((t0.c1 IN ()))) FULL OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((t0.c2 COLLATE NOCASE)) AND (((+ (rt0.c1))))) WHERE (CAST(((t0.c0) IS TRUE) AS TEXT));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c2 AS TEXT) AS INTEGER) CROSS JOIN t0 ON json_patch(((((rt0.c2)OR(rt0.c0)))OR(t0.c0)), rt0.c2 COLLATE NOCASE) WHERE (((((((t0.c2) IS TRUE))OR((((rt0.c1))<=((t0.c2))))))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) IS TRUE))OR((((rt0.c1))<=((t0.c2))))))AND(rt0.c0))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c2 AS TEXT) AS INTEGER) CROSS JOIN t0 ON json_patch(((((rt0.c2)OR(rt0.c0)))OR(t0.c0)), rt0.c2 COLLATE NOCASE));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c2 AS TEXT) AS INTEGER) CROSS JOIN t0 ON json_patch(((((rt0.c2)OR(rt0.c0)))OR(t0.c0)), rt0.c2 COLLATE NOCASE) WHERE (((((((t0.c2) IS TRUE))OR((((rt0.c1))<=((t0.c2))))))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) IS TRUE))OR((((rt0.c1))<=((t0.c2))))))AND(rt0.c0))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c2 AS TEXT) AS INTEGER) CROSS JOIN t0 ON json_patch(((((rt0.c2)OR(rt0.c0)))OR(t0.c0)), rt0.c2 COLLATE NOCASE));
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c1)))OR(t0.c0)))AND(t0.c2)))AND(t0.c2))) IS TRUE)) ORDER BY ((((CAST(-1.12995626E8 AS BLOB))OR(((t0.c2)IS(t0.c2)))))OR(((t0.c1)|(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)AND(t0.c1)))OR(t0.c0)))AND(t0.c2)))AND(t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((((CAST(-1.12995626E8 AS BLOB))OR(((t0.c2)IS(t0.c2)))))OR(((t0.c1)|(t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c1)))OR(t0.c0)))AND(t0.c2)))AND(t0.c2))) IS TRUE)) ORDER BY ((((CAST(-1.12995626E8 AS BLOB))OR(((t0.c2)IS(t0.c2)))))OR(((t0.c1)|(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)AND(t0.c1)))OR(t0.c0)))AND(t0.c2)))AND(t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((((CAST(-1.12995626E8 AS BLOB))OR(((t0.c2)IS(t0.c2)))))OR(((t0.c1)|(t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c1)))OR(t0.c0)))AND(t0.c2)))AND(t0.c2))) IS TRUE)) ORDER BY ((((CAST(-1.12995626E8 AS BLOB))OR(((t0.c2)IS(t0.c2)))))OR(((t0.c1)|(t0.c2))))  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0 INDEXED BY i79 WHERE ((((rt0.c2))=((((rt0.c1)+(x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))==((((rt0.c1)+(x'')))))) IS TRUE)  as count FROM rt0, vt0, t0 INDEXED BY i79);
SELECT ALL * FROM rt0, vt0, t0 INDEXED BY i79 WHERE ((((rt0.c2))=((((rt0.c1)+(x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))==((((rt0.c1)+(x'')))))) IS TRUE)  as count FROM rt0, vt0, t0 INDEXED BY i79);
SELECT ALL * FROM rt0, vt0, t0 INDEXED BY i79 WHERE ((((rt0.c2))=((((rt0.c1)+(x''))))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (t0.c2 IN ()) WHERE ((~ ((NOT (t0.c0))))) ORDER BY t0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((NOT (t0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (t0.c2 IN ()) ORDER BY t0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (t0.c2 IN ()) WHERE ((~ ((NOT (t0.c0))))) ORDER BY t0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((NOT (t0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (t0.c2 IN ()) ORDER BY t0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (t0.c2 IN ()) WHERE ((~ ((NOT (t0.c0))))) ORDER BY t0.c1 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (~ (vt0.c0)), TOTAL_CHANGES()))<((((vt0.c0)IS NOT(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), ABS(vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (~ (vt0.c0)), TOTAL_CHANGES()))<((((vt0.c0)IS NOT(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), ABS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (~ (vt0.c0)), TOTAL_CHANGES()))<((((vt0.c0)IS NOT(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), ABS(vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (~ (vt0.c0)), TOTAL_CHANGES()))<((((vt0.c0)IS NOT(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), ABS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (~ (vt0.c0)), TOTAL_CHANGES()))<((((vt0.c0)IS NOT(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), ABS(vt0.c0))))) ORDER BY vt0.c0;
SELECT COUNT(*) FROM t0, vt0 WHERE (0.9244859033402789 COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((0.9244859033402789 COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (0.9244859033402789 COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((0.9244859033402789 COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (0.9244859033402789 COLLATE RTRIM COLLATE NOCASE);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((vt0.c0 IN ())))) ORDER BY CASE ((NULL) NOT NULL)  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0) BETWEEN (rt0.c2) AND ('')) WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) WHEN x'' THEN ((rt0.c0) NOTNULL) END;
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE ((NULL) NOT NULL)  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0) BETWEEN (rt0.c2) AND ('')) WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) WHEN x'' THEN ((rt0.c0) NOTNULL) END);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((vt0.c0 IN ())))) ORDER BY CASE ((NULL) NOT NULL)  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0) BETWEEN (rt0.c2) AND ('')) WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) WHEN x'' THEN ((rt0.c0) NOTNULL) END;
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE ((NULL) NOT NULL)  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0) BETWEEN (rt0.c2) AND ('')) WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) WHEN x'' THEN ((rt0.c0) NOTNULL) END);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((vt0.c0 IN ())))) ORDER BY CASE ((NULL) NOT NULL)  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0) BETWEEN (rt0.c2) AND ('')) WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) WHEN x'' THEN ((rt0.c0) NOTNULL) END;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c1)&(vt0.c0)), rt0.c1 COLLATE NOCASE, CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END))<((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)), IFNULL(DISTINCT vt0.c0, vt0.c0), ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)&(vt0.c0)), rt0.c1 COLLATE NOCASE, CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END))<((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)), IFNULL(DISTINCT vt0.c0, vt0.c0), ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c1)&(vt0.c0)), rt0.c1 COLLATE NOCASE, CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END))<((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)), IFNULL(DISTINCT vt0.c0, vt0.c0), ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)&(vt0.c0)), rt0.c1 COLLATE NOCASE, CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END))<((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)), IFNULL(DISTINCT vt0.c0, vt0.c0), ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c1)&(vt0.c0)), rt0.c1 COLLATE NOCASE, CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END))<((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)), IFNULL(DISTINCT vt0.c0, vt0.c0), ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2))))));
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0, t0 WHERE (((((vt0.c0) NOTNULL)) IS TRUE)) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY rt0.c2  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0, t0 WHERE (((((vt0.c0) NOTNULL)) IS TRUE)) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY rt0.c2  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0, t0 WHERE (((((vt0.c0) NOTNULL)) IS TRUE)) ORDER BY rt0.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN NULL END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN NULL END IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN NULL END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN NULL END IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN NULL END IN ()));
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((rt0.c1)<(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)<(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((rt0.c1)<(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)<(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((rt0.c1)<(rt0.c1)) AS BLOB));
SELECT * FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE RTRIM);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 WHERE (((((rt0.c0)>(rt0.c1)))GLOB(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>(rt0.c1)))GLOB(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 WHERE (((((rt0.c0)>(rt0.c1)))GLOB(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>(rt0.c1)))GLOB(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 WHERE (((((rt0.c0)>(rt0.c1)))GLOB(((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY CASE TRIM(rt0.c2)  WHEN CAST(rt0.c2 AS NUMERIC) THEN (((rt0.c1, rt0.c2, rt0.c1))=((rt0.c0, rt0.c2, rt0.c2))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE TRIM(rt0.c2)  WHEN CAST(rt0.c2 AS NUMERIC) THEN (((rt0.c1, rt0.c2, rt0.c1))==((rt0.c0, rt0.c2, rt0.c2))) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY CASE TRIM(rt0.c2)  WHEN CAST(rt0.c2 AS NUMERIC) THEN (((rt0.c1, rt0.c2, rt0.c1))=((rt0.c0, rt0.c2, rt0.c2))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE TRIM(rt0.c2)  WHEN CAST(rt0.c2 AS NUMERIC) THEN (((rt0.c1, rt0.c2, rt0.c1))==((rt0.c0, rt0.c2, rt0.c2))) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY CASE TRIM(rt0.c2)  WHEN CAST(rt0.c2 AS NUMERIC) THEN (((rt0.c1, rt0.c2, rt0.c1))=((rt0.c0, rt0.c2, rt0.c2))) END ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))|(((t0.c1) NOTNULL)))) ORDER BY t0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))|(((t0.c1) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c1 DESC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))|(((t0.c1) NOTNULL)))) ORDER BY t0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))|(((t0.c1) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c1 DESC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))|(((t0.c1) NOTNULL)))) ORDER BY t0.c1 DESC;
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0 IN (vt0.c0, rt0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (rt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(SQLITE_VERSION())))OR((~ (vt0.c0)))) DESC  NULLS LAST, ((x'' COLLATE NOCASE)GLOB(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, rt0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(SQLITE_VERSION())))OR((~ (vt0.c0)))) DESC  NULLS LAST, ((x'' COLLATE NOCASE)GLOB(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0 IN (vt0.c0, rt0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (rt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(SQLITE_VERSION())))OR((~ (vt0.c0)))) DESC  NULLS LAST, ((x'' COLLATE NOCASE)GLOB(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, rt0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(SQLITE_VERSION())))OR((~ (vt0.c0)))) DESC  NULLS LAST, ((x'' COLLATE NOCASE)GLOB(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0 IN (vt0.c0, rt0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (rt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(SQLITE_VERSION())))OR((~ (vt0.c0)))) DESC  NULLS LAST, ((x'' COLLATE NOCASE)GLOB(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 INDEXED BY i79 WHERE ((((- (rt0.c2)))>(((rt0.c1)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))>(((rt0.c1)>=(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0 INDEXED BY i79);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 INDEXED BY i79 WHERE ((((- (rt0.c2)))>(((rt0.c1)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))>(((rt0.c1)>=(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0 INDEXED BY i79);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 INDEXED BY i79 WHERE ((((- (rt0.c2)))>(((rt0.c1)>=(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT NULL) COLLATE NOCASE) ORDER BY (((('D㿹k	d쫶E~')GLOB(rt0.c2))) NOT BETWEEN (rt0.c2) AND (((rt0.c1)*(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((('D㿹k	d쫶E~')GLOB(rt0.c2))) NOT BETWEEN (rt0.c2) AND (((rt0.c1)*(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT NULL) COLLATE NOCASE) ORDER BY (((('D㿹k	d쫶E~')GLOB(rt0.c2))) NOT BETWEEN (rt0.c2) AND (((rt0.c1)*(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((('D㿹k	d쫶E~')GLOB(rt0.c2))) NOT BETWEEN (rt0.c2) AND (((rt0.c1)*(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT NULL) COLLATE NOCASE) ORDER BY (((('D㿹k	d쫶E~')GLOB(rt0.c2))) NOT BETWEEN (rt0.c2) AND (((rt0.c1)*(rt0.c2)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE ((NULL) NOT BETWEEN (vt0.c0) AND ('xD'))  WHEN ((vt0.c0)==(vt0.c0)) THEN vt0.c0 WHEN vt0.c0 THEN (NOT (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)-(vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL) NOT BETWEEN (vt0.c0) AND ('xD'))  WHEN ((vt0.c0)=(vt0.c0)) THEN vt0.c0 WHEN vt0.c0 THEN (NOT (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)-(vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((NULL) NOT BETWEEN (vt0.c0) AND ('xD'))  WHEN ((vt0.c0)==(vt0.c0)) THEN vt0.c0 WHEN vt0.c0 THEN (NOT (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)-(vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL) NOT BETWEEN (vt0.c0) AND ('xD'))  WHEN ((vt0.c0)=(vt0.c0)) THEN vt0.c0 WHEN vt0.c0 THEN (NOT (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)-(vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((NULL) NOT BETWEEN (vt0.c0) AND ('xD'))  WHEN ((vt0.c0)==(vt0.c0)) THEN vt0.c0 WHEN vt0.c0 THEN (NOT (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)-(vt0.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC;
SELECT * FROM rt0, vt0 FULL OUTER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN NULL THEN rt0.c2 END)) AND ((rt0.c1 COLLATE BINARY))) WHERE ((ROUND(vt0.c0, rt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((ROUND(vt0.c0, rt0.c0) IN ())) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN NULL THEN rt0.c2 END)) AND ((rt0.c1 COLLATE BINARY))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN NULL THEN rt0.c2 END)) AND ((rt0.c1 COLLATE BINARY))) WHERE ((ROUND(vt0.c0, rt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((ROUND(vt0.c0, rt0.c0) IN ())) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN NULL THEN rt0.c2 END)) AND ((rt0.c1 COLLATE BINARY))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN NULL THEN rt0.c2 END)) AND ((rt0.c1 COLLATE BINARY))) WHERE ((ROUND(vt0.c0, rt0.c0) IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c1 COLLATE BINARY) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c1 COLLATE BINARY) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c1 COLLATE BINARY) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c1 COLLATE BINARY) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c1 COLLATE BINARY) AND (((vt0.c0) IS FALSE))));
SELECT * FROM t0, rt0 INNER JOIN vt0 ON ((('-1816174562' IN ()))<<(((t0.c2)||(t0.c2)))) WHERE ((((t0.c1 IN ()))<<((((rt0.c0))<((rt0.c1)))))) ORDER BY CASE t0.c2  WHEN CAST(rt0.c0 AS REAL) THEN (rt0.c2 IN (x'')) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ()))<<((((rt0.c0))<((rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((('-1816174562' IN ()))<<(((t0.c2)||(t0.c2)))) ORDER BY CASE t0.c2  WHEN CAST(rt0.c0 AS REAL) THEN (rt0.c2 IN (x'')) END DESC  NULLS LAST);
SELECT * FROM t0, rt0 INNER JOIN vt0 ON ((('-1816174562' IN ()))<<(((t0.c2)||(t0.c2)))) WHERE ((((t0.c1 IN ()))<<((((rt0.c0))<((rt0.c1)))))) ORDER BY CASE t0.c2  WHEN CAST(rt0.c0 AS REAL) THEN (rt0.c2 IN (x'')) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ()))<<((((rt0.c0))<((rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((('-1816174562' IN ()))<<(((t0.c2)||(t0.c2)))) ORDER BY CASE t0.c2  WHEN CAST(rt0.c0 AS REAL) THEN (rt0.c2 IN (x'')) END DESC  NULLS LAST);
SELECT * FROM t0, rt0 INNER JOIN vt0 ON ((('-1816174562' IN ()))<<(((t0.c2)||(t0.c2)))) WHERE ((((t0.c1 IN ()))<<((((rt0.c0))<((rt0.c1)))))) ORDER BY CASE t0.c2  WHEN CAST(rt0.c0 AS REAL) THEN (rt0.c2 IN (x'')) END DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT (NULL IN (vt0.c0, vt0.c0)))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (NULL IN (vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) ISNULL));
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT (NULL IN (vt0.c0, vt0.c0)))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (NULL IN (vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) ISNULL));
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT (NULL IN (vt0.c0, vt0.c0)))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) ISNULL);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)) AS REAL) WHERE ((~ ((rt0.c2 IN ())))) ORDER BY (((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0)), ((vt0.c0) ISNULL), CASE vt0.c0  WHEN rt0.c0 THEN NULL ELSE '-886952208' END))<=(((((rt0.c1))<=((rt0.c2))), ((rt0.c2)!=(rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) DESC;
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)) AS REAL) ORDER BY (((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0)), ((vt0.c0) ISNULL), CASE vt0.c0  WHEN rt0.c0 THEN NULL ELSE '-886952208' END))<=(((((rt0.c1))<=((rt0.c2))), ((rt0.c2)<>(rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)) AS REAL) WHERE ((~ ((rt0.c2 IN ())))) ORDER BY (((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0)), ((vt0.c0) ISNULL), CASE vt0.c0  WHEN rt0.c0 THEN NULL ELSE '-886952208' END))<=(((((rt0.c1))<=((rt0.c2))), ((rt0.c2)!=(rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) DESC;
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)) AS REAL) ORDER BY (((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0)), ((vt0.c0) ISNULL), CASE vt0.c0  WHEN rt0.c0 THEN NULL ELSE '-886952208' END))<=(((((rt0.c1))<=((rt0.c2))), ((rt0.c2)<>(rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)) AS REAL) WHERE ((~ ((rt0.c2 IN ())))) ORDER BY (((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0)), ((vt0.c0) ISNULL), CASE vt0.c0  WHEN rt0.c0 THEN NULL ELSE '-886952208' END))<=(((((rt0.c1))<=((rt0.c2))), ((rt0.c2)!=(rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c0) NOT NULL)) ORDER BY CAST(((t0.c2)AND(vt0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((t0.c2)AND(vt0.c0)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c0) NOT NULL)) ORDER BY CAST(((t0.c2)AND(vt0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((t0.c2)AND(vt0.c0)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c0) NOT NULL)) ORDER BY CAST(((t0.c2)AND(vt0.c0)) AS REAL)  NULLS LAST;
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((t0.c1) NOT NULL) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON CASE t0.c0  WHEN (((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((t0.c1))) THEN CAST(rt0.c2 AS BLOB) ELSE (((rt0.c2, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, t0.c2, t0.c2)) AND ((x'', rt0.c2, rt0.c0))) END WHERE (((rt0.c1 COLLATE BINARY)<(((((((((t0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(t0.c1)))AND(t0.c1))))) ORDER BY CAST(((t0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)<(((((((((t0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(t0.c1)))AND(t0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((t0.c1) NOT NULL) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON CASE t0.c0  WHEN (((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((t0.c1))) THEN CAST(rt0.c2 AS BLOB) ELSE (((rt0.c2, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, t0.c2, t0.c2)) AND ((x'', rt0.c2, rt0.c0))) END ORDER BY CAST(((t0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((t0.c1) NOT NULL) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON CASE t0.c0  WHEN (((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((t0.c1))) THEN CAST(rt0.c2 AS BLOB) ELSE (((rt0.c2, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, t0.c2, t0.c2)) AND ((x'', rt0.c2, rt0.c0))) END WHERE (((rt0.c1 COLLATE BINARY)<(((((((((t0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(t0.c1)))AND(t0.c1))))) ORDER BY CAST(((t0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)<(((((((((t0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(t0.c1)))AND(t0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((t0.c1) NOT NULL) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON CASE t0.c0  WHEN (((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((t0.c1))) THEN CAST(rt0.c2 AS BLOB) ELSE (((rt0.c2, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, t0.c2, t0.c2)) AND ((x'', rt0.c2, rt0.c0))) END ORDER BY CAST(((t0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((t0.c1) NOT NULL) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON CASE t0.c0  WHEN (((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((t0.c1))) THEN CAST(rt0.c2 AS BLOB) ELSE (((rt0.c2, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, t0.c2, t0.c2)) AND ((x'', rt0.c2, rt0.c0))) END WHERE (((rt0.c1 COLLATE BINARY)<(((((((((t0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(t0.c1)))AND(t0.c1))))) ORDER BY CAST(((t0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS BLOB) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (((vt0.c0)>(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)>(vt0.c0)) IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (((vt0.c0)>(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)>(vt0.c0)) IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (((vt0.c0)>(vt0.c0)) IN ()) DESC;
SELECT * FROM t0, vt0 WHERE ((((t0.c2) BETWEEN (t0.c0) AND (t0.c1)) IN ())) ORDER BY CASE WHEN t0.c1 COLLATE BINARY THEN LIKELY(DISTINCT 0X17368289) ELSE ((((t0.c2)AND(t0.c2)))OR(t0.c2)) END, (((+ (vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2) BETWEEN (t0.c0) AND (t0.c1)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN t0.c1 COLLATE BINARY THEN LIKELY(DISTINCT 0X17368289) ELSE ((((t0.c2)AND(t0.c2)))OR(t0.c2)) END, (((+ (vt0.c0))) ISNULL) ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ((((t0.c2) BETWEEN (t0.c0) AND (t0.c1)) IN ())) ORDER BY CASE WHEN t0.c1 COLLATE BINARY THEN LIKELY(DISTINCT 0X17368289) ELSE ((((t0.c2)AND(t0.c2)))OR(t0.c2)) END, (((+ (vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2) BETWEEN (t0.c0) AND (t0.c1)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN t0.c1 COLLATE BINARY THEN LIKELY(DISTINCT 0X17368289) ELSE ((((t0.c2)AND(t0.c2)))OR(t0.c2)) END, (((+ (vt0.c0))) ISNULL) ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ((((t0.c2) BETWEEN (t0.c0) AND (t0.c1)) IN ())) ORDER BY CASE WHEN t0.c1 COLLATE BINARY THEN LIKELY(DISTINCT 0X17368289) ELSE ((((t0.c2)AND(t0.c2)))OR(t0.c2)) END, (((+ (vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((((((vt0.c0)OR((vt0.c0 IN ()))))AND((NULL IN ()))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2)))))OR(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE (((IFNULL(rt0.c2, t0.c0))LIKE(((((x'')AND(t0.c2)))AND(vt0.c0))))) ORDER BY ((0.1856451955862608)IS(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c2, t0.c0))LIKE(((((x'')AND(t0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((((((vt0.c0)OR((vt0.c0 IN ()))))AND((NULL IN ()))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2)))))OR(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) ORDER BY ((0.1856451955862608)IS(NULL)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((((((vt0.c0)OR((vt0.c0 IN ()))))AND((NULL IN ()))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2)))))OR(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE (((IFNULL(rt0.c2, t0.c0))LIKE(((((x'')AND(t0.c2)))AND(vt0.c0))))) ORDER BY ((0.1856451955862608)IS(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c2, t0.c0))LIKE(((((x'')AND(t0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((((((vt0.c0)OR((vt0.c0 IN ()))))AND((NULL IN ()))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2)))))OR(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) ORDER BY ((0.1856451955862608)IS(NULL)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((((((((vt0.c0)OR((vt0.c0 IN ()))))AND((NULL IN ()))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2)))))OR(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE (((IFNULL(rt0.c2, t0.c0))LIKE(((((x'')AND(t0.c2)))AND(vt0.c0))))) ORDER BY ((0.1856451955862608)IS(NULL)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE RTRIM) ISNULL) WHERE (x'') ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE RTRIM) ISNULL) ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE RTRIM) ISNULL) WHERE (x'') ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE RTRIM) ISNULL) ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE RTRIM) ISNULL) WHERE (x'') ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN (((~ (rt0.c2)))) AND (((rt0.c1 IN ())))) FULL OUTER JOIN rt0 ON CASE WHEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN t0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END THEN TRIM(rt0.c1) ELSE ((t0.c2) BETWEEN (rt0.c1) AND (t0.c0)) END WHERE (((vt0.c0 COLLATE RTRIM)>((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c1)))))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2)))OR('bO,')) ASC, ((t0.c1)<(t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c1)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN (((~ (rt0.c2)))) AND (((rt0.c1 IN ())))) FULL OUTER JOIN rt0 ON CASE WHEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN t0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END THEN TRIM(rt0.c1) ELSE ((t0.c2) BETWEEN (rt0.c1) AND (t0.c0)) END ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2)))OR('bO,')) ASC, ((t0.c1)<(t0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN (((~ (rt0.c2)))) AND (((rt0.c1 IN ())))) FULL OUTER JOIN rt0 ON CASE WHEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN t0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END THEN TRIM(rt0.c1) ELSE ((t0.c2) BETWEEN (rt0.c1) AND (t0.c0)) END WHERE (((vt0.c0 COLLATE RTRIM)>((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c1)))))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2)))OR('bO,')) ASC, ((t0.c1)<(t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c1)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN (((~ (rt0.c2)))) AND (((rt0.c1 IN ())))) FULL OUTER JOIN rt0 ON CASE WHEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN t0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END THEN TRIM(rt0.c1) ELSE ((t0.c2) BETWEEN (rt0.c1) AND (t0.c0)) END ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2)))OR('bO,')) ASC, ((t0.c1)<(t0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((t0.c0)OR(t0.c2)))OR(rt0.c1)))LIKE((((t0.c0, t0.c0, t0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c2, t0.c2, t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c2)))OR(rt0.c1)))LIKE((((t0.c0, t0.c0, t0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c2, t0.c2, t0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((t0.c0)OR(t0.c2)))OR(rt0.c1)))LIKE((((t0.c0, t0.c0, t0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c2, t0.c2, t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c2)))OR(rt0.c1)))LIKE((((t0.c0, t0.c0, t0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c2, t0.c2, t0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((t0.c0)OR(t0.c2)))OR(rt0.c1)))LIKE((((t0.c0, t0.c0, t0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c2, t0.c2, t0.c0))))));
SELECT * FROM t0, vt0, rt0 WHERE (((LIKELIHOOD(t0.c2, 0.7995626396748502)) NOT NULL)) ORDER BY (~ (((t0.c0)<(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(t0.c2, 0.7995626396748502)) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (~ (((t0.c0)<(rt0.c2)))));
SELECT * FROM t0, vt0, rt0 WHERE (((LIKELIHOOD(t0.c2, 0.7995626396748502)) NOT NULL)) ORDER BY (~ (((t0.c0)<(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(t0.c2, 0.7995626396748502)) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (~ (((t0.c0)<(rt0.c2)))));
SELECT * FROM t0, vt0, rt0 WHERE (((LIKELIHOOD(t0.c2, 0.7995626396748502)) NOT NULL)) ORDER BY (~ (((t0.c0)<(rt0.c2))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((t0.c2) NOT BETWEEN (rt0.c0) AND (x'')))AND(((((t0.c2)OR(rt0.c2)))AND(t0.c0)))))OR(CASE t0.c0  WHEN rt0.c0 THEN t0.c2 END))) ORDER BY (((rt0.c1, '㬱^l2_#', rt0.c1)) NOT BETWEEN (((((t0.c2))<((rt0.c0))), CAST(t0.c1 AS BLOB), rt0.c1 COLLATE RTRIM)) AND ((((rt0.c2) IS TRUE), ((t0.c1) IS TRUE), TRIM(DISTINCT rt0.c2, t0.c1)))) DESC  NULLS LAST, ((((((t0.c1)OR(rt0.c0)))AND(vt0.c0))) BETWEEN ((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c2, t0.c0)))) AND (CAST(rt0.c2 AS TEXT))), TRIM(DISTINCT LIKELIHOOD(DISTINCT vt0.c0, 0.7599840315714672), rt0.c1)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) NOT BETWEEN (rt0.c0) AND (x'')))AND(((((t0.c2)OR(rt0.c2)))AND(t0.c0)))))OR(CASE t0.c0  WHEN rt0.c0 THEN t0.c2 END))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((rt0.c1, '㬱^l2_#', rt0.c1)) NOT BETWEEN (((((t0.c2))<((rt0.c0))), CAST(t0.c1 AS BLOB), rt0.c1 COLLATE RTRIM)) AND ((((rt0.c2) IS TRUE), ((t0.c1) IS TRUE), TRIM(DISTINCT rt0.c2, t0.c1)))) DESC  NULLS LAST, ((((((t0.c1)OR(rt0.c0)))AND(vt0.c0))) BETWEEN ((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c2, t0.c0)))) AND (CAST(rt0.c2 AS TEXT))), TRIM(DISTINCT LIKELIHOOD(DISTINCT vt0.c0, 0.7599840315714672), rt0.c1)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((t0.c2) NOT BETWEEN (rt0.c0) AND (x'')))AND(((((t0.c2)OR(rt0.c2)))AND(t0.c0)))))OR(CASE t0.c0  WHEN rt0.c0 THEN t0.c2 END))) ORDER BY (((rt0.c1, '㬱^l2_#', rt0.c1)) NOT BETWEEN (((((t0.c2))<((rt0.c0))), CAST(t0.c1 AS BLOB), rt0.c1 COLLATE RTRIM)) AND ((((rt0.c2) IS TRUE), ((t0.c1) IS TRUE), TRIM(DISTINCT rt0.c2, t0.c1)))) DESC  NULLS LAST, ((((((t0.c1)OR(rt0.c0)))AND(vt0.c0))) BETWEEN ((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c2, t0.c0)))) AND (CAST(rt0.c2 AS TEXT))), TRIM(DISTINCT LIKELIHOOD(DISTINCT vt0.c0, 0.7599840315714672), rt0.c1)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) NOT BETWEEN (rt0.c0) AND (x'')))AND(((((t0.c2)OR(rt0.c2)))AND(t0.c0)))))OR(CASE t0.c0  WHEN rt0.c0 THEN t0.c2 END))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((rt0.c1, '㬱^l2_#', rt0.c1)) NOT BETWEEN (((((t0.c2))<((rt0.c0))), CAST(t0.c1 AS BLOB), rt0.c1 COLLATE RTRIM)) AND ((((rt0.c2) IS TRUE), ((t0.c1) IS TRUE), TRIM(DISTINCT rt0.c2, t0.c1)))) DESC  NULLS LAST, ((((((t0.c1)OR(rt0.c0)))AND(vt0.c0))) BETWEEN ((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c2, t0.c0)))) AND (CAST(rt0.c2 AS TEXT))), TRIM(DISTINCT LIKELIHOOD(DISTINCT vt0.c0, 0.7599840315714672), rt0.c1)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((t0.c2) NOT BETWEEN (rt0.c0) AND (x'')))AND(((((t0.c2)OR(rt0.c2)))AND(t0.c0)))))OR(CASE t0.c0  WHEN rt0.c0 THEN t0.c2 END))) ORDER BY (((rt0.c1, '㬱^l2_#', rt0.c1)) NOT BETWEEN (((((t0.c2))<((rt0.c0))), CAST(t0.c1 AS BLOB), rt0.c1 COLLATE RTRIM)) AND ((((rt0.c2) IS TRUE), ((t0.c1) IS TRUE), TRIM(DISTINCT rt0.c2, t0.c1)))) DESC  NULLS LAST, ((((((t0.c1)OR(rt0.c0)))AND(vt0.c0))) BETWEEN ((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c2, t0.c0)))) AND (CAST(rt0.c2 AS TEXT))), TRIM(DISTINCT LIKELIHOOD(DISTINCT vt0.c0, 0.7599840315714672), rt0.c1)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((0.2571484525436253)<((t0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((0.2571484525436253)<((t0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((0.2571484525436253)<((t0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((0.2571484525436253)<((t0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((0.2571484525436253)<((t0.c1 IN ()))));
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))  WHEN ((t0.c1) BETWEEN (t0.c0) AND (x'210e')) THEN (- (t0.c1)) ELSE ((t0.c1) IS TRUE) END) ORDER BY ((((t0.c1) ISNULL)) BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (0.955419389036551 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))  WHEN ((t0.c1) BETWEEN (t0.c0) AND (x'210e')) THEN (- (t0.c1)) ELSE ((t0.c1) IS TRUE) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1) ISNULL)) BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (0.955419389036551 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))  WHEN ((t0.c1) BETWEEN (t0.c0) AND (x'210e')) THEN (- (t0.c1)) ELSE ((t0.c1) IS TRUE) END) ORDER BY ((((t0.c1) ISNULL)) BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (0.955419389036551 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))  WHEN ((t0.c1) BETWEEN (t0.c0) AND (x'210e')) THEN (- (t0.c1)) ELSE ((t0.c1) IS TRUE) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1) ISNULL)) BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (0.955419389036551 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))  WHEN ((t0.c1) BETWEEN (t0.c0) AND (x'210e')) THEN (- (t0.c1)) ELSE ((t0.c1) IS TRUE) END) ORDER BY ((((t0.c1) ISNULL)) BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (0.955419389036551 COLLATE RTRIM));
SELECT * FROM rt0 WHERE (((rt0.c1)/(rt0.c2)) COLLATE NOCASE) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN CAST(rt0.c2 AS REAL) ELSE (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END, (((((rt0.c2))<>((rt0.c2)))) NOT BETWEEN (1.418892735E9 COLLATE BINARY) AND (rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)/(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN CAST(rt0.c2 AS REAL) ELSE (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END, (((((rt0.c2))!=((rt0.c2)))) NOT BETWEEN (1.418892735E9 COLLATE BINARY) AND (rt0.c1 COLLATE BINARY)));
SELECT * FROM rt0 WHERE (((rt0.c1)/(rt0.c2)) COLLATE NOCASE) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN CAST(rt0.c2 AS REAL) ELSE (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END, (((((rt0.c2))<>((rt0.c2)))) NOT BETWEEN (1.418892735E9 COLLATE BINARY) AND (rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)/(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN CAST(rt0.c2 AS REAL) ELSE (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END, (((((rt0.c2))!=((rt0.c2)))) NOT BETWEEN (1.418892735E9 COLLATE BINARY) AND (rt0.c1 COLLATE BINARY)));
SELECT * FROM rt0 WHERE (((rt0.c1)/(rt0.c2)) COLLATE NOCASE) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN CAST(rt0.c2 AS REAL) ELSE (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END, (((((rt0.c2))<>((rt0.c2)))) NOT BETWEEN (1.418892735E9 COLLATE BINARY) AND (rt0.c1 COLLATE BINARY));
SELECT ALL * FROM t0 WHERE ((((t0.c1, x'', t0.c2)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END, CAST(t0.c0 AS INTEGER), ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)))) AND (((~ (t0.c1)), x'' COLLATE BINARY, ((-1641524012)|(t0.c0)))))) ORDER BY ''  NULLS FIRST, (((t0.c0)) BETWEEN ((((t0.c2) IS TRUE))) AND ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c1, x'', t0.c2)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END, CAST(t0.c0 AS INTEGER), ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)))) AND (((~ (t0.c1)), x'' COLLATE BINARY, ((-1641524012)|(t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ''  NULLS FIRST, (((t0.c0)) BETWEEN ((((t0.c2) IS TRUE))) AND ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0))))) DESC);
SELECT ALL * FROM t0 WHERE ((((t0.c1, x'', t0.c2)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END, CAST(t0.c0 AS INTEGER), ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)))) AND (((~ (t0.c1)), x'' COLLATE BINARY, ((-1641524012)|(t0.c0)))))) ORDER BY ''  NULLS FIRST, (((t0.c0)) BETWEEN ((((t0.c2) IS TRUE))) AND ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c1, x'', t0.c2)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END, CAST(t0.c0 AS INTEGER), ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)))) AND (((~ (t0.c1)), x'' COLLATE BINARY, ((-1641524012)|(t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ''  NULLS FIRST, (((t0.c0)) BETWEEN ((((t0.c2) IS TRUE))) AND ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0))))) DESC);
SELECT ALL * FROM t0 WHERE ((((t0.c1, x'', t0.c2)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END, CAST(t0.c0 AS INTEGER), ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)))) AND (((~ (t0.c1)), x'' COLLATE BINARY, ((-1641524012)|(t0.c0)))))) ORDER BY ''  NULLS FIRST, (((t0.c0)) BETWEEN ((((t0.c2) IS TRUE))) AND ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0))))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(CAST(vt0.c0 AS TEXT)))) ORDER BY UPPER(DISTINCT 0.5792665769224008)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(DISTINCT 0.5792665769224008)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(CAST(vt0.c0 AS TEXT)))) ORDER BY UPPER(DISTINCT 0.5792665769224008)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(DISTINCT 0.5792665769224008)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(CAST(vt0.c0 AS TEXT)))) ORDER BY UPPER(DISTINCT 0.5792665769224008)  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((((rt0.c0)OR(0.5160391557008581)))OR(CAST(t0.c2 AS REAL))))AND(((rt0.c2) IS FALSE))))OR((((rt0.c0))>((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)OR(0.5160391557008581)))OR(CAST(t0.c2 AS REAL))))AND(((rt0.c2) IS FALSE))))OR((((rt0.c0))>((t0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((((rt0.c0)OR(0.5160391557008581)))OR(CAST(t0.c2 AS REAL))))AND(((rt0.c2) IS FALSE))))OR((((rt0.c0))>((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)OR(0.5160391557008581)))OR(CAST(t0.c2 AS REAL))))AND(((rt0.c2) IS FALSE))))OR((((rt0.c0))>((t0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((((rt0.c0)OR(0.5160391557008581)))OR(CAST(t0.c2 AS REAL))))AND(((rt0.c2) IS FALSE))))OR((((rt0.c0))>((t0.c0))))));
SELECT * FROM rt0, vt0 WHERE (((((((((CAST(rt0.c0 AS NUMERIC))AND(((rt0.c2) IS FALSE))))OR(TIME(rt0.c2, rt0.c2, rt0.c2, rt0.c0, rt0.c0))))AND(((rt0.c1)<>(vt0.c0)))))OR(((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c0))))) ORDER BY LOWER((NOT (rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c0 AS NUMERIC))AND(((rt0.c2) IS FALSE))))OR(TIME(rt0.c2, rt0.c2, rt0.c2, rt0.c0, rt0.c0))))AND(((rt0.c1)!=(vt0.c0)))))OR(((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY LOWER((NOT (rt0.c1))));
SELECT * FROM rt0, vt0 WHERE (((((((((CAST(rt0.c0 AS NUMERIC))AND(((rt0.c2) IS FALSE))))OR(TIME(rt0.c2, rt0.c2, rt0.c2, rt0.c0, rt0.c0))))AND(((rt0.c1)<>(vt0.c0)))))OR(((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c0))))) ORDER BY LOWER((NOT (rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c0 AS NUMERIC))AND(((rt0.c2) IS FALSE))))OR(TIME(rt0.c2, rt0.c2, rt0.c2, rt0.c0, rt0.c0))))AND(((rt0.c1)!=(vt0.c0)))))OR(((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY LOWER((NOT (rt0.c1))));
SELECT * FROM rt0, vt0 WHERE (((((((((CAST(rt0.c0 AS NUMERIC))AND(((rt0.c2) IS FALSE))))OR(TIME(rt0.c2, rt0.c2, rt0.c2, rt0.c0, rt0.c0))))AND(((rt0.c1)<>(vt0.c0)))))OR(((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c0))))) ORDER BY LOWER((NOT (rt0.c1)));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((vt0.c0))>=((t0.c1))), (((t0.c2))==((t0.c2))), (~ (0.45908690312760814))))>((t0.c1, ((vt0.c0)=(t0.c2)), '144227903')))) ORDER BY CAST(t0.c0 COLLATE RTRIM AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0))>=((t0.c1))), (((t0.c2))==((t0.c2))), (~ (0.45908690312760814))))>((t0.c1, ((vt0.c0)=(t0.c2)), '144227903')))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(t0.c0 COLLATE RTRIM AS TEXT));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((vt0.c0))>=((t0.c1))), (((t0.c2))==((t0.c2))), (~ (0.45908690312760814))))>((t0.c1, ((vt0.c0)=(t0.c2)), '144227903')))) ORDER BY CAST(t0.c0 COLLATE RTRIM AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0))>=((t0.c1))), (((t0.c2))==((t0.c2))), (~ (0.45908690312760814))))>((t0.c1, ((vt0.c0)=(t0.c2)), '144227903')))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(t0.c0 COLLATE RTRIM AS TEXT));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((vt0.c0))>=((t0.c1))), (((t0.c2))==((t0.c2))), (~ (0.45908690312760814))))>((t0.c1, ((vt0.c0)=(t0.c2)), '144227903')))) ORDER BY CAST(t0.c0 COLLATE RTRIM AS TEXT);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((+ (CASE t0.c0  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END))) ORDER BY ((((t0.c2)AND(rt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, CAST(rt0.c2 AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE t0.c0  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((t0.c2)AND(rt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, CAST(rt0.c2 AS BLOB)  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((+ (CASE t0.c0  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END))) ORDER BY ((((t0.c2)AND(rt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, CAST(rt0.c2 AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE t0.c0  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((t0.c2)AND(rt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, CAST(rt0.c2 AS BLOB)  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((+ (CASE t0.c0  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END))) ORDER BY ((((t0.c2)AND(rt0.c0)))OR(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, CAST(rt0.c2 AS BLOB)  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE ((+ (LIKELIHOOD(t0.c2, 0.7112376566689307))));
SELECT SUM(count) FROM (SELECT (((+ (LIKELIHOOD(t0.c2, 0.7112376566689307)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((+ (LIKELIHOOD(t0.c2, 0.7112376566689307))));
SELECT SUM(count) FROM (SELECT (((+ (LIKELIHOOD(t0.c2, 0.7112376566689307)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((+ (LIKELIHOOD(t0.c2, 0.7112376566689307))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) IN ())) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) IN ())) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) IN ()));
SELECT COUNT(*) FROM t0 WHERE ((((((((t0.c2))=((t0.c2))))OR(((t0.c0)=(t0.c2)))))AND(('^,''j' IN (t0.c0, t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c2))==((t0.c2))))OR(((t0.c0)=(t0.c2)))))AND(('^,''j' IN (t0.c0, t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((t0.c2))=((t0.c2))))OR(((t0.c0)=(t0.c2)))))AND(('^,''j' IN (t0.c0, t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c2))==((t0.c2))))OR(((t0.c0)=(t0.c2)))))AND(('^,''j' IN (t0.c0, t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((t0.c2))=((t0.c2))))OR(((t0.c0)=(t0.c2)))))AND(('^,''j' IN (t0.c0, t0.c2)))));
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c1, vt0.c0))))IS NOT(CASE WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c2 WHEN NULL THEN rt0.c1 END))) ORDER BY 0x4362554e DESC  NULLS LAST, CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS BLOB)  NULLS LAST, CASE WHEN IFNULL(rt0.c1, x'') THEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) ELSE (NOT (rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c1, vt0.c0))))IS NOT(CASE WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c2 WHEN NULL THEN rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0x4362554e DESC  NULLS LAST, CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS BLOB)  NULLS LAST, CASE WHEN IFNULL(rt0.c1, x'') THEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) ELSE (NOT (rt0.c2)) END ASC);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c1, vt0.c0))))IS NOT(CASE WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c2 WHEN NULL THEN rt0.c1 END))) ORDER BY 0x4362554e DESC  NULLS LAST, CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS BLOB)  NULLS LAST, CASE WHEN IFNULL(rt0.c1, x'') THEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) ELSE (NOT (rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c1, vt0.c0))))IS NOT(CASE WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c2 WHEN NULL THEN rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0x4362554e DESC  NULLS LAST, CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS BLOB)  NULLS LAST, CASE WHEN IFNULL(rt0.c1, x'') THEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) ELSE (NOT (rt0.c2)) END ASC);
SELECT * FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY)AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(((rt0.c1)GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE BINARY)AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(((rt0.c1)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY)AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(((rt0.c1)GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE BINARY)AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(((rt0.c1)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY)AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(((rt0.c1)GLOB(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (NULL) ORDER BY (((((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2))))<=(((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2))))<=(((+ (rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (NULL) ORDER BY (((((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2))))<=(((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2))))<=(((+ (rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (NULL) ORDER BY (((((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2))))<=(((+ (rt0.c2)))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ABS((+ (rt0.c1))) CROSS JOIN rt0 ON (((((rt0.c2 IN ()))OR(((((((((vt0.c0)OR('K#F[bG}HV')))AND(0.7968177655527237)))AND(0.6633704041521965)))OR(t0.c2)))))AND(CAST(rt0.c0 AS TEXT))) WHERE (CASE WHEN ((rt0.c2)/(t0.c2)) THEN '-559340750' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2)/(t0.c2)) THEN '-559340750' END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ABS((+ (rt0.c1))) CROSS JOIN rt0 ON (((((rt0.c2 IN ()))OR(((((((((vt0.c0)OR('K#F[bG}HV')))AND(0.7968177655527237)))AND(0.6633704041521965)))OR(t0.c2)))))AND(CAST(rt0.c0 AS TEXT))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ABS((+ (rt0.c1))) CROSS JOIN rt0 ON (((((rt0.c2 IN ()))OR(((((((((vt0.c0)OR('K#F[bG}HV')))AND(0.7968177655527237)))AND(0.6633704041521965)))OR(t0.c2)))))AND(CAST(rt0.c0 AS TEXT))) WHERE (CASE WHEN ((rt0.c2)/(t0.c2)) THEN '-559340750' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2)/(t0.c2)) THEN '-559340750' END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ABS((+ (rt0.c1))) CROSS JOIN rt0 ON (((((rt0.c2 IN ()))OR(((((((((vt0.c0)OR('K#F[bG}HV')))AND(0.7968177655527237)))AND(0.6633704041521965)))OR(t0.c2)))))AND(CAST(rt0.c0 AS TEXT))));
SELECT * FROM t0 WHERE (LTRIM((- (t0.c2)), (t0.c1 IN ()))) ORDER BY (((t0.c0, t0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c2, t0.c0, t0.c2))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((LTRIM((- (t0.c2)), (t0.c1 IN ()))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c2, t0.c0, t0.c2))) COLLATE NOCASE);
SELECT * FROM t0 WHERE (LTRIM((- (t0.c2)), (t0.c1 IN ()))) ORDER BY (((t0.c0, t0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c2, t0.c0, t0.c2))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((LTRIM((- (t0.c2)), (t0.c1 IN ()))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c2, t0.c0, t0.c2))) COLLATE NOCASE);
SELECT * FROM t0 WHERE (LTRIM((- (t0.c2)), (t0.c1 IN ()))) ORDER BY (((t0.c0, t0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c2, t0.c0, t0.c2))) COLLATE NOCASE;
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE ((((json_type(t0.c2)))>(((('867525624') IS FALSE))))) ORDER BY (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((json_type(t0.c2)))>(((('867525624') IS FALSE))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE ((((json_type(t0.c2)))>(((('867525624') IS FALSE))))) ORDER BY (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((json_type(t0.c2)))>(((('867525624') IS FALSE))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (t0.c2);
SELECT COUNT(*) FROM rt0 WHERE (highlight(((rt0.c2)<(rt0.c1)), (('512839150')GLOB(rt0.c2)), (rt0.c2 IN ()), (NOT (rt0.c0)))) ORDER BY ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN (TRIM(DISTINCT rt0.c0, rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((highlight(((rt0.c2)<(rt0.c1)), (('512839150')GLOB(rt0.c2)), (rt0.c2 IN ()), (NOT (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN (TRIM(DISTINCT rt0.c0, rt0.c1)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (highlight(((rt0.c2)<(rt0.c1)), (('512839150')GLOB(rt0.c2)), (rt0.c2 IN ()), (NOT (rt0.c0)))) ORDER BY ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN (TRIM(DISTINCT rt0.c0, rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((highlight(((rt0.c2)<(rt0.c1)), (('512839150')GLOB(rt0.c2)), (rt0.c2 IN ()), (NOT (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN (TRIM(DISTINCT rt0.c0, rt0.c1)))  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (SQLITE_COMPILEOPTION_USED(((((((((vt0.c0)AND(t0.c0)))AND(t0.c1)))AND(0.8704852919404928)))OR(t0.c2)))) ORDER BY (((((t0.c2, rt0.c2, t0.c0)) NOT BETWEEN ((t0.c1, rt0.c2, t0.c2)) AND (('995844433', rt0.c2, rt0.c0))))<(CASE WHEN t0.c0 THEN t0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((((((((vt0.c0)AND(t0.c0)))AND(t0.c1)))AND(0.8704852919404928)))OR(t0.c2)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((((t0.c2, rt0.c2, t0.c0)) NOT BETWEEN ((t0.c1, rt0.c2, t0.c2)) AND (('995844433', rt0.c2, rt0.c0))))<(CASE WHEN t0.c0 THEN t0.c1 END)) ASC);
SELECT ALL * FROM t0, vt0, rt0 WHERE (SQLITE_COMPILEOPTION_USED(((((((((vt0.c0)AND(t0.c0)))AND(t0.c1)))AND(0.8704852919404928)))OR(t0.c2)))) ORDER BY (((((t0.c2, rt0.c2, t0.c0)) NOT BETWEEN ((t0.c1, rt0.c2, t0.c2)) AND (('995844433', rt0.c2, rt0.c0))))<(CASE WHEN t0.c0 THEN t0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((((((((vt0.c0)AND(t0.c0)))AND(t0.c1)))AND(0.8704852919404928)))OR(t0.c2)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((((t0.c2, rt0.c2, t0.c0)) NOT BETWEEN ((t0.c1, rt0.c2, t0.c2)) AND (('995844433', rt0.c2, rt0.c0))))<(CASE WHEN t0.c0 THEN t0.c1 END)) ASC);
SELECT ALL * FROM t0, vt0, rt0 WHERE (SQLITE_COMPILEOPTION_USED(((((((((vt0.c0)AND(t0.c0)))AND(t0.c1)))AND(0.8704852919404928)))OR(t0.c2)))) ORDER BY (((((t0.c2, rt0.c2, t0.c0)) NOT BETWEEN ((t0.c1, rt0.c2, t0.c2)) AND (('995844433', rt0.c2, rt0.c0))))<(CASE WHEN t0.c0 THEN t0.c1 END)) ASC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON COALESCE(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c2)IS NOT(rt0.c1)), (~ (vt0.c0)), ((rt0.c2)<=(vt0.c0))) WHERE (CAST(((vt0.c0)AND(rt0.c1)) AS NUMERIC)) ORDER BY ((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND('8921933952335163113')))OR(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)), (- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)AND(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON COALESCE(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c2)IS NOT(rt0.c1)), (~ (vt0.c0)), ((rt0.c2)<=(vt0.c0))) ORDER BY ((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND('8921933952335163113')))OR(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)), (- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON COALESCE(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c2)IS NOT(rt0.c1)), (~ (vt0.c0)), ((rt0.c2)<=(vt0.c0))) WHERE (CAST(((vt0.c0)AND(rt0.c1)) AS NUMERIC)) ORDER BY ((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND('8921933952335163113')))OR(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)), (- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)AND(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON COALESCE(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c2)IS NOT(rt0.c1)), (~ (vt0.c0)), ((rt0.c2)<=(vt0.c0))) ORDER BY ((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND('8921933952335163113')))OR(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)), (- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON COALESCE(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c2)IS NOT(rt0.c1)), (~ (vt0.c0)), ((rt0.c2)<=(vt0.c0))) WHERE (CAST(((vt0.c0)AND(rt0.c1)) AS NUMERIC)) ORDER BY ((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND('8921933952335163113')))OR(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)), (- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) ASC;
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((((rt0.c2) NOTNULL)) BETWEEN (((t0.c1)<>(rt0.c0))) AND (CAST(rt0.c2 AS REAL))) WHERE ((((((((((('280419494')AND(rt0.c0)))OR(t0.c1)))OR(rt0.c0)))OR(t0.c1)))>(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('280419494')AND(rt0.c0)))OR(t0.c1)))OR(rt0.c0)))OR(t0.c1)))>(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((rt0.c2) NOTNULL)) BETWEEN (((t0.c1)<>(rt0.c0))) AND (CAST(rt0.c2 AS REAL))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((((rt0.c2) NOTNULL)) BETWEEN (((t0.c1)<>(rt0.c0))) AND (CAST(rt0.c2 AS REAL))) WHERE ((((((((((('280419494')AND(rt0.c0)))OR(t0.c1)))OR(rt0.c0)))OR(t0.c1)))>(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('280419494')AND(rt0.c0)))OR(t0.c1)))OR(rt0.c0)))OR(t0.c1)))>(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((rt0.c2) NOTNULL)) BETWEEN (((t0.c1)<>(rt0.c0))) AND (CAST(rt0.c2 AS REAL))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((((rt0.c2) NOTNULL)) BETWEEN (((t0.c1)<>(rt0.c0))) AND (CAST(rt0.c2 AS REAL))) WHERE ((((((((((('280419494')AND(rt0.c0)))OR(t0.c1)))OR(rt0.c0)))OR(t0.c1)))>(rt0.c0 COLLATE BINARY)));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN 'Z-' ELSE rt0.c2 END) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN 'Z-' ELSE rt0.c2 END) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN 'Z-' ELSE rt0.c2 END) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN 'Z-' ELSE rt0.c2 END) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN 'Z-' ELSE rt0.c2 END) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND ((+ (rt0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c2) IS TRUE)) NOT NULL)) ORDER BY (((((rt0.c1) IS TRUE)))<=((NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1) IS TRUE)))<=((NULL)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c2) IS TRUE)) NOT NULL)) ORDER BY (((((rt0.c1) IS TRUE)))<=((NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1) IS TRUE)))<=((NULL)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c2) IS TRUE)) NOT NULL)) ORDER BY (((((rt0.c1) IS TRUE)))<=((NULL)))  NULLS FIRST;
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON CASE ((vt0.c0)IS(-3.4921614E7))  WHEN ((-1.641524012E9) NOTNULL) THEN (rt0.c2 IN ()) END WHERE (COALESCE(((t0.c0)<=(vt0.c0)), ((rt0.c2) NOT NULL))) ORDER BY CAST(((t0.c1)=(rt0.c1)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((t0.c0)<=(vt0.c0)), ((rt0.c2) NOT NULL))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON CASE ((vt0.c0)IS(-3.4921614E7))  WHEN ((-1.641524012E9) NOTNULL) THEN (rt0.c2 IN ()) END ORDER BY CAST(((t0.c1)=(rt0.c1)) AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON CASE ((vt0.c0)IS(-3.4921614E7))  WHEN ((-1.641524012E9) NOTNULL) THEN (rt0.c2 IN ()) END WHERE (COALESCE(((t0.c0)<=(vt0.c0)), ((rt0.c2) NOT NULL))) ORDER BY CAST(((t0.c1)=(rt0.c1)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((t0.c0)<=(vt0.c0)), ((rt0.c2) NOT NULL))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON CASE ((vt0.c0)IS(-3.4921614E7))  WHEN ((-1.641524012E9) NOTNULL) THEN (rt0.c2 IN ()) END ORDER BY CAST(((t0.c1)=(rt0.c1)) AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON CASE ((vt0.c0)IS(-3.4921614E7))  WHEN ((-1.641524012E9) NOTNULL) THEN (rt0.c2 IN ()) END WHERE (COALESCE(((t0.c0)<=(vt0.c0)), ((rt0.c2) NOT NULL))) ORDER BY CAST(((t0.c1)=(rt0.c1)) AS NUMERIC) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((0.41781174547758204)|(t0.c2))))<>(((((t0.c0, t0.c1, t0.c0)) NOT BETWEEN ((t0.c1, t0.c2, vt0.c0)) AND ((t0.c2, vt0.c0, t0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((0.41781174547758204)|(t0.c2))))!=(((((t0.c0, t0.c1, t0.c0)) NOT BETWEEN ((t0.c1, t0.c2, vt0.c0)) AND ((t0.c2, vt0.c0, t0.c0))))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((0.41781174547758204)|(t0.c2))))<>(((((t0.c0, t0.c1, t0.c0)) NOT BETWEEN ((t0.c1, t0.c2, vt0.c0)) AND ((t0.c2, vt0.c0, t0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((0.41781174547758204)|(t0.c2))))!=(((((t0.c0, t0.c1, t0.c0)) NOT BETWEEN ((t0.c1, t0.c2, vt0.c0)) AND ((t0.c2, vt0.c0, t0.c0))))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((0.41781174547758204)|(t0.c2))))<>(((((t0.c0, t0.c1, t0.c0)) NOT BETWEEN ((t0.c1, t0.c2, vt0.c0)) AND ((t0.c2, vt0.c0, t0.c0)))))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (t0.c1) ORDER BY ((((((((rt0.c0 COLLATE BINARY)OR(((rt0.c2) ISNULL))))OR(t0.c1)))OR(CAST(t0.c1 AS REAL))))AND(rt0.c1)) DESC  NULLS FIRST, ((((CASE t0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c2 THEN rt0.c1 END)OR(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c1)*(t0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((rt0.c0 COLLATE BINARY)OR(((rt0.c2) ISNULL))))OR(t0.c1)))OR(CAST(t0.c1 AS REAL))))AND(rt0.c1)) DESC  NULLS FIRST, ((((CASE t0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c2 THEN rt0.c1 END)OR(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c1)*(t0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (t0.c1) ORDER BY ((((((((rt0.c0 COLLATE BINARY)OR(((rt0.c2) ISNULL))))OR(t0.c1)))OR(CAST(t0.c1 AS REAL))))AND(rt0.c1)) DESC  NULLS FIRST, ((((CASE t0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c2 THEN rt0.c1 END)OR(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c1)*(t0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((rt0.c0 COLLATE BINARY)OR(((rt0.c2) ISNULL))))OR(t0.c1)))OR(CAST(t0.c1 AS REAL))))AND(rt0.c1)) DESC  NULLS FIRST, ((((CASE t0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c2 THEN rt0.c1 END)OR(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c1)*(t0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (t0.c1) ORDER BY ((((((((rt0.c0 COLLATE BINARY)OR(((rt0.c2) ISNULL))))OR(t0.c1)))OR(CAST(t0.c1 AS REAL))))AND(rt0.c1)) DESC  NULLS FIRST, ((((CASE t0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c2 THEN rt0.c1 END)OR(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c1)*(t0.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN rt0.c0 COLLATE RTRIM ELSE ((rt0.c2) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS TEXT) THEN rt0.c0 COLLATE RTRIM ELSE ((rt0.c2) NOT NULL) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN rt0.c0 COLLATE RTRIM ELSE ((rt0.c2) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS TEXT) THEN rt0.c0 COLLATE RTRIM ELSE ((rt0.c2) NOT NULL) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN rt0.c0 COLLATE RTRIM ELSE ((rt0.c2) NOT NULL) END);
SELECT COUNT(*) FROM rt0 WHERE (((((x'')OR((rt0.c2 IN ()))))AND(MAX(rt0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR((rt0.c2 IN ()))))AND(MAX(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((x'')OR((rt0.c2 IN ()))))AND(MAX(rt0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR((rt0.c2 IN ()))))AND(MAX(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((x'')OR((rt0.c2 IN ()))))AND(MAX(rt0.c2, rt0.c1))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (UNLIKELY(CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CAST(rt0.c1 AS BLOB))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (UNLIKELY(CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CAST(rt0.c1 AS BLOB))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (UNLIKELY(CAST(rt0.c1 AS BLOB)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((CASE WHEN t0.c2 THEN t0.c2 END))>=((TRIM(DISTINCT t0.c0))))) ORDER BY load_extension(((t0.c2)*(t0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c2 THEN t0.c2 END))>=((TRIM(DISTINCT t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY load_extension(((t0.c2)*(t0.c1)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((CASE WHEN t0.c2 THEN t0.c2 END))>=((TRIM(DISTINCT t0.c0))))) ORDER BY load_extension(((t0.c2)*(t0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c2 THEN t0.c2 END))>=((TRIM(DISTINCT t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY load_extension(((t0.c2)*(t0.c1)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS BLOB) THEN (('y}Xd')!=(4.8698117E7)) ELSE ((rt0.c1)LIKE(8921933952335163113)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c0 AS BLOB) THEN (('y}Xd')!=(4.8698117E7)) ELSE ((rt0.c1)LIKE(8921933952335163113)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS BLOB) THEN (('y}Xd')!=(4.8698117E7)) ELSE ((rt0.c1)LIKE(8921933952335163113)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c0 AS BLOB) THEN (('y}Xd')!=(4.8698117E7)) ELSE ((rt0.c1)LIKE(8921933952335163113)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS BLOB) THEN (('y}Xd')!=(4.8698117E7)) ELSE ((rt0.c1)LIKE(8921933952335163113)) END);
SELECT COUNT(*) FROM t0 WHERE ('-1816174562');
SELECT SUM(count) FROM (SELECT ALL (('-1816174562') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('-1816174562');
SELECT SUM(count) FROM (SELECT ALL (('-1816174562') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('-1816174562');
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((((((((0.6120364817899342)OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c1)))/('0.731804682451266')) WHERE (((rt0.c1)>(rt0.c1)) COLLATE BINARY COLLATE NOCASE) ORDER BY (+ (rt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>(rt0.c1)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((((((((0.6120364817899342)OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c1)))/('0.731804682451266')) ORDER BY (+ (rt0.c2)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((((((((0.6120364817899342)OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c1)))/('0.731804682451266')) WHERE (((rt0.c1)>(rt0.c1)) COLLATE BINARY COLLATE NOCASE) ORDER BY (+ (rt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>(rt0.c1)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((((((((0.6120364817899342)OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c1)))/('0.731804682451266')) ORDER BY (+ (rt0.c2)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((((((((0.6120364817899342)OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c1)))/('0.731804682451266')) WHERE (((rt0.c1)>(rt0.c1)) COLLATE BINARY COLLATE NOCASE) ORDER BY (+ (rt0.c2)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c0) IS FALSE)))) ORDER BY ((((rt0.c0 COLLATE BINARY)AND(((NULL) IS TRUE))))AND(((((rt0.c2)OR(0.49742416459111094)))OR(rt0.c0))))  NULLS FIRST, ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)IS(((rt0.c1)IS NOT(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0 COLLATE BINARY)AND(((NULL) IS TRUE))))AND(((((rt0.c2)OR(0.49742416459111094)))OR(rt0.c0))))  NULLS FIRST, ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)IS(((rt0.c1)IS NOT(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c0) IS FALSE)))) ORDER BY ((((rt0.c0 COLLATE BINARY)AND(((NULL) IS TRUE))))AND(((((rt0.c2)OR(0.49742416459111094)))OR(rt0.c0))))  NULLS FIRST, ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)IS(((rt0.c1)IS NOT(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0 COLLATE BINARY)AND(((NULL) IS TRUE))))AND(((((rt0.c2)OR(0.49742416459111094)))OR(rt0.c0))))  NULLS FIRST, ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)IS(((rt0.c1)IS NOT(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c0) IS FALSE)))) ORDER BY ((((rt0.c0 COLLATE BINARY)AND(((NULL) IS TRUE))))AND(((((rt0.c2)OR(0.49742416459111094)))OR(rt0.c0))))  NULLS FIRST, ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)IS(((rt0.c1)IS NOT(rt0.c0))))  NULLS LAST;
SELECT * FROM rt0, t0 INDEXED BY i79 WHERE ((+ (((t0.c0) NOTNULL)))) ORDER BY (- (json_quote(x'b962'))), (((((((((t0.c2 IN (t0.c0)))OR(SQLITE_SOURCE_ID())))AND(((((t0.c0)OR(t0.c1)))OR(rt0.c2)))))OR((~ (rt0.c1)))))OR((NOT (rt0.c2)))) ASC, ((((NULL) NOTNULL)) BETWEEN (((t0.c0)IS(rt0.c2))) AND (((t0.c0)>>(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, t0 INDEXED BY i79 ORDER BY (- (json_quote(x'b962'))), (((((((((t0.c2 IN (t0.c0)))OR(SQLITE_SOURCE_ID())))AND(((((t0.c0)OR(t0.c1)))OR(rt0.c2)))))OR((~ (rt0.c1)))))OR((NOT (rt0.c2)))) ASC, ((((NULL) NOTNULL)) BETWEEN (((t0.c0)IS(rt0.c2))) AND (((t0.c0)>>(rt0.c0))))  NULLS LAST);
SELECT * FROM rt0, t0 INDEXED BY i79 WHERE ((+ (((t0.c0) NOTNULL)))) ORDER BY (- (json_quote(x'b962'))), (((((((((t0.c2 IN (t0.c0)))OR(SQLITE_SOURCE_ID())))AND(((((t0.c0)OR(t0.c1)))OR(rt0.c2)))))OR((~ (rt0.c1)))))OR((NOT (rt0.c2)))) ASC, ((((NULL) NOTNULL)) BETWEEN (((t0.c0)IS(rt0.c2))) AND (((t0.c0)>>(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, t0 INDEXED BY i79 ORDER BY (- (json_quote(x'b962'))), (((((((((t0.c2 IN (t0.c0)))OR(SQLITE_SOURCE_ID())))AND(((((t0.c0)OR(t0.c1)))OR(rt0.c2)))))OR((~ (rt0.c1)))))OR((NOT (rt0.c2)))) ASC, ((((NULL) NOTNULL)) BETWEEN (((t0.c0)IS(rt0.c2))) AND (((t0.c0)>>(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((378962034)IS NOT(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((378962034)IS NOT(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL * FROM t0 WHERE (((378962034)IS NOT(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((378962034)IS NOT(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL * FROM t0 WHERE (((378962034)IS NOT(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c1 THEN vt0.c0 END) IS TRUE)) ORDER BY (~ (((t0.c0)-(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c1 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY (~ (((t0.c0)-(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c1 THEN vt0.c0 END) IS TRUE)) ORDER BY (~ (((t0.c0)-(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c1 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY (~ (((t0.c0)-(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c1 THEN vt0.c0 END) IS TRUE)) ORDER BY (~ (((t0.c0)-(vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((((((((((rt0.c1)>=(rt0.c2)))OR(rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))OR((rt0.c1 IN ()))))AND(x'')))AND(rt0.c1)))AND(CASE rt0.c1  WHEN -1e500 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c1)>=(rt0.c2)))OR(rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))OR((rt0.c1 IN ()))))AND(x'')))AND(rt0.c1)))AND(CASE rt0.c1  WHEN -1e500 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((((((rt0.c1)>=(rt0.c2)))OR(rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))OR((rt0.c1 IN ()))))AND(x'')))AND(rt0.c1)))AND(CASE rt0.c1  WHEN -1e500 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c1)>=(rt0.c2)))OR(rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))OR((rt0.c1 IN ()))))AND(x'')))AND(rt0.c1)))AND(CASE rt0.c1  WHEN -1e500 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((((((rt0.c1)>=(rt0.c2)))OR(rt0.c2)))OR(CAST(rt0.c1 AS NUMERIC))))OR((rt0.c1 IN ()))))AND(x'')))AND(rt0.c1)))AND(CASE rt0.c1  WHEN -1e500 THEN rt0.c1 END)));
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((ABS(vt0.c0)) IS FALSE) FULL OUTER JOIN vt0 ON ((CAST(t0.c2 AS REAL))IS(((vt0.c0) IS FALSE))) WHERE (((((t0.c0)AND(vt0.c0)))OR(t0.c0)) COLLATE RTRIM) ORDER BY rt0.c0 ASC, (((- (t0.c1))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)AND(vt0.c0)))OR(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((ABS(vt0.c0)) IS FALSE) FULL OUTER JOIN vt0 ON ((CAST(t0.c2 AS REAL))IS(((vt0.c0) IS FALSE))) ORDER BY rt0.c0 ASC, (((- (t0.c1))) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((ABS(vt0.c0)) IS FALSE) FULL OUTER JOIN vt0 ON ((CAST(t0.c2 AS REAL))IS(((vt0.c0) IS FALSE))) WHERE (((((t0.c0)AND(vt0.c0)))OR(t0.c0)) COLLATE RTRIM) ORDER BY rt0.c0 ASC, (((- (t0.c1))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)AND(vt0.c0)))OR(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((ABS(vt0.c0)) IS FALSE) FULL OUTER JOIN vt0 ON ((CAST(t0.c2 AS REAL))IS(((vt0.c0) IS FALSE))) ORDER BY rt0.c0 ASC, (((- (t0.c1))) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON rt0.c0 WHERE (((t0.c0)>>(((vt0.c0)OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)>>(((vt0.c0)OR(t0.c1))))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON rt0.c0);
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON rt0.c0 WHERE (((t0.c0)>>(((vt0.c0)OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)>>(((vt0.c0)OR(t0.c1))))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON rt0.c0);
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON rt0.c0 WHERE (((t0.c0)>>(((vt0.c0)OR(t0.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c2, NULL)) BETWEEN ((rt0.c1 COLLATE NOCASE, (((vt0.c0))<((rt0.c1))), vt0.c0)) AND ((vt0.c0, ((-701432128)%(rt0.c2)), (rt0.c1 IN ()))))) ORDER BY ((((CASE rt0.c0  WHEN NULL THEN rt0.c1 ELSE rt0.c2 END)OR((rt0.c0 IN ()))))OR(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c2, NULL)) BETWEEN ((rt0.c1 COLLATE NOCASE, (((vt0.c0))<((rt0.c1))), vt0.c0)) AND ((vt0.c0, ((-701432128)%(rt0.c2)), (rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((CASE rt0.c0  WHEN NULL THEN rt0.c1 ELSE rt0.c2 END)OR((rt0.c0 IN ()))))OR(NULL)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c2, NULL)) BETWEEN ((rt0.c1 COLLATE NOCASE, (((vt0.c0))<((rt0.c1))), vt0.c0)) AND ((vt0.c0, ((-701432128)%(rt0.c2)), (rt0.c1 IN ()))))) ORDER BY ((((CASE rt0.c0  WHEN NULL THEN rt0.c1 ELSE rt0.c2 END)OR((rt0.c0 IN ()))))OR(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c2, NULL)) BETWEEN ((rt0.c1 COLLATE NOCASE, (((vt0.c0))<((rt0.c1))), vt0.c0)) AND ((vt0.c0, ((-701432128)%(rt0.c2)), (rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((CASE rt0.c0  WHEN NULL THEN rt0.c1 ELSE rt0.c2 END)OR((rt0.c0 IN ()))))OR(NULL)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c2, NULL)) BETWEEN ((rt0.c1 COLLATE NOCASE, (((vt0.c0))<((rt0.c1))), vt0.c0)) AND ((vt0.c0, ((-701432128)%(rt0.c2)), (rt0.c1 IN ()))))) ORDER BY ((((CASE rt0.c0  WHEN NULL THEN rt0.c1 ELSE rt0.c2 END)OR((rt0.c0 IN ()))))OR(NULL)) DESC;
SELECT * FROM t0 WHERE ((((CASE WHEN t0.c2 THEN t0.c1 WHEN x'6298' THEN t0.c0 WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END))!=((CAST(t0.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c2 THEN t0.c1 WHEN x'6298' THEN t0.c0 WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END))!=((CAST(t0.c2 AS BLOB))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((CASE WHEN t0.c2 THEN t0.c1 WHEN x'6298' THEN t0.c0 WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END))!=((CAST(t0.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c2 THEN t0.c1 WHEN x'6298' THEN t0.c0 WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END))!=((CAST(t0.c2 AS BLOB))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((CASE WHEN t0.c2 THEN t0.c1 WHEN x'6298' THEN t0.c0 WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END))!=((CAST(t0.c2 AS BLOB)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((t0.c0 COLLATE BINARY)AND(((rt0.c2) NOT NULL))))AND(rt0.c1 COLLATE NOCASE)))OR(vt0.c0)))AND(CASE t0.c0  WHEN rt0.c1 THEN t0.c0 END)) LEFT OUTER JOIN rt0 ON t0.c0 WHERE ((((((rt0.c2)) NOT BETWEEN ((t0.c2)) AND (('IUbr8^!'))))GLOB(0.27285756956507623 COLLATE RTRIM))) ORDER BY ABS(DISTINCT CASE WHEN '97579424' THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN t0.c0 ELSE x'0288' END), CASE WHEN CAST(t0.c0 AS NUMERIC) THEN (rt0.c0 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((t0.c2)) AND (('IUbr8^!'))))GLOB(0.27285756956507623 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((t0.c0 COLLATE BINARY)AND(((rt0.c2) NOT NULL))))AND(rt0.c1 COLLATE NOCASE)))OR(vt0.c0)))AND(CASE t0.c0  WHEN rt0.c1 THEN t0.c0 END)) LEFT OUTER JOIN rt0 ON t0.c0 ORDER BY ABS(DISTINCT CASE WHEN '97579424' THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN t0.c0 ELSE x'0288' END), CASE WHEN CAST(t0.c0 AS NUMERIC) THEN (rt0.c0 IN ()) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((t0.c0 COLLATE BINARY)AND(((rt0.c2) NOT NULL))))AND(rt0.c1 COLLATE NOCASE)))OR(vt0.c0)))AND(CASE t0.c0  WHEN rt0.c1 THEN t0.c0 END)) LEFT OUTER JOIN rt0 ON t0.c0 WHERE ((((((rt0.c2)) NOT BETWEEN ((t0.c2)) AND (('IUbr8^!'))))GLOB(0.27285756956507623 COLLATE RTRIM))) ORDER BY ABS(DISTINCT CASE WHEN '97579424' THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN t0.c0 ELSE x'0288' END), CASE WHEN CAST(t0.c0 AS NUMERIC) THEN (rt0.c0 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((t0.c2)) AND (('IUbr8^!'))))GLOB(0.27285756956507623 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((t0.c0 COLLATE BINARY)AND(((rt0.c2) NOT NULL))))AND(rt0.c1 COLLATE NOCASE)))OR(vt0.c0)))AND(CASE t0.c0  WHEN rt0.c1 THEN t0.c0 END)) LEFT OUTER JOIN rt0 ON t0.c0 ORDER BY ABS(DISTINCT CASE WHEN '97579424' THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN t0.c0 ELSE x'0288' END), CASE WHEN CAST(t0.c0 AS NUMERIC) THEN (rt0.c0 IN ()) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) IS FALSE) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) IS FALSE) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) IS FALSE) AS BLOB));
SELECT * FROM vt0, rt0 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((NOT (x'')));
SELECT * FROM rt0 WHERE (((('-2053131565', rt0.c2, x''))>((rt0.c2, rt0.c1, rt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((('-2053131565', rt0.c2, x''))>((rt0.c2, rt0.c1, rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((('-2053131565', rt0.c2, x''))>((rt0.c2, rt0.c1, rt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((('-2053131565', rt0.c2, x''))>((rt0.c2, rt0.c1, rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((('-2053131565', rt0.c2, x''))>((rt0.c2, rt0.c1, rt0.c2))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((NULL)OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN vt0 ON CAST((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS TEXT) WHERE (((((CASE x''  WHEN vt0.c0 THEN t0.c1 ELSE rt0.c1 END)AND((((t0.c1))>((t0.c0))))))OR(CAST(t0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((CASE x''  WHEN vt0.c0 THEN t0.c1 ELSE rt0.c1 END)AND((((t0.c1))>((t0.c0))))))OR(CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((NULL)OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN vt0 ON CAST((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS TEXT));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((NULL)OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN vt0 ON CAST((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS TEXT) WHERE (((((CASE x''  WHEN vt0.c0 THEN t0.c1 ELSE rt0.c1 END)AND((((t0.c1))>((t0.c0))))))OR(CAST(t0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((CASE x''  WHEN vt0.c0 THEN t0.c1 ELSE rt0.c1 END)AND((((t0.c1))>((t0.c0))))))OR(CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((NULL)OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN vt0 ON CAST((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS TEXT));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((NULL)OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN vt0 ON CAST((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS TEXT) WHERE (((((CASE x''  WHEN vt0.c0 THEN t0.c1 ELSE rt0.c1 END)AND((((t0.c1))>((t0.c0))))))OR(CAST(t0.c1 AS INTEGER))));
SELECT * FROM rt0, vt0 CROSS JOIN t0 ON CASE WHEN ((t0.c2) IS FALSE) THEN 0.41781174547758204 ELSE rt0.c0 COLLATE BINARY END WHERE (((CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN 1.418892735E9 THEN rt0.c0 ELSE rt0.c2 END) NOTNULL)) ORDER BY ((CASE WHEN rt0.c2 THEN t0.c2 END)<=(((t0.c1) NOTNULL)))  NULLS FIRST, '-938106819'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN 1.418892735E9 THEN rt0.c0 ELSE rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON CASE WHEN ((t0.c2) IS FALSE) THEN 0.41781174547758204 ELSE rt0.c0 COLLATE BINARY END ORDER BY ((CASE WHEN rt0.c2 THEN t0.c2 END)<=(((t0.c1) NOTNULL)))  NULLS FIRST, '-938106819'  NULLS LAST);
SELECT * FROM rt0, vt0 CROSS JOIN t0 ON CASE WHEN ((t0.c2) IS FALSE) THEN 0.41781174547758204 ELSE rt0.c0 COLLATE BINARY END WHERE (((CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN 1.418892735E9 THEN rt0.c0 ELSE rt0.c2 END) NOTNULL)) ORDER BY ((CASE WHEN rt0.c2 THEN t0.c2 END)<=(((t0.c1) NOTNULL)))  NULLS FIRST, '-938106819'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN 1.418892735E9 THEN rt0.c0 ELSE rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON CASE WHEN ((t0.c2) IS FALSE) THEN 0.41781174547758204 ELSE rt0.c0 COLLATE BINARY END ORDER BY ((CASE WHEN rt0.c2 THEN t0.c2 END)<=(((t0.c1) NOTNULL)))  NULLS FIRST, '-938106819'  NULLS LAST);
SELECT * FROM rt0, vt0 CROSS JOIN t0 ON CASE WHEN ((t0.c2) IS FALSE) THEN 0.41781174547758204 ELSE rt0.c0 COLLATE BINARY END WHERE (((CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN 1.418892735E9 THEN rt0.c0 ELSE rt0.c2 END) NOTNULL)) ORDER BY ((CASE WHEN rt0.c2 THEN t0.c2 END)<=(((t0.c1) NOTNULL)))  NULLS FIRST, '-938106819'  NULLS LAST;
SELECT * FROM rt0 WHERE (json_array_length(CASE rt0.c1  WHEN rt0.c0 THEN '452336823' WHEN rt0.c1 THEN 0.31651499162461816 WHEN rt0.c1 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((json_array_length(CASE rt0.c1  WHEN rt0.c0 THEN '452336823' WHEN rt0.c1 THEN 0.31651499162461816 WHEN rt0.c1 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_array_length(CASE rt0.c1  WHEN rt0.c0 THEN '452336823' WHEN rt0.c1 THEN 0.31651499162461816 WHEN rt0.c1 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((json_array_length(CASE rt0.c1  WHEN rt0.c0 THEN '452336823' WHEN rt0.c1 THEN 0.31651499162461816 WHEN rt0.c1 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_array_length(CASE rt0.c1  WHEN rt0.c0 THEN '452336823' WHEN rt0.c1 THEN 0.31651499162461816 WHEN rt0.c1 THEN rt0.c0 END));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((+ ('1883702934')))*(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ ('1883702934')))*(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((+ ('1883702934')))*(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ ('1883702934')))*(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((+ ('1883702934')))*(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN rt0 ON CAST(CASE rt0.c1  WHEN t0.c2 THEN t0.c1 ELSE '1855021529' END AS BLOB) WHERE ((((t0.c2)GLOB(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)GLOB(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON CAST(CASE rt0.c1  WHEN t0.c2 THEN t0.c1 ELSE '1855021529' END AS BLOB));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN rt0 ON CAST(CASE rt0.c1  WHEN t0.c2 THEN t0.c1 ELSE '1855021529' END AS BLOB) WHERE ((((t0.c2)GLOB(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)GLOB(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON CAST(CASE rt0.c1  WHEN t0.c2 THEN t0.c1 ELSE '1855021529' END AS BLOB));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN rt0 ON CAST(CASE rt0.c1  WHEN t0.c2 THEN t0.c1 ELSE '1855021529' END AS BLOB) WHERE ((((t0.c2)GLOB(rt0.c1)) IN ()));
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c1) IS FALSE))OR(CAST(t0.c0 AS NUMERIC))))AND(((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))OR('6q6')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) IS FALSE))OR(CAST(t0.c0 AS NUMERIC))))AND(((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))OR('6q6'))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c1) IS FALSE))OR(CAST(t0.c0 AS NUMERIC))))AND(((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))OR('6q6')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) IS FALSE))OR(CAST(t0.c0 AS NUMERIC))))AND(((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))OR('6q6'))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c1) IS FALSE))OR(CAST(t0.c0 AS NUMERIC))))AND(((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))OR('6q6')))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<=(((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<=(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<=(((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<=(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<=(((vt0.c0)IS NOT(vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0)))-(vt0.c0 COLLATE BINARY)) WHERE (CASE load_extension(vt0.c0)  WHEN CASE WHEN t0.c2 THEN rt0.c2 END THEN (NOT (t0.c1)) ELSE (~ (t0.c0)) END) ORDER BY ((rt0.c2 COLLATE NOCASE)>>(CASE rt0.c0  WHEN NULL THEN rt0.c2 ELSE 'o6ꕇ' END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE load_extension(vt0.c0)  WHEN CASE WHEN t0.c2 THEN rt0.c2 END THEN (NOT (t0.c1)) ELSE (~ (t0.c0)) END) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0)))-(vt0.c0 COLLATE BINARY)) ORDER BY ((rt0.c2 COLLATE NOCASE)>>(CASE rt0.c0  WHEN NULL THEN rt0.c2 ELSE 'o6ꕇ' END))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0)))-(vt0.c0 COLLATE BINARY)) WHERE (CASE load_extension(vt0.c0)  WHEN CASE WHEN t0.c2 THEN rt0.c2 END THEN (NOT (t0.c1)) ELSE (~ (t0.c0)) END) ORDER BY ((rt0.c2 COLLATE NOCASE)>>(CASE rt0.c0  WHEN NULL THEN rt0.c2 ELSE 'o6ꕇ' END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE load_extension(vt0.c0)  WHEN CASE WHEN t0.c2 THEN rt0.c2 END THEN (NOT (t0.c1)) ELSE (~ (t0.c0)) END) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0)))-(vt0.c0 COLLATE BINARY)) ORDER BY ((rt0.c2 COLLATE NOCASE)>>(CASE rt0.c0  WHEN NULL THEN rt0.c2 ELSE 'o6ꕇ' END))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2) IS TRUE)) ISNULL));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))OR(t0.c2)))OR(rt0.c1)) COLLATE BINARY) ORDER BY TIME(((vt0.c0)OR(rt0.c0)), (((t0.c2)) BETWEEN ((rt0.c2)) AND ((t0.c0))), CASE -5.2714169E7  WHEN t0.c1 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 ELSE rt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))OR(t0.c2)))OR(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY TIME(((vt0.c0)OR(rt0.c0)), (((t0.c2)) BETWEEN ((rt0.c2)) AND ((t0.c0))), CASE -5.2714169E7  WHEN t0.c1 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 ELSE rt0.c0 END) ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))OR(t0.c2)))OR(rt0.c1)) COLLATE BINARY) ORDER BY TIME(((vt0.c0)OR(rt0.c0)), (((t0.c2)) BETWEEN ((rt0.c2)) AND ((t0.c0))), CASE -5.2714169E7  WHEN t0.c1 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 ELSE rt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))OR(t0.c2)))OR(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY TIME(((vt0.c0)OR(rt0.c0)), (((t0.c2)) BETWEEN ((rt0.c2)) AND ((t0.c0))), CASE -5.2714169E7  WHEN t0.c1 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 ELSE rt0.c0 END) ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))OR(t0.c2)))OR(rt0.c1)) COLLATE BINARY) ORDER BY TIME(((vt0.c0)OR(rt0.c0)), (((t0.c2)) BETWEEN ((rt0.c2)) AND ((t0.c0))), CASE -5.2714169E7  WHEN t0.c1 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 ELSE rt0.c0 END) ASC;
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY TYPEOF(CAST(vt0.c0 AS REAL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(CAST(vt0.c0 AS REAL))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY TYPEOF(CAST(vt0.c0 AS REAL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(CAST(vt0.c0 AS REAL))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY TYPEOF(CAST(vt0.c0 AS REAL))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (DATE(((t0.c1)OR(vt0.c0)), ((rt0.c2) IS TRUE), (rt0.c2 IN ()), (rt0.c2 IN (rt0.c1)), (vt0.c0 IN ()))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATE(((t0.c1)OR(vt0.c0)), ((rt0.c2) IS TRUE), (rt0.c2 IN ()), (rt0.c2 IN (rt0.c1)), (vt0.c0 IN ()))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (DATE(((t0.c1)OR(vt0.c0)), ((rt0.c2) IS TRUE), (rt0.c2 IN ()), (rt0.c2 IN (rt0.c1)), (vt0.c0 IN ()))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATE(((t0.c1)OR(vt0.c0)), ((rt0.c2) IS TRUE), (rt0.c2 IN ()), (rt0.c2 IN (rt0.c1)), (vt0.c0 IN ()))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (DATE(((t0.c1)OR(vt0.c0)), ((rt0.c2) IS TRUE), (rt0.c2 IN ()), (rt0.c2 IN (rt0.c1)), (vt0.c0 IN ()))) ORDER BY vt0.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c2)))>=(x'')));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))>=(x''))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c2)))>=(x'')));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))>=(x''))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c2)))>=(x'')));
SELECT * FROM t0, rt0, vt0 WHERE (CAST(((x'')-(t0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')-(t0.c2)) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (CAST(((x'')-(t0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')-(t0.c2)) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (CAST(((x'')-(t0.c2)) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ (((x'')>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ (((x'')>(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ (((x'')>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ (((x'')>(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ (((x'')>(vt0.c0))));
SELECT * FROM rt0, t0 INDEXED BY i79, vt0 WHERE ('~f');
SELECT SUM(count) FROM (SELECT ALL (('~f') IS TRUE)  as count FROM rt0, t0 INDEXED BY i79, vt0);
SELECT * FROM rt0, t0 INDEXED BY i79, vt0 WHERE ('~f');
SELECT SUM(count) FROM (SELECT ALL (('~f') IS TRUE)  as count FROM rt0, t0 INDEXED BY i79, vt0);
SELECT * FROM rt0, t0 INDEXED BY i79, vt0 WHERE ('~f');
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (TRIM(0Xecb956, ((-445715059)%(rt0.c0)))) ORDER BY (((t0.c2 IN ())) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(0xecb956, ((-445715059)%(rt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((t0.c2 IN ())) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (TRIM(0Xecb956, ((-445715059)%(rt0.c0)))) ORDER BY (((t0.c2 IN ())) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(0xecb956, ((-445715059)%(rt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((t0.c2 IN ())) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (TRIM(0Xecb956, ((-445715059)%(rt0.c0)))) ORDER BY (((t0.c2 IN ())) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON TRIM(CASE WHEN t0.c1 THEN rt0.c1 ELSE t0.c0 END, (((rt0.c0)) BETWEEN (('(^j%+~Ncv')) AND ((rt0.c2)))) WHERE (CASE WHEN ((vt0.c0)OR('_gS')) THEN t0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)OR('_gS')) THEN t0.c2 END) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON TRIM(CASE WHEN t0.c1 THEN rt0.c1 ELSE t0.c0 END, (((rt0.c0)) BETWEEN (('(^j%+~Ncv')) AND ((rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON TRIM(CASE WHEN t0.c1 THEN rt0.c1 ELSE t0.c0 END, (((rt0.c0)) BETWEEN (('(^j%+~Ncv')) AND ((rt0.c2)))) WHERE (CASE WHEN ((vt0.c0)OR('_gS')) THEN t0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)OR('_gS')) THEN t0.c2 END) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON TRIM(CASE WHEN t0.c1 THEN rt0.c1 ELSE t0.c0 END, (((rt0.c0)) BETWEEN (('(^j%+~Ncv')) AND ((rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON TRIM(CASE WHEN t0.c1 THEN rt0.c1 ELSE t0.c0 END, (((rt0.c0)) BETWEEN (('(^j%+~Ncv')) AND ((rt0.c2)))) WHERE (CASE WHEN ((vt0.c0)OR('_gS')) THEN t0.c2 END);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))>=(t0.c1 COLLATE BINARY)) WHERE (((((((NULL)OR(vt0.c0)))OR(((t0.c0)==(t0.c0)))))AND(((((x'05e8')AND(t0.c2)))OR(t0.c2))))) ORDER BY ((((t0.c1) BETWEEN (vt0.c0) AND (0.6403529069071886)))>>(x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(vt0.c0)))OR(((t0.c0)==(t0.c0)))))AND(((((x'05e8')AND(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))>=(t0.c1 COLLATE BINARY)) ORDER BY ((((t0.c1) BETWEEN (vt0.c0) AND (0.6403529069071886)))>>(x'')) DESC);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))>=(t0.c1 COLLATE BINARY)) WHERE (((((((NULL)OR(vt0.c0)))OR(((t0.c0)==(t0.c0)))))AND(((((x'05e8')AND(t0.c2)))OR(t0.c2))))) ORDER BY ((((t0.c1) BETWEEN (vt0.c0) AND (0.6403529069071886)))>>(x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(vt0.c0)))OR(((t0.c0)==(t0.c0)))))AND(((((x'05e8')AND(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))>=(t0.c1 COLLATE BINARY)) ORDER BY ((((t0.c1) BETWEEN (vt0.c0) AND (0.6403529069071886)))>>(x'')) DESC);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))>=(t0.c1 COLLATE BINARY)) WHERE (((((((NULL)OR(vt0.c0)))OR(((t0.c0)==(t0.c0)))))AND(((((x'05e8')AND(t0.c2)))OR(t0.c2))))) ORDER BY ((((t0.c1) BETWEEN (vt0.c0) AND (0.6403529069071886)))>>(x'')) DESC;
SELECT * FROM t0, vt0 WHERE ((CASE 0.3551140571289756  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END IN (((t0.c0)>(t0.c0))))) ORDER BY ((CAST(t0.c0 AS INTEGER)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE 0.3551140571289756  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END IN (((t0.c0)>(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c0 AS INTEGER)) ISNULL) DESC);
SELECT * FROM t0, vt0 WHERE ((CASE 0.3551140571289756  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END IN (((t0.c0)>(t0.c0))))) ORDER BY ((CAST(t0.c0 AS INTEGER)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE 0.3551140571289756  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END IN (((t0.c0)>(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c0 AS INTEGER)) ISNULL) DESC);
SELECT * FROM t0, vt0 WHERE ((CASE 0.3551140571289756  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END IN (((t0.c0)>(t0.c0))))) ORDER BY ((CAST(t0.c0 AS INTEGER)) ISNULL) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((((((((((t0.c0)OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(t0.c1)))<((- (vt0.c0)))) WHERE (((((t0.c0) NOTNULL))*(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL))*(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((((((((((t0.c0)OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(t0.c1)))<((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((((((((((t0.c0)OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(t0.c1)))<((- (vt0.c0)))) WHERE (((((t0.c0) NOTNULL))*(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL))*(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((((((((((t0.c0)OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(t0.c1)))<((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((((((((((t0.c0)OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(t0.c1)))<((- (vt0.c0)))) WHERE (((((t0.c0) NOTNULL))*(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c2)<=(t0.c2)))<<(((rt0.c1)!=(rt0.c0))))) ORDER BY json_valid((((t0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) ASC  NULLS LAST, t0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<=(t0.c2)))<<(((rt0.c1)!=(rt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY json_valid((((t0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) ASC  NULLS LAST, t0.c2 DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c2)<=(t0.c2)))<<(((rt0.c1)!=(rt0.c0))))) ORDER BY json_valid((((t0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) ASC  NULLS LAST, t0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<=(t0.c2)))<<(((rt0.c1)!=(rt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY json_valid((((t0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) ASC  NULLS LAST, t0.c2 DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c2)<=(t0.c2)))<<(((rt0.c1)!=(rt0.c0))))) ORDER BY json_valid((((t0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) ASC  NULLS LAST, t0.c2 DESC  NULLS FIRST;
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN t0.c0 COLLATE RTRIM THEN INSTR('-390991286', t0.c2) ELSE (vt0.c0 IN (rt0.c2)) END WHERE (((((rt0.c1) BETWEEN (t0.c1) AND (1067807645))) BETWEEN (t0.c1 COLLATE NOCASE) AND (((t0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (t0.c1) AND (1067807645))) BETWEEN (t0.c1 COLLATE NOCASE) AND (((t0.c1) ISNULL)))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN t0.c0 COLLATE RTRIM THEN INSTR('-390991286', t0.c2) ELSE (vt0.c0 IN (rt0.c2)) END);
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN t0.c0 COLLATE RTRIM THEN INSTR('-390991286', t0.c2) ELSE (vt0.c0 IN (rt0.c2)) END WHERE (((((rt0.c1) BETWEEN (t0.c1) AND (1067807645))) BETWEEN (t0.c1 COLLATE NOCASE) AND (((t0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (t0.c1) AND (1067807645))) BETWEEN (t0.c1 COLLATE NOCASE) AND (((t0.c1) ISNULL)))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN t0.c0 COLLATE RTRIM THEN INSTR('-390991286', t0.c2) ELSE (vt0.c0 IN (rt0.c2)) END);
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN t0.c0 COLLATE RTRIM THEN INSTR('-390991286', t0.c2) ELSE (vt0.c0 IN (rt0.c2)) END WHERE (((((rt0.c1) BETWEEN (t0.c1) AND (1067807645))) BETWEEN (t0.c1 COLLATE NOCASE) AND (((t0.c1) ISNULL))));
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN CASE t0.c0  WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN NULL THEN t0.c1 WHEN 0Xffffffff821c4f81 THEN vt0.c0 WHEN 0.18629802450572785 THEN t0.c1 ELSE t0.c1 END THEN ((t0.c0)LIKE(0.5583601398862544)) ELSE ((t0.c2) BETWEEN (t0.c1) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE t0.c0  WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN NULL THEN t0.c1 WHEN 0xffffffff821c4f81 THEN vt0.c0 WHEN 0.18629802450572785 THEN t0.c1 ELSE t0.c1 END THEN ((t0.c0)LIKE(0.5583601398862544)) ELSE ((t0.c2) BETWEEN (t0.c1) AND (t0.c0)) END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN CASE t0.c0  WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN NULL THEN t0.c1 WHEN 0Xffffffff821c4f81 THEN vt0.c0 WHEN 0.18629802450572785 THEN t0.c1 ELSE t0.c1 END THEN ((t0.c0)LIKE(0.5583601398862544)) ELSE ((t0.c2) BETWEEN (t0.c1) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE t0.c0  WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN NULL THEN t0.c1 WHEN 0xffffffff821c4f81 THEN vt0.c0 WHEN 0.18629802450572785 THEN t0.c1 ELSE t0.c1 END THEN ((t0.c0)LIKE(0.5583601398862544)) ELSE ((t0.c2) BETWEEN (t0.c1) AND (t0.c0)) END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN CASE t0.c0  WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN NULL THEN t0.c1 WHEN 0Xffffffff821c4f81 THEN vt0.c0 WHEN 0.18629802450572785 THEN t0.c1 ELSE t0.c1 END THEN ((t0.c0)LIKE(0.5583601398862544)) ELSE ((t0.c2) BETWEEN (t0.c1) AND (t0.c0)) END);
SELECT COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY ((((t0.c1) ISNULL))-((((t0.c1))>(('48698117'))))) ASC  NULLS FIRST, CASE ((0.7687063388922706) IS FALSE)  WHEN (~ (t0.c2)) THEN t0.c2 COLLATE BINARY WHEN (t0.c1 IN (t0.c1)) THEN NULL WHEN (+ (t0.c0)) THEN t0.c0 WHEN ((t0.c2)<=(t0.c1)) THEN t0.c2 COLLATE BINARY WHEN t0.c0 COLLATE RTRIM THEN NULL END, -1455374766 ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1) ISNULL))-((((t0.c1))>(('48698117'))))) ASC  NULLS FIRST, CASE ((0.7687063388922706) IS FALSE)  WHEN (~ (t0.c2)) THEN t0.c2 COLLATE BINARY WHEN (t0.c1 IN (t0.c1)) THEN NULL WHEN (+ (t0.c0)) THEN t0.c0 WHEN ((t0.c2)<=(t0.c1)) THEN t0.c2 COLLATE BINARY WHEN t0.c0 COLLATE RTRIM THEN NULL END, -1455374766 ASC);
SELECT COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY ((((t0.c1) ISNULL))-((((t0.c1))>(('48698117'))))) ASC  NULLS FIRST, CASE ((0.7687063388922706) IS FALSE)  WHEN (~ (t0.c2)) THEN t0.c2 COLLATE BINARY WHEN (t0.c1 IN (t0.c1)) THEN NULL WHEN (+ (t0.c0)) THEN t0.c0 WHEN ((t0.c2)<=(t0.c1)) THEN t0.c2 COLLATE BINARY WHEN t0.c0 COLLATE RTRIM THEN NULL END, -1455374766 ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1) ISNULL))-((((t0.c1))>(('48698117'))))) ASC  NULLS FIRST, CASE ((0.7687063388922706) IS FALSE)  WHEN (~ (t0.c2)) THEN t0.c2 COLLATE BINARY WHEN (t0.c1 IN (t0.c1)) THEN NULL WHEN (+ (t0.c0)) THEN t0.c0 WHEN ((t0.c2)<=(t0.c1)) THEN t0.c2 COLLATE BINARY WHEN t0.c0 COLLATE RTRIM THEN NULL END, -1455374766 ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON rt0.c2 WHERE (vt0.c0 COLLATE BINARY) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON rt0.c2 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON rt0.c2 WHERE (vt0.c0 COLLATE BINARY) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON rt0.c2 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON rt0.c2 WHERE (vt0.c0 COLLATE BINARY) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (t0.c0) ORDER BY CASE WHEN ((((NULL)AND('r쌈')))AND(t0.c0)) THEN ((t0.c2)%(rt0.c0)) END ASC, (('12390258' COLLATE BINARY) BETWEEN (((rt0.c0)+(rt0.c0))) AND (t0.c0 COLLATE NOCASE)), (('ykmA')>=((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN ((((NULL)AND('r쌈')))AND(t0.c0)) THEN ((t0.c2)%(rt0.c0)) END ASC, (('12390258' COLLATE BINARY) BETWEEN (((rt0.c0)+(rt0.c0))) AND (t0.c0 COLLATE NOCASE)), (('ykmA')>=((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (t0.c0) ORDER BY CASE WHEN ((((NULL)AND('r쌈')))AND(t0.c0)) THEN ((t0.c2)%(rt0.c0)) END ASC, (('12390258' COLLATE BINARY) BETWEEN (((rt0.c0)+(rt0.c0))) AND (t0.c0 COLLATE NOCASE)), (('ykmA')>=((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN ((((NULL)AND('r쌈')))AND(t0.c0)) THEN ((t0.c2)%(rt0.c0)) END ASC, (('12390258' COLLATE BINARY) BETWEEN (((rt0.c0)+(rt0.c0))) AND (t0.c0 COLLATE NOCASE)), (('ykmA')>=((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (t0.c0) ORDER BY CASE WHEN ((((NULL)AND('r쌈')))AND(t0.c0)) THEN ((t0.c2)%(rt0.c0)) END ASC, (('12390258' COLLATE BINARY) BETWEEN (((rt0.c0)+(rt0.c0))) AND (t0.c0 COLLATE NOCASE)), (('ykmA')>=((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, 'J!{', t0.c1)) NOT BETWEEN (((t0.c2 IN (t0.c2)), (t0.c2 IN ()), '507320189')) AND (((t0.c0 IN ()), NULL, ((t0.c2) BETWEEN (t0.c2) AND (t0.c1))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, 'J!{', t0.c1)) NOT BETWEEN (((t0.c2 IN (t0.c2)), (t0.c2 IN ()), '507320189')) AND (((t0.c0 IN ()), NULL, ((t0.c2) BETWEEN (t0.c2) AND (t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, 'J!{', t0.c1)) NOT BETWEEN (((t0.c2 IN (t0.c2)), (t0.c2 IN ()), '507320189')) AND (((t0.c0 IN ()), NULL, ((t0.c2) BETWEEN (t0.c2) AND (t0.c1))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, 'J!{', t0.c1)) NOT BETWEEN (((t0.c2 IN (t0.c2)), (t0.c2 IN ()), '507320189')) AND (((t0.c0 IN ()), NULL, ((t0.c2) BETWEEN (t0.c2) AND (t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, 'J!{', t0.c1)) NOT BETWEEN (((t0.c2 IN (t0.c2)), (t0.c2 IN ()), '507320189')) AND (((t0.c0 IN ()), NULL, ((t0.c2) BETWEEN (t0.c2) AND (t0.c1))))));
SELECT * FROM t0 WHERE (json_patch(x'', ((t0.c0)IS NOT(t0.c0)))) ORDER BY ((((t0.c2) IS FALSE)) NOT NULL), ((((t0.c2) IS FALSE))GLOB((~ (t0.c2)))), (((((t0.c2))>=((t0.c0))))*(CAST(t0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_patch(x'', ((t0.c0)IS NOT(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) IS FALSE)) NOT NULL), ((((t0.c2) IS FALSE))GLOB((~ (t0.c2)))), (((((t0.c2))>=((t0.c0))))*(CAST(t0.c1 AS INTEGER)))  NULLS FIRST);
SELECT * FROM t0 WHERE (json_patch(x'', ((t0.c0)IS NOT(t0.c0)))) ORDER BY ((((t0.c2) IS FALSE)) NOT NULL), ((((t0.c2) IS FALSE))GLOB((~ (t0.c2)))), (((((t0.c2))>=((t0.c0))))*(CAST(t0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_patch(x'', ((t0.c0)IS NOT(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) IS FALSE)) NOT NULL), ((((t0.c2) IS FALSE))GLOB((~ (t0.c2)))), (((((t0.c2))>=((t0.c0))))*(CAST(t0.c1 AS INTEGER)))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((t0.c1)||(t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)||(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((t0.c1)||(t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)||(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((t0.c1)||(t0.c2)) COLLATE RTRIM);
SELECT ALL * FROM t0, vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (NULL);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((rt0.c0, rt0.c2, t0.c1)) BETWEEN ((((t0.c2)=(t0.c1)), -2.053131565E9, CAST('0.9426047699856526' AS TEXT))) AND ((CAST(rt0.c2 AS INTEGER), (rt0.c2 IN ()), ((((rt0.c1)AND(t0.c1)))OR(t0.c1)))))) ORDER BY CASE t0.c0 COLLATE RTRIM  WHEN CASE 0.6567704903474928  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE t0.c2 END THEN ((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(t0.c0)))AND(t0.c2)))AND(t0.c1)) WHEN ((((t0.c2)OR(t0.c0)))OR(rt0.c0)) THEN ((((vt0.c0)OR(x'00a0686d')))AND(t0.c2)) WHEN CAST(0X792bcaf6 AS NUMERIC) THEN 0.4210145024583798 WHEN (((NULL, vt0.c0, x''))>((rt0.c0, rt0.c2, t0.c2))) THEN CASE t0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN (((rt0.c0))!=((rt0.c0))) THEN CAST(vt0.c0 AS TEXT) ELSE rt0.c1 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, t0.c1)) BETWEEN ((((t0.c2)=(t0.c1)), -2.053131565E9, CAST('0.9426047699856526' AS TEXT))) AND ((CAST(rt0.c2 AS INTEGER), (rt0.c2 IN ()), ((((rt0.c1)AND(t0.c1)))OR(t0.c1)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CASE t0.c0 COLLATE RTRIM  WHEN CASE 0.6567704903474928  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE t0.c2 END THEN ((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(t0.c0)))AND(t0.c2)))AND(t0.c1)) WHEN ((((t0.c2)OR(t0.c0)))OR(rt0.c0)) THEN ((((vt0.c0)OR(x'00a0686d')))AND(t0.c2)) WHEN CAST(0X792bcaf6 AS NUMERIC) THEN 0.4210145024583798 WHEN (((NULL, vt0.c0, x''))>((rt0.c0, rt0.c2, t0.c2))) THEN CASE t0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN (((rt0.c0))!=((rt0.c0))) THEN CAST(vt0.c0 AS TEXT) ELSE rt0.c1 COLLATE BINARY END);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((rt0.c0, rt0.c2, t0.c1)) BETWEEN ((((t0.c2)=(t0.c1)), -2.053131565E9, CAST('0.9426047699856526' AS TEXT))) AND ((CAST(rt0.c2 AS INTEGER), (rt0.c2 IN ()), ((((rt0.c1)AND(t0.c1)))OR(t0.c1)))))) ORDER BY CASE t0.c0 COLLATE RTRIM  WHEN CASE 0.6567704903474928  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE t0.c2 END THEN ((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(t0.c0)))AND(t0.c2)))AND(t0.c1)) WHEN ((((t0.c2)OR(t0.c0)))OR(rt0.c0)) THEN ((((vt0.c0)OR(x'00a0686d')))AND(t0.c2)) WHEN CAST(0X792bcaf6 AS NUMERIC) THEN 0.4210145024583798 WHEN (((NULL, vt0.c0, x''))>((rt0.c0, rt0.c2, t0.c2))) THEN CASE t0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN (((rt0.c0))!=((rt0.c0))) THEN CAST(vt0.c0 AS TEXT) ELSE rt0.c1 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, t0.c1)) BETWEEN ((((t0.c2)=(t0.c1)), -2.053131565E9, CAST('0.9426047699856526' AS TEXT))) AND ((CAST(rt0.c2 AS INTEGER), (rt0.c2 IN ()), ((((rt0.c1)AND(t0.c1)))OR(t0.c1)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CASE t0.c0 COLLATE RTRIM  WHEN CASE 0.6567704903474928  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE t0.c2 END THEN ((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(t0.c0)))AND(t0.c2)))AND(t0.c1)) WHEN ((((t0.c2)OR(t0.c0)))OR(rt0.c0)) THEN ((((vt0.c0)OR(x'00a0686d')))AND(t0.c2)) WHEN CAST(0X792bcaf6 AS NUMERIC) THEN 0.4210145024583798 WHEN (((NULL, vt0.c0, x''))>((rt0.c0, rt0.c2, t0.c2))) THEN CASE t0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN (((rt0.c0))!=((rt0.c0))) THEN CAST(vt0.c0 AS TEXT) ELSE rt0.c1 COLLATE BINARY END);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((rt0.c0, rt0.c2, t0.c1)) BETWEEN ((((t0.c2)=(t0.c1)), -2.053131565E9, CAST('0.9426047699856526' AS TEXT))) AND ((CAST(rt0.c2 AS INTEGER), (rt0.c2 IN ()), ((((rt0.c1)AND(t0.c1)))OR(t0.c1)))))) ORDER BY CASE t0.c0 COLLATE RTRIM  WHEN CASE 0.6567704903474928  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE t0.c2 END THEN ((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(t0.c0)))AND(t0.c2)))AND(t0.c1)) WHEN ((((t0.c2)OR(t0.c0)))OR(rt0.c0)) THEN ((((vt0.c0)OR(x'00a0686d')))AND(t0.c2)) WHEN CAST(0X792bcaf6 AS NUMERIC) THEN 0.4210145024583798 WHEN (((NULL, vt0.c0, x''))>((rt0.c0, rt0.c2, t0.c2))) THEN CASE t0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN (((rt0.c0))!=((rt0.c0))) THEN CAST(vt0.c0 AS TEXT) ELSE rt0.c1 COLLATE BINARY END;
SELECT * FROM vt0, t0, rt0 WHERE (((t0.c1 IN (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 IN (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((t0.c1 IN (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 IN (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((t0.c1 IN (rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((CAST(t0.c0 AS NUMERIC))OR(x'')))OR((((rt0.c2, '1883702934', t0.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c2)) AND ((vt0.c0, t0.c0, vt0.c0))))) INNER JOIN rt0 ON ((((vt0.c0)LIKE(t0.c1))) IS FALSE) WHERE ((((rt0.c2 IN (vt0.c0, t0.c2)))>('.O?~XTQ\r')));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (vt0.c0, t0.c2)))>('.O?~XTQ\r'))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((CAST(t0.c0 AS NUMERIC))OR(x'')))OR((((rt0.c2, '1883702934', t0.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c2)) AND ((vt0.c0, t0.c0, vt0.c0))))) INNER JOIN rt0 ON ((((vt0.c0)LIKE(t0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((CAST(t0.c0 AS NUMERIC))OR(x'')))OR((((rt0.c2, '1883702934', t0.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c2)) AND ((vt0.c0, t0.c0, vt0.c0))))) INNER JOIN rt0 ON ((((vt0.c0)LIKE(t0.c1))) IS FALSE) WHERE ((((rt0.c2 IN (vt0.c0, t0.c2)))>('.O?~XTQ\r')));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (vt0.c0, t0.c2)))>('.O?~XTQ\r'))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((CAST(t0.c0 AS NUMERIC))OR(x'')))OR((((rt0.c2, '1883702934', t0.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c2)) AND ((vt0.c0, t0.c0, vt0.c0))))) INNER JOIN rt0 ON ((((vt0.c0)LIKE(t0.c1))) IS FALSE));
SELECT * FROM t0, vt0, rt0 WHERE (CHANGES()) ORDER BY ((rt0.c1 IN ()) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((rt0.c1 IN ()) IN ()) ASC  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE (CHANGES()) ORDER BY ((rt0.c1 IN ()) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((rt0.c1 IN ()) IN ()) ASC  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE (CHANGES()) ORDER BY ((rt0.c1 IN ()) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) ISNULL)) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (UPPER(vt0.c0)))) ORDER BY CAST((rt0.c1 IN (vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (UPPER(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((rt0.c1 IN (vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) ISNULL)) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (UPPER(vt0.c0)))) ORDER BY CAST((rt0.c1 IN (vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (UPPER(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((rt0.c1 IN (vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) ISNULL)) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (UPPER(vt0.c0)))) ORDER BY CAST((rt0.c1 IN (vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0) BETWEEN (0.4885265353873566) AND (t0.c2)))==((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))) ORDER BY HEX((((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (0.4885265353873566) AND (t0.c2)))=((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY HEX((((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0) BETWEEN (0.4885265353873566) AND (t0.c2)))==((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))) ORDER BY HEX((((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (0.4885265353873566) AND (t0.c2)))=((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY HEX((((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0) BETWEEN (0.4885265353873566) AND (t0.c2)))==((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))) ORDER BY HEX((((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0))) BETWEEN (0.8426851011734963) AND (('389448329' IN ())))) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS BLOB)))  NULLS FIRST, CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(vt0.c0))) BETWEEN (0.8426851011734963) AND (('389448329' IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS BLOB)))  NULLS FIRST, CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0))) BETWEEN (0.8426851011734963) AND (('389448329' IN ())))) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS BLOB)))  NULLS FIRST, CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(vt0.c0))) BETWEEN (0.8426851011734963) AND (('389448329' IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS BLOB)))  NULLS FIRST, CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0))) BETWEEN (0.8426851011734963) AND (('389448329' IN ())))) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS BLOB)))  NULLS FIRST, CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END AS TEXT)) ORDER BY (+ ((((t0.c1, t0.c2, t0.c2))!=((t0.c2, -1796795698, t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (+ ((((t0.c1, t0.c2, t0.c2))!=((t0.c2, -1796795698, t0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END AS TEXT)) ORDER BY (+ ((((t0.c1, t0.c2, t0.c2))!=((t0.c2, -1796795698, t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (+ ((((t0.c1, t0.c2, t0.c2))!=((t0.c2, -1796795698, t0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END AS TEXT)) ORDER BY (+ ((((t0.c1, t0.c2, t0.c2))!=((t0.c2, -1796795698, t0.c0))))) DESC  NULLS FIRST;
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c2) BETWEEN (((((((((rt0.c2)AND(t0.c0)))OR(t0.c2)))OR(rt0.c1)))AND(vt0.c0))) AND (((((t0.c0)AND(x'')))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (((((((((rt0.c2)AND(t0.c0)))OR(t0.c2)))OR(rt0.c1)))AND(vt0.c0))) AND (((((t0.c0)AND(x'')))OR(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c2) BETWEEN (((((((((rt0.c2)AND(t0.c0)))OR(t0.c2)))OR(rt0.c1)))AND(vt0.c0))) AND (((((t0.c0)AND(x'')))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (((((((((rt0.c2)AND(t0.c0)))OR(t0.c2)))OR(rt0.c1)))AND(vt0.c0))) AND (((((t0.c0)AND(x'')))OR(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c2) BETWEEN (((((((((rt0.c2)AND(t0.c0)))OR(t0.c2)))OR(rt0.c1)))AND(vt0.c0))) AND (((((t0.c0)AND(x'')))OR(rt0.c1)))));
SELECT * FROM vt0 WHERE (NULL) ORDER BY LOWER(((((vt0.c0)OR('1041135616')))AND(vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY LOWER(((((vt0.c0)OR('1041135616')))AND(vt0.c0))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY LOWER(((((vt0.c0)OR('1041135616')))AND(vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY LOWER(((((vt0.c0)OR('1041135616')))AND(vt0.c0))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY LOWER(((((vt0.c0)OR('1041135616')))AND(vt0.c0))) DESC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((((('-701432128'))=((rt0.c0)))) BETWEEN (((rt0.c1)<<(vt0.c0))) AND (CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((('-701432128'))==((rt0.c0)))) BETWEEN (((rt0.c1)<<(vt0.c0))) AND (CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((('-701432128'))=((rt0.c0)))) BETWEEN (((rt0.c1)<<(vt0.c0))) AND (CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((('-701432128'))==((rt0.c0)))) BETWEEN (((rt0.c1)<<(vt0.c0))) AND (CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((('-701432128'))=((rt0.c0)))) BETWEEN (((rt0.c1)<<(vt0.c0))) AND (CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)));
SELECT * FROM vt0, t0, rt0 WHERE (CAST(((t0.c0) IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (CAST(((t0.c0) IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (CAST(((t0.c0) IS FALSE) AS TEXT));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((0xffffffffdf71d1de)||((rt0.c0 IN (rt0.c1, t0.c2)))) WHERE ((((rt0.c2) IS TRUE) IN ())) ORDER BY ((rt0.c0 COLLATE NOCASE)IS(((('[^6(2	q&y', t0.c2, rt0.c1))==((rt0.c0, rt0.c0, x'')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) IS TRUE) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((0xffffffffdf71d1de)||((rt0.c0 IN (rt0.c1, t0.c2)))) ORDER BY ((rt0.c0 COLLATE NOCASE)IS(((('[^6(2	q&y', t0.c2, rt0.c1))==((rt0.c0, rt0.c0, x'')))))  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((0xffffffffdf71d1de)||((rt0.c0 IN (rt0.c1, t0.c2)))) WHERE ((((rt0.c2) IS TRUE) IN ())) ORDER BY ((rt0.c0 COLLATE NOCASE)IS(((('[^6(2	q&y', t0.c2, rt0.c1))==((rt0.c0, rt0.c0, x'')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) IS TRUE) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((0xffffffffdf71d1de)||((rt0.c0 IN (rt0.c1, t0.c2)))) ORDER BY ((rt0.c0 COLLATE NOCASE)IS(((('[^6(2	q&y', t0.c2, rt0.c1))==((rt0.c0, rt0.c0, x'')))))  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((0xffffffffdf71d1de)||((rt0.c0 IN (rt0.c1, t0.c2)))) WHERE ((((rt0.c2) IS TRUE) IN ())) ORDER BY ((rt0.c0 COLLATE NOCASE)IS(((('[^6(2	q&y', t0.c2, rt0.c1))==((rt0.c0, rt0.c0, x'')))))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (LOWER(rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (LOWER(rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (LOWER(rt0.c1 COLLATE RTRIM));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0)=(rt0.c2))))=((rt0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)=(rt0.c2))))==((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0)=(rt0.c2))))=((rt0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)=(rt0.c2))))==((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0)=(rt0.c2))))=((rt0.c2 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN rt0 ON ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ('1041135616')) WHERE ((((rt0.c2)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((rt0.c1)OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((rt0.c1)OR(rt0.c0)))))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ('1041135616')));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN rt0 ON ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ('1041135616')) WHERE ((((rt0.c2)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((rt0.c1)OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((rt0.c1)OR(rt0.c0)))))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ('1041135616')));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN rt0 ON ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ('1041135616')) WHERE ((((rt0.c2)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((rt0.c1)OR(rt0.c0))))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((((((((+ (vt0.c0)))OR((NOT (t0.c2)))))AND(((t0.c2)*(t0.c0)))))OR((t0.c2 IN (t0.c2, vt0.c0)))))AND(((t0.c2)*(t0.c0)))) WHERE ((t0.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((t0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((((((((+ (vt0.c0)))OR((NOT (t0.c2)))))AND(((t0.c2)*(t0.c0)))))OR((t0.c2 IN (t0.c2, vt0.c0)))))AND(((t0.c2)*(t0.c0)))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((((((((+ (vt0.c0)))OR((NOT (t0.c2)))))AND(((t0.c2)*(t0.c0)))))OR((t0.c2 IN (t0.c2, vt0.c0)))))AND(((t0.c2)*(t0.c0)))) WHERE ((t0.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((t0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((((((((+ (vt0.c0)))OR((NOT (t0.c2)))))AND(((t0.c2)*(t0.c0)))))OR((t0.c2 IN (t0.c2, vt0.c0)))))AND(((t0.c2)*(t0.c0)))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((((((((+ (vt0.c0)))OR((NOT (t0.c2)))))AND(((t0.c2)*(t0.c0)))))OR((t0.c2 IN (t0.c2, vt0.c0)))))AND(((t0.c2)*(t0.c0)))) WHERE ((t0.c2 IN ()) COLLATE RTRIM);
SELECT ALL * FROM rt0 INDEXED BY i79 WHERE (rt0.c1) ORDER BY CAST(load_extension(rt0.c1, rt0.c0) AS TEXT)  NULLS LAST, ((((rt0.c0) IS FALSE)) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((x'')))) AND (rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 INDEXED BY i79 ORDER BY CAST(load_extension(rt0.c1, rt0.c0) AS TEXT)  NULLS LAST, ((((rt0.c0) IS FALSE)) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((x'')))) AND (rt0.c2)) DESC);
SELECT ALL * FROM rt0 INDEXED BY i79 WHERE (rt0.c1) ORDER BY CAST(load_extension(rt0.c1, rt0.c0) AS TEXT)  NULLS LAST, ((((rt0.c0) IS FALSE)) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((x'')))) AND (rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 INDEXED BY i79 ORDER BY CAST(load_extension(rt0.c1, rt0.c0) AS TEXT)  NULLS LAST, ((((rt0.c0) IS FALSE)) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((x'')))) AND (rt0.c2)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((0.7170631570313309)AND(rt0.c2)))OR(rt0.c1)))LIKE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.7170631570313309)AND(rt0.c2)))OR(rt0.c1)))LIKE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((((0.7170631570313309)AND(rt0.c2)))OR(rt0.c1)))LIKE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.7170631570313309)AND(rt0.c2)))OR(rt0.c1)))LIKE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((((0.7170631570313309)AND(rt0.c2)))OR(rt0.c1)))LIKE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (((t0.c2)<=((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((t0.c2)<=((t0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((t0.c2)<=((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((t0.c2)<=((t0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((t0.c2)<=((t0.c0 IN ()))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (('272130814' IN ()));
SELECT SUM(count) FROM (SELECT ((('272130814' IN ())) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (('272130814' IN ()));
SELECT SUM(count) FROM (SELECT ((('272130814' IN ())) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (('272130814' IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c1 END AS REAL)) ORDER BY ((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN rt0.c1 END AS REAL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) ORDER BY ((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0 COLLATE BINARY)) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c1 END AS REAL)) ORDER BY ((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN rt0.c1 END AS REAL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) ORDER BY ((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0 COLLATE BINARY)) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c1 END AS REAL)) ORDER BY ((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0 COLLATE BINARY)) DESC;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((+ ((rt0.c1 IN ())))) ORDER BY CAST((t0.c2 IN ()) AS NUMERIC) DESC  NULLS FIRST, ((CAST('-162451217' AS REAL)) NOT BETWEEN (HEX(DISTINCT t0.c0)) AND ((((rt0.c2, t0.c2, rt0.c1)) NOT BETWEEN ((t0.c0, t0.c2, rt0.c2)) AND ((t0.c2, rt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST((t0.c2 IN ()) AS NUMERIC) DESC  NULLS FIRST, ((CAST('-162451217' AS REAL)) NOT BETWEEN (HEX(DISTINCT t0.c0)) AND ((((rt0.c2, t0.c2, rt0.c1)) NOT BETWEEN ((t0.c0, t0.c2, rt0.c2)) AND ((t0.c2, rt0.c0, vt0.c0))))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((+ ((rt0.c1 IN ())))) ORDER BY CAST((t0.c2 IN ()) AS NUMERIC) DESC  NULLS FIRST, ((CAST('-162451217' AS REAL)) NOT BETWEEN (HEX(DISTINCT t0.c0)) AND ((((rt0.c2, t0.c2, rt0.c1)) NOT BETWEEN ((t0.c0, t0.c2, rt0.c2)) AND ((t0.c2, rt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST((t0.c2 IN ()) AS NUMERIC) DESC  NULLS FIRST, ((CAST('-162451217' AS REAL)) NOT BETWEEN (HEX(DISTINCT t0.c0)) AND ((((rt0.c2, t0.c2, rt0.c1)) NOT BETWEEN ((t0.c0, t0.c2, rt0.c2)) AND ((t0.c2, rt0.c0, vt0.c0))))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((+ ((rt0.c1 IN ())))) ORDER BY CAST((t0.c2 IN ()) AS NUMERIC) DESC  NULLS FIRST, ((CAST('-162451217' AS REAL)) NOT BETWEEN (HEX(DISTINCT t0.c0)) AND ((((rt0.c2, t0.c2, rt0.c1)) NOT BETWEEN ((t0.c0, t0.c2, rt0.c2)) AND ((t0.c2, rt0.c0, vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (HEX(DISTINCT -546188834 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT -546188834 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (HEX(DISTINCT -546188834 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT -546188834 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (HEX(DISTINCT -546188834 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (LIKELY(CASE t0.c2  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE t0.c2  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (LIKELY(CASE t0.c2  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE t0.c2  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (LIKELY(CASE t0.c2  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((vt0.c0)-(rt0.c0)))AND((((('272130814')AND(t0.c1)))AND(x''))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(rt0.c0)))AND((((('272130814')AND(t0.c1)))AND(x''))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((vt0.c0)-(rt0.c0)))AND((((('272130814')AND(t0.c1)))AND(x''))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(rt0.c0)))AND((((('272130814')AND(t0.c1)))AND(x''))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((vt0.c0)-(rt0.c0)))AND((((('272130814')AND(t0.c1)))AND(x''))))) ORDER BY x'' DESC;
SELECT ALL * FROM t0, rt0 WHERE ((((((t0.c2))>=((rt0.c2)))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND ((+ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))>=((rt0.c2)))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND ((+ (t0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((((t0.c2))>=((rt0.c2)))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND ((+ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))>=((rt0.c2)))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND ((+ (t0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((((t0.c2))>=((rt0.c2)))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND ((+ (t0.c2)))));
SELECT ALL * FROM vt0, rt0, t0 WHERE (((x'') NOT BETWEEN ((((rt0.c1))!=((t0.c0)))) AND (CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY CAST(highlight(rt0.c2, t0.c2, vt0.c0, '') AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN ((((rt0.c1))!=((t0.c0)))) AND (CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST(highlight(rt0.c2, t0.c2, vt0.c0, '') AS NUMERIC) ASC);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((x'') NOT BETWEEN ((((rt0.c1))!=((t0.c0)))) AND (CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY CAST(highlight(rt0.c2, t0.c2, vt0.c0, '') AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN ((((rt0.c1))!=((t0.c0)))) AND (CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST(highlight(rt0.c2, t0.c2, vt0.c0, '') AS NUMERIC) ASC);
SELECT * FROM vt0, t0 WHERE (((((t0.c1)OR(UNLIKELY(vt0.c0))))OR(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)OR(UNLIKELY(vt0.c0))))OR(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c1)OR(UNLIKELY(vt0.c0))))OR(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)OR(UNLIKELY(vt0.c0))))OR(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c1)OR(UNLIKELY(vt0.c0))))OR(LOWER(vt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))%(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))%(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))%(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))%(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))%(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT * FROM t0, rt0 WHERE (json_array_length(((t0.c2)!=(NULL)))) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((t0.c2)!=(NULL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c2 DESC);
SELECT * FROM t0, rt0 WHERE (json_array_length(((t0.c2)!=(NULL)))) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((t0.c2)!=(NULL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c2 DESC);
SELECT * FROM t0, rt0 WHERE (json_array_length(((t0.c2)!=(NULL)))) ORDER BY t0.c2 DESC;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((((NULL)) NOT BETWEEN ((t0.c2)) AND ((rt0.c0))))OR(((t0.c2)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)) NOT BETWEEN ((t0.c2)) AND ((rt0.c0))))OR(((t0.c2)+(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((((NULL)) NOT BETWEEN ((t0.c2)) AND ((rt0.c0))))OR(((t0.c2)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)) NOT BETWEEN ((t0.c2)) AND ((rt0.c0))))OR(((t0.c2)+(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((((NULL)) NOT BETWEEN ((t0.c2)) AND ((rt0.c0))))OR(((t0.c2)+(vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)>=(vt0.c0)))OR((('1850741498') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN '-62051388' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>=(vt0.c0)))OR((('1850741498') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN '-62051388' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)>=(vt0.c0)))OR((('1850741498') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN '-62051388' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>=(vt0.c0)))OR((('1850741498') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN '-62051388' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)>=(vt0.c0)))OR((('1850741498') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN '-62051388' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0 IN ())) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED INNER JOIN t0 ON COALESCE(DISTINCT t0.c1, ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) INNER JOIN rt0 ON (((((rt0.c2) NOTNULL)))>((t0.c1 COLLATE RTRIM))) WHERE (CAST(CAST(t0.c1 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c1 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON COALESCE(DISTINCT t0.c1, ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) INNER JOIN rt0 ON (((((rt0.c2) NOTNULL)))>((t0.c1 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED INNER JOIN t0 ON COALESCE(DISTINCT t0.c1, ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) INNER JOIN rt0 ON (((((rt0.c2) NOTNULL)))>((t0.c1 COLLATE RTRIM))) WHERE (CAST(CAST(t0.c1 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c1 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON COALESCE(DISTINCT t0.c1, ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) INNER JOIN rt0 ON (((((rt0.c2) NOTNULL)))>((t0.c1 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED INNER JOIN t0 ON COALESCE(DISTINCT t0.c1, ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) INNER JOIN rt0 ON (((((rt0.c2) NOTNULL)))>((t0.c1 COLLATE RTRIM))) WHERE (CAST(CAST(t0.c1 AS BLOB) AS INTEGER));
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON ((CAST(t0.c0 AS TEXT))+(((rt0.c1)-(t0.c0)))) WHERE ((((t0.c2))>((rt0.c2))) COLLATE NOCASE) ORDER BY NULL  NULLS LAST, ((((t0.c2)>=(0.3420548532936428))) IS TRUE)  NULLS LAST, ((((t0.c0))>((rt0.c0))) IN (((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((((t0.c2))>((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((CAST(t0.c0 AS TEXT))+(((rt0.c1)-(t0.c0)))) ORDER BY NULL  NULLS LAST, ((((t0.c2)>=(0.3420548532936428))) IS TRUE)  NULLS LAST, ((((t0.c0))>((rt0.c0))) IN (((rt0.c2) NOT NULL))));
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON ((CAST(t0.c0 AS TEXT))+(((rt0.c1)-(t0.c0)))) WHERE ((((t0.c2))>((rt0.c2))) COLLATE NOCASE) ORDER BY NULL  NULLS LAST, ((((t0.c2)>=(0.3420548532936428))) IS TRUE)  NULLS LAST, ((((t0.c0))>((rt0.c0))) IN (((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((((t0.c2))>((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((CAST(t0.c0 AS TEXT))+(((rt0.c1)-(t0.c0)))) ORDER BY NULL  NULLS LAST, ((((t0.c2)>=(0.3420548532936428))) IS TRUE)  NULLS LAST, ((((t0.c0))>((rt0.c0))) IN (((rt0.c2) NOT NULL))));
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON ((CAST(t0.c0 AS TEXT))+(((rt0.c1)-(t0.c0)))) WHERE ((((t0.c2))>((rt0.c2))) COLLATE NOCASE) ORDER BY NULL  NULLS LAST, ((((t0.c2)>=(0.3420548532936428))) IS TRUE)  NULLS LAST, ((((t0.c0))>((rt0.c0))) IN (((rt0.c2) NOT NULL)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((t0.c2)) BETWEEN (((((rt0.c1))=((t0.c0))))) AND (((rt0.c0 IN ())))) RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c1 AS REAL) AS TEXT) WHERE ('-866082793');
SELECT SUM(count) FROM (SELECT (('-866082793') IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((t0.c2)) BETWEEN (((((rt0.c1))=((t0.c0))))) AND (((rt0.c0 IN ())))) RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c1 AS REAL) AS TEXT));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((t0.c2)) BETWEEN (((((rt0.c1))=((t0.c0))))) AND (((rt0.c0 IN ())))) RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c1 AS REAL) AS TEXT) WHERE ('-866082793');
SELECT SUM(count) FROM (SELECT (('-866082793') IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((t0.c2)) BETWEEN (((((rt0.c1))=((t0.c0))))) AND (((rt0.c0 IN ())))) RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c1 AS REAL) AS TEXT));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((t0.c2)) BETWEEN (((((rt0.c1))=((t0.c0))))) AND (((rt0.c0 IN ())))) RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c1 AS REAL) AS TEXT) WHERE ('-866082793');
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((((rt0.c1 IN ()))OR(CASE WHEN vt0.c0 THEN t0.c1 END)))AND((+ (t0.c0))))) ORDER BY t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))OR(CASE WHEN vt0.c0 THEN t0.c1 END)))AND((+ (t0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY t0.c2  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((((rt0.c1 IN ()))OR(CASE WHEN vt0.c0 THEN t0.c1 END)))AND((+ (t0.c0))))) ORDER BY t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))OR(CASE WHEN vt0.c0 THEN t0.c1 END)))AND((+ (t0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY t0.c2  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((((rt0.c1 IN ()))OR(CASE WHEN vt0.c0 THEN t0.c1 END)))AND((+ (t0.c0))))) ORDER BY t0.c2  NULLS FIRST;
SELECT ALL * FROM t0, vt0 NATURAL JOIN rt0 WHERE (((t0.c0) NOT NULL) COLLATE BINARY) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt0 ORDER BY t0.c0 DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 NATURAL JOIN rt0 WHERE (((t0.c0) NOT NULL) COLLATE BINARY) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt0 ORDER BY t0.c0 DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 NATURAL JOIN rt0 WHERE (((t0.c0) NOT NULL) COLLATE BINARY) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c2 AS NUMERIC)) BETWEEN ((~ (rt0.c2))) AND ((rt0.c0 IN (rt0.c0, t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS NUMERIC)) BETWEEN ((~ (rt0.c2))) AND ((rt0.c0 IN (rt0.c0, t0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c2 AS NUMERIC)) BETWEEN ((~ (rt0.c2))) AND ((rt0.c0 IN (rt0.c0, t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS NUMERIC)) BETWEEN ((~ (rt0.c2))) AND ((rt0.c0 IN (rt0.c0, t0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c2 AS NUMERIC)) BETWEEN ((~ (rt0.c2))) AND ((rt0.c0 IN (rt0.c0, t0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((('o(D)')|((~ (rt0.c2))))) ORDER BY 0xffffffffda51e5f1 COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('o(D)')|((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY 0xffffffffda51e5f1 COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((('o(D)')|((~ (rt0.c2))))) ORDER BY 0xffffffffda51e5f1 COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('o(D)')|((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY 0xffffffffda51e5f1 COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((('o(D)')|((~ (rt0.c2))))) ORDER BY 0xffffffffda51e5f1 COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON (((t0.c1 IN ()))GLOB(((vt0.c0) IS TRUE))) WHERE ((('' COLLATE RTRIM) BETWEEN ((+ (vt0.c0))) AND (rt0.c2 COLLATE BINARY))) ORDER BY (((((~ (t0.c0)))AND(t0.c2 COLLATE RTRIM)))OR(t0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((('' COLLATE RTRIM) BETWEEN ((+ (vt0.c0))) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON (((t0.c1 IN ()))GLOB(((vt0.c0) IS TRUE))) ORDER BY (((((~ (t0.c0)))AND(t0.c2 COLLATE RTRIM)))OR(t0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON (((t0.c1 IN ()))GLOB(((vt0.c0) IS TRUE))) WHERE ((('' COLLATE RTRIM) BETWEEN ((+ (vt0.c0))) AND (rt0.c2 COLLATE BINARY))) ORDER BY (((((~ (t0.c0)))AND(t0.c2 COLLATE RTRIM)))OR(t0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((('' COLLATE RTRIM) BETWEEN ((+ (vt0.c0))) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON (((t0.c1 IN ()))GLOB(((vt0.c0) IS TRUE))) ORDER BY (((((~ (t0.c0)))AND(t0.c2 COLLATE RTRIM)))OR(t0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON (((t0.c1 IN ()))GLOB(((vt0.c0) IS TRUE))) WHERE ((('' COLLATE RTRIM) BETWEEN ((+ (vt0.c0))) AND (rt0.c2 COLLATE BINARY))) ORDER BY (((((~ (t0.c0)))AND(t0.c2 COLLATE RTRIM)))OR(t0.c0 COLLATE NOCASE));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)GLOB(CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)GLOB(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)GLOB(CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)GLOB(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)GLOB(CAST(rt0.c2 AS REAL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY) ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE BINARY) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE BINARY) AND (NULL))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY) ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE BINARY) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE BINARY) AND (NULL))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY) ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE BINARY) AND (NULL))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((CAST(rt0.c0 AS NUMERIC))AND(x'')))OR(((rt0.c0)IS(vt0.c0))))) ORDER BY ((HEX(DISTINCT rt0.c0)) NOT BETWEEN (0.5614583966021288) AND (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS NUMERIC))AND(x'')))OR(((rt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((HEX(DISTINCT rt0.c0)) NOT BETWEEN (0.5614583966021288) AND (vt0.c0)) ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((CAST(rt0.c0 AS NUMERIC))AND(x'')))OR(((rt0.c0)IS(vt0.c0))))) ORDER BY ((HEX(DISTINCT rt0.c0)) NOT BETWEEN (0.5614583966021288) AND (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS NUMERIC))AND(x'')))OR(((rt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((HEX(DISTINCT rt0.c0)) NOT BETWEEN (0.5614583966021288) AND (vt0.c0)) ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((CAST(rt0.c0 AS NUMERIC))AND(x'')))OR(((rt0.c0)IS(vt0.c0))))) ORDER BY ((HEX(DISTINCT rt0.c0)) NOT BETWEEN (0.5614583966021288) AND (vt0.c0)) ASC;
SELECT ALL * FROM t0, vt0, rt0 WHERE (((GLOB(t0.c0, t0.c2)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(t0.c0, t0.c2)) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((GLOB(t0.c0, t0.c2)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(t0.c0, t0.c2)) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((GLOB(t0.c0, t0.c2)) NOTNULL));
SELECT COUNT(*) FROM rt0, t0 WHERE (UPPER(DISTINCT t0.c2));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT t0.c2)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (UPPER(DISTINCT t0.c2));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT t0.c2)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (UPPER(DISTINCT t0.c2));
SELECT * FROM rt0, vt0 WHERE ((((((+ (rt0.c2)))AND(((rt0.c2)/(vt0.c0)))))AND((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((+ (rt0.c2)))AND(((rt0.c2)/(vt0.c0)))))AND((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((+ (rt0.c2)))AND(((rt0.c2)/(vt0.c0)))))AND((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((+ (rt0.c2)))AND(((rt0.c2)/(vt0.c0)))))AND((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((+ (rt0.c2)))AND(((rt0.c2)/(vt0.c0)))))AND((+ (rt0.c1)))));
SELECT * FROM t0, vt0 WHERE ((((((((((t0.c1 IN (t0.c0)))AND(((t0.c0) NOT NULL))))AND(x'')))AND((((t0.c2))!=((t0.c2))))))AND((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c1 IN (t0.c0)))AND(((t0.c0) NOT NULL))))AND(x'')))AND((((t0.c2))<>((t0.c2))))))AND((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((((((t0.c1 IN (t0.c0)))AND(((t0.c0) NOT NULL))))AND(x'')))AND((((t0.c2))!=((t0.c2))))))AND((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c1 IN (t0.c0)))AND(((t0.c0) NOT NULL))))AND(x'')))AND((((t0.c2))<>((t0.c2))))))AND((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((((((t0.c1 IN (t0.c0)))AND(((t0.c0) NOT NULL))))AND(x'')))AND((((t0.c2))!=((t0.c2))))))AND((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))));
SELECT ALL * FROM vt0 WHERE ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) COLLATE NOCASE) ORDER BY -1.7976931348623157E308 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY -1.7976931348623157E308 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) COLLATE NOCASE) ORDER BY -1.7976931348623157E308 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY -1.7976931348623157E308 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) COLLATE NOCASE) ORDER BY -1.7976931348623157E308 ASC  NULLS FIRST;
SELECT * FROM t0, rt0, vt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0))) BETWEEN (((t0.c0)%(0.8924128734696372))) AND (TRIM(DISTINCT t0.c1, vt0.c0)))) ORDER BY ((((((t0.c2)OR(t0.c2)))OR(rt0.c2))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0))) BETWEEN (((t0.c0)%(0.8924128734696372))) AND (TRIM(DISTINCT t0.c1, vt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((((t0.c2)OR(t0.c2)))OR(rt0.c2))) ISNULL) DESC  NULLS LAST);
SELECT * FROM t0, rt0, vt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0))) BETWEEN (((t0.c0)%(0.8924128734696372))) AND (TRIM(DISTINCT t0.c1, vt0.c0)))) ORDER BY ((((((t0.c2)OR(t0.c2)))OR(rt0.c2))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0))) BETWEEN (((t0.c0)%(0.8924128734696372))) AND (TRIM(DISTINCT t0.c1, vt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((((t0.c2)OR(t0.c2)))OR(rt0.c2))) ISNULL) DESC  NULLS LAST);
SELECT * FROM t0, rt0, vt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0))) BETWEEN (((t0.c0)%(0.8924128734696372))) AND (TRIM(DISTINCT t0.c1, vt0.c0)))) ORDER BY ((((((t0.c2)OR(t0.c2)))OR(rt0.c2))) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((((((vt0.c0)OR(rt0.c1)))OR(rt0.c0))) NOT NULL)) ORDER BY (((((rt0.c1)) BETWEEN ((NULL)) AND ((0.04590647221860977))))LIKE(JULIANDAY(rt0.c2, rt0.c1, rt0.c1))), x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1)) BETWEEN ((NULL)) AND ((0.04590647221860977))))LIKE(JULIANDAY(rt0.c2, rt0.c1, rt0.c1))), x'' DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((((vt0.c0)OR(rt0.c1)))OR(rt0.c0))) NOT NULL)) ORDER BY (((((rt0.c1)) BETWEEN ((NULL)) AND ((0.04590647221860977))))LIKE(JULIANDAY(rt0.c2, rt0.c1, rt0.c1))), x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1)) BETWEEN ((NULL)) AND ((0.04590647221860977))))LIKE(JULIANDAY(rt0.c2, rt0.c1, rt0.c1))), x'' DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((((vt0.c0)OR(rt0.c1)))OR(rt0.c0))) NOT NULL)) ORDER BY (((((rt0.c1)) BETWEEN ((NULL)) AND ((0.04590647221860977))))LIKE(JULIANDAY(rt0.c2, rt0.c1, rt0.c1))), x'' DESC;
SELECT * FROM t0 WHERE ((('15513942')=(((((t0.c1)OR(t0.c2)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('15513942')=(((((t0.c1)OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((('15513942')=(((((t0.c1)OR(t0.c2)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('15513942')=(((((t0.c1)OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((('15513942')=(((((t0.c1)OR(t0.c2)))OR(t0.c2)))));
SELECT ALL COUNT(*) FROM t0 WHERE (json_remove(t0.c2, ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)), t0.c1 COLLATE RTRIM, CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END, (((t0.c0))!=((t0.c2))), NULL));
SELECT SUM(count) FROM (SELECT ((json_remove(t0.c2, ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)), t0.c1 COLLATE RTRIM, CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END, (((t0.c0))<>((t0.c2))), NULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (json_remove(t0.c2, ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)), t0.c1 COLLATE RTRIM, CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END, (((t0.c0))!=((t0.c2))), NULL));
SELECT SUM(count) FROM (SELECT ((json_remove(t0.c2, ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)), t0.c1 COLLATE RTRIM, CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END, (((t0.c0))<>((t0.c2))), NULL)) IS TRUE)  as count FROM t0);
SELECT * FROM vt0, rt0 WHERE (((((((((((vt0.c0)AND(rt0.c2)))OR(((rt0.c1) IS TRUE))))OR(((rt0.c2) NOTNULL))))AND(vt0.c0)))OR((rt0.c1 IN ())))) ORDER BY (((- (x'')))%(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))) DESC, ((SQLITE_COMPILEOPTION_USED(rt0.c1))>(rt0.c2 COLLATE BINARY))  NULLS LAST, '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(rt0.c2)))OR(((rt0.c1) IS TRUE))))OR(((rt0.c2) NOTNULL))))AND(vt0.c0)))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((- (x'')))%(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))) DESC, ((SQLITE_COMPILEOPTION_USED(rt0.c1))>(rt0.c2 COLLATE BINARY))  NULLS LAST, '' ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((((((((vt0.c0)AND(rt0.c2)))OR(((rt0.c1) IS TRUE))))OR(((rt0.c2) NOTNULL))))AND(vt0.c0)))OR((rt0.c1 IN ())))) ORDER BY (((- (x'')))%(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))) DESC, ((SQLITE_COMPILEOPTION_USED(rt0.c1))>(rt0.c2 COLLATE BINARY))  NULLS LAST, '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(rt0.c2)))OR(((rt0.c1) IS TRUE))))OR(((rt0.c2) NOTNULL))))AND(vt0.c0)))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((- (x'')))%(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))) DESC, ((SQLITE_COMPILEOPTION_USED(rt0.c1))>(rt0.c2 COLLATE BINARY))  NULLS LAST, '' ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((((((((vt0.c0)AND(rt0.c2)))OR(((rt0.c1) IS TRUE))))OR(((rt0.c2) NOTNULL))))AND(vt0.c0)))OR((rt0.c1 IN ())))) ORDER BY (((- (x'')))%(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))) DESC, ((SQLITE_COMPILEOPTION_USED(rt0.c1))>(rt0.c2 COLLATE BINARY))  NULLS LAST, '' ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)*(rt0.c2)))<=(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)*(rt0.c2)))<=(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)*(rt0.c2)))<=(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)*(rt0.c2)))<=(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)*(rt0.c2)))<=(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (CAST(((vt0.c0)|(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)|(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (CAST(((vt0.c0)|(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)|(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (CAST(((vt0.c0)|(vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0, t0 WHERE (((x'f980') NOT BETWEEN (rt0.c1) AND ((~ (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((x'f980') NOT BETWEEN (rt0.c1) AND ((~ (t0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((x'f980') NOT BETWEEN (rt0.c1) AND ((~ (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((x'f980') NOT BETWEEN (rt0.c1) AND ((~ (t0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((x'f980') NOT BETWEEN (rt0.c1) AND ((~ (t0.c1)))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((HEX(rt0.c1)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c1)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((HEX(rt0.c1)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c1)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((HEX(rt0.c1)) IS TRUE));
SELECT ALL * FROM rt0, t0 NOT INDEXED, vt0 WHERE (((((vt0.c0) BETWEEN ('-244857887') AND (-1204929059))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))) AND (((rt0.c1)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN ('-244857887') AND (-1204929059))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))) AND (((rt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0 NOT INDEXED, vt0 WHERE (((((vt0.c0) BETWEEN ('-244857887') AND (-1204929059))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))) AND (((rt0.c1)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN ('-244857887') AND (-1204929059))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))) AND (((rt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0 NOT INDEXED, vt0 WHERE (((((vt0.c0) BETWEEN ('-244857887') AND (-1204929059))) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))) AND (((rt0.c1)%(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((NOT (t0.c0)))>(CAST(t0.c1 AS TEXT)))) ORDER BY CASE t0.c1 COLLATE NOCASE  WHEN t0.c1 THEN CAST(t0.c1 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0)))>(CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE t0.c1 COLLATE NOCASE  WHEN t0.c1 THEN CAST(t0.c1 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((NOT (t0.c0)))>(CAST(t0.c1 AS TEXT)))) ORDER BY CASE t0.c1 COLLATE NOCASE  WHEN t0.c1 THEN CAST(t0.c1 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0)))>(CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE t0.c1 COLLATE NOCASE  WHEN t0.c1 THEN CAST(t0.c1 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((NOT (t0.c0)))>(CAST(t0.c1 AS TEXT)))) ORDER BY CASE t0.c1 COLLATE NOCASE  WHEN t0.c1 THEN CAST(t0.c1 AS NUMERIC) END;
SELECT COUNT(*) FROM t0, rt0 WHERE ((CASE WHEN rt0.c2 THEN t0.c1 END IN ())) ORDER BY CASE (x'' IN ())  WHEN t0.c2 COLLATE BINARY THEN ((t0.c2) ISNULL) ELSE ((((t0.c0)OR(t0.c1)))OR(t0.c0)) END ASC  NULLS FIRST, HEX(((((rt0.c1)AND(t0.c1)))OR(rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN t0.c1 END IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE (x'' IN ())  WHEN t0.c2 COLLATE BINARY THEN ((t0.c2) ISNULL) ELSE ((((t0.c0)OR(t0.c1)))OR(t0.c0)) END ASC  NULLS FIRST, HEX(((((rt0.c1)AND(t0.c1)))OR(rt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((CASE WHEN rt0.c2 THEN t0.c1 END IN ())) ORDER BY CASE (x'' IN ())  WHEN t0.c2 COLLATE BINARY THEN ((t0.c2) ISNULL) ELSE ((((t0.c0)OR(t0.c1)))OR(t0.c0)) END ASC  NULLS FIRST, HEX(((((rt0.c1)AND(t0.c1)))OR(rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN t0.c1 END IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE (x'' IN ())  WHEN t0.c2 COLLATE BINARY THEN ((t0.c2) ISNULL) ELSE ((((t0.c0)OR(t0.c1)))OR(t0.c0)) END ASC  NULLS FIRST, HEX(((((rt0.c1)AND(t0.c1)))OR(rt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((CASE WHEN rt0.c2 THEN t0.c1 END IN ())) ORDER BY CASE (x'' IN ())  WHEN t0.c2 COLLATE BINARY THEN ((t0.c2) ISNULL) ELSE ((((t0.c0)OR(t0.c1)))OR(t0.c0)) END ASC  NULLS FIRST, HEX(((((rt0.c1)AND(t0.c1)))OR(rt0.c0)))  NULLS LAST;
SELECT ALL * FROM t0 INDEXED BY i79 WHERE (((((t0.c0)%(t0.c2))) IS TRUE)) ORDER BY ((((LIKELIHOOD(DISTINCT t0.c1, 0.7537030853837183))OR(ABS(t0.c0))))AND(((t0.c1)|(t0.c2)))) ASC, CASE (t0.c1 IN ('0.1856451955862608'))  WHEN t0.c1 COLLATE BINARY THEN t0.c2 COLLATE BINARY ELSE 'o* V N' END DESC, (((((t0.c2, t0.c2, t0.c1))>=((t0.c0, t0.c0, t0.c1))))>(((t0.c1)IS(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)%(t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0 INDEXED BY i79 ORDER BY ((((LIKELIHOOD(DISTINCT t0.c1, 0.7537030853837183))OR(ABS(t0.c0))))AND(((t0.c1)|(t0.c2)))) ASC, CASE (t0.c1 IN ('0.1856451955862608'))  WHEN t0.c1 COLLATE BINARY THEN t0.c2 COLLATE BINARY ELSE 'o* V N' END DESC, (((((t0.c2, t0.c2, t0.c1))>=((t0.c0, t0.c0, t0.c1))))>(((t0.c1)IS(t0.c2))))  NULLS LAST);
SELECT ALL * FROM t0 INDEXED BY i79 WHERE (((((t0.c0)%(t0.c2))) IS TRUE)) ORDER BY ((((LIKELIHOOD(DISTINCT t0.c1, 0.7537030853837183))OR(ABS(t0.c0))))AND(((t0.c1)|(t0.c2)))) ASC, CASE (t0.c1 IN ('0.1856451955862608'))  WHEN t0.c1 COLLATE BINARY THEN t0.c2 COLLATE BINARY ELSE 'o* V N' END DESC, (((((t0.c2, t0.c2, t0.c1))>=((t0.c0, t0.c0, t0.c1))))>(((t0.c1)IS(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)%(t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0 INDEXED BY i79 ORDER BY ((((LIKELIHOOD(DISTINCT t0.c1, 0.7537030853837183))OR(ABS(t0.c0))))AND(((t0.c1)|(t0.c2)))) ASC, CASE (t0.c1 IN ('0.1856451955862608'))  WHEN t0.c1 COLLATE BINARY THEN t0.c2 COLLATE BINARY ELSE 'o* V N' END DESC, (((((t0.c2, t0.c2, t0.c1))>=((t0.c0, t0.c0, t0.c1))))>(((t0.c1)IS(t0.c2))))  NULLS LAST);
SELECT ALL * FROM t0 INDEXED BY i79 WHERE (((((t0.c0)%(t0.c2))) IS TRUE)) ORDER BY ((((LIKELIHOOD(DISTINCT t0.c1, 0.7537030853837183))OR(ABS(t0.c0))))AND(((t0.c1)|(t0.c2)))) ASC, CASE (t0.c1 IN ('0.1856451955862608'))  WHEN t0.c1 COLLATE BINARY THEN t0.c2 COLLATE BINARY ELSE 'o* V N' END DESC, (((((t0.c2, t0.c2, t0.c1))>=((t0.c0, t0.c0, t0.c1))))>(((t0.c1)IS(t0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((~ (t0.c1))) ORDER BY CAST('-725910399' AS BLOB) ASC, ((CAST(t0.c1 AS INTEGER)) NOT BETWEEN ((((t0.c0))<((t0.c2)))) AND (((((t0.c2)AND(t0.c2)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (t0.c1))) IS TRUE)  as count FROM t0 ORDER BY CAST('-725910399' AS BLOB) ASC, ((CAST(t0.c1 AS INTEGER)) NOT BETWEEN ((((t0.c0))<((t0.c2)))) AND (((((t0.c2)AND(t0.c2)))OR(t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE ((~ (t0.c1))) ORDER BY CAST('-725910399' AS BLOB) ASC, ((CAST(t0.c1 AS INTEGER)) NOT BETWEEN ((((t0.c0))<((t0.c2)))) AND (((((t0.c2)AND(t0.c2)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (t0.c1))) IS TRUE)  as count FROM t0 ORDER BY CAST('-725910399' AS BLOB) ASC, ((CAST(t0.c1 AS INTEGER)) NOT BETWEEN ((((t0.c0))<((t0.c2)))) AND (((((t0.c2)AND(t0.c2)))OR(t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE ((~ (t0.c1))) ORDER BY CAST('-725910399' AS BLOB) ASC, ((CAST(t0.c1 AS INTEGER)) NOT BETWEEN ((((t0.c0))<((t0.c2)))) AND (((((t0.c2)AND(t0.c2)))OR(t0.c0))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((t0.c0)=(rt0.c0)))LIKE(((((((((((((t0.c0)AND(t0.c2)))OR(x'')))AND(vt0.c0)))OR(t0.c1)))AND(t0.c2)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)=(rt0.c0)))LIKE(((((((((((((t0.c0)AND(t0.c2)))OR(x'')))AND(vt0.c0)))OR(t0.c1)))AND(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((t0.c0)=(rt0.c0)))LIKE(((((((((((((t0.c0)AND(t0.c2)))OR(x'')))AND(vt0.c0)))OR(t0.c1)))AND(t0.c2)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)=(rt0.c0)))LIKE(((((((((((((t0.c0)AND(t0.c2)))OR(x'')))AND(vt0.c0)))OR(t0.c1)))AND(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((t0.c0)=(rt0.c0)))LIKE(((((((((((((t0.c0)AND(t0.c2)))OR(x'')))AND(vt0.c0)))OR(t0.c1)))AND(t0.c2)))OR(t0.c2)))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0)LIKE(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0)LIKE(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0)LIKE(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0)LIKE(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0)LIKE(vt0.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE ((- ((NOT (rt0.c0))))) ORDER BY CAST(NULL AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT (((- ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(NULL AS TEXT) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((- ((NOT (rt0.c0))))) ORDER BY CAST(NULL AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT (((- ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(NULL AS TEXT) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((- ((NOT (rt0.c0))))) ORDER BY CAST(NULL AS TEXT) DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))<=(SQLITE_VERSION()))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), json_extract(x'', vt0.c0), CASE 0.14981922999408404  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((x'', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE)))  NULLS FIRST, CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN 0x44d31635 WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT NULL) WHEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0)GLOB(vt0.c0)) ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))<=(SQLITE_VERSION()))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), json_extract(x'', vt0.c0), CASE 0.14981922999408404  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((x'', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE)))  NULLS FIRST, CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN 0x44d31635 WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT NULL) WHEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0)GLOB(vt0.c0)) ELSE vt0.c0 END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))<=(SQLITE_VERSION()))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), json_extract(x'', vt0.c0), CASE 0.14981922999408404  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((x'', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE)))  NULLS FIRST, CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN 0x44d31635 WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT NULL) WHEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0)GLOB(vt0.c0)) ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))<=(SQLITE_VERSION()))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), json_extract(x'', vt0.c0), CASE 0.14981922999408404  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((x'', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE)))  NULLS FIRST, CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN 0x44d31635 WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT NULL) WHEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0)GLOB(vt0.c0)) ELSE vt0.c0 END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))<=(SQLITE_VERSION()))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), json_extract(x'', vt0.c0), CASE 0.14981922999408404  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((x'', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE)))  NULLS FIRST, CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN 0x44d31635 WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT NULL) WHEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0)GLOB(vt0.c0)) ELSE vt0.c0 END;
SELECT * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (JULIANDAY(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c2 COLLATE BINARY, (+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c2 COLLATE BINARY, (+ (rt0.c2)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (JULIANDAY(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c2 COLLATE BINARY, (+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c2 COLLATE BINARY, (+ (rt0.c2)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (JULIANDAY(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c2 COLLATE BINARY, (+ (rt0.c2))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (((x'')|(((rt0.c2)OR(t0.c1))))) ORDER BY CASE t0.c2 COLLATE RTRIM  WHEN ((vt0.c0)+(t0.c1)) THEN t0.c0 WHEN rt0.c1 THEN CASE WHEN rt0.c2 THEN t0.c1 END WHEN ((t0.c2) ISNULL) THEN (- (t0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')|(((rt0.c2)OR(t0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CASE t0.c2 COLLATE RTRIM  WHEN ((vt0.c0)+(t0.c1)) THEN t0.c0 WHEN rt0.c1 THEN CASE WHEN rt0.c2 THEN t0.c1 END WHEN ((t0.c2) ISNULL) THEN (- (t0.c1)) END DESC);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((x'')|(((rt0.c2)OR(t0.c1))))) ORDER BY CASE t0.c2 COLLATE RTRIM  WHEN ((vt0.c0)+(t0.c1)) THEN t0.c0 WHEN rt0.c1 THEN CASE WHEN rt0.c2 THEN t0.c1 END WHEN ((t0.c2) ISNULL) THEN (- (t0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')|(((rt0.c2)OR(t0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CASE t0.c2 COLLATE RTRIM  WHEN ((vt0.c0)+(t0.c1)) THEN t0.c0 WHEN rt0.c1 THEN CASE WHEN rt0.c2 THEN t0.c1 END WHEN ((t0.c2) ISNULL) THEN (- (t0.c1)) END DESC);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((x'')|(((rt0.c2)OR(t0.c1))))) ORDER BY CASE t0.c2 COLLATE RTRIM  WHEN ((vt0.c0)+(t0.c1)) THEN t0.c0 WHEN rt0.c1 THEN CASE WHEN rt0.c2 THEN t0.c1 END WHEN ((t0.c2) ISNULL) THEN (- (t0.c1)) END DESC;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM t0 WHERE (((TRIM(DISTINCT t0.c2, t0.c0))LIKE('1372615976'))) ORDER BY (((t0.c1)) BETWEEN ((((t0.c0)>(t0.c0)))) AND (((t0.c2 IN (t0.c0))))) ASC, (((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) IN (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT t0.c2, t0.c0))LIKE('1372615976'))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)) BETWEEN ((((t0.c0)>(t0.c0)))) AND (((t0.c2 IN (t0.c0))))) ASC, (((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) IN (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((TRIM(DISTINCT t0.c2, t0.c0))LIKE('1372615976'))) ORDER BY (((t0.c1)) BETWEEN ((((t0.c0)>(t0.c0)))) AND (((t0.c2 IN (t0.c0))))) ASC, (((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) IN (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT t0.c2, t0.c0))LIKE('1372615976'))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)) BETWEEN ((((t0.c0)>(t0.c0)))) AND (((t0.c2 IN (t0.c0))))) ASC, (((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) IN (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((TRIM(DISTINCT t0.c2, t0.c0))LIKE('1372615976'))) ORDER BY (((t0.c1)) BETWEEN ((((t0.c0)>(t0.c0)))) AND (((t0.c2 IN (t0.c0))))) ASC, (((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) IN (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT * FROM t0, vt0, rt0 WHERE (((((((t0.c0)AND(0.572998828209068)))OR(t0.c0)))IS NOT((((vt0.c0))>=((rt0.c0)))))) ORDER BY ((t0.c0) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(0.572998828209068)))OR(t0.c0)))IS NOT((((vt0.c0))>=((rt0.c0)))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((t0.c0) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE (((((((t0.c0)AND(0.572998828209068)))OR(t0.c0)))IS NOT((((vt0.c0))>=((rt0.c0)))))) ORDER BY ((t0.c0) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(0.572998828209068)))OR(t0.c0)))IS NOT((((vt0.c0))>=((rt0.c0)))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((t0.c0) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE (((((((t0.c0)AND(0.572998828209068)))OR(t0.c0)))IS NOT((((vt0.c0))>=((rt0.c0)))))) ORDER BY ((t0.c0) IS FALSE) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((ABS(DISTINCT vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((ABS(DISTINCT vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((ABS(DISTINCT vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON CASE WHEN json_array_length(rt0.c0) THEN CASE WHEN NULL THEN rt0.c0 END END WHERE ('716215054' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('716215054' COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON CASE WHEN json_array_length(rt0.c0) THEN CASE WHEN NULL THEN rt0.c0 END END);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON CASE WHEN json_array_length(rt0.c0) THEN CASE WHEN NULL THEN rt0.c0 END END WHERE ('716215054' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('716215054' COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON CASE WHEN json_array_length(rt0.c0) THEN CASE WHEN NULL THEN rt0.c0 END END);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON CASE WHEN json_array_length(rt0.c0) THEN CASE WHEN NULL THEN rt0.c0 END END WHERE ('716215054' COLLATE NOCASE);
SELECT ALL * FROM vt0 INDEXED BY i79, t0, rt0 WHERE (CAST((+ (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 INDEXED BY i79, t0, rt0);
SELECT ALL * FROM vt0 INDEXED BY i79, t0, rt0 WHERE (CAST((+ (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 INDEXED BY i79, t0, rt0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2 COLLATE NOCASE)!=(t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE NOCASE)!=(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2 COLLATE NOCASE)!=(t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE NOCASE)!=(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2 COLLATE NOCASE)!=(t0.c2 COLLATE BINARY)));
SELECT * FROM t0, vt0 WHERE (INSTR((t0.c2 IN ()), ((vt0.c0)<<(t0.c1))));
SELECT SUM(count) FROM (SELECT ((INSTR((t0.c2 IN ()), ((vt0.c0)<<(t0.c1)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (INSTR((t0.c2 IN ()), ((vt0.c0)<<(t0.c1))));
SELECT SUM(count) FROM (SELECT ((INSTR((t0.c2 IN ()), ((vt0.c0)<<(t0.c1)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (INSTR((t0.c2 IN ()), ((vt0.c0)<<(t0.c1))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c0 AS BLOB)))) ORDER BY CAST('AkjnF' AS BLOB) ASC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))+(CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY CAST('AkjnF' AS BLOB) ASC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))+(CAST(vt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c0 AS BLOB)))) ORDER BY CAST('AkjnF' AS BLOB) ASC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))+(CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY CAST('AkjnF' AS BLOB) ASC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))+(CAST(vt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c0 AS BLOB)))) ORDER BY CAST('AkjnF' AS BLOB) ASC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))+(CAST(vt0.c0 AS NUMERIC)));
SELECT COUNT(*) FROM t0, rt0 NOT INDEXED INNER JOIN vt0 ON x'' WHERE (x'67bc') ORDER BY (((((((((rt0.c0 IN (t0.c2, t0.c1)))AND((rt0.c2 IN (x'c69a')))))AND(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))AND((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'67bc') IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON x'' ORDER BY (((((((((rt0.c0 IN (t0.c2, t0.c1)))AND((rt0.c2 IN (x'c69a')))))AND(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))AND((vt0.c0 IN ()))) DESC);
SELECT COUNT(*) FROM t0, rt0 NOT INDEXED INNER JOIN vt0 ON x'' WHERE (x'67bc') ORDER BY (((((((((rt0.c0 IN (t0.c2, t0.c1)))AND((rt0.c2 IN (x'c69a')))))AND(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))AND((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'67bc') IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON x'' ORDER BY (((((((((rt0.c0 IN (t0.c2, t0.c1)))AND((rt0.c2 IN (x'c69a')))))AND(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))AND((vt0.c0 IN ()))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(x'9d5bb310' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'9d5bb310' AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(x'9d5bb310' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'9d5bb310' AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(x'9d5bb310' AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN (NOT (rt0.c0)) THEN json_extract(rt0.c1, NULL) END) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (rt0.c0)) THEN json_extract(rt0.c1, NULL) END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY t0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN (NOT (rt0.c0)) THEN json_extract(rt0.c1, NULL) END) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (rt0.c0)) THEN json_extract(rt0.c1, NULL) END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY t0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN (NOT (rt0.c0)) THEN json_extract(rt0.c1, NULL) END) ORDER BY t0.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY UNLIKELY(DISTINCT CAST(rt0.c2 AS BLOB)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(DISTINCT CAST(rt0.c2 AS BLOB)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY UNLIKELY(DISTINCT CAST(rt0.c2 AS BLOB)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(DISTINCT CAST(rt0.c2 AS BLOB)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY UNLIKELY(DISTINCT CAST(rt0.c2 AS BLOB)) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c2)-(t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c2)-(t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c2)-(t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c2)-(t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c2)-(t0.c2)) COLLATE BINARY);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (DATETIME(((t0.c1)|(vt0.c0)), ((((t0.c2)OR(vt0.c0)))AND(t0.c1)), CASE t0.c1  WHEN t0.c0 THEN t0.c1 END, CASE WHEN t0.c1 THEN vt0.c0 ELSE t0.c0 END, UNLIKELY(DISTINCT t0.c0), (- (t0.c1)), ((t0.c0)-(t0.c0)))) ORDER BY ((0.9736334992681053)|(CAST(t0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ((DATETIME(((t0.c1)|(vt0.c0)), ((((t0.c2)OR(vt0.c0)))AND(t0.c1)), CASE t0.c1  WHEN t0.c0 THEN t0.c1 END, CASE WHEN t0.c1 THEN vt0.c0 ELSE t0.c0 END, UNLIKELY(DISTINCT t0.c0), (- (t0.c1)), ((t0.c0)-(t0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((0.9736334992681053)|(CAST(t0.c2 AS REAL))));
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (DATETIME(((t0.c1)|(vt0.c0)), ((((t0.c2)OR(vt0.c0)))AND(t0.c1)), CASE t0.c1  WHEN t0.c0 THEN t0.c1 END, CASE WHEN t0.c1 THEN vt0.c0 ELSE t0.c0 END, UNLIKELY(DISTINCT t0.c0), (- (t0.c1)), ((t0.c0)-(t0.c0)))) ORDER BY ((0.9736334992681053)|(CAST(t0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ((DATETIME(((t0.c1)|(vt0.c0)), ((((t0.c2)OR(vt0.c0)))AND(t0.c1)), CASE t0.c1  WHEN t0.c0 THEN t0.c1 END, CASE WHEN t0.c1 THEN vt0.c0 ELSE t0.c0 END, UNLIKELY(DISTINCT t0.c0), (- (t0.c1)), ((t0.c0)-(t0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((0.9736334992681053)|(CAST(t0.c2 AS REAL))));
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (DATETIME(((t0.c1)|(vt0.c0)), ((((t0.c2)OR(vt0.c0)))AND(t0.c1)), CASE t0.c1  WHEN t0.c0 THEN t0.c1 END, CASE WHEN t0.c1 THEN vt0.c0 ELSE t0.c0 END, UNLIKELY(DISTINCT t0.c0), (- (t0.c1)), ((t0.c0)-(t0.c0)))) ORDER BY ((0.9736334992681053)|(CAST(t0.c2 AS REAL)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) NOT NULL))>=(((-1.12995626E8) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))>=(((-1.12995626E8) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) NOT NULL))>=(((-1.12995626E8) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))>=(((-1.12995626E8) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) NOT NULL))>=(((-1.12995626E8) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) ISNULL)  WHEN NULL THEN ((((rt0.c0)AND(rt0.c1)))OR(x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) ISNULL)  WHEN NULL THEN ((((rt0.c0)AND(rt0.c1)))OR(x'')) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) ISNULL)  WHEN NULL THEN ((((rt0.c0)AND(rt0.c1)))OR(x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) ISNULL)  WHEN NULL THEN ((((rt0.c0)AND(rt0.c1)))OR(x'')) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) ISNULL)  WHEN NULL THEN ((((rt0.c0)AND(rt0.c1)))OR(x'')) END);
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON (- (((rt0.c2)<=(0Xffffffffabf42ce4)))) WHERE (json_quote(((((rt0.c1)OR(t0.c1)))AND(t0.c1)))) ORDER BY CAST(ABS(rt0.c2) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_quote(((((rt0.c1)OR(t0.c1)))AND(t0.c1)))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON (- (((rt0.c2)<=(0Xffffffffabf42ce4)))) ORDER BY CAST(ABS(rt0.c2) AS BLOB)  NULLS FIRST);
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON (- (((rt0.c2)<=(0Xffffffffabf42ce4)))) WHERE (json_quote(((((rt0.c1)OR(t0.c1)))AND(t0.c1)))) ORDER BY CAST(ABS(rt0.c2) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_quote(((((rt0.c1)OR(t0.c1)))AND(t0.c1)))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON (- (((rt0.c2)<=(0Xffffffffabf42ce4)))) ORDER BY CAST(ABS(rt0.c2) AS BLOB)  NULLS FIRST);
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON (- (((rt0.c2)<=(0Xffffffffabf42ce4)))) WHERE (json_quote(((((rt0.c1)OR(t0.c1)))AND(t0.c1)))) ORDER BY CAST(ABS(rt0.c2) AS BLOB)  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (((~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (((~ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (((~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (((~ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (((~ (vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c1))<>((rt0.c1, rt0.c0, vt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c0, rt0.c1))<>((rt0.c1, rt0.c0, vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c1))<>((rt0.c1, rt0.c0, vt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c0, rt0.c1))<>((rt0.c1, rt0.c0, vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c1))<>((rt0.c1, rt0.c0, vt0.c0)))) IS TRUE));
SELECT ALL * FROM t0, vt0 WHERE (((LIKELIHOOD(t0.c0, 0.25941323709211583)) NOTNULL)) ORDER BY (((t0.c2 IN (t0.c2))) NOT BETWEEN (t0.c2) AND (CAST(x'e2d8' AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(t0.c0, 0.25941323709211583)) NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c2 IN (t0.c2))) NOT BETWEEN (t0.c2) AND (CAST(x'e2d8' AS NUMERIC))) DESC);
SELECT ALL * FROM t0, vt0 WHERE (((LIKELIHOOD(t0.c0, 0.25941323709211583)) NOTNULL)) ORDER BY (((t0.c2 IN (t0.c2))) NOT BETWEEN (t0.c2) AND (CAST(x'e2d8' AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(t0.c0, 0.25941323709211583)) NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c2 IN (t0.c2))) NOT BETWEEN (t0.c2) AND (CAST(x'e2d8' AS NUMERIC))) DESC);
SELECT ALL * FROM t0, vt0 WHERE (((LIKELIHOOD(t0.c0, 0.25941323709211583)) NOTNULL)) ORDER BY (((t0.c2 IN (t0.c2))) NOT BETWEEN (t0.c2) AND (CAST(x'e2d8' AS NUMERIC))) DESC;
SELECT * FROM vt0, rt0 WHERE (((rt0.c1)<=(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<=(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1)<=(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<=(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1)<=(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, t0 WHERE ((CAST(t0.c2 AS REAL) IN ())) ORDER BY ((t0.c2 COLLATE BINARY) NOTNULL)  NULLS LAST, (((vt0.c0)>=(vt0.c0)) IN ()), ((((((((CAST(vt0.c0 AS REAL))AND('FwP~''')))OR(((x'')IS NOT(vt0.c0)))))AND(((t0.c2)/(vt0.c0)))))AND(t0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c2 AS REAL) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c2 COLLATE BINARY) NOTNULL)  NULLS LAST, (((vt0.c0)>=(vt0.c0)) IN ()), ((((((((CAST(vt0.c0 AS REAL))AND('FwP~''')))OR(((x'')IS NOT(vt0.c0)))))AND(((t0.c2)/(vt0.c0)))))AND(t0.c2 COLLATE RTRIM)));
SELECT ALL * FROM vt0, t0 WHERE ((CAST(t0.c2 AS REAL) IN ())) ORDER BY ((t0.c2 COLLATE BINARY) NOTNULL)  NULLS LAST, (((vt0.c0)>=(vt0.c0)) IN ()), ((((((((CAST(vt0.c0 AS REAL))AND('FwP~''')))OR(((x'')IS NOT(vt0.c0)))))AND(((t0.c2)/(vt0.c0)))))AND(t0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c2 AS REAL) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c2 COLLATE BINARY) NOTNULL)  NULLS LAST, (((vt0.c0)>=(vt0.c0)) IN ()), ((((((((CAST(vt0.c0 AS REAL))AND('FwP~''')))OR(((x'')IS NOT(vt0.c0)))))AND(((t0.c2)/(vt0.c0)))))AND(t0.c2 COLLATE RTRIM)));
SELECT ALL * FROM vt0, t0 WHERE ((CAST(t0.c2 AS REAL) IN ())) ORDER BY ((t0.c2 COLLATE BINARY) NOTNULL)  NULLS LAST, (((vt0.c0)>=(vt0.c0)) IN ()), ((((((((CAST(vt0.c0 AS REAL))AND('FwP~''')))OR(((x'')IS NOT(vt0.c0)))))AND(((t0.c2)/(vt0.c0)))))AND(t0.c2 COLLATE RTRIM));
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((((- (rt0.c1)))<>((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))!=((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((((- (rt0.c1)))<>((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))!=((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((((- (rt0.c1)))<>((+ (rt0.c0)))));
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1 IN (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1 IN (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1 IN (rt0.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)||(t0.c0))))) ORDER BY ((CAST(t0.c0 AS BLOB))>(t0.c2)), (((CASE WHEN t0.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 WHEN t0.c1 THEN x'80df' END, CAST(t0.c0 AS REAL), ((((vt0.c0)AND(NULL)))OR(t0.c1)), ((((-1.62451217E8)OR(t0.c2)))OR(vt0.c0)), t0.c2))!=((vt0.c0, t0.c0, CAST(t0.c2 AS INTEGER), NULL, t0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)||(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c0 AS BLOB))>(t0.c2)), (((CASE WHEN t0.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 WHEN t0.c1 THEN x'80df' END, CAST(t0.c0 AS REAL), ((((vt0.c0)AND(NULL)))OR(t0.c1)), ((((-1.62451217E8)OR(t0.c2)))OR(vt0.c0)), t0.c2))<>((vt0.c0, t0.c0, CAST(t0.c2 AS INTEGER), NULL, t0.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)||(t0.c0))))) ORDER BY ((CAST(t0.c0 AS BLOB))>(t0.c2)), (((CASE WHEN t0.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 WHEN t0.c1 THEN x'80df' END, CAST(t0.c0 AS REAL), ((((vt0.c0)AND(NULL)))OR(t0.c1)), ((((-1.62451217E8)OR(t0.c2)))OR(vt0.c0)), t0.c2))!=((vt0.c0, t0.c0, CAST(t0.c2 AS INTEGER), NULL, t0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)||(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c0 AS BLOB))>(t0.c2)), (((CASE WHEN t0.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 WHEN t0.c1 THEN x'80df' END, CAST(t0.c0 AS REAL), ((((vt0.c0)AND(NULL)))OR(t0.c1)), ((((-1.62451217E8)OR(t0.c2)))OR(vt0.c0)), t0.c2))<>((vt0.c0, t0.c0, CAST(t0.c2 AS INTEGER), NULL, t0.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)||(t0.c0))))) ORDER BY ((CAST(t0.c0 AS BLOB))>(t0.c2)), (((CASE WHEN t0.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 WHEN t0.c1 THEN x'80df' END, CAST(t0.c0 AS REAL), ((((vt0.c0)AND(NULL)))OR(t0.c1)), ((((-1.62451217E8)OR(t0.c2)))OR(vt0.c0)), t0.c2))!=((vt0.c0, t0.c0, CAST(t0.c2 AS INTEGER), NULL, t0.c2)))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE));
SELECT * FROM t0 WHERE ((((t0.c2, t0.c1, t0.c1)) NOT BETWEEN ((t0.c2, ((t0.c1)|(t0.c1)), (((t0.c2, x'cb97d7cc953d', t0.c2, t0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c0, NULL, t0.c0, t0.c2)) AND ((t0.c0, t0.c2, t0.c2, t0.c0, t0.c0))))) AND (((NULL IN ()), TIME(t0.c2, t0.c2, t0.c1), t0.c0 COLLATE BINARY)))) ORDER BY (((((((('-1319636710')OR((((t0.c1))!=((t0.c2))))))OR(t0.c2 COLLATE NOCASE)))OR(x'')))OR(CAST(t0.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, t0.c1, t0.c1)) NOT BETWEEN ((t0.c2, ((t0.c1)|(t0.c1)), (((t0.c2, x'cb97d7cc953d', t0.c2, t0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c0, NULL, t0.c0, t0.c2)) AND ((t0.c0, t0.c2, t0.c2, t0.c0, t0.c0))))) AND (((NULL IN ()), TIME(t0.c2, t0.c2, t0.c1), t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0 ORDER BY (((((((('-1319636710')OR((((t0.c1))<>((t0.c2))))))OR(t0.c2 COLLATE NOCASE)))OR(x'')))OR(CAST(t0.c0 AS REAL))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c2, t0.c1, t0.c1)) NOT BETWEEN ((t0.c2, ((t0.c1)|(t0.c1)), (((t0.c2, x'cb97d7cc953d', t0.c2, t0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c0, NULL, t0.c0, t0.c2)) AND ((t0.c0, t0.c2, t0.c2, t0.c0, t0.c0))))) AND (((NULL IN ()), TIME(t0.c2, t0.c2, t0.c1), t0.c0 COLLATE BINARY)))) ORDER BY (((((((('-1319636710')OR((((t0.c1))!=((t0.c2))))))OR(t0.c2 COLLATE NOCASE)))OR(x'')))OR(CAST(t0.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, t0.c1, t0.c1)) NOT BETWEEN ((t0.c2, ((t0.c1)|(t0.c1)), (((t0.c2, x'cb97d7cc953d', t0.c2, t0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c0, NULL, t0.c0, t0.c2)) AND ((t0.c0, t0.c2, t0.c2, t0.c0, t0.c0))))) AND (((NULL IN ()), TIME(t0.c2, t0.c2, t0.c1), t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0 ORDER BY (((((((('-1319636710')OR((((t0.c1))<>((t0.c2))))))OR(t0.c2 COLLATE NOCASE)))OR(x'')))OR(CAST(t0.c0 AS REAL))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c2, t0.c1, t0.c1)) NOT BETWEEN ((t0.c2, ((t0.c1)|(t0.c1)), (((t0.c2, x'cb97d7cc953d', t0.c2, t0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c0, NULL, t0.c0, t0.c2)) AND ((t0.c0, t0.c2, t0.c2, t0.c0, t0.c0))))) AND (((NULL IN ()), TIME(t0.c2, t0.c2, t0.c1), t0.c0 COLLATE BINARY)))) ORDER BY (((((((('-1319636710')OR((((t0.c1))!=((t0.c2))))))OR(t0.c2 COLLATE NOCASE)))OR(x'')))OR(CAST(t0.c0 AS REAL))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END) IS FALSE)) ORDER BY ((json('')) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((json('')) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END) IS FALSE)) ORDER BY ((json('')) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((json('')) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((((((vt0.c0)OR(t0.c1)))OR(t0.c2)) IN ())) ORDER BY (((((((('48698117')OR(t0.c0 COLLATE BINARY)))OR((+ (t0.c2)))))OR(t0.c1 COLLATE NOCASE)))OR(((t0.c1) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(t0.c1)))OR(t0.c2)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((('48698117')OR(t0.c0 COLLATE BINARY)))OR((+ (t0.c2)))))OR(t0.c1 COLLATE NOCASE)))OR(((t0.c1) NOT NULL)))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ((((((vt0.c0)OR(t0.c1)))OR(t0.c2)) IN ())) ORDER BY (((((((('48698117')OR(t0.c0 COLLATE BINARY)))OR((+ (t0.c2)))))OR(t0.c1 COLLATE NOCASE)))OR(((t0.c1) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(t0.c1)))OR(t0.c2)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((('48698117')OR(t0.c0 COLLATE BINARY)))OR((+ (t0.c2)))))OR(t0.c1 COLLATE NOCASE)))OR(((t0.c1) NOT NULL)))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ((((((vt0.c0)OR(t0.c1)))OR(t0.c2)) IN ())) ORDER BY (((((((('48698117')OR(t0.c0 COLLATE BINARY)))OR((+ (t0.c2)))))OR(t0.c1 COLLATE NOCASE)))OR(((t0.c1) NOT NULL)))  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (ABS(DISTINCT (- (rt0.c0)))) ORDER BY (rt0.c1 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (- (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c1 COLLATE RTRIM IN ()));
SELECT * FROM vt0, rt0 WHERE (ABS(DISTINCT (- (rt0.c0)))) ORDER BY (rt0.c1 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (- (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c1 COLLATE RTRIM IN ()));
SELECT * FROM vt0, rt0 WHERE (ABS(DISTINCT (- (rt0.c0)))) ORDER BY (rt0.c1 COLLATE RTRIM IN ());
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY ((LAST_INSERT_ROWID())>(((vt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY ((LAST_INSERT_ROWID())>(((vt0.c0) ISNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY ((LAST_INSERT_ROWID())>(((vt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY ((LAST_INSERT_ROWID())>(((vt0.c0) ISNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY ((LAST_INSERT_ROWID())>(((vt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON '-1171923099' RIGHT OUTER JOIN rt0 ON ((((t0.c1) NOTNULL))|(json_object(vt0.c0, t0.c1, t0.c2, rt0.c1, t0.c1, rt0.c0))) WHERE (((t0.c2) BETWEEN (t0.c0) AND (rt0.c0)) COLLATE RTRIM) ORDER BY CAST(((((vt0.c0)AND(t0.c1)))AND(rt0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) BETWEEN (t0.c0) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON '-1171923099' RIGHT OUTER JOIN rt0 ON ((((t0.c1) NOTNULL))|(json_object(vt0.c0, t0.c1, t0.c2, rt0.c1, t0.c1, rt0.c0))) ORDER BY CAST(((((vt0.c0)AND(t0.c1)))AND(rt0.c1)) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON '-1171923099' RIGHT OUTER JOIN rt0 ON ((((t0.c1) NOTNULL))|(json_object(vt0.c0, t0.c1, t0.c2, rt0.c1, t0.c1, rt0.c0))) WHERE (((t0.c2) BETWEEN (t0.c0) AND (rt0.c0)) COLLATE RTRIM) ORDER BY CAST(((((vt0.c0)AND(t0.c1)))AND(rt0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) BETWEEN (t0.c0) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON '-1171923099' RIGHT OUTER JOIN rt0 ON ((((t0.c1) NOTNULL))|(json_object(vt0.c0, t0.c1, t0.c2, rt0.c1, t0.c1, rt0.c0))) ORDER BY CAST(((((vt0.c0)AND(t0.c1)))AND(rt0.c1)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (CASE WHEN CAST(t0.c0 AS BLOB) THEN ((t0.c2)>=(0.060807019623164815)) WHEN SQLITE_VERSION() THEN t0.c2 WHEN ((t0.c2)GLOB(t0.c2)) THEN ((t0.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS BLOB) THEN ((t0.c2)>=(0.060807019623164815)) WHEN SQLITE_VERSION() THEN t0.c2 WHEN ((t0.c2)GLOB(t0.c2)) THEN ((t0.c1) IS TRUE) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE WHEN CAST(t0.c0 AS BLOB) THEN ((t0.c2)>=(0.060807019623164815)) WHEN SQLITE_VERSION() THEN t0.c2 WHEN ((t0.c2)GLOB(t0.c2)) THEN ((t0.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS BLOB) THEN ((t0.c2)>=(0.060807019623164815)) WHEN SQLITE_VERSION() THEN t0.c2 WHEN ((t0.c2)GLOB(t0.c2)) THEN ((t0.c1) IS TRUE) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE WHEN CAST(t0.c0 AS BLOB) THEN ((t0.c2)>=(0.060807019623164815)) WHEN SQLITE_VERSION() THEN t0.c2 WHEN ((t0.c2)GLOB(t0.c2)) THEN ((t0.c1) IS TRUE) END);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) BETWEEN (CAST(t0.c1 AS REAL)) AND ((- (t0.c0))))) ORDER BY (((t0.c1)) BETWEEN ((CASE WHEN t0.c0 THEN '&eEn1T遹N' WHEN t0.c1 THEN '' WHEN -112995626 THEN t0.c2 ELSE t0.c0 END)) AND ((((-1.12995626E8)<(t0.c1))))) ASC, (((NOT (t0.c1)))/(-55517728));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (CAST(t0.c1 AS REAL)) AND ((- (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)) BETWEEN ((CASE WHEN t0.c0 THEN '&eEn1T遹N' WHEN t0.c1 THEN '' WHEN -112995626 THEN t0.c2 ELSE t0.c0 END)) AND ((((-1.12995626E8)<(t0.c1))))) ASC, (((NOT (t0.c1)))/(-55517728)));
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) BETWEEN (CAST(t0.c1 AS REAL)) AND ((- (t0.c0))))) ORDER BY (((t0.c1)) BETWEEN ((CASE WHEN t0.c0 THEN '&eEn1T遹N' WHEN t0.c1 THEN '' WHEN -112995626 THEN t0.c2 ELSE t0.c0 END)) AND ((((-1.12995626E8)<(t0.c1))))) ASC, (((NOT (t0.c1)))/(-55517728));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (CAST(t0.c1 AS REAL)) AND ((- (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)) BETWEEN ((CASE WHEN t0.c0 THEN '&eEn1T遹N' WHEN t0.c1 THEN '' WHEN -112995626 THEN t0.c2 ELSE t0.c0 END)) AND ((((-1.12995626E8)<(t0.c1))))) ASC, (((NOT (t0.c1)))/(-55517728)));
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) BETWEEN (CAST(t0.c1 AS REAL)) AND ((- (t0.c0))))) ORDER BY (((t0.c1)) BETWEEN ((CASE WHEN t0.c0 THEN '&eEn1T遹N' WHEN t0.c1 THEN '' WHEN -112995626 THEN t0.c2 ELSE t0.c0 END)) AND ((((-1.12995626E8)<(t0.c1))))) ASC, (((NOT (t0.c1)))/(-55517728));
SELECT * FROM t0 WHERE (NULLIF(CAST(t0.c1 AS TEXT), NULL));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CAST(t0.c1 AS TEXT), NULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULLIF(CAST(t0.c1 AS TEXT), NULL));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CAST(t0.c1 AS TEXT), NULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULLIF(CAST(t0.c1 AS TEXT), NULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULLIF(((vt0.c0) BETWEEN (x'232e') AND (rt0.c2)), CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt0.c0) BETWEEN (x'232e') AND (rt0.c2)), CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULLIF(((vt0.c0) BETWEEN (x'232e') AND (rt0.c2)), CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt0.c0) BETWEEN (x'232e') AND (rt0.c2)), CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULLIF(((vt0.c0) BETWEEN (x'232e') AND (rt0.c2)), CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END));
SELECT * FROM vt0, t0, rt0 WHERE (CASE WHEN (NOT (rt0.c2)) THEN CAST(t0.c0 AS TEXT) WHEN (rt0.c2 IN (rt0.c2)) THEN rt0.c1 WHEN ((0.7371774772739216)-(rt0.c1)) THEN ((t0.c1)GLOB(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt0.c2)) THEN CAST(t0.c0 AS TEXT) WHEN (rt0.c2 IN (rt0.c2)) THEN rt0.c1 WHEN ((0.7371774772739216)-(rt0.c1)) THEN ((t0.c1)GLOB(rt0.c2)) END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (CASE WHEN (NOT (rt0.c2)) THEN CAST(t0.c0 AS TEXT) WHEN (rt0.c2 IN (rt0.c2)) THEN rt0.c1 WHEN ((0.7371774772739216)-(rt0.c1)) THEN ((t0.c1)GLOB(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt0.c2)) THEN CAST(t0.c0 AS TEXT) WHEN (rt0.c2 IN (rt0.c2)) THEN rt0.c1 WHEN ((0.7371774772739216)-(rt0.c1)) THEN ((t0.c1)GLOB(rt0.c2)) END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (CASE WHEN (NOT (rt0.c2)) THEN CAST(t0.c0 AS TEXT) WHEN (rt0.c2 IN (rt0.c2)) THEN rt0.c1 WHEN ((0.7371774772739216)-(rt0.c1)) THEN ((t0.c1)GLOB(rt0.c2)) END);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)IS NOT(t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM)IS NOT(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)IS NOT(t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM)IS NOT(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)IS NOT(t0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE ((rt0.c1)*(t0.c0))  WHEN (~ (rt0.c1)) THEN ((t0.c1)||(t0.c0)) END) ORDER BY CAST(DATETIME(rt0.c2, t0.c2, t0.c0) AS REAL), CASE WHEN vt0.c0 THEN rt0.c0 END COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)*(t0.c0))  WHEN (~ (rt0.c1)) THEN ((t0.c1)||(t0.c0)) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(DATETIME(rt0.c2, t0.c2, t0.c0) AS REAL), CASE WHEN vt0.c0 THEN rt0.c0 END COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE ((rt0.c1)*(t0.c0))  WHEN (~ (rt0.c1)) THEN ((t0.c1)||(t0.c0)) END) ORDER BY CAST(DATETIME(rt0.c2, t0.c2, t0.c0) AS REAL), CASE WHEN vt0.c0 THEN rt0.c0 END COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)*(t0.c0))  WHEN (~ (rt0.c1)) THEN ((t0.c1)||(t0.c0)) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(DATETIME(rt0.c2, t0.c2, t0.c0) AS REAL), CASE WHEN vt0.c0 THEN rt0.c0 END COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE ((rt0.c1)*(t0.c0))  WHEN (~ (rt0.c1)) THEN ((t0.c1)||(t0.c0)) END) ORDER BY CAST(DATETIME(rt0.c2, t0.c2, t0.c0) AS REAL), CASE WHEN vt0.c0 THEN rt0.c0 END COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN t0 ON CAST(rt0.c0 AS BLOB) WHERE ((((t0.c2 IN ()))||(JULIANDAY(rt0.c1, rt0.c2, rt0.c0)))) ORDER BY (((rt0.c1 IN ())) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ()))||(JULIANDAY(rt0.c1, rt0.c2, rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON CAST(rt0.c0 AS BLOB) ORDER BY (((rt0.c1 IN ())) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN t0 ON CAST(rt0.c0 AS BLOB) WHERE ((((t0.c2 IN ()))||(JULIANDAY(rt0.c1, rt0.c2, rt0.c0)))) ORDER BY (((rt0.c1 IN ())) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ()))||(JULIANDAY(rt0.c1, rt0.c2, rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON CAST(rt0.c0 AS BLOB) ORDER BY (((rt0.c1 IN ())) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN t0 ON CAST(rt0.c0 AS BLOB) WHERE ((((t0.c2 IN ()))||(JULIANDAY(rt0.c1, rt0.c2, rt0.c0)))) ORDER BY (((rt0.c1 IN ())) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((((((((vt0.c0)OR(vt0.c0)))OR(-2.073835899E9)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) BETWEEN (NULL COLLATE NOCASE) AND (((((vt0.c0)AND(vt0.c0)))OR(x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0)OR(vt0.c0)))OR(-2.073835899E9)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) BETWEEN (NULL COLLATE NOCASE) AND (((((vt0.c0)AND(vt0.c0)))OR(x'')))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((((((((vt0.c0)OR(vt0.c0)))OR(-2.073835899E9)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) BETWEEN (NULL COLLATE NOCASE) AND (((((vt0.c0)AND(vt0.c0)))OR(x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0)OR(vt0.c0)))OR(-2.073835899E9)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) BETWEEN (NULL COLLATE NOCASE) AND (((((vt0.c0)AND(vt0.c0)))OR(x'')))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((((((((vt0.c0)OR(vt0.c0)))OR(-2.073835899E9)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) BETWEEN (NULL COLLATE NOCASE) AND (((((vt0.c0)AND(vt0.c0)))OR(x'')))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((UNLIKELY(vt0.c0)))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((UPPER(DISTINCT vt0.c0)) NOT NULL) DESC, (+ (((vt0.c0)+(vt0.c0)))) DESC, ((((vt0.c0) IS TRUE))AND(((((vt0.c0)OR(NULL)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((UNLIKELY(vt0.c0)))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((UPPER(DISTINCT vt0.c0)) NOT NULL) DESC, (+ (((vt0.c0)+(vt0.c0)))) DESC, ((((vt0.c0) IS TRUE))AND(((((vt0.c0)OR(NULL)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((UNLIKELY(vt0.c0)))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((UPPER(DISTINCT vt0.c0)) NOT NULL) DESC, (+ (((vt0.c0)+(vt0.c0)))) DESC, ((((vt0.c0) IS TRUE))AND(((((vt0.c0)OR(NULL)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((UNLIKELY(vt0.c0)))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((UPPER(DISTINCT vt0.c0)) NOT NULL) DESC, (+ (((vt0.c0)+(vt0.c0)))) DESC, ((((vt0.c0) IS TRUE))AND(((((vt0.c0)OR(NULL)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((UNLIKELY(vt0.c0)))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((UPPER(DISTINCT vt0.c0)) NOT NULL) DESC, (+ (((vt0.c0)+(vt0.c0)))) DESC, ((((vt0.c0) IS TRUE))AND(((((vt0.c0)OR(NULL)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt0, vt0, t0 WHERE ((NOT (((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((NOT (((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((NOT (((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((+ (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((+ (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((+ (rt0.c0))) IS TRUE));
SELECT * FROM rt0 WHERE (json_extract(INSTR(rt0.c0, rt0.c2), json_array(rt0.c1, rt0.c0), (+ (rt0.c1)), rt0.c1 COLLATE RTRIM)) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN '}~g' ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE x'' END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(INSTR(rt0.c0, rt0.c2), json_array(rt0.c1, rt0.c0), (+ (rt0.c1)), rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c2 IN ()) THEN '}~g' ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE x'' END END ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (json_extract(INSTR(rt0.c0, rt0.c2), json_array(rt0.c1, rt0.c0), (+ (rt0.c1)), rt0.c1 COLLATE RTRIM)) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN '}~g' ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE x'' END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(INSTR(rt0.c0, rt0.c2), json_array(rt0.c1, rt0.c0), (+ (rt0.c1)), rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c2 IN ()) THEN '}~g' ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE x'' END END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (vt0.c0);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN t0 WHERE ((rt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN t0 WHERE ((rt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN t0 WHERE ((rt0.c2 IN ()));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (TOTAL_CHANGES());
SELECT ALL * FROM rt0, t0 WHERE (((((((((((t0.c0)*(t0.c1)))OR(((((t0.c2)OR(t0.c2)))OR(t0.c1)))))OR(((t0.c1) ISNULL))))AND((~ (t0.c0)))))OR(CASE t0.c2  WHEN t0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)*(t0.c1)))OR(((((t0.c2)OR(t0.c2)))OR(t0.c1)))))OR(((t0.c1) ISNULL))))AND((~ (t0.c0)))))OR(CASE t0.c2  WHEN t0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((((((t0.c0)*(t0.c1)))OR(((((t0.c2)OR(t0.c2)))OR(t0.c1)))))OR(((t0.c1) ISNULL))))AND((~ (t0.c0)))))OR(CASE t0.c2  WHEN t0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)*(t0.c1)))OR(((((t0.c2)OR(t0.c2)))OR(t0.c1)))))OR(((t0.c1) ISNULL))))AND((~ (t0.c0)))))OR(CASE t0.c2  WHEN t0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((((((t0.c0)*(t0.c1)))OR(((((t0.c2)OR(t0.c2)))OR(t0.c1)))))OR(((t0.c1) ISNULL))))AND((~ (t0.c0)))))OR(CASE t0.c2  WHEN t0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT * FROM vt0 INNER JOIN rt0 ON LTRIM(((t0.c1)/(vt0.c0))) LEFT OUTER JOIN t0 ON NULL WHERE (((((t0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND ('-2049539961')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND ('-2049539961'))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON LTRIM(((t0.c1)/(vt0.c0))) LEFT OUTER JOIN t0 ON NULL);
SELECT * FROM vt0 INNER JOIN rt0 ON LTRIM(((t0.c1)/(vt0.c0))) LEFT OUTER JOIN t0 ON NULL WHERE (((((t0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND ('-2049539961')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND ('-2049539961'))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON LTRIM(((t0.c1)/(vt0.c0))) LEFT OUTER JOIN t0 ON NULL);
SELECT * FROM vt0 INNER JOIN rt0 ON LTRIM(((t0.c1)/(vt0.c0))) LEFT OUTER JOIN t0 ON NULL WHERE (((((t0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND ('-2049539961')));
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((((t0.c2))<=((t0.c2)))) NOT BETWEEN (CAST(t0.c2 AS BLOB)) AND (x''))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))<=((t0.c2)))) NOT BETWEEN (CAST(t0.c2 AS BLOB)) AND (x''))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY t0.c0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((((t0.c2))<=((t0.c2)))) NOT BETWEEN (CAST(t0.c2 AS BLOB)) AND (x''))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))<=((t0.c2)))) NOT BETWEEN (CAST(t0.c2 AS BLOB)) AND (x''))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY t0.c0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((((t0.c2))<=((t0.c2)))) NOT BETWEEN (CAST(t0.c2 AS BLOB)) AND (x''))) ORDER BY t0.c0;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c0) IS FALSE)))) ORDER BY ((((rt0.c1)OR(rt0.c0)))%(((rt0.c2)==(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)OR(rt0.c0)))%(((rt0.c2)==(rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c0) IS FALSE)))) ORDER BY ((((rt0.c1)OR(rt0.c0)))%(((rt0.c2)==(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)OR(rt0.c0)))%(((rt0.c2)==(rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c0) IS FALSE)))) ORDER BY ((((rt0.c1)OR(rt0.c0)))%(((rt0.c2)==(rt0.c1)))) DESC;
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((rt0.c0 IN ()))IS NOT(((vt0.c0)>(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))IS NOT(((vt0.c0)>(t0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((rt0.c0 IN ()))IS NOT(((vt0.c0)>(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))IS NOT(((vt0.c0)>(t0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((rt0.c0 IN ()))IS NOT(((vt0.c0)>(t0.c0)))));
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (CAST((rt0.c1 IN ()) AS INTEGER)) ORDER BY json_patch((((('Sq')OR(rt0.c1)))OR(vt0.c0)), ((0x107cc867) IS FALSE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY json_patch((((('Sq')OR(rt0.c1)))OR(vt0.c0)), ((0X107cc867) IS FALSE))  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (CAST((rt0.c1 IN ()) AS INTEGER)) ORDER BY json_patch((((('Sq')OR(rt0.c1)))OR(vt0.c0)), ((0x107cc867) IS FALSE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY json_patch((((('Sq')OR(rt0.c1)))OR(vt0.c0)), ((0X107cc867) IS FALSE))  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (CAST((rt0.c1 IN ()) AS INTEGER)) ORDER BY json_patch((((('Sq')OR(rt0.c1)))OR(vt0.c0)), ((0x107cc867) IS FALSE))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c2) IS FALSE)))) ORDER BY CASE WHEN ((((((((((((t0.c0)AND(t0.c2)))AND(t0.c1)))AND(t0.c1)))AND(t0.c0)))OR(t0.c1)))AND(t0.c2)) THEN CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c2) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((((((((((t0.c0)AND(t0.c2)))AND(t0.c1)))AND(t0.c1)))AND(t0.c0)))OR(t0.c1)))AND(t0.c2)) THEN CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END END  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c2) IS FALSE)))) ORDER BY CASE WHEN ((((((((((((t0.c0)AND(t0.c2)))AND(t0.c1)))AND(t0.c1)))AND(t0.c0)))OR(t0.c1)))AND(t0.c2)) THEN CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c2) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((((((((((t0.c0)AND(t0.c2)))AND(t0.c1)))AND(t0.c1)))AND(t0.c0)))OR(t0.c1)))AND(t0.c2)) THEN CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END END  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c2) IS FALSE)))) ORDER BY CASE WHEN ((((((((((((t0.c0)AND(t0.c2)))AND(t0.c1)))AND(t0.c1)))AND(t0.c0)))OR(t0.c1)))AND(t0.c2)) THEN CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END END  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END COLLATE BINARY) ORDER BY rt0.c1 ASC, rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC, rt0.c0 ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END COLLATE BINARY) ORDER BY rt0.c1 ASC, rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC, rt0.c0 ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END COLLATE BINARY) ORDER BY rt0.c1 ASC, rt0.c0 ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (819643144);
SELECT SUM(count) FROM (SELECT ALL ((819643144) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (819643144);
SELECT SUM(count) FROM (SELECT ALL ((819643144) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (819643144);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c2 COLLATE NOCASE THEN CAST(t0.c1 AS INTEGER) ELSE (((t0.c1))<>((''))) END FULL OUTER JOIN rt0 ON (+ ((('tKm3Kt娀&')||(rt0.c2)))) WHERE ('-406565824');
SELECT SUM(count) FROM (SELECT (('-406565824') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c2 COLLATE NOCASE THEN CAST(t0.c1 AS INTEGER) ELSE (((t0.c1))<>((''))) END FULL OUTER JOIN rt0 ON (+ ((('tKm3Kt娀&')||(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c2 COLLATE NOCASE THEN CAST(t0.c1 AS INTEGER) ELSE (((t0.c1))<>((''))) END FULL OUTER JOIN rt0 ON (+ ((('tKm3Kt娀&')||(rt0.c2)))) WHERE ('-406565824');
SELECT SUM(count) FROM (SELECT (('-406565824') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c2 COLLATE NOCASE THEN CAST(t0.c1 AS INTEGER) ELSE (((t0.c1))<>((''))) END FULL OUTER JOIN rt0 ON (+ ((('tKm3Kt娀&')||(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c2 COLLATE NOCASE THEN CAST(t0.c1 AS INTEGER) ELSE (((t0.c1))<>((''))) END FULL OUTER JOIN rt0 ON (+ ((('tKm3Kt娀&')||(rt0.c2)))) WHERE ('-406565824');
SELECT ALL * FROM rt0, vt0, t0 WHERE (((MIN(vt0.c0, rt0.c0)) NOT NULL)) ORDER BY (NOT ('-996633277')) ASC, ((0.7464921757948748)<((((vt0.c0))>=((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((MIN(vt0.c0, rt0.c0)) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (NOT ('-996633277')) ASC, ((0.7464921757948748)<((((vt0.c0))>=((rt0.c0))))) DESC);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((MIN(vt0.c0, rt0.c0)) NOT NULL)) ORDER BY (NOT ('-996633277')) ASC, ((0.7464921757948748)<((((vt0.c0))>=((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((MIN(vt0.c0, rt0.c0)) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (NOT ('-996633277')) ASC, ((0.7464921757948748)<((((vt0.c0))>=((rt0.c0))))) DESC);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((MIN(vt0.c0, rt0.c0)) NOT NULL)) ORDER BY (NOT ('-996633277')) ASC, ((0.7464921757948748)<((((vt0.c0))>=((rt0.c0))))) DESC;
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE (CAST(QUOTE(rt0.c2) AS TEXT)) ORDER BY ((((rt0.c2)+(rt0.c1))) BETWEEN ((((('-1319636710')OR(-942725934)))AND(rt0.c1))) AND ((0xffffffff9a7a8b06 IN (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(QUOTE(rt0.c2) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)+(rt0.c1))) BETWEEN ((((('-1319636710')OR(-942725934)))AND(rt0.c1))) AND ((0xffffffff9a7a8b06 IN (rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE (CAST(QUOTE(rt0.c2) AS TEXT)) ORDER BY ((((rt0.c2)+(rt0.c1))) BETWEEN ((((('-1319636710')OR(-942725934)))AND(rt0.c1))) AND ((0xffffffff9a7a8b06 IN (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(QUOTE(rt0.c2) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)+(rt0.c1))) BETWEEN ((((('-1319636710')OR(-942725934)))AND(rt0.c1))) AND ((0xffffffff9a7a8b06 IN (rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE (CAST(QUOTE(rt0.c2) AS TEXT)) ORDER BY ((((rt0.c2)+(rt0.c1))) BETWEEN ((((('-1319636710')OR(-942725934)))AND(rt0.c1))) AND ((0xffffffff9a7a8b06 IN (rt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1 COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1 COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1 COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))>=(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(vt0.c0)))>=(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))>=(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(vt0.c0)))>=(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))>=(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0)|(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)|(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0)|(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)|(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0)|(rt0.c0)) COLLATE BINARY);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND((NOT (vt0.c0)))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS REAL))AND((NOT (vt0.c0)))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND((NOT (vt0.c0)))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS REAL))AND((NOT (vt0.c0)))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND((NOT (vt0.c0)))))AND(vt0.c0)));
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN CAST(rt0.c0 AS TEXT) ELSE rt0.c0 END) ORDER BY ((CAST(rt0.c2 AS INTEGER))&(((rt0.c1)>>(rt0.c2)))) DESC  NULLS LAST, (((CAST(rt0.c1 AS NUMERIC)))<(('952521220')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (vt0.c0)) THEN CAST(rt0.c0 AS TEXT) ELSE rt0.c0 END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c2 AS INTEGER))&(((rt0.c1)>>(rt0.c2)))) DESC  NULLS LAST, (((CAST(rt0.c1 AS NUMERIC)))<(('952521220')))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN CAST(rt0.c0 AS TEXT) ELSE rt0.c0 END) ORDER BY ((CAST(rt0.c2 AS INTEGER))&(((rt0.c1)>>(rt0.c2)))) DESC  NULLS LAST, (((CAST(rt0.c1 AS NUMERIC)))<(('952521220')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (vt0.c0)) THEN CAST(rt0.c0 AS TEXT) ELSE rt0.c0 END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c2 AS INTEGER))&(((rt0.c1)>>(rt0.c2)))) DESC  NULLS LAST, (((CAST(rt0.c1 AS NUMERIC)))<(('952521220')))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN CAST(rt0.c0 AS TEXT) ELSE rt0.c0 END) ORDER BY ((CAST(rt0.c2 AS INTEGER))&(((rt0.c1)>>(rt0.c2)))) DESC  NULLS LAST, (((CAST(rt0.c1 AS NUMERIC)))<(('952521220')))  NULLS FIRST;
SELECT * FROM rt0, vt0, t0 WHERE (CASE WHEN rt0.c0 THEN x'507ab692' ELSE t0.c0 END COLLATE RTRIM) ORDER BY ((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN x'507ab692' ELSE t0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))) NOT NULL)  NULLS FIRST);
SELECT * FROM rt0, vt0, t0 WHERE (CASE WHEN rt0.c0 THEN x'507ab692' ELSE t0.c0 END COLLATE RTRIM) ORDER BY ((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN x'507ab692' ELSE t0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))) NOT NULL)  NULLS FIRST);
SELECT * FROM rt0, vt0, t0 WHERE (CASE WHEN rt0.c0 THEN x'507ab692' ELSE t0.c0 END COLLATE RTRIM) ORDER BY ((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))IS NOT(0.652570472910763)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(vt0.c0)))IS NOT(0.652570472910763))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))IS NOT(0.652570472910763)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(vt0.c0)))IS NOT(0.652570472910763))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))IS NOT(0.652570472910763)));
SELECT COUNT(*) FROM t0 WHERE ((((+ ('0.5792665769224008')))-(((t0.c2)LIKE(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ ('0.5792665769224008')))-(((t0.c2)LIKE(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((+ ('0.5792665769224008')))-(((t0.c2)LIKE(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ ('0.5792665769224008')))-(((t0.c2)LIKE(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((+ ('0.5792665769224008')))-(((t0.c2)LIKE(t0.c0)))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (0.7837011706750676);
SELECT SUM(count) FROM (SELECT ((0.7837011706750676) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (0.7837011706750676);
SELECT SUM(count) FROM (SELECT ((0.7837011706750676) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (0.7837011706750676);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))-((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))-((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))-((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))-((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))-((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) ORDER BY LIKELIHOOD(DISTINCT LIKELY(DISTINCT vt0.c0), 0.7864768638827607) ASC  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END  NULLS FIRST, ((0Xfffffffffa5440e4) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT LIKELY(DISTINCT vt0.c0), 0.7864768638827607) ASC  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END  NULLS FIRST, ((0xfffffffffa5440e4) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) ORDER BY LIKELIHOOD(DISTINCT LIKELY(DISTINCT vt0.c0), 0.7864768638827607) ASC  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END  NULLS FIRST, ((0Xfffffffffa5440e4) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT LIKELY(DISTINCT vt0.c0), 0.7864768638827607) ASC  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END  NULLS FIRST, ((0xfffffffffa5440e4) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) ORDER BY LIKELIHOOD(DISTINCT LIKELY(DISTINCT vt0.c0), 0.7864768638827607) ASC  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END  NULLS FIRST, ((0Xfffffffffa5440e4) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(-886952208)))AND(vt0.c0)))OR(vt0.c0))) ISNULL)) ORDER BY ((NULL) IS TRUE) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))OR(-886952208)))AND(vt0.c0)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) IS TRUE) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(-886952208)))AND(vt0.c0)))OR(vt0.c0))) ISNULL)) ORDER BY ((NULL) IS TRUE) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))OR(-886952208)))AND(vt0.c0)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) IS TRUE) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(-886952208)))AND(vt0.c0)))OR(vt0.c0))) ISNULL)) ORDER BY ((NULL) IS TRUE) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE (TRIM(((rt0.c1) IS TRUE), rt0.c1)) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c1) IS TRUE), rt0.c1)) IS TRUE)  as count FROM t0, rt0 ORDER BY NULL DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (TRIM(((rt0.c1) IS TRUE), rt0.c1)) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c1) IS TRUE), rt0.c1)) IS TRUE)  as count FROM t0, rt0 ORDER BY NULL DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (TRIM(((rt0.c1) IS TRUE), rt0.c1)) ORDER BY NULL DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 END) IS FALSE) WHERE (t0.c2) ORDER BY (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 END) IS FALSE) ORDER BY (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 END) IS FALSE) WHERE (t0.c2) ORDER BY (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 END) IS FALSE) ORDER BY (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 END) IS FALSE) WHERE (t0.c2) ORDER BY (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) IS FALSE) DESC;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((NULL)>>(TRIM(DISTINCT rt0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(TRIM(DISTINCT rt0.c0, rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((NULL)>>(TRIM(DISTINCT rt0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(TRIM(DISTINCT rt0.c0, rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((NULL)>>(TRIM(DISTINCT rt0.c0, rt0.c2))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((t0.c2 IN ())))>=((((t0.c1)GLOB(t0.c1)))))) ORDER BY CAST(((t0.c2)+(vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN ())))>=((((t0.c1)GLOB(t0.c1)))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(((t0.c2)+(vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((t0.c2 IN ())))>=((((t0.c1)GLOB(t0.c1)))))) ORDER BY CAST(((t0.c2)+(vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN ())))>=((((t0.c1)GLOB(t0.c1)))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(((t0.c2)+(vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((t0.c2 IN ())))>=((((t0.c1)GLOB(t0.c1)))))) ORDER BY CAST(((t0.c2)+(vt0.c0)) AS BLOB);
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM);
SELECT * FROM vt0, t0 WHERE (CAST(t0.c0 AS REAL) COLLATE BINARY) ORDER BY ((t0.c2)OR(((vt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c2)OR(((vt0.c0) IS FALSE)))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (CAST(t0.c0 AS REAL) COLLATE BINARY) ORDER BY ((t0.c2)OR(((vt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c2)OR(((vt0.c0) IS FALSE)))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (CAST(t0.c0 AS REAL) COLLATE BINARY) ORDER BY ((t0.c2)OR(((vt0.c0) IS FALSE)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)>=(vt0.c0))  WHEN ((('1130517838', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((x'')+(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)>=(vt0.c0))  WHEN ((('1130517838', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((x'')+(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)>=(vt0.c0))  WHEN ((('1130517838', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((x'')+(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)>=(vt0.c0))  WHEN ((('1130517838', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((x'')+(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)>=(vt0.c0))  WHEN ((('1130517838', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((x'')+(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) ISNULL) END);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON CAST(rt0.c2 COLLATE NOCASE AS REAL) WHERE (((rt0.c1) ISNULL) COLLATE BINARY) ORDER BY CAST(((rt0.c1) BETWEEN (0X52766b69) AND (t0.c1)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CAST(rt0.c2 COLLATE NOCASE AS REAL) ORDER BY CAST(((rt0.c1) BETWEEN (0x52766b69) AND (t0.c1)) AS INTEGER) ASC);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON CAST(rt0.c2 COLLATE NOCASE AS REAL) WHERE (((rt0.c1) ISNULL) COLLATE BINARY) ORDER BY CAST(((rt0.c1) BETWEEN (0X52766b69) AND (t0.c1)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CAST(rt0.c2 COLLATE NOCASE AS REAL) ORDER BY CAST(((rt0.c1) BETWEEN (0x52766b69) AND (t0.c1)) AS INTEGER) ASC);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON CAST(rt0.c2 COLLATE NOCASE AS REAL) WHERE (((rt0.c1) ISNULL) COLLATE BINARY) ORDER BY CAST(((rt0.c1) BETWEEN (0X52766b69) AND (t0.c1)) AS INTEGER) ASC;
SELECT * FROM t0 WHERE (-5.46188834E8) ORDER BY (~ (NULLIF(DISTINCT t0.c2, t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-5.46188834E8) IS TRUE)  as count FROM t0 ORDER BY (~ (NULLIF(DISTINCT t0.c2, t0.c0)))  NULLS LAST);
SELECT * FROM t0 WHERE (-5.46188834E8) ORDER BY (~ (NULLIF(DISTINCT t0.c2, t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-5.46188834E8) IS TRUE)  as count FROM t0 ORDER BY (~ (NULLIF(DISTINCT t0.c2, t0.c0)))  NULLS LAST);
SELECT * FROM t0 WHERE (-5.46188834E8) ORDER BY (~ (NULLIF(DISTINCT t0.c2, t0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c2 IN (rt0.c2))))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c2 IN (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c2 IN (rt0.c2))))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c2 IN (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c2 IN (rt0.c2))))) ORDER BY rt0.c1 ASC;
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (MAX(TYPEOF(DISTINCT t0.c2), (((t0.c2))!=((NULL))), t0.c1 COLLATE BINARY, ((t0.c1)&(t0.c1)))) ORDER BY ((((NOT (t0.c1))))=((((('!_'))=((t0.c0)))))) ASC, HEX((((t0.c0, t0.c0, t0.c2)) NOT BETWEEN ((t0.c2, '-280079409', t0.c2)) AND ((NULL, t0.c2, t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MAX(TYPEOF(DISTINCT t0.c2), (((t0.c2))<>((NULL))), t0.c1 COLLATE BINARY, ((t0.c1)&(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY ((((NOT (t0.c1))))=((((('!_'))==((t0.c0)))))) ASC, HEX((((t0.c0, t0.c0, t0.c2)) NOT BETWEEN ((t0.c2, '-280079409', t0.c2)) AND ((NULL, t0.c2, t0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (MAX(TYPEOF(DISTINCT t0.c2), (((t0.c2))!=((NULL))), t0.c1 COLLATE BINARY, ((t0.c1)&(t0.c1)))) ORDER BY ((((NOT (t0.c1))))=((((('!_'))=((t0.c0)))))) ASC, HEX((((t0.c0, t0.c0, t0.c2)) NOT BETWEEN ((t0.c2, '-280079409', t0.c2)) AND ((NULL, t0.c2, t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MAX(TYPEOF(DISTINCT t0.c2), (((t0.c2))<>((NULL))), t0.c1 COLLATE BINARY, ((t0.c1)&(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY ((((NOT (t0.c1))))=((((('!_'))==((t0.c0)))))) ASC, HEX((((t0.c0, t0.c0, t0.c2)) NOT BETWEEN ((t0.c2, '-280079409', t0.c2)) AND ((NULL, t0.c2, t0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (MAX(TYPEOF(DISTINCT t0.c2), (((t0.c2))!=((NULL))), t0.c1 COLLATE BINARY, ((t0.c1)&(t0.c1)))) ORDER BY ((((NOT (t0.c1))))=((((('!_'))=((t0.c0)))))) ASC, HEX((((t0.c0, t0.c0, t0.c2)) NOT BETWEEN ((t0.c2, '-280079409', t0.c2)) AND ((NULL, t0.c2, t0.c2))))  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE ((((((rt0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1)))) IS FALSE)) ORDER BY t0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1)))) IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c1  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((((((rt0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1)))) IS FALSE)) ORDER BY t0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1)))) IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c1  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((((((rt0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1)))) IS FALSE)) ORDER BY t0.c1  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c0)<=(t0.c2)))%((((rt0.c2))<((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<=(t0.c2)))%((((rt0.c2))<((rt0.c0)))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c0)<=(t0.c2)))%((((rt0.c2))<((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<=(t0.c2)))%((((rt0.c2))<((rt0.c0)))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c0)<=(t0.c2)))%((((rt0.c2))<((rt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((NULL)OR(x'')))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)<<(vt0.c0)))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((((NULL)OR(x'')))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)<<(vt0.c0)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((NULL)OR(x'')))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)<<(vt0.c0)))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((((NULL)OR(x'')))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)<<(vt0.c0)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((NULL)OR(x'')))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)<<(vt0.c0)))))AND((vt0.c0 IN ()))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((NULL)OR(t0.c1)))OR(t0.c1)))IS((('I樢?s')OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(t0.c1)))OR(t0.c1)))IS((('I樢?s')OR(t0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((NULL)OR(t0.c1)))OR(t0.c1)))IS((('I樢?s')OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(t0.c1)))OR(t0.c1)))IS((('I樢?s')OR(t0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((NULL)OR(t0.c1)))OR(t0.c1)))IS((('I樢?s')OR(t0.c1)))));
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c1))) BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) AND (NULL))) ORDER BY (((NOT (rt0.c1)))IS((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))), CASE WHEN ROUND(rt0.c2, 0xffffffff93c6f924) THEN ((rt0.c2)%(rt0.c2)) ELSE (((('')OR(rt0.c0)))AND(rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) AND (NULL))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c1)))IS((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))), CASE WHEN ROUND(rt0.c2, 0xffffffff93c6f924) THEN ((rt0.c2)%(rt0.c2)) ELSE (((('')OR(rt0.c0)))AND(rt0.c2)) END DESC);
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c1))) BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) AND (NULL))) ORDER BY (((NOT (rt0.c1)))IS((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))), CASE WHEN ROUND(rt0.c2, 0xffffffff93c6f924) THEN ((rt0.c2)%(rt0.c2)) ELSE (((('')OR(rt0.c0)))AND(rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) AND (NULL))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c1)))IS((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))), CASE WHEN ROUND(rt0.c2, 0xffffffff93c6f924) THEN ((rt0.c2)%(rt0.c2)) ELSE (((('')OR(rt0.c0)))AND(rt0.c2)) END DESC);
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c1))) BETWEEN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) AND (NULL))) ORDER BY (((NOT (rt0.c1)))IS((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))), CASE WHEN ROUND(rt0.c2, 0xffffffff93c6f924) THEN ((rt0.c2)%(rt0.c2)) ELSE (((('')OR(rt0.c0)))AND(rt0.c2)) END DESC;
SELECT * FROM vt0, rt0 CROSS JOIN t0 ON (NOT (t0.c1 COLLATE NOCASE)) WHERE ((((((((rt0.c2)AND(t0.c2)))AND(rt0.c2))))<=(((t0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2)AND(t0.c2)))AND(rt0.c2))))<=(((t0.c2 IN ()))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON (NOT (t0.c1 COLLATE NOCASE)));
SELECT * FROM vt0, rt0 CROSS JOIN t0 ON (NOT (t0.c1 COLLATE NOCASE)) WHERE ((((((((rt0.c2)AND(t0.c2)))AND(rt0.c2))))<=(((t0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2)AND(t0.c2)))AND(rt0.c2))))<=(((t0.c2 IN ()))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON (NOT (t0.c1 COLLATE NOCASE)));
SELECT * FROM vt0, rt0 CROSS JOIN t0 ON (NOT (t0.c1 COLLATE NOCASE)) WHERE ((((((((rt0.c2)AND(t0.c2)))AND(rt0.c2))))<=(((t0.c2 IN ())))));
SELECT * FROM vt0, t0 WHERE (t0.c0) ORDER BY ((CAST(t0.c1 AS NUMERIC)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c1 AS NUMERIC)) ISNULL)  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (t0.c0) ORDER BY ((CAST(t0.c1 AS NUMERIC)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c1 AS NUMERIC)) ISNULL)  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (t0.c0) ORDER BY ((CAST(t0.c1 AS NUMERIC)) ISNULL)  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN x'' THEN rt0.c1 ELSE rt0.c2 END) BETWEEN (ROUND(t0.c1, rt0.c1)) AND (((rt0.c1)>>(rt0.c1)))) CROSS JOIN vt0 ON (((rt0.c2)<(rt0.c0)) IN ()) WHERE (((rt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY 0.7803363379721014 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN x'' THEN rt0.c1 ELSE rt0.c2 END) BETWEEN (ROUND(t0.c1, rt0.c1)) AND (((rt0.c1)>>(rt0.c1)))) CROSS JOIN vt0 ON (((rt0.c2)<(rt0.c0)) IN ()) ORDER BY 0.7803363379721014 DESC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN x'' THEN rt0.c1 ELSE rt0.c2 END) BETWEEN (ROUND(t0.c1, rt0.c1)) AND (((rt0.c1)>>(rt0.c1)))) CROSS JOIN vt0 ON (((rt0.c2)<(rt0.c0)) IN ()) WHERE (((rt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY 0.7803363379721014 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN x'' THEN rt0.c1 ELSE rt0.c2 END) BETWEEN (ROUND(t0.c1, rt0.c1)) AND (((rt0.c1)>>(rt0.c1)))) CROSS JOIN vt0 ON (((rt0.c2)<(rt0.c0)) IN ()) ORDER BY 0.7803363379721014 DESC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN x'' THEN rt0.c1 ELSE rt0.c2 END) BETWEEN (ROUND(t0.c1, rt0.c1)) AND (((rt0.c1)>>(rt0.c1)))) CROSS JOIN vt0 ON (((rt0.c2)<(rt0.c0)) IN ()) WHERE (((rt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY 0.7803363379721014 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c2, t0.c2, rt0.c1)) NOT BETWEEN ((INSTR(rt0.c0, rt0.c1), TRIM(vt0.c0), (NOT (vt0.c0)))) AND (((((t0.c1))>((t0.c2))), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (- ('490188123'))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, t0.c2, rt0.c1)) NOT BETWEEN ((INSTR(rt0.c0, rt0.c1), TRIM(vt0.c0), (NOT (vt0.c0)))) AND (((((t0.c1))>((t0.c2))), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (- ('490188123')))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c2, t0.c2, rt0.c1)) NOT BETWEEN ((INSTR(rt0.c0, rt0.c1), TRIM(vt0.c0), (NOT (vt0.c0)))) AND (((((t0.c1))>((t0.c2))), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (- ('490188123'))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, t0.c2, rt0.c1)) NOT BETWEEN ((INSTR(rt0.c0, rt0.c1), TRIM(vt0.c0), (NOT (vt0.c0)))) AND (((((t0.c1))>((t0.c2))), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (- ('490188123')))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c2, t0.c2, rt0.c1)) NOT BETWEEN ((INSTR(rt0.c0, rt0.c1), TRIM(vt0.c0), (NOT (vt0.c0)))) AND (((((t0.c1))>((t0.c2))), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (- ('490188123'))))));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY CAST(144227903 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CAST(144227903 AS REAL)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY CAST(144227903 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CAST(144227903 AS REAL)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY CAST(144227903 AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0 COLLATE RTRIM);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((t0.c2 COLLATE RTRIM)=((t0.c1 IN (t0.c2)))) WHERE (((t0.c2) NOT BETWEEN ((t0.c2 IN ())) AND ((t0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT BETWEEN ((t0.c2 IN ())) AND ((t0.c1 IN ())))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((t0.c2 COLLATE RTRIM)==((t0.c1 IN (t0.c2)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((t0.c2 COLLATE RTRIM)=((t0.c1 IN (t0.c2)))) WHERE (((t0.c2) NOT BETWEEN ((t0.c2 IN ())) AND ((t0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT BETWEEN ((t0.c2 IN ())) AND ((t0.c1 IN ())))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((t0.c2 COLLATE RTRIM)==((t0.c1 IN (t0.c2)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((t0.c2 COLLATE RTRIM)=((t0.c1 IN (t0.c2)))) WHERE (((t0.c2) NOT BETWEEN ((t0.c2 IN ())) AND ((t0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT * FROM rt0, vt0, t0 WHERE (((((t0.c2)>>(t0.c0)))IS(CAST(rt0.c1 AS NUMERIC)))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>>(t0.c0)))IS(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY rt0.c2 DESC);
SELECT * FROM rt0, vt0, t0 WHERE (((((t0.c2)>>(t0.c0)))IS(CAST(rt0.c1 AS NUMERIC)))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>>(t0.c0)))IS(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY rt0.c2 DESC);
SELECT * FROM rt0, vt0, t0 WHERE (((((t0.c2)>>(t0.c0)))IS(CAST(rt0.c1 AS NUMERIC)))) ORDER BY rt0.c2 DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (NULL, ((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (NULL, ((rt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (NULL, ((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (NULL, ((rt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (NULL, ((rt0.c2) NOT NULL)));
SELECT * FROM rt0 WHERE (IFNULL(((rt0.c0)>(rt0.c1)), rt0.c1));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c0)>(rt0.c1)), rt0.c1)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE (IFNULL(((rt0.c0)>(rt0.c1)), rt0.c1));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c0)>(rt0.c1)), rt0.c1)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE (IFNULL(((rt0.c0)>(rt0.c1)), rt0.c1));
SELECT ALL * FROM rt0 WHERE (0Xffffffffcbf345a2) ORDER BY (- (rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffcbf345a2) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c0)) ASC);
SELECT ALL * FROM rt0 WHERE (0Xffffffffcbf345a2) ORDER BY (- (rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffcbf345a2) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c0)) ASC);
SELECT ALL * FROM rt0 WHERE (0Xffffffffcbf345a2) ORDER BY (- (rt0.c0)) ASC;
SELECT * FROM t0, vt0 INNER JOIN rt0 ON ((((((((((rt0.c2) ISNULL))AND(t0.c2)))AND((- (t0.c1)))))OR(-1778579008)))AND(rt0.c2 COLLATE NOCASE)) WHERE ((+ (((t0.c2) IS FALSE)))) ORDER BY ((((rt0.c1)*(t0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((+ (((t0.c2) IS FALSE)))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON ((((((((((rt0.c2) ISNULL))AND(t0.c2)))AND((- (t0.c1)))))OR(-1778579008)))AND(rt0.c2 COLLATE NOCASE)) ORDER BY ((((rt0.c1)*(t0.c1))) NOT NULL));
SELECT * FROM t0, vt0 INNER JOIN rt0 ON ((((((((((rt0.c2) ISNULL))AND(t0.c2)))AND((- (t0.c1)))))OR(-1778579008)))AND(rt0.c2 COLLATE NOCASE)) WHERE ((+ (((t0.c2) IS FALSE)))) ORDER BY ((((rt0.c1)*(t0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((+ (((t0.c2) IS FALSE)))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON ((((((((((rt0.c2) ISNULL))AND(t0.c2)))AND((- (t0.c1)))))OR(-1778579008)))AND(rt0.c2 COLLATE NOCASE)) ORDER BY ((((rt0.c1)*(t0.c1))) NOT NULL));
SELECT * FROM t0, vt0 INNER JOIN rt0 ON ((((((((((rt0.c2) ISNULL))AND(t0.c2)))AND((- (t0.c1)))))OR(-1778579008)))AND(rt0.c2 COLLATE NOCASE)) WHERE ((+ (((t0.c2) IS FALSE)))) ORDER BY ((((rt0.c1)*(t0.c1))) NOT NULL);
SELECT * FROM t0 WHERE (((((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))AND((t0.c0 IN (t0.c2, t0.c2))))) ORDER BY TRIM(CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))AND((t0.c0 IN (t0.c2, t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY TRIM(CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END) ASC);
SELECT * FROM t0 WHERE (((((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))AND((t0.c0 IN (t0.c2, t0.c2))))) ORDER BY TRIM(CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))AND((t0.c0 IN (t0.c2, t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY TRIM(CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END) ASC);
SELECT * FROM t0 WHERE (((((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))AND((t0.c0 IN (t0.c2, t0.c2))))) ORDER BY TRIM(CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END) ASC;
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT * FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((t0.c2)+(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN ()) THEN ((t0.c2)+(t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((t0.c2)+(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN ()) THEN ((t0.c2)+(t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((t0.c2)+(t0.c2)) END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS BLOB));
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c0)))OR('')))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))))OR(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))AND(CASE rt0.c1  WHEN rt0.c0 THEN x'' ELSE rt0.c0 END)))AND(((0.16508853620471164)/(rt0.c1))))) ORDER BY rt0.c2 COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c2)OR(rt0.c0)))OR('')))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))))OR(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))AND(CASE rt0.c1  WHEN rt0.c0 THEN x'' ELSE rt0.c0 END)))AND(((0.16508853620471164)/(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c0)))OR('')))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))))OR(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))AND(CASE rt0.c1  WHEN rt0.c0 THEN x'' ELSE rt0.c0 END)))AND(((0.16508853620471164)/(rt0.c1))))) ORDER BY rt0.c2 COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c2)OR(rt0.c0)))OR('')))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))))OR(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))AND(CASE rt0.c1  WHEN rt0.c0 THEN x'' ELSE rt0.c0 END)))AND(((0.16508853620471164)/(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c0)))OR('')))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))))OR(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))AND(CASE rt0.c1  WHEN rt0.c0 THEN x'' ELSE rt0.c0 END)))AND(((0.16508853620471164)/(rt0.c1))))) ORDER BY rt0.c2 COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INDEXED BY i79, t0, rt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INDEXED BY i79, t0, rt0);
SELECT COUNT(*) FROM vt0 INDEXED BY i79, t0, rt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INDEXED BY i79, t0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((NULL) NOTNULL))) AND ((((vt0.c0)*(t0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((NULL) NOTNULL))) AND ((((vt0.c0)*(t0.c1)))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((NULL) NOTNULL))) AND ((((vt0.c0)*(t0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((NULL) NOTNULL))) AND ((((vt0.c0)*(t0.c1)))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((NULL) NOTNULL))) AND ((((vt0.c0)*(t0.c1))))));
SELECT * FROM t0 WHERE ((- (((t0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((- (((t0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((- (((t0.c2) IS TRUE))));
SELECT COUNT(*) FROM t0, rt0 WHERE (((t0.c1 COLLATE RTRIM)||((((rt0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE RTRIM)||((((rt0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((t0.c1 COLLATE RTRIM)||((((rt0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE RTRIM)||((((rt0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((t0.c1 COLLATE RTRIM)||((((rt0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))));
SELECT * FROM t0 WHERE (((t0.c2) NOT BETWEEN (((t0.c2) IS FALSE)) AND (t0.c2))) ORDER BY CAST(LIKE(t0.c0, t0.c0) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOT BETWEEN (((t0.c2) IS FALSE)) AND (t0.c2))) IS TRUE)  as count FROM t0 ORDER BY CAST(LIKE(t0.c0, t0.c0) AS INTEGER) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((t0.c2) NOT BETWEEN (((t0.c2) IS FALSE)) AND (t0.c2))) ORDER BY CAST(LIKE(t0.c0, t0.c0) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOT BETWEEN (((t0.c2) IS FALSE)) AND (t0.c2))) IS TRUE)  as count FROM t0 ORDER BY CAST(LIKE(t0.c0, t0.c0) AS INTEGER) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((t0.c2) NOT BETWEEN (((t0.c2) IS FALSE)) AND (t0.c2))) ORDER BY CAST(LIKE(t0.c0, t0.c0) AS INTEGER) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON t0.c1 FULL OUTER JOIN vt0 ON ((((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))<=((((rt0.c1) IS TRUE)))) WHERE (rt0.c0) ORDER BY ((rt0.c1) NOT NULL) COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON t0.c1 FULL OUTER JOIN vt0 ON ((((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))<=((((rt0.c1) IS TRUE)))) ORDER BY ((rt0.c1) NOT NULL) COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON t0.c1 FULL OUTER JOIN vt0 ON ((((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))<=((((rt0.c1) IS TRUE)))) WHERE (rt0.c0) ORDER BY ((rt0.c1) NOT NULL) COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON t0.c1 FULL OUTER JOIN vt0 ON ((((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))<=((((rt0.c1) IS TRUE)))) ORDER BY ((rt0.c1) NOT NULL) COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON t0.c1 FULL OUTER JOIN vt0 ON ((((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))<=((((rt0.c1) IS TRUE)))) WHERE (rt0.c0) ORDER BY ((rt0.c1) NOT NULL) COLLATE NOCASE COLLATE RTRIM;
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE) ORDER BY ((vt0.c0)%(NULL)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)%(NULL)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE) ORDER BY ((vt0.c0)%(NULL)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)%(NULL)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE) ORDER BY ((vt0.c0)%(NULL)) COLLATE NOCASE ASC;
