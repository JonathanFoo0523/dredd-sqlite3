-- Time: 2024/06/09 20:20:44
-- Database: database29
-- Database version: 3.40.0
-- seed value: 2404518229
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, content='', tokenize = "porter"); -- 1ms;
ROLLBACK TRANSACTION; -- 3ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES (NULL, -827510579, x''); -- 1ms;
INSERT INTO vt1(vt1) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2032408869); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'' WHERE (((+ (rt0.c1)))%(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=2'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 0ms;
UPDATE rt0 SET c2=x'', c1=1282358243 WHERE (((rt0.c2)) BETWEEN ((((rt0.c2)>('')))) AND ((rt0.c1))); -- 0ms;
UPDATE rt0 SET (c2, c1)=(x'', '-827510579') WHERE ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND('-1080616972')))OR(CASE WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c1, c2)=(x'5dde', '', -1088181026); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.678346770692603, c1=-8.27510579E8; -- 0ms;
UPDATE rt0 SET (c1, c2)=(-1.080616972E9, 0x5785159e) WHERE -1088181026; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL) WHERE rt0.c2; -- 1ms;
INSERT OR REPLACE INTO rt0(c0, c2, c1) VALUES (NULL, x'', NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1282358243 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (x'') AND (NULL)))=(CAST(0.678346770692603 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-7067489'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-896089737'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1088181026 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1530042874 2 sz=1468339614 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (('1468339614' IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')IS('1468339614')), ((x'')OR('-1695840690')), CAST(x'' AS INTEGER)))=((CAST(0.678346770692603 AS INTEGER), ((NULL) BETWEEN (0.678346770692603) AND (0.001223135003749709)), ((NULL)*('-'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (IFNULL(DISTINCT x'0d94', -1530042874))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1530042874' COLLATE RTRIM, (('y曈P&tR_I') NOT BETWEEN ('p_') AND (0.649913409928736)), NULLIF('', 0x59dacbcd)))>((LOWER(x''), CASE WHEN NULL THEN x'' WHEN NULL THEN x'' WHEN 0.92633393444159 THEN NULL ELSE 0.47948118406117224 END, ((0.25543018535497697)>=(0.7599077615834107))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 2 sz=1377135606 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1271307073')>(NULL)))==(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-234364461 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-2031441612 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (('0.47948118406117224')GLOB(''))  WHEN ((((((((0.27926824070454925)OR(x'9d48')))AND(NULL)))OR(x'')))AND(x'')) THEN NULL END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ABS(NULL) THEN ((' 4') IS FALSE) WHEN IFNULL(DISTINCT NULL, '-2031441612') THEN (('-896089737')>=(NULL)) WHEN (((0.6486594788407353, 'w.', x'')) NOT BETWEEN ((0.25543018535497697, -833554105, '-1257338959')) AND ((0x6c58f076, NULL, 0.9445213054017286))) THEN x'7915' COLLATE RTRIM ELSE (('-2031441612') BETWEEN (0.4495855411905032) AND (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE '661385285'  WHEN -1.530042874E9 THEN '4<8j34ネ!' END))>=((((('0.27926824070454925')) BETWEEN ((0.9847666731720179)) AND (('1752169154')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-517790710 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1088181026 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '昆dLViO'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1695840690 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((+ (1.817768054E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(0x4bbfbfdb)) NOT BETWEEN (CASE NULL  WHEN x'' THEN x'8dee' END) AND ((((((((((((('T^K*AeCcO')OR(x'475f6e6a')))AND(0.4679486326594847)))OR(NULL)))AND('8*z%Ivg')))OR(x'')))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=-234364461 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '244742849'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-234364461 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 sz=1380036691 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1557435914 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('1568917838')))IS NOT('m],O~M')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9515671436318823 COLLATE BINARY) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 -896089737 sz=-1862367931'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=661385285'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7157411961007725) IS FALSE)) BETWEEN (((x'')OR(''))) AND (CASE x''  WHEN '0.001223135003749709' THEN 0.5774186851026113 END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1539708002'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-2028227741'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '205281868 -373928716 sz=-2028227741 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-3.73928716E8) NOT BETWEEN ('1282358243') AND (x'f7be')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1617466631 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1743253630 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1522417007 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1695840690'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS('-0.0'))-(((((NULL)OR(0.39092847090875027)))OR(0xffffffff86eaa934)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS TRUE))/((NULL IN (x'', 0.4537611217006886)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((('')|(-1662097711)))AND(((((((((((((((((0.92633393444159)OR(0xffffffff9e495e06)))AND('!|r5*F')))AND('-1166240653')))OR('?V')))OR(NULL)))AND(NULL)))AND(1815385070)))OR(x'd273')))))OR((('-1639358970')GLOB(x'4729')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '902192231 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((' |䳴ⳣ')OR(NULL)))AND(''))) BETWEEN (((NULL) IS FALSE)) AND (-1695840690 COLLATE RTRIM)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=202236100 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (0.7599077615834107)))OR(CAST('-1166240653' AS NUMERIC))))AND(('-1695840690' IN ('-1')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1907724620 unordered'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=107161236'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xcd59e4) BETWEEN (NULL) AND (x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1619371039'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1270857691 -1834523943'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1742510392'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE('', ((((x'')OR('Oj')))AND(0.11945539715183329))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-2028227741') BETWEEN (NULL) AND (0xfffffffff0eb3cac)))OR(((0.7789222105680378) ISNULL))))AND((('1274329558') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=661385285'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1257338959 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1501135168 sz=-1647358410 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.9847666731720179 COLLATE RTRIM AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1379286929 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((((((0.8304115999608739)OR(0.24300982909423685)))AND(x'')))OR('')))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1369009984 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE '2065156517'  WHEN x'044a' THEN NULL WHEN NULL THEN NULL WHEN 0.972929249802252 THEN 0.11945539715183329 ELSE NULL END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-831449502)IS NOT(NULL)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1522417007 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1673078214 sz=1104774804 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 -761936180 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1405963654 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1110286312 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-1.530042874E9)IS('')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-234364461 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1568917838'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=41002009'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(x'')))OR('0.5774186851026113'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-887770231 sz=1252803217 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-909448898 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-23692334'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1377135606 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '500294690 -700739977'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=1345312213'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1282358243' IN ())) NOTNULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.4596847192417224)>=('c7,j㯣')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1231138012 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1638575047 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'ac25') NOT BETWEEN (x'21cf') AND (0x4c6f3be3)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1706141239 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1034930812 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1541249696 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1600350320'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-418430358 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1104774804 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=496889798 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-103477818 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1907724620 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-')*(-103477818))) NOT BETWEEN ((('-603115986') BETWEEN (-7.00739977E8) AND (x'6de0'))) AND (CASE WHEN '-439534347' THEN '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 0 sz=-1742510392 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')OR(NULL)))AND(0.001223135003749709)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0X167032fa)) BETWEEN ((0.20884433940739688)) AND ((x'')))) BETWEEN ('-2116564150') AND (CASE WHEN 0.052643050920088696 THEN 0Xffffffffa6ee4201 ELSE '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1926574536 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '230965367 sz=269858300 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1369009984 sz=-584714085 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1619371039 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension((+ (0.8064866124130267)), HEX('1256092046')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-668342610 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-406926530 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL, NULL, x'')) BETWEEN (('-55076083', 0x1498cc14, NULL)) AND (('-1758443533', '2028353132', x''))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS BLOB) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1217598184 2 sz=202236100 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'80528be1') BETWEEN (x'241d') AND (')U믥 !N㽆'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1530042874 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(((NULL) NOT BETWEEN (x'') AND (NULL)), NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-909448898'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=657847635 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1942006080 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '998000184 sz=-7067489'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=855036598 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(((x'') NOT BETWEEN (0.25847459579096255) AND (NULL)), CAST(0.36456057291713007 AS TEXT), '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1962033619 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-295436422 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(IFNULL('屰4', x'') AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (('讌F↻P' COLLATE RTRIM)) AND ((CASE NULL  WHEN ' |䳴ⳣ' THEN 0.8304115999608739 END))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-406926530 sz=1007817996 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1490228170 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1588994158 sz=-1862552495'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1138466938'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1487371676 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1177029153 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (json_valid(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '851663212 0 sz=1252803217 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1957244197'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('1568917838')OR(NULL))  WHEN (x'' IN ()) THEN (('-668342610') BETWEEN ('') AND (NULL)) WHEN (('r(9')%(0.935808773347956)) THEN ((x'2255')LIKE(x'')) WHEN CAST(x'' AS TEXT) THEN (((0.5705070928965552, '299969763', NULL, '1983792316', 173770181)) NOT BETWEEN (('v|i[', 0.8890567517576319, 0xffffffffc754edb0, 1345312213, ' ')) AND ((NULL, -1345108037, 855451067, '', NULL))) ELSE 0.7811516058610143 END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-103477818 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (x'') AND (x'')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=78251528 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=855450574 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2015412396 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1206680014 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)IS('')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0x4b5c646d)OR(x'')))AND(NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0xffffffffe3cdef1c))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.31383911422171296)IS('-55076083'))  WHEN '0.25543018535497697' THEN ((x'2e8b5313')<<(NULL)) WHEN ((x'') NOT BETWEEN (-750701292) AND ('1e500')) THEN (~ (x'')) WHEN ((0.39271886504234543)-(NULL)) THEN ((NULL)+(0.08881545534373392)) ELSE TOTAL_CHANGES() END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (x'')))-(ROUND(NULL, 't獥'))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('1507511245' IN ())) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1595466325 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '729659339 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TRIM(DISTINCT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('\rg&')||(0.4714935323602585)) THEN (((NULL)) BETWEEN ((NULL)) AND ((-1594471386))) ELSE TRIM(DISTINCT 0.40661291536047406) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('఻}%?') BETWEEN (x'') AND (x'')) THEN NULL COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (-2.3692334E7))) BETWEEN ((((NULL))<=((NULL)))) AND ((x'08e3' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('(\n_ZNj\n!')|('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1473261727 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '427178570 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('~PC #\n*')LIKE(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '345558036 sz=-9223372036854775808 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1')>=(CAST('-1695840690' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 sz=-831449502'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '208196290 -875913609 sz=-1926574536 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2104918926 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1172570384 1539862251'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((ABS(DISTINCT NULL))) AND (((- (x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((0.034245353674547285)OR('-18958614')))AND(x'')))AND(0x397c6ca5)))OR(NULL)))AND(CASE -1.64735841E9  WHEN -2.3692334E7 THEN '~bF*' ELSE '39447555' END)))AND(CAST('-1257338959' AS INTEGER))))AND(((((x'5fd9dc6e')OR('7466989')))AND(0x46dafe8f)))))AND((('1815385070') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER))OR(CASE '-2116564150'  WHEN 0.027405369829062054 THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-761936180') NOT BETWEEN ('_*tV!r]') AND (x'')))>(CAST('' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=376451834 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')LIKE('-23692334'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1649849848'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '902192231 sz=-1654660571 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT ((' ') ISNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '551887565 sz=-1115482361 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1655503932 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1344862642 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((((((('pKT')AND(1.405963654E9)))OR('0.39092847090875027')))AND(NULL)))OR('')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-766514219 sz=1867924656 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY)|(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=396046680 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=124413816 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1927916467 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1908212703 2 0 sz=1278325489'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1961129944')LIKE('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 -1907724620 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-7067489') BETWEEN (0.883744947121875) AND ('0|B''+)5''!')))<>(((0.8227785714239144)==('-2116956931')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 sz=2025370692'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<>(0xffffffff9246ce65))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN 41002009 THEN NULL ELSE -8.87770231E8 END AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.3666227346009153; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN NULL THEN '-1834523943' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((x'e1765995')||('41002009')))) AND ((((x'89e4') BETWEEN (x'783b') AND (0.17974911231847013))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(0x4aac4291); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-827510579 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1662097711 sz=1231138012 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME(((((0.7059104102873428)OR(0.7157411961007725)))OR('')), ((x'8e84') BETWEEN (0.6957370993041804) AND ('-2035221311')), (('q.*#')>>(1796161340))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1172859748'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6234388787426207) NOT BETWEEN ('-896089737') AND (657093772)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-234364461 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((0.9687504196264304)GLOB(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (-547177583)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-473589313') NOT NULL))*(CAST(0X70e6000d AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1388069740 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE BINARY COLLATE BINARY COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-966564580'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.7071765066691352  WHEN 0.4753690431422033 THEN x'' WHEN NULL THEN 0.6893101725681533 WHEN '-482595632' THEN '1619371039' END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 sz=-521355853 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=943938793 unordered'); -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-334468500 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-517790710'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(-1317173653 AS TEXT) THEN (0.3950574724596243 IN ()) WHEN ((0.395686457944883)AND('-1387525934')) THEN (('-1681108653') NOT NULL) WHEN (('*n')&('0.25847459579096255')) THEN (('-833554105')OR(0xa1ba207)) ELSE CASE NULL  WHEN '' THEN '' ELSE 1.282358243E9 END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1159888091 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'54fb' AS REAL) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1356994043') NOTNULL)) BETWEEN (CASE WHEN x'' THEN 3.45558036E8 END) AND (CASE WHEN 345558036 THEN 0.03824687825033524 ELSE 0.10257188573891318 END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object((((('')OR('&	')))OR(3.45558036E8)), ((((((((NULL)AND('-1662097711')))OR('-')))OR('1507511245')))AND('%>둅'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1026810684 sz=998000184 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1519994302 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '657847635' COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=902192231 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1600350320 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('JjH>' COLLATE NOCASE) BETWEEN (((('-1945710074')) NOT BETWEEN ((0.48397569641021665)) AND (('461511833')))) AND ((NOT (x'0f28')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.3504274730320208)==(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1834523943'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('1389126324')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '202236100 sz=-1648979324 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-2098697442 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-999020101 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5018913084422085 IN ())) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1468339614'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME(((x'8359') NOT BETWEEN (x'4a81') AND (0.47173967212078305)), (('299969763')%('-261748146')), x'' COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1995895034 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1213696803 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.3622661657917917 COLLATE RTRIM  WHEN (NOT (0.24300982909423685)) THEN -1.94200608E9 END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (NOT (0.9847666731720179))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 0 sz=-1165467464 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1274329558 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('244742849' COLLATE RTRIM AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.04388378098064538)IS(1.619371039E9))) NOT BETWEEN ((+ (0X78f38a1e))) AND (NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-253018964 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1270857691 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=288930109 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5018913084422085 AS REAL)) BETWEEN (' ' COLLATE RTRIM) AND (0.8328279344523725 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '496889798 sz=1270857691'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=875525082 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1369009984'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(((((x'')OR(NULL)))AND('41002009')), (~ ('O0'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('j#|(>+' AS REAL)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-2087975389 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=271833318 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1973660756'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT x'', '-406926530'))<<((+ (1.752169154E9)))); -- 6ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=924791939'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))>=(SQLITE_VERSION())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1587847231 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-234364461 0 293011697 sz=-1327422065 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1090019244 sz=1231138012 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('0.17974911231847013')))-((('4<8j34ネ!')&(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('%>둅')&('-833554105')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.034245353674547285)%('1797784875')))||(CAST(NULL AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=544773646 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((1.7976931348623157E308, 0.7495393743156763, '')) NOT BETWEEN ((0Xffffffffa4cd6606, 904641509, '-887770231')) AND ((x'6d29', 8.074869347565183E-4, NULL)))  WHEN NULL COLLATE BINARY THEN '' COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=328703380'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-267778748 1655860749 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1758443533 0 sz=1384921634 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(x'' COLLATE RTRIM, (0.5322721526219338 IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE x'8677'  WHEN '205356438' THEN '1555674230' ELSE 'JJH>' END, CASE WHEN 'bP' THEN 'c7,j㯣' ELSE '-406926530' END, (~ (NULL))))!=((MAX(NULL, 0.883744947121875), (('4') NOTNULL), ('' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('![')))>>((- (x'1467')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1491846449'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.4820209822152296)<(-306642380)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0x5eedb004, 0.6492784444133313)) BETWEEN ((LOWER(DISTINCT '6៟VS'), (('1008761471') ISNULL), (~ (NULL)))) AND ((CASE WHEN x'' THEN 1.345312213E9 WHEN 807267185 THEN '657847635' WHEN 0.16779275005889804 THEN x'e93f' END, ((((NULL)AND(581992965)))AND(x'')), (((('1dZK')OR(NULL)))AND(x''))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1522417007 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULLIF(NULL, 0.9955047968837503) IN (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-439534347 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (''))) BETWEEN ((((('-1662097711')OR('')))OR(-1.539708002E9))) AND ((('z')|(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1138981967 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1339887470'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.36456057291713007, NULL, 0.20884433940739688)) NOT BETWEEN ((((((x'')OR('-1')))AND(0.09483300092440894)), ((x'')*('1619371039')), ((0.10848088926250365)>=(0.27730175456638606)))) AND (((('+m') NOT BETWEEN (x'') AND ('≾jF')), x'' COLLATE RTRIM, CASE NULL  WHEN x'' THEN 0.5879668497918349 ELSE 0.48200079354385583 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1411359494 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8890567517576319)OR(CASE '0.8227785714239144'  WHEN x'' THEN 1.274329558E9 ELSE '1380036691' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=299969763 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1028971642 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-113328346 sz=-7067489'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0x3ca8286b)AND(x'')))OR(-694741507)))AND(NULL)))AND(x'')))AND((((0.6120469796630236, NULL, '-2031441612')) NOT BETWEEN ((x'', x'', NULL)) AND ((x'', -1.617466631E9, -1.617466631E9))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-1900864594'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(0.46762191344411963 AS REAL)))>=(((((x''))>=((x'')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2104520349'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.7862959331824375 AS BLOB) IN (TIME(NULL, NULL, '-584714085'), ((((0X8dd0297)OR('VR')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)+(NULL))) NOT BETWEEN (TRIM(DISTINCT 0.842964788708246, 0.12171389218768947)) AND (((x'0897')>>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('-1695840690')) COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '1379274302 sz=899076627 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (0.3099471585102044) AND (x'')))<(x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1126669382 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>>('')))=(((('-1088181026')) BETWEEN ((-584714085)) AND (('pf'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=853333794 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB('' COLLATE BINARY, (~ (NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('FALSE')<<('kLZ')))AND(((NULL)&(0.04693588087150713)))))AND(CAST(x'' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=641145641 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1862367931 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=701305247 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('_*tv!r]')||(0.32355235365410506)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN ()))OR((((((((('')OR(x'e6cd')))OR('\%')))OR(NULL)))OR(x'')))))AND(((((NULL)OR('kLZ')))AND('0.36456057291713007')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.24300982909423685 IN (0.8890960845881746, 0.4693965770236088)))||(HEX(DISTINCT x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1170008051 sz=-34749807'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-833554105 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1662097711 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_VERSION()) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(DISTINCT NULL))>=(CAST(0.2192413945510585 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-171197930 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '954915563 sz=-1257338959 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-103886249 0 sz=1547120996 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1379286929 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(CASE WHEN x'7b02' THEN '\r\nc*砀vG*n' WHEN x'' THEN 0.8538454247194246 WHEN '' THEN 'Hj' ELSE x'e8db' END, '904641509'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT NULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-373928716 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '497529107 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1150880135'))>=((x''))))IS((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT ((0.6552058231604345) IS TRUE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ('0.48397569641021665' COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1415062469'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=807511977 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)LIKE('N*l0wt_rq')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('02' COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-586239269' AS TEXT)) BETWEEN (0.6735611077808372) AND (((x'39ff')%('0.3950574724596243')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('0.11945539715183329' IN (1771630036, 'ᇉ^+L'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-662626112 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-909448898 2 sz=1012459105 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-668342610 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=1235050387 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.770198026006234)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE('1619371039' COLLATE NOCASE, CASE WHEN '' THEN x'c1597a5f' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 sz=607693796 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 -1575527949 sz=482141143'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 269858300 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1706292238' COLLATE BINARY) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1864890453 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.28528494733967724 COLLATE BINARY THEN ((NULL) IS FALSE) WHEN ((x'')%(41798356)) THEN ((0.6663185486330195)<>(0.2979931878643741)) WHEN ((0.5524013666463552)AND('-827510579')) THEN 0.45901480962058705 WHEN ((NULL) ISNULL) THEN (('-1978041301') NOT NULL) WHEN ((0.7375531683701321)OR('1600350320')) THEN LOWER(DISTINCT '-1034930812') ELSE (((x''))=((0.4537611217006886))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (('-373928716') IS TRUE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1864633002'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=637912069 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=862690240 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (PRINTF('-683943702'))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (('BR-PKPm}') IS TRUE)  WHEN (('RGM4L{\I}o')IS NOT(0xffffffffce57b61e)) THEN ((((((((0.15320131091372824)AND(0xffffffff81f4af96)))AND(x'')))OR(NULL)))OR(0.35359651299023476)) ELSE ('345558036' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=42219809 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1647358410 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1541249696 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1530042874 sz=-833554105 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.592942302104276 THEN 322583922 END) NOT BETWEEN (((NULL)==(''))) AND (CASE WHEN '_*TV!R]' THEN '-253535087' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-840798022 noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '903229078 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1779798591 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1678580964 -1697318087 sz=1576046990 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-1110239993 -1304871796 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9000581216068766)<=(1.507511245E9)))|((('漸tvⶹ') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1846956120 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0.033867566448308684 ELSE '-397037300' END) IS FALSE); -- 3ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 846522264 COLLATE NOCASE THEN (('-1742510392') ISNULL) WHEN (('䈁Yo]|Fk3')GLOB(NULL)) THEN 0X44e23415 COLLATE NOCASE WHEN (((('≾jF')AND(1752169154)))AND(x'')) THEN ((x'')OR('-700739977')) ELSE ((x'')-(0x5bdd9aa0)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3802338508105131)<>(NULL)))AND(((0.6454672305719595) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1439139495 935027958 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1104774804'; -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0.20944145330802832; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-469813741 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-418430358 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((-2.3692334E7)AND(NULL)))AND('13457892'))))<((((NULL)>(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=568285326 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x''))) NOT BETWEEN (((NULL) IS TRUE)) AND (((((((((x'')AND('-1111675671')))OR(-4.39534347E8)))OR(x'')))OR(0.23729549693646523)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1134637328 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1781950942'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '4 sz=-827510579 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.3743166497715197  WHEN 0.8104386332364041 THEN NULL END) BETWEEN ((('-1088181026')<>(NULL))) AND ((((0.7599077615834107)) BETWEEN ((x'')) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS TRUE) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6378960979070996)>>((+ (0X59dacbcd)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.7375531683701321))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) IS FALSE)  WHEN ((x'') NOTNULL) THEN CASE WHEN x'' THEN '230965367' ELSE '~bF*' END ELSE json_array_length(0.7579052394185885) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-103477818 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LIKELY(NULL)  WHEN ((0.47173967212078305) BETWEEN (NULL) AND (NULL)) THEN ((-6.03115986E8)IS NOT(-462810776)) WHEN (((NULL)) NOT BETWEEN (('')) AND ((0.4907644271373166))) THEN ((0.8890567517576319) IS FALSE) WHEN ((0.9879429156705319)!=(-459346156)) THEN ((NULL)OR(0.3470785786225188)) ELSE NULL COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('-1311346249')))=(HEX(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-1695840690'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1880631653 sz=1003694815 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1568940030 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1080616972 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-958760799 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1639287306'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1029384157 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1461250037 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))=((CAST('minutes' AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 sz=1947395100 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1942006080'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 'g?xḟX鑳t' THEN NULL WHEN 'F' THEN -1e500 WHEN x'' THEN 0.20943247074530458 END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('0.10848088926250365' IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '763092230 244742849 sz=2065156517 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1080616972 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 sz=-833554105'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2089699810'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.0 COLLATE NOCASE, CAST(NULL AS TEXT), (((0x4ade718e, '', x''))<((NULL, 0.6247989428953985, x'')))))!=(((x'82ce4edc' IN ()), ((x'a4c0') NOT BETWEEN (0.62189814237954) AND (-253018964)), (('囀') NOT NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-700739977'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffff81d7cb4a; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('-578833327' AS REAL)  WHEN ((911162247) NOT BETWEEN ('嫹d~?擎b>') AND ('-59207820')) THEN (('382330810')/('0.7071765066691352')) ELSE CASE ''  WHEN 0.6459360935205292 THEN NULL ELSE NULL END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('1446973336' AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1080616972 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1377135606') NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=718312865'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-592792791 -402747366 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')<(149117437)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-349977000'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'9901ad92' COLLATE BINARY  WHEN ((' A''h\n')<(-1873692861)) THEN TYPEOF(0.28158836253033337) WHEN CASE WHEN '-230606808' THEN NULL WHEN 514104551 THEN 0.3559108830737636 WHEN NULL THEN '509137975' WHEN 0.08881545534373392 THEN 0.6465998796305111 WHEN NULL THEN NULL ELSE '' END THEN x'aacd' WHEN HEX(DISTINCT x'') THEN ((NULL) IS TRUE) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-23692334 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, NULL, x'56588515')) NOT BETWEEN (((('-625504336') NOTNULL), 0.7059104102873428, (((x''))<=(('-517790710'))))) AND ((((((((((NULL)AND('807267185')))AND(NULL)))AND(NULL)))OR('|郀즥p')), ((0xb5d88ab) NOT NULL), ((((NULL)AND(0.5698071254674689)))AND(-1.530042874E9))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1345312213 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1815385070 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(UNICODE('0.9445213054017286')); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((''))<((x''))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1385871250 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(DISTINCT '/46kN', NULL))!=(-1093571412)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1419180297')<=(x'')), ((0.7388198124212079) NOT NULL), CAST('366954180' AS INTEGER)))<((((NULL) NOTNULL), ((0.9646868093984157)<=(0.16723829553572522)), ((0.08545464709928496)%('cj'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1391991409'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1448943612 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 -1940245963 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -305222343; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1501135168') IS FALSE))OR((+ (x'')))))AND(((NULL) NOT BETWEEN (0.24366196372648008) AND ('\n')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=238022647'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-' COLLATE RTRIM) BETWEEN (((0.4753690431422033)<=(x''))) AND ((((''))==((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1064893833 2 sz=-1172017636 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('n') ISNULL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1522417007 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('-567798529')OR(NULL)))AND(x'4005')))AND(((6.57847635E8)>>(x'fd5f')))))AND(CAST('0.034245353674547285' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1080616972'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=659065235 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-1907724620 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=500294690 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (337653263)), ((x'')&(NULL)), CAST('0.034245353674547285' AS REAL)))<(((('-896089737')||(-1.03477818E8)), TRIM(NULL), ((0.9749442875185215)>>(x'135d'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1029879357 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((NULL))!=((x''))) THEN (~ (NULL)) ELSE CASE WHEN x'' THEN x'' ELSE 0x41d98694 END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(0.749775414617798 AS REAL) THEN ((((((((0.34970391637608256)OR(x'68c6')))AND('')))OR('ءq')))AND('Wl')) WHEN ((0.41361203190073337)<<(x'')) THEN ((0.9538905550416855)+(x'')) WHEN (x'6488' IN ()) THEN ((NULL) NOT BETWEEN ('28845521') AND (0.7207890483528963)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-896089737 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1610908727 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'')-('-1494334975'))  WHEN ((('%[')) NOT BETWEEN ((NULL)) AND ((NULL))) THEN 0.783354708429094 COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('' COLLATE RTRIM)OR(((0.08881545534373392)IS NOT('')))))AND(((((0Xffffffffe1cf90c1)AND(0X1212a60)))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1758655944'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-1224993271 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)>(0.8890567517576319)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1528068757 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2133027736 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1673473943 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2040283611 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1671653932 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1600350320') BETWEEN ('Q\r_AC耯*') AND ('998000184'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=460613330 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-896089737 sz=1568388379 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((NULL)AND(0.9514239539831432)))OR('-2028227741')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', 0X6ef2703c, '1008289335')) NOT BETWEEN ((8.07267185E8, 'IPR<2?Nꐯ', 1912300509)) AND ((1.252803217E9, 0.9287788810500224, x'eb77'))))AND((NULL IN (0.05615919767510236)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=210048437 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1452035643 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1758443533 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<>(0.9130274313892364)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TYPEOF('1507511245'))AND((('%i[Q൭\]4^Qꬵ') NOT NULL))))AND((NOT (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-196347367 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('%>둅')OR('-1257338959')))OR('-209720969'))))!=((((x'')GLOB('䈁yo]|fk3'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1887491901 335886677 sz=904641509 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1571528783 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=1743253630 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0x47696984 COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=2065156517 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-2075274050' COLLATE RTRIM  WHEN (0.623999093149491 IN ()) THEN ((((((((x'')AND('-1549207312')))AND(x'')))OR('?}')))AND('_*tv!r]')) ELSE -1.369009984E9 END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(QUOTE(-1166240653) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-37180623 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X5e93592e COLLATE RTRIM)AND(LIKELIHOOD('-406926530', 0.245270568182406))))AND(1595037230)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-539698491 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1524877237'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(0.6511463833829015 AS INTEGER))OR(0.11835774805282484)))AND(NULLIF('375406561', ''))))OR(((((0Xffffffffbf4a9713)AND(1.568917838E9)))AND(2.30965367E8)))))OR(((0.7634200944459228) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffcb15b389)<>('-2031441612'))) NOT BETWEEN ((('')<>(0.5707491295197352))) AND (CAST(x'' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.270857691E9) NOT BETWEEN ('-887770231') AND (-2083290530)) IN ('-1494334975' COLLATE RTRIM, (+ ('820546882')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((0X276bf045)GLOB(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1394625749'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1482472294 COLLATE BINARY COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1938998244 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-2116564150 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.04693588087150713')>('[]')))IS(CASE WHEN x'' THEN 0.3588576624540597 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2022059482 sz=1706141239 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-755525510') NOT BETWEEN (x'') AND (x'0ae4')))AND(CAST(0.31939917327042044 AS TEXT))))OR(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffe9d9dfbc)AND(''))) BETWEEN (CHANGES()) AND (CASE WHEN 0.07760456569387697 THEN 0x54104a75 ELSE '345558036' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1583455462'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((904641509) NOT BETWEEN (NULL) AND ('mxGqK')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN NULL THEN '1522417007' WHEN '\rx4\' THEN 1.271307073E9 WHEN x'' THEN NULL ELSE 0Xffffffff9573f796 END AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE BINARY AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 1.252803217E9 THEN '' END)||(CAST(0.9513914384882427 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 440020428 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '4 sz=1628253022 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1619371039 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffd8311861; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (-1e500))))<(((NULL IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT ((((((((237882751)OR(0.2866582165701608)))AND(NULL)))OR(0.38781630451174165)))AND(0.8122654434671182))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1522417007'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '918447312 sz=-957631580 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1257338959 sz=-1942006080'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('-1552985720')); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.2643182776732437 AS REAL))AND((('F7P邌u?%Q>') BETWEEN ('933440281') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_valid(0.9901667679334326))>(CAST(0.8254900816186045 AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 sz=13457892 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'c539') NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-909448898 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=1815385070 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((-716880373)/('-895374710')))) AND (((('j!Or?t1%') ISNULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (CASE ''  WHEN '' THEN '-1909654933' WHEN x'' THEN 112316212 WHEN NULL THEN 1.377135606E9 ELSE 0.5774186851026113 END COLLATE RTRIM); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('-1639358970'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE RTRIM) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-55076083'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=-313402536 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-681195478 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-2035905377 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((((0.6290961524598713)OR('j2')))AND(0.48200079354385583)), ((((x'')AND(1.252803217E9)))OR(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.6370114360083705)) BETWEEN ((NULL)) AND ((x''))))AND(('' IN ()))))AND((('X*LPax') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1896252311'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LENGTH((((NULL)) NOT BETWEEN ((0.6234388787426207)) AND (('418246953')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1231138012 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffdf1a970f)) NOT BETWEEN ((CASE WHEN '701118848' THEN 500294690 END)) AND ((NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '804046207 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1995467415 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=269858300 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)<(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -907106782 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(x'' AS INTEGER) THEN (~ ('1817768054')) ELSE json_object(0.8538454247194246, x'') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-7067489 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LOWER(DISTINCT NULL) THEN CAST(-833554105 AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, '1270857691', NULL)) BETWEEN ((COALESCE(DISTINCT NULL, 'minutes'), HEX(x''), ((x'')|('')))) AND ((UNLIKELY('*IKu)14囀'), ((NULL)*(NULL)), CASE WHEN '䈁yo]|fk3' THEN '?}' WHEN 0.4531697997760462 THEN '%/e,{)ge\r' WHEN x'' THEN 0X6efd50a7 WHEN 0.8368956185780349 THEN NULL WHEN 0.9955047968837503 THEN 0.5488984791842634 END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1433561607 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 'v뢁\Kk*#' WHEN '0.7789222105680378' THEN x'' WHEN 0.7747977092386431 THEN NULL WHEN '958062172' THEN 0.3936822467506804 WHEN '' THEN '-802966527' ELSE NULL END)IS(((0.9755888565664644)/(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((- ('-1973412672'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1359595278'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE RTRIM COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1270857691 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-887770231 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=175309923 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-418430358 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '657847635'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-307837961'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1338125398 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE 0.6002763718986076  WHEN x'f790' THEN x'd682' ELSE 1.673078214E9 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(x'90f0e631' AS NUMERIC))AND(((((((((0x3b7c4638)OR(0.26414045362561656)))OR('GTBg>>&\n')))OR(x'5710')))AND(0.10923486398322513)))))AND((((x'3475', '2028353132', 'FT'))>((-909448898, -1780503717, 0X4961acdc))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1926574536 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-33941598 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0X58bce924) NOT BETWEEN ('-135951387') AND (x'455d8ea5')))OR(((NULL)<=('Xg')))))AND(((('1817768054', x'', '-1067469966')) BETWEEN ((0.6852965071730234, NULL, 0.9618738884433682)) AND (('-831449502', '-1536844205', NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-756264885 sz=-515292106 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6767727576719845, x'', '')) NOT BETWEEN ((1522417007 COLLATE RTRIM, DATE(NULL, x'', 'g(!f', x'', x''), ((x'') NOT NULL))) AND ((CASE WHEN 0.33627452234413957 THEN 0.32839425049216764 ELSE 1.377135606E9 END, TOTAL_CHANGES(), ((x'')LIKE(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '1017317607 sz=835295894 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1529296104 sz=-1331543301'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1494334975 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-896089737'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=909202677 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '334964339 sz=1574743564 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-1389308837 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-72758311 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('|뺍/9aEM\' AS NUMERIC) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 1422492188 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1199647136'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1478849983 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1519678240 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1351096651, '396825978', x'2e9d4c5e')) NOT BETWEEN ((0.7326816873049092, x'', NULL)) AND ((0.570926224577768, x'', NULL)))) NOT BETWEEN (((((1.522417007E9)AND(x'')))OR('*es\0sajY'))) AND (((((-7067489.0)OR('1655816761')))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1345312213 0 sz=-1138439684 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')|('RUir~%ˬ8*')))OR(CASE WHEN 'ネ' THEN 0.11376291640147385 ELSE NULL END)))OR(((((x'')OR('-517790710')))AND(-1.494334975E9)))))OR((((NULL))!=(('-110810155'))))))OR(((x'')>=(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1231138012 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1407362481')) NOT BETWEEN ((CASE '17639327'  WHEN 1.507511245E9 THEN NULL ELSE NULL END)) AND ((((x'') NOT BETWEEN ('N鉩') AND (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1662097711'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (-1.742510392E9 IN ())  WHEN CASE WHEN x'b4359528' THEN 0.5362018708683413 ELSE '' END THEN ((((((((((((0.9039242680661951)AND('1152810172')))OR(0xd5894be)))OR(NULL)))OR(-1239897209)))AND('ngv#^\r')))OR('3w2u')) WHEN CAST('d?aAR' AS TEXT) THEN ((1.270857691E9) BETWEEN ('441122366') AND ('1345312213')) WHEN CAST(x'fa94' AS INTEGER) THEN ((((0.22751542080246612)AND('/*')))AND(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TOTAL_CHANGES())AND(((NULL) NOTNULL))))OR(((x'')||(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'9fdf')OR(NULL)))AND(0.021098299527795517))) BETWEEN (CASE -1.03477818E8  WHEN 0.9205891032378982 THEN NULL END) AND (LENGTH(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1492352848'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5033117203576803 AS REAL)) NOT BETWEEN ((+ (0xfffffffff7c18e87))) AND ('' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1907724620 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2073836256 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 1743253630 sz=-359946906 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-1942006080 sz=-1647358410 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2061650657 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1111133206'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2051352392 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1632249423 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((1454228389, 0.22044678286392094, 0.7181542668246689)) BETWEEN ((NULL, '-2031441612', NULL)) AND (('0.8064866124130267', NULL, '1507511245')))  WHEN (('5w')<(NULL)) THEN (('곞訇_')&(0.5564862051565962)) ELSE ((NULL)+(0.5524013666463552)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('1274329558'))=((''))) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-1230316897'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1784441574 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE '?#xv'  WHEN ' ' THEN 0.6676162878219355 WHEN 0.7059104102873428 THEN 'w' WHEN '*es\0sajY' THEN x'' ELSE '-1557435914' END  WHEN CAST(x'' AS NUMERIC) THEN NULL COLLATE RTRIM ELSE (((x''))<>((x''))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN ((+ (0.10257188573891318))) AND (TYPEOF(DISTINCT 0.034245353674547285))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-382018919' AS TEXT))LIKE(TIME(x'', '吰x믥(x?', ''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x''))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=1815385070 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-2080344026 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1980809607 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1568917838'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1639358970 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT CASE WHEN 1.377135606E9 THEN 710035806 WHEN 0.8161295283463231 THEN 0.4693965770236088 WHEN x'' THEN -0.0 ELSE x'daf6' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-2031441612 sz=-103477818 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-880865952 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=244742849 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1990091423 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-439534347 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('J ''U'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (NULL) AND (0.4125443113089736)))>>((NOT (-163273163)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=1104774804 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('G諜M' IN (0.22533839050410098, x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1256092046 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=602955135 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 2 sz=657847635 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-896089737') NOT BETWEEN (0.27730175456638606) AND ('-253018964'))  WHEN '-1088181026' COLLATE NOCASE THEN CASE '0.08881545534373392'  WHEN NULL THEN NULL END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1784533009 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-596401091'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(x'e809')))AND('947561019'))) NOT BETWEEN (CASE NULL  WHEN 0.6273067944474188 THEN -1939127774 WHEN x'' THEN '' WHEN NULL THEN x'' END) AND (((0.6393089913431087) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1634465196 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2029382975 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=500294690 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(CAST(NULL AS NUMERIC), 0.7641311719041463); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1066137309 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=104093092 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('M'))) NOT BETWEEN (((NULL)<<('*ﹴ[!?퀑?'))) AND (-1.494334975E9 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1539086192 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1507511245 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((x'')AND(x'')))OR('1034167666')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1956005975'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1619371039'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1683747329 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-854113520 -2109008724 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1400245410 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)OR(x'')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '824620263'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2028227741 sz=-455441255'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((((NULL))<((482146314))), NULL COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-609613776'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-1509100909 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-246819414'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-863737658 sz=-253018964 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 5ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-668342610 AS INTEGER))%((((0X502fd5d5, '1600350320', '~pc #\n*', 0Xa2f6668, 9.02192231E8)) NOT BETWEEN (('1054537752', '拄Zjv', x'', '[bXa', NULL)) AND ((0.6350948298359342, NULL, 496889798, 0.5203389961228247, x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=230965367'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=451833797 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5644392980258464))>=((NULL))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -1981751269 sz=1297628488 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1642510944 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-163735664'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '4 345558036 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((-1706612657)AND(LOWER(x''))))OR(((0.3839117666190147) IS TRUE))))OR((0xffffffff90d8248b IN (NULL)))))OR((((NULL)) NOT BETWEEN ((x'dc53')) AND (('-1354786121'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-423113679'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1387334215 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 464461307 sz=-827510579'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.9196461260928832 COLLATE NOCASE THEN ((('1961369087')) BETWEEN ((0.7871635302433108)) AND (('-1557435914'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'c8d86e66')OR(x'458c')))OR(x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-770963645'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '970616516'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1153852327'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1076209904 -1386990796 sz=64114743 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UPPER(NULL) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1174773756 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1952437403'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1600350320')OR('1192198713')))AND(x'')))/(LIKELIHOOD(x'd8a8', 0.15573244126319685))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.14207832287353428; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=127700428'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE BINARY AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-716582510 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-523600548 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1595147178'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '376451834 sz=9223372036854775807 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1557435914 sz=107161236'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1755696002 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('-253018964' IN ())  WHEN 'sV' THEN (x'67b0' IN ('Z	', x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1625477264 -978846985 sz=1619371039 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '595582351 sz=-1 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=1872637572 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE -1177321738  WHEN x'' THEN 0.8216074341540446 END  WHEN LIKELY(DISTINCT '0.8328279344523725') THEN (~ ('')) WHEN ((0x2fac05a7) NOTNULL) THEN NULL WHEN ((((NULL)OR('㳵e8~el')))OR('䞍S')) THEN CAST(x'' AS TEXT) ELSE NULL COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('27')) BETWEEN (((('minutes')>=(167182977)))) AND ((((x'fc82')>(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 -909448898 sz=-993054729 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1893933290'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '542512056 -1942006080 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1544877426 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 -1973234570 sz=418725297'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')&(x''))) NOT BETWEEN (((0.9116627146536275)IS(x''))) AND (((0x3d3971fe)>=(0.2077086488881672)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-668342610 2 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=691570351 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x41d98694)) NOT BETWEEN (((NULL IN ()))) AND (((- (609139677))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(DISTINCT NULL, 0.6098599376095625)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN '-1679344556' ELSE x'cdfc6c4c' END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'2848', 0.26333125104774524, NULL)) NOT BETWEEN ((CAST(-1.90772462E9 AS TEXT), (('TRUE')||('LH')), (('1468339614')/('1875495588')))) AND ((UNLIKELY(DISTINCT x''), ('|p&V(l' IN ()), ((0X14795857)>=(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-2070893925'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1111458950 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('&s3zKe') NOTNULL))<((('-1893933290') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-290281655 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1227391929 1231138012 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 sz=107161236 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X28e8ad5b)>=(('-1079026141' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1427636773 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5322721526219338; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0Xffffffffbf23acde) NOT BETWEEN ('1021736219') AND ('/]')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (NULL) AND (0.48397569641021665))) NOT BETWEEN (x'' COLLATE NOCASE) AND (CASE NULL  WHEN '-164967745' THEN x'44d5' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=107849437 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1256092046 851904661 sz=0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT UNLIKELY('0.8328279344523725')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -1668598113 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'e3c7429d') NOTNULL) COLLATE RTRIM COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT '0.8890567517576319', NULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL IN ()), CAST('1468339614' AS REAL), NULLIF(0.4392585740595343, NULL)))>(((NOT ('YT')), json_object(NULL, NULL), (0xffffffff915d7cdc IN (x'bc22'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-754944029 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=979641618 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=422070092 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('269858300')) NOT BETWEEN ((-1.638575047E9)) AND (('-463891283'))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-820241359 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE 1193229827  WHEN NULL THEN 1084699670 ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1110286312 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-143802142 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1 13650738 sz=2002365877'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 -1742554280 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) BETWEEN (CAST(x'' AS NUMERIC)) AND ((+ ('-818390936')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1207863957 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1507511245 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-800058029 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1638224046 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1907724620'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.7234745461131545 IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2116564150 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-642039640 sz=-1638575047 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-893215325'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT CAST('-3068970' AS BLOB), 0.9799489352728666); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1393808446 253864061 sz=-692258313'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1817768054 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.7269495232411427)==(0Xffffffffd829e6ae)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=478615437 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((UNLIKELY(DISTINCT 'f+'), CAST(-962366661 AS BLOB), ((x'')*(0.5408023019739864))))=(((((x'', '', x'674e')) NOT BETWEEN ((NULL, 0x57745aad, 0.26268510600670947)) AND ((NULL, -603115986, 0.9995351149608034))), json_array_length('807267185'), (((1.379286929E9, 'r(9', ''))<>((NULL, '-700739977', 'T0{')))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- ('-1332058634')))AND(COALESCE(DISTINCT NULL, '0.25847459579096255', NULL, '0.033867566448308684'))))OR(((('1271307073', '1568917838', '蚔e', NULL, x''))>((x'', 0.6434671401291183, -671663351, x'd15b', NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.706027025755564 COLLATE BINARY COLLATE BINARY COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.1665703950387546)) NOT BETWEEN (('-668342610')) AND (('-668342610'))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('') NOT BETWEEN (0Xffffffff8f725ec9) AND (NULL))))=((((0.6196836674123167) NOT BETWEEN (0.16779275005889804) AND ('cW*4'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-234364461'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1715294133 sz=230965367 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-395797015'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-977375767'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1568917838 sz=1580318662 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 sz=-1893933290 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=969122365 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((-426301370) NOT BETWEEN (NULL) AND ('{[')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)==(0.24300982909423685)))LIKE(0.7994827921362282)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'af05'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1860442771 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('TfG5' IN (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((0X219a9016 IN (0X6a604fe3, x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1752169154 sz=-1494334975 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-517790710')<>(x'a4884b32')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=139471097 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.7755512387930654 COLLATE BINARY AS REAL); -- 7ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1712001393 sz=1879955863'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '9223372036854775807 0 sz=-932578292 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=661385285 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-2031441612'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.90772462E9 COLLATE BINARY, CAST(NULL AS REAL), (- (x'72611b82'))))>=((CAST('FALSE' AS BLOB), (~ (0Xffffffff982366c8)), CAST(NULL AS REAL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'P!0嫢'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN x'' THEN 0.524350044187276 ELSE 0Xffffffff9aeb864e END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.377135606E9 IN ('', -4.18430358E8)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2065156517 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1386336599'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('724938569' IN (NULL))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(NULL COLLATE NOCASE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1379286929 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-547376598 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1600350320 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((NULL)AND('b0')))AND(NULL)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('yf]N') BETWEEN (x'') AND (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0Xffffffffd4d97b96))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1550995128'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1615818318 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1494334975 sz=-271281248'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1405963654'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 1585427544 sz=-1590767274'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) NOT BETWEEN (CASE x''  WHEN 0.17002262590221473 THEN 0.4577511331415369 WHEN '-2127258404' THEN '' WHEN '1608880662' THEN '-603115986' END) AND (((1.271307073E9)IS NOT(9.04641509E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-1.166240653E9 AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1384210924 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((((0.2192413945510585)OR(x'5cf4')))OR(x'')))AND(0.32682997654653545)))OR('0.25543018535497697')))AND(x'')))AND('657847635')), CAST(NULL AS TEXT), 0.10848088926250365, ((((0.3395314840649597)AND('0.5018913084422085')))AND('g(!f')), CAST('-1539708002' AS BLOB)))=(((NULL IN (NULL, x'')), CASE NULL  WHEN '[Q曈5' THEN -34953568 END, CAST('' AS TEXT), (((NULL, 0.22887387523313885, x''))=(('|#', '0.9445213054017286', '-418430358'))), (((0.3623787496596841)) BETWEEN ((x'25bf')) AND (('蜙/Q')))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x''  WHEN x'' THEN 0.47173967212078305 ELSE 'p}+(' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN x'' THEN x'5af6' ELSE '1857382461' END THEN (((('>3')OR(-1.834523943E9)))OR('')) WHEN load_extension(-1541243870) THEN '1921316472' COLLATE RTRIM WHEN (((('1019438399')OR('-33548456')))OR(NULL)) THEN LTRIM(x'', 0.35105865241246925) WHEN (+ (0.14605818893358857)) THEN CASE x'dae2'  WHEN x'bc25' THEN NULL WHEN 0x674ff0c7 THEN '' WHEN NULL THEN x'' WHEN NULL THEN 0.09799455665638712 WHEN x'' THEN x'2bf9' ELSE 'w,#' END WHEN ROUND(-1948239664, 0.990329255574446) THEN CAST('0.48200079354385583' AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=-111083185 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=282990847'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 sz=-1758443533 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '4 -1617466631 205281868 sz=-1617466631 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode(DATE(NULL, NULL, NULL), ((NULL)+(0.4221489074085797))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')%(0xffffffffb4402ef0)))>=(((0x384586d8) BETWEEN (NULL) AND ('jS')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1128516597'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((((((2.028353132E9)OR(x'')))OR(x'')))OR(NULL)))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT ((0.11796630031944488)<(x'3a86'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.45756412988869366)AND(NULL)))AND(1620261159)))<(json_object(NULL, '-566356597'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-530258987 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('\')>>(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.25543018535497697'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-9223372036854775808'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1231138012 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '1603156548 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=205281868 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1522417007 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-917861075 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-830116409 2 2 sz=500294690 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'6d27' IN ()) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((x'')) AND (((-8.87770231E8 IN (NULL, 0.35250752060092994))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=689869336'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1875352761'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN '胴bww' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-833554105 2 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1409265675') IS FALSE)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-277352985 sz=2053876670 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-638962670'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 sz=-253018964 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1377135606 sz=1231138012 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=399170001 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-827510579 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'6a9ac1a0' IN ()))>(CAST('-1' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=107161236 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=1593696127 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('729739083')IS NOT(0.38994056169936786)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '499003846 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7995362257733207)) NOT BETWEEN ((((NULL)IS(-2.028227741E9)))) AND ((((1593866470) IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-154846706 sz=1947702969 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1223640925 sz=1335750571 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.00430257268572265 IN ()))>>(((((0.27730175456638606)OR(0.513098353083936)))AND(0.6157777258544201)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.9957599255300571) BETWEEN (x'') AND ('0.7599077615834107')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN -6.03115986E8 ELSE x'3ed9' END)-((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-7067489 119524118 1593071894 sz=-1501135168 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 4 sz=-1723169396 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2129908804 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-311150318 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'2923')GLOB(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-16228810' THEN NULL END) NOT BETWEEN (LIKELY('')) AND (((('1507511245'))<=((1334376615))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('\nruxSr')) NOT BETWEEN ((((((0X7b17c9a5)OR(0.98167726419393)))OR(0.9657220879970957)))) AND (((('	j') BETWEEN (NULL) AND (''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-379004317 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((((NULL)OR(x'')))AND(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1512997048'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(x''))*(ROUND(NULL, x'f655'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1576506647 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-584714085'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=651745740 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1595356652 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1500819283 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1575834412 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-1056319961 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1974761097 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1152304664 sz=636182804 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=1845421496 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -827510579 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((x'') BETWEEN (NULL) AND (x'b044'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'ebe8', '')) NOT BETWEEN ((((((((((x'')OR('')))AND(x'')))OR(x'')))OR(NULL)), json_array_length(NULL), CAST(NULL AS TEXT))) AND ((CAST('177706784' AS TEXT), 0.6591038928308455, ((NULL)AND('-517790710'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))OR(((x'563a') BETWEEN (NULL) AND (-480441394)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('299969763') BETWEEN (NULL) AND ('-45242897')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL))<>((x'')))))=((((x'')&('-831449502'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.6446402335763269)*('\n'))))!=(('-125725132'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=205281868 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=205281868 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<<(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1166240653 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-668342610 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '935442791 sz=-353906232 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=1586664454 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))==((~ (0.9344099391590623)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '605380921 sz=-1616613781 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '345558036 sz=-1862367931 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1859901550 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 -23692334'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1217598184 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1611358702 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('') BETWEEN (x'bbbe') AND ('/85겻9Ge㈁F')))AND('1674907951')))AND(((0.5803274980187318)IS NOT(x'5942')))))AND((((''))>((NULL))))))OR(((0Xffffffffb03ab91d)%(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '1212826626 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1834523943 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(x'' AS NUMERIC))OR(((NULL) IS FALSE))))OR((('	\')=(0.6486594788407353)))))AND((((((((('-1011111070')AND('345558036')))AND('')))OR(0x5d83c94e)))OR('now')))))AND(((('-516989332', 0Xffffffffefb1db56, '1Q''_JEiCq'))!=((330359167, NULL, '-1034930812'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'84b6' IN ())))<((TRIM(DISTINCT ',R', 0x53cd4d86)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('9U<Q')AND('nI')))AND(NULL)) COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'9027' THEN 0X498336c2 ELSE NULL END)<<(CASE '[mY튿)'  WHEN 0x6085a41f THEN '-1399947070' END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 -1999500302 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1952507426; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-584714085 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT NULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1817768054 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1673078214 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (x'db28') AND ('Infinitya堂賏 fg')))>((('H%a') NOT BETWEEN (NULL) AND ('')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1252803217 -743077337 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('M],O~M')))<<(CAST('893194463' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1009262075 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 294471832 sz=937044651 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'4845'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT 0X5fef7202, x''))!=(((((x'')AND(x'')))AND('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1875696150 sz=-253018964'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(CAST(NULL AS TEXT)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1706141239 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL))) NOT BETWEEN (SUBSTR(NULL, '')) AND (-1.758443533E9 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1742510392'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1.539708002E9)-(x'')))AND(COALESCE(DISTINCT 9.04641509E8, x'2cf7'))))OR('-355303604')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.11662825315176228 AS INTEGER) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '896988564 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=1893663599 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'3945' AS REAL) IN ((+ (-741107618)), ((((((((x'c1f3')AND('-1530042874')))AND(0Xffffffff828c3c5a)))AND(0.8248782226030184)))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=-761936180 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1784907047 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2018929909 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0Xe523764 COLLATE RTRIM))==((((((((((NULL)AND('0.0')))OR('299969763')))AND(1.270857691E9)))OR(x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.4075636714214931; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X5660180d)AND(0.36347223366375936))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '41002009'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '807267185 sz=-1406681310 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '35386457'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'24fe') NOTNULL)) BETWEEN (CAST('-507914939' AS REAL)) AND (((((0xffffffffaec3ae24)OR(NULL)))AND(0.7417213857157311)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '6 sz=-1539708002 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 -1034930812 sz=204327263 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1558182727'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1430015846' IN (x'13cb')))IS NOT(0.3432932278790386 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' COLLATE BINARY, '' COLLATE NOCASE, ((x'68d5')+(0.027405369829062054))))!=((((((x'')OR('1179369970')))OR(0xffffffff99eaf3a4)), CAST(0.1287159428031167 AS INTEGER), ((0.9179412664348178)=(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x'')) NOT BETWEEN (('S￿j&a')) AND (('-1088035647')))  WHEN ((((NULL)OR(NULL)))AND(0.9079970424426891)) THEN (- ('-1256883266')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1878064738'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-78727095 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1104774804 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL))>=((0.645281411652601))) IN (((x'') NOT BETWEEN (425457048) AND (0.4753690431422033)), (('2104204214')*(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=474009305 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=192790516 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-55076083 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1282358243 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x3fbb1e95; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1401927516 0 sz=-603115986 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1991530226 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1964279663 1645448973 sz=1544135077 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT json_valid(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-2031441612 sz=807267185 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN ((CASE x''  WHEN NULL THEN 0.6609645559978229 WHEN -8.87770231E8 THEN 1458292849 WHEN x'' THEN 0xffffffffab8f08ef END)) AND ((((x'')|(0.44560739354761647))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.3457892E7)) NOT BETWEEN (('')) AND (((0xffffffff855ff93a IN (0.7712875434047536))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1252803217'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-7067489' COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1850541727 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE -831449502 COLLATE NOCASE  WHEN ((NULL)AND(NULL)) THEN (x'4fb5' IN ()) WHEN PRINTF(0.610240906622982) THEN 'u''6Z' WHEN ((0.052256415407352375)<(NULL)) THEN ((NULL)IS('-1361262067')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((('-1834523943')) BETWEEN ((x'')) AND ((0.7631455170108151))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1739880634 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('-896089737'))==(('-1048358094'))) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1618413745 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' COLLATE NOCASE THEN (+ (NULL)) ELSE CAST('237979760' AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((2.022361E8)OR('0.6234388787426207')))OR('1743253630')))<(((((0.3368409129647847)AND('_P䷕f硭p')))AND(0x502fd5d5)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=901828999 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-136790746 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.0) BETWEEN (NULL) AND ('5h⺢tX2]')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 sz=1507511245 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '1448090973 sz=922604049 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('291541471', 0X1498cc14, x'1873'))!=((0.36106134278473845, 0.8891777110765594, x'ba28')))) BETWEEN ((('	R4fͨ<,㽧v') BETWEEN ('1620943030') AND (NULL))) AND (((1.380036691E9)<=('nl')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'5573')) NOT BETWEEN (((('1312203528') NOT BETWEEN ('807267185') AND (x'')))) AND ((CAST('&?' AS TEXT)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((-2098929527) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-831449502 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1574160559 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-761936180'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1324163301 0 sz=-833554105 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'6c76'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (NULL) AND (NULL)))%(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'ngv#D\r' THEN '-731332134' WHEN '2030213305' THEN NULL WHEN '觟*軶E<>' THEN 'FALSE' WHEN -1639358970 THEN 0Xffffffff811e39df WHEN NULL THEN '3eu' ELSE '' END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1925769609 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-190582439 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 1950136256 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1862367931'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-2060356164 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-1530042874 sz=-22645749 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1862367931 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '1838416900 sz=-586825798'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1371876436'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xfffffffff0eb3cac)<=(0.34781117663908667)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1926574536') NOT BETWEEN (x'') AND (0.9928544984021729))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-33951326 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1282358243 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('998000184') NOT BETWEEN (0.2639350777104734) AND (x'e1e7')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('ꔗT')) BETWEEN ((((1.282358243E9) NOTNULL))) AND ((CASE '1171708266'  WHEN 0.4714935323602585 THEN NULL END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-849073226'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1673078214 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=-813699435 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-55076083')IS NOT(0.27300682793149933)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1600350320'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1817768054 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1049230979 sz=-569907046'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=522480680 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1507511245'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT (('0.8538454247194246')>=('-55076083'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '1290810977 -482239514 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '4 1197044460 sz=661385285 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (0Xffffffffd3be40ed)) THEN CAST('' AS NUMERIC) ELSE ((NULL) ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) BETWEEN (('-1439902409' IN ())) AND (((-844634731)GLOB(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2134943779 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-603115986' IN ())) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1841491714 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(0X6e6c892 COLLATE NOCASE, 0.0877006142041531); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1274329558'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-584714085 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-1163184175 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1290878827'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-668342610'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 241119767 sz=-437655171'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1541249696 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((CAST(NULL AS INTEGER))) AND ((((((0x348de7c5)AND(1795664968)))OR(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('1407083615' AS TEXT) COLLATE NOCASE COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((0.8032331843820765) NOT BETWEEN (0.28776987509875673) AND (NULL)))) AND ((((0.8791347869937355)==(''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE RTRIM THEN CASE WHEN NULL THEN 1575435959 WHEN 'h蚾HVt' THEN '1752169154' WHEN '㜹t' THEN -517790710 WHEN '1212794377' THEN 'T' WHEN '0.35359651299023476' THEN 2.30965367E8 END END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1741782180'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1877760680 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (LOWER(DISTINCT 'MINUTES'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('''-#\rr' AS BLOB)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2096060682 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)&(x'faac'))) NOT BETWEEN (CAST('-1531049675' AS TEXT)) AND (0xffffffffea67cc12)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>(NULL)))*(((-1.94200608E9)>(0.5942429612644652)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '6 sz=-1662097711 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.231138012E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=657847635 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.5047495982967095 AS NUMERIC) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1742510392 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=332444762'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-34901588' AS BLOB) IN (((-338455631)<=(0.7179435285676491)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN NULL ELSE x'' END) NOT BETWEEN (((NULL)>>(1231138012))) AND ((((('1271307073')OR(x'')))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-603115986 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0Xffffffffa4cd6606)%(0.026630928446828683)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.3457892E7; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1684751131 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6132447003037333; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=299969763 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=910278277 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '43a䶺wy'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1053545609 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN ())  WHEN ('nRwDPRi[' IN ('&3t', '-9223372036854775808')) THEN (('-1288391727') ISNULL) WHEN ((x'') NOT BETWEEN ('4') AND (x'')) THEN -1520069903 COLLATE BINARY WHEN LIKE('300050551', NULL, 'T') THEN HEX(DISTINCT NULL) ELSE (x'' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1862367931 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-871538917 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 sz=322926911 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1698955037 -2009931002 sz=1379286929 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-1738165147 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA temp.threads; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='-1758443533', c0=0.7789222105680378 WHERE (+ (CAST(rt0.c0 AS REAL))); -- 1ms;
ANALYZE; -- 2ms;
UPDATE OR IGNORE rt0 SET c2=NULL WHERE (~ ('F7P邌u?%Q>' COLLATE RTRIM)); -- 1ms;
UPDATE rt0 SET c0=''; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.9152938881042533; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=''; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (NULL, x'', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('|韠/WRsj', 0.9908195662429224, x'ede6'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c1, c2)=(NULL, 1.817768054E9, 0.9352962581652341); -- 0ms;
INSERT OR FAIL INTO rt0 VALUES (x'', NULL, 0.7382808212509854); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (0X53cd4d86); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 1ms;
INSERT OR FAIL INTO rt0(c1, c2) VALUES (NULL, 0Xffffffffd295c6cc), (NULL, x'7598'), ('0.4679486326594847', 0.842964788708246); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (NULL, x''); -- 8ms;
UPDATE OR IGNORE rt0 SET (c1)=(x'7506') WHERE x'37212fe6'; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 TEXT COLLATE NOCASE ); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE ((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t0.c0)=(t0.c0))) AND (((t0.c0)<<(t0.c0)))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 1ms;
INSERT OR REPLACE INTO t0 VALUES (''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.9955047968837503); -- 0ms;
DROP TABLE IF EXISTS vt1; -- 19ms;
UPDATE rt0 SET c2=NULL; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4); -- 21ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES (0xffffffffdd25f89b, 0.7115583011421777, NULL), (0.3568698714074737, 0.6514041627231516, x''), ('-678872648', NULL, 0.46762191344411963); -- 0ms;
UPDATE OR IGNORE t1 SET (c0, c0)=(0.47948118406117224, 0.4693965770236088) WHERE LIKELY(LOWER(t1.c0)); -- 0ms;
UPDATE OR FAIL rt0 SET (c2)=(NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.4351080442462637 AS BLOB) IN ((((((((('')OR(NULL)))AND(0.03824687825033524)))OR(0.45219590850927205)))AND(0.529045888460338)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 0ms;
UPDATE OR IGNORE rt1 SET c3=0.9868868043116523; -- 1ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c6; -- 1ms;
PRAGMA temp.optimize; -- 0ms;
ANALYZE rt0; -- 4ms;
UPDATE OR IGNORE rt0 SET c1=NULL; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c6) VALUES (NULL), (998610600), ('1을'); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c6 TO c41; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'1276', c1=0xffffffffb990d9b7 WHERE (~ (((rt0.c2)LIKE(rt0.c2)))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t1, rt1, rt0 WHERE (CAST(((rt1.c2)LIKE(rt1.c2)) AS REAL)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)LIKE(rt1.c2)) AS REAL)) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM t1, rt1, rt0 WHERE (CAST(((rt1.c2)LIKE(rt1.c2)) AS REAL)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)LIKE(rt1.c2)) AS REAL)) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM t1, rt1, rt0 WHERE (CAST(((rt1.c2)LIKE(rt1.c2)) AS REAL)) ORDER BY x''  NULLS LAST;
SELECT * FROM t1 CROSS JOIN rt1 ON (((t1.c41)>(t1.c41)) IN ()) WHERE (((((((((((rt1.c3) IS FALSE))AND(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)))))AND((('1252803217')+(rt1.c4)))))OR(CASE t1.c41  WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END)))AND(((rt1.c3) NOT BETWEEN (t1.c41) AND (rt1.c0))))) ORDER BY CAST((rt1.c4 IN ()) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c3) IS FALSE))AND(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)))))AND((('1252803217')+(rt1.c4)))))OR(CASE t1.c41  WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END)))AND(((rt1.c3) NOT BETWEEN (t1.c41) AND (rt1.c0))))) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON (((t1.c41)>(t1.c41)) IN ()) ORDER BY CAST((rt1.c4 IN ()) AS INTEGER)  NULLS LAST);
SELECT * FROM t1 CROSS JOIN rt1 ON (((t1.c41)>(t1.c41)) IN ()) WHERE (((((((((((rt1.c3) IS FALSE))AND(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)))))AND((('1252803217')+(rt1.c4)))))OR(CASE t1.c41  WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END)))AND(((rt1.c3) NOT BETWEEN (t1.c41) AND (rt1.c0))))) ORDER BY CAST((rt1.c4 IN ()) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c3) IS FALSE))AND(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)))))AND((('1252803217')+(rt1.c4)))))OR(CASE t1.c41  WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END)))AND(((rt1.c3) NOT BETWEEN (t1.c41) AND (rt1.c0))))) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON (((t1.c41)>(t1.c41)) IN ()) ORDER BY CAST((rt1.c4 IN ()) AS INTEGER)  NULLS LAST);
SELECT * FROM t1 CROSS JOIN rt1 ON (((t1.c41)>(t1.c41)) IN ()) WHERE (((((((((((rt1.c3) IS FALSE))AND(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)))))AND((('1252803217')+(rt1.c4)))))OR(CASE t1.c41  WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END)))AND(((rt1.c3) NOT BETWEEN (t1.c41) AND (rt1.c0))))) ORDER BY CAST((rt1.c4 IN ()) AS INTEGER)  NULLS LAST;
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON (NOT ((((rt0.c1, rt0.c0, t1.c41))<=((rt0.c2, rt0.c1, x'92f7'))))) WHERE (((rt0.c2)IS(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (NOT ((((rt0.c1, rt0.c0, t1.c41))<=((rt0.c2, rt0.c1, x'92f7'))))));
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON (NOT ((((rt0.c1, rt0.c0, t1.c41))<=((rt0.c2, rt0.c1, x'92f7'))))) WHERE (((rt0.c2)IS(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (NOT ((((rt0.c1, rt0.c0, t1.c41))<=((rt0.c2, rt0.c1, x'92f7'))))));
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON (NOT ((((rt0.c1, rt0.c0, t1.c41))<=((rt0.c2, rt0.c1, x'92f7'))))) WHERE (((rt0.c2)IS(rt0.c1)) COLLATE RTRIM);
SELECT * FROM rt0, rt1, t1 WHERE (((((rt0.c1)/(rt0.c0))) NOTNULL)) ORDER BY ((('1282358243' IN ()))||(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c4))))  NULLS LAST, (((- (rt1.c1)))LIKE(((t1.c41) IS FALSE))) DESC, (NOT (((x'e4f3')*(rt0.c1))))  NULLS LAST, ((((NULL) NOT NULL)) NOT BETWEEN (CASE WHEN rt1.c2 THEN 0.6331125795188143 END) AND (NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)/(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((('1282358243' IN ()))||(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c4))))  NULLS LAST, (((- (rt1.c1)))LIKE(((t1.c41) IS FALSE))) DESC, (NOT (((x'e4f3')*(rt0.c1))))  NULLS LAST, ((((NULL) NOT NULL)) NOT BETWEEN (CASE WHEN rt1.c2 THEN 0.6331125795188143 END) AND (NULL)) DESC  NULLS LAST);
SELECT * FROM rt0, rt1, t1 WHERE (((((rt0.c1)/(rt0.c0))) NOTNULL)) ORDER BY ((('1282358243' IN ()))||(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c4))))  NULLS LAST, (((- (rt1.c1)))LIKE(((t1.c41) IS FALSE))) DESC, (NOT (((x'e4f3')*(rt0.c1))))  NULLS LAST, ((((NULL) NOT NULL)) NOT BETWEEN (CASE WHEN rt1.c2 THEN 0.6331125795188143 END) AND (NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)/(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((('1282358243' IN ()))||(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c4))))  NULLS LAST, (((- (rt1.c1)))LIKE(((t1.c41) IS FALSE))) DESC, (NOT (((x'e4f3')*(rt0.c1))))  NULLS LAST, ((((NULL) NOT NULL)) NOT BETWEEN (CASE WHEN rt1.c2 THEN 0.6331125795188143 END) AND (NULL)) DESC  NULLS LAST);
SELECT * FROM rt0, rt1, t1 WHERE (((((rt0.c1)/(rt0.c0))) NOTNULL)) ORDER BY ((('1282358243' IN ()))||(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c4))))  NULLS LAST, (((- (rt1.c1)))LIKE(((t1.c41) IS FALSE))) DESC, (NOT (((x'e4f3')*(rt0.c1))))  NULLS LAST, ((((NULL) NOT NULL)) NOT BETWEEN (CASE WHEN rt1.c2 THEN 0.6331125795188143 END) AND (NULL)) DESC  NULLS LAST;
SELECT ALL * FROM t1, rt0 WHERE (((((NULLIF(t1.c41, rt0.c2))AND(CAST(t1.c41 AS REAL))))OR(t1.c41)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(t1.c41, rt0.c2))AND(CAST(t1.c41 AS REAL))))OR(t1.c41))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (((((NULLIF(t1.c41, rt0.c2))AND(CAST(t1.c41 AS REAL))))OR(t1.c41)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(t1.c41, rt0.c2))AND(CAST(t1.c41 AS REAL))))OR(t1.c41))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (((((NULLIF(t1.c41, rt0.c2))AND(CAST(t1.c41 AS REAL))))OR(t1.c41)));
SELECT ALL * FROM rt0, t1 WHERE ((((rt0.c2)LIKE(t1.c41)) IN (((t1.c41)<=(rt0.c0))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)LIKE(t1.c41)) IN (((t1.c41)<=(rt0.c0))))) IS TRUE)  as count FROM rt0, t1 ORDER BY (((rt0.c1)) NOT BETWEEN ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END))));
SELECT ALL * FROM rt0, t1 WHERE ((((rt0.c2)LIKE(t1.c41)) IN (((t1.c41)<=(rt0.c0))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)LIKE(t1.c41)) IN (((t1.c41)<=(rt0.c0))))) IS TRUE)  as count FROM rt0, t1 ORDER BY (((rt0.c1)) NOT BETWEEN ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END))));
SELECT ALL * FROM rt0, t1 WHERE ((((rt0.c2)LIKE(t1.c41)) IN (((t1.c41)<=(rt0.c0))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT ALL * FROM t1, rt0, rt1 WHERE (UNLIKELY(DISTINCT CAST(0.2651320844683326 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CAST(0.2651320844683326 AS BLOB))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE (UNLIKELY(DISTINCT CAST(0.2651320844683326 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CAST(0.2651320844683326 AS BLOB))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE (UNLIKELY(DISTINCT CAST(0.2651320844683326 AS BLOB)));
SELECT ALL * FROM t1, rt0 WHERE ((((rt0.c1))>=((''))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1))>=(('')))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE ((((rt0.c1))>=((''))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1))>=(('')))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE ((((rt0.c1))>=((''))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON ((x'')-(0.3367938651398813)) WHERE (((((rt0.c1)IS NOT(rt1.c4)))GLOB(x'd9fc'))) ORDER BY ((((rt1.c0)/(rt1.c4))) IS FALSE) DESC  NULLS LAST, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(rt1.c4)))GLOB(x'd9fc'))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((x'')-(0.3367938651398813)) ORDER BY ((((rt1.c0)/(rt1.c4))) IS FALSE) DESC  NULLS LAST, x'' ASC);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON ((x'')-(0.3367938651398813)) WHERE (((((rt0.c1)IS NOT(rt1.c4)))GLOB(x'd9fc'))) ORDER BY ((((rt1.c0)/(rt1.c4))) IS FALSE) DESC  NULLS LAST, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(rt1.c4)))GLOB(x'd9fc'))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((x'')-(0.3367938651398813)) ORDER BY ((((rt1.c0)/(rt1.c4))) IS FALSE) DESC  NULLS LAST, x'' ASC);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON ((x'')-(0.3367938651398813)) WHERE (((((rt0.c1)IS NOT(rt1.c4)))GLOB(x'd9fc'))) ORDER BY ((((rt1.c0)/(rt1.c4))) IS FALSE) DESC  NULLS LAST, x'' ASC;
SELECT ALL * FROM t1 WHERE (CASE (((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, t1.c41, t1.c41)))  WHEN NULL THEN ((t1.c41) NOTNULL) ELSE ((t1.c41) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, t1.c41, t1.c41)))  WHEN NULL THEN ((t1.c41) NOTNULL) ELSE ((t1.c41) IS FALSE) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE (((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, t1.c41, t1.c41)))  WHEN NULL THEN ((t1.c41) NOTNULL) ELSE ((t1.c41) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, t1.c41, t1.c41)))  WHEN NULL THEN ((t1.c41) NOTNULL) ELSE ((t1.c41) IS FALSE) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE (((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, t1.c41, t1.c41)))  WHEN NULL THEN ((t1.c41) NOTNULL) ELSE ((t1.c41) IS FALSE) END);
SELECT COUNT(*) FROM t1 WHERE ((((('') NOT BETWEEN (t1.c41) AND (t1.c41))) IS FALSE)) ORDER BY (((t1.c41)) BETWEEN ((((x'')&(t1.c41)))) AND ((CASE WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 END)));
SELECT SUM(count) FROM (SELECT ALL (((((('') NOT BETWEEN (t1.c41) AND (t1.c41))) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c41)) BETWEEN ((((x'')&(t1.c41)))) AND ((CASE WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 END))));
SELECT COUNT(*) FROM t1 WHERE ((((('') NOT BETWEEN (t1.c41) AND (t1.c41))) IS FALSE)) ORDER BY (((t1.c41)) BETWEEN ((((x'')&(t1.c41)))) AND ((CASE WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 END)));
SELECT SUM(count) FROM (SELECT ALL (((((('') NOT BETWEEN (t1.c41) AND (t1.c41))) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c41)) BETWEEN ((((x'')&(t1.c41)))) AND ((CASE WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 END))));
SELECT COUNT(*) FROM t1 WHERE ((((('') NOT BETWEEN (t1.c41) AND (t1.c41))) IS FALSE)) ORDER BY (((t1.c41)) BETWEEN ((((x'')&(t1.c41)))) AND ((CASE WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 END)));
SELECT ALL * FROM rt0 INNER JOIN t1 ON CASE WHEN (((rt1.c3, rt0.c2, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c0, rt1.c0)) AND ((1752169154, rt1.c3, rt1.c2))) THEN (((rt0.c0)) NOT BETWEEN (('309373210')) AND ((rt0.c0))) ELSE (rt1.c3 IN ()) END INNER JOIN rt1 ON (((t1.c41)) NOT BETWEEN ((((rt1.c1)IS(rt0.c0)))) AND (((((rt0.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c1)))))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON CASE WHEN (((rt1.c3, rt0.c2, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c0, rt1.c0)) AND ((1752169154, rt1.c3, rt1.c2))) THEN (((rt0.c0)) NOT BETWEEN (('309373210')) AND ((rt0.c0))) ELSE (rt1.c3 IN ()) END INNER JOIN rt1 ON (((t1.c41)) NOT BETWEEN ((((rt1.c1)IS(rt0.c0)))) AND (((((rt0.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c1)))))));
SELECT ALL * FROM rt0 INNER JOIN t1 ON CASE WHEN (((rt1.c3, rt0.c2, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c0, rt1.c0)) AND ((1752169154, rt1.c3, rt1.c2))) THEN (((rt0.c0)) NOT BETWEEN (('309373210')) AND ((rt0.c0))) ELSE (rt1.c3 IN ()) END INNER JOIN rt1 ON (((t1.c41)) NOT BETWEEN ((((rt1.c1)IS(rt0.c0)))) AND (((((rt0.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c1)))))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON CASE WHEN (((rt1.c3, rt0.c2, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c0, rt1.c0)) AND ((1752169154, rt1.c3, rt1.c2))) THEN (((rt0.c0)) NOT BETWEEN (('309373210')) AND ((rt0.c0))) ELSE (rt1.c3 IN ()) END INNER JOIN rt1 ON (((t1.c41)) NOT BETWEEN ((((rt1.c1)IS(rt0.c0)))) AND (((((rt0.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c1)))))));
SELECT ALL * FROM rt0 INNER JOIN t1 ON CASE WHEN (((rt1.c3, rt0.c2, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c0, rt1.c0)) AND ((1752169154, rt1.c3, rt1.c2))) THEN (((rt0.c0)) NOT BETWEEN (('309373210')) AND ((rt0.c0))) ELSE (rt1.c3 IN ()) END INNER JOIN rt1 ON (((t1.c41)) NOT BETWEEN ((((rt1.c1)IS(rt0.c0)))) AND (((((rt0.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c1)))))) WHERE (rt0.c1);
SELECT ALL * FROM rt0, rt1, t1 WHERE (((CAST(t1.c41 AS TEXT))>=((+ (rt1.c4))))) ORDER BY (((rt1.c2)) BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((((0.4449026971045791)<(rt1.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c41 AS TEXT))>=((+ (rt1.c4))))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY (((rt1.c2)) BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((((0.4449026971045791)<(rt1.c2))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, t1 WHERE (((CAST(t1.c41 AS TEXT))>=((+ (rt1.c4))))) ORDER BY (((rt1.c2)) BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((((0.4449026971045791)<(rt1.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c41 AS TEXT))>=((+ (rt1.c4))))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY (((rt1.c2)) BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((((0.4449026971045791)<(rt1.c2))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, t1 WHERE (((CAST(t1.c41 AS TEXT))>=((+ (rt1.c4))))) ORDER BY (((rt1.c2)) BETWEEN ((CAST(rt0.c0 AS TEXT))) AND ((((0.4449026971045791)<(rt1.c2))))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN ((((rt0.c0)AND(NULL)))OR(rt0.c1)) THEN CAST(NULL AS REAL) WHEN rt0.c2 COLLATE RTRIM THEN SQLITE_VERSION() WHEN rt0.c0 THEN x'' END) ORDER BY (+ (UNICODE(rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN ())  WHEN ((((rt0.c0)AND(NULL)))OR(rt0.c1)) THEN CAST(NULL AS REAL) WHEN rt0.c2 COLLATE RTRIM THEN SQLITE_VERSION() WHEN rt0.c0 THEN x'' END) IS TRUE)  as count FROM rt0 ORDER BY (+ (UNICODE(rt0.c1)))  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN ((((rt0.c0)AND(NULL)))OR(rt0.c1)) THEN CAST(NULL AS REAL) WHEN rt0.c2 COLLATE RTRIM THEN SQLITE_VERSION() WHEN rt0.c0 THEN x'' END) ORDER BY (+ (UNICODE(rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN ())  WHEN ((((rt0.c0)AND(NULL)))OR(rt0.c1)) THEN CAST(NULL AS REAL) WHEN rt0.c2 COLLATE RTRIM THEN SQLITE_VERSION() WHEN rt0.c0 THEN x'' END) IS TRUE)  as count FROM rt0 ORDER BY (+ (UNICODE(rt0.c1)))  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN ((((rt0.c0)AND(NULL)))OR(rt0.c1)) THEN CAST(NULL AS REAL) WHEN rt0.c2 COLLATE RTRIM THEN SQLITE_VERSION() WHEN rt0.c0 THEN x'' END) ORDER BY (+ (UNICODE(rt0.c1)))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((NULL)|(rt1.c0 COLLATE RTRIM))) ORDER BY rt1.c4 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)|(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c4 DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((NULL)|(rt1.c0 COLLATE RTRIM))) ORDER BY rt1.c4 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)|(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c4 DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((NULL)|(rt1.c0 COLLATE RTRIM))) ORDER BY rt1.c4 DESC  NULLS LAST;
SELECT * FROM rt1 WHERE ((~ ((0Xffffffff83f6512c IN (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((0xffffffff83f6512c IN (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((~ ((0Xffffffff83f6512c IN (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((0xffffffff83f6512c IN (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((~ ((0Xffffffff83f6512c IN (rt1.c1)))));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (((rt1.c0 IN ()))>=((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))) WHERE (rt1.c1) ORDER BY (((rt1.c3, rt1.c1, '')) BETWEEN ((((((((((rt1.c4)OR(rt1.c0)))AND(rt1.c2)))OR(rt0.c0)))AND(rt1.c3)), NULLIF(NULL, NULL), rt1.c0 COLLATE NOCASE)) AND ((CAST(rt1.c0 AS REAL), (~ (rt0.c1)), rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((rt1.c0 IN ()))>=((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))) ORDER BY (((rt1.c3, rt1.c1, '')) BETWEEN ((((((((((rt1.c4)OR(rt1.c0)))AND(rt1.c2)))OR(rt0.c0)))AND(rt1.c3)), NULLIF(NULL, NULL), rt1.c0 COLLATE NOCASE)) AND ((CAST(rt1.c0 AS REAL), (~ (rt0.c1)), rt0.c0))));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (((rt1.c0 IN ()))>=((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))) WHERE (rt1.c1) ORDER BY (((rt1.c3, rt1.c1, '')) BETWEEN ((((((((((rt1.c4)OR(rt1.c0)))AND(rt1.c2)))OR(rt0.c0)))AND(rt1.c3)), NULLIF(NULL, NULL), rt1.c0 COLLATE NOCASE)) AND ((CAST(rt1.c0 AS REAL), (~ (rt0.c1)), rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((rt1.c0 IN ()))>=((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))) ORDER BY (((rt1.c3, rt1.c1, '')) BETWEEN ((((((((((rt1.c4)OR(rt1.c0)))AND(rt1.c2)))OR(rt0.c0)))AND(rt1.c3)), NULLIF(NULL, NULL), rt1.c0 COLLATE NOCASE)) AND ((CAST(rt1.c0 AS REAL), (~ (rt0.c1)), rt0.c0))));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (((rt1.c0 IN ()))>=((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))) WHERE (rt1.c1) ORDER BY (((rt1.c3, rt1.c1, '')) BETWEEN ((((((((((rt1.c4)OR(rt1.c0)))AND(rt1.c2)))OR(rt0.c0)))AND(rt1.c3)), NULLIF(NULL, NULL), rt1.c0 COLLATE NOCASE)) AND ((CAST(rt1.c0 AS REAL), (~ (rt0.c1)), rt0.c0)));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t1 ON (- ((((rt1.c4))<>((rt1.c3))))) WHERE (rt1.c3) ORDER BY (((HEX(DISTINCT rt1.c3)))>((((((rt1.c3)OR(rt1.c1)))OR(rt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON (- ((((rt1.c4))<>((rt1.c3))))) ORDER BY (((HEX(DISTINCT rt1.c3)))>((((((rt1.c3)OR(rt1.c1)))OR(rt1.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t1 ON (- ((((rt1.c4))<>((rt1.c3))))) WHERE (rt1.c3) ORDER BY (((HEX(DISTINCT rt1.c3)))>((((((rt1.c3)OR(rt1.c1)))OR(rt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON (- ((((rt1.c4))<>((rt1.c3))))) ORDER BY (((HEX(DISTINCT rt1.c3)))>((((((rt1.c3)OR(rt1.c1)))OR(rt1.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t1 ON (- ((((rt1.c4))<>((rt1.c3))))) WHERE (rt1.c3) ORDER BY (((HEX(DISTINCT rt1.c3)))>((((((rt1.c3)OR(rt1.c1)))OR(rt1.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (0.9077456639713497) ORDER BY CAST(rt1.c3 COLLATE BINARY AS REAL);
SELECT SUM(count) FROM (SELECT ((0.9077456639713497) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY CAST(rt1.c3 COLLATE BINARY AS REAL));
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (0.9077456639713497) ORDER BY CAST(rt1.c3 COLLATE BINARY AS REAL);
SELECT SUM(count) FROM (SELECT ((0.9077456639713497) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY CAST(rt1.c3 COLLATE BINARY AS REAL));
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (0.9077456639713497) ORDER BY CAST(rt1.c3 COLLATE BINARY AS REAL);
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c0, '-700739977', rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, 0.1597653046578692)) AND ((rt0.c0, NULL, rt0.c1)))))) ORDER BY ((CAST(rt0.c0 AS TEXT)) IS TRUE)  NULLS LAST, ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (x'4f69') AND (rt0.c0)) DESC, (('.3')%(((rt0.c0)>=(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c0, '-700739977', rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, 0.1597653046578692)) AND ((rt0.c0, NULL, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS TEXT)) IS TRUE)  NULLS LAST, ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (x'4f69') AND (rt0.c0)) DESC, (('.3')%(((rt0.c0)>=(rt0.c2))))  NULLS LAST);
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c0, '-700739977', rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, 0.1597653046578692)) AND ((rt0.c0, NULL, rt0.c1)))))) ORDER BY ((CAST(rt0.c0 AS TEXT)) IS TRUE)  NULLS LAST, ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (x'4f69') AND (rt0.c0)) DESC, (('.3')%(((rt0.c0)>=(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c0, '-700739977', rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, 0.1597653046578692)) AND ((rt0.c0, NULL, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS TEXT)) IS TRUE)  NULLS LAST, ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (x'4f69') AND (rt0.c0)) DESC, (('.3')%(((rt0.c0)>=(rt0.c2))))  NULLS LAST);
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c0, '-700739977', rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, 0.1597653046578692)) AND ((rt0.c0, NULL, rt0.c1)))))) ORDER BY ((CAST(rt0.c0 AS TEXT)) IS TRUE)  NULLS LAST, ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (x'4f69') AND (rt0.c0)) DESC, (('.3')%(((rt0.c0)>=(rt0.c2))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(rt0.c2, 0.37068190851216065) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(rt0.c2, 0.37068190851216065) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(rt0.c2, 0.37068190851216065) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(rt0.c2, 0.37068190851216065) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(rt0.c2, 0.37068190851216065) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((TRIM(DISTINCT rt1.c1, rt1.c2))>=(QUOTE(rt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((TRIM(DISTINCT rt1.c1, rt1.c2))>=(QUOTE(rt1.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((TRIM(DISTINCT rt1.c1, rt1.c2))>=(QUOTE(rt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((TRIM(DISTINCT rt1.c1, rt1.c2))>=(QUOTE(rt1.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((TRIM(DISTINCT rt1.c1, rt1.c2))>=(QUOTE(rt1.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t1 WHERE (NULL) ORDER BY ((((rt0.c0)>=(t1.c41)))+(CAST(rt0.c2 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((rt0.c0)>=(t1.c41)))+(CAST(rt0.c2 AS BLOB))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1 WHERE (NULL) ORDER BY ((((rt0.c0)>=(t1.c41)))+(CAST(rt0.c2 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((rt0.c0)>=(t1.c41)))+(CAST(rt0.c2 AS BLOB))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1 WHERE (NULL) ORDER BY ((((rt0.c0)>=(t1.c41)))+(CAST(rt0.c2 AS BLOB))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (((CAST(rt1.c0 AS BLOB)) IS FALSE)) ORDER BY ((((((rt0.c1) NOT NULL))AND(rt1.c0)))AND(((x'716d') NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY ((((((rt0.c1) NOT NULL))AND(rt1.c0)))AND(((x'716d') NOT NULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (((CAST(rt1.c0 AS BLOB)) IS FALSE)) ORDER BY ((((((rt0.c1) NOT NULL))AND(rt1.c0)))AND(((x'716d') NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY ((((((rt0.c1) NOT NULL))AND(rt1.c0)))AND(((x'716d') NOT NULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (((CAST(rt1.c0 AS BLOB)) IS FALSE)) ORDER BY ((((((rt0.c1) NOT NULL))AND(rt1.c0)))AND(((x'716d') NOT NULL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (UPPER(DISTINCT ((rt0.c2) BETWEEN (rt0.c2) AND (NULL))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((rt0.c2) BETWEEN (rt0.c2) AND (NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (UPPER(DISTINCT ((rt0.c2) BETWEEN (rt0.c2) AND (NULL))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((rt0.c2) BETWEEN (rt0.c2) AND (NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (UPPER(DISTINCT ((rt0.c2) BETWEEN (rt0.c2) AND (NULL))));
SELECT * FROM rt0, rt1 CROSS JOIN t1 ON (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((((((((t1.c41)OR(rt1.c0)))AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c0))))) WHERE (rt1.c2) ORDER BY ((rt1.c4 COLLATE NOCASE) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t1 ON (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((((((((t1.c41)OR(rt1.c0)))AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c0))))) ORDER BY ((rt1.c4 COLLATE NOCASE) ISNULL)  NULLS FIRST);
SELECT * FROM rt0, rt1 CROSS JOIN t1 ON (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((((((((t1.c41)OR(rt1.c0)))AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c0))))) WHERE (rt1.c2) ORDER BY ((rt1.c4 COLLATE NOCASE) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t1 ON (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((((((((t1.c41)OR(rt1.c0)))AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c0))))) ORDER BY ((rt1.c4 COLLATE NOCASE) ISNULL)  NULLS FIRST);
SELECT * FROM rt0, rt1 CROSS JOIN t1 ON (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((((((((t1.c41)OR(rt1.c0)))AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c0))))) WHERE (rt1.c2) ORDER BY ((rt1.c4 COLLATE NOCASE) ISNULL)  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (((CAST(t1.c41 AS BLOB))%(((rt1.c3)GLOB(t1.c41))))) ORDER BY TYPEOF(((rt1.c0) NOT BETWEEN (t1.c41) AND (rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c41 AS BLOB))%(((rt1.c3)GLOB(t1.c41))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY TYPEOF(((rt1.c0) NOT BETWEEN (t1.c41) AND (rt1.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (((CAST(t1.c41 AS BLOB))%(((rt1.c3)GLOB(t1.c41))))) ORDER BY TYPEOF(((rt1.c0) NOT BETWEEN (t1.c41) AND (rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c41 AS BLOB))%(((rt1.c3)GLOB(t1.c41))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY TYPEOF(((rt1.c0) NOT BETWEEN (t1.c41) AND (rt1.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (((CAST(t1.c41 AS BLOB))%(((rt1.c3)GLOB(t1.c41))))) ORDER BY TYPEOF(((rt1.c0) NOT BETWEEN (t1.c41) AND (rt1.c1)))  NULLS FIRST;
SELECT * FROM t1 WHERE (1807499709);
SELECT SUM(count) FROM (SELECT ALL ((1807499709) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (1807499709);
SELECT SUM(count) FROM (SELECT ALL ((1807499709) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (1807499709);
SELECT * FROM t1, rt1, rt0 WHERE (((((rt1.c4)>=(rt1.c4))) BETWEEN ((rt1.c4 IN ())) AND (((rt1.c4) BETWEEN (rt0.c0) AND (rt1.c3))))) ORDER BY CHAR(((((rt1.c4)OR(rt0.c1)))OR(rt0.c1)), ((((((((t1.c41)OR(rt1.c1)))OR(t1.c41)))OR(rt0.c2)))AND(t1.c41)), ((rt1.c4)/(rt1.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)>=(rt1.c4))) BETWEEN ((rt1.c4 IN ())) AND (((rt1.c4) BETWEEN (rt0.c0) AND (rt1.c3))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CHAR(((((rt1.c4)OR(rt0.c1)))OR(rt0.c1)), ((((((((t1.c41)OR(rt1.c1)))OR(t1.c41)))OR(rt0.c2)))AND(t1.c41)), ((rt1.c4)/(rt1.c3))) DESC  NULLS FIRST);
SELECT * FROM t1, rt1, rt0 WHERE (((((rt1.c4)>=(rt1.c4))) BETWEEN ((rt1.c4 IN ())) AND (((rt1.c4) BETWEEN (rt0.c0) AND (rt1.c3))))) ORDER BY CHAR(((((rt1.c4)OR(rt0.c1)))OR(rt0.c1)), ((((((((t1.c41)OR(rt1.c1)))OR(t1.c41)))OR(rt0.c2)))AND(t1.c41)), ((rt1.c4)/(rt1.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)>=(rt1.c4))) BETWEEN ((rt1.c4 IN ())) AND (((rt1.c4) BETWEEN (rt0.c0) AND (rt1.c3))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CHAR(((((rt1.c4)OR(rt0.c1)))OR(rt0.c1)), ((((((((t1.c41)OR(rt1.c1)))OR(t1.c41)))OR(rt0.c2)))AND(t1.c41)), ((rt1.c4)/(rt1.c3))) DESC  NULLS FIRST);
SELECT * FROM t1, rt1, rt0 WHERE (((((rt1.c4)>=(rt1.c4))) BETWEEN ((rt1.c4 IN ())) AND (((rt1.c4) BETWEEN (rt0.c0) AND (rt1.c3))))) ORDER BY CHAR(((((rt1.c4)OR(rt0.c1)))OR(rt0.c1)), ((((((((t1.c41)OR(rt1.c1)))OR(t1.c41)))OR(rt0.c2)))AND(t1.c41)), ((rt1.c4)/(rt1.c3))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, rt1, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE (x'');
SELECT COUNT(*) FROM t1 WHERE ((~ (((t1.c41) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c41) NOT NULL)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((~ (((t1.c41) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c41) NOT NULL)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((~ (((t1.c41) NOT NULL))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((((CAST(rt0.c1 AS BLOB))AND((rt1.c1 IN ()))))OR(((rt0.c1) NOT NULL))) WHERE (((CAST(0.579847222556735 AS BLOB))&((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.579847222556735 AS BLOB))&((rt1.c4 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((CAST(rt0.c1 AS BLOB))AND((rt1.c1 IN ()))))OR(((rt0.c1) NOT NULL))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((((CAST(rt0.c1 AS BLOB))AND((rt1.c1 IN ()))))OR(((rt0.c1) NOT NULL))) WHERE (((CAST(0.579847222556735 AS BLOB))&((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.579847222556735 AS BLOB))&((rt1.c4 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((CAST(rt0.c1 AS BLOB))AND((rt1.c1 IN ()))))OR(((rt0.c1) NOT NULL))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((((CAST(rt0.c1 AS BLOB))AND((rt1.c1 IN ()))))OR(((rt0.c1) NOT NULL))) WHERE (((CAST(0.579847222556735 AS BLOB))&((rt1.c4 IN ()))));
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (x'') ORDER BY ((((((((CAST(rt1.c1 AS REAL))AND((((rt0.c1, rt1.c4, rt1.c3)) BETWEEN ((0.39048881328094864, rt0.c1, rt0.c1)) AND ((rt1.c3, -1957307215, rt1.c4))))))AND(((0.44485337623865895) BETWEEN (rt0.c0) AND (rt1.c0)))))AND(((rt1.c2) NOT NULL))))AND(x'7a3f')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((((((CAST(rt1.c1 AS REAL))AND((((rt0.c1, rt1.c4, rt1.c3)) BETWEEN ((0.39048881328094864, rt0.c1, rt0.c1)) AND ((rt1.c3, -1957307215, rt1.c4))))))AND(((0.44485337623865895) BETWEEN (rt0.c0) AND (rt1.c0)))))AND(((rt1.c2) NOT NULL))))AND(x'7a3f')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (x'') ORDER BY ((((((((CAST(rt1.c1 AS REAL))AND((((rt0.c1, rt1.c4, rt1.c3)) BETWEEN ((0.39048881328094864, rt0.c1, rt0.c1)) AND ((rt1.c3, -1957307215, rt1.c4))))))AND(((0.44485337623865895) BETWEEN (rt0.c0) AND (rt1.c0)))))AND(((rt1.c2) NOT NULL))))AND(x'7a3f')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((((((CAST(rt1.c1 AS REAL))AND((((rt0.c1, rt1.c4, rt1.c3)) BETWEEN ((0.39048881328094864, rt0.c1, rt0.c1)) AND ((rt1.c3, -1957307215, rt1.c4))))))AND(((0.44485337623865895) BETWEEN (rt0.c0) AND (rt1.c0)))))AND(((rt1.c2) NOT NULL))))AND(x'7a3f')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (x'') ORDER BY ((((((((CAST(rt1.c1 AS REAL))AND((((rt0.c1, rt1.c4, rt1.c3)) BETWEEN ((0.39048881328094864, rt0.c1, rt0.c1)) AND ((rt1.c3, -1957307215, rt1.c4))))))AND(((0.44485337623865895) BETWEEN (rt0.c0) AND (rt1.c0)))))AND(((rt1.c2) NOT NULL))))AND(x'7a3f')) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((COALESCE(DISTINCT t1.c41, t1.c41)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT t1.c41, t1.c41)) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((COALESCE(DISTINCT t1.c41, t1.c41)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT t1.c41, t1.c41)) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((COALESCE(DISTINCT t1.c41, t1.c41)) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND ('u蚔')))OR((- (rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY (((rt0.c2 IN ()))=(((((((((NULL)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND ('u蚔')))OR((- (rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))==(((((((((NULL)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND ('u蚔')))OR((- (rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY (((rt0.c2 IN ()))=(((((((((NULL)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND ('u蚔')))OR((- (rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))==(((((((((NULL)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND ('u蚔')))OR((- (rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY (((rt0.c2 IN ()))=(((((((((NULL)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE ('횡RE');
SELECT SUM(count) FROM (SELECT (('횡RE') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('횡RE');
SELECT SUM(count) FROM (SELECT (('횡RE') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('횡RE');
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON (((UNLIKELY(0.6552058231604345)))>(('' COLLATE BINARY))) RIGHT OUTER JOIN t1 ON CAST('' AS REAL) WHERE (CASE WHEN ((rt0.c1)<<(rt0.c2)) THEN '0.6735611077808372' ELSE (- (t1.c41)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)<<(rt0.c2)) THEN '0.6735611077808372' ELSE (- (t1.c41)) END) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((UNLIKELY(0.6552058231604345)))>(('' COLLATE BINARY))) RIGHT OUTER JOIN t1 ON CAST('' AS REAL));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON (((UNLIKELY(0.6552058231604345)))>(('' COLLATE BINARY))) RIGHT OUTER JOIN t1 ON CAST('' AS REAL) WHERE (CASE WHEN ((rt0.c1)<<(rt0.c2)) THEN '0.6735611077808372' ELSE (- (t1.c41)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)<<(rt0.c2)) THEN '0.6735611077808372' ELSE (- (t1.c41)) END) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((UNLIKELY(0.6552058231604345)))>(('' COLLATE BINARY))) RIGHT OUTER JOIN t1 ON CAST('' AS REAL));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON (((UNLIKELY(0.6552058231604345)))>(('' COLLATE BINARY))) RIGHT OUTER JOIN t1 ON CAST('' AS REAL) WHERE (CASE WHEN ((rt0.c1)<<(rt0.c2)) THEN '0.6735611077808372' ELSE (- (t1.c41)) END);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rt0.c0 IN (rt1.c3, rt1.c1)) IN (((rt0.c0)<(rt1.c0)), ((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c3))))) ORDER BY (((CAST(rt1.c2 AS TEXT)))==(((~ (rt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN (rt1.c3, rt1.c1)) IN (((rt0.c0)<(rt1.c0)), ((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c3))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((CAST(rt1.c2 AS TEXT)))==(((~ (rt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rt0.c0 IN (rt1.c3, rt1.c1)) IN (((rt0.c0)<(rt1.c0)), ((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c3))))) ORDER BY (((CAST(rt1.c2 AS TEXT)))==(((~ (rt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN (rt1.c3, rt1.c1)) IN (((rt0.c0)<(rt1.c0)), ((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c3))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((CAST(rt1.c2 AS TEXT)))==(((~ (rt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rt0.c0 IN (rt1.c3, rt1.c1)) IN (((rt0.c0)<(rt1.c0)), ((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c3))))) ORDER BY (((CAST(rt1.c2 AS TEXT)))==(((~ (rt1.c0))))) ASC;
SELECT ALL * FROM t1 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (x'' COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT ((t1.c41 IN (t1.c41)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t1.c41 IN (t1.c41))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT ((t1.c41 IN (t1.c41)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t1.c41 IN (t1.c41))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT ((t1.c41 IN (t1.c41)))));
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE ((+ (((rt1.c3)GLOB(NULL))))) ORDER BY CASE COALESCE(DISTINCT rt1.c1, rt1.c4, rt1.c2, rt1.c2)  WHEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END THEN 2.022361E8 ELSE rt0.c1 COLLATE BINARY END, (((('1104774804')&(rt0.c1)))<(((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC, ((rt1.c1) NOTNULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c3)GLOB(NULL))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY CASE COALESCE(DISTINCT rt1.c1, rt1.c4, rt1.c2, rt1.c2)  WHEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END THEN 2.022361E8 ELSE rt0.c1 COLLATE BINARY END, (((('1104774804')&(rt0.c1)))<(((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC, ((rt1.c1) NOTNULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE ((+ (((rt1.c3)GLOB(NULL))))) ORDER BY CASE COALESCE(DISTINCT rt1.c1, rt1.c4, rt1.c2, rt1.c2)  WHEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END THEN 2.022361E8 ELSE rt0.c1 COLLATE BINARY END, (((('1104774804')&(rt0.c1)))<(((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC, ((rt1.c1) NOTNULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c3)GLOB(NULL))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY CASE COALESCE(DISTINCT rt1.c1, rt1.c4, rt1.c2, rt1.c2)  WHEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END THEN 2.022361E8 ELSE rt0.c1 COLLATE BINARY END, (((('1104774804')&(rt0.c1)))<(((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC, ((rt1.c1) NOTNULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE ((+ (((rt1.c3)GLOB(NULL))))) ORDER BY CASE COALESCE(DISTINCT rt1.c1, rt1.c4, rt1.c2, rt1.c2)  WHEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END THEN 2.022361E8 ELSE rt0.c1 COLLATE BINARY END, (((('1104774804')&(rt0.c1)))<(((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC, ((rt1.c1) NOTNULL) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL))>(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL))>(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL))>(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL))>(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL))>(CAST(rt0.c2 AS BLOB))));
SELECT COUNT(*) FROM t1, rt1 WHERE (((((t1.c41)=(rt1.c4)))OR(CASE WHEN rt1.c2 THEN rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c41)=(rt1.c4)))OR(CASE WHEN rt1.c2 THEN rt1.c3 END))) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1, rt1 WHERE (((((t1.c41)=(rt1.c4)))OR(CASE WHEN rt1.c2 THEN rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c41)=(rt1.c4)))OR(CASE WHEN rt1.c2 THEN rt1.c3 END))) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1, rt1 WHERE (((((t1.c41)=(rt1.c4)))OR(CASE WHEN rt1.c2 THEN rt1.c3 END)));
SELECT * FROM rt0, t1, rt1 WHERE (((((rt0.c2) NOT BETWEEN (t1.c41) AND (rt0.c2))) BETWEEN ((rt1.c0 IN (rt0.c0))) AND (((rt0.c1)>>(t1.c41)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (t1.c41) AND (rt0.c2))) BETWEEN ((rt1.c0 IN (rt0.c0))) AND (((rt0.c1)>>(t1.c41))))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT * FROM rt0, t1, rt1 WHERE (((((rt0.c2) NOT BETWEEN (t1.c41) AND (rt0.c2))) BETWEEN ((rt1.c0 IN (rt0.c0))) AND (((rt0.c1)>>(t1.c41)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (t1.c41) AND (rt0.c2))) BETWEEN ((rt1.c0 IN (rt0.c0))) AND (((rt0.c1)>>(t1.c41))))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT * FROM rt0, t1, rt1 WHERE (((((rt0.c2) NOT BETWEEN (t1.c41) AND (rt0.c2))) BETWEEN ((rt1.c0 IN (rt0.c0))) AND (((rt0.c1)>>(t1.c41)))));
SELECT ALL * FROM rt1 WHERE (((rt1.c2 IN ()) IN (0.8631049716752257))) ORDER BY (- ((- (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 IN ()) IN (0.8631049716752257))) IS TRUE)  as count FROM rt1 ORDER BY (- ((- (rt1.c2))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((rt1.c2 IN ()) IN (0.8631049716752257))) ORDER BY (- ((- (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 IN ()) IN (0.8631049716752257))) IS TRUE)  as count FROM rt1 ORDER BY (- ((- (rt1.c2))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((rt1.c2 IN ()) IN (0.8631049716752257))) ORDER BY (- ((- (rt1.c2))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c41)LIKE(t1.c41)))LIKE(((t1.c41) NOT BETWEEN (0.5619626689801113) AND (t1.c41)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c41)LIKE(t1.c41)))LIKE(((t1.c41) NOT BETWEEN (0.5619626689801113) AND (t1.c41))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c41)LIKE(t1.c41)))LIKE(((t1.c41) NOT BETWEEN (0.5619626689801113) AND (t1.c41)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c41)LIKE(t1.c41)))LIKE(((t1.c41) NOT BETWEEN (0.5619626689801113) AND (t1.c41))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c41)LIKE(t1.c41)))LIKE(((t1.c41) NOT BETWEEN (0.5619626689801113) AND (t1.c41)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((UPPER(DISTINCT rt0.c1), LOWER(rt0.c1), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))==((CASE WHEN rt0.c0 THEN '-1166240653' ELSE rt0.c0 END, ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)), CASE rt0.c0  WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((UPPER(DISTINCT rt0.c1), LOWER(rt0.c1), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))==((CASE WHEN rt0.c0 THEN '-1166240653' ELSE rt0.c0 END, ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)), CASE rt0.c0  WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((UPPER(DISTINCT rt0.c1), LOWER(rt0.c1), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))==((CASE WHEN rt0.c0 THEN '-1166240653' ELSE rt0.c0 END, ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)), CASE rt0.c0  WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((UPPER(DISTINCT rt0.c1), LOWER(rt0.c1), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))==((CASE WHEN rt0.c0 THEN '-1166240653' ELSE rt0.c0 END, ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)), CASE rt0.c0  WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((UPPER(DISTINCT rt0.c1), LOWER(rt0.c1), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))==((CASE WHEN rt0.c0 THEN '-1166240653' ELSE rt0.c0 END, ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)), CASE rt0.c0  WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END))));
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2)AND(((rt0.c1)%(rt0.c2)))))OR(((rt0.c2)==(rt0.c1)))))AND('-1166240653')))AND(x'44d2'))) ORDER BY CAST(((rt0.c0) ISNULL) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)AND(((rt0.c1)%(rt0.c2)))))OR(((rt0.c2)==(rt0.c1)))))AND('-1166240653')))AND(x'44d2'))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) ISNULL) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2)AND(((rt0.c1)%(rt0.c2)))))OR(((rt0.c2)==(rt0.c1)))))AND('-1166240653')))AND(x'44d2'))) ORDER BY CAST(((rt0.c0) ISNULL) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)AND(((rt0.c1)%(rt0.c2)))))OR(((rt0.c2)==(rt0.c1)))))AND('-1166240653')))AND(x'44d2'))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) ISNULL) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2)AND(((rt0.c1)%(rt0.c2)))))OR(((rt0.c2)==(rt0.c1)))))AND('-1166240653')))AND(x'44d2'))) ORDER BY CAST(((rt0.c0) ISNULL) AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, 0.5841868420353816, rt0.c2)) NOT BETWEEN (((('0.48397569641021665')IS NOT(rt0.c1)), ((rt0.c0)>>(rt0.c1)), ((2.99969763E8)||(rt0.c0)))) AND ((((rt0.c2)IS(rt0.c2)), (((rt0.c1)) BETWEEN ((rt0.c2)) AND (('*'))), (NOT (rt0.c2)))))) ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (((((rt0.c1)AND(rt0.c2)))AND(0Xffffffffecdc3a6b))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, 0.5841868420353816, rt0.c2)) NOT BETWEEN (((('0.48397569641021665')IS NOT(rt0.c1)), ((rt0.c0)>>(rt0.c1)), ((2.99969763E8)||(rt0.c0)))) AND ((((rt0.c2)IS(rt0.c2)), (((rt0.c1)) BETWEEN ((rt0.c2)) AND (('*'))), (NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (((((rt0.c1)AND(rt0.c2)))AND(0Xffffffffecdc3a6b))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, 0.5841868420353816, rt0.c2)) NOT BETWEEN (((('0.48397569641021665')IS NOT(rt0.c1)), ((rt0.c0)>>(rt0.c1)), ((2.99969763E8)||(rt0.c0)))) AND ((((rt0.c2)IS(rt0.c2)), (((rt0.c1)) BETWEEN ((rt0.c2)) AND (('*'))), (NOT (rt0.c2)))))) ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (((((rt0.c1)AND(rt0.c2)))AND(0Xffffffffecdc3a6b))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, 0.5841868420353816, rt0.c2)) NOT BETWEEN (((('0.48397569641021665')IS NOT(rt0.c1)), ((rt0.c0)>>(rt0.c1)), ((2.99969763E8)||(rt0.c0)))) AND ((((rt0.c2)IS(rt0.c2)), (((rt0.c1)) BETWEEN ((rt0.c2)) AND (('*'))), (NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (((((rt0.c1)AND(rt0.c2)))AND(0Xffffffffecdc3a6b))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, 0.5841868420353816, rt0.c2)) NOT BETWEEN (((('0.48397569641021665')IS NOT(rt0.c1)), ((rt0.c0)>>(rt0.c1)), ((2.99969763E8)||(rt0.c0)))) AND ((((rt0.c2)IS(rt0.c2)), (((rt0.c1)) BETWEEN ((rt0.c2)) AND (('*'))), (NOT (rt0.c2)))))) ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (((((rt0.c1)AND(rt0.c2)))AND(0Xffffffffecdc3a6b))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((load_extension(rt0.c1))<=((rt0.c0 IN ())))) ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((load_extension(rt0.c1))<=((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((load_extension(rt0.c1))<=((rt0.c0 IN ())))) ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((load_extension(rt0.c1))<=((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS TEXT) ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((SQLITE_COMPILEOPTION_USED(x'9401'))IS NOT((~ (t1.c41)))));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(x'9401'))IS NOT((~ (t1.c41))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((SQLITE_COMPILEOPTION_USED(x'9401'))IS NOT((~ (t1.c41)))));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(x'9401'))IS NOT((~ (t1.c41))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((SQLITE_COMPILEOPTION_USED(x'9401'))IS NOT((~ (t1.c41)))));
SELECT * FROM rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c4 END IN ())) ORDER BY (((rt1.c2)) NOT BETWEEN ((((rt1.c2)AND(rt1.c4)))) AND (((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c4 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2)) NOT BETWEEN ((((rt1.c2)AND(rt1.c4)))) AND (((rt1.c4 IN ())))));
SELECT * FROM rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c4 END IN ())) ORDER BY (((rt1.c2)) NOT BETWEEN ((((rt1.c2)AND(rt1.c4)))) AND (((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c4 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2)) NOT BETWEEN ((((rt1.c2)AND(rt1.c4)))) AND (((rt1.c4 IN ())))));
SELECT * FROM rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c4 END IN ())) ORDER BY (((rt1.c2)) NOT BETWEEN ((((rt1.c2)AND(rt1.c4)))) AND (((rt1.c4 IN ()))));
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (((rt1.c1 COLLATE NOCASE) BETWEEN (((NULL)-(rt1.c0))) AND (((rt1.c0) BETWEEN (rt1.c1) AND (x'c0da87a6'))))) ORDER BY ((rt0.c0)OR(rt1.c2)) COLLATE RTRIM, CASE WHEN (- (rt1.c4)) THEN ((rt1.c1) IS TRUE) WHEN CAST(rt1.c1 AS BLOB) THEN ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c0)) WHEN ((rt1.c1) NOTNULL) THEN ABS(rt1.c3) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE NOCASE) BETWEEN (((NULL)-(rt1.c0))) AND (((rt1.c0) BETWEEN (rt1.c1) AND (x'c0da87a6'))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY ((rt0.c0)OR(rt1.c2)) COLLATE RTRIM, CASE WHEN (- (rt1.c4)) THEN ((rt1.c1) IS TRUE) WHEN CAST(rt1.c1 AS BLOB) THEN ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c0)) WHEN ((rt1.c1) NOTNULL) THEN ABS(rt1.c3) END  NULLS LAST);
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (((rt1.c1 COLLATE NOCASE) BETWEEN (((NULL)-(rt1.c0))) AND (((rt1.c0) BETWEEN (rt1.c1) AND (x'c0da87a6'))))) ORDER BY ((rt0.c0)OR(rt1.c2)) COLLATE RTRIM, CASE WHEN (- (rt1.c4)) THEN ((rt1.c1) IS TRUE) WHEN CAST(rt1.c1 AS BLOB) THEN ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c0)) WHEN ((rt1.c1) NOTNULL) THEN ABS(rt1.c3) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE NOCASE) BETWEEN (((NULL)-(rt1.c0))) AND (((rt1.c0) BETWEEN (rt1.c1) AND (x'c0da87a6'))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY ((rt0.c0)OR(rt1.c2)) COLLATE RTRIM, CASE WHEN (- (rt1.c4)) THEN ((rt1.c1) IS TRUE) WHEN CAST(rt1.c1 AS BLOB) THEN ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c0)) WHEN ((rt1.c1) NOTNULL) THEN ABS(rt1.c3) END  NULLS LAST);
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (((rt1.c1 COLLATE NOCASE) BETWEEN (((NULL)-(rt1.c0))) AND (((rt1.c0) BETWEEN (rt1.c1) AND (x'c0da87a6'))))) ORDER BY ((rt0.c0)OR(rt1.c2)) COLLATE RTRIM, CASE WHEN (- (rt1.c4)) THEN ((rt1.c1) IS TRUE) WHEN CAST(rt1.c1 AS BLOB) THEN ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c0)) WHEN ((rt1.c1) NOTNULL) THEN ABS(rt1.c3) END  NULLS LAST;
SELECT COUNT(*) FROM t1, rt0 WHERE (LIKE((((t1.c41)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((t1.c41)>>(NULL))));
SELECT SUM(count) FROM (SELECT ((LIKE((((t1.c41)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((t1.c41)>>(NULL)))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (LIKE((((t1.c41)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((t1.c41)>>(NULL))));
SELECT SUM(count) FROM (SELECT ((LIKE((((t1.c41)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((t1.c41)>>(NULL)))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (LIKE((((t1.c41)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((t1.c41)>>(NULL))));
SELECT COUNT(*) FROM t1 CROSS JOIN rt1 ON CAST((rt0.c0 IN ('500294690', rt1.c1)) AS NUMERIC) FULL OUTER JOIN rt0 ON CASE CAST(rt1.c1 AS BLOB)  WHEN ((t1.c41)LIKE(rt1.c1)) THEN ((x'dc92') NOTNULL) END WHERE (CAST(rt1.c1 COLLATE NOCASE AS INTEGER)) ORDER BY ((((rt1.c3) IS FALSE)) NOTNULL), ((rt1.c4)OR(rt0.c2 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON CAST((rt0.c0 IN ('500294690', rt1.c1)) AS NUMERIC) FULL OUTER JOIN rt0 ON CASE CAST(rt1.c1 AS BLOB)  WHEN ((t1.c41)LIKE(rt1.c1)) THEN ((x'dc92') NOTNULL) END ORDER BY ((((rt1.c3) IS FALSE)) NOTNULL), ((rt1.c4)OR(rt0.c2 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 CROSS JOIN rt1 ON CAST((rt0.c0 IN ('500294690', rt1.c1)) AS NUMERIC) FULL OUTER JOIN rt0 ON CASE CAST(rt1.c1 AS BLOB)  WHEN ((t1.c41)LIKE(rt1.c1)) THEN ((x'dc92') NOTNULL) END WHERE (CAST(rt1.c1 COLLATE NOCASE AS INTEGER)) ORDER BY ((((rt1.c3) IS FALSE)) NOTNULL), ((rt1.c4)OR(rt0.c2 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON CAST((rt0.c0 IN ('500294690', rt1.c1)) AS NUMERIC) FULL OUTER JOIN rt0 ON CASE CAST(rt1.c1 AS BLOB)  WHEN ((t1.c41)LIKE(rt1.c1)) THEN ((x'dc92') NOTNULL) END ORDER BY ((((rt1.c3) IS FALSE)) NOTNULL), ((rt1.c4)OR(rt0.c2 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c4)LIKE(rt1.c2)), TRIM(rt1.c1), rt1.c2 COLLATE NOCASE))==(((NOT (rt1.c1)), ((rt1.c4)||(rt1.c3)), (rt1.c4 IN ()))))) ORDER BY CHAR(CASE WHEN rt1.c2 THEN rt1.c2 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c4)LIKE(rt1.c2)), TRIM(rt1.c1), rt1.c2 COLLATE NOCASE))==(((NOT (rt1.c1)), ((rt1.c4)||(rt1.c3)), (rt1.c4 IN ()))))) IS TRUE)  as count FROM rt1 ORDER BY CHAR(CASE WHEN rt1.c2 THEN rt1.c2 END) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c4)LIKE(rt1.c2)), TRIM(rt1.c1), rt1.c2 COLLATE NOCASE))==(((NOT (rt1.c1)), ((rt1.c4)||(rt1.c3)), (rt1.c4 IN ()))))) ORDER BY CHAR(CASE WHEN rt1.c2 THEN rt1.c2 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c4)LIKE(rt1.c2)), TRIM(rt1.c1), rt1.c2 COLLATE NOCASE))==(((NOT (rt1.c1)), ((rt1.c4)||(rt1.c3)), (rt1.c4 IN ()))))) IS TRUE)  as count FROM rt1 ORDER BY CHAR(CASE WHEN rt1.c2 THEN rt1.c2 END) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c4)LIKE(rt1.c2)), TRIM(rt1.c1), rt1.c2 COLLATE NOCASE))==(((NOT (rt1.c1)), ((rt1.c4)||(rt1.c3)), (rt1.c4 IN ()))))) ORDER BY CHAR(CASE WHEN rt1.c2 THEN rt1.c2 END) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)GLOB(((0.31830523526635124)AND(rt0.c1))))) ORDER BY json(rt0.c0) COLLATE BINARY DESC, highlight(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c1)IS(rt0.c0)), ((rt0.c0)AND(rt0.c2)), ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)GLOB(((0.31830523526635124)AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY json(rt0.c0) COLLATE BINARY DESC, highlight(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c1)IS(rt0.c0)), ((rt0.c0)AND(rt0.c2)), ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)GLOB(((0.31830523526635124)AND(rt0.c1))))) ORDER BY json(rt0.c0) COLLATE BINARY DESC, highlight(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c1)IS(rt0.c0)), ((rt0.c0)AND(rt0.c2)), ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)GLOB(((0.31830523526635124)AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY json(rt0.c0) COLLATE BINARY DESC, highlight(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c1)IS(rt0.c0)), ((rt0.c0)AND(rt0.c2)), ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c2);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT COUNT(*) FROM t1, rt1 NATURAL JOIN rt0 WHERE (CASE CASE rt1.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 END  WHEN ((rt1.c1)GLOB(rt0.c1)) THEN rt0.c2 ELSE ((rt1.c4) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt1.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 END  WHEN ((rt1.c1)GLOB(rt0.c1)) THEN rt0.c2 ELSE ((rt1.c4) ISNULL) END) IS TRUE)  as count FROM t1, rt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t1, rt1 NATURAL JOIN rt0 WHERE (CASE CASE rt1.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 END  WHEN ((rt1.c1)GLOB(rt0.c1)) THEN rt0.c2 ELSE ((rt1.c4) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt1.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 END  WHEN ((rt1.c1)GLOB(rt0.c1)) THEN rt0.c2 ELSE ((rt1.c4) ISNULL) END) IS TRUE)  as count FROM t1, rt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t1, rt1 NATURAL JOIN rt0 WHERE (CASE CASE rt1.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 END  WHEN ((rt1.c1)GLOB(rt0.c1)) THEN rt0.c2 ELSE ((rt1.c4) ISNULL) END);
SELECT ALL * FROM t1 WHERE ((((x'', t1.c41, t1.c41)) NOT BETWEEN ((TRIM(t1.c41, t1.c41), CASE t1.c41  WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN -1306419407 WHEN t1.c41 THEN t1.c41 ELSE '-1639358970' END, (((t1.c41, t1.c41, x'2654'))<=((t1.c41, t1.c41, t1.c41))))) AND (((NOT (t1.c41)), IFNULL('1110286312', t1.c41), (~ (t1.c41))))));
SELECT SUM(count) FROM (SELECT (((((x'', t1.c41, t1.c41)) NOT BETWEEN ((TRIM(t1.c41, t1.c41), CASE t1.c41  WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN -1306419407 WHEN t1.c41 THEN t1.c41 ELSE '-1639358970' END, (((t1.c41, t1.c41, x'2654'))<=((t1.c41, t1.c41, t1.c41))))) AND (((NOT (t1.c41)), IFNULL('1110286312', t1.c41), (~ (t1.c41)))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((x'', t1.c41, t1.c41)) NOT BETWEEN ((TRIM(t1.c41, t1.c41), CASE t1.c41  WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN -1306419407 WHEN t1.c41 THEN t1.c41 ELSE '-1639358970' END, (((t1.c41, t1.c41, x'2654'))<=((t1.c41, t1.c41, t1.c41))))) AND (((NOT (t1.c41)), IFNULL('1110286312', t1.c41), (~ (t1.c41))))));
SELECT SUM(count) FROM (SELECT (((((x'', t1.c41, t1.c41)) NOT BETWEEN ((TRIM(t1.c41, t1.c41), CASE t1.c41  WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN -1306419407 WHEN t1.c41 THEN t1.c41 ELSE '-1639358970' END, (((t1.c41, t1.c41, x'2654'))<=((t1.c41, t1.c41, t1.c41))))) AND (((NOT (t1.c41)), IFNULL('1110286312', t1.c41), (~ (t1.c41)))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((x'', t1.c41, t1.c41)) NOT BETWEEN ((TRIM(t1.c41, t1.c41), CASE t1.c41  WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN -1306419407 WHEN t1.c41 THEN t1.c41 ELSE '-1639358970' END, (((t1.c41, t1.c41, x'2654'))<=((t1.c41, t1.c41, t1.c41))))) AND (((NOT (t1.c41)), IFNULL('1110286312', t1.c41), (~ (t1.c41))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)=(rt0.c0)))AND((~ (rt0.c1)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY LENGTH(((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)=(rt0.c0)))AND((~ (rt0.c1)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY LENGTH(((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)=(rt0.c0)))AND((~ (rt0.c1)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY LENGTH(((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)=(rt0.c0)))AND((~ (rt0.c1)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY LENGTH(((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)=(rt0.c0)))AND((~ (rt0.c1)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY LENGTH(((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, rt0 WHERE (DATETIME(TRIM(DISTINCT rt1.c1), (NOT (rt0.c0)), ((rt1.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(TRIM(DISTINCT rt1.c1), (NOT (rt0.c0)), ((rt1.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, rt0 WHERE (DATETIME(TRIM(DISTINCT rt1.c1), (NOT (rt0.c0)), ((rt1.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(TRIM(DISTINCT rt1.c1), (NOT (rt0.c0)), ((rt1.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, rt0 WHERE (DATETIME(TRIM(DISTINCT rt1.c1), (NOT (rt0.c0)), ((rt1.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT COUNT(*) FROM rt1, t1 WHERE (t1.c41) ORDER BY (((((NOT (rt1.c2)))AND(CASE WHEN rt1.c3 THEN rt1.c0 ELSE t1.c41 END)))AND(t1.c41 COLLATE BINARY)) DESC, (((((rt1.c0)AND(rt1.c2))))=((((t1.c41)+(rt1.c0))))) ASC, x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c41) IS TRUE)  as count FROM rt1, t1 ORDER BY (((((NOT (rt1.c2)))AND(CASE WHEN rt1.c3 THEN rt1.c0 ELSE t1.c41 END)))AND(t1.c41 COLLATE BINARY)) DESC, (((((rt1.c0)AND(rt1.c2))))=((((t1.c41)+(rt1.c0))))) ASC, x'' DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1 WHERE (t1.c41) ORDER BY (((((NOT (rt1.c2)))AND(CASE WHEN rt1.c3 THEN rt1.c0 ELSE t1.c41 END)))AND(t1.c41 COLLATE BINARY)) DESC, (((((rt1.c0)AND(rt1.c2))))=((((t1.c41)+(rt1.c0))))) ASC, x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c41) IS TRUE)  as count FROM rt1, t1 ORDER BY (((((NOT (rt1.c2)))AND(CASE WHEN rt1.c3 THEN rt1.c0 ELSE t1.c41 END)))AND(t1.c41 COLLATE BINARY)) DESC, (((((rt1.c0)AND(rt1.c2))))=((((t1.c41)+(rt1.c0))))) ASC, x'' DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1 WHERE (t1.c41) ORDER BY (((((NOT (rt1.c2)))AND(CASE WHEN rt1.c3 THEN rt1.c0 ELSE t1.c41 END)))AND(t1.c41 COLLATE BINARY)) DESC, (((((rt1.c0)AND(rt1.c2))))=((((t1.c41)+(rt1.c0))))) ASC, x'' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((CAST(rt1.c1 AS BLOB))>((((rt1.c3))<((t1.c41))))) WHERE ((rt1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((CAST(rt1.c1 AS BLOB))>((((rt1.c3))<((t1.c41))))));
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((CAST(rt1.c1 AS BLOB))>((((rt1.c3))<((t1.c41))))) WHERE ((rt1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((CAST(rt1.c1 AS BLOB))>((((rt1.c3))<((t1.c41))))));
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((CAST(rt1.c1 AS BLOB))>((((rt1.c3))<((t1.c41))))) WHERE ((rt1.c0 COLLATE BINARY IN ()));
SELECT ALL * FROM rt1 WHERE (((json_insert(rt1.c3, rt1.c3, rt1.c3, 0X88697cf, rt1.c1))/(CASE rt1.c2  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ((((json_insert(rt1.c3, rt1.c3, rt1.c3, 0x88697cf, rt1.c1))/(CASE rt1.c2  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((json_insert(rt1.c3, rt1.c3, rt1.c3, 0X88697cf, rt1.c1))/(CASE rt1.c2  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ((((json_insert(rt1.c3, rt1.c3, rt1.c3, 0x88697cf, rt1.c1))/(CASE rt1.c2  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((json_insert(rt1.c3, rt1.c3, rt1.c3, 0X88697cf, rt1.c1))/(CASE rt1.c2  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c3 END)));
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((~ (t1.c41))) NOT BETWEEN ((((t1.c41)) BETWEEN ((0.8085903147241625)) AND ((rt1.c3)))) AND (((rt1.c0)||(rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((((~ (t1.c41))) NOT BETWEEN ((((t1.c41)) BETWEEN ((0.8085903147241625)) AND ((rt1.c3)))) AND (((rt1.c0)||(rt1.c4))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((~ (t1.c41))) NOT BETWEEN ((((t1.c41)) BETWEEN ((0.8085903147241625)) AND ((rt1.c3)))) AND (((rt1.c0)||(rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((((~ (t1.c41))) NOT BETWEEN ((((t1.c41)) BETWEEN ((0.8085903147241625)) AND ((rt1.c3)))) AND (((rt1.c0)||(rt1.c4))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((~ (t1.c41))) NOT BETWEEN ((((t1.c41)) BETWEEN ((0.8085903147241625)) AND ((rt1.c3)))) AND (((rt1.c0)||(rt1.c4)))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c41)/(t1.c41))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c41)/(t1.c41))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c41)/(t1.c41))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c41)/(t1.c41))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c41)/(t1.c41))) ISNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 IN ()) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 IN ()) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 IN ()) IN ()));
SELECT ALL * FROM rt1 WHERE (SQLITE_VERSION()) ORDER BY (((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END))>=((((rt1.c0)OR(rt1.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt1 ORDER BY (((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END))>=((((rt1.c0)OR(rt1.c4)))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (SQLITE_VERSION()) ORDER BY (((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END))>=((((rt1.c0)OR(rt1.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt1 ORDER BY (((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END))>=((((rt1.c0)OR(rt1.c4)))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (SQLITE_VERSION()) ORDER BY (((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END))>=((((rt1.c0)OR(rt1.c4)))))  NULLS FIRST;
SELECT * FROM rt0, t1, rt1 WHERE (((TYPEOF(DISTINCT rt1.c0))OR((((rt0.c1, rt1.c0, rt1.c2)) BETWEEN ((rt0.c2, x'', rt1.c0)) AND ((t1.c41, rt1.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt1.c0))OR((((rt0.c1, rt1.c0, rt1.c2)) BETWEEN ((rt0.c2, x'', rt1.c0)) AND ((t1.c41, rt1.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT * FROM rt0, t1, rt1 WHERE (((TYPEOF(DISTINCT rt1.c0))OR((((rt0.c1, rt1.c0, rt1.c2)) BETWEEN ((rt0.c2, x'', rt1.c0)) AND ((t1.c41, rt1.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt1.c0))OR((((rt0.c1, rt1.c0, rt1.c2)) BETWEEN ((rt0.c2, x'', rt1.c0)) AND ((t1.c41, rt1.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT * FROM rt0, t1, rt1 WHERE (((TYPEOF(DISTINCT rt1.c0))OR((((rt0.c1, rt1.c0, rt1.c2)) BETWEEN ((rt0.c2, x'', rt1.c0)) AND ((t1.c41, rt1.c0, rt0.c0))))));
SELECT * FROM rt1, rt0, t1 WHERE ((((rt1.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c4)))))) ORDER BY (NOT (LIKELY(DISTINCT rt0.c2))) ASC, (rt1.c1 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c4)))))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY (NOT (LIKELY(DISTINCT rt0.c2))) ASC, (rt1.c1 IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, t1 WHERE ((((rt1.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c4)))))) ORDER BY (NOT (LIKELY(DISTINCT rt0.c2))) ASC, (rt1.c1 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c4)))))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY (NOT (LIKELY(DISTINCT rt0.c2))) ASC, (rt1.c1 IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, t1 WHERE ((((rt1.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c4)))))) ORDER BY (NOT (LIKELY(DISTINCT rt0.c2))) ASC, (rt1.c1 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON ((((t1.c41)>(t1.c41))) IS TRUE) WHERE ((((+ (rt0.c2))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))-(((rt0.c0)-(0.6882510160142788)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((((t1.c41)>(t1.c41))) IS TRUE) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))-(((rt0.c0)-(0.6882510160142788)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON ((((t1.c41)>(t1.c41))) IS TRUE) WHERE ((((+ (rt0.c2))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))-(((rt0.c0)-(0.6882510160142788)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((((t1.c41)>(t1.c41))) IS TRUE) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))-(((rt0.c0)-(0.6882510160142788)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON ((((t1.c41)>(t1.c41))) IS TRUE) WHERE ((((+ (rt0.c2))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))-(((rt0.c0)-(0.6882510160142788)))) DESC  NULLS LAST;
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((((rt0.c2, rt1.c1, NULL))=((t1.c41, rt0.c0, ''))))>>(((rt1.c2)!=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt1.c1, NULL))=((t1.c41, rt0.c0, ''))))>>(((rt1.c2)!=(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((((rt0.c2, rt1.c1, NULL))=((t1.c41, rt0.c0, ''))))>>(((rt1.c2)!=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt1.c1, NULL))=((t1.c41, rt0.c0, ''))))>>(((rt1.c2)!=(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((((rt0.c2, rt1.c1, NULL))=((t1.c41, rt0.c0, ''))))>>(((rt1.c2)!=(rt1.c1)))));
SELECT ALL * FROM rt1 WHERE (CAST((rt1.c3 IN (x'')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c3 IN (x'')) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST((rt1.c3 IN (x'')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c3 IN (x'')) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST((rt1.c3 IN (x'')) AS TEXT));
SELECT * FROM rt0, t1 RIGHT OUTER JOIN rt1 ON ((rt1.c3)-(rt0.c1)) COLLATE BINARY WHERE (CAST(((rt1.c1) NOT BETWEEN (t1.c41) AND (rt1.c0)) AS TEXT)) ORDER BY ((((rt1.c2 COLLATE RTRIM)AND((((rt1.c0))<=((rt1.c3))))))OR(((('+m', rt1.c2, rt1.c3)) BETWEEN ((rt0.c0, rt1.c1, rt1.c1)) AND ((rt1.c0, rt0.c2, rt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) NOT BETWEEN (t1.c41) AND (rt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN rt1 ON ((rt1.c3)-(rt0.c1)) COLLATE BINARY ORDER BY ((((rt1.c2 COLLATE RTRIM)AND((((rt1.c0))<=((rt1.c3))))))OR(((('+m', rt1.c2, rt1.c3)) BETWEEN ((rt0.c0, rt1.c1, rt1.c1)) AND ((rt1.c0, rt0.c2, rt1.c2)))))  NULLS LAST);
SELECT * FROM rt0, t1 RIGHT OUTER JOIN rt1 ON ((rt1.c3)-(rt0.c1)) COLLATE BINARY WHERE (CAST(((rt1.c1) NOT BETWEEN (t1.c41) AND (rt1.c0)) AS TEXT)) ORDER BY ((((rt1.c2 COLLATE RTRIM)AND((((rt1.c0))<=((rt1.c3))))))OR(((('+m', rt1.c2, rt1.c3)) BETWEEN ((rt0.c0, rt1.c1, rt1.c1)) AND ((rt1.c0, rt0.c2, rt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) NOT BETWEEN (t1.c41) AND (rt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN rt1 ON ((rt1.c3)-(rt0.c1)) COLLATE BINARY ORDER BY ((((rt1.c2 COLLATE RTRIM)AND((((rt1.c0))<=((rt1.c3))))))OR(((('+m', rt1.c2, rt1.c3)) BETWEEN ((rt0.c0, rt1.c1, rt1.c1)) AND ((rt1.c0, rt0.c2, rt1.c2)))))  NULLS LAST);
SELECT * FROM rt0, t1 RIGHT OUTER JOIN rt1 ON ((rt1.c3)-(rt0.c1)) COLLATE BINARY WHERE (CAST(((rt1.c1) NOT BETWEEN (t1.c41) AND (rt1.c0)) AS TEXT)) ORDER BY ((((rt1.c2 COLLATE RTRIM)AND((((rt1.c0))<=((rt1.c3))))))OR(((('+m', rt1.c2, rt1.c3)) BETWEEN ((rt0.c0, rt1.c1, rt1.c1)) AND ((rt1.c0, rt0.c2, rt1.c2)))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) ISNULL))<=((rt0.c2 IN ())))) ORDER BY CAST((rt0.c0 IN ()) AS INTEGER)  NULLS LAST, CAST(((rt0.c0) NOT NULL) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL))<=((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c0 IN ()) AS INTEGER)  NULLS LAST, CAST(((rt0.c0) NOT NULL) AS REAL)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) ISNULL))<=((rt0.c2 IN ())))) ORDER BY CAST((rt0.c0 IN ()) AS INTEGER)  NULLS LAST, CAST(((rt0.c0) NOT NULL) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL))<=((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c0 IN ()) AS INTEGER)  NULLS LAST, CAST(((rt0.c0) NOT NULL) AS REAL)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) ISNULL))<=((rt0.c2 IN ())))) ORDER BY CAST((rt0.c0 IN ()) AS INTEGER)  NULLS LAST, CAST(((rt0.c0) NOT NULL) AS REAL)  NULLS LAST;
SELECT * FROM rt1, rt0, t1 WHERE (CAST(SQLITE_COMPILEOPTION_GET(t1.c41) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SQLITE_COMPILEOPTION_GET(t1.c41) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (CAST(SQLITE_COMPILEOPTION_GET(t1.c41) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SQLITE_COMPILEOPTION_GET(t1.c41) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (CAST(SQLITE_COMPILEOPTION_GET(t1.c41) AS NUMERIC));
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c0) BETWEEN (x'') AND (rt1.c3)) AS NUMERIC)) ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c0) NOTNULL))) AND ((((rt1.c4) ISNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) BETWEEN (x'') AND (rt1.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c0) NOTNULL))) AND ((((rt1.c4) ISNULL)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c0) BETWEEN (x'') AND (rt1.c3)) AS NUMERIC)) ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c0) NOTNULL))) AND ((((rt1.c4) ISNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) BETWEEN (x'') AND (rt1.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c0) NOTNULL))) AND ((((rt1.c4) ISNULL)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c0) BETWEEN (x'') AND (rt1.c3)) AS NUMERIC)) ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c0) NOTNULL))) AND ((((rt1.c4) ISNULL)))) ASC  NULLS LAST;
SELECT * FROM t1, rt1, rt0 WHERE (((x'')/((+ (rt0.c1))))) ORDER BY ((((((t1.c41)OR(rt1.c0)))AND(rt1.c3))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND ((((1862542560, rt1.c1, rt0.c0)) BETWEEN ((x'', rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c0, t1.c41))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'')/((+ (rt0.c1))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((((t1.c41)OR(rt1.c0)))AND(rt1.c3))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND ((((1862542560, rt1.c1, rt0.c0)) BETWEEN ((x'', rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c0, t1.c41))))) DESC  NULLS FIRST);
SELECT * FROM t1, rt1, rt0 WHERE (((x'')/((+ (rt0.c1))))) ORDER BY ((((((t1.c41)OR(rt1.c0)))AND(rt1.c3))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND ((((1862542560, rt1.c1, rt0.c0)) BETWEEN ((x'', rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c0, t1.c41))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'')/((+ (rt0.c1))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((((t1.c41)OR(rt1.c0)))AND(rt1.c3))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND ((((1862542560, rt1.c1, rt0.c0)) BETWEEN ((x'', rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c0, t1.c41))))) DESC  NULLS FIRST);
SELECT * FROM t1, rt1, rt0 WHERE (((x'')/((+ (rt0.c1))))) ORDER BY ((((((t1.c41)OR(rt1.c0)))AND(rt1.c3))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND ((((1862542560, rt1.c1, rt0.c0)) BETWEEN ((x'', rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c0, t1.c41))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (CASE rt1.c2 COLLATE BINARY  WHEN ((((rt1.c0)AND(rt1.c1)))OR(rt1.c4)) THEN ((rt1.c2)>=(rt1.c4)) END) ORDER BY (((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) ISNULL);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2 COLLATE BINARY  WHEN ((((rt1.c0)AND(rt1.c1)))OR(rt1.c4)) THEN ((rt1.c2)>=(rt1.c4)) END) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY (((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) ISNULL));
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (CASE rt1.c2 COLLATE BINARY  WHEN ((((rt1.c0)AND(rt1.c1)))OR(rt1.c4)) THEN ((rt1.c2)>=(rt1.c4)) END) ORDER BY (((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) ISNULL);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2 COLLATE BINARY  WHEN ((((rt1.c0)AND(rt1.c1)))OR(rt1.c4)) THEN ((rt1.c2)>=(rt1.c4)) END) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY (((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) ISNULL));
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (CASE rt1.c2 COLLATE BINARY  WHEN ((((rt1.c0)AND(rt1.c1)))OR(rt1.c4)) THEN ((rt1.c2)>=(rt1.c4)) END) ORDER BY (((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) ISNULL);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE RTRIM) ORDER BY (- (rt1.c4 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (- (rt1.c4 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE RTRIM) ORDER BY (- (rt1.c4 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (- (rt1.c4 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE RTRIM) ORDER BY (- (rt1.c4 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((- (((t1.c41) NOTNULL)))) ORDER BY ((((NOT (t1.c41)), 0.6375774026771309, '0.6492784444133313'))>=((((((((((t1.c41)AND(t1.c41)))OR(t1.c41)))AND(t1.c41)))AND(t1.c41)), CASE WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END, ((t1.c41)<(t1.c41)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((t1.c41) NOTNULL)))) IS TRUE)  as count FROM t1 ORDER BY ((((NOT (t1.c41)), 0.6375774026771309, '0.6492784444133313'))>=((((((((((t1.c41)AND(t1.c41)))OR(t1.c41)))AND(t1.c41)))AND(t1.c41)), CASE WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END, ((t1.c41)<(t1.c41)))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((- (((t1.c41) NOTNULL)))) ORDER BY ((((NOT (t1.c41)), 0.6375774026771309, '0.6492784444133313'))>=((((((((((t1.c41)AND(t1.c41)))OR(t1.c41)))AND(t1.c41)))AND(t1.c41)), CASE WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END, ((t1.c41)<(t1.c41)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((t1.c41) NOTNULL)))) IS TRUE)  as count FROM t1 ORDER BY ((((NOT (t1.c41)), 0.6375774026771309, '0.6492784444133313'))>=((((((((((t1.c41)AND(t1.c41)))OR(t1.c41)))AND(t1.c41)))AND(t1.c41)), CASE WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END, ((t1.c41)<(t1.c41)))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((- (((t1.c41) NOTNULL)))) ORDER BY ((((NOT (t1.c41)), 0.6375774026771309, '0.6492784444133313'))>=((((((((((t1.c41)AND(t1.c41)))OR(t1.c41)))AND(t1.c41)))AND(t1.c41)), CASE WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END, ((t1.c41)<(t1.c41)))))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((NOT (CAST(t1.c41 AS BLOB)))) ORDER BY ((((((((t1.c41)AND(t1.c41)))AND(t1.c41)))AND(CASE t1.c41  WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END)))OR(((t1.c41)IS(0.3099471585102044)))) ASC  NULLS FIRST, ((CASE WHEN t1.c41 THEN t1.c41 WHEN NULL THEN t1.c41 WHEN x'' THEN t1.c41 ELSE t1.c41 END)OR(((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t1.c41 AS BLOB)))) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c41)AND(t1.c41)))AND(t1.c41)))AND(CASE t1.c41  WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END)))OR(((t1.c41)IS(0.3099471585102044)))) ASC  NULLS FIRST, ((CASE WHEN t1.c41 THEN t1.c41 WHEN NULL THEN t1.c41 WHEN x'' THEN t1.c41 ELSE t1.c41 END)OR(((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((NOT (CAST(t1.c41 AS BLOB)))) ORDER BY ((((((((t1.c41)AND(t1.c41)))AND(t1.c41)))AND(CASE t1.c41  WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END)))OR(((t1.c41)IS(0.3099471585102044)))) ASC  NULLS FIRST, ((CASE WHEN t1.c41 THEN t1.c41 WHEN NULL THEN t1.c41 WHEN x'' THEN t1.c41 ELSE t1.c41 END)OR(((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t1.c41 AS BLOB)))) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c41)AND(t1.c41)))AND(t1.c41)))AND(CASE t1.c41  WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END)))OR(((t1.c41)IS(0.3099471585102044)))) ASC  NULLS FIRST, ((CASE WHEN t1.c41 THEN t1.c41 WHEN NULL THEN t1.c41 WHEN x'' THEN t1.c41 ELSE t1.c41 END)OR(((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((NOT (CAST(t1.c41 AS BLOB)))) ORDER BY ((((((((t1.c41)AND(t1.c41)))AND(t1.c41)))AND(CASE t1.c41  WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END)))OR(((t1.c41)IS(0.3099471585102044)))) ASC  NULLS FIRST, ((CASE WHEN t1.c41 THEN t1.c41 WHEN NULL THEN t1.c41 WHEN x'' THEN t1.c41 ELSE t1.c41 END)OR(((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))))  NULLS LAST;
SELECT ALL * FROM rt0, t1 WHERE (t1.c41 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t1.c41 COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (t1.c41 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t1.c41 COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (t1.c41 COLLATE NOCASE);
SELECT * FROM t1, rt1 WHERE (CASE ((rt1.c4)<=(1.405963654E9))  WHEN (- (t1.c41)) THEN ((t1.c41)<<(t1.c41)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c4)<=(1.405963654E9))  WHEN (- (t1.c41)) THEN ((t1.c41)<<(t1.c41)) END) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (CASE ((rt1.c4)<=(1.405963654E9))  WHEN (- (t1.c41)) THEN ((t1.c41)<<(t1.c41)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c4)<=(1.405963654E9))  WHEN (- (t1.c41)) THEN ((t1.c41)<<(t1.c41)) END) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (CASE ((rt1.c4)<=(1.405963654E9))  WHEN (- (t1.c41)) THEN ((t1.c41)<<(t1.c41)) END);
SELECT ALL * FROM rt0 WHERE (((SQLITE_SOURCE_ID()) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID()) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((SQLITE_SOURCE_ID()) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID()) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((SQLITE_SOURCE_ID()) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL * FROM rt0, t1, rt1 WHERE (0.2210478835454177) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c2)-(rt1.c3)))) AND ((rt1.c2 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.2210478835454177) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c2)-(rt1.c3)))) AND ((rt1.c2 COLLATE BINARY))) DESC);
SELECT ALL * FROM rt0, t1, rt1 WHERE (0.2210478835454177) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c2)-(rt1.c3)))) AND ((rt1.c2 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.2210478835454177) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c2)-(rt1.c3)))) AND ((rt1.c2 COLLATE BINARY))) DESC);
SELECT ALL * FROM rt0, t1, rt1 WHERE (0.2210478835454177) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c2)-(rt1.c3)))) AND ((rt1.c2 COLLATE BINARY))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN (rt0.c2 IN ()) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)) WHEN CAST(rt0.c1 AS NUMERIC) THEN ((((((((rt0.c0)AND(rt0.c0)))AND(NULL)))AND('1243741422')))OR(rt0.c2)) WHEN (0xffffffffec7484a0 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN -2.34364461E8 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END WHEN CASE rt0.c1  WHEN 0xffffffff8bc2c57d THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN (((rt0.c1, rt0.c1, rt0.c0))==((NULL, rt0.c1, rt0.c2))) END) ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) IS FALSE)  WHEN (rt0.c2 IN ()) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)) WHEN CAST(rt0.c1 AS NUMERIC) THEN ((((((((rt0.c0)AND(rt0.c0)))AND(NULL)))AND('1243741422')))OR(rt0.c2)) WHEN (0xffffffffec7484a0 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN -2.34364461E8 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END WHEN CASE rt0.c1  WHEN 0Xffffffff8bc2c57d THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN (((rt0.c1, rt0.c1, rt0.c0))==((NULL, rt0.c1, rt0.c2))) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c0)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN (rt0.c2 IN ()) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)) WHEN CAST(rt0.c1 AS NUMERIC) THEN ((((((((rt0.c0)AND(rt0.c0)))AND(NULL)))AND('1243741422')))OR(rt0.c2)) WHEN (0xffffffffec7484a0 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN -2.34364461E8 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END WHEN CASE rt0.c1  WHEN 0xffffffff8bc2c57d THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN (((rt0.c1, rt0.c1, rt0.c0))==((NULL, rt0.c1, rt0.c2))) END) ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) IS FALSE)  WHEN (rt0.c2 IN ()) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)) WHEN CAST(rt0.c1 AS NUMERIC) THEN ((((((((rt0.c0)AND(rt0.c0)))AND(NULL)))AND('1243741422')))OR(rt0.c2)) WHEN (0xffffffffec7484a0 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN -2.34364461E8 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END WHEN CASE rt0.c1  WHEN 0Xffffffff8bc2c57d THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN (((rt0.c1, rt0.c1, rt0.c0))==((NULL, rt0.c1, rt0.c2))) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c0)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN (rt0.c2 IN ()) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)) WHEN CAST(rt0.c1 AS NUMERIC) THEN ((((((((rt0.c0)AND(rt0.c0)))AND(NULL)))AND('1243741422')))OR(rt0.c2)) WHEN (0xffffffffec7484a0 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN -2.34364461E8 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END WHEN CASE rt0.c1  WHEN 0xffffffff8bc2c57d THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN (((rt0.c1, rt0.c1, rt0.c0))==((NULL, rt0.c1, rt0.c2))) END) ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c0)) DESC;
SELECT ALL * FROM t1, rt1 WHERE (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t1, rt1);
SELECT ALL * FROM t1, rt1 WHERE (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t1, rt1);
SELECT ALL * FROM t1, rt1 WHERE (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c4)))) NOT BETWEEN (((rt1.c2)GLOB(NULL))) AND ((rt1.c2 IN (rt1.c3))))) ORDER BY (((((rt1.c2) NOT NULL)))>=((((('-816253706', rt1.c2, rt1.c2)) BETWEEN ((rt1.c3, rt1.c1, rt0.c0)) AND ((rt1.c0, rt0.c0, rt0.c2)))))) DESC, CAST(t1.c41 AS BLOB) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c4)))) NOT BETWEEN (((rt1.c2)GLOB(NULL))) AND ((rt1.c2 IN (rt1.c3))))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY (((((rt1.c2) NOT NULL)))>=((((('-816253706', rt1.c2, rt1.c2)) BETWEEN ((rt1.c3, rt1.c1, rt0.c0)) AND ((rt1.c0, rt0.c0, rt0.c2)))))) DESC, CAST(t1.c41 AS BLOB) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c4)))) NOT BETWEEN (((rt1.c2)GLOB(NULL))) AND ((rt1.c2 IN (rt1.c3))))) ORDER BY (((((rt1.c2) NOT NULL)))>=((((('-816253706', rt1.c2, rt1.c2)) BETWEEN ((rt1.c3, rt1.c1, rt0.c0)) AND ((rt1.c0, rt0.c0, rt0.c2)))))) DESC, CAST(t1.c41 AS BLOB) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c4)))) NOT BETWEEN (((rt1.c2)GLOB(NULL))) AND ((rt1.c2 IN (rt1.c3))))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY (((((rt1.c2) NOT NULL)))>=((((('-816253706', rt1.c2, rt1.c2)) BETWEEN ((rt1.c3, rt1.c1, rt0.c0)) AND ((rt1.c0, rt0.c0, rt0.c2)))))) DESC, CAST(t1.c41 AS BLOB) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c4)))) NOT BETWEEN (((rt1.c2)GLOB(NULL))) AND ((rt1.c2 IN (rt1.c3))))) ORDER BY (((((rt1.c2) NOT NULL)))>=((((('-816253706', rt1.c2, rt1.c2)) BETWEEN ((rt1.c3, rt1.c1, rt0.c0)) AND ((rt1.c0, rt0.c0, rt0.c2)))))) DESC, CAST(t1.c41 AS BLOB) COLLATE BINARY;
SELECT * FROM rt0, t1, rt1 WHERE ((((- (rt1.c3)))|(((rt0.c2)>>(rt0.c1))))) ORDER BY (((((376451834))<>((rt1.c4))))|(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c2 THEN 106419287 WHEN rt1.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END))  NULLS LAST, (NOT (((rt0.c0) BETWEEN (x'') AND (rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c3)))|(((rt0.c2)>>(rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED, t1, rt1 ORDER BY (((((376451834))<>((rt1.c4))))|(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c2 THEN 106419287 WHEN rt1.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END))  NULLS LAST, (NOT (((rt0.c0) BETWEEN (x'') AND (rt1.c3))))  NULLS FIRST);
SELECT * FROM rt0, t1, rt1 WHERE ((((- (rt1.c3)))|(((rt0.c2)>>(rt0.c1))))) ORDER BY (((((376451834))<>((rt1.c4))))|(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c2 THEN 106419287 WHEN rt1.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END))  NULLS LAST, (NOT (((rt0.c0) BETWEEN (x'') AND (rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c3)))|(((rt0.c2)>>(rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED, t1, rt1 ORDER BY (((((376451834))<>((rt1.c4))))|(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c2 THEN 106419287 WHEN rt1.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END))  NULLS LAST, (NOT (((rt0.c0) BETWEEN (x'') AND (rt1.c3))))  NULLS FIRST);
SELECT * FROM rt0, t1, rt1 WHERE ((((- (rt1.c3)))|(((rt0.c2)>>(rt0.c1))))) ORDER BY (((((376451834))<>((rt1.c4))))|(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c2 THEN 106419287 WHEN rt1.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END))  NULLS LAST, (NOT (((rt0.c0) BETWEEN (x'') AND (rt1.c3))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)+(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)+(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)+(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)+(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)+(rt0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY (((((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c4)))OR(rt1.c3)))AND(rt1.c3)))AND(rt1.c2)) IN ()) ASC, (((rt1.c1) IS TRUE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY (((((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c4)))OR(rt1.c3)))AND(rt1.c3)))AND(rt1.c2)) IN ()) ASC, (((rt1.c1) IS TRUE) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY (((((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c4)))OR(rt1.c3)))AND(rt1.c3)))AND(rt1.c2)) IN ()) ASC, (((rt1.c1) IS TRUE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY (((((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c4)))OR(rt1.c3)))AND(rt1.c3)))AND(rt1.c2)) IN ()) ASC, (((rt1.c1) IS TRUE) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY (((((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c4)))OR(rt1.c3)))AND(rt1.c3)))AND(rt1.c2)) IN ()) ASC, (((rt1.c1) IS TRUE) IN ()) ASC;
SELECT ALL * FROM t1 CROSS JOIN rt0 ON rt0.c2 INNER JOIN rt1 ON ((NOT (rt1.c4)) IN ()) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON rt0.c2 INNER JOIN rt1 ON ((NOT (rt1.c4)) IN ()));
SELECT ALL * FROM t1 CROSS JOIN rt0 ON rt0.c2 INNER JOIN rt1 ON ((NOT (rt1.c4)) IN ()) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON rt0.c2 INNER JOIN rt1 ON ((NOT (rt1.c4)) IN ()));
SELECT ALL * FROM t1 CROSS JOIN rt0 ON rt0.c2 INNER JOIN rt1 ON ((NOT (rt1.c4)) IN ()) WHERE (NULL);
SELECT * FROM rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (highlight((rt1.c3 IN ()), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)), ((((rt1.c0)OR(rt1.c2)))OR(t1.c41)), ((-1945881462)*(rt1.c3))));
SELECT SUM(count) FROM (SELECT ((highlight((rt1.c3 IN ()), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)), ((((rt1.c0)OR(rt1.c2)))OR(t1.c41)), ((-1945881462)*(rt1.c3)))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (highlight((rt1.c3 IN ()), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)), ((((rt1.c0)OR(rt1.c2)))OR(t1.c41)), ((-1945881462)*(rt1.c3))));
SELECT SUM(count) FROM (SELECT ((highlight((rt1.c3 IN ()), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)), ((((rt1.c0)OR(rt1.c2)))OR(t1.c41)), ((-1945881462)*(rt1.c3)))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (highlight((rt1.c3 IN ()), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)), ((((rt1.c0)OR(rt1.c2)))OR(t1.c41)), ((-1945881462)*(rt1.c3))));
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN t1 ON CAST((- (rt0.c2)) AS TEXT) WHERE ((- (((rt0.c0)+(rt1.c0))))) ORDER BY ((((rt0.c1)!=(rt1.c3))) BETWEEN (((((((((rt1.c3)OR(rt1.c3)))AND(NULL)))AND(rt0.c0)))AND(x''))) AND ((((rt1.c4))==((rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)+(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t1 ON CAST((- (rt0.c2)) AS TEXT) ORDER BY ((((rt0.c1)!=(rt1.c3))) BETWEEN (((((((((rt1.c3)OR(rt1.c3)))AND(NULL)))AND(rt0.c0)))AND(x''))) AND ((((rt1.c4))=((rt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN t1 ON CAST((- (rt0.c2)) AS TEXT) WHERE ((- (((rt0.c0)+(rt1.c0))))) ORDER BY ((((rt0.c1)!=(rt1.c3))) BETWEEN (((((((((rt1.c3)OR(rt1.c3)))AND(NULL)))AND(rt0.c0)))AND(x''))) AND ((((rt1.c4))==((rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)+(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t1 ON CAST((- (rt0.c2)) AS TEXT) ORDER BY ((((rt0.c1)!=(rt1.c3))) BETWEEN (((((((((rt1.c3)OR(rt1.c3)))AND(NULL)))AND(rt0.c0)))AND(x''))) AND ((((rt1.c4))=((rt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN t1 ON CAST((- (rt0.c2)) AS TEXT) WHERE ((- (((rt0.c0)+(rt1.c0))))) ORDER BY ((((rt0.c1)!=(rt1.c3))) BETWEEN (((((((((rt1.c3)OR(rt1.c3)))AND(NULL)))AND(rt0.c0)))AND(x''))) AND ((((rt1.c4))==((rt0.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE ((((((rt0.c2))<=((rt0.c2))))<(NULLIF(rt1.c4, t1.c41))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<=((rt0.c2))))<(NULLIF(rt1.c4, t1.c41)))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE ((((((rt0.c2))<=((rt0.c2))))<(NULLIF(rt1.c4, t1.c41))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<=((rt0.c2))))<(NULLIF(rt1.c4, t1.c41)))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE ((((((rt0.c2))<=((rt0.c2))))<(NULLIF(rt1.c4, t1.c41))));
SELECT ALL * FROM t1 WHERE ((((IFNULL(t1.c41, t1.c41), CAST(t1.c41 AS NUMERIC), (((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41)))))<=((CASE t1.c41  WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END, (t1.c41 IN ()), (t1.c41 IN ()))))) ORDER BY SUBSTR(((t1.c41)||(t1.c41)), t1.c41), (((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, t1.c41, t1.c41))))LIKE(t1.c41 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((IFNULL(t1.c41, t1.c41), CAST(t1.c41 AS NUMERIC), (((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41)))))<=((CASE t1.c41  WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END, (t1.c41 IN ()), (t1.c41 IN ()))))) IS TRUE)  as count FROM t1 ORDER BY SUBSTR(((t1.c41)||(t1.c41)), t1.c41), (((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, t1.c41, t1.c41))))LIKE(t1.c41 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((((IFNULL(t1.c41, t1.c41), CAST(t1.c41 AS NUMERIC), (((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41)))))<=((CASE t1.c41  WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END, (t1.c41 IN ()), (t1.c41 IN ()))))) ORDER BY SUBSTR(((t1.c41)||(t1.c41)), t1.c41), (((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, t1.c41, t1.c41))))LIKE(t1.c41 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((IFNULL(t1.c41, t1.c41), CAST(t1.c41 AS NUMERIC), (((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41)))))<=((CASE t1.c41  WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END, (t1.c41 IN ()), (t1.c41 IN ()))))) IS TRUE)  as count FROM t1 ORDER BY SUBSTR(((t1.c41)||(t1.c41)), t1.c41), (((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, t1.c41, t1.c41))))LIKE(t1.c41 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((((IFNULL(t1.c41, t1.c41), CAST(t1.c41 AS NUMERIC), (((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41)))))<=((CASE t1.c41  WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END, (t1.c41 IN ()), (t1.c41 IN ()))))) ORDER BY SUBSTR(((t1.c41)||(t1.c41)), t1.c41), (((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, t1.c41, t1.c41))))LIKE(t1.c41 COLLATE BINARY)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t1 WHERE (rt0.c1) ORDER BY (NULL IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t1 ORDER BY (NULL IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1 WHERE (rt0.c1) ORDER BY (NULL IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t1 ORDER BY (NULL IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1 WHERE (rt0.c1) ORDER BY (NULL IN ()) DESC  NULLS FIRST;
SELECT * FROM rt1, t1, rt0 WHERE (LIKELIHOOD((t1.c41 IN (rt1.c1, rt1.c1)), 0.869754211485934));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((t1.c41 IN (rt1.c1, rt1.c1)), 0.869754211485934)) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE (LIKELIHOOD((t1.c41 IN (rt1.c1, rt1.c1)), 0.869754211485934));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((t1.c41 IN (rt1.c1, rt1.c1)), 0.869754211485934)) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE (LIKELIHOOD((t1.c41 IN (rt1.c1, rt1.c1)), 0.869754211485934));
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (((rt1.c2) NOT BETWEEN (((rt0.c1)<<(rt0.c1))) AND (CAST(rt1.c4 AS REAL)))) ORDER BY ((CAST(rt0.c2 AS NUMERIC))||(((rt1.c2)OR(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOT BETWEEN (((rt0.c1)<<(rt0.c1))) AND (CAST(rt1.c4 AS REAL)))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY ((CAST(rt0.c2 AS NUMERIC))||(((rt1.c2)OR(rt1.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (((rt1.c2) NOT BETWEEN (((rt0.c1)<<(rt0.c1))) AND (CAST(rt1.c4 AS REAL)))) ORDER BY ((CAST(rt0.c2 AS NUMERIC))||(((rt1.c2)OR(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOT BETWEEN (((rt0.c1)<<(rt0.c1))) AND (CAST(rt1.c4 AS REAL)))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY ((CAST(rt0.c2 AS NUMERIC))||(((rt1.c2)OR(rt1.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (((rt1.c2) NOT BETWEEN (((rt0.c1)<<(rt0.c1))) AND (CAST(rt1.c4 AS REAL)))) ORDER BY ((CAST(rt0.c2 AS NUMERIC))||(((rt1.c2)OR(rt1.c1)))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c1, rt0.c1, NULL, rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c1))>=((rt0.c2))), ((((rt0.c2)OR(rt0.c0)))OR(x'35ee')), x'', x'', LIKELY(DISTINCT rt0.c1))) AND (((rt0.c1 IN ()), (rt0.c0 IN ()), CAST(rt0.c1 AS TEXT), ((rt0.c2)==(rt0.c1)), (rt0.c1 IN (rt0.c2))))) DESC  NULLS FIRST, CASE 0.47368283664632516  WHEN ((rt0.c1)GLOB(rt0.c2)) THEN (+ (rt0.c1)) WHEN CASE '{'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN '' WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c1)<<(rt0.c2)) WHEN (((rt0.c1, rt0.c0, rt0.c2))<((rt0.c0, rt0.c0, rt0.c2))) THEN ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c1, NULL, rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c1))>=((rt0.c2))), ((((rt0.c2)OR(rt0.c0)))OR(x'35ee')), x'', x'', LIKELY(DISTINCT rt0.c1))) AND (((rt0.c1 IN ()), (rt0.c0 IN ()), CAST(rt0.c1 AS TEXT), ((rt0.c2)=(rt0.c1)), (rt0.c1 IN (rt0.c2))))) DESC  NULLS FIRST, CASE 0.47368283664632516  WHEN ((rt0.c1)GLOB(rt0.c2)) THEN (+ (rt0.c1)) WHEN CASE '{'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN '' WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c1)<<(rt0.c2)) WHEN (((rt0.c1, rt0.c0, rt0.c2))<((rt0.c0, rt0.c0, rt0.c2))) THEN ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)) END DESC);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c1, rt0.c1, NULL, rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c1))>=((rt0.c2))), ((((rt0.c2)OR(rt0.c0)))OR(x'35ee')), x'', x'', LIKELY(DISTINCT rt0.c1))) AND (((rt0.c1 IN ()), (rt0.c0 IN ()), CAST(rt0.c1 AS TEXT), ((rt0.c2)==(rt0.c1)), (rt0.c1 IN (rt0.c2))))) DESC  NULLS FIRST, CASE 0.47368283664632516  WHEN ((rt0.c1)GLOB(rt0.c2)) THEN (+ (rt0.c1)) WHEN CASE '{'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN '' WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c1)<<(rt0.c2)) WHEN (((rt0.c1, rt0.c0, rt0.c2))<((rt0.c0, rt0.c0, rt0.c2))) THEN ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c1, NULL, rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c1))>=((rt0.c2))), ((((rt0.c2)OR(rt0.c0)))OR(x'35ee')), x'', x'', LIKELY(DISTINCT rt0.c1))) AND (((rt0.c1 IN ()), (rt0.c0 IN ()), CAST(rt0.c1 AS TEXT), ((rt0.c2)=(rt0.c1)), (rt0.c1 IN (rt0.c2))))) DESC  NULLS FIRST, CASE 0.47368283664632516  WHEN ((rt0.c1)GLOB(rt0.c2)) THEN (+ (rt0.c1)) WHEN CASE '{'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN '' WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c1)<<(rt0.c2)) WHEN (((rt0.c1, rt0.c0, rt0.c2))<((rt0.c0, rt0.c0, rt0.c2))) THEN ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)) END DESC);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c1, rt0.c1, NULL, rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c1))>=((rt0.c2))), ((((rt0.c2)OR(rt0.c0)))OR(x'35ee')), x'', x'', LIKELY(DISTINCT rt0.c1))) AND (((rt0.c1 IN ()), (rt0.c0 IN ()), CAST(rt0.c1 AS TEXT), ((rt0.c2)==(rt0.c1)), (rt0.c1 IN (rt0.c2))))) DESC  NULLS FIRST, CASE 0.47368283664632516  WHEN ((rt0.c1)GLOB(rt0.c2)) THEN (+ (rt0.c1)) WHEN CASE '{'  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN '' WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c1)<<(rt0.c2)) WHEN (((rt0.c1, rt0.c0, rt0.c2))<((rt0.c0, rt0.c0, rt0.c2))) THEN ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)) END DESC;
SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(ABS(t1.c41))) ORDER BY CAST(((t1.c41) NOT BETWEEN ('') AND (t1.c41)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(ABS(t1.c41))) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c41) NOT BETWEEN ('') AND (t1.c41)) AS REAL) ASC);
SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(ABS(t1.c41))) ORDER BY CAST(((t1.c41) NOT BETWEEN ('') AND (t1.c41)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(ABS(t1.c41))) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c41) NOT BETWEEN ('') AND (t1.c41)) AS REAL) ASC);
SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(ABS(t1.c41))) ORDER BY CAST(((t1.c41) NOT BETWEEN ('') AND (t1.c41)) AS REAL) ASC;
SELECT * FROM rt1 WHERE (((((rt1.c4))>=((rt1.c4))) IN (rt1.c4))) ORDER BY 'VR';
SELECT SUM(count) FROM (SELECT ((((((rt1.c4))>=((rt1.c4))) IN (rt1.c4))) IS TRUE)  as count FROM rt1 ORDER BY 'VR');
SELECT * FROM rt1 WHERE (((((rt1.c4))>=((rt1.c4))) IN (rt1.c4))) ORDER BY 'VR';
SELECT SUM(count) FROM (SELECT ((((((rt1.c4))>=((rt1.c4))) IN (rt1.c4))) IS TRUE)  as count FROM rt1 ORDER BY 'VR');
SELECT * FROM rt1 WHERE (((((rt1.c4))>=((rt1.c4))) IN (rt1.c4))) ORDER BY 'VR';
SELECT * FROM rt1, rt0 NOT INDEXED, t1 WHERE (((((rt0.c0)|(rt1.c0))) NOT BETWEEN (rt0.c0) AND ((((rt1.c4, rt1.c2, rt0.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, x'0a15')) AND ((t1.c41, rt1.c1, rt1.c3)))))) ORDER BY ((((rt0.c0)>(rt1.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt1.c4 END) AND (((rt0.c2)=(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)|(rt1.c0))) NOT BETWEEN (rt0.c0) AND ((((rt1.c4, rt1.c2, rt0.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, x'0a15')) AND ((t1.c41, rt1.c1, rt1.c3)))))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY ((((rt0.c0)>(rt1.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt1.c4 END) AND (((rt0.c2)=(rt0.c2)))) DESC);
SELECT * FROM rt1, rt0 NOT INDEXED, t1 WHERE (((((rt0.c0)|(rt1.c0))) NOT BETWEEN (rt0.c0) AND ((((rt1.c4, rt1.c2, rt0.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, x'0a15')) AND ((t1.c41, rt1.c1, rt1.c3)))))) ORDER BY ((((rt0.c0)>(rt1.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt1.c4 END) AND (((rt0.c2)=(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)|(rt1.c0))) NOT BETWEEN (rt0.c0) AND ((((rt1.c4, rt1.c2, rt0.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, x'0a15')) AND ((t1.c41, rt1.c1, rt1.c3)))))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY ((((rt0.c0)>(rt1.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt1.c4 END) AND (((rt0.c2)=(rt0.c2)))) DESC);
SELECT * FROM rt1, rt0 NOT INDEXED, t1 WHERE (((((rt0.c0)|(rt1.c0))) NOT BETWEEN (rt0.c0) AND ((((rt1.c4, rt1.c2, rt0.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, x'0a15')) AND ((t1.c41, rt1.c1, rt1.c3)))))) ORDER BY ((((rt0.c0)>(rt1.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt1.c4 END) AND (((rt0.c2)=(rt0.c2)))) DESC;
SELECT ALL * FROM t1, rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((-1014021523)))) BETWEEN (((rt0.c1) IS TRUE)) AND (((t1.c41)<<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((-1014021523)))) BETWEEN (((rt0.c1) IS TRUE)) AND (((t1.c41)<<(rt0.c1))))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((-1014021523)))) BETWEEN (((rt0.c1) IS TRUE)) AND (((t1.c41)<<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((-1014021523)))) BETWEEN (((rt0.c1) IS TRUE)) AND (((t1.c41)<<(rt0.c1))))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((-1014021523)))) BETWEEN (((rt0.c1) IS TRUE)) AND (((t1.c41)<<(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (TIME(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(t1.c41)), COALESCE(t1.c41, t1.c41), rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((TIME(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(t1.c41)), COALESCE(t1.c41, t1.c41), rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (TIME(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(t1.c41)), COALESCE(t1.c41, t1.c41), rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((TIME(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(t1.c41)), COALESCE(t1.c41, t1.c41), rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (TIME(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(t1.c41)), COALESCE(t1.c41, t1.c41), rt0.c0 COLLATE NOCASE));
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0)+(rt0.c1)))))AND((- (rt0.c2)))))OR(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0 COLLATE NOCASE)AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0)+(rt0.c1)))))AND((- (rt0.c2)))))OR(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0)+(rt0.c1)))))AND((- (rt0.c2)))))OR(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0 COLLATE NOCASE)AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0)+(rt0.c1)))))AND((- (rt0.c2)))))OR(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0)+(rt0.c1)))))AND((- (rt0.c2)))))OR(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))));
SELECT COUNT(*) FROM t1, rt0 WHERE (NULLIF(((t1.c41) IS FALSE), (t1.c41 IN ()))) ORDER BY (((t1.c41)=(t1.c41)) IN ())  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c0 THEN t1.c41 ELSE rt0.c1 END)&(t1.c41 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((t1.c41) IS FALSE), (t1.c41 IN ()))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((t1.c41)=(t1.c41)) IN ())  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c0 THEN t1.c41 ELSE rt0.c1 END)&(t1.c41 COLLATE BINARY)));
SELECT COUNT(*) FROM t1, rt0 WHERE (NULLIF(((t1.c41) IS FALSE), (t1.c41 IN ()))) ORDER BY (((t1.c41)=(t1.c41)) IN ())  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c0 THEN t1.c41 ELSE rt0.c1 END)&(t1.c41 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((t1.c41) IS FALSE), (t1.c41 IN ()))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((t1.c41)=(t1.c41)) IN ())  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c0 THEN t1.c41 ELSE rt0.c1 END)&(t1.c41 COLLATE BINARY)));
SELECT COUNT(*) FROM t1, rt0 WHERE (NULLIF(((t1.c41) IS FALSE), (t1.c41 IN ()))) ORDER BY (((t1.c41)=(t1.c41)) IN ())  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c0 THEN t1.c41 ELSE rt0.c1 END)&(t1.c41 COLLATE BINARY));
SELECT ALL * FROM t1, rt1 WHERE (TOTAL_CHANGES()) ORDER BY '맖耫<SvLZ';
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM t1, rt1 ORDER BY '맖耫<SvLZ');
SELECT ALL * FROM t1, rt1 WHERE (TOTAL_CHANGES()) ORDER BY '맖耫<SvLZ';
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM t1, rt1 ORDER BY '맖耫<SvLZ');
SELECT ALL * FROM t1, rt1 WHERE (TOTAL_CHANGES()) ORDER BY '맖耫<SvLZ';
SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY (((t1.c41, t1.c41, t1.c41)) NOT BETWEEN ((t1.c41, ((((t1.c41)AND(t1.c41)))OR(t1.c41)), (('-1025417324')GLOB(t1.c41)))) AND ((((((t1.c41)AND(t1.c41)))OR(t1.c41)), ((x'')%(t1.c41)), (NOT (t1.c41))))), 0.15543715797732094 DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 ORDER BY (((t1.c41, t1.c41, t1.c41)) NOT BETWEEN ((t1.c41, ((((t1.c41)AND(t1.c41)))OR(t1.c41)), (('-1025417324')GLOB(t1.c41)))) AND ((((((t1.c41)AND(t1.c41)))OR(t1.c41)), ((x'')%(t1.c41)), (NOT (t1.c41))))), 0.15543715797732094 DESC);
SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY (((t1.c41, t1.c41, t1.c41)) NOT BETWEEN ((t1.c41, ((((t1.c41)AND(t1.c41)))OR(t1.c41)), (('-1025417324')GLOB(t1.c41)))) AND ((((((t1.c41)AND(t1.c41)))OR(t1.c41)), ((x'')%(t1.c41)), (NOT (t1.c41))))), 0.15543715797732094 DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 ORDER BY (((t1.c41, t1.c41, t1.c41)) NOT BETWEEN ((t1.c41, ((((t1.c41)AND(t1.c41)))OR(t1.c41)), (('-1025417324')GLOB(t1.c41)))) AND ((((((t1.c41)AND(t1.c41)))OR(t1.c41)), ((x'')%(t1.c41)), (NOT (t1.c41))))), 0.15543715797732094 DESC);
SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY (((t1.c41, t1.c41, t1.c41)) NOT BETWEEN ((t1.c41, ((((t1.c41)AND(t1.c41)))OR(t1.c41)), (('-1025417324')GLOB(t1.c41)))) AND ((((((t1.c41)AND(t1.c41)))OR(t1.c41)), ((x'')%(t1.c41)), (NOT (t1.c41))))), 0.15543715797732094 DESC;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON ((NOT (NULL)) IN (((0.9919049688712558) BETWEEN (rt0.c0) AND (rt0.c0)))) WHERE (CASE (((t1.c41)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN load_extension(rt0.c2) THEN rt0.c1 ELSE rt0.c0 END) ORDER BY ((((0.27926824070454925)AND(TYPEOF(DISTINCT t1.c41))))OR((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE (((t1.c41)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN load_extension(rt0.c2) THEN rt0.c1 ELSE rt0.c0 END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((NOT (NULL)) IN (((0.9919049688712558) BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY ((((0.27926824070454925)AND(TYPEOF(DISTINCT t1.c41))))OR((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON ((NOT (NULL)) IN (((0.9919049688712558) BETWEEN (rt0.c0) AND (rt0.c0)))) WHERE (CASE (((t1.c41)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN load_extension(rt0.c2) THEN rt0.c1 ELSE rt0.c0 END) ORDER BY ((((0.27926824070454925)AND(TYPEOF(DISTINCT t1.c41))))OR((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE (((t1.c41)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN load_extension(rt0.c2) THEN rt0.c1 ELSE rt0.c0 END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((NOT (NULL)) IN (((0.9919049688712558) BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY ((((0.27926824070454925)AND(TYPEOF(DISTINCT t1.c41))))OR((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((+ (rt1.c4)))IS(((rt1.c1)LIKE(rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c4)))IS(((rt1.c1)LIKE(rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((+ (rt1.c4)))IS(((rt1.c1)LIKE(rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c4)))IS(((rt1.c1)LIKE(rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((+ (rt1.c4)))IS(((rt1.c1)LIKE(rt1.c4)))));
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (HEX(0.7059104102873428 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((HEX(0.7059104102873428 COLLATE BINARY)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (HEX(0.7059104102873428 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((HEX(0.7059104102873428 COLLATE BINARY)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (HEX(0.7059104102873428 COLLATE BINARY));
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON 0.07595579193475277 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON 0.07595579193475277);
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON 0.07595579193475277 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON 0.07595579193475277);
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON 0.07595579193475277 WHERE ((NULL IN ()));
SELECT COUNT(*) FROM t1 CROSS JOIN rt0 ON ((((((((((((((rt1.c2)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))) BETWEEN ((NOT (rt0.c0))) AND (CAST(rt0.c1 AS NUMERIC))) RIGHT OUTER JOIN rt1 ON NULL COLLATE NOCASE WHERE (((((rt1.c0))!=((rt1.c2))) IN ())) ORDER BY HEX(DISTINCT (~ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0))!=((rt1.c2))) IN ())) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON ((((((((((((((rt1.c2)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))) BETWEEN ((NOT (rt0.c0))) AND (CAST(rt0.c1 AS NUMERIC))) RIGHT OUTER JOIN rt1 ON NULL COLLATE NOCASE ORDER BY HEX(DISTINCT (~ (rt0.c2))));
SELECT COUNT(*) FROM t1 CROSS JOIN rt0 ON ((((((((((((((rt1.c2)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))) BETWEEN ((NOT (rt0.c0))) AND (CAST(rt0.c1 AS NUMERIC))) RIGHT OUTER JOIN rt1 ON NULL COLLATE NOCASE WHERE (((((rt1.c0))!=((rt1.c2))) IN ())) ORDER BY HEX(DISTINCT (~ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0))!=((rt1.c2))) IN ())) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON ((((((((((((((rt1.c2)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c3)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))) BETWEEN ((NOT (rt0.c0))) AND (CAST(rt0.c1 AS NUMERIC))) RIGHT OUTER JOIN rt1 ON NULL COLLATE NOCASE ORDER BY HEX(DISTINCT (~ (rt0.c2))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN t1 WHERE (((LIKELIHOOD(rt0.c1, 0.6988904125960196)) BETWEEN (((rt0.c0)AND(rt0.c0))) AND (((((rt0.c0)AND(t1.c41)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt0.c1, 0.6988904125960196)) BETWEEN (((rt0.c0)AND(rt0.c0))) AND (((((rt0.c0)AND(t1.c41)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN t1 WHERE (((LIKELIHOOD(rt0.c1, 0.6988904125960196)) BETWEEN (((rt0.c0)AND(rt0.c0))) AND (((((rt0.c0)AND(t1.c41)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt0.c1, 0.6988904125960196)) BETWEEN (((rt0.c0)AND(rt0.c0))) AND (((((rt0.c0)AND(t1.c41)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN t1 WHERE (((LIKELIHOOD(rt0.c1, 0.6988904125960196)) BETWEEN (((rt0.c0)AND(rt0.c0))) AND (((((rt0.c0)AND(t1.c41)))OR(rt0.c0)))));
SELECT ALL * FROM rt0, rt1, t1 WHERE (((((rt0.c2)*(rt0.c2)))*(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)*(rt0.c2)))*(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE (((((rt0.c2)*(rt0.c2)))*(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)*(rt0.c2)))*(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE (((((rt0.c2)*(rt0.c2)))*(rt1.c2 COLLATE RTRIM)));
SELECT * FROM rt0, rt1 WHERE ((((rt0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt0.c0) ISNULL) IN ()));
SELECT * FROM rt0, rt1, t1 WHERE (json_insert(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (rt0.c2 IN (rt0.c1)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY ((((((rt1.c1) NOT NULL))AND(CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 END)))OR(rt0.c1));
SELECT SUM(count) FROM (SELECT ((json_insert(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (rt0.c2 IN (rt0.c1)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((((rt1.c1) NOT NULL))AND(CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 END)))OR(rt0.c1)));
SELECT * FROM rt0, rt1, t1 WHERE (json_insert(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (rt0.c2 IN (rt0.c1)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY ((((((rt1.c1) NOT NULL))AND(CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 END)))OR(rt0.c1));
SELECT SUM(count) FROM (SELECT ((json_insert(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (rt0.c2 IN (rt0.c1)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((((rt1.c1) NOT NULL))AND(CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 END)))OR(rt0.c1)));
SELECT * FROM rt0 WHERE (CASE ((rt0.c0)!=(rt0.c2))  WHEN ((rt0.c0)>(rt0.c0)) THEN rt0.c2 ELSE 0.004513530133635868 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)!=(rt0.c2))  WHEN ((rt0.c0)>(rt0.c0)) THEN rt0.c2 ELSE 0.004513530133635868 END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0)!=(rt0.c2))  WHEN ((rt0.c0)>(rt0.c0)) THEN rt0.c2 ELSE 0.004513530133635868 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)!=(rt0.c2))  WHEN ((rt0.c0)>(rt0.c0)) THEN rt0.c2 ELSE 0.004513530133635868 END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0)!=(rt0.c2))  WHEN ((rt0.c0)>(rt0.c0)) THEN rt0.c2 ELSE 0.004513530133635868 END);
SELECT * FROM rt1, rt0, t1 WHERE (((((rt1.c2)-(rt0.c1)))||(((rt1.c0)<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)-(rt0.c1)))||(((rt1.c0)<(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (((((rt1.c2)-(rt0.c1)))||(((rt1.c0)<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)-(rt0.c1)))||(((rt1.c0)<(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (((((rt1.c2)-(rt0.c1)))||(((rt1.c0)<(rt0.c0)))));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON (((x'', LIKELIHOOD(DISTINCT rt0.c0, 0.41756123503569065), ((t1.c41) BETWEEN (rt0.c0) AND (rt1.c4))))<((((rt0.c0)&(rt1.c4)), rt1.c4 COLLATE BINARY, ((rt1.c3) IS TRUE)))) RIGHT OUTER JOIN t1 ON (CAST(t1.c41 AS NUMERIC) IN ()) WHERE (CAST(rt1.c2 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((x'', LIKELIHOOD(DISTINCT rt0.c0, 0.41756123503569065), ((t1.c41) BETWEEN (rt0.c0) AND (rt1.c4))))<((((rt0.c0)&(rt1.c4)), rt1.c4 COLLATE BINARY, ((rt1.c3) IS TRUE)))) RIGHT OUTER JOIN t1 ON (CAST(t1.c41 AS NUMERIC) IN ()));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON (((x'', LIKELIHOOD(DISTINCT rt0.c0, 0.41756123503569065), ((t1.c41) BETWEEN (rt0.c0) AND (rt1.c4))))<((((rt0.c0)&(rt1.c4)), rt1.c4 COLLATE BINARY, ((rt1.c3) IS TRUE)))) RIGHT OUTER JOIN t1 ON (CAST(t1.c41 AS NUMERIC) IN ()) WHERE (CAST(rt1.c2 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((x'', LIKELIHOOD(DISTINCT rt0.c0, 0.41756123503569065), ((t1.c41) BETWEEN (rt0.c0) AND (rt1.c4))))<((((rt0.c0)&(rt1.c4)), rt1.c4 COLLATE BINARY, ((rt1.c3) IS TRUE)))) RIGHT OUTER JOIN t1 ON (CAST(t1.c41 AS NUMERIC) IN ()));
SELECT * FROM t1 WHERE (CASE WHEN NULL THEN x'' ELSE ((t1.c41) NOTNULL) END) ORDER BY ((CASE WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END) BETWEEN (((t1.c41)OR(t1.c41))) AND (t1.c41 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN x'' ELSE ((t1.c41) NOTNULL) END) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END) BETWEEN (((t1.c41)OR(t1.c41))) AND (t1.c41 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (CASE WHEN NULL THEN x'' ELSE ((t1.c41) NOTNULL) END) ORDER BY ((CASE WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END) BETWEEN (((t1.c41)OR(t1.c41))) AND (t1.c41 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN x'' ELSE ((t1.c41) NOTNULL) END) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END) BETWEEN (((t1.c41)OR(t1.c41))) AND (t1.c41 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (CASE WHEN NULL THEN x'' ELSE ((t1.c41) NOTNULL) END) ORDER BY ((CASE WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END) BETWEEN (((t1.c41)OR(t1.c41))) AND (t1.c41 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL * FROM t1, rt1, rt0 WHERE (((rt1.c4 COLLATE NOCASE) BETWEEN ((((rt1.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, '', rt1.c0)) AND ((rt0.c1, x'', rt0.c2)))) AND (LIKE(rt1.c4, t1.c41, 'B'))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4 COLLATE NOCASE) BETWEEN ((((rt1.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, '', rt1.c0)) AND ((rt0.c1, x'', rt0.c2)))) AND (LIKE(rt1.c4, t1.c41, 'B')))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE (((rt1.c4 COLLATE NOCASE) BETWEEN ((((rt1.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, '', rt1.c0)) AND ((rt0.c1, x'', rt0.c2)))) AND (LIKE(rt1.c4, t1.c41, 'B'))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4 COLLATE NOCASE) BETWEEN ((((rt1.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, '', rt1.c0)) AND ((rt0.c1, x'', rt0.c2)))) AND (LIKE(rt1.c4, t1.c41, 'B')))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE (((rt1.c4 COLLATE NOCASE) BETWEEN ((((rt1.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, '', rt1.c0)) AND ((rt0.c1, x'', rt0.c2)))) AND (LIKE(rt1.c4, t1.c41, 'B'))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c41)<(t1.c41))) BETWEEN (SQLITE_COMPILEOPTION_GET(t1.c41)) AND ((+ (t1.c41))))) ORDER BY ((CAST(t1.c41 AS TEXT))<<((t1.c41 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c41)<(t1.c41))) BETWEEN (SQLITE_COMPILEOPTION_GET(t1.c41)) AND ((+ (t1.c41))))) IS TRUE)  as count FROM t1 ORDER BY ((CAST(t1.c41 AS TEXT))<<((t1.c41 IN ()))) DESC);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c41)<(t1.c41))) BETWEEN (SQLITE_COMPILEOPTION_GET(t1.c41)) AND ((+ (t1.c41))))) ORDER BY ((CAST(t1.c41 AS TEXT))<<((t1.c41 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c41)<(t1.c41))) BETWEEN (SQLITE_COMPILEOPTION_GET(t1.c41)) AND ((+ (t1.c41))))) IS TRUE)  as count FROM t1 ORDER BY ((CAST(t1.c41 AS TEXT))<<((t1.c41 IN ()))) DESC);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c41)<(t1.c41))) BETWEEN (SQLITE_COMPILEOPTION_GET(t1.c41)) AND ((+ (t1.c41))))) ORDER BY ((CAST(t1.c41 AS TEXT))<<((t1.c41 IN ()))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (0.7153706060577437) ORDER BY rt0.c0 DESC, (((((((((((((((rt0.c0))>((NULL))))AND((rt0.c1 IN ()))))OR(CAST(rt0.c2 AS TEXT))))OR((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))))))OR(((rt0.c2)%(rt0.c2)))))AND(((rt0.c2)*(rt0.c1)))))OR((('rH!.Ujf') NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.7153706060577437) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC, (((((((((((((((rt0.c0))>((NULL))))AND((rt0.c1 IN ()))))OR(CAST(rt0.c2 AS TEXT))))OR((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))))))OR(((rt0.c2)%(rt0.c2)))))AND(((rt0.c2)*(rt0.c1)))))OR((('rH!.Ujf') NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (0.7153706060577437) ORDER BY rt0.c0 DESC, (((((((((((((((rt0.c0))>((NULL))))AND((rt0.c1 IN ()))))OR(CAST(rt0.c2 AS TEXT))))OR((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))))))OR(((rt0.c2)%(rt0.c2)))))AND(((rt0.c2)*(rt0.c1)))))OR((('rH!.Ujf') NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.7153706060577437) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC, (((((((((((((((rt0.c0))>((NULL))))AND((rt0.c1 IN ()))))OR(CAST(rt0.c2 AS TEXT))))OR((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))))))OR(((rt0.c2)%(rt0.c2)))))AND(((rt0.c2)*(rt0.c1)))))OR((('rH!.Ujf') NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (0.7153706060577437) ORDER BY rt0.c0 DESC, (((((((((((((((rt0.c0))>((NULL))))AND((rt0.c1 IN ()))))OR(CAST(rt0.c2 AS TEXT))))OR((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))))))OR(((rt0.c2)%(rt0.c2)))))AND(((rt0.c2)*(rt0.c1)))))OR((('rH!.Ujf') NOT NULL)))  NULLS FIRST;
SELECT * FROM rt1, rt0 LEFT OUTER JOIN t1 ON ((CAST(rt1.c0 AS BLOB))>>(LOWER(rt1.c2))) WHERE (SUBSTR(CAST(rt1.c2 AS INTEGER), rt1.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((SUBSTR(CAST(rt1.c2 AS INTEGER), rt1.c3 COLLATE BINARY)) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN t1 ON ((CAST(rt1.c0 AS BLOB))>>(LOWER(rt1.c2))));
SELECT * FROM rt1, rt0 LEFT OUTER JOIN t1 ON ((CAST(rt1.c0 AS BLOB))>>(LOWER(rt1.c2))) WHERE (SUBSTR(CAST(rt1.c2 AS INTEGER), rt1.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((SUBSTR(CAST(rt1.c2 AS INTEGER), rt1.c3 COLLATE BINARY)) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN t1 ON ((CAST(rt1.c0 AS BLOB))>>(LOWER(rt1.c2))));
SELECT * FROM rt1, rt0 LEFT OUTER JOIN t1 ON ((CAST(rt1.c0 AS BLOB))>>(LOWER(rt1.c2))) WHERE (SUBSTR(CAST(rt1.c2 AS INTEGER), rt1.c3 COLLATE BINARY));
SELECT * FROM rt0 WHERE (LIKELIHOOD(((rt0.c2)%(rt0.c2)), 0.8753669315516467)) ORDER BY CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((((((((rt0.c1)OR(NULL)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) END ASC  NULLS FIRST, ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) NOTNULL) ASC  NULLS LAST, ((rt0.c0 COLLATE BINARY)|(rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c2)%(rt0.c2)), 0.8753669315516467)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((((((((rt0.c1)OR(NULL)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) END ASC  NULLS FIRST, ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) NOTNULL) ASC  NULLS LAST, ((rt0.c0 COLLATE BINARY)|(rt0.c0 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (LIKELIHOOD(((rt0.c2)%(rt0.c2)), 0.8753669315516467)) ORDER BY CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((((((((rt0.c1)OR(NULL)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) END ASC  NULLS FIRST, ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) NOTNULL) ASC  NULLS LAST, ((rt0.c0 COLLATE BINARY)|(rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c2)%(rt0.c2)), 0.8753669315516467)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((((((((rt0.c1)OR(NULL)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) END ASC  NULLS FIRST, ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) NOTNULL) ASC  NULLS LAST, ((rt0.c0 COLLATE BINARY)|(rt0.c0 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (LIKELIHOOD(((rt0.c2)%(rt0.c2)), 0.8753669315516467)) ORDER BY CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((((((((rt0.c1)OR(NULL)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) END ASC  NULLS FIRST, ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) NOTNULL) ASC  NULLS LAST, ((rt0.c0 COLLATE BINARY)|(rt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c41) ORDER BY ((t1.c41) ISNULL)  NULLS LAST, ((((NOT (t1.c41))))<>((((t1.c41) NOT NULL))))  NULLS LAST, t1.c41 DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c41) IS TRUE)  as count FROM t1 ORDER BY ((t1.c41) ISNULL)  NULLS LAST, ((((NOT (t1.c41))))<>((((t1.c41) NOT NULL))))  NULLS LAST, t1.c41 DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c41) ORDER BY ((t1.c41) ISNULL)  NULLS LAST, ((((NOT (t1.c41))))<>((((t1.c41) NOT NULL))))  NULLS LAST, t1.c41 DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c41) IS TRUE)  as count FROM t1 ORDER BY ((t1.c41) ISNULL)  NULLS LAST, ((((NOT (t1.c41))))<>((((t1.c41) NOT NULL))))  NULLS LAST, t1.c41 DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c41) ORDER BY ((t1.c41) ISNULL)  NULLS LAST, ((((NOT (t1.c41))))<>((((t1.c41) NOT NULL))))  NULLS LAST, t1.c41 DESC;
SELECT ALL * FROM rt1, t1 WHERE (((((t1.c41)=(rt1.c0)))||(NULL))) ORDER BY CAST(rt1.c3 AS BLOB) DESC  NULLS FIRST, '-23692334'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c41)=(rt1.c0)))||(NULL))) IS TRUE)  as count FROM rt1, t1 ORDER BY CAST(rt1.c3 AS BLOB) DESC  NULLS FIRST, '-23692334'  NULLS LAST);
SELECT ALL * FROM rt1, t1 WHERE (((((t1.c41)=(rt1.c0)))||(NULL))) ORDER BY CAST(rt1.c3 AS BLOB) DESC  NULLS FIRST, '-23692334'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c41)=(rt1.c0)))||(NULL))) IS TRUE)  as count FROM rt1, t1 ORDER BY CAST(rt1.c3 AS BLOB) DESC  NULLS FIRST, '-23692334'  NULLS LAST);
SELECT ALL * FROM rt1, t1 WHERE (((((t1.c41)=(rt1.c0)))||(NULL))) ORDER BY CAST(rt1.c3 AS BLOB) DESC  NULLS FIRST, '-23692334'  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (((((rt0.c0) IS TRUE))>=(((((rt1.c4)OR(rt1.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))>=(((((rt1.c4)OR(rt1.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (((((rt0.c0) IS TRUE))>=(((((rt1.c4)OR(rt1.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))>=(((((rt1.c4)OR(rt1.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (((((rt0.c0) IS TRUE))>=(((((rt1.c4)OR(rt1.c2)))OR(rt0.c0)))));
SELECT * FROM rt1, t1, rt0 WHERE (CASE (((t1.c41)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4)))  WHEN CAST(rt0.c0 AS REAL) THEN rt1.c0 COLLATE NOCASE ELSE (rt1.c3 IN (t1.c41)) END) ORDER BY ((json_valid(rt0.c0))<=(-7.6193618E8))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t1.c41)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4)))  WHEN CAST(rt0.c0 AS REAL) THEN rt1.c0 COLLATE NOCASE ELSE (rt1.c3 IN (t1.c41)) END) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((json_valid(rt0.c0))<=(-7.6193618E8))  NULLS FIRST);
SELECT * FROM rt1, t1, rt0 WHERE (CASE (((t1.c41)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4)))  WHEN CAST(rt0.c0 AS REAL) THEN rt1.c0 COLLATE NOCASE ELSE (rt1.c3 IN (t1.c41)) END) ORDER BY ((json_valid(rt0.c0))<=(-7.6193618E8))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t1.c41)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4)))  WHEN CAST(rt0.c0 AS REAL) THEN rt1.c0 COLLATE NOCASE ELSE (rt1.c3 IN (t1.c41)) END) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((json_valid(rt0.c0))<=(-7.6193618E8))  NULLS FIRST);
SELECT * FROM rt1, t1, rt0 WHERE (CASE (((t1.c41)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4)))  WHEN CAST(rt0.c0 AS REAL) THEN rt1.c0 COLLATE NOCASE ELSE (rt1.c3 IN (t1.c41)) END) ORDER BY ((json_valid(rt0.c0))<=(-7.6193618E8))  NULLS FIRST;
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((+ (rt0.c0)))<<((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0)))<<((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((+ (rt0.c0)))<<((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0)))<<((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((+ (rt0.c0)))<<((rt1.c1 IN ()))));
SELECT * FROM t1, rt0 WHERE (((((t1.c41)<=(rt0.c1))) IS TRUE)) ORDER BY ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))LIKE(CAST(rt0.c1 AS BLOB)))  NULLS LAST, ((TRIM(DISTINCT rt0.c2)) IS FALSE) ASC, ((((((((((t1.c41)<>(rt0.c0)))OR(((t1.c41)||(rt0.c2)))))OR(0.9729514168451272)))AND(CASE WHEN t1.c41 THEN rt0.c0 ELSE t1.c41 END)))OR(((t1.c41)>=(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c41)<=(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))LIKE(CAST(rt0.c1 AS BLOB)))  NULLS LAST, ((TRIM(DISTINCT rt0.c2)) IS FALSE) ASC, ((((((((((t1.c41)<>(rt0.c0)))OR(((t1.c41)||(rt0.c2)))))OR(0.9729514168451272)))AND(CASE WHEN t1.c41 THEN rt0.c0 ELSE t1.c41 END)))OR(((t1.c41)>=(x''))))  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE (((((t1.c41)<=(rt0.c1))) IS TRUE)) ORDER BY ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))LIKE(CAST(rt0.c1 AS BLOB)))  NULLS LAST, ((TRIM(DISTINCT rt0.c2)) IS FALSE) ASC, ((((((((((t1.c41)<>(rt0.c0)))OR(((t1.c41)||(rt0.c2)))))OR(0.9729514168451272)))AND(CASE WHEN t1.c41 THEN rt0.c0 ELSE t1.c41 END)))OR(((t1.c41)>=(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c41)<=(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))LIKE(CAST(rt0.c1 AS BLOB)))  NULLS LAST, ((TRIM(DISTINCT rt0.c2)) IS FALSE) ASC, ((((((((((t1.c41)<>(rt0.c0)))OR(((t1.c41)||(rt0.c2)))))OR(0.9729514168451272)))AND(CASE WHEN t1.c41 THEN rt0.c0 ELSE t1.c41 END)))OR(((t1.c41)>=(x''))))  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE (((((t1.c41)<=(rt0.c1))) IS TRUE)) ORDER BY ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))LIKE(CAST(rt0.c1 AS BLOB)))  NULLS LAST, ((TRIM(DISTINCT rt0.c2)) IS FALSE) ASC, ((((((((((t1.c41)<>(rt0.c0)))OR(((t1.c41)||(rt0.c2)))))OR(0.9729514168451272)))AND(CASE WHEN t1.c41 THEN rt0.c0 ELSE t1.c41 END)))OR(((t1.c41)>=(x''))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON CASE WHEN rt1.c1 THEN ((rt1.c0) IS FALSE) WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN CASE WHEN rt1.c3 THEN rt1.c0 END WHEN CASE WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c4 WHEN rt0.c2 THEN rt1.c4 ELSE rt0.c1 END THEN ((rt1.c2)>>(rt1.c2)) WHEN (~ (rt0.c0)) THEN ((((((((rt1.c2)AND(rt0.c0)))AND(rt1.c4)))OR(rt0.c0)))AND('-1398934124')) WHEN rt0.c2 COLLATE NOCASE THEN NULLIF(0.20884433940739688, rt0.c1) END WHERE ((- (((((rt0.c2)AND(rt1.c4)))AND(rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c2)AND(rt1.c4)))AND(rt1.c4))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CASE WHEN rt1.c1 THEN ((rt1.c0) IS FALSE) WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN CASE WHEN rt1.c3 THEN rt1.c0 END WHEN CASE WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c4 WHEN rt0.c2 THEN rt1.c4 ELSE rt0.c1 END THEN ((rt1.c2)>>(rt1.c2)) WHEN (~ (rt0.c0)) THEN ((((((((rt1.c2)AND(rt0.c0)))AND(rt1.c4)))OR(rt0.c0)))AND('-1398934124')) WHEN rt0.c2 COLLATE NOCASE THEN NULLIF(0.20884433940739688, rt0.c1) END);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON CASE WHEN rt1.c1 THEN ((rt1.c0) IS FALSE) WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN CASE WHEN rt1.c3 THEN rt1.c0 END WHEN CASE WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c4 WHEN rt0.c2 THEN rt1.c4 ELSE rt0.c1 END THEN ((rt1.c2)>>(rt1.c2)) WHEN (~ (rt0.c0)) THEN ((((((((rt1.c2)AND(rt0.c0)))AND(rt1.c4)))OR(rt0.c0)))AND('-1398934124')) WHEN rt0.c2 COLLATE NOCASE THEN NULLIF(0.20884433940739688, rt0.c1) END WHERE ((- (((((rt0.c2)AND(rt1.c4)))AND(rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c2)AND(rt1.c4)))AND(rt1.c4))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CASE WHEN rt1.c1 THEN ((rt1.c0) IS FALSE) WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN CASE WHEN rt1.c3 THEN rt1.c0 END WHEN CASE WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c4 WHEN rt0.c2 THEN rt1.c4 ELSE rt0.c1 END THEN ((rt1.c2)>>(rt1.c2)) WHEN (~ (rt0.c0)) THEN ((((((((rt1.c2)AND(rt0.c0)))AND(rt1.c4)))OR(rt0.c0)))AND('-1398934124')) WHEN rt0.c2 COLLATE NOCASE THEN NULLIF(0.20884433940739688, rt0.c1) END);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON CASE WHEN rt1.c1 THEN ((rt1.c0) IS FALSE) WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN CASE WHEN rt1.c3 THEN rt1.c0 END WHEN CASE WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c4 WHEN rt0.c2 THEN rt1.c4 ELSE rt0.c1 END THEN ((rt1.c2)>>(rt1.c2)) WHEN (~ (rt0.c0)) THEN ((((((((rt1.c2)AND(rt0.c0)))AND(rt1.c4)))OR(rt0.c0)))AND('-1398934124')) WHEN rt0.c2 COLLATE NOCASE THEN NULLIF(0.20884433940739688, rt0.c1) END WHERE ((- (((((rt0.c2)AND(rt1.c4)))AND(rt1.c4)))));
SELECT ALL COUNT(*) FROM t1, rt1 WHERE ((rt1.c4 IN (rt1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c4 IN (rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE ((rt1.c4 IN (rt1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c4 IN (rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE ((rt1.c4 IN (rt1.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, t1 WHERE ((CAST(rt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE ((CAST(rt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE ((CAST(rt0.c0 AS BLOB) IN ()));
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((((NULL)OR(rt1.c3)))OR(rt1.c4)))%(CASE WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c0 WHEN t1.c41 THEN rt1.c1 ELSE rt0.c0 END))) ORDER BY ((COALESCE('a#w?d', rt1.c2)) NOT BETWEEN ((('Yt') BETWEEN (NULL) AND (rt0.c0))) AND (((rt0.c1)>>(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(rt1.c3)))OR(rt1.c4)))%(CASE WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c0 WHEN t1.c41 THEN rt1.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY ((COALESCE('a#w?d', rt1.c2)) NOT BETWEEN ((('Yt') BETWEEN (NULL) AND (rt0.c0))) AND (((rt0.c1)>>(rt0.c1))))  NULLS LAST);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((((NULL)OR(rt1.c3)))OR(rt1.c4)))%(CASE WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c0 WHEN t1.c41 THEN rt1.c1 ELSE rt0.c0 END))) ORDER BY ((COALESCE('a#w?d', rt1.c2)) NOT BETWEEN ((('Yt') BETWEEN (NULL) AND (rt0.c0))) AND (((rt0.c1)>>(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(rt1.c3)))OR(rt1.c4)))%(CASE WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c0 WHEN t1.c41 THEN rt1.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY ((COALESCE('a#w?d', rt1.c2)) NOT BETWEEN ((('Yt') BETWEEN (NULL) AND (rt0.c0))) AND (((rt0.c1)>>(rt0.c1))))  NULLS LAST);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((((NULL)OR(rt1.c3)))OR(rt1.c4)))%(CASE WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c0 WHEN t1.c41 THEN rt1.c1 ELSE rt0.c0 END))) ORDER BY ((COALESCE('a#w?d', rt1.c2)) NOT BETWEEN ((('Yt') BETWEEN (NULL) AND (rt0.c0))) AND (((rt0.c1)>>(rt0.c1))))  NULLS LAST;
SELECT ALL * FROM rt0, t1 FULL OUTER JOIN rt1 ON 1990216581 WHERE (((((t1.c41)OR('')))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt1.c3 ELSE rt1.c0 END))) ORDER BY ((((rt1.c3) IS FALSE))<<((t1.c41 IN ())))  NULLS LAST, (((('747711423') BETWEEN (rt0.c1) AND (rt1.c1))) IS FALSE) ASC, (+ ((t1.c41 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c41)OR('')))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt1.c3 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN rt1 ON 1990216581 ORDER BY ((((rt1.c3) IS FALSE))<<((t1.c41 IN ())))  NULLS LAST, (((('747711423') BETWEEN (rt0.c1) AND (rt1.c1))) IS FALSE) ASC, (+ ((t1.c41 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t1 FULL OUTER JOIN rt1 ON 1990216581 WHERE (((((t1.c41)OR('')))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt1.c3 ELSE rt1.c0 END))) ORDER BY ((((rt1.c3) IS FALSE))<<((t1.c41 IN ())))  NULLS LAST, (((('747711423') BETWEEN (rt0.c1) AND (rt1.c1))) IS FALSE) ASC, (+ ((t1.c41 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c41)OR('')))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt1.c3 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN rt1 ON 1990216581 ORDER BY ((((rt1.c3) IS FALSE))<<((t1.c41 IN ())))  NULLS LAST, (((('747711423') BETWEEN (rt0.c1) AND (rt1.c1))) IS FALSE) ASC, (+ ((t1.c41 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t1 FULL OUTER JOIN rt1 ON 1990216581 WHERE (((((t1.c41)OR('')))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt1.c3 ELSE rt1.c0 END))) ORDER BY ((((rt1.c3) IS FALSE))<<((t1.c41 IN ())))  NULLS LAST, (((('747711423') BETWEEN (rt0.c1) AND (rt1.c1))) IS FALSE) ASC, (+ ((t1.c41 IN ()))) DESC  NULLS FIRST;
SELECT * FROM t1, rt1, rt0 WHERE (((ABS(rt1.c1))|(((rt0.c0)%(rt0.c2))))) ORDER BY CAST(rt1.c4 COLLATE RTRIM AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((ABS(rt1.c1))|(((rt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CAST(rt1.c4 COLLATE RTRIM AS INTEGER));
SELECT * FROM t1, rt1, rt0 WHERE (((ABS(rt1.c1))|(((rt0.c0)%(rt0.c2))))) ORDER BY CAST(rt1.c4 COLLATE RTRIM AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((ABS(rt1.c1))|(((rt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CAST(rt1.c4 COLLATE RTRIM AS INTEGER));
SELECT * FROM t1, rt1, rt0 WHERE (((ABS(rt1.c1))|(((rt0.c0)%(rt0.c2))))) ORDER BY CAST(rt1.c4 COLLATE RTRIM AS INTEGER);
SELECT * FROM t1, rt1 WHERE (((((rt1.c1)<>(rt1.c1)))<(CAST(rt1.c1 AS BLOB)))) ORDER BY (((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ((~ (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)!=(rt1.c1)))<(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM t1, rt1 ORDER BY (((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ((~ (rt1.c2))))  NULLS LAST);
SELECT * FROM t1, rt1 WHERE (((((rt1.c1)<>(rt1.c1)))<(CAST(rt1.c1 AS BLOB)))) ORDER BY (((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ((~ (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)!=(rt1.c1)))<(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM t1, rt1 ORDER BY (((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ((~ (rt1.c2))))  NULLS LAST);
SELECT * FROM t1, rt1 WHERE (((((rt1.c1)<>(rt1.c1)))<(CAST(rt1.c1 AS BLOB)))) ORDER BY (((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ((~ (rt1.c2))))  NULLS LAST;
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((x'597b') NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((x'597b') NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((x'597b') NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((x'597b') NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((x'597b') NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS TRUE));
SELECT * FROM rt0, rt1, t1 WHERE ((NOT ((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE ((NOT ((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE ((NOT ((NOT (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((NULL)GLOB((((NULL))<=((rt1.c1)))))) ORDER BY CASE HEX(rt0.c0)  WHEN (rt1.c4 IN (rt0.c1)) THEN rt0.c2 ELSE ((((((((rt1.c4)OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB((((NULL))<=((rt1.c1)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE HEX(rt0.c0)  WHEN (rt1.c4 IN (rt0.c1)) THEN rt0.c2 ELSE ((((((((rt1.c4)OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c2)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((NULL)GLOB((((NULL))<=((rt1.c1)))))) ORDER BY CASE HEX(rt0.c0)  WHEN (rt1.c4 IN (rt0.c1)) THEN rt0.c2 ELSE ((((((((rt1.c4)OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB((((NULL))<=((rt1.c1)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE HEX(rt0.c0)  WHEN (rt1.c4 IN (rt0.c1)) THEN rt0.c2 ELSE ((((((((rt1.c4)OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c2)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((NULL)GLOB((((NULL))<=((rt1.c1)))))) ORDER BY CASE HEX(rt0.c0)  WHEN (rt1.c4 IN (rt0.c1)) THEN rt0.c2 ELSE ((((((((rt1.c4)OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c2)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON CASE rtreenode(rt0.c2, rt0.c1)  WHEN (((rt1.c2)) BETWEEN ((rt1.c3)) AND ((t1.c41))) THEN ((t1.c41) NOTNULL) ELSE CASE rt0.c0  WHEN t1.c41 THEN rt0.c0 ELSE rt1.c3 END END FULL OUTER JOIN t1 ON ((((rt1.c4, rt0.c0, t1.c41))==((rt0.c2, rt1.c2, rt1.c1))) IN ()) WHERE (((ABS(DISTINCT rt0.c0)) BETWEEN (((rt1.c1)+(rt1.c2))) AND (((rt1.c3) IS FALSE)))) ORDER BY ((((rt1.c1)OR(t1.c41)))OR(rt0.c1)) COLLATE NOCASE COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT rt0.c0)) BETWEEN (((rt1.c1)+(rt1.c2))) AND (((rt1.c3) IS FALSE)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON CASE rtreenode(rt0.c2, rt0.c1)  WHEN (((rt1.c2)) BETWEEN ((rt1.c3)) AND ((t1.c41))) THEN ((t1.c41) NOTNULL) ELSE CASE rt0.c0  WHEN t1.c41 THEN rt0.c0 ELSE rt1.c3 END END FULL OUTER JOIN t1 ON ((((rt1.c4, rt0.c0, t1.c41))==((rt0.c2, rt1.c2, rt1.c1))) IN ()) ORDER BY ((((rt1.c1)OR(t1.c41)))OR(rt0.c1)) COLLATE NOCASE COLLATE BINARY DESC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON CASE rtreenode(rt0.c2, rt0.c1)  WHEN (((rt1.c2)) BETWEEN ((rt1.c3)) AND ((t1.c41))) THEN ((t1.c41) NOTNULL) ELSE CASE rt0.c0  WHEN t1.c41 THEN rt0.c0 ELSE rt1.c3 END END FULL OUTER JOIN t1 ON ((((rt1.c4, rt0.c0, t1.c41))==((rt0.c2, rt1.c2, rt1.c1))) IN ()) WHERE (((ABS(DISTINCT rt0.c0)) BETWEEN (((rt1.c1)+(rt1.c2))) AND (((rt1.c3) IS FALSE)))) ORDER BY ((((rt1.c1)OR(t1.c41)))OR(rt0.c1)) COLLATE NOCASE COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT rt0.c0)) BETWEEN (((rt1.c1)+(rt1.c2))) AND (((rt1.c3) IS FALSE)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON CASE rtreenode(rt0.c2, rt0.c1)  WHEN (((rt1.c2)) BETWEEN ((rt1.c3)) AND ((t1.c41))) THEN ((t1.c41) NOTNULL) ELSE CASE rt0.c0  WHEN t1.c41 THEN rt0.c0 ELSE rt1.c3 END END FULL OUTER JOIN t1 ON ((((rt1.c4, rt0.c0, t1.c41))==((rt0.c2, rt1.c2, rt1.c1))) IN ()) ORDER BY ((((rt1.c1)OR(t1.c41)))OR(rt0.c1)) COLLATE NOCASE COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE (NOT (t1.c41))  WHEN TRIM(t1.c41) THEN NULLIF(t1.c41, t1.c41) WHEN ((t1.c41)GLOB(t1.c41)) THEN CAST(t1.c41 AS BLOB) WHEN (- (t1.c41)) THEN ((t1.c41)LIKE(t1.c41)) ELSE NULL END) ORDER BY ((((((t1.c41)AND(t1.c41)))AND(t1.c41)))!=(((((t1.c41)OR(t1.c41)))OR(t1.c41))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (t1.c41))  WHEN TRIM(t1.c41) THEN NULLIF(t1.c41, t1.c41) WHEN ((t1.c41)GLOB(t1.c41)) THEN CAST(t1.c41 AS BLOB) WHEN (- (t1.c41)) THEN ((t1.c41)LIKE(t1.c41)) ELSE NULL END) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c41)AND(t1.c41)))AND(t1.c41)))<>(((((t1.c41)OR(t1.c41)))OR(t1.c41))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE (NOT (t1.c41))  WHEN TRIM(t1.c41) THEN NULLIF(t1.c41, t1.c41) WHEN ((t1.c41)GLOB(t1.c41)) THEN CAST(t1.c41 AS BLOB) WHEN (- (t1.c41)) THEN ((t1.c41)LIKE(t1.c41)) ELSE NULL END) ORDER BY ((((((t1.c41)AND(t1.c41)))AND(t1.c41)))!=(((((t1.c41)OR(t1.c41)))OR(t1.c41))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (t1.c41))  WHEN TRIM(t1.c41) THEN NULLIF(t1.c41, t1.c41) WHEN ((t1.c41)GLOB(t1.c41)) THEN CAST(t1.c41 AS BLOB) WHEN (- (t1.c41)) THEN ((t1.c41)LIKE(t1.c41)) ELSE NULL END) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c41)AND(t1.c41)))AND(t1.c41)))<>(((((t1.c41)OR(t1.c41)))OR(t1.c41))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE (NOT (t1.c41))  WHEN TRIM(t1.c41) THEN NULLIF(t1.c41, t1.c41) WHEN ((t1.c41)GLOB(t1.c41)) THEN CAST(t1.c41 AS BLOB) WHEN (- (t1.c41)) THEN ((t1.c41)LIKE(t1.c41)) ELSE NULL END) ORDER BY ((((((t1.c41)AND(t1.c41)))AND(t1.c41)))!=(((((t1.c41)OR(t1.c41)))OR(t1.c41))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (CAST(((rt0.c1) BETWEEN ('') AND (rt0.c2)) AS REAL)) ORDER BY CASE ((0Xfffffffff48d61b6) ISNULL)  WHEN t1.c41 THEN rt1.c4 COLLATE NOCASE END, (((rt0.c0)) BETWEEN ((CASE rt1.c0  WHEN rt0.c2 THEN t1.c41 END)) AND ((rt1.c2)));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN ('') AND (rt0.c2)) AS REAL)) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY CASE ((0Xfffffffff48d61b6) ISNULL)  WHEN t1.c41 THEN rt1.c4 COLLATE NOCASE END, (((rt0.c0)) BETWEEN ((CASE rt1.c0  WHEN rt0.c2 THEN t1.c41 END)) AND ((rt1.c2))));
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (CAST(((rt0.c1) BETWEEN ('') AND (rt0.c2)) AS REAL)) ORDER BY CASE ((0Xfffffffff48d61b6) ISNULL)  WHEN t1.c41 THEN rt1.c4 COLLATE NOCASE END, (((rt0.c0)) BETWEEN ((CASE rt1.c0  WHEN rt0.c2 THEN t1.c41 END)) AND ((rt1.c2)));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN ('') AND (rt0.c2)) AS REAL)) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY CASE ((0Xfffffffff48d61b6) ISNULL)  WHEN t1.c41 THEN rt1.c4 COLLATE NOCASE END, (((rt0.c0)) BETWEEN ((CASE rt1.c0  WHEN rt0.c2 THEN t1.c41 END)) AND ((rt1.c2))));
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (CAST(((rt0.c1) BETWEEN ('') AND (rt0.c2)) AS REAL)) ORDER BY CASE ((0Xfffffffff48d61b6) ISNULL)  WHEN t1.c41 THEN rt1.c4 COLLATE NOCASE END, (((rt0.c0)) BETWEEN ((CASE rt1.c0  WHEN rt0.c2 THEN t1.c41 END)) AND ((rt1.c2)));
SELECT * FROM rt1, t1, rt0 WHERE ((NOT (rt1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE ((NOT (rt1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE ((NOT (rt1.c2)) COLLATE NOCASE);
SELECT * FROM t1, rt1 WHERE (rt1.c0) ORDER BY ((((rt1.c2)/(rt1.c0))) NOT BETWEEN (((rt1.c2)*(rt1.c4))) AND (CAST(rt1.c4 AS NUMERIC))), (((((rt1.c1 IN ()))OR(((rt1.c0)IS(t1.c41)))))AND(CASE WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM t1, rt1 ORDER BY ((((rt1.c2)/(rt1.c0))) NOT BETWEEN (((rt1.c2)*(rt1.c4))) AND (CAST(rt1.c4 AS NUMERIC))), (((((rt1.c1 IN ()))OR(((rt1.c0)IS(t1.c41)))))AND(CASE WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c1 END)) ASC);
SELECT * FROM t1, rt1 WHERE (rt1.c0) ORDER BY ((((rt1.c2)/(rt1.c0))) NOT BETWEEN (((rt1.c2)*(rt1.c4))) AND (CAST(rt1.c4 AS NUMERIC))), (((((rt1.c1 IN ()))OR(((rt1.c0)IS(t1.c41)))))AND(CASE WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM t1, rt1 ORDER BY ((((rt1.c2)/(rt1.c0))) NOT BETWEEN (((rt1.c2)*(rt1.c4))) AND (CAST(rt1.c4 AS NUMERIC))), (((((rt1.c1 IN ()))OR(((rt1.c0)IS(t1.c41)))))AND(CASE WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c1 END)) ASC);
SELECT * FROM t1, rt1 WHERE (rt1.c0) ORDER BY ((((rt1.c2)/(rt1.c0))) NOT BETWEEN (((rt1.c2)*(rt1.c4))) AND (CAST(rt1.c4 AS NUMERIC))), (((((rt1.c1 IN ()))OR(((rt1.c0)IS(t1.c41)))))AND(CASE WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c1 END)) ASC;
SELECT COUNT(*) FROM t1 WHERE (TRIM(t1.c41 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t1.c41 COLLATE RTRIM)) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT COUNT(*) FROM t1 WHERE (TRIM(t1.c41 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t1.c41 COLLATE RTRIM)) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT COUNT(*) FROM t1 WHERE (TRIM(t1.c41 COLLATE RTRIM));
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN t1 ON (((NOT (x'd4d7'))) BETWEEN (NULL COLLATE RTRIM) AND ((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0))))) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN t1 ON (((NOT (x'd4d7'))) BETWEEN (NULL COLLATE RTRIM) AND ((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0))))));
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN t1 ON (((NOT (x'd4d7'))) BETWEEN (NULL COLLATE RTRIM) AND ((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0))))) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN t1 ON (((NOT (x'd4d7'))) BETWEEN (NULL COLLATE RTRIM) AND ((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0))))));
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN t1 ON (((NOT (x'd4d7'))) BETWEEN (NULL COLLATE RTRIM) AND ((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0))))) WHERE (rt1.c1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY CAST('-1557435914' AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY CAST('-1557435914' AS TEXT));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY CAST('-1557435914' AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY CAST('-1557435914' AS TEXT));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY CAST('-1557435914' AS TEXT);
SELECT * FROM t1 WHERE (((x'') NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((x'') NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((x'') NOTNULL) COLLATE BINARY);
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt1 ON (+ (rt1.c1)) COLLATE RTRIM CROSS JOIN rt0 ON (NOT (MIN(rt0.c1, rt0.c1))) WHERE (rt1.c4) ORDER BY LIKELIHOOD((~ (rt1.c2)), 0.5402523512708747)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt1 ON (+ (rt1.c1)) COLLATE RTRIM CROSS JOIN rt0 ON (NOT (MIN(rt0.c1, rt0.c1))) ORDER BY LIKELIHOOD((~ (rt1.c2)), 0.5402523512708747)  NULLS LAST);
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt1 ON (+ (rt1.c1)) COLLATE RTRIM CROSS JOIN rt0 ON (NOT (MIN(rt0.c1, rt0.c1))) WHERE (rt1.c4) ORDER BY LIKELIHOOD((~ (rt1.c2)), 0.5402523512708747)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt1 ON (+ (rt1.c1)) COLLATE RTRIM CROSS JOIN rt0 ON (NOT (MIN(rt0.c1, rt0.c1))) ORDER BY LIKELIHOOD((~ (rt1.c2)), 0.5402523512708747)  NULLS LAST);
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt1 ON (+ (rt1.c1)) COLLATE RTRIM CROSS JOIN rt0 ON (NOT (MIN(rt0.c1, rt0.c1))) WHERE (rt1.c4) ORDER BY LIKELIHOOD((~ (rt1.c2)), 0.5402523512708747)  NULLS LAST;
SELECT COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN rt1 ON ((UPPER(rt1.c0))<=(CASE WHEN rt1.c2 THEN rt1.c3 ELSE t1.c41 END)) WHERE ((t1.c41 COLLATE RTRIM IN ())) ORDER BY ((((rt0.c0)>=(rt0.c2)))IS((((rt0.c0))>((rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c41 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN rt1 ON ((UPPER(rt1.c0))<=(CASE WHEN rt1.c2 THEN rt1.c3 ELSE t1.c41 END)) ORDER BY ((((rt0.c0)>=(rt0.c2)))IS((((rt0.c0))>((rt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN rt1 ON ((UPPER(rt1.c0))<=(CASE WHEN rt1.c2 THEN rt1.c3 ELSE t1.c41 END)) WHERE ((t1.c41 COLLATE RTRIM IN ())) ORDER BY ((((rt0.c0)>=(rt0.c2)))IS((((rt0.c0))>((rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c41 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN rt1 ON ((UPPER(rt1.c0))<=(CASE WHEN rt1.c2 THEN rt1.c3 ELSE t1.c41 END)) ORDER BY ((((rt0.c0)>=(rt0.c2)))IS((((rt0.c0))>((rt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN rt1 ON ((UPPER(rt1.c0))<=(CASE WHEN rt1.c2 THEN rt1.c3 ELSE t1.c41 END)) WHERE ((t1.c41 COLLATE RTRIM IN ())) ORDER BY ((((rt0.c0)>=(rt0.c2)))IS((((rt0.c0))>((rt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(IFNULL(rt1.c4, rt1.c2) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(rt1.c4, rt1.c2) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(IFNULL(rt1.c4, rt1.c2) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(rt1.c4, rt1.c2) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(IFNULL(rt1.c4, rt1.c2) AS REAL));
SELECT * FROM rt0 LEFT OUTER JOIN t1 ON ((((- (rt0.c2))))<=((rt0.c0 COLLATE RTRIM))) WHERE (rt0.c0) ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) BETWEEN (((rt0.c1)<=(t1.c41))) AND ((rt0.c1 IN (rt0.c0, t1.c41)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON ((((- (rt0.c2))))<=((rt0.c0 COLLATE RTRIM))) ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) BETWEEN (((rt0.c1)<=(t1.c41))) AND ((rt0.c1 IN (rt0.c0, t1.c41)))) DESC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN t1 ON ((((- (rt0.c2))))<=((rt0.c0 COLLATE RTRIM))) WHERE (rt0.c0) ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) BETWEEN (((rt0.c1)<=(t1.c41))) AND ((rt0.c1 IN (rt0.c0, t1.c41)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON ((((- (rt0.c2))))<=((rt0.c0 COLLATE RTRIM))) ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) BETWEEN (((rt0.c1)<=(t1.c41))) AND ((rt0.c1 IN (rt0.c0, t1.c41)))) DESC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN t1 ON ((((- (rt0.c2))))<=((rt0.c0 COLLATE RTRIM))) WHERE (rt0.c0) ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) BETWEEN (((rt0.c1)<=(t1.c41))) AND ((rt0.c1 IN (rt0.c0, t1.c41)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((((t1.c41)AND(t1.c41)))AND(t1.c41))  WHEN (t1.c41 IN ()) THEN CASE WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END ELSE t1.c41 END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t1.c41)AND(t1.c41)))AND(t1.c41))  WHEN (t1.c41 IN ()) THEN CASE WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END ELSE t1.c41 END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((((t1.c41)AND(t1.c41)))AND(t1.c41))  WHEN (t1.c41 IN ()) THEN CASE WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END ELSE t1.c41 END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t1.c41)AND(t1.c41)))AND(t1.c41))  WHEN (t1.c41 IN ()) THEN CASE WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END ELSE t1.c41 END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((((t1.c41)AND(t1.c41)))AND(t1.c41))  WHEN (t1.c41 IN ()) THEN CASE WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END ELSE t1.c41 END);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((~ (CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((~ (CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((~ (CAST(rt0.c1 AS INTEGER))));
SELECT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN NULL END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c1 THEN NULL END AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN NULL END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c1 THEN NULL END AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN NULL END AS TEXT));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c4)||(rt1.c4)) END WHERE (((((rt0.c2)>=(rt1.c4)))+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=(rt1.c4)))+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c4)||(rt1.c4)) END);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c4)||(rt1.c4)) END WHERE (((((rt0.c2)>=(rt1.c4)))+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=(rt1.c4)))+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c4)||(rt1.c4)) END);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c4)||(rt1.c4)) END WHERE (((((rt0.c2)>=(rt1.c4)))+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt0.c0)))));
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS TEXT)) ORDER BY '904641509' COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY '904641509' COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS TEXT)) ORDER BY '904641509' COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY '904641509' COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS TEXT)) ORDER BY '904641509' COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL * FROM rt1, t1 WHERE ((((((((((((rt1.c4)OR(t1.c41)))AND(t1.c41)))OR(rt1.c1)))OR(rt1.c4))))!=((rt1.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c4)OR(t1.c41)))AND(t1.c41)))OR(rt1.c1)))OR(rt1.c4))))!=((rt1.c1 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE ((((((((((((rt1.c4)OR(t1.c41)))AND(t1.c41)))OR(rt1.c1)))OR(rt1.c4))))!=((rt1.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c4)OR(t1.c41)))AND(t1.c41)))OR(rt1.c1)))OR(rt1.c4))))!=((rt1.c1 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE ((((((((((((rt1.c4)OR(t1.c41)))AND(t1.c41)))OR(rt1.c1)))OR(rt1.c4))))!=((rt1.c1 COLLATE BINARY))));
SELECT ALL * FROM rt1 NATURAL JOIN t1 WHERE (CASE WHEN (rt1.c4 IN ()) THEN CAST(rt1.c3 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c4 IN ()) THEN CAST(rt1.c3 AS BLOB) END) IS TRUE)  as count FROM rt1 NATURAL JOIN t1);
SELECT ALL * FROM rt1 NATURAL JOIN t1 WHERE (CASE WHEN (rt1.c4 IN ()) THEN CAST(rt1.c3 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c4 IN ()) THEN CAST(rt1.c3 AS BLOB) END) IS TRUE)  as count FROM rt1 NATURAL JOIN t1);
SELECT ALL * FROM rt1 NATURAL JOIN t1 WHERE (CASE WHEN (rt1.c4 IN ()) THEN CAST(rt1.c3 AS BLOB) END);
SELECT ALL COUNT(*) FROM rt1 WHERE (HEX(DISTINCT (- (rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (- (rt1.c4)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (HEX(DISTINCT (- (rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (- (rt1.c4)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (HEX(DISTINCT (- (rt1.c4))));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (CASE (rt0.c1 IN (t1.c41))  WHEN IFNULL(t1.c41, t1.c41) THEN NULL WHEN 'X*LPax' THEN (- (rt0.c2)) WHEN (((t1.c41))<=((rt0.c2))) THEN CASE WHEN rt0.c0 THEN t1.c41 END ELSE CASE WHEN rt0.c1 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c1 IN (t1.c41))  WHEN IFNULL(t1.c41, t1.c41) THEN NULL WHEN 'X*LPax' THEN (- (rt0.c2)) WHEN (((t1.c41))<=((rt0.c2))) THEN CASE WHEN rt0.c0 THEN t1.c41 END ELSE CASE WHEN rt0.c1 THEN rt0.c0 END END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON rt0.c0);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (CASE (rt0.c1 IN (t1.c41))  WHEN IFNULL(t1.c41, t1.c41) THEN NULL WHEN 'X*LPax' THEN (- (rt0.c2)) WHEN (((t1.c41))<=((rt0.c2))) THEN CASE WHEN rt0.c0 THEN t1.c41 END ELSE CASE WHEN rt0.c1 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c1 IN (t1.c41))  WHEN IFNULL(t1.c41, t1.c41) THEN NULL WHEN 'X*LPax' THEN (- (rt0.c2)) WHEN (((t1.c41))<=((rt0.c2))) THEN CASE WHEN rt0.c0 THEN t1.c41 END ELSE CASE WHEN rt0.c1 THEN rt0.c0 END END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON rt0.c0);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (CASE (rt0.c1 IN (t1.c41))  WHEN IFNULL(t1.c41, t1.c41) THEN NULL WHEN 'X*LPax' THEN (- (rt0.c2)) WHEN (((t1.c41))<=((rt0.c2))) THEN CASE WHEN rt0.c0 THEN t1.c41 END ELSE CASE WHEN rt0.c1 THEN rt0.c0 END END);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (HEX(1.345312213E9)) ORDER BY ((COALESCE(DISTINCT rt1.c4, rt1.c1)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(1.345312213E9)) IS TRUE)  as count FROM t1, rt1 ORDER BY ((COALESCE(DISTINCT rt1.c4, rt1.c1)) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (HEX(1.345312213E9)) ORDER BY ((COALESCE(DISTINCT rt1.c4, rt1.c1)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(1.345312213E9)) IS TRUE)  as count FROM t1, rt1 ORDER BY ((COALESCE(DISTINCT rt1.c4, rt1.c1)) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (HEX(1.345312213E9)) ORDER BY ((COALESCE(DISTINCT rt1.c4, rt1.c1)) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM t1, rt1 RIGHT OUTER JOIN rt0 ON ((((((NULL)AND(t1.c41)))OR(rt1.c3))) IS TRUE) WHERE (((json_valid(rt1.c3)) NOT BETWEEN (LOWER(DISTINCT rt1.c3)) AND (((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c3)))AND('')))AND(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt1.c3)) NOT BETWEEN (LOWER(DISTINCT rt1.c3)) AND (((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c3)))AND('')))AND(NULL))))) IS TRUE)  as count FROM t1, rt1 RIGHT OUTER JOIN rt0 ON ((((((NULL)AND(t1.c41)))OR(rt1.c3))) IS TRUE));
SELECT COUNT(*) FROM t1, rt1 RIGHT OUTER JOIN rt0 ON ((((((NULL)AND(t1.c41)))OR(rt1.c3))) IS TRUE) WHERE (((json_valid(rt1.c3)) NOT BETWEEN (LOWER(DISTINCT rt1.c3)) AND (((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c3)))AND('')))AND(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt1.c3)) NOT BETWEEN (LOWER(DISTINCT rt1.c3)) AND (((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c3)))AND('')))AND(NULL))))) IS TRUE)  as count FROM t1, rt1 RIGHT OUTER JOIN rt0 ON ((((((NULL)AND(t1.c41)))OR(rt1.c3))) IS TRUE));
SELECT COUNT(*) FROM t1, rt1 RIGHT OUTER JOIN rt0 ON ((((((NULL)AND(t1.c41)))OR(rt1.c3))) IS TRUE) WHERE (((json_valid(rt1.c3)) NOT BETWEEN (LOWER(DISTINCT rt1.c3)) AND (((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c3)))AND('')))AND(NULL)))));
SELECT * FROM t1 WHERE (((CASE t1.c41  WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c41  WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CASE t1.c41  WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c41  WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CASE t1.c41  WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END) IS TRUE));
SELECT ALL COUNT(*) FROM t1 WHERE (ABS((((t1.c41))<>((t1.c41)))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((((t1.c41))!=((t1.c41))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (ABS((((t1.c41))<>((t1.c41)))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((((t1.c41))!=((t1.c41))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (ABS((((t1.c41))<>((t1.c41)))));
SELECT COUNT(*) FROM rt0, t1 WHERE (((((t1.c41)-(rt0.c1)))%(((rt0.c1)>(rt0.c2))))) ORDER BY ((((((((((t1.c41)&(rt0.c1)))OR((+ (rt0.c1)))))OR(rt0.c2 COLLATE NOCASE)))AND(((0.456260429856005) IS TRUE))))AND((t1.c41 IN ()))), CAST((NOT (rt0.c1)) AS NUMERIC) ASC, NULLIF(rt0.c0, rt0.c1) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c41)-(rt0.c1)))%(((rt0.c1)>(rt0.c2))))) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((((((((t1.c41)&(rt0.c1)))OR((+ (rt0.c1)))))OR(rt0.c2 COLLATE NOCASE)))AND(((0.456260429856005) IS TRUE))))AND((t1.c41 IN ()))), CAST((NOT (rt0.c1)) AS NUMERIC) ASC, NULLIF(rt0.c0, rt0.c1) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((t1.c41)-(rt0.c1)))%(((rt0.c1)>(rt0.c2))))) ORDER BY ((((((((((t1.c41)&(rt0.c1)))OR((+ (rt0.c1)))))OR(rt0.c2 COLLATE NOCASE)))AND(((0.456260429856005) IS TRUE))))AND((t1.c41 IN ()))), CAST((NOT (rt0.c1)) AS NUMERIC) ASC, NULLIF(rt0.c0, rt0.c1) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c41)-(rt0.c1)))%(((rt0.c1)>(rt0.c2))))) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((((((((t1.c41)&(rt0.c1)))OR((+ (rt0.c1)))))OR(rt0.c2 COLLATE NOCASE)))AND(((0.456260429856005) IS TRUE))))AND((t1.c41 IN ()))), CAST((NOT (rt0.c1)) AS NUMERIC) ASC, NULLIF(rt0.c0, rt0.c1) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((t1.c41 COLLATE RTRIM IN (((t1.c41)<(t1.c41))))) ORDER BY CASE CAST(t1.c41 AS NUMERIC)  WHEN ((t1.c41)/(t1.c41)) THEN (- (t1.c41)) END DESC  NULLS FIRST, ((t1.c41)<=(((t1.c41) BETWEEN (t1.c41) AND (t1.c41)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c41 COLLATE RTRIM IN (((t1.c41)<(t1.c41))))) IS TRUE)  as count FROM t1 ORDER BY CASE CAST(t1.c41 AS NUMERIC)  WHEN ((t1.c41)/(t1.c41)) THEN (- (t1.c41)) END DESC  NULLS FIRST, ((t1.c41)<=(((t1.c41) BETWEEN (t1.c41) AND (t1.c41)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((t1.c41 COLLATE RTRIM IN (((t1.c41)<(t1.c41))))) ORDER BY CASE CAST(t1.c41 AS NUMERIC)  WHEN ((t1.c41)/(t1.c41)) THEN (- (t1.c41)) END DESC  NULLS FIRST, ((t1.c41)<=(((t1.c41) BETWEEN (t1.c41) AND (t1.c41)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c41 COLLATE RTRIM IN (((t1.c41)<(t1.c41))))) IS TRUE)  as count FROM t1 ORDER BY CASE CAST(t1.c41 AS NUMERIC)  WHEN ((t1.c41)/(t1.c41)) THEN (- (t1.c41)) END DESC  NULLS FIRST, ((t1.c41)<=(((t1.c41) BETWEEN (t1.c41) AND (t1.c41)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((t1.c41 COLLATE RTRIM IN (((t1.c41)<(t1.c41))))) ORDER BY CASE CAST(t1.c41 AS NUMERIC)  WHEN ((t1.c41)/(t1.c41)) THEN (- (t1.c41)) END DESC  NULLS FIRST, ((t1.c41)<=(((t1.c41) BETWEEN (t1.c41) AND (t1.c41)))) DESC  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE (TRIM(((rt0.c0)&(rt0.c2)), ((((rt1.c0)AND(rt1.c3)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c0)&(rt0.c2)), ((((rt1.c0)AND(rt1.c3)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (TRIM(((rt0.c0)&(rt0.c2)), ((((rt1.c0)AND(rt1.c3)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c0)&(rt0.c2)), ((((rt1.c0)AND(rt1.c3)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (TRIM(((rt0.c0)&(rt0.c2)), ((((rt1.c0)AND(rt1.c3)))OR(rt0.c1))));
SELECT * FROM rt0 WHERE (((((((rt0.c1)<<(rt0.c2)))OR((rt0.c1 IN ()))))OR(TYPEOF(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)<<(rt0.c2)))OR((rt0.c1 IN ()))))OR(TYPEOF(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)<<(rt0.c2)))OR((rt0.c1 IN ()))))OR(TYPEOF(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)<<(rt0.c2)))OR((rt0.c1 IN ()))))OR(TYPEOF(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)<<(rt0.c2)))OR((rt0.c1 IN ()))))OR(TYPEOF(rt0.c2))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON ((IFNULL(rt1.c0, rt1.c3)) NOT BETWEEN (0.7707251710714229) AND (((rt1.c3)<<(rt1.c1)))) FULL OUTER JOIN t1 ON ((((((rt0.c0)AND(x'')))AND(LIKE(rt1.c1, rt1.c3))))AND(((rt0.c1) ISNULL))) WHERE (CAST(NULL AS TEXT)) ORDER BY 337201149 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((IFNULL(rt1.c0, rt1.c3)) NOT BETWEEN (0.7707251710714229) AND (((rt1.c3)<<(rt1.c1)))) FULL OUTER JOIN t1 ON ((((((rt0.c0)AND(x'')))AND(LIKE(rt1.c1, rt1.c3))))AND(((rt0.c1) ISNULL))) ORDER BY 337201149 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON ((IFNULL(rt1.c0, rt1.c3)) NOT BETWEEN (0.7707251710714229) AND (((rt1.c3)<<(rt1.c1)))) FULL OUTER JOIN t1 ON ((((((rt0.c0)AND(x'')))AND(LIKE(rt1.c1, rt1.c3))))AND(((rt0.c1) ISNULL))) WHERE (CAST(NULL AS TEXT)) ORDER BY 337201149 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((IFNULL(rt1.c0, rt1.c3)) NOT BETWEEN (0.7707251710714229) AND (((rt1.c3)<<(rt1.c1)))) FULL OUTER JOIN t1 ON ((((((rt0.c0)AND(x'')))AND(LIKE(rt1.c1, rt1.c3))))AND(((rt0.c1) ISNULL))) ORDER BY 337201149 ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY (((rt1.c3, rt1.c3, rt1.c1)) BETWEEN (((rt1.c1 IN ()), MIN(rt1.c4, rt1.c1), ((rt1.c2)%(rt1.c1)))) AND (((~ (rt1.c3)), (x'377f' IN ()), ((((rt1.c3)AND(rt1.c0)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3, rt1.c3, rt1.c1)) BETWEEN (((rt1.c1 IN ()), MIN(rt1.c4, rt1.c1), ((rt1.c2)%(rt1.c1)))) AND (((~ (rt1.c3)), (x'377f' IN ()), ((((rt1.c3)AND(rt1.c0)))OR(rt1.c1))))));
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY (((rt1.c3, rt1.c3, rt1.c1)) BETWEEN (((rt1.c1 IN ()), MIN(rt1.c4, rt1.c1), ((rt1.c2)%(rt1.c1)))) AND (((~ (rt1.c3)), (x'377f' IN ()), ((((rt1.c3)AND(rt1.c0)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3, rt1.c3, rt1.c1)) BETWEEN (((rt1.c1 IN ()), MIN(rt1.c4, rt1.c1), ((rt1.c2)%(rt1.c1)))) AND (((~ (rt1.c3)), (x'377f' IN ()), ((((rt1.c3)AND(rt1.c0)))OR(rt1.c1))))));
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY (((rt1.c3, rt1.c3, rt1.c1)) BETWEEN (((rt1.c1 IN ()), MIN(rt1.c4, rt1.c1), ((rt1.c2)%(rt1.c1)))) AND (((~ (rt1.c3)), (x'377f' IN ()), ((((rt1.c3)AND(rt1.c0)))OR(rt1.c1)))));
SELECT ALL * FROM rt1 WHERE (CASE ((((rt1.c0)AND(rt1.c0)))OR(rt1.c2))  WHEN ((rt1.c2)>=(rt1.c2)) THEN (((rt1.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c3, rt1.c4, rt1.c1)) AND ((rt1.c2, rt1.c0, rt1.c3))) END) ORDER BY ((((x'') BETWEEN (rt1.c3) AND (rt1.c1))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt1.c0)AND(rt1.c0)))OR(rt1.c2))  WHEN ((rt1.c2)>=(rt1.c2)) THEN (((rt1.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c3, rt1.c4, rt1.c1)) AND ((rt1.c2, rt1.c0, rt1.c3))) END) IS TRUE)  as count FROM rt1 ORDER BY ((((x'') BETWEEN (rt1.c3) AND (rt1.c1))) ISNULL)  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CASE ((((rt1.c0)AND(rt1.c0)))OR(rt1.c2))  WHEN ((rt1.c2)>=(rt1.c2)) THEN (((rt1.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c3, rt1.c4, rt1.c1)) AND ((rt1.c2, rt1.c0, rt1.c3))) END) ORDER BY ((((x'') BETWEEN (rt1.c3) AND (rt1.c1))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt1.c0)AND(rt1.c0)))OR(rt1.c2))  WHEN ((rt1.c2)>=(rt1.c2)) THEN (((rt1.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c3, rt1.c4, rt1.c1)) AND ((rt1.c2, rt1.c0, rt1.c3))) END) IS TRUE)  as count FROM rt1 ORDER BY ((((x'') BETWEEN (rt1.c3) AND (rt1.c1))) ISNULL)  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CASE ((((rt1.c0)AND(rt1.c0)))OR(rt1.c2))  WHEN ((rt1.c2)>=(rt1.c2)) THEN (((rt1.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c3, rt1.c4, rt1.c1)) AND ((rt1.c2, rt1.c0, rt1.c3))) END) ORDER BY ((((x'') BETWEEN (rt1.c3) AND (rt1.c1))) ISNULL)  NULLS LAST;
SELECT * FROM rt0 WHERE ((((((- (rt0.c2)))OR(((rt0.c0) IS TRUE))))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((x''))) ASC  NULLS LAST, ((CASE x''  WHEN rt0.c2 THEN x'' END) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c2)))OR(((rt0.c0) IS TRUE))))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((x''))) ASC  NULLS LAST, ((CASE x''  WHEN rt0.c2 THEN x'' END) NOT NULL)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((- (rt0.c2)))OR(((rt0.c0) IS TRUE))))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((x''))) ASC  NULLS LAST, ((CASE x''  WHEN rt0.c2 THEN x'' END) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c2)))OR(((rt0.c0) IS TRUE))))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((x''))) ASC  NULLS LAST, ((CASE x''  WHEN rt0.c2 THEN x'' END) NOT NULL)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((- (rt0.c2)))OR(((rt0.c0) IS TRUE))))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((x''))) ASC  NULLS LAST, ((CASE x''  WHEN rt0.c2 THEN x'' END) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))GLOB(x'')) WHERE (NULL) ORDER BY (+ (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST, NULLIF(LOWER(rt0.c2), CAST(rt0.c0 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))GLOB(x'')) ORDER BY (+ (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST, NULLIF(LOWER(rt0.c2), CAST(rt0.c0 AS NUMERIC)) DESC);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))GLOB(x'')) WHERE (NULL) ORDER BY (+ (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST, NULLIF(LOWER(rt0.c2), CAST(rt0.c0 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))GLOB(x'')) ORDER BY (+ (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST, NULLIF(LOWER(rt0.c2), CAST(rt0.c0 AS NUMERIC)) DESC);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))GLOB(x'')) WHERE (NULL) ORDER BY (+ (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST, NULLIF(LOWER(rt0.c2), CAST(rt0.c0 AS NUMERIC)) DESC;
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (SQLITE_COMPILEOPTION_GET(((rt1.c3) IS FALSE))) ORDER BY CASE WHEN ((t1.c41)&(rt1.c0)) THEN rt1.c3 END DESC  NULLS LAST, rt1.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((rt1.c3) IS FALSE))) IS TRUE)  as count FROM t1, rt1 ORDER BY CASE WHEN ((t1.c41)&(rt1.c0)) THEN rt1.c3 END DESC  NULLS LAST, rt1.c3  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (SQLITE_COMPILEOPTION_GET(((rt1.c3) IS FALSE))) ORDER BY CASE WHEN ((t1.c41)&(rt1.c0)) THEN rt1.c3 END DESC  NULLS LAST, rt1.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((rt1.c3) IS FALSE))) IS TRUE)  as count FROM t1, rt1 ORDER BY CASE WHEN ((t1.c41)&(rt1.c0)) THEN rt1.c3 END DESC  NULLS LAST, rt1.c3  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (SQLITE_COMPILEOPTION_GET(((rt1.c3) IS FALSE))) ORDER BY CASE WHEN ((t1.c41)&(rt1.c0)) THEN rt1.c3 END DESC  NULLS LAST, rt1.c3  NULLS LAST;
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE ((((((rt1.c3)>=(rt1.c1))))!=((((((rt1.c3)OR(rt1.c2)))AND(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)>=(rt1.c1))))<>((((((rt1.c3)OR(rt1.c2)))AND(rt1.c2)))))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE ((((((rt1.c3)>=(rt1.c1))))!=((((((rt1.c3)OR(rt1.c2)))AND(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)>=(rt1.c1))))<>((((((rt1.c3)OR(rt1.c2)))AND(rt1.c2)))))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE ((((((rt1.c3)>=(rt1.c1))))!=((((((rt1.c3)OR(rt1.c2)))AND(rt1.c2))))));
SELECT ALL COUNT(*) FROM t1 WHERE ((json_insert(t1.c41, t1.c41, '-418430358') IN ((- (x'')))));
SELECT SUM(count) FROM (SELECT ALL (((json_insert(t1.c41, t1.c41, '-418430358') IN ((- (x''))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((json_insert(t1.c41, t1.c41, '-418430358') IN ((- (x'')))));
SELECT SUM(count) FROM (SELECT ALL (((json_insert(t1.c41, t1.c41, '-418430358') IN ((- (x''))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1, rt1 WHERE ((+ (((rt1.c3)>=(rt1.c0))))) ORDER BY ((((((((t1.c41)OR(rt1.c3)))OR(rt1.c1)))AND(rt1.c4)))OR(rt1.c3)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c3)>=(rt1.c0))))) IS TRUE)  as count FROM t1, rt1 ORDER BY ((((((((t1.c41)OR(rt1.c3)))OR(rt1.c1)))AND(rt1.c4)))OR(rt1.c3)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t1, rt1 WHERE ((+ (((rt1.c3)>=(rt1.c0))))) ORDER BY ((((((((t1.c41)OR(rt1.c3)))OR(rt1.c1)))AND(rt1.c4)))OR(rt1.c3)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c3)>=(rt1.c0))))) IS TRUE)  as count FROM t1, rt1 ORDER BY ((((((((t1.c41)OR(rt1.c3)))OR(rt1.c1)))AND(rt1.c4)))OR(rt1.c3)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t1, rt1 WHERE ((+ (((rt1.c3)>=(rt1.c0))))) ORDER BY ((((((((t1.c41)OR(rt1.c3)))OR(rt1.c1)))AND(rt1.c4)))OR(rt1.c3)) COLLATE NOCASE DESC;
SELECT ALL * FROM t1, rt0 WHERE (rt0.c1) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t1, rt0 ORDER BY (rt0.c0 IN ()) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM t1, rt0 WHERE (rt0.c1) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t1, rt0 ORDER BY (rt0.c0 IN ()) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM t1, rt0 WHERE (rt0.c1) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c1) IS TRUE)) ORDER BY COALESCE(((rt0.c1)IS NOT(rt0.c0)), rt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(((rt0.c1)IS NOT(rt0.c0)), rt0.c1 COLLATE RTRIM));
SELECT * FROM rt0 WHERE (((rt0.c1) IS TRUE)) ORDER BY COALESCE(((rt0.c1)IS NOT(rt0.c0)), rt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(((rt0.c1)IS NOT(rt0.c0)), rt0.c1 COLLATE RTRIM));
SELECT * FROM rt0 WHERE (((rt0.c1) IS TRUE)) ORDER BY COALESCE(((rt0.c1)IS NOT(rt0.c0)), rt0.c1 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((HEX(DISTINCT NULL))) AND ((((rt0.c1)IS(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((HEX(DISTINCT NULL))) AND ((((rt0.c1)IS(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((HEX(DISTINCT NULL))) AND ((((rt0.c1)IS(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((HEX(DISTINCT NULL))) AND ((((rt0.c1)IS(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((HEX(DISTINCT NULL))) AND ((((rt0.c1)IS(rt0.c0))))));
SELECT * FROM t1, rt1 WHERE (CASE WHEN rt1.c3 COLLATE BINARY THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END WHEN ((rt1.c3)<=(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) WHEN rt1.c0 THEN rt1.c0 COLLATE BINARY ELSE ((((x'7186')AND(rt1.c3)))AND(rt1.c0)) END) ORDER BY COALESCE(((rt1.c3)-(rt1.c0)), ((rt1.c0) BETWEEN (rt1.c1) AND (t1.c41))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c3 COLLATE BINARY THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END WHEN ((rt1.c3)<=(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) WHEN rt1.c0 THEN rt1.c0 COLLATE BINARY ELSE ((((x'7186')AND(rt1.c3)))AND(rt1.c0)) END) IS TRUE)  as count FROM t1, rt1 ORDER BY COALESCE(((rt1.c3)-(rt1.c0)), ((rt1.c0) BETWEEN (rt1.c1) AND (t1.c41))) DESC  NULLS LAST);
SELECT * FROM t1, rt1 WHERE (CASE WHEN rt1.c3 COLLATE BINARY THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END WHEN ((rt1.c3)<=(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) WHEN rt1.c0 THEN rt1.c0 COLLATE BINARY ELSE ((((x'7186')AND(rt1.c3)))AND(rt1.c0)) END) ORDER BY COALESCE(((rt1.c3)-(rt1.c0)), ((rt1.c0) BETWEEN (rt1.c1) AND (t1.c41))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c3 COLLATE BINARY THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END WHEN ((rt1.c3)<=(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) WHEN rt1.c0 THEN rt1.c0 COLLATE BINARY ELSE ((((x'7186')AND(rt1.c3)))AND(rt1.c0)) END) IS TRUE)  as count FROM t1, rt1 ORDER BY COALESCE(((rt1.c3)-(rt1.c0)), ((rt1.c0) BETWEEN (rt1.c1) AND (t1.c41))) DESC  NULLS LAST);
SELECT * FROM t1, rt1 WHERE (CASE WHEN rt1.c3 COLLATE BINARY THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END WHEN ((rt1.c3)<=(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) WHEN rt1.c0 THEN rt1.c0 COLLATE BINARY ELSE ((((x'7186')AND(rt1.c3)))AND(rt1.c0)) END) ORDER BY COALESCE(((rt1.c3)-(rt1.c0)), ((rt1.c0) BETWEEN (rt1.c1) AND (t1.c41))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t1 WHERE (CASE WHEN ((t1.c41)%(t1.c41)) THEN ((x'') NOT NULL) WHEN ((rt0.c1) BETWEEN (rt0.c2) AND ('-13547644')) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c2) IS FALSE) THEN (NOT ('0.5322721526219338')) END) ORDER BY TIME(rt0.c1, (NOT (rt0.c2)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (t1.c41))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c41)%(t1.c41)) THEN ((x'') NOT NULL) WHEN ((rt0.c1) BETWEEN (rt0.c2) AND ('-13547644')) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c2) IS FALSE) THEN (NOT ('0.5322721526219338')) END) IS TRUE)  as count FROM rt0, t1 ORDER BY TIME(rt0.c1, (NOT (rt0.c2)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (t1.c41))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1 WHERE (CASE WHEN ((t1.c41)%(t1.c41)) THEN ((x'') NOT NULL) WHEN ((rt0.c1) BETWEEN (rt0.c2) AND ('-13547644')) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c2) IS FALSE) THEN (NOT ('0.5322721526219338')) END) ORDER BY TIME(rt0.c1, (NOT (rt0.c2)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (t1.c41))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c41)%(t1.c41)) THEN ((x'') NOT NULL) WHEN ((rt0.c1) BETWEEN (rt0.c2) AND ('-13547644')) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c2) IS FALSE) THEN (NOT ('0.5322721526219338')) END) IS TRUE)  as count FROM rt0, t1 ORDER BY TIME(rt0.c1, (NOT (rt0.c2)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (t1.c41))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1 WHERE (CASE WHEN ((t1.c41)%(t1.c41)) THEN ((x'') NOT NULL) WHEN ((rt0.c1) BETWEEN (rt0.c2) AND ('-13547644')) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c2) IS FALSE) THEN (NOT ('0.5322721526219338')) END) ORDER BY TIME(rt0.c1, (NOT (rt0.c2)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (t1.c41))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((((((((- (rt0.c1)))OR(ABS(rt0.c1))))OR('R	')))OR(((rt0.c2)<=(rt0.c2)))))OR((+ (t1.c41))))) ORDER BY ((('-119207906', 0.5710659110557923, t1.c41)) NOT BETWEEN ((((rt0.c0) BETWEEN (t1.c41) AND (rt0.c1)), '-700739977', CAST(rt0.c1 AS NUMERIC))) AND (((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((t1.c41, rt0.c1, rt0.c0)) AND ((x'', rt0.c2, rt0.c2))), rt0.c0, (((rt0.c2, rt0.c2, rt0.c2, t1.c41, rt0.c0))!=((rt0.c2, rt0.c2, rt0.c1, t1.c41, '657847635')))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((- (rt0.c1)))OR(ABS(rt0.c1))))OR('R	')))OR(((rt0.c2)<=(rt0.c2)))))OR((+ (t1.c41))))) IS TRUE)  as count FROM rt0, t1 ORDER BY ((('-119207906', 0.5710659110557923, t1.c41)) NOT BETWEEN ((((rt0.c0) BETWEEN (t1.c41) AND (rt0.c1)), '-700739977', CAST(rt0.c1 AS NUMERIC))) AND (((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((t1.c41, rt0.c1, rt0.c0)) AND ((x'', rt0.c2, rt0.c2))), rt0.c0, (((rt0.c2, rt0.c2, rt0.c2, t1.c41, rt0.c0))!=((rt0.c2, rt0.c2, rt0.c1, t1.c41, '657847635')))))) DESC);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((((((((- (rt0.c1)))OR(ABS(rt0.c1))))OR('R	')))OR(((rt0.c2)<=(rt0.c2)))))OR((+ (t1.c41))))) ORDER BY ((('-119207906', 0.5710659110557923, t1.c41)) NOT BETWEEN ((((rt0.c0) BETWEEN (t1.c41) AND (rt0.c1)), '-700739977', CAST(rt0.c1 AS NUMERIC))) AND (((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((t1.c41, rt0.c1, rt0.c0)) AND ((x'', rt0.c2, rt0.c2))), rt0.c0, (((rt0.c2, rt0.c2, rt0.c2, t1.c41, rt0.c0))!=((rt0.c2, rt0.c2, rt0.c1, t1.c41, '657847635')))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((- (rt0.c1)))OR(ABS(rt0.c1))))OR('R	')))OR(((rt0.c2)<=(rt0.c2)))))OR((+ (t1.c41))))) IS TRUE)  as count FROM rt0, t1 ORDER BY ((('-119207906', 0.5710659110557923, t1.c41)) NOT BETWEEN ((((rt0.c0) BETWEEN (t1.c41) AND (rt0.c1)), '-700739977', CAST(rt0.c1 AS NUMERIC))) AND (((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((t1.c41, rt0.c1, rt0.c0)) AND ((x'', rt0.c2, rt0.c2))), rt0.c0, (((rt0.c2, rt0.c2, rt0.c2, t1.c41, rt0.c0))!=((rt0.c2, rt0.c2, rt0.c1, t1.c41, '657847635')))))) DESC);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((((((((- (rt0.c1)))OR(ABS(rt0.c1))))OR('R	')))OR(((rt0.c2)<=(rt0.c2)))))OR((+ (t1.c41))))) ORDER BY ((('-119207906', 0.5710659110557923, t1.c41)) NOT BETWEEN ((((rt0.c0) BETWEEN (t1.c41) AND (rt0.c1)), '-700739977', CAST(rt0.c1 AS NUMERIC))) AND (((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((t1.c41, rt0.c1, rt0.c0)) AND ((x'', rt0.c2, rt0.c2))), rt0.c0, (((rt0.c2, rt0.c2, rt0.c2, t1.c41, rt0.c0))!=((rt0.c2, rt0.c2, rt0.c1, t1.c41, '657847635')))))) DESC;
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))|(((rt0.c1)<=(x'0f26')))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC))|(((rt0.c1)<=(x'0f26'))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))|(((rt0.c1)<=(x'0f26')))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC))|(((rt0.c1)<=(x'0f26'))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))|(((rt0.c1)<=(x'0f26')))));
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (CAST(((rt1.c1) BETWEEN (rt0.c2) AND (t1.c41)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) BETWEEN (rt0.c2) AND (t1.c41)) AS NUMERIC)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (CAST(((rt1.c1) BETWEEN (rt0.c2) AND (t1.c41)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) BETWEEN (rt0.c2) AND (t1.c41)) AS NUMERIC)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (CAST(((rt1.c1) BETWEEN (rt0.c2) AND (t1.c41)) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT CASE rt0.c1  WHEN 0X71d10bc2 THEN 0.9036063507519336 END)) ORDER BY ((((load_extension(rt0.c1, rt0.c2))AND(CAST(rt0.c0 AS REAL))))OR(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CASE rt0.c1  WHEN 0x71d10bc2 THEN 0.9036063507519336 END)) IS TRUE)  as count FROM rt0 ORDER BY ((((load_extension(rt0.c1, rt0.c2))AND(CAST(rt0.c0 AS REAL))))OR(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT CASE rt0.c1  WHEN 0X71d10bc2 THEN 0.9036063507519336 END)) ORDER BY ((((load_extension(rt0.c1, rt0.c2))AND(CAST(rt0.c0 AS REAL))))OR(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CASE rt0.c1  WHEN 0x71d10bc2 THEN 0.9036063507519336 END)) IS TRUE)  as count FROM rt0 ORDER BY ((((load_extension(rt0.c1, rt0.c2))AND(CAST(rt0.c0 AS REAL))))OR(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (- (rt1.c2)) WHERE (CASE WHEN (~ (rt1.c2)) THEN ((rt1.c2) IS FALSE) ELSE 0.04388378098064538 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt1.c2)) THEN ((rt1.c2) IS FALSE) ELSE 0.04388378098064538 END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (- (rt1.c2)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (- (rt1.c2)) WHERE (CASE WHEN (~ (rt1.c2)) THEN ((rt1.c2) IS FALSE) ELSE 0.04388378098064538 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt1.c2)) THEN ((rt1.c2) IS FALSE) ELSE 0.04388378098064538 END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (- (rt1.c2)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (- (rt1.c2)) WHERE (CASE WHEN (~ (rt1.c2)) THEN ((rt1.c2) IS FALSE) ELSE 0.04388378098064538 END);
SELECT ALL * FROM t1 WHERE (((0.9275178738876242)<=(((((t1.c41)OR(t1.c41)))OR(t1.c41)))));
SELECT SUM(count) FROM (SELECT ((((0.9275178738876242)<=(((((t1.c41)OR(t1.c41)))OR(t1.c41))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((0.9275178738876242)<=(((((t1.c41)OR(t1.c41)))OR(t1.c41)))));
SELECT SUM(count) FROM (SELECT ((((0.9275178738876242)<=(((((t1.c41)OR(t1.c41)))OR(t1.c41))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((0.9275178738876242)<=(((((t1.c41)OR(t1.c41)))OR(t1.c41)))));
SELECT * FROM t1, rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (t1.c41) AND (rt0.c2)) THEN ((t1.c41)>(t1.c41)) WHEN CASE t1.c41  WHEN rt0.c2 THEN rt0.c2 END THEN (+ (rt0.c0)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t1.c41))) THEN MIN(rt0.c1, rt0.c2) ELSE (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((NULL))) END) ORDER BY ((((rt0.c2) NOT NULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (t1.c41))) AND (((((rt0.c1)AND(NULL)))AND(rt0.c0))))  NULLS LAST, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOT BETWEEN (t1.c41) AND (rt0.c2)) THEN ((t1.c41)>(t1.c41)) WHEN CASE t1.c41  WHEN rt0.c2 THEN rt0.c2 END THEN (+ (rt0.c0)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t1.c41))) THEN MIN(rt0.c1, rt0.c2) ELSE (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((NULL))) END) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((rt0.c2) NOT NULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (t1.c41))) AND (((((rt0.c1)AND(NULL)))AND(rt0.c0))))  NULLS LAST, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND(rt0.c1))  NULLS LAST);
SELECT * FROM t1, rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (t1.c41) AND (rt0.c2)) THEN ((t1.c41)>(t1.c41)) WHEN CASE t1.c41  WHEN rt0.c2 THEN rt0.c2 END THEN (+ (rt0.c0)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t1.c41))) THEN MIN(rt0.c1, rt0.c2) ELSE (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((NULL))) END) ORDER BY ((((rt0.c2) NOT NULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (t1.c41))) AND (((((rt0.c1)AND(NULL)))AND(rt0.c0))))  NULLS LAST, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOT BETWEEN (t1.c41) AND (rt0.c2)) THEN ((t1.c41)>(t1.c41)) WHEN CASE t1.c41  WHEN rt0.c2 THEN rt0.c2 END THEN (+ (rt0.c0)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t1.c41))) THEN MIN(rt0.c1, rt0.c2) ELSE (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((NULL))) END) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((rt0.c2) NOT NULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (t1.c41))) AND (((((rt0.c1)AND(NULL)))AND(rt0.c0))))  NULLS LAST, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND(rt0.c1))  NULLS LAST);
SELECT * FROM t1, rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (t1.c41) AND (rt0.c2)) THEN ((t1.c41)>(t1.c41)) WHEN CASE t1.c41  WHEN rt0.c2 THEN rt0.c2 END THEN (+ (rt0.c0)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t1.c41))) THEN MIN(rt0.c1, rt0.c2) ELSE (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((NULL))) END) ORDER BY ((((rt0.c2) NOT NULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (t1.c41))) AND (((((rt0.c1)AND(NULL)))AND(rt0.c0))))  NULLS LAST, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND(rt0.c1))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((((((rt0.c2 IN (rt1.c3)))AND(CAST(rt1.c0 AS INTEGER))))OR(((0.25436245122030576)<<(rt1.c0)))))AND(((1144459094) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND((+ (x'')))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c2 IN (rt1.c3)))AND(CAST(rt1.c0 AS INTEGER))))OR(((0.25436245122030576)<<(rt1.c0)))))AND(((1144459094) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND((+ (x''))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((((((rt0.c2 IN (rt1.c3)))AND(CAST(rt1.c0 AS INTEGER))))OR(((0.25436245122030576)<<(rt1.c0)))))AND(((1144459094) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND((+ (x'')))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c2 IN (rt1.c3)))AND(CAST(rt1.c0 AS INTEGER))))OR(((0.25436245122030576)<<(rt1.c0)))))AND(((1144459094) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND((+ (x''))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((((((rt0.c2 IN (rt1.c3)))AND(CAST(rt1.c0 AS INTEGER))))OR(((0.25436245122030576)<<(rt1.c0)))))AND(((1144459094) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND((+ (x'')))));
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN t1 ON rt0.c2 WHERE ((((((NOT (rt1.c1)))OR(CAST(rt1.c3 AS REAL))))AND(load_extension(rt1.c2))));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt1.c1)))OR(CAST(rt1.c3 AS REAL))))AND(load_extension(rt1.c2)))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t1 ON rt0.c2);
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN t1 ON rt0.c2 WHERE ((((((NOT (rt1.c1)))OR(CAST(rt1.c3 AS REAL))))AND(load_extension(rt1.c2))));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt1.c1)))OR(CAST(rt1.c3 AS REAL))))AND(load_extension(rt1.c2)))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t1 ON rt0.c2);
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN t1 ON rt0.c2 WHERE ((((((NOT (rt1.c1)))OR(CAST(rt1.c3 AS REAL))))AND(load_extension(rt1.c2))));
SELECT COUNT(*) FROM rt0 NOT INDEXED RIGHT OUTER JOIN rt1 ON (((NULL)-(rt1.c3)) IN ()) CROSS JOIN t1 ON rt1.c0 WHERE ((NOT ((rt1.c4 IN ())))) ORDER BY (NOT (-831449502));
SELECT SUM(count) FROM (SELECT (((NOT ((rt1.c4 IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((NULL)-(rt1.c3)) IN ()) CROSS JOIN t1 ON rt1.c0 ORDER BY (NOT (-831449502)));
SELECT COUNT(*) FROM rt0 NOT INDEXED RIGHT OUTER JOIN rt1 ON (((NULL)-(rt1.c3)) IN ()) CROSS JOIN t1 ON rt1.c0 WHERE ((NOT ((rt1.c4 IN ())))) ORDER BY (NOT (-831449502));
SELECT SUM(count) FROM (SELECT (((NOT ((rt1.c4 IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((NULL)-(rt1.c3)) IN ()) CROSS JOIN t1 ON rt1.c0 ORDER BY (NOT (-831449502)));
SELECT COUNT(*) FROM rt0 NOT INDEXED RIGHT OUTER JOIN rt1 ON (((NULL)-(rt1.c3)) IN ()) CROSS JOIN t1 ON rt1.c0 WHERE ((NOT ((rt1.c4 IN ())))) ORDER BY (NOT (-831449502));
SELECT ALL * FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)OR(rt0.c0 COLLATE BINARY)) WHERE (((rt0.c1) NOT BETWEEN ((+ (rt0.c2))) AND (rtreenode(rt0.c0, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN ((+ (rt0.c2))) AND (rtreenode(rt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)OR(rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)OR(rt0.c0 COLLATE BINARY)) WHERE (((rt0.c1) NOT BETWEEN ((+ (rt0.c2))) AND (rtreenode(rt0.c0, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN ((+ (rt0.c2))) AND (rtreenode(rt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)OR(rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)OR(rt0.c0 COLLATE BINARY)) WHERE (((rt0.c1) NOT BETWEEN ((+ (rt0.c2))) AND (rtreenode(rt0.c0, rt0.c1))));
SELECT COUNT(*) FROM t1 WHERE (NULL COLLATE NOCASE) ORDER BY (((((((t1.c41)OR(t1.c41)))AND(t1.c41))))>((((((t1.c41)OR(t1.c41)))OR(t1.c41))))) DESC, (~ (t1.c41)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (((((((t1.c41)OR(t1.c41)))AND(t1.c41))))>((((((t1.c41)OR(t1.c41)))OR(t1.c41))))) DESC, (~ (t1.c41)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (NULL COLLATE NOCASE) ORDER BY (((((((t1.c41)OR(t1.c41)))AND(t1.c41))))>((((((t1.c41)OR(t1.c41)))OR(t1.c41))))) DESC, (~ (t1.c41)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (((((((t1.c41)OR(t1.c41)))AND(t1.c41))))>((((((t1.c41)OR(t1.c41)))OR(t1.c41))))) DESC, (~ (t1.c41)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (NULL COLLATE NOCASE) ORDER BY (((((((t1.c41)OR(t1.c41)))AND(t1.c41))))>((((((t1.c41)OR(t1.c41)))OR(t1.c41))))) DESC, (~ (t1.c41)) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (((CASE rt1.c1  WHEN t1.c41 THEN rt1.c1 END) BETWEEN ((((t1.c41, rt1.c4, 533499599)) NOT BETWEEN ((rt1.c4, rt1.c4, t1.c41)) AND ((rt1.c2, rt1.c4, 0.27730175456638606)))) AND (((t1.c41)>=(rt1.c1))))) ORDER BY ((((rt1.c3)>=(rt1.c4))) IS TRUE) ASC  NULLS FIRST, 0X17ab2853 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN t1.c41 THEN rt1.c1 END) BETWEEN ((((t1.c41, rt1.c4, 533499599)) NOT BETWEEN ((rt1.c4, rt1.c4, t1.c41)) AND ((rt1.c2, rt1.c4, 0.27730175456638606)))) AND (((t1.c41)>=(rt1.c1))))) IS TRUE)  as count FROM rt1, t1 ORDER BY ((((rt1.c3)>=(rt1.c4))) IS TRUE) ASC  NULLS FIRST, 0X17ab2853 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (((CASE rt1.c1  WHEN t1.c41 THEN rt1.c1 END) BETWEEN ((((t1.c41, rt1.c4, 533499599)) NOT BETWEEN ((rt1.c4, rt1.c4, t1.c41)) AND ((rt1.c2, rt1.c4, 0.27730175456638606)))) AND (((t1.c41)>=(rt1.c1))))) ORDER BY ((((rt1.c3)>=(rt1.c4))) IS TRUE) ASC  NULLS FIRST, 0X17ab2853 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN t1.c41 THEN rt1.c1 END) BETWEEN ((((t1.c41, rt1.c4, 533499599)) NOT BETWEEN ((rt1.c4, rt1.c4, t1.c41)) AND ((rt1.c2, rt1.c4, 0.27730175456638606)))) AND (((t1.c41)>=(rt1.c1))))) IS TRUE)  as count FROM rt1, t1 ORDER BY ((((rt1.c3)>=(rt1.c4))) IS TRUE) ASC  NULLS FIRST, 0X17ab2853 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t1 ON (((~ (rt1.c3))) NOTNULL) WHERE (CAST((- (rt1.c0)) AS BLOB)) ORDER BY ((rt1.c3)/(rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((- (rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t1 ON (((~ (rt1.c3))) NOTNULL) ORDER BY ((rt1.c3)/(rt1.c2)) DESC);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t1 ON (((~ (rt1.c3))) NOTNULL) WHERE (CAST((- (rt1.c0)) AS BLOB)) ORDER BY ((rt1.c3)/(rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((- (rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t1 ON (((~ (rt1.c3))) NOTNULL) ORDER BY ((rt1.c3)/(rt1.c2)) DESC);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t1 ON (((~ (rt1.c3))) NOTNULL) WHERE (CAST((- (rt1.c0)) AS BLOB)) ORDER BY ((rt1.c3)/(rt1.c2)) DESC;
SELECT ALL * FROM rt0 INNER JOIN rt1 ON (((rt1.c3)) NOT BETWEEN ((MIN(rt0.c1, rt1.c1, rt1.c4, rt0.c1))) AND ((((rt1.c2)+(rt1.c2))))) CROSS JOIN t1 ON 0.17974678991740245 WHERE (((((((((SQLITE_VERSION())OR(((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c3)))))OR((t1.c41 IN (rt1.c0)))))OR((((rt0.c2))=((rt1.c1))))))AND(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0))))) ORDER BY ((((((((((rt1.c3) NOT BETWEEN (rt0.c1) AND ('O0')))AND(rt0.c2)))OR(((((0.5322712376993719)OR(t1.c41)))OR(rt1.c1)))))AND(((rt1.c1)=(rt1.c3)))))OR(0.9639884026285822)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((SQLITE_VERSION())OR(((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c3)))))OR((t1.c41 IN (rt1.c0)))))OR((((rt0.c2))=((rt1.c1))))))AND(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((rt1.c3)) NOT BETWEEN ((MIN(rt0.c1, rt1.c1, rt1.c4, rt0.c1))) AND ((((rt1.c2)+(rt1.c2))))) CROSS JOIN t1 ON 0.17974678991740245 ORDER BY ((((((((((rt1.c3) NOT BETWEEN (rt0.c1) AND ('O0')))AND(rt0.c2)))OR(((((0.5322712376993719)OR(t1.c41)))OR(rt1.c1)))))AND(((rt1.c1)==(rt1.c3)))))OR(0.9639884026285822)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON (((rt1.c3)) NOT BETWEEN ((MIN(rt0.c1, rt1.c1, rt1.c4, rt0.c1))) AND ((((rt1.c2)+(rt1.c2))))) CROSS JOIN t1 ON 0.17974678991740245 WHERE (((((((((SQLITE_VERSION())OR(((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c3)))))OR((t1.c41 IN (rt1.c0)))))OR((((rt0.c2))=((rt1.c1))))))AND(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0))))) ORDER BY ((((((((((rt1.c3) NOT BETWEEN (rt0.c1) AND ('O0')))AND(rt0.c2)))OR(((((0.5322712376993719)OR(t1.c41)))OR(rt1.c1)))))AND(((rt1.c1)=(rt1.c3)))))OR(0.9639884026285822)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((SQLITE_VERSION())OR(((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c3)))))OR((t1.c41 IN (rt1.c0)))))OR((((rt0.c2))=((rt1.c1))))))AND(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((rt1.c3)) NOT BETWEEN ((MIN(rt0.c1, rt1.c1, rt1.c4, rt0.c1))) AND ((((rt1.c2)+(rt1.c2))))) CROSS JOIN t1 ON 0.17974678991740245 ORDER BY ((((((((((rt1.c3) NOT BETWEEN (rt0.c1) AND ('O0')))AND(rt0.c2)))OR(((((0.5322712376993719)OR(t1.c41)))OR(rt1.c1)))))AND(((rt1.c1)==(rt1.c3)))))OR(0.9639884026285822)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON (((rt1.c3)) NOT BETWEEN ((MIN(rt0.c1, rt1.c1, rt1.c4, rt0.c1))) AND ((((rt1.c2)+(rt1.c2))))) CROSS JOIN t1 ON 0.17974678991740245 WHERE (((((((((SQLITE_VERSION())OR(((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c3)))))OR((t1.c41 IN (rt1.c0)))))OR((((rt0.c2))=((rt1.c1))))))AND(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0))))) ORDER BY ((((((((((rt1.c3) NOT BETWEEN (rt0.c1) AND ('O0')))AND(rt0.c2)))OR(((((0.5322712376993719)OR(t1.c41)))OR(rt1.c1)))))AND(((rt1.c1)=(rt1.c3)))))OR(0.9639884026285822)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, t1 WHERE (CASE (+ (rt1.c3))  WHEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c3))) THEN ((rt1.c4) NOT NULL) ELSE ((rt1.c3)<=(rt1.c1)) END) ORDER BY 0.18566146624855584  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (rt1.c3))  WHEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c3))) THEN ((rt1.c4) NOT NULL) ELSE ((rt1.c3)<=(rt1.c1)) END) IS TRUE)  as count FROM rt1, t1 ORDER BY 0.18566146624855584  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1 WHERE (CASE (+ (rt1.c3))  WHEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c3))) THEN ((rt1.c4) NOT NULL) ELSE ((rt1.c3)<=(rt1.c1)) END) ORDER BY 0.18566146624855584  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (rt1.c3))  WHEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c3))) THEN ((rt1.c4) NOT NULL) ELSE ((rt1.c3)<=(rt1.c1)) END) IS TRUE)  as count FROM rt1, t1 ORDER BY 0.18566146624855584  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1 WHERE (CASE (+ (rt1.c3))  WHEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c3))) THEN ((rt1.c4) NOT NULL) ELSE ((rt1.c3)<=(rt1.c1)) END) ORDER BY 0.18566146624855584  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (LIKE(((rt1.c2)LIKE(rt1.c1)), CAST(0.31150020393975897 AS TEXT), '1')) ORDER BY CASE WHEN COALESCE(rt1.c1, rt1.c1) THEN rt1.c0 WHEN CASE WHEN rt1.c2 THEN rt1.c2 END THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) WHEN LIKELIHOOD(rt1.c4, 0.45131932877836956) THEN (+ (rt1.c1)) ELSE ((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((rt1.c2)LIKE(rt1.c1)), CAST(0.31150020393975897 AS TEXT), '1')) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN COALESCE(rt1.c1, rt1.c1) THEN rt1.c0 WHEN CASE WHEN rt1.c2 THEN rt1.c2 END THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) WHEN LIKELIHOOD(rt1.c4, 0.45131932877836956) THEN (+ (rt1.c1)) ELSE ((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)) END DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (LIKE(((rt1.c2)LIKE(rt1.c1)), CAST(0.31150020393975897 AS TEXT), '1')) ORDER BY CASE WHEN COALESCE(rt1.c1, rt1.c1) THEN rt1.c0 WHEN CASE WHEN rt1.c2 THEN rt1.c2 END THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) WHEN LIKELIHOOD(rt1.c4, 0.45131932877836956) THEN (+ (rt1.c1)) ELSE ((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((rt1.c2)LIKE(rt1.c1)), CAST(0.31150020393975897 AS TEXT), '1')) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN COALESCE(rt1.c1, rt1.c1) THEN rt1.c0 WHEN CASE WHEN rt1.c2 THEN rt1.c2 END THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) WHEN LIKELIHOOD(rt1.c4, 0.45131932877836956) THEN (+ (rt1.c1)) ELSE ((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)) END DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (LIKE(((rt1.c2)LIKE(rt1.c1)), CAST(0.31150020393975897 AS TEXT), '1')) ORDER BY CASE WHEN COALESCE(rt1.c1, rt1.c1) THEN rt1.c0 WHEN CASE WHEN rt1.c2 THEN rt1.c2 END THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) WHEN LIKELIHOOD(rt1.c4, 0.45131932877836956) THEN (+ (rt1.c1)) ELSE ((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)) END DESC;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41)) AS BLOB)) ORDER BY 0.6587536038369128  NULLS LAST, (((t1.c41, t1.c41, x'')) BETWEEN (((+ (t1.c41)), ((t1.c41) NOTNULL), t1.c41 COLLATE RTRIM)) AND ((t1.c41, 0.4796046051153352, ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41)) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY 0.6587536038369128  NULLS LAST, (((t1.c41, t1.c41, x'')) BETWEEN (((+ (t1.c41)), ((t1.c41) NOTNULL), t1.c41 COLLATE RTRIM)) AND ((t1.c41, 0.4796046051153352, ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))))) ASC);
SELECT ALL * FROM t1 WHERE (CAST(((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41)) AS BLOB)) ORDER BY 0.6587536038369128  NULLS LAST, (((t1.c41, t1.c41, x'')) BETWEEN (((+ (t1.c41)), ((t1.c41) NOTNULL), t1.c41 COLLATE RTRIM)) AND ((t1.c41, 0.4796046051153352, ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41)) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY 0.6587536038369128  NULLS LAST, (((t1.c41, t1.c41, x'')) BETWEEN (((+ (t1.c41)), ((t1.c41) NOTNULL), t1.c41 COLLATE RTRIM)) AND ((t1.c41, 0.4796046051153352, ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))))) ASC);
SELECT ALL * FROM t1 WHERE (CAST(((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41)) AS BLOB)) ORDER BY 0.6587536038369128  NULLS LAST, (((t1.c41, t1.c41, x'')) BETWEEN (((+ (t1.c41)), ((t1.c41) NOTNULL), t1.c41 COLLATE RTRIM)) AND ((t1.c41, 0.4796046051153352, ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))))) ASC;
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((rt0.c1 IN ()), rt0.c2, ((rt1.c3) NOT BETWEEN (x'') AND (rt1.c3))))==((rt0.c1, CASE rt1.c2  WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c1 END, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 IN ()), rt0.c2, ((rt1.c3) NOT BETWEEN (x'') AND (rt1.c3))))=((rt0.c1, CASE rt1.c2  WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c1 END, rt0.c2)))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((rt0.c1 IN ()), rt0.c2, ((rt1.c3) NOT BETWEEN (x'') AND (rt1.c3))))==((rt0.c1, CASE rt1.c2  WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c1 END, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 IN ()), rt0.c2, ((rt1.c3) NOT BETWEEN (x'') AND (rt1.c3))))=((rt0.c1, CASE rt1.c2  WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c1 END, rt0.c2)))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((rt0.c1 IN ()), rt0.c2, ((rt1.c3) NOT BETWEEN (x'') AND (rt1.c3))))==((rt0.c1, CASE rt1.c2  WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c1 END, rt0.c2))));
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (rt1.c3);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (((((t1.c41)<=(t1.c41)))|(((rt1.c0)+(rt1.c2))))) ORDER BY 0.19920714212299595, TRIM(DISTINCT (rt1.c2 IN ()), ((rt1.c1) IS TRUE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c41)<=(t1.c41)))|(((rt1.c0)+(rt1.c2))))) IS TRUE)  as count FROM rt1, t1 ORDER BY 0.19920714212299595, TRIM(DISTINCT (rt1.c2 IN ()), ((rt1.c1) IS TRUE)) ASC);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (((((t1.c41)<=(t1.c41)))|(((rt1.c0)+(rt1.c2))))) ORDER BY 0.19920714212299595, TRIM(DISTINCT (rt1.c2 IN ()), ((rt1.c1) IS TRUE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c41)<=(t1.c41)))|(((rt1.c0)+(rt1.c2))))) IS TRUE)  as count FROM rt1, t1 ORDER BY 0.19920714212299595, TRIM(DISTINCT (rt1.c2 IN ()), ((rt1.c1) IS TRUE)) ASC);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (((((t1.c41)<=(t1.c41)))|(((rt1.c0)+(rt1.c2))))) ORDER BY 0.19920714212299595, TRIM(DISTINCT (rt1.c2 IN ()), ((rt1.c1) IS TRUE)) ASC;
SELECT * FROM rt1 WHERE (((UPPER('aT%5l')) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER('aT%5l')) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((UPPER('aT%5l')) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER('aT%5l')) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((UPPER('aT%5l')) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1)))) AND ((CAST(rt0.c1 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1)))) AND ((CAST(rt0.c1 AS BLOB))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1)))) AND ((CAST(rt0.c1 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1)))) AND ((CAST(rt0.c1 AS BLOB))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1)))) AND ((CAST(rt0.c1 AS BLOB)))));
SELECT COUNT(*) FROM t1 INNER JOIN rt1 ON ((((rt0.c2)>>(rt1.c4))) NOT BETWEEN (rt1.c1) AND ((+ (rt0.c1)))) LEFT OUTER JOIN rt0 ON (((((((rt0.c0)AND(rt0.c0)))OR(rt1.c0))))>=((LIKELY(t1.c41)))) WHERE (CAST(((rt1.c3)<<(t1.c41)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c3)<<(t1.c41)) AS BLOB)) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((((rt0.c2)>>(rt1.c4))) NOT BETWEEN (rt1.c1) AND ((+ (rt0.c1)))) LEFT OUTER JOIN rt0 ON (((((((rt0.c0)AND(rt0.c0)))OR(rt1.c0))))>=((LIKELY(t1.c41)))));
SELECT COUNT(*) FROM t1 INNER JOIN rt1 ON ((((rt0.c2)>>(rt1.c4))) NOT BETWEEN (rt1.c1) AND ((+ (rt0.c1)))) LEFT OUTER JOIN rt0 ON (((((((rt0.c0)AND(rt0.c0)))OR(rt1.c0))))>=((LIKELY(t1.c41)))) WHERE (CAST(((rt1.c3)<<(t1.c41)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c3)<<(t1.c41)) AS BLOB)) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((((rt0.c2)>>(rt1.c4))) NOT BETWEEN (rt1.c1) AND ((+ (rt0.c1)))) LEFT OUTER JOIN rt0 ON (((((((rt0.c0)AND(rt0.c0)))OR(rt1.c0))))>=((LIKELY(t1.c41)))));
SELECT COUNT(*) FROM t1 INNER JOIN rt1 ON ((((rt0.c2)>>(rt1.c4))) NOT BETWEEN (rt1.c1) AND ((+ (rt0.c1)))) LEFT OUTER JOIN rt0 ON (((((((rt0.c0)AND(rt0.c0)))OR(rt1.c0))))>=((LIKELY(t1.c41)))) WHERE (CAST(((rt1.c3)<<(t1.c41)) AS BLOB));
SELECT ALL COUNT(*) FROM rt1 WHERE (((NULLIF(DISTINCT rt1.c0, rt1.c4)) IS TRUE)) ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND ('%N')) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT rt1.c0, rt1.c4)) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND ('%N')) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((NULLIF(DISTINCT rt1.c0, rt1.c4)) IS TRUE)) ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND ('%N')) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT rt1.c0, rt1.c4)) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND ('%N')) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((NULLIF(DISTINCT rt1.c0, rt1.c4)) IS TRUE)) ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND ('%N')) AS INTEGER)  NULLS LAST;
SELECT ALL * FROM rt1, rt0, t1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE BINARY) ORDER BY CAST(SQLITE_COMPILEOPTION_GET(rt0.c2) AS BLOB) DESC, ((((rt1.c3)OR(rt1.c0))) NOT BETWEEN (RTRIM(t1.c41)) AND (((rt1.c4)<<(rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY CAST(SQLITE_COMPILEOPTION_GET(rt0.c2) AS BLOB) DESC, ((((rt1.c3)OR(rt1.c0))) NOT BETWEEN (RTRIM(t1.c41)) AND (((rt1.c4)<<(rt1.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE BINARY) ORDER BY CAST(SQLITE_COMPILEOPTION_GET(rt0.c2) AS BLOB) DESC, ((((rt1.c3)OR(rt1.c0))) NOT BETWEEN (RTRIM(t1.c41)) AND (((rt1.c4)<<(rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY CAST(SQLITE_COMPILEOPTION_GET(rt0.c2) AS BLOB) DESC, ((((rt1.c3)OR(rt1.c0))) NOT BETWEEN (RTRIM(t1.c41)) AND (((rt1.c4)<<(rt1.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE BINARY) ORDER BY CAST(SQLITE_COMPILEOPTION_GET(rt0.c2) AS BLOB) DESC, ((((rt1.c3)OR(rt1.c0))) NOT BETWEEN (RTRIM(t1.c41)) AND (((rt1.c4)<<(rt1.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE ((('-1166240653') ISNULL));
SELECT SUM(count) FROM (SELECT (((('-1166240653') ISNULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((('-1166240653') ISNULL));
SELECT SUM(count) FROM (SELECT (((('-1166240653') ISNULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((('-1166240653') ISNULL));
SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((NOT (rt0.c0)))-(((0x4961acdc) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))-(((0X4961acdc) ISNULL)))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((NOT (rt0.c0)))-(((0x4961acdc) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))-(((0X4961acdc) ISNULL)))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((NOT (rt0.c0)))-(((0x4961acdc) ISNULL))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN t1 ON CASE WHEN 0.3025228767336725 THEN rt0.c1 ELSE rt1.c1 END COLLATE RTRIM FULL OUTER JOIN rt0 ON LIKE(((rt1.c3) NOT BETWEEN (t1.c41) AND (rt0.c1)), ((((rt1.c3)OR(rt0.c0)))AND(rt1.c0)), '[') WHERE ((NOT (CAST('-1257338959' AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST('-1257338959' AS TEXT)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t1 ON CASE WHEN 0.3025228767336725 THEN rt0.c1 ELSE rt1.c1 END COLLATE RTRIM FULL OUTER JOIN rt0 ON LIKE(((rt1.c3) NOT BETWEEN (t1.c41) AND (rt0.c1)), ((((rt1.c3)OR(rt0.c0)))AND(rt1.c0)), '['));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN t1 ON CASE WHEN 0.3025228767336725 THEN rt0.c1 ELSE rt1.c1 END COLLATE RTRIM FULL OUTER JOIN rt0 ON LIKE(((rt1.c3) NOT BETWEEN (t1.c41) AND (rt0.c1)), ((((rt1.c3)OR(rt0.c0)))AND(rt1.c0)), '[') WHERE ((NOT (CAST('-1257338959' AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST('-1257338959' AS TEXT)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t1 ON CASE WHEN 0.3025228767336725 THEN rt0.c1 ELSE rt1.c1 END COLLATE RTRIM FULL OUTER JOIN rt0 ON LIKE(((rt1.c3) NOT BETWEEN (t1.c41) AND (rt0.c1)), ((((rt1.c3)OR(rt0.c0)))AND(rt1.c0)), '['));
SELECT * FROM rt1 WHERE (((UNLIKELY(DISTINCT rt1.c2))-(rt1.c0))) ORDER BY ((CAST(rt1.c1 AS REAL)) NOTNULL) ASC, CASE CAST(rt1.c2 AS BLOB)  WHEN CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END THEN CAST(rt1.c1 AS TEXT) ELSE ((rt1.c0)/(rt1.c3)) END DESC, ((rt1.c3) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT rt1.c2))-(rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c1 AS REAL)) NOTNULL) ASC, CASE CAST(rt1.c2 AS BLOB)  WHEN CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END THEN CAST(rt1.c1 AS TEXT) ELSE ((rt1.c0)/(rt1.c3)) END DESC, ((rt1.c3) IS FALSE) ASC);
SELECT * FROM rt1 WHERE (((UNLIKELY(DISTINCT rt1.c2))-(rt1.c0))) ORDER BY ((CAST(rt1.c1 AS REAL)) NOTNULL) ASC, CASE CAST(rt1.c2 AS BLOB)  WHEN CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END THEN CAST(rt1.c1 AS TEXT) ELSE ((rt1.c0)/(rt1.c3)) END DESC, ((rt1.c3) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT rt1.c2))-(rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c1 AS REAL)) NOTNULL) ASC, CASE CAST(rt1.c2 AS BLOB)  WHEN CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END THEN CAST(rt1.c1 AS TEXT) ELSE ((rt1.c0)/(rt1.c3)) END DESC, ((rt1.c3) IS FALSE) ASC);
SELECT * FROM rt1 WHERE (((UNLIKELY(DISTINCT rt1.c2))-(rt1.c0))) ORDER BY ((CAST(rt1.c1 AS REAL)) NOTNULL) ASC, CASE CAST(rt1.c2 AS BLOB)  WHEN CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END THEN CAST(rt1.c1 AS TEXT) ELSE ((rt1.c0)/(rt1.c3)) END DESC, ((rt1.c3) IS FALSE) ASC;
SELECT ALL * FROM rt1, t1 WHERE ((+ ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE ((+ ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE ((+ ((rt1.c2 IN ()))));
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CAST((0.5900095941376235 IN ()) AS TEXT)) ORDER BY CAST(INSTR(rt0.c0, rt0.c0) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((0.5900095941376235 IN ()) AS TEXT)) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CAST(INSTR(rt0.c0, rt0.c0) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CAST((0.5900095941376235 IN ()) AS TEXT)) ORDER BY CAST(INSTR(rt0.c0, rt0.c0) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((0.5900095941376235 IN ()) AS TEXT)) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CAST(INSTR(rt0.c0, rt0.c0) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CAST((0.5900095941376235 IN ()) AS TEXT)) ORDER BY CAST(INSTR(rt0.c0, rt0.c0) AS REAL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c0))<((rt1.c1)))) ISNULL)) ORDER BY rt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))<((rt1.c1)))) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c0))<((rt1.c1)))) ISNULL)) ORDER BY rt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))<((rt1.c1)))) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c0))<((rt1.c1)))) ISNULL)) ORDER BY rt1.c0  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((CHANGES())GLOB(((t1.c41)IS NOT(t1.c41))))) ORDER BY t1.c41  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())GLOB(((t1.c41)IS NOT(t1.c41))))) IS TRUE)  as count FROM t1 ORDER BY t1.c41  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((CHANGES())GLOB(((t1.c41)IS NOT(t1.c41))))) ORDER BY t1.c41  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())GLOB(((t1.c41)IS NOT(t1.c41))))) IS TRUE)  as count FROM t1 ORDER BY t1.c41  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((CHANGES())GLOB(((t1.c41)IS NOT(t1.c41))))) ORDER BY t1.c41  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2)))||(rt0.c2))) ORDER BY ((((rt0.c2 COLLATE NOCASE)AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE '-528771949' END)))OR((+ (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))||(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 COLLATE NOCASE)AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE '-528771949' END)))OR((+ (rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2)))||(rt0.c2))) ORDER BY ((((rt0.c2 COLLATE NOCASE)AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE '-528771949' END)))OR((+ (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))||(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 COLLATE NOCASE)AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE '-528771949' END)))OR((+ (rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2)))||(rt0.c2))) ORDER BY ((((rt0.c2 COLLATE NOCASE)AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE '-528771949' END)))OR((+ (rt0.c0))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (TRIM(DISTINCT (t1.c41 IN ()))) ORDER BY x'' COLLATE BINARY COLLATE RTRIM DESC, LTRIM(json_patch(t1.c41, t1.c41), t1.c41 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (t1.c41 IN ()))) IS TRUE)  as count FROM t1 ORDER BY x'' COLLATE BINARY COLLATE RTRIM DESC, LTRIM(json_patch(t1.c41, t1.c41), t1.c41 COLLATE NOCASE));
SELECT ALL * FROM t1 WHERE (TRIM(DISTINCT (t1.c41 IN ()))) ORDER BY x'' COLLATE BINARY COLLATE RTRIM DESC, LTRIM(json_patch(t1.c41, t1.c41), t1.c41 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (t1.c41 IN ()))) IS TRUE)  as count FROM t1 ORDER BY x'' COLLATE BINARY COLLATE RTRIM DESC, LTRIM(json_patch(t1.c41, t1.c41), t1.c41 COLLATE NOCASE));
SELECT ALL * FROM rt0, rt1, t1 WHERE (1.81538507E9);
SELECT SUM(count) FROM (SELECT ALL ((1.81538507E9) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE (1.81538507E9);
SELECT SUM(count) FROM (SELECT ALL ((1.81538507E9) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE (1.81538507E9);
SELECT ALL COUNT(*) FROM rt1 WHERE (UPPER(((((rt1.c1)OR(rt1.c3)))AND(rt1.c3)))) ORDER BY ((json_array(rt1.c0, rt1.c0))OR(CAST(rt1.c1 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(((((rt1.c1)OR(rt1.c3)))AND(rt1.c3)))) IS TRUE)  as count FROM rt1 ORDER BY ((json_array(rt1.c0, rt1.c0))OR(CAST(rt1.c1 AS REAL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (UPPER(((((rt1.c1)OR(rt1.c3)))AND(rt1.c3)))) ORDER BY ((json_array(rt1.c0, rt1.c0))OR(CAST(rt1.c1 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(((((rt1.c1)OR(rt1.c3)))AND(rt1.c3)))) IS TRUE)  as count FROM rt1 ORDER BY ((json_array(rt1.c0, rt1.c0))OR(CAST(rt1.c1 AS REAL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (UPPER(((((rt1.c1)OR(rt1.c3)))AND(rt1.c3)))) ORDER BY ((json_array(rt1.c0, rt1.c0))OR(CAST(rt1.c1 AS REAL))) ASC  NULLS LAST;
SELECT * FROM rt1, t1 WHERE (((((((((((((((rt1.c0) BETWEEN (t1.c41) AND (rt1.c0)))AND((rt1.c3 IN ()))))AND(((rt1.c1)|(rt1.c3)))))AND(((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)))))OR(('1379378430' IN ()))))AND(((rt1.c4) BETWEEN (x'') AND (332329302)))))AND(((t1.c41)*(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c0) BETWEEN (t1.c41) AND (rt1.c0)))AND((rt1.c3 IN ()))))AND(((rt1.c1)|(rt1.c3)))))AND(((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)))))OR(('1379378430' IN ()))))AND(((rt1.c4) BETWEEN (x'') AND (332329302)))))AND(((t1.c41)*(rt1.c2))))) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE (((((((((((((((rt1.c0) BETWEEN (t1.c41) AND (rt1.c0)))AND((rt1.c3 IN ()))))AND(((rt1.c1)|(rt1.c3)))))AND(((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)))))OR(('1379378430' IN ()))))AND(((rt1.c4) BETWEEN (x'') AND (332329302)))))AND(((t1.c41)*(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c0) BETWEEN (t1.c41) AND (rt1.c0)))AND((rt1.c3 IN ()))))AND(((rt1.c1)|(rt1.c3)))))AND(((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)))))OR(('1379378430' IN ()))))AND(((rt1.c4) BETWEEN (x'') AND (332329302)))))AND(((t1.c41)*(rt1.c2))))) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE (((((((((((((((rt1.c0) BETWEEN (t1.c41) AND (rt1.c0)))AND((rt1.c3 IN ()))))AND(((rt1.c1)|(rt1.c3)))))AND(((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)))))OR(('1379378430' IN ()))))AND(((rt1.c4) BETWEEN (x'') AND (332329302)))))AND(((t1.c41)*(rt1.c2)))));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOTNULL))&(((1.522417007E9)%(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOTNULL))&(((1.522417007E9)%(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOTNULL))&(((1.522417007E9)%(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOTNULL))&(((1.522417007E9)%(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOTNULL))&(((1.522417007E9)%(rt1.c2)))));
SELECT ALL * FROM rt0, t1 FULL OUTER JOIN rt1 ON (((((((((((0.23246911600494058)AND(rt0.c2)))AND(rt0.c0)))OR(rt1.c3)))OR(rt0.c2))))=(((rt1.c3 IN (rt1.c4))))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN rt1 ON (((((((((((0.23246911600494058)AND(rt0.c2)))AND(rt0.c0)))OR(rt1.c3)))OR(rt0.c2))))=(((rt1.c3 IN (rt1.c4))))));
SELECT ALL * FROM rt0, t1 FULL OUTER JOIN rt1 ON (((((((((((0.23246911600494058)AND(rt0.c2)))AND(rt0.c0)))OR(rt1.c3)))OR(rt0.c2))))=(((rt1.c3 IN (rt1.c4))))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN rt1 ON (((((((((((0.23246911600494058)AND(rt0.c2)))AND(rt0.c0)))OR(rt1.c3)))OR(rt0.c2))))=(((rt1.c3 IN (rt1.c4))))));
SELECT ALL * FROM rt0, t1 FULL OUTER JOIN rt1 ON (((((((((((0.23246911600494058)AND(rt0.c2)))AND(rt0.c0)))OR(rt1.c3)))OR(rt0.c2))))=(((rt1.c3 IN (rt1.c4))))) WHERE (NULL);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON ((x'') IS TRUE) FULL OUTER JOIN rt1 ON ((((NULL)AND((rt0.c0 IN (NULL)))))OR((rt1.c1 IN ()))) WHERE (((NULL) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c2 THEN 0X6c58f076 ELSE t1.c41 END) AND (rt1.c0))) ORDER BY ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c2 THEN 0x6c58f076 ELSE t1.c41 END) AND (rt1.c0))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ((x'') IS TRUE) FULL OUTER JOIN rt1 ON ((((NULL)AND((rt0.c0 IN (NULL)))))OR((rt1.c1 IN ()))) ORDER BY ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON ((x'') IS TRUE) FULL OUTER JOIN rt1 ON ((((NULL)AND((rt0.c0 IN (NULL)))))OR((rt1.c1 IN ()))) WHERE (((NULL) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c2 THEN 0X6c58f076 ELSE t1.c41 END) AND (rt1.c0))) ORDER BY ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c2 THEN 0x6c58f076 ELSE t1.c41 END) AND (rt1.c0))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ((x'') IS TRUE) FULL OUTER JOIN rt1 ON ((((NULL)AND((rt0.c0 IN (NULL)))))OR((rt1.c1 IN ()))) ORDER BY ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON ((x'') IS TRUE) FULL OUTER JOIN rt1 ON ((((NULL)AND((rt0.c0 IN (NULL)))))OR((rt1.c1 IN ()))) WHERE (((NULL) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c2 THEN 0X6c58f076 ELSE t1.c41 END) AND (rt1.c0))) ORDER BY ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE NOCASE;
SELECT * FROM t1, rt0, rt1 WHERE (CAST((NOT (rt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c0)) AS REAL)) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE (CAST((NOT (rt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c0)) AS REAL)) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE (CAST((NOT (rt1.c0)) AS REAL));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY ((((CAST(rt1.c3 AS REAL))OR(CASE WHEN rt1.c2 THEN rt1.c3 END)))AND((((rt1.c4))==((rt1.c2))))), (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)) IN (((rt1.c2) NOT BETWEEN ('-1433200024') AND (rt1.c3)), NULL)) ASC  NULLS LAST, rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1 ORDER BY ((((CAST(rt1.c3 AS REAL))OR(CASE WHEN rt1.c2 THEN rt1.c3 END)))AND((((rt1.c4))=((rt1.c2))))), (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)) IN (((rt1.c2) NOT BETWEEN ('-1433200024') AND (rt1.c3)), NULL)) ASC  NULLS LAST, rt1.c2 ASC);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY ((((CAST(rt1.c3 AS REAL))OR(CASE WHEN rt1.c2 THEN rt1.c3 END)))AND((((rt1.c4))==((rt1.c2))))), (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)) IN (((rt1.c2) NOT BETWEEN ('-1433200024') AND (rt1.c3)), NULL)) ASC  NULLS LAST, rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1 ORDER BY ((((CAST(rt1.c3 AS REAL))OR(CASE WHEN rt1.c2 THEN rt1.c3 END)))AND((((rt1.c4))=((rt1.c2))))), (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)) IN (((rt1.c2) NOT BETWEEN ('-1433200024') AND (rt1.c3)), NULL)) ASC  NULLS LAST, rt1.c2 ASC);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY ((((CAST(rt1.c3 AS REAL))OR(CASE WHEN rt1.c2 THEN rt1.c3 END)))AND((((rt1.c4))==((rt1.c2))))), (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)) IN (((rt1.c2) NOT BETWEEN ('-1433200024') AND (rt1.c3)), NULL)) ASC  NULLS LAST, rt1.c2 ASC;
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (CAST(((t1.c41)<(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c41)<(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (CAST(((t1.c41)<(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c41)<(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (CAST(((t1.c41)<(rt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON ((((t1.c41)<<(rt0.c2)))<>(CAST(NULL AS TEXT))) WHERE (CASE IFNULL(rt0.c1, rt0.c1)  WHEN ((t1.c41) IS TRUE) THEN (t1.c41 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE IFNULL(rt0.c1, rt0.c1)  WHEN ((t1.c41) IS TRUE) THEN (t1.c41 IN ()) END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON ((((t1.c41)<<(rt0.c2)))<>(CAST(NULL AS TEXT))));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON ((((t1.c41)<<(rt0.c2)))<>(CAST(NULL AS TEXT))) WHERE (CASE IFNULL(rt0.c1, rt0.c1)  WHEN ((t1.c41) IS TRUE) THEN (t1.c41 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE IFNULL(rt0.c1, rt0.c1)  WHEN ((t1.c41) IS TRUE) THEN (t1.c41 IN ()) END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON ((((t1.c41)<<(rt0.c2)))<>(CAST(NULL AS TEXT))));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON ((((t1.c41)<<(rt0.c2)))<>(CAST(NULL AS TEXT))) WHERE (CASE IFNULL(rt0.c1, rt0.c1)  WHEN ((t1.c41) IS TRUE) THEN (t1.c41 IN ()) END);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (CAST(((rt1.c0)LIKE(rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)LIKE(rt1.c2)) AS TEXT)) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (CAST(((rt1.c0)LIKE(rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)LIKE(rt1.c2)) AS TEXT)) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (CAST(((rt1.c0)LIKE(rt1.c2)) AS TEXT));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(rt0.c2)))!=(CAST('gj' AS NUMERIC))) WHERE (CHAR(COALESCE(DISTINCT rt0.c0, x'')));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(COALESCE(DISTINCT rt0.c0, x''))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(rt0.c2)))<>(CAST('gj' AS NUMERIC))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(rt0.c2)))!=(CAST('gj' AS NUMERIC))) WHERE (CHAR(COALESCE(DISTINCT rt0.c0, x'')));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(COALESCE(DISTINCT rt0.c0, x''))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(rt0.c2)))<>(CAST('gj' AS NUMERIC))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(rt0.c2)))!=(CAST('gj' AS NUMERIC))) WHERE (CHAR(COALESCE(DISTINCT rt0.c0, x'')));
SELECT ALL * FROM t1 WHERE (t1.c41);
SELECT SUM(count) FROM (SELECT ((t1.c41) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c41);
SELECT SUM(count) FROM (SELECT ((t1.c41) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c41);
SELECT * FROM rt1 NOT INDEXED WHERE (((((((((((rt1.c2)OR(rt1.c2)))OR(NULL)))OR(rt1.c3)))AND(x''))) IS TRUE)) ORDER BY json_array_length(TIME(rt1.c1, rt1.c1, rt1.c3)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2)OR(rt1.c2)))OR(NULL)))OR(rt1.c3)))AND(x''))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY json_array_length(TIME(rt1.c1, rt1.c1, rt1.c3)) ASC);
SELECT * FROM rt1 NOT INDEXED WHERE (((((((((((rt1.c2)OR(rt1.c2)))OR(NULL)))OR(rt1.c3)))AND(x''))) IS TRUE)) ORDER BY json_array_length(TIME(rt1.c1, rt1.c1, rt1.c3)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2)OR(rt1.c2)))OR(NULL)))OR(rt1.c3)))AND(x''))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY json_array_length(TIME(rt1.c1, rt1.c1, rt1.c3)) ASC);
SELECT * FROM rt1 NOT INDEXED WHERE (((((((((((rt1.c2)OR(rt1.c2)))OR(NULL)))OR(rt1.c3)))AND(x''))) IS TRUE)) ORDER BY json_array_length(TIME(rt1.c1, rt1.c1, rt1.c3)) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((((((rt1.c1))<((rt1.c4))))AND(NULLIF('', '-1926574536'))))OR(((rt1.c2) IS FALSE))))AND(((rt1.c2)OR(rt1.c3)))))OR(((rt1.c1)LIKE(rt1.c0))))) ORDER BY CAST(CAST(rt1.c3 AS BLOB) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c1))<((rt1.c4))))AND(NULLIF('', '-1926574536'))))OR(((rt1.c2) IS FALSE))))AND(((rt1.c2)OR(rt1.c3)))))OR(((rt1.c1)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(CAST(rt1.c3 AS BLOB) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((((((rt1.c1))<((rt1.c4))))AND(NULLIF('', '-1926574536'))))OR(((rt1.c2) IS FALSE))))AND(((rt1.c2)OR(rt1.c3)))))OR(((rt1.c1)LIKE(rt1.c0))))) ORDER BY CAST(CAST(rt1.c3 AS BLOB) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c1))<((rt1.c4))))AND(NULLIF('', '-1926574536'))))OR(((rt1.c2) IS FALSE))))AND(((rt1.c2)OR(rt1.c3)))))OR(((rt1.c1)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(CAST(rt1.c3 AS BLOB) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((((((rt1.c1))<((rt1.c4))))AND(NULLIF('', '-1926574536'))))OR(((rt1.c2) IS FALSE))))AND(((rt1.c2)OR(rt1.c3)))))OR(((rt1.c1)LIKE(rt1.c0))))) ORDER BY CAST(CAST(rt1.c3 AS BLOB) AS REAL) ASC;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN t1 ON CAST(rt1.c3 AS REAL) COLLATE NOCASE WHERE ((~ (SQLITE_VERSION()))) ORDER BY LENGTH(((rt1.c2)-(rt1.c2))), (+ (rt1.c3)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (SQLITE_VERSION()))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t1 ON CAST(rt1.c3 AS REAL) COLLATE NOCASE ORDER BY LENGTH(((rt1.c2)-(rt1.c2))), (+ (rt1.c3)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN t1 ON CAST(rt1.c3 AS REAL) COLLATE NOCASE WHERE ((~ (SQLITE_VERSION()))) ORDER BY LENGTH(((rt1.c2)-(rt1.c2))), (+ (rt1.c3)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (SQLITE_VERSION()))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t1 ON CAST(rt1.c3 AS REAL) COLLATE NOCASE ORDER BY LENGTH(((rt1.c2)-(rt1.c2))), (+ (rt1.c3)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN t1 ON CAST(rt1.c3 AS REAL) COLLATE NOCASE WHERE ((~ (SQLITE_VERSION()))) ORDER BY LENGTH(((rt1.c2)-(rt1.c2))), (+ (rt1.c3)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((- (((rt1.c4)IS NOT(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c4)IS NOT(rt1.c2))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((- (((rt1.c4)IS NOT(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c4)IS NOT(rt1.c2))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((- (((rt1.c4)IS NOT(rt1.c2)))));
SELECT ALL * FROM rt1 WHERE ((- ((rt1.c4 IN (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((- ((rt1.c4 IN (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- ((rt1.c4 IN (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((- ((rt1.c4 IN (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- ((rt1.c4 IN (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((((((rt0.c1)AND(HEX('-1166240653'))))AND(ABS(DISTINCT 0.2446358073564623))))AND(((((rt0.c2)OR(0.912073422033952)))OR(rt0.c1)))))OR(((rt0.c0)<(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c1)AND(HEX('-1166240653'))))AND(ABS(DISTINCT 0.2446358073564623))))AND(((((rt0.c2)OR(0.912073422033952)))OR(rt0.c1)))))OR(((rt0.c0)<(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((((((rt0.c1)AND(HEX('-1166240653'))))AND(ABS(DISTINCT 0.2446358073564623))))AND(((((rt0.c2)OR(0.912073422033952)))OR(rt0.c1)))))OR(((rt0.c0)<(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c1)AND(HEX('-1166240653'))))AND(ABS(DISTINCT 0.2446358073564623))))AND(((((rt0.c2)OR(0.912073422033952)))OR(rt0.c1)))))OR(((rt0.c0)<(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((((((rt0.c1)AND(HEX('-1166240653'))))AND(ABS(DISTINCT 0.2446358073564623))))AND(((((rt0.c2)OR(0.912073422033952)))OR(rt0.c1)))))OR(((rt0.c0)<(rt0.c2)))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (TRIM(CAST(rt0.c0 AS BLOB), DATETIME(rt0.c2, rt0.c2, rt0.c0))) ORDER BY (((('Nh_0໛8	w')OR(rt0.c1))) NOT BETWEEN ((+ (rt0.c0))) AND ((- (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(rt0.c0 AS BLOB), DATETIME(rt0.c2, rt0.c2, rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY (((('Nh_0໛8	w')OR(rt0.c1))) NOT BETWEEN ((+ (rt0.c0))) AND ((- (rt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (TRIM(CAST(rt0.c0 AS BLOB), DATETIME(rt0.c2, rt0.c2, rt0.c0))) ORDER BY (((('Nh_0໛8	w')OR(rt0.c1))) NOT BETWEEN ((+ (rt0.c0))) AND ((- (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(rt0.c0 AS BLOB), DATETIME(rt0.c2, rt0.c2, rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY (((('Nh_0໛8	w')OR(rt0.c1))) NOT BETWEEN ((+ (rt0.c0))) AND ((- (rt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (TRIM(CAST(rt0.c0 AS BLOB), DATETIME(rt0.c2, rt0.c2, rt0.c0))) ORDER BY (((('Nh_0໛8	w')OR(rt0.c1))) NOT BETWEEN ((+ (rt0.c0))) AND ((- (rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t1 ON CAST(CAST(t1.c41 AS BLOB) AS BLOB) RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))))AND(CAST(rt1.c4 AS BLOB))) WHERE (((NULL)/(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)/(rt0.c1))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t1 ON CAST(CAST(t1.c41 AS BLOB) AS BLOB) RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))))AND(CAST(rt1.c4 AS BLOB))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t1 ON CAST(CAST(t1.c41 AS BLOB) AS BLOB) RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))))AND(CAST(rt1.c4 AS BLOB))) WHERE (((NULL)/(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)/(rt0.c1))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t1 ON CAST(CAST(t1.c41 AS BLOB) AS BLOB) RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))))AND(CAST(rt1.c4 AS BLOB))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t1 ON CAST(CAST(t1.c41 AS BLOB) AS BLOB) RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))))AND(CAST(rt1.c4 AS BLOB))) WHERE (((NULL)/(rt0.c1)));
SELECT COUNT(*) FROM rt0, t1 INNER JOIN rt1 ON (NOT (UNLIKELY(DISTINCT rt0.c1))) WHERE (((COALESCE(DISTINCT '-1329402759', rt0.c2))LIKE(rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT '-1329402759', rt0.c2))LIKE(rt1.c2))) IS TRUE)  as count FROM rt0, t1 INNER JOIN rt1 ON (NOT (UNLIKELY(DISTINCT rt0.c1))));
SELECT COUNT(*) FROM rt0, t1 INNER JOIN rt1 ON (NOT (UNLIKELY(DISTINCT rt0.c1))) WHERE (((COALESCE(DISTINCT '-1329402759', rt0.c2))LIKE(rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT '-1329402759', rt0.c2))LIKE(rt1.c2))) IS TRUE)  as count FROM rt0, t1 INNER JOIN rt1 ON (NOT (UNLIKELY(DISTINCT rt0.c1))));
SELECT COUNT(*) FROM rt0, t1 INNER JOIN rt1 ON (NOT (UNLIKELY(DISTINCT rt0.c1))) WHERE (((COALESCE(DISTINCT '-1329402759', rt0.c2))LIKE(rt1.c2)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))=(((rt0.c1) BETWEEN (rt0.c2) AND (0.3620939230668614))))) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))=(((rt0.c1) BETWEEN (rt0.c2) AND (0.3620939230668614))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))=(((rt0.c1) BETWEEN (rt0.c2) AND (0.3620939230668614))))) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))=(((rt0.c1) BETWEEN (rt0.c2) AND (0.3620939230668614))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))=(((rt0.c1) BETWEEN (rt0.c2) AND (0.3620939230668614))))) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (CASE t1.c41  WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE t1.c41  WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (CASE t1.c41  WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE t1.c41  WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (CASE t1.c41  WHEN t1.c41 THEN t1.c41 ELSE t1.c41 END)));
SELECT ALL * FROM t1, rt0, rt1 WHERE (((((((rt1.c4)<=(rt1.c2)))AND(CASE t1.c41  WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c0 END)))AND(0Xffffffffe92303cd)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)<=(rt1.c2)))AND(CASE t1.c41  WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c0 END)))AND(0xffffffffe92303cd))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE (((((((rt1.c4)<=(rt1.c2)))AND(CASE t1.c41  WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c0 END)))AND(0Xffffffffe92303cd)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)<=(rt1.c2)))AND(CASE t1.c41  WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c0 END)))AND(0xffffffffe92303cd))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE (((((((rt1.c4)<=(rt1.c2)))AND(CASE t1.c41  WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c0 END)))AND(0Xffffffffe92303cd)));
SELECT COUNT(*) FROM rt0 WHERE (((((json_patch(rt0.c0, rt0.c2))OR(rt0.c2)))AND(x'70b2')));
SELECT SUM(count) FROM (SELECT ((((((json_patch(rt0.c0, rt0.c2))OR(rt0.c2)))AND(x'70b2'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((json_patch(rt0.c0, rt0.c2))OR(rt0.c2)))AND(x'70b2')));
SELECT SUM(count) FROM (SELECT ((((((json_patch(rt0.c0, rt0.c2))OR(rt0.c2)))AND(x'70b2'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((json_patch(rt0.c0, rt0.c2))OR(rt0.c2)))AND(x'70b2')));
SELECT * FROM rt1 WHERE ((+ (CAST(rt1.c4 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt1.c4 AS REAL)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((+ (CAST(rt1.c4 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt1.c4 AS REAL)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((+ (CAST(rt1.c4 AS REAL))));
SELECT COUNT(*) FROM t1 NOT INDEXED, rt1 WHERE (((((CAST(rt1.c1 AS INTEGER))OR(rt1.c1)))OR(((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c1 AS INTEGER))OR(rt1.c1)))OR(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1 NOT INDEXED, rt1 WHERE (((((CAST(rt1.c1 AS INTEGER))OR(rt1.c1)))OR(((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c1 AS INTEGER))OR(rt1.c1)))OR(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1 NOT INDEXED, rt1 WHERE (((((CAST(rt1.c1 AS INTEGER))OR(rt1.c1)))OR(((rt1.c2) ISNULL))));
SELECT * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END)OR(CASE 0.13836952191270435  WHEN rt0.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END)OR(CASE 0.13836952191270435  WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END)OR(CASE 0.13836952191270435  WHEN rt0.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END)OR(CASE 0.13836952191270435  WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END)OR(CASE 0.13836952191270435  WHEN rt0.c1 THEN rt0.c2 END)));
SELECT COUNT(*) FROM t1, rt1 WHERE (TRIM(DISTINCT rt1.c1 COLLATE NOCASE, t1.c41 COLLATE NOCASE)) ORDER BY ((rt1.c1) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT rt1.c1 COLLATE NOCASE, t1.c41 COLLATE NOCASE)) IS TRUE)  as count FROM t1, rt1 ORDER BY ((rt1.c1) ISNULL) ASC);
SELECT COUNT(*) FROM t1, rt1 WHERE (TRIM(DISTINCT rt1.c1 COLLATE NOCASE, t1.c41 COLLATE NOCASE)) ORDER BY ((rt1.c1) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT rt1.c1 COLLATE NOCASE, t1.c41 COLLATE NOCASE)) IS TRUE)  as count FROM t1, rt1 ORDER BY ((rt1.c1) ISNULL) ASC);
SELECT COUNT(*) FROM t1, rt1 WHERE (TRIM(DISTINCT rt1.c1 COLLATE NOCASE, t1.c41 COLLATE NOCASE)) ORDER BY ((rt1.c1) ISNULL) ASC;
SELECT ALL * FROM rt1 WHERE (CASE TRIM(DISTINCT rt1.c0, rt1.c4)  WHEN (~ (rt1.c4)) THEN (rt1.c3 IN (rt1.c2, rt1.c0)) WHEN ((rt1.c4)|(rt1.c4)) THEN x'' WHEN ((((0.9813960121008946)AND(rt1.c4)))OR(rt1.c2)) THEN ((rt1.c2) NOTNULL) WHEN rt1.c2 COLLATE NOCASE THEN IFNULL(rt1.c3, rt1.c4) WHEN rt1.c0 THEN HEX(rt1.c3) ELSE ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(DISTINCT rt1.c0, rt1.c4)  WHEN (~ (rt1.c4)) THEN (rt1.c3 IN (rt1.c2, rt1.c0)) WHEN ((rt1.c4)|(rt1.c4)) THEN x'' WHEN ((((0.9813960121008946)AND(rt1.c4)))OR(rt1.c2)) THEN ((rt1.c2) NOTNULL) WHEN rt1.c2 COLLATE NOCASE THEN IFNULL(rt1.c3, rt1.c4) WHEN rt1.c0 THEN HEX(rt1.c3) ELSE ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE TRIM(DISTINCT rt1.c0, rt1.c4)  WHEN (~ (rt1.c4)) THEN (rt1.c3 IN (rt1.c2, rt1.c0)) WHEN ((rt1.c4)|(rt1.c4)) THEN x'' WHEN ((((0.9813960121008946)AND(rt1.c4)))OR(rt1.c2)) THEN ((rt1.c2) NOTNULL) WHEN rt1.c2 COLLATE NOCASE THEN IFNULL(rt1.c3, rt1.c4) WHEN rt1.c0 THEN HEX(rt1.c3) ELSE ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(DISTINCT rt1.c0, rt1.c4)  WHEN (~ (rt1.c4)) THEN (rt1.c3 IN (rt1.c2, rt1.c0)) WHEN ((rt1.c4)|(rt1.c4)) THEN x'' WHEN ((((0.9813960121008946)AND(rt1.c4)))OR(rt1.c2)) THEN ((rt1.c2) NOTNULL) WHEN rt1.c2 COLLATE NOCASE THEN IFNULL(rt1.c3, rt1.c4) WHEN rt1.c0 THEN HEX(rt1.c3) ELSE ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE TRIM(DISTINCT rt1.c0, rt1.c4)  WHEN (~ (rt1.c4)) THEN (rt1.c3 IN (rt1.c2, rt1.c0)) WHEN ((rt1.c4)|(rt1.c4)) THEN x'' WHEN ((((0.9813960121008946)AND(rt1.c4)))OR(rt1.c2)) THEN ((rt1.c2) NOTNULL) WHEN rt1.c2 COLLATE NOCASE THEN IFNULL(rt1.c3, rt1.c4) WHEN rt1.c0 THEN HEX(rt1.c3) ELSE ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)) END);
SELECT ALL * FROM t1, rt1, rt0 WHERE (CASE WHEN ((rt1.c2) IS FALSE) THEN (((rt0.c0))<=((0.5661072613973833))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2) IS FALSE) THEN (((rt0.c0))<=((0.5661072613973833))) END) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE (CASE WHEN ((rt1.c2) IS FALSE) THEN (((rt0.c0))<=((0.5661072613973833))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2) IS FALSE) THEN (((rt0.c0))<=((0.5661072613973833))) END) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE (CASE WHEN ((rt1.c2) IS FALSE) THEN (((rt0.c0))<=((0.5661072613973833))) END);
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c4 COLLATE NOCASE THEN CASE rt1.c3  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c4 COLLATE NOCASE THEN CASE rt1.c3  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c4 COLLATE NOCASE THEN CASE rt1.c3  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c4 COLLATE NOCASE THEN CASE rt1.c3  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c4 COLLATE NOCASE THEN CASE rt1.c3  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END END);
SELECT ALL * FROM t1, rt1, rt0 WHERE (x'') ORDER BY CASE (rt0.c2 IN (rt0.c0, x''))  WHEN NULL THEN CAST(rt0.c1 AS INTEGER) WHEN ((NULL)/(rt1.c1)) THEN ((rt1.c1)OR(rt0.c0)) WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c1 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CASE (rt0.c2 IN (rt0.c0, x''))  WHEN NULL THEN CAST(rt0.c1 AS INTEGER) WHEN ((NULL)/(rt1.c1)) THEN ((rt1.c1)OR(rt0.c0)) WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c1 COLLATE BINARY END ASC);
SELECT ALL * FROM t1, rt1, rt0 WHERE (x'') ORDER BY CASE (rt0.c2 IN (rt0.c0, x''))  WHEN NULL THEN CAST(rt0.c1 AS INTEGER) WHEN ((NULL)/(rt1.c1)) THEN ((rt1.c1)OR(rt0.c0)) WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c1 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CASE (rt0.c2 IN (rt0.c0, x''))  WHEN NULL THEN CAST(rt0.c1 AS INTEGER) WHEN ((NULL)/(rt1.c1)) THEN ((rt1.c1)OR(rt0.c0)) WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c1 COLLATE BINARY END ASC);
SELECT ALL * FROM t1, rt1, rt0 WHERE (x'') ORDER BY CASE (rt0.c2 IN (rt0.c0, x''))  WHEN NULL THEN CAST(rt0.c1 AS INTEGER) WHEN ((NULL)/(rt1.c1)) THEN ((rt1.c1)OR(rt0.c0)) WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c1 COLLATE BINARY END ASC;
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN t1 WHERE (CAST(ABS(DISTINCT t1.c41) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(DISTINCT t1.c41) AS BLOB)) IS TRUE)  as count FROM rt1 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN t1 WHERE (CAST(ABS(DISTINCT t1.c41) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(DISTINCT t1.c41) AS BLOB)) IS TRUE)  as count FROM rt1 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN t1 WHERE (CAST(ABS(DISTINCT t1.c41) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (TRIM(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (TRIM(NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (TRIM(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (TRIM(NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (TRIM(NULL))));
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((((rt0.c1)>>(rt0.c1)))AND(json_valid(t1.c41))))AND(((t1.c41)-(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)>>(rt0.c1)))AND(json_valid(t1.c41))))AND(((t1.c41)-(rt0.c0))))) IS TRUE)  as count FROM t1, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((((rt0.c1)>>(rt0.c1)))AND(json_valid(t1.c41))))AND(((t1.c41)-(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)>>(rt0.c1)))AND(json_valid(t1.c41))))AND(((t1.c41)-(rt0.c0))))) IS TRUE)  as count FROM t1, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((((rt0.c1)>>(rt0.c1)))AND(json_valid(t1.c41))))AND(((t1.c41)-(rt0.c0)))));
SELECT * FROM rt1, t1 NOT INDEXED INNER JOIN rt0 ON ((LIKELIHOOD(DISTINCT rt0.c0, 0.1372058455038454)) BETWEEN ((~ (rt1.c4))) AND ((((t1.c41, rt1.c2, t1.c41)) BETWEEN ((rt0.c2, rt0.c1, rt1.c0)) AND ((rt1.c1, rt1.c0, rt0.c2))))) WHERE (((rt1.c2 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt1, t1 INNER JOIN rt0 ON ((LIKELIHOOD(DISTINCT rt0.c0, 0.1372058455038454)) BETWEEN ((~ (rt1.c4))) AND ((((t1.c41, rt1.c2, t1.c41)) BETWEEN ((rt0.c2, rt0.c1, rt1.c0)) AND ((rt1.c1, rt1.c0, rt0.c2))))));
SELECT * FROM rt1, t1 NOT INDEXED INNER JOIN rt0 ON ((LIKELIHOOD(DISTINCT rt0.c0, 0.1372058455038454)) BETWEEN ((~ (rt1.c4))) AND ((((t1.c41, rt1.c2, t1.c41)) BETWEEN ((rt0.c2, rt0.c1, rt1.c0)) AND ((rt1.c1, rt1.c0, rt0.c2))))) WHERE (((rt1.c2 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt1, t1 INNER JOIN rt0 ON ((LIKELIHOOD(DISTINCT rt0.c0, 0.1372058455038454)) BETWEEN ((~ (rt1.c4))) AND ((((t1.c41, rt1.c2, t1.c41)) BETWEEN ((rt0.c2, rt0.c1, rt1.c0)) AND ((rt1.c1, rt1.c0, rt0.c2))))));
SELECT * FROM rt1, t1 NOT INDEXED INNER JOIN rt0 ON ((LIKELIHOOD(DISTINCT rt0.c0, 0.1372058455038454)) BETWEEN ((~ (rt1.c4))) AND ((((t1.c41, rt1.c2, t1.c41)) BETWEEN ((rt0.c2, rt0.c1, rt1.c0)) AND ((rt1.c1, rt1.c0, rt0.c2))))) WHERE (((rt1.c2 COLLATE RTRIM) NOT NULL));
SELECT ALL COUNT(*) FROM t1 WHERE (HEX(DISTINCT '-253018964')) ORDER BY ((t1.c41)>((((t1.c41))=((t1.c41))))) ASC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT '-253018964')) IS TRUE)  as count FROM t1 ORDER BY ((t1.c41)>((((t1.c41))=((t1.c41))))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (HEX(DISTINCT '-253018964')) ORDER BY ((t1.c41)>((((t1.c41))=((t1.c41))))) ASC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT '-253018964')) IS TRUE)  as count FROM t1 ORDER BY ((t1.c41)>((((t1.c41))=((t1.c41))))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (HEX(DISTINCT '-253018964')) ORDER BY ((t1.c41)>((((t1.c41))=((t1.c41))))) ASC;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c0)<=(t1.c41)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t1, rt0 ORDER BY CAST(((rt0.c0)<=(t1.c41)) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c0)<=(t1.c41)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t1, rt0 ORDER BY CAST(((rt0.c0)<=(t1.c41)) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c0)<=(t1.c41)) AS NUMERIC) ASC  NULLS LAST;
SELECT * FROM t1, rt0, rt1 WHERE ((((((rt0.c1 IN ()))AND(t1.c41 COLLATE RTRIM)))OR(((rt1.c0) ISNULL)))) ORDER BY ((CAST(rt0.c0 AS TEXT))AND(((rt0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))AND(t1.c41 COLLATE RTRIM)))OR(((rt1.c0) ISNULL)))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((CAST(rt0.c0 AS TEXT))AND(((rt0.c0) IS FALSE))) ASC);
SELECT * FROM t1, rt0, rt1 WHERE ((((((rt0.c1 IN ()))AND(t1.c41 COLLATE RTRIM)))OR(((rt1.c0) ISNULL)))) ORDER BY ((CAST(rt0.c0 AS TEXT))AND(((rt0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))AND(t1.c41 COLLATE RTRIM)))OR(((rt1.c0) ISNULL)))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((CAST(rt0.c0 AS TEXT))AND(((rt0.c0) IS FALSE))) ASC);
SELECT * FROM t1, rt0, rt1 WHERE ((((((rt0.c1 IN ()))AND(t1.c41 COLLATE RTRIM)))OR(((rt1.c0) ISNULL)))) ORDER BY ((CAST(rt0.c0 AS TEXT))AND(((rt0.c0) IS FALSE))) ASC;
SELECT * FROM t1, rt1 WHERE (CAST(HEX(DISTINCT rt1.c4) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(DISTINCT rt1.c4) AS NUMERIC)) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (CAST(HEX(DISTINCT rt1.c4) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(DISTINCT rt1.c4) AS NUMERIC)) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (CAST(HEX(DISTINCT rt1.c4) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array(((rt0.c2)=(rt0.c2)), ((rt0.c0)*(NULL)), CAST(rt0.c2 AS TEXT), ((rt0.c2)|(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), ((('-1237692174', rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, x'', rt0.c1))))) ORDER BY rt0.c0 ASC  NULLS LAST, CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array(((rt0.c2)=(rt0.c2)), ((rt0.c0)*(NULL)), CAST(rt0.c2 AS TEXT), ((rt0.c2)|(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), ((('-1237692174', rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, x'', rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS LAST, CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array(((rt0.c2)=(rt0.c2)), ((rt0.c0)*(NULL)), CAST(rt0.c2 AS TEXT), ((rt0.c2)|(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), ((('-1237692174', rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, x'', rt0.c1))))) ORDER BY rt0.c0 ASC  NULLS LAST, CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array(((rt0.c2)=(rt0.c2)), ((rt0.c0)*(NULL)), CAST(rt0.c2 AS TEXT), ((rt0.c2)|(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), ((('-1237692174', rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, x'', rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS LAST, CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array(((rt0.c2)=(rt0.c2)), ((rt0.c0)*(NULL)), CAST(rt0.c2 AS TEXT), ((rt0.c2)|(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), ((('-1237692174', rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, x'', rt0.c1))))) ORDER BY rt0.c0 ASC  NULLS LAST, CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM rt1 CROSS JOIN t1 ON IFNULL(rt1.c0, (~ (rt1.c2))) WHERE ((CAST(rt1.c3 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c3 AS BLOB) IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON IFNULL(rt1.c0, (~ (rt1.c2))));
SELECT ALL * FROM rt1 CROSS JOIN t1 ON IFNULL(rt1.c0, (~ (rt1.c2))) WHERE ((CAST(rt1.c3 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c3 AS BLOB) IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON IFNULL(rt1.c0, (~ (rt1.c2))));
SELECT ALL * FROM rt1 CROSS JOIN t1 ON IFNULL(rt1.c0, (~ (rt1.c2))) WHERE ((CAST(rt1.c3 AS BLOB) IN ()));
SELECT ALL * FROM t1 CROSS JOIN rt0 ON rt1.c3 FULL OUTER JOIN rt1 ON (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END IN ()) WHERE (('' IN ())) ORDER BY CASE ((((rt1.c3)AND(rt1.c3)))AND(rt1.c3))  WHEN ((rt1.c0) NOTNULL) THEN (rt1.c2 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON rt1.c3 FULL OUTER JOIN rt1 ON (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END IN ()) ORDER BY CASE ((((rt1.c3)AND(rt1.c3)))AND(rt1.c3))  WHEN ((rt1.c0) NOTNULL) THEN (rt1.c2 IN ()) END);
SELECT ALL * FROM t1 CROSS JOIN rt0 ON rt1.c3 FULL OUTER JOIN rt1 ON (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END IN ()) WHERE (('' IN ())) ORDER BY CASE ((((rt1.c3)AND(rt1.c3)))AND(rt1.c3))  WHEN ((rt1.c0) NOTNULL) THEN (rt1.c2 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON rt1.c3 FULL OUTER JOIN rt1 ON (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END IN ()) ORDER BY CASE ((((rt1.c3)AND(rt1.c3)))AND(rt1.c3))  WHEN ((rt1.c0) NOTNULL) THEN (rt1.c2 IN ()) END);
SELECT ALL * FROM rt1, rt0, t1 WHERE (t1.c41);
SELECT SUM(count) FROM (SELECT ((t1.c41) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE (t1.c41);
SELECT SUM(count) FROM (SELECT ((t1.c41) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE (t1.c41);
SELECT COUNT(*) FROM t1 WHERE ((+ (t1.c41)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c41)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT COUNT(*) FROM t1 WHERE ((+ (t1.c41)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c41)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT COUNT(*) FROM t1 WHERE ((+ (t1.c41)) COLLATE BINARY COLLATE RTRIM);
SELECT COUNT(*) FROM rt1, t1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1, t1);
SELECT COUNT(*) FROM rt1, t1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1, t1);
SELECT COUNT(*) FROM rt1, t1 WHERE (rt1.c3);
SELECT ALL * FROM t1, rt0, rt1 WHERE ((rt1.c4 COLLATE RTRIM IN (CASE rt1.c3  WHEN rt0.c0 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT (((rt1.c4 COLLATE RTRIM IN (CASE rt1.c3  WHEN rt0.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE ((rt1.c4 COLLATE RTRIM IN (CASE rt1.c3  WHEN rt0.c0 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT (((rt1.c4 COLLATE RTRIM IN (CASE rt1.c3  WHEN rt0.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE ((rt1.c4 COLLATE RTRIM IN (CASE rt1.c3  WHEN rt0.c0 THEN rt1.c2 END)));
SELECT ALL * FROM t1 WHERE ((- ((t1.c41 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((t1.c41 IN ())))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((- ((t1.c41 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((t1.c41 IN ())))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((- ((t1.c41 IN ()))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)>>(rt1.c2)))+(((rt1.c4)-(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>>(rt1.c2)))+(((rt1.c4)-(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)>>(rt1.c2)))+(((rt1.c4)-(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>>(rt1.c2)))+(((rt1.c4)-(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)>>(rt1.c2)))+(((rt1.c4)-(rt1.c2)))));
SELECT COUNT(*) FROM t1, rt0, rt1 NOT INDEXED WHERE (rt1.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1 COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 NOT INDEXED WHERE (rt1.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1 COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 NOT INDEXED WHERE (rt1.c1 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN (CAST(rt0.c1 AS REAL)))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE NOCASE IN (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM t1, rt0 ORDER BY rt0.c0 DESC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN (CAST(rt0.c1 AS REAL)))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE NOCASE IN (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM t1, rt0 ORDER BY rt0.c0 DESC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN (CAST(rt0.c1 AS REAL)))) ORDER BY rt0.c0 DESC;
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((rt0.c1 COLLATE BINARY)AND(((((rt0.c0)OR(rt1.c1)))OR(rt1.c0)))))OR(((rt1.c4)<<(t1.c41))))) ORDER BY CAST(((rt0.c1)>=(rt1.c3)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE BINARY)AND(((((rt0.c0)OR(rt1.c1)))OR(rt1.c0)))))OR(((rt1.c4)<<(t1.c41))))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY CAST(((rt0.c1)>=(rt1.c3)) AS REAL));
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((rt0.c1 COLLATE BINARY)AND(((((rt0.c0)OR(rt1.c1)))OR(rt1.c0)))))OR(((rt1.c4)<<(t1.c41))))) ORDER BY CAST(((rt0.c1)>=(rt1.c3)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE BINARY)AND(((((rt0.c0)OR(rt1.c1)))OR(rt1.c0)))))OR(((rt1.c4)<<(t1.c41))))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY CAST(((rt0.c1)>=(rt1.c3)) AS REAL));
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((rt0.c1 COLLATE BINARY)AND(((((rt0.c0)OR(rt1.c1)))OR(rt1.c0)))))OR(((rt1.c4)<<(t1.c41))))) ORDER BY CAST(((rt0.c1)>=(rt1.c3)) AS REAL);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((CAST(rt0.c2 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((CAST(rt0.c2 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((CAST(rt0.c2 AS TEXT)) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY, 0xffffffffd85e53d0, (~ (rt0.c1))))<(((((rt0.c0, rt0.c0, rt0.c0))==((rt0.c1, NULL, rt0.c1))), 0.27730175456638606, ((rt0.c2)>>(''))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY, 0Xffffffffd85e53d0, (~ (rt0.c1))))<(((((rt0.c0, rt0.c0, rt0.c0))==((rt0.c1, NULL, rt0.c1))), 0.27730175456638606, ((rt0.c2)>>('')))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY, 0xffffffffd85e53d0, (~ (rt0.c1))))<(((((rt0.c0, rt0.c0, rt0.c0))==((rt0.c1, NULL, rt0.c1))), 0.27730175456638606, ((rt0.c2)>>(''))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY, 0Xffffffffd85e53d0, (~ (rt0.c1))))<(((((rt0.c0, rt0.c0, rt0.c0))==((rt0.c1, NULL, rt0.c1))), 0.27730175456638606, ((rt0.c2)>>('')))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY, 0xffffffffd85e53d0, (~ (rt0.c1))))<(((((rt0.c0, rt0.c0, rt0.c0))==((rt0.c1, NULL, rt0.c1))), 0.27730175456638606, ((rt0.c2)>>(''))))));
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CASE ((rt0.c0)&(rt0.c0))  WHEN ((t1.c41) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN (((rt0.c0))<=((rt1.c1))) ELSE CASE rt1.c2  WHEN rt0.c2 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN t1.c41 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END END) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)&(rt0.c0))  WHEN ((t1.c41) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN (((rt0.c0))<=((rt1.c1))) ELSE CASE rt1.c2  WHEN rt0.c2 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN t1.c41 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END END) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CASE ((rt0.c0)&(rt0.c0))  WHEN ((t1.c41) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN (((rt0.c0))<=((rt1.c1))) ELSE CASE rt1.c2  WHEN rt0.c2 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN t1.c41 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END END) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)&(rt0.c0))  WHEN ((t1.c41) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN (((rt0.c0))<=((rt1.c1))) ELSE CASE rt1.c2  WHEN rt0.c2 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN t1.c41 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END END) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CASE ((rt0.c0)&(rt0.c0))  WHEN ((t1.c41) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN (((rt0.c0))<=((rt1.c1))) ELSE CASE rt1.c2  WHEN rt0.c2 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN t1.c41 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END END) ORDER BY rt0.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c0)%(rt1.c1)))GLOB(((rt1.c1)>=(rt1.c3)))) LEFT OUTER JOIN t1 ON ((json_patch(rt1.c3, rt1.c4)) IS TRUE) WHERE ((((((rt1.c0))==((t1.c41)))) BETWEEN (CASE WHEN rt1.c0 THEN 1.81538507E9 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c4 ELSE t1.c41 END) AND (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1))))) ORDER BY x'16a1' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0))=((t1.c41)))) BETWEEN (CASE WHEN rt1.c0 THEN 1.81538507E9 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c4 ELSE t1.c41 END) AND (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c0)%(rt1.c1)))GLOB(((rt1.c1)>=(rt1.c3)))) LEFT OUTER JOIN t1 ON ((json_patch(rt1.c3, rt1.c4)) IS TRUE) ORDER BY x'16a1' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c0)%(rt1.c1)))GLOB(((rt1.c1)>=(rt1.c3)))) LEFT OUTER JOIN t1 ON ((json_patch(rt1.c3, rt1.c4)) IS TRUE) WHERE ((((((rt1.c0))==((t1.c41)))) BETWEEN (CASE WHEN rt1.c0 THEN 1.81538507E9 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c4 ELSE t1.c41 END) AND (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1))))) ORDER BY x'16a1' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0))=((t1.c41)))) BETWEEN (CASE WHEN rt1.c0 THEN 1.81538507E9 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c4 ELSE t1.c41 END) AND (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c0)%(rt1.c1)))GLOB(((rt1.c1)>=(rt1.c3)))) LEFT OUTER JOIN t1 ON ((json_patch(rt1.c3, rt1.c4)) IS TRUE) ORDER BY x'16a1' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c0)%(rt1.c1)))GLOB(((rt1.c1)>=(rt1.c3)))) LEFT OUTER JOIN t1 ON ((json_patch(rt1.c3, rt1.c4)) IS TRUE) WHERE ((((((rt1.c0))==((t1.c41)))) BETWEEN (CASE WHEN rt1.c0 THEN 1.81538507E9 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c4 ELSE t1.c41 END) AND (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1))))) ORDER BY x'16a1' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, rt1 WHERE ((- (rt1.c2)) COLLATE RTRIM) ORDER BY x'' COLLATE BINARY  NULLS FIRST, '-826514983' ASC, CASE WHEN (rt1.c1 IN (rt1.c2)) THEN (+ (t1.c41)) ELSE rt1.c3 END;
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t1, rt1 ORDER BY x'' COLLATE BINARY  NULLS FIRST, '-826514983' ASC, CASE WHEN (rt1.c1 IN (rt1.c2)) THEN (+ (t1.c41)) ELSE rt1.c3 END);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE ((- (rt1.c2)) COLLATE RTRIM) ORDER BY x'' COLLATE BINARY  NULLS FIRST, '-826514983' ASC, CASE WHEN (rt1.c1 IN (rt1.c2)) THEN (+ (t1.c41)) ELSE rt1.c3 END;
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t1, rt1 ORDER BY x'' COLLATE BINARY  NULLS FIRST, '-826514983' ASC, CASE WHEN (rt1.c1 IN (rt1.c2)) THEN (+ (t1.c41)) ELSE rt1.c3 END);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE ((- (rt1.c2)) COLLATE RTRIM) ORDER BY x'' COLLATE BINARY  NULLS FIRST, '-826514983' ASC, CASE WHEN (rt1.c1 IN (rt1.c2)) THEN (+ (t1.c41)) ELSE rt1.c3 END;
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((rt1.c3) NOT NULL) IN ())) ORDER BY ((((0xffffffffecf478cb)*(rt1.c4)))GLOB((rt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((0xffffffffecf478cb)*(rt1.c4)))GLOB((rt1.c2 IN ()))));
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((rt1.c3) NOT NULL) IN ())) ORDER BY ((((0xffffffffecf478cb)*(rt1.c4)))GLOB((rt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((0xffffffffecf478cb)*(rt1.c4)))GLOB((rt1.c2 IN ()))));
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((rt1.c3) NOT NULL) IN ())) ORDER BY ((((0xffffffffecf478cb)*(rt1.c4)))GLOB((rt1.c2 IN ())));
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))OR(((rt0.c2)/(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB))OR(((rt0.c2)/(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))OR(((rt0.c2)/(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB))OR(((rt0.c2)/(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))OR(((rt0.c2)/(rt0.c1)))));
SELECT COUNT(*) FROM t1, rt1 WHERE (STRFTIME(CASE WHEN NULL THEN t1.c41 WHEN rt1.c2 THEN rt1.c2 WHEN t1.c41 THEN rt1.c1 ELSE rt1.c4 END, '0.39092847090875027', ((rt1.c4)IS(rt1.c3)))) ORDER BY ((((t1.c41)AND(rt1.c1)))<>(NULLIF(rt1.c1, t1.c41))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((STRFTIME(CASE WHEN NULL THEN t1.c41 WHEN rt1.c2 THEN rt1.c2 WHEN t1.c41 THEN rt1.c1 ELSE rt1.c4 END, '0.39092847090875027', ((rt1.c4)IS(rt1.c3)))) IS TRUE)  as count FROM t1, rt1 ORDER BY ((((t1.c41)AND(rt1.c1)))<>(NULLIF(rt1.c1, t1.c41))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt1 WHERE (STRFTIME(CASE WHEN NULL THEN t1.c41 WHEN rt1.c2 THEN rt1.c2 WHEN t1.c41 THEN rt1.c1 ELSE rt1.c4 END, '0.39092847090875027', ((rt1.c4)IS(rt1.c3)))) ORDER BY ((((t1.c41)AND(rt1.c1)))<>(NULLIF(rt1.c1, t1.c41))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((STRFTIME(CASE WHEN NULL THEN t1.c41 WHEN rt1.c2 THEN rt1.c2 WHEN t1.c41 THEN rt1.c1 ELSE rt1.c4 END, '0.39092847090875027', ((rt1.c4)IS(rt1.c3)))) IS TRUE)  as count FROM t1, rt1 ORDER BY ((((t1.c41)AND(rt1.c1)))<>(NULLIF(rt1.c1, t1.c41))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt1 WHERE (STRFTIME(CASE WHEN NULL THEN t1.c41 WHEN rt1.c2 THEN rt1.c2 WHEN t1.c41 THEN rt1.c1 ELSE rt1.c4 END, '0.39092847090875027', ((rt1.c4)IS(rt1.c3)))) ORDER BY ((((t1.c41)AND(rt1.c1)))<>(NULLIF(rt1.c1, t1.c41))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0 WHERE ((NOT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE ((NOT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE ((NOT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT * FROM rt1, t1 NOT INDEXED WHERE ((NOT (((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 NOT INDEXED WHERE ((NOT (((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 NOT INDEXED WHERE ((NOT (((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (((ABS(DISTINCT 'm쯍XNB>*P'))>(((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT 'm쯍XNB>*P'))>(((((rt1.c2)OR(rt1.c1)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((ABS(DISTINCT 'm쯍XNB>*P'))>(((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT 'm쯍XNB>*P'))>(((((rt1.c2)OR(rt1.c1)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((ABS(DISTINCT 'm쯍XNB>*P'))>(((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)))));
SELECT ALL * FROM rt1, rt0, t1 WHERE (((rt0.c0)LIKE((rt1.c3 IN (rt1.c4))))) ORDER BY ((((rt1.c2)OR(rt0.c1)))OR(rt1.c3)) COLLATE BINARY DESC  NULLS FIRST, (((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt0.c2))))-(((rt1.c3)>=(rt1.c3))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)LIKE((rt1.c3 IN (rt1.c4))))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY ((((rt1.c2)OR(rt0.c1)))OR(rt1.c3)) COLLATE BINARY DESC  NULLS FIRST, (((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt0.c2))))-(((rt1.c3)>=(rt1.c3)))));
SELECT ALL * FROM rt1, rt0, t1 WHERE (((rt0.c0)LIKE((rt1.c3 IN (rt1.c4))))) ORDER BY ((((rt1.c2)OR(rt0.c1)))OR(rt1.c3)) COLLATE BINARY DESC  NULLS FIRST, (((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt0.c2))))-(((rt1.c3)>=(rt1.c3))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)LIKE((rt1.c3 IN (rt1.c4))))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY ((((rt1.c2)OR(rt0.c1)))OR(rt1.c3)) COLLATE BINARY DESC  NULLS FIRST, (((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt0.c2))))-(((rt1.c3)>=(rt1.c3)))));
SELECT ALL * FROM rt1, rt0, t1 WHERE (((rt0.c0)LIKE((rt1.c3 IN (rt1.c4))))) ORDER BY ((((rt1.c2)OR(rt0.c1)))OR(rt1.c3)) COLLATE BINARY DESC  NULLS FIRST, (((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt0.c2))))-(((rt1.c3)>=(rt1.c3))));
SELECT * FROM rt0, rt1, t1 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY (((rt1.c3, rt0.c1, '')) BETWEEN (((rt1.c1 IN (rt1.c0)), CAST(rt0.c2 AS BLOB), (((rt1.c0))=((t1.c41))))) AND (((((t1.c41, rt1.c4, rt1.c4)) BETWEEN ((rt1.c0, rt0.c2, rt0.c0)) AND ((rt1.c1, t1.c41, rt1.c2))), ((((t1.c41)OR(rt0.c2)))AND(rt1.c3)), (((rt0.c0, NULL, t1.c41)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c1)) AND ((rt1.c4, rt1.c0, t1.c41)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY (((rt1.c3, rt0.c1, '')) BETWEEN (((rt1.c1 IN (rt1.c0)), CAST(rt0.c2 AS BLOB), (((rt1.c0))=((t1.c41))))) AND (((((t1.c41, rt1.c4, rt1.c4)) BETWEEN ((rt1.c0, rt0.c2, rt0.c0)) AND ((rt1.c1, t1.c41, rt1.c2))), ((((t1.c41)OR(rt0.c2)))AND(rt1.c3)), (((rt0.c0, NULL, t1.c41)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c1)) AND ((rt1.c4, rt1.c0, t1.c41)))))) ASC  NULLS LAST);
SELECT * FROM rt0, rt1, t1 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY (((rt1.c3, rt0.c1, '')) BETWEEN (((rt1.c1 IN (rt1.c0)), CAST(rt0.c2 AS BLOB), (((rt1.c0))=((t1.c41))))) AND (((((t1.c41, rt1.c4, rt1.c4)) BETWEEN ((rt1.c0, rt0.c2, rt0.c0)) AND ((rt1.c1, t1.c41, rt1.c2))), ((((t1.c41)OR(rt0.c2)))AND(rt1.c3)), (((rt0.c0, NULL, t1.c41)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c1)) AND ((rt1.c4, rt1.c0, t1.c41)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY (((rt1.c3, rt0.c1, '')) BETWEEN (((rt1.c1 IN (rt1.c0)), CAST(rt0.c2 AS BLOB), (((rt1.c0))=((t1.c41))))) AND (((((t1.c41, rt1.c4, rt1.c4)) BETWEEN ((rt1.c0, rt0.c2, rt0.c0)) AND ((rt1.c1, t1.c41, rt1.c2))), ((((t1.c41)OR(rt0.c2)))AND(rt1.c3)), (((rt0.c0, NULL, t1.c41)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c1)) AND ((rt1.c4, rt1.c0, t1.c41)))))) ASC  NULLS LAST);
SELECT * FROM rt0, rt1, t1 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY (((rt1.c3, rt0.c1, '')) BETWEEN (((rt1.c1 IN (rt1.c0)), CAST(rt0.c2 AS BLOB), (((rt1.c0))=((t1.c41))))) AND (((((t1.c41, rt1.c4, rt1.c4)) BETWEEN ((rt1.c0, rt0.c2, rt0.c0)) AND ((rt1.c1, t1.c41, rt1.c2))), ((((t1.c41)OR(rt0.c2)))AND(rt1.c3)), (((rt0.c0, NULL, t1.c41)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c1)) AND ((rt1.c4, rt1.c0, t1.c41)))))) ASC  NULLS LAST;
SELECT * FROM rt0 INNER JOIN t1 ON CAST(UPPER(DISTINCT rt0.c0) AS TEXT) WHERE (rt0.c0 COLLATE RTRIM) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))*(((((rt0.c1)AND(rt0.c0)))AND(t1.c41)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON CAST(UPPER(DISTINCT rt0.c0) AS TEXT) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))*(((((rt0.c1)AND(rt0.c0)))AND(t1.c41)))) ASC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN t1 ON CAST(UPPER(DISTINCT rt0.c0) AS TEXT) WHERE (rt0.c0 COLLATE RTRIM) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))*(((((rt0.c1)AND(rt0.c0)))AND(t1.c41)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON CAST(UPPER(DISTINCT rt0.c0) AS TEXT) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))*(((((rt0.c1)AND(rt0.c0)))AND(t1.c41)))) ASC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN t1 ON CAST(UPPER(DISTINCT rt0.c0) AS TEXT) WHERE (rt0.c0 COLLATE RTRIM) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))*(((((rt0.c1)AND(rt0.c0)))AND(t1.c41)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((((((((rt1.c0)OR(rt0.c1 COLLATE NOCASE)))OR((13457892 IN ()))))OR((- (rt1.c0)))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2))))) ORDER BY json_remove(rt1.c1, (((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt1.c0))), rt1.c0, ((t1.c41) BETWEEN (rt1.c2) AND (rt1.c3)), CASE rt1.c0  WHEN rt1.c0 THEN t1.c41 ELSE rt0.c2 END, ((rt1.c0)LIKE(rt1.c0))) ASC  NULLS FIRST, ((((rt0.c2)%(rt1.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c0)OR(rt0.c1 COLLATE NOCASE)))OR((13457892 IN ()))))OR((- (rt1.c0)))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY json_remove(rt1.c1, (((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt1.c0))), rt1.c0, ((t1.c41) BETWEEN (rt1.c2) AND (rt1.c3)), CASE rt1.c0  WHEN rt1.c0 THEN t1.c41 ELSE rt0.c2 END, ((rt1.c0)LIKE(rt1.c0))) ASC  NULLS FIRST, ((((rt0.c2)%(rt1.c2))) NOTNULL));
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((((((((rt1.c0)OR(rt0.c1 COLLATE NOCASE)))OR((13457892 IN ()))))OR((- (rt1.c0)))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2))))) ORDER BY json_remove(rt1.c1, (((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt1.c0))), rt1.c0, ((t1.c41) BETWEEN (rt1.c2) AND (rt1.c3)), CASE rt1.c0  WHEN rt1.c0 THEN t1.c41 ELSE rt0.c2 END, ((rt1.c0)LIKE(rt1.c0))) ASC  NULLS FIRST, ((((rt0.c2)%(rt1.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c0)OR(rt0.c1 COLLATE NOCASE)))OR((13457892 IN ()))))OR((- (rt1.c0)))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY json_remove(rt1.c1, (((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt1.c0))), rt1.c0, ((t1.c41) BETWEEN (rt1.c2) AND (rt1.c3)), CASE rt1.c0  WHEN rt1.c0 THEN t1.c41 ELSE rt0.c2 END, ((rt1.c0)LIKE(rt1.c0))) ASC  NULLS FIRST, ((((rt0.c2)%(rt1.c2))) NOTNULL));
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((((((((rt1.c0)OR(rt0.c1 COLLATE NOCASE)))OR((13457892 IN ()))))OR((- (rt1.c0)))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2))))) ORDER BY json_remove(rt1.c1, (((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt1.c0))), rt1.c0, ((t1.c41) BETWEEN (rt1.c2) AND (rt1.c3)), CASE rt1.c0  WHEN rt1.c0 THEN t1.c41 ELSE rt0.c2 END, ((rt1.c0)LIKE(rt1.c0))) ASC  NULLS FIRST, ((((rt0.c2)%(rt1.c2))) NOTNULL);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)LIKE(SUBSTR(rt0.c2, rt0.c1)))) ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN ((~ (rt0.c2))) AND (((rt0.c0)=(rt0.c2))))  NULLS FIRST, CASE rt0.c2 COLLATE NOCASE  WHEN CAST(rt0.c1 AS REAL) THEN ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END  NULLS FIRST, (~ (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)LIKE(SUBSTR(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN ((~ (rt0.c2))) AND (((rt0.c0)==(rt0.c2))))  NULLS FIRST, CASE rt0.c2 COLLATE NOCASE  WHEN CAST(rt0.c1 AS REAL) THEN ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END  NULLS FIRST, (~ (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)LIKE(SUBSTR(rt0.c2, rt0.c1)))) ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN ((~ (rt0.c2))) AND (((rt0.c0)=(rt0.c2))))  NULLS FIRST, CASE rt0.c2 COLLATE NOCASE  WHEN CAST(rt0.c1 AS REAL) THEN ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END  NULLS FIRST, (~ (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)LIKE(SUBSTR(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN ((~ (rt0.c2))) AND (((rt0.c0)==(rt0.c2))))  NULLS FIRST, CASE rt0.c2 COLLATE NOCASE  WHEN CAST(rt0.c1 AS REAL) THEN ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END  NULLS FIRST, (~ (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)LIKE(SUBSTR(rt0.c2, rt0.c1)))) ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN ((~ (rt0.c2))) AND (((rt0.c0)=(rt0.c2))))  NULLS FIRST, CASE rt0.c2 COLLATE NOCASE  WHEN CAST(rt0.c1 AS REAL) THEN ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END  NULLS FIRST, (~ (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((('Z' IN ()))*(CAST(x'7b32' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((('Z' IN ()))*(CAST(x'7b32' AS INTEGER)))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((('Z' IN ()))*(CAST(x'7b32' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((('Z' IN ()))*(CAST(x'7b32' AS INTEGER)))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((('Z' IN ()))*(CAST(x'7b32' AS INTEGER))));
SELECT ALL COUNT(*) FROM t1, rt1 FULL OUTER JOIN rt0 ON (((rt0.c0)<(0.9869873001973207)) IN ()) WHERE ((((((t1.c41)<<(rt0.c0)), ((rt0.c2)<<(rt0.c2)), rt0.c1))=((rt1.c3, (('0.9445213054017286') BETWEEN (rt1.c3) AND (rt0.c0)), rt1.c3))));
SELECT SUM(count) FROM (SELECT (((((((t1.c41)<<(rt0.c0)), ((rt0.c2)<<(rt0.c2)), rt0.c1))=((rt1.c3, (('0.9445213054017286') BETWEEN (rt1.c3) AND (rt0.c0)), rt1.c3)))) IS TRUE)  as count FROM t1, rt1 FULL OUTER JOIN rt0 ON (((rt0.c0)<(0.9869873001973207)) IN ()));
SELECT ALL COUNT(*) FROM t1, rt1 FULL OUTER JOIN rt0 ON (((rt0.c0)<(0.9869873001973207)) IN ()) WHERE ((((((t1.c41)<<(rt0.c0)), ((rt0.c2)<<(rt0.c2)), rt0.c1))=((rt1.c3, (('0.9445213054017286') BETWEEN (rt1.c3) AND (rt0.c0)), rt1.c3))));
SELECT SUM(count) FROM (SELECT (((((((t1.c41)<<(rt0.c0)), ((rt0.c2)<<(rt0.c2)), rt0.c1))=((rt1.c3, (('0.9445213054017286') BETWEEN (rt1.c3) AND (rt0.c0)), rt1.c3)))) IS TRUE)  as count FROM t1, rt1 FULL OUTER JOIN rt0 ON (((rt0.c0)<(0.9869873001973207)) IN ()));
SELECT ALL COUNT(*) FROM t1, rt1 FULL OUTER JOIN rt0 ON (((rt0.c0)<(0.9869873001973207)) IN ()) WHERE ((((((t1.c41)<<(rt0.c0)), ((rt0.c2)<<(rt0.c2)), rt0.c1))=((rt1.c3, (('0.9445213054017286') BETWEEN (rt1.c3) AND (rt0.c0)), rt1.c3))));
SELECT ALL * FROM rt1, rt0, t1 WHERE (CAST((((rt0.c2, t1.c41, rt1.c1))>=((rt0.c1, rt1.c0, x'00bc'))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2, t1.c41, rt1.c1))>=((rt0.c1, rt1.c0, x'00bc'))) AS BLOB)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE (CAST((((rt0.c2, t1.c41, rt1.c1))>=((rt0.c1, rt1.c0, x'00bc'))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2, t1.c41, rt1.c1))>=((rt0.c1, rt1.c0, x'00bc'))) AS BLOB)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE (CAST((((rt0.c2, t1.c41, rt1.c1))>=((rt0.c1, rt1.c0, x'00bc'))) AS BLOB));
SELECT * FROM rt0, t1, rt1 WHERE (CASE CAST(rt1.c4 AS INTEGER)  WHEN ((rt1.c4)>(rt1.c1)) THEN ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) ELSE ((rt0.c1) ISNULL) END) ORDER BY CAST(TIME(rt1.c3, rt0.c1, rt0.c2, rt0.c0, rt1.c2) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c4 AS INTEGER)  WHEN ((rt1.c4)>(rt1.c1)) THEN ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) ELSE ((rt0.c1) ISNULL) END) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY CAST(TIME(rt1.c3, rt0.c1, rt0.c2, rt0.c0, rt1.c2) AS TEXT));
SELECT * FROM rt0, t1, rt1 WHERE (CASE CAST(rt1.c4 AS INTEGER)  WHEN ((rt1.c4)>(rt1.c1)) THEN ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) ELSE ((rt0.c1) ISNULL) END) ORDER BY CAST(TIME(rt1.c3, rt0.c1, rt0.c2, rt0.c0, rt1.c2) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c4 AS INTEGER)  WHEN ((rt1.c4)>(rt1.c1)) THEN ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) ELSE ((rt0.c1) ISNULL) END) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY CAST(TIME(rt1.c3, rt0.c1, rt0.c2, rt0.c0, rt1.c2) AS TEXT));
SELECT * FROM rt0, t1, rt1 WHERE (CASE CAST(rt1.c4 AS INTEGER)  WHEN ((rt1.c4)>(rt1.c1)) THEN ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) ELSE ((rt0.c1) ISNULL) END) ORDER BY CAST(TIME(rt1.c3, rt0.c1, rt0.c2, rt0.c0, rt1.c2) AS TEXT);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c41) ISNULL)) NOT BETWEEN (((((((((t1.c41)AND(NULL)))OR(t1.c41)))AND(t1.c41)))AND(t1.c41))) AND (((t1.c41)IS(t1.c41)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c41) ISNULL)) NOT BETWEEN (((((((((t1.c41)AND(NULL)))OR(t1.c41)))AND(t1.c41)))AND(t1.c41))) AND (((t1.c41)IS(t1.c41))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c41) ISNULL)) NOT BETWEEN (((((((((t1.c41)AND(NULL)))OR(t1.c41)))AND(t1.c41)))AND(t1.c41))) AND (((t1.c41)IS(t1.c41)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c41) ISNULL)) NOT BETWEEN (((((((((t1.c41)AND(NULL)))OR(t1.c41)))AND(t1.c41)))AND(t1.c41))) AND (((t1.c41)IS(t1.c41))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c41) ISNULL)) NOT BETWEEN (((((((((t1.c41)AND(NULL)))OR(t1.c41)))AND(t1.c41)))AND(t1.c41))) AND (((t1.c41)IS(t1.c41)))));
SELECT ALL * FROM t1 NATURAL JOIN rt0 WHERE ((NOT (NULLIF(t1.c41, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULLIF(t1.c41, rt0.c1)))) IS TRUE)  as count FROM t1 NATURAL JOIN rt0);
SELECT ALL * FROM t1 NATURAL JOIN rt0 WHERE ((NOT (NULLIF(t1.c41, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULLIF(t1.c41, rt0.c1)))) IS TRUE)  as count FROM t1 NATURAL JOIN rt0);
SELECT ALL * FROM t1 NATURAL JOIN rt0 WHERE ((NOT (NULLIF(t1.c41, rt0.c1))));
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (rt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (rt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (rt0.c1 COLLATE RTRIM);
SELECT * FROM t1 WHERE (t1.c41) ORDER BY ((((UPPER(t1.c41))AND((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, '', t1.c41))))))OR(((t1.c41) BETWEEN (t1.c41) AND (t1.c41))));
SELECT SUM(count) FROM (SELECT ALL ((t1.c41) IS TRUE)  as count FROM t1 ORDER BY ((((UPPER(t1.c41))AND((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, '', t1.c41))))))OR(((t1.c41) BETWEEN (t1.c41) AND (t1.c41)))));
SELECT * FROM t1 WHERE (t1.c41) ORDER BY ((((UPPER(t1.c41))AND((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, '', t1.c41))))))OR(((t1.c41) BETWEEN (t1.c41) AND (t1.c41))));
SELECT SUM(count) FROM (SELECT ALL ((t1.c41) IS TRUE)  as count FROM t1 ORDER BY ((((UPPER(t1.c41))AND((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, '', t1.c41))))))OR(((t1.c41) BETWEEN (t1.c41) AND (t1.c41)))));
SELECT * FROM t1 WHERE (t1.c41) ORDER BY ((((UPPER(t1.c41))AND((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, '', t1.c41))))))OR(((t1.c41) BETWEEN (t1.c41) AND (t1.c41))));
SELECT ALL * FROM rt1 WHERE ((((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((0.32065757478264567))))OR(LIKELIHOOD(rt1.c2, 0.5373346805101473))))AND(rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((0.32065757478264567))))OR(LIKELIHOOD(rt1.c2, 0.5373346805101473))))AND(rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((0.32065757478264567))))OR(LIKELIHOOD(rt1.c2, 0.5373346805101473))))AND(rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((0.32065757478264567))))OR(LIKELIHOOD(rt1.c2, 0.5373346805101473))))AND(rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((0.32065757478264567))))OR(LIKELIHOOD(rt1.c2, 0.5373346805101473))))AND(rt1.c4 COLLATE NOCASE)));
SELECT * FROM t1, rt1 FULL OUTER JOIN rt0 ON ((((((rt1.c2)AND(rt0.c1)))AND(rt1.c3)))*(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) WHERE (t1.c41);
SELECT SUM(count) FROM (SELECT ALL ((t1.c41) IS TRUE)  as count FROM t1, rt1 FULL OUTER JOIN rt0 ON ((((((rt1.c2)AND(rt0.c1)))AND(rt1.c3)))*(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT * FROM t1, rt1 FULL OUTER JOIN rt0 ON ((((((rt1.c2)AND(rt0.c1)))AND(rt1.c3)))*(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) WHERE (t1.c41);
SELECT SUM(count) FROM (SELECT ALL ((t1.c41) IS TRUE)  as count FROM t1, rt1 FULL OUTER JOIN rt0 ON ((((((rt1.c2)AND(rt0.c1)))AND(rt1.c3)))*(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT * FROM t1, rt1 FULL OUTER JOIN rt0 ON ((((((rt1.c2)AND(rt0.c1)))AND(rt1.c3)))*(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) WHERE (t1.c41);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c41))<=((t1.c41))))<>(((t1.c41) IS TRUE)))) ORDER BY (~ (t1.c41)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c41))<=((t1.c41))))<>(((t1.c41) IS TRUE)))) IS TRUE)  as count FROM t1 ORDER BY (~ (t1.c41)) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c41))<=((t1.c41))))<>(((t1.c41) IS TRUE)))) ORDER BY (~ (t1.c41)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c41))<=((t1.c41))))<>(((t1.c41) IS TRUE)))) IS TRUE)  as count FROM t1 ORDER BY (~ (t1.c41)) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c41))<=((t1.c41))))<>(((t1.c41) IS TRUE)))) ORDER BY (~ (t1.c41)) DESC;
SELECT ALL * FROM rt1, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE (NULL);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (rt0.c1) ORDER BY (~ (((((((((rt0.c1)AND(rt1.c3)))AND(rt0.c1)))AND(rt1.c0)))OR(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY (~ (((((((((rt0.c1)AND(rt1.c3)))AND(rt0.c1)))AND(rt1.c0)))OR(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (rt0.c1) ORDER BY (~ (((((((((rt0.c1)AND(rt1.c3)))AND(rt0.c1)))AND(rt1.c0)))OR(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY (~ (((((((((rt0.c1)AND(rt1.c3)))AND(rt0.c1)))AND(rt1.c0)))OR(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (rt0.c1) ORDER BY (~ (((((((((rt0.c1)AND(rt1.c3)))AND(rt0.c1)))AND(rt1.c0)))OR(rt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (((((rt1.c4) BETWEEN (rt1.c3) AND (rt0.c1))) BETWEEN ((rt1.c0 IN (rt1.c1))) AND (CAST(t1.c41 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) BETWEEN (rt1.c3) AND (rt0.c1))) BETWEEN ((rt1.c0 IN (rt1.c1))) AND (CAST(t1.c41 AS TEXT)))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (((((rt1.c4) BETWEEN (rt1.c3) AND (rt0.c1))) BETWEEN ((rt1.c0 IN (rt1.c1))) AND (CAST(t1.c41 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) BETWEEN (rt1.c3) AND (rt0.c1))) BETWEEN ((rt1.c0 IN (rt1.c1))) AND (CAST(t1.c41 AS TEXT)))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (((((rt1.c4) BETWEEN (rt1.c3) AND (rt0.c1))) BETWEEN ((rt1.c0 IN (rt1.c1))) AND (CAST(t1.c41 AS TEXT))));
SELECT ALL * FROM rt1, t1 WHERE (t1.c41);
SELECT SUM(count) FROM (SELECT ALL ((t1.c41) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE (t1.c41);
SELECT SUM(count) FROM (SELECT ALL ((t1.c41) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE (t1.c41);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((- (t1.c41)))AND(CAST(t1.c41 AS INTEGER))))OR(CAST(rt0.c0 AS TEXT)))) ORDER BY (((rt0.c2 IN (rt0.c2)))AND(CAST(rt0.c0 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (t1.c41)))AND(CAST(t1.c41 AS INTEGER))))OR(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c2 IN (rt0.c2)))AND(CAST(rt0.c0 AS TEXT))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((- (t1.c41)))AND(CAST(t1.c41 AS INTEGER))))OR(CAST(rt0.c0 AS TEXT)))) ORDER BY (((rt0.c2 IN (rt0.c2)))AND(CAST(rt0.c0 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (t1.c41)))AND(CAST(t1.c41 AS INTEGER))))OR(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c2 IN (rt0.c2)))AND(CAST(rt0.c0 AS TEXT))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((- (t1.c41)))AND(CAST(t1.c41 AS INTEGER))))OR(CAST(rt0.c0 AS TEXT)))) ORDER BY (((rt0.c2 IN (rt0.c2)))AND(CAST(rt0.c0 AS TEXT))) ASC  NULLS LAST;
SELECT * FROM rt0, rt1 FULL OUTER JOIN t1 ON rt0.c1 WHERE (((CAST(rt1.c1 AS NUMERIC))GLOB((('*(') NOT BETWEEN (rt0.c0) AND (x''))))) ORDER BY ((((((rt1.c1)LIKE(rt0.c1)))AND(rt1.c0 COLLATE RTRIM)))AND(((rt1.c0)IS NOT(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS NUMERIC))GLOB((('*(') NOT BETWEEN (rt0.c0) AND (x''))))) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN t1 ON rt0.c1 ORDER BY ((((((rt1.c1)LIKE(rt0.c1)))AND(rt1.c0 COLLATE RTRIM)))AND(((rt1.c0)IS NOT(rt1.c0)))) ASC  NULLS LAST);
SELECT * FROM rt0, rt1 FULL OUTER JOIN t1 ON rt0.c1 WHERE (((CAST(rt1.c1 AS NUMERIC))GLOB((('*(') NOT BETWEEN (rt0.c0) AND (x''))))) ORDER BY ((((((rt1.c1)LIKE(rt0.c1)))AND(rt1.c0 COLLATE RTRIM)))AND(((rt1.c0)IS NOT(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS NUMERIC))GLOB((('*(') NOT BETWEEN (rt0.c0) AND (x''))))) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN t1 ON rt0.c1 ORDER BY ((((((rt1.c1)LIKE(rt0.c1)))AND(rt1.c0 COLLATE RTRIM)))AND(((rt1.c0)IS NOT(rt1.c0)))) ASC  NULLS LAST);
SELECT * FROM rt0, rt1 FULL OUTER JOIN t1 ON rt0.c1 WHERE (((CAST(rt1.c1 AS NUMERIC))GLOB((('*(') NOT BETWEEN (rt0.c0) AND (x''))))) ORDER BY ((((((rt1.c1)LIKE(rt0.c1)))AND(rt1.c0 COLLATE RTRIM)))AND(((rt1.c0)IS NOT(rt1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON (- (((rt0.c0) NOT NULL))) WHERE ((- (ABS(rt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (ABS(rt1.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (- (((rt0.c0) NOT NULL))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON (- (((rt0.c0) NOT NULL))) WHERE ((- (ABS(rt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (ABS(rt1.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (- (((rt0.c0) NOT NULL))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON (- (((rt0.c0) NOT NULL))) WHERE ((- (ABS(rt1.c0))));
SELECT * FROM t1, rt0, rt1 WHERE ((((rt1.c3)>(rt1.c0)) IN ())) ORDER BY (NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt1.c4 ELSE '-1893933290' END));
SELECT SUM(count) FROM (SELECT (((((rt1.c3)>(rt1.c0)) IN ())) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY (NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt1.c4 ELSE '-1893933290' END)));
SELECT * FROM t1, rt0, rt1 WHERE ((((rt1.c3)>(rt1.c0)) IN ())) ORDER BY (NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt1.c4 ELSE '-1893933290' END));
SELECT SUM(count) FROM (SELECT (((((rt1.c3)>(rt1.c0)) IN ())) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY (NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt1.c4 ELSE '-1893933290' END)));
SELECT * FROM t1, rt0, rt1 WHERE ((((rt1.c3)>(rt1.c0)) IN ())) ORDER BY (NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt1.c4 ELSE '-1893933290' END));
SELECT COUNT(*) FROM t1, rt1 FULL OUTER JOIN rt0 ON ((t1.c41) NOT BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE NOCASE WHERE (CAST(rt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY CASE WHEN NULL THEN ((rt1.c1) IS TRUE) WHEN (+ (rt1.c4)) THEN ((((rt0.c1)AND(t1.c41)))OR(rt1.c3)) WHEN CAST(rt1.c3 AS NUMERIC) THEN '974690881' WHEN (- (rt1.c3)) THEN (rt1.c1 IN ()) WHEN NULL THEN rt0.c2 WHEN '-1257338959' COLLATE NOCASE THEN ((rt1.c3)>=(rt0.c0)) WHEN (('1429343660') IS TRUE) THEN (~ (0X6632694)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt1 FULL OUTER JOIN rt0 ON ((t1.c41) NOT BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE NOCASE ORDER BY CASE WHEN NULL THEN ((rt1.c1) IS TRUE) WHEN (+ (rt1.c4)) THEN ((((rt0.c1)AND(t1.c41)))OR(rt1.c3)) WHEN CAST(rt1.c3 AS NUMERIC) THEN '974690881' WHEN (- (rt1.c3)) THEN (rt1.c1 IN ()) WHEN NULL THEN rt0.c2 WHEN '-1257338959' COLLATE NOCASE THEN ((rt1.c3)>=(rt0.c0)) WHEN (('1429343660') IS TRUE) THEN (~ (0x6632694)) END  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt1 FULL OUTER JOIN rt0 ON ((t1.c41) NOT BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE NOCASE WHERE (CAST(rt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY CASE WHEN NULL THEN ((rt1.c1) IS TRUE) WHEN (+ (rt1.c4)) THEN ((((rt0.c1)AND(t1.c41)))OR(rt1.c3)) WHEN CAST(rt1.c3 AS NUMERIC) THEN '974690881' WHEN (- (rt1.c3)) THEN (rt1.c1 IN ()) WHEN NULL THEN rt0.c2 WHEN '-1257338959' COLLATE NOCASE THEN ((rt1.c3)>=(rt0.c0)) WHEN (('1429343660') IS TRUE) THEN (~ (0X6632694)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt1 FULL OUTER JOIN rt0 ON ((t1.c41) NOT BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE NOCASE ORDER BY CASE WHEN NULL THEN ((rt1.c1) IS TRUE) WHEN (+ (rt1.c4)) THEN ((((rt0.c1)AND(t1.c41)))OR(rt1.c3)) WHEN CAST(rt1.c3 AS NUMERIC) THEN '974690881' WHEN (- (rt1.c3)) THEN (rt1.c1 IN ()) WHEN NULL THEN rt0.c2 WHEN '-1257338959' COLLATE NOCASE THEN ((rt1.c3)>=(rt0.c0)) WHEN (('1429343660') IS TRUE) THEN (~ (0x6632694)) END  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt1 FULL OUTER JOIN rt0 ON ((t1.c41) NOT BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE NOCASE WHERE (CAST(rt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY CASE WHEN NULL THEN ((rt1.c1) IS TRUE) WHEN (+ (rt1.c4)) THEN ((((rt0.c1)AND(t1.c41)))OR(rt1.c3)) WHEN CAST(rt1.c3 AS NUMERIC) THEN '974690881' WHEN (- (rt1.c3)) THEN (rt1.c1 IN ()) WHEN NULL THEN rt0.c2 WHEN '-1257338959' COLLATE NOCASE THEN ((rt1.c3)>=(rt0.c0)) WHEN (('1429343660') IS TRUE) THEN (~ (0X6632694)) END  NULLS FIRST;
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1))) BETWEEN (STRFTIME(rt0.c0, rt1.c1, rt1.c1, rt1.c4, rt1.c0)) AND ('1004663386'))) ORDER BY TRIM((((rt1.c2, rt1.c2, rt0.c0, rt1.c3, rt1.c3)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2, rt1.c0, rt0.c0)) AND ((rt1.c0, rt1.c2, rt1.c0, rt0.c2, rt1.c2))), CAST(rt1.c3 AS NUMERIC)) ASC  NULLS LAST, ((((((((((((((rt1.c0)OR(rt0.c2)))AND(rt1.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt1.c2)))OR(rt0.c1))) BETWEEN ((((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt0.c1)))) AND ((((rt1.c1))>((rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1))) BETWEEN (STRFTIME(rt0.c0, rt1.c1, rt1.c1, rt1.c4, rt1.c0)) AND ('1004663386'))) IS TRUE)  as count FROM rt1, rt0 ORDER BY TRIM((((rt1.c2, rt1.c2, rt0.c0, rt1.c3, rt1.c3)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2, rt1.c0, rt0.c0)) AND ((rt1.c0, rt1.c2, rt1.c0, rt0.c2, rt1.c2))), CAST(rt1.c3 AS NUMERIC)) ASC  NULLS LAST, ((((((((((((((rt1.c0)OR(rt0.c2)))AND(rt1.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt1.c2)))OR(rt0.c1))) BETWEEN ((((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt0.c1)))) AND ((((rt1.c1))>((rt1.c3))))));
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1))) BETWEEN (STRFTIME(rt0.c0, rt1.c1, rt1.c1, rt1.c4, rt1.c0)) AND ('1004663386'))) ORDER BY TRIM((((rt1.c2, rt1.c2, rt0.c0, rt1.c3, rt1.c3)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2, rt1.c0, rt0.c0)) AND ((rt1.c0, rt1.c2, rt1.c0, rt0.c2, rt1.c2))), CAST(rt1.c3 AS NUMERIC)) ASC  NULLS LAST, ((((((((((((((rt1.c0)OR(rt0.c2)))AND(rt1.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt1.c2)))OR(rt0.c1))) BETWEEN ((((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt0.c1)))) AND ((((rt1.c1))>((rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1))) BETWEEN (STRFTIME(rt0.c0, rt1.c1, rt1.c1, rt1.c4, rt1.c0)) AND ('1004663386'))) IS TRUE)  as count FROM rt1, rt0 ORDER BY TRIM((((rt1.c2, rt1.c2, rt0.c0, rt1.c3, rt1.c3)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2, rt1.c0, rt0.c0)) AND ((rt1.c0, rt1.c2, rt1.c0, rt0.c2, rt1.c2))), CAST(rt1.c3 AS NUMERIC)) ASC  NULLS LAST, ((((((((((((((rt1.c0)OR(rt0.c2)))AND(rt1.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt1.c2)))OR(rt0.c1))) BETWEEN ((((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt0.c1)))) AND ((((rt1.c1))>((rt1.c3))))));
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1))) BETWEEN (STRFTIME(rt0.c0, rt1.c1, rt1.c1, rt1.c4, rt1.c0)) AND ('1004663386'))) ORDER BY TRIM((((rt1.c2, rt1.c2, rt0.c0, rt1.c3, rt1.c3)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2, rt1.c0, rt0.c0)) AND ((rt1.c0, rt1.c2, rt1.c0, rt0.c2, rt1.c2))), CAST(rt1.c3 AS NUMERIC)) ASC  NULLS LAST, ((((((((((((((rt1.c0)OR(rt0.c2)))AND(rt1.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt1.c2)))OR(rt0.c1))) BETWEEN ((((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt0.c1)))) AND ((((rt1.c1))>((rt1.c3)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c1))<((rt0.c0))))) AND ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))))) ORDER BY CAST(((rt0.c0) IS FALSE) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((((rt0.c1))<((rt0.c0))))) AND ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) IS FALSE) AS NUMERIC) ASC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c1))<((rt0.c0))))) AND ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))))) ORDER BY CAST(((rt0.c0) IS FALSE) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((((rt0.c1))<((rt0.c0))))) AND ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) IS FALSE) AS NUMERIC) ASC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c1))<((rt0.c0))))) AND ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))))) ORDER BY CAST(((rt0.c0) IS FALSE) AS NUMERIC) ASC;
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt0.c0) ORDER BY (- ((+ (rt0.c2)))) ASC, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, rt1 ORDER BY (- ((+ (rt0.c2)))) ASC, rt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt0.c0) ORDER BY (- ((+ (rt0.c2)))) ASC, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, rt1 ORDER BY (- ((+ (rt0.c2)))) ASC, rt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt0.c0) ORDER BY (- ((+ (rt0.c2)))) ASC, rt0.c0  NULLS FIRST;
SELECT ALL * FROM rt1, t1, rt0 WHERE ((((rt0.c0, rt1.c0, x'a889')) BETWEEN ((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)), rt0.c2 COLLATE NOCASE, rt1.c4 COLLATE NOCASE)) AND ((((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4)), NULL, ((rt1.c0)OR(rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt1.c0, x'a889')) BETWEEN ((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)), rt0.c2 COLLATE NOCASE, rt1.c4 COLLATE NOCASE)) AND ((((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4)), NULL, ((rt1.c0)OR(rt1.c1)))))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL * FROM rt1, t1, rt0 WHERE ((((rt0.c0, rt1.c0, x'a889')) BETWEEN ((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)), rt0.c2 COLLATE NOCASE, rt1.c4 COLLATE NOCASE)) AND ((((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4)), NULL, ((rt1.c0)OR(rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt1.c0, x'a889')) BETWEEN ((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)), rt0.c2 COLLATE NOCASE, rt1.c4 COLLATE NOCASE)) AND ((((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4)), NULL, ((rt1.c0)OR(rt1.c1)))))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL * FROM rt1, t1, rt0 WHERE ((((rt0.c0, rt1.c0, x'a889')) BETWEEN ((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)), rt0.c2 COLLATE NOCASE, rt1.c4 COLLATE NOCASE)) AND ((((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4)), NULL, ((rt1.c0)OR(rt1.c1))))));
SELECT ALL * FROM rt1 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) IN ())) ORDER BY ((((((((((rt1.c3) NOTNULL))OR(HEX(''))))OR(rt1.c1 COLLATE BINARY)))OR((- (rt1.c1)))))AND(((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c2))))  NULLS LAST, CAST(rt1.c3 AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c3) NOTNULL))OR(HEX(''))))OR(rt1.c1 COLLATE BINARY)))OR((- (rt1.c1)))))AND(((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c2))))  NULLS LAST, CAST(rt1.c3 AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) IN ())) ORDER BY ((((((((((rt1.c3) NOTNULL))OR(HEX(''))))OR(rt1.c1 COLLATE BINARY)))OR((- (rt1.c1)))))AND(((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c2))))  NULLS LAST, CAST(rt1.c3 AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c3) NOTNULL))OR(HEX(''))))OR(rt1.c1 COLLATE BINARY)))OR((- (rt1.c1)))))AND(((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c2))))  NULLS LAST, CAST(rt1.c3 AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) IN ())) ORDER BY ((((((((((rt1.c3) NOTNULL))OR(HEX(''))))OR(rt1.c1 COLLATE BINARY)))OR((- (rt1.c1)))))AND(((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c2))))  NULLS LAST, CAST(rt1.c3 AS TEXT)  NULLS FIRST;
SELECT * FROM rt1 WHERE (((COALESCE(rt1.c2, rt1.c3, rt1.c1, rt1.c2))AND(rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(rt1.c2, rt1.c3, rt1.c1, rt1.c2))AND(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((COALESCE(rt1.c2, rt1.c3, rt1.c1, rt1.c2))AND(rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(rt1.c2, rt1.c3, rt1.c1, rt1.c2))AND(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((COALESCE(rt1.c2, rt1.c3, rt1.c1, rt1.c2))AND(rt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE ((- (((rt0.c0)>=(1.104774804E9))))) ORDER BY ((((((((rt0.c1)AND(t1.c41)))OR(rt1.c2)))AND((rt1.c0 IN (rt1.c3, rt1.c4)))))OR(((((rt0.c2)OR(rt1.c0)))AND(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)>=(1.104774804E9))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((((((((rt0.c1)AND(t1.c41)))OR(rt1.c2)))AND((rt1.c0 IN (rt1.c3, rt1.c4)))))OR(((((rt0.c2)OR(rt1.c0)))AND(rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE ((- (((rt0.c0)>=(1.104774804E9))))) ORDER BY ((((((((rt0.c1)AND(t1.c41)))OR(rt1.c2)))AND((rt1.c0 IN (rt1.c3, rt1.c4)))))OR(((((rt0.c2)OR(rt1.c0)))AND(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)>=(1.104774804E9))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((((((((rt0.c1)AND(t1.c41)))OR(rt1.c2)))AND((rt1.c0 IN (rt1.c3, rt1.c4)))))OR(((((rt0.c2)OR(rt1.c0)))AND(rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE ((- (((rt0.c0)>=(1.104774804E9))))) ORDER BY ((((((((rt0.c1)AND(t1.c41)))OR(rt1.c2)))AND((rt1.c0 IN (rt1.c3, rt1.c4)))))OR(((((rt0.c2)OR(rt1.c0)))AND(rt0.c0)))) DESC;
SELECT COUNT(*) FROM rt0, t1 WHERE (((((((rt0.c2)AND(t1.c41)))OR(((((rt0.c0)AND(x'0e6d')))AND(rt0.c2)))))AND(((rt0.c2)%(rt0.c2))))) ORDER BY NULL, ((((((rt0.c2)OR(NULL)))AND(rt0.c0)))>=((((rt0.c1))=((rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(t1.c41)))OR(((((rt0.c0)AND(x'0e6d')))AND(rt0.c2)))))AND(((rt0.c2)%(rt0.c2))))) IS TRUE)  as count FROM rt0, t1 ORDER BY NULL, ((((((rt0.c2)OR(NULL)))AND(rt0.c0)))>=((((rt0.c1))=((rt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((((rt0.c2)AND(t1.c41)))OR(((((rt0.c0)AND(x'0e6d')))AND(rt0.c2)))))AND(((rt0.c2)%(rt0.c2))))) ORDER BY NULL, ((((((rt0.c2)OR(NULL)))AND(rt0.c0)))>=((((rt0.c1))=((rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(t1.c41)))OR(((((rt0.c0)AND(x'0e6d')))AND(rt0.c2)))))AND(((rt0.c2)%(rt0.c2))))) IS TRUE)  as count FROM rt0, t1 ORDER BY NULL, ((((((rt0.c2)OR(NULL)))AND(rt0.c0)))>=((((rt0.c1))=((rt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((((rt0.c2)AND(t1.c41)))OR(((((rt0.c0)AND(x'0e6d')))AND(rt0.c2)))))AND(((rt0.c2)%(rt0.c2))))) ORDER BY NULL, ((((((rt0.c2)OR(NULL)))AND(rt0.c0)))>=((((rt0.c1))=((rt0.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((NULL) NOT BETWEEN (rt1.c3) AND (rt1.c2)))-(rt0.c1))) ORDER BY (((rt1.c4)) NOT BETWEEN ((rt0.c1)) AND (((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (rt1.c3) AND (rt1.c2)))-(rt0.c1))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c4)) NOT BETWEEN ((rt0.c1)) AND (((rt0.c0 IN ())))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((NULL) NOT BETWEEN (rt1.c3) AND (rt1.c2)))-(rt0.c1))) ORDER BY (((rt1.c4)) NOT BETWEEN ((rt0.c1)) AND (((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (rt1.c3) AND (rt1.c2)))-(rt0.c1))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c4)) NOT BETWEEN ((rt0.c1)) AND (((rt0.c0 IN ())))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((NULL) NOT BETWEEN (rt1.c3) AND (rt1.c2)))-(rt0.c1))) ORDER BY (((rt1.c4)) NOT BETWEEN ((rt0.c1)) AND (((rt0.c0 IN ()))));
SELECT ALL * FROM rt1, t1 WHERE ((((((rt1.c1))>((rt1.c1))))OR(t1.c41 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1))>((rt1.c1))))OR(t1.c41 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE ((((((rt1.c1))>((rt1.c1))))OR(t1.c41 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1))>((rt1.c1))))OR(t1.c41 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE ((((((rt1.c1))>((rt1.c1))))OR(t1.c41 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c3)AND(((((x'8469')OR(rt1.c1)))AND(rt1.c3)))))OR(CASE WHEN rt1.c3 THEN NULL ELSE rt1.c0 END)))OR(((rt1.c4) NOT NULL))))OR(rt1.c0 COLLATE NOCASE))) ORDER BY CASE WHEN CASE WHEN rt1.c0 THEN NULL END THEN ((rt1.c4)GLOB(rt1.c4)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c3)AND(((((x'8469')OR(rt1.c1)))AND(rt1.c3)))))OR(CASE WHEN rt1.c3 THEN NULL ELSE rt1.c0 END)))OR(((rt1.c4) NOT NULL))))OR(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CASE WHEN rt1.c0 THEN NULL END THEN ((rt1.c4)GLOB(rt1.c4)) END DESC);
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c3)AND(((((x'8469')OR(rt1.c1)))AND(rt1.c3)))))OR(CASE WHEN rt1.c3 THEN NULL ELSE rt1.c0 END)))OR(((rt1.c4) NOT NULL))))OR(rt1.c0 COLLATE NOCASE))) ORDER BY CASE WHEN CASE WHEN rt1.c0 THEN NULL END THEN ((rt1.c4)GLOB(rt1.c4)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c3)AND(((((x'8469')OR(rt1.c1)))AND(rt1.c3)))))OR(CASE WHEN rt1.c3 THEN NULL ELSE rt1.c0 END)))OR(((rt1.c4) NOT NULL))))OR(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CASE WHEN rt1.c0 THEN NULL END THEN ((rt1.c4)GLOB(rt1.c4)) END DESC);
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c3)AND(((((x'8469')OR(rt1.c1)))AND(rt1.c3)))))OR(CASE WHEN rt1.c3 THEN NULL ELSE rt1.c0 END)))OR(((rt1.c4) NOT NULL))))OR(rt1.c0 COLLATE NOCASE))) ORDER BY CASE WHEN CASE WHEN rt1.c0 THEN NULL END THEN ((rt1.c4)GLOB(rt1.c4)) END DESC;
SELECT ALL * FROM rt0, t1 WHERE ((((((rt0.c1 IN ()))OR(CASE rt0.c1  WHEN rt0.c0 THEN t1.c41 END)))AND((NOT (t1.c41))))) ORDER BY CASE ((41002009)%(rt0.c1))  WHEN rt0.c1 THEN LIKELY(rt0.c1) END  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((((t1.c41) IS TRUE))) AND ((NULL))) DESC  NULLS LAST, ((((NULL COLLATE NOCASE)OR(rt0.c0)))OR(rt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))OR(CASE rt0.c1  WHEN rt0.c0 THEN t1.c41 END)))AND((NOT (t1.c41))))) IS TRUE)  as count FROM rt0, t1 ORDER BY CASE ((41002009)%(rt0.c1))  WHEN rt0.c1 THEN LIKELY(rt0.c1) END  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((((t1.c41) IS TRUE))) AND ((NULL))) DESC  NULLS LAST, ((((NULL COLLATE NOCASE)OR(rt0.c0)))OR(rt0.c2 COLLATE NOCASE)) DESC);
SELECT ALL * FROM rt0, t1 WHERE ((((((rt0.c1 IN ()))OR(CASE rt0.c1  WHEN rt0.c0 THEN t1.c41 END)))AND((NOT (t1.c41))))) ORDER BY CASE ((41002009)%(rt0.c1))  WHEN rt0.c1 THEN LIKELY(rt0.c1) END  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((((t1.c41) IS TRUE))) AND ((NULL))) DESC  NULLS LAST, ((((NULL COLLATE NOCASE)OR(rt0.c0)))OR(rt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))OR(CASE rt0.c1  WHEN rt0.c0 THEN t1.c41 END)))AND((NOT (t1.c41))))) IS TRUE)  as count FROM rt0, t1 ORDER BY CASE ((41002009)%(rt0.c1))  WHEN rt0.c1 THEN LIKELY(rt0.c1) END  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((((t1.c41) IS TRUE))) AND ((NULL))) DESC  NULLS LAST, ((((NULL COLLATE NOCASE)OR(rt0.c0)))OR(rt0.c2 COLLATE NOCASE)) DESC);
SELECT ALL * FROM rt0, t1 WHERE ((((((rt0.c1 IN ()))OR(CASE rt0.c1  WHEN rt0.c0 THEN t1.c41 END)))AND((NOT (t1.c41))))) ORDER BY CASE ((41002009)%(rt0.c1))  WHEN rt0.c1 THEN LIKELY(rt0.c1) END  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((((t1.c41) IS TRUE))) AND ((NULL))) DESC  NULLS LAST, ((((NULL COLLATE NOCASE)OR(rt0.c0)))OR(rt0.c2 COLLATE NOCASE)) DESC;
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (((202236100)>(TRIM(rt1.c4)))) ORDER BY rt1.c2 COLLATE BINARY, ((CASE t1.c41  WHEN rt0.c2 THEN t1.c41 END) NOT BETWEEN ((((rt0.c0))==((rt1.c1)))) AND (((((rt1.c2)OR(rt1.c1)))AND(0.6804026431583298)))) DESC  NULLS FIRST, ((rt1.c4) BETWEEN (rt1.c4) AND (t1.c41)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((202236100)>(TRIM(rt1.c4)))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY rt1.c2 COLLATE BINARY, ((CASE t1.c41  WHEN rt0.c2 THEN t1.c41 END) NOT BETWEEN ((((rt0.c0))=((rt1.c1)))) AND (((((rt1.c2)OR(rt1.c1)))AND(0.6804026431583298)))) DESC  NULLS FIRST, ((rt1.c4) BETWEEN (rt1.c4) AND (t1.c41)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (((202236100)>(TRIM(rt1.c4)))) ORDER BY rt1.c2 COLLATE BINARY, ((CASE t1.c41  WHEN rt0.c2 THEN t1.c41 END) NOT BETWEEN ((((rt0.c0))==((rt1.c1)))) AND (((((rt1.c2)OR(rt1.c1)))AND(0.6804026431583298)))) DESC  NULLS FIRST, ((rt1.c4) BETWEEN (rt1.c4) AND (t1.c41)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((202236100)>(TRIM(rt1.c4)))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY rt1.c2 COLLATE BINARY, ((CASE t1.c41  WHEN rt0.c2 THEN t1.c41 END) NOT BETWEEN ((((rt0.c0))=((rt1.c1)))) AND (((((rt1.c2)OR(rt1.c1)))AND(0.6804026431583298)))) DESC  NULLS FIRST, ((rt1.c4) BETWEEN (rt1.c4) AND (t1.c41)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (((202236100)>(TRIM(rt1.c4)))) ORDER BY rt1.c2 COLLATE BINARY, ((CASE t1.c41  WHEN rt0.c2 THEN t1.c41 END) NOT BETWEEN ((((rt0.c0))==((rt1.c1)))) AND (((((rt1.c2)OR(rt1.c1)))AND(0.6804026431583298)))) DESC  NULLS FIRST, ((rt1.c4) BETWEEN (rt1.c4) AND (t1.c41)) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((~ (CAST(rt0.c2 AS INTEGER)))) ORDER BY ((NULLIF(rt0.c0, NULL))AND((rt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, t1 ORDER BY ((NULLIF(rt0.c0, NULL))AND((rt0.c1 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((~ (CAST(rt0.c2 AS INTEGER)))) ORDER BY ((NULLIF(rt0.c0, NULL))AND((rt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, t1 ORDER BY ((NULLIF(rt0.c0, NULL))AND((rt0.c1 IN ()))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((x'5735' IN (rt0.c2 COLLATE BINARY))) ORDER BY ((((rt0.c2) ISNULL))OR(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'5735' IN (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) ISNULL))OR(NULL))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((x'5735' IN (rt0.c2 COLLATE BINARY))) ORDER BY ((((rt0.c2) ISNULL))OR(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'5735' IN (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) ISNULL))OR(NULL))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((x'5735' IN (rt0.c2 COLLATE BINARY))) ORDER BY ((((rt0.c2) ISNULL))OR(NULL))  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE (((rt1.c1)>>(((rt1.c4) NOT NULL)))) ORDER BY ((((((x''))<=((rt1.c1))), CASE rt0.c0  WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c0 END, ((((rt1.c0)AND(rt0.c0)))OR(rt0.c0))))<>((((((((((rt1.c3)AND(NULL)))AND(rt1.c1)))OR(rt0.c1)))AND(rt1.c2)), ((((rt1.c3)AND(rt1.c4)))AND(rt1.c0)), rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)>>(((rt1.c4) NOT NULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((x''))<=((rt1.c1))), CASE rt0.c0  WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c0 END, ((((rt1.c0)AND(rt0.c0)))OR(rt0.c0))))!=((((((((((rt1.c3)AND(NULL)))AND(rt1.c1)))OR(rt0.c1)))AND(rt1.c2)), ((((rt1.c3)AND(rt1.c4)))AND(rt1.c0)), rt1.c3))));
SELECT * FROM rt0, rt1 WHERE (((rt1.c1)>>(((rt1.c4) NOT NULL)))) ORDER BY ((((((x''))<=((rt1.c1))), CASE rt0.c0  WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c0 END, ((((rt1.c0)AND(rt0.c0)))OR(rt0.c0))))<>((((((((((rt1.c3)AND(NULL)))AND(rt1.c1)))OR(rt0.c1)))AND(rt1.c2)), ((((rt1.c3)AND(rt1.c4)))AND(rt1.c0)), rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)>>(((rt1.c4) NOT NULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((x''))<=((rt1.c1))), CASE rt0.c0  WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c0 END, ((((rt1.c0)AND(rt0.c0)))OR(rt0.c0))))!=((((((((((rt1.c3)AND(NULL)))AND(rt1.c1)))OR(rt0.c1)))AND(rt1.c2)), ((((rt1.c3)AND(rt1.c4)))AND(rt1.c0)), rt1.c3))));
SELECT * FROM rt0, rt1 WHERE (((rt1.c1)>>(((rt1.c4) NOT NULL)))) ORDER BY ((((((x''))<=((rt1.c1))), CASE rt0.c0  WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c0 END, ((((rt1.c0)AND(rt0.c0)))OR(rt0.c0))))<>((((((((((rt1.c3)AND(NULL)))AND(rt1.c1)))OR(rt0.c1)))AND(rt1.c2)), ((((rt1.c3)AND(rt1.c4)))AND(rt1.c0)), rt1.c3)));
SELECT ALL * FROM rt1, t1 WHERE ((((((((((rt1.c2 IN ()))AND(((t1.c41)<=(rt1.c4)))))OR((+ (rt1.c0)))))AND(((rt1.c0)*(rt1.c4)))))AND((((rt1.c4, rt1.c1, rt1.c1, t1.c41, t1.c41))<=((rt1.c0, rt1.c0, t1.c41, t1.c41, t1.c41))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt1.c2 IN ()))AND(((t1.c41)<=(rt1.c4)))))OR((+ (rt1.c0)))))AND(((rt1.c0)*(rt1.c4)))))AND((((rt1.c4, rt1.c1, rt1.c1, t1.c41, t1.c41))<=((rt1.c0, rt1.c0, t1.c41, t1.c41, t1.c41)))))) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE ((((((((((rt1.c2 IN ()))AND(((t1.c41)<=(rt1.c4)))))OR((+ (rt1.c0)))))AND(((rt1.c0)*(rt1.c4)))))AND((((rt1.c4, rt1.c1, rt1.c1, t1.c41, t1.c41))<=((rt1.c0, rt1.c0, t1.c41, t1.c41, t1.c41))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt1.c2 IN ()))AND(((t1.c41)<=(rt1.c4)))))OR((+ (rt1.c0)))))AND(((rt1.c0)*(rt1.c4)))))AND((((rt1.c4, rt1.c1, rt1.c1, t1.c41, t1.c41))<=((rt1.c0, rt1.c0, t1.c41, t1.c41, t1.c41)))))) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE ((((((((((rt1.c2 IN ()))AND(((t1.c41)<=(rt1.c4)))))OR((+ (rt1.c0)))))AND(((rt1.c0)*(rt1.c4)))))AND((((rt1.c4, rt1.c1, rt1.c1, t1.c41, t1.c41))<=((rt1.c0, rt1.c0, t1.c41, t1.c41, t1.c41))))));
SELECT * FROM rt1, rt0, t1 WHERE (CAST(rt1.c1 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (CAST(rt1.c1 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (CAST(rt1.c1 COLLATE NOCASE AS NUMERIC));
SELECT * FROM t1 WHERE (CAST(((t1.c41)>>(t1.c41)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c41)>>(t1.c41)) AS BLOB)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c41)>>(t1.c41)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c41)>>(t1.c41)) AS BLOB)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c41)>>(t1.c41)) AS BLOB));
SELECT COUNT(*) FROM t1, rt1 WHERE (TYPEOF(DISTINCT (rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (rt1.c1 IN ()))) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1, rt1 WHERE (TYPEOF(DISTINCT (rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (rt1.c1 IN ()))) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1, rt1 WHERE (TYPEOF(DISTINCT (rt1.c1 IN ())));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((rt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((rt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((rt0.c0 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (((CAST(rt1.c4 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS REAL)) NOTNULL)) IS TRUE)  as count FROM t1, rt0 NOT INDEXED, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (((CAST(rt1.c4 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS REAL)) NOTNULL)) IS TRUE)  as count FROM t1, rt0 NOT INDEXED, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (((CAST(rt1.c4 AS REAL)) NOTNULL));
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (x'')))-(json_extract(rt1.c4, rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c0) AND (x'')))-(json_extract(rt1.c4, rt1.c4)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (x'')))-(json_extract(rt1.c4, rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c0) AND (x'')))-(json_extract(rt1.c4, rt1.c4)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (x'')))-(json_extract(rt1.c4, rt1.c4))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON ((+ (rt0.c0)) IN (CAST(rt1.c1 AS BLOB))) FULL OUTER JOIN rt1 ON ((((t1.c41) NOTNULL)) NOT BETWEEN ((rt0.c2 IN ())) AND (CASE 0.9000581216068766  WHEN t1.c41 THEN rt1.c2 ELSE rt1.c2 END)) WHERE ('1270857691');
SELECT SUM(count) FROM (SELECT ALL (('1270857691') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((+ (rt0.c0)) IN (CAST(rt1.c1 AS BLOB))) FULL OUTER JOIN rt1 ON ((((t1.c41) NOTNULL)) NOT BETWEEN ((rt0.c2 IN ())) AND (CASE 0.9000581216068766  WHEN t1.c41 THEN rt1.c2 ELSE rt1.c2 END)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON ((+ (rt0.c0)) IN (CAST(rt1.c1 AS BLOB))) FULL OUTER JOIN rt1 ON ((((t1.c41) NOTNULL)) NOT BETWEEN ((rt0.c2 IN ())) AND (CASE 0.9000581216068766  WHEN t1.c41 THEN rt1.c2 ELSE rt1.c2 END)) WHERE ('1270857691');
SELECT SUM(count) FROM (SELECT ALL (('1270857691') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((+ (rt0.c0)) IN (CAST(rt1.c1 AS BLOB))) FULL OUTER JOIN rt1 ON ((((t1.c41) NOTNULL)) NOT BETWEEN ((rt0.c2 IN ())) AND (CASE 0.9000581216068766  WHEN t1.c41 THEN rt1.c2 ELSE rt1.c2 END)));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt1 ON CASE rt1.c0  WHEN ((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c4)) THEN LOWER(rt1.c2) WHEN (((rt1.c1, NULL, rt1.c4))!=((rt1.c4, rt1.c1, t1.c41))) THEN (+ (rt1.c1)) WHEN ((rt1.c0) NOTNULL) THEN TRIM(t1.c41, rt1.c2) ELSE (~ (rt1.c1)) END WHERE ((((rt1.c1)>>(rt1.c2)) IN (t1.c41 COLLATE BINARY, (rt1.c4 IN ()), (((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)>>(rt1.c2)) IN (t1.c41 COLLATE BINARY, (rt1.c4 IN ()), (((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c2)))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt1 ON CASE rt1.c0  WHEN ((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c4)) THEN LOWER(rt1.c2) WHEN (((rt1.c1, NULL, rt1.c4))<>((rt1.c4, rt1.c1, t1.c41))) THEN (+ (rt1.c1)) WHEN ((rt1.c0) NOTNULL) THEN TRIM(t1.c41, rt1.c2) ELSE (~ (rt1.c1)) END);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt1 ON CASE rt1.c0  WHEN ((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c4)) THEN LOWER(rt1.c2) WHEN (((rt1.c1, NULL, rt1.c4))!=((rt1.c4, rt1.c1, t1.c41))) THEN (+ (rt1.c1)) WHEN ((rt1.c0) NOTNULL) THEN TRIM(t1.c41, rt1.c2) ELSE (~ (rt1.c1)) END WHERE ((((rt1.c1)>>(rt1.c2)) IN (t1.c41 COLLATE BINARY, (rt1.c4 IN ()), (((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)>>(rt1.c2)) IN (t1.c41 COLLATE BINARY, (rt1.c4 IN ()), (((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c2)))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt1 ON CASE rt1.c0  WHEN ((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c4)) THEN LOWER(rt1.c2) WHEN (((rt1.c1, NULL, rt1.c4))<>((rt1.c4, rt1.c1, t1.c41))) THEN (+ (rt1.c1)) WHEN ((rt1.c0) NOTNULL) THEN TRIM(t1.c41, rt1.c2) ELSE (~ (rt1.c1)) END);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt1 ON CASE rt1.c0  WHEN ((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c4)) THEN LOWER(rt1.c2) WHEN (((rt1.c1, NULL, rt1.c4))!=((rt1.c4, rt1.c1, t1.c41))) THEN (+ (rt1.c1)) WHEN ((rt1.c0) NOTNULL) THEN TRIM(t1.c41, rt1.c2) ELSE (~ (rt1.c1)) END WHERE ((((rt1.c1)>>(rt1.c2)) IN (t1.c41 COLLATE BINARY, (rt1.c4 IN ()), (((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c2))))));
SELECT ALL * FROM t1, rt1, rt0 WHERE (((((rt0.c2)<<(rt0.c1))) NOTNULL)) ORDER BY CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<<(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM t1 NOT INDEXED, rt1, rt0 ORDER BY CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c0 END COLLATE NOCASE);
SELECT ALL * FROM t1, rt1, rt0 WHERE (((((rt0.c2)<<(rt0.c1))) NOTNULL)) ORDER BY CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<<(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM t1 NOT INDEXED, rt1, rt0 ORDER BY CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c0 END COLLATE NOCASE);
SELECT ALL * FROM t1, rt1, rt0 WHERE (((((rt0.c2)<<(rt0.c1))) NOTNULL)) ORDER BY CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c0 END COLLATE NOCASE;
SELECT ALL * FROM t1, rt1, rt0 WHERE (0.5889523210389472);
SELECT SUM(count) FROM (SELECT ((0.5889523210389472) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE (0.5889523210389472);
SELECT SUM(count) FROM (SELECT ((0.5889523210389472) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE (0.5889523210389472);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE ((- ((((716704235))!=((t1.c41)))))) ORDER BY 'ᇉ^+L'  NULLS LAST, CASE WHEN rt0.c0 THEN ((rt0.c0)>=(rt1.c4)) ELSE CASE WHEN rt1.c0 THEN rt1.c4 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((716704235))!=((t1.c41)))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY 'ᇉ^+L'  NULLS LAST, CASE WHEN rt0.c0 THEN ((rt0.c0)>=(rt1.c4)) ELSE CASE WHEN rt1.c0 THEN rt1.c4 END END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE ((- ((((716704235))!=((t1.c41)))))) ORDER BY 'ᇉ^+L'  NULLS LAST, CASE WHEN rt0.c0 THEN ((rt0.c0)>=(rt1.c4)) ELSE CASE WHEN rt1.c0 THEN rt1.c4 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((716704235))!=((t1.c41)))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY 'ᇉ^+L'  NULLS LAST, CASE WHEN rt0.c0 THEN ((rt0.c0)>=(rt1.c4)) ELSE CASE WHEN rt1.c0 THEN rt1.c4 END END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE ((- ((((716704235))!=((t1.c41)))))) ORDER BY 'ᇉ^+L'  NULLS LAST, CASE WHEN rt0.c0 THEN ((rt0.c0)>=(rt1.c4)) ELSE CASE WHEN rt1.c0 THEN rt1.c4 END END DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CASE WHEN ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41)) THEN '-2028227741' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41)) THEN '-2028227741' END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE WHEN ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41)) THEN '-2028227741' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41)) THEN '-2028227741' END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE WHEN ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41)) THEN '-2028227741' END);
SELECT ALL COUNT(*) FROM t1 WHERE (rtreenode(((t1.c41)>(t1.c41)), t1.c41));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(((t1.c41)>(t1.c41)), t1.c41)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (rtreenode(((t1.c41)>(t1.c41)), t1.c41));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(((t1.c41)>(t1.c41)), t1.c41)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (rtreenode(((t1.c41)>(t1.c41)), t1.c41));
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c1, 0.02016630292903976)) BETWEEN ((((rt0.c0)AND(rt0.c0)), (~ (rt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)), rt0.c2 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, 0.02016630292903976)) BETWEEN ((((rt0.c0)AND(rt0.c0)), (~ (rt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)), rt0.c2 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c1, 0.02016630292903976)) BETWEEN ((((rt0.c0)AND(rt0.c0)), (~ (rt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)), rt0.c2 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, 0.02016630292903976)) BETWEEN ((((rt0.c0)AND(rt0.c0)), (~ (rt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)), rt0.c2 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c1, 0.02016630292903976)) BETWEEN ((((rt0.c0)AND(rt0.c0)), (~ (rt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)), rt0.c2 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))));
SELECT ALL * FROM t1 FULL OUTER JOIN rt1 ON ((((rt0.c2)|(rt1.c4)))*(((((t1.c41)OR(rt0.c0)))OR(rt1.c3)))) CROSS JOIN rt0 ON CASE WHEN CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c4 END THEN ((0Xffffffffeb0b9afa) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CASE rt1.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c3 THEN t1.c41 WHEN rt0.c0 THEN rt1.c1 END THEN (t1.c41 IN (0xffffffffae9a4df4)) WHEN CAST(x'' AS BLOB) THEN ((((rt1.c3)AND('-517790710')))AND(rt1.c0)) END WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt1 ON ((((rt0.c2)|(rt1.c4)))*(((((t1.c41)OR(rt0.c0)))OR(rt1.c3)))) CROSS JOIN rt0 ON CASE WHEN CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c4 END THEN ((0Xffffffffeb0b9afa) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CASE rt1.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c3 THEN t1.c41 WHEN rt0.c0 THEN rt1.c1 END THEN (t1.c41 IN (0Xffffffffae9a4df4)) WHEN CAST(x'' AS BLOB) THEN ((((rt1.c3)AND('-517790710')))AND(rt1.c0)) END);
SELECT ALL * FROM t1 FULL OUTER JOIN rt1 ON ((((rt0.c2)|(rt1.c4)))*(((((t1.c41)OR(rt0.c0)))OR(rt1.c3)))) CROSS JOIN rt0 ON CASE WHEN CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c4 END THEN ((0Xffffffffeb0b9afa) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CASE rt1.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c3 THEN t1.c41 WHEN rt0.c0 THEN rt1.c1 END THEN (t1.c41 IN (0xffffffffae9a4df4)) WHEN CAST(x'' AS BLOB) THEN ((((rt1.c3)AND('-517790710')))AND(rt1.c0)) END WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt1 ON ((((rt0.c2)|(rt1.c4)))*(((((t1.c41)OR(rt0.c0)))OR(rt1.c3)))) CROSS JOIN rt0 ON CASE WHEN CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c4 END THEN ((0Xffffffffeb0b9afa) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CASE rt1.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c3 THEN t1.c41 WHEN rt0.c0 THEN rt1.c1 END THEN (t1.c41 IN (0Xffffffffae9a4df4)) WHEN CAST(x'' AS BLOB) THEN ((((rt1.c3)AND('-517790710')))AND(rt1.c0)) END);
SELECT ALL * FROM rt1, t1 WHERE (CASE rt1.c2  WHEN t1.c41 THEN rt1.c0 ELSE rt1.c4 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2  WHEN t1.c41 THEN rt1.c0 ELSE rt1.c4 END COLLATE BINARY) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE (CASE rt1.c2  WHEN t1.c41 THEN rt1.c0 ELSE rt1.c4 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2  WHEN t1.c41 THEN rt1.c0 ELSE rt1.c4 END COLLATE BINARY) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE (CASE rt1.c2  WHEN t1.c41 THEN rt1.c0 ELSE rt1.c4 END COLLATE BINARY);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c0, rt0.c0, t1.c41)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND (('Wr', t1.c41, rt0.c1)))) IS TRUE) WHERE ((((((x'') BETWEEN (rt0.c1) AND (rt0.c1))))<>((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((((x'') BETWEEN (rt0.c1) AND (rt0.c1))))<>((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c0, rt0.c0, t1.c41)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND (('Wr', t1.c41, rt0.c1)))) IS TRUE));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c0, rt0.c0, t1.c41)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND (('Wr', t1.c41, rt0.c1)))) IS TRUE) WHERE ((((((x'') BETWEEN (rt0.c1) AND (rt0.c1))))<>((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((((x'') BETWEEN (rt0.c1) AND (rt0.c1))))<>((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c0, rt0.c0, t1.c41)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND (('Wr', t1.c41, rt0.c1)))) IS TRUE));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c0, rt0.c0, t1.c41)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND (('Wr', t1.c41, rt0.c1)))) IS TRUE) WHERE ((((((x'') BETWEEN (rt0.c1) AND (rt0.c1))))<>((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END))));
SELECT ALL * FROM t1, rt0, rt1 WHERE (((rt1.c0 COLLATE RTRIM)>>(CAST(rt1.c4 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE RTRIM)>>(CAST(rt1.c4 AS INTEGER)))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE (((rt1.c0 COLLATE RTRIM)>>(CAST(rt1.c4 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE RTRIM)>>(CAST(rt1.c4 AS INTEGER)))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE (((rt1.c0 COLLATE RTRIM)>>(CAST(rt1.c4 AS INTEGER))));
SELECT COUNT(*) FROM t1, rt1 WHERE (CAST(rt1.c4 COLLATE BINARY AS INTEGER)) ORDER BY CASE CAST(rt1.c1 AS REAL)  WHEN ((0.8304115999608739)<=(rt1.c0)) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((t1.c41))) END DESC  NULLS LAST, 0.013824812100592831 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c4 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM t1, rt1 ORDER BY CASE CAST(rt1.c1 AS REAL)  WHEN ((0.8304115999608739)<=(rt1.c0)) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((t1.c41))) END DESC  NULLS LAST, 0.013824812100592831 DESC);
SELECT COUNT(*) FROM t1, rt1 WHERE (CAST(rt1.c4 COLLATE BINARY AS INTEGER)) ORDER BY CASE CAST(rt1.c1 AS REAL)  WHEN ((0.8304115999608739)<=(rt1.c0)) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((t1.c41))) END DESC  NULLS LAST, 0.013824812100592831 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c4 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM t1, rt1 ORDER BY CASE CAST(rt1.c1 AS REAL)  WHEN ((0.8304115999608739)<=(rt1.c0)) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((t1.c41))) END DESC  NULLS LAST, 0.013824812100592831 DESC);
SELECT COUNT(*) FROM t1, rt1 WHERE (CAST(rt1.c4 COLLATE BINARY AS INTEGER)) ORDER BY CASE CAST(rt1.c1 AS REAL)  WHEN ((0.8304115999608739)<=(rt1.c0)) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((t1.c41))) END DESC  NULLS LAST, 0.013824812100592831 DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c1)IS(rt0.c1)))))) ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c1)IS(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c1)IS(rt0.c1)))))) ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c1)IS(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c1)IS(rt0.c1)))))) ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((- (t1.c41))) ORDER BY (- (((t1.c41)&(t1.c41))));
SELECT SUM(count) FROM (SELECT (((- (t1.c41))) IS TRUE)  as count FROM t1 ORDER BY (- (((t1.c41)&(t1.c41)))));
SELECT COUNT(*) FROM t1 WHERE ((- (t1.c41))) ORDER BY (- (((t1.c41)&(t1.c41))));
SELECT SUM(count) FROM (SELECT (((- (t1.c41))) IS TRUE)  as count FROM t1 ORDER BY (- (((t1.c41)&(t1.c41)))));
SELECT COUNT(*) FROM t1 WHERE ((- (t1.c41))) ORDER BY (- (((t1.c41)&(t1.c41))));
SELECT * FROM t1, rt1 WHERE (((((rt1.c3) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (((((rt1.c3) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (((((rt1.c3) IS TRUE)) IS FALSE));
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE ((rt1.c1 IN ()));
SELECT * FROM t1, rt0, rt1 WHERE ((('')IS NOT(COALESCE(rt1.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((('')IS NOT(COALESCE(rt1.c2, rt0.c1)))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE ((('')IS NOT(COALESCE(rt1.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((('')IS NOT(COALESCE(rt1.c2, rt0.c1)))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE ((('')IS NOT(COALESCE(rt1.c2, rt0.c1))));
SELECT COUNT(*) FROM rt1 WHERE (CASE ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4))  WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((((((((rt1.c4)OR(rt1.c3)))AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c1)) ELSE ((((rt1.c3)OR(rt1.c0)))AND(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4))  WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((((((((rt1.c4)OR(rt1.c3)))AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c1)) ELSE ((((rt1.c3)OR(rt1.c0)))AND(rt1.c0)) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4))  WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((((((((rt1.c4)OR(rt1.c3)))AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c1)) ELSE ((((rt1.c3)OR(rt1.c0)))AND(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4))  WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((((((((rt1.c4)OR(rt1.c3)))AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c1)) ELSE ((((rt1.c3)OR(rt1.c0)))AND(rt1.c0)) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4))  WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((((((((rt1.c4)OR(rt1.c3)))AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c1)) ELSE ((((rt1.c3)OR(rt1.c0)))AND(rt1.c0)) END);
SELECT * FROM t1, rt1 LEFT OUTER JOIN rt0 ON json_quote(((rt0.c0) IS FALSE)) WHERE (MIN(rt0.c0 COLLATE NOCASE, (NOT (rt1.c2)))) ORDER BY '-1217598184' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(rt0.c0 COLLATE NOCASE, (NOT (rt1.c2)))) IS TRUE)  as count FROM t1, rt1 LEFT OUTER JOIN rt0 ON json_quote(((rt0.c0) IS FALSE)) ORDER BY '-1217598184' DESC  NULLS FIRST);
SELECT * FROM t1, rt1 LEFT OUTER JOIN rt0 ON json_quote(((rt0.c0) IS FALSE)) WHERE (MIN(rt0.c0 COLLATE NOCASE, (NOT (rt1.c2)))) ORDER BY '-1217598184' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(rt0.c0 COLLATE NOCASE, (NOT (rt1.c2)))) IS TRUE)  as count FROM t1, rt1 LEFT OUTER JOIN rt0 ON json_quote(((rt0.c0) IS FALSE)) ORDER BY '-1217598184' DESC  NULLS FIRST);
SELECT * FROM t1, rt1 LEFT OUTER JOIN rt0 ON json_quote(((rt0.c0) IS FALSE)) WHERE (MIN(rt0.c0 COLLATE NOCASE, (NOT (rt1.c2)))) ORDER BY '-1217598184' DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c4)) BETWEEN ((0.47155075026413884)) AND ((rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4)) BETWEEN ((0.47155075026413884)) AND ((rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c4)) BETWEEN ((0.47155075026413884)) AND ((rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4)) BETWEEN ((0.47155075026413884)) AND ((rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c4)) BETWEEN ((0.47155075026413884)) AND ((rt1.c2))));
SELECT COUNT(*) FROM rt1 CROSS JOIN t1 ON CAST('0.7599077615834107' AS TEXT) COLLATE BINARY INNER JOIN rt0 ON (COALESCE(DISTINCT t1.c41, -398125990) IN ()) WHERE (((((-1.69584069E9) IS TRUE)) BETWEEN (t1.c41) AND ((('+2QpN,꺍}.') BETWEEN (rt1.c2) AND (rt0.c1))))) ORDER BY (((((rt1.c4))==((rt1.c0))))==(((rt1.c4) BETWEEN (rt1.c2) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((-1.69584069E9) IS TRUE)) BETWEEN (t1.c41) AND ((('+2QpN,꺍}.') BETWEEN (rt1.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON CAST('0.7599077615834107' AS TEXT) COLLATE BINARY INNER JOIN rt0 ON (COALESCE(DISTINCT t1.c41, -398125990) IN ()) ORDER BY (((((rt1.c4))=((rt1.c0))))==(((rt1.c4) BETWEEN (rt1.c2) AND (rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN t1 ON CAST('0.7599077615834107' AS TEXT) COLLATE BINARY INNER JOIN rt0 ON (COALESCE(DISTINCT t1.c41, -398125990) IN ()) WHERE (((((-1.69584069E9) IS TRUE)) BETWEEN (t1.c41) AND ((('+2QpN,꺍}.') BETWEEN (rt1.c2) AND (rt0.c1))))) ORDER BY (((((rt1.c4))==((rt1.c0))))==(((rt1.c4) BETWEEN (rt1.c2) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((-1.69584069E9) IS TRUE)) BETWEEN (t1.c41) AND ((('+2QpN,꺍}.') BETWEEN (rt1.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON CAST('0.7599077615834107' AS TEXT) COLLATE BINARY INNER JOIN rt0 ON (COALESCE(DISTINCT t1.c41, -398125990) IN ()) ORDER BY (((((rt1.c4))=((rt1.c0))))==(((rt1.c4) BETWEEN (rt1.c2) AND (rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN t1 ON CAST('0.7599077615834107' AS TEXT) COLLATE BINARY INNER JOIN rt0 ON (COALESCE(DISTINCT t1.c41, -398125990) IN ()) WHERE (((((-1.69584069E9) IS TRUE)) BETWEEN (t1.c41) AND ((('+2QpN,꺍}.') BETWEEN (rt1.c2) AND (rt0.c1))))) ORDER BY (((((rt1.c4))==((rt1.c0))))==(((rt1.c4) BETWEEN (rt1.c2) AND (rt0.c1))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((- (rt0.c1)))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c1)LIKE(rt0.c2))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c1)))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c1)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT ALL * FROM rt0 WHERE ((((((- (rt0.c1)))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c1)LIKE(rt0.c2))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c1)))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c1)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT ALL * FROM rt0 WHERE ((((((- (rt0.c1)))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c1)LIKE(rt0.c2))))) ORDER BY rt0.c1;
SELECT COUNT(*) FROM t1, rt1 WHERE (((json(rt1.c3)) NOT BETWEEN (((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c2)))AND(rt1.c1))) AND (CASE WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY (('589345161') IS TRUE) ASC  NULLS LAST, NULL  NULLS FIRST, UPPER((((x''))>((t1.c41)))) ASC;
SELECT SUM(count) FROM (SELECT ((((json(rt1.c3)) NOT BETWEEN (((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c2)))AND(rt1.c1))) AND (CASE WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM t1, rt1 ORDER BY (('589345161') IS TRUE) ASC  NULLS LAST, NULL  NULLS FIRST, UPPER((((x''))>((t1.c41)))) ASC);
SELECT COUNT(*) FROM t1, rt1 WHERE (((json(rt1.c3)) NOT BETWEEN (((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c2)))AND(rt1.c1))) AND (CASE WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY (('589345161') IS TRUE) ASC  NULLS LAST, NULL  NULLS FIRST, UPPER((((x''))>((t1.c41)))) ASC;
SELECT SUM(count) FROM (SELECT ((((json(rt1.c3)) NOT BETWEEN (((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c2)))AND(rt1.c1))) AND (CASE WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM t1, rt1 ORDER BY (('589345161') IS TRUE) ASC  NULLS LAST, NULL  NULLS FIRST, UPPER((((x''))>((t1.c41)))) ASC);
SELECT COUNT(*) FROM t1, rt1 WHERE (((json(rt1.c3)) NOT BETWEEN (((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c2)))AND(rt1.c1))) AND (CASE WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY (('589345161') IS TRUE) ASC  NULLS LAST, NULL  NULLS FIRST, UPPER((((x''))>((t1.c41)))) ASC;
SELECT ALL * FROM rt1, t1, rt0 WHERE (((rt0.c0) NOTNULL) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOTNULL) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL * FROM rt1, t1, rt0 WHERE (((rt0.c0) NOTNULL) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOTNULL) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL * FROM rt1, t1, rt0 WHERE (((rt0.c0) NOTNULL) COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 WHERE (0.49556671980851674);
SELECT SUM(count) FROM (SELECT ALL ((0.49556671980851674) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (0.49556671980851674);
SELECT SUM(count) FROM (SELECT ALL ((0.49556671980851674) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (0.49556671980851674);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t1 ON (((((rt1.c3))<=((rt1.c4)))) NOT BETWEEN ((+ (rt1.c3))) AND (NULL)) WHERE (((((rt1.c1, rt1.c4, rt1.c2))<((rt1.c3, rt1.c2, t1.c41))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1, rt1.c4, rt1.c2))<((rt1.c3, rt1.c2, t1.c41))) IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t1 ON (((((rt1.c3))<=((rt1.c4)))) NOT BETWEEN ((+ (rt1.c3))) AND (NULL)));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t1 ON (((((rt1.c3))<=((rt1.c4)))) NOT BETWEEN ((+ (rt1.c3))) AND (NULL)) WHERE (((((rt1.c1, rt1.c4, rt1.c2))<((rt1.c3, rt1.c2, t1.c41))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1, rt1.c4, rt1.c2))<((rt1.c3, rt1.c2, t1.c41))) IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t1 ON (((((rt1.c3))<=((rt1.c4)))) NOT BETWEEN ((+ (rt1.c3))) AND (NULL)));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t1 ON (((((rt1.c3))<=((rt1.c4)))) NOT BETWEEN ((+ (rt1.c3))) AND (NULL)) WHERE (((((rt1.c1, rt1.c4, rt1.c2))<((rt1.c3, rt1.c2, t1.c41))) IN ()));
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((CAST(t1.c41 AS REAL))OR(CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c1 WHEN NULL THEN t1.c41 WHEN rt1.c2 THEN rt1.c4 WHEN x'f165' THEN rt1.c0 ELSE rt1.c2 END)))AND(UNLIKELY(DISTINCT rt1.c3))) LEFT OUTER JOIN t1 ON ((((((rt0.c2)OR(rt1.c3)))AND(rt1.c3))) BETWEEN (NULL) AND (((rt1.c4)OR(0.5950620245559742)))) WHERE (rt1.c1) ORDER BY CAST(((t1.c41) BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((CAST(t1.c41 AS REAL))OR(CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c1 WHEN NULL THEN t1.c41 WHEN rt1.c2 THEN rt1.c4 WHEN x'f165' THEN rt1.c0 ELSE rt1.c2 END)))AND(UNLIKELY(DISTINCT rt1.c3))) LEFT OUTER JOIN t1 ON ((((((rt0.c2)OR(rt1.c3)))AND(rt1.c3))) BETWEEN (NULL) AND (((rt1.c4)OR(0.5950620245559742)))) ORDER BY CAST(((t1.c41) BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT) ASC  NULLS FIRST);
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((CAST(t1.c41 AS REAL))OR(CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c1 WHEN NULL THEN t1.c41 WHEN rt1.c2 THEN rt1.c4 WHEN x'f165' THEN rt1.c0 ELSE rt1.c2 END)))AND(UNLIKELY(DISTINCT rt1.c3))) LEFT OUTER JOIN t1 ON ((((((rt0.c2)OR(rt1.c3)))AND(rt1.c3))) BETWEEN (NULL) AND (((rt1.c4)OR(0.5950620245559742)))) WHERE (rt1.c1) ORDER BY CAST(((t1.c41) BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((CAST(t1.c41 AS REAL))OR(CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c1 WHEN NULL THEN t1.c41 WHEN rt1.c2 THEN rt1.c4 WHEN x'f165' THEN rt1.c0 ELSE rt1.c2 END)))AND(UNLIKELY(DISTINCT rt1.c3))) LEFT OUTER JOIN t1 ON ((((((rt0.c2)OR(rt1.c3)))AND(rt1.c3))) BETWEEN (NULL) AND (((rt1.c4)OR(0.5950620245559742)))) ORDER BY CAST(((t1.c41) BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((0.16525146866962248)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(0.11316013893468546))))<=(((rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((0.16525146866962248)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(0.11316013893468546))))<=(((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((0.16525146866962248)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(0.11316013893468546))))<=(((rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((0.16525146866962248)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(0.11316013893468546))))<=(((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((0.16525146866962248)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(0.11316013893468546))))<=(((rt0.c0 IN ())))));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (rt1.c2 COLLATE NOCASE IN ((rt0.c1 IN ()))) WHERE (json_quote(NULL));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(NULL)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (rt1.c2 COLLATE NOCASE IN ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (rt1.c2 COLLATE NOCASE IN ((rt0.c1 IN ()))) WHERE (json_quote(NULL));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(NULL)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (rt1.c2 COLLATE NOCASE IN ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (rt1.c2 COLLATE NOCASE IN ((rt0.c1 IN ()))) WHERE (json_quote(NULL));
SELECT COUNT(*) FROM rt0 WHERE (json_extract(CAST('496889798' AS TEXT), (0xffffffffcb15b389 IN (rt0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((json_extract(CAST('496889798' AS TEXT), (0xffffffffcb15b389 IN (rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (json_extract(CAST('496889798' AS TEXT), (0xffffffffcb15b389 IN (rt0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((json_extract(CAST('496889798' AS TEXT), (0xffffffffcb15b389 IN (rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM t1, rt1 NOT INDEXED WHERE (((rt1.c0 COLLATE RTRIM)<((~ (rt1.c2))))) ORDER BY (- (((rt1.c4) NOT BETWEEN (t1.c41) AND ('-1501135168'))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE RTRIM)<((~ (rt1.c2))))) IS TRUE)  as count FROM t1, rt1 ORDER BY (- (((rt1.c4) NOT BETWEEN (t1.c41) AND ('-1501135168')))));
SELECT * FROM t1, rt1 NOT INDEXED WHERE (((rt1.c0 COLLATE RTRIM)<((~ (rt1.c2))))) ORDER BY (- (((rt1.c4) NOT BETWEEN (t1.c41) AND ('-1501135168'))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE RTRIM)<((~ (rt1.c2))))) IS TRUE)  as count FROM t1, rt1 ORDER BY (- (((rt1.c4) NOT BETWEEN (t1.c41) AND ('-1501135168')))));
SELECT * FROM t1, rt1 NOT INDEXED WHERE (((rt1.c0 COLLATE RTRIM)<((~ (rt1.c2))))) ORDER BY (- (((rt1.c4) NOT BETWEEN (t1.c41) AND ('-1501135168'))));
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((((rt0.c2)AND(rt0.c2)))))) ORDER BY NULLIF((rt0.c0 IN ()), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END), (((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) AND (((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((((rt0.c2)AND(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF((rt0.c0 IN ()), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END), (((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) AND (((NOT (rt0.c0))))));
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((((rt0.c2)AND(rt0.c2)))))) ORDER BY NULLIF((rt0.c0 IN ()), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END), (((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) AND (((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((((rt0.c2)AND(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF((rt0.c0 IN ()), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END), (((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) AND (((NOT (rt0.c0))))));
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((((rt0.c2)AND(rt0.c2)))))) ORDER BY NULLIF((rt0.c0 IN ()), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END), (((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) AND (((NOT (rt0.c0)))));
SELECT * FROM rt0 INNER JOIN t1 ON rt1.c1 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c4 THEN t1.c41 ELSE rt1.c1 END) NOT NULL) WHERE (((0.10848088926250365)AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((0.10848088926250365)AND(rt0.c1))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON rt1.c1 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c4 THEN t1.c41 ELSE rt1.c1 END) NOT NULL));
SELECT * FROM rt0 INNER JOIN t1 ON rt1.c1 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c4 THEN t1.c41 ELSE rt1.c1 END) NOT NULL) WHERE (((0.10848088926250365)AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((0.10848088926250365)AND(rt0.c1))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON rt1.c1 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c4 THEN t1.c41 ELSE rt1.c1 END) NOT NULL));
SELECT ALL * FROM rt0, t1 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t1.c41 END)+(IFNULL(t1.c41, rt0.c1)))) ORDER BY (t1.c41 COLLATE NOCASE IN (((0.6811571088966729)==(rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t1.c41 END)+(IFNULL(t1.c41, rt0.c1)))) IS TRUE)  as count FROM rt0, t1 ORDER BY (t1.c41 COLLATE NOCASE IN (((0.6811571088966729)=(rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t1 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t1.c41 END)+(IFNULL(t1.c41, rt0.c1)))) ORDER BY (t1.c41 COLLATE NOCASE IN (((0.6811571088966729)==(rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t1.c41 END)+(IFNULL(t1.c41, rt0.c1)))) IS TRUE)  as count FROM rt0, t1 ORDER BY (t1.c41 COLLATE NOCASE IN (((0.6811571088966729)=(rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t1 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t1.c41 END)+(IFNULL(t1.c41, rt0.c1)))) ORDER BY (t1.c41 COLLATE NOCASE IN (((0.6811571088966729)==(rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 END)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0 CROSS JOIN rt1 ON ((x'cd7b') IS FALSE) WHERE (CAST(((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c3)) AS NUMERIC)) ORDER BY (((((rt1.c2 IN ()))AND(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c2 END)))AND(((rt1.c2)=(rt1.c0)))), (((rt1.c2 IN ()))||(CASE rt1.c0  WHEN rt1.c3 THEN rt0.c0 WHEN t1.c41 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c4 WHEN rt0.c1 THEN rt0.c0 WHEN 0.5978594573247786 THEN t1.c41 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c3)) AS NUMERIC)) IS TRUE)  as count FROM t1, rt0 CROSS JOIN rt1 ON ((x'cd7b') IS FALSE) ORDER BY (((((rt1.c2 IN ()))AND(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c2 END)))AND(((rt1.c2)=(rt1.c0)))), (((rt1.c2 IN ()))||(CASE rt1.c0  WHEN rt1.c3 THEN rt0.c0 WHEN t1.c41 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c4 WHEN rt0.c1 THEN rt0.c0 WHEN 0.5978594573247786 THEN t1.c41 END)));
SELECT COUNT(*) FROM t1, rt0 CROSS JOIN rt1 ON ((x'cd7b') IS FALSE) WHERE (CAST(((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c3)) AS NUMERIC)) ORDER BY (((((rt1.c2 IN ()))AND(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c2 END)))AND(((rt1.c2)=(rt1.c0)))), (((rt1.c2 IN ()))||(CASE rt1.c0  WHEN rt1.c3 THEN rt0.c0 WHEN t1.c41 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c4 WHEN rt0.c1 THEN rt0.c0 WHEN 0.5978594573247786 THEN t1.c41 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c3)) AS NUMERIC)) IS TRUE)  as count FROM t1, rt0 CROSS JOIN rt1 ON ((x'cd7b') IS FALSE) ORDER BY (((((rt1.c2 IN ()))AND(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c2 END)))AND(((rt1.c2)=(rt1.c0)))), (((rt1.c2 IN ()))||(CASE rt1.c0  WHEN rt1.c3 THEN rt0.c0 WHEN t1.c41 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c4 WHEN rt0.c1 THEN rt0.c0 WHEN 0.5978594573247786 THEN t1.c41 END)));
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (((rt1.c1 IN ())) NOT NULL) WHERE (QUOTE((((rt1.c0, rt1.c0, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt1.c1, rt1.c3, rt0.c0, rt1.c1)) AND ((rt1.c2, rt1.c4, rt0.c0, rt1.c4, rt1.c0))))) ORDER BY CASE (- (rt0.c0))  WHEN ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)) THEN (rt0.c1 IN ()) WHEN rt0.c0 COLLATE RTRIM THEN (- (rt0.c2)) WHEN (+ (rt0.c1)) THEN ((rt1.c3) NOT NULL) ELSE x'25ff' COLLATE NOCASE END ASC, ((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((QUOTE((((rt1.c0, rt1.c0, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt1.c1, rt1.c3, rt0.c0, rt1.c1)) AND ((rt1.c2, rt1.c4, rt0.c0, rt1.c4, rt1.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((rt1.c1 IN ())) NOT NULL) ORDER BY CASE (- (rt0.c0))  WHEN ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)) THEN (rt0.c1 IN ()) WHEN rt0.c0 COLLATE RTRIM THEN (- (rt0.c2)) WHEN (+ (rt0.c1)) THEN ((rt1.c3) NOT NULL) ELSE x'25ff' COLLATE NOCASE END ASC, ((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE RTRIM);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (((rt1.c1 IN ())) NOT NULL) WHERE (QUOTE((((rt1.c0, rt1.c0, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt1.c1, rt1.c3, rt0.c0, rt1.c1)) AND ((rt1.c2, rt1.c4, rt0.c0, rt1.c4, rt1.c0))))) ORDER BY CASE (- (rt0.c0))  WHEN ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)) THEN (rt0.c1 IN ()) WHEN rt0.c0 COLLATE RTRIM THEN (- (rt0.c2)) WHEN (+ (rt0.c1)) THEN ((rt1.c3) NOT NULL) ELSE x'25ff' COLLATE NOCASE END ASC, ((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((QUOTE((((rt1.c0, rt1.c0, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt1.c1, rt1.c3, rt0.c0, rt1.c1)) AND ((rt1.c2, rt1.c4, rt0.c0, rt1.c4, rt1.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((rt1.c1 IN ())) NOT NULL) ORDER BY CASE (- (rt0.c0))  WHEN ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)) THEN (rt0.c1 IN ()) WHEN rt0.c0 COLLATE RTRIM THEN (- (rt0.c2)) WHEN (+ (rt0.c1)) THEN ((rt1.c3) NOT NULL) ELSE x'25ff' COLLATE NOCASE END ASC, ((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE RTRIM);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (((rt1.c1 IN ())) NOT NULL) WHERE (QUOTE((((rt1.c0, rt1.c0, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt1.c1, rt1.c3, rt0.c0, rt1.c1)) AND ((rt1.c2, rt1.c4, rt0.c0, rt1.c4, rt1.c0))))) ORDER BY CASE (- (rt0.c0))  WHEN ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)) THEN (rt0.c1 IN ()) WHEN rt0.c0 COLLATE RTRIM THEN (- (rt0.c2)) WHEN (+ (rt0.c1)) THEN ((rt1.c3) NOT NULL) ELSE x'25ff' COLLATE NOCASE END ASC, ((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE RTRIM;
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ()))LIKE(0Xffffffffacf2d444))) ORDER BY ((((CAST(rt0.c0 AS TEXT))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))LIKE(0Xffffffffacf2d444))) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c0 AS TEXT))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(x''))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ()))LIKE(0Xffffffffacf2d444))) ORDER BY ((((CAST(rt0.c0 AS TEXT))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))LIKE(0Xffffffffacf2d444))) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c0 AS TEXT))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(x''))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ()))LIKE(0Xffffffffacf2d444))) ORDER BY ((((CAST(rt0.c0 AS TEXT))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(x''))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ ((- (rt1.c1))))) ORDER BY CAST(((rt1.c0)+(rt1.c3)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c0)+(rt1.c3)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ ((- (rt1.c1))))) ORDER BY CAST(((rt1.c0)+(rt1.c3)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c0)+(rt1.c3)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ ((- (rt1.c1))))) ORDER BY CAST(((rt1.c0)+(rt1.c3)) AS INTEGER);
SELECT * FROM t1 WHERE ((((((t1.c41) ISNULL), ((t1.c41)=(t1.c41)), t1.c41))>=(((t1.c41 IN (t1.c41)), (((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41))), (((t1.c41)) BETWEEN ((t1.c41)) AND (('0.16779275005889804')))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c41) ISNULL), ((t1.c41)==(t1.c41)), t1.c41))>=(((t1.c41 IN (t1.c41)), (((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41))), (((t1.c41)) BETWEEN ((t1.c41)) AND (('0.16779275005889804'))))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c41) ISNULL), ((t1.c41)=(t1.c41)), t1.c41))>=(((t1.c41 IN (t1.c41)), (((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41))), (((t1.c41)) BETWEEN ((t1.c41)) AND (('0.16779275005889804')))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c41) ISNULL), ((t1.c41)==(t1.c41)), t1.c41))>=(((t1.c41 IN (t1.c41)), (((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41))), (((t1.c41)) BETWEEN ((t1.c41)) AND (('0.16779275005889804'))))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c41) ISNULL), ((t1.c41)=(t1.c41)), t1.c41))>=(((t1.c41 IN (t1.c41)), (((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41))), (((t1.c41)) BETWEEN ((t1.c41)) AND (('0.16779275005889804')))))));
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (((rt0.c0)OR((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)OR((~ (rt0.c0))))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (((rt0.c0)OR((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)OR((~ (rt0.c0))))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (((rt0.c0)OR((~ (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY ((((((rt0.c2)OR(t1.c41)))AND(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE t1.c41 END) AND ((((t1.c41))>((t1.c41))))), (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN t1.c41 END)) AND ((NULL)))  NULLS LAST, LIKELY(DISTINCT 'j#|(>+')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((((rt0.c2)OR(t1.c41)))AND(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE t1.c41 END) AND ((((t1.c41))>((t1.c41))))), (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN t1.c41 END)) AND ((NULL)))  NULLS LAST, LIKELY(DISTINCT 'j#|(>+')  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY ((((((rt0.c2)OR(t1.c41)))AND(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE t1.c41 END) AND ((((t1.c41))>((t1.c41))))), (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN t1.c41 END)) AND ((NULL)))  NULLS LAST, LIKELY(DISTINCT 'j#|(>+')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((((rt0.c2)OR(t1.c41)))AND(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE t1.c41 END) AND ((((t1.c41))>((t1.c41))))), (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN t1.c41 END)) AND ((NULL)))  NULLS LAST, LIKELY(DISTINCT 'j#|(>+')  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY ((((((rt0.c2)OR(t1.c41)))AND(rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE t1.c41 END) AND ((((t1.c41))>((t1.c41))))), (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN t1.c41 END)) AND ((NULL)))  NULLS LAST, LIKELY(DISTINCT 'j#|(>+')  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE ('1619371039' COLLATE BINARY) ORDER BY LIKELY(((rt0.c1)IS(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL (('1619371039' COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY LIKELY(((rt0.c1)IS(rt1.c2))));
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE ('1619371039' COLLATE BINARY) ORDER BY LIKELY(((rt0.c1)IS(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL (('1619371039' COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY LIKELY(((rt0.c1)IS(rt1.c2))));
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE ('1619371039' COLLATE BINARY) ORDER BY LIKELY(((rt0.c1)IS(rt1.c2)));
SELECT ALL * FROM t1 WHERE ((NOT ((+ (t1.c41))))) ORDER BY 0.7939075766873531 ASC  NULLS LAST, CAST(((t1.c41)IS NOT(t1.c41)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (t1.c41))))) IS TRUE)  as count FROM t1 ORDER BY 0.7939075766873531 ASC  NULLS LAST, CAST(((t1.c41)IS NOT(t1.c41)) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((NOT ((+ (t1.c41))))) ORDER BY 0.7939075766873531 ASC  NULLS LAST, CAST(((t1.c41)IS NOT(t1.c41)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (t1.c41))))) IS TRUE)  as count FROM t1 ORDER BY 0.7939075766873531 ASC  NULLS LAST, CAST(((t1.c41)IS NOT(t1.c41)) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((NOT ((+ (t1.c41))))) ORDER BY 0.7939075766873531 ASC  NULLS LAST, CAST(((t1.c41)IS NOT(t1.c41)) AS TEXT)  NULLS FIRST;
SELECT ALL * FROM t1, rt0 RIGHT OUTER JOIN rt1 ON CAST(rt1.c3 AS INTEGER) WHERE (t1.c41);
SELECT SUM(count) FROM (SELECT ((t1.c41) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN rt1 ON CAST(rt1.c3 AS INTEGER));
SELECT ALL * FROM t1, rt0 RIGHT OUTER JOIN rt1 ON CAST(rt1.c3 AS INTEGER) WHERE (t1.c41);
SELECT SUM(count) FROM (SELECT ((t1.c41) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN rt1 ON CAST(rt1.c3 AS INTEGER));
SELECT ALL * FROM t1, rt0 RIGHT OUTER JOIN rt1 ON CAST(rt1.c3 AS INTEGER) WHERE (t1.c41);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((CAST(rt1.c2 AS INTEGER))>((rt0.c2 IN ()))) INNER JOIN t1 ON ((rt0.c2 COLLATE NOCASE)&(((rt1.c3)<=(t1.c41)))) WHERE (LIKELY(DISTINCT x'')) ORDER BY 0x4ed178c2  NULLS FIRST, (((rt1.c0, rt1.c3, rt1.c3)) NOT BETWEEN ((CHANGES(), rt1.c2 COLLATE BINARY, PRINTF(rt1.c1, rt1.c2, rt0.c1))) AND ((TRIM(DISTINCT rt1.c1), ((((rt1.c0)AND(t1.c41)))OR(t1.c41)), ((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT x'')) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((CAST(rt1.c2 AS INTEGER))>((rt0.c2 IN ()))) INNER JOIN t1 ON ((rt0.c2 COLLATE NOCASE)&(((rt1.c3)<=(t1.c41)))) ORDER BY 0X4ed178c2  NULLS FIRST, (((rt1.c0, rt1.c3, rt1.c3)) NOT BETWEEN ((CHANGES(), rt1.c2 COLLATE BINARY, PRINTF(rt1.c1, rt1.c2, rt0.c1))) AND ((TRIM(DISTINCT rt1.c1), ((((rt1.c0)AND(t1.c41)))OR(t1.c41)), ((rt0.c1) IS TRUE)))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((CAST(rt1.c2 AS INTEGER))>((rt0.c2 IN ()))) INNER JOIN t1 ON ((rt0.c2 COLLATE NOCASE)&(((rt1.c3)<=(t1.c41)))) WHERE (LIKELY(DISTINCT x'')) ORDER BY 0x4ed178c2  NULLS FIRST, (((rt1.c0, rt1.c3, rt1.c3)) NOT BETWEEN ((CHANGES(), rt1.c2 COLLATE BINARY, PRINTF(rt1.c1, rt1.c2, rt0.c1))) AND ((TRIM(DISTINCT rt1.c1), ((((rt1.c0)AND(t1.c41)))OR(t1.c41)), ((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT x'')) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((CAST(rt1.c2 AS INTEGER))>((rt0.c2 IN ()))) INNER JOIN t1 ON ((rt0.c2 COLLATE NOCASE)&(((rt1.c3)<=(t1.c41)))) ORDER BY 0X4ed178c2  NULLS FIRST, (((rt1.c0, rt1.c3, rt1.c3)) NOT BETWEEN ((CHANGES(), rt1.c2 COLLATE BINARY, PRINTF(rt1.c1, rt1.c2, rt0.c1))) AND ((TRIM(DISTINCT rt1.c1), ((((rt1.c0)AND(t1.c41)))OR(t1.c41)), ((rt0.c1) IS TRUE)))));
SELECT ALL * FROM t1 CROSS JOIN rt0 ON (NOT (((0.1729722570858806) NOTNULL))) WHERE (((((rt0.c2)||(rt0.c1)))>>(((rt0.c2)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(rt0.c1)))>>(((rt0.c2)LIKE(rt0.c1))))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON (NOT (((0.1729722570858806) NOTNULL))));
SELECT ALL * FROM t1 CROSS JOIN rt0 ON (NOT (((0.1729722570858806) NOTNULL))) WHERE (((((rt0.c2)||(rt0.c1)))>>(((rt0.c2)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(rt0.c1)))>>(((rt0.c2)LIKE(rt0.c1))))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON (NOT (((0.1729722570858806) NOTNULL))));
SELECT ALL * FROM t1 CROSS JOIN rt0 ON (NOT (((0.1729722570858806) NOTNULL))) WHERE (((((rt0.c2)||(rt0.c1)))>>(((rt0.c2)LIKE(rt0.c1)))));
SELECT * FROM t1 WHERE ((((t1.c41)) BETWEEN ((UNLIKELY(DISTINCT t1.c41))) AND ((CASE t1.c41  WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 END)))) ORDER BY t1.c41, TRIM((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, '', t1.c41)) AND ((t1.c41, t1.c41, t1.c41)))), (((t1.c41)) BETWEEN ((x'')) AND ((UPPER(DISTINCT t1.c41))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c41)) BETWEEN ((UNLIKELY(DISTINCT t1.c41))) AND ((CASE t1.c41  WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 END)))) IS TRUE)  as count FROM t1 ORDER BY t1.c41, TRIM((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, '', t1.c41)) AND ((t1.c41, t1.c41, t1.c41)))), (((t1.c41)) BETWEEN ((x'')) AND ((UPPER(DISTINCT t1.c41))))  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c41)) BETWEEN ((UNLIKELY(DISTINCT t1.c41))) AND ((CASE t1.c41  WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 END)))) ORDER BY t1.c41, TRIM((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, '', t1.c41)) AND ((t1.c41, t1.c41, t1.c41)))), (((t1.c41)) BETWEEN ((x'')) AND ((UPPER(DISTINCT t1.c41))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c41)) BETWEEN ((UNLIKELY(DISTINCT t1.c41))) AND ((CASE t1.c41  WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 END)))) IS TRUE)  as count FROM t1 ORDER BY t1.c41, TRIM((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, '', t1.c41)) AND ((t1.c41, t1.c41, t1.c41)))), (((t1.c41)) BETWEEN ((x'')) AND ((UPPER(DISTINCT t1.c41))))  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c41)) BETWEEN ((UNLIKELY(DISTINCT t1.c41))) AND ((CASE t1.c41  WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 WHEN t1.c41 THEN t1.c41 END)))) ORDER BY t1.c41, TRIM((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, '', t1.c41)) AND ((t1.c41, t1.c41, t1.c41)))), (((t1.c41)) BETWEEN ((x'')) AND ((UPPER(DISTINCT t1.c41))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt1.c3)) AND (((((('<曑')AND(rt1.c3)))AND(rt0.c0)))))) ORDER BY TRIM(DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)), ((rt1.c4)OR('AY')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt1.c3)) AND (((((('<曑')AND(rt1.c3)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY TRIM(DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)), ((rt1.c4)OR('AY')))  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt1.c3)) AND (((((('<曑')AND(rt1.c3)))AND(rt0.c0)))))) ORDER BY TRIM(DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)), ((rt1.c4)OR('AY')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt1.c3)) AND (((((('<曑')AND(rt1.c3)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY TRIM(DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)), ((rt1.c4)OR('AY')))  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt1.c3)) AND (((((('<曑')AND(rt1.c3)))AND(rt0.c0)))))) ORDER BY TRIM(DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)), ((rt1.c4)OR('AY')))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2))==((rt0.c2)))))>=((((rt0.c2)>=(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2))==((rt0.c2)))))>=((((rt0.c2)>=(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2))==((rt0.c2)))))>=((((rt0.c2)>=(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2))==((rt0.c2)))))>=((((rt0.c2)>=(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2))==((rt0.c2)))))>=((((rt0.c2)>=(rt0.c0))))));
SELECT ALL * FROM rt1 WHERE (((((((((((((CAST(rt1.c0 AS INTEGER))OR((((rt1.c0))<=((rt1.c1))))))AND((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))))))OR(TRIM(rt1.c3, rt1.c3))))AND(0.49226407084242363)))AND(CAST(rt1.c4 AS NUMERIC))))OR((((rt1.c3))<=((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CAST(rt1.c0 AS INTEGER))OR((((rt1.c0))<=((rt1.c1))))))AND((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))))))OR(TRIM(rt1.c3, rt1.c3))))AND(0.49226407084242363)))AND(CAST(rt1.c4 AS NUMERIC))))OR((((rt1.c3))<=((rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((((CAST(rt1.c0 AS INTEGER))OR((((rt1.c0))<=((rt1.c1))))))AND((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))))))OR(TRIM(rt1.c3, rt1.c3))))AND(0.49226407084242363)))AND(CAST(rt1.c4 AS NUMERIC))))OR((((rt1.c3))<=((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CAST(rt1.c0 AS INTEGER))OR((((rt1.c0))<=((rt1.c1))))))AND((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))))))OR(TRIM(rt1.c3, rt1.c3))))AND(0.49226407084242363)))AND(CAST(rt1.c4 AS NUMERIC))))OR((((rt1.c3))<=((rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((((CAST(rt1.c0 AS INTEGER))OR((((rt1.c0))<=((rt1.c1))))))AND((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))))))OR(TRIM(rt1.c3, rt1.c3))))AND(0.49226407084242363)))AND(CAST(rt1.c4 AS NUMERIC))))OR((((rt1.c3))<=((rt1.c2))))));
SELECT ALL * FROM rt0, t1 WHERE (((('봈w', rt0.c1, rt0.c0)) BETWEEN ((NULL, (rt0.c2 IN ()), ((rt0.c1) BETWEEN (t1.c41) AND (rt0.c2)))) AND ((t1.c41 COLLATE BINARY, (((t1.c41)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c2) ISNULL)))));
SELECT SUM(count) FROM (SELECT ((((('봈w', rt0.c1, rt0.c0)) BETWEEN ((NULL, (rt0.c2 IN ()), ((rt0.c1) BETWEEN (t1.c41) AND (rt0.c2)))) AND ((t1.c41 COLLATE BINARY, (((t1.c41)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c2) ISNULL))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((('봈w', rt0.c1, rt0.c0)) BETWEEN ((NULL, (rt0.c2 IN ()), ((rt0.c1) BETWEEN (t1.c41) AND (rt0.c2)))) AND ((t1.c41 COLLATE BINARY, (((t1.c41)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c2) ISNULL)))));
SELECT SUM(count) FROM (SELECT ((((('봈w', rt0.c1, rt0.c0)) BETWEEN ((NULL, (rt0.c2 IN ()), ((rt0.c1) BETWEEN (t1.c41) AND (rt0.c2)))) AND ((t1.c41 COLLATE BINARY, (((t1.c41)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c2) ISNULL))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((('봈w', rt0.c1, rt0.c0)) BETWEEN ((NULL, (rt0.c2 IN ()), ((rt0.c1) BETWEEN (t1.c41) AND (rt0.c2)))) AND ((t1.c41 COLLATE BINARY, (((t1.c41)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c2) ISNULL)))));
SELECT * FROM t1, rt1 WHERE (CASE highlight(rt1.c0, rt1.c1, t1.c41, rt1.c3)  WHEN CAST(rt1.c1 AS REAL) THEN rt1.c4 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE highlight(rt1.c0, rt1.c1, t1.c41, rt1.c3)  WHEN CAST(rt1.c1 AS REAL) THEN rt1.c4 END) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (CASE highlight(rt1.c0, rt1.c1, t1.c41, rt1.c3)  WHEN CAST(rt1.c1 AS REAL) THEN rt1.c4 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE highlight(rt1.c0, rt1.c1, t1.c41, rt1.c3)  WHEN CAST(rt1.c1 AS REAL) THEN rt1.c4 END) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (CASE highlight(rt1.c0, rt1.c1, t1.c41, rt1.c3)  WHEN CAST(rt1.c1 AS REAL) THEN rt1.c4 END);
SELECT * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c0);
SELECT COUNT(*) FROM rt1, t1 LEFT OUTER JOIN rt0 ON NULL WHERE ('1817768054');
SELECT SUM(count) FROM (SELECT (('1817768054') IS TRUE)  as count FROM rt1, t1 LEFT OUTER JOIN rt0 ON NULL);
SELECT COUNT(*) FROM rt1, t1 LEFT OUTER JOIN rt0 ON NULL WHERE ('1817768054');
SELECT SUM(count) FROM (SELECT (('1817768054') IS TRUE)  as count FROM rt1, t1 LEFT OUTER JOIN rt0 ON NULL);
SELECT COUNT(*) FROM rt1, t1 LEFT OUTER JOIN rt0 ON NULL WHERE ('1817768054');
SELECT COUNT(*) FROM rt1, t1 LEFT OUTER JOIN rt0 ON CAST(((rt1.c0)OR(rt0.c2)) AS NUMERIC) WHERE (((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c4)))<>(((rt0.c0)||(rt1.c3))))) ORDER BY (~ (((((rt0.c1)OR(t1.c41)))AND(rt1.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c4)))<>(((rt0.c0)||(rt1.c3))))) IS TRUE)  as count FROM rt1, t1 LEFT OUTER JOIN rt0 ON CAST(((rt1.c0)OR(rt0.c2)) AS NUMERIC) ORDER BY (~ (((((rt0.c1)OR(t1.c41)))AND(rt1.c4))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, t1 LEFT OUTER JOIN rt0 ON CAST(((rt1.c0)OR(rt0.c2)) AS NUMERIC) WHERE (((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c4)))<>(((rt0.c0)||(rt1.c3))))) ORDER BY (~ (((((rt0.c1)OR(t1.c41)))AND(rt1.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c4)))<>(((rt0.c0)||(rt1.c3))))) IS TRUE)  as count FROM rt1, t1 LEFT OUTER JOIN rt0 ON CAST(((rt1.c0)OR(rt0.c2)) AS NUMERIC) ORDER BY (~ (((((rt0.c1)OR(t1.c41)))AND(rt1.c4))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, t1 LEFT OUTER JOIN rt0 ON CAST(((rt1.c0)OR(rt0.c2)) AS NUMERIC) WHERE (((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c4)))<>(((rt0.c0)||(rt1.c3))))) ORDER BY (~ (((((rt0.c1)OR(t1.c41)))AND(rt1.c4))))  NULLS LAST;
SELECT * FROM rt1 WHERE (((((((((rt1.c3 COLLATE NOCASE)AND(COALESCE(DISTINCT rt1.c1, rt1.c4))))OR((((rt1.c0, rt1.c0, rt1.c0))<=((rt1.c4, rt1.c4, rt1.c1))))))OR((((-79488839)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))))AND(rt1.c3)));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c3 COLLATE NOCASE)AND(COALESCE(DISTINCT rt1.c1, rt1.c4))))OR((((rt1.c0, rt1.c0, rt1.c0))<=((rt1.c4, rt1.c4, rt1.c1))))))OR((((-79488839)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))))AND(rt1.c3))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((((rt1.c3 COLLATE NOCASE)AND(COALESCE(DISTINCT rt1.c1, rt1.c4))))OR((((rt1.c0, rt1.c0, rt1.c0))<=((rt1.c4, rt1.c4, rt1.c1))))))OR((((-79488839)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))))AND(rt1.c3)));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c3 COLLATE NOCASE)AND(COALESCE(DISTINCT rt1.c1, rt1.c4))))OR((((rt1.c0, rt1.c0, rt1.c0))<=((rt1.c4, rt1.c4, rt1.c1))))))OR((((-79488839)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))))AND(rt1.c3))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((((rt1.c3 COLLATE NOCASE)AND(COALESCE(DISTINCT rt1.c1, rt1.c4))))OR((((rt1.c0, rt1.c0, rt1.c0))<=((rt1.c4, rt1.c4, rt1.c1))))))OR((((-79488839)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))))AND(rt1.c3)));
SELECT ALL * FROM t1, rt0 LEFT OUTER JOIN rt1 ON NULL WHERE ((((((rt1.c3)OR(rt1.c0)))OR(t1.c41)) IN ())) ORDER BY ((rt0.c1)-(rt1.c3)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)OR(rt1.c0)))OR(t1.c41)) IN ())) IS TRUE)  as count FROM t1, rt0 LEFT OUTER JOIN rt1 ON NULL ORDER BY ((rt0.c1)-(rt1.c3)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM t1, rt0 LEFT OUTER JOIN rt1 ON NULL WHERE ((((((rt1.c3)OR(rt1.c0)))OR(t1.c41)) IN ())) ORDER BY ((rt0.c1)-(rt1.c3)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)OR(rt1.c0)))OR(t1.c41)) IN ())) IS TRUE)  as count FROM t1, rt0 LEFT OUTER JOIN rt1 ON NULL ORDER BY ((rt0.c1)-(rt1.c3)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM t1, rt0 LEFT OUTER JOIN rt1 ON NULL WHERE ((((((rt1.c3)OR(rt1.c0)))OR(t1.c41)) IN ())) ORDER BY ((rt0.c1)-(rt1.c3)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0))>=((rt0.c2))))<>(LOWER(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>=((rt0.c2))))<>(LOWER(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0))>=((rt0.c2))))<>(LOWER(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>=((rt0.c2))))<>(LOWER(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0))>=((rt0.c2))))<>(LOWER(DISTINCT rt0.c1))));
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE ((NOT (((x'c8b7')GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((x'c8b7')GLOB(rt0.c0))))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE ((NOT (((x'c8b7')GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((x'c8b7')GLOB(rt0.c0))))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE ((NOT (((x'c8b7')GLOB(rt0.c0)))));
SELECT * FROM rt0, rt1 WHERE (((((((((((((((rt1.c4)OR(rt1.c0)))OR(rt0.c2)))AND(rt1.c3)))OR(rt1.c3)))AND('Y믥')))AND(rt1.c3))) BETWEEN (((rt1.c3)>=(0xffffffffd829e6ae))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (0.20884433940739688))))) ORDER BY rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt1.c4)OR(rt1.c0)))OR(rt0.c2)))AND(rt1.c3)))OR(rt1.c3)))AND('Y믥')))AND(rt1.c3))) BETWEEN (((rt1.c3)>=(0xffffffffd829e6ae))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (0.20884433940739688))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c3 DESC);
SELECT * FROM rt0, rt1 WHERE (((((((((((((((rt1.c4)OR(rt1.c0)))OR(rt0.c2)))AND(rt1.c3)))OR(rt1.c3)))AND('Y믥')))AND(rt1.c3))) BETWEEN (((rt1.c3)>=(0xffffffffd829e6ae))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (0.20884433940739688))))) ORDER BY rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt1.c4)OR(rt1.c0)))OR(rt0.c2)))AND(rt1.c3)))OR(rt1.c3)))AND('Y믥')))AND(rt1.c3))) BETWEEN (((rt1.c3)>=(0xffffffffd829e6ae))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (0.20884433940739688))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c3 DESC);
SELECT * FROM rt0, rt1 WHERE (((((((((((((((rt1.c4)OR(rt1.c0)))OR(rt0.c2)))AND(rt1.c3)))OR(rt1.c3)))AND('Y믥')))AND(rt1.c3))) BETWEEN (((rt1.c3)>=(0xffffffffd829e6ae))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (0.20884433940739688))))) ORDER BY rt1.c3 DESC;
SELECT * FROM rt0, t1, rt1 WHERE ('-827510579') ORDER BY rt1.c2 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (('-827510579') IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY rt1.c2 COLLATE NOCASE DESC);
SELECT * FROM rt0, t1, rt1 WHERE ('-827510579') ORDER BY rt1.c2 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (('-827510579') IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY rt1.c2 COLLATE NOCASE DESC);
SELECT * FROM rt0, t1, rt1 WHERE ('-827510579') ORDER BY rt1.c2 COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (0Xffffffffda4e83c1) ORDER BY (((((rt0.c0, rt1.c4, rt1.c0))<=((rt0.c2, rt1.c2, rt1.c1)))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffda4e83c1) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY (((((rt0.c0, rt1.c4, rt1.c0))<=((rt0.c2, rt1.c2, rt1.c1)))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (0Xffffffffda4e83c1) ORDER BY (((((rt0.c0, rt1.c4, rt1.c0))<=((rt0.c2, rt1.c2, rt1.c1)))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffda4e83c1) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY (((((rt0.c0, rt1.c4, rt1.c0))<=((rt0.c2, rt1.c2, rt1.c1)))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (0Xffffffffda4e83c1) ORDER BY (((((rt0.c0, rt1.c4, rt1.c0))<=((rt0.c2, rt1.c2, rt1.c1)))) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (-406926530);
SELECT SUM(count) FROM (SELECT ALL ((-406926530) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (-406926530);
SELECT SUM(count) FROM (SELECT ALL ((-406926530) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (-406926530);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((0.4109198707339611)*((NOT (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.4109198707339611)*((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((0.4109198707339611)*((NOT (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.4109198707339611)*((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((0.4109198707339611)*((NOT (rt1.c1)))));
SELECT ALL * FROM rt0, t1, rt1 WHERE (json_valid(rt0.c1)) ORDER BY (NOT (((rt0.c2) BETWEEN (0.04693588087150713) AND (rt1.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(rt0.c1)) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (NOT (((rt0.c2) BETWEEN (0.04693588087150713) AND (rt1.c4)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t1, rt1 WHERE (json_valid(rt0.c1)) ORDER BY (NOT (((rt0.c2) BETWEEN (0.04693588087150713) AND (rt1.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(rt0.c1)) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (NOT (((rt0.c2) BETWEEN (0.04693588087150713) AND (rt1.c4)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t1, rt1 WHERE (json_valid(rt0.c1)) ORDER BY (NOT (((rt0.c2) BETWEEN (0.04693588087150713) AND (rt1.c4)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c41)IS NOT(t1.c41)))GLOB((t1.c41 IN (t1.c41))))) ORDER BY ((CASE t1.c41  WHEN t1.c41 THEN t1.c41 END)>>(HEX(DISTINCT t1.c41))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c41)IS NOT(t1.c41)))GLOB((t1.c41 IN (t1.c41))))) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c41  WHEN t1.c41 THEN t1.c41 END)>>(HEX(DISTINCT t1.c41))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c41)IS NOT(t1.c41)))GLOB((t1.c41 IN (t1.c41))))) ORDER BY ((CASE t1.c41  WHEN t1.c41 THEN t1.c41 END)>>(HEX(DISTINCT t1.c41))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c41)IS NOT(t1.c41)))GLOB((t1.c41 IN (t1.c41))))) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c41  WHEN t1.c41 THEN t1.c41 END)>>(HEX(DISTINCT t1.c41))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c41)IS NOT(t1.c41)))GLOB((t1.c41 IN (t1.c41))))) ORDER BY ((CASE t1.c41  WHEN t1.c41 THEN t1.c41 END)>>(HEX(DISTINCT t1.c41))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t1 RIGHT OUTER JOIN rt0 ON (('k*')*(((rt0.c0) NOTNULL))) WHERE ((- (CAST(t1.c41 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((- (CAST(t1.c41 AS INTEGER)))) IS TRUE)  as count FROM rt1, t1 RIGHT OUTER JOIN rt0 ON (('k*')*(((rt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt1, t1 RIGHT OUTER JOIN rt0 ON (('k*')*(((rt0.c0) NOTNULL))) WHERE ((- (CAST(t1.c41 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((- (CAST(t1.c41 AS INTEGER)))) IS TRUE)  as count FROM rt1, t1 RIGHT OUTER JOIN rt0 ON (('k*')*(((rt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt1, t1 RIGHT OUTER JOIN rt0 ON (('k*')*(((rt0.c0) NOTNULL))) WHERE ((- (CAST(t1.c41 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((TRIM(rt0.c2, '-1551643333') IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(rt0.c2, '-1551643333') IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((TRIM(rt0.c2, '-1551643333') IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(rt0.c2, '-1551643333') IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((TRIM(rt0.c2, '-1551643333') IN ()));
SELECT ALL * FROM rt0, t1, rt1 WHERE ((((rt1.c0))!=((rt1.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt1.c0))<>((rt1.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL * FROM rt0, t1, rt1 WHERE ((((rt1.c0))!=((rt1.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt1.c0))<>((rt1.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL * FROM rt0, t1, rt1 WHERE ((((rt1.c0))!=((rt1.c1))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt1 ON (NOT (rt1.c3)) COLLATE BINARY INNER JOIN rt0 ON ((((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c3)))OR(rt1.c3 COLLATE NOCASE)))AND((rt0.c1 IN ()))) WHERE (x'') ORDER BY CASE WHEN CAST(rt1.c0 AS INTEGER) THEN NULL WHEN rt0.c2 COLLATE BINARY THEN CAST(rt0.c1 AS REAL) WHEN x'62592ecb' THEN rt0.c2 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt1 ON (NOT (rt1.c3)) COLLATE BINARY INNER JOIN rt0 ON ((((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c3)))OR(rt1.c3 COLLATE NOCASE)))AND((rt0.c1 IN ()))) ORDER BY CASE WHEN CAST(rt1.c0 AS INTEGER) THEN NULL WHEN rt0.c2 COLLATE BINARY THEN CAST(rt0.c1 AS REAL) WHEN x'62592ecb' THEN rt0.c2 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt1 ON (NOT (rt1.c3)) COLLATE BINARY INNER JOIN rt0 ON ((((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c3)))OR(rt1.c3 COLLATE NOCASE)))AND((rt0.c1 IN ()))) WHERE (x'') ORDER BY CASE WHEN CAST(rt1.c0 AS INTEGER) THEN NULL WHEN rt0.c2 COLLATE BINARY THEN CAST(rt0.c1 AS REAL) WHEN x'62592ecb' THEN rt0.c2 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt1 ON (NOT (rt1.c3)) COLLATE BINARY INNER JOIN rt0 ON ((((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c3)))OR(rt1.c3 COLLATE NOCASE)))AND((rt0.c1 IN ()))) ORDER BY CASE WHEN CAST(rt1.c0 AS INTEGER) THEN NULL WHEN rt0.c2 COLLATE BINARY THEN CAST(rt0.c1 AS REAL) WHEN x'62592ecb' THEN rt0.c2 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt1 ON (NOT (rt1.c3)) COLLATE BINARY INNER JOIN rt0 ON ((((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c3)))OR(rt1.c3 COLLATE NOCASE)))AND((rt0.c1 IN ()))) WHERE (x'') ORDER BY CASE WHEN CAST(rt1.c0 AS INTEGER) THEN NULL WHEN rt0.c2 COLLATE BINARY THEN CAST(rt0.c1 AS REAL) WHEN x'62592ecb' THEN rt0.c2 END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT ((rt0.c2) ISNULL), LIKELY(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((rt0.c2) ISNULL), LIKELY(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT ((rt0.c2) ISNULL), LIKELY(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((rt0.c2) ISNULL), LIKELY(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT ((rt0.c2) ISNULL), LIKELY(rt0.c0)));
SELECT * FROM t1, rt1 WHERE (NULL) ORDER BY (CAST(rt1.c1 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, rt1 ORDER BY (CAST(rt1.c1 AS BLOB) IN ()));
SELECT * FROM t1, rt1 WHERE (NULL) ORDER BY (CAST(rt1.c1 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, rt1 ORDER BY (CAST(rt1.c1 AS BLOB) IN ()));
SELECT * FROM t1, rt1 WHERE (NULL) ORDER BY (CAST(rt1.c1 AS BLOB) IN ());
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (- (((rt0.c1) ISNULL))) WHERE (CAST(rt1.c2 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (- (((rt0.c1) ISNULL))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (- (((rt0.c1) ISNULL))) WHERE (CAST(rt1.c2 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (- (((rt0.c1) ISNULL))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (- (((rt0.c1) ISNULL))) WHERE (CAST(rt1.c2 AS TEXT) COLLATE NOCASE);
SELECT * FROM t1 INNER JOIN rt0 ON ((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 END)AND(CAST(t1.c41 AS INTEGER))) INNER JOIN rt1 ON (((((rt1.c3))<>((''))))IS('B&B䁷X')) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 END)AND(CAST(t1.c41 AS INTEGER))) INNER JOIN rt1 ON (((((rt1.c3))<>((''))))IS('B&B䁷X')));
SELECT * FROM t1 INNER JOIN rt0 ON ((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 END)AND(CAST(t1.c41 AS INTEGER))) INNER JOIN rt1 ON (((((rt1.c3))<>((''))))IS('B&B䁷X')) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 END)AND(CAST(t1.c41 AS INTEGER))) INNER JOIN rt1 ON (((((rt1.c3))<>((''))))IS('B&B䁷X')));
SELECT * FROM t1 INNER JOIN rt0 ON ((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 END)AND(CAST(t1.c41 AS INTEGER))) INNER JOIN rt1 ON (((((rt1.c3))<>((''))))IS('B&B䁷X')) WHERE (rt0.c0);
SELECT ALL * FROM rt1 WHERE ((((rt1.c4)) BETWEEN ((((rt1.c4) NOT BETWEEN (rt1.c0) AND (0.8457585599890965)))) AND ((((rt1.c3) IS TRUE))))) ORDER BY ((((rt1.c1) NOT NULL))IS(rt1.c3)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN ((((rt1.c4) NOT BETWEEN (rt1.c0) AND (0.8457585599890965)))) AND ((((rt1.c3) IS TRUE))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOT NULL))IS(rt1.c3)) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c4)) BETWEEN ((((rt1.c4) NOT BETWEEN (rt1.c0) AND (0.8457585599890965)))) AND ((((rt1.c3) IS TRUE))))) ORDER BY ((((rt1.c1) NOT NULL))IS(rt1.c3)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN ((((rt1.c4) NOT BETWEEN (rt1.c0) AND (0.8457585599890965)))) AND ((((rt1.c3) IS TRUE))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOT NULL))IS(rt1.c3)) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c4)) BETWEEN ((((rt1.c4) NOT BETWEEN (rt1.c0) AND (0.8457585599890965)))) AND ((((rt1.c3) IS TRUE))))) ORDER BY ((((rt1.c1) NOT NULL))IS(rt1.c3)) ASC  NULLS LAST;
SELECT ALL * FROM t1, rt1 WHERE (((rt1.c4 COLLATE RTRIM)>>(((((rt1.c4)OR(rt1.c3)))OR('G')))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4 COLLATE RTRIM)>>(((((rt1.c4)OR(rt1.c3)))OR('G'))))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL * FROM t1, rt1 WHERE (((rt1.c4 COLLATE RTRIM)>>(((((rt1.c4)OR(rt1.c3)))OR('G')))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4 COLLATE RTRIM)>>(((((rt1.c4)OR(rt1.c3)))OR('G'))))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL * FROM t1, rt1 WHERE (((rt1.c4 COLLATE RTRIM)>>(((((rt1.c4)OR(rt1.c3)))OR('G')))));
SELECT ALL * FROM t1 WHERE (CAST((+ (t1.c41)) AS REAL)) ORDER BY ((t1.c41 COLLATE BINARY) NOT BETWEEN (CAST(t1.c41 AS INTEGER)) AND (((((((((t1.c41)OR(t1.c41)))AND(t1.c41)))OR(t1.c41)))AND(t1.c41)))) ASC  NULLS FIRST, (((((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41)))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (t1.c41)) AS REAL)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c41 COLLATE BINARY) NOT BETWEEN (CAST(t1.c41 AS INTEGER)) AND (((((((((t1.c41)OR(t1.c41)))AND(t1.c41)))OR(t1.c41)))AND(t1.c41)))) ASC  NULLS FIRST, (((((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41)))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (CAST((+ (t1.c41)) AS REAL)) ORDER BY ((t1.c41 COLLATE BINARY) NOT BETWEEN (CAST(t1.c41 AS INTEGER)) AND (((((((((t1.c41)OR(t1.c41)))AND(t1.c41)))OR(t1.c41)))AND(t1.c41)))) ASC  NULLS FIRST, (((((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41)))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (t1.c41)) AS REAL)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c41 COLLATE BINARY) NOT BETWEEN (CAST(t1.c41 AS INTEGER)) AND (((((((((t1.c41)OR(t1.c41)))AND(t1.c41)))OR(t1.c41)))AND(t1.c41)))) ASC  NULLS FIRST, (((((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41)))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (CAST((+ (t1.c41)) AS REAL)) ORDER BY ((t1.c41 COLLATE BINARY) NOT BETWEEN (CAST(t1.c41 AS INTEGER)) AND (((((((((t1.c41)OR(t1.c41)))AND(t1.c41)))OR(t1.c41)))AND(t1.c41)))) ASC  NULLS FIRST, (((((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41)))) IS TRUE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((('%K') IS FALSE))OR((t1.c41 IN ())))) ORDER BY CASE ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))  WHEN (((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41))) THEN (t1.c41 IN (t1.c41)) ELSE ((t1.c41) IS FALSE) END DESC  NULLS LAST, CASE WHEN CAST(t1.c41 AS TEXT) THEN ((t1.c41) NOTNULL) WHEN CAST(t1.c41 AS INTEGER) THEN ((t1.c41) NOTNULL) WHEN t1.c41 THEN (t1.c41 IN ()) END, ((t1.c41)|(t1.c41)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('%K') IS FALSE))OR((t1.c41 IN ())))) IS TRUE)  as count FROM t1 ORDER BY CASE ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))  WHEN (((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41))) THEN (t1.c41 IN (t1.c41)) ELSE ((t1.c41) IS FALSE) END DESC  NULLS LAST, CASE WHEN CAST(t1.c41 AS TEXT) THEN ((t1.c41) NOTNULL) WHEN CAST(t1.c41 AS INTEGER) THEN ((t1.c41) NOTNULL) WHEN t1.c41 THEN (t1.c41 IN ()) END, ((t1.c41)|(t1.c41)) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((('%K') IS FALSE))OR((t1.c41 IN ())))) ORDER BY CASE ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))  WHEN (((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41))) THEN (t1.c41 IN (t1.c41)) ELSE ((t1.c41) IS FALSE) END DESC  NULLS LAST, CASE WHEN CAST(t1.c41 AS TEXT) THEN ((t1.c41) NOTNULL) WHEN CAST(t1.c41 AS INTEGER) THEN ((t1.c41) NOTNULL) WHEN t1.c41 THEN (t1.c41 IN ()) END, ((t1.c41)|(t1.c41)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('%K') IS FALSE))OR((t1.c41 IN ())))) IS TRUE)  as count FROM t1 ORDER BY CASE ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))  WHEN (((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41))) THEN (t1.c41 IN (t1.c41)) ELSE ((t1.c41) IS FALSE) END DESC  NULLS LAST, CASE WHEN CAST(t1.c41 AS TEXT) THEN ((t1.c41) NOTNULL) WHEN CAST(t1.c41 AS INTEGER) THEN ((t1.c41) NOTNULL) WHEN t1.c41 THEN (t1.c41 IN ()) END, ((t1.c41)|(t1.c41)) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((('%K') IS FALSE))OR((t1.c41 IN ())))) ORDER BY CASE ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))  WHEN (((t1.c41)) NOT BETWEEN ((t1.c41)) AND ((t1.c41))) THEN (t1.c41 IN (t1.c41)) ELSE ((t1.c41) IS FALSE) END DESC  NULLS LAST, CASE WHEN CAST(t1.c41 AS TEXT) THEN ((t1.c41) NOTNULL) WHEN CAST(t1.c41 AS INTEGER) THEN ((t1.c41) NOTNULL) WHEN t1.c41 THEN (t1.c41 IN ()) END, ((t1.c41)|(t1.c41)) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((CAST(rt0.c2 AS TEXT) IN ((NOT (rt0.c2))))) ORDER BY (NOT ((NOT (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS TEXT) IN ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, t1 ORDER BY (NOT ((NOT (rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((CAST(rt0.c2 AS TEXT) IN ((NOT (rt0.c2))))) ORDER BY (NOT ((NOT (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS TEXT) IN ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, t1 ORDER BY (NOT ((NOT (rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((CAST(rt0.c2 AS TEXT) IN ((NOT (rt0.c2))))) ORDER BY (NOT ((NOT (rt0.c2)))) ASC;
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c1) NOT NULL) THEN (rt1.c2 IN (rt1.c3, rt1.c2)) END) ORDER BY 0.4714935323602585  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1) NOT NULL) THEN (rt1.c2 IN (rt1.c3, rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY 0.4714935323602585  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c1) NOT NULL) THEN (rt1.c2 IN (rt1.c3, rt1.c2)) END) ORDER BY 0.4714935323602585  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1) NOT NULL) THEN (rt1.c2 IN (rt1.c3, rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY 0.4714935323602585  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c1) NOT NULL) THEN (rt1.c2 IN (rt1.c3, rt1.c2)) END) ORDER BY 0.4714935323602585  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (x'') ORDER BY x'a798', ((((CAST(rt0.c0 AS REAL))AND((rt1.c3 IN ()))))OR(((rt0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY x'a798', ((((CAST(rt0.c0 AS REAL))AND((rt1.c3 IN ()))))OR(((rt0.c0) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (x'') ORDER BY x'a798', ((((CAST(rt0.c0 AS REAL))AND((rt1.c3 IN ()))))OR(((rt0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY x'a798', ((((CAST(rt0.c0 AS REAL))AND((rt1.c3 IN ()))))OR(((rt0.c0) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (x'') ORDER BY x'a798', ((((CAST(rt0.c0 AS REAL))AND((rt1.c3 IN ()))))OR(((rt0.c0) NOT NULL)))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c41 AS BLOB))IS(((t1.c41) IS FALSE)))) ORDER BY ((((((0x7e0d257)+(t1.c41)))AND(t1.c41 COLLATE BINARY)))OR(UPPER(t1.c41))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c41 AS BLOB))IS(((t1.c41) IS FALSE)))) IS TRUE)  as count FROM t1 ORDER BY ((((((0x7e0d257)+(t1.c41)))AND(t1.c41 COLLATE BINARY)))OR(UPPER(t1.c41))) ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((CAST(t1.c41 AS BLOB))IS(((t1.c41) IS FALSE)))) ORDER BY ((((((0x7e0d257)+(t1.c41)))AND(t1.c41 COLLATE BINARY)))OR(UPPER(t1.c41))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c41 AS BLOB))IS(((t1.c41) IS FALSE)))) IS TRUE)  as count FROM t1 ORDER BY ((((((0x7e0d257)+(t1.c41)))AND(t1.c41 COLLATE BINARY)))OR(UPPER(t1.c41))) ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((CAST(t1.c41 AS BLOB))IS(((t1.c41) IS FALSE)))) ORDER BY ((((((0x7e0d257)+(t1.c41)))AND(t1.c41 COLLATE BINARY)))OR(UPPER(t1.c41))) ASC  NULLS LAST;
SELECT * FROM rt0, t1 CROSS JOIN rt1 ON UPPER(DISTINCT (((rt0.c0))<((rt1.c1)))) WHERE ((~ (CASE 2.698583E8  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE 2.698583E8  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c4 END))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN rt1 ON UPPER(DISTINCT (((rt0.c0))<((rt1.c1)))));
SELECT * FROM rt0, t1 CROSS JOIN rt1 ON UPPER(DISTINCT (((rt0.c0))<((rt1.c1)))) WHERE ((~ (CASE 2.698583E8  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE 2.698583E8  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c4 END))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN rt1 ON UPPER(DISTINCT (((rt0.c0))<((rt1.c1)))));
SELECT * FROM rt0, t1 CROSS JOIN rt1 ON UPPER(DISTINCT (((rt0.c0))<((rt1.c1)))) WHERE ((~ (CASE 2.698583E8  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c4 END)));
SELECT * FROM rt1 WHERE (CAST(((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c3)))AND(-406926530)))AND(rt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c3)))AND(-406926530)))AND(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c3)))AND(-406926530)))AND(rt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c3)))AND(-406926530)))AND(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c3)))AND(-406926530)))AND(rt1.c2)) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (((0.19419402630883575)|(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((0.19419402630883575)|(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((0.19419402630883575)|(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((0.19419402630883575)|(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((0.19419402630883575)|(rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (((CAST(rt1.c3 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (((CAST(rt1.c3 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (((CAST(rt1.c3 AS TEXT)) IS FALSE));
SELECT ALL * FROM rt0 INNER JOIN t1 ON ((((x'db3a')OR(((rt0.c2)-(rt0.c2)))))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) WHERE (((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON ((((x'db3a')OR(((rt0.c2)-(rt0.c2)))))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))));
SELECT ALL * FROM rt0 INNER JOIN t1 ON ((((x'db3a')OR(((rt0.c2)-(rt0.c2)))))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) WHERE (((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON ((((x'db3a')OR(((rt0.c2)-(rt0.c2)))))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))));
SELECT ALL * FROM rt0 INNER JOIN t1 ON ((((x'db3a')OR(((rt0.c2)-(rt0.c2)))))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) WHERE (((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c41, t1.c41, t1.c41))>((t1.c41, t1.c41, t1.c41))))&(((t1.c41)GLOB(t1.c41)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c41, t1.c41, t1.c41))>((t1.c41, t1.c41, t1.c41))))&(((t1.c41)GLOB(t1.c41))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c41, t1.c41, t1.c41))>((t1.c41, t1.c41, t1.c41))))&(((t1.c41)GLOB(t1.c41)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c41, t1.c41, t1.c41))>((t1.c41, t1.c41, t1.c41))))&(((t1.c41)GLOB(t1.c41))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c41, t1.c41, t1.c41))>((t1.c41, t1.c41, t1.c41))))&(((t1.c41)GLOB(t1.c41)))));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt1.c1)IS(rt0.c2)), ((rt0.c1) NOT NULL)))<=((((rt1.c2)OR(rt1.c4)), (rt0.c1 IN ()), (NOT (rt0.c2))))) WHERE (((rt1.c0)<=('1474223213'))) ORDER BY (((((rt0.c1)&(rt1.c2))))==((((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c2))))) DESC, (NOT (((rt1.c1) BETWEEN (0.001223135003749709) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)<=('1474223213'))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt1.c1)IS(rt0.c2)), ((rt0.c1) NOT NULL)))<=((((rt1.c2)OR(rt1.c4)), (rt0.c1 IN ()), (NOT (rt0.c2))))) ORDER BY (((((rt0.c1)&(rt1.c2))))==((((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c2))))) DESC, (NOT (((rt1.c1) BETWEEN (0.001223135003749709) AND (rt1.c1)))));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt1.c1)IS(rt0.c2)), ((rt0.c1) NOT NULL)))<=((((rt1.c2)OR(rt1.c4)), (rt0.c1 IN ()), (NOT (rt0.c2))))) WHERE (((rt1.c0)<=('1474223213'))) ORDER BY (((((rt0.c1)&(rt1.c2))))==((((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c2))))) DESC, (NOT (((rt1.c1) BETWEEN (0.001223135003749709) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)<=('1474223213'))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt1.c1)IS(rt0.c2)), ((rt0.c1) NOT NULL)))<=((((rt1.c2)OR(rt1.c4)), (rt0.c1 IN ()), (NOT (rt0.c2))))) ORDER BY (((((rt0.c1)&(rt1.c2))))==((((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c2))))) DESC, (NOT (((rt1.c1) BETWEEN (0.001223135003749709) AND (rt1.c1)))));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt1.c1)IS(rt0.c2)), ((rt0.c1) NOT NULL)))<=((((rt1.c2)OR(rt1.c4)), (rt0.c1 IN ()), (NOT (rt0.c2))))) WHERE (((rt1.c0)<=('1474223213'))) ORDER BY (((((rt0.c1)&(rt1.c2))))==((((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c2))))) DESC, (NOT (((rt1.c1) BETWEEN (0.001223135003749709) AND (rt1.c1))));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((((((((((0xffffffffe5cd3cf5) NOTNULL))OR(rt1.c0 COLLATE RTRIM)))AND(((rt0.c0)>=(rt0.c2)))))OR((rt1.c3 IN ()))))AND(rt1.c4)) WHERE (((rt1.c0 IN ()) IN (ABS(DISTINCT rt1.c2), rt1.c1))) ORDER BY ((((rt0.c2))<((rt1.c2))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 IN ()) IN (ABS(DISTINCT rt1.c2), rt1.c1))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((((((0xffffffffe5cd3cf5) NOTNULL))OR(rt1.c0 COLLATE RTRIM)))AND(((rt0.c0)>=(rt0.c2)))))OR((rt1.c3 IN ()))))AND(rt1.c4)) ORDER BY ((((rt0.c2))<((rt1.c2))) IN ()) DESC  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((((((((((0xffffffffe5cd3cf5) NOTNULL))OR(rt1.c0 COLLATE RTRIM)))AND(((rt0.c0)>=(rt0.c2)))))OR((rt1.c3 IN ()))))AND(rt1.c4)) WHERE (((rt1.c0 IN ()) IN (ABS(DISTINCT rt1.c2), rt1.c1))) ORDER BY ((((rt0.c2))<((rt1.c2))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 IN ()) IN (ABS(DISTINCT rt1.c2), rt1.c1))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((((((0xffffffffe5cd3cf5) NOTNULL))OR(rt1.c0 COLLATE RTRIM)))AND(((rt0.c0)>=(rt0.c2)))))OR((rt1.c3 IN ()))))AND(rt1.c4)) ORDER BY ((((rt0.c2))<((rt1.c2))) IN ()) DESC  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((((((((((0xffffffffe5cd3cf5) NOTNULL))OR(rt1.c0 COLLATE RTRIM)))AND(((rt0.c0)>=(rt0.c2)))))OR((rt1.c3 IN ()))))AND(rt1.c4)) WHERE (((rt1.c0 IN ()) IN (ABS(DISTINCT rt1.c2), rt1.c1))) ORDER BY ((((rt0.c2))<((rt1.c2))) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c0) NOTNULL), 0.10675604158937324)) ORDER BY NULL, CAST(((rt0.c1)>(rt0.c2)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt0.c0) NOTNULL), 0.10675604158937324)) IS TRUE)  as count FROM rt0 ORDER BY NULL, CAST(((rt0.c1)>(rt0.c2)) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c0) NOTNULL), 0.10675604158937324)) ORDER BY NULL, CAST(((rt0.c1)>(rt0.c2)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt0.c0) NOTNULL), 0.10675604158937324)) IS TRUE)  as count FROM rt0 ORDER BY NULL, CAST(((rt0.c1)>(rt0.c2)) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c0) NOTNULL), 0.10675604158937324)) ORDER BY NULL, CAST(((rt0.c1)>(rt0.c2)) AS BLOB)  NULLS LAST;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t1 ON ((((rt1.c2)<(rt0.c2))) BETWEEN (((((rt1.c3)AND('1673078214')))OR(rt1.c0))) AND (HEX(rt1.c2))) FULL OUTER JOIN rt0 ON ((((((t1.c41) IS FALSE))AND((~ (rt1.c3)))))OR(((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (((rt1.c3 COLLATE NOCASE)<>(((t1.c41) NOT NULL)))) ORDER BY CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE NOCASE)!=(((t1.c41) NOT NULL)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t1 ON ((((rt1.c2)<(rt0.c2))) BETWEEN (((((rt1.c3)AND('1673078214')))OR(rt1.c0))) AND (HEX(rt1.c2))) FULL OUTER JOIN rt0 ON ((((((t1.c41) IS FALSE))AND((~ (rt1.c3)))))OR(((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) ORDER BY CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t1 ON ((((rt1.c2)<(rt0.c2))) BETWEEN (((((rt1.c3)AND('1673078214')))OR(rt1.c0))) AND (HEX(rt1.c2))) FULL OUTER JOIN rt0 ON ((((((t1.c41) IS FALSE))AND((~ (rt1.c3)))))OR(((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (((rt1.c3 COLLATE NOCASE)<>(((t1.c41) NOT NULL)))) ORDER BY CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE NOCASE)!=(((t1.c41) NOT NULL)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t1 ON ((((rt1.c2)<(rt0.c2))) BETWEEN (((((rt1.c3)AND('1673078214')))OR(rt1.c0))) AND (HEX(rt1.c2))) FULL OUTER JOIN rt0 ON ((((((t1.c41) IS FALSE))AND((~ (rt1.c3)))))OR(((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) ORDER BY CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOTNULL)) ORDER BY CASE WHEN rt0.c2 THEN rt1.c4 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN rt0.c2 THEN rt1.c4 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOTNULL)) ORDER BY CASE WHEN rt0.c2 THEN rt1.c4 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN rt0.c2 THEN rt1.c4 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOTNULL)) ORDER BY CASE WHEN rt0.c2 THEN rt1.c4 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE ((+ ((((rt0.c0))=((rt1.c2)))))) ORDER BY (((rt1.c0 IN ()))GLOB(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c2)))), (((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND ((((((rt1.c3)OR(rt0.c2)))OR(rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c0))==((rt1.c2)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c0 IN ()))GLOB(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c2)))), (((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND ((((((rt1.c3)OR(rt0.c2)))OR(rt0.c0))))) ASC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((+ ((((rt0.c0))=((rt1.c2)))))) ORDER BY (((rt1.c0 IN ()))GLOB(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c2)))), (((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND ((((((rt1.c3)OR(rt0.c2)))OR(rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c0))==((rt1.c2)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c0 IN ()))GLOB(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c2)))), (((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND ((((((rt1.c3)OR(rt0.c2)))OR(rt0.c0))))) ASC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((+ ((((rt0.c0))=((rt1.c2)))))) ORDER BY (((rt1.c0 IN ()))GLOB(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c2)))), (((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND ((((((rt1.c3)OR(rt0.c2)))OR(rt0.c0))))) ASC  NULLS FIRST;
SELECT * FROM t1, rt0, rt1 WHERE ((- (0xffffffff84b1d490 COLLATE NOCASE))) ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY ASC, HEX(DISTINCT ((rt1.c4) BETWEEN (t1.c41) AND (0.25662838708706504)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (0Xffffffff84b1d490 COLLATE NOCASE))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY ASC, HEX(DISTINCT ((rt1.c4) BETWEEN (t1.c41) AND (0.25662838708706504)))  NULLS LAST);
SELECT * FROM t1, rt0, rt1 WHERE ((- (0xffffffff84b1d490 COLLATE NOCASE))) ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY ASC, HEX(DISTINCT ((rt1.c4) BETWEEN (t1.c41) AND (0.25662838708706504)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (0Xffffffff84b1d490 COLLATE NOCASE))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY ASC, HEX(DISTINCT ((rt1.c4) BETWEEN (t1.c41) AND (0.25662838708706504)))  NULLS LAST);
SELECT * FROM t1, rt0, rt1 WHERE ((- (0xffffffff84b1d490 COLLATE NOCASE))) ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY ASC, HEX(DISTINCT ((rt1.c4) BETWEEN (t1.c41) AND (0.25662838708706504)))  NULLS LAST;
SELECT ALL * FROM rt1, t1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE (rt1.c4);
SELECT COUNT(*) FROM t1, rt0 RIGHT OUTER JOIN rt1 ON ((- (NULL)) IN ()) WHERE (((0.8056385048466573 COLLATE RTRIM) NOTNULL)) ORDER BY (((0.7862959331824375 COLLATE NOCASE))=((((rt0.c0)+(t1.c41))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.8056385048466573 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN rt1 ON ((- (NULL)) IN ()) ORDER BY (((0.7862959331824375 COLLATE NOCASE))=((((rt0.c0)+(t1.c41))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0 RIGHT OUTER JOIN rt1 ON ((- (NULL)) IN ()) WHERE (((0.8056385048466573 COLLATE RTRIM) NOTNULL)) ORDER BY (((0.7862959331824375 COLLATE NOCASE))=((((rt0.c0)+(t1.c41))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.8056385048466573 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN rt1 ON ((- (NULL)) IN ()) ORDER BY (((0.7862959331824375 COLLATE NOCASE))=((((rt0.c0)+(t1.c41))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0 RIGHT OUTER JOIN rt1 ON ((- (NULL)) IN ()) WHERE (((0.8056385048466573 COLLATE RTRIM) NOTNULL)) ORDER BY (((0.7862959331824375 COLLATE NOCASE))=((((rt0.c0)+(t1.c41))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c41)<=(t1.c41)))LIKE(((t1.c41) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((t1.c41)<=(t1.c41)))LIKE(((t1.c41) NOTNULL)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c41)<=(t1.c41)))LIKE(((t1.c41) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((t1.c41)<=(t1.c41)))LIKE(((t1.c41) NOTNULL)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c41)<=(t1.c41)))LIKE(((t1.c41) NOTNULL))));
SELECT * FROM t1 WHERE (t1.c41) ORDER BY PRINTF(((t1.c41)<(t1.c41)), CAST(t1.c41 AS NUMERIC), x'' COLLATE NOCASE, (NOT (t1.c41)), t1.c41) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c41) IS TRUE)  as count FROM t1 ORDER BY PRINTF(((t1.c41)<(t1.c41)), CAST(t1.c41 AS NUMERIC), x'' COLLATE NOCASE, (NOT (t1.c41)), t1.c41) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (t1.c41) ORDER BY PRINTF(((t1.c41)<(t1.c41)), CAST(t1.c41 AS NUMERIC), x'' COLLATE NOCASE, (NOT (t1.c41)), t1.c41) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c41) IS TRUE)  as count FROM t1 ORDER BY PRINTF(((t1.c41)<(t1.c41)), CAST(t1.c41 AS NUMERIC), x'' COLLATE NOCASE, (NOT (t1.c41)), t1.c41) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (t1.c41) ORDER BY PRINTF(((t1.c41)<(t1.c41)), CAST(t1.c41 AS NUMERIC), x'' COLLATE NOCASE, (NOT (t1.c41)), t1.c41) ASC  NULLS FIRST;
SELECT * FROM rt0 FULL OUTER JOIN t1 ON (- (((((((((rt0.c2)AND(t1.c41)))AND(269858300)))AND(rt0.c2)))AND(x'')))) WHERE (((HEX(DISTINCT rt0.c1))>=(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT rt0.c1))>=(rt0.c1))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (- (((((((((rt0.c2)AND(t1.c41)))AND(269858300)))AND(rt0.c2)))AND(x'')))));
SELECT * FROM rt0 FULL OUTER JOIN t1 ON (- (((((((((rt0.c2)AND(t1.c41)))AND(269858300)))AND(rt0.c2)))AND(x'')))) WHERE (((HEX(DISTINCT rt0.c1))>=(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT rt0.c1))>=(rt0.c1))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (- (((((((((rt0.c2)AND(t1.c41)))AND(269858300)))AND(rt0.c2)))AND(x'')))));
SELECT * FROM rt0 FULL OUTER JOIN t1 ON (- (((((((((rt0.c2)AND(t1.c41)))AND(269858300)))AND(rt0.c2)))AND(x'')))) WHERE (((HEX(DISTINCT rt0.c1))>=(rt0.c1)));
SELECT * FROM rt1 WHERE (((((rt1.c3)<(rt1.c3)))IS(((rt1.c4) IS FALSE)))) ORDER BY (NOT ((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)<(rt1.c3)))IS(((rt1.c4) IS FALSE)))) IS TRUE)  as count FROM rt1 ORDER BY (NOT ((rt1.c1 IN ()))));
SELECT * FROM rt1 WHERE (((((rt1.c3)<(rt1.c3)))IS(((rt1.c4) IS FALSE)))) ORDER BY (NOT ((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)<(rt1.c3)))IS(((rt1.c4) IS FALSE)))) IS TRUE)  as count FROM rt1 ORDER BY (NOT ((rt1.c1 IN ()))));
SELECT * FROM rt1 WHERE (((((rt1.c3)<(rt1.c3)))IS(((rt1.c4) IS FALSE)))) ORDER BY (NOT ((rt1.c1 IN ())));
SELECT * FROM rt1, rt0 NOT INDEXED, t1 WHERE (LOWER(DISTINCT ((rt0.c1)<(rt1.c2)))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c1 END)OR(CASE WHEN rt1.c3 THEN rt0.c2 END)))AND(((((((((rt1.c0)AND(NULL)))AND(rt1.c4)))OR(t1.c41)))AND(rt1.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((rt0.c1)<(rt1.c2)))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY ((((CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c1 END)OR(CASE WHEN rt1.c3 THEN rt0.c2 END)))AND(((((((((rt1.c0)AND(NULL)))AND(rt1.c4)))OR(t1.c41)))AND(rt1.c4))))  NULLS LAST);
SELECT * FROM rt1, rt0 NOT INDEXED, t1 WHERE (LOWER(DISTINCT ((rt0.c1)<(rt1.c2)))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c1 END)OR(CASE WHEN rt1.c3 THEN rt0.c2 END)))AND(((((((((rt1.c0)AND(NULL)))AND(rt1.c4)))OR(t1.c41)))AND(rt1.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((rt0.c1)<(rt1.c2)))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY ((((CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c1 END)OR(CASE WHEN rt1.c3 THEN rt0.c2 END)))AND(((((((((rt1.c0)AND(NULL)))AND(rt1.c4)))OR(t1.c41)))AND(rt1.c4))))  NULLS LAST);
SELECT * FROM rt1, rt0 NOT INDEXED, t1 WHERE (LOWER(DISTINCT ((rt0.c1)<(rt1.c2)))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c1 END)OR(CASE WHEN rt1.c3 THEN rt0.c2 END)))AND(((((((((rt1.c0)AND(NULL)))AND(rt1.c4)))OR(t1.c41)))AND(rt1.c4))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) BETWEEN ((x'' IN (rt0.c1, rt0.c2, rt0.c1))) AND (((rt0.c0)OR(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS REAL)) BETWEEN ((x'' IN (rt0.c1, rt0.c2, rt0.c1))) AND (((rt0.c0)OR(NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) BETWEEN ((x'' IN (rt0.c1, rt0.c2, rt0.c1))) AND (((rt0.c0)OR(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS REAL)) BETWEEN ((x'' IN (rt0.c1, rt0.c2, rt0.c1))) AND (((rt0.c0)OR(NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) BETWEEN ((x'' IN (rt0.c1, rt0.c2, rt0.c1))) AND (((rt0.c0)OR(NULL)))));
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT rt0.c2, rt0.c2) COLLATE RTRIM) ORDER BY (+ (rt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT rt0.c2, rt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT rt0.c2, rt0.c2) COLLATE RTRIM) ORDER BY (+ (rt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT rt0.c2, rt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT rt0.c2, rt0.c2) COLLATE RTRIM) ORDER BY (+ (rt0.c0)) COLLATE BINARY ASC;
SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT COALESCE(DISTINCT rt0.c2, 0.728949662901426), CAST(rt0.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT COALESCE(DISTINCT rt0.c2, 0.728949662901426), CAST(rt0.c2 AS TEXT))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT COALESCE(DISTINCT rt0.c2, 0.728949662901426), CAST(rt0.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT COALESCE(DISTINCT rt0.c2, 0.728949662901426), CAST(rt0.c2 AS TEXT))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT COALESCE(DISTINCT rt0.c2, 0.728949662901426), CAST(rt0.c2 AS TEXT)));
SELECT COUNT(*) FROM rt0 INNER JOIN t1 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c41))))||(t1.c41 COLLATE NOCASE)) WHERE (t1.c41);
SELECT SUM(count) FROM (SELECT ((t1.c41) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c41))))||(t1.c41 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 INNER JOIN t1 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c41))))||(t1.c41 COLLATE NOCASE)) WHERE (t1.c41);
SELECT SUM(count) FROM (SELECT ((t1.c41) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c41))))||(t1.c41 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 INNER JOIN t1 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c41))))||(t1.c41 COLLATE NOCASE)) WHERE (t1.c41);
SELECT * FROM rt1, t1 WHERE ((((- (t1.c41)))AND(((x'98a5')==(t1.c41)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t1.c41)))AND(((x'98a5')==(t1.c41))))) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE ((((- (t1.c41)))AND(((x'98a5')==(t1.c41)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t1.c41)))AND(((x'98a5')==(t1.c41))))) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE ((((- (t1.c41)))AND(((x'98a5')==(t1.c41)))));
SELECT COUNT(*) FROM rt0, t1 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE ((- (NULL)));
SELECT * FROM rt0 INNER JOIN t1 ON (- ((((rt1.c2, rt1.c3, rt1.c1))>((rt0.c2, rt1.c2, rt0.c2))))) RIGHT OUTER JOIN rt1 ON (+ (rt1.c1)) COLLATE RTRIM WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON (- ((((rt1.c2, rt1.c3, rt1.c1))>((rt0.c2, rt1.c2, rt0.c2))))) RIGHT OUTER JOIN rt1 ON (+ (rt1.c1)) COLLATE RTRIM);
SELECT * FROM rt0 INNER JOIN t1 ON (- ((((rt1.c2, rt1.c3, rt1.c1))>((rt0.c2, rt1.c2, rt0.c2))))) RIGHT OUTER JOIN rt1 ON (+ (rt1.c1)) COLLATE RTRIM WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON (- ((((rt1.c2, rt1.c3, rt1.c1))>((rt0.c2, rt1.c2, rt0.c2))))) RIGHT OUTER JOIN rt1 ON (+ (rt1.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c3 AS BLOB)) NOT BETWEEN ((- (rt1.c4))) AND (LIKELIHOOD(DISTINCT rt1.c1, 0.870722276726211))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS BLOB)) NOT BETWEEN ((- (rt1.c4))) AND (LIKELIHOOD(DISTINCT rt1.c1, 0.870722276726211)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c3 AS BLOB)) NOT BETWEEN ((- (rt1.c4))) AND (LIKELIHOOD(DISTINCT rt1.c1, 0.870722276726211))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS BLOB)) NOT BETWEEN ((- (rt1.c4))) AND (LIKELIHOOD(DISTINCT rt1.c1, 0.870722276726211)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c3 AS BLOB)) NOT BETWEEN ((- (rt1.c4))) AND (LIKELIHOOD(DISTINCT rt1.c1, 0.870722276726211))));
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (((((rt0.c0)|('1880556528'))) NOT BETWEEN ((+ (rt1.c1))) AND ((- (t1.c41))))) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)|('1880556528'))) NOT BETWEEN ((+ (rt1.c1))) AND ((- (t1.c41))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((CAST(rt0.c2 AS NUMERIC)) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (((((rt0.c0)|('1880556528'))) NOT BETWEEN ((+ (rt1.c1))) AND ((- (t1.c41))))) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)|('1880556528'))) NOT BETWEEN ((+ (rt1.c1))) AND ((- (t1.c41))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((CAST(rt0.c2 AS NUMERIC)) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (((((rt0.c0)|('1880556528'))) NOT BETWEEN ((+ (rt1.c1))) AND ((- (t1.c41))))) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) NOT NULL)  NULLS LAST;
SELECT ALL * FROM rt0, t1 WHERE (((NULL) IS TRUE)) ORDER BY CAST(((t1.c41) BETWEEN (rt0.c0) AND (t1.c41)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM rt0, t1 ORDER BY CAST(((t1.c41) BETWEEN (rt0.c0) AND (t1.c41)) AS BLOB));
SELECT ALL * FROM rt0, t1 WHERE (((NULL) IS TRUE)) ORDER BY CAST(((t1.c41) BETWEEN (rt0.c0) AND (t1.c41)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM rt0, t1 ORDER BY CAST(((t1.c41) BETWEEN (rt0.c0) AND (t1.c41)) AS BLOB));
SELECT ALL * FROM rt0, t1 WHERE (((NULL) IS TRUE)) ORDER BY CAST(((t1.c41) BETWEEN (rt0.c0) AND (t1.c41)) AS BLOB);
SELECT * FROM rt1, rt0 WHERE (((((((rt1.c0)AND(rt0.c0)))OR(rt0.c2)))<<(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c4 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)AND(rt0.c0)))OR(rt0.c2)))<<(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c4 THEN rt0.c0 END))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((((rt1.c0)AND(rt0.c0)))OR(rt0.c2)))<<(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c4 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)AND(rt0.c0)))OR(rt0.c2)))<<(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c4 THEN rt0.c0 END))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((((rt1.c0)AND(rt0.c0)))OR(rt0.c2)))<<(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c4 THEN rt0.c0 END)));
SELECT ALL * FROM rt0 WHERE (SUBSTR(LIKELIHOOD(DISTINCT rt0.c2, 0.3030818904454129), ((rt0.c1)/(rt0.c0)))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(LIKELIHOOD(DISTINCT rt0.c2, 0.3030818904454129), ((rt0.c1)/(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (SUBSTR(LIKELIHOOD(DISTINCT rt0.c2, 0.3030818904454129), ((rt0.c1)/(rt0.c0)))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(LIKELIHOOD(DISTINCT rt0.c2, 0.3030818904454129), ((rt0.c1)/(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (SUBSTR(LIKELIHOOD(DISTINCT rt0.c2, 0.3030818904454129), ((rt0.c1)/(rt0.c0)))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL) DESC  NULLS FIRST;
SELECT ALL * FROM t1, rt1, rt0 WHERE (((((((rt1.c0)AND(rt1.c1)))AND(NULL)))IS NOT(299969763))) ORDER BY (CASE WHEN rt1.c1 THEN rt0.c0 END IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(rt1.c1)))AND(NULL)))IS NOT(299969763))) IS TRUE)  as count FROM t1, rt1 NOT INDEXED, rt0 ORDER BY (CASE WHEN rt1.c1 THEN rt0.c0 END IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t1, rt1, rt0 WHERE (((((((rt1.c0)AND(rt1.c1)))AND(NULL)))IS NOT(299969763))) ORDER BY (CASE WHEN rt1.c1 THEN rt0.c0 END IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(rt1.c1)))AND(NULL)))IS NOT(299969763))) IS TRUE)  as count FROM t1, rt1 NOT INDEXED, rt0 ORDER BY (CASE WHEN rt1.c1 THEN rt0.c0 END IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t1, rt1, rt0 WHERE (((((((rt1.c0)AND(rt1.c1)))AND(NULL)))IS NOT(299969763))) ORDER BY (CASE WHEN rt1.c1 THEN rt0.c0 END IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (((rt1.c2)LIKE(rt1.c2)) COLLATE NOCASE) ORDER BY ((rt1.c4) NOT BETWEEN (rt1.c1) AND (0.04388378098064538)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)LIKE(rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((rt1.c4) NOT BETWEEN (rt1.c1) AND (0.04388378098064538)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (((rt1.c2)LIKE(rt1.c2)) COLLATE NOCASE) ORDER BY ((rt1.c4) NOT BETWEEN (rt1.c1) AND (0.04388378098064538)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)LIKE(rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((rt1.c4) NOT BETWEEN (rt1.c1) AND (0.04388378098064538)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (((rt1.c2)LIKE(rt1.c2)) COLLATE NOCASE) ORDER BY ((rt1.c4) NOT BETWEEN (rt1.c1) AND (0.04388378098064538)) COLLATE BINARY;
SELECT * FROM t1, rt1, rt0 WHERE (0.935808773347956) ORDER BY ((CAST(t1.c41 AS REAL))>=(HEX(x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.935808773347956) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((CAST(t1.c41 AS REAL))>=(HEX(x'')))  NULLS LAST);
SELECT * FROM t1, rt1, rt0 WHERE (0.935808773347956) ORDER BY ((CAST(t1.c41 AS REAL))>=(HEX(x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.935808773347956) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((CAST(t1.c41 AS REAL))>=(HEX(x'')))  NULLS LAST);
SELECT * FROM t1, rt1, rt0 WHERE (0.935808773347956) ORDER BY ((CAST(t1.c41 AS REAL))>=(HEX(x'')))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((((((((rt1.c0)OR(rt1.c4)))AND(rt1.c4)))OR(rt1.c3)))AND(rt1.c2)) THEN ((rt1.c1) ISNULL) ELSE ((rt1.c3)*(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt1.c0)OR(rt1.c4)))AND(rt1.c4)))OR(rt1.c3)))AND(rt1.c2)) THEN ((rt1.c1) ISNULL) ELSE ((rt1.c3)*(rt1.c2)) END) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((((((((rt1.c0)OR(rt1.c4)))AND(rt1.c4)))OR(rt1.c3)))AND(rt1.c2)) THEN ((rt1.c1) ISNULL) ELSE ((rt1.c3)*(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt1.c0)OR(rt1.c4)))AND(rt1.c4)))OR(rt1.c3)))AND(rt1.c2)) THEN ((rt1.c1) ISNULL) ELSE ((rt1.c3)*(rt1.c2)) END) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((((((((rt1.c0)OR(rt1.c4)))AND(rt1.c4)))OR(rt1.c3)))AND(rt1.c2)) THEN ((rt1.c1) ISNULL) ELSE ((rt1.c3)*(rt1.c2)) END);
SELECT ALL * FROM rt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (x'');
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((rt1.c3) NOTNULL))OR(rt1.c4)))OR(0.3995110434059388)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3) NOTNULL))OR(rt1.c4)))OR(0.3995110434059388))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((rt1.c3) NOTNULL))OR(rt1.c4)))OR(0.3995110434059388)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3) NOTNULL))OR(rt1.c4)))OR(0.3995110434059388))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((rt1.c3) NOTNULL))OR(rt1.c4)))OR(0.3995110434059388)));
SELECT COUNT(*) FROM rt1, t1 WHERE (((((((rt1.c4)/(rt1.c1)))OR(((((((((rt1.c3)AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c3)))))OR(((((t1.c41)OR(rt1.c4)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)/(rt1.c1)))OR(((((((((rt1.c3)AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c3)))))OR(((((t1.c41)OR(rt1.c4)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, t1);
SELECT COUNT(*) FROM rt1, t1 WHERE (((((((rt1.c4)/(rt1.c1)))OR(((((((((rt1.c3)AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c3)))))OR(((((t1.c41)OR(rt1.c4)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)/(rt1.c1)))OR(((((((((rt1.c3)AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c3)))))OR(((((t1.c41)OR(rt1.c4)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, t1);
SELECT COUNT(*) FROM rt1, t1 WHERE (((((((rt1.c4)/(rt1.c1)))OR(((((((((rt1.c3)AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c3)))))OR(((((t1.c41)OR(rt1.c4)))OR(rt1.c1)))));
SELECT * FROM t1 WHERE (CASE WHEN CASE WHEN t1.c41 THEN t1.c41 ELSE 0.3946562534136141 END THEN ((t1.c41) NOT NULL) WHEN ((t1.c41)IS(t1.c41)) THEN ((t1.c41) NOT BETWEEN (x'') AND (x'f05a')) WHEN IFNULL(t1.c41, t1.c41) THEN ((((t1.c41)AND('1377135606')))OR(t1.c41)) WHEN (((0.42865976438926345)) BETWEEN ((t1.c41)) AND ((t1.c41))) THEN ((t1.c41) BETWEEN (x'') AND (t1.c41)) WHEN CAST(t1.c41 AS TEXT) THEN CAST(t1.c41 AS REAL) WHEN ((t1.c41) BETWEEN (t1.c41) AND (NULL)) THEN NULLIF(t1.c41, t1.c41) WHEN (((t1.c41))<((t1.c41))) THEN ((t1.c41)/(t1.c41)) ELSE ((t1.c41) IS TRUE) END) ORDER BY (~ (((t1.c41) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t1.c41 THEN t1.c41 ELSE 0.3946562534136141 END THEN ((t1.c41) NOT NULL) WHEN ((t1.c41)IS(t1.c41)) THEN ((t1.c41) NOT BETWEEN (x'') AND (x'f05a')) WHEN IFNULL(t1.c41, t1.c41) THEN ((((t1.c41)AND('1377135606')))OR(t1.c41)) WHEN (((0.42865976438926345)) BETWEEN ((t1.c41)) AND ((t1.c41))) THEN ((t1.c41) BETWEEN (x'') AND (t1.c41)) WHEN CAST(t1.c41 AS TEXT) THEN CAST(t1.c41 AS REAL) WHEN ((t1.c41) BETWEEN (t1.c41) AND (NULL)) THEN NULLIF(t1.c41, t1.c41) WHEN (((t1.c41))<((t1.c41))) THEN ((t1.c41)/(t1.c41)) ELSE ((t1.c41) IS TRUE) END) IS TRUE)  as count FROM t1 ORDER BY (~ (((t1.c41) IS FALSE)))  NULLS FIRST);
SELECT * FROM t1 WHERE (CASE WHEN CASE WHEN t1.c41 THEN t1.c41 ELSE 0.3946562534136141 END THEN ((t1.c41) NOT NULL) WHEN ((t1.c41)IS(t1.c41)) THEN ((t1.c41) NOT BETWEEN (x'') AND (x'f05a')) WHEN IFNULL(t1.c41, t1.c41) THEN ((((t1.c41)AND('1377135606')))OR(t1.c41)) WHEN (((0.42865976438926345)) BETWEEN ((t1.c41)) AND ((t1.c41))) THEN ((t1.c41) BETWEEN (x'') AND (t1.c41)) WHEN CAST(t1.c41 AS TEXT) THEN CAST(t1.c41 AS REAL) WHEN ((t1.c41) BETWEEN (t1.c41) AND (NULL)) THEN NULLIF(t1.c41, t1.c41) WHEN (((t1.c41))<((t1.c41))) THEN ((t1.c41)/(t1.c41)) ELSE ((t1.c41) IS TRUE) END) ORDER BY (~ (((t1.c41) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t1.c41 THEN t1.c41 ELSE 0.3946562534136141 END THEN ((t1.c41) NOT NULL) WHEN ((t1.c41)IS(t1.c41)) THEN ((t1.c41) NOT BETWEEN (x'') AND (x'f05a')) WHEN IFNULL(t1.c41, t1.c41) THEN ((((t1.c41)AND('1377135606')))OR(t1.c41)) WHEN (((0.42865976438926345)) BETWEEN ((t1.c41)) AND ((t1.c41))) THEN ((t1.c41) BETWEEN (x'') AND (t1.c41)) WHEN CAST(t1.c41 AS TEXT) THEN CAST(t1.c41 AS REAL) WHEN ((t1.c41) BETWEEN (t1.c41) AND (NULL)) THEN NULLIF(t1.c41, t1.c41) WHEN (((t1.c41))<((t1.c41))) THEN ((t1.c41)/(t1.c41)) ELSE ((t1.c41) IS TRUE) END) IS TRUE)  as count FROM t1 ORDER BY (~ (((t1.c41) IS FALSE)))  NULLS FIRST);
SELECT * FROM t1 WHERE (CASE WHEN CASE WHEN t1.c41 THEN t1.c41 ELSE 0.3946562534136141 END THEN ((t1.c41) NOT NULL) WHEN ((t1.c41)IS(t1.c41)) THEN ((t1.c41) NOT BETWEEN (x'') AND (x'f05a')) WHEN IFNULL(t1.c41, t1.c41) THEN ((((t1.c41)AND('1377135606')))OR(t1.c41)) WHEN (((0.42865976438926345)) BETWEEN ((t1.c41)) AND ((t1.c41))) THEN ((t1.c41) BETWEEN (x'') AND (t1.c41)) WHEN CAST(t1.c41 AS TEXT) THEN CAST(t1.c41 AS REAL) WHEN ((t1.c41) BETWEEN (t1.c41) AND (NULL)) THEN NULLIF(t1.c41, t1.c41) WHEN (((t1.c41))<((t1.c41))) THEN ((t1.c41)/(t1.c41)) ELSE ((t1.c41) IS TRUE) END) ORDER BY (~ (((t1.c41) IS FALSE)))  NULLS FIRST;
SELECT * FROM t1, rt0, rt1 WHERE ((((IFNULL(rt1.c0, rt0.c0)))<>((((rt1.c3)-(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((IFNULL(rt1.c0, rt0.c0)))<>((((rt1.c3)-(rt0.c2)))))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE ((((IFNULL(rt1.c0, rt0.c0)))<>((((rt1.c3)-(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((IFNULL(rt1.c0, rt0.c0)))<>((((rt1.c3)-(rt0.c2)))))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE ((((IFNULL(rt1.c0, rt0.c0)))<>((((rt1.c3)-(rt0.c2))))));
SELECT * FROM t1 WHERE (((((((NULL) NOT BETWEEN (t1.c41) AND (t1.c41)))AND(((t1.c41)GLOB(t1.c41)))))AND((t1.c41 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((NULL) NOT BETWEEN (t1.c41) AND (t1.c41)))AND(((t1.c41)GLOB(t1.c41)))))AND((t1.c41 IN ())))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((((NULL) NOT BETWEEN (t1.c41) AND (t1.c41)))AND(((t1.c41)GLOB(t1.c41)))))AND((t1.c41 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((NULL) NOT BETWEEN (t1.c41) AND (t1.c41)))AND(((t1.c41)GLOB(t1.c41)))))AND((t1.c41 IN ())))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((((NULL) NOT BETWEEN (t1.c41) AND (t1.c41)))AND(((t1.c41)GLOB(t1.c41)))))AND((t1.c41 IN ()))));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c41 IN (t1.c41))) IS FALSE)) ORDER BY LIKE((t1.c41 IN ()), (NOT (t1.c41))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c41 IN (t1.c41))) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY LIKE((t1.c41 IN ()), (NOT (t1.c41))) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c41 IN (t1.c41))) IS FALSE)) ORDER BY LIKE((t1.c41 IN ()), (NOT (t1.c41))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c41 IN (t1.c41))) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY LIKE((t1.c41 IN ()), (NOT (t1.c41))) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c41 IN (t1.c41))) IS FALSE)) ORDER BY LIKE((t1.c41 IN ()), (NOT (t1.c41))) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((NULL)OR('*<<S5MQ')))GLOB(((rt0.c1) IS FALSE)))) ORDER BY ((rt1.c2) NOTNULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR('*<<S5MQ')))GLOB(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c2) NOTNULL) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((NULL)OR('*<<S5MQ')))GLOB(((rt0.c1) IS FALSE)))) ORDER BY ((rt1.c2) NOTNULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR('*<<S5MQ')))GLOB(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c2) NOTNULL) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((NULL)OR('*<<S5MQ')))GLOB(((rt0.c1) IS FALSE)))) ORDER BY ((rt1.c2) NOTNULL) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN t1 ON ((((rt1.c1) NOTNULL))|(((rt1.c3) NOT NULL))) WHERE ((+ ((NOT (t1.c41)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (t1.c41))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t1 ON ((((rt1.c1) NOTNULL))|(((rt1.c3) NOT NULL))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN t1 ON ((((rt1.c1) NOTNULL))|(((rt1.c3) NOT NULL))) WHERE ((+ ((NOT (t1.c41)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (t1.c41))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t1 ON ((((rt1.c1) NOTNULL))|(((rt1.c3) NOT NULL))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN t1 ON ((((rt1.c1) NOTNULL))|(((rt1.c3) NOT NULL))) WHERE ((+ ((NOT (t1.c41)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY TYPEOF(((rt1.c0)!=(rt1.c0))) DESC, (((rt1.c3) NOT NULL) IN ((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))))  NULLS FIRST, (CAST(rt1.c3 AS REAL) IN ()), (((- (1743253630)))<<((0.5549393665039557 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1 ORDER BY TYPEOF(((rt1.c0)!=(rt1.c0))) DESC, (((rt1.c3) NOT NULL) IN ((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))))  NULLS FIRST, (CAST(rt1.c3 AS REAL) IN ()), (((- (1743253630)))<<((0.5549393665039557 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY TYPEOF(((rt1.c0)!=(rt1.c0))) DESC, (((rt1.c3) NOT NULL) IN ((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))))  NULLS FIRST, (CAST(rt1.c3 AS REAL) IN ()), (((- (1743253630)))<<((0.5549393665039557 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1 ORDER BY TYPEOF(((rt1.c0)!=(rt1.c0))) DESC, (((rt1.c3) NOT NULL) IN ((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))))  NULLS FIRST, (CAST(rt1.c3 AS REAL) IN ()), (((- (1743253630)))<<((0.5549393665039557 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY TYPEOF(((rt1.c0)!=(rt1.c0))) DESC, (((rt1.c3) NOT NULL) IN ((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))))  NULLS FIRST, (CAST(rt1.c3 AS REAL) IN ()), (((- (1743253630)))<<((0.5549393665039557 IN ()))) ASC  NULLS LAST;
SELECT * FROM rt0, t1, rt1 WHERE (((rt1.c2) NOT BETWEEN ((rt0.c1 IN (rt1.c4))) AND (((t1.c41)<>(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOT BETWEEN ((rt0.c1 IN (rt1.c4))) AND (((t1.c41)<>(rt1.c3))))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT * FROM rt0, t1, rt1 WHERE (((rt1.c2) NOT BETWEEN ((rt0.c1 IN (rt1.c4))) AND (((t1.c41)<>(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOT BETWEEN ((rt0.c1 IN (rt1.c4))) AND (((t1.c41)<>(rt1.c3))))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT * FROM rt0, t1, rt1 WHERE (((rt1.c2) NOT BETWEEN ((rt0.c1 IN (rt1.c4))) AND (((t1.c41)<>(rt1.c3)))));
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN rt1 WHERE (0x1dd41926);
SELECT SUM(count) FROM (SELECT ((0x1dd41926) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN rt1 WHERE (0x1dd41926);
SELECT SUM(count) FROM (SELECT ((0x1dd41926) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN rt1 WHERE (0x1dd41926);
SELECT * FROM t1, rt1 WHERE (x'') ORDER BY ((((((rt1.c1)AND(t1.c41)))AND(rt1.c0))) NOT BETWEEN (((rt1.c3)<=(t1.c41))) AND ('aaH~')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, rt1 ORDER BY ((((((rt1.c1)AND(t1.c41)))AND(rt1.c0))) NOT BETWEEN (((rt1.c3)<=(t1.c41))) AND ('aaH~')) ASC  NULLS LAST);
SELECT * FROM t1, rt1 WHERE (x'') ORDER BY ((((((rt1.c1)AND(t1.c41)))AND(rt1.c0))) NOT BETWEEN (((rt1.c3)<=(t1.c41))) AND ('aaH~')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, rt1 ORDER BY ((((((rt1.c1)AND(t1.c41)))AND(rt1.c0))) NOT BETWEEN (((rt1.c3)<=(t1.c41))) AND ('aaH~')) ASC  NULLS LAST);
SELECT * FROM t1, rt1 WHERE (x'') ORDER BY ((((((rt1.c1)AND(t1.c41)))AND(rt1.c0))) NOT BETWEEN (((rt1.c3)<=(t1.c41))) AND ('aaH~')) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(t1.c41 COLLATE NOCASE AS INTEGER)) ORDER BY ((((((t1.c41)OR(t1.c41)))OR(NULL)))<(t1.c41));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c41 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c41)OR(t1.c41)))OR(NULL)))<(t1.c41)));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(t1.c41 COLLATE NOCASE AS INTEGER)) ORDER BY ((((((t1.c41)OR(t1.c41)))OR(NULL)))<(t1.c41));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c41 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c41)OR(t1.c41)))OR(NULL)))<(t1.c41)));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(t1.c41 COLLATE NOCASE AS INTEGER)) ORDER BY ((((((t1.c41)OR(t1.c41)))OR(NULL)))<(t1.c41));
SELECT * FROM t1 WHERE (ABS(x'af3b' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((ABS(x'af3b' COLLATE RTRIM)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (ABS(x'af3b' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((ABS(x'af3b' COLLATE RTRIM)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (ABS(x'af3b' COLLATE RTRIM));
SELECT * FROM rt0, t1, rt1 WHERE (((((rt1.c2)GLOB(x'0dbe'))) NOT BETWEEN (UNLIKELY(rt1.c3)) AND (CASE rt1.c1  WHEN rt1.c4 THEN rt1.c4 WHEN rt0.c1 THEN x'5251' WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)GLOB(x'0dbe'))) NOT BETWEEN (UNLIKELY(rt1.c3)) AND (CASE rt1.c1  WHEN rt1.c4 THEN rt1.c4 WHEN rt0.c1 THEN x'5251' WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT * FROM rt0, t1, rt1 WHERE (((((rt1.c2)GLOB(x'0dbe'))) NOT BETWEEN (UNLIKELY(rt1.c3)) AND (CASE rt1.c1  WHEN rt1.c4 THEN rt1.c4 WHEN rt0.c1 THEN x'5251' WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)GLOB(x'0dbe'))) NOT BETWEEN (UNLIKELY(rt1.c3)) AND (CASE rt1.c1  WHEN rt1.c4 THEN rt1.c4 WHEN rt0.c1 THEN x'5251' WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT * FROM rt0, t1, rt1 WHERE (((((rt1.c2)GLOB(x'0dbe'))) NOT BETWEEN (UNLIKELY(rt1.c3)) AND (CASE rt1.c1  WHEN rt1.c4 THEN rt1.c4 WHEN rt0.c1 THEN x'5251' WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c2 END)));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE (NULL) ORDER BY (((('-679814541')-(rt0.c0)))GLOB(((0.9806710867016087)!=(rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON rt0.c2 ORDER BY (((('-679814541')-(rt0.c0)))GLOB(((0.9806710867016087)<>(rt1.c3)))) DESC);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE (NULL) ORDER BY (((('-679814541')-(rt0.c0)))GLOB(((0.9806710867016087)!=(rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON rt0.c2 ORDER BY (((('-679814541')-(rt0.c0)))GLOB(((0.9806710867016087)<>(rt1.c3)))) DESC);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE (NULL) ORDER BY (((('-679814541')-(rt0.c0)))GLOB(((0.9806710867016087)!=(rt1.c3)))) DESC;
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (((CASE WHEN rt1.c3 THEN rt0.c1 ELSE 0Xffffffffa6867ec0 END) ISNULL)) ORDER BY ((((t1.c41)|(rt1.c4)))/((rt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c3 THEN rt0.c1 ELSE 0xffffffffa6867ec0 END) ISNULL)) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY ((((t1.c41)|(rt1.c4)))/((rt1.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (((CASE WHEN rt1.c3 THEN rt0.c1 ELSE 0Xffffffffa6867ec0 END) ISNULL)) ORDER BY ((((t1.c41)|(rt1.c4)))/((rt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c3 THEN rt0.c1 ELSE 0xffffffffa6867ec0 END) ISNULL)) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY ((((t1.c41)|(rt1.c4)))/((rt1.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (((CASE WHEN rt1.c3 THEN rt0.c1 ELSE 0Xffffffffa6867ec0 END) ISNULL)) ORDER BY ((((t1.c41)|(rt1.c4)))/((rt1.c0 IN ())))  NULLS LAST;
SELECT ALL * FROM rt1 LEFT OUTER JOIN t1 ON ((x'' COLLATE BINARY)>(rt1.c2)) LEFT OUTER JOIN rt0 ON (((rt1.c0, rt1.c1, rt0.c1)) NOT BETWEEN ((t1.c41, rt1.c1, rt0.c2)) AND ((t1.c41, 0.6407420199870442, rt1.c2))) COLLATE RTRIM WHERE ((+ (((((rt0.c0)OR(rt0.c2)))OR(rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c0)OR(rt0.c2)))OR(rt1.c4))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t1 ON ((x'' COLLATE BINARY)>(rt1.c2)) LEFT OUTER JOIN rt0 ON (((rt1.c0, rt1.c1, rt0.c1)) NOT BETWEEN ((t1.c41, rt1.c1, rt0.c2)) AND ((t1.c41, 0.6407420199870442, rt1.c2))) COLLATE RTRIM);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t1 ON ((x'' COLLATE BINARY)>(rt1.c2)) LEFT OUTER JOIN rt0 ON (((rt1.c0, rt1.c1, rt0.c1)) NOT BETWEEN ((t1.c41, rt1.c1, rt0.c2)) AND ((t1.c41, 0.6407420199870442, rt1.c2))) COLLATE RTRIM WHERE ((+ (((((rt0.c0)OR(rt0.c2)))OR(rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c0)OR(rt0.c2)))OR(rt1.c4))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t1 ON ((x'' COLLATE BINARY)>(rt1.c2)) LEFT OUTER JOIN rt0 ON (((rt1.c0, rt1.c1, rt0.c1)) NOT BETWEEN ((t1.c41, rt1.c1, rt0.c2)) AND ((t1.c41, 0.6407420199870442, rt1.c2))) COLLATE RTRIM);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t1 ON ((x'' COLLATE BINARY)>(rt1.c2)) LEFT OUTER JOIN rt0 ON (((rt1.c0, rt1.c1, rt0.c1)) NOT BETWEEN ((t1.c41, rt1.c1, rt0.c2)) AND ((t1.c41, 0.6407420199870442, rt1.c2))) COLLATE RTRIM WHERE ((+ (((((rt0.c0)OR(rt0.c2)))OR(rt1.c4)))));
SELECT COUNT(*) FROM t1 NATURAL JOIN rt1 WHERE (0.6882726640396887) ORDER BY ((rt1.c2)<=(TYPEOF(rt1.c3))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.6882726640396887) IS TRUE)  as count FROM t1 NATURAL JOIN rt1 ORDER BY ((rt1.c2)<=(TYPEOF(rt1.c3))) ASC);
SELECT COUNT(*) FROM t1 NATURAL JOIN rt1 WHERE (0.6882726640396887) ORDER BY ((rt1.c2)<=(TYPEOF(rt1.c3))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.6882726640396887) IS TRUE)  as count FROM t1 NATURAL JOIN rt1 ORDER BY ((rt1.c2)<=(TYPEOF(rt1.c3))) ASC);
SELECT COUNT(*) FROM t1 NATURAL JOIN rt1 WHERE (0.6882726640396887) ORDER BY ((rt1.c2)<=(TYPEOF(rt1.c3))) ASC;
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (((rt1.c3) BETWEEN (t1.c41) AND (rt1.c0)) COLLATE BINARY) ORDER BY ((((((((rt1.c3)AND(rt1.c3)))OR(rt1.c3)))AND((rt1.c2 IN (t1.c41)))))AND(((NULL) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) ASC, (((((((((((((((('Eaꪡ')OR(rt1.c0)))OR(rt1.c2)))OR(t1.c41)))OR(rt1.c1)))OR(rt0.c1)))AND(rt1.c1)))OR(0.4540056437871145)))OR((~ (rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) BETWEEN (t1.c41) AND (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((((((rt1.c3)AND(rt1.c3)))OR(rt1.c3)))AND((rt1.c2 IN (t1.c41)))))AND(((NULL) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) ASC, (((((((((((((((('Eaꪡ')OR(rt1.c0)))OR(rt1.c2)))OR(t1.c41)))OR(rt1.c1)))OR(rt0.c1)))AND(rt1.c1)))OR(0.4540056437871145)))OR((~ (rt1.c4)))));
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (((rt1.c3) BETWEEN (t1.c41) AND (rt1.c0)) COLLATE BINARY) ORDER BY ((((((((rt1.c3)AND(rt1.c3)))OR(rt1.c3)))AND((rt1.c2 IN (t1.c41)))))AND(((NULL) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) ASC, (((((((((((((((('Eaꪡ')OR(rt1.c0)))OR(rt1.c2)))OR(t1.c41)))OR(rt1.c1)))OR(rt0.c1)))AND(rt1.c1)))OR(0.4540056437871145)))OR((~ (rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) BETWEEN (t1.c41) AND (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((((((rt1.c3)AND(rt1.c3)))OR(rt1.c3)))AND((rt1.c2 IN (t1.c41)))))AND(((NULL) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) ASC, (((((((((((((((('Eaꪡ')OR(rt1.c0)))OR(rt1.c2)))OR(t1.c41)))OR(rt1.c1)))OR(rt0.c1)))AND(rt1.c1)))OR(0.4540056437871145)))OR((~ (rt1.c4)))));
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (((rt1.c3) BETWEEN (t1.c41) AND (rt1.c0)) COLLATE BINARY) ORDER BY ((((((((rt1.c3)AND(rt1.c3)))OR(rt1.c3)))AND((rt1.c2 IN (t1.c41)))))AND(((NULL) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) ASC, (((((((((((((((('Eaꪡ')OR(rt1.c0)))OR(rt1.c2)))OR(t1.c41)))OR(rt1.c1)))OR(rt0.c1)))AND(rt1.c1)))OR(0.4540056437871145)))OR((~ (rt1.c4))));
SELECT COUNT(*) FROM rt0, t1 WHERE (CAST(rt0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (CAST(rt0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (CAST(rt0.c2 AS TEXT));
SELECT * FROM t1 FULL OUTER JOIN rt1 ON ((CASE WHEN '-718821688' THEN rt1.c4 ELSE rt1.c0 END) ISNULL) WHERE (((rt1.c4)+(load_extension(rt1.c3, rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4)+(load_extension(rt1.c3, rt1.c3)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt1 ON ((CASE WHEN '-718821688' THEN rt1.c4 ELSE rt1.c0 END) ISNULL));
SELECT * FROM t1 FULL OUTER JOIN rt1 ON ((CASE WHEN '-718821688' THEN rt1.c4 ELSE rt1.c0 END) ISNULL) WHERE (((rt1.c4)+(load_extension(rt1.c3, rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4)+(load_extension(rt1.c3, rt1.c3)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt1 ON ((CASE WHEN '-718821688' THEN rt1.c4 ELSE rt1.c0 END) ISNULL));
SELECT * FROM rt0 WHERE (((((rt0.c1) ISNULL))<((rt0.c2 IN ())))) ORDER BY UNLIKELY((rt0.c2 IN (rt0.c1, rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL))<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY((rt0.c2 IN (rt0.c1, rt0.c0))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c1) ISNULL))<((rt0.c2 IN ())))) ORDER BY UNLIKELY((rt0.c2 IN (rt0.c1, rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL))<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY((rt0.c2 IN (rt0.c1, rt0.c0))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c1) ISNULL))<((rt0.c2 IN ())))) ORDER BY UNLIKELY((rt0.c2 IN (rt0.c1, rt0.c0))) DESC  NULLS FIRST;
SELECT * FROM rt1, rt0, t1 WHERE ((((NOT (t1.c41)))|(((rt1.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c41)))|(((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE ((((NOT (t1.c41)))|(((rt1.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c41)))|(((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE ((((NOT (t1.c41)))|(((rt1.c2) IS FALSE))));
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (((rt1.c3 COLLATE BINARY)<=(((rt1.c2) BETWEEN (NULL) AND (0.7987217468333422))))) ORDER BY (- ((~ (rt1.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE BINARY)<=(((rt1.c2) BETWEEN (NULL) AND (0.7987217468333422))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY (- ((~ (rt1.c3)))) ASC);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (((rt1.c3 COLLATE BINARY)<=(((rt1.c2) BETWEEN (NULL) AND (0.7987217468333422))))) ORDER BY (- ((~ (rt1.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE BINARY)<=(((rt1.c2) BETWEEN (NULL) AND (0.7987217468333422))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY (- ((~ (rt1.c3)))) ASC);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (((rt1.c3 COLLATE BINARY)<=(((rt1.c2) BETWEEN (NULL) AND (0.7987217468333422))))) ORDER BY (- ((~ (rt1.c3)))) ASC;
SELECT COUNT(*) FROM t1 WHERE ('') ORDER BY (((t1.c41)&(t1.c41)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t1 ORDER BY (((t1.c41)&(t1.c41)) IN ()) DESC);
SELECT COUNT(*) FROM t1 WHERE ('') ORDER BY (((t1.c41)&(t1.c41)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t1 ORDER BY (((t1.c41)&(t1.c41)) IN ()) DESC);
SELECT COUNT(*) FROM t1 WHERE ('') ORDER BY (((t1.c41)&(t1.c41)) IN ()) DESC;
SELECT * FROM rt0 WHERE (((((((rt0.c1)>>(rt0.c1)))OR(IFNULL(DISTINCT rt0.c1, rt0.c0))))AND(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)>>(rt0.c1)))OR(IFNULL(DISTINCT rt0.c1, rt0.c0))))AND(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)>>(rt0.c1)))OR(IFNULL(DISTINCT rt0.c1, rt0.c0))))AND(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)>>(rt0.c1)))OR(IFNULL(DISTINCT rt0.c1, rt0.c0))))AND(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)>>(rt0.c1)))OR(IFNULL(DISTINCT rt0.c1, rt0.c0))))AND(CAST(rt0.c0 AS REAL))));
SELECT * FROM rt0 WHERE ((- ((+ (rt0.c0))))) ORDER BY CAST(0.10257188573891318 AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((- ((+ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(0.10257188573891318 AS NUMERIC));
SELECT * FROM rt0 WHERE ((- ((+ (rt0.c0))))) ORDER BY CAST(0.10257188573891318 AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((- ((+ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(0.10257188573891318 AS NUMERIC));
SELECT * FROM rt0 WHERE ((- ((+ (rt0.c0))))) ORDER BY CAST(0.10257188573891318 AS NUMERIC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON json_array_length(rt1.c4) COLLATE RTRIM WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON json_array_length(rt1.c4) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON json_array_length(rt1.c4) COLLATE RTRIM WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON json_array_length(rt1.c4) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON json_array_length(rt1.c4) COLLATE RTRIM WHERE (rt1.c2);
SELECT * FROM t1 WHERE ((+ ('-547689246'))) ORDER BY ((((((((t1.c41 COLLATE BINARY)OR(((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41)))))AND(((t1.c41) IS TRUE))))AND((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, t1.c41, t1.c41))))))OR(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ('-547689246'))) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c41 COLLATE BINARY)OR(((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41)))))AND(((t1.c41) IS TRUE))))AND((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, t1.c41, t1.c41))))))OR(NULL))  NULLS LAST);
SELECT * FROM t1 WHERE ((+ ('-547689246'))) ORDER BY ((((((((t1.c41 COLLATE BINARY)OR(((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41)))))AND(((t1.c41) IS TRUE))))AND((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, t1.c41, t1.c41))))))OR(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ('-547689246'))) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c41 COLLATE BINARY)OR(((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41)))))AND(((t1.c41) IS TRUE))))AND((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, t1.c41, t1.c41))))))OR(NULL))  NULLS LAST);
SELECT * FROM t1 WHERE ((+ ('-547689246'))) ORDER BY ((((((((t1.c41 COLLATE BINARY)OR(((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41)))))AND(((t1.c41) IS TRUE))))AND((((t1.c41, t1.c41, t1.c41)) BETWEEN ((t1.c41, t1.c41, t1.c41)) AND ((t1.c41, t1.c41, t1.c41))))))OR(NULL))  NULLS LAST;
SELECT ALL * FROM rt0, rt1, t1 WHERE (CAST(rt1.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE (CAST(rt1.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE (CAST(rt1.c0 COLLATE NOCASE AS INTEGER));
SELECT ALL * FROM t1 WHERE (LOWER(ABS(t1.c41)));
SELECT SUM(count) FROM (SELECT ((LOWER(ABS(t1.c41))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (LOWER(ABS(t1.c41)));
SELECT SUM(count) FROM (SELECT ((LOWER(ABS(t1.c41))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (LOWER(ABS(t1.c41)));
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c41, t1.c41, t1.c41))>((t1.c41, t1.c41, NULL)))))<=((t1.c41)))) ORDER BY CASE ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))  WHEN ((t1.c41)=(t1.c41)) THEN json_type(t1.c41) WHEN ((t1.c41)>(t1.c41)) THEN (((t1.c41))<((t1.c41))) WHEN '13457892' THEN CASE WHEN t1.c41 THEN ',,' END END, t1.c41  NULLS LAST, CAST('' AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c41, t1.c41, t1.c41))>((t1.c41, t1.c41, NULL)))))<=((t1.c41)))) IS TRUE)  as count FROM t1 ORDER BY CASE ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))  WHEN ((t1.c41)==(t1.c41)) THEN json_type(t1.c41) WHEN ((t1.c41)>(t1.c41)) THEN (((t1.c41))<((t1.c41))) WHEN '13457892' THEN CASE WHEN t1.c41 THEN ',,' END END, t1.c41  NULLS LAST, CAST('' AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c41, t1.c41, t1.c41))>((t1.c41, t1.c41, NULL)))))<=((t1.c41)))) ORDER BY CASE ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))  WHEN ((t1.c41)=(t1.c41)) THEN json_type(t1.c41) WHEN ((t1.c41)>(t1.c41)) THEN (((t1.c41))<((t1.c41))) WHEN '13457892' THEN CASE WHEN t1.c41 THEN ',,' END END, t1.c41  NULLS LAST, CAST('' AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c41, t1.c41, t1.c41))>((t1.c41, t1.c41, NULL)))))<=((t1.c41)))) IS TRUE)  as count FROM t1 ORDER BY CASE ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))  WHEN ((t1.c41)==(t1.c41)) THEN json_type(t1.c41) WHEN ((t1.c41)>(t1.c41)) THEN (((t1.c41))<((t1.c41))) WHEN '13457892' THEN CASE WHEN t1.c41 THEN ',,' END END, t1.c41  NULLS LAST, CAST('' AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c41, t1.c41, t1.c41))>((t1.c41, t1.c41, NULL)))))<=((t1.c41)))) ORDER BY CASE ((t1.c41) NOT BETWEEN (t1.c41) AND (t1.c41))  WHEN ((t1.c41)=(t1.c41)) THEN json_type(t1.c41) WHEN ((t1.c41)>(t1.c41)) THEN (((t1.c41))<((t1.c41))) WHEN '13457892' THEN CASE WHEN t1.c41 THEN ',,' END END, t1.c41  NULLS LAST, CAST('' AS INTEGER)  NULLS LAST;
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((((rt0.c2))=((rt1.c2))))|(rt1.c0 COLLATE BINARY))) ORDER BY ((((((rt0.c1)OR(t1.c41)))OR(rt1.c1)))AND(((rt1.c4)GLOB(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))=((rt1.c2))))|(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((((rt0.c1)OR(t1.c41)))OR(rt1.c1)))AND(((rt1.c4)GLOB(rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((((rt0.c2))=((rt1.c2))))|(rt1.c0 COLLATE BINARY))) ORDER BY ((((((rt0.c1)OR(t1.c41)))OR(rt1.c1)))AND(((rt1.c4)GLOB(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))=((rt1.c2))))|(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((((rt0.c1)OR(t1.c41)))OR(rt1.c1)))AND(((rt1.c4)GLOB(rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((((rt0.c2))=((rt1.c2))))|(rt1.c0 COLLATE BINARY))) ORDER BY ((((((rt0.c1)OR(t1.c41)))OR(rt1.c1)))AND(((rt1.c4)GLOB(rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((NULL)>(rt1.c1)) THEN (+ (rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL)>(rt1.c1)) THEN (+ (rt1.c4)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((NULL)>(rt1.c1)) THEN (+ (rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL)>(rt1.c1)) THEN (+ (rt1.c4)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((NULL)>(rt1.c1)) THEN (+ (rt1.c4)) END);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE ((((rt1.c4)) NOT BETWEEN (((rt1.c4 IN ()))) AND ((((rt0.c0)||(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) NOT BETWEEN (((rt1.c4 IN ()))) AND ((((rt0.c0)||(rt1.c2)))))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE ((((rt1.c4)) NOT BETWEEN (((rt1.c4 IN ()))) AND ((((rt0.c0)||(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) NOT BETWEEN (((rt1.c4 IN ()))) AND ((((rt0.c0)||(rt1.c2)))))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE ((((rt1.c4)) NOT BETWEEN (((rt1.c4 IN ()))) AND ((((rt0.c0)||(rt1.c2))))));
SELECT ALL * FROM t1, rt1, rt0 WHERE (CASE t1.c41 COLLATE NOCASE  WHEN json_extract(rt1.c2, rt1.c3) THEN (+ (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c41 COLLATE NOCASE  WHEN json_extract(rt1.c2, rt1.c3) THEN (+ (rt1.c0)) END) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE (CASE t1.c41 COLLATE NOCASE  WHEN json_extract(rt1.c2, rt1.c3) THEN (+ (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c41 COLLATE NOCASE  WHEN json_extract(rt1.c2, rt1.c3) THEN (+ (rt1.c0)) END) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE (CASE t1.c41 COLLATE NOCASE  WHEN json_extract(rt1.c2, rt1.c3) THEN (+ (rt1.c0)) END);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(0.39271886504234543)))OR(rt0.c1)) THEN CAST(1956646548 AS NUMERIC) ELSE rt0.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c0)AND(0.39271886504234543)))OR(rt0.c1)) THEN CAST(1956646548 AS NUMERIC) ELSE rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(0.39271886504234543)))OR(rt0.c1)) THEN CAST(1956646548 AS NUMERIC) ELSE rt0.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c0)AND(0.39271886504234543)))OR(rt0.c1)) THEN CAST(1956646548 AS NUMERIC) ELSE rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(0.39271886504234543)))OR(rt0.c1)) THEN CAST(1956646548 AS NUMERIC) ELSE rt0.c2 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT * FROM t1 WHERE (((((t1.c41))<=((t1.c41))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t1.c41))<=((t1.c41))) IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c41))<=((t1.c41))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t1.c41))<=((t1.c41))) IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c41))<=((t1.c41))) IN ()));
SELECT * FROM rt1, t1, rt0 WHERE (CAST('' AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE (CAST('' AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE (CAST('' AS TEXT) COLLATE BINARY);
SELECT ALL * FROM rt0, t1 WHERE (0.6839120003264099);
SELECT SUM(count) FROM (SELECT ALL ((0.6839120003264099) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (0.6839120003264099);
SELECT SUM(count) FROM (SELECT ALL ((0.6839120003264099) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (0.6839120003264099);
SELECT * FROM rt1, rt0 WHERE (((rt1.c3 IN (NULL, rt1.c0)) IN ((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 IN (NULL, rt1.c0)) IN ((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((rt1.c3 IN (NULL, rt1.c0)) IN ((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 IN (NULL, rt1.c0)) IN ((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((rt1.c3 IN (NULL, rt1.c0)) IN ((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))))));
SELECT ALL * FROM t1, rt0, rt1 WHERE ((((NULL))>((((0.4432074861563676)>>(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))>((((0.4432074861563676)>>(rt1.c2)))))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE ((((NULL))>((((0.4432074861563676)>>(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))>((((0.4432074861563676)>>(rt1.c2)))))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE ((((NULL))>((((0.4432074861563676)>>(rt1.c2))))));
SELECT * FROM t1, rt0 WHERE ((+ ((+ (t1.c41)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (t1.c41))))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((+ ((+ (t1.c41)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (t1.c41))))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((+ ((+ (t1.c41)))));
SELECT ALL * FROM rt0 WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c1, 0.21696401907955953, rt0.c1))) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END) ORDER BY (((((-1080616972)>(rt0.c0))))>((((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE RTRIM  WHEN (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c1, 0.21696401907955953, rt0.c1))) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (((((-1080616972)>(rt0.c0))))>((((rt0.c1) NOT NULL)))));
SELECT ALL * FROM rt0 WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c1, 0.21696401907955953, rt0.c1))) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END) ORDER BY (((((-1080616972)>(rt0.c0))))>((((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE RTRIM  WHEN (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c1, 0.21696401907955953, rt0.c1))) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (((((-1080616972)>(rt0.c0))))>((((rt0.c1) NOT NULL)))));
SELECT ALL * FROM rt0 WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c1, 0.21696401907955953, rt0.c1))) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END) ORDER BY (((((-1080616972)>(rt0.c0))))>((((rt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (CASE WHEN ((rt0.c2)LIKE('')) THEN rt0.c0 COLLATE BINARY WHEN CASE WHEN rt1.c4 THEN t1.c41 WHEN t1.c41 THEN rt1.c4 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c0 END THEN rt1.c2 WHEN ((t1.c41)%(rt0.c2)) THEN rt1.c3 WHEN rt0.c0 THEN ((rt1.c4) IS FALSE) WHEN json_array_length(rt1.c2, t1.c41) THEN ((t1.c41) NOTNULL) WHEN (rt1.c0 IN ()) THEN rt1.c0 WHEN TRIM(0Xffffffffdd25f89b) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt1.c0)) ELSE CASE WHEN rt0.c0 THEN rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)LIKE('')) THEN rt0.c0 COLLATE BINARY WHEN CASE WHEN rt1.c4 THEN t1.c41 WHEN t1.c41 THEN rt1.c4 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c0 END THEN rt1.c2 WHEN ((t1.c41)%(rt0.c2)) THEN rt1.c3 WHEN rt0.c0 THEN ((rt1.c4) IS FALSE) WHEN json_array_length(rt1.c2, t1.c41) THEN ((t1.c41) NOTNULL) WHEN (rt1.c0 IN ()) THEN rt1.c0 WHEN TRIM(0Xffffffffdd25f89b) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt1.c0)) ELSE CASE WHEN rt0.c0 THEN rt0.c1 END END) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (CASE WHEN ((rt0.c2)LIKE('')) THEN rt0.c0 COLLATE BINARY WHEN CASE WHEN rt1.c4 THEN t1.c41 WHEN t1.c41 THEN rt1.c4 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c0 END THEN rt1.c2 WHEN ((t1.c41)%(rt0.c2)) THEN rt1.c3 WHEN rt0.c0 THEN ((rt1.c4) IS FALSE) WHEN json_array_length(rt1.c2, t1.c41) THEN ((t1.c41) NOTNULL) WHEN (rt1.c0 IN ()) THEN rt1.c0 WHEN TRIM(0Xffffffffdd25f89b) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt1.c0)) ELSE CASE WHEN rt0.c0 THEN rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)LIKE('')) THEN rt0.c0 COLLATE BINARY WHEN CASE WHEN rt1.c4 THEN t1.c41 WHEN t1.c41 THEN rt1.c4 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c0 END THEN rt1.c2 WHEN ((t1.c41)%(rt0.c2)) THEN rt1.c3 WHEN rt0.c0 THEN ((rt1.c4) IS FALSE) WHEN json_array_length(rt1.c2, t1.c41) THEN ((t1.c41) NOTNULL) WHEN (rt1.c0 IN ()) THEN rt1.c0 WHEN TRIM(0Xffffffffdd25f89b) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt1.c0)) ELSE CASE WHEN rt0.c0 THEN rt0.c1 END END) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (CASE WHEN ((rt0.c2)LIKE('')) THEN rt0.c0 COLLATE BINARY WHEN CASE WHEN rt1.c4 THEN t1.c41 WHEN t1.c41 THEN rt1.c4 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c0 END THEN rt1.c2 WHEN ((t1.c41)%(rt0.c2)) THEN rt1.c3 WHEN rt0.c0 THEN ((rt1.c4) IS FALSE) WHEN json_array_length(rt1.c2, t1.c41) THEN ((t1.c41) NOTNULL) WHEN (rt1.c0 IN ()) THEN rt1.c0 WHEN TRIM(0Xffffffffdd25f89b) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt1.c0)) ELSE CASE WHEN rt0.c0 THEN rt0.c1 END END);
SELECT * FROM t1, rt1 WHERE (((((rt1.c3)||(rt1.c2)))>=(((t1.c41) NOT NULL)))) ORDER BY CASE ((rt1.c1) NOTNULL)  WHEN CASE rt1.c1  WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c4) BETWEEN (t1.c41) AND (rt1.c0)) ELSE ((((t1.c41)OR(rt1.c1)))AND(rt1.c2)) END, (((+ (t1.c41))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)||(rt1.c2)))>=(((t1.c41) NOT NULL)))) IS TRUE)  as count FROM t1, rt1 ORDER BY CASE ((rt1.c1) NOTNULL)  WHEN CASE rt1.c1  WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c4) BETWEEN (t1.c41) AND (rt1.c0)) ELSE ((((t1.c41)OR(rt1.c1)))AND(rt1.c2)) END, (((+ (t1.c41))) IS TRUE) DESC);
SELECT * FROM t1, rt1 WHERE (((((rt1.c3)||(rt1.c2)))>=(((t1.c41) NOT NULL)))) ORDER BY CASE ((rt1.c1) NOTNULL)  WHEN CASE rt1.c1  WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c4) BETWEEN (t1.c41) AND (rt1.c0)) ELSE ((((t1.c41)OR(rt1.c1)))AND(rt1.c2)) END, (((+ (t1.c41))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)||(rt1.c2)))>=(((t1.c41) NOT NULL)))) IS TRUE)  as count FROM t1, rt1 ORDER BY CASE ((rt1.c1) NOTNULL)  WHEN CASE rt1.c1  WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c4) BETWEEN (t1.c41) AND (rt1.c0)) ELSE ((((t1.c41)OR(rt1.c1)))AND(rt1.c2)) END, (((+ (t1.c41))) IS TRUE) DESC);
SELECT * FROM t1, rt1 WHERE (((((rt1.c3)||(rt1.c2)))>=(((t1.c41) NOT NULL)))) ORDER BY CASE ((rt1.c1) NOTNULL)  WHEN CASE rt1.c1  WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c4) BETWEEN (t1.c41) AND (rt1.c0)) ELSE ((((t1.c41)OR(rt1.c1)))AND(rt1.c2)) END, (((+ (t1.c41))) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM rt0, t1 CROSS JOIN rt1 ON SQLITE_COMPILEOPTION_USED(CHAR(rt1.c2)) WHERE ((~ (rt1.c1))) ORDER BY ((((((((((((rt1.c4)AND(t1.c41)))OR(rt0.c2)))OR(rt0.c0)))AND(rt1.c4)))OR(rt1.c4)))AND(rt1.c4)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rt1.c1))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN rt1 ON SQLITE_COMPILEOPTION_USED(CHAR(rt1.c2)) ORDER BY ((((((((((((rt1.c4)AND(t1.c41)))OR(rt0.c2)))OR(rt0.c0)))AND(rt1.c4)))OR(rt1.c4)))AND(rt1.c4)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1 CROSS JOIN rt1 ON SQLITE_COMPILEOPTION_USED(CHAR(rt1.c2)) WHERE ((~ (rt1.c1))) ORDER BY ((((((((((((rt1.c4)AND(t1.c41)))OR(rt0.c2)))OR(rt0.c0)))AND(rt1.c4)))OR(rt1.c4)))AND(rt1.c4)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rt1.c1))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN rt1 ON SQLITE_COMPILEOPTION_USED(CHAR(rt1.c2)) ORDER BY ((((((((((((rt1.c4)AND(t1.c41)))OR(rt0.c2)))OR(rt0.c0)))AND(rt1.c4)))OR(rt1.c4)))AND(rt1.c4)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1 CROSS JOIN rt1 ON SQLITE_COMPILEOPTION_USED(CHAR(rt1.c2)) WHERE ((~ (rt1.c1))) ORDER BY ((((((((((((rt1.c4)AND(t1.c41)))OR(rt0.c2)))OR(rt0.c0)))AND(rt1.c4)))OR(rt1.c4)))AND(rt1.c4)) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((t1.c41)IS NOT(((0.5322721526219338)IS NOT(t1.c41)))));
SELECT SUM(count) FROM (SELECT ((((t1.c41)IS NOT(((0.5322721526219338)IS NOT(t1.c41))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c41)IS NOT(((0.5322721526219338)IS NOT(t1.c41)))));
SELECT SUM(count) FROM (SELECT ((((t1.c41)IS NOT(((0.5322721526219338)IS NOT(t1.c41))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c41)IS NOT(((0.5322721526219338)IS NOT(t1.c41)))));
SELECT COUNT(*) FROM t1 WHERE (((TRIM(t1.c41)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t1.c41)) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((TRIM(t1.c41)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t1.c41)) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((TRIM(t1.c41)) IS FALSE));
SELECT ALL * FROM t1, rt0, rt1 WHERE (((CASE WHEN '-1695840690' THEN rt0.c2 END)/('-2112709050'))) ORDER BY ((((((t1.c41) IS FALSE))AND(rt1.c0 COLLATE BINARY)))OR(((rt0.c1) BETWEEN (rt0.c0) AND (t1.c41)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '-1695840690' THEN rt0.c2 END)/('-2112709050'))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((((((t1.c41) IS FALSE))AND(rt1.c0 COLLATE BINARY)))OR(((rt0.c1) BETWEEN (rt0.c0) AND (t1.c41)))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, rt0, rt1 WHERE (((CASE WHEN '-1695840690' THEN rt0.c2 END)/('-2112709050'))) ORDER BY ((((((t1.c41) IS FALSE))AND(rt1.c0 COLLATE BINARY)))OR(((rt0.c1) BETWEEN (rt0.c0) AND (t1.c41)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '-1695840690' THEN rt0.c2 END)/('-2112709050'))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((((((t1.c41) IS FALSE))AND(rt1.c0 COLLATE BINARY)))OR(((rt0.c1) BETWEEN (rt0.c0) AND (t1.c41)))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, rt0, rt1 WHERE (((CASE WHEN '-1695840690' THEN rt0.c2 END)/('-2112709050'))) ORDER BY ((((((t1.c41) IS FALSE))AND(rt1.c0 COLLATE BINARY)))OR(((rt0.c1) BETWEEN (rt0.c0) AND (t1.c41)))) ASC  NULLS FIRST;
SELECT * FROM t1, rt0, rt1 WHERE (((t1.c41)>(UPPER(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((t1.c41)>(UPPER(rt1.c2)))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE (((t1.c41)>(UPPER(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((t1.c41)>(UPPER(rt1.c2)))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE (((t1.c41)>(UPPER(rt1.c2))));
SELECT COUNT(*) FROM rt1 WHERE ((('-2116564150')+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY rt1.c4 ASC  NULLS LAST, CASE WHEN rt1.c2 COLLATE BINARY THEN (rt1.c0 IN ()) WHEN rt1.c1 THEN '_*tV!r]' WHEN CASE rt1.c4  WHEN x'' THEN rt1.c3 ELSE rt1.c4 END THEN ((rt1.c1)&(rt1.c4)) ELSE 0x2057b3f0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-2116564150')+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c4 ASC  NULLS LAST, CASE WHEN rt1.c2 COLLATE BINARY THEN (rt1.c0 IN ()) WHEN rt1.c1 THEN '_*tV!r]' WHEN CASE rt1.c4  WHEN x'' THEN rt1.c3 ELSE rt1.c4 END THEN ((rt1.c1)&(rt1.c4)) ELSE 0x2057b3f0 END  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((('-2116564150')+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY rt1.c4 ASC  NULLS LAST, CASE WHEN rt1.c2 COLLATE BINARY THEN (rt1.c0 IN ()) WHEN rt1.c1 THEN '_*tV!r]' WHEN CASE rt1.c4  WHEN x'' THEN rt1.c3 ELSE rt1.c4 END THEN ((rt1.c1)&(rt1.c4)) ELSE 0x2057b3f0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-2116564150')+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c4 ASC  NULLS LAST, CASE WHEN rt1.c2 COLLATE BINARY THEN (rt1.c0 IN ()) WHEN rt1.c1 THEN '_*tV!r]' WHEN CASE rt1.c4  WHEN x'' THEN rt1.c3 ELSE rt1.c4 END THEN ((rt1.c1)&(rt1.c4)) ELSE 0x2057b3f0 END  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((('-2116564150')+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY rt1.c4 ASC  NULLS LAST, CASE WHEN rt1.c2 COLLATE BINARY THEN (rt1.c0 IN ()) WHEN rt1.c1 THEN '_*tV!r]' WHEN CASE rt1.c4  WHEN x'' THEN rt1.c3 ELSE rt1.c4 END THEN ((rt1.c1)&(rt1.c4)) ELSE 0x2057b3f0 END  NULLS FIRST;
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE ((NULL IN ()));
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE ((((rt0.c1)) BETWEEN ((((t1.c41)/(rt0.c1)))) AND (((rt0.c0 IN ()))))) ORDER BY 0x276bf045  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((t1.c41)/(rt0.c1)))) AND (((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY 0X276bf045  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE ((((rt0.c1)) BETWEEN ((((t1.c41)/(rt0.c1)))) AND (((rt0.c0 IN ()))))) ORDER BY 0x276bf045  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((t1.c41)/(rt0.c1)))) AND (((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY 0X276bf045  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(NULL AS NUMERIC));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c41 COLLATE NOCASE) BETWEEN (COALESCE(DISTINCT t1.c41, t1.c41, t1.c41, t1.c41)) AND (load_extension(0x422d9fe8)))) ORDER BY t1.c41 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c41 COLLATE NOCASE) BETWEEN (COALESCE(DISTINCT t1.c41, t1.c41, t1.c41, t1.c41)) AND (load_extension(0X422d9fe8)))) IS TRUE)  as count FROM t1 ORDER BY t1.c41 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c41 COLLATE NOCASE) BETWEEN (COALESCE(DISTINCT t1.c41, t1.c41, t1.c41, t1.c41)) AND (load_extension(0x422d9fe8)))) ORDER BY t1.c41 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c41 COLLATE NOCASE) BETWEEN (COALESCE(DISTINCT t1.c41, t1.c41, t1.c41, t1.c41)) AND (load_extension(0X422d9fe8)))) IS TRUE)  as count FROM t1 ORDER BY t1.c41 DESC  NULLS FIRST);
SELECT * FROM t1, rt1 WHERE (((rt1.c0)==(CASE WHEN t1.c41 THEN rt1.c4 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)=(CASE WHEN t1.c41 THEN rt1.c4 ELSE rt1.c1 END))) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (((rt1.c0)==(CASE WHEN t1.c41 THEN rt1.c4 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)=(CASE WHEN t1.c41 THEN rt1.c4 ELSE rt1.c1 END))) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (((rt1.c0)==(CASE WHEN t1.c41 THEN rt1.c4 ELSE rt1.c1 END)));
SELECT * FROM t1 INNER JOIN rt1 ON ((rt1.c4) NOT NULL) CROSS JOIN rt0 ON NULLIF(DISTINCT LIKELIHOOD(rt0.c0, 0.066623353163754), ((rt1.c3)|(''))) WHERE (LIKELIHOOD(((rt1.c1)IS NOT(rt1.c1)), 0.4234674406424105)) ORDER BY ((rt1.c4)-(rt0.c0)) COLLATE RTRIM ASC, rt0.c2 DESC  NULLS LAST, (+ (rt1.c3)) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt1.c1)IS NOT(rt1.c1)), 0.4234674406424105)) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((rt1.c4) NOT NULL) CROSS JOIN rt0 ON NULLIF(DISTINCT LIKELIHOOD(rt0.c0, 0.066623353163754), ((rt1.c3)|(''))) ORDER BY ((rt1.c4)-(rt0.c0)) COLLATE RTRIM ASC, rt0.c2 DESC  NULLS LAST, (+ (rt1.c3)) ASC);
SELECT * FROM t1 INNER JOIN rt1 ON ((rt1.c4) NOT NULL) CROSS JOIN rt0 ON NULLIF(DISTINCT LIKELIHOOD(rt0.c0, 0.066623353163754), ((rt1.c3)|(''))) WHERE (LIKELIHOOD(((rt1.c1)IS NOT(rt1.c1)), 0.4234674406424105)) ORDER BY ((rt1.c4)-(rt0.c0)) COLLATE RTRIM ASC, rt0.c2 DESC  NULLS LAST, (+ (rt1.c3)) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt1.c1)IS NOT(rt1.c1)), 0.4234674406424105)) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((rt1.c4) NOT NULL) CROSS JOIN rt0 ON NULLIF(DISTINCT LIKELIHOOD(rt0.c0, 0.066623353163754), ((rt1.c3)|(''))) ORDER BY ((rt1.c4)-(rt0.c0)) COLLATE RTRIM ASC, rt0.c2 DESC  NULLS LAST, (+ (rt1.c3)) ASC);
SELECT * FROM t1 INNER JOIN rt1 ON ((rt1.c4) NOT NULL) CROSS JOIN rt0 ON NULLIF(DISTINCT LIKELIHOOD(rt0.c0, 0.066623353163754), ((rt1.c3)|(''))) WHERE (LIKELIHOOD(((rt1.c1)IS NOT(rt1.c1)), 0.4234674406424105)) ORDER BY ((rt1.c4)-(rt0.c0)) COLLATE RTRIM ASC, rt0.c2 DESC  NULLS LAST, (+ (rt1.c3)) ASC;
SELECT * FROM t1 WHERE ((- (((t1.c41)IS(t1.c41)))));
SELECT SUM(count) FROM (SELECT (((- (((t1.c41)IS(t1.c41))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((- (((t1.c41)IS(t1.c41)))));
SELECT SUM(count) FROM (SELECT (((- (((t1.c41)IS(t1.c41))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((- (((t1.c41)IS(t1.c41)))));
SELECT ALL * FROM t1, rt1 WHERE (((CAST(rt1.c4 AS INTEGER)) IS TRUE)) ORDER BY rt1.c3 ASC  NULLS FIRST, ((0.864972218043234)OR((((('-1175051034')OR(rt1.c2)))AND(rt1.c1)))) ASC  NULLS FIRST, t1.c41 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM t1, rt1 ORDER BY rt1.c3 ASC  NULLS FIRST, ((0.864972218043234)OR((((('-1175051034')OR(rt1.c2)))AND(rt1.c1)))) ASC  NULLS FIRST, t1.c41 COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t1, rt1 WHERE (((CAST(rt1.c4 AS INTEGER)) IS TRUE)) ORDER BY rt1.c3 ASC  NULLS FIRST, ((0.864972218043234)OR((((('-1175051034')OR(rt1.c2)))AND(rt1.c1)))) ASC  NULLS FIRST, t1.c41 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM t1, rt1 ORDER BY rt1.c3 ASC  NULLS FIRST, ((0.864972218043234)OR((((('-1175051034')OR(rt1.c2)))AND(rt1.c1)))) ASC  NULLS FIRST, t1.c41 COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t1, rt1 WHERE (((CAST(rt1.c4 AS INTEGER)) IS TRUE)) ORDER BY rt1.c3 ASC  NULLS FIRST, ((0.864972218043234)OR((((('-1175051034')OR(rt1.c2)))AND(rt1.c1)))) ASC  NULLS FIRST, t1.c41 COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t1 ON ((x'' IN ()) IN ()) WHERE ((((rt1.c3)) BETWEEN (((rt1.c3 IN ()))) AND ((rt1.c2))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3)) BETWEEN (((rt1.c3 IN ()))) AND ((rt1.c2)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t1 ON ((x'' IN ()) IN ()));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t1 ON ((x'' IN ()) IN ()) WHERE ((((rt1.c3)) BETWEEN (((rt1.c3 IN ()))) AND ((rt1.c2))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3)) BETWEEN (((rt1.c3 IN ()))) AND ((rt1.c2)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t1 ON ((x'' IN ()) IN ()));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t1 ON ((x'' IN ()) IN ()) WHERE ((((rt1.c3)) BETWEEN (((rt1.c3 IN ()))) AND ((rt1.c2))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (NULL) ORDER BY (((CAST(rt0.c0 AS NUMERIC), (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c3))), (+ (rt1.c3))))<((((((((((rt1.c2)AND(rt1.c4)))AND(rt1.c2)))OR(rt1.c3)))AND(rt1.c3)), ((rt1.c3) NOT BETWEEN (x'') AND (rt1.c4)), rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((CAST(rt0.c0 AS NUMERIC), (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c3))), (+ (rt1.c3))))<((((((((((rt1.c2)AND(rt1.c4)))AND(rt1.c2)))OR(rt1.c3)))AND(rt1.c3)), ((rt1.c3) NOT BETWEEN (x'') AND (rt1.c4)), rt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (NULL) ORDER BY (((CAST(rt0.c0 AS NUMERIC), (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c3))), (+ (rt1.c3))))<((((((((((rt1.c2)AND(rt1.c4)))AND(rt1.c2)))OR(rt1.c3)))AND(rt1.c3)), ((rt1.c3) NOT BETWEEN (x'') AND (rt1.c4)), rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((CAST(rt0.c0 AS NUMERIC), (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c3))), (+ (rt1.c3))))<((((((((((rt1.c2)AND(rt1.c4)))AND(rt1.c2)))OR(rt1.c3)))AND(rt1.c3)), ((rt1.c3) NOT BETWEEN (x'') AND (rt1.c4)), rt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (NULL) ORDER BY (((CAST(rt0.c0 AS NUMERIC), (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c3))), (+ (rt1.c3))))<((((((((((rt1.c2)AND(rt1.c4)))AND(rt1.c2)))OR(rt1.c3)))AND(rt1.c3)), ((rt1.c3) NOT BETWEEN (x'') AND (rt1.c4)), rt1.c0)))  NULLS FIRST;
SELECT ALL * FROM rt1, rt0 INNER JOIN t1 ON CAST(((t1.c41) NOT NULL) AS REAL) WHERE (((((rt0.c0) BETWEEN (rt1.c3) AND (rt1.c4)))GLOB(((rt0.c0) NOT NULL)))) ORDER BY ((IFNULL(DISTINCT rt1.c1, rt0.c0)) NOTNULL), CAST(((t1.c41)<=(rt1.c4)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt1.c3) AND (rt1.c4)))GLOB(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN t1 ON CAST(((t1.c41) NOT NULL) AS REAL) ORDER BY ((IFNULL(DISTINCT rt1.c1, rt0.c0)) NOTNULL), CAST(((t1.c41)<=(rt1.c4)) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM rt1, rt0 INNER JOIN t1 ON CAST(((t1.c41) NOT NULL) AS REAL) WHERE (((((rt0.c0) BETWEEN (rt1.c3) AND (rt1.c4)))GLOB(((rt0.c0) NOT NULL)))) ORDER BY ((IFNULL(DISTINCT rt1.c1, rt0.c0)) NOTNULL), CAST(((t1.c41)<=(rt1.c4)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt1.c3) AND (rt1.c4)))GLOB(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN t1 ON CAST(((t1.c41) NOT NULL) AS REAL) ORDER BY ((IFNULL(DISTINCT rt1.c1, rt0.c0)) NOTNULL), CAST(((t1.c41)<=(rt1.c4)) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM rt1, rt0 INNER JOIN t1 ON CAST(((t1.c41) NOT NULL) AS REAL) WHERE (((((rt0.c0) BETWEEN (rt1.c3) AND (rt1.c4)))GLOB(((rt0.c0) NOT NULL)))) ORDER BY ((IFNULL(DISTINCT rt1.c1, rt0.c0)) NOTNULL), CAST(((t1.c41)<=(rt1.c4)) AS INTEGER)  NULLS LAST;
SELECT * FROM rt1, t1 WHERE (TYPEOF(DISTINCT (rt1.c1 IN ()))) ORDER BY t1.c41  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (rt1.c1 IN ()))) IS TRUE)  as count FROM rt1, t1 ORDER BY t1.c41  NULLS FIRST);
SELECT * FROM rt1, t1 WHERE (TYPEOF(DISTINCT (rt1.c1 IN ()))) ORDER BY t1.c41  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (rt1.c1 IN ()))) IS TRUE)  as count FROM rt1, t1 ORDER BY t1.c41  NULLS FIRST);
SELECT * FROM rt1, t1 WHERE (TYPEOF(DISTINCT (rt1.c1 IN ()))) ORDER BY t1.c41  NULLS FIRST;
