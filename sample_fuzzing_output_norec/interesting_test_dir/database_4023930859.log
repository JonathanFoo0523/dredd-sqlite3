-- Time: 2024/06/09 06:58:48
-- Database: database59
-- Database version: 3.40.0
-- seed value: 4023930859
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 2ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1); -- 1ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('', '-1321351672'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1859007313); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '49588'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=892785948,4');\n; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL WHERE ((((vt1.c1)OR((((vt1.c0))<((vt1.c0))))))AND(CAST(vt1.c1 AS TEXT))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '54502'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ANALYZE t0; -- 20ms;
INSERT OR IGNORE INTO t0 VALUES (x''), ('-1321351672'), (x''); -- 0ms;
COMMIT; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE VIEW v0(c0) AS SELECT ((JULIANDAY(vt1.c1, vt1.c1, NULL, vt1.c0, t0.c0, vt1.c0, t0.c0)) BETWEEN (MAX(vt1.c1)) AND (((vt1.c1) NOT NULL))) FROM t0, vt1 WHERE ('-1774199831'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (223978988); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
ROLLBACK TRANSACTION; -- 17ms;
DROP TABLE IF EXISTS t0; -- 21ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (2.23978988E8), (x''), (NULL); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, prefix=376); -- 1ms;
PRAGMA foreign_keys = false; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (-1.321351672E9, NULL); -- 0ms;
ANALYZE vt0; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt1(c0, c1) VALUES (CAST(NULL AS BLOB), NULL), (NULL, 0.47235789576805853), (NULL, ''); -- 0ms;
REINDEX BINARY; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '23844'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '38611'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 20ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt11 USING rtree_i32(c0, c1, c2); -- 12ms;
ROLLBACK TRANSACTION; -- 22ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (x'6586', NULL); -- 1ms;
COMMIT; -- 0ms;
ANALYZE; -- 27ms;
UPDATE OR IGNORE vt0 SET (c1)=(0.7950789863088361) WHERE ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR((((vt0.c1))=((vt0.c0))))))AND(-1071843180)))AND((((vt0.c0))<=((vt0.c0))))))OR(((vt0.c1) ISNULL))); -- 1ms;
ANALYZE vt0; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '21678'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
INSERT OR FAIL INTO vt1 VALUES ('z}⟆', NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x'3818d29b'), (0.8133440553524591), (NULL); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (0.47235789576805853), (0.3007126965993717); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0.2285065064377656, c1=0xa15b4cb, c0=''; -- 0ms;
END; -- 13ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (0.02772997212769035), (''), (0x51490fa3), (x'ae89'), ('8	_泯z*O*'); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt1 SET c0='-1684723770' WHERE (~ ((((vt1.c1))<((vt1.c0))))); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'ab4d'); -- 7ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (x'8140', NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.8308569431271049); -- 0ms;
PRAGMA cache_spill = 1581079272589007271; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO vt1(c1, c0) VALUES (0.5613108192800608, '-20736971'); -- 0ms;
INSERT OR FAIL INTO vt0(c1, c0) VALUES (x'd69b', NULL), (NULL, NULL), ('-2007852620', 1653759812); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-392825393,10');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 2ms;
INSERT OR ABORT INTO vt1(c0) VALUES (x''), (NULL), (x''); -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 3ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=('1183147587', x'') WHERE (NOT (((x'ec74')AND(vt0.c1)))); -- 12ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (',', 184229144), ('--鐵R', (((((x'' IN ()))AND(LIKELY(1.84229144E8))))AND(((x'') IS FALSE)))), (x'86a3', '0.8133440553524591'), (x'd5f2', x'4034'), ('#.^7D', x'eb6b'); -- 1ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES (0.8567197264803532, NULL), (NULL, NULL), (0.02772997212769035, 'Gusxt\na'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (-1684723770, NULL), (0.7965291236780108, x''), (1641846952, x''); -- 15ms;
VACUUM temp; -- 0ms;
UPDATE OR FAIL vt1 SET c1=x'', c0=NULL; -- 1ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET (c1)=('-2131034648'); -- 3ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA stats; -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '62601'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
INSERT OR ROLLBACK INTO vt1(c1) VALUES (0.3007126965993717); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c1)AND(x'')))OR(vt1.c1))) IS FALSE)) ORDER BY ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1))) BETWEEN (vt1.c0) AND (((((((((vt1.c1)AND(vt1.c1)))OR(NULL)))AND(vt1.c0)))AND(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(x'')))OR(vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1))) BETWEEN (vt1.c0) AND (((((((((vt1.c1)AND(vt1.c1)))OR(NULL)))AND(vt1.c0)))AND(vt1.c1)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c1)AND(x'')))OR(vt1.c1))) IS FALSE)) ORDER BY ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1))) BETWEEN (vt1.c0) AND (((((((((vt1.c1)AND(vt1.c1)))OR(NULL)))AND(vt1.c0)))AND(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(x'')))OR(vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1))) BETWEEN (vt1.c0) AND (((((((((vt1.c1)AND(vt1.c1)))OR(NULL)))AND(vt1.c0)))AND(vt1.c1)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c1)AND(x'')))OR(vt1.c1))) IS FALSE)) ORDER BY ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1))) BETWEEN (vt1.c0) AND (((((((((vt1.c1)AND(vt1.c1)))OR(NULL)))AND(vt1.c0)))AND(vt1.c1)))) ASC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON NULL WHERE (((CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END) NOTNULL)) ORDER BY ((((((NULL) NOT NULL))AND(vt1.c0 COLLATE RTRIM)))AND(((vt0.c1)&(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON NULL ORDER BY ((((((NULL) NOT NULL))AND(vt1.c0 COLLATE RTRIM)))AND(((vt0.c1)&(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON NULL WHERE (((CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END) NOTNULL)) ORDER BY ((((((NULL) NOT NULL))AND(vt1.c0 COLLATE RTRIM)))AND(((vt0.c1)&(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON NULL ORDER BY ((((((NULL) NOT NULL))AND(vt1.c0 COLLATE RTRIM)))AND(((vt0.c1)&(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON NULL WHERE (((CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END) NOTNULL)) ORDER BY ((((((NULL) NOT NULL))AND(vt1.c0 COLLATE RTRIM)))AND(((vt0.c1)&(vt0.c0)))) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt0.c1))) NOTNULL));
SELECT * FROM vt1, vt0 WHERE (IFNULL(DISTINCT '0.5613108192800608', ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)))) ORDER BY (((vt0.c0) NOTNULL) IN ((vt1.c1 IN (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT '0.5613108192800608', ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0) NOTNULL) IN ((vt1.c1 IN (vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (IFNULL(DISTINCT '0.5613108192800608', ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)))) ORDER BY (((vt0.c0) NOTNULL) IN ((vt1.c1 IN (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT '0.5613108192800608', ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0) NOTNULL) IN ((vt1.c1 IN (vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (IFNULL(DISTINCT '0.5613108192800608', ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)))) ORDER BY (((vt0.c0) NOTNULL) IN ((vt1.c1 IN (vt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CASE ((((((((vt1.c0)AND(vt0.c0)))AND('-894581533')))AND(vt0.c0)))AND(vt1.c0))  WHEN ((vt1.c1)<>(vt1.c1)) THEN ((0.7965291236780108)<<(vt1.c1)) WHEN INSTR(vt1.c0, vt1.c1) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN MAX(vt1.c1, vt1.c0) END WHERE ((((vt1.c0 IN ())) BETWEEN (((0.44169032052780277) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) BETWEEN (((0.44169032052780277) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE ((((((((vt1.c0)AND(vt0.c0)))AND('-894581533')))AND(vt0.c0)))AND(vt1.c0))  WHEN ((vt1.c1)<>(vt1.c1)) THEN ((0.7965291236780108)<<(vt1.c1)) WHEN INSTR(vt1.c0, vt1.c1) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN MAX(vt1.c1, vt1.c0) END);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CASE ((((((((vt1.c0)AND(vt0.c0)))AND('-894581533')))AND(vt0.c0)))AND(vt1.c0))  WHEN ((vt1.c1)<>(vt1.c1)) THEN ((0.7965291236780108)<<(vt1.c1)) WHEN INSTR(vt1.c0, vt1.c1) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN MAX(vt1.c1, vt1.c0) END WHERE ((((vt1.c0 IN ())) BETWEEN (((0.44169032052780277) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) BETWEEN (((0.44169032052780277) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE ((((((((vt1.c0)AND(vt0.c0)))AND('-894581533')))AND(vt0.c0)))AND(vt1.c0))  WHEN ((vt1.c1)<>(vt1.c1)) THEN ((0.7965291236780108)<<(vt1.c1)) WHEN INSTR(vt1.c0, vt1.c1) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN MAX(vt1.c1, vt1.c0) END);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CASE ((((((((vt1.c0)AND(vt0.c0)))AND('-894581533')))AND(vt0.c0)))AND(vt1.c0))  WHEN ((vt1.c1)<>(vt1.c1)) THEN ((0.7965291236780108)<<(vt1.c1)) WHEN INSTR(vt1.c0, vt1.c1) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN MAX(vt1.c1, vt1.c0) END WHERE ((((vt1.c0 IN ())) BETWEEN (((0.44169032052780277) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NOT (vt0.c0)), ((vt0.c0)*(vt0.c1)), '761580409'))<=((SUBSTR(vt0.c1, vt0.c0), '0.47235789576805853' COLLATE RTRIM, (+ (vt0.c0)))))) ORDER BY 0xfffffffff2720a85 ASC  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)<>(CAST(vt0.c1 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (vt0.c0)), ((vt0.c0)*(vt0.c1)), '761580409'))<=((SUBSTR(vt0.c1, vt0.c0), '0.47235789576805853' COLLATE RTRIM, (+ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY 0Xfffffffff2720a85 ASC  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)!=(CAST(vt0.c1 AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NOT (vt0.c0)), ((vt0.c0)*(vt0.c1)), '761580409'))<=((SUBSTR(vt0.c1, vt0.c0), '0.47235789576805853' COLLATE RTRIM, (+ (vt0.c0)))))) ORDER BY 0xfffffffff2720a85 ASC  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)<>(CAST(vt0.c1 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (vt0.c0)), ((vt0.c0)*(vt0.c1)), '761580409'))<=((SUBSTR(vt0.c1, vt0.c0), '0.47235789576805853' COLLATE RTRIM, (+ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY 0Xfffffffff2720a85 ASC  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)!=(CAST(vt0.c1 AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NOT (vt0.c0)), ((vt0.c0)*(vt0.c1)), '761580409'))<=((SUBSTR(vt0.c1, vt0.c0), '0.47235789576805853' COLLATE RTRIM, (+ (vt0.c0)))))) ORDER BY 0xfffffffff2720a85 ASC  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)<>(CAST(vt0.c1 AS NUMERIC))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (((vt0.c0)<=(vt1.c1)) IN ()) DESC  NULLS LAST, TIME((vt1.c0 IN ()), (vt1.c0 IN ()), ((vt0.c0) NOT NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)<=(vt1.c1)) IN ()) DESC  NULLS LAST, TIME((vt1.c0 IN ()), (vt1.c0 IN ()), ((vt0.c0) NOT NULL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (((vt0.c0)<=(vt1.c1)) IN ()) DESC  NULLS LAST, TIME((vt1.c0 IN ()), (vt1.c0 IN ()), ((vt0.c0) NOT NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)<=(vt1.c1)) IN ()) DESC  NULLS LAST, TIME((vt1.c0 IN ()), (vt1.c0 IN ()), ((vt0.c0) NOT NULL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (((vt0.c0)<=(vt1.c1)) IN ()) DESC  NULLS LAST, TIME((vt1.c0 IN ()), (vt1.c0 IN ()), ((vt0.c0) NOT NULL)) ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((- (CAST(vt1.c0 AS NUMERIC)))) ORDER BY TRIM(DISTINCT (((vt1.c1))>=((vt1.c0))), (+ (vt1.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TRIM(DISTINCT (((vt1.c1))>=((vt1.c0))), (+ (vt1.c1))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((- (CAST(vt1.c0 AS NUMERIC)))) ORDER BY TRIM(DISTINCT (((vt1.c1))>=((vt1.c0))), (+ (vt1.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TRIM(DISTINCT (((vt1.c1))>=((vt1.c0))), (+ (vt1.c1))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((- (CAST(vt1.c0 AS NUMERIC)))) ORDER BY TRIM(DISTINCT (((vt1.c1))>=((vt1.c0))), (+ (vt1.c1))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c1 IN ()))OR(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1 IN ()))OR(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c1 IN ()))OR(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1 IN ()))OR(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c1 IN ()))OR(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE (json_remove(((vt1.c1) IS TRUE), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((vt1.c1) IS TRUE), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (json_remove(((vt1.c1) IS TRUE), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((vt1.c1) IS TRUE), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (json_remove(((vt1.c1) IS TRUE), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))));
SELECT ALL * FROM vt0 WHERE ((+ ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((0.48076063029303806))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((0.48076063029303806)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((0.48076063029303806))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((0.48076063029303806)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((0.48076063029303806))))));
SELECT ALL * FROM vt1 WHERE (0.6168637409343841 COLLATE BINARY) ORDER BY ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, ((((((((((((((((((((vt1.c0)AND(1.641846952E9)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND('﷨P灓')))AND(((vt1.c0) NOT NULL))))AND((vt1.c1 IN ())))  NULLS FIRST, ((vt1.c0 IN (vt1.c1, vt1.c1)) IN (((NULL)|(vt1.c1)), CAST(vt1.c1 AS BLOB), (((vt1.c1, vt1.c1, vt1.c0))==((vt1.c0, 'I', vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((0.6168637409343841 COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, ((((((((((((((((((((vt1.c0)AND(1.641846952E9)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND('﷨P灓')))AND(((vt1.c0) NOT NULL))))AND((vt1.c1 IN ())))  NULLS FIRST, ((vt1.c0 IN (vt1.c1, vt1.c1)) IN (((NULL)|(vt1.c1)), CAST(vt1.c1 AS BLOB), (((vt1.c1, vt1.c1, vt1.c0))=((vt1.c0, 'I', vt1.c0))))));
SELECT ALL * FROM vt1 WHERE (0.6168637409343841 COLLATE BINARY) ORDER BY ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, ((((((((((((((((((((vt1.c0)AND(1.641846952E9)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND('﷨P灓')))AND(((vt1.c0) NOT NULL))))AND((vt1.c1 IN ())))  NULLS FIRST, ((vt1.c0 IN (vt1.c1, vt1.c1)) IN (((NULL)|(vt1.c1)), CAST(vt1.c1 AS BLOB), (((vt1.c1, vt1.c1, vt1.c0))==((vt1.c0, 'I', vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((0.6168637409343841 COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, ((((((((((((((((((((vt1.c0)AND(1.641846952E9)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND('﷨P灓')))AND(((vt1.c0) NOT NULL))))AND((vt1.c1 IN ())))  NULLS FIRST, ((vt1.c0 IN (vt1.c1, vt1.c1)) IN (((NULL)|(vt1.c1)), CAST(vt1.c1 AS BLOB), (((vt1.c1, vt1.c1, vt1.c0))=((vt1.c0, 'I', vt1.c0))))));
SELECT ALL * FROM vt0 WHERE (((((TYPEOF(DISTINCT vt0.c0))OR((NULL IN (vt0.c1)))))OR('rr')));
SELECT SUM(count) FROM (SELECT ALL ((((((TYPEOF(DISTINCT vt0.c0))OR((NULL IN (vt0.c1)))))OR('rr'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((TYPEOF(DISTINCT vt0.c0))OR((NULL IN (vt0.c1)))))OR('rr')));
SELECT SUM(count) FROM (SELECT ALL ((((((TYPEOF(DISTINCT vt0.c0))OR((NULL IN (vt0.c1)))))OR('rr'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((TYPEOF(DISTINCT vt0.c0))OR((NULL IN (vt0.c1)))))OR('rr')));
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)>=(((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>=(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)>=(((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>=(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)>=(((vt0.c0)<=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND((((vt0.c1))>=((vt0.c0))))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))))) ORDER BY (((0.2409848402717465)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((vt0.c1) IS FALSE))))  NULLS FIRST, ((vt0.c0) NOTNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)AND((((vt0.c1))>=((vt0.c0))))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((0.2409848402717465)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((vt0.c1) IS FALSE))))  NULLS FIRST, ((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND((((vt0.c1))>=((vt0.c0))))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))))) ORDER BY (((0.2409848402717465)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((vt0.c1) IS FALSE))))  NULLS FIRST, ((vt0.c0) NOTNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)AND((((vt0.c1))>=((vt0.c0))))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((0.2409848402717465)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((vt0.c1) IS FALSE))))  NULLS FIRST, ((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND((((vt0.c1))>=((vt0.c0))))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))))) ORDER BY (((0.2409848402717465)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((vt0.c1) IS FALSE))))  NULLS FIRST, ((vt0.c0) NOTNULL) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS FALSE))<<(0xffffffff9b9527c6))) ORDER BY ((vt0.c1)LIKE(vt0.c0)) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE))<<(0xffffffff9b9527c6))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)LIKE(vt0.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS FALSE))<<(0xffffffff9b9527c6))) ORDER BY ((vt0.c1)LIKE(vt0.c0)) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE))<<(0xffffffff9b9527c6))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)LIKE(vt0.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS FALSE))<<(0xffffffff9b9527c6))) ORDER BY ((vt0.c1)LIKE(vt0.c0)) COLLATE RTRIM COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c1);
SELECT * FROM vt1 INNER JOIN vt0 ON ((((((((((vt1.c1) NOTNULL))AND(vt0.c1 COLLATE NOCASE)))AND((~ (vt1.c0)))))AND((vt1.c1 IN (vt1.c1)))))AND(x'')) WHERE (((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((0.8308569431271049, vt0.c0, '')) AND ((vt0.c1, vt1.c0, vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((0.8308569431271049, vt0.c0, '')) AND ((vt0.c1, vt1.c0, vt1.c0))) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((((((((vt1.c1) NOTNULL))AND(vt0.c1 COLLATE NOCASE)))AND((~ (vt1.c0)))))AND((vt1.c1 IN (vt1.c1)))))AND(x'')));
SELECT * FROM vt1 INNER JOIN vt0 ON ((((((((((vt1.c1) NOTNULL))AND(vt0.c1 COLLATE NOCASE)))AND((~ (vt1.c0)))))AND((vt1.c1 IN (vt1.c1)))))AND(x'')) WHERE (((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((0.8308569431271049, vt0.c0, '')) AND ((vt0.c1, vt1.c0, vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((0.8308569431271049, vt0.c0, '')) AND ((vt0.c1, vt1.c0, vt1.c0))) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((((((((vt1.c1) NOTNULL))AND(vt0.c1 COLLATE NOCASE)))AND((~ (vt1.c0)))))AND((vt1.c1 IN (vt1.c1)))))AND(x'')));
SELECT * FROM vt1 INNER JOIN vt0 ON ((((((((((vt1.c1) NOTNULL))AND(vt0.c1 COLLATE NOCASE)))AND((~ (vt1.c0)))))AND((vt1.c1 IN (vt1.c1)))))AND(x'')) WHERE (((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((0.8308569431271049, vt0.c0, '')) AND ((vt0.c1, vt1.c0, vt1.c0))) IN ()));
SELECT * FROM vt0, vt1 WHERE (((TYPEOF(vt1.c0))>((((vt1.c0))>((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(vt1.c0))>((((vt1.c0))>((vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((TYPEOF(vt1.c0))>((((vt1.c0))>((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(vt1.c0))>((((vt1.c0))>((vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((TYPEOF(vt1.c0))>((((vt1.c0))>((vt0.c1))))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN ('-1826394029') AND (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN ('-1826394029') AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN ('-1826394029') AND (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN ('-1826394029') AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN ('-1826394029') AND (vt0.c0)) AS INTEGER));
SELECT * FROM vt1 WHERE (0.5047640064624868) ORDER BY ((vt1.c1)GLOB(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))) DESC  NULLS FIRST, ((((vt1.c0) IS TRUE))OR((vt1.c0 IN (vt1.c0, vt1.c1))));
SELECT SUM(count) FROM (SELECT ((0.5047640064624868) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1)GLOB(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))) DESC  NULLS FIRST, ((((vt1.c0) IS TRUE))OR((vt1.c0 IN (vt1.c0, vt1.c1)))));
SELECT * FROM vt1 WHERE (0.5047640064624868) ORDER BY ((vt1.c1)GLOB(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))) DESC  NULLS FIRST, ((((vt1.c0) IS TRUE))OR((vt1.c0 IN (vt1.c0, vt1.c1))));
SELECT SUM(count) FROM (SELECT ((0.5047640064624868) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1)GLOB(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))) DESC  NULLS FIRST, ((((vt1.c0) IS TRUE))OR((vt1.c0 IN (vt1.c0, vt1.c1)))));
SELECT * FROM vt1 WHERE (0.5047640064624868) ORDER BY ((vt1.c1)GLOB(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))) DESC  NULLS FIRST, ((((vt1.c0) IS TRUE))OR((vt1.c0 IN (vt1.c0, vt1.c1))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((((vt1.c1))>((vt0.c0))))OR(json_insert(vt0.c1, vt1.c0, vt1.c0))))AND(json_insert(vt1.c1, vt1.c1, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c1))>((vt0.c0))))OR(json_insert(vt0.c1, vt1.c0, vt1.c0))))AND(json_insert(vt1.c1, vt1.c1, vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((((vt1.c1))>((vt0.c0))))OR(json_insert(vt0.c1, vt1.c0, vt1.c0))))AND(json_insert(vt1.c1, vt1.c1, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c1))>((vt0.c0))))OR(json_insert(vt0.c1, vt1.c0, vt1.c0))))AND(json_insert(vt1.c1, vt1.c1, vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS TRUE)) ORDER BY CHANGES() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CHANGES() DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS TRUE)) ORDER BY CHANGES() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CHANGES() DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS TRUE)) ORDER BY CHANGES() DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (CASE IFNULL(vt1.c1, vt1.c0)  WHEN CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END THEN vt1.c0 WHEN vt0.c1 THEN (((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((vt0.c1, vt1.c0, vt1.c0))) WHEN ((((vt1.c0)AND(vt1.c1)))OR(vt0.c0)) THEN vt1.c0 ELSE (((vt0.c0, vt1.c1, vt0.c0)) BETWEEN ((vt0.c0, vt1.c1, vt0.c0)) AND ((vt0.c1, 0x61dc98a8, vt1.c1))) END) ORDER BY ((CAST(vt1.c1 AS REAL)) BETWEEN (((vt1.c0)+(vt0.c0))) AND (TRIM(DISTINCT vt1.c0, vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(vt1.c1, vt1.c0)  WHEN CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END THEN vt1.c0 WHEN vt0.c1 THEN (((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((vt0.c1, vt1.c0, vt1.c0))) WHEN ((((vt1.c0)AND(vt1.c1)))OR(vt0.c0)) THEN vt1.c0 ELSE (((vt0.c0, vt1.c1, vt0.c0)) BETWEEN ((vt0.c0, vt1.c1, vt0.c0)) AND ((vt0.c1, 0X61dc98a8, vt1.c1))) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c1 AS REAL)) BETWEEN (((vt1.c0)+(vt0.c0))) AND (TRIM(DISTINCT vt1.c0, vt0.c0)))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (CASE IFNULL(vt1.c1, vt1.c0)  WHEN CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END THEN vt1.c0 WHEN vt0.c1 THEN (((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((vt0.c1, vt1.c0, vt1.c0))) WHEN ((((vt1.c0)AND(vt1.c1)))OR(vt0.c0)) THEN vt1.c0 ELSE (((vt0.c0, vt1.c1, vt0.c0)) BETWEEN ((vt0.c0, vt1.c1, vt0.c0)) AND ((vt0.c1, 0x61dc98a8, vt1.c1))) END) ORDER BY ((CAST(vt1.c1 AS REAL)) BETWEEN (((vt1.c0)+(vt0.c0))) AND (TRIM(DISTINCT vt1.c0, vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(vt1.c1, vt1.c0)  WHEN CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END THEN vt1.c0 WHEN vt0.c1 THEN (((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((vt0.c1, vt1.c0, vt1.c0))) WHEN ((((vt1.c0)AND(vt1.c1)))OR(vt0.c0)) THEN vt1.c0 ELSE (((vt0.c0, vt1.c1, vt0.c0)) BETWEEN ((vt0.c0, vt1.c1, vt0.c0)) AND ((vt0.c1, 0X61dc98a8, vt1.c1))) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c1 AS REAL)) BETWEEN (((vt1.c0)+(vt0.c0))) AND (TRIM(DISTINCT vt1.c0, vt0.c0)))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (CASE IFNULL(vt1.c1, vt1.c0)  WHEN CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END THEN vt1.c0 WHEN vt0.c1 THEN (((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((vt0.c1, vt1.c0, vt1.c0))) WHEN ((((vt1.c0)AND(vt1.c1)))OR(vt0.c0)) THEN vt1.c0 ELSE (((vt0.c0, vt1.c1, vt0.c0)) BETWEEN ((vt0.c0, vt1.c1, vt0.c0)) AND ((vt0.c1, 0x61dc98a8, vt1.c1))) END) ORDER BY ((CAST(vt1.c1 AS REAL)) BETWEEN (((vt1.c0)+(vt0.c0))) AND (TRIM(DISTINCT vt1.c0, vt0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)GLOB(vt0.c1 COLLATE BINARY))) ORDER BY (((vt0.c0 IN (vt0.c1)))IS NOT(CASE WHEN vt0.c1 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)GLOB(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (((vt0.c0 IN (vt0.c1)))IS NOT(CASE WHEN vt0.c1 THEN vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)GLOB(vt0.c1 COLLATE BINARY))) ORDER BY (((vt0.c0 IN (vt0.c1)))IS NOT(CASE WHEN vt0.c1 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)GLOB(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (((vt0.c0 IN (vt0.c1)))IS NOT(CASE WHEN vt0.c1 THEN vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)GLOB(vt0.c1 COLLATE BINARY))) ORDER BY (((vt0.c0 IN (vt0.c1)))IS NOT(CASE WHEN vt0.c1 THEN vt0.c0 END))  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((((0.24585031351582654)AND(vt0.c0)))OR('0.2285065064377656')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((0.24585031351582654)AND(vt0.c0)))OR('0.2285065064377656')) AS TEXT)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((((0.24585031351582654)AND(vt0.c0)))OR('0.2285065064377656')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((0.24585031351582654)AND(vt0.c0)))OR('0.2285065064377656')) AS TEXT)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((((0.24585031351582654)AND(vt0.c0)))OR('0.2285065064377656')) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.24585031351582654) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0.24585031351582654) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.24585031351582654) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0.24585031351582654) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.24585031351582654) NOTNULL));
SELECT * FROM vt1 WHERE (json_quote(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_quote(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END)) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (json_quote(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_quote(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END)) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (json_quote(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c1) NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c1) NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c1) NOTNULL) AS NUMERIC));
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (x'');
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((COALESCE(vt0.c1, vt0.c1), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)<<(vt0.c1)))) AND ((CAST(vt0.c0 AS INTEGER), '-227407227', vt0.c1)))) ORDER BY CAST(((vt0.c0)%(vt0.c1)) AS BLOB)  NULLS LAST, TYPEOF(((vt0.c0)&(x'26fb'))) DESC, ((vt0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND (((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((COALESCE(vt0.c1, vt0.c1), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)<<(vt0.c1)))) AND ((CAST(vt0.c0 AS INTEGER), '-227407227', vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)%(vt0.c1)) AS BLOB)  NULLS LAST, TYPEOF(((vt0.c0)&(x'26fb'))) DESC, ((vt0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND (((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((COALESCE(vt0.c1, vt0.c1), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)<<(vt0.c1)))) AND ((CAST(vt0.c0 AS INTEGER), '-227407227', vt0.c1)))) ORDER BY CAST(((vt0.c0)%(vt0.c1)) AS BLOB)  NULLS LAST, TYPEOF(((vt0.c0)&(x'26fb'))) DESC, ((vt0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND (((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((COALESCE(vt0.c1, vt0.c1), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)<<(vt0.c1)))) AND ((CAST(vt0.c0 AS INTEGER), '-227407227', vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)%(vt0.c1)) AS BLOB)  NULLS LAST, TYPEOF(((vt0.c0)&(x'26fb'))) DESC, ((vt0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND (((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((COALESCE(vt0.c1, vt0.c1), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)<<(vt0.c1)))) AND ((CAST(vt0.c0 AS INTEGER), '-227407227', vt0.c1)))) ORDER BY CAST(((vt0.c0)%(vt0.c1)) AS BLOB)  NULLS LAST, TYPEOF(((vt0.c0)&(x'26fb'))) DESC, ((vt0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND (((vt0.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((((vt0.c1)OR(vt1.c1)))OR(vt1.c0)) AS BLOB)) ORDER BY (NOT (0xffffffffd0d95313)) ASC, ((((((((((((vt0.c0 COLLATE BINARY)OR(((x'') NOT BETWEEN (NULL) AND ('rr')))))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND((vt0.c1 IN (vt0.c1, vt0.c0)))))OR(CASE WHEN vt1.c0 THEN 0.1157850139827784 END)))OR(vt0.c0 COLLATE NOCASE)))AND(vt1.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)OR(vt1.c1)))OR(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (0Xffffffffd0d95313)) ASC, ((((((((((((vt0.c0 COLLATE BINARY)OR(((x'') NOT BETWEEN (NULL) AND ('rr')))))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND((vt0.c1 IN (vt0.c1, vt0.c0)))))OR(CASE WHEN vt1.c0 THEN 0.1157850139827784 END)))OR(vt0.c0 COLLATE NOCASE)))AND(vt1.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((((vt0.c1)OR(vt1.c1)))OR(vt1.c0)) AS BLOB)) ORDER BY (NOT (0xffffffffd0d95313)) ASC, ((((((((((((vt0.c0 COLLATE BINARY)OR(((x'') NOT BETWEEN (NULL) AND ('rr')))))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND((vt0.c1 IN (vt0.c1, vt0.c0)))))OR(CASE WHEN vt1.c0 THEN 0.1157850139827784 END)))OR(vt0.c0 COLLATE NOCASE)))AND(vt1.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)OR(vt1.c1)))OR(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (0Xffffffffd0d95313)) ASC, ((((((((((((vt0.c0 COLLATE BINARY)OR(((x'') NOT BETWEEN (NULL) AND ('rr')))))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND((vt0.c1 IN (vt0.c1, vt0.c0)))))OR(CASE WHEN vt1.c0 THEN 0.1157850139827784 END)))OR(vt0.c0 COLLATE NOCASE)))AND(vt1.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((((vt0.c1)OR(vt1.c1)))OR(vt1.c0)) AS BLOB)) ORDER BY (NOT (0xffffffffd0d95313)) ASC, ((((((((((((vt0.c0 COLLATE BINARY)OR(((x'') NOT BETWEEN (NULL) AND ('rr')))))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND((vt0.c1 IN (vt0.c1, vt0.c0)))))OR(CASE WHEN vt1.c0 THEN 0.1157850139827784 END)))OR(vt0.c0 COLLATE NOCASE)))AND(vt1.c1)) ASC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((NOT (((vt1.c0) BETWEEN (vt0.c0) AND (NULL))))) ORDER BY (((vt0.c0 IN ()))-(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0 IN ()))-(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((NOT (((vt1.c0) BETWEEN (vt0.c0) AND (NULL))))) ORDER BY (((vt0.c0 IN ()))-(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0 IN ()))-(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((NOT (((vt1.c0) BETWEEN (vt0.c0) AND (NULL))))) ORDER BY (((vt0.c0 IN ()))-(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE (x'fa9d' IN (vt0.c0))  WHEN '[1ga&' THEN (vt0.c0 IN ()) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (x'fa9d' IN (vt0.c0))  WHEN '[1ga&' THEN (vt0.c0 IN ()) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (x'fa9d' IN (vt0.c0))  WHEN '[1ga&' THEN (vt0.c0 IN ()) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (x'fa9d' IN (vt0.c0))  WHEN '[1ga&' THEN (vt0.c0 IN ()) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (x'fa9d' IN (vt0.c0))  WHEN '[1ga&' THEN (vt0.c0 IN ()) ELSE (vt0.c0 IN ()) END);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS INTEGER)) IS TRUE));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((vt1.c1)OR((((vt1.c1, vt1.c1, vt1.c0))=((vt0.c0, vt0.c1, vt1.c1))))))OR(MAX(vt0.c1, vt0.c0))))OR(vt1.c1)))AND((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c1)OR((((vt1.c1, vt1.c1, vt1.c0))=((vt0.c0, vt0.c1, vt1.c1))))))OR(MAX(vt0.c1, vt0.c0))))OR(vt1.c1)))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((vt1.c1)OR((((vt1.c1, vt1.c1, vt1.c0))=((vt0.c0, vt0.c1, vt1.c1))))))OR(MAX(vt0.c1, vt0.c0))))OR(vt1.c1)))AND((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c1)OR((((vt1.c1, vt1.c1, vt1.c0))=((vt0.c0, vt0.c1, vt1.c1))))))OR(MAX(vt0.c1, vt0.c0))))OR(vt1.c1)))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((vt1.c1)OR((((vt1.c1, vt1.c1, vt1.c0))=((vt0.c0, vt0.c1, vt1.c1))))))OR(MAX(vt0.c1, vt0.c0))))OR(vt1.c1)))AND((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((vt0.c1 IN (vt0.c0))) NOT NULL) WHERE (((((((vt1.c1)OR(vt0.c1)))AND(vt1.c0))) NOT BETWEEN (((vt1.c1) ISNULL)) AND (CASE '-204143477'  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)OR(vt0.c1)))AND(vt1.c0))) NOT BETWEEN (((vt1.c1) ISNULL)) AND (CASE '-204143477'  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt0.c1 IN (vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((vt0.c1 IN (vt0.c0))) NOT NULL) WHERE (((((((vt1.c1)OR(vt0.c1)))AND(vt1.c0))) NOT BETWEEN (((vt1.c1) ISNULL)) AND (CASE '-204143477'  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)OR(vt0.c1)))AND(vt1.c0))) NOT BETWEEN (((vt1.c1) ISNULL)) AND (CASE '-204143477'  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt0.c1 IN (vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((vt0.c1 IN (vt0.c0))) NOT NULL) WHERE (((((((vt1.c1)OR(vt0.c1)))AND(vt1.c0))) NOT BETWEEN (((vt1.c1) ISNULL)) AND (CASE '-204143477'  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt1 WHERE ((NOT ((+ (vt1.c0))))) ORDER BY vt1.c1  NULLS FIRST, LIKELY(DISTINCT vt1.c0) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1  NULLS FIRST, LIKELY(DISTINCT vt1.c0) COLLATE RTRIM ASC);
SELECT ALL * FROM vt1 WHERE ((NOT ((+ (vt1.c0))))) ORDER BY vt1.c1  NULLS FIRST, LIKELY(DISTINCT vt1.c0) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1  NULLS FIRST, LIKELY(DISTINCT vt1.c0) COLLATE RTRIM ASC);
SELECT ALL * FROM vt1 WHERE ((NOT ((+ (vt1.c0))))) ORDER BY vt1.c1  NULLS FIRST, LIKELY(DISTINCT vt1.c0) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (((vt1.c1)%(vt1.c1))))) ORDER BY vt1.c0 COLLATE NOCASE, ((CASE WHEN vt1.c1 THEN vt1.c0 END) BETWEEN (((((((((vt1.c1)OR(vt1.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(NULL))) AND (((vt0.c1)*('-1684723770'))))  NULLS LAST, ((((NULL)LIKE(vt1.c1))) BETWEEN (TRIM(DISTINCT '-1988019778', vt0.c0)) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c1)%(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 COLLATE NOCASE, ((CASE WHEN vt1.c1 THEN vt1.c0 END) BETWEEN (((((((((vt1.c1)OR(vt1.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(NULL))) AND (((vt0.c1)*('-1684723770'))))  NULLS LAST, ((((NULL)LIKE(vt1.c1))) BETWEEN (TRIM(DISTINCT '-1988019778', vt0.c0)) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (((vt1.c1)%(vt1.c1))))) ORDER BY vt1.c0 COLLATE NOCASE, ((CASE WHEN vt1.c1 THEN vt1.c0 END) BETWEEN (((((((((vt1.c1)OR(vt1.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(NULL))) AND (((vt0.c1)*('-1684723770'))))  NULLS LAST, ((((NULL)LIKE(vt1.c1))) BETWEEN (TRIM(DISTINCT '-1988019778', vt0.c0)) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c1)%(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 COLLATE NOCASE, ((CASE WHEN vt1.c1 THEN vt1.c0 END) BETWEEN (((((((((vt1.c1)OR(vt1.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(NULL))) AND (((vt0.c1)*('-1684723770'))))  NULLS LAST, ((((NULL)LIKE(vt1.c1))) BETWEEN (TRIM(DISTINCT '-1988019778', vt0.c0)) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (((vt1.c1)%(vt1.c1))))) ORDER BY vt1.c0 COLLATE NOCASE, ((CASE WHEN vt1.c1 THEN vt1.c0 END) BETWEEN (((((((((vt1.c1)OR(vt1.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(NULL))) AND (((vt0.c1)*('-1684723770'))))  NULLS LAST, ((((NULL)LIKE(vt1.c1))) BETWEEN (TRIM(DISTINCT '-1988019778', vt0.c0)) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((~ (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC))))OR(CAST(NULL AS INTEGER))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1)))))AND(MIN(vt0.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c1, vt1.c1)))) ORDER BY ((((((((((vt0.c1)OR(vt0.c1)))OR(vt1.c1)))OR(vt0.c1)))AND(vt1.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c1))) AND (((vt0.c0)<<(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((~ (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC))))OR(CAST(NULL AS INTEGER))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1)))))AND(MIN(vt0.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c1, vt1.c1)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt0.c1)OR(vt0.c1)))OR(vt1.c1)))OR(vt0.c1)))AND(vt1.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c1))) AND (((vt0.c0)<<(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((~ (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC))))OR(CAST(NULL AS INTEGER))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1)))))AND(MIN(vt0.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c1, vt1.c1)))) ORDER BY ((((((((((vt0.c1)OR(vt0.c1)))OR(vt1.c1)))OR(vt0.c1)))AND(vt1.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c1))) AND (((vt0.c0)<<(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((~ (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC))))OR(CAST(NULL AS INTEGER))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1)))))AND(MIN(vt0.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c1, vt1.c1)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt0.c1)OR(vt0.c1)))OR(vt1.c1)))OR(vt0.c1)))AND(vt1.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c1))) AND (((vt0.c0)<<(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((~ (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC))))OR(CAST(NULL AS INTEGER))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1)))))AND(MIN(vt0.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c1, vt1.c1)))) ORDER BY ((((((((((vt0.c1)OR(vt0.c1)))OR(vt1.c1)))OR(vt0.c1)))AND(vt1.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c1))) AND (((vt0.c0)<<(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON vt0.c0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c1))) BETWEEN (((vt1.c1)GLOB(vt0.c1))) AND (((vt0.c0)<=(vt1.c1))))) ORDER BY TYPEOF(DISTINCT (vt1.c0 IN (vt0.c0))), NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c1))) BETWEEN (((vt1.c1)GLOB(vt0.c1))) AND (((vt0.c0)<=(vt1.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt0.c0 ORDER BY TYPEOF(DISTINCT (vt1.c0 IN (vt0.c0))), NULL DESC  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON vt0.c0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c1))) BETWEEN (((vt1.c1)GLOB(vt0.c1))) AND (((vt0.c0)<=(vt1.c1))))) ORDER BY TYPEOF(DISTINCT (vt1.c0 IN (vt0.c0))), NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c1))) BETWEEN (((vt1.c1)GLOB(vt0.c1))) AND (((vt0.c0)<=(vt1.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt0.c0 ORDER BY TYPEOF(DISTINCT (vt1.c0 IN (vt0.c0))), NULL DESC  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON vt0.c0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c1))) BETWEEN (((vt1.c1)GLOB(vt0.c1))) AND (((vt0.c0)<=(vt1.c1))))) ORDER BY TYPEOF(DISTINCT (vt1.c0 IN (vt0.c0))), NULL DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((((((-1071843180)AND((((((((('')AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)))))AND(((vt0.c0)|(vt0.c1)))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0.685067702826247 END)))OR(((vt0.c0)IS(vt0.c0)))) WHERE (((((((((CASE WHEN vt1.c1 THEN vt1.c0 END)OR((vt0.c0 IN ()))))OR(((vt0.c1)>(x'')))))OR(vt0.c0)))AND(((x'')|(vt0.c0))))) ORDER BY CASE ((vt0.c1) ISNULL)  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)) THEN (NOT ('-735381418')) END DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt1.c1 THEN vt1.c0 END)OR((vt0.c0 IN ()))))OR(((vt0.c1)>(x'')))))OR(vt0.c0)))AND(((x'')|(vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((((((-1071843180)AND((((((((('')AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)))))AND(((vt0.c0)|(vt0.c1)))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0.685067702826247 END)))OR(((vt0.c0)IS(vt0.c0)))) ORDER BY CASE ((vt0.c1) ISNULL)  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)) THEN (NOT ('-735381418')) END DESC, vt0.c0);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((((((-1071843180)AND((((((((('')AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)))))AND(((vt0.c0)|(vt0.c1)))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0.685067702826247 END)))OR(((vt0.c0)IS(vt0.c0)))) WHERE (((((((((CASE WHEN vt1.c1 THEN vt1.c0 END)OR((vt0.c0 IN ()))))OR(((vt0.c1)>(x'')))))OR(vt0.c0)))AND(((x'')|(vt0.c0))))) ORDER BY CASE ((vt0.c1) ISNULL)  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)) THEN (NOT ('-735381418')) END DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt1.c1 THEN vt1.c0 END)OR((vt0.c0 IN ()))))OR(((vt0.c1)>(x'')))))OR(vt0.c0)))AND(((x'')|(vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((((((-1071843180)AND((((((((('')AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)))))AND(((vt0.c0)|(vt0.c1)))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0.685067702826247 END)))OR(((vt0.c0)IS(vt0.c0)))) ORDER BY CASE ((vt0.c1) ISNULL)  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)) THEN (NOT ('-735381418')) END DESC, vt0.c0);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((((((-1071843180)AND((((((((('')AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)))))AND(((vt0.c0)|(vt0.c1)))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0.685067702826247 END)))OR(((vt0.c0)IS(vt0.c0)))) WHERE (((((((((CASE WHEN vt1.c1 THEN vt1.c0 END)OR((vt0.c0 IN ()))))OR(((vt0.c1)>(x'')))))OR(vt0.c0)))AND(((x'')|(vt0.c0))))) ORDER BY CASE ((vt0.c1) ISNULL)  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)) THEN (NOT ('-735381418')) END DESC, vt0.c0;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)>=((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>=((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)>=((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>=((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)>=((vt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END)+(((vt0.c1)<=(vt0.c0))))) ORDER BY (('981578382') IS FALSE) DESC  NULLS LAST, (NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST, '0.685067702826247' ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 END)+(((vt0.c1)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (('981578382') IS FALSE) DESC  NULLS LAST, (NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST, '0.685067702826247' ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END)+(((vt0.c1)<=(vt0.c0))))) ORDER BY (('981578382') IS FALSE) DESC  NULLS LAST, (NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST, '0.685067702826247' ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 END)+(((vt0.c1)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (('981578382') IS FALSE) DESC  NULLS LAST, (NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST, '0.685067702826247' ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END)+(((vt0.c1)<=(vt0.c0))))) ORDER BY (('981578382') IS FALSE) DESC  NULLS LAST, (NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST, '0.685067702826247' ASC;
SELECT ALL * FROM vt1, vt0 WHERE (((NOT (vt1.c0)) IN ((((((((('1653759812')OR(vt1.c1)))AND(vt0.c1)))AND(vt1.c1)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((NOT (vt1.c0)) IN ((((((((('1653759812')OR(vt1.c1)))AND(vt0.c1)))AND(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((NOT (vt1.c0)) IN ((((((((('1653759812')OR(vt1.c1)))AND(vt0.c1)))AND(vt1.c1)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((NOT (vt1.c0)) IN ((((((((('1653759812')OR(vt1.c1)))AND(vt0.c1)))AND(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((NOT (vt1.c0)) IN ((((((((('1653759812')OR(vt1.c1)))AND(vt0.c1)))AND(vt1.c1)))AND(vt1.c1)))));
SELECT ALL * FROM vt0, vt1 WHERE ((+ (((NULL) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((NULL) ISNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((+ (((NULL) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((NULL) ISNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((+ (((NULL) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)OR(vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND ((vt1.c1 IN (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)OR(vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND ((vt1.c1 IN (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)OR(vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND ((vt1.c1 IN (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)OR(vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND ((vt1.c1 IN (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)OR(vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND ((vt1.c1 IN (vt1.c1)))));
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY vt0.c0;
SELECT * FROM vt0 INNER JOIN vt1 ON (- (((((((((vt0.c1)OR(vt0.c1)))OR(vt1.c1)))OR(vt0.c0)))AND(vt0.c1)))) WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) ORDER BY vt1.c0 COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST, UNLIKELY(DISTINCT vt1.c1) COLLATE RTRIM  NULLS FIRST, ((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)))AND(ABS(DISTINCT vt0.c1))))AND(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (- (((((((((vt0.c1)OR(vt0.c1)))OR(vt1.c1)))OR(vt0.c0)))AND(vt0.c1)))) ORDER BY vt1.c0 COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST, UNLIKELY(DISTINCT vt1.c1) COLLATE RTRIM  NULLS FIRST, ((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)))AND(ABS(DISTINCT vt0.c1))))AND(vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN vt1 ON (- (((((((((vt0.c1)OR(vt0.c1)))OR(vt1.c1)))OR(vt0.c0)))AND(vt0.c1)))) WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) ORDER BY vt1.c0 COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST, UNLIKELY(DISTINCT vt1.c1) COLLATE RTRIM  NULLS FIRST, ((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)))AND(ABS(DISTINCT vt0.c1))))AND(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (- (((((((((vt0.c1)OR(vt0.c1)))OR(vt1.c1)))OR(vt0.c0)))AND(vt0.c1)))) ORDER BY vt1.c0 COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST, UNLIKELY(DISTINCT vt1.c1) COLLATE RTRIM  NULLS FIRST, ((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)))AND(ABS(DISTINCT vt0.c1))))AND(vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN vt1 ON (- (((((((((vt0.c1)OR(vt0.c1)))OR(vt1.c1)))OR(vt0.c0)))AND(vt0.c1)))) WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) ORDER BY vt1.c0 COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST, UNLIKELY(DISTINCT vt1.c1) COLLATE RTRIM  NULLS FIRST, ((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)))AND(ABS(DISTINCT vt0.c1))))AND(vt0.c0))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1) IS FALSE) IN ())) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1) IS FALSE) IN ())) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1) IS FALSE) IN ())) ORDER BY vt0.c0 ASC;
SELECT * FROM vt1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt1, vt0 WHERE (((TIME(vt0.c1, vt1.c1, vt1.c1))+('1189324029')));
SELECT SUM(count) FROM (SELECT ((((TIME(vt0.c1, vt1.c1, vt1.c1))+('1189324029'))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((TIME(vt0.c1, vt1.c1, vt1.c1))+('1189324029')));
SELECT SUM(count) FROM (SELECT ((((TIME(vt0.c1, vt1.c1, vt1.c1))+('1189324029'))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((TIME(vt0.c1, vt1.c1, vt1.c1))+('1189324029')));
SELECT * FROM vt1, vt0 WHERE ((((~ (vt1.c0))) IS FALSE)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((((~ (vt1.c0))) IS FALSE)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((((~ (vt1.c0))) IS FALSE)) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(UPPER(vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(UPPER(vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(UPPER(vt0.c0) AS NUMERIC));
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))+((vt1.c1 IN (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))+((vt1.c1 IN (vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))+((vt1.c1 IN (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))+((vt1.c1 IN (vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))+((vt1.c1 IN (vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (json_extract(CAST(vt0.c1 AS NUMERIC), vt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(CAST(vt0.c1 AS NUMERIC), vt1.c1)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (json_extract(CAST(vt0.c1 AS NUMERIC), vt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(CAST(vt0.c1 AS NUMERIC), vt1.c1)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c1);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0xffffffff84b8609d);
SELECT SUM(count) FROM (SELECT ((0xffffffff84b8609d) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0xffffffff84b8609d);
SELECT SUM(count) FROM (SELECT ((0xffffffff84b8609d) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0xffffffff84b8609d);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS TRUE) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS TRUE) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS TEXT));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1) IS FALSE))&(0.22085271303418952)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE))&(0.22085271303418952))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1) IS FALSE))&(0.22085271303418952)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE))&(0.22085271303418952))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1) IS FALSE))&(0.22085271303418952)));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1)AND(((vt0.c0) ISNULL))))OR(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(((vt0.c0) ISNULL))))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1)AND(((vt0.c0) ISNULL))))OR(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(((vt0.c0) ISNULL))))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1)AND(((vt0.c0) ISNULL))))OR(CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1 IN ()))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN ()))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1 IN ()))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN ()))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1 IN ()))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))>((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))>((~ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))>((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))>((~ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))>((~ (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((- (vt1.c0))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (highlight('盌G', vt1.c1, 0.21343035960296441, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (highlight('盌G', vt1.c1, 0.21343035960296441, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((- (vt1.c0))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (highlight('盌G', vt1.c1, 0.21343035960296441, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (highlight('盌G', vt1.c1, 0.21343035960296441, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((-1.826394029E9 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((-1.826394029E9 IN ())) NOT NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((-1.826394029E9 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((-1.826394029E9 IN ())) NOT NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((-1.826394029E9 IN ())) NOT NULL));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0))>=(((((vt1.c1))>((vt1.c1))))))) ORDER BY (((+ (vt0.c0)))IS NOT((vt0.c0 IN (vt1.c1, '660861967'))))  NULLS LAST, ABS(CASE WHEN vt1.c1 THEN vt0.c0 ELSE x'' END) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))>=(((((vt1.c1))>((vt1.c1))))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((+ (vt0.c0)))IS NOT((vt0.c0 IN (vt1.c1, '660861967'))))  NULLS LAST, ABS(CASE WHEN vt1.c1 THEN vt0.c0 ELSE x'' END) ASC);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0))>=(((((vt1.c1))>((vt1.c1))))))) ORDER BY (((+ (vt0.c0)))IS NOT((vt0.c0 IN (vt1.c1, '660861967'))))  NULLS LAST, ABS(CASE WHEN vt1.c1 THEN vt0.c0 ELSE x'' END) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))>=(((((vt1.c1))>((vt1.c1))))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((+ (vt0.c0)))IS NOT((vt0.c0 IN (vt1.c1, '660861967'))))  NULLS LAST, ABS(CASE WHEN vt1.c1 THEN vt0.c0 ELSE x'' END) ASC);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0))>=(((((vt1.c1))>((vt1.c1))))))) ORDER BY (((+ (vt0.c0)))IS NOT((vt0.c0 IN (vt1.c1, '660861967'))))  NULLS LAST, ABS(CASE WHEN vt1.c1 THEN vt0.c0 ELSE x'' END) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM) BETWEEN (vt1.c1 COLLATE RTRIM) AND (vt1.c0))) ORDER BY ((TRIM(DISTINCT '-1553206332'))>>((vt1.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE RTRIM) BETWEEN (vt1.c1 COLLATE RTRIM) AND (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((TRIM(DISTINCT '-1553206332'))>>((vt1.c1 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM) BETWEEN (vt1.c1 COLLATE RTRIM) AND (vt1.c0))) ORDER BY ((TRIM(DISTINCT '-1553206332'))>>((vt1.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE RTRIM) BETWEEN (vt1.c1 COLLATE RTRIM) AND (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((TRIM(DISTINCT '-1553206332'))>>((vt1.c1 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM) BETWEEN (vt1.c1 COLLATE RTRIM) AND (vt1.c0))) ORDER BY ((TRIM(DISTINCT '-1553206332'))>>((vt1.c1 IN ()))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY ((((((vt1.c1)||(vt1.c0)))AND(((vt1.c1)>(vt1.c1)))))AND((((vt1.c0))<((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)||(vt1.c0)))AND(((vt1.c1)>(vt1.c1)))))AND((((vt1.c0))<((vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY ((((((vt1.c1)||(vt1.c0)))AND(((vt1.c1)>(vt1.c1)))))AND((((vt1.c0))<((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)||(vt1.c0)))AND(((vt1.c1)>(vt1.c1)))))AND((((vt1.c0))<((vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY ((((((vt1.c1)||(vt1.c0)))AND(((vt1.c1)>(vt1.c1)))))AND((((vt1.c0))<((vt1.c0)))));
SELECT * FROM vt1 WHERE ((CAST(x'9e34' AS TEXT) IN ())) ORDER BY ((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))AND(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END)))AND((NOT (vt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(x'9e34' AS TEXT) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))AND(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END)))AND((NOT (vt1.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((CAST(x'9e34' AS TEXT) IN ())) ORDER BY ((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))AND(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END)))AND((NOT (vt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(x'9e34' AS TEXT) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))AND(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END)))AND((NOT (vt1.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((CAST(x'9e34' AS TEXT) IN ())) ORDER BY ((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))AND(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END)))AND((NOT (vt1.c1)))) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((('0.5613108192800608') IS FALSE)) AND ('' COLLATE RTRIM))  NULLS LAST, CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END AS INTEGER) DESC  NULLS LAST, vt1.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((('0.5613108192800608') IS FALSE)) AND ('' COLLATE RTRIM))  NULLS LAST, CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END AS INTEGER) DESC  NULLS LAST, vt1.c0 COLLATE BINARY);
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((('0.5613108192800608') IS FALSE)) AND ('' COLLATE RTRIM))  NULLS LAST, CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END AS INTEGER) DESC  NULLS LAST, vt1.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((('0.5613108192800608') IS FALSE)) AND ('' COLLATE RTRIM))  NULLS LAST, CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END AS INTEGER) DESC  NULLS LAST, vt1.c0 COLLATE BINARY);
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((('0.5613108192800608') IS FALSE)) AND ('' COLLATE RTRIM))  NULLS LAST, CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END AS INTEGER) DESC  NULLS LAST, vt1.c0 COLLATE BINARY;
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)GLOB(vt1.c0)))AND(CAST(vt1.c1 AS BLOB))))OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(vt1.c1 COLLATE NOCASE)))AND(((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))))) ORDER BY (((vt1.c1)) BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END)) AND ((CAST(NULL AS INTEGER)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)GLOB(vt1.c0)))AND(CAST(vt1.c1 AS BLOB))))OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(vt1.c1 COLLATE NOCASE)))AND(((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)) BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END)) AND ((CAST(NULL AS INTEGER)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)GLOB(vt1.c0)))AND(CAST(vt1.c1 AS BLOB))))OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(vt1.c1 COLLATE NOCASE)))AND(((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))))) ORDER BY (((vt1.c1)) BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END)) AND ((CAST(NULL AS INTEGER)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)GLOB(vt1.c0)))AND(CAST(vt1.c1 AS BLOB))))OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(vt1.c1 COLLATE NOCASE)))AND(((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)) BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END)) AND ((CAST(NULL AS INTEGER)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)GLOB(vt1.c0)))AND(CAST(vt1.c1 AS BLOB))))OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(vt1.c1 COLLATE NOCASE)))AND(((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))))) ORDER BY (((vt1.c1)) BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END)) AND ((CAST(NULL AS INTEGER)))) ASC;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (((0.8229588678940701)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN ((('Q*c')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((0.8229588678940701)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN ((('Q*c')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (((0.8229588678940701)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN ((('Q*c')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((0.8229588678940701)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN ((('Q*c')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (((0.8229588678940701)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN ((('Q*c')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE vt1.c0 END);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (vt0.c1 COLLATE BINARY)) WHERE (((0.4328540010561903)||(((vt1.c1)&(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.4328540010561903)||(((vt1.c1)&(vt0.c1))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (vt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (vt0.c1 COLLATE BINARY)) WHERE (((0.4328540010561903)||(((vt1.c1)&(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.4328540010561903)||(((vt1.c1)&(vt0.c1))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (vt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (vt0.c1 COLLATE BINARY)) WHERE (((0.4328540010561903)||(((vt1.c1)&(vt0.c1)))));
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt1, vt0 WHERE (0.21343035960296441);
SELECT SUM(count) FROM (SELECT ((0.21343035960296441) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (0.21343035960296441);
SELECT SUM(count) FROM (SELECT ((0.21343035960296441) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (0.21343035960296441);
SELECT ALL * FROM vt0 WHERE ((('-AR\nlj' COLLATE BINARY)|(((vt0.c0) ISNULL)))) ORDER BY (~ (((((((((x'3416')OR(-1877452880)))OR('')))OR(vt0.c1)))AND(vt0.c0))))  NULLS LAST, ((((vt0.c0)-(vt0.c1)))IS((((vt0.c1))<>((NULL))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-AR\nlj' COLLATE BINARY)|(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((((((x'3416')OR(-1877452880)))OR('')))OR(vt0.c1)))AND(vt0.c0))))  NULLS LAST, ((((vt0.c0)-(vt0.c1)))IS((((vt0.c1))!=((NULL))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((('-AR\nlj' COLLATE BINARY)|(((vt0.c0) ISNULL)))) ORDER BY (~ (((((((((x'3416')OR(-1877452880)))OR('')))OR(vt0.c1)))AND(vt0.c0))))  NULLS LAST, ((((vt0.c0)-(vt0.c1)))IS((((vt0.c1))<>((NULL))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-AR\nlj' COLLATE BINARY)|(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((((((x'3416')OR(-1877452880)))OR('')))OR(vt0.c1)))AND(vt0.c0))))  NULLS LAST, ((((vt0.c0)-(vt0.c1)))IS((((vt0.c1))!=((NULL))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((('-AR\nlj' COLLATE BINARY)|(((vt0.c0) ISNULL)))) ORDER BY (~ (((((((((x'3416')OR(-1877452880)))OR('')))OR(vt0.c1)))AND(vt0.c0))))  NULLS LAST, ((((vt0.c0)-(vt0.c1)))IS((((vt0.c1))<>((NULL))))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0)||(vt0.c0)))||(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(vt0.c0)))||(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)||(vt0.c0)))||(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(vt0.c0)))||(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)||(vt0.c0)))||(CAST(vt0.c0 AS REAL))));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT * FROM vt1 WHERE (0X3e7a59d9);
SELECT SUM(count) FROM (SELECT ((0x3e7a59d9) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0X3e7a59d9);
SELECT SUM(count) FROM (SELECT ((0x3e7a59d9) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0X3e7a59d9);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1 COLLATE RTRIM)AND(vt1.c1 COLLATE BINARY)))OR((vt1.c0 IN (vt1.c0, vt1.c0))))) ORDER BY ((ABS(DISTINCT vt1.c0)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1 COLLATE RTRIM)AND(vt1.c1 COLLATE BINARY)))OR((vt1.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((ABS(DISTINCT vt1.c0)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1 COLLATE RTRIM)AND(vt1.c1 COLLATE BINARY)))OR((vt1.c0 IN (vt1.c0, vt1.c0))))) ORDER BY ((ABS(DISTINCT vt1.c0)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1 COLLATE RTRIM)AND(vt1.c1 COLLATE BINARY)))OR((vt1.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((ABS(DISTINCT vt1.c0)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1 COLLATE RTRIM)AND(vt1.c1 COLLATE BINARY)))OR((vt1.c0 IN (vt1.c0, vt1.c0))))) ORDER BY ((ABS(DISTINCT vt1.c0)) IS TRUE)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((((vt0.c0)>=(vt1.c0)))GLOB(((((((((vt1.c1)AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c1)))AND(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)>=(vt1.c0)))GLOB(((((((((vt1.c1)AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c1)))AND(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((((vt0.c0)>=(vt1.c0)))GLOB(((((((((vt1.c1)AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c1)))AND(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)>=(vt1.c0)))GLOB(((((((((vt1.c1)AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c1)))AND(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((((vt0.c0)>=(vt1.c0)))GLOB(((((((((vt1.c1)AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c1)))AND(vt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON LOWER((~ (vt0.c1))) WHERE ((((NOT (vt0.c1)))>=(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))))) ORDER BY vt0.c0  NULLS FIRST, (((NOT (vt1.c0))) ISNULL)  NULLS FIRST, vt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1)))>=(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON LOWER((~ (vt0.c1))) ORDER BY vt0.c0  NULLS FIRST, (((NOT (vt1.c0))) ISNULL)  NULLS FIRST, vt1.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON LOWER((~ (vt0.c1))) WHERE ((((NOT (vt0.c1)))>=(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))))) ORDER BY vt0.c0  NULLS FIRST, (((NOT (vt1.c0))) ISNULL)  NULLS FIRST, vt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1)))>=(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON LOWER((~ (vt0.c1))) ORDER BY vt0.c0  NULLS FIRST, (((NOT (vt1.c0))) ISNULL)  NULLS FIRST, vt1.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON LOWER((~ (vt0.c1))) WHERE ((((NOT (vt0.c1)))>=(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))))) ORDER BY vt0.c0  NULLS FIRST, (((NOT (vt1.c0))) ISNULL)  NULLS FIRST, vt1.c1  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))>=(CASE vt1.c1  WHEN 0.019834821174609996 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY ((vt1.c1) IS TRUE) ASC, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))>=(CASE vt1.c1  WHEN 0.019834821174609996 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1) IS TRUE) ASC, vt1.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))>=(CASE vt1.c1  WHEN 0.019834821174609996 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY ((vt1.c1) IS TRUE) ASC, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))>=(CASE vt1.c1  WHEN 0.019834821174609996 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1) IS TRUE) ASC, vt1.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))>=(CASE vt1.c1  WHEN 0.019834821174609996 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY ((vt1.c1) IS TRUE) ASC, vt1.c0  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((LIKELY(vt0.c0))>>(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))) ORDER BY ((NOT (vt0.c0)) IN ()) ASC, (+ (((vt0.c0) IS TRUE)))  NULLS FIRST, ((NULL) NOT BETWEEN (((((x'9f96')AND(vt0.c1)))AND(-1677451351))) AND (((0.11100809913928522)&(NULL)))) DESC, (((((vt0.c0))<>((vt0.c0)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(vt0.c0))>>(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((NOT (vt0.c0)) IN ()) ASC, (+ (((vt0.c0) IS TRUE)))  NULLS FIRST, ((NULL) NOT BETWEEN (((((x'9f96')AND(vt0.c1)))AND(-1677451351))) AND (((0.11100809913928522)&(NULL)))) DESC, (((((vt0.c0))<>((vt0.c0)))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((LIKELY(vt0.c0))>>(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))) ORDER BY ((NOT (vt0.c0)) IN ()) ASC, (+ (((vt0.c0) IS TRUE)))  NULLS FIRST, ((NULL) NOT BETWEEN (((((x'9f96')AND(vt0.c1)))AND(-1677451351))) AND (((0.11100809913928522)&(NULL)))) DESC, (((((vt0.c0))<>((vt0.c0)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(vt0.c0))>>(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((NOT (vt0.c0)) IN ()) ASC, (+ (((vt0.c0) IS TRUE)))  NULLS FIRST, ((NULL) NOT BETWEEN (((((x'9f96')AND(vt0.c1)))AND(-1677451351))) AND (((0.11100809913928522)&(NULL)))) DESC, (((((vt0.c0))<>((vt0.c0)))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((LIKELY(vt0.c0))>>(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))) ORDER BY ((NOT (vt0.c0)) IN ()) ASC, (+ (((vt0.c0) IS TRUE)))  NULLS FIRST, ((NULL) NOT BETWEEN (((((x'9f96')AND(vt0.c1)))AND(-1677451351))) AND (((0.11100809913928522)&(NULL)))) DESC, (((((vt0.c0))<>((vt0.c0)))) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1)<=(x'203b')) COLLATE NOCASE) ORDER BY (((((vt1.c1))>((vt0.c0))))<=(((((vt1.c0)AND(vt0.c1)))OR(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)<=(x'203b')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c1))>((vt0.c0))))<=(((((vt1.c0)AND(vt0.c1)))OR(vt1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1)<=(x'203b')) COLLATE NOCASE) ORDER BY (((((vt1.c1))>((vt0.c0))))<=(((((vt1.c0)AND(vt0.c1)))OR(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)<=(x'203b')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c1))>((vt0.c0))))<=(((((vt1.c0)AND(vt0.c1)))OR(vt1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1)<=(x'203b')) COLLATE NOCASE) ORDER BY (((((vt1.c1))>((vt0.c0))))<=(((((vt1.c0)AND(vt0.c1)))OR(vt1.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((ROUND(vt1.c1, vt1.c0)) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt0.c1 END) AND (((vt0.c1)%(vt1.c1)))) WHERE (((((((((((vt1.c1) ISNULL))AND(((vt1.c0)<(vt1.c0)))))AND((((vt0.c0))!=((vt1.c0))))))OR(((vt0.c1)AND(2.23978988E8)))))AND(ABS(vt1.c0)))) ORDER BY (((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)))AND(vt0.c1))))<=((((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1) ISNULL))AND(((vt1.c0)<(vt1.c0)))))AND((((vt0.c0))!=((vt1.c0))))))OR(((vt0.c1)AND(2.23978988E8)))))AND(ABS(vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((ROUND(vt1.c1, vt1.c0)) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt0.c1 END) AND (((vt0.c1)%(vt1.c1)))) ORDER BY (((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)))AND(vt0.c1))))<=((((vt0.c1) NOTNULL)))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((ROUND(vt1.c1, vt1.c0)) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt0.c1 END) AND (((vt0.c1)%(vt1.c1)))) WHERE (((((((((((vt1.c1) ISNULL))AND(((vt1.c0)<(vt1.c0)))))AND((((vt0.c0))!=((vt1.c0))))))OR(((vt0.c1)AND(2.23978988E8)))))AND(ABS(vt1.c0)))) ORDER BY (((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)))AND(vt0.c1))))<=((((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1) ISNULL))AND(((vt1.c0)<(vt1.c0)))))AND((((vt0.c0))!=((vt1.c0))))))OR(((vt0.c1)AND(2.23978988E8)))))AND(ABS(vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((ROUND(vt1.c1, vt1.c0)) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt0.c1 END) AND (((vt0.c1)%(vt1.c1)))) ORDER BY (((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)))AND(vt0.c1))))<=((((vt0.c1) NOTNULL)))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((ROUND(vt1.c1, vt1.c0)) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt0.c1 END) AND (((vt0.c1)%(vt1.c1)))) WHERE (((((((((((vt1.c1) ISNULL))AND(((vt1.c0)<(vt1.c0)))))AND((((vt0.c0))!=((vt1.c0))))))OR(((vt0.c1)AND(2.23978988E8)))))AND(ABS(vt1.c0)))) ORDER BY (((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)))AND(vt0.c1))))<=((((vt0.c1) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)OR(CASE WHEN vt0.c0 THEN vt0.c1 END)))AND((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(CASE WHEN vt0.c0 THEN vt0.c1 END)))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)OR(CASE WHEN vt0.c0 THEN vt0.c1 END)))AND((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(CASE WHEN vt0.c0 THEN vt0.c1 END)))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)OR(CASE WHEN vt0.c0 THEN vt0.c1 END)))AND((vt0.c1 IN ()))));
SELECT * FROM vt1 WHERE (NULL) ORDER BY ((CAST(vt1.c1 AS TEXT)) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN NULL END) AND (((vt1.c0)+(vt1.c1)))), (((vt1.c1, vt1.c1, vt1.c0)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)), (- (x'5fa8')))) AND (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((-1.774199831E9))), vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE NOCASE))) ASC  NULLS LAST, TOTAL_CHANGES() COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c1 AS TEXT)) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN NULL END) AND (((vt1.c0)+(vt1.c1)))), (((vt1.c1, vt1.c1, vt1.c0)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)), (- (x'5fa8')))) AND (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((-1.774199831E9))), vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE NOCASE))) ASC  NULLS LAST, TOTAL_CHANGES() COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (NULL) ORDER BY ((CAST(vt1.c1 AS TEXT)) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN NULL END) AND (((vt1.c0)+(vt1.c1)))), (((vt1.c1, vt1.c1, vt1.c0)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)), (- (x'5fa8')))) AND (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((-1.774199831E9))), vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE NOCASE))) ASC  NULLS LAST, TOTAL_CHANGES() COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c1 AS TEXT)) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN NULL END) AND (((vt1.c0)+(vt1.c1)))), (((vt1.c1, vt1.c1, vt1.c0)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)), (- (x'5fa8')))) AND (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((-1.774199831E9))), vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE NOCASE))) ASC  NULLS LAST, TOTAL_CHANGES() COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (NULL) ORDER BY ((CAST(vt1.c1 AS TEXT)) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN NULL END) AND (((vt1.c0)+(vt1.c1)))), (((vt1.c1, vt1.c1, vt1.c0)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)), (- (x'5fa8')))) AND (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((-1.774199831E9))), vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE NOCASE))) ASC  NULLS LAST, TOTAL_CHANGES() COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN (CASE vt0.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN (CASE vt0.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN (CASE vt0.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN (CASE vt0.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN (CASE vt0.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY NULL;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((x'')<>('﷨p灓')) COLLATE NOCASE) ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')!=('﷨p灓')) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((x'')<>('﷨p灓')) COLLATE NOCASE) ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')!=('﷨p灓')) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((x'')<>('﷨p灓')) COLLATE NOCASE) ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END COLLATE RTRIM ASC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((((vt0.c0))<>((vt0.c0))))) AND ((((vt0.c1)-(vt0.c0)))))) ORDER BY rtreenode(CAST(vt0.c1 AS INTEGER), CASE WHEN '泯w' THEN vt0.c1 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN (((((vt0.c0))!=((vt0.c0))))) AND ((((vt0.c1)-(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY rtreenode(CAST(vt0.c1 AS INTEGER), CASE WHEN '泯w' THEN vt0.c1 END) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((((vt0.c0))<>((vt0.c0))))) AND ((((vt0.c1)-(vt0.c0)))))) ORDER BY rtreenode(CAST(vt0.c1 AS INTEGER), CASE WHEN '泯w' THEN vt0.c1 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN (((((vt0.c0))!=((vt0.c0))))) AND ((((vt0.c1)-(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY rtreenode(CAST(vt0.c1 AS INTEGER), CASE WHEN '泯w' THEN vt0.c1 END) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((((vt0.c0))<>((vt0.c0))))) AND ((((vt0.c1)-(vt0.c0)))))) ORDER BY rtreenode(CAST(vt0.c1 AS INTEGER), CASE WHEN '泯w' THEN vt0.c1 END) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((CASE WHEN '' THEN vt1.c0 ELSE -1545952475 END)LIKE('761580409')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '' THEN vt1.c0 ELSE -1545952475 END)LIKE('761580409'))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN '' THEN vt1.c0 ELSE -1545952475 END)LIKE('761580409')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '' THEN vt1.c0 ELSE -1545952475 END)LIKE('761580409'))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN '' THEN vt1.c0 ELSE -1545952475 END)LIKE('761580409')));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)>(vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)>(vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)>(vt0.c1)) AS REAL));
SELECT ALL * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT * FROM vt1 CROSS JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN vt0.c1 END AS INTEGER) WHERE (vt0.c1) ORDER BY (NOT (vt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN vt0.c1 END AS INTEGER) ORDER BY (NOT (vt0.c1 COLLATE BINARY)) ASC);
SELECT * FROM vt1 CROSS JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN vt0.c1 END AS INTEGER) WHERE (vt0.c1) ORDER BY (NOT (vt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN vt0.c1 END AS INTEGER) ORDER BY (NOT (vt0.c1 COLLATE BINARY)) ASC);
SELECT * FROM vt1 CROSS JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN vt0.c1 END AS INTEGER) WHERE (vt0.c1) ORDER BY (NOT (vt0.c1 COLLATE BINARY)) ASC;
SELECT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))))>((CAST(vt1.c1 AS REAL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))))>((CAST(vt1.c1 AS REAL)))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))))>((CAST(vt1.c1 AS REAL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))))>((CAST(vt1.c1 AS REAL)))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))))>((CAST(vt1.c1 AS REAL)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))<=(((vt1.c0)&(vt1.c1))))) ORDER BY (((((vt1.c1))<=((vt1.c0))))||((vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))<=(((vt1.c0)&(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c1))<=((vt1.c0))))||((vt1.c0 IN ()))) ASC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))<=(((vt1.c0)&(vt1.c1))))) ORDER BY (((((vt1.c1))<=((vt1.c0))))||((vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))<=(((vt1.c0)&(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c1))<=((vt1.c0))))||((vt1.c0 IN ()))) ASC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))<=(((vt1.c0)&(vt1.c1))))) ORDER BY (((((vt1.c1))<=((vt1.c0))))||((vt1.c0 IN ()))) ASC;
SELECT ALL * FROM vt1, vt0 WHERE ((- (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((- (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((- (vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((((((('{}')AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1 COLLATE RTRIM)))AND(((vt1.c1)<=(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((((((('{}')AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1 COLLATE RTRIM)))AND(((vt1.c1)<=(vt1.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((((((('{}')AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1 COLLATE RTRIM)))AND(((vt1.c1)<=(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((((((('{}')AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1 COLLATE RTRIM)))AND(((vt1.c1)<=(vt1.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((((((('{}')AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1 COLLATE RTRIM)))AND(((vt1.c1)<=(vt1.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)%(vt1.c1))) ORDER BY ((vt1.c1)-(CASE vt1.c1  WHEN vt0.c1 THEN vt1.c1 END)), ((((vt1.c0)GLOB(vt0.c1)))=((((vt1.c0, vt1.c0, vt1.c0))<((vt0.c1, vt1.c1, vt0.c1)))))  NULLS LAST, 0.9795686856021499  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)%(vt1.c1))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c1)-(CASE vt1.c1  WHEN vt0.c1 THEN vt1.c1 END)), ((((vt1.c0)GLOB(vt0.c1)))==((((vt1.c0, vt1.c0, vt1.c0))<((vt0.c1, vt1.c1, vt0.c1)))))  NULLS LAST, 0.9795686856021499  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)%(vt1.c1))) ORDER BY ((vt1.c1)-(CASE vt1.c1  WHEN vt0.c1 THEN vt1.c1 END)), ((((vt1.c0)GLOB(vt0.c1)))=((((vt1.c0, vt1.c0, vt1.c0))<((vt0.c1, vt1.c1, vt0.c1)))))  NULLS LAST, 0.9795686856021499  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)%(vt1.c1))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c1)-(CASE vt1.c1  WHEN vt0.c1 THEN vt1.c1 END)), ((((vt1.c0)GLOB(vt0.c1)))==((((vt1.c0, vt1.c0, vt1.c0))<((vt0.c1, vt1.c1, vt0.c1)))))  NULLS LAST, 0.9795686856021499  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)%(vt1.c1))) ORDER BY ((vt1.c1)-(CASE vt1.c1  WHEN vt0.c1 THEN vt1.c1 END)), ((((vt1.c0)GLOB(vt0.c1)))=((((vt1.c0, vt1.c0, vt1.c0))<((vt0.c1, vt1.c1, vt0.c1)))))  NULLS LAST, 0.9795686856021499  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c0))>((vt1.c1))))<((vt1.c0 IN (vt1.c0, vt0.c0))))) ORDER BY CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((vt1.c1))))<((vt1.c0 IN (vt1.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c0))>((vt1.c1))))<((vt1.c0 IN (vt1.c0, vt0.c0))))) ORDER BY CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((vt1.c1))))<((vt1.c0 IN (vt1.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c0))>((vt1.c1))))<((vt1.c0 IN (vt1.c0, vt0.c0))))) ORDER BY CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM;
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (+ (((((vt1.c1)AND(vt0.c1)))OR(vt1.c0)))) WHERE (CAST(CASE WHEN '-1988019778' THEN vt1.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN '-1988019778' THEN vt1.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (+ (((((vt1.c1)AND(vt0.c1)))OR(vt1.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (+ (((((vt1.c1)AND(vt0.c1)))OR(vt1.c0)))) WHERE (CAST(CASE WHEN '-1988019778' THEN vt1.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN '-1988019778' THEN vt1.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (+ (((((vt1.c1)AND(vt0.c1)))OR(vt1.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (+ (((((vt1.c1)AND(vt0.c1)))OR(vt1.c0)))) WHERE (CAST(CASE WHEN '-1988019778' THEN vt1.c1 END AS INTEGER));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST((+ (vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST((+ (vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST((+ (vt0.c1)) AS REAL));
SELECT * FROM vt1 WHERE (((((((vt1.c1)<=(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)<=(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c1)<=(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)<=(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c1)<=(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (CAST(vt0.c1 AS NUMERIC))) WHERE ((((vt0.c1 IN (vt0.c1, vt1.c1))) BETWEEN (vt0.c1) AND (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt0.c1, vt1.c1))) BETWEEN (vt0.c1) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (CAST(vt0.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (CAST(vt0.c1 AS NUMERIC))) WHERE ((((vt0.c1 IN (vt0.c1, vt1.c1))) BETWEEN (vt0.c1) AND (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt0.c1, vt1.c1))) BETWEEN (vt0.c1) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (CAST(vt0.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (CAST(vt0.c1 AS NUMERIC))) WHERE ((((vt0.c1 IN (vt0.c1, vt1.c1))) BETWEEN (vt0.c1) AND (((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((CAST(vt1.c0 AS TEXT)))<>((((vt0.c0)<>(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt1.c0 AS TEXT)))<>((((vt0.c0)<>(vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((CAST(vt1.c0 AS TEXT)))<>((((vt0.c0)<>(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt1.c0 AS TEXT)))<>((((vt0.c0)<>(vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((CAST(vt1.c0 AS TEXT)))<>((((vt0.c0)<>(vt0.c1))))));
SELECT ALL * FROM vt0, vt1 WHERE ((((TRIM(vt0.c0)))=((vt0.c0)))) ORDER BY (+ (COALESCE(DISTINCT '169194699', vt1.c0))) ASC, TYPEOF(((vt1.c0) ISNULL)), (((((vt1.c1) IS TRUE)))>((((vt0.c0)!=(x'876d'))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(vt0.c0)))==((vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (COALESCE(DISTINCT '169194699', vt1.c0))) ASC, TYPEOF(((vt1.c0) ISNULL)), (((((vt1.c1) IS TRUE)))>((((vt0.c0)!=(x'876d'))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((TRIM(vt0.c0)))=((vt0.c0)))) ORDER BY (+ (COALESCE(DISTINCT '169194699', vt1.c0))) ASC, TYPEOF(((vt1.c0) ISNULL)), (((((vt1.c1) IS TRUE)))>((((vt0.c0)!=(x'876d'))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(vt0.c0)))==((vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (COALESCE(DISTINCT '169194699', vt1.c0))) ASC, TYPEOF(((vt1.c0) ISNULL)), (((((vt1.c1) IS TRUE)))>((((vt0.c0)!=(x'876d'))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((TRIM(vt0.c0)))=((vt0.c0)))) ORDER BY (+ (COALESCE(DISTINCT '169194699', vt1.c0))) ASC, TYPEOF(((vt1.c0) ISNULL)), (((((vt1.c1) IS TRUE)))>((((vt0.c0)!=(x'876d'))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON vt0.c1 COLLATE RTRIM WHERE (((((((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt0.c1)))AND('-1774199831')))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END))) ORDER BY ((((vt1.c1) NOT NULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt0.c1)))AND('-1774199831')))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON vt0.c1 COLLATE RTRIM ORDER BY ((((vt1.c1) NOT NULL)) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON vt0.c1 COLLATE RTRIM WHERE (((((((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt0.c1)))AND('-1774199831')))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END))) ORDER BY ((((vt1.c1) NOT NULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt0.c1)))AND('-1774199831')))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON vt0.c1 COLLATE RTRIM ORDER BY ((((vt1.c1) NOT NULL)) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON vt0.c1 COLLATE RTRIM WHERE (((((((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt0.c1)))AND('-1774199831')))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END))) ORDER BY ((((vt1.c1) NOT NULL)) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((- (vt0.c0)))%(0.9071691260348181)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))%(0.9071691260348181))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((- (vt0.c0)))%(0.9071691260348181)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))%(0.9071691260348181))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((- (vt0.c0)))%(0.9071691260348181)));
SELECT * FROM vt0 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((NULL) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))-(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))-(vt1.c1))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))-(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))-(vt1.c1))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))-(vt1.c1)));
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)OR(vt1.c0)))OR(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt1.c0)))OR(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)OR(vt1.c0)))OR(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt1.c0)))OR(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)OR(vt1.c0)))OR(vt1.c1)) IN ()));
SELECT ALL * FROM vt0, vt1 WHERE ((vt1.c0 COLLATE BINARY IN (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE BINARY IN (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((vt1.c0 COLLATE BINARY IN (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE BINARY IN (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((vt1.c0 COLLATE BINARY IN (((vt1.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT ALL * FROM vt0, vt1 WHERE ((- (((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt1.c1)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((- (((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt1.c1)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((- (((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE NOCASE);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((NULL)<<(vt1.c0)) IN (((vt0.c0)IS NOT(vt1.c0)))) WHERE (((CAST(vt1.c0 AS REAL))=((((x'')) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0)))))) ORDER BY './,9' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS REAL))==((((x'')) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((NULL)<<(vt1.c0)) IN (((vt0.c0)IS NOT(vt1.c0)))) ORDER BY './,9' DESC);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((NULL)<<(vt1.c0)) IN (((vt0.c0)IS NOT(vt1.c0)))) WHERE (((CAST(vt1.c0 AS REAL))=((((x'')) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0)))))) ORDER BY './,9' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS REAL))==((((x'')) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((NULL)<<(vt1.c0)) IN (((vt0.c0)IS NOT(vt1.c0)))) ORDER BY './,9' DESC);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((NULL)<<(vt1.c0)) IN (((vt0.c0)IS NOT(vt1.c0)))) WHERE (((CAST(vt1.c0 AS REAL))=((((x'')) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0)))))) ORDER BY './,9' DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((LOWER(vt0.c1))AND(CAST(vt0.c1 AS REAL))))AND((- (0.9576026521818338))))) ORDER BY ((((((((IFNULL(vt0.c1, vt0.c1))OR(UNLIKELY(DISTINCT vt0.c0))))AND(DATETIME(vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1))))OR(((x'') IS FALSE))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c1) NOT NULL) ELSE (+ (vt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((LOWER(vt0.c1))AND(CAST(vt0.c1 AS REAL))))AND((- (0.9576026521818338))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((IFNULL(vt0.c1, vt0.c1))OR(UNLIKELY(DISTINCT vt0.c0))))AND(DATETIME(vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1))))OR(((x'') IS FALSE))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c1) NOT NULL) ELSE (+ (vt0.c1)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((LOWER(vt0.c1))AND(CAST(vt0.c1 AS REAL))))AND((- (0.9576026521818338))))) ORDER BY ((((((((IFNULL(vt0.c1, vt0.c1))OR(UNLIKELY(DISTINCT vt0.c0))))AND(DATETIME(vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1))))OR(((x'') IS FALSE))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c1) NOT NULL) ELSE (+ (vt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((LOWER(vt0.c1))AND(CAST(vt0.c1 AS REAL))))AND((- (0.9576026521818338))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((IFNULL(vt0.c1, vt0.c1))OR(UNLIKELY(DISTINCT vt0.c0))))AND(DATETIME(vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1))))OR(((x'') IS FALSE))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c1) NOT NULL) ELSE (+ (vt0.c1)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((LOWER(vt0.c1))AND(CAST(vt0.c1 AS REAL))))AND((- (0.9576026521818338))))) ORDER BY ((((((((IFNULL(vt0.c1, vt0.c1))OR(UNLIKELY(DISTINCT vt0.c0))))AND(DATETIME(vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1))))OR(((x'') IS FALSE))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC  NULLS FIRST, CASE WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c1) NOT NULL) ELSE (+ (vt0.c1)) END ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(((NULL) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((NULL) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((NULL) IS TRUE) AS BLOB));
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)!=(vt1.c1)) THEN vt1.c1 END) ORDER BY -1.87745288E9;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)<>(vt1.c1)) THEN vt1.c1 END) IS TRUE)  as count FROM vt1 ORDER BY -1.87745288E9);
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)!=(vt1.c1)) THEN vt1.c1 END) ORDER BY -1.87745288E9;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)<>(vt1.c1)) THEN vt1.c1 END) IS TRUE)  as count FROM vt1 ORDER BY -1.87745288E9);
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)!=(vt1.c1)) THEN vt1.c1 END) ORDER BY -1.87745288E9;
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) IS FALSE));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN (((- (vt1.c0)))) AND ((((x'') BETWEEN (79343469) AND ('Y[')))))) ORDER BY '223978988', x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN (((- (vt1.c0)))) AND ((((x'') BETWEEN (79343469) AND ('Y[')))))) IS TRUE)  as count FROM vt1 ORDER BY '223978988', x'' ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN (((- (vt1.c0)))) AND ((((x'') BETWEEN (79343469) AND ('Y[')))))) ORDER BY '223978988', x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN (((- (vt1.c0)))) AND ((((x'') BETWEEN (79343469) AND ('Y[')))))) IS TRUE)  as count FROM vt1 ORDER BY '223978988', x'' ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN (((- (vt1.c0)))) AND ((((x'') BETWEEN (79343469) AND ('Y[')))))) ORDER BY '223978988', x'' ASC;
SELECT COUNT(*) FROM vt1 WHERE ((- (x'')));
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- (x'')));
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- (x'')));
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))<(vt0.c1 COLLATE NOCASE))) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))AND(x'')))AND((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))<(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)OR(vt0.c0)))AND(x'')))AND((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))<(vt0.c1 COLLATE NOCASE))) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))AND(x'')))AND((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))<(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)OR(vt0.c0)))AND(x'')))AND((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)*(vt1.c1)) AS NUMERIC)) ORDER BY ((((+ (vt1.c0))))<((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)*(vt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((+ (vt1.c0))))<((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1))))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)*(vt1.c1)) AS NUMERIC)) ORDER BY ((((+ (vt1.c0))))<((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)*(vt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((+ (vt1.c0))))<((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1))))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)*(vt1.c1)) AS NUMERIC)) ORDER BY ((((+ (vt1.c0))))<((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1))))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (vt1.c1)) COLLATE BINARY) ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))%(((vt1.c0)IS NOT(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))%(((vt1.c0)IS NOT(vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (vt1.c1)) COLLATE BINARY) ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))%(((vt1.c0)IS NOT(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))%(((vt1.c0)IS NOT(vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (vt1.c1)) COLLATE BINARY) ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))%(((vt1.c0)IS NOT(vt1.c0))))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)>(vt1.c0)))/(CAST(vt1.c1 AS NUMERIC)))) ORDER BY (((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>(vt1.c0)))/(CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)>(vt1.c0)))/(CAST(vt1.c1 AS NUMERIC)))) ORDER BY (((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>(vt1.c0)))/(CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)>(vt1.c0)))/(CAST(vt1.c1 AS NUMERIC)))) ORDER BY (((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE CASE WHEN vt1.c1 THEN 0.4173673949916693 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE '0.1157850139827784' END  WHEN CAST(NULL AS INTEGER) THEN (((vt1.c1)) BETWEEN ((2.23978988E8)) AND ((vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c1 COLLATE RTRIM THEN ((vt1.c0)IS NOT(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt1.c1 THEN 0.4173673949916693 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE '0.1157850139827784' END  WHEN CAST(NULL AS INTEGER) THEN (((vt1.c1)) BETWEEN ((2.23978988E8)) AND ((vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c1 COLLATE RTRIM THEN ((vt1.c0)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE CASE WHEN vt1.c1 THEN 0.4173673949916693 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE '0.1157850139827784' END  WHEN CAST(NULL AS INTEGER) THEN (((vt1.c1)) BETWEEN ((2.23978988E8)) AND ((vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c1 COLLATE RTRIM THEN ((vt1.c0)IS NOT(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt1.c1 THEN 0.4173673949916693 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE '0.1157850139827784' END  WHEN CAST(NULL AS INTEGER) THEN (((vt1.c1)) BETWEEN ((2.23978988E8)) AND ((vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c1 COLLATE RTRIM THEN ((vt1.c0)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE CASE WHEN vt1.c1 THEN 0.4173673949916693 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE '0.1157850139827784' END  WHEN CAST(NULL AS INTEGER) THEN (((vt1.c1)) BETWEEN ((2.23978988E8)) AND ((vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c1 COLLATE RTRIM THEN ((vt1.c0)IS NOT(vt1.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE ((((('') NOT NULL)) IS TRUE)) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN 'IVJb␶J' ELSE vt0.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((('') NOT NULL)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN 'IVJb␶J' ELSE vt0.c1 END COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE ((((('') NOT NULL)) IS TRUE)) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN 'IVJb␶J' ELSE vt0.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((('') NOT NULL)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN 'IVJb␶J' ELSE vt0.c1 END COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE ((((('') NOT NULL)) IS TRUE)) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN 'IVJb␶J' ELSE vt0.c1 END COLLATE NOCASE;
SELECT COUNT(*) FROM vt1 WHERE ((+ ((((NULL))<>((vt1.c1)))))) ORDER BY vt1.c1;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((NULL))<>((vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1);
SELECT COUNT(*) FROM vt1 WHERE ((+ ((((NULL))<>((vt1.c1)))))) ORDER BY vt1.c1;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((NULL))<>((vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1);
SELECT COUNT(*) FROM vt1 WHERE ((+ ((((NULL))<>((vt1.c1)))))) ORDER BY vt1.c1;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN (((((vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((vt0.c0, x'', vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))) AND ((((((vt1.c0)AND(x'')))AND(vt1.c0)))))) ORDER BY vt1.c1;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((((vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((vt0.c0, x'', vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))) AND ((((((vt1.c0)AND(x'')))AND(vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN (((((vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((vt0.c0, x'', vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))) AND ((((((vt1.c0)AND(x'')))AND(vt1.c0)))))) ORDER BY vt1.c1;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((((vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((vt0.c0, x'', vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))) AND ((((((vt1.c0)AND(x'')))AND(vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN (((((vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((vt0.c0, x'', vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))) AND ((((((vt1.c0)AND(x'')))AND(vt1.c0)))))) ORDER BY vt1.c1;
SELECT ALL * FROM vt0 WHERE ((~ (CAST(NULL AS INTEGER)))) ORDER BY ((((vt0.c1)LIKE(vt0.c0))) BETWEEN ('A8') AND (((vt0.c1)>(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)LIKE(vt0.c0))) BETWEEN ('A8') AND (((vt0.c1)>(vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ (CAST(NULL AS INTEGER)))) ORDER BY ((((vt0.c1)LIKE(vt0.c0))) BETWEEN ('A8') AND (((vt0.c1)>(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)LIKE(vt0.c0))) BETWEEN ('A8') AND (((vt0.c1)>(vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ (CAST(NULL AS INTEGER)))) ORDER BY ((((vt0.c1)LIKE(vt0.c0))) BETWEEN ('A8') AND (((vt0.c1)>(vt0.c1))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((+ (((((vt0.c1)AND(vt0.c1)))OR('hSk?5疻A3'))))) ORDER BY NULLIF(vt0.c1 COLLATE NOCASE, ((vt0.c1) NOT NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt0.c1)AND(vt0.c1)))OR('hSk?5疻A3'))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(vt0.c1 COLLATE NOCASE, ((vt0.c1) NOT NULL)) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((+ (((((vt0.c1)AND(vt0.c1)))OR('hSk?5疻A3'))))) ORDER BY NULLIF(vt0.c1 COLLATE NOCASE, ((vt0.c1) NOT NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt0.c1)AND(vt0.c1)))OR('hSk?5疻A3'))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(vt0.c1 COLLATE NOCASE, ((vt0.c1) NOT NULL)) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((+ (((((vt0.c1)AND(vt0.c1)))OR('hSk?5疻A3'))))) ORDER BY NULLIF(vt0.c1 COLLATE NOCASE, ((vt0.c1) NOT NULL)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt1.c1 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt1.c1 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt1.c1 AS TEXT)) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))IS NOT(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))IS NOT(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))IS NOT(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))IS NOT(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))IS NOT(CAST(vt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)) IN ())) ORDER BY (NOT (((vt1.c0)<<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 ORDER BY (NOT (((vt1.c0)<<(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)) IN ())) ORDER BY (NOT (((vt1.c0)<<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 ORDER BY (NOT (((vt1.c0)<<(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)) IN ())) ORDER BY (NOT (((vt1.c0)<<(vt1.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)|(load_extension(vt0.c1, vt0.c0)))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((UPPER(DISTINCT vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)|(load_extension(vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((UPPER(DISTINCT vt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)|(load_extension(vt0.c1, vt0.c0)))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((UPPER(DISTINCT vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)|(load_extension(vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((UPPER(DISTINCT vt0.c1)))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((((CAST(vt0.c1 AS NUMERIC)))>((((((vt1.c1)OR(vt1.c1)))AND(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c1 AS NUMERIC)))>((((((vt1.c1)OR(vt1.c1)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((CAST(vt0.c1 AS NUMERIC)))>((((((vt1.c1)OR(vt1.c1)))AND(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c1 AS NUMERIC)))>((((((vt1.c1)OR(vt1.c1)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((CAST(vt0.c1 AS NUMERIC)))>((((((vt1.c1)OR(vt1.c1)))AND(vt0.c1))))));
SELECT ALL * FROM vt1, vt0 WHERE (((((NULL) IS TRUE))/((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS TRUE))/((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((NULL) IS TRUE))/((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS TRUE))/((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((NULL) IS TRUE))/((~ (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((+ ('-1988019778')))-(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((+ ('-1988019778')))-(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((+ ('-1988019778')))-(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((+ ('-1988019778')))-(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((+ ('-1988019778')))-(CAST(vt0.c1 AS BLOB))));
SELECT * FROM vt0 WHERE ('{_{W#Rh') ORDER BY (NOT (((vt0.c1)==(vt0.c0)))) ASC, (NOT (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('{_{W#Rh') IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c1)==(vt0.c0)))) ASC, (NOT (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS FIRST);
SELECT * FROM vt0 WHERE ('{_{W#Rh') ORDER BY (NOT (((vt0.c1)==(vt0.c0)))) ASC, (NOT (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('{_{W#Rh') IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c1)==(vt0.c0)))) ASC, (NOT (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS FIRST);
SELECT * FROM vt0 WHERE ('{_{W#Rh') ORDER BY (NOT (((vt0.c1)==(vt0.c0)))) ASC, (NOT (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN ()))IS(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))IS(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN ()))IS(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))IS(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN ()))IS(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT * FROM vt1 WHERE ((+ (-1.68472377E9))) ORDER BY x'6f49' ASC;
SELECT SUM(count) FROM (SELECT (((+ (-1.68472377E9))) IS TRUE)  as count FROM vt1 ORDER BY x'6f49' ASC);
SELECT * FROM vt1 WHERE ((+ (-1.68472377E9))) ORDER BY x'6f49' ASC;
SELECT SUM(count) FROM (SELECT (((+ (-1.68472377E9))) IS TRUE)  as count FROM vt1 ORDER BY x'6f49' ASC);
SELECT * FROM vt1 WHERE ((+ (-1.68472377E9))) ORDER BY x'6f49' ASC;
SELECT * FROM vt1 WHERE (json_insert(CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END, ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)), x'')) ORDER BY (((((((((vt1.c0 IN (vt1.c1, vt1.c0)))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(((vt1.c1)>=(vt1.c0)))))OR(((vt1.c0) IS TRUE))))OR(LIKELIHOOD(DISTINCT vt1.c1, 0.5038496173504473))) ASC  NULLS FIRST, vt1.c0 DESC, (((vt1.c1)IS NOT(vt1.c0)) IN ((vt1.c1 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END, ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)), x'')) IS TRUE)  as count FROM vt1 ORDER BY (((((((((vt1.c0 IN (vt1.c1, vt1.c0)))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(((vt1.c1)>=(vt1.c0)))))OR(((vt1.c0) IS TRUE))))OR(LIKELIHOOD(DISTINCT vt1.c1, 0.5038496173504473))) ASC  NULLS FIRST, vt1.c0 DESC, (((vt1.c1)IS NOT(vt1.c0)) IN ((vt1.c1 IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (json_insert(CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END, ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)), x'')) ORDER BY (((((((((vt1.c0 IN (vt1.c1, vt1.c0)))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(((vt1.c1)>=(vt1.c0)))))OR(((vt1.c0) IS TRUE))))OR(LIKELIHOOD(DISTINCT vt1.c1, 0.5038496173504473))) ASC  NULLS FIRST, vt1.c0 DESC, (((vt1.c1)IS NOT(vt1.c0)) IN ((vt1.c1 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END, ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)), x'')) IS TRUE)  as count FROM vt1 ORDER BY (((((((((vt1.c0 IN (vt1.c1, vt1.c0)))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(((vt1.c1)>=(vt1.c0)))))OR(((vt1.c0) IS TRUE))))OR(LIKELIHOOD(DISTINCT vt1.c1, 0.5038496173504473))) ASC  NULLS FIRST, vt1.c0 DESC, (((vt1.c1)IS NOT(vt1.c0)) IN ((vt1.c1 IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (json_insert(CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END, ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)), x'')) ORDER BY (((((((((vt1.c0 IN (vt1.c1, vt1.c0)))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(((vt1.c1)>=(vt1.c0)))))OR(((vt1.c0) IS TRUE))))OR(LIKELIHOOD(DISTINCT vt1.c1, 0.5038496173504473))) ASC  NULLS FIRST, vt1.c0 DESC, (((vt1.c1)IS NOT(vt1.c0)) IN ((vt1.c1 IN ()))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.c1)))IS(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c1)))IS(vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.c1)))IS(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c1)))IS(vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.c1)))IS(vt1.c1)));
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)))) DESC, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)))) DESC, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)))) DESC, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)))) DESC, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)))) DESC, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT);
SELECT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(TRIM(DISTINCT vt0.c1, vt0.c0))))AND(((vt0.c0)IS NOT(-7.35381418E8)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(TRIM(DISTINCT vt0.c1, vt0.c0))))AND(((vt0.c0)IS NOT(-7.35381418E8))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(TRIM(DISTINCT vt0.c1, vt0.c0))))AND(((vt0.c0)IS NOT(-7.35381418E8)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(TRIM(DISTINCT vt0.c1, vt0.c0))))AND(((vt0.c0)IS NOT(-7.35381418E8))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(TRIM(DISTINCT vt0.c1, vt0.c0))))AND(((vt0.c0)IS NOT(-7.35381418E8)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((('BBs[2z')||('0.8229588678940701')))||((vt1.c0 IN ())))) ORDER BY JULIANDAY(vt1.c1, vt1.c0, vt1.c1) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('BBs[2z')||('0.8229588678940701')))||((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY JULIANDAY(vt1.c1, vt1.c0, vt1.c1) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((('BBs[2z')||('0.8229588678940701')))||((vt1.c0 IN ())))) ORDER BY JULIANDAY(vt1.c1, vt1.c0, vt1.c1) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('BBs[2z')||('0.8229588678940701')))||((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY JULIANDAY(vt1.c1, vt1.c0, vt1.c1) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((('BBs[2z')||('0.8229588678940701')))||((vt1.c0 IN ())))) ORDER BY JULIANDAY(vt1.c1, vt1.c0, vt1.c1) COLLATE RTRIM ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)AND(TYPEOF(DISTINCT vt0.c0))))AND((vt0.c1 IN ())))) ORDER BY ((((vt0.c0)=(vt0.c0)))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))) ASC, TRIM((vt0.c1 IN ())) ASC, ((vt0.c0) ISNULL) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(TYPEOF(DISTINCT vt0.c0))))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)=(vt0.c0)))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))) ASC, TRIM((vt0.c1 IN ())) ASC, ((vt0.c0) ISNULL) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)AND(TYPEOF(DISTINCT vt0.c0))))AND((vt0.c1 IN ())))) ORDER BY ((((vt0.c0)=(vt0.c0)))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))) ASC, TRIM((vt0.c1 IN ())) ASC, ((vt0.c0) ISNULL) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(TYPEOF(DISTINCT vt0.c0))))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)=(vt0.c0)))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))) ASC, TRIM((vt0.c1 IN ())) ASC, ((vt0.c0) ISNULL) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)AND(TYPEOF(DISTINCT vt0.c0))))AND((vt0.c1 IN ())))) ORDER BY ((((vt0.c0)=(vt0.c0)))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))) ASC, TRIM((vt0.c1 IN ())) ASC, ((vt0.c0) ISNULL) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (x'');
SELECT * FROM vt0 CROSS JOIN vt1 ON CAST(NULL AS REAL) COLLATE RTRIM WHERE (((((vt0.c1)-(vt1.c0))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((((vt0.c0)OR(vt1.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)-(vt1.c0))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((((vt0.c0)OR(vt1.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(NULL AS REAL) COLLATE RTRIM);
SELECT * FROM vt0 CROSS JOIN vt1 ON CAST(NULL AS REAL) COLLATE RTRIM WHERE (((((vt0.c1)-(vt1.c0))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((((vt0.c0)OR(vt1.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)-(vt1.c0))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((((vt0.c0)OR(vt1.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(NULL AS REAL) COLLATE RTRIM);
SELECT * FROM vt0 CROSS JOIN vt1 ON CAST(NULL AS REAL) COLLATE RTRIM WHERE (((((vt0.c1)-(vt1.c0))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((((vt0.c0)OR(vt1.c1)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)<=(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<=(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)<=(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<=(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)<=(vt1.c0))) ISNULL));
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))GLOB(((NULL)|(vt1.c1))))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (NULL))) BETWEEN (CAST(vt1.c1 AS BLOB)) AND (0.15504962304295644 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))GLOB(((NULL)|(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (NULL))) BETWEEN (CAST(vt1.c1 AS BLOB)) AND (0.15504962304295644 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))GLOB(((NULL)|(vt1.c1))))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (NULL))) BETWEEN (CAST(vt1.c1 AS BLOB)) AND (0.15504962304295644 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))GLOB(((NULL)|(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (NULL))) BETWEEN (CAST(vt1.c1 AS BLOB)) AND (0.15504962304295644 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))GLOB(((NULL)|(vt1.c1))))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (NULL))) BETWEEN (CAST(vt1.c1 AS BLOB)) AND (0.15504962304295644 COLLATE NOCASE))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((vt1.c0 IN ())) ORDER BY CASE WHEN ((vt1.c0) ISNULL) THEN CAST(vt1.c1 AS NUMERIC) WHEN -2.00785262E9 THEN (((0.9425243661169814)) BETWEEN (('680507509')) AND ((vt0.c1))) WHEN vt1.c0 THEN ((vt0.c1)<(vt0.c0)) ELSE CAST(vt0.c1 AS INTEGER) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt1.c0) ISNULL) THEN CAST(vt1.c1 AS NUMERIC) WHEN -2.00785262E9 THEN (((0.9425243661169814)) BETWEEN (('680507509')) AND ((vt0.c1))) WHEN vt1.c0 THEN ((vt0.c1)<(vt0.c0)) ELSE CAST(vt0.c1 AS INTEGER) END  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((vt1.c0 IN ())) ORDER BY CASE WHEN ((vt1.c0) ISNULL) THEN CAST(vt1.c1 AS NUMERIC) WHEN -2.00785262E9 THEN (((0.9425243661169814)) BETWEEN (('680507509')) AND ((vt0.c1))) WHEN vt1.c0 THEN ((vt0.c1)<(vt0.c0)) ELSE CAST(vt0.c1 AS INTEGER) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt1.c0) ISNULL) THEN CAST(vt1.c1 AS NUMERIC) WHEN -2.00785262E9 THEN (((0.9425243661169814)) BETWEEN (('680507509')) AND ((vt0.c1))) WHEN vt1.c0 THEN ((vt0.c1)<(vt0.c0)) ELSE CAST(vt0.c1 AS INTEGER) END  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((vt1.c0 IN ())) ORDER BY CASE WHEN ((vt1.c0) ISNULL) THEN CAST(vt1.c1 AS NUMERIC) WHEN -2.00785262E9 THEN (((0.9425243661169814)) BETWEEN (('680507509')) AND ((vt0.c1))) WHEN vt1.c0 THEN ((vt0.c1)<(vt0.c0)) ELSE CAST(vt0.c1 AS INTEGER) END  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((vt1.c1)LIKE(vt0.c1))) ORDER BY (((((((((((vt1.c0)AND(vt0.c0)))AND(0.10720848692742979)))AND(vt0.c1)))OR(vt0.c0)), (vt1.c1 IN ()), ((vt0.c0) ISNULL), ((((((((vt0.c1)AND('-1646758196')))OR(x'')))AND('-ir8')))OR(vt1.c1)), (vt0.c0 IN (vt1.c1))))<=(((~ (vt0.c1)), json_object(vt1.c1, vt0.c0, vt0.c0, vt0.c1), (~ (-703828753)), ((vt1.c1)LIKE(vt1.c1)), ((vt1.c0)|(0.3007126965993717))))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c1)LIKE(vt0.c1))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((((vt1.c0)AND(vt0.c0)))AND(0.10720848692742979)))AND(vt0.c1)))OR(vt0.c0)), (vt1.c1 IN ()), ((vt0.c0) ISNULL), ((((((((vt0.c1)AND('-1646758196')))OR(x'')))AND('-ir8')))OR(vt1.c1)), (vt0.c0 IN (vt1.c1))))<=(((~ (vt0.c1)), json_object(vt1.c1, vt0.c0, vt0.c0, vt0.c1), (~ (-703828753)), ((vt1.c1)LIKE(vt1.c1)), ((vt1.c0)|(0.3007126965993717))))) ASC);
SELECT * FROM vt0, vt1 WHERE (((vt1.c1)LIKE(vt0.c1))) ORDER BY (((((((((((vt1.c0)AND(vt0.c0)))AND(0.10720848692742979)))AND(vt0.c1)))OR(vt0.c0)), (vt1.c1 IN ()), ((vt0.c0) ISNULL), ((((((((vt0.c1)AND('-1646758196')))OR(x'')))AND('-ir8')))OR(vt1.c1)), (vt0.c0 IN (vt1.c1))))<=(((~ (vt0.c1)), json_object(vt1.c1, vt0.c0, vt0.c0, vt0.c1), (~ (-703828753)), ((vt1.c1)LIKE(vt1.c1)), ((vt1.c0)|(0.3007126965993717))))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c1)LIKE(vt0.c1))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((((vt1.c0)AND(vt0.c0)))AND(0.10720848692742979)))AND(vt0.c1)))OR(vt0.c0)), (vt1.c1 IN ()), ((vt0.c0) ISNULL), ((((((((vt0.c1)AND('-1646758196')))OR(x'')))AND('-ir8')))OR(vt1.c1)), (vt0.c0 IN (vt1.c1))))<=(((~ (vt0.c1)), json_object(vt1.c1, vt0.c0, vt0.c0, vt0.c1), (~ (-703828753)), ((vt1.c1)LIKE(vt1.c1)), ((vt1.c0)|(0.3007126965993717))))) ASC);
SELECT * FROM vt0, vt1 WHERE (((vt1.c1)LIKE(vt0.c1))) ORDER BY (((((((((((vt1.c0)AND(vt0.c0)))AND(0.10720848692742979)))AND(vt0.c1)))OR(vt0.c0)), (vt1.c1 IN ()), ((vt0.c0) ISNULL), ((((((((vt0.c1)AND('-1646758196')))OR(x'')))AND('-ir8')))OR(vt1.c1)), (vt0.c0 IN (vt1.c1))))<=(((~ (vt0.c1)), json_object(vt1.c1, vt0.c0, vt0.c0, vt0.c1), (~ (-703828753)), ((vt1.c1)LIKE(vt1.c1)), ((vt1.c0)|(0.3007126965993717))))) ASC;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c1, 0.5745735548015698, vt0.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c1, vt0.c1, 0x504ce6a3, vt1.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt1.c1, vt1.c1)))) NOT NULL) WHERE ((((- (0.7746653730880994))) BETWEEN (((((vt0.c1)OR(vt1.c0)))OR(-1.988019778E9))) AND (((vt0.c1)LIKE(vt1.c0))))) ORDER BY CASE ((vt0.c0)|(x''))  WHEN (((vt0.c1))=((vt1.c0))) THEN ((vt1.c0) NOT NULL) ELSE ((((vt1.c1)OR(0Xfffffffffec39435)))OR(vt0.c0)) END, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (0.7746653730880994))) BETWEEN (((((vt0.c1)OR(vt1.c0)))OR(-1.988019778E9))) AND (((vt0.c1)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c1, 0.5745735548015698, vt0.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c1, vt0.c1, 0x504ce6a3, vt1.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt1.c1, vt1.c1)))) NOT NULL) ORDER BY CASE ((vt0.c0)|(x''))  WHEN (((vt0.c1))==((vt1.c0))) THEN ((vt1.c0) NOT NULL) ELSE ((((vt1.c1)OR(0Xfffffffffec39435)))OR(vt0.c0)) END, vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c1, 0.5745735548015698, vt0.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c1, vt0.c1, 0x504ce6a3, vt1.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt1.c1, vt1.c1)))) NOT NULL) WHERE ((((- (0.7746653730880994))) BETWEEN (((((vt0.c1)OR(vt1.c0)))OR(-1.988019778E9))) AND (((vt0.c1)LIKE(vt1.c0))))) ORDER BY CASE ((vt0.c0)|(x''))  WHEN (((vt0.c1))=((vt1.c0))) THEN ((vt1.c0) NOT NULL) ELSE ((((vt1.c1)OR(0Xfffffffffec39435)))OR(vt0.c0)) END, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (0.7746653730880994))) BETWEEN (((((vt0.c1)OR(vt1.c0)))OR(-1.988019778E9))) AND (((vt0.c1)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c1, 0.5745735548015698, vt0.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c1, vt0.c1, 0x504ce6a3, vt1.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt1.c1, vt1.c1)))) NOT NULL) ORDER BY CASE ((vt0.c0)|(x''))  WHEN (((vt0.c1))==((vt1.c0))) THEN ((vt1.c0) NOT NULL) ELSE ((((vt1.c1)OR(0Xfffffffffec39435)))OR(vt0.c0)) END, vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c1, 0.5745735548015698, vt0.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c1, vt0.c1, 0x504ce6a3, vt1.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt1.c1, vt1.c1)))) NOT NULL) WHERE ((((- (0.7746653730880994))) BETWEEN (((((vt0.c1)OR(vt1.c0)))OR(-1.988019778E9))) AND (((vt0.c1)LIKE(vt1.c0))))) ORDER BY CASE ((vt0.c0)|(x''))  WHEN (((vt0.c1))=((vt1.c0))) THEN ((vt1.c0) NOT NULL) ELSE ((((vt1.c1)OR(0Xfffffffffec39435)))OR(vt0.c0)) END, vt0.c0  NULLS FIRST;
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN 0.5682700882118482 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN '1347217059' END)<=(CAST(vt1.c0 AS BLOB)))) ORDER BY ((vt1.c0)&(vt1.c1)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c1 THEN 0.5682700882118482 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN '1347217059' END)<=(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)&(vt1.c1)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN 0.5682700882118482 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN '1347217059' END)<=(CAST(vt1.c0 AS BLOB)))) ORDER BY ((vt1.c0)&(vt1.c1)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c1 THEN 0.5682700882118482 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN '1347217059' END)<=(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)&(vt1.c1)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN 0.5682700882118482 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN '1347217059' END)<=(CAST(vt1.c0 AS BLOB)))) ORDER BY ((vt1.c0)&(vt1.c1)) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (CASE ((((((((vt1.c1)OR(vt1.c1)))OR(-791063789)))AND(vt1.c0)))OR(vt1.c0))  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN -7.91063789E8 WHEN (~ (-562292660)) THEN CASE WHEN '1756024791' THEN vt1.c1 ELSE vt1.c0 END WHEN (+ (vt1.c1)) THEN ((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)) ELSE (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt1.c1)OR(vt1.c1)))OR(-791063789)))AND(vt1.c0)))OR(vt1.c0))  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN -7.91063789E8 WHEN (~ (-562292660)) THEN CASE WHEN '1756024791' THEN vt1.c1 ELSE vt1.c0 END WHEN (+ (vt1.c1)) THEN ((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)) ELSE (~ (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((((((((vt1.c1)OR(vt1.c1)))OR(-791063789)))AND(vt1.c0)))OR(vt1.c0))  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN -7.91063789E8 WHEN (~ (-562292660)) THEN CASE WHEN '1756024791' THEN vt1.c1 ELSE vt1.c0 END WHEN (+ (vt1.c1)) THEN ((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)) ELSE (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt1.c1)OR(vt1.c1)))OR(-791063789)))AND(vt1.c0)))OR(vt1.c0))  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN -7.91063789E8 WHEN (~ (-562292660)) THEN CASE WHEN '1756024791' THEN vt1.c1 ELSE vt1.c0 END WHEN (+ (vt1.c1)) THEN ((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)) ELSE (~ (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((((((((vt1.c1)OR(vt1.c1)))OR(-791063789)))AND(vt1.c0)))OR(vt1.c0))  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN -7.91063789E8 WHEN (~ (-562292660)) THEN CASE WHEN '1756024791' THEN vt1.c1 ELSE vt1.c0 END WHEN (+ (vt1.c1)) THEN ((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)) ELSE (~ (vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))>=((vt1.c1 IN ())))) ORDER BY ((((((vt1.c1)AND(x'')))OR(vt1.c1)))IS(vt1.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))>=((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)AND(x'')))OR(vt1.c1)))IS(vt1.c1)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))>=((vt1.c1 IN ())))) ORDER BY ((((((vt1.c1)AND(x'')))OR(vt1.c1)))IS(vt1.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))>=((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)AND(x'')))OR(vt1.c1)))IS(vt1.c1)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))>=((vt1.c1 IN ())))) ORDER BY ((((((vt1.c1)AND(x'')))OR(vt1.c1)))IS(vt1.c1)) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE ('391959230') ORDER BY CASE WHEN '6-E/儧JY[' COLLATE BINARY THEN (- (0x3a8ad0c4)) ELSE ((vt1.c1) NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT (('391959230') IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN '6-E/儧JY[' COLLATE BINARY THEN (- (0x3a8ad0c4)) ELSE ((vt1.c1) NOT NULL) END DESC);
SELECT * FROM vt1 WHERE ('391959230') ORDER BY CASE WHEN '6-E/儧JY[' COLLATE BINARY THEN (- (0x3a8ad0c4)) ELSE ((vt1.c1) NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT (('391959230') IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN '6-E/儧JY[' COLLATE BINARY THEN (- (0x3a8ad0c4)) ELSE ((vt1.c1) NOT NULL) END DESC);
SELECT * FROM vt1 WHERE ('391959230') ORDER BY CASE WHEN '6-E/儧JY[' COLLATE BINARY THEN (- (0x3a8ad0c4)) ELSE ((vt1.c1) NOT NULL) END DESC;
SELECT * FROM vt0, vt1 WHERE (json_extract(((x'dfd133c2')IS(vt0.c0)), vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((x'dfd133c2')IS(vt0.c0)), vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (json_extract(((x'dfd133c2')IS(vt0.c0)), vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((x'dfd133c2')IS(vt0.c0)), vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)) AS TEXT)) ORDER BY ((- (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((- (vt1.c0)) IN ()));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)) AS TEXT)) ORDER BY ((- (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((- (vt1.c0)) IN ()));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)) AS TEXT)) ORDER BY ((- (vt1.c0)) IN ());
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST((vt1.c1 IN ()) AS REAL) WHERE (((((vt0.c1)<>(vt0.c0)))>((~ (vt0.c1))))) ORDER BY ((((((((((vt1.c0)AND(NULL)))AND(0X21c6de3b)))OR(vt0.c1)))OR(vt0.c1))) NOT BETWEEN ((vt1.c0 IN (vt0.c1, vt1.c1))) AND (CAST(vt0.c1 AS NUMERIC))), UNLIKELY(DISTINCT ((vt1.c1)&(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<>(vt0.c0)))>((~ (vt0.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST((vt1.c1 IN ()) AS REAL) ORDER BY ((((((((((vt1.c0)AND(NULL)))AND(0x21c6de3b)))OR(vt0.c1)))OR(vt0.c1))) NOT BETWEEN ((vt1.c0 IN (vt0.c1, vt1.c1))) AND (CAST(vt0.c1 AS NUMERIC))), UNLIKELY(DISTINCT ((vt1.c1)&(vt1.c0))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST((vt1.c1 IN ()) AS REAL) WHERE (((((vt0.c1)<>(vt0.c0)))>((~ (vt0.c1))))) ORDER BY ((((((((((vt1.c0)AND(NULL)))AND(0X21c6de3b)))OR(vt0.c1)))OR(vt0.c1))) NOT BETWEEN ((vt1.c0 IN (vt0.c1, vt1.c1))) AND (CAST(vt0.c1 AS NUMERIC))), UNLIKELY(DISTINCT ((vt1.c1)&(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<>(vt0.c0)))>((~ (vt0.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST((vt1.c1 IN ()) AS REAL) ORDER BY ((((((((((vt1.c0)AND(NULL)))AND(0x21c6de3b)))OR(vt0.c1)))OR(vt0.c1))) NOT BETWEEN ((vt1.c0 IN (vt0.c1, vt1.c1))) AND (CAST(vt0.c1 AS NUMERIC))), UNLIKELY(DISTINCT ((vt1.c1)&(vt1.c0))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST((vt1.c1 IN ()) AS REAL) WHERE (((((vt0.c1)<>(vt0.c0)))>((~ (vt0.c1))))) ORDER BY ((((((((((vt1.c0)AND(NULL)))AND(0X21c6de3b)))OR(vt0.c1)))OR(vt0.c1))) NOT BETWEEN ((vt1.c0 IN (vt0.c1, vt1.c1))) AND (CAST(vt0.c1 AS NUMERIC))), UNLIKELY(DISTINCT ((vt1.c1)&(vt1.c0)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)IS NOT(x''))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(x''))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)IS NOT(x''))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(x''))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)IS NOT(x''))) NOTNULL));
SELECT ALL * FROM vt1, vt0 WHERE ((~ (((((vt0.c0)OR('-AR\nlj')))OR(vt1.c0))))) ORDER BY ((((vt0.c0) IS FALSE))<>(((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c0)OR('-AR\nlj')))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) IS FALSE))<>(((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((~ (((((vt0.c0)OR('-AR\nlj')))OR(vt1.c0))))) ORDER BY ((((vt0.c0) IS FALSE))<>(((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c0)OR('-AR\nlj')))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) IS FALSE))<>(((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((~ (((((vt0.c0)OR('-AR\nlj')))OR(vt1.c0))))) ORDER BY ((((vt0.c0) IS FALSE))<>(((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE RTRIM)AND(((((vt1.c1)OR(vt1.c0)))AND(vt0.c0)))) WHERE (((((vt0.c0)&(vt0.c0)))>>(((0.8004145772032131) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0)))>>(((0.8004145772032131) ISNULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE RTRIM)AND(((((vt1.c1)OR(vt1.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE RTRIM)AND(((((vt1.c1)OR(vt1.c0)))AND(vt0.c0)))) WHERE (((((vt0.c0)&(vt0.c0)))>>(((0.8004145772032131) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0)))>>(((0.8004145772032131) ISNULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE RTRIM)AND(((((vt1.c1)OR(vt1.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE RTRIM)AND(((((vt1.c1)OR(vt1.c0)))AND(vt0.c0)))) WHERE (((((vt0.c0)&(vt0.c0)))>>(((0.8004145772032131) ISNULL))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(0.2662558008239221 AS TEXT)) ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))))>(((('-1826394029') BETWEEN (vt1.c1) AND (0.16116771515006978))))) ASC  NULLS LAST, vt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.2662558008239221 AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))))>(((('-1826394029') BETWEEN (vt1.c1) AND (0.16116771515006978))))) ASC  NULLS LAST, vt1.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(0.2662558008239221 AS TEXT)) ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))))>(((('-1826394029') BETWEEN (vt1.c1) AND (0.16116771515006978))))) ASC  NULLS LAST, vt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.2662558008239221 AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))))>(((('-1826394029') BETWEEN (vt1.c1) AND (0.16116771515006978))))) ASC  NULLS LAST, vt1.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(0.2662558008239221 AS TEXT)) ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))))>(((('-1826394029') BETWEEN (vt1.c1) AND (0.16116771515006978))))) ASC  NULLS LAST, vt1.c1 ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((~ (((vt0.c0)/(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)/(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (((vt0.c0)/(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)/(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (((vt0.c0)/(vt0.c1)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))*((vt0.c1 IN ())))) ORDER BY (((vt0.c1))<=((vt1.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))*((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1))<=((vt1.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))*((vt0.c1 IN ())))) ORDER BY (((vt0.c1))<=((vt1.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))*((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1))<=((vt1.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))*((vt0.c1 IN ())))) ORDER BY (((vt0.c1))<=((vt1.c0))) COLLATE BINARY;
SELECT * FROM vt1, vt0 WHERE (CAST((~ (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST((~ (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST((~ (vt0.c1)) AS TEXT));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ ((- (vt0.c0))))) ORDER BY ((((vt1.c1)AND(vt1.c1)))AND(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1)AND(vt1.c1)))AND(vt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ ((- (vt0.c0))))) ORDER BY ((((vt1.c1)AND(vt1.c1)))AND(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1)AND(vt1.c1)))AND(vt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ ((- (vt0.c0))))) ORDER BY ((((vt1.c1)AND(vt1.c1)))AND(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT * FROM vt1 WHERE ((vt1.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c1 IN ()) COLLATE NOCASE);
SELECT * FROM vt0, vt1 WHERE (TOTAL_CHANGES()) ORDER BY (((vt1.c1 IN (vt0.c0))) IS FALSE) ASC, ((((x'') ISNULL))&(CASE WHEN vt0.c1 THEN x'' ELSE vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c1 IN (vt0.c0))) IS FALSE) ASC, ((((x'') ISNULL))&(CASE WHEN vt0.c1 THEN x'' ELSE vt0.c1 END))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (TOTAL_CHANGES()) ORDER BY (((vt1.c1 IN (vt0.c0))) IS FALSE) ASC, ((((x'') ISNULL))&(CASE WHEN vt0.c1 THEN x'' ELSE vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c1 IN (vt0.c0))) IS FALSE) ASC, ((((x'') ISNULL))&(CASE WHEN vt0.c1 THEN x'' ELSE vt0.c1 END))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (TOTAL_CHANGES()) ORDER BY (((vt1.c1 IN (vt0.c0))) IS FALSE) ASC, ((((x'') ISNULL))&(CASE WHEN vt0.c1 THEN x'' ELSE vt0.c1 END))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (vt1.c1 COLLATE BINARY) ORDER BY '﷨P灓' ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY '﷨P灓' ASC);
SELECT * FROM vt0, vt1 WHERE (vt1.c1 COLLATE BINARY) ORDER BY '﷨P灓' ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY '﷨P灓' ASC);
SELECT * FROM vt0, vt1 WHERE (vt1.c1 COLLATE BINARY) ORDER BY '﷨P灓' ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) IS TRUE));
SELECT * FROM vt1, vt0 WHERE ((~ ((vt1.c0 IN ())))) ORDER BY (((CASE WHEN 0.028346468569261596 THEN vt0.c1 END, (vt1.c0 IN (vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c0) NOT NULL), ((vt0.c1) NOT NULL)))<((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, (- (vt0.c0)), ((vt0.c1)>>(vt0.c1)), CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c1 END, LIKE(vt1.c1, vt0.c1, 'X')))), ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 END) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((CASE WHEN 0.028346468569261596 THEN vt0.c1 END, (vt1.c0 IN (vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c0) NOT NULL), ((vt0.c1) NOT NULL)))<((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, (- (vt0.c0)), ((vt0.c1)>>(vt0.c1)), CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c1 END, LIKE(vt1.c1, vt0.c1, 'X')))), ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 END) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((~ ((vt1.c0 IN ())))) ORDER BY (((CASE WHEN 0.028346468569261596 THEN vt0.c1 END, (vt1.c0 IN (vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c0) NOT NULL), ((vt0.c1) NOT NULL)))<((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, (- (vt0.c0)), ((vt0.c1)>>(vt0.c1)), CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c1 END, LIKE(vt1.c1, vt0.c1, 'X')))), ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 END) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((CASE WHEN 0.028346468569261596 THEN vt0.c1 END, (vt1.c0 IN (vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c0) NOT NULL), ((vt0.c1) NOT NULL)))<((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, (- (vt0.c0)), ((vt0.c1)>>(vt0.c1)), CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c1 END, LIKE(vt1.c1, vt0.c1, 'X')))), ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 END) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((~ ((vt1.c0 IN ())))) ORDER BY (((CASE WHEN 0.028346468569261596 THEN vt0.c1 END, (vt1.c0 IN (vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c0) NOT NULL), ((vt0.c1) NOT NULL)))<((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, (- (vt0.c0)), ((vt0.c1)>>(vt0.c1)), CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c1 END, LIKE(vt1.c1, vt0.c1, 'X')))), ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 END) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((- (x'f1f3')));
SELECT SUM(count) FROM (SELECT (((- (x'f1f3'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (x'f1f3')));
SELECT SUM(count) FROM (SELECT (((- (x'f1f3'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (x'f1f3')));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)==(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)==(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)==(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)==(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)==(vt0.c0))) NOT NULL));
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY (((((((vt1.c1))<=((vt1.c1))))OR(vt1.c1 COLLATE RTRIM)))OR(vt1.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c1))<=((vt1.c1))))OR(vt1.c1 COLLATE RTRIM)))OR(vt1.c1 COLLATE BINARY)) ASC);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY (((((((vt1.c1))<=((vt1.c1))))OR(vt1.c1 COLLATE RTRIM)))OR(vt1.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c1))<=((vt1.c1))))OR(vt1.c1 COLLATE RTRIM)))OR(vt1.c1 COLLATE BINARY)) ASC);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY (((((((vt1.c1))<=((vt1.c1))))OR(vt1.c1 COLLATE RTRIM)))OR(vt1.c1 COLLATE BINARY)) ASC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), 0.2662558008239221, json_insert(vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) AND ((((vt0.c1)AND(vt0.c0)), 169194699, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)))) ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), 0.2662558008239221, json_insert(vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) AND ((((vt0.c1)AND(vt0.c0)), 169194699, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), 0.2662558008239221, json_insert(vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) AND ((((vt0.c1)AND(vt0.c0)), 169194699, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)))) ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), 0.2662558008239221, json_insert(vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) AND ((((vt0.c1)AND(vt0.c0)), 169194699, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), 0.2662558008239221, json_insert(vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) AND ((((vt0.c1)AND(vt0.c0)), 169194699, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)))) ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((vt1.c0 IN (vt1.c1, vt1.c0)))==((vt0.c1 IN ()))) WHERE ((- (CASE WHEN vt0.c0 THEN vt1.c1 END))) ORDER BY ((NULL IN (vt1.c0, vt0.c1)) IN (CAST(vt1.c1 AS BLOB)))  NULLS FIRST, 0.5128022611205312 ASC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c0 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((vt1.c0 IN (vt1.c1, vt1.c0)))=((vt0.c1 IN ()))) ORDER BY ((NULL IN (vt1.c0, vt0.c1)) IN (CAST(vt1.c1 AS BLOB)))  NULLS FIRST, 0.5128022611205312 ASC  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((vt1.c0 IN (vt1.c1, vt1.c0)))==((vt0.c1 IN ()))) WHERE ((- (CASE WHEN vt0.c0 THEN vt1.c1 END))) ORDER BY ((NULL IN (vt1.c0, vt0.c1)) IN (CAST(vt1.c1 AS BLOB)))  NULLS FIRST, 0.5128022611205312 ASC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c0 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((vt1.c0 IN (vt1.c1, vt1.c0)))=((vt0.c1 IN ()))) ORDER BY ((NULL IN (vt1.c0, vt0.c1)) IN (CAST(vt1.c1 AS BLOB)))  NULLS FIRST, 0.5128022611205312 ASC  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((vt1.c0 IN (vt1.c1, vt1.c0)))==((vt0.c1 IN ()))) WHERE ((- (CASE WHEN vt0.c0 THEN vt1.c1 END))) ORDER BY ((NULL IN (vt1.c0, vt0.c1)) IN (CAST(vt1.c1 AS BLOB)))  NULLS FIRST, 0.5128022611205312 ASC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1)||(vt1.c1)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((vt0.c0)+(vt0.c1))))<((CASE WHEN vt1.c1 THEN vt1.c0 END, (vt0.c0 IN (vt1.c1, vt1.c1)), ((vt1.c1)&(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)||(vt1.c1)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((vt0.c0)+(vt0.c1))))<((CASE WHEN vt1.c1 THEN vt1.c0 END, (vt0.c0 IN (vt1.c1, vt1.c1)), ((vt1.c1)&(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1)||(vt1.c1)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((vt0.c0)+(vt0.c1))))<((CASE WHEN vt1.c1 THEN vt1.c0 END, (vt0.c0 IN (vt1.c1, vt1.c1)), ((vt1.c1)&(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)||(vt1.c1)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((vt0.c0)+(vt0.c1))))<((CASE WHEN vt1.c1 THEN vt1.c0 END, (vt0.c0 IN (vt1.c1, vt1.c1)), ((vt1.c1)&(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1)||(vt1.c1)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((vt0.c0)+(vt0.c1))))<((CASE WHEN vt1.c1 THEN vt1.c0 END, (vt0.c0 IN (vt1.c1, vt1.c1)), ((vt1.c1)&(vt0.c0))))));
SELECT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL)) ORDER BY ((((((((((vt1.c0)AND(0.24585031351582654)))AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c1)))<(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt1.c0)AND(0.24585031351582654)))AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c1)))<(vt0.c1)));
SELECT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL)) ORDER BY ((((((((((vt1.c0)AND(0.24585031351582654)))AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c1)))<(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt1.c0)AND(0.24585031351582654)))AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c1)))<(vt0.c1)));
SELECT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL)) ORDER BY ((((((((((vt1.c0)AND(0.24585031351582654)))AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c1)))<(vt0.c1));
SELECT COUNT(*) FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((((vt1.c1)AND(vt1.c1)))OR(NULL)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((((vt1.c1)AND(vt1.c1)))OR(NULL)))))OR(NULL))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((((vt1.c1)AND(vt1.c1)))OR(NULL)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((((vt1.c1)AND(vt1.c1)))OR(NULL)))))OR(NULL))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((((vt1.c1)AND(vt1.c1)))OR(NULL)))))OR(NULL)));
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c0)) BETWEEN (('-392825393')) AND ((vt1.c1))))%(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN (('-392825393')) AND ((vt1.c1))))%(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c0)) BETWEEN (('-392825393')) AND ((vt1.c1))))%(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN (('-392825393')) AND ((vt1.c1))))%(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c0)) BETWEEN (('-392825393')) AND ((vt1.c1))))%(CAST(vt1.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((((NOT (vt1.c1)))OR((~ (vt1.c1)))))AND(vt0.c0 COLLATE BINARY)) WHERE (((CAST(vt1.c1 AS REAL))-(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS REAL))-(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((((NOT (vt1.c1)))OR((~ (vt1.c1)))))AND(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((((NOT (vt1.c1)))OR((~ (vt1.c1)))))AND(vt0.c0 COLLATE BINARY)) WHERE (((CAST(vt1.c1 AS REAL))-(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS REAL))-(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((((NOT (vt1.c1)))OR((~ (vt1.c1)))))AND(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((((NOT (vt1.c1)))OR((~ (vt1.c1)))))AND(vt0.c0 COLLATE BINARY)) WHERE (((CAST(vt1.c1 AS REAL))-(CAST(vt1.c0 AS INTEGER))));
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS REAL))>(CAST(vt1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS REAL))>(CAST(vt1.c1 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS REAL))>(CAST(vt1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS REAL))>(CAST(vt1.c1 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS REAL))>(CAST(vt1.c1 AS TEXT))));
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT ((vt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt1.c0) NOTNULL))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT ((vt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt1.c0) NOTNULL))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT ((vt1.c0) NOTNULL)));
SELECT ALL * FROM vt0, vt1 WHERE ((- (((vt1.c1)%(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c1)%(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((- (((vt1.c1)%(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c1)%(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((- (((vt1.c1)%(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1, vt0.c0, vt0.c1))<((vt0.c0, vt0.c1, vt0.c0)))))>(((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) AND ((((('k	9^!z晃X')OR(x'')))OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1, vt0.c0, vt0.c1))<((vt0.c0, vt0.c1, vt0.c0)))))>(((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) AND ((((('k	9^!z晃X')OR(x'')))OR(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1, vt0.c0, vt0.c1))<((vt0.c0, vt0.c1, vt0.c0)))))>(((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) AND ((((('k	9^!z晃X')OR(x'')))OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1, vt0.c0, vt0.c1))<((vt0.c0, vt0.c1, vt0.c0)))))>(((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) AND ((((('k	9^!z晃X')OR(x'')))OR(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1, vt0.c0, vt0.c1))<((vt0.c0, vt0.c1, vt0.c0)))))>(((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) AND ((((('k	9^!z晃X')OR(x'')))OR(vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))IS('')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))IS('')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))IS('')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))IS('')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))IS('')) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)||(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)||(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)||(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)||(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)||(vt0.c0)) AS REAL));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c1) NOTNULL)  WHEN (NOT (vt0.c0)) THEN ((vt0.c1)==(vt0.c0)) WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (-2131034648)) THEN ((((vt1.c0)AND(vt0.c1)))OR(vt1.c1)) WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN CAST(vt1.c1 AS REAL) ELSE ((vt1.c0)-(vt1.c1)) END) ORDER BY CAST(vt1.c0 AS BLOB) COLLATE RTRIM, vt0.c0  NULLS FIRST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1) NOTNULL)  WHEN (NOT (vt0.c0)) THEN ((vt0.c1)==(vt0.c0)) WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (-2131034648)) THEN ((((vt1.c0)AND(vt0.c1)))OR(vt1.c1)) WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN CAST(vt1.c1 AS REAL) ELSE ((vt1.c0)-(vt1.c1)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt1.c0 AS BLOB) COLLATE RTRIM, vt0.c0  NULLS FIRST, vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c1) NOTNULL)  WHEN (NOT (vt0.c0)) THEN ((vt0.c1)==(vt0.c0)) WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (-2131034648)) THEN ((((vt1.c0)AND(vt0.c1)))OR(vt1.c1)) WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN CAST(vt1.c1 AS REAL) ELSE ((vt1.c0)-(vt1.c1)) END) ORDER BY CAST(vt1.c0 AS BLOB) COLLATE RTRIM, vt0.c0  NULLS FIRST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1) NOTNULL)  WHEN (NOT (vt0.c0)) THEN ((vt0.c1)==(vt0.c0)) WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (-2131034648)) THEN ((((vt1.c0)AND(vt0.c1)))OR(vt1.c1)) WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN CAST(vt1.c1 AS REAL) ELSE ((vt1.c0)-(vt1.c1)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt1.c0 AS BLOB) COLLATE RTRIM, vt0.c0  NULLS FIRST, vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c1) NOTNULL)  WHEN (NOT (vt0.c0)) THEN ((vt0.c1)==(vt0.c0)) WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (-2131034648)) THEN ((((vt1.c0)AND(vt0.c1)))OR(vt1.c1)) WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN CAST(vt1.c1 AS REAL) ELSE ((vt1.c0)-(vt1.c1)) END) ORDER BY CAST(vt1.c0 AS BLOB) COLLATE RTRIM, vt0.c0  NULLS FIRST, vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1)|(CASE vt1.c1  WHEN vt1.c1 THEN -894581533 WHEN vt1.c0 THEN -1.87745288E9 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)|(CASE vt1.c1  WHEN vt1.c1 THEN -894581533 WHEN vt1.c0 THEN -1.87745288E9 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1)|(CASE vt1.c1  WHEN vt1.c1 THEN -894581533 WHEN vt1.c0 THEN -1.87745288E9 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)|(CASE vt1.c1  WHEN vt1.c1 THEN -894581533 WHEN vt1.c0 THEN -1.87745288E9 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1)|(CASE vt1.c1  WHEN vt1.c1 THEN -894581533 WHEN vt1.c0 THEN -1.87745288E9 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt1.c1))  WHEN '-1e500' THEN vt0.c0 ELSE vt1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt1.c1))  WHEN '-1e500' THEN vt0.c0 ELSE vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt1.c1))  WHEN '-1e500' THEN vt0.c0 ELSE vt1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt1.c1))  WHEN '-1e500' THEN vt0.c0 ELSE vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt1.c1))  WHEN '-1e500' THEN vt0.c0 ELSE vt1.c0 COLLATE BINARY END);
SELECT * FROM vt1 WHERE ((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) NOT BETWEEN (x'') AND (CASE WHEN vt1.c1 THEN vt1.c0 ELSE '1048205785' END)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) NOT BETWEEN (x'') AND (CASE WHEN vt1.c1 THEN vt1.c0 ELSE '1048205785' END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) NOT BETWEEN (x'') AND (CASE WHEN vt1.c1 THEN vt1.c0 ELSE '1048205785' END)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) NOT BETWEEN (x'') AND (CASE WHEN vt1.c1 THEN vt1.c0 ELSE '1048205785' END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) NOT BETWEEN (x'') AND (CASE WHEN vt1.c1 THEN vt1.c0 ELSE '1048205785' END)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(json_array(vt0.c1, vt0.c1) AS TEXT)) ORDER BY (((((vt1.c0)+(vt1.c0))))<>((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))  NULLS FIRST, ((((vt0.c0)-(vt0.c1))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(json_array(vt0.c1, vt0.c1) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0)+(vt1.c0))))!=((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))  NULLS FIRST, ((((vt0.c0)-(vt0.c1))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(json_array(vt0.c1, vt0.c1) AS TEXT)) ORDER BY (((((vt1.c0)+(vt1.c0))))<>((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))  NULLS FIRST, ((((vt0.c0)-(vt0.c1))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(json_array(vt0.c1, vt0.c1) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0)+(vt1.c0))))!=((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))  NULLS FIRST, ((((vt0.c0)-(vt0.c1))) ISNULL)  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0)<=(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c0 END))) ORDER BY (NOT (((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<=(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (((vt0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0)<=(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c0 END))) ORDER BY (NOT (((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<=(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (((vt0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0)<=(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c0 END))) ORDER BY (NOT (((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT * FROM vt0 WHERE (((x'') NOTNULL)) ORDER BY CASE ((vt0.c1) IS FALSE)  WHEN RTRIM(vt0.c0) THEN 0.8116187224637084 WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN '' WHEN ((vt0.c1)|(vt0.c0)) THEN (- ('8z')) END, (((vt0.c1) ISNULL) IN ()) DESC  NULLS LAST, (NULL IN ()) COLLATE BINARY  NULLS LAST, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1) IS FALSE)  WHEN RTRIM(vt0.c0) THEN 0.8116187224637084 WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN '' WHEN ((vt0.c1)|(vt0.c0)) THEN (- ('8z')) END, (((vt0.c1) ISNULL) IN ()) DESC  NULLS LAST, (NULL IN ()) COLLATE BINARY  NULLS LAST, vt0.c0 ASC);
SELECT * FROM vt0 WHERE (((x'') NOTNULL)) ORDER BY CASE ((vt0.c1) IS FALSE)  WHEN RTRIM(vt0.c0) THEN 0.8116187224637084 WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN '' WHEN ((vt0.c1)|(vt0.c0)) THEN (- ('8z')) END, (((vt0.c1) ISNULL) IN ()) DESC  NULLS LAST, (NULL IN ()) COLLATE BINARY  NULLS LAST, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1) IS FALSE)  WHEN RTRIM(vt0.c0) THEN 0.8116187224637084 WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN '' WHEN ((vt0.c1)|(vt0.c0)) THEN (- ('8z')) END, (((vt0.c1) ISNULL) IN ()) DESC  NULLS LAST, (NULL IN ()) COLLATE BINARY  NULLS LAST, vt0.c0 ASC);
SELECT * FROM vt0 WHERE (((x'') NOTNULL)) ORDER BY CASE ((vt0.c1) IS FALSE)  WHEN RTRIM(vt0.c0) THEN 0.8116187224637084 WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN '' WHEN ((vt0.c1)|(vt0.c0)) THEN (- ('8z')) END, (((vt0.c1) ISNULL) IN ()) DESC  NULLS LAST, (NULL IN ()) COLLATE BINARY  NULLS LAST, vt0.c0 ASC;
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON vt1.c0 WHERE ((((vt0.c1 IN (vt0.c1, vt0.c1))) NOT BETWEEN (x'' COLLATE BINARY) AND (((vt1.c1)<(NULL))))) ORDER BY (HEX(DISTINCT NULL) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c1, vt0.c1))) NOT BETWEEN (x'' COLLATE BINARY) AND (((vt1.c1)<(NULL))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt1.c0 ORDER BY (HEX(DISTINCT NULL) IN ()));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON vt1.c0 WHERE ((((vt0.c1 IN (vt0.c1, vt0.c1))) NOT BETWEEN (x'' COLLATE BINARY) AND (((vt1.c1)<(NULL))))) ORDER BY (HEX(DISTINCT NULL) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c1, vt0.c1))) NOT BETWEEN (x'' COLLATE BINARY) AND (((vt1.c1)<(NULL))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt1.c0 ORDER BY (HEX(DISTINCT NULL) IN ()));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON vt1.c0 WHERE ((((vt0.c1 IN (vt0.c1, vt0.c1))) NOT BETWEEN (x'' COLLATE BINARY) AND (((vt1.c1)<(NULL))))) ORDER BY (HEX(DISTINCT NULL) IN ());
SELECT * FROM vt1, vt0 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY CASE CASE vt1.c0  WHEN vt0.c1 THEN vt1.c1 END  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NULL IN ()) ELSE load_extension(vt1.c1) END, CASE WHEN (vt1.c0 IN ()) THEN (((vt0.c0, vt0.c1, vt0.c0))>(('_w', vt1.c0, vt0.c1))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE CASE vt1.c0  WHEN vt0.c1 THEN vt1.c1 END  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NULL IN ()) ELSE load_extension(vt1.c1) END, CASE WHEN (vt1.c0 IN ()) THEN (((vt0.c0, vt0.c1, vt0.c0))>(('_w', vt1.c0, vt0.c1))) END ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY CASE CASE vt1.c0  WHEN vt0.c1 THEN vt1.c1 END  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NULL IN ()) ELSE load_extension(vt1.c1) END, CASE WHEN (vt1.c0 IN ()) THEN (((vt0.c0, vt0.c1, vt0.c0))>(('_w', vt1.c0, vt0.c1))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE CASE vt1.c0  WHEN vt0.c1 THEN vt1.c1 END  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NULL IN ()) ELSE load_extension(vt1.c1) END, CASE WHEN (vt1.c0 IN ()) THEN (((vt0.c0, vt0.c1, vt0.c0))>(('_w', vt1.c0, vt0.c1))) END ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0 IN ())) BETWEEN (TYPEOF(vt1.c1)) AND (((vt1.c1)OR(vt1.c1))))) ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)))OR((vt0.c1 IN (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) BETWEEN (TYPEOF(vt1.c1)) AND (((vt1.c1)OR(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)))OR((vt0.c1 IN (vt0.c1)))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0 IN ())) BETWEEN (TYPEOF(vt1.c1)) AND (((vt1.c1)OR(vt1.c1))))) ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)))OR((vt0.c1 IN (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) BETWEEN (TYPEOF(vt1.c1)) AND (((vt1.c1)OR(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)))OR((vt0.c1 IN (vt0.c1)))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0 IN ())) BETWEEN (TYPEOF(vt1.c1)) AND (((vt1.c1)OR(vt1.c1))))) ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)))OR((vt0.c1 IN (vt0.c1)))) ASC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c1)) IN ())) ORDER BY ((CAST(vt0.c0 AS TEXT))AND(IFNULL(vt0.c0, vt0.c1)))  NULLS LAST, ((((vt0.c0)<(vt0.c1)))GLOB(LOWER(vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)LIKE(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))AND(IFNULL(vt0.c0, vt0.c1)))  NULLS LAST, ((((vt0.c0)<(vt0.c1)))GLOB(LOWER(vt0.c1))) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c1)) IN ())) ORDER BY ((CAST(vt0.c0 AS TEXT))AND(IFNULL(vt0.c0, vt0.c1)))  NULLS LAST, ((((vt0.c0)<(vt0.c1)))GLOB(LOWER(vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)LIKE(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))AND(IFNULL(vt0.c0, vt0.c1)))  NULLS LAST, ((((vt0.c0)<(vt0.c1)))GLOB(LOWER(vt0.c1))) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c1)) IN ())) ORDER BY ((CAST(vt0.c0 AS TEXT))AND(IFNULL(vt0.c0, vt0.c1)))  NULLS LAST, ((((vt0.c0)<(vt0.c1)))GLOB(LOWER(vt0.c1))) ASC;
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS TEXT))*(UPPER(DISTINCT vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS TEXT))*(UPPER(DISTINCT vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS TEXT))*(UPPER(DISTINCT vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS TEXT))*(UPPER(DISTINCT vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS TEXT))*(UPPER(DISTINCT vt1.c1))));
SELECT COUNT(*) FROM vt1 WHERE (0X9f16878) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X9f16878) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (0X9f16878) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X9f16878) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (0X9f16878) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ('692681628' IN ())  WHEN (vt1.c0 IN (vt1.c0, vt1.c1)) THEN ((vt1.c1) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ('692681628' IN ())  WHEN (vt1.c0 IN (vt1.c0, vt1.c1)) THEN ((vt1.c1) NOTNULL) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ('692681628' IN ())  WHEN (vt1.c0 IN (vt1.c0, vt1.c1)) THEN ((vt1.c1) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ('692681628' IN ())  WHEN (vt1.c0 IN (vt1.c0, vt1.c1)) THEN ((vt1.c1) NOTNULL) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ('692681628' IN ())  WHEN (vt1.c0 IN (vt1.c0, vt1.c1)) THEN ((vt1.c1) NOTNULL) END);
SELECT * FROM vt1 WHERE (HEX(NULLIF(vt1.c1, vt1.c0)));
SELECT SUM(count) FROM (SELECT ((HEX(NULLIF(vt1.c1, vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (HEX(NULLIF(vt1.c1, vt1.c0)));
SELECT SUM(count) FROM (SELECT ((HEX(NULLIF(vt1.c1, vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (HEX(NULLIF(vt1.c1, vt1.c0)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS(NULL))) NOTNULL)) ORDER BY ((('1464967535', vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c0)<(vt0.c0)), json_insert(vt0.c1, vt0.c1, vt0.c0), (vt0.c0 IN ()))) AND ((((vt0.c0) IS TRUE), UPPER(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(NULL))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((('1464967535', vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c0)<(vt0.c0)), json_insert(vt0.c1, vt0.c1, vt0.c0), (vt0.c0 IN ()))) AND ((((vt0.c0) IS TRUE), UPPER(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS(NULL))) NOTNULL)) ORDER BY ((('1464967535', vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c0)<(vt0.c0)), json_insert(vt0.c1, vt0.c1, vt0.c0), (vt0.c0 IN ()))) AND ((((vt0.c0) IS TRUE), UPPER(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(NULL))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((('1464967535', vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c0)<(vt0.c0)), json_insert(vt0.c1, vt0.c1, vt0.c0), (vt0.c0 IN ()))) AND ((((vt0.c0) IS TRUE), UPPER(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS(NULL))) NOTNULL)) ORDER BY ((('1464967535', vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c0)<(vt0.c0)), json_insert(vt0.c1, vt0.c1, vt0.c0), (vt0.c0 IN ()))) AND ((((vt0.c0) IS TRUE), UPPER(DISTINCT vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) DESC;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))<=((((((((((vt0.c1)AND(vt1.c1)))OR('')))OR(vt0.c1)))OR(vt1.c0)))))) ORDER BY x'7b30' ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))<=((((((((((vt0.c1)AND(vt1.c1)))OR('')))OR(vt0.c1)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY x'7b30' ASC);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))<=((((((((((vt0.c1)AND(vt1.c1)))OR('')))OR(vt0.c1)))OR(vt1.c0)))))) ORDER BY x'7b30' ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))<=((((((((((vt0.c1)AND(vt1.c1)))OR('')))OR(vt0.c1)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY x'7b30' ASC);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))<=((((((((((vt0.c1)AND(vt1.c1)))OR('')))OR(vt0.c1)))OR(vt1.c0)))))) ORDER BY x'7b30' ASC;
SELECT ALL * FROM vt1 WHERE ('ᴘ') ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('ᴘ') IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ('ᴘ') ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('ᴘ') IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ('ᴘ') ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1) IS FALSE)) IS TRUE)) ORDER BY (((-1.07184318E9, vt1.c1, vt1.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT), CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END, (-1.7976931348623157E308 IN (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN ('Y{]^') AND (vt1.c1)), (('-1090790269') NOT BETWEEN (vt1.c1) AND (vt1.c0)), (vt0.c1 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((-1.07184318E9, vt1.c1, vt1.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT), CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END, (-1.7976931348623157E308 IN (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN ('Y{]^') AND (vt1.c1)), (('-1090790269') NOT BETWEEN (vt1.c1) AND (vt1.c0)), (vt0.c1 IN ())))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1) IS FALSE)) IS TRUE)) ORDER BY (((-1.07184318E9, vt1.c1, vt1.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT), CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END, (-1.7976931348623157E308 IN (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN ('Y{]^') AND (vt1.c1)), (('-1090790269') NOT BETWEEN (vt1.c1) AND (vt1.c0)), (vt0.c1 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((-1.07184318E9, vt1.c1, vt1.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT), CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END, (-1.7976931348623157E308 IN (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN ('Y{]^') AND (vt1.c1)), (('-1090790269') NOT BETWEEN (vt1.c1) AND (vt1.c0)), (vt0.c1 IN ())))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1) IS FALSE)) IS TRUE)) ORDER BY (((-1.07184318E9, vt1.c1, vt1.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT), CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END, (-1.7976931348623157E308 IN (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN ('Y{]^') AND (vt1.c1)), (('-1090790269') NOT BETWEEN (vt1.c1) AND (vt1.c0)), (vt0.c1 IN ())))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NOT (NULL))))>((((vt1.c1)/('Z}⟆')))))) ORDER BY CASE ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c0))  WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c1 ELSE vt1.c1 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (NULL))))>((((vt1.c1)/('Z}⟆')))))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c0))  WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c1 ELSE vt1.c1 END ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NOT (NULL))))>((((vt1.c1)/('Z}⟆')))))) ORDER BY CASE ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c0))  WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c1 ELSE vt1.c1 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (NULL))))>((((vt1.c1)/('Z}⟆')))))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c0))  WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c1 ELSE vt1.c1 END ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NOT (NULL))))>((((vt1.c1)/('Z}⟆')))))) ORDER BY CASE ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c0))  WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c1 ELSE vt1.c1 END ASC;
SELECT * FROM vt1 WHERE ((~ (NULL))) ORDER BY ((DATETIME(vt1.c0, vt1.c0, vt1.c0)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM vt1 ORDER BY ((DATETIME(vt1.c0, vt1.c0, vt1.c0)) NOT NULL) DESC);
SELECT * FROM vt1 WHERE ((~ (NULL))) ORDER BY ((DATETIME(vt1.c0, vt1.c0, vt1.c0)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM vt1 ORDER BY ((DATETIME(vt1.c0, vt1.c0, vt1.c0)) NOT NULL) DESC);
SELECT * FROM vt1 WHERE ((~ (NULL))) ORDER BY ((DATETIME(vt1.c0, vt1.c0, vt1.c0)) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (559555638 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((559555638 COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (559555638 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((559555638 COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (559555638 COLLATE NOCASE);
SELECT * FROM vt1 WHERE (((TRIM(DISTINCT vt1.c1))+(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c1))+(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((TRIM(DISTINCT vt1.c1))+(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c1))+(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((TRIM(DISTINCT vt1.c1))+(CAST(vt1.c0 AS TEXT))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM)<=((- (0.4370166097308368))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((((vt1.c1, vt1.c0, vt1.c0))==((vt1.c1, vt1.c0, vt1.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE RTRIM)<=((- (0.4370166097308368))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((((vt1.c1, vt1.c0, vt1.c0))=((vt1.c1, vt1.c0, vt1.c0)))))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM)<=((- (0.4370166097308368))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((((vt1.c1, vt1.c0, vt1.c0))==((vt1.c1, vt1.c0, vt1.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE RTRIM)<=((- (0.4370166097308368))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((((vt1.c1, vt1.c0, vt1.c0))=((vt1.c1, vt1.c0, vt1.c0)))))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM)<=((- (0.4370166097308368))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((((vt1.c1, vt1.c0, vt1.c0))==((vt1.c1, vt1.c0, vt1.c0)))))) ASC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) ELSE vt0.c0 COLLATE BINARY END) ORDER BY ((('169194699')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY ((('169194699')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) ELSE vt0.c0 COLLATE BINARY END) ORDER BY ((('169194699')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY ((('169194699')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) ELSE vt0.c0 COLLATE BINARY END) ORDER BY ((('169194699')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((((- (vt0.c0)))|(CASE WHEN vt1.c1 THEN vt1.c1 END))) ORDER BY CASE WHEN CHAR(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))|(CASE WHEN vt1.c1 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN CHAR(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END ASC);
SELECT * FROM vt1, vt0 WHERE ((((- (vt0.c0)))|(CASE WHEN vt1.c1 THEN vt1.c1 END))) ORDER BY CASE WHEN CHAR(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))|(CASE WHEN vt1.c1 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN CHAR(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END ASC);
SELECT * FROM vt1, vt0 WHERE ((((- (vt0.c0)))|(CASE WHEN vt1.c1 THEN vt1.c1 END))) ORDER BY CASE WHEN CHAR(vt1.c0) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END ASC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c0);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c0);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.2632363928745054);
SELECT SUM(count) FROM (SELECT ((0.2632363928745054) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.2632363928745054);
SELECT SUM(count) FROM (SELECT ((0.2632363928745054) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.2632363928745054);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN ((0.5128022611205312)OR(x'8fdfa948')) THEN ((vt1.c1) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((0.5128022611205312)OR(x'8fdfa948')) THEN ((vt1.c1) NOTNULL) END) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN ((0.5128022611205312)OR(x'8fdfa948')) THEN ((vt1.c1) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((0.5128022611205312)OR(x'8fdfa948')) THEN ((vt1.c1) NOTNULL) END) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN ((0.5128022611205312)OR(x'8fdfa948')) THEN ((vt1.c1) NOTNULL) END);
SELECT ALL * FROM vt0 WHERE (((TRIM(vt0.c0, vt0.c0)) NOT NULL)) ORDER BY -980833607 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c0, vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY -980833607 DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((TRIM(vt0.c0, vt0.c0)) NOT NULL)) ORDER BY -980833607 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c0, vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY -980833607 DESC  NULLS LAST);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(ABS(x'')))) ORDER BY (- (CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(ABS(x'')))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (CAST(vt1.c0 AS BLOB))));
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(ABS(x'')))) ORDER BY (- (CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(ABS(x'')))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (CAST(vt1.c0 AS BLOB))));
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(ABS(x'')))) ORDER BY (- (CAST(vt1.c0 AS BLOB)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c1))) IS TRUE));
SELECT ALL * FROM vt1, vt0 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))AND(DATE(vt0.c1, vt1.c1, vt0.c1))))OR((((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))AND(DATE(vt0.c1, vt1.c1, vt0.c1))))OR((((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))AND(DATE(vt0.c1, vt1.c1, vt0.c1))))OR((((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))AND(DATE(vt0.c1, vt1.c1, vt0.c1))))OR((((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))AND(DATE(vt0.c1, vt1.c1, vt0.c1))))OR((((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((x'') BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c1 COLLATE NOCASE WHEN vt1.c1 COLLATE BINARY THEN vt1.c0 COLLATE RTRIM WHEN vt1.c0 THEN ((vt1.c1) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'') BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c1 COLLATE NOCASE WHEN vt1.c1 COLLATE BINARY THEN vt1.c0 COLLATE RTRIM WHEN vt1.c0 THEN ((vt1.c1) NOTNULL) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((x'') BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c1 COLLATE NOCASE WHEN vt1.c1 COLLATE BINARY THEN vt1.c0 COLLATE RTRIM WHEN vt1.c0 THEN ((vt1.c1) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'') BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c1 COLLATE NOCASE WHEN vt1.c1 COLLATE BINARY THEN vt1.c0 COLLATE RTRIM WHEN vt1.c0 THEN ((vt1.c1) NOTNULL) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((x'') BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c1 COLLATE NOCASE WHEN vt1.c1 COLLATE BINARY THEN vt1.c0 COLLATE RTRIM WHEN vt1.c0 THEN ((vt1.c1) NOTNULL) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE) ORDER BY NULL, CAST((+ ('᭽8T^yꙔQ')) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY NULL, CAST((+ ('᭽8T^yꙔQ')) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE) ORDER BY NULL, CAST((+ ('᭽8T^yꙔQ')) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY NULL, CAST((+ ('᭽8T^yꙔQ')) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE) ORDER BY NULL, CAST((+ ('᭽8T^yꙔQ')) AS TEXT) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((- (vt0.c0))))==((vt0.c0)))) ORDER BY ((LIKELY(vt0.c0)) BETWEEN (LOWER(DISTINCT NULL)) AND ((- (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (vt0.c0))))=((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(vt0.c0)) BETWEEN (LOWER(DISTINCT NULL)) AND ((- (vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((- (vt0.c0))))==((vt0.c0)))) ORDER BY ((LIKELY(vt0.c0)) BETWEEN (LOWER(DISTINCT NULL)) AND ((- (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (vt0.c0))))=((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(vt0.c0)) BETWEEN (LOWER(DISTINCT NULL)) AND ((- (vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((- (vt0.c0))))==((vt0.c0)))) ORDER BY ((LIKELY(vt0.c0)) BETWEEN (LOWER(DISTINCT NULL)) AND ((- (vt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c1 END))>=((((vt1.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt1.c0 THEN vt1.c1 END))>=((((vt1.c1) IS FALSE))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c1 END))>=((((vt1.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt1.c0 THEN vt1.c1 END))>=((((vt1.c1) IS FALSE))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c1 END))>=((((vt1.c1) IS FALSE)))));
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))<>(CAST(x'' AS REAL)))) ORDER BY (NOT (((vt1.c1)==(vt1.c0))))  NULLS FIRST, (~ (vt1.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))!=(CAST(x'' AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c1)=(vt1.c0))))  NULLS FIRST, (~ (vt1.c1)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))<>(CAST(x'' AS REAL)))) ORDER BY (NOT (((vt1.c1)==(vt1.c0))))  NULLS FIRST, (~ (vt1.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))!=(CAST(x'' AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c1)=(vt1.c0))))  NULLS FIRST, (~ (vt1.c1)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))<>(CAST(x'' AS REAL)))) ORDER BY (NOT (((vt1.c1)==(vt1.c0))))  NULLS FIRST, (~ (vt1.c1)) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) IS TRUE) THEN CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1) IS TRUE) THEN CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) IS TRUE) THEN CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1) IS TRUE) THEN CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) IS TRUE) THEN CAST(vt1.c0 AS NUMERIC) END);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0) IS TRUE))AND(CAST(vt0.c1 AS REAL))))OR((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) IS TRUE))AND(CAST(vt0.c1 AS REAL))))OR((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0) IS TRUE))AND(CAST(vt0.c1 AS REAL))))OR((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) IS TRUE))AND(CAST(vt0.c1 AS REAL))))OR((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0) IS TRUE))AND(CAST(vt0.c1 AS REAL))))OR((NOT (vt0.c1)))));
SELECT * FROM vt1, vt0 WHERE (CASE vt1.c0 COLLATE BINARY  WHEN ((vt1.c0)OR(vt0.c0)) THEN (vt1.c0 IN ()) ELSE CAST(vt0.c1 AS REAL) END) ORDER BY CASE WHEN (vt1.c1 IN ()) THEN ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE BINARY  WHEN ((vt1.c0)OR(vt0.c0)) THEN (vt1.c0 IN ()) ELSE CAST(vt0.c1 AS REAL) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (vt1.c1 IN ()) THEN ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) END DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (CASE vt1.c0 COLLATE BINARY  WHEN ((vt1.c0)OR(vt0.c0)) THEN (vt1.c0 IN ()) ELSE CAST(vt0.c1 AS REAL) END) ORDER BY CASE WHEN (vt1.c1 IN ()) THEN ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE BINARY  WHEN ((vt1.c0)OR(vt0.c0)) THEN (vt1.c0 IN ()) ELSE CAST(vt0.c1 AS REAL) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (vt1.c1 IN ()) THEN ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) END DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (CASE vt1.c0 COLLATE BINARY  WHEN ((vt1.c0)OR(vt0.c0)) THEN (vt1.c0 IN ()) ELSE CAST(vt0.c1 AS REAL) END) ORDER BY CASE WHEN (vt1.c1 IN ()) THEN ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) END DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((NULL) IS TRUE)) ORDER BY '᭽8t^yꙕq'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY '᭽8t^yꙕq'  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((NULL) IS TRUE)) ORDER BY '᭽8t^yꙕq'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY '᭽8t^yꙕq'  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((NULL) IS TRUE)) ORDER BY '᭽8t^yꙕq'  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((vt0.c0)IS(((NULL) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(((NULL) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((vt0.c0)IS(((NULL) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(((NULL) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((vt0.c0)IS(((NULL) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) BETWEEN (((((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))) AND ((((('')) BETWEEN ((vt1.c1)) AND ((vt0.c1)))))) WHERE (0.8627932383105114);
SELECT SUM(count) FROM (SELECT ALL ((0.8627932383105114) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) BETWEEN (((((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))) AND ((((('')) BETWEEN ((vt1.c1)) AND ((vt0.c1)))))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) BETWEEN (((((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))) AND ((((('')) BETWEEN ((vt1.c1)) AND ((vt0.c1)))))) WHERE (0.8627932383105114);
SELECT SUM(count) FROM (SELECT ALL ((0.8627932383105114) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) BETWEEN (((((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))) AND ((((('')) BETWEEN ((vt1.c1)) AND ((vt0.c1)))))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) BETWEEN (((((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))) AND ((((('')) BETWEEN ((vt1.c1)) AND ((vt0.c1)))))) WHERE (0.8627932383105114);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(CAST(vt1.c0 AS REAL))))OR(1811563468)))OR(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))OR((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt1.c0))))))AND(LOWER(DISTINCT vt1.c1))))AND(((vt1.c0)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(CAST(vt1.c0 AS REAL))))OR(1811563468)))OR(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))OR((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt1.c0))))))AND(LOWER(DISTINCT vt1.c1))))AND(((vt1.c0)<<(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(CAST(vt1.c0 AS REAL))))OR(1811563468)))OR(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))OR((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt1.c0))))))AND(LOWER(DISTINCT vt1.c1))))AND(((vt1.c0)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(CAST(vt1.c0 AS REAL))))OR(1811563468)))OR(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))OR((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt1.c0))))))AND(LOWER(DISTINCT vt1.c1))))AND(((vt1.c0)<<(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(CAST(vt1.c0 AS REAL))))OR(1811563468)))OR(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))OR((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt1.c0))))))AND(LOWER(DISTINCT vt1.c1))))AND(((vt1.c0)<<(vt1.c0)))));
SELECT * FROM vt0 WHERE (((0.9071691260348181)%(CAST(vt0.c1 AS INTEGER)))) ORDER BY CASE WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN (((vt0.c0))<=((vt0.c1))) ELSE (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('-67650201'))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.9071691260348181)%(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN (((vt0.c0))<=((vt0.c1))) ELSE (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('-67650201'))) END DESC);
SELECT * FROM vt0 WHERE (((0.9071691260348181)%(CAST(vt0.c1 AS INTEGER)))) ORDER BY CASE WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN (((vt0.c0))<=((vt0.c1))) ELSE (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('-67650201'))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.9071691260348181)%(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN (((vt0.c0))<=((vt0.c1))) ELSE (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('-67650201'))) END DESC);
SELECT * FROM vt0 WHERE (((0.9071691260348181)%(CAST(vt0.c1 AS INTEGER)))) ORDER BY CASE WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN (((vt0.c0))<=((vt0.c1))) ELSE (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('-67650201'))) END DESC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)||(((vt0.c0)-(vt0.c0))))) ORDER BY vt0.c1  NULLS FIRST, (+ (((vt0.c1) IS FALSE))), CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END AS TEXT);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)||(((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST, (+ (((vt0.c1) IS FALSE))), CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END AS TEXT));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)||(((vt0.c0)-(vt0.c0))))) ORDER BY vt0.c1  NULLS FIRST, (+ (((vt0.c1) IS FALSE))), CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END AS TEXT);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)||(((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST, (+ (((vt0.c1) IS FALSE))), CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END AS TEXT));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)||(((vt0.c0)-(vt0.c0))))) ORDER BY vt0.c1  NULLS FIRST, (+ (((vt0.c1) IS FALSE))), CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END AS TEXT);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (NULL)) IN (COALESCE(vt0.c1, x''), ((vt1.c0)==(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt1.c1) AND (NULL)) IN (COALESCE(vt0.c1, x''), ((vt1.c0)=(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (NULL)) IN (COALESCE(vt0.c1, x''), ((vt1.c0)==(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt1.c1) AND (NULL)) IN (COALESCE(vt0.c1, x''), ((vt1.c0)=(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (NULL)) IN (COALESCE(vt0.c1, x''), ((vt1.c0)==(vt1.c0)))));
SELECT * FROM vt0 WHERE (LIKELIHOOD(CASE vt0.c0  WHEN vt0.c1 THEN x'' ELSE vt0.c0 END, 0.15075886357902468));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CASE vt0.c0  WHEN vt0.c1 THEN x'' ELSE vt0.c0 END, 0.15075886357902468)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELIHOOD(CASE vt0.c0  WHEN vt0.c1 THEN x'' ELSE vt0.c0 END, 0.15075886357902468));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CASE vt0.c0  WHEN vt0.c1 THEN x'' ELSE vt0.c0 END, 0.15075886357902468)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELIHOOD(CASE vt0.c0  WHEN vt0.c1 THEN x'' ELSE vt0.c0 END, 0.15075886357902468));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c1, vt0.c0)))) AND ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c1, vt0.c0)))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c1, vt0.c0)))) AND ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c1, vt0.c0)))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c1, vt0.c0)))) AND ((~ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0)*(vt0.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(((vt1.c0) IS TRUE)))) ORDER BY (((vt1.c0 IN (vt0.c1, vt0.c1)))<<(((((vt1.c1)AND('-385764509')))OR(vt0.c0))))  NULLS LAST, ((((((((x'4837')OR(((vt0.c0)-(vt1.c1)))))AND((vt1.c0 IN ()))))AND(((vt0.c0)IS NOT(vt0.c0)))))OR((vt0.c0 IN (vt0.c1, vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)*(vt0.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0 IN (vt0.c1, vt0.c1)))<<(((((vt1.c1)AND('-385764509')))OR(vt0.c0))))  NULLS LAST, ((((((((x'4837')OR(((vt0.c0)-(vt1.c1)))))AND((vt1.c0 IN ()))))AND(((vt0.c0)IS NOT(vt0.c0)))))OR((vt0.c0 IN (vt0.c1, vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0)*(vt0.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(((vt1.c0) IS TRUE)))) ORDER BY (((vt1.c0 IN (vt0.c1, vt0.c1)))<<(((((vt1.c1)AND('-385764509')))OR(vt0.c0))))  NULLS LAST, ((((((((x'4837')OR(((vt0.c0)-(vt1.c1)))))AND((vt1.c0 IN ()))))AND(((vt0.c0)IS NOT(vt0.c0)))))OR((vt0.c0 IN (vt0.c1, vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)*(vt0.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0 IN (vt0.c1, vt0.c1)))<<(((((vt1.c1)AND('-385764509')))OR(vt0.c0))))  NULLS LAST, ((((((((x'4837')OR(((vt0.c0)-(vt1.c1)))))AND((vt1.c0 IN ()))))AND(((vt0.c0)IS NOT(vt0.c0)))))OR((vt0.c0 IN (vt0.c1, vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0)*(vt0.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(((vt1.c0) IS TRUE)))) ORDER BY (((vt1.c0 IN (vt0.c1, vt0.c1)))<<(((((vt1.c1)AND('-385764509')))OR(vt0.c0))))  NULLS LAST, ((((((((x'4837')OR(((vt0.c0)-(vt1.c1)))))AND((vt1.c0 IN ()))))AND(((vt0.c0)IS NOT(vt0.c0)))))OR((vt0.c0 IN (vt0.c1, vt0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c0))) ORDER BY ((0.9265973977697307)LIKE(((vt0.c1)IS NOT('-1461381534')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((0.9265973977697307)LIKE(((vt0.c1)IS NOT('-1461381534')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c0))) ORDER BY ((0.9265973977697307)LIKE(((vt0.c1)IS NOT('-1461381534')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((0.9265973977697307)LIKE(((vt0.c1)IS NOT('-1461381534')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c0))) ORDER BY ((0.9265973977697307)LIKE(((vt0.c1)IS NOT('-1461381534')))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((- (CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END))) ORDER BY vt1.c0 ASC, ((((((vt0.c1, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt1.c1, vt0.c1, vt1.c0)))))>((vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 ASC, ((((((vt0.c1, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt1.c1, vt0.c1, vt1.c0)))))>((vt1.c0 COLLATE BINARY))));
SELECT ALL * FROM vt1, vt0 WHERE ((- (CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END))) ORDER BY vt1.c0 ASC, ((((((vt0.c1, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt1.c1, vt0.c1, vt1.c0)))))>((vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 ASC, ((((((vt0.c1, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt1.c1, vt0.c1, vt1.c0)))))>((vt1.c0 COLLATE BINARY))));
SELECT ALL * FROM vt1, vt0 WHERE ((- (CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END))) ORDER BY vt1.c0 ASC, ((((((vt0.c1, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt1.c1, vt0.c1, vt1.c0)))))>((vt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE (-1545952475) ORDER BY (((((('zE'))=((vt0.c0)))))>=((((0.4626415867260538)<>(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1545952475) IS TRUE)  as count FROM vt0 ORDER BY (((((('zE'))=((vt0.c0)))))>=((((0.4626415867260538)!=(vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (-1545952475) ORDER BY (((((('zE'))=((vt0.c0)))))>=((((0.4626415867260538)<>(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1545952475) IS TRUE)  as count FROM vt0 ORDER BY (((((('zE'))=((vt0.c0)))))>=((((0.4626415867260538)!=(vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (-1545952475) ORDER BY (((((('zE'))=((vt0.c0)))))>=((((0.4626415867260538)<>(vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1 COLLATE BINARY)OR('0.2285065064377656')))AND((~ (vt0.c1))))) ORDER BY ((UPPER(vt1.c1))IS NOT(CASE WHEN vt0.c1 THEN vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 COLLATE BINARY)OR('0.2285065064377656')))AND((~ (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((UPPER(vt1.c1))IS NOT(CASE WHEN vt0.c1 THEN vt0.c1 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1 COLLATE BINARY)OR('0.2285065064377656')))AND((~ (vt0.c1))))) ORDER BY ((UPPER(vt1.c1))IS NOT(CASE WHEN vt0.c1 THEN vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 COLLATE BINARY)OR('0.2285065064377656')))AND((~ (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((UPPER(vt1.c1))IS NOT(CASE WHEN vt0.c1 THEN vt0.c1 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1 COLLATE BINARY)OR('0.2285065064377656')))AND((~ (vt0.c1))))) ORDER BY ((UPPER(vt1.c1))IS NOT(CASE WHEN vt0.c1 THEN vt0.c1 END))  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON UNLIKELY(CAST(vt1.c1 AS REAL)) WHERE (RTRIM(((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON UNLIKELY(CAST(vt1.c1 AS REAL)));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON UNLIKELY(CAST(vt1.c1 AS REAL)) WHERE (RTRIM(((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON UNLIKELY(CAST(vt1.c1 AS REAL)));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON UNLIKELY(CAST(vt1.c1 AS REAL)) WHERE (RTRIM(((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL))));
SELECT * FROM vt1, vt0 WHERE (CASE WHEN ((vt1.c0)LIKE(vt0.c1)) THEN ((((vt0.c1)OR(vt1.c0)))AND(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)LIKE(vt0.c1)) THEN ((((vt0.c1)OR(vt1.c0)))AND(vt1.c1)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN ((vt1.c0)LIKE(vt0.c1)) THEN ((((vt0.c1)OR(vt1.c0)))AND(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)LIKE(vt0.c1)) THEN ((((vt0.c1)OR(vt1.c0)))AND(vt1.c1)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN ((vt1.c0)LIKE(vt0.c1)) THEN ((((vt0.c1)OR(vt1.c0)))AND(vt1.c1)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NULL COLLATE BINARY IN ((~ (0.6897577484171679)))));
SELECT SUM(count) FROM (SELECT (((NULL COLLATE BINARY IN ((~ (0.6897577484171679))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NULL COLLATE BINARY IN ((~ (0.6897577484171679)))));
SELECT SUM(count) FROM (SELECT (((NULL COLLATE BINARY IN ((~ (0.6897577484171679))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NULL COLLATE BINARY IN ((~ (0.6897577484171679)))));
SELECT * FROM vt1, vt0 WHERE (DATETIME(((vt1.c1)>(vt0.c1)), (((vt0.c1))!=((vt0.c0))), (- (-1275596352)))) ORDER BY ((vt0.c1 COLLATE NOCASE) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATETIME(((vt1.c1)>(vt0.c1)), (((vt0.c1))<>((vt0.c0))), (- (-1275596352)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c1 COLLATE NOCASE) NOTNULL)  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (DATETIME(((vt1.c1)>(vt0.c1)), (((vt0.c1))!=((vt0.c0))), (- (-1275596352)))) ORDER BY ((vt0.c1 COLLATE NOCASE) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATETIME(((vt1.c1)>(vt0.c1)), (((vt0.c1))<>((vt0.c0))), (- (-1275596352)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c1 COLLATE NOCASE) NOTNULL)  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (DATETIME(((vt1.c1)>(vt0.c1)), (((vt0.c1))!=((vt0.c0))), (- (-1275596352)))) ORDER BY ((vt0.c1 COLLATE NOCASE) NOTNULL)  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (vt1.c0 IN (vt1.c1)) THEN (vt1.c1 IN ()) WHEN vt1.c0 COLLATE NOCASE THEN ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)) WHEN CASE WHEN x'' THEN vt1.c1 ELSE vt1.c1 END THEN (NOT (vt1.c1)) END) ORDER BY CASE (+ (vt1.c0))  WHEN vt1.c1 THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN (vt1.c1)) THEN (vt1.c1 IN ()) WHEN vt1.c0 COLLATE NOCASE THEN ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)) WHEN CASE WHEN x'' THEN vt1.c1 ELSE vt1.c1 END THEN (NOT (vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE (+ (vt1.c0))  WHEN vt1.c1 THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END END DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (vt1.c0 IN (vt1.c1)) THEN (vt1.c1 IN ()) WHEN vt1.c0 COLLATE NOCASE THEN ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)) WHEN CASE WHEN x'' THEN vt1.c1 ELSE vt1.c1 END THEN (NOT (vt1.c1)) END) ORDER BY CASE (+ (vt1.c0))  WHEN vt1.c1 THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN (vt1.c1)) THEN (vt1.c1 IN ()) WHEN vt1.c0 COLLATE NOCASE THEN ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)) WHEN CASE WHEN x'' THEN vt1.c1 ELSE vt1.c1 END THEN (NOT (vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE (+ (vt1.c0))  WHEN vt1.c1 THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END END DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (vt1.c0 IN (vt1.c1)) THEN (vt1.c1 IN ()) WHEN vt1.c0 COLLATE NOCASE THEN ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)) WHEN CASE WHEN x'' THEN vt1.c1 ELSE vt1.c1 END THEN (NOT (vt1.c1)) END) ORDER BY CASE (+ (vt1.c0))  WHEN vt1.c1 THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END END DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)>>(vt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>>(vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)>>(vt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>>(vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)>>(vt1.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE ((~ ((vt1.c1 IN (vt1.c0))))) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE RTRIM DESC, CAST(CAST(vt1.c1 AS INTEGER) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt1.c1 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE RTRIM DESC, CAST(CAST(vt1.c1 AS INTEGER) AS REAL));
SELECT COUNT(*) FROM vt1 WHERE ((~ ((vt1.c1 IN (vt1.c0))))) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE RTRIM DESC, CAST(CAST(vt1.c1 AS INTEGER) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt1.c1 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE RTRIM DESC, CAST(CAST(vt1.c1 AS INTEGER) AS REAL));
SELECT COUNT(*) FROM vt1 WHERE ((~ ((vt1.c1 IN (vt1.c0))))) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE RTRIM DESC, CAST(CAST(vt1.c1 AS INTEGER) AS REAL);
SELECT ALL * FROM vt0, vt1 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((vt0.c0)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((vt0.c0)IS(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((vt0.c0)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((vt0.c0)IS(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((vt0.c0)IS(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)&(vt0.c0))) BETWEEN (((vt0.c1)<=(vt0.c0))) AND ('0.019834821174609996')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)&(vt0.c0))) BETWEEN (((vt0.c1)<=(vt0.c0))) AND ('0.019834821174609996'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)&(vt0.c0))) BETWEEN (((vt0.c1)<=(vt0.c0))) AND ('0.019834821174609996')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)&(vt0.c0))) BETWEEN (((vt0.c1)<=(vt0.c0))) AND ('0.019834821174609996'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)&(vt0.c0))) BETWEEN (((vt0.c1)<=(vt0.c0))) AND ('0.019834821174609996')));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((((vt0.c1))>=((vt0.c0)))) AND ((((x'ec0c8600', -1.646758196E9, vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN ((((vt0.c1))>=((vt0.c0)))) AND ((((x'ec0c8600', -1.646758196E9, vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((((vt0.c1))>=((vt0.c0)))) AND ((((x'ec0c8600', -1.646758196E9, vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN ((((vt0.c1))>=((vt0.c0)))) AND ((((x'ec0c8600', -1.646758196E9, vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((((vt0.c1))>=((vt0.c0)))) AND ((((x'ec0c8600', -1.646758196E9, vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))))));
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY (NOT (((vt1.c0)%(vt1.c0)))), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END COLLATE RTRIM ASC, (((((vt1.c1) NOTNULL)))>(('1560735802' COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0)%(vt1.c0)))), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END COLLATE RTRIM ASC, (((((vt1.c1) NOTNULL)))>(('1560735802' COLLATE RTRIM))) ASC);
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY (NOT (((vt1.c0)%(vt1.c0)))), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END COLLATE RTRIM ASC, (((((vt1.c1) NOTNULL)))>(('1560735802' COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0)%(vt1.c0)))), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END COLLATE RTRIM ASC, (((((vt1.c1) NOTNULL)))>(('1560735802' COLLATE RTRIM))) ASC);
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY (NOT (((vt1.c0)%(vt1.c0)))), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END COLLATE RTRIM ASC, (((((vt1.c1) NOTNULL)))>(('1560735802' COLLATE RTRIM))) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (NULL);
SELECT * FROM vt1, vt0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((x'' IN ()));
SELECT ALL * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'');
SELECT ALL * FROM vt1, vt0 WHERE (PRINTF(TYPEOF(DISTINCT vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(TYPEOF(DISTINCT vt1.c1))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (PRINTF(TYPEOF(DISTINCT vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(TYPEOF(DISTINCT vt1.c1))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (PRINTF(TYPEOF(DISTINCT vt1.c1)));
SELECT * FROM vt1, vt0 WHERE (CAST(((vt1.c1)IS(vt1.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1)IS(vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(((vt1.c1)IS(vt1.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1)IS(vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(((vt1.c1)IS(vt1.c1)) AS INTEGER));
SELECT * FROM vt0 WHERE (CASE WHEN HEX('--鐵r') THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX('--鐵r') THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN HEX('--鐵r') THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX('--鐵r') THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN HEX('--鐵r') THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((+ (vt0.c1)))) AND ((CAST(vt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((+ (vt0.c1)))) AND ((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((+ (vt0.c1)))) AND ((CAST(vt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((+ (vt0.c1)))) AND ((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((+ (vt0.c1)))) AND ((CAST(vt0.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LIKELIHOOD(DISTINCT (((vt1.c1))!=((vt0.c1))), 0.09244429677812005)) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (((vt1.c1))<>((vt0.c1))), 0.09244429677812005)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LIKELIHOOD(DISTINCT (((vt1.c1))!=((vt0.c1))), 0.09244429677812005)) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (((vt1.c1))<>((vt0.c1))), 0.09244429677812005)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LIKELIHOOD(DISTINCT (((vt1.c1))!=((vt0.c1))), 0.09244429677812005)) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)IS(vt0.c1)) THEN CAST(vt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)IS(vt0.c1)) THEN CAST(vt0.c1 AS REAL) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)IS(vt0.c1)) THEN CAST(vt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)IS(vt0.c1)) THEN CAST(vt0.c1 AS REAL) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)IS(vt0.c1)) THEN CAST(vt0.c1 AS REAL) END);
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))  WHEN ((vt0.c1) BETWEEN (NULL) AND (vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) END) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END, ((((x'0090')OR(vt0.c0)))AND(vt0.c1)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)AND(vt0.c1)), (((vt0.c1, vt0.c0, 0.02772997212769035))>((vt0.c0, vt0.c0, 0.4247805447084104)))))) DESC, CASE WHEN CAST(NULL AS NUMERIC) THEN NULL COLLATE BINARY WHEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c1 AS INTEGER) WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((x'')IS NOT(vt0.c0)) WHEN COALESCE(DISTINCT NULL, 'C?5&+a') THEN vt0.c1 COLLATE RTRIM WHEN ((vt0.c0)>>(vt0.c1)) THEN vt0.c0 ELSE ((vt0.c0)>=(vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))  WHEN ((vt0.c1) BETWEEN (NULL) AND (vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END, ((((x'0090')OR(vt0.c0)))AND(vt0.c1)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)AND(vt0.c1)), (((vt0.c1, vt0.c0, 0.02772997212769035))>((vt0.c0, vt0.c0, 0.4247805447084104)))))) DESC, CASE WHEN CAST(NULL AS NUMERIC) THEN NULL COLLATE BINARY WHEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c1 AS INTEGER) WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((x'')IS NOT(vt0.c0)) WHEN COALESCE(DISTINCT NULL, 'C?5&+a') THEN vt0.c1 COLLATE RTRIM WHEN ((vt0.c0)>>(vt0.c1)) THEN vt0.c0 ELSE ((vt0.c0)>=(vt0.c1)) END);
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))  WHEN ((vt0.c1) BETWEEN (NULL) AND (vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) END) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END, ((((x'0090')OR(vt0.c0)))AND(vt0.c1)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)AND(vt0.c1)), (((vt0.c1, vt0.c0, 0.02772997212769035))>((vt0.c0, vt0.c0, 0.4247805447084104)))))) DESC, CASE WHEN CAST(NULL AS NUMERIC) THEN NULL COLLATE BINARY WHEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c1 AS INTEGER) WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((x'')IS NOT(vt0.c0)) WHEN COALESCE(DISTINCT NULL, 'C?5&+a') THEN vt0.c1 COLLATE RTRIM WHEN ((vt0.c0)>>(vt0.c1)) THEN vt0.c0 ELSE ((vt0.c0)>=(vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))  WHEN ((vt0.c1) BETWEEN (NULL) AND (vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END, ((((x'0090')OR(vt0.c0)))AND(vt0.c1)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)AND(vt0.c1)), (((vt0.c1, vt0.c0, 0.02772997212769035))>((vt0.c0, vt0.c0, 0.4247805447084104)))))) DESC, CASE WHEN CAST(NULL AS NUMERIC) THEN NULL COLLATE BINARY WHEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c1 AS INTEGER) WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((x'')IS NOT(vt0.c0)) WHEN COALESCE(DISTINCT NULL, 'C?5&+a') THEN vt0.c1 COLLATE RTRIM WHEN ((vt0.c0)>>(vt0.c1)) THEN vt0.c0 ELSE ((vt0.c0)>=(vt0.c1)) END);
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))  WHEN ((vt0.c1) BETWEEN (NULL) AND (vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) END) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END, ((((x'0090')OR(vt0.c0)))AND(vt0.c1)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)AND(vt0.c1)), (((vt0.c1, vt0.c0, 0.02772997212769035))>((vt0.c0, vt0.c0, 0.4247805447084104)))))) DESC, CASE WHEN CAST(NULL AS NUMERIC) THEN NULL COLLATE BINARY WHEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c1 AS INTEGER) WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((x'')IS NOT(vt0.c0)) WHEN COALESCE(DISTINCT NULL, 'C?5&+a') THEN vt0.c1 COLLATE RTRIM WHEN ((vt0.c0)>>(vt0.c1)) THEN vt0.c0 ELSE ((vt0.c0)>=(vt0.c1)) END;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(x'aed7' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'aed7' AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(x'aed7' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'aed7' AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(x'aed7' AS BLOB));
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c1 IN ()))OR(x'')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)|(vt0.c0)))))AND(CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c1 IN ()))OR(x'')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)|(vt0.c0)))))AND(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c1 IN ()))OR(x'')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)|(vt0.c0)))))AND(CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c1 IN ()))OR(x'')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)|(vt0.c0)))))AND(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c1 IN ()))OR(x'')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)|(vt0.c0)))))AND(CAST(vt0.c1 AS REAL))));
SELECT * FROM vt1, vt0 WHERE ((~ (vt0.c1)) COLLATE RTRIM COLLATE NOCASE) ORDER BY (((vt1.c1 IN ())) BETWEEN ((vt1.c0 IN ())) AND (((vt0.c1)<(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c1 IN ())) BETWEEN ((vt1.c0 IN ())) AND (((vt0.c1)<(vt1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((~ (vt0.c1)) COLLATE RTRIM COLLATE NOCASE) ORDER BY (((vt1.c1 IN ())) BETWEEN ((vt1.c0 IN ())) AND (((vt0.c1)<(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c1 IN ())) BETWEEN ((vt1.c0 IN ())) AND (((vt0.c1)<(vt1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((~ (vt0.c1)) COLLATE RTRIM COLLATE NOCASE) ORDER BY (((vt1.c1 IN ())) BETWEEN ((vt1.c0 IN ())) AND (((vt0.c1)<(vt1.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY (((vt1.c0 IN ())) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ())) NOTNULL)  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY (((vt1.c0 IN ())) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ())) NOTNULL)  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY (((vt1.c0 IN ())) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON 0.2723995107868721 WHERE ((((LIKELIHOOD(DISTINCT vt0.c1, 0.27880541312888196), (~ (vt0.c1)), (+ (vt0.c1))))>((((vt0.c1) IS FALSE), CASE vt0.c0  WHEN vt1.c0 THEN '_' WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE x'1b0b' END, ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((LIKELIHOOD(DISTINCT vt0.c1, 0.27880541312888196), (~ (vt0.c1)), (+ (vt0.c1))))>((((vt0.c1) IS FALSE), CASE vt0.c0  WHEN vt1.c0 THEN '_' WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE x'1b0b' END, ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON 0.2723995107868721);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON 0.2723995107868721 WHERE ((((LIKELIHOOD(DISTINCT vt0.c1, 0.27880541312888196), (~ (vt0.c1)), (+ (vt0.c1))))>((((vt0.c1) IS FALSE), CASE vt0.c0  WHEN vt1.c0 THEN '_' WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE x'1b0b' END, ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((LIKELIHOOD(DISTINCT vt0.c1, 0.27880541312888196), (~ (vt0.c1)), (+ (vt0.c1))))>((((vt0.c1) IS FALSE), CASE vt0.c0  WHEN vt1.c0 THEN '_' WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE x'1b0b' END, ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON 0.2723995107868721);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON 0.2723995107868721 WHERE ((((LIKELIHOOD(DISTINCT vt0.c1, 0.27880541312888196), (~ (vt0.c1)), (+ (vt0.c1))))>((((vt0.c1) IS FALSE), CASE vt0.c0  WHEN vt1.c0 THEN '_' WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE x'1b0b' END, ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c1))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)==(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY vt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)=(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)==(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY vt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)=(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)==(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY vt1.c1  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c1)<=(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<=(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1)<=(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<=(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1)<=(CAST(vt0.c1 AS TEXT))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE RTRIM COLLATE NOCASE) ORDER BY vt1.c1 ASC, (((vt1.c0 IN ()))IS NOT(((vt1.c0) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC, (((vt1.c0 IN ()))IS NOT(((vt1.c0) IS FALSE))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE RTRIM COLLATE NOCASE) ORDER BY vt1.c1 ASC, (((vt1.c0 IN ()))IS NOT(((vt1.c0) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC, (((vt1.c0 IN ()))IS NOT(((vt1.c0) IS FALSE))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE RTRIM COLLATE NOCASE) ORDER BY vt1.c1 ASC, (((vt1.c0 IN ()))IS NOT(((vt1.c0) IS FALSE))) DESC;
SELECT ALL * FROM vt1 WHERE (((vt1.c1)|(vt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c1)|(vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c1)|(vt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c1)|(vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c1)|(vt1.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((NOT (TRIM(0.851464051191361, '-161091666')))) ORDER BY (- (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (TRIM(0.851464051191361, '-161091666')))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((NOT (TRIM(0.851464051191361, '-161091666')))) ORDER BY (- (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (TRIM(0.851464051191361, '-161091666')))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((NOT (TRIM(0.851464051191361, '-161091666')))) ORDER BY (- (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (0x4baaf6d) ORDER BY (vt1.c0 COLLATE BINARY IN ()) ASC, ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))>=(vt1.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0X4baaf6d) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 COLLATE BINARY IN ()) ASC, ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))>=(vt1.c1 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (0x4baaf6d) ORDER BY (vt1.c0 COLLATE BINARY IN ()) ASC, ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))>=(vt1.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0X4baaf6d) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 COLLATE BINARY IN ()) ASC, ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))>=(vt1.c1 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (0x4baaf6d) ORDER BY (vt1.c0 COLLATE BINARY IN ()) ASC, ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))>=(vt1.c1 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM vt1 WHERE (((((((((NULL)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((NULL)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((NULL)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)) COLLATE NOCASE);
SELECT * FROM vt0 WHERE ('') ORDER BY ((((vt0.c0)GLOB(vt0.c1))) ISNULL) DESC, (('k	9^!z晃x')IS NOT(((vt0.c0) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)GLOB(vt0.c1))) ISNULL) DESC, (('k	9^!z晃x')IS NOT(((vt0.c0) NOT NULL))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ('') ORDER BY ((((vt0.c0)GLOB(vt0.c1))) ISNULL) DESC, (('k	9^!z晃x')IS NOT(((vt0.c0) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)GLOB(vt0.c1))) ISNULL) DESC, (('k	9^!z晃x')IS NOT(((vt0.c0) NOT NULL))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ('') ORDER BY ((((vt0.c0)GLOB(vt0.c1))) ISNULL) DESC, (('k	9^!z晃x')IS NOT(((vt0.c0) NOT NULL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (LIKELY(DISTINCT (NOT (vt1.c1)))) ORDER BY CAST(((1.363742627E9)>(vt1.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (NOT (vt1.c1)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((1.363742627E9)>(vt1.c0)) AS REAL));
SELECT COUNT(*) FROM vt1 WHERE (LIKELY(DISTINCT (NOT (vt1.c1)))) ORDER BY CAST(((1.363742627E9)>(vt1.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (NOT (vt1.c1)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((1.363742627E9)>(vt1.c0)) AS REAL));
SELECT COUNT(*) FROM vt1 WHERE (LIKELY(DISTINCT (NOT (vt1.c1)))) ORDER BY CAST(((1.363742627E9)>(vt1.c0)) AS REAL);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c1) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c1) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c1) ISNULL) COLLATE BINARY);
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1)-(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)-(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1)-(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)-(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1)-(vt1.c0))) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))||((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))||((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))||((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))||((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))||((vt0.c0 IN ()))));
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS INTEGER))IS NOT((((vt1.c0))>=((vt1.c1)))))) ORDER BY (((~ (vt1.c0)))*(((vt1.c1) IS TRUE))), (((~ (vt1.c0)))<(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE 0x59b2e999 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS INTEGER))IS NOT((((vt1.c0))>=((vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0)))*(((vt1.c1) IS TRUE))), (((~ (vt1.c0)))<(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE 0X59b2e999 END)) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS INTEGER))IS NOT((((vt1.c0))>=((vt1.c1)))))) ORDER BY (((~ (vt1.c0)))*(((vt1.c1) IS TRUE))), (((~ (vt1.c0)))<(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE 0x59b2e999 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS INTEGER))IS NOT((((vt1.c0))>=((vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0)))*(((vt1.c1) IS TRUE))), (((~ (vt1.c0)))<(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE 0X59b2e999 END)) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS INTEGER))IS NOT((((vt1.c0))>=((vt1.c1)))))) ORDER BY (((~ (vt1.c0)))*(((vt1.c1) IS TRUE))), (((~ (vt1.c0)))<(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE 0x59b2e999 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (vt1.c0))) ORDER BY TYPEOF(((vt0.c1)==(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TYPEOF(((vt0.c1)=(vt0.c0))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (vt1.c0))) ORDER BY TYPEOF(((vt0.c1)==(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TYPEOF(((vt0.c1)=(vt0.c0))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (vt1.c0))) ORDER BY TYPEOF(((vt0.c1)==(vt0.c0)));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((- (vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((- (vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((- (vt0.c1))) NOTNULL));
SELECT * FROM vt1, vt0 WHERE (((LOWER(vt0.c0))<(((vt1.c0)*(vt0.c0))))) ORDER BY (((((vt0.c0))>((vt1.c0))))GLOB(vt1.c1)) ASC, (~ (((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c0))<(((vt1.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0))>((vt1.c0))))GLOB(vt1.c1)) ASC, (~ (((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c1)))) DESC);
SELECT * FROM vt1, vt0 WHERE (((LOWER(vt0.c0))<(((vt1.c0)*(vt0.c0))))) ORDER BY (((((vt0.c0))>((vt1.c0))))GLOB(vt1.c1)) ASC, (~ (((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c0))<(((vt1.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0))>((vt1.c0))))GLOB(vt1.c1)) ASC, (~ (((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c1)))) DESC);
SELECT * FROM vt1, vt0 WHERE (((LOWER(vt0.c0))<(((vt1.c0)*(vt0.c0))))) ORDER BY (((((vt0.c0))>((vt1.c0))))GLOB(vt1.c1)) ASC, (~ (((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c1)))) DESC;
SELECT ALL * FROM vt0, vt1 WHERE ((((NOT (vt1.c0)))LIKE(((vt1.c1) BETWEEN ('FALSE') AND (144342134)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))LIKE(((vt1.c1) BETWEEN ('FALSE') AND (144342134))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((NOT (vt1.c0)))LIKE(((vt1.c1) BETWEEN ('FALSE') AND (144342134)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))LIKE(((vt1.c1) BETWEEN ('FALSE') AND (144342134))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((NOT (vt1.c0)))LIKE(((vt1.c1) BETWEEN ('FALSE') AND (144342134)))));
SELECT ALL * FROM vt1, vt0 WHERE (json_object(((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)), (((vt0.c1))<=((vt1.c0))), (vt1.c1 IN ()), CAST(vt0.c1 AS TEXT))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((json_object(((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)), (((vt0.c1))<=((vt1.c0))), (vt1.c1 IN ()), CAST(vt0.c1 AS TEXT))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt1, vt0 WHERE (json_object(((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)), (((vt0.c1))<=((vt1.c0))), (vt1.c1 IN ()), CAST(vt0.c1 AS TEXT))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((json_object(((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)), (((vt0.c1))<=((vt1.c0))), (vt1.c1 IN ()), CAST(vt0.c1 AS TEXT))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM) ORDER BY ((vt1.c0)|(((((vt1.c0)AND(NULL)))OR(vt1.c0)))) DESC, ((((vt1.c1) IS TRUE)) BETWEEN (0.47235789576805853) AND (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)|(((((vt1.c0)AND(NULL)))OR(vt1.c0)))) DESC, ((((vt1.c1) IS TRUE)) BETWEEN (0.47235789576805853) AND (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM) ORDER BY ((vt1.c0)|(((((vt1.c0)AND(NULL)))OR(vt1.c0)))) DESC, ((((vt1.c1) IS TRUE)) BETWEEN (0.47235789576805853) AND (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)|(((((vt1.c0)AND(NULL)))OR(vt1.c0)))) DESC, ((((vt1.c1) IS TRUE)) BETWEEN (0.47235789576805853) AND (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM) ORDER BY ((vt1.c0)|(((((vt1.c0)AND(NULL)))OR(vt1.c0)))) DESC, ((((vt1.c1) IS TRUE)) BETWEEN (0.47235789576805853) AND (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (UNLIKELY(vt1.c0 COLLATE NOCASE)) ORDER BY CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE (UNLIKELY(vt1.c0 COLLATE NOCASE)) ORDER BY CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE (UNLIKELY(vt1.c0 COLLATE NOCASE)) ORDER BY CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))<((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))<((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))<((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))<((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))<((+ (vt1.c0)))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) BETWEEN (((vt1.c0) NOT NULL)) AND ((- (vt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) BETWEEN (((vt1.c0) NOT NULL)) AND ((- (vt1.c1)))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) BETWEEN (((vt1.c0) NOT NULL)) AND ((- (vt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) BETWEEN (((vt1.c0) NOT NULL)) AND ((- (vt1.c1)))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) BETWEEN (((vt1.c0) NOT NULL)) AND ((- (vt1.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c1))) BETWEEN (((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(0.8229588678940701))) AND (vt1.c1)));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c1))) BETWEEN (((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(0.8229588678940701))) AND (vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c1))) BETWEEN (((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(0.8229588678940701))) AND (vt1.c1)));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c1))) BETWEEN (((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(0.8229588678940701))) AND (vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c1))) BETWEEN (((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(0.8229588678940701))) AND (vt1.c1)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c1)))OR((vt0.c1 IN ()))))AND(((((((((0Xffffffffde7c184c)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(0.49706244576872893))))) ORDER BY ((vt0.c1 COLLATE BINARY)*(CASE vt0.c1  WHEN vt1.c1 THEN vt1.c1 END)) ASC  NULLS FIRST, CAST('-2068291427' AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c1)))OR((vt0.c1 IN ()))))AND(((((((((0Xffffffffde7c184c)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(0.49706244576872893))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1 COLLATE BINARY)*(CASE vt0.c1  WHEN vt1.c1 THEN vt1.c1 END)) ASC  NULLS FIRST, CAST('-2068291427' AS TEXT));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c1)))OR((vt0.c1 IN ()))))AND(((((((((0Xffffffffde7c184c)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(0.49706244576872893))))) ORDER BY ((vt0.c1 COLLATE BINARY)*(CASE vt0.c1  WHEN vt1.c1 THEN vt1.c1 END)) ASC  NULLS FIRST, CAST('-2068291427' AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c1)))OR((vt0.c1 IN ()))))AND(((((((((0Xffffffffde7c184c)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(0.49706244576872893))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1 COLLATE BINARY)*(CASE vt0.c1  WHEN vt1.c1 THEN vt1.c1 END)) ASC  NULLS FIRST, CAST('-2068291427' AS TEXT));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c1)))OR((vt0.c1 IN ()))))AND(((((((((0Xffffffffde7c184c)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(0.49706244576872893))))) ORDER BY ((vt0.c1 COLLATE BINARY)*(CASE vt0.c1  WHEN vt1.c1 THEN vt1.c1 END)) ASC  NULLS FIRST, CAST('-2068291427' AS TEXT);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (0.2723995107868721)) ELSE (NOT (vt1.c1)) END) ORDER BY ((CAST(vt1.c1 AS NUMERIC)) NOTNULL), ((CAST(vt1.c0 AS TEXT)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (0.2723995107868721)) ELSE (NOT (vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c1 AS NUMERIC)) NOTNULL), ((CAST(vt1.c0 AS TEXT)) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (0.2723995107868721)) ELSE (NOT (vt1.c1)) END) ORDER BY ((CAST(vt1.c1 AS NUMERIC)) NOTNULL), ((CAST(vt1.c0 AS TEXT)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (0.2723995107868721)) ELSE (NOT (vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c1 AS NUMERIC)) NOTNULL), ((CAST(vt1.c0 AS TEXT)) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (0.2723995107868721)) ELSE (NOT (vt1.c1)) END) ORDER BY ((CAST(vt1.c1 AS NUMERIC)) NOTNULL), ((CAST(vt1.c0 AS TEXT)) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((CAST(vt0.c1 AS BLOB))OR(LOWER(DISTINCT vt1.c1))))OR(CAST(vt0.c1 AS REAL)))) ORDER BY (+ (vt1.c0 COLLATE BINARY)) DESC  NULLS FIRST, (- (json_type(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c1 AS BLOB))OR(LOWER(DISTINCT vt1.c1))))OR(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (vt1.c0 COLLATE BINARY)) DESC  NULLS FIRST, (- (json_type(vt1.c1))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((CAST(vt0.c1 AS BLOB))OR(LOWER(DISTINCT vt1.c1))))OR(CAST(vt0.c1 AS REAL)))) ORDER BY (+ (vt1.c0 COLLATE BINARY)) DESC  NULLS FIRST, (- (json_type(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c1 AS BLOB))OR(LOWER(DISTINCT vt1.c1))))OR(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (vt1.c0 COLLATE BINARY)) DESC  NULLS FIRST, (- (json_type(vt1.c1))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((CAST(vt0.c1 AS BLOB))OR(LOWER(DISTINCT vt1.c1))))OR(CAST(vt0.c1 AS REAL)))) ORDER BY (+ (vt1.c0 COLLATE BINARY)) DESC  NULLS FIRST, (- (json_type(vt1.c1)));
SELECT * FROM vt1 INNER JOIN vt0 ON HEX(vt1.c0) WHERE (((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) IS FALSE)) ORDER BY UNLIKELY((vt0.c1 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON HEX(vt1.c0) ORDER BY UNLIKELY((vt0.c1 IN ())) DESC);
SELECT * FROM vt1 INNER JOIN vt0 ON HEX(vt1.c0) WHERE (((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) IS FALSE)) ORDER BY UNLIKELY((vt0.c1 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON HEX(vt1.c0) ORDER BY UNLIKELY((vt0.c1 IN ())) DESC);
SELECT * FROM vt1 INNER JOIN vt0 ON HEX(vt1.c0) WHERE (((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) IS FALSE)) ORDER BY UNLIKELY((vt0.c1 IN ())) DESC;
SELECT * FROM vt1 WHERE (((((1.363742627E9) NOTNULL))<>((vt1.c0 IN ())))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((1.363742627E9) NOTNULL))!=((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt1 WHERE (((((1.363742627E9) NOTNULL))<>((vt1.c0 IN ())))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((1.363742627E9) NOTNULL))!=((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt1 WHERE (((((1.363742627E9) NOTNULL))<>((vt1.c0 IN ())))) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0)OR(((vt1.c1) NOT NULL))))AND(((vt1.c0)<=(vt1.c1)))) WHERE ((~ ((vt0.c0 IN ())))) ORDER BY ((LIKE(vt0.c0, vt0.c1, '꼟'))<((+ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0)OR(((vt1.c1) NOT NULL))))AND(((vt1.c0)<=(vt1.c1)))) ORDER BY ((LIKE(vt0.c0, vt0.c1, '꼟'))<((+ (vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0)OR(((vt1.c1) NOT NULL))))AND(((vt1.c0)<=(vt1.c1)))) WHERE ((~ ((vt0.c0 IN ())))) ORDER BY ((LIKE(vt0.c0, vt0.c1, '꼟'))<((+ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0)OR(((vt1.c1) NOT NULL))))AND(((vt1.c0)<=(vt1.c1)))) ORDER BY ((LIKE(vt0.c0, vt0.c1, '꼟'))<((+ (vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0)OR(((vt1.c1) NOT NULL))))AND(((vt1.c0)<=(vt1.c1)))) WHERE ((~ ((vt0.c0 IN ())))) ORDER BY ((LIKE(vt0.c0, vt0.c1, '꼟'))<((+ (vt1.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE (((vt0.c1 IN ()) IN (((vt0.c0)>>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN ()) IN (((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 IN ()) IN (((vt0.c0)>>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN ()) IN (((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 IN ()) IN (((vt0.c0)>>(vt0.c1)))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((((((CASE vt0.c1  WHEN NULL THEN vt0.c0 END)AND((((vt1.c0))=((vt1.c0))))))AND(CASE 0.7020424161887485  WHEN vt0.c1 THEN vt1.c0 END)))OR(((((x'')OR(vt0.c1)))AND(vt1.c0)))))OR(((vt1.c1)+(vt1.c1)))) WHERE ((+ (LOWER(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LOWER(vt1.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((((CASE vt0.c1  WHEN NULL THEN vt0.c0 END)AND((((vt1.c0))==((vt1.c0))))))AND(CASE 0.7020424161887485  WHEN vt0.c1 THEN vt1.c0 END)))OR(((((x'')OR(vt0.c1)))AND(vt1.c0)))))OR(((vt1.c1)+(vt1.c1)))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((((((CASE vt0.c1  WHEN NULL THEN vt0.c0 END)AND((((vt1.c0))=((vt1.c0))))))AND(CASE 0.7020424161887485  WHEN vt0.c1 THEN vt1.c0 END)))OR(((((x'')OR(vt0.c1)))AND(vt1.c0)))))OR(((vt1.c1)+(vt1.c1)))) WHERE ((+ (LOWER(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LOWER(vt1.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((((CASE vt0.c1  WHEN NULL THEN vt0.c0 END)AND((((vt1.c0))==((vt1.c0))))))AND(CASE 0.7020424161887485  WHEN vt0.c1 THEN vt1.c0 END)))OR(((((x'')OR(vt0.c1)))AND(vt1.c0)))))OR(((vt1.c1)+(vt1.c1)))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((((((CASE vt0.c1  WHEN NULL THEN vt0.c0 END)AND((((vt1.c0))=((vt1.c0))))))AND(CASE 0.7020424161887485  WHEN vt0.c1 THEN vt1.c0 END)))OR(((((x'')OR(vt0.c1)))AND(vt1.c0)))))OR(((vt1.c1)+(vt1.c1)))) WHERE ((+ (LOWER(vt1.c1))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c1)) IN ())) ORDER BY (vt0.c0 IN (CAST(vt0.c1 AS TEXT), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, (- (((NULL)IS NOT(vt0.c0)))), (- (((vt0.c1)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (CAST(vt0.c1 AS TEXT), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, (- (((NULL)IS NOT(vt0.c0)))), (- (((vt0.c1)>=(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c1)) IN ())) ORDER BY (vt0.c0 IN (CAST(vt0.c1 AS TEXT), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, (- (((NULL)IS NOT(vt0.c0)))), (- (((vt0.c1)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (CAST(vt0.c1 AS TEXT), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, (- (((NULL)IS NOT(vt0.c0)))), (- (((vt0.c1)>=(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c1)) IN ())) ORDER BY (vt0.c0 IN (CAST(vt0.c1 AS TEXT), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, (- (((NULL)IS NOT(vt0.c0)))), (- (((vt0.c1)>=(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(LIKELY(DISTINCT vt1.c1))))AND((((vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt1.c0, '-1507474685', vt1.c1)))))) ORDER BY CAST(vt1.c1 AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))AND(LIKELY(DISTINCT vt1.c1))))AND((((vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt1.c0, '-1507474685', vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c1 AS TEXT) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(LIKELY(DISTINCT vt1.c1))))AND((((vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt1.c0, '-1507474685', vt1.c1)))))) ORDER BY CAST(vt1.c1 AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))AND(LIKELY(DISTINCT vt1.c1))))AND((((vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt1.c0, '-1507474685', vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c1 AS TEXT) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(LIKELY(DISTINCT vt1.c1))))AND((((vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt1.c0, '-1507474685', vt1.c1)))))) ORDER BY CAST(vt1.c1 AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((',v')) BETWEEN ((vt0.c0)) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((',v')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((',v')) BETWEEN ((vt0.c0)) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((',v')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((',v')) BETWEEN ((vt0.c0)) AND ((vt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER), vt1.c0 COLLATE BINARY, vt1.c1)) AND ((vt1.c0, vt1.c0, ((vt1.c1)GLOB(vt1.c0)))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER), vt1.c0 COLLATE BINARY, vt1.c1)) AND ((vt1.c0, vt1.c0, ((vt1.c1)GLOB(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER), vt1.c0 COLLATE BINARY, vt1.c1)) AND ((vt1.c0, vt1.c0, ((vt1.c1)GLOB(vt1.c0)))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER), vt1.c0 COLLATE BINARY, vt1.c1)) AND ((vt1.c0, vt1.c0, ((vt1.c1)GLOB(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER), vt1.c0 COLLATE BINARY, vt1.c1)) AND ((vt1.c0, vt1.c0, ((vt1.c1)GLOB(vt1.c0)))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) AND ((vt1.c0)))) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(vt0.c0)))OR(((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(vt0.c0)))OR(((vt0.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) AND ((vt1.c0)))) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(vt0.c0)))OR(((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(vt0.c0)))OR(((vt0.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) AND ((vt1.c0)))) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(vt0.c0)))OR(((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '559555638' THEN vt0.c1 END  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)%(vt0.c1)) END) ORDER BY (HEX(vt0.c1) IN ());
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '559555638' THEN vt0.c1 END  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)%(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (HEX(vt0.c1) IN ()));
SELECT ALL * FROM vt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '559555638' THEN vt0.c1 END  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)%(vt0.c1)) END) ORDER BY (HEX(vt0.c1) IN ());
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '559555638' THEN vt0.c1 END  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)%(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (HEX(vt0.c1) IN ()));
SELECT ALL * FROM vt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '559555638' THEN vt0.c1 END  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)%(vt0.c1)) END) ORDER BY (HEX(vt0.c1) IN ());
SELECT ALL * FROM vt0, vt1 WHERE (ABS(NULL));
SELECT SUM(count) FROM (SELECT ALL ((ABS(NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (ABS(NULL));
SELECT SUM(count) FROM (SELECT ALL ((ABS(NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (ABS(NULL));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) ISNULL)) IS FALSE)) ORDER BY vt0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) ISNULL)) IS FALSE)) ORDER BY vt0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) ISNULL)) IS FALSE)) ORDER BY vt0.c0 COLLATE NOCASE;
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)==(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)==(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)==(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)==(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)==(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'dd9f')IS NOT(((vt0.c1)-(vt0.c0))))) ORDER BY ((((vt0.c0)OR(x'')))OR(NULLIF(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((x'dd9f')IS NOT(((vt0.c1)-(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(x'')))OR(NULLIF(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'dd9f')IS NOT(((vt0.c1)-(vt0.c0))))) ORDER BY ((((vt0.c0)OR(x'')))OR(NULLIF(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((x'dd9f')IS NOT(((vt0.c1)-(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(x'')))OR(NULLIF(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'dd9f')IS NOT(((vt0.c1)-(vt0.c0))))) ORDER BY ((((vt0.c0)OR(x'')))OR(NULLIF(vt0.c0, vt0.c0)));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((UPPER(1.756024791E9) IN ()));
SELECT SUM(count) FROM (SELECT (((UPPER(1.756024791E9) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((UPPER(1.756024791E9) IN ()));
SELECT SUM(count) FROM (SELECT (((UPPER(1.756024791E9) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((UPPER(1.756024791E9) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF(DISTINCT (+ (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (+ (vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF(DISTINCT (+ (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (+ (vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF(DISTINCT (+ (vt1.c1))));
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (0.02822614190560835) AND (NULL)) AS TEXT)) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN 0.039096396882537854 END)) AND (((vt1.c0 IN ())))), 7.72100391E8 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (0.02822614190560835) AND (NULL)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN 0.039096396882537854 END)) AND (((vt1.c0 IN ())))), 7.72100391E8 ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (0.02822614190560835) AND (NULL)) AS TEXT)) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN 0.039096396882537854 END)) AND (((vt1.c0 IN ())))), 7.72100391E8 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (0.02822614190560835) AND (NULL)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN 0.039096396882537854 END)) AND (((vt1.c0 IN ())))), 7.72100391E8 ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (0.02822614190560835) AND (NULL)) AS TEXT)) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN 0.039096396882537854 END)) AND (((vt1.c0 IN ())))), 7.72100391E8 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN x'' THEN vt1.c1 COLLATE BINARY WHEN (((vt0.c1, vt0.c0, x''))=((vt0.c0, vt1.c1, vt0.c0))) THEN vt0.c0 COLLATE NOCASE WHEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1)) THEN 0.6048239790898728 ELSE ((vt1.c1)<<(vt0.c1)) END WHERE (((LIKELY(DISTINCT '-0.0')) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT '-0.0')) IS FALSE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN x'' THEN vt1.c1 COLLATE BINARY WHEN (((vt0.c1, vt0.c0, x''))=((vt0.c0, vt1.c1, vt0.c0))) THEN vt0.c0 COLLATE NOCASE WHEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1)) THEN 0.6048239790898728 ELSE ((vt1.c1)<<(vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN x'' THEN vt1.c1 COLLATE BINARY WHEN (((vt0.c1, vt0.c0, x''))=((vt0.c0, vt1.c1, vt0.c0))) THEN vt0.c0 COLLATE NOCASE WHEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1)) THEN 0.6048239790898728 ELSE ((vt1.c1)<<(vt0.c1)) END WHERE (((LIKELY(DISTINCT '-0.0')) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT '-0.0')) IS FALSE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN x'' THEN vt1.c1 COLLATE BINARY WHEN (((vt0.c1, vt0.c0, x''))=((vt0.c0, vt1.c1, vt0.c0))) THEN vt0.c0 COLLATE NOCASE WHEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1)) THEN 0.6048239790898728 ELSE ((vt1.c1)<<(vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN x'' THEN vt1.c1 COLLATE BINARY WHEN (((vt0.c1, vt0.c0, x''))=((vt0.c0, vt1.c1, vt0.c0))) THEN vt0.c0 COLLATE NOCASE WHEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1)) THEN 0.6048239790898728 ELSE ((vt1.c1)<<(vt0.c1)) END WHERE (((LIKELY(DISTINCT '-0.0')) IS FALSE));
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END COLLATE NOCASE) ORDER BY (- (CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (- (CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END COLLATE NOCASE) ORDER BY (- (CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (- (CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END COLLATE NOCASE) ORDER BY (- (CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0)-(vt0.c1))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(NULL)))AND(vt0.c0))))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0)-(vt0.c1))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(NULL)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0)-(vt0.c1))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(NULL)))AND(vt0.c0))))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0)-(vt0.c1))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(NULL)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0)-(vt0.c1))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(NULL)))AND(vt0.c0))))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOTNULL);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE)) IS TRUE)) ORDER BY 'Yi\rwkx1' ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY 'Yi\rwkx1' ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE)) IS TRUE)) ORDER BY 'Yi\rwkx1' ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY 'Yi\rwkx1' ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE)) IS TRUE)) ORDER BY 'Yi\rwkx1' ASC;
SELECT ALL * FROM vt1 WHERE ('U');
SELECT SUM(count) FROM (SELECT ALL (('U') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('U');
SELECT SUM(count) FROM (SELECT ALL (('U') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('U');
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((CASE WHEN 'a9Xsĭ}<ks' THEN vt0.c0 END, ((vt0.c0)AND(vt1.c1)), CAST(vt1.c1 AS TEXT))) AND (((- (vt0.c1)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt0.c0)+(vt0.c0)))))) ORDER BY INSTR('1410249802', vt1.c0) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((CASE WHEN 'a9Xsĭ}<ks' THEN vt0.c0 END, ((vt0.c0)AND(vt1.c1)), CAST(vt1.c1 AS TEXT))) AND (((- (vt0.c1)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY INSTR('1410249802', vt1.c0) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((CASE WHEN 'a9Xsĭ}<ks' THEN vt0.c0 END, ((vt0.c0)AND(vt1.c1)), CAST(vt1.c1 AS TEXT))) AND (((- (vt0.c1)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt0.c0)+(vt0.c0)))))) ORDER BY INSTR('1410249802', vt1.c0) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((CASE WHEN 'a9Xsĭ}<ks' THEN vt0.c0 END, ((vt0.c0)AND(vt1.c1)), CAST(vt1.c1 AS TEXT))) AND (((- (vt0.c1)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY INSTR('1410249802', vt1.c0) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((CASE WHEN 'a9Xsĭ}<ks' THEN vt0.c0 END, ((vt0.c0)AND(vt1.c1)), CAST(vt1.c1 AS TEXT))) AND (((- (vt0.c1)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt0.c0)+(vt0.c0)))))) ORDER BY INSTR('1410249802', vt1.c0) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c1, vt0.c1, vt1.c0))>=((vt0.c0, vt0.c0, vt0.c1)))) IS TRUE)) ORDER BY ((vt0.c0)%((vt0.c0 IN (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1, vt0.c1, vt1.c0))>=((vt0.c0, vt0.c0, vt0.c1)))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0)%((vt0.c0 IN (vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c1, vt0.c1, vt1.c0))>=((vt0.c0, vt0.c0, vt0.c1)))) IS TRUE)) ORDER BY ((vt0.c0)%((vt0.c0 IN (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1, vt0.c1, vt1.c0))>=((vt0.c0, vt0.c0, vt0.c1)))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0)%((vt0.c0 IN (vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c1, vt0.c1, vt1.c0))>=((vt0.c0, vt0.c0, vt0.c1)))) IS TRUE)) ORDER BY ((vt0.c0)%((vt0.c0 IN (vt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))))<=((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))))) ORDER BY (MAX(vt1.c1, vt1.c0) IN (((vt1.c1)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))))<=((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY (MAX(vt1.c1, vt1.c0) IN (((vt1.c1)<(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))))<=((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))))) ORDER BY (MAX(vt1.c1, vt1.c0) IN (((vt1.c1)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))))<=((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY (MAX(vt1.c1, vt1.c0) IN (((vt1.c1)<(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))))<=((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))))) ORDER BY (MAX(vt1.c1, vt1.c0) IN (((vt1.c1)<(vt1.c0))));
SELECT * FROM vt1, vt0 WHERE (CASE WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1)) BETWEEN ((((0.039096396882537854) BETWEEN (vt1.c0) AND (vt0.c1)))) AND (((((vt0.c1))==((vt1.c0))))))) ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((x'9f32')>>(vt1.c1)) ELSE (vt0.c1 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((((0.039096396882537854) BETWEEN (vt1.c0) AND (vt0.c1)))) AND (((((vt0.c1))==((vt1.c0))))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((x'9f32')>>(vt1.c1)) ELSE (vt0.c1 IN ()) END DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1)) BETWEEN ((((0.039096396882537854) BETWEEN (vt1.c0) AND (vt0.c1)))) AND (((((vt0.c1))==((vt1.c0))))))) ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((x'9f32')>>(vt1.c1)) ELSE (vt0.c1 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((((0.039096396882537854) BETWEEN (vt1.c0) AND (vt0.c1)))) AND (((((vt0.c1))==((vt1.c0))))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((x'9f32')>>(vt1.c1)) ELSE (vt0.c1 IN ()) END DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1)) BETWEEN ((((0.039096396882537854) BETWEEN (vt1.c0) AND (vt0.c1)))) AND (((((vt0.c1))==((vt1.c0))))))) ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((x'9f32')>>(vt1.c1)) ELSE (vt0.c1 IN ()) END DESC;
SELECT * FROM vt0 WHERE (((vt0.c1) NOTNULL)) ORDER BY (((vt0.c0, vt0.c1, vt0.c0))<((vt0.c1, vt0.c1, vt0.c1))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c1, vt0.c0))<((vt0.c1, vt0.c1, vt0.c1))) COLLATE BINARY ASC);
SELECT * FROM vt0 WHERE (((vt0.c1) NOTNULL)) ORDER BY (((vt0.c0, vt0.c1, vt0.c0))<((vt0.c1, vt0.c1, vt0.c1))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c1, vt0.c0))<((vt0.c1, vt0.c1, vt0.c1))) COLLATE BINARY ASC);
SELECT * FROM vt0 WHERE (((vt0.c1) NOTNULL)) ORDER BY (((vt0.c0, vt0.c1, vt0.c0))<((vt0.c1, vt0.c1, vt0.c1))) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((x'') NOTNULL)) AND ((((vt1.c0))<((vt0.c1)))))) ORDER BY ((CAST(vt0.c1 AS INTEGER))>=(((vt0.c1) NOT BETWEEN (NULL) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (((x'') NOTNULL)) AND ((((vt1.c0))<((vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c1 AS INTEGER))>=(((vt0.c1) NOT BETWEEN (NULL) AND (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((x'') NOTNULL)) AND ((((vt1.c0))<((vt0.c1)))))) ORDER BY ((CAST(vt0.c1 AS INTEGER))>=(((vt0.c1) NOT BETWEEN (NULL) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (((x'') NOTNULL)) AND ((((vt1.c0))<((vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c1 AS INTEGER))>=(((vt0.c1) NOT BETWEEN (NULL) AND (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((x'') NOTNULL)) AND ((((vt1.c0))<((vt0.c1)))))) ORDER BY ((CAST(vt0.c1 AS INTEGER))>=(((vt0.c1) NOT BETWEEN (NULL) AND (vt1.c1))));
SELECT * FROM vt0 WHERE (DATETIME(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)%(vt0.c1)), vt0.c0)) ORDER BY ((vt0.c0) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATETIME(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)%(vt0.c1)), vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL)  NULLS LAST);
SELECT * FROM vt0 WHERE (DATETIME(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)%(vt0.c1)), vt0.c0)) ORDER BY ((vt0.c0) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATETIME(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)%(vt0.c1)), vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL)  NULLS LAST);
SELECT * FROM vt0 WHERE (DATETIME(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)%(vt0.c1)), vt0.c0)) ORDER BY ((vt0.c0) ISNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))/(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))/(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))/(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))/(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))/(CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))>=(vt0.c1 COLLATE RTRIM))) ORDER BY CASE ((vt0.c0)IS NOT(vt0.c1))  WHEN '3SSN''[]' THEN ((vt0.c1) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))>=(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)IS NOT(vt0.c1))  WHEN '3SSN''[]' THEN ((vt0.c1) ISNULL) END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))>=(vt0.c1 COLLATE RTRIM))) ORDER BY CASE ((vt0.c0)IS NOT(vt0.c1))  WHEN '3SSN''[]' THEN ((vt0.c1) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))>=(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)IS NOT(vt0.c1))  WHEN '3SSN''[]' THEN ((vt0.c1) ISNULL) END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))>=(vt0.c1 COLLATE RTRIM))) ORDER BY CASE ((vt0.c0)IS NOT(vt0.c1))  WHEN '3SSN''[]' THEN ((vt0.c1) ISNULL) END DESC;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((x'1b06') NOT BETWEEN (((vt0.c0)&(vt1.c0))) AND ((vt0.c1 IN ()))) WHERE (CAST(((vt1.c0) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) IS FALSE) AS REAL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((x'1b06') NOT BETWEEN (((vt0.c0)&(vt1.c0))) AND ((vt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((x'1b06') NOT BETWEEN (((vt0.c0)&(vt1.c0))) AND ((vt0.c1 IN ()))) WHERE (CAST(((vt1.c0) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) IS FALSE) AS REAL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((x'1b06') NOT BETWEEN (((vt0.c0)&(vt1.c0))) AND ((vt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((x'1b06') NOT BETWEEN (((vt0.c0)&(vt1.c0))) AND ((vt0.c1 IN ()))) WHERE (CAST(((vt1.c0) IS FALSE) AS REAL));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0))) COLLATE NOCASE) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY x'');
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0))) COLLATE NOCASE) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY x'');
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0))) COLLATE NOCASE) ORDER BY x'';
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CAST(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT) WHERE (CASE WHEN ((vt1.c1)IS(vt1.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((vt0.c1)>>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c1)IS(vt1.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((vt0.c1)>>(vt0.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CAST(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT) WHERE (CASE WHEN ((vt1.c1)IS(vt1.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((vt0.c1)>>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c1)IS(vt1.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((vt0.c1)>>(vt0.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CAST(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT) WHERE (CASE WHEN ((vt1.c1)IS(vt1.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((vt0.c1)>>(vt0.c0)) END);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE RTRIM) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((CAST(vt0.c0 AS TEXT)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((CAST(vt0.c0 AS TEXT)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE RTRIM) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((CAST(vt0.c0 AS TEXT)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((CAST(vt0.c0 AS TEXT)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE RTRIM) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((CAST(vt0.c0 AS TEXT)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c0) BETWEEN (vt0.c1) AND (x''))  WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) END) ORDER BY vt1.c1 COLLATE BINARY DESC  NULLS LAST, CASE WHEN ((vt0.c0)<>(vt0.c0)) THEN ((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (vt0.c1) AND (x''))  WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c1 COLLATE BINARY DESC  NULLS LAST, CASE WHEN ((vt0.c0)<>(vt0.c0)) THEN ((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)) END DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c0) BETWEEN (vt0.c1) AND (x''))  WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) END) ORDER BY vt1.c1 COLLATE BINARY DESC  NULLS LAST, CASE WHEN ((vt0.c0)<>(vt0.c0)) THEN ((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (vt0.c1) AND (x''))  WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c1 COLLATE BINARY DESC  NULLS LAST, CASE WHEN ((vt0.c0)<>(vt0.c0)) THEN ((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)) END DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c0) BETWEEN (vt0.c1) AND (x''))  WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) END) ORDER BY vt1.c1 COLLATE BINARY DESC  NULLS LAST, CASE WHEN ((vt0.c0)<>(vt0.c0)) THEN ((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)) END DESC;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()));
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))<(1183147587)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<(1183147587))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))<(1183147587)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<(1183147587))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))<(1183147587)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE 0.9791741359408669  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)+(((vt0.c0)<=(vt0.c1))))) ORDER BY (((vt0.c0, vt1.c1, vt0.c1)) BETWEEN (((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt0.c1, vt0.c1, '5sU*r'))), ((vt0.c0) IS TRUE), ((((vt1.c1)AND(vt1.c1)))AND('-1831924520')))) AND ((vt1.c0, ((vt1.c1) IS TRUE), 0X7899ac53))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.9791741359408669  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)+(((vt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0, vt1.c1, vt0.c1)) BETWEEN (((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt0.c1, vt0.c1, '5sU*r'))), ((vt0.c0) IS TRUE), ((((vt1.c1)AND(vt1.c1)))AND('-1831924520')))) AND ((vt1.c0, ((vt1.c1) IS TRUE), 0x7899ac53))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE 0.9791741359408669  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)+(((vt0.c0)<=(vt0.c1))))) ORDER BY (((vt0.c0, vt1.c1, vt0.c1)) BETWEEN (((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt0.c1, vt0.c1, '5sU*r'))), ((vt0.c0) IS TRUE), ((((vt1.c1)AND(vt1.c1)))AND('-1831924520')))) AND ((vt1.c0, ((vt1.c1) IS TRUE), 0X7899ac53))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.9791741359408669  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)+(((vt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0, vt1.c1, vt0.c1)) BETWEEN (((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt0.c1, vt0.c1, '5sU*r'))), ((vt0.c0) IS TRUE), ((((vt1.c1)AND(vt1.c1)))AND('-1831924520')))) AND ((vt1.c0, ((vt1.c1) IS TRUE), 0x7899ac53))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE 0.9791741359408669  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)+(((vt0.c0)<=(vt0.c1))))) ORDER BY (((vt0.c0, vt1.c1, vt0.c1)) BETWEEN (((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt0.c1, vt0.c1, '5sU*r'))), ((vt0.c0) IS TRUE), ((((vt1.c1)AND(vt1.c1)))AND('-1831924520')))) AND ((vt1.c0, ((vt1.c1) IS TRUE), 0X7899ac53))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT ALL * FROM vt0, vt1 WHERE (((TRIM(vt0.c0)) BETWEEN ((~ (vt1.c0))) AND ((vt0.c0 IN ())))) ORDER BY (vt1.c1 COLLATE NOCASE IN (vt1.c1 COLLATE NOCASE, CASE vt0.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0)) BETWEEN ((~ (vt1.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt1.c1 COLLATE NOCASE IN (vt1.c1 COLLATE NOCASE, CASE vt0.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((TRIM(vt0.c0)) BETWEEN ((~ (vt1.c0))) AND ((vt0.c0 IN ())))) ORDER BY (vt1.c1 COLLATE NOCASE IN (vt1.c1 COLLATE NOCASE, CASE vt0.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0)) BETWEEN ((~ (vt1.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt1.c1 COLLATE NOCASE IN (vt1.c1 COLLATE NOCASE, CASE vt0.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((TRIM(vt0.c0)) BETWEEN ((~ (vt1.c0))) AND ((vt0.c0 IN ())))) ORDER BY (vt1.c1 COLLATE NOCASE IN (vt1.c1 COLLATE NOCASE, CASE vt0.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))==('-879461678'))) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))=('-879461678'))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))==('-879461678'))) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))=('-879461678'))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))==('-879461678'))) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (LIKELIHOOD(DISTINCT (NOT (vt0.c1)), 0.06749300162944694));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (NOT (vt0.c1)), 0.06749300162944694)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (LIKELIHOOD(DISTINCT (NOT (vt0.c1)), 0.06749300162944694));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (NOT (vt0.c1)), 0.06749300162944694)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (LIKELIHOOD(DISTINCT (NOT (vt0.c1)), 0.06749300162944694));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((TRIM(DISTINCT vt1.c1)) BETWEEN (SQLITE_VERSION()) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c1)) BETWEEN (SQLITE_VERSION()) AND (x''))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((TRIM(DISTINCT vt1.c1)) BETWEEN (SQLITE_VERSION()) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c1)) BETWEEN (SQLITE_VERSION()) AND (x''))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((TRIM(DISTINCT vt1.c1)) BETWEEN (SQLITE_VERSION()) AND (x'')));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1 IN (vt0.c0))))<>((((vt0.c1)LIKE('981578382')))))) ORDER BY ((((vt1.c1) ISNULL)) BETWEEN (((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS FIRST, vt1.c1  NULLS LAST, (vt0.c0 IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1 IN (vt0.c0))))<>((((vt0.c1)LIKE('981578382')))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1) ISNULL)) BETWEEN (((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS FIRST, vt1.c1  NULLS LAST, (vt0.c0 IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1 IN (vt0.c0))))<>((((vt0.c1)LIKE('981578382')))))) ORDER BY ((((vt1.c1) ISNULL)) BETWEEN (((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS FIRST, vt1.c1  NULLS LAST, (vt0.c0 IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1 IN (vt0.c0))))<>((((vt0.c1)LIKE('981578382')))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1) ISNULL)) BETWEEN (((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS FIRST, vt1.c1  NULLS LAST, (vt0.c0 IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1 IN (vt0.c0))))<>((((vt0.c1)LIKE('981578382')))))) ORDER BY ((((vt1.c1) ISNULL)) BETWEEN (((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS FIRST, vt1.c1  NULLS LAST, (vt0.c0 IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0))));
SELECT * FROM vt0, vt1 WHERE (((((((vt1.c0)IS(vt0.c0)))AND((vt1.c1 IN ()))))AND((vt0.c1 IN ())))) ORDER BY ((((vt0.c1)<=(vt0.c0)))-(((vt0.c1)+(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)IS(vt0.c0)))AND((vt1.c1 IN ()))))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1)<=(vt0.c0)))-(((vt0.c1)+(vt1.c1)))));
SELECT * FROM vt0, vt1 WHERE (((((((vt1.c0)IS(vt0.c0)))AND((vt1.c1 IN ()))))AND((vt0.c1 IN ())))) ORDER BY ((((vt0.c1)<=(vt0.c0)))-(((vt0.c1)+(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)IS(vt0.c0)))AND((vt1.c1 IN ()))))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1)<=(vt0.c0)))-(((vt0.c1)+(vt1.c1)))));
SELECT * FROM vt0, vt1 WHERE (((((((vt1.c0)IS(vt0.c0)))AND((vt1.c1 IN ()))))AND((vt0.c1 IN ())))) ORDER BY ((((vt0.c1)<=(vt0.c0)))-(((vt0.c1)+(vt1.c1))));
SELECT ALL * FROM vt1 WHERE (((((json_valid(vt1.c1))OR(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((json_valid(vt1.c1))OR(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((json_valid(vt1.c1))OR(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((json_valid(vt1.c1))OR(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((json_valid(vt1.c1))OR(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END) BETWEEN (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END) BETWEEN (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END) BETWEEN (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END) BETWEEN (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END) BETWEEN (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)));
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL))) AND (((vt1.c1 IN (vt1.c1)))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL))) AND (((vt1.c1 IN (vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL ASC);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL))) AND (((vt1.c1 IN (vt1.c1)))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL))) AND (((vt1.c1 IN (vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL ASC);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL))) AND (((vt1.c1 IN (vt1.c1)))))) ORDER BY NULL ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS TRUE))LIKE(vt1.c1))) ORDER BY ((((vt0.c1) ISNULL))IS(UNICODE(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))LIKE(vt1.c1))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1) ISNULL))IS(UNICODE(vt1.c0))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS TRUE))LIKE(vt1.c1))) ORDER BY ((((vt0.c1) ISNULL))IS(UNICODE(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))LIKE(vt1.c1))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1) ISNULL))IS(UNICODE(vt1.c0))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS TRUE))LIKE(vt1.c1))) ORDER BY ((((vt0.c1) ISNULL))IS(UNICODE(vt1.c0)));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((json_patch(vt1.c0, '')) NOT BETWEEN (27667800) AND (((vt1.c0)IS(vt1.c0)))) WHERE (vt0.c1) ORDER BY x'' COLLATE BINARY ASC, vt1.c0, ((((((((((((CASE WHEN vt0.c1 THEN vt1.c1 ELSE vt1.c0 END)OR(LIKELY(vt0.c1))))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c1)))))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0)!=(vt1.c0)))))OR(((vt1.c1)&(vt0.c0)))))OR(vt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((json_patch(vt1.c0, '')) NOT BETWEEN (27667800) AND (((vt1.c0)IS(vt1.c0)))) ORDER BY x'' COLLATE BINARY ASC, vt1.c0, ((((((((((((CASE WHEN vt0.c1 THEN vt1.c1 ELSE vt1.c0 END)OR(LIKELY(vt0.c1))))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c1)))))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0)<>(vt1.c0)))))OR(((vt1.c1)&(vt0.c0)))))OR(vt1.c1))  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((json_patch(vt1.c0, '')) NOT BETWEEN (27667800) AND (((vt1.c0)IS(vt1.c0)))) WHERE (vt0.c1) ORDER BY x'' COLLATE BINARY ASC, vt1.c0, ((((((((((((CASE WHEN vt0.c1 THEN vt1.c1 ELSE vt1.c0 END)OR(LIKELY(vt0.c1))))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c1)))))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0)!=(vt1.c0)))))OR(((vt1.c1)&(vt0.c0)))))OR(vt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((json_patch(vt1.c0, '')) NOT BETWEEN (27667800) AND (((vt1.c0)IS(vt1.c0)))) ORDER BY x'' COLLATE BINARY ASC, vt1.c0, ((((((((((((CASE WHEN vt0.c1 THEN vt1.c1 ELSE vt1.c0 END)OR(LIKELY(vt0.c1))))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c1)))))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0)<>(vt1.c0)))))OR(((vt1.c1)&(vt0.c0)))))OR(vt1.c1))  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((json_patch(vt1.c0, '')) NOT BETWEEN (27667800) AND (((vt1.c0)IS(vt1.c0)))) WHERE (vt0.c1) ORDER BY x'' COLLATE BINARY ASC, vt1.c0, ((((((((((((CASE WHEN vt0.c1 THEN vt1.c1 ELSE vt1.c0 END)OR(LIKELY(vt0.c1))))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c1)))))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0)!=(vt1.c0)))))OR(((vt1.c1)&(vt0.c0)))))OR(vt1.c1))  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY ((vt0.c1) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY ((vt0.c1) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY ((vt0.c1) NOT NULL) DESC  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CAST(vt1.c1 COLLATE RTRIM AS REAL) WHERE (vt0.c1) ORDER BY ((((CASE vt0.c1  WHEN 0.31711981160614466 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c1 END)OR(((((((((vt1.c0)OR(vt1.c1)))OR(vt0.c0)))OR(NULL)))OR(vt1.c0)))))AND((('-0.0')+(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(vt1.c1 COLLATE RTRIM AS REAL) ORDER BY ((((CASE vt0.c1  WHEN 0.31711981160614466 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c1 END)OR(((((((((vt1.c0)OR(vt1.c1)))OR(vt0.c0)))OR(NULL)))OR(vt1.c0)))))AND((('-0.0')+(vt1.c0)))) ASC);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CAST(vt1.c1 COLLATE RTRIM AS REAL) WHERE (vt0.c1) ORDER BY ((((CASE vt0.c1  WHEN 0.31711981160614466 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c1 END)OR(((((((((vt1.c0)OR(vt1.c1)))OR(vt0.c0)))OR(NULL)))OR(vt1.c0)))))AND((('-0.0')+(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(vt1.c1 COLLATE RTRIM AS REAL) ORDER BY ((((CASE vt0.c1  WHEN 0.31711981160614466 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c1 END)OR(((((((((vt1.c0)OR(vt1.c1)))OR(vt0.c0)))OR(NULL)))OR(vt1.c0)))))AND((('-0.0')+(vt1.c0)))) ASC);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CAST(vt1.c1 COLLATE RTRIM AS REAL) WHERE (vt0.c1) ORDER BY ((((CASE vt0.c1  WHEN 0.31711981160614466 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c1 END)OR(((((((((vt1.c0)OR(vt1.c1)))OR(vt0.c0)))OR(NULL)))OR(vt1.c0)))))AND((('-0.0')+(vt1.c0)))) ASC;
SELECT * FROM vt0, vt1 WHERE ('-1826394029') ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (('-1826394029') IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 DESC);
SELECT * FROM vt0, vt1 WHERE ('-1826394029') ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (('-1826394029') IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 DESC);
SELECT * FROM vt0, vt1 WHERE ('-1826394029') ORDER BY vt0.c0 DESC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c1))>((vt0.c0))) WHEN vt0.c1 COLLATE RTRIM THEN (((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) WHEN MAX(vt0.c1, vt0.c1, vt0.c1, vt0.c0) THEN (vt0.c0 IN (vt0.c1)) END) ORDER BY ABS((NOT (vt0.c1))) DESC, CAST((NOT ('660861967')) AS NUMERIC), ((vt0.c1 COLLATE RTRIM)||(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c1))>((vt0.c0))) WHEN vt0.c1 COLLATE RTRIM THEN (((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) WHEN MAX(vt0.c1, vt0.c1, vt0.c1, vt0.c0) THEN (vt0.c0 IN (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ABS((NOT (vt0.c1))) DESC, CAST((NOT ('660861967')) AS NUMERIC), ((vt0.c1 COLLATE RTRIM)||(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c1))>((vt0.c0))) WHEN vt0.c1 COLLATE RTRIM THEN (((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) WHEN MAX(vt0.c1, vt0.c1, vt0.c1, vt0.c0) THEN (vt0.c0 IN (vt0.c1)) END) ORDER BY ABS((NOT (vt0.c1))) DESC, CAST((NOT ('660861967')) AS NUMERIC), ((vt0.c1 COLLATE RTRIM)||(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c1))>((vt0.c0))) WHEN vt0.c1 COLLATE RTRIM THEN (((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) WHEN MAX(vt0.c1, vt0.c1, vt0.c1, vt0.c0) THEN (vt0.c0 IN (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ABS((NOT (vt0.c1))) DESC, CAST((NOT ('660861967')) AS NUMERIC), ((vt0.c1 COLLATE RTRIM)||(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c1))>((vt0.c0))) WHEN vt0.c1 COLLATE RTRIM THEN (((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) WHEN MAX(vt0.c1, vt0.c1, vt0.c1, vt0.c0) THEN (vt0.c0 IN (vt0.c1)) END) ORDER BY ABS((NOT (vt0.c1))) DESC, CAST((NOT ('660861967')) AS NUMERIC), ((vt0.c1 COLLATE RTRIM)||(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))) ASC;
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END)%((-1553206332 IN ())))) ORDER BY TRIM(vt0.c1);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 END)%((-1553206332 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TRIM(vt0.c1));
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END)%((-1553206332 IN ())))) ORDER BY TRIM(vt0.c1);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 END)%((-1553206332 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TRIM(vt0.c1));
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END)%((-1553206332 IN ())))) ORDER BY TRIM(vt0.c1);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY ((((vt1.c1)+(vt1.c0))) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) AND (json_array_length(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)+(vt1.c0))) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) AND (json_array_length(vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY ((((vt1.c1)+(vt1.c0))) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) AND (json_array_length(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)+(vt1.c0))) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) AND (json_array_length(vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY ((((vt1.c1)+(vt1.c0))) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) AND (json_array_length(vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 WHERE (0Xffffffffde7c184c) ORDER BY vt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0Xffffffffde7c184c) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (0Xffffffffde7c184c) ORDER BY vt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0Xffffffffde7c184c) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (0Xffffffffde7c184c) ORDER BY vt1.c1  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (TRIM(((x'') BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((CASE WHEN vt1.c0 THEN 'a8' END)>>(vt1.c0)), 0.8480489379537434 COLLATE NOCASE, (((((((((vt1.c1 IN (vt1.c0)))AND((~ (vt1.c0)))))AND(((vt1.c1)==(vt1.c0)))))AND(((vt1.c1)+(vt1.c1)))))OR(((0.9305249856431955)IS(vt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(((x'') BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN 'a8' END)>>(vt1.c0)), 0.8480489379537434 COLLATE NOCASE, (((((((((vt1.c1 IN (vt1.c0)))AND((~ (vt1.c0)))))AND(((vt1.c1)==(vt1.c0)))))AND(((vt1.c1)+(vt1.c1)))))OR(((0.9305249856431955)IS(vt1.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(((x'') BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((CASE WHEN vt1.c0 THEN 'a8' END)>>(vt1.c0)), 0.8480489379537434 COLLATE NOCASE, (((((((((vt1.c1 IN (vt1.c0)))AND((~ (vt1.c0)))))AND(((vt1.c1)==(vt1.c0)))))AND(((vt1.c1)+(vt1.c1)))))OR(((0.9305249856431955)IS(vt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(((x'') BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN 'a8' END)>>(vt1.c0)), 0.8480489379537434 COLLATE NOCASE, (((((((((vt1.c1 IN (vt1.c0)))AND((~ (vt1.c0)))))AND(((vt1.c1)==(vt1.c0)))))AND(((vt1.c1)+(vt1.c1)))))OR(((0.9305249856431955)IS(vt1.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(((x'') BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((CASE WHEN vt1.c0 THEN 'a8' END)>>(vt1.c0)), 0.8480489379537434 COLLATE NOCASE, (((((((((vt1.c1 IN (vt1.c0)))AND((~ (vt1.c0)))))AND(((vt1.c1)==(vt1.c0)))))AND(((vt1.c1)+(vt1.c1)))))OR(((0.9305249856431955)IS(vt1.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)&(vt0.c1)))&(vt1.c0 COLLATE NOCASE))) ORDER BY ((((vt0.c0)>=(vt1.c1))) IS FALSE)  NULLS FIRST, (((vt0.c1, vt1.c1, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, (((vt1.c0, vt1.c0, vt1.c0, vt1.c1, vt0.c1)) BETWEEN ((vt1.c0, vt0.c1, vt0.c1, vt1.c0, vt1.c0)) AND ((vt1.c1, vt0.c0, vt0.c0, vt1.c1, vt0.c0))), '.Pe')) AND ((LOWER(vt1.c1), ((0x9f16878)>(vt1.c0)), NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c1)))&(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)>=(vt1.c1))) IS FALSE)  NULLS FIRST, (((vt0.c1, vt1.c1, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, (((vt1.c0, vt1.c0, vt1.c0, vt1.c1, vt0.c1)) BETWEEN ((vt1.c0, vt0.c1, vt0.c1, vt1.c0, vt1.c0)) AND ((vt1.c1, vt0.c0, vt0.c0, vt1.c1, vt0.c0))), '.Pe')) AND ((LOWER(vt1.c1), ((0X9f16878)>(vt1.c0)), NULL))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)&(vt0.c1)))&(vt1.c0 COLLATE NOCASE))) ORDER BY ((((vt0.c0)>=(vt1.c1))) IS FALSE)  NULLS FIRST, (((vt0.c1, vt1.c1, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, (((vt1.c0, vt1.c0, vt1.c0, vt1.c1, vt0.c1)) BETWEEN ((vt1.c0, vt0.c1, vt0.c1, vt1.c0, vt1.c0)) AND ((vt1.c1, vt0.c0, vt0.c0, vt1.c1, vt0.c0))), '.Pe')) AND ((LOWER(vt1.c1), ((0x9f16878)>(vt1.c0)), NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c1)))&(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)>=(vt1.c1))) IS FALSE)  NULLS FIRST, (((vt0.c1, vt1.c1, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, (((vt1.c0, vt1.c0, vt1.c0, vt1.c1, vt0.c1)) BETWEEN ((vt1.c0, vt0.c1, vt0.c1, vt1.c0, vt1.c0)) AND ((vt1.c1, vt0.c0, vt0.c0, vt1.c1, vt0.c0))), '.Pe')) AND ((LOWER(vt1.c1), ((0X9f16878)>(vt1.c0)), NULL))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)&(vt0.c1)))&(vt1.c0 COLLATE NOCASE))) ORDER BY ((((vt0.c0)>=(vt1.c1))) IS FALSE)  NULLS FIRST, (((vt0.c1, vt1.c1, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, (((vt1.c0, vt1.c0, vt1.c0, vt1.c1, vt0.c1)) BETWEEN ((vt1.c0, vt0.c1, vt0.c1, vt1.c0, vt1.c0)) AND ((vt1.c1, vt0.c0, vt0.c0, vt1.c1, vt0.c0))), '.Pe')) AND ((LOWER(vt1.c1), ((0x9f16878)>(vt1.c0)), NULL))) DESC;
SELECT * FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM)AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c1))))) ORDER BY vt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE RTRIM)AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM)AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c1))))) ORDER BY vt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE RTRIM)AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM)AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c1))))) ORDER BY vt1.c1 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT * FROM vt0 WHERE (((vt0.c0)<>(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)!=(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)<>(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)!=(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)<>(vt0.c0)) COLLATE BINARY);
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY CASE ((vt1.c0)-(vt0.c1))  WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE ((vt1.c0)-(vt0.c1))  WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END END ASC);
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY CASE ((vt1.c0)-(vt0.c1))  WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE ((vt1.c0)-(vt0.c1))  WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END END ASC);
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY CASE ((vt1.c0)-(vt0.c1))  WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END END ASC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (+ (vt0.c0)) WHERE ((((NULL)IS(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((NULL)IS(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (+ (vt0.c0)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (+ (vt0.c0)) WHERE ((((NULL)IS(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((NULL)IS(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (+ (vt0.c0)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (+ (vt0.c0)) WHERE ((((NULL)IS(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))*(vt1.c1 COLLATE NOCASE))) ORDER BY (+ (((((((((vt1.c0)OR(vt1.c1)))OR(x'')))OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))*(vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (+ (((((((((vt1.c0)OR(vt1.c1)))OR(x'')))OR(vt1.c0)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))*(vt1.c1 COLLATE NOCASE))) ORDER BY (+ (((((((((vt1.c0)OR(vt1.c1)))OR(x'')))OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))*(vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (+ (((((((((vt1.c0)OR(vt1.c1)))OR(x'')))OR(vt1.c0)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))*(vt1.c1 COLLATE NOCASE))) ORDER BY (+ (((((((((vt1.c0)OR(vt1.c1)))OR(x'')))OR(vt1.c0)))AND(vt1.c0))));
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)+(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)+(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)+(vt1.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0 IN ()), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)), './,9', (vt0.c0 IN (vt0.c0)), (vt0.c0 IN ())))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), ((vt0.c0)|(vt0.c1)), ((vt0.c0)IS(vt0.c0)))))  NULLS FIRST, vt0.c1  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ()), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)), './,9', (vt0.c0 IN (vt0.c0)), (vt0.c0 IN ())))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), ((vt0.c0)|(vt0.c1)), ((vt0.c0)IS(vt0.c0)))))  NULLS FIRST, vt0.c1  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0 IN ()), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)), './,9', (vt0.c0 IN (vt0.c0)), (vt0.c0 IN ())))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), ((vt0.c0)|(vt0.c1)), ((vt0.c0)IS(vt0.c0)))))  NULLS FIRST, vt0.c1  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ()), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)), './,9', (vt0.c0 IN (vt0.c0)), (vt0.c0 IN ())))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), ((vt0.c0)|(vt0.c1)), ((vt0.c0)IS(vt0.c0)))))  NULLS FIRST, vt0.c1  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0 IN ()), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)), './,9', (vt0.c0 IN (vt0.c0)), (vt0.c0 IN ())))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), ((vt0.c0)|(vt0.c1)), ((vt0.c0)IS(vt0.c0)))))  NULLS FIRST, vt0.c1  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c1))))) ASC;
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c1)/(vt1.c1)) THEN vt1.c0 WHEN ((vt1.c1) IS TRUE) THEN (~ (vt1.c1)) WHEN ((((vt1.c1)AND(vt1.c0)))AND('-1090790269')) THEN (((vt1.c1))>((0.9795686856021499))) ELSE ((vt1.c1)%(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1)/(vt1.c1)) THEN vt1.c0 WHEN ((vt1.c1) IS TRUE) THEN (~ (vt1.c1)) WHEN ((((vt1.c1)AND(vt1.c0)))AND('-1090790269')) THEN (((vt1.c1))>((0.9795686856021499))) ELSE ((vt1.c1)%(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c1)/(vt1.c1)) THEN vt1.c0 WHEN ((vt1.c1) IS TRUE) THEN (~ (vt1.c1)) WHEN ((((vt1.c1)AND(vt1.c0)))AND('-1090790269')) THEN (((vt1.c1))>((0.9795686856021499))) ELSE ((vt1.c1)%(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1)/(vt1.c1)) THEN vt1.c0 WHEN ((vt1.c1) IS TRUE) THEN (~ (vt1.c1)) WHEN ((((vt1.c1)AND(vt1.c0)))AND('-1090790269')) THEN (((vt1.c1))>((0.9795686856021499))) ELSE ((vt1.c1)%(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c1)/(vt1.c1)) THEN vt1.c0 WHEN ((vt1.c1) IS TRUE) THEN (~ (vt1.c1)) WHEN ((((vt1.c1)AND(vt1.c0)))AND('-1090790269')) THEN (((vt1.c1))>((0.9795686856021499))) ELSE ((vt1.c1)%(vt1.c0)) END);
SELECT * FROM vt0 WHERE ('223978988');
SELECT SUM(count) FROM (SELECT ALL (('223978988') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('223978988');
SELECT SUM(count) FROM (SELECT ALL (('223978988') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('223978988');
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(ABS(DISTINCT vt1.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(DISTINCT vt1.c1) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(ABS(DISTINCT vt1.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(DISTINCT vt1.c1) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(ABS(DISTINCT vt1.c1) AS REAL));
SELECT ALL * FROM vt1, vt0 WHERE (((0.1802759559022865) NOT BETWEEN (((vt0.c0)>(0.9340148818627918))) AND (((vt0.c1)IS NOT(vt0.c1))))) ORDER BY CASE ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))AND(x'')))OR(vt1.c0)))AND(vt0.c1)))OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)) THEN vt0.c0 WHEN ((vt0.c0)<=(vt0.c1)) THEN LOWER(DISTINCT vt0.c0) WHEN (- (vt0.c1)) THEN ((((vt0.c0)AND(vt1.c0)))OR(NULL)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.1802759559022865) NOT BETWEEN (((vt0.c0)>(0.9340148818627918))) AND (((vt0.c1)IS NOT(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))AND(x'')))OR(vt1.c0)))AND(vt0.c1)))OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)) THEN vt0.c0 WHEN ((vt0.c0)<=(vt0.c1)) THEN LOWER(DISTINCT vt0.c0) WHEN (- (vt0.c1)) THEN ((((vt0.c0)AND(vt1.c0)))OR(NULL)) END DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((0.1802759559022865) NOT BETWEEN (((vt0.c0)>(0.9340148818627918))) AND (((vt0.c1)IS NOT(vt0.c1))))) ORDER BY CASE ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))AND(x'')))OR(vt1.c0)))AND(vt0.c1)))OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)) THEN vt0.c0 WHEN ((vt0.c0)<=(vt0.c1)) THEN LOWER(DISTINCT vt0.c0) WHEN (- (vt0.c1)) THEN ((((vt0.c0)AND(vt1.c0)))OR(NULL)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.1802759559022865) NOT BETWEEN (((vt0.c0)>(0.9340148818627918))) AND (((vt0.c1)IS NOT(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))AND(x'')))OR(vt1.c0)))AND(vt0.c1)))OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)) THEN vt0.c0 WHEN ((vt0.c0)<=(vt0.c1)) THEN LOWER(DISTINCT vt0.c0) WHEN (- (vt0.c1)) THEN ((((vt0.c0)AND(vt1.c0)))OR(NULL)) END DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((0.1802759559022865) NOT BETWEEN (((vt0.c0)>(0.9340148818627918))) AND (((vt0.c1)IS NOT(vt0.c1))))) ORDER BY CASE ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))AND(x'')))OR(vt1.c0)))AND(vt0.c1)))OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)) THEN vt0.c0 WHEN ((vt0.c0)<=(vt0.c1)) THEN LOWER(DISTINCT vt0.c0) WHEN (- (vt0.c1)) THEN ((((vt0.c0)AND(vt1.c0)))OR(NULL)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c0) IS TRUE) IN (((vt0.c1)*(vt0.c1)), CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY IFNULL((- (vt0.c1)), vt0.c0 COLLATE NOCASE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS TRUE) IN (((vt0.c1)*(vt0.c1)), CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL((- (vt0.c1)), vt0.c0 COLLATE NOCASE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c0) IS TRUE) IN (((vt0.c1)*(vt0.c1)), CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY IFNULL((- (vt0.c1)), vt0.c0 COLLATE NOCASE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS TRUE) IN (((vt0.c1)*(vt0.c1)), CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL((- (vt0.c1)), vt0.c0 COLLATE NOCASE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c0) IS TRUE) IN (((vt0.c1)*(vt0.c1)), CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY IFNULL((- (vt0.c1)), vt0.c0 COLLATE NOCASE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((vt0.c0 COLLATE RTRIM)OR(((vt1.c1)/(vt0.c1)))))OR(CAST(vt0.c0 AS REAL))))AND(((vt1.c0) ISNULL))))OR(((vt0.c0)<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE RTRIM)OR(((vt1.c1)/(vt0.c1)))))OR(CAST(vt0.c0 AS REAL))))AND(((vt1.c0) ISNULL))))OR(((vt0.c0)<(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((vt0.c0 COLLATE RTRIM)OR(((vt1.c1)/(vt0.c1)))))OR(CAST(vt0.c0 AS REAL))))AND(((vt1.c0) ISNULL))))OR(((vt0.c0)<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE RTRIM)OR(((vt1.c1)/(vt0.c1)))))OR(CAST(vt0.c0 AS REAL))))AND(((vt1.c0) ISNULL))))OR(((vt0.c0)<(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((vt0.c0 COLLATE RTRIM)OR(((vt1.c1)/(vt0.c1)))))OR(CAST(vt0.c0 AS REAL))))AND(((vt1.c0) ISNULL))))OR(((vt0.c0)<(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) BETWEEN ((-770423760)) AND ((((((((((vt0.c0)AND('-1684723770')))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))))), ((((vt0.c0) NOTNULL)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((-770423760)) AND ((((((((((vt0.c0)AND('-1684723770')))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))))), ((((vt0.c0) NOTNULL)) NOT NULL) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) BETWEEN ((-770423760)) AND ((((((((((vt0.c0)AND('-1684723770')))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))))), ((((vt0.c0) NOTNULL)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((-770423760)) AND ((((((((((vt0.c0)AND('-1684723770')))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))))), ((((vt0.c0) NOTNULL)) NOT NULL) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) BETWEEN ((-770423760)) AND ((((((((((vt0.c0)AND('-1684723770')))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))))), ((((vt0.c0) NOTNULL)) NOT NULL) ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0 COLLATE NOCASE) ORDER BY (((((vt1.c0))>((vt0.c0))))AND((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0))>((vt0.c0))))AND((vt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0 COLLATE NOCASE) ORDER BY (((((vt1.c0))>((vt0.c0))))AND((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0))>((vt0.c0))))AND((vt0.c0 IN ())))  NULLS LAST);
SELECT * FROM vt1 WHERE (0.05827983168840778) ORDER BY (+ (((((NULL)AND('-780014414')))AND(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((0.05827983168840778) IS TRUE)  as count FROM vt1 ORDER BY (+ (((((NULL)AND('-780014414')))AND(vt1.c1)))));
SELECT * FROM vt1 WHERE (0.05827983168840778) ORDER BY (+ (((((NULL)AND('-780014414')))AND(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((0.05827983168840778) IS TRUE)  as count FROM vt1 ORDER BY (+ (((((NULL)AND('-780014414')))AND(vt1.c1)))));
SELECT * FROM vt1 WHERE (0.05827983168840778) ORDER BY (+ (((((NULL)AND('-780014414')))AND(vt1.c1))));
SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((- (x'a1d6')))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (x'a1d6'))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((- (x'a1d6')))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (x'a1d6'))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((- (x'a1d6')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))OR(NULL COLLATE RTRIM)))AND(vt0.c1))) ORDER BY (((((NOT (vt0.c1)))OR(((vt0.c0) NOTNULL))))OR(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<(vt0.c0)))OR(NULL COLLATE RTRIM)))AND(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((((NOT (vt0.c1)))OR(((vt0.c0) NOTNULL))))OR(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))OR(NULL COLLATE RTRIM)))AND(vt0.c1))) ORDER BY (((((NOT (vt0.c1)))OR(((vt0.c0) NOTNULL))))OR(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<(vt0.c0)))OR(NULL COLLATE RTRIM)))AND(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((((NOT (vt0.c1)))OR(((vt0.c0) NOTNULL))))OR(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))OR(NULL COLLATE RTRIM)))AND(vt0.c1))) ORDER BY (((((NOT (vt0.c1)))OR(((vt0.c0) NOTNULL))))OR(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR('')))AND(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR('')))AND(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR('')))AND(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR('')))AND(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR('')))AND(vt0.c1))) NOTNULL));
SELECT ALL * FROM vt1 WHERE ((((((((((((((((vt1.c1))>((vt1.c0))))AND(HEX(DISTINCT vt1.c1))))AND(((vt1.c0)%(vt1.c1)))))AND((('981578382') IS TRUE))))OR(NULL)))OR(((vt1.c1) BETWEEN (0.21301001042712164) AND (vt1.c0)))))OR(((vt1.c1) NOT NULL)))) ORDER BY CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) THEN IFNULL(vt1.c1, vt1.c1) ELSE STRFTIME(NULL, vt1.c1, vt1.c0) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((vt1.c1))>((vt1.c0))))AND(HEX(DISTINCT vt1.c1))))AND(((vt1.c0)%(vt1.c1)))))AND((('981578382') IS TRUE))))OR(NULL)))OR(((vt1.c1) BETWEEN (0.21301001042712164) AND (vt1.c0)))))OR(((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) THEN IFNULL(vt1.c1, vt1.c1) ELSE STRFTIME(NULL, vt1.c1, vt1.c0) END ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((((((((((((vt1.c1))>((vt1.c0))))AND(HEX(DISTINCT vt1.c1))))AND(((vt1.c0)%(vt1.c1)))))AND((('981578382') IS TRUE))))OR(NULL)))OR(((vt1.c1) BETWEEN (0.21301001042712164) AND (vt1.c0)))))OR(((vt1.c1) NOT NULL)))) ORDER BY CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) THEN IFNULL(vt1.c1, vt1.c1) ELSE STRFTIME(NULL, vt1.c1, vt1.c0) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((vt1.c1))>((vt1.c0))))AND(HEX(DISTINCT vt1.c1))))AND(((vt1.c0)%(vt1.c1)))))AND((('981578382') IS TRUE))))OR(NULL)))OR(((vt1.c1) BETWEEN (0.21301001042712164) AND (vt1.c0)))))OR(((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) THEN IFNULL(vt1.c1, vt1.c1) ELSE STRFTIME(NULL, vt1.c1, vt1.c0) END ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((((((((((((vt1.c1))>((vt1.c0))))AND(HEX(DISTINCT vt1.c1))))AND(((vt1.c0)%(vt1.c1)))))AND((('981578382') IS TRUE))))OR(NULL)))OR(((vt1.c1) BETWEEN (0.21301001042712164) AND (vt1.c0)))))OR(((vt1.c1) NOT NULL)))) ORDER BY CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) THEN IFNULL(vt1.c1, vt1.c1) ELSE STRFTIME(NULL, vt1.c1, vt1.c0) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) NOTNULL)) ORDER BY json_object(vt0.c0, vt0.c1, vt0.c1, vt0.c1) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY json_object(vt0.c0, vt0.c1, vt0.c1, vt0.c1) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) NOTNULL)) ORDER BY json_object(vt0.c0, vt0.c1, vt0.c1, vt0.c1) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY json_object(vt0.c0, vt0.c1, vt0.c1, vt0.c1) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (TRIM(((vt0.c1) IS TRUE), (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))))) ORDER BY ((NULL) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c1) IS TRUE), (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((NULL) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (TRIM(((vt0.c1) IS TRUE), (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))))) ORDER BY ((NULL) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c1) IS TRUE), (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((NULL) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (TRIM(((vt0.c1) IS TRUE), (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))))) ORDER BY ((NULL) IS TRUE)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)&(vt0.c1)) COLLATE BINARY) ORDER BY (~ (SQLITE_VERSION())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (~ (SQLITE_VERSION())) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)&(vt0.c1)) COLLATE BINARY) ORDER BY (~ (SQLITE_VERSION())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (~ (SQLITE_VERSION())) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)&(vt0.c1)) COLLATE BINARY) ORDER BY (~ (SQLITE_VERSION())) DESC;
SELECT * FROM vt0, vt1 WHERE (((((~ (vt1.c1))))==((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))))) ORDER BY (((-894581533)IS(vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt1.c1))))=((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((-894581533)IS(vt1.c0)) IN ())  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((((~ (vt1.c1))))==((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))))) ORDER BY (((-894581533)IS(vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt1.c1))))=((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((-894581533)IS(vt1.c0)) IN ())  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((((~ (vt1.c1))))==((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))))) ORDER BY (((-894581533)IS(vt1.c0)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT vt1.c0, x'')) ORDER BY (+ (((vt1.c0)&(vt1.c0)))) DESC  NULLS LAST, ((((vt1.c1)<<(vt1.c1))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt1.c0, x'')) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c0)&(vt1.c0)))) DESC  NULLS LAST, ((((vt1.c1)<<(vt1.c1))) IS TRUE) DESC);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT vt1.c0, x'')) ORDER BY (+ (((vt1.c0)&(vt1.c0)))) DESC  NULLS LAST, ((((vt1.c1)<<(vt1.c1))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt1.c0, x'')) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c0)&(vt1.c0)))) DESC  NULLS LAST, ((((vt1.c1)<<(vt1.c1))) IS TRUE) DESC);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT vt1.c0, x'')) ORDER BY (+ (((vt1.c0)&(vt1.c0)))) DESC  NULLS LAST, ((((vt1.c1)<<(vt1.c1))) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((0.05827983168840778)*('1560735802')))));
SELECT SUM(count) FROM (SELECT (((+ (((0.05827983168840778)*('1560735802'))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((0.05827983168840778)*('1560735802')))));
SELECT SUM(count) FROM (SELECT (((+ (((0.05827983168840778)*('1560735802'))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((0.05827983168840778)*('1560735802')))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON ((NULL COLLATE NOCASE)||(GLOB(vt1.c1, vt1.c0))) WHERE ((((vt1.c0)) NOT BETWEEN ((COALESCE('now', vt0.c1, vt0.c0, vt0.c1, vt1.c0, vt0.c1))) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((COALESCE('now', vt0.c1, vt0.c0, vt0.c1, vt1.c0, vt0.c1))) AND ((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((NULL COLLATE NOCASE)||(GLOB(vt1.c1, vt1.c0))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON ((NULL COLLATE NOCASE)||(GLOB(vt1.c1, vt1.c0))) WHERE ((((vt1.c0)) NOT BETWEEN ((COALESCE('now', vt0.c1, vt0.c0, vt0.c1, vt1.c0, vt0.c1))) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((COALESCE('now', vt0.c1, vt0.c0, vt0.c1, vt1.c0, vt0.c1))) AND ((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((NULL COLLATE NOCASE)||(GLOB(vt1.c1, vt1.c0))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON ((NULL COLLATE NOCASE)||(GLOB(vt1.c1, vt1.c0))) WHERE ((((vt1.c0)) NOT BETWEEN ((COALESCE('now', vt0.c1, vt0.c0, vt0.c1, vt1.c0, vt0.c1))) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT * FROM vt0, vt1 WHERE (((CAST(0.6653833672430896 AS TEXT)) BETWEEN ((((vt0.c1, vt1.c0, vt1.c1))>=((NULL, vt1.c1, vt1.c1)))) AND ((('1')GLOB(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(0.6653833672430896 AS TEXT)) BETWEEN ((((vt0.c1, vt1.c0, vt1.c1))>=((NULL, vt1.c1, vt1.c1)))) AND ((('1')GLOB(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((CAST(0.6653833672430896 AS TEXT)) BETWEEN ((((vt0.c1, vt1.c0, vt1.c1))>=((NULL, vt1.c1, vt1.c1)))) AND ((('1')GLOB(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(0.6653833672430896 AS TEXT)) BETWEEN ((((vt0.c1, vt1.c0, vt1.c1))>=((NULL, vt1.c1, vt1.c1)))) AND ((('1')GLOB(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((CAST(0.6653833672430896 AS TEXT)) BETWEEN ((((vt0.c1, vt1.c0, vt1.c1))>=((NULL, vt1.c1, vt1.c1)))) AND ((('1')GLOB(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)%((vt0.c1 IN ())))) ORDER BY vt0.c1, CAST((((vt1.c1, vt0.c1, vt0.c0))<=((vt1.c1, vt0.c0, vt1.c1))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)%((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1, CAST((((vt1.c1, vt0.c1, vt0.c0))<=((vt1.c1, vt0.c0, vt1.c1))) AS BLOB));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)%((vt0.c1 IN ())))) ORDER BY vt0.c1, CAST((((vt1.c1, vt0.c1, vt0.c0))<=((vt1.c1, vt0.c0, vt1.c1))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)%((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1, CAST((((vt1.c1, vt0.c1, vt0.c0))<=((vt1.c1, vt0.c0, vt1.c1))) AS BLOB));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)%((vt0.c1 IN ())))) ORDER BY vt0.c1, CAST((((vt1.c1, vt0.c1, vt0.c0))<=((vt1.c1, vt0.c0, vt1.c1))) AS BLOB);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(LOWER(DISTINCT '-633643775') AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(DISTINCT '-633643775') AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(LOWER(DISTINCT '-633643775') AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(DISTINCT '-633643775') AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(LOWER(DISTINCT '-633643775') AS INTEGER));
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ('-1290339147')))IS NOT(((vt1.c0)<(vt1.c1))))) ORDER BY CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END  WHEN ((vt1.c0)>(vt1.c1)) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN QUOTE(vt1.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ('-1290339147')))IS NOT(((vt1.c0)<(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END  WHEN ((vt1.c0)>(vt1.c1)) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN QUOTE(vt1.c1) END  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ('-1290339147')))IS NOT(((vt1.c0)<(vt1.c1))))) ORDER BY CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END  WHEN ((vt1.c0)>(vt1.c1)) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN QUOTE(vt1.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ('-1290339147')))IS NOT(((vt1.c0)<(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END  WHEN ((vt1.c0)>(vt1.c1)) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN QUOTE(vt1.c1) END  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ('-1290339147')))IS NOT(((vt1.c0)<(vt1.c1))))) ORDER BY CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END  WHEN ((vt1.c0)>(vt1.c1)) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN QUOTE(vt1.c1) END  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((((vt1.c0)AND(vt0.c1)))AND(vt0.c0))  WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN load_extension(vt0.c1) END) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c0)AND(vt0.c1)))AND(vt0.c0))  WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN load_extension(vt0.c1) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c1 DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((((vt1.c0)AND(vt0.c1)))AND(vt0.c0))  WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN load_extension(vt0.c1) END) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c0)AND(vt0.c1)))AND(vt0.c0))  WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN load_extension(vt0.c1) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c1 DESC);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)) AS TEXT));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))) NOTNULL) WHERE (((vt0.c0 COLLATE NOCASE)OR(((vt1.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY CASE ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END THEN ((vt0.c0)<(vt0.c1)) ELSE ((((((((vt1.c0)AND(vt0.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)OR(((vt1.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))) NOTNULL) ORDER BY CASE ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END THEN ((vt0.c0)<(vt0.c1)) ELSE ((((((((vt1.c0)AND(vt0.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)) END ASC);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))) NOTNULL) WHERE (((vt0.c0 COLLATE NOCASE)OR(((vt1.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY CASE ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END THEN ((vt0.c0)<(vt0.c1)) ELSE ((((((((vt1.c0)AND(vt0.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)OR(((vt1.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))) NOTNULL) ORDER BY CASE ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END THEN ((vt0.c0)<(vt0.c1)) ELSE ((((((((vt1.c0)AND(vt0.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)) END ASC);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))) NOTNULL) WHERE (((vt0.c0 COLLATE NOCASE)OR(((vt1.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY CASE ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END THEN ((vt0.c0)<(vt0.c1)) ELSE ((((((((vt1.c0)AND(vt0.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)) END ASC;
SELECT * FROM vt1 WHERE (UPPER(DISTINCT CAST(vt1.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CAST(vt1.c1 AS REAL))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (UPPER(DISTINCT CAST(vt1.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CAST(vt1.c1 AS REAL))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (UPPER(DISTINCT CAST(vt1.c1 AS REAL)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN (((vt0.c0)+(vt0.c1)), ((0xfffffffff935c564)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN (((vt0.c0)+(vt0.c1)), ((0xfffffffff935c564)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN (((vt0.c0)+(vt0.c1)), ((0xfffffffff935c564)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN (((vt0.c0)+(vt0.c1)), ((0xfffffffff935c564)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN (((vt0.c0)+(vt0.c1)), ((0xfffffffff935c564)>>(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) BETWEEN (((vt0.c0)=(vt0.c1))) AND ((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0))) BETWEEN (((vt0.c0)=(vt0.c1))) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) BETWEEN (((vt0.c0)=(vt0.c1))) AND ((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0))) BETWEEN (((vt0.c0)=(vt0.c1))) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) BETWEEN (((vt0.c0)=(vt0.c1))) AND ((~ (vt0.c1)))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((((((((vt1.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt1.c1, vt1.c1)) AND ((vt1.c1, vt0.c0, vt1.c1))))AND((+ (vt1.c1)))))AND((NOT (vt0.c1)))))OR(((0.16116771515006978) IS TRUE))))OR(TYPEOF(DISTINCT '262678834'))) WHERE (vt1.c0 COLLATE NOCASE) ORDER BY TRIM(DISTINCT (((vt0.c0, vt0.c0, vt1.c1))!=((vt0.c0, vt1.c1, vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((((((((((vt1.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt1.c1, vt1.c1)) AND ((vt1.c1, vt0.c0, vt1.c1))))AND((+ (vt1.c1)))))AND((NOT (vt0.c1)))))OR(((0.16116771515006978) IS TRUE))))OR(TYPEOF(DISTINCT '262678834'))) ORDER BY TRIM(DISTINCT (((vt0.c0, vt0.c0, vt1.c1))<>((vt0.c0, vt1.c1, vt1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((((((((vt1.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt1.c1, vt1.c1)) AND ((vt1.c1, vt0.c0, vt1.c1))))AND((+ (vt1.c1)))))AND((NOT (vt0.c1)))))OR(((0.16116771515006978) IS TRUE))))OR(TYPEOF(DISTINCT '262678834'))) WHERE (vt1.c0 COLLATE NOCASE) ORDER BY TRIM(DISTINCT (((vt0.c0, vt0.c0, vt1.c1))!=((vt0.c0, vt1.c1, vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((((((((((vt1.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt1.c1, vt1.c1)) AND ((vt1.c1, vt0.c0, vt1.c1))))AND((+ (vt1.c1)))))AND((NOT (vt0.c1)))))OR(((0.16116771515006978) IS TRUE))))OR(TYPEOF(DISTINCT '262678834'))) ORDER BY TRIM(DISTINCT (((vt0.c0, vt0.c0, vt1.c1))<>((vt0.c0, vt1.c1, vt1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((((((((vt1.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt1.c1, vt1.c1)) AND ((vt1.c1, vt0.c0, vt1.c1))))AND((+ (vt1.c1)))))AND((NOT (vt0.c1)))))OR(((0.16116771515006978) IS TRUE))))OR(TYPEOF(DISTINCT '262678834'))) WHERE (vt1.c0 COLLATE NOCASE) ORDER BY TRIM(DISTINCT (((vt0.c0, vt0.c0, vt1.c1))!=((vt0.c0, vt1.c1, vt1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c1)!=(vt0.c0)) COLLATE RTRIM) ORDER BY CASE (+ (vt0.c0))  WHEN (NOT (vt0.c0)) THEN '' WHEN (((vt1.c1, vt0.c0, vt1.c1, vt0.c0, vt0.c1))<=((vt1.c0, '-9223372036854775808', vt1.c0, vt0.c1, vt1.c1))) THEN CAST(vt0.c1 AS BLOB) WHEN (~ (vt0.c1)) THEN ((vt0.c0)*(vt0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END ASC, CASE COALESCE(DISTINCT vt0.c1, vt0.c1, vt1.c1, vt0.c0, vt1.c0, vt1.c0)  WHEN '-760694049' THEN 0.4672553139733401 ELSE '1347217059' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)!=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE (+ (vt0.c0))  WHEN (NOT (vt0.c0)) THEN '' WHEN (((vt1.c1, vt0.c0, vt1.c1, vt0.c0, vt0.c1))<=((vt1.c0, '-9223372036854775808', vt1.c0, vt0.c1, vt1.c1))) THEN CAST(vt0.c1 AS BLOB) WHEN (~ (vt0.c1)) THEN ((vt0.c0)*(vt0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END ASC, CASE COALESCE(DISTINCT vt0.c1, vt0.c1, vt1.c1, vt0.c0, vt1.c0, vt1.c0)  WHEN '-760694049' THEN 0.4672553139733401 ELSE '1347217059' END DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c1)!=(vt0.c0)) COLLATE RTRIM) ORDER BY CASE (+ (vt0.c0))  WHEN (NOT (vt0.c0)) THEN '' WHEN (((vt1.c1, vt0.c0, vt1.c1, vt0.c0, vt0.c1))<=((vt1.c0, '-9223372036854775808', vt1.c0, vt0.c1, vt1.c1))) THEN CAST(vt0.c1 AS BLOB) WHEN (~ (vt0.c1)) THEN ((vt0.c0)*(vt0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END ASC, CASE COALESCE(DISTINCT vt0.c1, vt0.c1, vt1.c1, vt0.c0, vt1.c0, vt1.c0)  WHEN '-760694049' THEN 0.4672553139733401 ELSE '1347217059' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)!=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE (+ (vt0.c0))  WHEN (NOT (vt0.c0)) THEN '' WHEN (((vt1.c1, vt0.c0, vt1.c1, vt0.c0, vt0.c1))<=((vt1.c0, '-9223372036854775808', vt1.c0, vt0.c1, vt1.c1))) THEN CAST(vt0.c1 AS BLOB) WHEN (~ (vt0.c1)) THEN ((vt0.c0)*(vt0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END ASC, CASE COALESCE(DISTINCT vt0.c1, vt0.c1, vt1.c1, vt0.c0, vt1.c0, vt1.c0)  WHEN '-760694049' THEN 0.4672553139733401 ELSE '1347217059' END DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c1)!=(vt0.c0)) COLLATE RTRIM) ORDER BY CASE (+ (vt0.c0))  WHEN (NOT (vt0.c0)) THEN '' WHEN (((vt1.c1, vt0.c0, vt1.c1, vt0.c0, vt0.c1))<=((vt1.c0, '-9223372036854775808', vt1.c0, vt0.c1, vt1.c1))) THEN CAST(vt0.c1 AS BLOB) WHEN (~ (vt0.c1)) THEN ((vt0.c0)*(vt0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END ASC, CASE COALESCE(DISTINCT vt0.c1, vt0.c1, vt1.c1, vt0.c0, vt1.c0, vt1.c0)  WHEN '-760694049' THEN 0.4672553139733401 ELSE '1347217059' END DESC;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN ()))/(0.4220454695105622))) ORDER BY (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))/(0.4220454695105622))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN ()))/(0.4220454695105622))) ORDER BY (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))/(0.4220454695105622))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN ()))/(0.4220454695105622))) ORDER BY (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY (((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c0, NULL)))) BETWEEN (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) AND (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '-1646758196' ELSE 522102356 END));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c0, NULL)))) BETWEEN (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) AND (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '-1646758196' ELSE 522102356 END)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY (((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c0, NULL)))) BETWEEN (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) AND (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '-1646758196' ELSE 522102356 END));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c0, NULL)))) BETWEEN (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) AND (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '-1646758196' ELSE 522102356 END)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY (((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c0, NULL)))) BETWEEN (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) AND (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '-1646758196' ELSE 522102356 END));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELIHOOD(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN x'2ed0' END, 0.4153756840535626)) ORDER BY (((vt1.c1, vt1.c0, -832695234)) BETWEEN ((vt1.c0, vt1.c1, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c0))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN x'2ed0' END, 0.4153756840535626)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1, vt1.c0, -832695234)) BETWEEN ((vt1.c0, vt1.c1, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c0))) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELIHOOD(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN x'2ed0' END, 0.4153756840535626)) ORDER BY (((vt1.c1, vt1.c0, -832695234)) BETWEEN ((vt1.c0, vt1.c1, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c0))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN x'2ed0' END, 0.4153756840535626)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1, vt1.c0, -832695234)) BETWEEN ((vt1.c0, vt1.c1, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c0))) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELIHOOD(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN x'2ed0' END, 0.4153756840535626)) ORDER BY (((vt1.c1, vt1.c0, -832695234)) BETWEEN ((vt1.c0, vt1.c1, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c0))) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((((vt1.c1)||(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)||(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c1)||(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)||(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c1)||(vt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)), CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN '-304029086' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END, (((vt1.c1, vt1.c1, vt1.c1))>((vt1.c0, vt1.c0, vt1.c1)))))<=((((-1.774199831E9) BETWEEN (vt1.c0) AND (vt1.c1)), json_quote(vt1.c0), ((vt1.c0)>(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)), CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN '-304029086' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END, (((vt1.c1, vt1.c1, vt1.c1))>((vt1.c0, vt1.c0, vt1.c1)))))<=((((-1.774199831E9) BETWEEN (vt1.c0) AND (vt1.c1)), json_quote(vt1.c0), ((vt1.c0)>(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)), CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN '-304029086' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END, (((vt1.c1, vt1.c1, vt1.c1))>((vt1.c0, vt1.c0, vt1.c1)))))<=((((-1.774199831E9) BETWEEN (vt1.c0) AND (vt1.c1)), json_quote(vt1.c0), ((vt1.c0)>(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)), CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN '-304029086' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END, (((vt1.c1, vt1.c1, vt1.c1))>((vt1.c0, vt1.c0, vt1.c1)))))<=((((-1.774199831E9) BETWEEN (vt1.c0) AND (vt1.c1)), json_quote(vt1.c0), ((vt1.c0)>(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)), CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN '-304029086' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END, (((vt1.c1, vt1.c1, vt1.c1))>((vt1.c0, vt1.c0, vt1.c1)))))<=((((-1.774199831E9) BETWEEN (vt1.c0) AND (vt1.c1)), json_quote(vt1.c0), ((vt1.c0)>(vt1.c0))))));
SELECT * FROM vt0, vt1 WHERE ((-1789623112 COLLATE RTRIM IN (vt0.c1)));
SELECT SUM(count) FROM (SELECT (((-1789623112 COLLATE RTRIM IN (vt0.c1))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((-1789623112 COLLATE RTRIM IN (vt0.c1)));
SELECT SUM(count) FROM (SELECT (((-1789623112 COLLATE RTRIM IN (vt0.c1))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((-1789623112 COLLATE RTRIM IN (vt0.c1)));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c1)))|(CAST(1.410249802E9 AS REAL)))) ORDER BY CAST((+ (vt1.c0)) AS NUMERIC)  NULLS LAST, (+ ((vt1.c1 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)LIKE(vt1.c1)))|(CAST(1.410249802E9 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY CAST((+ (vt1.c0)) AS NUMERIC)  NULLS LAST, (+ ((vt1.c1 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c1)))|(CAST(1.410249802E9 AS REAL)))) ORDER BY CAST((+ (vt1.c0)) AS NUMERIC)  NULLS LAST, (+ ((vt1.c1 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)LIKE(vt1.c1)))|(CAST(1.410249802E9 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY CAST((+ (vt1.c0)) AS NUMERIC)  NULLS LAST, (+ ((vt1.c1 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c1)))|(CAST(1.410249802E9 AS REAL)))) ORDER BY CAST((+ (vt1.c0)) AS NUMERIC)  NULLS LAST, (+ ((vt1.c1 IN ()))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))||(((((vt0.c0)OR(vt1.c1)))OR(0.9071691260348181)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))||(((((vt0.c0)OR(vt1.c1)))OR(0.9071691260348181))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))||(((((vt0.c0)OR(vt1.c1)))OR(0.9071691260348181)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))||(((((vt0.c0)OR(vt1.c1)))OR(0.9071691260348181))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))||(((((vt0.c0)OR(vt1.c1)))OR(0.9071691260348181)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END COLLATE RTRIM);
SELECT ALL * FROM vt1 WHERE ((('펂D\ns')*(CASE WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((('펂D\ns')*(CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((('펂D\ns')*(CASE WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((('펂D\ns')*(CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((('펂D\ns')*(CASE WHEN vt1.c0 THEN vt1.c0 END)));
SELECT * FROM vt0 WHERE (CAST((- (vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((- (vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((- (vt0.c1)) AS REAL));
SELECT ALL * FROM vt1 WHERE ((- (CASE vt1.c1  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY CAST((+ (vt1.c0)) AS BLOB) DESC, ((((vt1.c0)*(vt1.c0)))|(((vt1.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE vt1.c1  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY CAST((+ (vt1.c0)) AS BLOB) DESC, ((((vt1.c0)*(vt1.c0)))|(((vt1.c1) ISNULL))) DESC);
SELECT ALL * FROM vt1 WHERE ((- (CASE vt1.c1  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY CAST((+ (vt1.c0)) AS BLOB) DESC, ((((vt1.c0)*(vt1.c0)))|(((vt1.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE vt1.c1  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY CAST((+ (vt1.c0)) AS BLOB) DESC, ((((vt1.c0)*(vt1.c0)))|(((vt1.c1) ISNULL))) DESC);
SELECT ALL * FROM vt1 WHERE ((- (CASE vt1.c1  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY CAST((+ (vt1.c0)) AS BLOB) DESC, ((((vt1.c0)*(vt1.c0)))|(((vt1.c1) ISNULL))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c1) ISNULL))) ORDER BY 0.06179397028509381 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((vt0.c1) ISNULL))) IS TRUE)  as count FROM vt0 ORDER BY 0.06179397028509381 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c1) ISNULL))) ORDER BY 0.06179397028509381 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((vt0.c1) ISNULL))) IS TRUE)  as count FROM vt0 ORDER BY 0.06179397028509381 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c1) ISNULL))) ORDER BY 0.06179397028509381 DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((((TYPEOF(vt0.c1))AND(((vt0.c0)&(vt0.c1)))))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND((NOT (vt0.c0)))))OR(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)))OR(((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((TYPEOF(vt0.c1))AND(((vt0.c0)&(vt0.c1)))))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND((NOT (vt0.c0)))))OR(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)))OR(((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((((TYPEOF(vt0.c1))AND(((vt0.c0)&(vt0.c1)))))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND((NOT (vt0.c0)))))OR(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)))OR(((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((TYPEOF(vt0.c1))AND(((vt0.c0)&(vt0.c1)))))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND((NOT (vt0.c0)))))OR(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)))OR(((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((((TYPEOF(vt0.c1))AND(((vt0.c0)&(vt0.c1)))))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND((NOT (vt0.c0)))))OR(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)))OR(((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))))AND((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c1) ORDER BY ((TRIM(DISTINCT vt0.c0)) BETWEEN ((vt1.c1 IN ())) AND (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((TRIM(DISTINCT vt0.c0)) BETWEEN ((vt1.c1 IN ())) AND (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c1) ORDER BY ((TRIM(DISTINCT vt0.c0)) BETWEEN ((vt1.c1 IN ())) AND (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((TRIM(DISTINCT vt0.c0)) BETWEEN ((vt1.c1 IN ())) AND (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c1) ORDER BY ((TRIM(DISTINCT vt0.c0)) BETWEEN ((vt1.c1 IN ())) AND (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((0.6590037354560339) IS TRUE) AS BLOB)) ORDER BY vt0.c0, (((TRIM(vt0.c1, vt0.c1), LOWER(DISTINCT x'a1dc'), ((vt0.c0)+(vt0.c1))))<=((vt0.c1 COLLATE BINARY, (vt0.c0 IN ()), vt0.c1 COLLATE BINARY))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((0.6590037354560339) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, (((TRIM(vt0.c1, vt0.c1), LOWER(DISTINCT x'a1dc'), ((vt0.c0)+(vt0.c1))))<=((vt0.c1 COLLATE BINARY, (vt0.c0 IN ()), vt0.c1 COLLATE BINARY))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((0.6590037354560339) IS TRUE) AS BLOB)) ORDER BY vt0.c0, (((TRIM(vt0.c1, vt0.c1), LOWER(DISTINCT x'a1dc'), ((vt0.c0)+(vt0.c1))))<=((vt0.c1 COLLATE BINARY, (vt0.c0 IN ()), vt0.c1 COLLATE BINARY))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((0.6590037354560339) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, (((TRIM(vt0.c1, vt0.c1), LOWER(DISTINCT x'a1dc'), ((vt0.c0)+(vt0.c1))))<=((vt0.c1 COLLATE BINARY, (vt0.c0 IN ()), vt0.c1 COLLATE BINARY))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((0.6590037354560339) IS TRUE) AS BLOB)) ORDER BY vt0.c0, (((TRIM(vt0.c1, vt0.c1), LOWER(DISTINCT x'a1dc'), ((vt0.c0)+(vt0.c1))))<=((vt0.c1 COLLATE BINARY, (vt0.c0 IN ()), vt0.c1 COLLATE BINARY))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.3208448736166456 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.3208448736166456 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.3208448736166456 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.3208448736166456 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.3208448736166456 END)));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN NULL THEN CAST(vt0.c1 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN NULL THEN CAST(vt0.c1 AS INTEGER) END);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN NULL THEN CAST(vt0.c1 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN NULL THEN CAST(vt0.c1 AS INTEGER) END);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN NULL THEN CAST(vt0.c1 AS INTEGER) END;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)%(vt1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)%(vt1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)%(vt1.c1))) IS FALSE));
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c1) NOTNULL))));
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1)IS NOT(0X711b604)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(x'')))OR(vt0.c1)))OR(((vt0.c0) ISNULL)))) ORDER BY LIKELIHOOD(DISTINCT ((x'') IS FALSE), 0.030898170761066046);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)IS NOT(0X711b604)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(x'')))OR(vt0.c1)))OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT ((x'') IS FALSE), 0.030898170761066046));
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1)IS NOT(0X711b604)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(x'')))OR(vt0.c1)))OR(((vt0.c0) ISNULL)))) ORDER BY LIKELIHOOD(DISTINCT ((x'') IS FALSE), 0.030898170761066046);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)IS NOT(0X711b604)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(x'')))OR(vt0.c1)))OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT ((x'') IS FALSE), 0.030898170761066046));
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1)IS NOT(0X711b604)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(x'')))OR(vt0.c1)))OR(((vt0.c0) ISNULL)))) ORDER BY LIKELIHOOD(DISTINCT ((x'') IS FALSE), 0.030898170761066046);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((CASE WHEN vt1.c1 THEN vt1.c0 END))<>((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt1.c1 THEN vt1.c0 END))<>((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((CASE WHEN vt1.c1 THEN vt1.c0 END))<>((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt1.c1 THEN vt1.c0 END))<>((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((CASE WHEN vt1.c1 THEN vt1.c0 END))<>((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))) IS FALSE));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)||(CASE WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY (((vt1.c1 IN ())) BETWEEN (vt1.c0) AND ((vt1.c1 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)||(CASE WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1 IN ())) BETWEEN (vt1.c0) AND ((vt1.c1 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)||(CASE WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY (((vt1.c1 IN ())) BETWEEN (vt1.c0) AND ((vt1.c1 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)||(CASE WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1 IN ())) BETWEEN (vt1.c0) AND ((vt1.c1 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)||(CASE WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY (((vt1.c1 IN ())) BETWEEN (vt1.c0) AND ((vt1.c1 IN ()))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((vt1.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt1.c1) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt1.c1) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c1) IS FALSE));
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)>(vt0.c1))))) ORDER BY UNLIKELY(DISTINCT 0.6290222212330141 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT 0.6290222212330141 COLLATE RTRIM) ASC);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)>(vt0.c1))))) ORDER BY UNLIKELY(DISTINCT 0.6290222212330141 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT 0.6290222212330141 COLLATE RTRIM) ASC);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)>(vt0.c1))))) ORDER BY UNLIKELY(DISTINCT 0.6290222212330141 COLLATE RTRIM) ASC;
SELECT COUNT(*) FROM vt1 WHERE (((((~ (vt1.c0))))>((((vt1.c1)&(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((~ (vt1.c0))))>((((vt1.c1)&(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((~ (vt1.c0))))>((((vt1.c1)&(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((~ (vt1.c0))))>((((vt1.c1)&(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((~ (vt1.c0))))>((((vt1.c1)&(vt1.c0))))));
SELECT ALL * FROM vt0 WHERE ('-713351338');
SELECT SUM(count) FROM (SELECT (('-713351338') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('-713351338');
SELECT SUM(count) FROM (SELECT (('-713351338') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('-713351338');
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt0.c1 COLLATE BINARY COLLATE BINARY WHERE (((((vt1.c1)>>(vt0.c0)))OR(((vt0.c0) NOTNULL)))) ORDER BY 0.32661111992334446  NULLS LAST, IFNULL((vt1.c0 IN ()), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN 0xffffffffd971247e WHEN vt0.c0 THEN NULL ELSE vt1.c1 END);
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)>>(vt0.c0)))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt0.c1 COLLATE BINARY COLLATE BINARY ORDER BY 0.32661111992334446  NULLS LAST, IFNULL((vt1.c0 IN ()), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN 0Xffffffffd971247e WHEN vt0.c0 THEN NULL ELSE vt1.c1 END));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt0.c1 COLLATE BINARY COLLATE BINARY WHERE (((((vt1.c1)>>(vt0.c0)))OR(((vt0.c0) NOTNULL)))) ORDER BY 0.32661111992334446  NULLS LAST, IFNULL((vt1.c0 IN ()), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN 0xffffffffd971247e WHEN vt0.c0 THEN NULL ELSE vt1.c1 END);
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)>>(vt0.c0)))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt0.c1 COLLATE BINARY COLLATE BINARY ORDER BY 0.32661111992334446  NULLS LAST, IFNULL((vt1.c0 IN ()), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN 0Xffffffffd971247e WHEN vt0.c0 THEN NULL ELSE vt1.c1 END));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt0.c1 COLLATE BINARY COLLATE BINARY WHERE (((((vt1.c1)>>(vt0.c0)))OR(((vt0.c0) NOTNULL)))) ORDER BY 0.32661111992334446  NULLS LAST, IFNULL((vt1.c0 IN ()), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN 0xffffffffd971247e WHEN vt0.c0 THEN NULL ELSE vt1.c1 END);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)+(vt1.c0)))-((vt0.c1 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)+(vt1.c0)))-((vt0.c1 IN (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)+(vt1.c0)))-((vt0.c1 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)+(vt1.c0)))-((vt0.c1 IN (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)+(vt1.c0)))-((vt0.c1 IN (vt0.c1)))));
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN CAST(vt1.c0 AS BLOB) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS BLOB) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN CAST(vt1.c0 AS BLOB) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS BLOB) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN CAST(vt1.c0 AS BLOB) THEN (vt0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt0.c1) ISNULL) AS TEXT)) ORDER BY CAST((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt0.c1) ISNULL) AS TEXT)) ORDER BY CAST((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt0.c1) ISNULL) AS TEXT)) ORDER BY CAST((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1)>(vt1.c1)))AND(vt1.c1 COLLATE BINARY)))OR((((vt1.c1))<((vt1.c0)))))) ORDER BY vt1.c0, CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)>(vt1.c1)))AND(vt1.c1 COLLATE BINARY)))OR((((vt1.c1))<((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1)>(vt1.c1)))AND(vt1.c1 COLLATE BINARY)))OR((((vt1.c1))<((vt1.c0)))))) ORDER BY vt1.c0, CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)>(vt1.c1)))AND(vt1.c1 COLLATE BINARY)))OR((((vt1.c1))<((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1)>(vt1.c1)))AND(vt1.c1 COLLATE BINARY)))OR((((vt1.c1))<((vt1.c0)))))) ORDER BY vt1.c0, CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c1) ORDER BY CAST((vt1.c0 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((vt1.c0 IN ()) AS NUMERIC) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c1) ORDER BY CAST((vt1.c0 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((vt1.c0 IN ()) AS NUMERIC) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c1) ORDER BY CAST((vt1.c0 IN ()) AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(x'')))AND(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(x'')))AND(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(x'')))AND(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(x'')))AND(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(x'')))AND(vt0.c1 COLLATE BINARY)));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0)||(vt0.c0))) NOTNULL) ASC  NULLS LAST, ((1125737423) NOT BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)||(vt0.c0))) NOTNULL) ASC  NULLS LAST, ((1125737423) NOT BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)) DESC);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0)||(vt0.c0))) NOTNULL) ASC  NULLS LAST, ((1125737423) NOT BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)||(vt0.c0))) NOTNULL) ASC  NULLS LAST, ((1125737423) NOT BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)) DESC);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0)||(vt0.c0))) NOTNULL) ASC  NULLS LAST, ((1125737423) NOT BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)) DESC;
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY '0.8627932383105114' DESC  NULLS FIRST, json_insert(ROUND(vt1.c0, vt1.c1), vt1.c1 COLLATE RTRIM, CAST(vt1.c1 AS REAL)) DESC, (vt0.c0 COLLATE RTRIM IN (vt1.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY '0.8627932383105114' DESC  NULLS FIRST, json_insert(ROUND(vt1.c0, vt1.c1), vt1.c1 COLLATE RTRIM, CAST(vt1.c1 AS REAL)) DESC, (vt0.c0 COLLATE RTRIM IN (vt1.c1 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY '0.8627932383105114' DESC  NULLS FIRST, json_insert(ROUND(vt1.c0, vt1.c1), vt1.c1 COLLATE RTRIM, CAST(vt1.c1 AS REAL)) DESC, (vt0.c0 COLLATE RTRIM IN (vt1.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY '0.8627932383105114' DESC  NULLS FIRST, json_insert(ROUND(vt1.c0, vt1.c1), vt1.c1 COLLATE RTRIM, CAST(vt1.c1 AS REAL)) DESC, (vt0.c0 COLLATE RTRIM IN (vt1.c1 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY '0.8627932383105114' DESC  NULLS FIRST, json_insert(ROUND(vt1.c0, vt1.c1), vt1.c1 COLLATE RTRIM, CAST(vt1.c1 AS REAL)) DESC, (vt0.c0 COLLATE RTRIM IN (vt1.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c1, x'76f6', vt1.c0)) NOT BETWEEN ((((x'')!=(vt1.c0)), ((((((((((((vt1.c0)AND(vt1.c0)))OR('-1071843180')))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN (vt1.c0, vt1.c1)), vt1.c0, vt1.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1, x'76f6', vt1.c0)) NOT BETWEEN ((((x'')!=(vt1.c0)), ((((((((((((vt1.c0)AND(vt1.c0)))OR('-1071843180')))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN (vt1.c0, vt1.c1)), vt1.c0, vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1, x'76f6', vt1.c0)) NOT BETWEEN ((((x'')!=(vt1.c0)), ((((((((((((vt1.c0)AND(vt1.c0)))OR('-1071843180')))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN (vt1.c0, vt1.c1)), vt1.c0, vt1.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1, x'76f6', vt1.c0)) NOT BETWEEN ((((x'')!=(vt1.c0)), ((((((((((((vt1.c0)AND(vt1.c0)))OR('-1071843180')))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN (vt1.c0, vt1.c1)), vt1.c0, vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1, x'76f6', vt1.c0)) NOT BETWEEN ((((x'')!=(vt1.c0)), ((((((((((((vt1.c0)AND(vt1.c0)))OR('-1071843180')))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN (vt1.c0, vt1.c1)), vt1.c0, vt1.c1 COLLATE NOCASE))));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt1.c1)!=((0.46302730704611617 IN ()))) WHERE (0.02772997212769035) ORDER BY vt0.c1 DESC  NULLS LAST, ((((((((((((((((vt0.c1)AND(vt1.c1)))OR(vt1.c1)))OR(vt0.c0 COLLATE RTRIM)))OR('1805370052')))OR(((((((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)))OR('-879687569')))OR(vt0.c0)))))AND(vt0.c1)))AND(x'56bf25ea' COLLATE NOCASE)))OR(((vt0.c0)GLOB(0.23991947818434078))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.02772997212769035) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt1.c1)!=((0.46302730704611617 IN ()))) ORDER BY vt0.c1 DESC  NULLS LAST, ((((((((((((((((vt0.c1)AND(vt1.c1)))OR(vt1.c1)))OR(vt0.c0 COLLATE RTRIM)))OR('1805370052')))OR(((((((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)))OR('-879687569')))OR(vt0.c0)))))AND(vt0.c1)))AND(x'56bf25ea' COLLATE NOCASE)))OR(((vt0.c0)GLOB(0.23991947818434078))))  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt1.c1)!=((0.46302730704611617 IN ()))) WHERE (0.02772997212769035) ORDER BY vt0.c1 DESC  NULLS LAST, ((((((((((((((((vt0.c1)AND(vt1.c1)))OR(vt1.c1)))OR(vt0.c0 COLLATE RTRIM)))OR('1805370052')))OR(((((((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)))OR('-879687569')))OR(vt0.c0)))))AND(vt0.c1)))AND(x'56bf25ea' COLLATE NOCASE)))OR(((vt0.c0)GLOB(0.23991947818434078))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.02772997212769035) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt1.c1)!=((0.46302730704611617 IN ()))) ORDER BY vt0.c1 DESC  NULLS LAST, ((((((((((((((((vt0.c1)AND(vt1.c1)))OR(vt1.c1)))OR(vt0.c0 COLLATE RTRIM)))OR('1805370052')))OR(((((((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)))OR('-879687569')))OR(vt0.c0)))))AND(vt0.c1)))AND(x'56bf25ea' COLLATE NOCASE)))OR(((vt0.c0)GLOB(0.23991947818434078))))  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt1.c1)!=((0.46302730704611617 IN ()))) WHERE (0.02772997212769035) ORDER BY vt0.c1 DESC  NULLS LAST, ((((((((((((((((vt0.c1)AND(vt1.c1)))OR(vt1.c1)))OR(vt0.c0 COLLATE RTRIM)))OR('1805370052')))OR(((((((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)))OR('-879687569')))OR(vt0.c0)))))AND(vt0.c1)))AND(x'56bf25ea' COLLATE NOCASE)))OR(((vt0.c0)GLOB(0.23991947818434078))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0)))|(((0.7812648585735712)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(vt1.c0)))|(((0.7812648585735712)<<(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0)))|(((0.7812648585735712)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(vt1.c0)))|(((0.7812648585735712)<<(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0)))|(((0.7812648585735712)<<(vt1.c0)))));
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((vt0.c1 IN ())))) ORDER BY NULL, SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY NULL, SQLITE_SOURCE_ID()  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((vt0.c1 IN ())))) ORDER BY NULL, SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY NULL, SQLITE_SOURCE_ID()  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((vt0.c1 IN ())))) ORDER BY NULL, SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((((vt1.c1)<(vt1.c1))) NOT BETWEEN (1267565206) AND (IFNULL(DISTINCT vt1.c1, vt0.c1)))) ORDER BY TYPEOF(vt0.c0 COLLATE NOCASE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)<(vt1.c1))) NOT BETWEEN (1267565206) AND (IFNULL(DISTINCT vt1.c1, vt0.c1)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY TYPEOF(vt0.c0 COLLATE NOCASE) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c1)<(vt1.c1))) NOT BETWEEN (1267565206) AND (IFNULL(DISTINCT vt1.c1, vt0.c1)))) ORDER BY TYPEOF(vt0.c0 COLLATE NOCASE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)<(vt1.c1))) NOT BETWEEN (1267565206) AND (IFNULL(DISTINCT vt1.c1, vt0.c1)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY TYPEOF(vt0.c0 COLLATE NOCASE) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c1)<(vt1.c1))) NOT BETWEEN (1267565206) AND (IFNULL(DISTINCT vt1.c1, vt0.c1)))) ORDER BY TYPEOF(vt0.c0 COLLATE NOCASE) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c1 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c1 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c1 IN ()) AS NUMERIC));
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c1))) NOTNULL)) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN ((vt1.c0)<<(vt1.c0)) THEN vt1.c0 ELSE (vt1.c1 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c1))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN ((vt1.c0)<<(vt1.c0)) THEN vt1.c0 ELSE (vt1.c1 IN ()) END  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c1))) NOTNULL)) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN ((vt1.c0)<<(vt1.c0)) THEN vt1.c0 ELSE (vt1.c1 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c1))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN ((vt1.c0)<<(vt1.c0)) THEN vt1.c0 ELSE (vt1.c1 IN ()) END  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c1))) NOTNULL)) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN ((vt1.c0)<<(vt1.c0)) THEN vt1.c0 ELSE (vt1.c1 IN ()) END  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (TRIM(vt1.c1, ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))) ORDER BY (('fN') BETWEEN (TRIM(DISTINCT vt1.c0, vt1.c1)) AND (((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))), (~ (((vt1.c1) NOT BETWEEN (vt1.c1) AND (x'')))) DESC  NULLS FIRST, CAST(((vt1.c1)>(0.4744744843571388)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c1, ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (('fN') BETWEEN (TRIM(DISTINCT vt1.c0, vt1.c1)) AND (((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))), (~ (((vt1.c1) NOT BETWEEN (vt1.c1) AND (x'')))) DESC  NULLS FIRST, CAST(((vt1.c1)>(0.4744744843571388)) AS TEXT) DESC);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(vt1.c1, ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))) ORDER BY (('fN') BETWEEN (TRIM(DISTINCT vt1.c0, vt1.c1)) AND (((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))), (~ (((vt1.c1) NOT BETWEEN (vt1.c1) AND (x'')))) DESC  NULLS FIRST, CAST(((vt1.c1)>(0.4744744843571388)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c1, ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (('fN') BETWEEN (TRIM(DISTINCT vt1.c0, vt1.c1)) AND (((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))), (~ (((vt1.c1) NOT BETWEEN (vt1.c1) AND (x'')))) DESC  NULLS FIRST, CAST(((vt1.c1)>(0.4744744843571388)) AS TEXT) DESC);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(vt1.c1, ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))) ORDER BY (('fN') BETWEEN (TRIM(DISTINCT vt1.c0, vt1.c1)) AND (((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))), (~ (((vt1.c1) NOT BETWEEN (vt1.c1) AND (x'')))) DESC  NULLS FIRST, CAST(((vt1.c1)>(0.4744744843571388)) AS TEXT) DESC;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)<>(vt0.c1))) NOT BETWEEN (((vt0.c1)%(vt1.c1))) AND (((vt0.c0)-('8	_泯z*O*')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<>(vt0.c1))) NOT BETWEEN (((vt0.c1)%(vt1.c1))) AND (((vt0.c0)-('8	_泯z*O*'))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)<>(vt0.c1))) NOT BETWEEN (((vt0.c1)%(vt1.c1))) AND (((vt0.c0)-('8	_泯z*O*')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<>(vt0.c1))) NOT BETWEEN (((vt0.c1)%(vt1.c1))) AND (((vt0.c0)-('8	_泯z*O*'))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)<>(vt0.c1))) NOT BETWEEN (((vt0.c1)%(vt1.c1))) AND (((vt0.c0)-('8	_泯z*O*')))));
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0))<=((vt1.c1))))=(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))) NOT BETWEEN (((vt0.c0)<=(vt1.c1))) AND ((vt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<=((vt1.c1))))==(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))) NOT BETWEEN (((vt0.c0)<=(vt1.c1))) AND ((vt0.c1 IN ())))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0))<=((vt1.c1))))=(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))) NOT BETWEEN (((vt0.c0)<=(vt1.c1))) AND ((vt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<=((vt1.c1))))==(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))) NOT BETWEEN (((vt0.c0)<=(vt1.c1))) AND ((vt0.c1 IN ())))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0))<=((vt1.c1))))=(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))) NOT BETWEEN (((vt0.c0)<=(vt1.c1))) AND ((vt0.c1 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE) ORDER BY ((((((('0.9265973977697307')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND((((vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1))))))OR(CASE WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((('0.9265973977697307')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND((((vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1))))))OR(CASE WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE) ORDER BY ((((((('0.9265973977697307')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND((((vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1))))))OR(CASE WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((('0.9265973977697307')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND((((vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1))))))OR(CASE WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE) ORDER BY ((((((('0.9265973977697307')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND((((vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1))))))OR(CASE WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)) DESC;
SELECT ALL * FROM vt0 WHERE (((((((((LENGTH(vt0.c1))OR(vt0.c0)))OR((vt0.c1 IN ()))))OR(((vt0.c0)!=(vt0.c0)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (x'')))<=(vt0.c1)), (((((vt0.c1 IN (vt0.c1, vt0.c1)))OR(0Xffffffffd048f858 COLLATE RTRIM)))OR(((((((((((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((LENGTH(vt0.c1))OR(vt0.c0)))OR((vt0.c1 IN ()))))OR(((vt0.c0)!=(vt0.c0)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (x'')))<=(vt0.c1)), (((((vt0.c1 IN (vt0.c1, vt0.c1)))OR(0xffffffffd048f858 COLLATE RTRIM)))OR(((((((((((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((((LENGTH(vt0.c1))OR(vt0.c0)))OR((vt0.c1 IN ()))))OR(((vt0.c0)!=(vt0.c0)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (x'')))<=(vt0.c1)), (((((vt0.c1 IN (vt0.c1, vt0.c1)))OR(0Xffffffffd048f858 COLLATE RTRIM)))OR(((((((((((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((LENGTH(vt0.c1))OR(vt0.c0)))OR((vt0.c1 IN ()))))OR(((vt0.c0)!=(vt0.c0)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (x'')))<=(vt0.c1)), (((((vt0.c1 IN (vt0.c1, vt0.c1)))OR(0xffffffffd048f858 COLLATE RTRIM)))OR(((((((((((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((((LENGTH(vt0.c1))OR(vt0.c0)))OR((vt0.c1 IN ()))))OR(((vt0.c0)!=(vt0.c0)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (x'')))<=(vt0.c1)), (((((vt0.c1 IN (vt0.c1, vt0.c1)))OR(0Xffffffffd048f858 COLLATE RTRIM)))OR(((((((((((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN json(vt1.c1) THEN (- (vt1.c0)) WHEN (((vt0.c0))<=((vt1.c0))) THEN ((vt1.c0) NOT BETWEEN ('-1907351171') AND (vt1.c1)) WHEN vt0.c0 COLLATE NOCASE THEN vt1.c1 ELSE vt0.c0 COLLATE NOCASE END) ORDER BY ((vt1.c0)OR(((vt0.c0)!=(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN json(vt1.c1) THEN (- (vt1.c0)) WHEN (((vt0.c0))<=((vt1.c0))) THEN ((vt1.c0) NOT BETWEEN ('-1907351171') AND (vt1.c1)) WHEN vt0.c0 COLLATE NOCASE THEN vt1.c1 ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0)OR(((vt0.c0)<>(vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN json(vt1.c1) THEN (- (vt1.c0)) WHEN (((vt0.c0))<=((vt1.c0))) THEN ((vt1.c0) NOT BETWEEN ('-1907351171') AND (vt1.c1)) WHEN vt0.c0 COLLATE NOCASE THEN vt1.c1 ELSE vt0.c0 COLLATE NOCASE END) ORDER BY ((vt1.c0)OR(((vt0.c0)!=(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN json(vt1.c1) THEN (- (vt1.c0)) WHEN (((vt0.c0))<=((vt1.c0))) THEN ((vt1.c0) NOT BETWEEN ('-1907351171') AND (vt1.c1)) WHEN vt0.c0 COLLATE NOCASE THEN vt1.c1 ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0)OR(((vt0.c0)<>(vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN json(vt1.c1) THEN (- (vt1.c0)) WHEN (((vt0.c0))<=((vt1.c0))) THEN ((vt1.c0) NOT BETWEEN ('-1907351171') AND (vt1.c1)) WHEN vt0.c0 COLLATE NOCASE THEN vt1.c1 ELSE vt0.c0 COLLATE NOCASE END) ORDER BY ((vt1.c0)OR(((vt0.c0)!=(vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY CAST(((x'')||(vt0.c0)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(((x'')||(vt0.c0)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY CAST(((x'')||(vt0.c0)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(((x'')||(vt0.c0)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY CAST(((x'')||(vt0.c0)) AS BLOB) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT ((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN 0x6d9d5a3f THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) END) ORDER BY vt0.c0, ((((CASE x''  WHEN '1811563468' THEN vt0.c1 ELSE vt0.c1 END)AND(vt0.c1 COLLATE RTRIM)))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN 0x6d9d5a3f THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((CASE x''  WHEN '1811563468' THEN vt0.c1 ELSE vt0.c1 END)AND(vt0.c1 COLLATE RTRIM)))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN 0x6d9d5a3f THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) END) ORDER BY vt0.c0, ((((CASE x''  WHEN '1811563468' THEN vt0.c1 ELSE vt0.c1 END)AND(vt0.c1 COLLATE RTRIM)))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN 0x6d9d5a3f THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((CASE x''  WHEN '1811563468' THEN vt0.c1 ELSE vt0.c1 END)AND(vt0.c1 COLLATE RTRIM)))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN 0x6d9d5a3f THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) END) ORDER BY vt0.c0, ((((CASE x''  WHEN '1811563468' THEN vt0.c1 ELSE vt0.c1 END)AND(vt0.c1 COLLATE RTRIM)))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON '-1878369211' WHERE ((+ (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON '-1878369211');
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON '-1878369211' WHERE ((+ (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON '-1878369211');
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON '-1878369211' WHERE ((+ (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END)));
SELECT ALL * FROM vt0 NOT INDEXED, vt1 WHERE ((vt1.c1 IN ())) ORDER BY CAST(vt1.c1 COLLATE RTRIM AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt1.c1 COLLATE RTRIM AS TEXT) ASC  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED, vt1 WHERE ((vt1.c1 IN ())) ORDER BY CAST(vt1.c1 COLLATE RTRIM AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt1.c1 COLLATE RTRIM AS TEXT) ASC  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED, vt1 WHERE ((vt1.c1 IN ())) ORDER BY CAST(vt1.c1 COLLATE RTRIM AS TEXT) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT NULL))<=(((0.27444414871008804)||(vt0.c0))))) ORDER BY (((vt0.c1, vt0.c1, vt0.c0, 0.06609895848568936, vt0.c0)) NOT BETWEEN (('', ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)), CAST(NULL AS TEXT), CAST(vt0.c1 AS REAL), CAST(vt0.c1 AS INTEGER))) AND ((((('{''l*J8z', 0xffffffffe77154b0, vt0.c0))<>((vt0.c1, vt0.c0, vt0.c1))), (vt0.c1 IN (vt0.c1)), load_extension(x'', vt0.c1), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), (('O﨧Y 	xAPf')*(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))<=(((0.27444414871008804)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, vt0.c0, 0.06609895848568936, vt0.c0)) NOT BETWEEN (('', ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)), CAST(NULL AS TEXT), CAST(vt0.c1 AS REAL), CAST(vt0.c1 AS INTEGER))) AND ((((('{''l*J8z', 0Xffffffffe77154b0, vt0.c0))<>((vt0.c1, vt0.c0, vt0.c1))), (vt0.c1 IN (vt0.c1)), load_extension(x'', vt0.c1), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), (('O﨧Y 	xAPf')*(vt0.c0))))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT NULL))<=(((0.27444414871008804)||(vt0.c0))))) ORDER BY (((vt0.c1, vt0.c1, vt0.c0, 0.06609895848568936, vt0.c0)) NOT BETWEEN (('', ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)), CAST(NULL AS TEXT), CAST(vt0.c1 AS REAL), CAST(vt0.c1 AS INTEGER))) AND ((((('{''l*J8z', 0xffffffffe77154b0, vt0.c0))<>((vt0.c1, vt0.c0, vt0.c1))), (vt0.c1 IN (vt0.c1)), load_extension(x'', vt0.c1), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), (('O﨧Y 	xAPf')*(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))<=(((0.27444414871008804)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, vt0.c0, 0.06609895848568936, vt0.c0)) NOT BETWEEN (('', ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)), CAST(NULL AS TEXT), CAST(vt0.c1 AS REAL), CAST(vt0.c1 AS INTEGER))) AND ((((('{''l*J8z', 0Xffffffffe77154b0, vt0.c0))<>((vt0.c1, vt0.c0, vt0.c1))), (vt0.c1 IN (vt0.c1)), load_extension(x'', vt0.c1), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), (('O﨧Y 	xAPf')*(vt0.c0))))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT NULL))<=(((0.27444414871008804)||(vt0.c0))))) ORDER BY (((vt0.c1, vt0.c1, vt0.c0, 0.06609895848568936, vt0.c0)) NOT BETWEEN (('', ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)), CAST(NULL AS TEXT), CAST(vt0.c1 AS REAL), CAST(vt0.c1 AS INTEGER))) AND ((((('{''l*J8z', 0xffffffffe77154b0, vt0.c0))<>((vt0.c1, vt0.c0, vt0.c1))), (vt0.c1 IN (vt0.c1)), load_extension(x'', vt0.c1), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), (('O﨧Y 	xAPf')*(vt0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE '' END)<<((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE '' END)<<((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE '' END)<<((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE '' END)<<((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE '' END)<<((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN (('mW+n헔PT㔞')<(vt1.c1)) THEN ((((((((vt1.c1)AND('-791063789')))OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c0)) WHEN ('dp' IN ()) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c1 END WHEN CASE WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN '-1461381534' END THEN (vt0.c0 IN ()) END WHERE (((((((((((((((vt0.c1)IS('-1574429827')))OR(NULL)))OR(x'')))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))AND(CHAR(vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0) ISNULL))))AND(((vt1.c1)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c1)IS('-1574429827')))OR(NULL)))OR(x'')))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))AND(CHAR(vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0) ISNULL))))AND(((vt1.c1)>>(vt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN (('mW+n헔PT㔞')<(vt1.c1)) THEN ((((((((vt1.c1)AND('-791063789')))OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c0)) WHEN ('dp' IN ()) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c1 END WHEN CASE WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN '-1461381534' END THEN (vt0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN (('mW+n헔PT㔞')<(vt1.c1)) THEN ((((((((vt1.c1)AND('-791063789')))OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c0)) WHEN ('dp' IN ()) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c1 END WHEN CASE WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN '-1461381534' END THEN (vt0.c0 IN ()) END WHERE (((((((((((((((vt0.c1)IS('-1574429827')))OR(NULL)))OR(x'')))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))AND(CHAR(vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0) ISNULL))))AND(((vt1.c1)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c1)IS('-1574429827')))OR(NULL)))OR(x'')))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))AND(CHAR(vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0) ISNULL))))AND(((vt1.c1)>>(vt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN (('mW+n헔PT㔞')<(vt1.c1)) THEN ((((((((vt1.c1)AND('-791063789')))OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c0)) WHEN ('dp' IN ()) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c1 END WHEN CASE WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN '-1461381534' END THEN (vt0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN (('mW+n헔PT㔞')<(vt1.c1)) THEN ((((((((vt1.c1)AND('-791063789')))OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c0)) WHEN ('dp' IN ()) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c1 END WHEN CASE WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN '-1461381534' END THEN (vt0.c0 IN ()) END WHERE (((((((((((((((vt0.c1)IS('-1574429827')))OR(NULL)))OR(x'')))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))AND(CHAR(vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0) ISNULL))))AND(((vt1.c1)>>(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)==(vt1.c1)))OR(vt1.c1)))OR(',''\rNB' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)=(vt1.c1)))OR(vt1.c1)))OR(',''\rNB' COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)==(vt1.c1)))OR(vt1.c1)))OR(',''\rNB' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)=(vt1.c1)))OR(vt1.c1)))OR(',''\rNB' COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)==(vt1.c1)))OR(vt1.c1)))OR(',''\rNB' COLLATE NOCASE)));
SELECT * FROM vt0 WHERE (((((vt0.c1, vt0.c0, '-1279014223'))==((vt0.c0, vt0.c0, vt0.c1))) IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1, vt0.c0, '-1279014223'))==((vt0.c0, vt0.c0, vt0.c1))) IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1, vt0.c0, '-1279014223'))==((vt0.c0, vt0.c0, vt0.c1))) IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1, vt0.c0, '-1279014223'))==((vt0.c0, vt0.c0, vt0.c1))) IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1, vt0.c0, '-1279014223'))==((vt0.c0, vt0.c0, vt0.c1))) IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON x'' WHERE ('-633643775');
SELECT SUM(count) FROM (SELECT ALL (('-633643775') IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON x'');
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON x'' WHERE ('-633643775');
SELECT SUM(count) FROM (SELECT ALL (('-633643775') IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON x'');
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON x'' WHERE ('-633643775');
SELECT COUNT(*) FROM vt1 WHERE (0.7082664676252715) ORDER BY -0.0;
SELECT SUM(count) FROM (SELECT ALL ((0.7082664676252715) IS TRUE)  as count FROM vt1 ORDER BY -0.0);
SELECT COUNT(*) FROM vt1 WHERE (0.7082664676252715) ORDER BY -0.0;
SELECT SUM(count) FROM (SELECT ALL ((0.7082664676252715) IS TRUE)  as count FROM vt1 ORDER BY -0.0);
SELECT COUNT(*) FROM vt1 WHERE (0.7082664676252715) ORDER BY -0.0;
SELECT * FROM vt1 NOT INDEXED WHERE ((- (((0.45865227374954964) IS FALSE)))) ORDER BY ((CAST(vt1.c1 AS BLOB)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((- (((0.45865227374954964) IS FALSE)))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c1 AS BLOB)) IS FALSE) ASC);
SELECT * FROM vt1 NOT INDEXED WHERE ((- (((0.45865227374954964) IS FALSE)))) ORDER BY ((CAST(vt1.c1 AS BLOB)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((- (((0.45865227374954964) IS FALSE)))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c1 AS BLOB)) IS FALSE) ASC);
SELECT * FROM vt1 NOT INDEXED WHERE ((- (((0.45865227374954964) IS FALSE)))) ORDER BY ((CAST(vt1.c1 AS BLOB)) IS FALSE) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>(vt0.c1)))||(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((''))) THEN NULL ELSE ((vt0.c1) IS TRUE) END  NULLS LAST, CASE WHEN (1547457699 IN (vt0.c0, vt0.c0)) THEN (~ (vt0.c0)) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt0.c1)))||(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((''))) THEN NULL ELSE ((vt0.c1) IS TRUE) END  NULLS LAST, CASE WHEN (1547457699 IN (vt0.c0, vt0.c0)) THEN (~ (vt0.c0)) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>(vt0.c1)))||(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((''))) THEN NULL ELSE ((vt0.c1) IS TRUE) END  NULLS LAST, CASE WHEN (1547457699 IN (vt0.c0, vt0.c0)) THEN (~ (vt0.c0)) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt0.c1)))||(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((''))) THEN NULL ELSE ((vt0.c1) IS TRUE) END  NULLS LAST, CASE WHEN (1547457699 IN (vt0.c0, vt0.c0)) THEN (~ (vt0.c0)) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>(vt0.c1)))||(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((''))) THEN NULL ELSE ((vt0.c1) IS TRUE) END  NULLS LAST, CASE WHEN (1547457699 IN (vt0.c0, vt0.c0)) THEN (~ (vt0.c0)) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END;
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0) NOT NULL)))) ORDER BY CAST((((vt1.c0, vt1.c1, -1030653678))!=((vt1.c0, vt1.c0, vt1.c0))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0, vt1.c1, -1030653678))<>((vt1.c0, vt1.c0, vt1.c0))) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0) NOT NULL)))) ORDER BY CAST((((vt1.c0, vt1.c1, -1030653678))!=((vt1.c0, vt1.c0, vt1.c0))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0, vt1.c1, -1030653678))<>((vt1.c0, vt1.c0, vt1.c0))) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0) NOT NULL)))) ORDER BY CAST((((vt1.c0, vt1.c1, -1030653678))!=((vt1.c0, vt1.c0, vt1.c0))) AS BLOB)  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (CAST(vt1.c0 AS REAL) COLLATE RTRIM) ORDER BY (((((((((vt1.c1 IN ()))AND(((vt0.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))AND((((vt1.c1))>((vt1.c1))))))AND(CAST(vt0.c0 AS NUMERIC))))AND(((-1.07184318E9)%(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((((vt1.c1 IN ()))AND(((vt0.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))AND((((vt1.c1))>((vt1.c1))))))AND(CAST(vt0.c0 AS NUMERIC))))AND(((-1.07184318E9)%(vt0.c1)))) DESC);
SELECT * FROM vt1, vt0 WHERE (CAST(vt1.c0 AS REAL) COLLATE RTRIM) ORDER BY (((((((((vt1.c1 IN ()))AND(((vt0.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))AND((((vt1.c1))>((vt1.c1))))))AND(CAST(vt0.c0 AS NUMERIC))))AND(((-1.07184318E9)%(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((((vt1.c1 IN ()))AND(((vt0.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))AND((((vt1.c1))>((vt1.c1))))))AND(CAST(vt0.c0 AS NUMERIC))))AND(((-1.07184318E9)%(vt0.c1)))) DESC);
SELECT * FROM vt0 WHERE (0.35795579318252824) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY DESC  NULLS LAST, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.35795579318252824) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY DESC  NULLS LAST, vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (0.35795579318252824) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY DESC  NULLS LAST, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.35795579318252824) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY DESC  NULLS LAST, vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (0.35795579318252824) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY DESC  NULLS LAST, vt0.c0 ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, 0x41a1241a, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, 0x41a1241a, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, 0x41a1241a, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, 0x41a1241a, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, 0x41a1241a, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))))));
SELECT * FROM vt0, vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt0.c1))) COLLATE RTRIM);
SELECT * FROM vt1, vt0 WHERE (((CASE vt1.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)IS(((vt0.c1)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)IS(((vt0.c1)<=(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CASE vt1.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)IS(((vt0.c1)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)IS(((vt0.c1)<=(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CASE vt1.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)IS(((vt0.c1)<=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE NOCASE);
SELECT * FROM vt0, vt1 WHERE ((((CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '}J' ELSE vt1.c1 END))>((((((((((vt0.c0)OR(vt1.c1)))OR(vt0.c0)))OR(vt1.c1)))OR(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '}J' ELSE vt1.c1 END))>((((((((((vt0.c0)OR(vt1.c1)))OR(vt0.c0)))OR(vt1.c1)))OR(vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '}J' ELSE vt1.c1 END))>((((((((((vt0.c0)OR(vt1.c1)))OR(vt0.c0)))OR(vt1.c1)))OR(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '}J' ELSE vt1.c1 END))>((((((((((vt0.c0)OR(vt1.c1)))OR(vt0.c0)))OR(vt1.c1)))OR(vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '}J' ELSE vt1.c1 END))>((((((((((vt0.c0)OR(vt1.c1)))OR(vt0.c0)))OR(vt1.c1)))OR(vt0.c1))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LIKELY(((vt1.c1)>>(vt0.c0)))) ORDER BY (~ (((((vt1.c1)AND(vt1.c1)))AND(vt0.c1))))  NULLS LAST, GLOB(((('', 0X4b1869e1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt1.c1, vt1.c0, vt0.c0))), vt1.c1 COLLATE BINARY) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((vt1.c1)>>(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (((((vt1.c1)AND(vt1.c1)))AND(vt0.c1))))  NULLS LAST, GLOB(((('', 0X4b1869e1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt1.c1, vt1.c0, vt0.c0))), vt1.c1 COLLATE BINARY) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LIKELY(((vt1.c1)>>(vt0.c0)))) ORDER BY (~ (((((vt1.c1)AND(vt1.c1)))AND(vt0.c1))))  NULLS LAST, GLOB(((('', 0X4b1869e1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt1.c1, vt1.c0, vt0.c0))), vt1.c1 COLLATE BINARY) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((vt1.c1)>>(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (((((vt1.c1)AND(vt1.c1)))AND(vt0.c1))))  NULLS LAST, GLOB(((('', 0X4b1869e1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt1.c1, vt1.c0, vt0.c0))), vt1.c1 COLLATE BINARY) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LIKELY(((vt1.c1)>>(vt0.c0)))) ORDER BY (~ (((((vt1.c1)AND(vt1.c1)))AND(vt0.c1))))  NULLS LAST, GLOB(((('', 0X4b1869e1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt1.c1, vt1.c0, vt0.c0))), vt1.c1 COLLATE BINARY) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((- (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))))) ORDER BY 0.34537406138190596 DESC;
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY 0.34537406138190596 DESC);
SELECT COUNT(*) FROM vt0 WHERE ((- (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))))) ORDER BY 0.34537406138190596 DESC;
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY 0.34537406138190596 DESC);
SELECT COUNT(*) FROM vt0 WHERE ((- (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))))) ORDER BY 0.34537406138190596 DESC;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS TEXT)) ORDER BY CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c0)>>(vt0.c1)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(x'')) END  NULLS FIRST, ((((vt0.c1)LIKE(vt0.c0))) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND ((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c0)>>(vt0.c1)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(x'')) END  NULLS FIRST, ((((vt0.c1)LIKE(vt0.c0))) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND ((~ (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS TEXT)) ORDER BY CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c0)>>(vt0.c1)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(x'')) END  NULLS FIRST, ((((vt0.c1)LIKE(vt0.c0))) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND ((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c0)>>(vt0.c1)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(x'')) END  NULLS FIRST, ((((vt0.c1)LIKE(vt0.c0))) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND ((~ (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS TEXT)) ORDER BY CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN ((vt0.c0)>>(vt0.c1)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(x'')) END  NULLS FIRST, ((((vt0.c1)LIKE(vt0.c0))) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND ((~ (vt0.c0))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((vt0.c1) NOT BETWEEN (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) AND ((- (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) AND ((- (vt1.c1))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((vt0.c1) NOT BETWEEN (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) AND ((- (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) AND ((- (vt1.c1))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((vt0.c1) NOT BETWEEN (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) AND ((- (vt1.c1)))));
SELECT ALL * FROM vt1, vt0 WHERE ((((('')%(vt1.c0))) NOT BETWEEN (vt1.c1 COLLATE NOCASE) AND (((vt0.c0)*('	o+\R~t'))))) ORDER BY (((vt0.c0)) NOT BETWEEN (('')) AND ((((((((((NULL)OR(vt0.c0)))AND('FALSE')))AND(vt1.c1)))OR(vt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('')%(vt1.c0))) NOT BETWEEN (vt1.c1 COLLATE NOCASE) AND (((vt0.c0)*('	o+\R~t'))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (('')) AND ((((((((((NULL)OR(vt0.c0)))AND('FALSE')))AND(vt1.c1)))OR(vt1.c1)))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((('')%(vt1.c0))) NOT BETWEEN (vt1.c1 COLLATE NOCASE) AND (((vt0.c0)*('	o+\R~t'))))) ORDER BY (((vt0.c0)) NOT BETWEEN (('')) AND ((((((((((NULL)OR(vt0.c0)))AND('FALSE')))AND(vt1.c1)))OR(vt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('')%(vt1.c0))) NOT BETWEEN (vt1.c1 COLLATE NOCASE) AND (((vt0.c0)*('	o+\R~t'))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (('')) AND ((((((((((NULL)OR(vt0.c0)))AND('FALSE')))AND(vt1.c1)))OR(vt1.c1)))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((('')%(vt1.c0))) NOT BETWEEN (vt1.c1 COLLATE NOCASE) AND (((vt0.c0)*('	o+\R~t'))))) ORDER BY (((vt0.c0)) NOT BETWEEN (('')) AND ((((((((((NULL)OR(vt0.c0)))AND('FALSE')))AND(vt1.c1)))OR(vt1.c1)))))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt1.c1)))IS(((vt1.c1)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt1.c1)))IS(((vt1.c1)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt1.c1)))IS(((vt1.c1)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt1.c1)))IS(((vt1.c1)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt1.c1)))IS(((vt1.c1)GLOB(vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0)==(vt1.c1))  WHEN NULLIF(DISTINCT vt1.c1, vt1.c0) THEN vt1.c0 COLLATE RTRIM ELSE vt1.c1 END) ORDER BY ((vt1.c0) BETWEEN (NULL) AND (vt1.c1)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)==(vt1.c1))  WHEN NULLIF(DISTINCT vt1.c1, vt1.c0) THEN vt1.c0 COLLATE RTRIM ELSE vt1.c1 END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) BETWEEN (NULL) AND (vt1.c1)) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0)==(vt1.c1))  WHEN NULLIF(DISTINCT vt1.c1, vt1.c0) THEN vt1.c0 COLLATE RTRIM ELSE vt1.c1 END) ORDER BY ((vt1.c0) BETWEEN (NULL) AND (vt1.c1)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)==(vt1.c1))  WHEN NULLIF(DISTINCT vt1.c1, vt1.c0) THEN vt1.c0 COLLATE RTRIM ELSE vt1.c1 END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) BETWEEN (NULL) AND (vt1.c1)) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0)==(vt1.c1))  WHEN NULLIF(DISTINCT vt1.c1, vt1.c0) THEN vt1.c0 COLLATE RTRIM ELSE vt1.c1 END) ORDER BY ((vt1.c0) BETWEEN (NULL) AND (vt1.c1)) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((- (vt1.c1)) AS REAL)) ORDER BY ((((((((CAST('pplp' AS TEXT))AND((vt0.c0 IN ()))))OR(CAST(vt0.c1 AS NUMERIC))))AND(vt1.c0)))OR(LOWER(vt0.c1))), vt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c1)) AS REAL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((CAST('pplp' AS TEXT))AND((vt0.c0 IN ()))))OR(CAST(vt0.c1 AS NUMERIC))))AND(vt1.c0)))OR(LOWER(vt0.c1))), vt1.c1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((- (vt1.c1)) AS REAL)) ORDER BY ((((((((CAST('pplp' AS TEXT))AND((vt0.c0 IN ()))))OR(CAST(vt0.c1 AS NUMERIC))))AND(vt1.c0)))OR(LOWER(vt0.c1))), vt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c1)) AS REAL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((CAST('pplp' AS TEXT))AND((vt0.c0 IN ()))))OR(CAST(vt0.c1 AS NUMERIC))))AND(vt1.c0)))OR(LOWER(vt0.c1))), vt1.c1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((- (vt1.c1)) AS REAL)) ORDER BY ((((((((CAST('pplp' AS TEXT))AND((vt0.c0 IN ()))))OR(CAST(vt0.c1 AS NUMERIC))))AND(vt1.c0)))OR(LOWER(vt0.c1))), vt1.c1;
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((0.3018905684010018)) AND ((CAST(vt0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((0.3018905684010018)) AND ((CAST(vt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((0.3018905684010018)) AND ((CAST(vt0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((0.3018905684010018)) AND ((CAST(vt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((0.3018905684010018)) AND ((CAST(vt0.c1 AS NUMERIC)))));
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))-(vt0.c0 COLLATE RTRIM))) ORDER BY ((json_array_length(''))IS NOT(0.44532226016270393))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))-(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((json_array_length(''))IS NOT(0.44532226016270393))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))-(vt0.c0 COLLATE RTRIM))) ORDER BY ((json_array_length(''))IS NOT(0.44532226016270393))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))-(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((json_array_length(''))IS NOT(0.44532226016270393))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((NULL))>((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))))) ORDER BY ((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, NULL, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL))>((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, NULL, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((NULL))>((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))))) ORDER BY ((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, NULL, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL))>((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, NULL, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((NULL))>((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))))) ORDER BY ((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, NULL, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (x'115f') ORDER BY (((((vt1.c1) NOT NULL)))<((((vt1.c1) NOTNULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'115f') IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c1) NOT NULL)))<((((vt1.c1) NOTNULL)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (x'115f') ORDER BY (((((vt1.c1) NOT NULL)))<((((vt1.c1) NOTNULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'115f') IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c1) NOT NULL)))<((((vt1.c1) NOTNULL)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (x'115f') ORDER BY (((((vt1.c1) NOT NULL)))<((((vt1.c1) NOTNULL)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (QUOTE(((vt1.c1)IS NOT(vt1.c0)))) ORDER BY ((((((((((vt1.c0)*(vt1.c1)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)), (((vt1.c0 IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ((QUOTE(((vt1.c1)IS NOT(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)*(vt1.c1)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)), (((vt1.c0 IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (QUOTE(((vt1.c1)IS NOT(vt1.c0)))) ORDER BY ((((((((((vt1.c0)*(vt1.c1)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)), (((vt1.c0 IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ((QUOTE(((vt1.c1)IS NOT(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)*(vt1.c1)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)), (((vt1.c0 IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (QUOTE(((vt1.c1)IS NOT(vt1.c0)))) ORDER BY ((((((((((vt1.c0)*(vt1.c1)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)), (((vt1.c0 IN ())) NOT NULL);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1)) BETWEEN (((+ (vt0.c1)))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN (((+ (vt0.c1)))) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1)) BETWEEN (((+ (vt0.c1)))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN (((+ (vt0.c1)))) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1)) BETWEEN (((+ (vt0.c1)))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((('-1831924520') BETWEEN (vt0.c0) AND (x''))) BETWEEN (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1))) AND ((vt0.c0 IN (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((('-1831924520') BETWEEN (vt0.c0) AND (x''))) BETWEEN (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1))) AND ((vt0.c0 IN (vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((('-1831924520') BETWEEN (vt0.c0) AND (x''))) BETWEEN (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1))) AND ((vt0.c0 IN (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((('-1831924520') BETWEEN (vt0.c0) AND (x''))) BETWEEN (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1))) AND ((vt0.c0 IN (vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((('-1831924520') BETWEEN (vt0.c0) AND (x''))) BETWEEN (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1))) AND ((vt0.c0 IN (vt1.c1)))));
SELECT * FROM vt0, vt1 WHERE (((((vt0.c1)GLOB(vt1.c0))) NOT BETWEEN (x'') AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)GLOB(vt1.c0))) NOT BETWEEN (x'') AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c1)GLOB(vt1.c0))) NOT BETWEEN (x'') AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)GLOB(vt1.c0))) NOT BETWEEN (x'') AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c1)GLOB(vt1.c0))) NOT BETWEEN (x'') AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))));
