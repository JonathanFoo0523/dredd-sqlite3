-- Time: 2024/06/09 21:43:00
-- Database: database75
-- Database version: 3.40.0
-- seed value: 1209507275
PRAGMA cache_size = 50000; -- 12ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB , c1 INTEGER , c2 BLOB UNIQUE NOT NULL PRIMARY KEY ); -- 14ms;
UPDATE OR IGNORE t0 SET (c1)=('Qf~~FG'); -- 0ms;
UPDATE OR REPLACE t0 SET (c1, c1)=(x'', '729276026'); -- 1ms;
INSERT OR IGNORE INTO t0(c2, c1, c0) VALUES (-1e500, 0x21d5d153, NULL), (0.9165521065419752, '#!', NULL), (0.9165521065419752, 'Pi', '729276026'); -- 0ms;
ANALYZE; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE t0 SET (c1)=(0.9591395907211926) WHERE CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END COLLATE NOCASE; -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('729276026'), ('-2039452663'), ('bT'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x''); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (1086237885, x'', NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL), ('1215351548'), ('133303116') ON CONFLICT DO NOTHING; -- 0ms;
INSERT OR ABORT INTO t0(c2) VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (395302076); -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (x''); -- 0ms;
PRAGMA automatic_index; -- 0ms;
INSERT OR FAIL INTO t0(c1) VALUES (0.9839013270082686); -- 1ms;
INSERT OR REPLACE INTO t0(c0, c1, c2) VALUES (0.9591395907211926, NULL, x''); -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
REINDEX  t0; -- 6ms;
UPDATE t0 SET (c1)=('133303116'); -- 16ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL t0 SET c0=x'' WHERE (((t0.c1)) BETWEEN (((((t0.c0))<((t0.c2))))) AND (((((t0.c0))!=((t0.c2)))))); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 19ms;
INSERT OR REPLACE INTO t1(c0) VALUES (0.3707686074641464); -- 0ms;
INSERT OR REPLACE INTO t1(c2, c1) VALUES (NULL, '6m'); -- 0ms;
INSERT OR ROLLBACK INTO t1(c1) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t1(c2) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.short_column_names; -- 1ms;
INSERT OR IGNORE INTO t1(c0) VALUES (NULL), (0Xffffffffd2951145), ('-2039452663'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c65; -- 1ms;
PRAGMA temp.integrity_check; -- 0ms;
INSERT OR ROLLBACK INTO t1(c2, c1) VALUES (0X319d6032, 'g₎S踇R'); -- 0ms;
PRAGMA main.cache_spill = 8811404240648149701; -- 0ms;
REINDEX  t1; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ABORT INTO t1(c2, c65) VALUES (x'', x''); -- 0ms;
INSERT OR IGNORE INTO t1(c1) VALUES ('-2051737996'); -- 0ms;
PRAGMA wal_autocheckpoint = -6732388128351491129; -- 0ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR ABORT INTO t1(c65) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t1(c1, c65) VALUES ('1351268349', x'789f23d6'); -- 0ms;
PRAGMA temp.stats; -- 0ms;
PRAGMA temp.locking_mode = EXCLUSIVE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA temp.secure_delete = false; -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE t1; -- 11ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE t1 SET c65=0.859345900056271 WHERE ((((t1.c65)IS NOT(t1.c65))) NOT BETWEEN (((x'4807a905') NOT BETWEEN (t1.c65) AND (t1.c2))) AND (CAST(t1.c65 AS REAL))); -- 0ms;
INSERT OR ROLLBACK INTO t1(c1) VALUES (0Xa0fff75), (x''), ('-2039452663'); -- 0ms;
INSERT OR ABORT INTO t1(c65) VALUES (0X41a3ca32); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES ('m[3?]', 7.29276026E8, ''); -- 0ms;
REINDEX; -- 1ms;
INSERT OR ROLLBACK INTO t1(c1, c2) VALUES ('SｵUnn', x'79901ccc'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR ABORT t1 SET c2=0.9854121080198904; -- 0ms;
UPDATE t1 SET c65=NULL WHERE CASE NULL  WHEN ((t1.c65)OR(t1.c2)) THEN ((t1.c2) BETWEEN (t1.c2) AND (t1.c65)) WHEN LTRIM(t1.c2) THEN t1.c1 WHEN (t1.c2 IN ()) THEN t1.c2 WHEN ((t1.c65)<=(t1.c65)) THEN (- (t1.c2)) WHEN (t1.c2 IN (t1.c65, 0xffffffffb67fd75b)) THEN ((t1.c1)AND(t1.c2)) ELSE ((((t1.c65)OR(t1.c65)))OR(t1.c1)) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 29ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT OR ABORT INTO t1(c65) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t1(c1, c65) VALUES ('729276026', x''); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO t1(c1, c2) VALUES ('1351268349', x''), (x'5487', NULL), (NULL, x'4513'); -- 0ms;
INSERT OR IGNORE INTO t1(c2, c1) VALUES ('1351268349', x'60a2'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO t1(c1, c2, c65) VALUES (x'', 0.01581120284145643, NULL), (1914990562, NULL, '729276026'), (-761982651, 0x61d9064f, NULL); -- 0ms;
INSERT OR IGNORE INTO t1(c2) VALUES (x''); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 BEFORE UPDATE ON t1 FOR EACH ROW  WHEN (((- (t1.c1))) BETWEEN (((((((((0.5322077369373062)AND(t1.c65)))AND(t1.c1)))OR(t1.c1)))AND(t1.c65))) AND (((t1.c1) IS TRUE))) BEGIN UPDATE OR REPLACE t1 SET c2=NULL WHERE ((json_remove(t1.c2, t1.c2))-((('')+(t1.c2))));END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c65='1085863486' WHERE ((CASE WHEN t1.c1 THEN t1.c2 WHEN x'' THEN t1.c2 WHEN t1.c65 THEN t1.c1 ELSE t1.c2 END) NOTNULL); -- 3ms;
UPDATE OR ROLLBACK t1 SET (c2)=(x'1b24') WHERE ((t1.c1 COLLATE BINARY) ISNULL); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65, c65)=(NULL, 0.6491014807501586); -- 0ms;
UPDATE t1 SET (c2, c1, c2)=(NULL, NULL, '1914990562'); -- 0ms;
UPDATE t1 SET (c1)=('-761982651') WHERE ((((t1.c2) NOT NULL)) NOT BETWEEN (CASE t1.c1  WHEN t1.c1 THEN t1.c65 END) AND (((((t1.c65)AND(t1.c1)))OR(t1.c1)))); -- 1ms;
UPDATE OR IGNORE t1 SET c1=0Xffffffffd38a7689; -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=(0.4812625079688967); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE ((((t1.c1)|(t1.c1)))>=(((t1.c2)/(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'') WHERE ((t1.c2 COLLATE BINARY)>(t1.c1)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE t1 SET c2=x'', c65=x'', c65='169119239' WHERE LIKELY(CAST(t1.c65 AS NUMERIC)); -- 0ms;
UPDATE OR ABORT t1 SET c65='BT' WHERE 'N2'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=-1e500 WHERE ((((((t1.c2)GLOB(t1.c65)))OR(((t1.c1) NOTNULL))))OR(CAST(t1.c2 AS BLOB))); -- 0ms;
UPDATE OR IGNORE t1 SET c65='ﬓ', c2=x'' WHERE (((((t1.c2))!=((t1.c65))))&((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c2))))); -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=('1751697625') WHERE ((CAST(t1.c1 AS INTEGER))GLOB(((t1.c1)<=(t1.c65)))); -- 0ms;
UPDATE t1 SET (c1)=(NULL); -- 1ms;
UPDATE OR IGNORE t1 SET c1=NULL, c2=NULL WHERE (NOT ((t1.c2 IN (t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE t1 SET c65=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c1='' WHERE (((t1.c2)) BETWEEN ((((t1.c65)&(t1.c1)))) AND ((((((t1.c1)OR(t1.c65)))AND(t1.c65))))); -- 1ms;
UPDATE OR IGNORE t1 SET (c1)=(x'0967') WHERE 0xffffffffae4b96c9; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.4025647111900277) WHERE (+ (((t1.c65) BETWEEN (t1.c1) AND (t1.c65)))); -- 0ms;
UPDATE OR ABORT t1 SET c2='j'; -- 0ms;
UPDATE OR FAIL t1 SET c1=NULL; -- 0ms;
UPDATE t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=0.6481211351024756 WHERE 0X212510c7; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(-0.0); -- 0ms;
UPDATE OR ABORT t1 SET (c65, c1, c2)=(NULL, 0.3707686074641464, '169119239') WHERE (((t1.c2)) BETWEEN ((CASE t1.c1  WHEN x'' THEN t1.c1 ELSE t1.c2 END)) AND ((((t1.c65)OR(t1.c2))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c2, c65)=(NULL, x'', '') WHERE t1.c1; -- 3ms;
UPDATE t1 SET c1=x'' WHERE '1215351548'; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE ((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c65 END) IS TRUE); -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=NULL, c65=0.8919829050761907, c65='v.T ' WHERE (- (INSTR(t1.c2, t1.c65))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE CASE WHEN ((t1.c2) IS TRUE) THEN (t1.c65 IN ()) ELSE ((t1.c65) IS FALSE) END; -- 0ms;
UPDATE t1 SET c65=x'', c65=x'' WHERE ((((t1.c1)<<(t1.c65))) NOT BETWEEN (LOWER(t1.c65)) AND ((((t1.c1, t1.c1, t1.c65))<=((t1.c2, t1.c1, t1.c2))))); -- 0ms;
UPDATE OR IGNORE t1 SET c1='-2041054445' WHERE SQLITE_VERSION(); -- 0ms;
UPDATE OR ABORT t1 SET c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE t1 SET (c2, c1)=(NULL, 0.9074185123699595); -- 0ms;
UPDATE OR IGNORE t1 SET c1='1482752928'; -- 0ms;
UPDATE OR FAIL t1 SET (c1)=('-1878981941') WHERE NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c1='1215351548'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'', c1=1.086237885E9, c2=0.21679475430436568; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('j') WHERE CAST(((t1.c65)!=(0.7810878795101246)) AS TEXT); -- 0ms;
UPDATE OR ABORT t1 SET (c2, c65)=('-2067746278', 8.32397362E8); -- 0ms;
UPDATE t1 SET (c1, c1, c2)=(x'', 0.8744632084786957, -1.878981941E9) WHERE t1.c2; -- 1ms;
UPDATE t1 SET (c65)=('-820887490') WHERE LOWER(DISTINCT (~ (t1.c65))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'', c1=x'705413e0' WHERE (((((t1.c1)) BETWEEN ((t1.c65)) AND ((t1.c2))))GLOB(t1.c65 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'ab0a') WHERE (+ (CAST(t1.c65 AS BLOB))); -- 0ms;
UPDATE t1 SET c2='+1[2RP' WHERE 0.029685534305701533; -- 0ms;
UPDATE OR IGNORE t1 SET c65='1751697625', c2=x'' WHERE ((CASE t1.c1  WHEN t1.c65 THEN t1.c65 ELSE t1.c2 END) IS FALSE); -- 0ms;
UPDATE OR IGNORE t1 SET c2='1121533359'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c2)=('ແ8', NULL) WHERE ((CAST(t1.c2 AS INTEGER))%(((t1.c2)|(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET c1='537881501'; -- 0ms;
UPDATE t1 SET (c65)=(0.6782550046774811) WHERE ((((((t1.c2)>=(x'd570')))OR(((t1.c2) BETWEEN (t1.c1) AND (t1.c1)))))OR(((((t1.c2)AND(t1.c1)))AND(t1.c1)))); -- 1ms;
UPDATE t1 SET c1=NULL WHERE ('-綈*U03l' IN (t1.c1, t1.c1)) COLLATE BINARY; -- 0ms;
UPDATE t1 SET c1='-1295785473'; -- 0ms;
UPDATE t1 SET c2=0.13007220473350634, c2=x'', c65=NULL; -- 0ms;
UPDATE t1 SET (c2)=(x'6910'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65, c2)=('0.6481211351024756', 8.32397362E8, x'') WHERE (NOT (((t1.c65)IS NOT(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE x'1c02c1e7'; -- 1ms;
UPDATE t1 SET (c2)=(0.23863339574591236) WHERE (((((+ (t1.c65)))OR(((((t1.c2)AND(t1.c1)))OR(t1.c2)))))AND(((t1.c1)<>(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'') WHERE ((t1.c65) ISNULL); -- 0ms;
UPDATE t1 SET (c2)=(NULL) WHERE ((t1.c1)>>(((x'') NOTNULL))); -- 1ms;
UPDATE OR IGNORE t1 SET (c1)=(-2041054445); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=('bo\nGiQ()'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65)=(x'7880', 1.215351548E9); -- 0ms;
UPDATE t1 SET c65=NULL; -- 0ms;
UPDATE t1 SET c1=x'9b1e' WHERE (((CASE t1.c65  WHEN t1.c1 THEN t1.c2 END))>=((((t1.c1)+(t1.c1))))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=537881501 WHERE (((~ (t1.c1))) BETWEEN (((((t1.c1)AND(0.859345900056271)))OR(NULL))) AND (TIME(t1.c2, t1.c65, t1.c1))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x''; -- 0ms;
UPDATE t1 SET c2='%K|A>︿y' WHERE (((t1.c65) IS TRUE) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL, c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2='-2070699535' WHERE CAST(t1.c1 AS BLOB); -- 0ms;
UPDATE t1 SET c65=''; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'11ad'); -- 0ms;
UPDATE OR ABORT t1 SET (c1, c65)=('426905943', NULL) WHERE ((((t1.c2)-(t1.c2)))>=(((t1.c1) IS TRUE))); -- 0ms;
UPDATE OR FAIL t1 SET (c1, c65)=(x'', NULL) WHERE CAST((NULL IN ()) AS BLOB); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x''); -- 0ms;
UPDATE t1 SET c2='W칇58풼^', c1=x'' WHERE ((((t1.c2)<=(t1.c65))) BETWEEN ('Z8') AND (TRIM(t1.c2, t1.c65))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(0.5530936977001277) WHERE ((CAST(t1.c2 AS TEXT))<<(t1.c1 COLLATE NOCASE)); -- 0ms;
UPDATE t1 SET c2=0.7774465831480277 WHERE (CAST(t1.c1 AS TEXT) IN (t1.c2 COLLATE RTRIM, (~ (t1.c2)))); -- 1ms;
UPDATE t1 SET (c1)=(0.6113343199148845); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.9854121080198904; -- 0ms;
UPDATE t1 SET c65=NULL WHERE CAST('' COLLATE NOCASE AS TEXT); -- 0ms;
UPDATE t1 SET (c2)=('537881501') WHERE ((((NULL)AND(t1.c65)))<(CAST(t1.c1 AS TEXT))); -- 0ms;
UPDATE t1 SET (c2)=(NULL) WHERE (((((((((((((t1.c1 IN ()))OR(((t1.c65)&(t1.c1)))))AND(((t1.c2) NOT BETWEEN (t1.c65) AND (t1.c1)))))AND(QUOTE(t1.c65))))AND(((t1.c65) IS TRUE))))AND(t1.c65 COLLATE RTRIM)))AND(((t1.c2)LIKE(t1.c1)))); -- 0ms;
UPDATE OR ABORT t1 SET c2=x'985a', c65=0.433371385082445 WHERE t1.c65; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x''; -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=(5.37881501E8) WHERE CAST(((t1.c2)<>(t1.c2)) AS REAL); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=''; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1='KF'; -- 0ms;
UPDATE t1 SET (c1, c1)=(0.03210957069122289, '-68246817') WHERE ((t1.c1 COLLATE BINARY)|(NULL)); -- 0ms;
UPDATE OR IGNORE t1 SET c2=',U,V}릫g퉍\' WHERE (((t1.c65, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, ((t1.c2)<<(t1.c65)), ((t1.c2) IS FALSE))) AND ((((t1.c1) NOT BETWEEN (t1.c65) AND (t1.c1)), '\nET7똄', t1.c65))); -- 0ms;
UPDATE t1 SET c2='0.8919829050761907' WHERE ((((((((((((((t1.c1)+(t1.c2)))AND((t1.c65 IN (NULL)))))AND(NULL COLLATE BINARY)))OR(x'')))OR(x'')))OR((((t1.c2, t1.c2, '468844100')) BETWEEN ((NULL, t1.c1, t1.c1)) AND ((t1.c2, t1.c2, x''))))))OR(GLOB(t1.c2, t1.c2))); -- 0ms;
UPDATE t1 SET c1=x'796a', c2=NULL; -- 0ms;
UPDATE t1 SET c65='sｵunn' WHERE ((((t1.c2) IS FALSE)) NOT BETWEEN (t1.c2) AND (((t1.c1)||(t1.c1)))); -- 0ms;
UPDATE OR REPLACE t1 SET c65=NULL; -- 0ms;
UPDATE OR FAIL t1 SET c65=NULL WHERE CAST(t1.c2 AS REAL) COLLATE BINARY; -- 0ms;
UPDATE t1 SET c65=1234685879 WHERE t1.c1; -- 1ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE CASE t1.c1 COLLATE BINARY  WHEN CASE t1.c1  WHEN t1.c65 THEN t1.c65 END THEN CHAR(t1.c1) WHEN ((t1.c65)OR(t1.c2)) THEN CASE WHEN t1.c1 THEN x'c82c' WHEN t1.c2 THEN x'' WHEN t1.c1 THEN t1.c65 ELSE NULL END WHEN CASE WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c65 WHEN t1.c65 THEN t1.c65 END THEN t1.c2 ELSE t1.c65 END; -- 0ms;
UPDATE OR IGNORE t1 SET c1='0.859345900056271'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.07583128262282979, c65=NULL, c2=''; -- 0ms;
UPDATE t1 SET (c65)=(')(5<~''~'); -- 0ms;
UPDATE t1 SET (c1, c65, c65)=('-2134138021', '0.9839013270082686', x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65, c1)=(0.4355842905621232, '', x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0x2b0617e8, c1=NULL WHERE (((NOT (t1.c2))) IS FALSE); -- 0ms;
UPDATE OR IGNORE t1 SET c65='0.029685534305701533', c1=x'b1ab'; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('') WHERE ABS(((t1.c2) IS FALSE)); -- 0ms;
UPDATE OR IGNORE t1 SET c2='553755413', c65=NULL, c65='BVmonthsx*\[m8v' WHERE ((((t1.c65)) NOT BETWEEN ((t1.c65)) AND ((t1.c65))) IN (((t1.c1) NOTNULL))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(-1928793345); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('169119239') WHERE (((((((((((t1.c2)) BETWEEN ((t1.c65)) AND ((t1.c2))))OR(t1.c65 COLLATE RTRIM)))OR(CASE WHEN t1.c2 THEN t1.c2 WHEN t1.c65 THEN t1.c2 WHEN t1.c65 THEN t1.c2 END)))AND(((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2)))))AND((- (t1.c2)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c65='' WHERE LOWER(t1.c2) COLLATE NOCASE; -- 0ms;
UPDATE t1 SET (c1)=(NULL) WHERE t1.c1; -- 0ms;
UPDATE t1 SET c2='0.6782550046774811', c2=-2070699535, c2=x'd967' WHERE ((t1.c1 IN ()) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('|') WHERE (((((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c2))))>((((t1.c1) NOT BETWEEN (t1.c65) AND ('-851342835'))))); -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(x''); -- 0ms;
UPDATE t1 SET c2=0Xffffffff86b8f9bd; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('F*!踆UMQ') WHERE ((((t1.c2, t1.c65, t1.c1))>=((t1.c65, t1.c2, t1.c65))) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c1='832397362', c1=NULL WHERE ((((((((((((((t1.c2)AND(t1.c1)))AND(t1.c65)))OR(t1.c65)))AND(t1.c2)))OR(t1.c1)))OR(t1.c65))) NOT BETWEEN ((NOT (t1.c65))) AND ((+ (t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x''); -- 1ms;
UPDATE OR IGNORE t1 SET c65='' WHERE ((CASE t1.c2  WHEN t1.c1 THEN t1.c65 END) IS TRUE); -- 0ms;
UPDATE OR FAIL t1 SET c1=x''; -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(0.8976164501959774) WHERE NULL; -- 0ms;
UPDATE t1 SET (c65, c1, c1)=('-820887490', x'', NULL) WHERE (((((((t1.c65)OR('-469251974')))AND(t1.c2))))>((((t1.c65)>=(t1.c1))))); -- 0ms;
UPDATE OR REPLACE t1 SET c2=0.5607350769341127, c1=x'', c65=NULL WHERE 0.22010649492198875; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.4375066060929934); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL, c2='168820597' WHERE ((CASE t1.c65  WHEN NULL THEN t1.c65 ELSE NULL END) BETWEEN (LIKELY(t1.c2)) AND (((t1.c2)AND(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(-1928793345) WHERE (CAST(t1.c65 AS INTEGER) IN ((((t1.c65))==((t1.c2))))); -- 0ms;
UPDATE OR FAIL t1 SET c65=NULL, c2=NULL, c2='' WHERE (((CAST(t1.c65 AS TEXT)))>=((((((t1.c1)OR(t1.c1)))OR(t1.c65))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65, c2)=(NULL, '5', x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(-1.608479226E9); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.7926908156504773, c2='598670911'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('*') WHERE (((t1.c1)OR(t1.c65)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c2)=(x'13cf', 0.17458085416751346) WHERE CASE WHEN (- (t1.c65)) THEN CAST(t1.c1 AS TEXT) END; -- 1ms;
UPDATE OR ROLLBACK t1 SET c65=-7.61982651E8, c2='395302076'; -- 0ms;
UPDATE OR FAIL t1 SET c65=x'', c1='-1657523181' WHERE ((UPPER(t1.c65))<=((((t1.c65)) BETWEEN ((t1.c1)) AND ((t1.c65))))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'4655'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-2041054445') WHERE (t1.c65 IN ()) COLLATE NOCASE; -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(0.006217968495764947) WHERE CAST(t1.c2 AS BLOB); -- 0ms;
UPDATE OR IGNORE t1 SET c2='', c2=0x337244c7; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE t1 SET (c65)=(NULL) WHERE t1.c2; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL) WHERE (- (((((0.13322963160121248)AND(t1.c1)))OR(t1.c2)))); -- 0ms;
UPDATE t1 SET (c2, c2)=(x'', '7xYm⫫e!Vt'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'') WHERE CASE ((((t1.c65)OR(t1.c2)))OR(t1.c2))  WHEN TYPEOF(t1.c65) THEN MIN(t1.c65, t1.c65) ELSE ((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c1)) END; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'', c65=x'' WHERE ((((((t1.c2)AND(t1.c1)))OR(t1.c65)))||(CAST(t1.c1 AS INTEGER))); -- 0ms;
UPDATE t1 SET c65=0xe9d4b20 WHERE ((((t1.c2)+(t1.c1))) NOT BETWEEN (((t1.c65) NOT NULL)) AND (((t1.c2)<=(t1.c65)))); -- 0ms;
UPDATE t1 SET (c65)=(-1969933302) WHERE ((((((t1.c1)AND(t1.c2)))AND(t1.c65))) NOTNULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1)=(0.21679475430436568, '!'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.7795503010596846) WHERE ((((((t1.c65)-(t1.c65)))AND(CHANGES())))OR(((t1.c2) NOT NULL))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=('H\'); -- 0ms;
UPDATE t1 SET (c2)=(x''); -- 3ms;
UPDATE OR IGNORE t1 SET (c65, c2)=(0.8261078169101426, 0.620115839141626) WHERE NULL COLLATE NOCASE; -- 0ms;
UPDATE OR REPLACE t1 SET c65=0x4160c1c4 WHERE (((((((((((('TRUE' COLLATE NOCASE)OR(((t1.c65)AND(t1.c2)))))OR(((0.7930096088631943)<<(t1.c1)))))OR(CASE WHEN t1.c2 THEN t1.c1 END)))OR(t1.c2 COLLATE BINARY)))OR(((t1.c1) ISNULL))))AND((t1.c2 IN ()))); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(0xffffffffd2951145); -- 0ms;
UPDATE t1 SET c1=x''; -- 1ms;
UPDATE OR IGNORE t1 SET (c2)=(x'cbe8'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE ((((CASE WHEN t1.c2 THEN t1.c65 ELSE t1.c65 END)OR((((x''))>=((t1.c2))))))AND(((t1.c1)<<(t1.c1)))); -- 0ms;
UPDATE OR ABORT t1 SET c65=NULL, c2=x'' WHERE LIKELY(((t1.c65)IS(t1.c2))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.620115839141626 WHERE CASE WHEN LIKELIHOOD(t1.c65, 0.8052856316922996) THEN ((t1.c1) ISNULL) ELSE t1.c2 END; -- 0ms;
UPDATE OR FAIL t1 SET c1=NULL, c65=NULL; -- 0ms;
UPDATE OR FAIL t1 SET (c1)=(x'2253') WHERE ((t1.c65 COLLATE BINARY)|(((((((((t1.c1)AND(t1.c1)))AND(t1.c2)))AND(t1.c65)))OR(t1.c1)))); -- 1ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE CAST(((((t1.c2)AND(t1.c65)))AND(t1.c65)) AS BLOB); -- 0ms;
UPDATE OR IGNORE t1 SET c65='-1370777911', c65=-2.070699535E9 WHERE ((t1.c2 COLLATE NOCASE) NOT NULL); -- 0ms;
UPDATE t1 SET (c1, c2)=(0Xffffffffd9bb22bc, '-1491401641') WHERE (- (((1)&(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0Xffffffffb3fc05dc) WHERE CAST((t1.c1 IN ()) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c1=''; -- 0ms;
UPDATE OR IGNORE t1 SET c1=')(5<~''~', c1=''; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE ((t1.c65) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 0ms;
UPDATE t1 SET (c65)=(x'') WHERE UNICODE((('-1608479226') BETWEEN (t1.c1) AND (NULL))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(0x6d26dab9); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE ((t1.c2) BETWEEN (t1.c1) AND (t1.c2)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET c1='-68246817', c65=2031802487, c2=1831262905 WHERE (- (CAST(t1.c2 AS NUMERIC))); -- 0ms;
UPDATE t1 SET (c65)=(NULL); -- 0ms;
UPDATE t1 SET (c65)=('') WHERE (((t1.c1 IN ())) ISNULL); -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=0.8031005673931514 WHERE NULL; -- 0ms;
UPDATE OR FAIL t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.13322963160121248 WHERE (((t1.c65)) BETWEEN ((CAST(t1.c2 AS TEXT))) AND ((CASE t1.c1  WHEN t1.c2 THEN t1.c1 END))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65, c1)=(x'59fa', 1.914990562E9, 0.17458085416751346) WHERE ((((t1.c1)<>(t1.c65)))<>(t1.c65 COLLATE RTRIM)); -- 1ms;
UPDATE OR IGNORE t1 SET (c65, c1)=('-1460095560', 0.37362630073682546); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE TRIM(DISTINCT CASE t1.c65  WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x''; -- 0ms;
UPDATE OR ABORT t1 SET (c2)=('v?') WHERE CAST(t1.c65 AS TEXT); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('usfx5(H1') WHERE t1.c65; -- 0ms;
UPDATE OR IGNORE t1 SET c65='㐓Qo' WHERE CAST(t1.c2 AS BLOB); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE (((t1.c65)) NOT BETWEEN ((((t1.c2) IS TRUE))) AND (((((('')AND(t1.c2)))AND(t1.c1))))); -- 0ms;
UPDATE OR REPLACE t1 SET c1=0x1f0b435c; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c65=x'9b80', c2='FALSE' WHERE ((t1.c1)%(t1.c2)) COLLATE BINARY; -- 0ms;
UPDATE t1 SET c2=395302076 WHERE (((t1.c2)) NOT BETWEEN ((((((((((t1.c1)AND(t1.c65)))AND(t1.c1)))AND(0.709315907327262)))AND(t1.c65)))) AND (((x'' IN (t1.c65, t1.c2))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c2)=(x'', 'EpO.G6v︿') WHERE (((t1.c65)) NOT BETWEEN (((((t1.c65))>((t1.c1))))) AND ((((t1.c2)%(t1.c1))))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=169119239 WHERE (('537881501') NOT BETWEEN (CAST(t1.c65 AS TEXT)) AND (t1.c65)); -- 1ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 1ms;
UPDATE t1 SET c1='-1295785473', c1='-937992704'; -- 0ms;
UPDATE t1 SET c2=NULL, c65=0.2635312952702473 WHERE (((((((((t1.c2 IN (t1.c2)))AND(((t1.c65)OR(t1.c2)))))OR(((((((((t1.c1)AND(t1.c2)))OR(t1.c65)))AND(t1.c2)))AND(t1.c65)))))AND(((t1.c2) BETWEEN (t1.c2) AND (t1.c65)))))OR(CAST(t1.c2 AS TEXT))); -- 0ms;
UPDATE t1 SET (c65, c1, c1)=('2004414601', '', NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c2, c65)=('	', NULL, '1604528822') WHERE t1.c2; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'') WHERE ((t1.c2)+('ﬓ')) COLLATE BINARY; -- 0ms;
UPDATE t1 SET (c65)=('-1878981941'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE (((t1.c65)>=(t1.c65)) IN (((((t1.c65)OR(t1.c2)))AND(t1.c65)), (+ (t1.c65)))); -- 0ms;
UPDATE t1 SET c2=NULL, c1=NULL WHERE x''; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=x'' WHERE ((((((t1.c65)OR(t1.c65)))OR(t1.c2))) NOT BETWEEN (t1.c65) AND ((t1.c1 IN (t1.c65, t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.17853066147755858 WHERE 'Mh6Tk'; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1)=('0.9074185123699595', 0.005148537024371569); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'') WHERE HEX(DISTINCT ((t1.c1) IS TRUE)); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR REPLACE t1 SET c2=x'9bbb' WHERE ((((t1.c65)<(t1.c2)))OR(x'')); -- 0ms;
UPDATE t1 SET c1='', c2=552708111 WHERE NULL; -- 0ms;
UPDATE t1 SET c65=-1830126314; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1)=('-1491401641', NULL) WHERE CAST(((((t1.c1)OR(t1.c1)))AND('')) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t1 SET c2=')(5<~''~', c1=NULL, c1=5.56077255E8; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(208361756) WHERE (((t1.c2, t1.c1, t1.c1)) BETWEEN (((+ (t1.c65)), ((t1.c1)>=(t1.c1)), t1.c2 COLLATE RTRIM)) AND (((t1.c2 IN ()), CASE WHEN t1.c1 THEN t1.c65 ELSE 0.8275112834789509 END, (- (t1.c1))))); -- 0ms;
UPDATE OR REPLACE t1 SET c2=x'' WHERE t1.c65; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('1395532344') WHERE t1.c65; -- 0ms;
UPDATE OR IGNORE t1 SET c2='522168937', c65='Pం' WHERE CASE ((NULL) NOTNULL)  WHEN (('0.9854121080198904') NOT NULL) THEN '536958468' WHEN ((t1.c1)>>(t1.c1)) THEN (((t1.c2, t1.c1, t1.c65, t1.c2, t1.c65)) NOT BETWEEN ((t1.c2, '-1556942765', t1.c1, t1.c65, x'6809')) AND ((t1.c2, t1.c65, t1.c2, NULL, t1.c65))) WHEN t1.c2 COLLATE NOCASE THEN ((((((((((((t1.c2)OR(t1.c1)))AND(t1.c65)))OR(t1.c2)))AND(t1.c1)))AND(t1.c1)))AND(t1.c65)) ELSE ((0.24113379635384036) NOT BETWEEN (t1.c1) AND (t1.c1)) END; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x''; -- 0ms;
UPDATE t1 SET c2=x'', c2=0.007550103924562901; -- 1ms;
UPDATE OR ROLLBACK t1 SET c1=-8.2088749E8, c2=x'', c2=0.9089123506225866; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE (~ (((((0.21243657126964144)OR(t1.c65)))OR(t1.c1)))); -- 0ms;
UPDATE OR FAIL t1 SET c65=x'', c65='-971001750'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=-4.69251974E8 WHERE t1.c65; -- 0ms;
UPDATE t1 SET c65='1085863486' WHERE ((t1.c1) IS TRUE) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1='863126727'; -- 0ms;
UPDATE OR FAIL t1 SET c2=NULL WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE t1 SET (c2)=('㐓qo') WHERE CASE WHEN CASE t1.c1  WHEN t1.c2 THEN t1.c2 END THEN CASE WHEN t1.c65 THEN t1.c2 END WHEN ((t1.c1) ISNULL) THEN CAST(t1.c65 AS INTEGER) WHEN CAST(t1.c2 AS BLOB) THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c65 THEN t1.c2 WHEN t1.c2 THEN t1.c2 WHEN t1.c65 THEN t1.c65 WHEN t1.c65 THEN t1.c65 ELSE t1.c1 END END; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2)=('Zo3C79', NULL) WHERE ((CAST(t1.c2 AS INTEGER))+(CAST(t1.c65 AS TEXT))); -- 0ms;
UPDATE t1 SET c65=NULL WHERE ((((((t1.c1)) NOT BETWEEN ((t1.c65)) AND ((t1.c65)))))>=((((t1.c1) NOT NULL)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.7034708475789984 WHERE '2031802487'; -- 0ms;
UPDATE OR REPLACE t1 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x''); -- 0ms;
UPDATE t1 SET (c1)=(0.7196315638685629); -- 0ms;
UPDATE t1 SET c65=x'2253' WHERE NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=('0.8031005673931514'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1, c1)=(473235751, '', 0.5810805655167718); -- 0ms;
UPDATE t1 SET (c1)=('207182364') WHERE IFNULL(((t1.c1)OR(t1.c1)), ((t1.c65)|(t1.c65))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.4144007369262849, c65='0.17458085416751346', c2=NULL; -- 1ms;
UPDATE OR ROLLBACK t1 SET (c1)=(x'') WHERE ((t1.c65 COLLATE NOCASE) NOTNULL); -- 0ms;
UPDATE t1 SET (c65, c2, c1)=('1346505730', x'', x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2, c1)=(1.085863486E9, 0.6839737682108025, -1637305753); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-181740096') WHERE (t1.c1 IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.05666539886071287, c2='1914990562' WHERE (NOT ((NOT (t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'64d7'); -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=('답R') WHERE ((((t1.c65) BETWEEN (t1.c1) AND (t1.c2))) NOT BETWEEN (((t1.c1)-(t1.c1))) AND (NULL)); -- 0ms;
UPDATE t1 SET (c65)=('TRUE'); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'', c1=x'' WHERE (((((t1.c65)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))))+(CAST(t1.c65 AS BLOB))); -- 0ms;
UPDATE t1 SET (c2, c65)=(1031204038, 0.5240983891896946); -- 0ms;
UPDATE t1 SET c1=x'' WHERE CAST(json_remove(t1.c2, t1.c1, t1.c65, t1.c1) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.22457107604455062; -- 0ms;
UPDATE t1 SET c2='N_왜칵칇y' WHERE (((t1.c2)) BETWEEN ((((((t1.c2)OR(t1.c2)))AND(t1.c2)))) AND ((ABS(DISTINCT t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('-58855952'); -- 0ms;
UPDATE t1 SET c1=0Xffffffffae4b96c9; -- 0ms;
UPDATE t1 SET (c2)=('556077255') WHERE (((((((t1.c1)OR(t1.c65)))OR(t1.c65))))<=((((t1.c2) NOT BETWEEN (t1.c65) AND (t1.c65))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1)=(0.3026632146030218, '1751697625'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('-2041054445'); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE ((((t1.c2)<<(t1.c65))) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL, c65=x'15499321', c65=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('-325548373') WHERE CAST((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c1))) AS BLOB); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=0.8561784474563501 WHERE (NOT (json_patch(NULL, t1.c1))); -- 1ms;
UPDATE OR IGNORE t1 SET (c2)=(x'61c5230e') WHERE t1.c1; -- 0ms;
UPDATE OR FAIL t1 SET c65=0Xffffffffe2e57be4 WHERE t1.c65 COLLATE RTRIM; -- 0ms;
UPDATE OR ABORT t1 SET c2='1641612879' WHERE (rtreenode(t1.c65, t1.c1) IN ()); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('') WHERE ((((t1.c1) ISNULL))%(((((((((((((t1.c65)AND(t1.c2)))AND(t1.c65)))OR(t1.c2)))AND(t1.c65)))AND(t1.c65)))AND(t1.c2)))); -- 0ms;
UPDATE OR FAIL t1 SET (c2)=(0X3a0c95e5); -- 0ms;
UPDATE OR IGNORE t1 SET c1='jKsi1SO', c65=0.7700918630112398; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.6940120870211581 WHERE ((CAST(t1.c2 AS INTEGER))>=((((t1.c2))>((t1.c65))))); -- 0ms;
UPDATE t1 SET (c1)=('\nW') WHERE CASE WHEN ((t1.c1)IS(t1.c1)) THEN t1.c2 WHEN ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c65)) THEN LIKE(t1.c2, t1.c65) WHEN ((t1.c1)*(t1.c1)) THEN TYPEOF(t1.c65) END; -- 0ms;
UPDATE OR FAIL t1 SET c1='1641612879'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0xffffffff9e1fa61e) WHERE (NOT ((t1.c2 IN ()))); -- 1ms;
UPDATE OR IGNORE t1 SET (c2)=(0.9894707066673714); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL, c1='1294911993'; -- 0ms;
UPDATE OR IGNORE t1 SET c1='\nET7똄'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=4.73235751E8, c65=NULL WHERE PRINTF(t1.c1, CAST(t1.c65 AS REAL), (t1.c2 IN ())); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE CAST(((t1.c2) NOTNULL) AS INTEGER); -- 1ms;
UPDATE OR ABORT t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(1948991400) WHERE (+ (t1.c2 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.533523330696404) WHERE (((((t1.c1)+(t1.c1))))<((IFNULL(DISTINCT t1.c1, t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('k^K') WHERE ((((t1.c2)IS NOT(t1.c1))) BETWEEN (t1.c65) AND (((((t1.c2)AND(t1.c1)))OR(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0x40beacbd) WHERE (NOT (CAST(t1.c1 AS TEXT))); -- 0ms;
UPDATE t1 SET (c65)=('us'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(1385481820) WHERE ((t1.c2 COLLATE RTRIM) NOTNULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR ABORT t1 SET c65='-116875205', c2=NULL, c65=-2067746278 WHERE CAST(((((NULL)OR(t1.c1)))AND(t1.c2)) AS REAL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.9236500432030432) WHERE (((t1.c1) NOT NULL) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(-1.608479226E9) WHERE (((((t1.c2)<(t1.c65)), TRIM(DISTINCT t1.c1, t1.c1), t1.c1))>=((CASE WHEN t1.c1 THEN t1.c2 WHEN 'uFy2\nb4' THEN t1.c2 WHEN t1.c1 THEN t1.c2 END, ((t1.c65)%(t1.c1)), CAST(t1.c65 AS NUMERIC)))); -- 0ms;
UPDATE t1 SET (c1)=('1'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.6510876083181066; -- 0ms;
UPDATE OR IGNORE t1 SET c1='567660883', c1=365224881, c2=0.36614796858082144 WHERE (x'' IN ((t1.c1 IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.09505315971475903); -- 1ms;
UPDATE t1 SET c65=0.1744664333425937; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('|') WHERE ((t1.c1) IS FALSE) COLLATE BINARY; -- 0ms;
UPDATE t1 SET (c2)=('-1613309082') WHERE ((LENGTH(t1.c1)) NOTNULL); -- 0ms;
UPDATE t1 SET c2=0.13322963160121248; -- 0ms;
UPDATE OR IGNORE t1 SET c65='473235751'; -- 0ms;
UPDATE t1 SET (c1)=(0xffffffffa06df037); -- 0ms;
UPDATE t1 SET c65=x'1ae7'; -- 0ms;
UPDATE OR ABORT t1 SET c1=NULL WHERE ((t1.c1) IS TRUE) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t1 SET c1='473235751' WHERE (- (((t1.c2) NOT NULL))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=0Xffffffffb3fc05dc, c65=x'971d'; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2, c1)=(-1.81740096E8, x'', NULL) WHERE (((((((t1.c1)OR('')))AND(t1.c65))))>=(((('-1878981941')|(t1.c2))))); -- 0ms;
UPDATE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE t1 SET c65=0.3271672102505442, c2=NULL WHERE ((((t1.c65)|(t1.c2))) ISNULL); -- 0ms;
UPDATE t1 SET c2='-1969933302'; -- 0ms;
UPDATE OR FAIL t1 SET (c1, c2)=(0.709315907327262, NULL); -- 0ms;
UPDATE OR FAIL t1 SET (c2)=(''); -- 0ms;
UPDATE OR IGNORE t1 SET c65='J_\r#', c1='sCJ' WHERE (((t1.c1)) NOT BETWEEN ((((NULL) NOTNULL))) AND ((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1))))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x''; -- 0ms;
UPDATE t1 SET c2='wn' WHERE ((CASE WHEN t1.c2 THEN t1.c1 END) IS TRUE); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.9738398153685863); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('') WHERE t1.c2; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('ᳵt?RX3f|ᅅ'); -- 0ms;
UPDATE OR FAIL t1 SET c1='' WHERE NULL COLLATE BINARY; -- 0ms;
UPDATE OR REPLACE t1 SET (c1, c65)=('536958468', NULL) WHERE ((((t1.c1)=(t1.c65))) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2=-1151424946 WHERE x''; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL, c1='5!^TrAUM' WHERE CAST(NULLIF(t1.c65, t1.c1) AS INTEGER); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=('⌱\rcἯꋟ*d9m') WHERE (- (((t1.c2)||(t1.c2)))); -- 0ms;
UPDATE t1 SET (c1, c1)=(0.5607350769341127, x''); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE t1.c2; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c65)=(6.8492507E8, x'0244') WHERE ((t1.c65 COLLATE NOCASE) ISNULL); -- 0ms;
UPDATE t1 SET c2=0.13397891829182207 WHERE (((t1.c65)) BETWEEN ((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1)))) AND ((((((t1.c65)AND(t1.c2)))AND(t1.c1))))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2, c2, c2)=(0.8005092500234494, 1528217480, NULL) WHERE (NULL IN ()) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c1=1346505730, c65=NULL, c1='g#\ni'; -- 0ms;
UPDATE t1 SET c65=-1717165705, c2=0.18559221748748178 WHERE NULL; -- 1ms;
UPDATE OR FAIL t1 SET c65=0.433371385082445 WHERE (((CASE WHEN t1.c65 THEN t1.c2 END))<=((((t1.c65)=(0.4841060611533077))))); -- 0ms;
UPDATE OR IGNORE t1 SET c2='0.9894707066673714'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65, c65)=(0.5679752918952797, NULL, NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.5530936977001277) WHERE (((~ (t1.c1))) NOT BETWEEN (((t1.c2) BETWEEN (t1.c65) AND (t1.c65))) AND ((((t1.c1))>((t1.c65))))); -- 1ms;
UPDATE OR IGNORE t1 SET (c2)=('1547795864') WHERE NULL; -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=(-2.034697795E9) WHERE CASE WHEN ((((((((t1.c1)OR(t1.c2)))OR(0.9267744171271265)))AND(t1.c1)))AND(t1.c1)) THEN HEX(t1.c2) END; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL; -- 0ms;
UPDATE OR ABORT t1 SET (c2, c2, c2)=(x'', 'M]', -1275329060); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.5830782882879408, c65=NULL WHERE ((((t1.c1)GLOB(t1.c1))) NOT BETWEEN (t1.c2) AND ((t1.c1 IN ()))); -- 1ms;
UPDATE OR IGNORE t1 SET (c1, c1)=(NULL, NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=-704409705; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.4479459242613356; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-434867579'); -- 1ms;
UPDATE OR IGNORE t1 SET c2='hnzv\l', c1=0.5622360129172099; -- 0ms;
UPDATE OR IGNORE t1 SET c65='-579154361'; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(0.4147157716403481); -- 0ms;
UPDATE t1 SET c1=NULL WHERE ((SQLITE_COMPILEOPTION_GET(t1.c65)) BETWEEN (((t1.c2)>(t1.c65))) AND (t1.c2)); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('0.37362630073682546') WHERE ((t1.c1) IS TRUE); -- 1ms;
UPDATE OR IGNORE t1 SET c65=0.5607350769341127; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.6762276018965433, c1='1385481820', c65=0.8275112834789509; -- 0ms;
UPDATE t1 SET c65=0xffffffffbf908206 WHERE ((((((t1.c65, t1.c65, t1.c2, t1.c1, t1.c1))=((0.2944148525585619, t1.c1, x'', t1.c1, t1.c1)))))=((t1.c2 COLLATE NOCASE))); -- 1ms;
UPDATE OR REPLACE t1 SET (c1)=(x'9f80'); -- 0ms;
UPDATE t1 SET c1=x'', c65='Y㴽H^IB' WHERE ((((t1.c1) IS FALSE)) BETWEEN (((t1.c1)/(t1.c65))) AND (CAST(t1.c65 AS BLOB))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0xffffffffac82cbed; -- 0ms;
UPDATE t1 SET c1='' WHERE (~ (((t1.c65) NOT BETWEEN (t1.c65) AND (x'')))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(''); -- 0ms;
UPDATE OR ABORT t1 SET (c65)=(x''); -- 0ms;
UPDATE OR REPLACE t1 SET c1=x'' WHERE (((t1.c2) BETWEEN (t1.c65) AND (x'')) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c1='804943175' WHERE ((((((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c65)))AND(((((t1.c1)OR(t1.c2)))AND(t1.c2)))))OR(((t1.c2)=(t1.c2)))))AND(x'')))AND((('832397362')=(t1.c2)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(0.28817475185316055); -- 0ms;
UPDATE OR REPLACE t1 SET c1='173205989' WHERE ((DATE(t1.c65, 0.4976707005757426, '-2040064322', t1.c2, t1.c2))>(((t1.c2) NOT BETWEEN (t1.c65) AND (t1.c65)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=x'' WHERE ((((t1.c1)*(NULL))) NOT BETWEEN (CHANGES()) AND (((t1.c65)+(t1.c1)))); -- 1ms;
UPDATE t1 SET (c65, c1, c1)=('125233285', x'726c9511', '鱓Z\z걿6eC'); -- 0ms;
UPDATE OR IGNORE t1 SET c65=''; -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=0.9861813062381792; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE ((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c1)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('0.006217968495764947'); -- 0ms;
UPDATE OR ROLLBACK t1 SET c2='-2039452663' WHERE (+ (((t1.c65) BETWEEN (t1.c65) AND (t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.01997512633830334 WHERE ((t1.c1) NOT BETWEEN (NULLIF(DISTINCT x'd907', t1.c2)) AND (CASE WHEN t1.c2 THEN t1.c2 END)); -- 0ms;
UPDATE t1 SET c65=0.21679475430436568 WHERE (((t1.c1)) NOT BETWEEN ((((t1.c2)+(t1.c65)))) AND ((IFNULL(DISTINCT t1.c1, x'20a0')))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=1374012748, c1='qiyg5' WHERE ((((-2.070699535E9)OR(((t1.c1) ISNULL))))AND(CAST(t1.c1 AS REAL))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL, c65=0.5204647827923454 WHERE ((((NULLIF(DISTINCT t1.c65, x''))AND(((t1.c1)||(t1.c1)))))OR(((',xGm')!=(t1.c2)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=x'cc28' WHERE ((((((((t1.c1)OR(t1.c2)))AND(t1.c2)))AND('647s+N>t')))OR(t1.c65)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.5322077369373062; -- 0ms;
UPDATE t1 SET c65='-1608479226'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 1ms;
UPDATE OR REPLACE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c2)=(0.6114753827173284, 1.351268349E9); -- 0ms;
UPDATE OR IGNORE t1 SET c2='', c1=NULL; -- 0ms;
UPDATE OR FAIL t1 SET c65=NULL, c65=0.7857070255418154 WHERE CASE WHEN ((t1.c65) ISNULL) THEN ((((t1.c2)AND('(噇xKE')))AND(t1.c65)) ELSE t1.c65 END; -- 0ms;
UPDATE OR IGNORE t1 SET c65=2.004414601E9 WHERE (((~ (0.02826298029251406)))>(((t1.c65)&(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'' WHERE ((0.6073331004677595)<<(t1.c1 COLLATE NOCASE)); -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=-5.79154361E8; -- 0ms;
UPDATE OR ABORT t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1='-1603407817', c1='-1642093026', c1=0.6073331004677595; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.6263878568735209 WHERE ((CAST(t1.c2 AS TEXT))IS NOT(CAST(t1.c65 AS BLOB))); -- 1ms;
UPDATE OR IGNORE t1 SET c2=0.20020945693694692 WHERE (~ ((- (t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'7d5d'; -- 0ms;
UPDATE t1 SET c1=x'' WHERE CAST((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c65))) AS TEXT); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=0.16698565676591703; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL, c65='F\n'; -- 0ms;
UPDATE OR ABORT t1 SET c65=0.1192422679551185 WHERE CASE WHEN (((t1.c65, t1.c65, '[D'))!=((t1.c1, t1.c2, t1.c65))) THEN t1.c1 END; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('') WHERE ((x'') BETWEEN (((((t1.c2)AND(t1.c1)))OR(t1.c1))) AND (x'')); -- 0ms;
UPDATE t1 SET (c1)=(x'') WHERE CAST(t1.c2 COLLATE BINARY AS REAL); -- 0ms;
UPDATE t1 SET (c1)=('pi') WHERE CASE (t1.c1 IN ())  WHEN CAST(t1.c2 AS INTEGER) THEN ((t1.c65)>=(t1.c65)) ELSE ((((t1.c2)OR(t1.c1)))AND(t1.c65)) END; -- 0ms;
UPDATE t1 SET c65='zC\nqM'''; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE (((t1.c2)) BETWEEN ((CAST(t1.c1 AS INTEGER))) AND ((((t1.c2)/(t1.c1))))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65='-2134138021', c2=0.4044651707427318 WHERE 0.9074185123699595; -- 1ms;
UPDATE OR REPLACE t1 SET (c65, c2, c65)=('댶r4⢙', x'', 0.6100256105077245) WHERE LIKELY(DISTINCT ((t1.c65) BETWEEN (t1.c1) AND (t1.c2))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.40688715941628195; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE t1.c2; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'411a' WHERE (((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2))))>(((((t1.c2, t1.c65, t1.c65, t1.c1, NULL)) BETWEEN ((t1.c1, t1.c1, t1.c65, t1.c65, t1.c65)) AND ((t1.c65, t1.c1, t1.c2, t1.c65, t1.c65)))))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'', c1=NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=NULL WHERE ((t1.c1)-(t1.c65)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c1='-1918058432' WHERE t1.c2; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE ((((((((((NULL)|(NULL)))OR(t1.c65 COLLATE BINARY)))OR(((((-2.051737996E9)AND(t1.c1)))AND(t1.c65)))))AND(0.37640880831716483)))OR(((t1.c1)%(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('-251293289') WHERE CASE t1.c1  WHEN (t1.c65 IN ()) THEN t1.c65 COLLATE BINARY WHEN ((0.36695465563825047) NOT NULL) THEN (((t1.c65, t1.c65, t1.c65))>((t1.c2, t1.c65, t1.c65))) WHEN CAST(t1.c2 AS TEXT) THEN (((t1.c65)) BETWEEN ((t1.c1)) AND ((t1.c65))) END; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=NULL WHERE (((('-155137481')>=(t1.c2))) BETWEEN ((- (t1.c1))) AND (((((t1.c2)OR(t1.c1)))OR(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1)=('o3', 0.011392217667538285); -- 0ms;
UPDATE t1 SET (c1)=('-2041054445'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE t1 SET (c65, c2)=(NULL, 2.08361756E8) WHERE ((ABS(DISTINCT t1.c2)) NOT BETWEEN (CAST(t1.c65 AS INTEGER)) AND (((t1.c65)<(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'') WHERE (((t1.c2 IN ()))>=(NULLIF(t1.c1, 'Zo3C79'))); -- 0ms;
UPDATE OR ABORT t1 SET c2=x'43cb'; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('') WHERE HEX(t1.c2) COLLATE NOCASE; -- 0ms;
UPDATE t1 SET c1=x'' WHERE ((((t1.c1) ISNULL))AND(CASE t1.c2  WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c2 WHEN t1.c65 THEN t1.c65 WHEN t1.c65 THEN t1.c1 END)); -- 0ms;
UPDATE OR ABORT t1 SET (c1, c2)=(0.6782550046774811, NULL); -- 1ms;
UPDATE OR REPLACE t1 SET (c1)=(0x629843c3); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0X75e80d7b, c1=-2012145746, c2=0x2a246cbc; -- 0ms;
UPDATE OR IGNORE t1 SET c2='0.6940120870211581', c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x''; -- 0ms;
UPDATE t1 SET c1=x'' WHERE SQLITE_VERSION(); -- 0ms;
UPDATE t1 SET c2='-1608479226'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL, c2=0.9732644116159774 WHERE (~ (t1.c65)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(''); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.368937580863985, c1=x''; -- 1ms;
UPDATE t1 SET (c1, c2)=(x'', 0x5f83059b) WHERE ((((NULL)) BETWEEN ((t1.c65)) AND ((t1.c65))) IN ()); -- 1ms;
UPDATE OR IGNORE t1 SET c2=''; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.9643048052389324; -- 0ms;
UPDATE t1 SET (c1, c2)=(0Xffffffff8bcbe56a, NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'19e3'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE ((t1.c2)>>((('')LIKE(0.9217641453144133)))); -- 0ms;
UPDATE t1 SET (c2)=(x'') WHERE COALESCE(DISTINCT CASE WHEN t1.c65 THEN t1.c2 ELSE t1.c2 END, ((t1.c65) NOT BETWEEN (t1.c1) AND (t1.c1))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'' WHERE (((((((((((t1.c65)OR(t1.c1)))AND(t1.c2)))OR(t1.c1)))AND(t1.c65))))<=((((((((((x'')AND(t1.c65)))AND(t1.c2)))AND(0.6481211351024756)))OR(t1.c1))))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE CAST(CASE WHEN t1.c65 THEN t1.c1 WHEN NULL THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN t1.c65 THEN t1.c2 WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c2 ELSE t1.c1 END AS TEXT); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(1320184792) WHERE (- (((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c1)))); -- 0ms;
UPDATE t1 SET (c65, c2, c2)=('0.029685534305701533', 'wJj&GQ', 'e\l/\n\rF'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE (- (t1.c2)) COLLATE RTRIM; -- 0ms;
UPDATE t1 SET (c1, c2, c65)=(x'', -1057454215, x'') WHERE (('') NOTNULL); -- 0ms;
UPDATE OR REPLACE t1 SET c1=x'', c1='1031204038', c65=NULL WHERE '26660469'; -- 0ms;
UPDATE t1 SET (c65)=('686926531') WHERE ((~ (t1.c2)) IN ()); -- 0ms;
UPDATE t1 SET c1=0.713167110553383 WHERE (NOT (((t1.c65)>>(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1)=(x'', x'') WHERE ((~ (t1.c2)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'dc66') WHERE (((((t1.c1)) NOT BETWEEN ((t1.c65)) AND ((t1.c2))))&((((t1.c1, t1.c65, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c65, t1.c2, t1.c2))))); -- 1ms;
UPDATE OR IGNORE t1 SET c1=x'', c1=NULL, c1=-2.134138021E9 WHERE ((((t1.c65)/(t1.c1))) BETWEEN (0.2937658866466395) AND ((((t1.c65)) BETWEEN ((t1.c1)) AND ((t1.c2))))); -- 1ms;
UPDATE OR IGNORE t1 SET (c2)=(0.7510618879854503) WHERE (((((t1.c65)>>(t1.c2)), (((t1.c65))>=((t1.c1))), ((t1.c2)|(t1.c1))))>(((('[*c	yOC\U') ISNULL), (- (t1.c2)), ((((((((t1.c65)OR(t1.c2)))OR(t1.c2)))AND(t1.c2)))OR(t1.c1))))); -- 0ms;
UPDATE OR ABORT t1 SET (c65, c2, c1)=('-1787622885', NULL, 'zLጜ/倩	q\{') WHERE (t1.c65 IN ()) COLLATE BINARY; -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=('0.1192422679551185') WHERE t1.c1; -- 0ms;
UPDATE t1 SET (c1)=('㐓Qo'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(''); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('-402122015') WHERE x'4fd2' COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(9.80217077E8) WHERE JULIANDAY(((NULL) BETWEEN (t1.c2) AND (t1.c65)), t1.c65, LIKELY(DISTINCT t1.c65)); -- 0ms;
UPDATE OR ABORT t1 SET (c1, c65)=(0.13397891829182207, 0.0900409614159946) WHERE t1.c65; -- 0ms;
UPDATE OR ABORT t1 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.7245966735847809 WHERE CAST((+ (t1.c65)) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('') WHERE ((((t1.c65))>((t1.c2))) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'') WHERE (((((- (t1.c65)))AND(t1.c1)))OR(((NULL)*(t1.c2)))); -- 0ms;
UPDATE OR REPLACE t1 SET (c65)=('118207880'); -- 1ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE (((((t1.c1)<<(t1.c2)), CASE t1.c65  WHEN t1.c1 THEN t1.c2 WHEN '556077255' THEN t1.c65 WHEN t1.c2 THEN t1.c2 END, (t1.c2 IN ())))>=((((t1.c2)OR(t1.c2)), ABS(NULL), CAST(t1.c2 AS BLOB)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2='g\rq' WHERE ((((t1.c1 COLLATE NOCASE)AND(((t1.c1)OR(t1.c65)))))OR(((t1.c2)<>(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET c1='-761982651'; -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(x'd4ec') WHERE (((0x2b967acf)) NOT BETWEEN (((t1.c65 IN ()))) AND ((((t1.c2) NOT BETWEEN (t1.c1) AND ('v?'))))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c65=-1.657523181E9, c65=0.5457690107160932 WHERE t1.c65 COLLATE NOCASE; -- 0ms;
UPDATE t1 SET (c2, c1, c2)=('v.T ', NULL, NULL) WHERE CAST(((((((((t1.c2)AND(t1.c65)))OR(t1.c65)))AND(t1.c1)))AND(t1.c2)) AS TEXT); -- 1ms;
UPDATE OR ABORT t1 SET c2='' WHERE (((((t1.c2) ISNULL), '\nwXPN-e끪', ((t1.c2) NOT BETWEEN (t1.c2) AND ('Yu1'))))<=((TYPEOF(t1.c1), ((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c2)), ((t1.c2) BETWEEN (t1.c2) AND (t1.c65))))); -- 0ms;
UPDATE t1 SET c1='' WHERE (((((t1.c65)) BETWEEN ((t1.c65)) AND ((t1.c2))))OR(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c1=x'', c1=-6.8246817E7; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'' WHERE ((('575150652')<(t1.c1)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.08981778054124978, c65=x'' WHERE ((((t1.c2) NOT NULL))OR(((0Xffffffff9ecef9a8) IS TRUE))); -- 0ms;
UPDATE t1 SET (c65, c65)=('1385481820', 'Wf-n>)') WHERE ((t1.c2) IS FALSE); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.006217968495764947, c2=-4.69251974E8; -- 1ms;
UPDATE OR IGNORE t1 SET c1=0.4961829604299972; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c2)=('573095237', NULL); -- 0ms;
UPDATE t1 SET (c1)=('Y㴽H^IB'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 1ms;
UPDATE OR IGNORE t1 SET c65='1893145267' WHERE '-1878981941'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.11726447516542626, c1=0.40688715941628195, c2=x'' WHERE UNICODE(t1.c2) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('-276274886'); -- 1ms;
UPDATE OR IGNORE t1 SET (c1)=('2004414601') WHERE (- (t1.c2 COLLATE RTRIM)); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(x'') WHERE GLOB(CASE t1.c1  WHEN t1.c65 THEN t1.c1 WHEN 0x5fa32ab6 THEN 0.7308683912994464 WHEN t1.c65 THEN t1.c1 ELSE t1.c65 END, ((t1.c2) NOTNULL)); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c1=''; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.7966695732623984; -- 0ms;
UPDATE OR ROLLBACK t1 SET c65='971149040' WHERE ((t1.c65)*((t1.c65 IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.17137233353934) WHERE ((((((t1.c2)-(t1.c1)))AND(0.2807455060836087)))AND(((((t1.c2)AND(t1.c65)))OR(t1.c1)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1, c2)=(0.3801623451971655, NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2, c1)=('832397362', x'5d2d', x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('') WHERE ((((('305107334', 0.11025013531854644, t1.c1))<((t1.c65, t1.c65, t1.c1)))) NOT NULL); -- 1ms;
UPDATE OR IGNORE t1 SET c2=0.9665358468829869; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(1521574165) WHERE ((((((t1.c1)AND(t1.c65)))AND(t1.c1))) IS FALSE); -- 0ms;
UPDATE t1 SET (c65)=(-2.070699535E9); -- 0ms;
UPDATE t1 SET (c2, c2)=(x'9554', x'') WHERE LTRIM(((t1.c1) NOT BETWEEN (x'') AND (t1.c2))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1)=(x'785d023d', '') WHERE CASE WHEN t1.c2 THEN t1.c1 END COLLATE BINARY; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2, c1)=('169119239', 0.06729253233613852); -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=NULL WHERE (NOT (t1.c1)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c65)=(NULL, x'5c50') WHERE (- (((t1.c1) ISNULL))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0xffffffffcf12403e WHERE t1.c2; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('1535184896') WHERE (((x'0534')) NOT BETWEEN (((+ (t1.c2)))) AND (((~ (t1.c65))))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(x''); -- 0ms;
UPDATE OR REPLACE t1 SET c65=NULL WHERE 973903333; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('1905432909'); -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=(0.5203971700146661) WHERE LOWER(DISTINCT ((t1.c65)>=(t1.c2))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1='169119239' WHERE (((((+ (t1.c65)))AND(HEX(DISTINCT x'cbef'))))AND(((t1.c1)/(t1.c65)))); -- 1ms;
UPDATE t1 SET c65=x'' WHERE t1.c2; -- 0ms;
UPDATE t1 SET c65=0x2de84f3; -- 0ms;
UPDATE OR ABORT t1 SET c65=2082610992; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1)=(0X713f0938, NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL; -- 0ms;
UPDATE t1 SET (c65)=(0.9805707281181517) WHERE CAST((t1.c1 IN ()) AS INTEGER); -- 1ms;
UPDATE OR ROLLBACK t1 SET c1=0.7769268445491819; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('-748424948'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2='-394759681', c65=x'b4f07b6e'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0Xffffffffeb6e14e2; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.9852872650286476, c2=NULL WHERE t1.c65; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0X5bccf4fe) WHERE (((t1.c65, t1.c65, t1.c1)) NOT BETWEEN ((t1.c2, t1.c1, t1.c65)) AND ((NULL, t1.c1, x''))) COLLATE BINARY; -- 0ms;
UPDATE t1 SET (c1, c2, c1)=('-1969933302', 'ᳵt?RX3f|ᅅ', '365224881') WHERE ((t1.c1)OR(t1.c1)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.22016234963305148); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c65=NULL; -- 0ms;
UPDATE t1 SET c65='\ﵮG8*UKD' WHERE ((((t1.c2)IS NOT(t1.c1)))<>(IFNULL(t1.c65, t1.c65))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR ABORT t1 SET (c65)=('-516322022'); -- 0ms;
UPDATE t1 SET c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('') WHERE (NOT (((((((((t1.c1)OR(t1.c65)))OR(t1.c2)))AND(t1.c65)))OR(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x''; -- 0ms;
UPDATE t1 SET c1=x'' WHERE ((((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c65)))&(COALESCE(t1.c2, t1.c2, t1.c2, t1.c65))); -- 0ms;
UPDATE t1 SET c1=x'', c65=x'', c2='-1' WHERE (CAST(t1.c1 AS TEXT) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('-1205719731') WHERE (((~ (t1.c1))) NOT BETWEEN ((t1.c2 IN ())) AND (((t1.c1) BETWEEN (t1.c1) AND (t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'b5e8'); -- 0ms;
UPDATE t1 SET c1=0.5928794255600706, c2=0.8854376952308318; -- 0ms;
UPDATE OR REPLACE t1 SET (c65)=(1.351268349E9) WHERE CAST((t1.c65 IN (t1.c65, t1.c1)) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.6324592730316616; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.16425251637832305, c65='-100281702' WHERE ((CASE WHEN t1.c1 THEN t1.c65 END)<=(CAST(t1.c1 AS REAL))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2, c2, c2)=(x'', -2086846908, NULL); -- 0ms;
UPDATE t1 SET c65='-575725414' WHERE ((((t1.c1)GLOB(t1.c65))) NOT NULL); -- 0ms;
UPDATE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-1430447439'); -- 0ms;
UPDATE OR IGNORE t1 SET c65=''; -- 0ms;
UPDATE OR FAIL t1 SET c1=0.8130210361987743; -- 0ms;
UPDATE t1 SET (c65)=(-974756195); -- 0ms;
UPDATE t1 SET (c1, c2, c2)=('553755413', '1503552221', 0.5530936977001277); -- 0ms;
UPDATE OR FAIL t1 SET (c65, c65, c1)=(-1.969933302E9, '''u', NULL) WHERE (((((NOT (0.5455717561744812)))AND(((t1.c65)IS NOT(t1.c2)))))OR(((t1.c2) NOTNULL))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=-990868802; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(0.3290049906633906); -- 0ms;
UPDATE t1 SET (c2, c1)=(x'', '-421970298'); -- 0ms;
UPDATE OR ABORT t1 SET c1=0.08359839188584617; -- 0ms;
UPDATE t1 SET (c2)=(0.2055110226770389) WHERE (CASE WHEN t1.c65 THEN t1.c1 WHEN t1.c2 THEN 0.6836811966683756 WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c65 WHEN t1.c1 THEN t1.c2 END IN ()); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=0Xffffffffd9bb22bc WHERE ((t1.c65) BETWEEN (t1.c65) AND (t1.c2)) COLLATE BINARY; -- 0ms;
UPDATE OR FAIL t1 SET c2=NULL WHERE json_valid((t1.c1 IN (t1.c65))); -- 0ms;
UPDATE OR ABORT t1 SET (c1)=(NULL) WHERE ((((x'')OR((- (t1.c2)))))AND(((t1.c2)>(t1.c65)))); -- 0ms;
UPDATE t1 SET c65=0x11a59396, c1=NULL, c2=NULL WHERE t1.c2; -- 0ms;
UPDATE OR REPLACE t1 SET (c65)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.5873158752228539; -- 0ms;
UPDATE OR IGNORE t1 SET c65='', c65=NULL WHERE t1.c1; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=('721819624'); -- 0ms;
UPDATE t1 SET (c2)=(NULL); -- 0ms;
UPDATE t1 SET (c1)=(-1100872959) WHERE ((((t1.c65) NOT BETWEEN (t1.c1) AND ('wJ_&GQ'))) NOT BETWEEN (((t1.c65) NOT NULL)) AND (((t1.c1) NOT BETWEEN (0xffffffffac2abb36) AND (t1.c2)))); -- 0ms;
UPDATE t1 SET c65=0.6941910517038715; -- 0ms;
UPDATE t1 SET (c65)=('-1921460065'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'5f17'); -- 0ms;
UPDATE OR ABORT t1 SET (c65, c65, c2)=('-1750603852', x'', 'scj') WHERE (NOT ((t1.c65 IN ()))); -- 0ms;
UPDATE OR REPLACE t1 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE t1.c1; -- 0ms;
UPDATE t1 SET (c65, c65)=(NULL, x'') WHERE ((CASE WHEN t1.c2 THEN t1.c1 WHEN x'9e4f' THEN t1.c1 WHEN t1.c65 THEN t1.c2 ELSE t1.c2 END)-(CASE WHEN t1.c65 THEN t1.c1 END)); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.924452914406606; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE 0.3051961686337238; -- 0ms;
UPDATE OR IGNORE t1 SET c65='725576149'; -- 0ms;
UPDATE t1 SET c2=-1.642093026E9 WHERE CASE WHEN t1.c2 COLLATE RTRIM THEN ((t1.c2) NOTNULL) ELSE (0.9771676026317649 IN (t1.c1, t1.c65)) END; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(NULL); -- 0ms;
UPDATE t1 SET (c65, c2, c2)=(0.0950733160406192, x'', ''); -- 0ms;
UPDATE t1 SET c2=0.40564996650710106, c1=''; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0xffffffffb67fd75b, c65=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(1.501568245E9) WHERE ((x'8e70' COLLATE NOCASE) NOT BETWEEN (t1.c65) AND (t1.c2 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0X212510c7); -- 0ms;
UPDATE t1 SET (c65, c65)=(0.9008663769421449, x'') WHERE ((((t1.c2) ISNULL)) NOT BETWEEN (((t1.c1)>>(t1.c1))) AND (t1.c1)); -- 0ms;
UPDATE t1 SET c65=0xffffffff850cf57b; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.4828073875793423); -- 1ms;
UPDATE OR IGNORE t1 SET c65=NULL, c2=NULL WHERE (((~ (t1.c1))) BETWEEN (CAST(t1.c2 AS INTEGER)) AND (451844079)); -- 0ms;
UPDATE t1 SET (c2)=('0.9738398153685863'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c2, c1)=('-861947306', NULL, 0x1ffbbb36); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c1=NULL WHERE ((((((t1.c1)AND(t1.c1)))OR(t1.c1))) NOTNULL); -- 0ms;
UPDATE OR FAIL t1 SET c65='?똄' WHERE ((((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c65))) NOTNULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2='721259048'; -- 0ms;
UPDATE OR FAIL t1 SET (c1, c2)=('-1002728534', NULL) WHERE 0xffffffffc8dbf708; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1, c2)=(NULL, x'', 0.2841916473162759); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE CAST(UNLIKELY(t1.c2) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-1613309082') WHERE (~ ((t1.c65 IN ()))); -- 0ms;
UPDATE t1 SET (c65)=(0.07228934408113674); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR FAIL t1 SET (c2, c1, c65)=(x'', x'a203', 0xffffffff91fb6fcc) WHERE '1940767148'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE (t1.c65 IN (((t1.c2)IS NOT(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(0.7593871908460879); -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(0X645ce6a6) WHERE ((((t1.c2) BETWEEN (t1.c65) AND (t1.c65))) ISNULL); -- 0ms;
UPDATE t1 SET c2=0.5524680523944228; -- 0ms;
UPDATE t1 SET (c65)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(3.65224881E8); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-1508178366'); -- 0ms;
UPDATE OR ABORT t1 SET c1=0.29797253902521414, c1=0.3004158594284485 WHERE x'70f4' COLLATE NOCASE; -- 0ms;
UPDATE OR ABORT t1 SET (c1, c2)=(NULL, NULL) WHERE (('') IS FALSE); -- 0ms;
UPDATE t1 SET c1=''; -- 0ms;
UPDATE t1 SET (c65)=(NULL); -- 0ms;
UPDATE t1 SET (c65, c65, c1)=('m]', NULL, 0.7635523755982745) WHERE t1.c1; -- 0ms;
UPDATE t1 SET c1=0.451567351279783, c2=0.11857173759343331, c65=0xffffffffaa0adef7 WHERE CASE WHEN (((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))) THEN ((t1.c2)OR(t1.c65)) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'3c97'); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.7429545814878891, c2=x'358d1652', c1='*M媶r', c1='}ff'; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE ((CAST(t1.c1 AS NUMERIC))+(x'' COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE t1 SET c1='Gi' WHERE CAST(((t1.c1)!=(t1.c65)) AS BLOB); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2)=(0.5664023434084499, 0.17853066147755858) WHERE (((CASE t1.c65  WHEN t1.c1 THEN 'mh䀾Uꭐ*jh' ELSE t1.c1 END))>(((('0.8005092500234494') NOT BETWEEN (t1.c2) AND (t1.c2))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-360145892'); -- 1ms;
UPDATE OR REPLACE t1 SET (c1)=('	my|QYҲ<X'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'') WHERE (- (t1.c2)); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE t1 SET c1=''; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 0ms;
UPDATE OR REPLACE t1 SET c1='k' WHERE ((CAST(t1.c65 AS TEXT)) NOT BETWEEN (((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c1))) AND (((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=-724506548 WHERE (t1.c2 IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c2=2024226552, c65=0.5719904991107928; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 1ms;
UPDATE OR REPLACE t1 SET (c2)=(1.33303116E8); -- 0ms;
UPDATE OR IGNORE t1 SET c2=-727123743; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-325548373'); -- 0ms;
UPDATE t1 SET c65=NULL WHERE x'8628'; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(x'') WHERE ((((t1.c2)%(t1.c65)))<=(t1.c2 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t1 SET c1='TRUE', c1=x''; -- 0ms;
UPDATE t1 SET (c1, c2)=(NULL, 'ZW'); -- 0ms;
UPDATE t1 SET c65=5.98670911E8; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 1ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE CASE WHEN t1.c1 COLLATE NOCASE THEN CASE t1.c1  WHEN t1.c2 THEN '0.13397891829182207' ELSE t1.c2 END END; -- 0ms;
UPDATE t1 SET c65='qJ8빪3', c2=-54837288 WHERE TRIM((NOT (t1.c2))); -- 0ms;
UPDATE OR ABORT t1 SET (c2)=('-2051737996') WHERE ((t1.c65)GLOB(((t1.c65) NOT BETWEEN (x'a3df') AND (t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'044a') WHERE (+ (t1.c65 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c65)=(x'', 'YTO}Uy(') WHERE ((((CASE t1.c1  WHEN t1.c2 THEN NULL ELSE t1.c1 END)AND((t1.c1 IN ()))))AND((((t1.c1, t1.c65, t1.c2)) NOT BETWEEN ((t1.c2, t1.c2, t1.c1)) AND ((t1.c1, t1.c65, t1.c65))))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c1='746574858', c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2='236583807'; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE ((((((t1.c65)OR(t1.c65)))OR(t1.c65)))IS(((x'')>=(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('') WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET c1='-1272007164'; -- 0ms;
UPDATE t1 SET (c65, c65)=(NULL, x'446c') WHERE (((t1.c2) NOT NULL) IN (((t1.c65)*(t1.c65)), ((0.8450175249018251)IS(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'') WHERE ((((t1.c65)*(t1.c1))) NOT BETWEEN (t1.c1) AND (((t1.c65)LIKE(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0Xffffffffe555d268 WHERE t1.c1; -- 0ms;
UPDATE t1 SET (c65, c1)=(x'', x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1, c2)=('-2040422312', '-2134138021', 'Ꚅ'); -- 1ms;
UPDATE OR IGNORE t1 SET (c1, c65)=(x'8124', '-725027364') WHERE HEX(DISTINCT (((t1.c2))==((t1.c2)))); -- 0ms;
UPDATE t1 SET c1='-913881537', c65='882517875' WHERE ((LIKELIHOOD(t1.c2, 0.3022454990795085)) NOTNULL); -- 0ms;
UPDATE OR FAIL t1 SET (c1)=(NULL); -- 0ms;
UPDATE t1 SET (c1)=('1385481820') WHERE CAST((((t1.c65))>((t1.c1))) AS INTEGER); -- 0ms;
UPDATE OR REPLACE t1 SET c2='沙Z' WHERE ((((t1.c65)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'ae6e' WHERE ((('0.8976164501959774') NOT BETWEEN (426905943) AND (t1.c1)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE t1 SET (c65)=(0.2757480939133642) WHERE t1.c2; -- 0ms;
UPDATE OR IGNORE t1 SET c1='' WHERE (NOT ((((t1.c1))==((t1.c1))))); -- 1ms;
UPDATE t1 SET (c2, c1)=(0.7467600985366869, NULL) WHERE (((NULL)) BETWEEN ((CASE t1.c2  WHEN t1.c2 THEN t1.c1 END)) AND ((t1.c65 COLLATE BINARY))); -- 0ms;
UPDATE OR REPLACE t1 SET c65=x'' WHERE (((((t1.c1))<=((t1.c2))))<<((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c2))))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x''; -- 0ms;
UPDATE t1 SET c1=x'2980' WHERE ((((t1.c2 COLLATE NOCASE)AND(((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c2)))))AND(((0xffffffffd69389e3) IS FALSE))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=425366194 WHERE (((IFNULL(DISTINCT t1.c1, t1.c1)))<=(((NOT (t1.c1))))); -- 0ms;
UPDATE OR REPLACE t1 SET c65=x'1f7b' WHERE CASE ((t1.c2)<=(t1.c65))  WHEN LIKELIHOOD(DISTINCT t1.c1, 0.3756560696135304) THEN ((t1.c65)!=(t1.c1)) ELSE (((t1.c65, NULL, t1.c1)) BETWEEN ((t1.c65, NULL, t1.c1)) AND ((t1.c1, t1.c2, t1.c2))) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65, c1)=('', '', NULL) WHERE CAST((~ (t1.c65)) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t1 SET c65='gD.e,Pf?i'; -- 0ms;
UPDATE t1 SET c1=NULL; -- 0ms;
UPDATE t1 SET (c2)=(NULL); -- 1ms;
UPDATE OR ROLLBACK t1 SET c2='eu쫼0LE' WHERE CAST(t1.c65 AS INTEGER) COLLATE RTRIM; -- 0ms;
UPDATE t1 SET c1=1.38548182E9; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.9815408687819183, c2=0.18634639660442098 WHERE ((((((t1.c1)AND(t1.c2)))OR(t1.c65))) BETWEEN (((t1.c2) NOT BETWEEN (t1.c65) AND (t1.c2))) AND (((t1.c2)%(t1.c1)))); -- 0ms;
UPDATE OR ABORT t1 SET (c1)=(NULL) WHERE (((t1.c2)) NOT BETWEEN (((+ (t1.c65)))) AND ((((t1.c65) NOT BETWEEN (t1.c65) AND (x''))))); -- 0ms;
UPDATE t1 SET c1='-434413974', c2=-397597052; -- 0ms;
UPDATE t1 SET (c65)=(0.08998877622082224) WHERE t1.c65; -- 0ms;
UPDATE OR IGNORE t1 SET c1='GI'; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c65, c65)=(0.8322453628689752, NULL, x'') WHERE COALESCE(((t1.c65) ISNULL), TRIM(DISTINCT t1.c65, t1.c1)); -- 0ms;
UPDATE t1 SET c2=x'2d32' WHERE ((NULL)&(((t1.c65)||(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=''; -- 0ms;
UPDATE t1 SET (c1, c1, c2)=(x'', 0x508ab7fd, 0.17884627575580203); -- 1ms;
UPDATE OR ROLLBACK t1 SET (c65, c65, c1)=(NULL, 'ంr', 0.1279938068189822); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c1='' WHERE NULL; -- 0ms;
UPDATE OR REPLACE t1 SET (c1, c2)=(0.13322963160121248, NULL) WHERE ((((((((((((((t1.c2) IS TRUE))AND(t1.c65 COLLATE BINARY)))AND(((t1.c65)||(t1.c65)))))AND((- (t1.c65)))))AND((- (t1.c2)))))OR((t1.c1 IN ()))))OR(IFNULL(DISTINCT t1.c2, t1.c2))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'') WHERE (((CAST(t1.c2 AS NUMERIC), ((t1.c65)>>(t1.c2)), ((0.6661578082198181)/(t1.c2))))>((t1.c1, CASE WHEN t1.c2 THEN t1.c1 ELSE '-2070699535' END, (NOT (t1.c65))))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.151818853953404; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c2, c65)=(0.641307255828561, x'', 0x7fffffffffffffff) WHERE CAST(CAST(t1.c2 AS NUMERIC) AS REAL); -- 0ms;
UPDATE OR ABORT t1 SET c65='0.01997512633830334'; -- 0ms;
UPDATE OR FAIL t1 SET c1=NULL; -- 1ms;
UPDATE OR FAIL t1 SET c65='1052829832', c2=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1)=('', 0X7543a9c0); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.9362577832484278) WHERE (~ (SQLITE_SOURCE_ID())); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2)=(0.07624058346303086, -4.8827702E8); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.00294276952671757); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0X5121a767) WHERE json_insert(t1.c65, t1.c65, t1.c2, t1.c1, t1.c65) COLLATE RTRIM; -- 0ms;
UPDATE t1 SET (c65)=(2.08361756E8); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2)=(0.9163568697394509, '|v'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0Xfffffffffcd973ba); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'' WHERE t1.c65 COLLATE RTRIM; -- 0ms;
UPDATE t1 SET c2=1950723410; -- 0ms;
UPDATE OR REPLACE t1 SET (c2, c65)=(NULL, ''); -- 0ms;
UPDATE OR IGNORE t1 SET c1=1751697625; -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(-1809766957) WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'bdaa') WHERE (((t1.c1 IN (t1.c1))) IS FALSE); -- 0ms;
UPDATE t1 SET c1='1757787234' WHERE CASE WHEN (((t1.c2))<=((t1.c1))) THEN ((t1.c2) IS FALSE) WHEN (~ (t1.c65)) THEN CASE x''  WHEN t1.c1 THEN t1.c2 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c2 END WHEN 0.11690591700025865 THEN (t1.c1 IN ()) ELSE (t1.c2 IN ()) END; -- 0ms;
UPDATE OR IGNORE t1 SET c65='n	', c1='973903333'; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x''; -- 0ms;
UPDATE t1 SET (c1, c65)=(NULL, x'a78d') WHERE (((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c1))))<=(LIKELIHOOD(DISTINCT t1.c1, 0.7039132430844892))); -- 0ms;
UPDATE t1 SET c2=NULL, c65=x'' WHERE x'62c3'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=-922660295 WHERE x''; -- 0ms;
UPDATE OR ABORT t1 SET (c1)=('-642047300'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.8976164501959774 WHERE LIKELIHOOD(HEX(t1.c1), 0.6907895678541165); -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=(NULL) WHERE t1.c65; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.7043006842123253 WHERE t1.c1 COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0xffffffff84d7520c, c2=0.21635061187887372 WHERE (~ (NULL COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE t1 SET c2=-4.69251974E8, c65=NULL WHERE CASE ((((t1.c65)AND(t1.c2)))AND(t1.c2))  WHEN ((t1.c2) NOT BETWEEN (t1.c2) AND ('-971001750')) THEN ((x'') IS TRUE) ELSE t1.c65 COLLATE NOCASE END; -- 0ms;
UPDATE t1 SET (c1, c1, c65)=('980217077', NULL, '729276026') WHERE (((((t1.c65) BETWEEN (t1.c2) AND (t1.c2)), ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1)), ((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c65))))>=((CAST(t1.c2 AS TEXT), (((t1.c2))>((t1.c2))), (((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c65)))))); -- 0ms;
UPDATE t1 SET (c1)=(-68246817); -- 0ms;
UPDATE t1 SET (c2)=(0.36410053350627014) WHERE ((((((((((((t1.c65)AND(t1.c2)))AND(0.40431498677787836)))AND(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c65)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE ((((CASE t1.c65  WHEN t1.c1 THEN t1.c65 END)AND(CAST(t1.c65 AS NUMERIC))))AND(t1.c1 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t1 SET c1=-1.295785473E9, c65='BQ'; -- 0ms;
UPDATE OR IGNORE t1 SET c65='-綈*U03l' WHERE CAST(((t1.c1)GLOB(-1603407817)) AS BLOB); -- 1ms;
UPDATE OR IGNORE t1 SET (c2, c2)=(0.49155283770550884, x'7fc9'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('-58855952'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c2, c2)=(0.25216238734064966, NULL, 0.03551735176625315); -- 0ms;
UPDATE OR ABORT t1 SET c65=x'd4d7'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=',I-RV,#vz', c2=NULL; -- 0ms;
UPDATE OR REPLACE t1 SET c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE NULLIF(t1.c2, t1.c65) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c2='245388964' WHERE ((NOT (t1.c65)) IN ()); -- 0ms;
UPDATE t1 SET c2=0.6940120870211581; -- 0ms;
UPDATE t1 SET (c65, c2)=('0.9839013270082686', 2004414601); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'50cb') WHERE ((((((((((t1.c2)|(t1.c2)))OR(highlight(t1.c1, t1.c65, t1.c1, t1.c65))))AND((t1.c1 IN (0.7909659294885445, '1380802699')))))AND(((((((((t1.c2)OR(t1.c1)))AND(t1.c65)))OR(t1.c2)))OR(t1.c1)))))AND(((t1.c2)OR(t1.c65)))); -- 0ms;
UPDATE t1 SET c65=0.19574360002471936 WHERE (NOT (((t1.c1) IS FALSE))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'' WHERE '1482752928'; -- 0ms;
UPDATE t1 SET c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('') WHERE (CAST(NULL AS INTEGER) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'bd74', c65=NULL WHERE (CAST(t1.c1 AS INTEGER) IN (((t1.c1) BETWEEN (t1.c65) AND (t1.c2)), ((t1.c1)|(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE MIN((((t1.c2))==((t1.c1))), ((t1.c2) BETWEEN (-442098540) AND (t1.c1))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'', c1=0.07692990622178042, c2='1385481820' WHERE (((t1.c2 IN (t1.c2))) NOT NULL); -- 0ms;
UPDATE t1 SET (c65)=(-790336550); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1, c1)=('1914990562', 'bXw醿Jw9Dљ') WHERE load_extension(t1.c1); -- 0ms;
UPDATE OR ABORT t1 SET (c65)=(x'25ec059e'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.21243657126964144 WHERE ((t1.c2 COLLATE NOCASE) NOT BETWEEN (((t1.c1) ISNULL)) AND ((t1.c2 IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0x41a3ca32 WHERE t1.c1; -- 0ms;
UPDATE OR ABORT t1 SET c1=0X38b5dad6, c2=0x2bd1c23b, c1=0X3a0c95e5; -- 0ms;
UPDATE t1 SET c65='0.4841060611533077', c1=0.779589909018692, c65=0x79126294 WHERE ((((t1.c1)AND(t1.c65)))AND(t1.c65)) COLLATE NOCASE; -- 0ms;
UPDATE t1 SET (c65, c2)=(0x45a0f222, '863126727'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE (('-820887490') BETWEEN (t1.c2 COLLATE RTRIM) AND (t1.c2)); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(169119239); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'2fb8') WHERE ((t1.c65) NOT BETWEEN (t1.c1) AND (t1.c2)) COLLATE BINARY COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.20158520192979168) WHERE (((((((t1.c2))<=((t1.c65))))OR(CASE t1.c65  WHEN t1.c2 THEN t1.c1 END)))AND(LIKELIHOOD(DISTINCT t1.c2, 0.735785736718075))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL; -- 0ms;
UPDATE t1 SET (c65)=('|'); -- 0ms;
UPDATE t1 SET c1=x'8c67', c65=x''; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(627036658) WHERE t1.c1; -- 0ms;
UPDATE t1 SET (c2)=(-8.55495957E8) WHERE ((((((((t1.c65)OR(t1.c1)))AND(t1.c65)))AND(t1.c65)))OR(t1.c1)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE load_extension(CAST(0.6100256105077245 AS BLOB)); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0X41a3ca32, c2=x'89e6' WHERE (t1.c65 IN ()); -- 0ms;
UPDATE OR ABORT t1 SET c2=0x488620ed; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(')|5o#	e#') WHERE ABS(DISTINCT CASE t1.c1  WHEN t1.c2 THEN t1.c65 END); -- 1ms;
UPDATE OR IGNORE t1 SET c2=')(5<~''~' WHERE (((t1.c2 COLLATE BINARY))<>((CASE NULL  WHEN t1.c65 THEN t1.c65 END))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE ((ABS(t1.c1))+(((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c2, c2)=(1086237885, '?JG''', '\nM夜W'); -- 0ms;
UPDATE OR IGNORE t1 SET c2='qiyg5'; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.8827492760737262); -- 1ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE (((NOT (t1.c2)))|(JULIANDAY(t1.c1, t1.c1, t1.c2))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'') WHERE LOWER(CAST(t1.c2 AS BLOB)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('N!>P]fn'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1)=(NULL, x''); -- 0ms;
UPDATE t1 SET (c1)=(-1556942765) WHERE CASE (((t1.c65))!=((t1.c65)))  WHEN NULL THEN (~ (t1.c1)) WHEN (t1.c65 IN ()) THEN CAST(t1.c2 AS TEXT) WHEN CAST(t1.c2 AS INTEGER) THEN 0.17102705074401814 END; -- 0ms;
UPDATE OR ROLLBACK t1 SET c65='돑in'; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.2855296679614526; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('536958468') WHERE ((((t1.c2)AND(t1.c1)))OR(t1.c2)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65)=(NULL, NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c65='1oTOvD' WHERE (+ (CAST(t1.c65 AS REAL))); -- 0ms;
UPDATE OR IGNORE t1 SET c2='1101253170'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'f0e6'; -- 0ms;
UPDATE OR IGNORE t1 SET c65='[]', c1=0xffffffffb8d0a4a2; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE t1 SET c2=0.18559221748748178, c2=x''; -- 0ms;
UPDATE OR ABORT t1 SET (c1, c65, c2)=(0.3212728732360185, 0x55be8b53, 0x853f05b); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1)=('A8vep', 0x1f48779e); -- 0ms;
UPDATE OR IGNORE t1 SET c1='1121533359' WHERE ((t1.c2 COLLATE NOCASE) IS TRUE); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('') WHERE ((((t1.c1)>=(t1.c65)))LIKE((t1.c2 IN (t1.c2)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2, c65)=('', 'C.s?沓|e'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE CASE ((((((((t1.c1)AND(t1.c1)))OR(t1.c2)))OR(t1.c1)))OR(t1.c2))  WHEN '0.6481211351024756' THEN x'' END; -- 0ms;
UPDATE OR IGNORE t1 SET c1=-1122561986, c1=0.37041580122341533, c65=0.44164064061015684; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c2)=(x'', 0.13322963160121248); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0xffffffff8d08f2ff) WHERE LIKELY(((t1.c65) BETWEEN (NULL) AND (t1.c1))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('-937992704') WHERE t1.c65; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL) WHERE (+ ((((t1.c65)) BETWEEN ((x'')) AND ((t1.c65))))); -- 1ms;
UPDATE OR IGNORE t1 SET c2='-207110831', c2=0.28187405734278714; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'') WHERE CASE WHEN t1.c2 THEN t1.c65 END COLLATE BINARY; -- 0ms;
UPDATE t1 SET c65=x'3744', c65='-1608479226'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1)=('', '1254150923'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(NULL) WHERE ((t1.c2 COLLATE RTRIM) BETWEEN ((((('-1175141846')OR(t1.c65)))OR(t1.c65))) AND (((t1.c2) NOT BETWEEN (t1.c65) AND (t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(''); -- 0ms;
UPDATE OR IGNORE t1 SET c65='-58855952'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL; -- 0ms;
UPDATE OR REPLACE t1 SET c1=0.9919533024984337; -- 0ms;
UPDATE t1 SET c65='', c65=NULL WHERE CASE (+ (t1.c2))  WHEN CAST(t1.c1 AS REAL) THEN t1.c2 ELSE (((-4.69251974E8)) BETWEEN ((t1.c2)) AND ((t1.c1))) END; -- 1ms;
UPDATE OR ROLLBACK t1 SET (c1, c65)=('-2003878249', 'GMpN]S牄') WHERE t1.c2; -- 0ms;
UPDATE t1 SET (c65)=(NULL); -- 0ms;
UPDATE t1 SET c2=NULL; -- 0ms;
UPDATE t1 SET (c1)=('0.5204647827923454'); -- 0ms;
UPDATE OR ABORT t1 SET c2=0.4044651707427318, c2='GPHჇ', c1=x'' WHERE (NOT ((NOT (t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE ((((t1.c2)*(x'')))&((('Sx[ e憶')<<(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('552708111'); -- 1ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE LOWER(t1.c65 COLLATE RTRIM); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.5035686671538498, c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'') WHERE ((NULL)IS NOT(t1.c65)) COLLATE NOCASE; -- 0ms;
UPDATE t1 SET (c2, c1)=(x'ca66', NULL) WHERE ((((NULL)GLOB(t1.c2)))OR(x'4f68')); -- 0ms;
UPDATE OR IGNORE t1 SET c1='-1745814324'; -- 0ms;
UPDATE OR REPLACE t1 SET c65=NULL, c2=NULL WHERE t1.c1; -- 0ms;
UPDATE t1 SET c2=x'', c2=0.11138505018568046; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c2)=(x'2804', NULL); -- 0ms;
UPDATE t1 SET c2=NULL, c1=NULL; -- 0ms;
UPDATE OR ABORT t1 SET (c1, c1, c1)=(NULL, NULL, 'kX'); -- 0ms;
UPDATE OR ABORT t1 SET (c65)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.11818007538138642 WHERE ((((t1.c1) NOTNULL)) NOT NULL); -- 0ms;
UPDATE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.6491014807501586, c65=2.07182364E8 WHERE CASE WHEN ((t1.c1) NOTNULL) THEN x'35fb31d4' WHEN ((t1.c1)<>(t1.c65)) THEN '-1275329060' WHEN ((t1.c2) IS FALSE) THEN CAST(t1.c1 AS TEXT) ELSE ((t1.c1) BETWEEN (t1.c1) AND (t1.c65)) END; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'', c65=NULL; -- 1ms;
UPDATE OR IGNORE t1 SET c65='-1549677409' WHERE CASE ((t1.c65)>(t1.c65))  WHEN t1.c1 COLLATE NOCASE THEN ((t1.c65)&(t1.c2)) END; -- 0ms;
UPDATE OR ABORT t1 SET c1=x'6c63'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x''; -- 0ms;
UPDATE OR ABORT t1 SET c1='-1556942765'; -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=(0.5476180690616866) WHERE ((((((((CAST(t1.c1 AS TEXT))OR((t1.c1 IN ()))))OR(LOWER(t1.c65))))OR(CAST(t1.c65 AS TEXT))))OR(CAST(t1.c1 AS TEXT))); -- 0ms;
UPDATE OR ABORT t1 SET (c2)=('-1657523181'); -- 1ms;
UPDATE OR IGNORE t1 SET c1=NULL, c2=0X5f8361c7; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=('[XbG7&') WHERE ((CAST(t1.c1 AS NUMERIC)) NOT BETWEEN (t1.c65) AND (((t1.c1) NOT BETWEEN (t1.c65) AND (t1.c1)))); -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=(x'aca6') WHERE LIKELY(DISTINCT CASE WHEN t1.c2 THEN t1.c1 END); -- 0ms;
UPDATE OR FAIL t1 SET c2=0X319d6032; -- 0ms;
UPDATE t1 SET (c1, c2, c2)=(0.5133299714904165, 'a/鲌-', 0X2fcb1ef3); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c2)=('536958468', '1084700111') WHERE CASE t1.c65 COLLATE NOCASE  WHEN (- (t1.c1)) THEN (('+''')OR(t1.c2)) ELSE CAST(t1.c2 AS INTEGER) END; -- 0ms;
UPDATE OR ABORT t1 SET c2=0X93804; -- 0ms;
UPDATE OR IGNORE t1 SET c2='370294135'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=1541914313, c65=NULL, c65=NULL WHERE ((((((t1.c2)<>('1948991400')))OR(0.7926595480465521 COLLATE BINARY)))OR((t1.c1 IN (t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1)=(NULL, 0.05678072781462362) WHERE ''; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x''; -- 0ms;
UPDATE OR REPLACE t1 SET c2=NULL WHERE CAST((((t1.c2)) BETWEEN ((t1.c65)) AND ((t1.c1))) AS TEXT); -- 0ms;
UPDATE OR REPLACE t1 SET c2=NULL; -- 0ms;
UPDATE t1 SET c1=NULL WHERE CASE t1.c2 COLLATE NOCASE  WHEN ((t1.c1) BETWEEN (t1.c65) AND (t1.c2)) THEN ((t1.c65) BETWEEN (t1.c65) AND (t1.c2)) WHEN ((t1.c2) BETWEEN (t1.c1) AND (t1.c1)) THEN LOWER(t1.c65) WHEN ((NULL) BETWEEN (t1.c2) AND (t1.c2)) THEN t1.c65 END; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1)=(NULL, 2008998257) WHERE t1.c2; -- 0ms;
UPDATE t1 SET c1='0.22010649492198875' WHERE (((((t1.c2, t1.c65, t1.c2)) BETWEEN ((t1.c1, t1.c65, t1.c1)) AND ((t1.c65, t1.c65, NULL)))) IS FALSE); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1, c1)=(NULL, 0Xffffffffbf8f25ab, x'') WHERE (((t1.c1)/(t1.c2)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.3966440204011997; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.6481211351024756, c65='-2077771532', c1=NULL WHERE COALESCE(t1.c65, 0.4909187414096734, (('e_M,5碨{S ')<=(t1.c65)), (t1.c65 IN ()), ((((t1.c65)OR(t1.c2)))OR(0.6491014807501586)), (((t1.c65)) BETWEEN ((t1.c65)) AND ((t1.c65)))); -- 1ms;
UPDATE OR IGNORE t1 SET (c1)=(0.061856712850450135) WHERE (t1.c65 IN (t1.c2)) COLLATE NOCASE; -- 0ms;
UPDATE OR REPLACE t1 SET c1=NULL WHERE (- (CASE t1.c2  WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN 0.4103377587307432 WHEN t1.c2 THEN t1.c2 ELSE t1.c2 END)); -- 0ms;
UPDATE t1 SET (c1)=(567660883) WHERE ((t1.c2) IS TRUE); -- 0ms;
UPDATE OR ABORT t1 SET c1='!t\BE_}' WHERE ((((((((CAST(t1.c65 AS REAL))OR('-761982651')))OR(MAX(t1.c2, t1.c65))))AND(((t1.c65) ISNULL))))AND(t1.c65 COLLATE NOCASE)); -- 0ms;
UPDATE t1 SET (c2, c2)=(-1.556942765E9, 0.5965789112249618); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1)=('?pKh', ''); -- 0ms;
UPDATE t1 SET (c2, c1)=(x'51b1', 0.43650636348220506); -- 0ms;
UPDATE t1 SET (c2, c2)=('598670911', 0.5826247317110215); -- 0ms;
UPDATE OR REPLACE t1 SET c1='H\'; -- 0ms;
UPDATE t1 SET c1=0.9854121080198904, c2=0x3d152310 WHERE ((LTRIM(t1.c65, t1.c65))<(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END)); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE (~ (((t1.c2)+(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=-1.16875205E8, c1=x'74ff'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'' WHERE CAST((((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c2))) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE ((CASE t1.c65  WHEN t1.c2 THEN 0.5620538449906525 WHEN t1.c1 THEN t1.c1 WHEN '1234685879' THEN t1.c1 END)&(CASE t1.c2  WHEN t1.c65 THEN t1.c65 ELSE t1.c65 END)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1)=('QUd0''h#', 'CלJb') WHERE ((((((((((t1.c2)OR(t1.c1)))AND(t1.c1)))AND(t1.c2)))AND(t1.c2))) NOT NULL); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65, c2)=(1086237885, NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2=-1.928793345E9, c1=-6.8246817E7, c2='KeG~oY(' WHERE ((((t1.c2)IS(t1.c1)))IS((NOT (t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.9738398153685863 WHERE (((((t1.c65, t1.c2, t1.c2)) NOT BETWEEN ((t1.c65, t1.c1, t1.c1)) AND ((t1.c65, t1.c2, t1.c65))))>=(JULIANDAY(t1.c2, t1.c1, t1.c1, t1.c65, t1.c65))); -- 1ms;
UPDATE OR REPLACE t1 SET (c1, c1)=(x'b7ca', x'') WHERE ((((((((NULL)AND((t1.c2 IN ()))))OR(t1.c2)))AND(CASE t1.c2  WHEN t1.c1 THEN t1.c2 END)))AND(((t1.c1)|(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1)=(-1736940493, NULL) WHERE (((t1.c2 IN ())) NOT BETWEEN (CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c2 END) AND (t1.c1 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2, c65)=(x'79f3', '', '1086237885') WHERE ((((t1.c65) NOT NULL))|((t1.c1 IN ()))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=NULL; -- 0ms;
UPDATE OR REPLACE t1 SET (c2, c65, c1)=('pRP!', x'77f5', NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c65='', c1=-1608479226, c2=-2.041054445E9; -- 0ms;
UPDATE t1 SET c1=NULL WHERE ((((t1.c2) BETWEEN (t1.c2) AND (t1.c2))) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c65='', c65='23', c1=0x7eea7f04; -- 1ms;
UPDATE OR REPLACE t1 SET (c1)=('RJosE_wD'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c2=x'', c2=''; -- 0ms;
UPDATE t1 SET c2=0.38396335236926604 WHERE '-542528005'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(-168321015); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x''); -- 0ms;
UPDATE OR FAIL t1 SET (c1)=(NULL); -- 0ms;
UPDATE t1 SET c2=x'c89a'; -- 0ms;
UPDATE t1 SET c65=0.5995609115536032 WHERE CASE WHEN (((t1.c65))>((t1.c1))) THEN (t1.c65 IN ()) WHEN ((((t1.c1)OR(t1.c65)))OR(t1.c65)) THEN LIKE(t1.c65, 'Ey', 'T') WHEN CAST(t1.c2 AS NUMERIC) THEN ((t1.c65) IS TRUE) ELSE t1.c65 END; -- 0ms;
UPDATE OR FAIL t1 SET (c1)=(NULL) WHERE CASE ((t1.c65)+(t1.c2))  WHEN (((t1.c65)) NOT BETWEEN ((t1.c65)) AND ((t1.c2))) THEN ((((((((t1.c1)AND(t1.c1)))AND(t1.c2)))AND(t1.c65)))AND(t1.c1)) ELSE (NOT (0.8586194999382285)) END; -- 1ms;
UPDATE t1 SET c2=x'', c2='Cm'; -- 1ms;
UPDATE OR IGNORE t1 SET c1=x'0fb3ed03'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'' WHERE (((((t1.c65))<((t1.c65)))) NOT NULL); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=x'', c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2)=(NULL, '-491786871') WHERE CAST(((t1.c65) NOT BETWEEN (0.055910245627361466) AND (x'2e43')) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65, c2)=(0.20323475572989513, 0.5399245722267744, x'') WHERE (((CASE t1.c1  WHEN t1.c2 THEN t1.c1 WHEN t1.c2 THEN t1.c2 WHEN t1.c65 THEN t1.c1 ELSE t1.c2 END))<=((CAST(t1.c1 AS REAL)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1, c65)=(2107989337, '0.6762276018965433') WHERE CASE WHEN ((((t1.c65)AND(t1.c65)))AND(x'f10b')) THEN ((t1.c65) NOT BETWEEN (t1.c1) AND (t1.c2)) WHEN json_array_length(x'') THEN x'34b8' WHEN (t1.c65 IN ()) THEN ((t1.c65)<<(t1.c65)) ELSE ((t1.c65) IS FALSE) END; -- 0ms;
UPDATE OR IGNORE t1 SET c2='', c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c1='v>\NH滛7'; -- 1ms;
UPDATE OR IGNORE t1 SET c65=2002628095; -- 0ms;
UPDATE t1 SET c65=0Xffffffffa0208e06; -- 0ms;
UPDATE OR IGNORE t1 SET c65=''; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c2)=(NULL, x'') WHERE ((((t1.c1) IS FALSE))<('F*!踆UMQ')); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('-867399314'); -- 1ms;
UPDATE OR IGNORE t1 SET c65='綺S{}Ix'; -- 0ms;
UPDATE OR REPLACE t1 SET c2=NULL WHERE ((NULL) NOT BETWEEN ((+ (t1.c65))) AND (CAST(NULL AS REAL))); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(0.6378422873329769); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0X75de6250) WHERE (CAST(t1.c1 AS TEXT) IN ()); -- 0ms;
UPDATE t1 SET c65='귁l' WHERE ((((CASE WHEN t1.c65 THEN t1.c65 ELSE t1.c1 END)OR(ABS(t1.c2))))AND(LAST_INSERT_ROWID())); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(-58855952) WHERE (((((-1460095560))<=((t1.c1)))) NOTNULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1='-937992704', c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c2)=('-1846154917', x''); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.2994607609386857, c2=1482752928, c1='>A' WHERE (((+ ('-1241141571'))) IS FALSE); -- 0ms;
UPDATE t1 SET c65=0.1744664333425937, c2='209118700'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1)=(x'b4f21954', 'HZY') WHERE ((((((((((t1.c1)GLOB(t1.c2)))OR((((t1.c65)) NOT BETWEEN ((t1.c65)) AND ((t1.c2))))))OR(NULL)))AND((209953529 IN ()))))AND(((((t1.c1)AND(t1.c65)))AND(t1.c2)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=NULL WHERE (((((t1.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))/(((t1.c2) NOT BETWEEN (t1.c65) AND (t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c1='0.709315907327262' WHERE (((((t1.c65 IN (t1.c65, t1.c65)))AND(((t1.c1)-(t1.c2)))))OR((('')=(t1.c65)))); -- 0ms;
UPDATE OR FAIL t1 SET (c2, c65)=(x'', -1.272007164E9) WHERE CASE WHEN ((t1.c65) BETWEEN (t1.c2) AND (t1.c65)) THEN CASE WHEN t1.c1 THEN 1532851583 ELSE t1.c2 END WHEN (- (t1.c65)) THEN ((t1.c65)%(t1.c2)) WHEN t1.c65 COLLATE NOCASE THEN ((t1.c65)+(t1.c1)) END; -- 1ms;
UPDATE t1 SET c2=x'7533'; -- 0ms;
UPDATE t1 SET (c65, c1)=(NULL, 0.13095564843839957) WHERE CASE t1.c2  WHEN (+ (NULL)) THEN CASE WHEN t1.c1 THEN t1.c65 END ELSE CASE t1.c65  WHEN 168820597 THEN t1.c1 END END; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1)=(x'', 0.7191917357591933) WHERE ((t1.c2)>(x'6ca9')) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.9981948433850724); -- 0ms;
UPDATE t1 SET (c65, c65)=(x'', 0.2635312952702473) WHERE (((((t1.c65) NOT BETWEEN (t1.c1) AND (t1.c1))))<>((((0.22457107604455062)+(t1.c2))))); -- 6ms;
UPDATE OR IGNORE t1 SET (c65, c1, c2, c1)=('258145406', NULL, NULL, '-1608479226'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65, c1)=(NULL, '', ']') WHERE (NOT (t1.c2)); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'ac5a') WHERE (((((((t1.c65)OR(t1.c65)))AND(t1.c65))))=((((t1.c65)IS NOT(t1.c1))))); -- 0ms;
UPDATE t1 SET (c1, c2)=('', 0.46611893310230856) WHERE ((((t1.c1) IS FALSE)) BETWEEN ((t1.c65 IN ())) AND (((((t1.c2)OR(t1.c65)))OR(t1.c1)))); -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=(x'') WHERE ((+ (t1.c2)) IN ()); -- 0ms;
UPDATE OR ABORT t1 SET (c2, c65)=(NULL, '536958468'); -- 0ms;
UPDATE t1 SET c2='S(' WHERE ((((((((((t1.c65) IS FALSE))OR((((t1.c65))<=((x''))))))AND(((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c1)))))AND(((t1.c2) NOT BETWEEN (t1.c65) AND (-1000000911)))))AND(t1.c1 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t1 SET c65='26660469'; -- 0ms;
UPDATE OR FAIL t1 SET c1=NULL, c2=0.7774465831480277 WHERE ((((LENGTH(NULL))AND(((t1.c2) NOTNULL))))AND((t1.c65 IN (t1.c2, t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65, c65)=(-1603407817, 'Csi', 0.5383266572110689); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE (((('') BETWEEN (t1.c1) AND (t1.c1))) NOTNULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=-469251974, c65='잢t.U6'; -- 0ms;
UPDATE t1 SET c1='1914990562'; -- 0ms;
UPDATE t1 SET c1='\m੼PL,h#-' WHERE ABS(DISTINCT t1.c2) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.22457107604455062, c1=NULL; -- 0ms;
UPDATE t1 SET (c1)=(0xffffffff92ea7d16) WHERE STRFTIME(CASE t1.c1  WHEN t1.c1 THEN '' ELSE t1.c1 END, ((t1.c2)/(t1.c2)), ((t1.c65) IS TRUE)); -- 0ms;
UPDATE t1 SET c2=632312387, c2='-1676428761', c2=0.9793825119348347 WHERE ((CASE WHEN t1.c65 THEN t1.c2 END)||((NOT (t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1, c2, c65)=(0Xc595a1c, NULL, '‱ُs <aB''', '-224134004'); -- 0ms;
UPDATE t1 SET c1=x'', c2=992100550; -- 0ms;
UPDATE OR REPLACE t1 SET c65='' WHERE ((((t1.c2)=(t1.c65)))||(SQLITE_COMPILEOPTION_USED(t1.c2))); -- 0ms;
UPDATE t1 SET (c2, c2)=(NULL, NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'' WHERE (((t1.c1)) NOT BETWEEN ((((t1.c65)>=('-689840655')))) AND (((t1.c65 IN (t1.c65))))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=-290606710, c2=0.21061873883279258, c2=0.19486541381511713; -- 0ms;
UPDATE t1 SET c1=x'287e' WHERE ((((t1.c1)AND(t1.c2)))AND(x'')) COLLATE RTRIM; -- 0ms;
UPDATE OR ABORT t1 SET c2=0.13322963160121248, c65='980217077' WHERE t1.c65; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(-316839390) WHERE (((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))GLOB(t1.c65)); -- 1ms;
UPDATE t1 SET c65=NULL, c1=x'' WHERE ((((((((((((CASE NULL  WHEN t1.c1 THEN t1.c1 END)AND(CAST(t1.c2 AS NUMERIC))))OR(((t1.c65)IS(t1.c1)))))OR((NOT (t1.c2)))))AND(((0.8221083186674133)-('UY	]<Y')))))OR(CAST(t1.c65 AS INTEGER))))OR(t1.c1 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE (NOT (t1.c1 COLLATE BINARY)); -- 0ms;
UPDATE OR REPLACE t1 SET (c2, c65)=(x'', x''); -- 0ms;
UPDATE t1 SET c65=NULL; -- 1ms;
UPDATE t1 SET c2='', c1='BVmonthsx*\[m8v' WHERE ((((t1.c2) IS FALSE)) BETWEEN (t1.c2) AND (t1.c65)); -- 0ms;
UPDATE OR FAIL t1 SET c1=''; -- 0ms;
UPDATE t1 SET (c2, c2)=(NULL, '') WHERE LENGTH(t1.c65); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0xfffffffffbeea2df WHERE CASE (t1.c1 IN ())  WHEN (((t1.c1)) NOT BETWEEN ((x'')) AND ((t1.c2))) THEN CASE t1.c1  WHEN t1.c2 THEN t1.c65 END END; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=0xffffffffc61fb06a WHERE CASE WHEN t1.c65 COLLATE RTRIM THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c65 WHEN t1.c1 THEN t1.c1 END WHEN (t1.c2 IN ()) THEN (+ (t1.c65)) WHEN ((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c65)) THEN LENGTH(t1.c1) END; -- 0ms;
UPDATE OR FAIL t1 SET c2=x'', c1=0.3991089637933535 WHERE (((((((((((t1.c1, t1.c65, t1.c1, t1.c2, t1.c65))=((NULL, 0.1653200000902756, t1.c2, t1.c1, t1.c1))))OR((- (t1.c1)))))AND(0.980377213294443)))AND(((t1.c65) BETWEEN (t1.c65) AND (t1.c65)))))AND((((t1.c65))<((t1.c1))))); -- 0ms;
UPDATE t1 SET (c1, c1)=(0X1b7344a9, 'PEG%m~'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'', c2='H/', c2=0.19352721632179104 WHERE ((((t1.c2)<(t1.c2))) BETWEEN (((((0.7795503010596846)AND(0.5280620877077975)))OR(t1.c2))) AND (((t1.c2) IS FALSE))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0x7ae3ab15; -- 0ms;
UPDATE t1 SET (c1)=('-680196661') WHERE (- ((((t1.c2, NULL, t1.c2, 0.8674724154212715, t1.c1)) NOT BETWEEN ((t1.c2, t1.c1, t1.c2, t1.c2, t1.c65)) AND ((t1.c65, t1.c1, t1.c1, t1.c1, t1.c2))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65, c65)=('wJj&GQ', NULL, '0.9165521065419752'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c1=NULL WHERE ((t1.c1 COLLATE NOCASE)|(t1.c2)); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=-9223372036854775808; -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=0x7fffffffffffffff WHERE 0.2709835037496411; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'ac8f' WHERE CASE UPPER(t1.c2)  WHEN (- (t1.c1)) THEN CASE t1.c1  WHEN t1.c65 THEN t1.c2 END END; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(-1536733636) WHERE CAST(t1.c65 COLLATE RTRIM AS BLOB); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0Xffffffffb0516192) WHERE t1.c65; -- 0ms;
UPDATE OR ABORT t1 SET c2=x'', c2='zGdA尿,#'; -- 1ms;
UPDATE OR REPLACE t1 SET c1='1136552360' WHERE UPPER(CASE WHEN t1.c2 THEN t1.c1 END); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c2, c2)=(2063437221, x'', NULL); -- 0ms;
UPDATE t1 SET (c1)=('La{cB,_'); -- 0ms;
UPDATE t1 SET (c1)=(0xffffffff86346769) WHERE ((((CASE WHEN t1.c65 THEN t1.c2 END)OR(((t1.c2) BETWEEN (t1.c65) AND (t1.c65)))))AND((NOT (t1.c2)))); -- 0ms;
UPDATE t1 SET c65=0.01861046566612279 WHERE x''; -- 0ms;
COMMIT; -- 0ms;
PRAGMA main.mmap_size = 8902343580755564154; -- 0ms;
INSERT OR IGNORE INTO t1(c2) VALUES ('usfx5(H1'), (x'1ce4'), (0.030915369871792664); -- 1ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65)=(0x18f2ab44, '431422386') WHERE CASE (((t1.c2))<((t1.c1)))  WHEN ((t1.c65) IS TRUE) THEN '' END; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.6162990786442342; -- 0ms;
UPDATE OR FAIL t1 SET (c65)=('') WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.12058893729348541, c2=x''; -- 0ms;
UPDATE t1 SET c65=x'', c2=837621950, c1=0.0348305890634365; -- 0ms;
UPDATE t1 SET (c1, c2, c65)=(NULL, 0.8375898979816255, 'tP!,\&-5'); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(NULL) WHERE ((((t1.c2) NOTNULL))&(t1.c2)); -- 0ms;
UPDATE OR IGNORE t1 SET c1='365224881', c1='TRUE'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c1='-9223372036854775808'; -- 1ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65, c1)=(-1792579897, 1948991400, NULL) WHERE (NOT (((t1.c65) NOTNULL))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'485f' WHERE CAST('V1s#1n(E)' AS BLOB); -- 0ms;
UPDATE t1 SET c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c65)=('0.0', 0.16916667791661777); -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(x'') WHERE CAST(((t1.c65)||('1395532344')) AS BLOB); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'79ae') WHERE (((((~ (t1.c2)))OR((((t1.c1)) BETWEEN ((t1.c65)) AND ((t1.c1))))))OR(((t1.c2)IS(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c1='YuO', c2='110553747' WHERE ((((((t1.c1)OR(t1.c2)))OR(0.28817475185316055))) IS TRUE); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0x7e92c836; -- 0ms;
UPDATE t1 SET c1=x'' WHERE (((t1.c65, (- (t1.c2)), ((((((((((((t1.c2)OR(t1.c1)))AND(0.1507722241607441)))AND(t1.c2)))OR(t1.c65)))AND(NULL)))OR(t1.c65))))=(((((t1.c2, t1.c1, t1.c1)) BETWEEN ((t1.c65, t1.c65, t1.c65)) AND ((t1.c65, t1.c1, NULL))), ((0.4025647111900277) IS FALSE), ((0.6186716912382612) NOT BETWEEN (t1.c1) AND (t1.c65))))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE ((((((t1.c65)|(t1.c2)))OR(rtreenode(t1.c2, t1.c1))))AND((((t1.c1, t1.c1, t1.c65))<((t1.c2, t1.c2, t1.c65))))); -- 0ms;
UPDATE OR IGNORE t1 SET c2='-1608479226'; -- 0ms;
UPDATE t1 SET (c1, c65, c2)=(0.4175236178980667, NULL, 0.12762729348033808); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.9503053823081675, c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=''; -- 0ms;
UPDATE t1 SET c2=x'd625' WHERE rtreenode(x'', CASE WHEN t1.c1 THEN t1.c65 ELSE NULL END); -- 0ms;
UPDATE t1 SET c65=0.8528617059490603, c2=0.001581250708311721, c65=-1891559054; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE ((t1.c65 COLLATE BINARY) NOTNULL); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=('1447644695'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c65='', c1=NULL WHERE t1.c1; -- 0ms;
UPDATE OR FAIL t1 SET c2=x'', c1='5!^TrAUM'; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.8224710850185143 WHERE (((((t1.c65)AND('941763574')))OR(t1.c65)) IN (CAST(t1.c2 AS TEXT))); -- 0ms;
UPDATE t1 SET c2=NULL; -- 0ms;
UPDATE t1 SET (c65, c65, c65)=(x'', 0.22217368770274792, x''); -- 0ms;
UPDATE t1 SET (c1)=('-7577913'); -- 1ms;
UPDATE OR IGNORE t1 SET (c2)=('395302076'); -- 0ms;
UPDATE t1 SET c1=x'ac6f' WHERE ((t1.c1)>>((((t1.c2)) BETWEEN ((t1.c65)) AND ((t1.c2))))); -- 0ms;
UPDATE OR FAIL t1 SET (c1)=('-1135775254') WHERE CAST(CASE WHEN t1.c1 THEN t1.c65 WHEN t1.c65 THEN t1.c1 WHEN t1.c1 THEN t1.c65 END AS TEXT); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('Bg<)7D,I]') WHERE ((((((((NULL)OR(t1.c65)))AND(t1.c2)))OR(((t1.c65) NOTNULL))))AND((((t1.c2))=((t1.c2))))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.2671536110013282, c65=0.721910945749607; -- 0ms;
UPDATE t1 SET c65=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('*|'); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0Xcde21cb, c1=0.21035836083150705, c1=NULL WHERE ((((t1.c1) IS TRUE))>>(((t1.c65) IS FALSE))); -- 0ms;
UPDATE t1 SET (c2)=('-1878981941'); -- 1ms;
UPDATE OR ROLLBACK t1 SET (c2, c2)=(NULL, 0.795873954767682) WHERE (((((((((t1.c2)OR(t1.c65)))OR(t1.c1)))OR(1.086237885E9)))AND(t1.c1)) IN ()); -- 0ms;
UPDATE t1 SET c65='S>L<', c2=NULL WHERE (((t1.c1)) BETWEEN (((NOT (t1.c2)))) AND ((CAST('1215351548' AS TEXT)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('-546103246') WHERE NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1)=(0.5854286479895976, 1.482752928E9); -- 0ms;
UPDATE OR ABORT t1 SET c2=0.5317170165082101 WHERE ((t1.c65) BETWEEN (t1.c65) AND (1948991400)) COLLATE RTRIM; -- 0ms;
UPDATE t1 SET c65=NULL WHERE (- ((t1.c65 IN ()))); -- 0ms;
UPDATE OR FAIL t1 SET c1='0.9894707066673714' WHERE (((((~ (t1.c1)))OR((t1.c1 IN ()))))OR(t1.c65 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('-2034697795'); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(-1.233135781E9); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1='', c2=NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1, c65, c65)=(x'', '', '尿b') WHERE (((((+ (t1.c2)))OR((((t1.c65)) NOT BETWEEN ((t1.c65)) AND ((t1.c2))))))OR(LIKELIHOOD(t1.c65, 0.3957845561637814))); -- 0ms;
UPDATE OR REPLACE t1 SET (c65)=(x'') WHERE (~ ((t1.c2 IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.7182697560508898; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'5184') WHERE ((CASE t1.c65  WHEN '1395532344' THEN t1.c65 ELSE t1.c2 END)>(t1.c2)); -- 0ms;
UPDATE OR REPLACE t1 SET c1='-1339352006', c2=NULL; -- 0ms;
UPDATE t1 SET (c2)=(NULL) WHERE ((x'4975d38b')OR((t1.c1 IN (t1.c1, t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('-1295785473') WHERE NULLIF((('395098539') BETWEEN (t1.c65) AND (t1.c2)), ((NULL) BETWEEN (t1.c2) AND (t1.c65))); -- 0ms;
UPDATE t1 SET (c1)=(''); -- 0ms;
UPDATE t1 SET c1=x'', c65='mh䀾Uꭐ*jh', c2='' WHERE CASE WHEN TRIM(t1.c65, t1.c65) THEN ((((((((t1.c65)AND(t1.c65)))OR(t1.c65)))AND(t1.c2)))OR(t1.c65)) ELSE CASE 0xffffffffe44eae71  WHEN t1.c65 THEN t1.c2 END END; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE CASE t1.c65  WHEN t1.c1 THEN ((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c2)) ELSE (x'' IN ()) END; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(x'6232') WHERE ((((((((((t1.c2)OR(0.33019518317478935)))OR(t1.c65)))OR(t1.c65)))OR(t1.c2)))|(CAST(t1.c2 AS BLOB))); -- 0ms;
UPDATE OR IGNORE t1 SET c1='', c2=0.7709775902524182, c65=NULL WHERE COALESCE(DISTINCT t1.c65, CAST(t1.c65 AS BLOB)); -- 0ms;
UPDATE OR IGNORE t1 SET c1='Un죙R~f' WHERE CAST(CASE t1.c2  WHEN t1.c1 THEN t1.c1 END AS INTEGER); -- 0ms;
UPDATE OR REPLACE t1 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65)=(1375042812, 0.3589944653502032); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-1174322814'); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2, c2)=(0.6699015585920719, NULL); -- 0ms;
UPDATE t1 SET c2=-1.491401641E9, c2=x'', c2=0.5963917984231082 WHERE NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65, c65, c1)=(0.859345900056271, x'', 0.6919050037783433); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('!') WHERE ((((t1.c1) BETWEEN (t1.c65) AND (t1.c65))) NOTNULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(1751697625) WHERE CASE WHEN (((t1.c1))>((t1.c1))) THEN (+ (t1.c1)) WHEN ((NULL)==(t1.c65)) THEN ((t1.c2)>(t1.c1)) WHEN ((t1.c2)<<(t1.c2)) THEN LOWER(t1.c2) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1)=(NULL, '133303116') WHERE CAST(((t1.c65) NOTNULL) AS BLOB); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.9613258795655217; -- 0ms;
UPDATE t1 SET c65=x'' WHERE ((TRIM('쿈T', t1.c65)) BETWEEN (t1.c1) AND ((NOT ('26660469')))); -- 0ms;
UPDATE t1 SET c1='', c65=8.32397362E8; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'', c1=x'72e0'; -- 0ms;
UPDATE t1 SET (c1)=('0.9236500432030432'); -- 0ms;
UPDATE t1 SET (c2, c1)=(-2051737996, NULL) WHERE ((t1.c65 COLLATE RTRIM)>=(((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('') WHERE HEX(DISTINCT t1.c1); -- 1ms;
UPDATE OR IGNORE t1 SET (c2, c1, c1)=(2031802487, 1351268349, '0.6073331004677595') WHERE CASE ((t1.c65)<>(t1.c1))  WHEN NULL COLLATE RTRIM THEN CAST(t1.c2 AS INTEGER) ELSE t1.c1 COLLATE RTRIM END; -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=(0.605653751874522); -- 0ms;
UPDATE OR ABORT t1 SET c1='2087157128'; -- 0ms;
UPDATE t1 SET (c2, c65)=(NULL, 0.007550103924562901); -- 0ms;
UPDATE OR ABORT t1 SET c1=x'7fb1'; -- 1ms;
UPDATE OR FAIL t1 SET (c2)=(x'cab9'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL) WHERE ((CASE WHEN t1.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c65 WHEN t1.c1 THEN t1.c65 ELSE t1.c2 END) NOTNULL); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=('2057719979') WHERE ((t1.c65 COLLATE NOCASE) ISNULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'', c1=0.7719342659041777 WHERE ((t1.c2)-(CAST(t1.c1 AS NUMERIC))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'f1f45812', c1=0.953156939078237; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.3572452992955626); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('684925070'); -- 0ms;
UPDATE OR REPLACE t1 SET c1='', c2='W+' WHERE 0x63e984fc; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1)=('806466156', NULL) WHERE ((((t1.c2)<>(t1.c65))) NOT BETWEEN ((t1.c65 IN ())) AND (((t1.c65)<(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2='-1451028722' WHERE CASE (~ (t1.c1))  WHEN NULL THEN t1.c1 ELSE CASE t1.c1  WHEN t1.c1 THEN t1.c65 END END; -- 0ms;
UPDATE t1 SET c2='' WHERE CASE WHEN ((t1.c1)=(t1.c65)) THEN t1.c2 WHEN (t1.c2 IN (t1.c1)) THEN CAST(t1.c65 AS TEXT) WHEN t1.c2 THEN ((t1.c65) NOTNULL) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'') WHERE ((((t1.c1 COLLATE NOCASE)OR(t1.c65 COLLATE NOCASE)))OR(((t1.c1) NOT NULL))); -- 0ms;
UPDATE OR FAIL t1 SET c1=1.086237885E9, c2=1085863486; -- 0ms;
UPDATE OR IGNORE t1 SET c65='-2075022315' WHERE CASE ((t1.c1)LIKE(t1.c2))  WHEN (~ (t1.c65)) THEN (~ (t1.c1)) END; -- 0ms;
UPDATE OR IGNORE t1 SET c1=-1099676530; -- 0ms;
UPDATE OR REPLACE t1 SET (c1, c2)=('8%', '-0.0') WHERE (((((((((t1.c65 IN ()))AND(((((t1.c1)AND(t1.c1)))AND(t1.c65)))))AND(((t1.c65)LIKE(t1.c65)))))AND(((((((((NULL)AND(t1.c2)))OR(t1.c65)))AND(t1.c65)))AND(t1.c2)))))OR((- (t1.c65)))); -- 0ms;
UPDATE t1 SET (c65)=(NULL) WHERE (((t1.c2)) NOT BETWEEN ((((((t1.c1)AND(t1.c1)))AND(t1.c2)))) AND ((CAST(t1.c65 AS NUMERIC)))); -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(x'') WHERE ((((((((((t1.c2)IS NOT(NULL)))AND((t1.c1 IN (t1.c65)))))AND(NULLIF(t1.c2, t1.c65))))OR(t1.c2)))OR(((((t1.c1)OR(t1.c2)))AND(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE ((SQLITE_VERSION()) NOT BETWEEN (((t1.c1) NOT BETWEEN (t1.c2) AND (-120146986))) AND (CAST('-116875205' AS NUMERIC))); -- 1ms;
UPDATE OR IGNORE t1 SET (c65)=(0.05666539886071287) WHERE (((((((((t1.c1)OR(t1.c1)))AND(t1.c65)))OR(t1.c1)))AND(t1.c65)) IN (CASE t1.c65  WHEN t1.c1 THEN t1.c65 ELSE t1.c1 END, t1.c2 COLLATE NOCASE)); -- 0ms;
UPDATE t1 SET c65=0.9483318782966381 WHERE ((t1.c65)=(0.16850666079629706)); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c2)=(NULL, '\L-*'); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=0xffffffffbcc40eb7; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(939382484); -- 0ms;
UPDATE t1 SET (c2)=(NULL) WHERE (((CASE WHEN t1.c1 THEN t1.c65 ELSE t1.c65 END))>=((((t1.c2) NOT BETWEEN (0.7336357546543356) AND (t1.c2))))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.9864768989138929 WHERE 0.5530936977001277 COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE CAST(((t1.c65)LIKE(t1.c2)) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.4018218902346187) WHERE (((((((t1.c1))==((t1.c1))))OR((((t1.c65))<>((t1.c2))))))OR(((t1.c65) IS TRUE))); -- 0ms;
UPDATE t1 SET (c1)=('1294911993'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE ((((((((CAST(t1.c65 AS BLOB))AND(t1.c65 COLLATE RTRIM)))AND(((t1.c65)IS(t1.c2)))))AND((t1.c65 IN ()))))OR((- (t1.c1)))); -- 0ms;
UPDATE OR ABORT t1 SET c2=0.9125851254233799; -- 1ms;
UPDATE OR ABORT t1 SET (c2, c2)=(x'', 'W2S-'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('-233107383'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET c65='-1248110618'; -- 0ms;
UPDATE OR FAIL t1 SET c2=0.6841684377319143 WHERE ((((((t1.c1)AND(t1.c65)))OR(t1.c2))) NOT NULL); -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=(x''); -- 0ms;
UPDATE OR ABORT t1 SET (c1)=('-745900407'); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.41027946433147966 WHERE CASE SQLITE_COMPILEOPTION_USED(t1.c2)  WHEN ((t1.c65) BETWEEN (t1.c65) AND (t1.c65)) THEN ((t1.c2)+(t1.c65)) END; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c1='e{'; -- 0ms;
UPDATE t1 SET c2=0.8514811045232407, c1='', c2=0.5263820366440631; -- 0ms;
UPDATE OR FAIL t1 SET c2=0.21243657126964144, c1='1546897915'; -- 1ms;
UPDATE OR ROLLBACK t1 SET c2=0.3248458200036569; -- 0ms;
UPDATE OR IGNORE t1 SET c65='-2025962398', c2=0.3707686074641464, c1=NULL WHERE ((((((((((t1.c1) BETWEEN (t1.c2) AND (t1.c2)))AND((~ (t1.c2)))))OR(((t1.c1)==(t1.c2)))))AND(((5.53755413E8)||(t1.c2)))))AND(((t1.c65)<>(t1.c65)))); -- 0ms;
UPDATE t1 SET (c2, c65, c65)=(0.22457107604455062, NULL, 1717230671) WHERE (((t1.c2 IN (t1.c2, t1.c65)))-(1.271336641E9)); -- 0ms;
UPDATE t1 SET c2=NULL WHERE ((t1.c2 COLLATE RTRIM) NOT BETWEEN ((t1.c1 IN ())) AND (UNLIKELY(t1.c65))); -- 0ms;
UPDATE t1 SET (c1)=(0x5b54d068); -- 0ms;
UPDATE t1 SET (c65, c1)=('vs', 0Xffffffffa06df037) WHERE ((CASE t1.c65  WHEN t1.c65 THEN t1.c65 ELSE t1.c65 END)AND(t1.c1)); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE CASE WHEN ((((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))OR(t1.c2)))OR(t1.c2)))AND(t1.c1)))AND(t1.c2)) THEN (~ (t1.c2)) END; -- 0ms;
UPDATE t1 SET (c65)=('') WHERE '556077255'; -- 0ms;
UPDATE OR FAIL t1 SET c1=0.5278803878015166, c2='ᘼ_)g}죙n*' WHERE ((((((t1.c1)OR(t1.c1)))AND('1641612879')))+(((t1.c2)GLOB(t1.c65)))); -- 1ms;
UPDATE OR IGNORE t1 SET (c1)=('847442858') WHERE t1.c65; -- 0ms;
UPDATE OR REPLACE t1 SET c65=-1318536720, c1=0.1421028102996723; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('-1690544318') WHERE CASE (((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c1)))  WHEN ((t1.c2) IS FALSE) THEN CASE WHEN t1.c65 THEN t1.c65 END WHEN NULLIF(DISTINCT NULL, t1.c1) THEN CAST(t1.c65 AS INTEGER) WHEN ((((((((((((t1.c65)AND(t1.c1)))AND(t1.c1)))OR(t1.c2)))OR(t1.c65)))OR(t1.c2)))OR(t1.c65)) THEN CAST(t1.c2 AS TEXT) ELSE ((t1.c2)+(t1.c2)) END; -- 0ms;
UPDATE OR ABORT t1 SET (c65, c65)=(0.4841060611533077, NULL) WHERE CAST((NOT (t1.c1)) AS NUMERIC); -- 0ms;
UPDATE t1 SET (c2)=(-1.878981941E9); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('-505020174'); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.8345621759947823 WHERE ((t1.c65 IN ()) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c1='', c1=NULL WHERE ((((t1.c1 COLLATE BINARY)AND(((((t1.c2)AND(t1.c65)))OR(t1.c2)))))AND(t1.c1)); -- 0ms;
UPDATE OR ABORT t1 SET c2=0.9449264427056248, c1=x'801b'; -- 0ms;
UPDATE OR FAIL t1 SET (c2, c1, c1)=(1.086237885E9, '', -2134138021) WHERE ((((((((((NULL)AND(t1.c1)))AND(t1.c65)))AND(t1.c2)))OR(t1.c2))) BETWEEN (t1.c65 COLLATE RTRIM) AND (CASE t1.c2  WHEN t1.c2 THEN t1.c2 END)); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('|<)6') WHERE (~ (((t1.c65)<=(t1.c1)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=x'', c65=0x1b37e759 WHERE ((((((((((t1.c1)AND(t1.c2)))AND(t1.c65)))OR(t1.c1)))AND('Mq')))-(((t1.c65)>=(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL, c2=1.085863486E9, c1='635457800' WHERE (((((t1.c65)) BETWEEN ((t1.c2)) AND ((t1.c1))))<=((('-197770593') IS FALSE))); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=('e᯻()'); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL, c1=x'72c8', c1=x'a7cf'; -- 0ms;
UPDATE OR REPLACE t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65)=(-2.039452663E9, NULL) WHERE ((((((t1.c65)OR(t1.c2)))AND(t1.c1)))<(x'' COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-2136864342'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('-1272007164'); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2, c65, c2)=('0.709315907327262', '1296355917', 2.6660469E7) WHERE (((NOT (t1.c1)))/(t1.c1)); -- 0ms;
UPDATE t1 SET c2='m]㾨9䣷3'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x''; -- 0ms;
UPDATE OR FAIL t1 SET c65=0xffffffffe229ab88, c1=NULL WHERE t1.c2; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.07594979723653805, c1=0.5220947550501622; -- 0ms;
UPDATE t1 SET (c1)=(x'') WHERE CASE WHEN ((t1.c1) BETWEEN (t1.c65) AND (t1.c2)) THEN ((t1.c2) NOTNULL) WHEN ((t1.c1)>=(t1.c2)) THEN CAST(t1.c1 AS NUMERIC) WHEN ((((t1.c2)AND(t1.c2)))OR(t1.c2)) THEN ((t1.c2) NOT NULL) WHEN (- (t1.c65)) THEN CASE t1.c65  WHEN 0.43766950449542075 THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN 0.8655161603448667 WHEN t1.c65 THEN t1.c2 WHEN t1.c1 THEN t1.c1 END WHEN LIKELY(DISTINCT t1.c1) THEN ((t1.c1) NOT BETWEEN (t1.c65) AND ('Vs')) END; -- 0ms;
UPDATE t1 SET (c65, c65)=(x'', '-1949854929') WHERE 0x60052c46; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65, c1)=(NULL, '0.5240983891896946') WHERE t1.c2; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.7240350034266074) WHERE x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1)=(x'1005', ''); -- 0ms;
UPDATE OR REPLACE t1 SET c2=0.23508077204874767 WHERE ((((t1.c65) IS TRUE))*(((t1.c2) BETWEEN (x'') AND (t1.c1)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c2='0.7700918630112398', c1='-1788298935' WHERE NULL; -- 0ms;
UPDATE OR ABORT t1 SET (c1, c2)=(NULL, x'b5cdc9a36ab8') WHERE (+ (LOWER(DISTINCT t1.c65))); -- 0ms;
UPDATE t1 SET (c1)=(x'') WHERE ((CAST(t1.c1 AS NUMERIC)) ISNULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'ffc4'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('0.620115839141626') WHERE t1.c1; -- 0ms;
UPDATE OR FAIL t1 SET (c65)=('-1295785473'); -- 1ms;
UPDATE OR ROLLBACK t1 SET c65='1833778432', c1=0.9854121080198904, c65='!R', c65=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c65=2.45189408E8; -- 0ms;
UPDATE t1 SET (c1)=(0.6532540310460897); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.3705725483742691 WHERE ((((((t1.c65)AND(t1.c1)))AND(t1.c65)))<(0xffffffffb3fc05dc)); -- 0ms;
UPDATE t1 SET c2='1121533359' WHERE (~ ((((t1.c1))>=((t1.c65))))); -- 0ms;
UPDATE OR IGNORE t1 SET c2='-143991258'; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c1='⌱\rcἧꋟ*d9m', c2=0.03899520506612386 WHERE ((((((t1.c2))<=((t1.c1))), NULL, t1.c1 COLLATE NOCASE))<=((t1.c1 COLLATE RTRIM, ((t1.c2)=(t1.c65)), (((t1.c2)) BETWEEN ((t1.c2)) AND ((1279642022)))))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'3ca0' WHERE (((((t1.c2)) BETWEEN (('gL6	越\')) AND ((t1.c65))))>>((('169119239') BETWEEN (t1.c65) AND (t1.c2)))); -- 0ms;
UPDATE OR ABORT t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c1=1740473392; -- 0ms;
UPDATE OR REPLACE t1 SET c65=0.11727754706943894; -- 0ms;
UPDATE OR REPLACE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0x4ef680f8) WHERE (0X196ce75 COLLATE NOCASE IN ()); -- 1ms;
UPDATE t1 SET c1='㡐_0' WHERE ((+ (0.6737653040647349)) IN ('''a扱4BMZ&5')); -- 0ms;
UPDATE t1 SET c1=NULL WHERE (((((t1.c1)>(t1.c65))))!=(((((t1.c2))<((t1.c1)))))); -- 0ms;
UPDATE OR FAIL t1 SET c2='537881501', c2=NULL, c65=NULL WHERE t1.c2; -- 0ms;
UPDATE t1 SET c65=x'' WHERE (((IFNULL(DISTINCT t1.c2, x'')))<=(((t1.c65 IN ())))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65, c1)=(0.7578248622393708, 0xffffffffbf54d2ac) WHERE (((0.2944148525585619, t1.c65, t1.c1)) NOT BETWEEN ((CAST(t1.c65 AS NUMERIC), (((t1.c1))<((t1.c2))), ((t1.c1) NOT NULL))) AND ((CASE t1.c1  WHEN t1.c65 THEN t1.c2 END, ((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c1)), t1.c1 COLLATE NOCASE))); -- 1ms;
UPDATE OR IGNORE t1 SET c1=NULL, c1=-2039452663; -- 0ms;
UPDATE t1 SET c65=x'' WHERE CAST(CAST(t1.c65 AS BLOB) AS REAL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'5a995e55' WHERE NULL; -- 1ms;
UPDATE t1 SET (c2)=('-1295785473'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('댶r4⢙') WHERE ((((NULLIF(t1.c65, t1.c65))OR(((((((((((((t1.c2)AND(t1.c65)))OR(NULL)))AND(t1.c1)))OR(t1.c2)))OR(t1.c65)))OR(t1.c65)))))OR((((NULL, t1.c1, t1.c1, t1.c2, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c65, t1.c1, t1.c1)) AND ((t1.c2, t1.c65, t1.c2, t1.c1, t1.c1))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.09290562058701368); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE CAST(((t1.c2) BETWEEN (t1.c1) AND ('\|')) AS TEXT); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(0.6576887455165868) WHERE ((CASE WHEN t1.c1 THEN t1.c2 END) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'7a61'; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=0.5646589503307733 WHERE '-1932553648'; -- 1ms;
UPDATE t1 SET c2=x'91ad'; -- 0ms;
UPDATE OR IGNORE t1 SET c1='371109859' WHERE ((+ (t1.c65)) IN ()); -- 0ms;
UPDATE OR REPLACE t1 SET c1=NULL; -- 0ms;
UPDATE t1 SET c1='', c1=x''; -- 0ms;
UPDATE t1 SET c65=0.22537145242346268; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x''; -- 0ms;
UPDATE t1 SET (c65, c65)=(NULL, 0Xffffffff92e490d6) WHERE ((((((((((t1.c65)OR(t1.c65)))OR(t1.c65)))OR(t1.c1)))OR(t1.c65)))&(t1.c65)); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c2='365224881'; -- 0ms;
UPDATE t1 SET c1=x'', c65=0.8295572541413893; -- 0ms;
UPDATE t1 SET (c2)=('1132063110') WHERE t1.c65; -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=NULL, c65=5.22168937E8 WHERE ((((t1.c2)LIKE(t1.c65))) NOT BETWEEN ((t1.c65 IN (t1.c1))) AND ((((NULL, t1.c65, 0.5609024247916634, t1.c65, t1.c1))!=((t1.c2, t1.c2, t1.c1, t1.c2, 0.48631117179098726))))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c65=x'' WHERE 0xffffffffd2aba934; -- 0ms;
UPDATE t1 SET (c65)=(0xffffffffa551075a) WHERE TOTAL_CHANGES(); -- 0ms;
UPDATE OR ABORT t1 SET (c1)=('0.9267744171271265'); -- 0ms;
UPDATE t1 SET c65='318738738'; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'') WHERE ((CAST(t1.c65 AS TEXT))<((- (t1.c2)))); -- 0ms;
UPDATE t1 SET (c2, c2)=(-851342835, 0x2204a0f7) WHERE t1.c2; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE CASE WHEN t1.c2 COLLATE BINARY THEN (+ (t1.c65)) WHEN (t1.c65 IN (1467752070)) THEN CHANGES() WHEN PRINTF(t1.c1) THEN ((t1.c65)+(t1.c65)) ELSE (~ (t1.c65)) END; -- 0ms;
UPDATE OR REPLACE t1 SET c65=x'', c65=x'', c2=0.11268914704514998; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.5162679655223827, c1=x'' WHERE (((t1.c65)) NOT BETWEEN ((((t1.c65) IS TRUE))) AND ((((((((((0.6479050918513009)OR(t1.c2)))OR(t1.c1)))OR(t1.c1)))OR(t1.c2))))); -- 0ms;
UPDATE t1 SET (c2, c2)=('26660469', '0.9738398153685863'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1, c1, c2)=(177359598, 0xffffffffd3c9819c, x'5c36', NULL) WHERE ((((x'')<=(t1.c2))) BETWEEN (((t1.c65) NOTNULL)) AND ((((t1.c65, t1.c2, t1.c2))<((x'79b0', t1.c1, 0.6138116578391832))))); -- 0ms;
UPDATE OR FAIL t1 SET c2=0.029156867935835717, c2=0.2953157564438028; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(')|5o#	e#') WHERE -2133937530; -- 0ms;
UPDATE t1 SET (c1, c1)=(0.9386538746232078, '-1274830402') WHERE ((t1.c65 COLLATE NOCASE) BETWEEN (((t1.c1)||(t1.c2))) AND (NULL)); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('*끠') WHERE ((CAST(t1.c2 AS BLOB)) NOT BETWEEN (CAST(t1.c1 AS BLOB)) AND ((NOT (t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0xfffffffff0e8b693; -- 0ms;
UPDATE OR FAIL t1 SET c65=NULL, c2=NULL, c65=x'' WHERE ((((t1.c2)IS NOT(t1.c2))) BETWEEN (((t1.c1) IS TRUE)) AND ((+ (t1.c1)))); -- 0ms;
UPDATE OR REPLACE t1 SET c2=x'', c65=0.11784036693515765, c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c65=-8.55495957E8 WHERE ((((CASE t1.c1  WHEN t1.c65 THEN t1.c1 ELSE t1.c2 END)OR(((t1.c2) BETWEEN (t1.c1) AND (t1.c2)))))OR(((t1.c2)=(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2='1831262905'; -- 0ms;
UPDATE t1 SET c65=x'b3bb'; -- 1ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE MAX(((t1.c65)!=(t1.c2)), ((t1.c1) IS TRUE)); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.4841060611533077) WHERE CASE UNLIKELY(t1.c65)  WHEN CAST(t1.c2 AS BLOB) THEN t1.c1 COLLATE RTRIM ELSE ((t1.c1)+(t1.c65)) END; -- 0ms;
UPDATE t1 SET (c2)=(0.8908344746752194) WHERE CAST(t1.c2 AS BLOB) COLLATE RTRIM; -- 0ms;
UPDATE OR ABORT t1 SET (c2, c2)=(0.8189815614295757, 0.8005092500234494) WHERE CASE ((t1.c2)IS NOT(t1.c1))  WHEN CASE WHEN t1.c1 THEN t1.c2 END THEN ((t1.c1) NOT NULL) ELSE (+ (t1.c65)) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.5690088087270121) WHERE x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(168820597) WHERE ((((((t1.c1)*(x'6d07')))OR(t1.c2 COLLATE NOCASE)))OR((t1.c1 IN ()))); -- 0ms;
UPDATE OR ABORT t1 SET (c65)=(NULL) WHERE (((t1.c1)) BETWEEN ((CAST(t1.c65 AS INTEGER))) AND ((((t1.c2)|(t1.c65))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('SN'); -- 0ms;
UPDATE t1 SET (c65)=(0.37518826008980877); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x''; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=('148544851'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('Yu1'); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=0.6525584640703064 WHERE 0Xfffffffff93c388e; -- 0ms;
UPDATE OR IGNORE t1 SET c2='170198343'; -- 0ms;
UPDATE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=',_Alo5I' WHERE (((t1.c1)) NOT BETWEEN ((t1.c2 COLLATE RTRIM)) AND ((((NULL) IS FALSE)))); -- 1ms;
UPDATE OR IGNORE t1 SET c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2, c2)=('-745900407', '-1613309082', x'') WHERE (+ (0x5030e3ba)); -- 0ms;
UPDATE OR IGNORE t1 SET c1='2004414601' WHERE TYPEOF(DISTINCT t1.c1) COLLATE RTRIM COLLATE NOCASE; -- 0ms;
UPDATE t1 SET c2=0.620115839141626 WHERE (((t1.c1)) NOT BETWEEN (((t1.c2 IN (t1.c65, t1.c1)))) AND ((((t1.c1)|(t1.c65))))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c65=553755413, c2=NULL WHERE ((((t1.c65) BETWEEN (t1.c65) AND (t1.c2))) NOTNULL); -- 0ms;
UPDATE OR ABORT t1 SET c1=0.45948453937006284; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.20886267168836825) WHERE CAST((((('-1329410088')OR(0.28817475185316055)))AND(t1.c1)) AS REAL); -- 0ms;
UPDATE OR FAIL t1 SET c2='\nW', c2=x'', c2='' WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.5117009181465738 WHERE t1.c1; -- 0ms;
UPDATE t1 SET (c65, c2)=(0.6263878568735209, 0xfffffffff9fb1b92) WHERE ((((t1.c1)IS(t1.c65)))<=(t1.c2 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2)=('1240699387', 0xffffffffe407c87a) WHERE ((((((((((NULL)AND(t1.c1)))OR(t1.c65)))AND('')))AND(t1.c2)))IS((((5.67660883E8, t1.c65, t1.c2))<>((t1.c2, t1.c65, t1.c1))))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.3221494879953388, c65=0xffffffff88525905 WHERE ((((t1.c1)<(t1.c1))) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1)=('609813250', 0xffffffff931b80e2) WHERE CAST(CASE WHEN NULL THEN x'' WHEN t1.c65 THEN t1.c1 WHEN t1.c2 THEN t1.c65 WHEN t1.c2 THEN t1.c1 WHEN t1.c2 THEN t1.c2 END AS BLOB); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1, c65)=(-1565850931, 5.37881501E8, 0.7893648191646647) WHERE SQLITE_VERSION(); -- 0ms;
UPDATE t1 SET c2=0Xffffffffbd77e82c WHERE LIKELY((('[D')=(t1.c2))); -- 0ms;
UPDATE t1 SET (c2)=('') WHERE (t1.c2 IN ((((t1.c2)) BETWEEN ((t1.c1)) AND ((-1.878981941E9))))); -- 1ms;
UPDATE OR REPLACE t1 SET (c65, c2, c2)=(-9.7100175E8, 0.3019994638971777, x'e212') WHERE (((t1.c1, t1.c1, t1.c2)) NOT BETWEEN ((((t1.c1)/(t1.c65)), (((t1.c1, t1.c65, t1.c65)) BETWEEN ((t1.c1, t1.c2, t1.c2)) AND ((NULL, t1.c65, t1.c65))), CASE t1.c2  WHEN t1.c2 THEN t1.c65 ELSE t1.c2 END)) AND ((((t1.c1)||(t1.c65)), CAST(t1.c2 AS TEXT), 0.13907847469366252))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'7287', c65=0.518943726288187, c2=x'' WHERE (NOT (CASE t1.c1  WHEN t1.c65 THEN t1.c2 END)); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(0.7387189200421447) WHERE (((CAST(t1.c65 AS BLOB)))<(((((t1.c1))<=((t1.c1)))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL) WHERE (~ ((~ (t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE ((((t1.c2) ISNULL))LIKE(((t1.c1) NOT BETWEEN (t1.c1) AND (NULL)))); -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=('-2070699535'); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=('522168937'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE (~ (NULLIF(t1.c1, -937992704))); -- 1ms;
UPDATE OR IGNORE t1 SET (c1)=('-1151424946') WHERE 0.11074644996260685; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65)=('-325548373', '-1325544018') WHERE ((NULL) NOT BETWEEN (t1.c65) AND (CAST(t1.c65 AS REAL))); -- 1ms;
UPDATE OR FAIL t1 SET (c1)=('') WHERE x'7136' COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c2='bFCM-]\ns'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('Z릫') WHERE ((((0.2438286863452469)OR(((t1.c65)>(t1.c2)))))AND(CAST(t1.c2 AS REAL))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(832397362) WHERE (((NULL))<>(((- (x''))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('ny2o8c\r샶') WHERE ((t1.c2)AND(0.2991962254576437)) COLLATE RTRIM; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=x'', c2=x'' WHERE (((t1.c2)) BETWEEN ((t1.c65 COLLATE RTRIM)) AND (((+ (t1.c2))))); -- 0ms;
UPDATE OR ABORT t1 SET (c1, c1, c1)=(0Xfffffffffbc13fe9, '-1921460065', x''); -- 0ms;
UPDATE t1 SET (c2)=('?똄') WHERE ((x'') NOT BETWEEN (COALESCE(t1.c65, -8.55495957E8)) AND (((t1.c2)<(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL) WHERE CASE WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65, c65)=(0.5014460551420311, x'3ec128bc', -1760305071) WHERE '1801613667'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.30601142597395115, c2='385529851'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL, c65=NULL WHERE ((((((t1.c65, t1.c65, t1.c1)) NOT BETWEEN ((t1.c1, t1.c65, t1.c1)) AND ((t1.c1, t1.c1, t1.c1)))))<((CAST(t1.c65 AS REAL)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.6669254852719047); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(-2.051737996E9); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'', c1=0.852540481727226; -- 0ms;
UPDATE OR ROLLBACK t1 SET c65='(H'; -- 0ms;
UPDATE t1 SET c2=554312981 WHERE json_array(CAST(t1.c2 AS INTEGER), (((t1.c65))>((t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('270444999'); -- 0ms;
UPDATE OR ABORT t1 SET (c1)=('MFWbU	,'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('	&&'''); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1='0.7926908156504773', c65=0xe47dbf4, c65=0.2635312952702473; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('sK'); -- 1ms;
UPDATE OR IGNORE t1 SET c1=0.3271672102505442 WHERE ((((t1.c65) IS FALSE))-(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1, c2, c2)=(2033247234, 0.6199942083264471, '-1021786866') WHERE ((((t1.c65)LIKE(x'8058'))) NOT BETWEEN (((t1.c1) IS FALSE)) AND ((t1.c2 IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c65='1994175554'; -- 0ms;
UPDATE t1 SET c65=x'', c1=-9.7100175E8, c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE t1 SET c65='717564696'; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.3140645189186293); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x''; -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=x''; -- 1ms;
UPDATE OR IGNORE t1 SET (c65)=(x''); -- 0ms;
UPDATE OR FAIL t1 SET (c2)=(x''); -- 0ms;
UPDATE OR ABORT t1 SET (c65)=(NULL) WHERE 0.01997512633830334; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('-.~') WHERE '1346505730'; -- 0ms;
UPDATE t1 SET c2='1194254398', c1=x'0b3d'; -- 0ms;
UPDATE t1 SET (c65)=('-975054313'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR ABORT t1 SET c65=-862740586, c1=0.9880307009598596; -- 0ms;
UPDATE t1 SET (c1, c65, c2)=('殝0f뚃f', NULL, 0.827324989764222); -- 0ms;
UPDATE OR FAIL t1 SET c1=0.13161102039495032, c2='0.21243657126964144', c1='1367149107'; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'610f' WHERE ((((t1.c1)AND(t1.c1)))OR(t1.c2)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'be99', c2=1.751697625E9; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=NULL, c65=0.7925626986481196, c1=-1475223638; -- 0ms;
UPDATE t1 SET c2=x'' WHERE load_extension(CAST(t1.c1 AS BLOB)); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('-579154361'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1)=(NULL, '-249373165'); -- 0ms;
UPDATE t1 SET c2='-2105440682', c65='1121533359'; -- 0ms;
UPDATE OR ABORT t1 SET (c2, c1)=(NULL, NULL) WHERE t1.c2; -- 0ms;
UPDATE OR ABORT t1 SET c1='N2'; -- 0ms;
UPDATE t1 SET c65=''; -- 0ms;
UPDATE t1 SET (c1, c1)=(0.3516036999810974, x'') WHERE ('답R' IN ()); -- 0ms;
UPDATE OR FAIL t1 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE (((((t1.c1))>=((t1.c1))))&(((t1.c1)>>(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1)=(0.21165005840403373, ''); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(''); -- 0ms;
UPDATE t1 SET (c65)=(x'') WHERE t1.c65 COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('\rq') WHERE ((t1.c65) NOT BETWEEN (((((t1.c65)OR(t1.c1)))OR(t1.c1))) AND (1912750882)); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.4144007369262849) WHERE HEX(NULLIF(DISTINCT t1.c1, t1.c2)); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.6987834007415716, c1=x''; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=NULL, c65=x'', c1=NULL WHERE ((CASE '-842935203'  WHEN t1.c2 THEN -1.7976931348623157E308 END) NOTNULL); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=NULL WHERE IFNULL((((t1.c65)) NOT BETWEEN ((t1.c65)) AND ((t1.c65))), (- (t1.c1))); -- 2ms;
UPDATE OR ROLLBACK t1 SET c2=NULL, c2=0.6114753827173284, c2='e]'; -- 0ms;
UPDATE t1 SET c65='MLa^qO'; -- 0ms;
UPDATE OR REPLACE t1 SET c65='1215351548' WHERE ((NOT (t1.c2)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE t1.c2; -- 0ms;
UPDATE t1 SET (c2)=('%D') WHERE ((((t1.c2 IN ())))>((((t1.c2)*(t1.c2))))); -- 0ms;
UPDATE t1 SET c65='vt|p''V01]' WHERE LOWER(DISTINCT ((t1.c1) NOTNULL)); -- 0ms;
UPDATE t1 SET c65=0.1328056692439158 WHERE (+ (CASE WHEN t1.c2 THEN t1.c2 ELSE t1.c65 END)); -- 0ms;
UPDATE t1 SET (c65)=('') WHERE (((+ (t1.c1))) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.49711302329647233; -- 0ms;
UPDATE OR IGNORE t1 SET c65='1664854370'; -- 1ms;
UPDATE OR REPLACE t1 SET (c65)=(x'69b81df8'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'', c1=x'', c65='fd\nTNyN2' WHERE ((((t1.c65) NOT BETWEEN (x'') AND (t1.c65))) IS FALSE); -- 0ms;
UPDATE OR FAIL t1 SET (c1)=(NULL) WHERE (load_extension(t1.c2, t1.c2) IN (CASE WHEN t1.c65 THEN t1.c1 END)); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.0017470138180185613; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'83bb'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c65=NULL, c65=NULL WHERE ((((t1.c1)>>(t1.c1))) ISNULL); -- 0ms;
UPDATE OR FAIL t1 SET c2='0.2944148525585619'; -- 0ms;
UPDATE t1 SET c2=x''; -- 0ms;
UPDATE t1 SET c2='-84093151' WHERE (((((t1.c2)/(t1.c2)), UNLIKELY(t1.c65), ((t1.c1)GLOB(t1.c2)), (+ (t1.c65)), CASE '729276026'  WHEN t1.c1 THEN t1.c2 ELSE t1.c1 END))=(((t1.c1 IN ()), ((t1.c1)-(t1.c1)), ((((t1.c65)AND(t1.c1)))AND(t1.c1)), ((t1.c1) IS FALSE), ((t1.c2)+(t1.c1))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.23936707398014556) WHERE (((~ (0X41de6d25)))*(((((((((t1.c65)OR(t1.c2)))AND(t1.c1)))AND(t1.c1)))AND(t1.c2)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=x'' WHERE ((((1455282662)|(t1.c2))) IS FALSE); -- 0ms;
UPDATE t1 SET (c65, c1)=(x'', '591733796') WHERE ((0.6689918519542709) NOT BETWEEN (CASE t1.c1  WHEN t1.c2 THEN t1.c65 ELSE t1.c65 END) AND (-1.272007164E9)); -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=NULL WHERE CASE CASE t1.c2  WHEN t1.c65 THEN t1.c65 ELSE t1.c1 END  WHEN MAX(t1.c65, NULL) THEN t1.c2 ELSE t1.c65 END; -- 0ms;
UPDATE OR ABORT t1 SET (c1)=(0Xffffffffc049c5ef) WHERE LIKELIHOOD((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c65))), 0.5272140546002259); -- 0ms;
UPDATE OR IGNORE t1 SET c2='-92964217'; -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=('-1878981941') WHERE ((((((t1.c2) IS FALSE))OR(CAST(t1.c2 AS REAL))))OR(t1.c1 COLLATE RTRIM)); -- 0ms;
UPDATE t1 SET c1=-937992704 WHERE ((((0.05857072063050073)AND(t1.c65)))OR(t1.c65)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1)=('ja', 'Q^aZ?') WHERE ((CASE t1.c2  WHEN t1.c2 THEN t1.c65 WHEN t1.c1 THEN t1.c65 WHEN t1.c1 THEN t1.c1 END) BETWEEN (t1.c65) AND (CASE WHEN x'' THEN t1.c1 WHEN t1.c65 THEN NULL WHEN t1.c1 THEN t1.c65 ELSE t1.c65 END)); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65, c2)=('0.9267744171271265', x'', '0.37362630073682546'); -- 0ms;
UPDATE OR IGNORE t1 SET c1='-116875205'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE CAST((((t1.c1, t1.c1, t1.c2)) NOT BETWEEN ((t1.c65, t1.c65, t1.c1)) AND ((t1.c1, t1.c65, t1.c2))) AS REAL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('bXw醿Jw9Dљ'); -- 0ms;
UPDATE t1 SET c65=NULL, c65=891047065, c65=NULL WHERE ((((((t1.c1)IS(t1.c1)))OR(((t1.c1)LIKE(t1.c2)))))AND(((t1.c1)<(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('q6S[o'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE t1.c2; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(2.08361756E8) WHERE 'J9<IEZ'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE x'd6c2' COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c65='0.533523330696404'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.6932650188056573); -- 0ms;
UPDATE t1 SET c2='-1670499789'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.15474499722644186) WHERE ((t1.c65 COLLATE BINARY)>=(((t1.c65)+(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65='1085863486', c2=0.15242736406301338, c65='-1484304273'; -- 0ms;
UPDATE OR FAIL t1 SET (c1)=('Hj]o⍨]Y&|'); -- 0ms;
UPDATE t1 SET c2=-1.491401641E9 WHERE ((((t1.c65)AND(t1.c1)))OR((t1.c65 IN ()))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1='Eh?8t,,', c2='X06{Dg4', c2=x''; -- 0ms;
UPDATE OR REPLACE t1 SET c1=0Xffffffffb2c3e1ff WHERE (((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((((t1.c65)<=(t1.c65))))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'2c95'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1, c2)=('Ꚅ', 0.061368611061918044, 0.24362802401160544) WHERE 0.5576669518258782; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1)=(x'', '356266294'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.9600678434250769, c1='LaR ', c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65)=(x'', 1.121533359E9); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.7123137034443504, c2=NULL; -- 0ms;
UPDATE OR REPLACE t1 SET c2='1086237885', c1=5.53755413E8, c65=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('') WHERE ((((t1.c2)GLOB(t1.c1))) NOT BETWEEN (((t1.c2)+(NULL))) AND (((t1.c1) NOT BETWEEN (t1.c2) AND (0.657539135195622)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(''); -- 0ms;
UPDATE OR IGNORE t1 SET c1='1551755950' WHERE t1.c65; -- 0ms;
UPDATE OR ABORT t1 SET c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.27837174203263493; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE ((((t1.c1)>=(-6.420473E8)))AND((((t1.c65))<=((t1.c1))))); -- 0ms;
UPDATE t1 SET (c2)=(x'') WHERE ((t1.c2)>=(UPPER(t1.c2))); -- 0ms;
UPDATE OR FAIL t1 SET c65='1781514744', c2=NULL, c1=x'' WHERE CASE (((t1.c1, t1.c2, t1.c65))>=((t1.c1, t1.c65, t1.c2)))  WHEN ((t1.c65) NOT BETWEEN (t1.c1) AND (0.9346190237852795)) THEN (((t1.c65, t1.c65, t1.c1)) NOT BETWEEN ((t1.c65, 0x4bc70ec1, t1.c2)) AND ((t1.c65, NULL, 0.4564976340261496))) WHEN t1.c65 COLLATE RTRIM THEN 0.005148537024371569 WHEN t1.c1 COLLATE BINARY THEN json_insert(t1.c2, t1.c2, t1.c2) END; -- 0ms;
UPDATE t1 SET (c1)=(x'') WHERE ((t1.c65)IS((('혓i')!=(t1.c2)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(x''); -- 0ms;
UPDATE t1 SET (c1)=(''); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'8e21' WHERE '980439058'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.7564967935864584); -- 0ms;
UPDATE OR REPLACE t1 SET (c65)=('-1174405314') WHERE (((t1.c65))<((t1.c65))) COLLATE BINARY; -- 0ms;
UPDATE t1 SET (c1)=(0X28d3208e); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE ',뽘}\rbhu'; -- 0ms;
UPDATE OR ABORT t1 SET c1='1903820636'; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(x'1b99d2fe') WHERE NULL COLLATE RTRIM; -- 1ms;
UPDATE OR IGNORE t1 SET (c1)=(57283904); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE (t1.c2 IN (t1.c1 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c2=x'', c1=x'6801' WHERE UPPER(DISTINCT CAST(t1.c65 AS REAL)); -- 0ms;
UPDATE OR FAIL t1 SET (c2)=(x''); -- 0ms;
UPDATE t1 SET (c1)=(x''); -- 0ms;
UPDATE OR FAIL t1 SET (c2, c65)=(x'', x'ec9a') WHERE (t1.c65 IN ()) COLLATE RTRIM; -- 0ms;
UPDATE OR REPLACE t1 SET c1=x''; -- 0ms;
UPDATE t1 SET c65='v?', c2=0.7432780577230648 WHERE (((t1.c1)) BETWEEN (((t1.c1 IN ()))) AND ((CAST(t1.c2 AS TEXT)))); -- 0ms;
UPDATE t1 SET c65='-1387752556'; -- 0ms;
UPDATE OR REPLACE t1 SET c2='⌱\rcἯꋟ*d9m' WHERE CASE CAST(t1.c65 AS TEXT)  WHEN (t1.c65 IN ()) THEN (((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c2))) END; -- 1ms;
UPDATE OR IGNORE t1 SET (c65, c2, c65)=(0Xffffffffd72fb95f, 0Xffffffffca212950, 575881923); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65)=(NULL, x''); -- 0ms;
UPDATE t1 SET (c2)=(0Xfffffffffd7eac65) WHERE (((LOWER(t1.c65)))<((((t1.c65)GLOB(t1.c1))))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=473235751 WHERE ((t1.c65 COLLATE BINARY) BETWEEN (rtreenode(t1.c1, t1.c65)) AND (CAST(t1.c1 AS INTEGER))); -- 0ms;
UPDATE OR ABORT t1 SET c65=2031802487; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65)=('1706780210', NULL) WHERE x''; -- 1ms;
UPDATE t1 SET (c1)=(0.10882759054588165); -- 0ms;
UPDATE OR ABORT t1 SET c65=-1295785473; -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=('-1626095765'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(-1880369363) WHERE t1.c65; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('') WHERE (((t1.c1 IN ())) NOT BETWEEN ((t1.c1 IN ())) AND ('m]')); -- 1ms;
UPDATE OR REPLACE t1 SET c1='' WHERE 0.8270390243994915; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.9874757925477149, c2=x'' WHERE (((((t1.c2))<((t1.c2)))) NOTNULL); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.8389249840706987 WHERE (NOT (t1.c1 COLLATE RTRIM)); -- 0ms;
UPDATE OR ABORT t1 SET c1=x'' WHERE ((((t1.c1) IS TRUE)) IS TRUE); -- 0ms;
UPDATE t1 SET c2='f擜', c1=0.4147157716403481 WHERE ((((t1.c65))<((t1.c65))) IN ((t1.c65 IN ('-1e500', t1.c65)), (- (t1.c1)))); -- 0ms;
UPDATE t1 SET c2=x'', c65=x'' WHERE NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c1=-1603407817; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('磎far'); -- 0ms;
UPDATE t1 SET c2='0.9591395907211926' WHERE (((t1.c65)) NOT BETWEEN ((3.95098539E8)) AND ((x'd8fc'))) COLLATE RTRIM; -- 0ms;
UPDATE OR ABORT t1 SET c2=NULL WHERE (((t1.c2) NOT BETWEEN (t1.c65) AND (t1.c65)) IN (TOTAL_CHANGES())); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'56de') WHERE ((SQLITE_COMPILEOPTION_USED(t1.c65))LIKE(((t1.c1)OR(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2='/o^爁iq', c1=0.6342821948141191 WHERE CAST(t1.c2 AS TEXT); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('YTO}Uy('); -- 0ms;
UPDATE OR ABORT t1 SET (c1)=(x'') WHERE 0.16142530021189394; -- 0ms;
UPDATE OR FAIL t1 SET c2='' WHERE CASE CAST(t1.c1 AS BLOB)  WHEN CASE WHEN t1.c2 THEN t1.c65 ELSE 0.9405556327644227 END THEN NULL WHEN (((t1.c65)) BETWEEN ((t1.c65)) AND ((t1.c1))) THEN RTRIM(t1.c65) WHEN ((t1.c1) ISNULL) THEN CASE WHEN t1.c2 THEN t1.c1 END ELSE ((t1.c2) BETWEEN (t1.c65) AND (t1.c65)) END; -- 0ms;
UPDATE t1 SET (c2)=('324518032') WHERE -311839333 COLLATE BINARY; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1='2127351763' WHERE (- (((t1.c2) IS FALSE))); -- 0ms;
UPDATE t1 SET c1=0.7808630385073708; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65)=(NULL, NULL) WHERE (((t1.c1)) NOT BETWEEN ((CAST(t1.c65 AS NUMERIC))) AND ((MAX(t1.c2, t1.c65, t1.c1, t1.c2)))); -- 0ms;
UPDATE OR ABORT t1 SET c2='Zh', c2=0.9854121080198904; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65)=(NULL, NULL) WHERE (- ((((t1.c1, t1.c1, t1.c65)) BETWEEN ((t1.c65, t1.c65, x'66bb')) AND ((t1.c65, t1.c65, t1.c2))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'8d05'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65)=('l6.>D~', NULL) WHERE ((((t1.c65)OR(t1.c1)))OR(t1.c65)) COLLATE NOCASE; -- 0ms;
UPDATE t1 SET c1='8{', c1=1.751697625E9, c2=NULL WHERE NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(NULL) WHERE (((t1.c2)) NOT BETWEEN ((((NULL) IS TRUE))) AND (((((t1.c1)) NOT BETWEEN ((0.9160922646404046)) AND ((t1.c65)))))); -- 0ms;
UPDATE t1 SET c2=NULL WHERE x''; -- 0ms;
UPDATE OR IGNORE t1 SET c2='-2034697795', c1='mbº?*', c1=x'2278'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'') WHERE ((((t1.c65) NOT NULL))>>(t1.c1 COLLATE NOCASE)); -- 0ms;
UPDATE t1 SET (c1)=('495946827') WHERE ((((((((t1.c2)AND(t1.c1)))AND(t1.c65)))OR(json_extract(t1.c65, t1.c1))))AND(t1.c1)); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(553755413); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE t1 SET (c2, c2, c65)=('0.7774465831480277', x'8e49', '()'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE t1 SET (c65, c65)=(x'', NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65)=(x'ad00ed72', 0.43087770212738796) WHERE ((t1.c2)-(t1.c65)) COLLATE NOCASE; -- 0ms;
UPDATE OR REPLACE t1 SET c2=NULL, c65=NULL, c1=0.2099295969811492 WHERE (~ ((((t1.c65)) BETWEEN ((t1.c65)) AND ((t1.c2))))); -- 1ms;
UPDATE t1 SET c2=1.7976931348623157E308; -- 0ms;
UPDATE t1 SET (c1, c1)=(-1051410868, '863126727') WHERE '1n~䑨5'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1, c2)=(0.8631992391924382, 0.6814496082525706, 0.5391828277937611) WHERE (((((((((((((((t1.c65)) NOT BETWEEN ((t1.c2)) AND ((t1.c1))))AND(((((t1.c1)AND(t1.c65)))AND(t1.c65)))))OR((NOT (t1.c2)))))OR((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))))OR(t1.c1)))OR(((t1.c2) BETWEEN (t1.c65) AND (t1.c2)))))AND(((t1.c1) NOT NULL))); -- 0ms;
UPDATE OR IGNORE t1 SET c65='-1945763175'; -- 0ms;
UPDATE t1 SET c65='1831262905', c65=0.8187518569944371; -- 1ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE CASE WHEN CAST(t1.c65 AS NUMERIC) THEN (~ (NULL)) WHEN ((t1.c65)*(t1.c65)) THEN NULL WHEN CAST(t1.c65 AS NUMERIC) THEN ((t1.c2) ISNULL) ELSE CASE t1.c65  WHEN t1.c65 THEN t1.c2 WHEN t1.c2 THEN t1.c1 WHEN t1.c2 THEN t1.c1 ELSE t1.c65 END END; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL, c1='832397362', c2=19307452; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'6dc9'); -- 0ms;
UPDATE t1 SET (c65)=('-642047300'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE CAST(((t1.c65) BETWEEN (t1.c2) AND (t1.c65)) AS REAL); -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=(0.09403796249043361) WHERE (- (((NULL)AND(t1.c1)))); -- 0ms;
UPDATE OR FAIL t1 SET (c1, c65, c1)=(0.4478711256685747, '323655473', NULL) WHERE (t1.c1 IN ()) COLLATE NOCASE; -- 1ms;
UPDATE OR ABORT t1 SET c65=x'fd02'; -- 0ms;
UPDATE OR FAIL t1 SET c2=-1.878981941E9, c2=x'5f88'; -- 0ms;
UPDATE OR IGNORE t1 SET c1='*7'; -- 0ms;
UPDATE t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE (NOT (NULL)); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.24792076283331632); -- 1ms;
UPDATE OR IGNORE t1 SET (c65, c65)=(-7.61982651E8, 0.5659620564406341) WHERE json((t1.c2 IN (t1.c65))); -- 0ms;
UPDATE t1 SET c1='-1690121007', c65='Oe'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('H1C)+{') WHERE 0.7847060979853864; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.7678379101321405; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('0.8976164501959774') WHERE ((t1.c65 COLLATE RTRIM)IS NOT('1697008334')); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1, c1)=(x'4f27', 'm[3?]', NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'941e' WHERE LOWER(((t1.c1)%(t1.c65))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0Xffffffffdd7ace47 WHERE CASE (NOT (t1.c1))  WHEN ((t1.c2)GLOB(t1.c1)) THEN ((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c2)) WHEN (~ (t1.c2)) THEN (NOT (t1.c2)) WHEN x'd2538daa' THEN ((t1.c1)+(t1.c1)) END; -- 0ms;
UPDATE OR IGNORE t1 SET c1='?똄', c2=x'71f2', c1=x'' WHERE ((((CASE -1.642093026E9  WHEN t1.c1 THEN t1.c2 WHEN t1.c65 THEN t1.c2 WHEN t1.c65 THEN t1.c65 ELSE t1.c65 END)OR(((-1573053280)AND(t1.c1)))))AND(((t1.c65)>=(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE t1 SET (c65)=(0.01997512633830334); -- 1ms;
UPDATE OR IGNORE t1 SET (c65)=(x''); -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=(3.95098539E8); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65, c2)=(0.8209335000989609, x'') WHERE ((CAST(t1.c2 AS TEXT)) IS FALSE); -- 0ms;
UPDATE OR FAIL t1 SET (c1, c1, c2)=('0.7700918630112398', NULL, NULL); -- 0ms;
UPDATE t1 SET (c1, c2)=(0.44380772901622345, x''); -- 0ms;
UPDATE t1 SET c65=NULL; -- 0ms;
UPDATE t1 SET (c2)=(x'04a0'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65)=(NULL, 0xffffffffdefe0486) WHERE ((CAST(t1.c65 AS NUMERIC))<<(((t1.c65)<(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'') WHERE ((((t1.c65)OR(NULL)))&(t1.c1 COLLATE RTRIM)); -- 1ms;
UPDATE OR IGNORE t1 SET c1=x'' WHERE CAST(((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c2)) AS TEXT); -- 0ms;
UPDATE OR IGNORE t1 SET c65='', c65=x'1ff6'; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE ((((t1.c2)>=(t1.c65)))>(CAST(t1.c2 AS NUMERIC))); -- 0ms;
UPDATE OR IGNORE t1 SET c2='1052829832'; -- 0ms;
UPDATE t1 SET c2=NULL, c65='4W^42rO%I' WHERE (((((~ (t1.c2)))AND(LOWER(DISTINCT t1.c65))))OR(((t1.c2) ISNULL))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0Xfffffffff8a25e8e) WHERE x''; -- 0ms;
UPDATE OR ABORT t1 SET (c65)=(x'') WHERE ((((((((t1.c1)AND(t1.c2)))OR(t1.c1)))AND(((t1.c65) NOT NULL))))AND(t1.c65)); -- 0ms;
UPDATE t1 SET (c2)=(x'6013c401'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c1='-238877330', c1='' WHERE ((-2034697795) NOTNULL); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(0.9089123506225866); -- 0ms;
UPDATE OR IGNORE t1 SET c1=-2.051737996E9 WHERE t1.c2; -- 0ms;
UPDATE t1 SET c65='596554485' WHERE ((t1.c65 IN ()) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c2=-1673426398, c2=x'' WHERE t1.c2 COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0x3e3bd170) WHERE CAST(NULL COLLATE BINARY AS INTEGER); -- 0ms;
UPDATE OR FAIL t1 SET c2='/N鎭\r]Xv>ం', c2='[tx&', c2=NULL WHERE '-2017974630' COLLATE NOCASE; -- 0ms;
UPDATE t1 SET c1='-518305433' WHERE CAST((((t1.c1))<=(('-1370777911'))) AS BLOB); -- 0ms;
UPDATE OR ABORT t1 SET (c65)=(NULL) WHERE CAST(LIKELY(DISTINCT t1.c1) AS TEXT); -- 0ms;
UPDATE OR FAIL t1 SET (c2)=(NULL) WHERE CASE WHEN '' THEN ((t1.c65)GLOB('J,C22 /!')) WHEN (((t1.c2, t1.c1, t1.c2))<=((0Xffffffffa0208e06, t1.c65, t1.c1))) THEN CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c2 END WHEN (NOT (t1.c65)) THEN ((t1.c65) NOTNULL) END; -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(NULL); -- 0ms;
UPDATE t1 SET c65=x'' WHERE UPPER(CASE WHEN t1.c2 THEN t1.c1 WHEN 'e#/C' THEN t1.c65 WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE t1.c1 END); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(x'') WHERE NULLIF((((t1.c65)) NOT BETWEEN ((t1.c65)) AND ((t1.c2))), ((((x'')OR(t1.c2)))OR(t1.c2))); -- 0ms;
UPDATE t1 SET c1='-1295785473'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=1914990562, c1=0.8097795245018945; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'3087'; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c65=NULL; -- 1ms;
UPDATE t1 SET (c2, c1)=(x'4c05', x'') WHERE ABS(((t1.c65)*(t1.c65))); -- 0ms;
UPDATE t1 SET (c1)=(0x79848515) WHERE ((((t1.c1) BETWEEN (t1.c65) AND (t1.c1))) BETWEEN (((t1.c65)>=(t1.c1))) AND (((t1.c1) NOT NULL))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE x''; -- 0ms;
UPDATE t1 SET (c2)=(NULL) WHERE LIKELY(DISTINCT (((t1.c2, t1.c2, t1.c65))<>((t1.c1, t1.c65, t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'366b') WHERE t1.c2; -- 0ms;
UPDATE OR FAIL t1 SET c1='230558503', c2=x'' WHERE (((t1.c2 IN (t1.c2)))>>(CAST(t1.c1 AS NUMERIC))); -- 0ms;
UPDATE OR FAIL t1 SET (c1, c1, c65)=('2016046993', NULL, 0.8371675522057058) WHERE (+ (t1.c65 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE t1 SET c2='47357551'; -- 0ms;
UPDATE OR IGNORE t1 SET c2=']y,4' WHERE (LOWER(DISTINCT t1.c1) IN ((+ (x'')), ((t1.c1) BETWEEN (NULL) AND (t1.c1)))); -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=(0x15c4e3b1) WHERE TYPEOF(DISTINCT ((t1.c2)<=(t1.c65))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'' WHERE (('')<<(((t1.c2)GLOB(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=''; -- 0ms;
UPDATE OR IGNORE t1 SET c2='', c2=0.6424989010959473; -- 0ms;
UPDATE t1 SET (c2, c65, c1, c2)=(0.22010649492198875, x'', x'', x'') WHERE (NOT ((t1.c1 IN (t1.c1)))); -- 0ms;
UPDATE t1 SET c1=0.8461409202351489, c65=NULL; -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=(''); -- 0ms;
UPDATE t1 SET (c65, c2, c1)=(x'', 0xffffffffb42eb604, 0.3403869294909607) WHERE CASE -1295785473  WHEN ((t1.c1)LIKE(t1.c65)) THEN (((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c1))) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c2)=(NULL, x''); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1, c2)=('168820597', x'') WHERE ((CASE t1.c2  WHEN t1.c65 THEN t1.c1 END)*(t1.c65)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.7246098546485413); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE ((((t1.c1)<<(t1.c2)))>>(t1.c65)); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE (((t1.c65 COLLATE RTRIM, (NOT ('168820597')), ((t1.c65)<<(t1.c65))))<((CASE WHEN t1.c1 THEN '' END, ((t1.c2) ISNULL), json_valid(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1)=('M-Infinity-[', NULL) WHERE CAST(((t1.c2)GLOB(t1.c1)) AS BLOB); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE (+ (CASE WHEN t1.c65 THEN 0.013847357621814327 ELSE t1.c1 END)); -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=(-999274771); -- 1ms;
UPDATE t1 SET (c65)=(0.3221477281463905); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL; -- 0ms;
UPDATE t1 SET c65=0xffffffffb2645d4f, c65=NULL WHERE (((t1.c1 COLLATE RTRIM))=((((((t1.c1)AND(t1.c2)))AND(t1.c1))))); -- 0ms;
UPDATE t1 SET (c1)=('245189408') WHERE json_insert(x'88b1', t1.c2, t1.c65); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65, c2)=(0.9267744171271265, 0.3000770641214957, NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'7229' WHERE t1.c2; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE OR FAIL t1 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c2='1498212094' WHERE '1'; -- 1ms;
UPDATE OR IGNORE t1 SET c1=0Xffffffff86706c09 WHERE ((CASE 0X1de8976a  WHEN t1.c2 THEN t1.c1 END)-(((t1.c65) BETWEEN (t1.c65) AND (t1.c65)))); -- 1ms;
UPDATE OR IGNORE t1 SET c1=x'' WHERE (((((t1.c1)&(t1.c1)), ((t1.c65) IS FALSE), CAST(t1.c65 AS TEXT)))<>((t1.c2, ((t1.c65)%(t1.c1)), CASE NULL  WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c2 END))); -- 0ms;
UPDATE t1 SET (c1, c2)=('-1825506619', 0.87346321554707); -- 0ms;
UPDATE t1 SET c1=596554485; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.013040525738641784 WHERE MIN((NULL IN (t1.c1)), LOWER(t1.c65), t1.c1, (t1.c65 IN ())); -- 0ms;
UPDATE OR ABORT t1 SET c65=0.5601214487250099; -- 0ms;
UPDATE OR FAIL t1 SET (c65)=('⏹') WHERE ((((((t1.c65)AND(t1.c2)))AND(t1.c2))) ISNULL); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE 'nBLv⻊⪶7'; -- 0ms;
UPDATE OR ABORT t1 SET (c65)=('1147210242'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1)=('y8v|v+S', 0.886469563602417) WHERE t1.c65; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c2)=(NULL, 0.7276376127653759); -- 0ms;
UPDATE t1 SET c65=0x4e879c24 WHERE ((CAST(t1.c2 AS BLOB))<(CASE t1.c1  WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c65 WHEN t1.c1 THEN t1.c1 END)); -- 0ms;
UPDATE t1 SET c1=x'', c65=-1.637305753E9; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('1641612879') WHERE NULL COLLATE BINARY; -- 0ms;
UPDATE OR FAIL t1 SET c2=1.121533359E9; -- 0ms;
UPDATE OR IGNORE t1 SET c65=8.32397362E8 WHERE CASE t1.c2 COLLATE RTRIM  WHEN ((t1.c65)=(t1.c65)) THEN (t1.c1 IN (NULL, t1.c1)) END; -- 1ms;
UPDATE t1 SET c2=x'', c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2='['; -- 0ms;
UPDATE t1 SET c1=0.5199712118783739 WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET c2='ꋼ{*{TB\n4j'; -- 0ms;
UPDATE OR ROLLBACK t1 SET c65='-1491401641'; -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=0.79020600175201 WHERE TRIM(DISTINCT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'0871') WHERE (((((t1.c1)GLOB(t1.c1))))<=((t1.c65))); -- 0ms;
UPDATE OR REPLACE t1 SET (c65, c65)=(0.027926318345688927, NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE (((t1.c2) NOT BETWEEN (t1.c65) AND (t1.c2)) IN ((((t1.c2, t1.c1, t1.c2)) BETWEEN ((t1.c2, t1.c2, t1.c65)) AND ((t1.c2, t1.c65, t1.c2))))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'04ac', c1=NULL, c65=x''; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(0Xffffffffda736254) WHERE (('') BETWEEN (((t1.c65) IS TRUE)) AND ((((t1.c65))=((t1.c2))))); -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=('}_#]鲤Ey_') WHERE ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c65)) COLLATE NOCASE; -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(0.8998873125641107); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE CAST(((t1.c65)=(t1.c65)) AS REAL); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE (((t1.c65)<(t1.c2)) IN ()); -- 0ms;
UPDATE OR FAIL t1 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c1='1211262699', c2=NULL WHERE (- (HEX(DISTINCT t1.c1))); -- 0ms;
UPDATE t1 SET (c1, c1, c65)=(0Xffffffffee241630, '-1969933302', NULL) WHERE CAST(t1.c1 COLLATE NOCASE AS TEXT); -- 0ms;
UPDATE t1 SET (c1)=(x'964f'); -- 0ms;
UPDATE t1 SET (c2, c65, c2)=(NULL, x'', x'03ad') WHERE (((('425925441')AND(t1.c2))) NOT NULL); -- 0ms;
UPDATE t1 SET (c65)=(NULL) WHERE CAST(CAST(t1.c2 AS BLOB) AS BLOB); -- 0ms;
UPDATE t1 SET c2='658731990' WHERE (- ((t1.c65 IN (t1.c2, t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE x'' COLLATE BINARY; -- 0ms;
UPDATE OR REPLACE t1 SET c65=0X2e978129; -- 0ms;
UPDATE t1 SET (c2, c65, c1)=(NULL, 1.351268349E9, NULL); -- 0ms;
UPDATE OR ABORT t1 SET (c2)=('S') WHERE ((((((((((((t1.c2)OR(t1.c2)))AND(t1.c2)))AND(CAST(NULL AS BLOB))))AND(((((t1.c65)AND(t1.c65)))AND(t1.c1)))))AND(((t1.c1)GLOB(t1.c2)))))AND(((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(2.08361756E8); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'') WHERE CASE WHEN ((t1.c1) IS FALSE) THEN (NOT (t1.c2)) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE ((((t1.c1 IN ()), ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)), (t1.c2 IN ())))>((((t1.c65)<(t1.c65)), '' COLLATE RTRIM, json_remove(t1.c1, t1.c2)))); -- 0ms;
UPDATE t1 SET c65='-1608918241', c65=x'' WHERE (((t1.c1)>(t1.c65)) IN ((('-820887490') NOT BETWEEN (t1.c2) AND (t1.c65)))); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'', c65=-825185177; -- 0ms;
UPDATE OR IGNORE t1 SET c1=''; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.901051526886624) WHERE (x'' COLLATE BINARY IN ()); -- 0ms;
UPDATE t1 SET (c2)=('C}1_ﶝh士') WHERE ((UPPER(DISTINCT t1.c1)) NOTNULL); -- 0ms;
UPDATE t1 SET c1=x'5041'; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('-1796958674') WHERE json((~ (t1.c1))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.5530936977001277, c65=NULL, c65='vl'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'1d00') WHERE (((((t1.c65)AND(t1.c65)))AND(t1.c65)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'674a', c1=NULL, c2=NULL; -- 0ms;
UPDATE OR FAIL t1 SET (c1)=('沙z') WHERE ((DATE(NULL, t1.c1, t1.c2)) NOT NULL); -- 1ms;
UPDATE OR REPLACE t1 SET (c65, c1)=('wVpk', '') WHERE CASE WHEN (- (t1.c1)) THEN (- (t1.c1)) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.4144007369262849); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(x''); -- 0ms;
UPDATE OR FAIL t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c2)=(NULL, NULL) WHERE CASE WHEN ((t1.c65)LIKE(t1.c65)) THEN CASE WHEN t1.c65 THEN t1.c65 WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN x'' ELSE t1.c1 END ELSE ((((t1.c65)AND(t1.c65)))AND(t1.c2)) END; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'') WHERE ((t1.c1)>(t1.c1)); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'', c65=NULL; -- 0ms;
UPDATE t1 SET c2=0.9894707066673714; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL; -- 0ms;
UPDATE OR REPLACE t1 SET c65=-1.27532906E9, c1=NULL WHERE LIKELY((((t1.c65)) BETWEEN ((t1.c2)) AND ((t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0X7a10dea9, c65=x'', c2=0Xffffffffff529731; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c2, c2, c1)=(x'', NULL, 0.36495605116404173, 'Y㴽H^IB'); -- 0ms;
UPDATE t1 SET (c65)=(x'e559') WHERE SQLITE_COMPILEOPTION_GET((((t1.c2))<>((t1.c2)))); -- 1ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c2='0.433371385082445', c65=x'a17b', c2=0.19403172790763823; -- 0ms;
UPDATE OR REPLACE t1 SET c65=0x33137fb9; -- 0ms;
UPDATE OR ABORT t1 SET c1=''; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(0.709315907327262); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=0.6397147479046951; -- 0ms;
UPDATE OR ABORT t1 SET c2=0.1498693981928595 WHERE (+ ((((t1.c65)) NOT BETWEEN ((t1.c65)) AND ((t1.c65))))); -- 0ms;
UPDATE t1 SET (c65)=('*G\r}穽'); -- 0ms;
UPDATE t1 SET (c2)=(x'') WHERE (((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c65))))OR(((t1.c65)>>(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET c1='' WHERE ((t1.c65)|(t1.c1)) COLLATE BINARY; -- 0ms;
UPDATE OR FAIL t1 SET c65=0.9345250341296365 WHERE t1.c65; -- 0ms;
UPDATE t1 SET (c2)=(0x50d5cd2d); -- 1ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE TRIM((- (t1.c1))); -- 1ms;
UPDATE t1 SET c1=0.7774465831480277, c2=NULL WHERE (((((((t1.c1))>((t1.c65))))OR((((t1.c2))=(('2117246615'))))))AND((~ (t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65)=('1e500', '2027121940') WHERE ''; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=('ViF (i)艼') WHERE ((((t1.c65)|(t1.c2)))/(0.9677245705749976)); -- 0ms;
UPDATE t1 SET c2=NULL WHERE ((((t1.c2) IS TRUE))IS(('㐓Qo' IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE LIKELY(DISTINCT ((0.02826298029251406) NOTNULL)); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'52f0') WHERE (NOT ((t1.c65 IN (t1.c2, t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'' WHERE (~ ((NOT (t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65, c2, c1)=('Gi', NULL, '1568283602', NULL); -- 0ms;
UPDATE t1 SET c65=NULL WHERE ((t1.c2 COLLATE NOCASE)>>(CAST(x'ec69' AS REAL))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=0.942095958801512 WHERE NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=x''; -- 0ms;
UPDATE t1 SET (c65, c65)=('[l\', 0.7364907089016312) WHERE (((((+ (t1.c2)))OR(((((((((((((t1.c65)OR(t1.c2)))OR(t1.c1)))OR(t1.c2)))OR(t1.c2)))AND(t1.c65)))AND(t1.c2)))))OR(UNLIKELY(t1.c65))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.6100256105077245, c65=0.6711034925173918; -- 1ms;
UPDATE OR REPLACE t1 SET (c65, c1)=('m㥙}nt<,s', 0.11048885878865755) WHERE ((((t1.c1)=(t1.c65)))GLOB(CAST(t1.c65 AS INTEGER))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE ((t1.c1)<>(CAST(t1.c1 AS INTEGER))); -- 0ms;
UPDATE OR ABORT t1 SET c1=0x6d26dab9; -- 0ms;
UPDATE t1 SET c1=x'' WHERE ((((((t1.c2)AND(t1.c2)))AND(t1.c65))) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('_6(') WHERE ((((((((((t1.c2)>(t1.c1)))OR(((t1.c2) BETWEEN (t1.c2) AND (t1.c1)))))OR(x'0aeb' COLLATE RTRIM)))AND(((t1.c1)*(0.19376233986159597)))))OR(((t1.c2)AND(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE LIKELY(t1.c65) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.9236500432030432; -- 1ms;
UPDATE OR IGNORE t1 SET (c2)=(359311190) WHERE (((t1.c2 IN ()))LIKE((((t1.c65)) BETWEEN ((0.16744597375725967)) AND ((t1.c1))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('m瓚q36'); -- 0ms;
UPDATE t1 SET c2='-1928793345' WHERE -1491401641; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE ((((((t1.c65)+(t1.c65)))AND(((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c65)))))OR(((x'') NOTNULL))); -- 0ms;
UPDATE t1 SET (c2)=(1.395532344E9); -- 0ms;
UPDATE t1 SET c1=-1928793345; -- 0ms;
UPDATE OR FAIL t1 SET (c2)=(NULL) WHERE SUBSTR(t1.c1, t1.c1) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c65=-47081275 WHERE ((((t1.c2) ISNULL))+((t1.c65 IN (t1.c2, t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('1751697625'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2)=('', '-579154361') WHERE ((t1.c2) NOTNULL) COLLATE BINARY COLLATE RTRIM; -- 0ms;
UPDATE OR FAIL t1 SET (c65)=('N2') WHERE ((((t1.c2 IN ())))<=((json_type(NULL)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.6473204706524914; -- 0ms;
UPDATE t1 SET c65=1482752928, c1=x''; -- 0ms;
UPDATE t1 SET c65='-1928793345'; -- 0ms;
UPDATE t1 SET c2=0.5411421661393343; -- 1ms;
UPDATE t1 SET (c1)=(0.6166251486579156); -- 0ms;
UPDATE OR IGNORE t1 SET c2='' WHERE CAST(t1.c1 AS REAL) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('bxw醿jw9dљ'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x''); -- 1ms;
UPDATE OR FAIL t1 SET c1=0.4009014970584933 WHERE ((((((((t1.c1)AND(t1.c2)))AND(t1.c2)))AND(CAST(t1.c2 AS BLOB))))AND(((t1.c1)!=(t1.c2)))); -- 0ms;
UPDATE t1 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c65='1325935158'; -- 0ms;
UPDATE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c65)=(0.9410410450136918, 'h') WHERE ((((((t1.c1)>=(t1.c65)))OR(t1.c1)))AND((t1.c65 IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET c65='', c1=1.10125317E9; -- 0ms;
UPDATE OR IGNORE t1 SET c2='-270447679' WHERE ((((('+wD%%Bj' IN ('-130664875')))OR(((t1.c1)==(t1.c65)))))OR('-1233135781')); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=('-216991422'); -- 0ms;
UPDATE OR ABORT t1 SET (c1)=(1.121533359E9); -- 1ms;
UPDATE t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('+輲Y') WHERE ((t1.c2 COLLATE RTRIM)<(2.004414601E9 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t1 SET c65='1157813710', c2='M<-8Y!', c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65)=('0.5622360129172099', NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2)=(NULL, 0Xffffffff9e1fa61e) WHERE CAST(CAST(x'c10e' AS INTEGER) AS NUMERIC); -- 0ms;
UPDATE OR REPLACE t1 SET c2='X/'; -- 0ms;
UPDATE t1 SET c1=-1.556942765E9, c2='-971001750'; -- 0ms;
UPDATE t1 SET c1=x''; -- 0ms;
UPDATE OR REPLACE t1 SET c65=0.1744664333425937 WHERE (((x'') NOT BETWEEN (t1.c2) AND (t1.c65)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(514326671); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=']U,,'; -- 0ms;
UPDATE t1 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(''); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'957f') WHERE (((((t1.c2)<=(t1.c2))))<=((UPPER(DISTINCT t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2, c65)=(-821561305, -1.151424946E9, '%Y'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0x4bc70ec1) WHERE (+ (((t1.c1)/(t1.c1)))); -- 0ms;
UPDATE OR FAIL t1 SET c65=NULL; -- 0ms;
UPDATE t1 SET c65=0.7824825492358278 WHERE (~ (t1.c1)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.6782550046774811) WHERE t1.c1; -- 0ms;
UPDATE OR REPLACE t1 SET c65='yU㧩%\|', c1=NULL WHERE IFNULL(((t1.c65) BETWEEN (t1.c65) AND (t1.c2)), ((t1.c2) NOT BETWEEN (t1.c65) AND (t1.c65))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'5d076b70'; -- 0ms;
UPDATE OR IGNORE t1 SET c1='~U', c1=0.9839013270082686 WHERE INSTR(LIKELIHOOD(t1.c2, 0.05624702707358553), ((NULL) BETWEEN (t1.c65) AND ('+1[2rp'))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'5f7e' WHERE (+ ((t1.c2 IN (t1.c1, '')))); -- 0ms;
UPDATE OR REPLACE t1 SET (c1, c2, c1)=(x'fb47', NULL, x'') WHERE (((+ (t1.c65))) ISNULL); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65='-693167707'; -- 0ms;
UPDATE t1 SET c65='', c65='', c1=0.790171940025811 WHERE ((t1.c65)<=(((t1.c65)+(-9.37992704E8)))); -- 0ms;
UPDATE OR REPLACE t1 SET c2='uFy2\nb4', c1=x'' WHERE (((t1.c65 IN ()))+(((((t1.c65)OR(t1.c65)))OR(t1.c1)))); -- 0ms;
UPDATE OR ABORT t1 SET (c65, c1)=(0.9746160845261232, NULL) WHERE (((t1.c2)) NOT BETWEEN ((((t1.c1)GLOB(t1.c1)))) AND ((((t1.c2)IS(t1.c65))))); -- 0ms;
UPDATE t1 SET c65='' WHERE ((GLOB('', t1.c65)) BETWEEN ((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c1)))) AND (CHANGES())); -- 1ms;
UPDATE OR REPLACE t1 SET (c65)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('') WHERE ((((t1.c1)>(t1.c2))) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c65, c1)=(-2.034697795E9, 'k', 'i'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('q[vLb]D') WHERE (((((((t1.c1)AND(x'')))OR(t1.c65)), ((t1.c2) IS TRUE), x''))<>((-9746877, (t1.c2 IN (t1.c1)), (('703351205')<(t1.c1))))); -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(NULL); -- 0ms;
UPDATE t1 SET c2=NULL, c2=x'', c2=0.22457107604455062; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'' WHERE ((((t1.c1) NOT BETWEEN (t1.c65) AND (t1.c2)))<>(((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2='' WHERE (((t1.c2 IN ()))>>(((t1.c2)*(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65, c2)=('1052829832', '0.21679475430436568', 0.24245777489545317) WHERE UNLIKELY(CASE t1.c2  WHEN t1.c65 THEN t1.c2 ELSE 0.13007220473350634 END); -- 0ms;
UPDATE OR ABORT t1 SET (c2, c65)=('t15', 0.4025647111900277) WHERE (CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c65 END IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('2004414601'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.7926540024519348, c65=26660469, c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1)=(x'ed8e0d8e', NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'' WHERE CASE t1.c1  WHEN t1.c1 THEN t1.c2 ELSE t1.c1 END COLLATE RTRIM; -- 1ms;
UPDATE t1 SET c65=0.6891900727668375, c65=0Xffffffffd7f92c35; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('') WHERE (((t1.c1)<<(t1.c65)) IN ()); -- 0ms;
UPDATE t1 SET c1=0.22397840154665172 WHERE (((t1.c1))<=((t1.c65))) COLLATE NOCASE; -- 0ms;
UPDATE OR FAIL t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65)=(-1556942765, x'5d64') WHERE CAST(t1.c2 COLLATE NOCASE AS TEXT); -- 0ms;
UPDATE OR FAIL t1 SET (c2)=('0.6940120870211581'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL) WHERE (((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c65))))>>((t1.c1 IN ()))); -- 0ms;
UPDATE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'') WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1)=(x'', x''); -- 0ms;
UPDATE OR ABORT t1 SET c1=-1928793345 WHERE ((((t1.c1)>(t1.c1)))||(((((t1.c1)OR(t1.c65)))AND(t1.c1)))); -- 0ms;
UPDATE t1 SET c1=0.04642593153444363 WHERE ((((t1.c2)AND(t1.c2)))OR(t1.c65)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2, c65)=(NULL, '1215351548', 1.69119239E8) WHERE (((((((((NULL)AND(t1.c1)))OR(t1.c2)))AND(t1.c1)))AND(t1.c2)) IN ()); -- 1ms;
UPDATE OR IGNORE t1 SET (c1, c65)=(x'', '1085863486') WHERE (NOT (((((((((t1.c65)OR(t1.c65)))OR(t1.c1)))OR(t1.c1)))OR(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c2)=('', 0Xffffffffd79b4ddd) WHERE ((t1.c2) IS FALSE); -- 0ms;
UPDATE t1 SET c1='-543385767'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR FAIL t1 SET (c2)=('523699024') WHERE ((((t1.c1) NOTNULL))>(t1.c2)); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE (((((t1.c1 IN ()))AND((((t1.c65))=((t1.c65))))))AND(((t1.c65)/(t1.c2)))); -- 0ms;
UPDATE t1 SET c1=NULL, c1=x'', c2=0.11307862702261551 WHERE LIKE(CASE t1.c2  WHEN 0.7682818482372021 THEN t1.c65 ELSE t1.c2 END, ((t1.c2) ISNULL)); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'') WHERE ((((t1.c1) BETWEEN (t1.c1) AND (t1.c2))) NOT BETWEEN ((((t1.c1)) BETWEEN ((t1.c65)) AND ((t1.c65)))) AND (((((t1.c2)AND(t1.c1)))OR(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=-4.69251974E8, c2='', c2=x'2bd3' WHERE '2087157128'; -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 1ms;
UPDATE OR ABORT t1 SET c65=x''; -- 0ms;
UPDATE t1 SET (c65)=('-1460095560'); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x''; -- 0ms;
UPDATE t1 SET (c1)=(x'') WHERE (((((t1.c65))==((t1.c2)))) NOT BETWEEN (((t1.c2)%(t1.c2))) AND (CASE WHEN t1.c2 THEN t1.c1 END)); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.3191103079187114 WHERE CASE WHEN UNLIKELY(DISTINCT t1.c1) THEN t1.c2 END; -- 0ms;
UPDATE OR REPLACE t1 SET c65=x'', c1=-1.7976931348623157E308; -- 0ms;
UPDATE t1 SET c1=0.025938037794803415; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65)=(x'', 1832819250) WHERE CAST(((((t1.c1)OR(t1.c65)))OR(t1.c65)) AS INTEGER); -- 0ms;
UPDATE t1 SET c1=NULL WHERE LIKELY(DISTINCT ((t1.c65)=(t1.c65))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL) WHERE (+ (CAST(t1.c65 AS REAL))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=NULL WHERE ((x'' IN (t1.c2, t1.c2)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c2='-797617230', c2=0.7926908156504773, c65='0.9165521065419752' WHERE (x'' IN ()); -- 0ms;
UPDATE t1 SET c1=0.49989815541257454; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'7b0d' WHERE ((IFNULL('', t1.c2))>(TYPEOF(t1.c65))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1)=(NULL, NULL) WHERE (0.6508916800223484 IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c65='536958468'; -- 1ms;
UPDATE OR IGNORE t1 SET (c1, c1, c1)=('.a\rꀻ<j^_', x'', '') WHERE ((CAST(t1.c2 AS TEXT)) NOTNULL); -- 0ms;
UPDATE OR ABORT t1 SET (c2, c65)=('j', NULL) WHERE (t1.c2 IN ()); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1='-461604133' WHERE (t1.c1 IN ()); -- 0ms;
UPDATE OR REPLACE t1 SET c1=1.482752928E9, c1=x'6471' WHERE (+ (((((t1.c2)AND(t1.c65)))OR(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('241396393') WHERE (((t1.c65)) BETWEEN ((((t1.c65)-(t1.c2)))) AND ((((t1.c65)OR(t1.c65))))); -- 0ms;
UPDATE OR REPLACE t1 SET (c65, c1, c1)=('0.21679475430436568', '26660469', 0.7926908156504773) WHERE (((((((t1.c1)AND(t1.c2)))OR(t1.c1))))<=((((t1.c2)>=(t1.c2))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1, c65)=(-1969933302, NULL, '251769098'); -- 1ms;
UPDATE t1 SET c2=0xffffffffe5f79de3 WHERE ((((x'28f4') NOTNULL)) ISNULL); -- 0ms;
UPDATE t1 SET (c65, c65)=(NULL, NULL) WHERE ((t1.c1)>=(t1.c2)) COLLATE BINARY COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65)=('', '520831836') WHERE ((((t1.c65) BETWEEN ('898049778') AND (t1.c65)))>(((t1.c2)+(t1.c1)))); -- 0ms;
UPDATE t1 SET c65=NULL WHERE ((COALESCE(DISTINCT '|o*4iPoL', t1.c2, t1.c65, t1.c65))%(t1.c65 COLLATE BINARY)); -- 0ms;
UPDATE OR REPLACE t1 SET c2=0.95545054887129, c65=NULL, c1=x'2c1d'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-323433192'); -- 0ms;
UPDATE OR IGNORE t1 SET c65='-316191952'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL; -- 0ms;
UPDATE t1 SET (c1, c1)=('', 0xfffffffface1617a) WHERE t1.c2; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1, c2)=(-1878981941, 'Z溳V⚵', 0.24113379635384036) WHERE t1.c65; -- 0ms;
UPDATE t1 SET c2=5.53755413E8, c1=0.20734895529187725 WHERE NULLIF(DISTINCT (+ (t1.c2)), ((t1.c65) BETWEEN ('-1707185557') AND (t1.c2))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('5') WHERE CASE ((t1.c1) IS TRUE)  WHEN x'' THEN ((t1.c65) BETWEEN (t1.c2) AND (t1.c65)) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.2944407339836992) WHERE x''; -- 1ms;
UPDATE OR ABORT t1 SET (c1, c1, c65)=(NULL, NULL, ''); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(1257282897) WHERE ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) BETWEEN (((t1.c2) NOTNULL)) AND (t1.c1)); -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(0xffffffff92d24778); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL, c1='1914990562'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('-365113288'); -- 0ms;
UPDATE t1 SET (c1)=(NULL) WHERE ((0.4076189845853132)<(x'' COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.5594601193570028; -- 0ms;
UPDATE OR FAIL t1 SET (c1)=(NULL) WHERE TYPEOF(t1.c1 COLLATE BINARY); -- 0ms;
UPDATE t1 SET c2='gD.e,Pf?i' WHERE ((((CASE WHEN t1.c2 THEN t1.c65 ELSE t1.c2 END)OR(LIKE(t1.c1, t1.c65))))AND(((t1.c2) BETWEEN (t1.c1) AND (t1.c2)))); -- 0ms;
UPDATE OR REPLACE t1 SET c1=x'' WHERE INSTR(CAST(t1.c2 AS INTEGER), CAST('-1275329060' AS REAL)); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(NULL) WHERE CASE WHEN t1.c1 THEN t1.c2 END; -- 0ms;
UPDATE OR IGNORE t1 SET c65=1.38548182E9; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1)=('0.8031005673931514', 0.7857070255418154) WHERE ((CASE WHEN t1.c65 THEN 0.7755134550450394 END)>=(((x'329e') NOT NULL))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2)=(0.615780313400741, '0.029685534305701533') WHERE ((((t1.c2)AND(t1.c2)))OR('驽f')) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE CAST(((t1.c65) ISNULL) AS NUMERIC); -- 0ms;
UPDATE t1 SET (c1)=(x'') WHERE (- (((t1.c65)>=(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE ((((t1.c1) NOT BETWEEN (t1.c65) AND (t1.c2))) NOT NULL); -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=('0.6762276018965433'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1)=(x'', '[]'); -- 1ms;
UPDATE OR IGNORE t1 SET c1='A_u纳o0()', c65='	1F}T~'; -- 0ms;
UPDATE OR ROLLBACK t1 SET c65='-2067746278' WHERE CAST(CAST(t1.c1 AS INTEGER) AS REAL); -- 0ms;
UPDATE OR ABORT t1 SET c2='1779835207' WHERE ((((t1.c65)*(t1.c1)))IS(CAST(t1.c1 AS BLOB))); -- 0ms;
UPDATE OR REPLACE t1 SET (c65)=(0x6868c8d9); -- 0ms;
UPDATE OR ABORT t1 SET (c65)=('0.8261078169101426'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2)=('gYTdqY', x'') WHERE (((CAST(t1.c65 AS BLOB)))<((((t1.c1)<(t1.c65))))); -- 0ms;
UPDATE t1 SET c2=NULL, c2=x'f751', c2=NULL; -- 0ms;
UPDATE t1 SET c1=-1.642093026E9 WHERE t1.c65; -- 0ms;
UPDATE OR IGNORE t1 SET c1=-1.830126314E9; -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=x'', c65=0.46192095307551806, c65='0.2944148525585619' WHERE t1.c65 COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE (NOT (t1.c65 COLLATE BINARY)); -- 0ms;
UPDATE OR REPLACE t1 SET (c65, c1)=(0.36614796858082144, ''); -- 0ms;
UPDATE t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR ABORT t1 SET c2=NULL WHERE ((HEX(t1.c1))*(CAST(t1.c2 AS INTEGER))); -- 0ms;
UPDATE OR FAIL t1 SET c2='#ym/'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.895069616064506) WHERE '1482752928'; -- 0ms;
UPDATE OR REPLACE t1 SET (c65, c65)=(0x3a1f6d54, 0.6612622831794841); -- 0ms;
UPDATE OR REPLACE t1 SET c2=0.02826298029251406, c65='-1025205217' WHERE ((((t1.c1)AND(t1.c65))) NOT NULL); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(0.9659956500468654) WHERE t1.c2; -- 0ms;
UPDATE OR ABORT t1 SET c65='-286162804', c1=x'', c65=x'df8c' WHERE (- (0.3154194695590351)); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(NULL) WHERE 0X75240952; -- 0ms;
UPDATE t1 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE t1.c1; -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=('-164698276'); -- 0ms;
UPDATE t1 SET (c1)=(0.7857070255418154) WHERE (((t1.c65)) BETWEEN (((((t1.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c65))))) AND ((((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c65))))); -- 0ms;
UPDATE OR IGNORE t1 SET c65='796282186'; -- 0ms;
UPDATE t1 SET (c1)=(x''); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=NULL; -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(x''); -- 0ms;
UPDATE OR ABORT t1 SET c1='80	></K'; -- 0ms;
UPDATE OR IGNORE t1 SET c1='-1257321152' WHERE CAST(0.78472340893514 AS INTEGER); -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=(386508759) WHERE ((CAST(t1.c65 AS REAL))GLOB((t1.c1 IN ()))); -- 0ms;
UPDATE OR FAIL t1 SET c65='-1937734896' WHERE ((((t1.c65)+(t1.c1))) NOTNULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c2)=('5隣AP', '2121388936') WHERE CAST(((t1.c1)=(t1.c1)) AS REAL); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65)=(0.533523330696404, x'') WHERE (((CASE WHEN t1.c1 THEN t1.c1 END))>((SUBSTR(t1.c1, t1.c65)))); -- 0ms;
UPDATE t1 SET c65='694752188'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'1a6e' WHERE ((((t1.c1)%(t1.c1))) BETWEEN (((t1.c1) IS FALSE)) AND (CAST(t1.c2 AS NUMERIC))); -- 1ms;
UPDATE OR IGNORE t1 SET c65=NULL, c1=0.5414209796190264; -- 0ms;
UPDATE t1 SET c2=0.7845276515283462; -- 0ms;
UPDATE t1 SET c1='bMWr'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.5494901828637156; -- 0ms;
UPDATE t1 SET c1=x'' WHERE (~ (CAST(t1.c65 AS REAL))); -- 0ms;
UPDATE OR FAIL t1 SET (c2)=('a-Jw*') WHERE 552708111; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR FAIL t1 SET (c2, c2)=(NULL, NULL); -- 0ms;
UPDATE t1 SET (c2)=('-1650171738') WHERE ((((('}W7{') BETWEEN (t1.c65) AND (x''))))<>((t1.c65))); -- 0ms;
UPDATE t1 SET c2=0x4160c1c4 WHERE (((((((((t1.c65 IN ()))AND((((t1.c2)) NOT BETWEEN ((t1.c65)) AND ((t1.c2))))))OR(((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c65)))))AND((~ (t1.c2)))))AND(t1.c2)); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('168820597'); -- 0ms;
UPDATE OR ABORT t1 SET c65=NULL, c65=NULL WHERE CAST(0.6373062042887616 AS BLOB); -- 0ms;
UPDATE OR IGNORE t1 SET c65='', c65=-2075137609, c2='45'; -- 0ms;
UPDATE OR REPLACE t1 SET (c65, c1)=('1489822206', ''); -- 0ms;
UPDATE t1 SET (c65)=('{#0''t'); -- 0ms;
UPDATE t1 SET c65=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.3799450908939629) WHERE ((t1.c2) NOT BETWEEN (t1.c65) AND (t1.c65)) COLLATE BINARY; -- 1ms;
UPDATE OR ABORT t1 SET c2=0.1192422679551185, c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'59458bf9') WHERE (((~ (t1.c65))) NOT BETWEEN ((t1.c65 IN ())) AND (LIKELIHOOD(t1.c1, 0.05134904786853267))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0X16a4745c); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x''; -- 0ms;
UPDATE OR ABORT t1 SET c65=NULL, c2=x'', c65=NULL WHERE ((((t1.c1)%(t1.c1)))IS NOT(t1.c2 COLLATE BINARY)); -- 0ms;
UPDATE t1 SET (c2)=(NULL) WHERE CASE WHEN t1.c65 THEN ((0xffffffff89a42c81)LIKE(t1.c1)) ELSE ((((t1.c2)AND(0xffffffff87dda48b)))AND(t1.c65)) END; -- 1ms;
UPDATE OR IGNORE t1 SET (c2)=(0x3ec0e888); -- 0ms;
UPDATE t1 SET c2=NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1='1484806034' WHERE ((((((t1.c1)AND(t1.c65)))OR(t1.c1)))GLOB(((t1.c1)*(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'2995' WHERE (((t1.c1)LIKE(t1.c1)) IN ()); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=0.3688832225810913 WHERE HEX(t1.c65) COLLATE RTRIM; -- 0ms;
UPDATE t1 SET (c1)=(x'81ed'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=')m'; -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=(x'b16c') WHERE ((t1.c1 IN ()) IN (((t1.c65)<<(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL, c2=x''; -- 0ms;
UPDATE t1 SET c2='58ķ(O]' WHERE (+ (((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(1808980869); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2, c65, c1)=(x'', NULL, 0.7857070255418154); -- 0ms;
UPDATE t1 SET (c65)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'') WHERE ((CAST(t1.c65 AS BLOB))%(CAST(t1.c1 AS REAL))); -- 0ms;
UPDATE t1 SET c65=x'686d' WHERE (((t1.c2, t1.c2, t1.c1))<((t1.c2, t1.c1, t1.c1))) COLLATE NOCASE; -- 0ms;
UPDATE OR REPLACE t1 SET c1=x'4b95'; -- 0ms;
UPDATE OR FAIL t1 SET c1=0x7f72cfb0, c65='1496993747', c2=-745900407 WHERE TRIM(DISTINCT (NOT (t1.c1)), (((t1.c1))>((t1.c2)))); -- 0ms;
UPDATE t1 SET c65=-2034697795 WHERE ((((t1.c1)OR(((t1.c65) BETWEEN (t1.c65) AND (t1.c65)))))AND((- (t1.c65)))); -- 0ms;
UPDATE t1 SET (c1)=('-851342835'); -- 0ms;
UPDATE OR REPLACE t1 SET c2=x'4048'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('') WHERE ((t1.c65)-((~ (t1.c1)))); -- 0ms;
UPDATE OR REPLACE t1 SET c65=-449315156; -- 0ms;
UPDATE t1 SET c65=NULL, c2='0.6940120870211581'; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1, c1)=('893915913', 0.5674938573567545, ''); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'', c1=x'f654ce6d'; -- 1ms;
UPDATE OR IGNORE t1 SET c2='' WHERE ((((t1.c1)>=(t1.c1))) IS TRUE); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.0712205892467398; -- 0ms;
UPDATE OR REPLACE t1 SET c2=''; -- 0ms;
UPDATE OR IGNORE t1 SET c2=9.80217077E8 WHERE ((((((((t1.c2 COLLATE BINARY)OR(t1.c2)))OR((~ (t1.c1)))))AND((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c1))))))OR(t1.c1 COLLATE RTRIM)); -- 0ms;
UPDATE t1 SET c1='1709749830', c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0X1f1faa69); -- 0ms;
UPDATE t1 SET c65='-1460095560', c65=0.7542279123793221 WHERE (((t1.c1 IN (t1.c65))) NOT BETWEEN (CAST(t1.c1 AS TEXT)) AND (x'bbb6')); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0xffffffffa8c76652); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE CASE WHEN ((t1.c65)>>(t1.c2)) THEN ((t1.c1)AND(t1.c1)) WHEN t1.c2 COLLATE BINARY THEN (((t1.c2, t1.c1, t1.c2)) NOT BETWEEN ((t1.c1, t1.c65, t1.c65)) AND ((1.121533359E9, t1.c2, t1.c65))) WHEN ((t1.c2) NOTNULL) THEN ((((t1.c2)AND(t1.c1)))AND(t1.c65)) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'68f5'); -- 0ms;
UPDATE t1 SET c1=0xffffffffe72f9f52; -- 0ms;
UPDATE t1 SET c2=x'' WHERE ((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c1)))<(CASE t1.c2  WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END)); -- 0ms;
UPDATE t1 SET (c65)=(x''); -- 0ms;
UPDATE t1 SET (c65)=(x'') WHERE ((+ (t1.c65)) IN (((((t1.c1)OR(t1.c65)))OR(t1.c1)))); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'', c65='1744269551', c1=x'' WHERE CAST(((t1.c2)GLOB(t1.c65)) AS BLOB); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1, c2)=(0.8947705760162473, 0.308917088340819, 'Mh6Tk'); -- 0ms;
UPDATE OR FAIL t1 SET c65='(R馀50JE\y', c2=x'd2a3' WHERE (((((('EpO.G6v︿')AND(t1.c2)))OR(t1.c1)))+(((t1.c2)-(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.6734624045253157); -- 1ms;
UPDATE t1 SET c2=x'' WHERE (((((t1.c2)*(t1.c65))))>((t1.c1 COLLATE RTRIM))); -- 0ms;
UPDATE OR ABORT t1 SET c65=x''; -- 0ms;
UPDATE t1 SET (c65)=(x'') WHERE CAST(CASE WHEN t1.c2 THEN NULL END AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.6500636739051084) WHERE LTRIM(t1.c1, x'') COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.18692742358512093 WHERE CASE WHEN CASE t1.c65  WHEN t1.c1 THEN x'' END THEN (((t1.c2, t1.c2, t1.c65)) NOT BETWEEN ((t1.c2, t1.c65, t1.c2)) AND ((t1.c65, t1.c65, t1.c2))) WHEN ((t1.c1) IS TRUE) THEN CASE t1.c65  WHEN t1.c65 THEN t1.c1 END WHEN ((t1.c1)>(t1.c1)) THEN ((0x335f9777) NOT BETWEEN ('') AND (t1.c2)) ELSE 'TRUE' END; -- 0ms;
UPDATE t1 SET (c2, c2)=('', NULL) WHERE ((((t1.c2) BETWEEN (t1.c2) AND (t1.c2))) NOTNULL); -- 0ms;
UPDATE t1 SET (c1)=(NULL) WHERE (x'01d6' IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'', c2=NULL WHERE LIKELIHOOD(t1.c1 COLLATE NOCASE, 0.39479160572995486); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'') WHERE (NOT (((t1.c2) BETWEEN (t1.c65) AND (t1.c65)))); -- 1ms;
UPDATE OR IGNORE t1 SET c65=-421391419, c65=NULL WHERE ((((CASE WHEN t1.c65 THEN t1.c1 ELSE t1.c1 END)OR(((((((((((((t1.c65)AND(t1.c2)))OR(t1.c2)))OR(t1.c1)))OR(t1.c65)))AND(t1.c2)))AND(NULL)))))OR(((((((((((((((((t1.c2)OR(t1.c65)))OR(t1.c65)))AND(t1.c1)))AND(t1.c65)))AND(t1.c1)))AND(t1.c2)))AND(t1.c2)))OR(t1.c2)))); -- 1ms;
UPDATE OR IGNORE t1 SET c1='8&'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.03848422908615279) WHERE (~ (((t1.c65)+(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65='-56034780', c2='~1?V]X!', c2=0.4147157716403481, c2=-1287167915 WHERE COALESCE(DISTINCT (t1.c2 IN (t1.c65)), ((t1.c2)*(t1.c65)), ((((((((((((((((t1.c2)AND(t1.c2)))AND(t1.c2)))OR(t1.c1)))OR(t1.c2)))OR(t1.c65)))OR(t1.c2)))AND(t1.c65)))AND(t1.c65)), CAST(t1.c1 AS NUMERIC)); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65, c1)=(x'', 0x7550af8f); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65, c1, c1)=(x'', 0.9267744171271265, NULL) WHERE (((((t1.c2)+(t1.c65)), t1.c2, CASE WHEN 'm]' THEN t1.c2 END))<>((((t1.c2)<<(t1.c65)), ((((((((t1.c2)OR(t1.c65)))OR(t1.c65)))OR(t1.c2)))AND(t1.c2)), ((t1.c65) NOT NULL)))); -- 0ms;
UPDATE OR FAIL t1 SET c1='-855495957'; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.7774465831480277) WHERE ((((((t1.c1)AND(t1.c65)))OR(t1.c65))) NOT BETWEEN (CASE t1.c1  WHEN t1.c1 THEN t1.c2 ELSE t1.c2 END) AND (x'3026')); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'5fc8'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0x5eb94a08, c2=0.8976164501959774; -- 0ms;
UPDATE t1 SET c1='169119239'; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.5830782882879408, c2=x'88de531d'; -- 0ms;
UPDATE OR IGNORE t1 SET c2='-307102529' WHERE ((t1.c2 COLLATE RTRIM) BETWEEN ((((t1.c2))<((t1.c65)))) AND ((+ (t1.c2)))); -- 1ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65, c65)=(NULL, NULL, 0Xffffffffaae9bda8); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(-1.556942765E9); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(']\Gx') WHERE t1.c65; -- 0ms;
UPDATE OR ABORT t1 SET (c2)=('') WHERE (NOT (((t1.c2) NOTNULL))); -- 0ms;
UPDATE OR ABORT t1 SET (c1, c65)=(0.49897935644665437, '-217015764'); -- 0ms;
UPDATE OR IGNORE t1 SET c65='729276026', c2=NULL WHERE CASE ((((((((t1.c2)AND(t1.c65)))OR(t1.c65)))OR(0.3257412713329496)))AND(t1.c1))  WHEN CASE WHEN t1.c1 THEN t1.c2 WHEN t1.c65 THEN t1.c2 WHEN t1.c65 THEN t1.c65 ELSE t1.c65 END THEN ((t1.c65) BETWEEN (t1.c1) AND (t1.c2)) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.3056668709756317); -- 0ms;
UPDATE OR IGNORE t1 SET c65=2.004414601E9 WHERE x''; -- 0ms;
UPDATE OR IGNORE t1 SET c65='' WHERE ((CAST(t1.c2 AS INTEGER))||(((t1.c65)%('426905943')))); -- 0ms;
UPDATE OR ABORT t1 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x''); -- 0ms;
UPDATE OR ABORT t1 SET (c65)=('') WHERE (((+ (t1.c1)))>>(CAST(t1.c65 AS BLOB))); -- 0ms;
UPDATE t1 SET (c1)=('0.13322963160121248'); -- 1ms;
UPDATE t1 SET c2=0.8561784474563501, c65='1294911993'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c1='Ꚅ'; -- 0ms;
UPDATE OR REPLACE t1 SET (c65)=(NULL) WHERE ((((t1.c2) BETWEEN (t1.c1) AND (t1.c2))) IS TRUE); -- 0ms;
UPDATE t1 SET c2=0.6534422147166996 WHERE (TRIM(DISTINCT t1.c2) IN (t1.c1, NULL)); -- 0ms;
UPDATE OR IGNORE t1 SET c65='Bc' WHERE CAST(t1.c1 AS NUMERIC) COLLATE NOCASE; -- 0ms;
UPDATE t1 SET (c2)=(0.9459997152607366) WHERE TRIM(DISTINCT CASE t1.c2  WHEN t1.c65 THEN t1.c65 ELSE t1.c1 END); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-893038521') WHERE ((t1.c1 COLLATE BINARY)==(NULL)); -- 0ms;
INSERT OR ABORT INTO t1 VALUES ('', 'm{', 0.2500415237300164); -- 1ms;
REINDEX  t1; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c65, c1, c2) VALUES (0.23217827755389997, 0.9669609014434515, x''); -- 0ms;
INSERT OR FAIL INTO t1(c2) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES ('1085863486', -1149233577, x''); -- 0ms;
INSERT OR ABORT INTO t1(c1) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t1(c65) VALUES (NULL), (x''), (x'68e4'); -- 0ms;
INSERT OR IGNORE INTO t1(c1, c2) VALUES (x'', '-1928793345'); -- 0ms;
PRAGMA temp.application_id; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c1 TO c43; -- 0ms;
ALTER TABLE t1 ADD COLUMN c89 BLOB; -- 0ms;
PRAGMA temp.locking_mode = NORMAL; -- 0ms;
PRAGMA busy_timeout = 0; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
ALTER TABLE t1 RENAME COLUMN c2 TO c0; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c1 TO c35; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
ALTER TABLE t1 ADD COLUMN c64 TEXT; -- 1ms;
INSERT OR FAIL INTO t1(c2, c65) VALUES (NULL, 0.6114753827173284); -- 0ms;
INSERT OR REPLACE INTO t1(c2, c1) VALUES ('⌱\rcἯꋟ*d9m', x'7ad4'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.17853066147755858 WHERE (((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c89)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('n	') WHERE (t1.c65 IN ()) COLLATE BINARY COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE ((((t1.c2)*(NULL)))IS NOT((+ (t1.c89)))); -- 0ms;
UPDATE OR IGNORE t1 SET c89=0X55b36ef5, c2='\nz+<'; -- 1ms;
UPDATE OR IGNORE t1 SET c2=0.836540489393808, c1=0.2637117108956517; -- 0ms;
UPDATE t1 SET c2='k\\''{閰\rG}t'; -- 0ms;
UPDATE OR ROLLBACK t1 SET c64='B,e|^V\rA#' WHERE CAST(((t1.c2)LIKE(t1.c65)) AS TEXT); -- 0ms;
UPDATE t1 SET (c89, c1)=(x'', ''); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(-421796397) WHERE ((((t1.c2)!=(t1.c64))) IS FALSE); -- 0ms;
UPDATE OR ABORT t1 SET c64=x'7e0c'; -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=207182364 WHERE CASE x''  WHEN CAST(t1.c64 AS NUMERIC) THEN t1.c2 COLLATE RTRIM WHEN '91053184' THEN ((((t1.c2)OR(t1.c65)))OR(t1.c1)) WHEN ((t1.c89) BETWEEN (t1.c65) AND (t1.c89)) THEN CASE WHEN t1.c2 THEN t1.c89 END END; -- 0ms;
UPDATE OR ROLLBACK t1 SET c89=4.26905943E8, c65='684925070' WHERE ((((((t1.c89)|('-1257751667')))AND((+ (t1.c2)))))OR(t1.c64)); -- 0ms;
UPDATE OR IGNORE t1 SET c64=-9.37992704E8, c2='TN'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'cb54'); -- 0ms;
UPDATE OR ABORT t1 SET c1=x'', c1=0x19d31bb4 WHERE (0xffffffffb3fc05dc IN (CASE WHEN t1.c89 THEN t1.c2 END)); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(0.3843699910448882) WHERE t1.c65; -- 0ms;
UPDATE OR IGNORE t1 SET c1=-2044399475 WHERE (- (((((((((t1.c65)OR(t1.c2)))OR(t1.c64)))AND(t1.c64)))AND(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET c1='77064409' WHERE t1.c64; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL; -- 0ms;
UPDATE t1 SET c64=x'' WHERE CAST('168820597' AS INTEGER); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'') WHERE (t1.c2 IN ()) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.4503282009608287 WHERE t1.c2; -- 0ms;
UPDATE t1 SET c89=NULL WHERE (((t1.c65)) BETWEEN ((CASE t1.c64  WHEN -1370777911 THEN t1.c65 WHEN t1.c1 THEN t1.c64 WHEN t1.c89 THEN t1.c1 END)) AND (((((t1.c2)) BETWEEN ((t1.c65)) AND ((t1.c65)))))); -- 0ms;
UPDATE OR REPLACE t1 SET (c89)=(x'1101'); -- 0ms;
UPDATE OR ROLLBACK t1 SET c64=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.251042292903916) WHERE x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(-746789562) WHERE CAST(((0xffffffff8a95340a)!=(t1.c89)) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(NULL); -- 0ms;
UPDATE t1 SET (c65)=('0.24113379635384036'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'') WHERE t1.c64; -- 0ms;
UPDATE t1 SET c65=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.16106155915073195; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2, c89)=(0x4160c1c4, NULL) WHERE CAST(((t1.c65) IS FALSE) AS REAL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1)=(-1181358437, -1233135781); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0X49d18178 WHERE (NOT (CASE t1.c65  WHEN x'f0b4' THEN t1.c1 WHEN t1.c2 THEN t1.c65 WHEN t1.c2 THEN t1.c89 ELSE t1.c1 END)); -- 0ms;
UPDATE OR IGNORE t1 SET c64=x'238b' WHERE (- (((t1.c2) ISNULL))); -- 1ms;
UPDATE OR FAIL t1 SET (c64, c89, c65)=(NULL, '-20623471', '') WHERE CASE WHEN t1.c89 THEN t1.c1 ELSE t1.c65 END COLLATE BINARY COLLATE BINARY; -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=(NULL) WHERE (- ((((t1.c1, t1.c64, t1.c65))<=((t1.c89, t1.c1, t1.c1))))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(''); -- 0ms;
UPDATE t1 SET c65='' WHERE 0.5080500662174041; -- 0ms;
UPDATE OR REPLACE t1 SET c1=0.2456280238753601; -- 0ms;
UPDATE OR ABORT t1 SET c1=0.475956343658668; -- 0ms;
UPDATE t1 SET c64=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c64)=('556077255', 0.859345900056271); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.8348712593574033); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.3811906251598808, c2=NULL, c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'', c1=x'b3dd', c2=x'' WHERE ((- (t1.c1)) IN (((t1.c2) NOT BETWEEN (t1.c89) AND (t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x''); -- 0ms;
UPDATE t1 SET c1='~' WHERE (SQLITE_VERSION() IN (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c89)))); -- 0ms;
UPDATE t1 SET (c2, c2, c64)=(NULL, 0.8911035383875073, NULL) WHERE (((t1.c65)/(t1.c64)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c2)=('4xx봨f', x'81f9') WHERE ((CAST(t1.c65 AS REAL)) NOT BETWEEN (NULL) AND (t1.c89)); -- 0ms;
UPDATE OR IGNORE t1 SET c89='ujၩ~()N蚫'; -- 0ms;
UPDATE t1 SET c1=1373206328; -- 0ms;
UPDATE OR ABORT t1 SET (c65)=(0.7874370943592498); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.051592838693319765); -- 0ms;
UPDATE t1 SET (c89)=(x'6f26'); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.9089123506225866, c65=NULL WHERE (((NULL))<=((UPPER(DISTINCT t1.c89)))); -- 0ms;
UPDATE OR REPLACE t1 SET c89='61071515', c1='-1474723505', c64='0.9894707066673714'; -- 0ms;
UPDATE OR ABORT t1 SET c64='' WHERE ((x'') BETWEEN (((t1.c64) IS TRUE)) AND (((t1.c64)<(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.7684775860492409); -- 0ms;
UPDATE t1 SET (c65)=(NULL) WHERE (((t1.c2)&(t1.c89)) IN ((t1.c64 IN ()), ((t1.c2) NOTNULL))); -- 0ms;
UPDATE t1 SET (c64, c64)=(x'', 'o*뫌aꢝ닆'); -- 0ms;
UPDATE t1 SET c64=0.7413639209070234; -- 0ms;
UPDATE OR IGNORE t1 SET c89='-1993053800' WHERE (((- (t1.c65)))<>(((((((((((((t1.c64)AND(t1.c64)))AND(t1.c2)))AND(t1.c89)))AND(t1.c64)))OR(0.31595963141681416)))OR(t1.c1)))); -- 0ms;
UPDATE OR FAIL t1 SET c1=0X23aefe3f WHERE ((CAST(t1.c64 AS REAL)) IS FALSE); -- 0ms;
UPDATE t1 SET (c65, c89)=(x'', NULL) WHERE ((t1.c2) ISNULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c1)=('rU', '-1657523181'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0X4870cafc); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(x'') WHERE CASE WHEN ((((0.11036978013230314)OR(t1.c89)))AND(t1.c64)) THEN (t1.c89 IN ()) ELSE (NOT (x'')) END; -- 0ms;
UPDATE t1 SET (c2)=(0.16820314434941563); -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=(NULL) WHERE ((((t1.c2)>=(t1.c64)))>=(t1.c89 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t1 SET c65='729276026', c64='', c89='1346505730'; -- 0ms;
UPDATE OR IGNORE t1 SET c65='0.40688715941628195', c2=NULL; -- 0ms;
UPDATE OR ABORT t1 SET c1='gNZIwsQ'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=' H'; -- 0ms;
UPDATE OR FAIL t1 SET (c65, c65, c64)=(NULL, 0.3946459128661348, '312627900') WHERE ((t1.c89)>>(((((t1.c2)AND(t1.c2)))AND(x'94bc')))); -- 0ms;
UPDATE OR IGNORE t1 SET c89=x'6988'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.44623826377164855) WHERE ((TRIM(t1.c65)) NOT BETWEEN (UPPER(DISTINCT t1.c1)) AND (((NULL) ISNULL))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c64=NULL, c64='1051394914' WHERE CASE 1.751697625E9  WHEN NULLIF(t1.c89, t1.c65) THEN t1.c64 END; -- 0ms;
UPDATE OR IGNORE t1 SET c1='198920392' WHERE CASE (((t1.c2))<=((t1.c89)))  WHEN CASE NULL  WHEN t1.c2 THEN t1.c64 WHEN t1.c64 THEN t1.c89 WHEN t1.c65 THEN t1.c2 ELSE t1.c2 END THEN CASE WHEN t1.c64 THEN t1.c89 ELSE t1.c64 END END; -- 0ms;
UPDATE t1 SET (c2, c2)=('', NULL) WHERE (t1.c2 IN ()) COLLATE NOCASE; -- 1ms;
UPDATE t1 SET (c65)=(0.9526869386719226) WHERE (- (((t1.c65) ISNULL))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'1bb1'; -- 0ms;
UPDATE OR ABORT t1 SET (c64, c1)=(1856162828, 'yGDw狕9x') WHERE (((((((('')OR(t1.c89)))OR(t1.c64)))OR(((t1.c89) BETWEEN (t1.c89) AND (t1.c2)))))OR(((((((((t1.c65)AND(t1.c64)))AND(t1.c65)))OR(t1.c89)))AND(t1.c2)))); -- 0ms;
UPDATE OR REPLACE t1 SET (c89, c65, c2)=(x'3ed2', 0.41362940987448216, NULL) WHERE ((((((t1.c64, t1.c64, t1.c89)) BETWEEN ((t1.c64, t1.c64, 0.8187875875138934)) AND ((t1.c2, t1.c89, t1.c64)))))==(((t1.c65 IN ())))); -- 0ms;
UPDATE t1 SET (c1, c64)=(x'e6c9c865aaca', NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c89)=(x'', 0.9165521065419752) WHERE ((((((t1.c65)AND(t1.c64)))OR(t1.c65))) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(6.8492507E8) WHERE ((((((((x'8f23')AND(t1.c64 COLLATE RTRIM)))AND(((t1.c2) NOT NULL))))OR(((((((((t1.c1)AND(t1.c89)))AND(t1.c2)))AND(t1.c64)))OR(t1.c64)))))OR((((('2\')OR(t1.c1)))AND('}\n9CZ,T?')))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.5333072727389642) WHERE ((t1.c65) BETWEEN ((((t1.c1))<=((t1.c89)))) AND (NULL)); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('231736699'); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0X4870cafc) WHERE x'd3e282c8'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c65=0.07431700034434818, c89='514836766' WHERE (((((('?똄') NOT BETWEEN (t1.c65) AND (t1.c64)))OR(((t1.c1)IS NOT(NULL)))))AND((t1.c1 IN (t1.c1)))); -- 0ms;
UPDATE OR ABORT t1 SET (c64)=(0.12774382724350564) WHERE 0.1860570998282327; -- 0ms;
UPDATE OR IGNORE t1 SET c64=0.6902798851232379; -- 0ms;
UPDATE OR FAIL t1 SET c2='556077255'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(-6.420473E8) WHERE ((((CAST(t1.c1 AS TEXT))OR(((t1.c65)<(t1.c89)))))OR(((t1.c89)OR(t1.c89)))); -- 0ms;
UPDATE t1 SET (c2, c2, c64)=(x'cf57', '-726247769', 0.1817741451522965); -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=0.13520873987967763 WHERE ((t1.c64)IS NOT(t1.c65)) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL; -- 0ms;
UPDATE OR REPLACE t1 SET (c64)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'5178'; -- 0ms;
UPDATE OR ABORT t1 SET c64=5.52708111E8 WHERE t1.c2; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2, c2)=(NULL, '1564547080'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.2466556889746936 WHERE CASE ((t1.c89) BETWEEN (t1.c65) AND (t1.c2))  WHEN ((NULL) IS FALSE) THEN ((NULL)||(t1.c2)) END; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.10193007890447081, c64='3y', c2='-1295785473', c64=NULL WHERE ((CAST('1346505730' AS BLOB))<(1.482752928E9)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c89, c1, c65)=(1844809298, NULL, '863126727', 'TRUE'); -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL WHERE 0.0757049133783454; -- 0ms;
UPDATE OR ABORT t1 SET (c89)=(x''); -- 0ms;
UPDATE OR FAIL t1 SET (c65, c64)=(0.3973851062119631, 'pCj?''t') WHERE CAST(t1.c1 COLLATE NOCASE AS BLOB); -- 0ms;
UPDATE OR FAIL t1 SET (c65, c89)=('C|\r4\n\[6Y', x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(-1620736188) WHERE t1.c64; -- 0ms;
UPDATE t1 SET (c1)=(0.25159641075124184); -- 0ms;
UPDATE t1 SET c65=NULL, c2=589041192, c1=0X5ae29686; -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c65)=('1234685879', '1641612879'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.1147382602459237) WHERE CASE WHEN ((t1.c64) IS TRUE) THEN ((((t1.c64)AND(t1.c89)))AND(t1.c89)) WHEN ((t1.c64) IS FALSE) THEN NULL COLLATE BINARY WHEN (t1.c2 IN ()) THEN (NOT ('208361756')) ELSE (((t1.c64)) BETWEEN ((t1.c2)) AND ((t1.c64))) END; -- 0ms;
UPDATE OR FAIL t1 SET c65=0Xffffffffa6def054; -- 0ms;
UPDATE OR FAIL t1 SET (c2)=('80s*}8苺t'); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(x''); -- 0ms;
UPDATE t1 SET c64=NULL, c1='l' WHERE CAST((t1.c1 IN ()) AS NUMERIC); -- 0ms;
UPDATE t1 SET (c64)=(NULL); -- 0ms;
UPDATE OR REPLACE t1 SET (c65)=(NULL) WHERE NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0xffffffffa332f053); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(-1); -- 0ms;
UPDATE OR FAIL t1 SET c65=x'' WHERE (NOT ((0.005601730690006579 IN (t1.c89)))); -- 1ms;
UPDATE t1 SET c89=0.9531557567576655 WHERE (- ((NOT (NULL)))); -- 0ms;
UPDATE t1 SET (c64)=(NULL) WHERE ((((((((((((t1.c1)OR(t1.c64)))AND(t1.c89)))OR(t1.c1 COLLATE RTRIM)))OR(((((((((t1.c2)OR(t1.c2)))OR(t1.c2)))AND(t1.c2)))AND(t1.c65)))))AND(UPPER(x'4a0bad37'))))AND(((t1.c89)IS NOT('')))); -- 0ms;
UPDATE t1 SET c2=0.5949530225283958, c2='-1921460065', c2='-1969933302' WHERE CASE CAST(t1.c65 AS TEXT)  WHEN CASE WHEN t1.c2 THEN t1.c89 ELSE 0.357500751796502 END THEN (('Gw{Ra~y{(') IS TRUE) WHEN t1.c89 COLLATE BINARY THEN json(t1.c1) WHEN 'lzQ' THEN ((((((((t1.c1)OR(t1.c65)))AND(t1.c1)))OR('-1474421333')))OR(t1.c2)) ELSE (NOT (t1.c65)) END; -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=''; -- 0ms;
UPDATE OR IGNORE t1 SET c2=3.65224881E8 WHERE CAST(0.2115945530987069 AS NUMERIC); -- 0ms;
UPDATE t1 SET c2=NULL WHERE ((t1.c64) BETWEEN (t1.c65) AND (t1.c2)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'e1f41eeb' WHERE ((t1.c64) IS TRUE); -- 0ms;
UPDATE t1 SET (c89, c65, c64)=(NULL, '2074428531', '2039265451'); -- 0ms;
UPDATE t1 SET (c65)=(x'') WHERE ((NULL) NOT BETWEEN ((t1.c2 IN ())) AND (t1.c2 COLLATE NOCASE)); -- 0ms;
UPDATE OR ABORT t1 SET (c65, c64)=(NULL, 0.7444220742409718) WHERE CAST(((t1.c2) BETWEEN (t1.c89) AND (t1.c65)) AS INTEGER); -- 0ms;
UPDATE t1 SET (c65, c2)=(NULL, '-68246817'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65)=(NULL, x'8929840c') WHERE CAST((((t1.c89)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('26660469'); -- 0ms;
UPDATE t1 SET c1='395302076'; -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(x'') WHERE CAST(((8.32397362E8)IS NOT(t1.c1)) AS NUMERIC); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=('-181740096') WHERE (((t1.c2, t1.c65, t1.c89)) NOT BETWEEN ((CASE t1.c89  WHEN 0.05666539886071287 THEN '-2051737996' ELSE t1.c64 END, ((0.7640456287274159)LIKE(t1.c1)), t1.c64 COLLATE NOCASE)) AND ((CASE WHEN t1.c89 THEN t1.c65 ELSE t1.c65 END, (+ (t1.c64)), INSTR(t1.c89, 0.3279082062279326)))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'4ee7', c2='0.1192422679551185'; -- 0ms;
UPDATE OR REPLACE t1 SET c2='474495888' WHERE CAST(2031327983 AS NUMERIC); -- 0ms;
UPDATE OR ABORT t1 SET c1=NULL WHERE CASE WHEN ((t1.c64) BETWEEN (t1.c2) AND (t1.c64)) THEN 0X25d6555e END; -- 0ms;
UPDATE t1 SET c1=x'9863' WHERE (((('Vp')AND(((((t1.c65)OR(t1.c89)))OR(t1.c1)))))OR(((t1.c2) ISNULL))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE ((((((((((t1.c65) BETWEEN (t1.c65) AND (t1.c89)))OR((t1.c1 IN ()))))OR(t1.c2)))AND(((t1.c65)||(t1.c1)))))OR(UNLIKELY(x''))); -- 0ms;
UPDATE t1 SET c89='-66403360', c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.29269597430909944); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('1096860100'); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(-2051737996) WHERE ((t1.c1)AND(0.5046259598357306)); -- 0ms;
UPDATE t1 SET (c65)=(x'62f1'); -- 0ms;
UPDATE t1 SET (c1, c89, c64)=('2076976251', NULL, x''); -- 0ms;
UPDATE OR IGNORE t1 SET c89=-457939758; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0xffffffffe63c83ca) WHERE CASE (0.10546294534816747 IN ())  WHEN (((t1.c89))<((t1.c65))) THEN LIKELIHOOD(DISTINCT 0x56292a23, 0.2802678648412461) END; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(0.7810878795101246) WHERE TYPEOF(((((t1.c65)OR(t1.c2)))AND(t1.c1))); -- 0ms;
UPDATE OR FAIL t1 SET c65=2087157128, c89=-1090570645; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('k') WHERE (~ (0.6020804686329622)); -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c1)=(x'', x''); -- 0ms;
UPDATE t1 SET (c89, c64, c1)=(0.9089123506225866, NULL, 0.7825779136774356) WHERE '169119239'; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=0.5868434939620051 WHERE ((t1.c1 COLLATE BINARY) NOT BETWEEN (x'e491') AND (t1.c1 COLLATE BINARY)); -- 1ms;
UPDATE OR REPLACE t1 SET (c64)=('ZK') WHERE ((((t1.c64)>(x''))) BETWEEN ((((t1.c64))>=((t1.c89)))) AND (CASE t1.c64  WHEN t1.c64 THEN t1.c89 END)); -- 0ms;
UPDATE OR ROLLBACK t1 SET c89='1701756655', c1=x''; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(0.35410005921507415) WHERE (~ (((t1.c2) NOT BETWEEN (t1.c65) AND (t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('*X}y9lJe'); -- 0ms;
UPDATE OR FAIL t1 SET c64='567660883'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-1487100270') WHERE ((((t1.c89) IS TRUE))IS NOT(((t1.c2)IS(t1.c89)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(NULL); -- 0ms;
UPDATE t1 SET c1=0.5520589365327734, c1=NULL, c89=-6.420473E8 WHERE (((t1.c89)) NOT BETWEEN ((CAST(-1491401641 AS INTEGER))) AND (((~ (t1.c65))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(0.07081997033761467); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'' WHERE CAST(((t1.c1) NOT BETWEEN (t1.c65) AND (t1.c65)) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.3713794479722631); -- 0ms;
UPDATE OR IGNORE t1 SET c64='' WHERE (((((((t1.c65))>((0.2944148525585619))))AND(CAST(t1.c64 AS REAL))))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c2 END)); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE (t1.c1 COLLATE NOCASE IN ()); -- 0ms;
UPDATE OR ABORT t1 SET (c2, c89, c65)=('', NULL, 0.45423852266814624); -- 0ms;
UPDATE OR REPLACE t1 SET (c64)=(0Xffffffffa6315c75); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c65=x'6492', c65=1068259840; -- 0ms;
UPDATE OR ABORT t1 SET (c65)=('-30118250'); -- 0ms;
UPDATE OR IGNORE t1 SET c64=0.5622360129172099, c1=0.8889990190142876, c65=0.48256473192939797 WHERE ((((((t1.c65)OR(t1.c89)))OR(t1.c1))) NOTNULL); -- 1ms;
UPDATE OR IGNORE t1 SET c89='FALSE', c64=0.033060647794701414, c65='-1505675323'; -- 0ms;
UPDATE OR ROLLBACK t1 SET c89=x''; -- 0ms;
UPDATE t1 SET (c1)=('-655517724') WHERE ((((t1.c89)<(t1.c89)))IS(((((((((t1.c65)OR(t1.c64)))AND(t1.c1)))AND(t1.c89)))OR(t1.c65)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=x'' WHERE CASE ((((((((t1.c2)OR(t1.c64)))OR(t1.c2)))OR(t1.c64)))AND(t1.c65))  WHEN t1.c89 THEN ((t1.c64) BETWEEN (t1.c65) AND ('-1603407817')) ELSE (((t1.c1, t1.c65, t1.c89)) NOT BETWEEN ((t1.c64, t1.c64, t1.c65)) AND ((t1.c2, t1.c1, t1.c64))) END; -- 0ms;
UPDATE t1 SET c1=0xffffffff84c0b21a, c64=NULL WHERE CAST(((t1.c1)==(t1.c65)) AS NUMERIC); -- 0ms;
UPDATE OR ROLLBACK t1 SET c64='-488277020' WHERE (((((t1.c89))>=((t1.c64)))) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.4933255768248973, c64=x''; -- 0ms;
UPDATE OR ABORT t1 SET c2=x'', c89=-642047300, c1=''; -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c65)=(NULL, 'G^Kjc_Lp'); -- 0ms;
UPDATE t1 SET c65=x'', c1=0Xffffffffc8175e00; -- 0ms;
UPDATE t1 SET c2=NULL; -- 0ms;
UPDATE OR ABORT t1 SET c2=0.5607350769341127, c89='bxw醿jw9dљ'; -- 0ms;
UPDATE t1 SET c2=473235751; -- 0ms;
UPDATE t1 SET c2=x'8038', c64='Yu1' WHERE (+ (((t1.c2) NOT BETWEEN ('-2051737996') AND (t1.c64)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2, c1)=('cjxg', x''); -- 0ms;
UPDATE OR IGNORE t1 SET c64=x'' WHERE ((LIKELIHOOD(DISTINCT t1.c65, 0.9638963682674268))*(((((t1.c64)OR(t1.c65)))AND(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'bcd0', c89=0X6242ea39; -- 0ms;
UPDATE t1 SET c1=x''; -- 0ms;
UPDATE t1 SET c64=0X662ba9cb; -- 1ms;
UPDATE OR IGNORE t1 SET (c64)=('1121533359'); -- 0ms;
UPDATE OR ABORT t1 SET c64='&'; -- 0ms;
UPDATE t1 SET (c2, c1)=('', '0.9267744171271265') WHERE ((t1.c65)>(t1.c64)) COLLATE BINARY; -- 0ms;
UPDATE t1 SET c1='Lo?g蚫' WHERE (+ ((t1.c2 IN (t1.c1, t1.c65, t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c2)=('1385481820', x'') WHERE ((((t1.c89) IS TRUE))<(((t1.c2)+(t1.c2)))); -- 0ms;
UPDATE t1 SET c1=NULL, c65=NULL WHERE NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c89=x'' WHERE (NOT (t1.c64 COLLATE RTRIM)); -- 0ms;
UPDATE OR ABORT t1 SET c65=0.9768953757076085; -- 0ms;
UPDATE OR REPLACE t1 SET (c89)=(x'') WHERE (((x'' IN ()))*(t1.c64)); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0xffffffffe0238424, c65=26660469, c1='173384305'; -- 0ms;
UPDATE OR IGNORE t1 SET c2='-2077433791' WHERE (~ (CASE t1.c2  WHEN t1.c2 THEN t1.c1 END)); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'') WHERE ((t1.c89) BETWEEN (LOWER(t1.c1)) AND ((- (0.3528352737675382)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c65)=(x'', x'') WHERE ((((t1.c64)>(t1.c64))) BETWEEN ((- (t1.c2))) AND (CASE WHEN t1.c64 THEN x'' END)); -- 0ms;
UPDATE OR IGNORE t1 SET c1='D\Kdt'; -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=0.8261078169101426, c64=0.6107725767665184 WHERE ((CAST(t1.c2 AS BLOB))>=(t1.c65 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c65)=(0.3818262762432907, 0.5467284103150902) WHERE CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) AS BLOB); -- 0ms;
UPDATE OR IGNORE t1 SET c64=-1.556942765E9; -- 0ms;
UPDATE t1 SET c2=NULL, c89=x''; -- 0ms;
UPDATE OR REPLACE t1 SET c65=x'4841f4d6', c1=0x27bcc298 WHERE CASE ((t1.c1)<<(t1.c65))  WHEN TRIM(DISTINCT t1.c2) THEN CAST(t1.c64 AS TEXT) WHEN json_array(t1.c1, t1.c2) THEN 0Xffffffff99797f42 WHEN ((t1.c2)>=(t1.c2)) THEN ((t1.c89)GLOB(t1.c2)) ELSE (((t1.c2))<=((t1.c1))) END; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=NULL; -- 0ms;
UPDATE t1 SET (c64)=(NULL) WHERE ((((((t1.c64)>(0.6113343199148845)))OR((t1.c2 IN (t1.c1, t1.c2)))))OR(PRINTF(t1.c1))); -- 0ms;
UPDATE OR ABORT t1 SET (c64)=(0.8138811720791139); -- 0ms;
UPDATE OR IGNORE t1 SET c1=-748050681 WHERE ((t1.c64) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.9894707066673714) WHERE 0.33055703352663646; -- 0ms;
UPDATE t1 SET c89=0.8973176888568692, c89=x'', c89=0.8860846485085774; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0X5864bf78; -- 0ms;
UPDATE OR FAIL t1 SET c2=x'' WHERE (('443067416' COLLATE NOCASE) NOTNULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.6481211351024756); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.8936034942863418); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(NULL) WHERE LOWER(((t1.c64)%(t1.c1))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1='%Wꌕ' WHERE CAST('1178940806' AS TEXT); -- 0ms;
UPDATE OR IGNORE t1 SET c64=6.8492507E8 WHERE CAST(CASE WHEN t1.c89 THEN t1.c64 WHEN t1.c2 THEN t1.c64 WHEN t1.c1 THEN t1.c89 END AS INTEGER); -- 0ms;
UPDATE OR ABORT t1 SET (c65)=('647s+N>t'); -- 0ms;
UPDATE t1 SET c2=x'b7be', c89=NULL, c65=-838922530 WHERE (+ (((t1.c64) BETWEEN (t1.c89) AND (t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE ((((((((CASE WHEN t1.c64 THEN t1.c2 END)OR(CASE WHEN t1.c64 THEN t1.c64 ELSE t1.c65 END)))AND(((0.25413160751161357) BETWEEN (t1.c1) AND (t1.c1)))))AND((((x'12b5', t1.c65, t1.c1))>((t1.c64, t1.c64, t1.c64))))))AND(((t1.c89)|(t1.c65)))); -- 1ms;
UPDATE OR FAIL t1 SET c64='1096860100', c65=NULL; -- 0ms;
UPDATE t1 SET (c2)=('le3,#') WHERE CAST(t1.c2 AS REAL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'880f', c65='395098539' WHERE (((t1.c64 IN ())) NOTNULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.7627017420058021, c64=0.7947768634449333 WHERE ((((((((((((t1.c65)AND(t1.c64)))AND(t1.c1)))OR(((t1.c64)+(t1.c89)))))OR(((((((((((((t1.c2)OR(t1.c1)))OR(t1.c2)))AND(t1.c64)))OR(t1.c65)))AND(t1.c64)))OR(t1.c64)))))AND(t1.c65)))OR(t1.c1 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE t1 SET c64='', c64=x''; -- 0ms;
UPDATE OR FAIL t1 SET (c89)=('2c鬞''}#v') WHERE t1.c65; -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(0.3501257949468599); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.003949734710111619 WHERE ((CASE t1.c2  WHEN t1.c2 THEN t1.c1 WHEN t1.c64 THEN t1.c64 WHEN t1.c89 THEN t1.c2 ELSE t1.c2 END) ISNULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(''); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 0ms;
UPDATE t1 SET c1=x'', c89=0.4095178292595818, c64=0.5398398620823531; -- 0ms;
UPDATE OR REPLACE t1 SET c2=0x178fd4bc, c89='-880968058'; -- 0ms;
UPDATE OR IGNORE t1 SET c65='s]%'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c64, c65)=('. <', x'43ee', 'e젊w!k1娜') WHERE CASE ((((t1.c1)OR(t1.c1)))OR(t1.c89))  WHEN (((t1.c89)) BETWEEN ((t1.c2)) AND ((t1.c89))) THEN (((t1.c89, t1.c65, t1.c89)) NOT BETWEEN ((t1.c64, t1.c2, t1.c1)) AND ((t1.c89, NULL, t1.c64))) ELSE ((t1.c65)OR(t1.c89)) END; -- 0ms;
UPDATE OR IGNORE t1 SET c64='973903333', c2=6.8492507E8, c1=1820654466; -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c89, c65)=(x'b4998bda', 0.22010649492198875, NULL) WHERE CAST((t1.c2 IN ()) AS TEXT); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.6073331004677595, c89=x'' WHERE ((t1.c2) ISNULL); -- 0ms;
UPDATE t1 SET (c1)=('k^k'); -- 0ms;
UPDATE OR IGNORE t1 SET c89='-565337000'; -- 0ms;
UPDATE OR ABORT t1 SET (c89)=(x'c8ac') WHERE (NOT (((((t1.c64)OR(t1.c65)))AND(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c64=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c2, c1)=(0.006217968495764947, -937992704, '-1921460065') WHERE CAST(((t1.c2) BETWEEN (NULL) AND (t1.c89)) AS BLOB); -- 0ms;
UPDATE t1 SET (c1, c65)=(641291675, '863126727'); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1, c65, c2)=(x'db24', 0.8032072232898158, x'') WHERE (- (((t1.c1) NOT NULL))); -- 0ms;
UPDATE OR ABORT t1 SET (c65)=(0Xffffffff9d18af54); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c64)=(x'0056', 0.9894707066673714) WHERE ((((((((((t1.c89)AND(t1.c1)))AND(t1.c1)))AND(t1.c1)))AND(t1.c65)))IS(((0.38598924686514646) BETWEEN (t1.c1) AND (t1.c1)))); -- 0ms;
UPDATE OR FAIL t1 SET c64=NULL WHERE ((~ (t1.c1)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL, c64=NULL, c1='1300275460'; -- 0ms;
UPDATE t1 SET (c2)=(2.004414601E9) WHERE x''; -- 0ms;
UPDATE t1 SET (c65, c64)=(x'', NULL) WHERE (((t1.c2, t1.c1, t1.c1)) NOT BETWEEN ((((t1.c89)/(t1.c89)), t1.c2 COLLATE NOCASE, CAST(t1.c89 AS BLOB))) AND ((((t1.c65)*(t1.c89)), ((t1.c64)!=(t1.c89)), UPPER(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'b172', c89=0.18559221748748178 WHERE (t1.c89 IN (t1.c64)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(NULL) WHERE (((t1.c65)) NOT BETWEEN (((((t1.c89, t1.c89, t1.c65)) BETWEEN ((t1.c65, t1.c2, t1.c2)) AND ((t1.c89, t1.c1, t1.c64))))) AND ((t1.c1))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c65=NULL; -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=('	') WHERE (~ (t1.c65)); -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c2)=(x'', NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c89, c64)=(NULL, '*', NULL); -- 0ms;
UPDATE t1 SET c64='0.6113343199148845'; -- 0ms;
UPDATE OR IGNORE t1 SET c65='-116875205', c2=x'1cf1' WHERE ((((t1.c89)OR(SQLITE_VERSION())))OR((t1.c65 IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=267339405; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('z*칇\6') WHERE (('oz.j9i')/(t1.c1)); -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=(x'') WHERE ((((t1.c89)*(t1.c1))) NOT BETWEEN (('-114322150' IN (t1.c89))) AND (CASE WHEN t1.c65 THEN t1.c64 END)); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(0Xffffffffa017766d) WHERE (((t1.c64) NOT BETWEEN (t1.c1) AND (t1.c65)) IN ()); -- 0ms;
UPDATE OR ABORT t1 SET (c64, c65)=('W&', '-984007971') WHERE (~ (CASE t1.c89  WHEN t1.c2 THEN t1.c64 END)); -- 0ms;
UPDATE OR IGNORE t1 SET c89=7.21819624E8, c89=-1151785540; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0Xd71fb39; -- 0ms;
UPDATE OR FAIL t1 SET (c65, c65)=(0xffffffffc695b9e2, 0Xffffffff940632f6) WHERE LOWER(DISTINCT ((t1.c1)GLOB(280836360))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.40365804090756296; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(-1.16875205E8); -- 0ms;
UPDATE t1 SET c2=x''; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c89, c65)=(x'', -1735783182) WHERE ((((((((CASE t1.c2  WHEN t1.c89 THEN t1.c1 END)OR(((((x'')AND(t1.c2)))AND(t1.c2)))))AND(0.4605941653599869)))AND(((t1.c64)+(t1.c89)))))OR((NOT (t1.c89)))); -- 1ms;
UPDATE OR ABORT t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c64=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c2='s_', c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'', c89=0.5154802190555163; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=('552708111'); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=0.9074185123699595 WHERE ((LIKELY(DISTINCT t1.c64)) IS FALSE); -- 0ms;
UPDATE t1 SET (c64)=(0.10774133467447855); -- 0ms;
UPDATE OR FAIL t1 SET (c89)=(''); -- 0ms;
UPDATE OR IGNORE t1 SET c89=x'' WHERE (+ (((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(2114476001); -- 0ms;
UPDATE OR ABORT t1 SET c65=NULL; -- 0ms;
UPDATE t1 SET c89=0.5810805655167718, c65='9bo04'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x''; -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=('.&') WHERE CASE WHEN CASE WHEN t1.c1 THEN t1.c64 WHEN t1.c2 THEN t1.c64 WHEN t1.c1 THEN t1.c65 ELSE t1.c2 END THEN ((t1.c89)&(t1.c64)) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c65)=(NULL, 0.15425613580577546); -- 0ms;
UPDATE OR FAIL t1 SET c2='h&ኟX!O'; -- 0ms;
UPDATE OR ABORT t1 SET (c65, c2)=(0.17426601627905847, 0.4355842905621232) WHERE ((LAST_INSERT_ROWID()) BETWEEN (CASE t1.c89  WHEN NULL THEN t1.c89 ELSE t1.c89 END) AND (HEX(DISTINCT t1.c89))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE CASE t1.c64  WHEN LTRIM(t1.c1, t1.c64) THEN (((t1.c65))>((t1.c65))) WHEN ((t1.c65)/(t1.c1)) THEN ((x'7306')>>(NULL)) WHEN ((t1.c65)>(t1.c1)) THEN (((t1.c64))<=((t1.c89))) ELSE x'' END; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(''); -- 1ms;
UPDATE OR FAIL t1 SET (c65, c65)=(-1806546118, 0.6343990084733967); -- 0ms;
UPDATE t1 SET c65='0.6100256105077245'; -- 0ms;
UPDATE t1 SET (c1)=(''); -- 0ms;
UPDATE t1 SET (c1)=('XB') WHERE ((((json_array_length(t1.c1, t1.c2))AND(CASE WHEN t1.c89 THEN x'024c' ELSE t1.c64 END)))OR(t1.c64)); -- 0ms;
UPDATE OR IGNORE t1 SET c89='0.6491014807501586' WHERE ((t1.c1 IN ()) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.39025133807961054; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.01923320339445611); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'6862' WHERE ((((((t1.c89)OR(x'217b')))AND(t1.c64)))||(((t1.c89) NOT BETWEEN (t1.c89) AND (t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c64, c1)=(0.03132252060941776, x'', -917775193); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(x'8dea') WHERE ((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c64 THEN t1.c64 WHEN t1.c1 THEN t1.c2 END) IS FALSE); -- 0ms;
UPDATE t1 SET c1='(cVDg]'; -- 0ms;
UPDATE OR IGNORE t1 SET c1='-2034697795' WHERE x''; -- 0ms;
UPDATE t1 SET (c1)=(x'') WHERE ((json_remove(t1.c64, t1.c89, t1.c89, t1.c2)) NOT BETWEEN (((t1.c89)IS NOT(t1.c1))) AND ((((t1.c65)) NOT BETWEEN ((t1.c65)) AND ((t1.c2))))); -- 0ms;
UPDATE OR ABORT t1 SET c64='863126727', c65='5' WHERE t1.c2; -- 0ms;
UPDATE OR IGNORE t1 SET c64=NULL; -- 0ms;
UPDATE t1 SET (c64)=(x''); -- 0ms;
UPDATE t1 SET c89=''; -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c89)=('[IZ쓎P', x'f2e8') WHERE ((((t1.c89) NOT NULL))||(((t1.c64) IS TRUE))); -- 0ms;
UPDATE t1 SET c89='', c89=0.13776991202165867, c89=NULL WHERE ((((t1.c89)*(t1.c65))) NOT BETWEEN (t1.c65) AND (((t1.c64)>>(t1.c64)))); -- 0ms;
UPDATE t1 SET (c65)=(0X4997cfb7); -- 0ms;
UPDATE t1 SET (c89)=(522168937); -- 0ms;
UPDATE OR IGNORE t1 SET c64=0.01997512633830334; -- 0ms;
UPDATE t1 SET c65=x'', c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.49442103073589916, c2=x'' WHERE CAST(((t1.c1)IS(t1.c2)) AS BLOB); -- 0ms;
UPDATE OR FAIL t1 SET (c89)=(x'') WHERE ((((((((((t1.c2)%(t1.c2)))AND(t1.c65 COLLATE RTRIM)))AND(t1.c1 COLLATE RTRIM)))OR(t1.c2 COLLATE RTRIM)))OR(((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c2)))); -- 0ms;
UPDATE OR FAIL t1 SET (c89, c64)=('-1667712621', ''); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1, c2)=('620653170', '-546014407', 0.7857070255418154) WHERE CASE ((t1.c1) NOTNULL)  WHEN ((t1.c89) NOT BETWEEN ('-1913262982') AND (x'')) THEN t1.c65 ELSE CAST(t1.c2 AS REAL) END; -- 0ms;
UPDATE OR IGNORE t1 SET c2='1437361564', c2=513464396, c2=NULL WHERE t1.c64; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65)=('', '5'); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(NULL) WHERE ((('0.8744632084786957'))>((t1.c2))) COLLATE BINARY; -- 0ms;
UPDATE t1 SET (c1, c1)=(x'', '﬐蜼牕') WHERE (((t1.c2 IN ()))>>(((t1.c1) NOT NULL))); -- 0ms;
UPDATE OR ABORT t1 SET (c89, c65)=(x'', x''); -- 0ms;
UPDATE t1 SET (c64)=('0&)') WHERE (t1.c2 IN ()) COLLATE BINARY; -- 0ms;
UPDATE OR ABORT t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(NULL) WHERE ((((t1.c1) BETWEEN (t1.c64) AND (t1.c1))) NOT BETWEEN (CAST('-1894246363' AS TEXT)) AND ((- (t1.c89)))); -- 0ms;
UPDATE t1 SET c64=x'59c0', c89=1829697240; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0Xffffffffbb5ea64e); -- 0ms;
UPDATE t1 SET c1=NULL, c64=-86883959; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE ((((t1.c65) NOT NULL)) NOT BETWEEN (LOWER('{}')) AND (CAST(t1.c64 AS TEXT))); -- 0ms;
UPDATE t1 SET c1='', c89=-1565097096, c64=x'' WHERE CAST(((t1.c65)|(t1.c1)) AS REAL); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('0.6491014807501586') WHERE ((((((((((t1.c1) BETWEEN (t1.c65) AND (t1.c89)))AND((((t1.c1))>=((t1.c64))))))AND(t1.c64)))AND(((((t1.c64)AND(t1.c2)))AND(t1.c65)))))OR(((t1.c2)+(t1.c1)))); -- 0ms;
UPDATE OR FAIL t1 SET (c89, c64)=(2005589291, 0.3139101093337969) WHERE ((t1.c2 IN ()) IN (NULL)); -- 0ms;
UPDATE OR IGNORE t1 SET c64='74062923' WHERE x''; -- 0ms;
UPDATE OR FAIL t1 SET c64=x'', c64=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.13397891829182207; -- 0ms;
UPDATE OR ABORT t1 SET c64=NULL, c64=x'' WHERE (((t1.c64, t1.c65, t1.c2)) BETWEEN ((((t1.c89)LIKE(t1.c89)), (((t1.c64)) BETWEEN ((t1.c2)) AND ((t1.c65))), CASE t1.c1  WHEN t1.c89 THEN t1.c89 END)) AND ((TRIM(t1.c65, t1.c65), ((t1.c65) IS FALSE), (((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c65)))))); -- 0ms;
UPDATE t1 SET c89='' WHERE (((t1.c2)) NOT BETWEEN ((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2)))) AND ((((t1.c89)&(t1.c64))))); -- 0ms;
UPDATE t1 SET c89=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE (x'' IN (UNLIKELY(DISTINCT t1.c1))); -- 0ms;
UPDATE OR IGNORE t1 SET c65='zLጜ/倩	q\{' WHERE t1.c2; -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c64, c65)=('-1233135781', NULL, NULL); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=0xffffffffea0679ce WHERE t1.c64; -- 0ms;
UPDATE OR ABORT t1 SET c65=NULL WHERE (((- (t1.c89))) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c64='863126727'; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(x''); -- 0ms;
UPDATE t1 SET c89=x'', c1=0X3dd40c02, c64=-730753266 WHERE ((t1.c89)!=(1271336641)); -- 0ms;
UPDATE t1 SET c65='-116875205', c65=''; -- 0ms;
UPDATE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.035495697377003865; -- 0ms;
UPDATE OR IGNORE t1 SET c64='50'; -- 0ms;
UPDATE OR FAIL t1 SET c89='1385481820'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1)=(NULL, x''); -- 0ms;
UPDATE OR IGNORE t1 SET c64=x'02ef'; -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.5367702489740768; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(x''); -- 0ms;
UPDATE OR FAIL t1 SET (c2)=('-1556942765') WHERE GLOB((t1.c2 IN (t1.c64)), ((((((((t1.c65)OR(t1.c65)))AND(t1.c64)))OR(t1.c2)))AND(t1.c2))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65, c64)=('h|', 0.31869118381590655, 0.7765953226629351); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(''); -- 0ms;
UPDATE OR IGNORE t1 SET c65=-1608479226 WHERE CASE WHEN ((t1.c64) NOTNULL) THEN ((t1.c64) IS TRUE) ELSE LTRIM(t1.c89) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(x'8c52'); -- 0ms;
UPDATE t1 SET c89='-651708269' WHERE HEX(DISTINCT ((NULL)+(t1.c89))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65, c1)=('402312280', NULL) WHERE x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.053842853187206496) WHERE (+ (HEX(DISTINCT t1.c65))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.17742124241742785) WHERE ('\nW' IN ()); -- 0ms;
UPDATE OR ABORT t1 SET c64=x'c4e26a89'; -- 0ms;
UPDATE OR IGNORE t1 SET c89=x'', c89=''; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'', c89=NULL; -- 0ms;
UPDATE t1 SET (c64)=('863126727') WHERE ((((((((t1.c65 COLLATE RTRIM)AND(LIKELIHOOD(DISTINCT t1.c64, 0.5232911059463788))))AND(CAST(t1.c2 AS BLOB))))AND(0.22591873044217703)))AND(((t1.c64)!=(t1.c89)))); -- 0ms;
UPDATE OR FAIL t1 SET c64=0.6481211351024756, c65=NULL, c2=-0.0 WHERE ((CAST(t1.c2 AS NUMERIC))OR(t1.c65 COLLATE NOCASE)); -- 0ms;
UPDATE t1 SET (c89, c64)=(x'af72', -1.657523181E9); -- 0ms;
UPDATE OR IGNORE t1 SET c64=0.8792088676438915 WHERE (((((((((+ (t1.c89)))OR((t1.c2 IN ()))))OR(((((NULL)AND(t1.c2)))OR(t1.c2)))))AND((t1.c89 IN ()))))AND(CAST(t1.c89 AS BLOB))); -- 0ms;
UPDATE OR IGNORE t1 SET c89=x'93d334a0', c2=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c2='721819624'; -- 0ms;
UPDATE OR IGNORE t1 SET c89='0	Sd.梓D' WHERE ((((t1.c89) IS TRUE))<>(2087157128)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('D,') WHERE x'da8a'; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('-772490470') WHERE (NOT (CASE t1.c65  WHEN t1.c1 THEN t1.c65 END)); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL, c64=']u	z', c2=x'ed2f' WHERE ((((t1.c1)OR(t1.c89)))OR(x'')) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.9386794492883944); -- 0ms;
UPDATE t1 SET (c65)=(NULL); -- 0ms;
UPDATE t1 SET c2='0.0', c64='-116875205', c65=0.5913045217294525 WHERE MIN(CASE WHEN t1.c65 THEN t1.c89 WHEN t1.c2 THEN t1.c65 WHEN t1.c65 THEN t1.c89 WHEN t1.c65 THEN t1.c1 WHEN 1096860100 THEN t1.c2 ELSE t1.c89 END, (+ (t1.c64)), (((t1.c89, t1.c89, t1.c65))>((t1.c89, t1.c64, t1.c64))), CAST(t1.c64 AS TEXT), ((t1.c89)LIKE(t1.c65)), CAST(t1.c64 AS REAL), ((t1.c65)GLOB(t1.c89)), (t1.c1 IN ())); -- 0ms;
UPDATE OR ABORT t1 SET (c65)=(0Xffffffff84c0b21a); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x''); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c65='1112721940', c64=0.6155341640945088, c89=0.33679497122067037; -- 0ms;
UPDATE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.9854121080198904 WHERE ((((((((((((((((((t1.c65)AND(t1.c89)))OR('-469251974')))AND(t1.c89)))OR(t1.c64)))OR(t1.c64)))OR(t1.c89)))OR(t1.c1)))OR(NULL))) NOT BETWEEN (CAST(t1.c89 AS INTEGER)) AND (((t1.c2)*(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-579154361'); -- 0ms;
UPDATE OR REPLACE t1 SET c64=1121533359, c2=0Xffffffffc63624de WHERE CASE WHEN CASE WHEN t1.c65 THEN t1.c2 ELSE t1.c64 END THEN ((x'35fca13e') NOTNULL) END; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE t1 SET (c89)=(-929707507) WHERE (~ (NULL)) COLLATE NOCASE; -- 0ms;
UPDATE OR FAIL t1 SET (c89)=('-392202897') WHERE CAST((+ (t1.c64)) AS NUMERIC); -- 0ms;
UPDATE t1 SET c89=x'9e24', c89='-937992704', c89=x'8b82'; -- 0ms;
UPDATE OR REPLACE t1 SET c65=''; -- 0ms;
UPDATE OR IGNORE t1 SET c64=''; -- 0ms;
UPDATE OR FAIL t1 SET (c64)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c1='473235751'; -- 0ms;
UPDATE t1 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c1='-951665498' WHERE (((t1.c89)) BETWEEN ((t1.c65)) AND ((t1.c2))) COLLATE RTRIM; -- 0ms;
UPDATE t1 SET (c89, c2)=('e]''r', x'5e244a6e'); -- 0ms;
UPDATE OR IGNORE t1 SET c64='683308130', c1=x'0ca1'; -- 0ms;
UPDATE OR REPLACE t1 SET c89='-1608479226', c1='' WHERE ((((((((((((t1.c64)OR(t1.c2)))AND('')))AND(((t1.c65)OR(NULL)))))OR(((t1.c64)IS NOT(t1.c65)))))AND((t1.c64 IN ()))))AND((((t1.c65))<=((t1.c64))))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.8919829050761907, c89=NULL, c2=x'44ee' WHERE (t1.c1 IN ((- (t1.c64)))); -- 1ms;
UPDATE OR ROLLBACK t1 SET c64=x'' WHERE (x'' IN ()) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.20371125852158367); -- 0ms;
UPDATE t1 SET (c89)=(x'f1dd') WHERE ((CASE t1.c65  WHEN t1.c65 THEN t1.c64 WHEN t1.c2 THEN t1.c89 WHEN '-2041054445' THEN t1.c2 END)>(t1.c1)); -- 0ms;
UPDATE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0xffffffffcb10d098, c89='1972154662' WHERE (NOT (((t1.c89)*(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.6381458482216934) WHERE (t1.c89 COLLATE BINARY IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0Xffffffffade2ef56; -- 0ms;
UPDATE t1 SET c64=x'', c65=0.5565811269548848 WHERE NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0Xfffffffff221bfbf) WHERE ((NULL) BETWEEN (x'') AND (((t1.c1)-(t1.c2)))); -- 0ms;
UPDATE t1 SET (c64, c65, c2)=(NULL, x'1c53', x''); -- 0ms;
UPDATE OR ABORT t1 SET (c1, c2)=('3F\r\R<wO', 0.029685534305701533) WHERE (((- (t1.c64))) BETWEEN ((t1.c2 IN (t1.c2))) AND (x'' COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL, c89='0.8275112834789509', c2='S!8x닗&' WHERE t1.c64; -- 0ms;
UPDATE t1 SET c65=0xffffffff900102cb, c65=-2.039452663E9; -- 0ms;
UPDATE t1 SET c1=-603289641, c2=0.6649502026995349, c89='Ꚅ' WHERE (((NULL))>((t1.c1))); -- 0ms;
UPDATE t1 SET (c2)=('-2034697795') WHERE ((((t1.c2)IS NOT(t1.c1))) NOT BETWEEN (json_extract(t1.c89, t1.c89, t1.c65, '', t1.c2, t1.c89)) AND (CASE WHEN t1.c89 THEN t1.c89 END)); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('-642047300'); -- 0ms;
UPDATE t1 SET c89=x'2b26'; -- 0ms;
UPDATE OR ROLLBACK t1 SET c89=x'' WHERE (- (CASE t1.c2  WHEN t1.c89 THEN t1.c2 END)); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.2450130090875745; -- 0ms;
UPDATE OR REPLACE t1 SET c1='1423504510' WHERE ((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c64)))AND(t1.c2)))OR('1789840107' COLLATE BINARY)); -- 0ms;
UPDATE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR REPLACE t1 SET c64=-3.25548373E8; -- 0ms;
UPDATE OR ABORT t1 SET (c2)=('된rH쨲') WHERE ((t1.c2) NOT BETWEEN ('473235751') AND (CAST(t1.c65 AS INTEGER))); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(0.6597194894867063); -- 0ms;
UPDATE OR REPLACE t1 SET (c89)=(x'16ab51fe') WHERE t1.c65; -- 0ms;
UPDATE t1 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c64=0.5586090571190196; -- 1ms;
UPDATE OR IGNORE t1 SET c1=x'' WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0x3e5d12e2 WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.9089123506225866) WHERE (NOT (t1.c2)) COLLATE RTRIM COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c2)=(NULL, '0.433371385082445') WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.5622360129172099) WHERE (((''))>((((t1.c89) BETWEEN (t1.c65) AND (t1.c65))))); -- 0ms;
UPDATE t1 SET (c89)=('鲊HH뾴}'); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('럽/<쇄Ca') WHERE ((((((0.5105872617852825)AND(t1.c65)))AND((+ (t1.c2)))))AND(((t1.c89)GLOB(t1.c89)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('mckqXvf') WHERE (t1.c64 IN ()); -- 0ms;
UPDATE t1 SET (c65)=('0.6100256105077245'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1, c2)=('-1685217583', NULL, -7.61982651E8) WHERE ((((((((((x'') BETWEEN (t1.c65) AND (t1.c2)))AND((+ (t1.c1)))))AND((((t1.c1, t1.c1, t1.c89))!=((t1.c64, t1.c64, t1.c89))))))AND((((0.9184409201343346)) NOT BETWEEN ((t1.c64)) AND ((t1.c1))))))AND(CASE t1.c64  WHEN t1.c2 THEN t1.c65 ELSE t1.c1 END)); -- 0ms;
UPDATE OR ABORT t1 SET (c64)=('226633519'); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(x'') WHERE ((CAST('729276026' AS NUMERIC)) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c89)=(0.39241909471609815, x'') WHERE ((((((((CAST(t1.c2 AS TEXT))OR(((t1.c2) ISNULL))))AND(((t1.c64)+(t1.c65)))))AND((((t1.c1))<=(('0.4479459242613356'))))))AND((t1.c2 IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE t1 SET c65=0.8159202654055371, c64=x'', c65=NULL WHERE ((((((((((((((NULL)<<(t1.c89)))AND(CASE t1.c65  WHEN t1.c89 THEN t1.c65 WHEN t1.c2 THEN t1.c89 WHEN t1.c1 THEN t1.c65 WHEN t1.c64 THEN t1.c89 WHEN NULL THEN t1.c65 END)))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c2)))))OR((('0.18559221748748178') NOT NULL))))AND(t1.c1)))OR((t1.c2 IN ()))))AND(CAST(t1.c64 AS NUMERIC))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.5234005753476061); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1)=(x'', x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('1751697625'); -- 0ms;
UPDATE OR ABORT t1 SET c1=0.269765140688739 WHERE ((('-937992704')) NOT BETWEEN ((((t1.c65) BETWEEN (x'889b') AND (t1.c64)))) AND ((LIKELIHOOD(t1.c64, 0.9463326286469939)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.3086294527100977) WHERE t1.c1; -- 0ms;
UPDATE t1 SET c89='0.6940120870211581'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.31018841019666976 WHERE CAST(QUOTE(NULL) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t1 SET c64=0.3207881236179585; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE (NOT (((t1.c64)-(',U,V}릫g퉍\')))); -- 0ms;
UPDATE t1 SET (c89)=(0.09692959357540465); -- 0ms;
UPDATE t1 SET (c65)=('595693992') WHERE ((((0.7810878795101246 COLLATE RTRIM)OR((((t1.c1))>=((t1.c65))))))OR((((t1.c2))==((t1.c2))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c2, c64)=(x'', '-403840764', '-1370777911'); -- 0ms;
UPDATE t1 SET c1=-2.034697795E9 WHERE CASE WHEN t1.c64 COLLATE RTRIM THEN CASE WHEN t1.c89 THEN t1.c64 ELSE t1.c1 END END; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('684925070') WHERE (((t1.c64)) BETWEEN ((t1.c2)) AND ((t1.c2))); -- 0ms;
UPDATE t1 SET c1=x'bad3', c2='0.6510876083181066', c2=''; -- 0ms;
UPDATE t1 SET (c89)=(x'') WHERE ((((t1.c89) NOT BETWEEN (t1.c1) AND (t1.c89)))<<(((t1.c65)<(t1.c1)))); -- 0ms;
UPDATE t1 SET c64=NULL WHERE COALESCE(((t1.c1) BETWEEN (t1.c64) AND (x'')), ((t1.c64) NOT BETWEEN (t1.c89) AND ('1831262905')), CAST('cl]떸5(' AS NUMERIC), (t1.c89 IN ())); -- 0ms;
UPDATE t1 SET (c65)=('-761982651'); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(x''); -- 0ms;
UPDATE OR ABORT t1 SET c1=0X1f1faa69 WHERE x''; -- 0ms;
UPDATE OR IGNORE t1 SET c64=NULL, c1=NULL, c64=x'ce27' WHERE (+ (((t1.c89) NOTNULL))); -- 0ms;
UPDATE OR IGNORE t1 SET c64=-4.8827702E8, c65=NULL WHERE (~ (CAST(t1.c64 AS REAL))); -- 1ms;
UPDATE OR IGNORE t1 SET c64=x''; -- 0ms;
UPDATE t1 SET c2=x'cc35711b', c65=NULL, c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c89='', c89=0.5080830241805132; -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c89)=('v/', 'YTO}Uy('); -- 0ms;
UPDATE OR FAIL t1 SET c65=0.3586584368325956; -- 0ms;
UPDATE OR REPLACE t1 SET (c89)=(NULL) WHERE CASE WHEN CASE WHEN t1.c1 THEN '-761982651' END THEN ((t1.c2) BETWEEN (t1.c89) AND (x'd9b8')) END; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.7700918630112398; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.4976535756284095); -- 0ms;
UPDATE t1 SET (c65, c2)=(0.6626107532550883, x'') WHERE ((t1.c89) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1='980217077', c2='-2067746278' WHERE (t1.c64 COLLATE BINARY IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE (- (CAST(t1.c2 AS INTEGER))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(x'79e8') WHERE (((((t1.c64, t1.c1, NULL)) BETWEEN ((t1.c65, t1.c65, t1.c1)) AND ((t1.c2, t1.c89, t1.c64)))) NOTNULL); -- 0ms;
UPDATE t1 SET (c64, c89)=('', x'415d'); -- 0ms;
UPDATE t1 SET c65=0.34172412752114434, c64=x'4c51', c65='CH_7' WHERE ((CAST('3\r' AS BLOB)) BETWEEN (0X44f68fd7) AND ((t1.c64 IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.28817475185316055, c2=x'' WHERE ((t1.c2 COLLATE RTRIM)<>((t1.c1 IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=1e500, c2=x'' WHERE ((CASE t1.c65  WHEN t1.c2 THEN t1.c65 ELSE 0.6958148685231571 END)||((t1.c1 IN ('-761982651')))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL, c2=0.5317609585195601, c1=x''; -- 0ms;
UPDATE t1 SET c64=x'14bf'; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c64='-752652176', c64='556077255'; -- 0ms;
UPDATE OR ABORT t1 SET c64=NULL, c89='\r#9%y∸uୌr' WHERE ((((t1.c65) NOT NULL)) NOTNULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c1)=(NULL, x''); -- 0ms;
UPDATE OR IGNORE t1 SET c2=''; -- 0ms;
UPDATE t1 SET (c65)=(x'455a'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('S0ᢀRCw') WHERE t1.c64; -- 0ms;
UPDATE t1 SET c65='aaUpsWy*4', c65='l2t'; -- 0ms;
UPDATE t1 SET (c2, c65)=(0.4375066060929934, 0Xffffffff9ed6e3ba) WHERE CASE WHEN t1.c89 THEN t1.c64 END COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0Xffffffffe738aea4, c65=x'', c65='BY'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.38337453994389237 WHERE ((t1.c65) ISNULL) COLLATE BINARY; -- 0ms;
UPDATE t1 SET c1=NULL, c2=0Xffffffffae4b96c9; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0xffffffffcf12403e); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'' WHERE (+ (t1.c64)) COLLATE NOCASE; -- 0ms;
UPDATE t1 SET c1=-3.25548373E8, c1='t' WHERE (CAST(t1.c89 AS TEXT) IN ((((t1.c65)) NOT BETWEEN (('c紖}4')) AND ((t1.c1))))); -- 0ms;
UPDATE t1 SET c65=x'', c2=0.34351712785073973 WHERE (t1.c64 IN ()) COLLATE BINARY; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=0.9386589266812811 WHERE CASE WHEN (+ (t1.c89)) THEN (t1.c64 IN ()) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(-1.233135781E9) WHERE CASE t1.c64  WHEN t1.c65 THEN t1.c2 WHEN t1.c89 THEN t1.c2 WHEN t1.c64 THEN t1.c64 END COLLATE BINARY COLLATE NOCASE; -- 0ms;
UPDATE OR ABORT t1 SET (c65)=(0.9721754240814833) WHERE NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c1='-855495957' WHERE NULLIF(NULL, '-140644956'); -- 0ms;
UPDATE OR ROLLBACK t1 SET c64=x'f4e8', c64='1121533359' WHERE (((t1.c2)) NOT BETWEEN ((0.9074185123699595)) AND ((CAST(t1.c1 AS INTEGER)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c89, c64)=(0.8284610209185127, x'5eda') WHERE ((t1.c64) IS TRUE) COLLATE RTRIM; -- 0ms;
UPDATE OR REPLACE t1 SET c89=NULL, c1=0.6119917740784873 WHERE (t1.c1 IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.48468890600510905) WHERE (((((t1.c2) NOT BETWEEN ('0g') AND (t1.c64)), ((t1.c2)&(t1.c64)), t1.c65, NULL, t1.c2, ((t1.c1) IS FALSE), (t1.c2 IN ())))>=((t1.c2 COLLATE RTRIM, t1.c64, '-855495957', t1.c65 COLLATE RTRIM, (((t1.c1)) NOT BETWEEN ((t1.c64)) AND ((t1.c64))), ((((((((t1.c2)OR(t1.c1)))OR(t1.c89)))AND(t1.c65)))AND(t1.c64)), ((t1.c1)>>(t1.c65))))); -- 0ms;
UPDATE t1 SET c1=x'', c89=0.32662886691509685, c89=-1.46009556E9 WHERE UNLIKELY(((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c89))); -- 0ms;
UPDATE t1 SET c2=0.09223856969270572, c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=('-1e500') WHERE ((((t1.c2) IS TRUE)) NOT BETWEEN ((((t1.c2))<>((t1.c64)))) AND ((((t1.c89))==((t1.c2))))); -- 0ms;
UPDATE OR IGNORE t1 SET c65='1404546930' WHERE CASE WHEN t1.c1 THEN (((t1.c89))==((t1.c65))) WHEN ((((t1.c64)OR(t1.c64)))AND(t1.c89)) THEN ((t1.c2)<=(t1.c65)) WHEN (t1.c64 IN (t1.c65)) THEN (~ (t1.c65)) END; -- 0ms;
UPDATE OR IGNORE t1 SET c2=-200809835; -- 0ms;
UPDATE t1 SET c64=-2.134138021E9 WHERE ((((NULL)>>(t1.c89)))-((t1.c65 IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'c549'); -- 0ms;
UPDATE OR REPLACE t1 SET c1='TRUE'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=-1597195998, c65='168820597'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'0d00ef4c') WHERE (NOT (CASE t1.c65  WHEN t1.c1 THEN t1.c65 END)); -- 0ms;
UPDATE OR IGNORE t1 SET c64=NULL WHERE ((((((t1.c1)AND(t1.c89)))OR(t1.c2)))>(((t1.c89)+(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c89, c65)=(x'', x'', 791958633); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.3743518517760138); -- 1ms;
UPDATE OR ROLLBACK t1 SET c89=''; -- 0ms;
UPDATE t1 SET c2='', c65='-1275329060', c1=NULL WHERE IFNULL(t1.c89, (((t1.c1))!=((t1.c64)))); -- 0ms;
UPDATE OR IGNORE t1 SET c64=0.37104054470847037 WHERE ((((t1.c2) BETWEEN (t1.c2) AND (t1.c65)))-(t1.c89)); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(1355100492); -- 0ms;
UPDATE t1 SET c89='+1[2RP'; -- 0ms;
UPDATE t1 SET c2=x'34e1', c1=NULL; -- 0ms;
UPDATE OR ABORT t1 SET (c65)=('ag') WHERE ((((t1.c89 IN ())))<((((t1.c89) NOTNULL)))); -- 0ms;
UPDATE t1 SET (c64)=(x'') WHERE ((t1.c2)<=(json_array_length(t1.c2))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.11190588466793083 WHERE (((- (NULL)))LIKE(CAST(t1.c1 AS BLOB))); -- 0ms;
UPDATE OR IGNORE t1 SET c89=x'e8a2', c1=NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c89)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'744c', c64=NULL, c1=NULL WHERE CASE (+ (t1.c1))  WHEN ((t1.c64) NOT NULL) THEN ((t1.c65) ISNULL) WHEN (~ (t1.c89)) THEN t1.c1 WHEN (t1.c89 IN (t1.c2, t1.c1)) THEN t1.c1 COLLATE RTRIM END; -- 0ms;
UPDATE t1 SET (c89)=(0.6263878568735209) WHERE t1.c1; -- 0ms;
UPDATE OR REPLACE t1 SET c65='-1945570270'; -- 0ms;
UPDATE OR ABORT t1 SET (c89, c89)=('', ''); -- 0ms;
UPDATE OR FAIL t1 SET c89=x'', c65=NULL WHERE (((t1.c65 IN (t1.c2, 0x28ec1ec6))) IS TRUE); -- 0ms;
UPDATE OR IGNORE t1 SET c89='-1370777911' WHERE 0.2544483696664904; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'' WHERE ((0.5099611372145691)<((((t1.c89))<=((t1.c64))))); -- 1ms;
UPDATE OR IGNORE t1 SET c1=0.11380939343811636; -- 0ms;
UPDATE t1 SET (c65)=(-2.039452663E9) WHERE (((t1.c65, t1.c65, t1.c1, t1.c89, t1.c65)) NOT BETWEEN ((NULL, CAST(t1.c2 AS REAL), CAST(t1.c65 AS NUMERIC), (t1.c64 IN (t1.c2)), HEX(t1.c64))) AND ((((t1.c1) IS FALSE), json_valid(t1.c1), t1.c2 COLLATE NOCASE, ((t1.c1)<=(t1.c64)), (((NULL, t1.c65, t1.c65)) NOT BETWEEN ((x'', t1.c2, t1.c2)) AND ((t1.c1, t1.c89, t1.c64)))))); -- 0ms;
UPDATE t1 SET c65=NULL, c2='-1460095560' WHERE LIKELIHOOD((((x'', t1.c65, t1.c65)) NOT BETWEEN ((t1.c2, t1.c1, t1.c1)) AND ((t1.c89, t1.c64, t1.c89))), 0.8108420620432257); -- 0ms;
UPDATE OR ABORT t1 SET (c2, c64)=(NULL, NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE OR ABORT t1 SET c89='0.5607350769341127'; -- 0ms;
UPDATE OR FAIL t1 SET (c64)=('hrn]䑧zBj'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c89, c65)=(x'', 0.4466940943457912, '-177767311'); -- 0ms;
UPDATE OR IGNORE t1 SET c89=-1618610349 WHERE ((217096533)LIKE(CASE t1.c1  WHEN t1.c89 THEN t1.c2 WHEN t1.c65 THEN x'd8e8' WHEN '嵄jT【' THEN t1.c89 ELSE t1.c1 END)); -- 1ms;
UPDATE OR IGNORE t1 SET (c1, c1)=(0.4375066060929934, x''); -- 0ms;
UPDATE t1 SET (c65)=(0xfffffffff01e916b) WHERE ((((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))+(t1.c89 COLLATE BINARY)); -- 0ms;
UPDATE t1 SET (c89, c2)=(0xffffffff8fa348a9, '-,*^!M!'); -- 0ms;
UPDATE t1 SET c1='522168937', c64=-971001750; -- 0ms;
UPDATE OR ABORT t1 SET c2=0.8261078169101426 WHERE ((t1.c64 IN ()) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c1=''; -- 0ms;
UPDATE t1 SET c2=-542912022; -- 0ms;
UPDATE OR IGNORE t1 SET c64=NULL, c64='-354518186' WHERE (((((((t1.c89))!=((1.215351548E9))))AND(((t1.c89) BETWEEN (t1.c65) AND (t1.c2)))))OR(CAST(t1.c89 AS INTEGER))); -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.07370727157460755 WHERE ((TIME(t1.c65, t1.c1, t1.c65, t1.c64, t1.c64, t1.c1, t1.c64)) NOT BETWEEN (CASE WHEN t1.c65 THEN t1.c2 WHEN t1.c1 THEN t1.c89 WHEN t1.c1 THEN t1.c1 ELSE t1.c89 END) AND (CAST(t1.c89 AS INTEGER))); -- 0ms;
UPDATE OR REPLACE t1 SET (c64)=(0.17853066147755858); -- 0ms;
UPDATE OR FAIL t1 SET (c64)=('1234685879') WHERE (((t1.c64 IN ())) NOT NULL); -- 0ms;
UPDATE OR REPLACE t1 SET (c65, c64, c65)=(x'b530', 0.9676293808453342, x'') WHERE ((((((((t1.c89 COLLATE BINARY)AND(CAST(t1.c89 AS TEXT))))AND(((t1.c89) NOT NULL))))OR(t1.c1 COLLATE BINARY)))AND(((((((((t1.c2)AND(t1.c89)))AND(t1.c1)))OR(NULL)))AND(x'')))); -- 0ms;
UPDATE OR IGNORE t1 SET c1='-1378787138'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR REPLACE t1 SET (c1, c2)=(0xffffffff8262cec7, NULL); -- 0ms;
UPDATE t1 SET c65=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c89=''; -- 0ms;
UPDATE OR ROLLBACK t1 SET c64=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=(NULL) WHERE NULL COLLATE BINARY; -- 0ms;
UPDATE OR FAIL t1 SET (c65, c89)=(NULL, ''); -- 0ms;
UPDATE t1 SET (c64, c1)=(0.859345900056271, x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.007550103924562901) WHERE DATETIME(((245189408) NOT BETWEEN (t1.c2) AND (t1.c89)), 0.5449137637837834, (- (t1.c65))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c89)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c65=0Xffffffff96f1109b, c65=0.7093896409469268; -- 0ms;
UPDATE t1 SET (c65, c65)=('1948991400', 'w(otZ'); -- 1ms;
UPDATE OR IGNORE t1 SET c1='' WHERE CASE WHEN CHAR(t1.c65, t1.c64, 0.4841060611533077) THEN ((t1.c1)>=(x'')) END; -- 0ms;
UPDATE t1 SET (c89)=('1078938183') WHERE ((((((t1.c64)<<(t1.c2)))AND(CASE t1.c1  WHEN t1.c65 THEN t1.c1 ELSE t1.c89 END)))AND(0.3681226800217958)); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0xffffffff86b8f9bd) WHERE (((- (t1.c89))) IS FALSE); -- 0ms;
UPDATE t1 SET c65=x'' WHERE (((((((((~ (t1.c65)))OR(CASE WHEN t1.c89 THEN t1.c1 ELSE t1.c2 END)))AND(CASE WHEN t1.c64 THEN t1.c64 ELSE t1.c89 END)))AND(t1.c89)))AND(((((((((t1.c64)OR(t1.c1)))AND(t1.c64)))OR(t1.c1)))OR(t1.c65)))); -- 0ms;
UPDATE t1 SET (c65)=('Tn83KzFYH'); -- 0ms;
UPDATE OR IGNORE t1 SET c2='-1258516743'; -- 0ms;
UPDATE OR REPLACE t1 SET (c64, c65)=(0xffffffff9fe46bf2, '') WHERE ((- (t1.c2)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c64)=('1641612879', '	') WHERE ((((t1.c65)OR(t1.c1)))AND(((t1.c89) NOT BETWEEN (t1.c65) AND (t1.c64)))); -- 0ms;
UPDATE OR REPLACE t1 SET (c2, c2, c1)=('-181740096', 'q4#N\5r', '|,MBlUz흛y'); -- 1ms;
UPDATE OR IGNORE t1 SET c1='\ruEY(y6ｒ)[' WHERE ((json_patch(t1.c89, t1.c89)) BETWEEN ((t1.c89 IN ())) AND (t1.c65)); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=('럽#4)') WHERE ((((((t1.c65)AND(t1.c64)))AND(t1.c89)))<=(((t1.c89)<=(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('169119239'); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(0.4852430264788643) WHERE CAST(((t1.c64) NOT BETWEEN (0.6669521849021964) AND (t1.c1)) AS NUMERIC); -- 0ms;
UPDATE OR FAIL t1 SET c2=x'', c89=0Xb6fbc27 WHERE (((CASE WHEN t1.c65 THEN t1.c89 WHEN t1.c89 THEN t1.c64 WHEN t1.c64 THEN t1.c2 WHEN t1.c64 THEN t1.c2 WHEN t1.c2 THEN t1.c2 END, ((x'') ISNULL), (((t1.c1, t1.c64, t1.c64))>((t1.c65, t1.c2, t1.c64)))))<(((NOT (t1.c89)), (('0.7196315638685629') NOT BETWEEN (t1.c65) AND (t1.c65)), (t1.c64 IN ())))); -- 0ms;
UPDATE t1 SET (c65)=(NULL) WHERE ((((((((t1.c89)OR(((t1.c65) NOT NULL))))OR(((((((((t1.c1)AND(t1.c64)))OR(t1.c65)))AND('1798033779')))AND(t1.c1)))))OR(((t1.c65) IS TRUE))))AND((t1.c64 IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET c89=''; -- 0ms;
UPDATE OR ABORT t1 SET c1=0x6868c8d9; -- 0ms;
UPDATE OR REPLACE t1 SET (c65)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c64=0.7700918630112398; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1)=(556077255, x'cf92') WHERE (~ (t1.c1 COLLATE NOCASE)); -- 0ms;
UPDATE OR ABORT t1 SET (c64)=(0.010421714031844886) WHERE '2132934513'; -- 0ms;
UPDATE t1 SET (c64, c65)=('wMj&GQ', x'') WHERE (- (CAST(t1.c89 AS REAL))); -- 0ms;
UPDATE t1 SET (c64)=(NULL) WHERE ((((((t1.c64)AND(t1.c65)))OR('365224881'))) IS TRUE); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(-1.272007164E9) WHERE x'96f4'; -- 0ms;
UPDATE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(-1.969933302E9) WHERE CAST(((t1.c65)<<(t1.c65)) AS BLOB); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('+!Kt(1N'); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('') WHERE CASE WHEN CASE WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END THEN CASE WHEN t1.c65 THEN t1.c1 ELSE t1.c64 END ELSE (t1.c2 IN (t1.c65)) END; -- 0ms;
UPDATE t1 SET (c2)=(0.9581452686796278) WHERE ((t1.c64) NOT BETWEEN (t1.c64) AND (t1.c64)) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2='#}_A'; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c89='&Y'; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('0.5530936977001277') WHERE (((((((((((((((((t1.c1)OR(t1.c1)))OR(t1.c64)))AND(t1.c65)))AND(t1.c65)))AND(t1.c2)))AND(NULL)))OR(t1.c2)))OR(t1.c89)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c89='*s,2#.pKQ', c2='0.7034708475789984', c89=NULL WHERE ((t1.c64) NOT BETWEEN (((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c89))) AND (t1.c65)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('1294911993'); -- 0ms;
UPDATE OR ABORT t1 SET c89=NULL WHERE ((t1.c89)/(CASE WHEN t1.c65 THEN t1.c64 ELSE t1.c89 END)); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(x'0131') WHERE t1.c64; -- 0ms;
UPDATE OR ABORT t1 SET c65=0.01748826006335913; -- 0ms;
UPDATE t1 SET (c2)=(0x2a4be35d) WHERE ((((((t1.c89)AND(t1.c89)))OR(t1.c64))) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65)=(NULL, NULL); -- 0ms;
UPDATE t1 SET c64=0.6207111663569788, c65=-1.16875205E8; -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c1)=(x'', x'') WHERE ((((t1.c65) IS FALSE))&(x'' COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.3212149583760654, c1='-586210359'; -- 0ms;
UPDATE OR FAIL t1 SET c89=683739307; -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(x'') WHERE 'i儁Mu?' COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c2=-532957220, c1='0.9591395907211926', c89='0.6491014807501586'; -- 0ms;
UPDATE t1 SET (c65, c2, c1)=('-181740096', 'N	燸', NULL) WHERE CAST(ROUND(t1.c2, NULL) AS NUMERIC); -- 0ms;
UPDATE t1 SET (c89, c65)=(x'', -1.830126314E9); -- 0ms;
UPDATE t1 SET c2=0.7227314529559506 WHERE (((((t1.c1)OR(t1.c2)))OR(t1.c89)) IN ((+ (t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-642047300'); -- 0ms;
UPDATE OR FAIL t1 SET c64='-745900407', c89='-1475949138' WHERE LIKELIHOOD(DISTINCT load_extension(t1.c89, t1.c64), 0.9617497807754288); -- 0ms;
UPDATE t1 SET c1=757473526 WHERE 'D7Ap'; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 1ms;
UPDATE OR IGNORE t1 SET c64=x'beda'; -- 0ms;
UPDATE t1 SET c89=0.019671430482314345, c64='', c64=0.5204647827923454; -- 0ms;
UPDATE OR IGNORE t1 SET c1=1850507363, c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c1, c1)=(x'', '', 0.4091586234373167); -- 0ms;
UPDATE OR ABORT t1 SET c89='0.9861813062381792' WHERE (((((t1.c64) NOT BETWEEN (t1.c2) AND (t1.c89)), (+ (t1.c89)), CASE 0.5645314862615715  WHEN x'e738' THEN '0.5622360129172099' END))=(((t1.c89 IN ()), ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c65)), ((t1.c2) NOT BETWEEN (t1.c64) AND (t1.c2))))); -- 0ms;
UPDATE t1 SET (c65, c65)=(0.8020059913499522, x'') WHERE ((CAST(t1.c64 AS REAL)) IS FALSE); -- 0ms;
UPDATE t1 SET (c65)=('kf'); -- 0ms;
UPDATE OR IGNORE t1 SET c65='o]MqN9n'; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=('-467726360'); -- 1ms;
UPDATE OR IGNORE t1 SET (c2, c1)=(NULL, x'3ac7') WHERE CAST((((t1.c1)) BETWEEN ((NULL)) AND ((t1.c2))) AS NUMERIC); -- 0ms;
UPDATE t1 SET (c2, c89)=('0', 0.039093827255001434); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('HR'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE CASE (- (t1.c89))  WHEN ((t1.c65) NOT BETWEEN (t1.c2) AND ('-469251974')) THEN CAST(t1.c64 AS BLOB) WHEN 'U' THEN t1.c89 WHEN t1.c64 COLLATE RTRIM THEN ((((((((t1.c1)OR(t1.c64)))OR(t1.c89)))OR(t1.c89)))AND(t1.c65)) END; -- 0ms;
UPDATE OR REPLACE t1 SET c64=''; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0X764ebb1a); -- 0ms;
UPDATE OR IGNORE t1 SET c2=1.38548182E9, c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.5298736392683971); -- 0ms;
UPDATE OR ABORT t1 SET c2='-971001750'; -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=0.7774465831480277, c89='', c2=0.6073331004677595; -- 0ms;
UPDATE OR REPLACE t1 SET (c64)=('+^'); -- 0ms;
UPDATE OR IGNORE t1 SET c1='qiyg5', c2=0Xffffffffa25ea16d WHERE CASE ((t1.c1)<(t1.c2))  WHEN ((t1.c89)&(t1.c64)) THEN (t1.c65 IN (t1.c64)) ELSE t1.c64 END; -- 0ms;
UPDATE t1 SET (c65, c2, c65)=('224062006', -596801970, 0.8081094950301794) WHERE (((((t1.c1) IS TRUE)))<=((((((t1.c2)AND(t1.c89)))AND(t1.c2))))); -- 0ms;
UPDATE OR IGNORE t1 SET c64=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0x196ce75) WHERE ((((((((((t1.c2) IS FALSE))AND(((t1.c65) BETWEEN (t1.c2) AND (t1.c89)))))AND(t1.c64)))AND((t1.c2 IN ()))))OR(((((-937747131)OR(t1.c64)))AND(t1.c89)))); -- 0ms;
UPDATE t1 SET (c2, c89, c1)=(0.028146101372657717, 0.9236500432030432, x''); -- 0ms;
UPDATE t1 SET c2='75093027' WHERE CAST(t1.c1 AS INTEGER) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65)=(x'', NULL) WHERE t1.c89; -- 0ms;
UPDATE t1 SET (c1)=('<{'')'); -- 0ms;
UPDATE t1 SET c89=NULL; -- 0ms;
UPDATE t1 SET (c65, c65, c1)=(-2.067746278E9, x'', '-#R㟛'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'') WHERE ((UNLIKELY(t1.c64)) IS FALSE); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(0.973259302513746) WHERE ((t1.c65)%(CAST(t1.c2 AS REAL))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'', c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0xffffffff8d78d89f) WHERE (t1.c64 IN ()); -- 0ms;
UPDATE OR FAIL t1 SET (c64, c64, c65)=(NULL, NULL, '1200094046'); -- 0ms;
UPDATE OR ABORT t1 SET c89=x'' WHERE TRIM(t1.c64); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE (((t1.c1)=(t1.c1)) IN ()); -- 0ms;
UPDATE OR REPLACE t1 SET c64=''; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c64, c89)=(-1603407817, '426905943', x'') WHERE (((t1.c2)) BETWEEN (((NOT (t1.c1)))) AND ((((t1.c1)*(0.5218073199823131))))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0X7778f089 WHERE ((t1.c64 COLLATE NOCASE) NOTNULL); -- 0ms;
UPDATE OR ABORT t1 SET (c65)=(0.8416890894263779); -- 0ms;
UPDATE OR ABORT t1 SET (c2, c89)=(1.9489914E9, NULL) WHERE CASE WHEN ((t1.c89)>(t1.c1)) THEN UPPER(DISTINCT t1.c2) ELSE ((t1.c89)%(t1.c65)) END; -- 0ms;
UPDATE OR ABORT t1 SET c65=-1928793345, c2=0.21243657126964144, c2=4.73235751E8; -- 0ms;
UPDATE OR REPLACE t1 SET (c1, c65)=(-258112469, NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1, c65)=(0.6767595576514573, '537881501', 1.501568245E9) WHERE (((t1.c2, x'758e', t1.c1)) BETWEEN ((t1.c64, t1.c2, CAST(t1.c2 AS NUMERIC))) AND ((((t1.c1) BETWEEN (t1.c64) AND (t1.c89)), (t1.c89 IN ()), CASE t1.c64  WHEN t1.c89 THEN t1.c65 WHEN t1.c65 THEN t1.c1 WHEN t1.c2 THEN t1.c64 END))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE ((t1.c2)*(t1.c64)) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t1 SET c1='TRUE'; -- 0ms;
UPDATE t1 SET c65=NULL WHERE ((((t1.c2) NOT NULL))>(t1.c1)); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.4042772840248867; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL, c89='', c1=NULL WHERE json_quote(CASE t1.c1  WHEN t1.c2 THEN t1.c1 WHEN t1.c64 THEN t1.c1 WHEN t1.c89 THEN t1.c65 END); -- 0ms;
UPDATE t1 SET c65=0.31959740667062897, c89='-1256669457' WHERE x''; -- 0ms;
UPDATE OR IGNORE t1 SET c64=0.7445838264346324, c2='2015012170', c64=x''; -- 0ms;
UPDATE t1 SET (c65, c2, c1)=(x'', NULL, -1742728087); -- 0ms;
UPDATE OR IGNORE t1 SET c65='-1214408620'; -- 0ms;
UPDATE OR IGNORE t1 SET c65='a|?#TQ' WHERE (((t1.c65 COLLATE BINARY, (((t1.c65))>((0.6251591195433297))), (('O')GLOB(t1.c64))))<(((t1.c89 IN ()), ((t1.c1)&(t1.c65)), t1.c1 COLLATE RTRIM))); -- 0ms;
UPDATE OR IGNORE t1 SET c89='-1457742446' WHERE (t1.c1 IN ()) COLLATE BINARY; -- 0ms;
UPDATE OR FAIL t1 SET c64=0.19930859743847162, c89=NULL; -- 0ms;
UPDATE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('\vAZ') WHERE ((t1.c1 IN ()) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c64, c1)=(0.7857070255418154, '553755413', 0x6714c131); -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c89=x'5ffa'; -- 0ms;
UPDATE OR REPLACE t1 SET (c89)=(NULL) WHERE IFNULL(DISTINCT ((-488277020)/(x'2476')), ((t1.c89) BETWEEN (t1.c2) AND (t1.c2))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c89)=(x''); -- 0ms;
UPDATE t1 SET (c2, c64)=(x'b345', -1420523077); -- 0ms;
UPDATE OR IGNORE t1 SET c2='+j' WHERE ((((t1.c1)OR((t1.c1 IN ()))))AND((t1.c2 IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=('	兕\v^M3'); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=('-2067746278') WHERE (((NOT (NULL))) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.7732984533666758); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.6268515785256317, c64=x'752f' WHERE ((CAST(t1.c1 AS TEXT)) ISNULL); -- 0ms;
UPDATE t1 SET (c64)=('%!4CᘁW踇'); -- 0ms;
UPDATE OR ROLLBACK t1 SET c89='dzR~', c89='cO24/]9gq', c64=NULL WHERE ((t1.c2)&(t1.c2)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET c64=0.5268130470914782; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.10289533762688652 WHERE (((t1.c89) BETWEEN (t1.c2) AND (t1.c89)) IN ((t1.c65 IN (t1.c1, t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE (0.7688134892794635 IN (t1.c1, ((((-56369775)AND(t1.c65)))OR(t1.c64)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c89)=('!T([F7%', x'') WHERE (((CASE WHEN t1.c1 THEN t1.c1 END))=((((t1.c2) IS TRUE)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=-811892890 WHERE ((((t1.c1) NOTNULL)) IS TRUE); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('1153683599'); -- 0ms;
UPDATE t1 SET (c64)=('-851342835'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('?똄'); -- 0ms;
UPDATE OR IGNORE t1 SET c89='-268802773', c65='1052829832', c64=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c64=NULL WHERE ((CASE WHEN t1.c65 THEN 0Xffffffffc69ccc6f ELSE t1.c89 END)AND(CAST(t1.c1 AS TEXT))); -- 1ms;
UPDATE OR ROLLBACK t1 SET (c1)=(NULL) WHERE ((t1.c64 COLLATE NOCASE)OR(((t1.c65)AND(t1.c64)))); -- 0ms;
UPDATE OR IGNORE t1 SET c64=0x20f5023d WHERE (((t1.c64) BETWEEN (t1.c64) AND (t1.c2)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE ((((+ (t1.c2)), ((t1.c89) NOT NULL), ((t1.c65) NOT NULL), (~ (t1.c65)), ((t1.c65) NOTNULL)))!=((t1.c64, (+ (t1.c64)), (((t1.c1))<((x''))), t1.c64 COLLATE NOCASE, t1.c89))); -- 0ms;
UPDATE t1 SET c2=1.296355917E9, c2=0.7498859196102451; -- 0ms;
UPDATE t1 SET c1='rM', c2=2087157128, c64=1.234685879E9 WHERE ((((t1.c89) NOT BETWEEN (x'') AND (t1.c1))) NOT NULL); -- 0ms;
UPDATE t1 SET c89='6ff'; -- 0ms;
UPDATE t1 SET c64=-2.067746278E9 WHERE ((x'')>=((((t1.c64, t1.c2, t1.c2))<>((t1.c2, t1.c64, t1.c64))))); -- 1ms;
UPDATE OR IGNORE t1 SET (c65, c64)=(x'a27eadea', -1233135781) WHERE ((((t1.c1) NOT BETWEEN (t1.c89) AND (t1.c89)))==(((t1.c89) BETWEEN (t1.c64) AND (t1.c2)))); -- 0ms;
UPDATE OR REPLACE t1 SET c64=x'', c64=x'', c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.7988323081728623 WHERE CASE WHEN (t1.c1 IN ()) THEN 1.34650573E9 ELSE NULLIF(DISTINCT t1.c1, t1.c65) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c89)=(NULL, '245189408'); -- 0ms;
UPDATE OR FAIL t1 SET (c64)=('-1613309082') WHERE ((CAST(t1.c1 AS BLOB)) NOT BETWEEN (((t1.c2) NOT NULL)) AND ((~ (x'')))); -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c1, c2)=(1414368306, 2089134311, '') WHERE (((((((t1.c65))<=((t1.c65))))OR(t1.c65)))OR(NULLIF(DISTINCT t1.c1, t1.c2))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=-1815386 WHERE (~ (t1.c65)); -- 0ms;
UPDATE OR REPLACE t1 SET (c65)=(NULL) WHERE ((((((t1.c89) NOT NULL))AND(TYPEOF(DISTINCT t1.c65))))OR(((t1.c2) IS FALSE))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c64)=(x'', '*)y\r+') WHERE CASE WHEN ((t1.c1)-(t1.c2)) THEN '' END; -- 0ms;
UPDATE t1 SET (c89)=('0.6782550046774811'); -- 0ms;
UPDATE OR IGNORE t1 SET c64=0x178fd4bc WHERE ((((t1.c89)OR(t1.c2)))AND(t1.c2)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-937992704'); -- 0ms;
UPDATE t1 SET (c64)=(x''); -- 0ms;
UPDATE OR FAIL t1 SET c64=x'', c2='-1994626635'; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(NULL) WHERE ((((t1.c64)|(t1.c65))) NOT BETWEEN (t1.c2) AND (t1.c2 COLLATE RTRIM)); -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=0.7946828799963692, c2='䰐K}RDXF4' WHERE CAST(((t1.c1) NOT NULL) AS INTEGER); -- 0ms;
UPDATE OR FAIL t1 SET (c2)=(-1.81740096E8); -- 0ms;
UPDATE t1 SET c2='' WHERE (NOT (t1.c65)) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
UPDATE t1 SET (c89)=(0.6067905719221175); -- 0ms;
UPDATE OR ABORT t1 SET (c89, c64)=(0Xffffffff92485b2e, 0.829663966759324) WHERE (((('-綈*U03l')OR(t1.c89)))OR(((t1.c89) ISNULL))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'' WHERE CAST((t1.c89 IN ()) AS BLOB); -- 0ms;
UPDATE t1 SET c89=x'', c1=x'c76bfea4'; -- 0ms;
UPDATE OR REPLACE t1 SET c64=x'', c2='537881501'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.14457281138075884); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1)=(0.16384076971858585, '-1509752094') WHERE (((((0.9063141676259824)<<(t1.c65))))<=((CASE WHEN t1.c65 THEN t1.c64 WHEN '1153598794' THEN t1.c2 WHEN t1.c1 THEN t1.c89 END))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('567660883') WHERE CAST((t1.c1 IN (t1.c65)) AS INTEGER); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=x'b70c', c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c64=NULL; -- 0ms;
UPDATE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(NULL) WHERE ((t1.c2) ISNULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c64)=('', NULL) WHERE (((((((t1.c65))>((t1.c2))))AND(((((t1.c65)AND(t1.c2)))AND(t1.c64)))))AND(((0.23745182687737665) IS TRUE))); -- 0ms;
UPDATE t1 SET c65=NULL, c2='-1610497040', c89=1.215351548E9; -- 0ms;
UPDATE t1 SET c89=0x30912c10; -- 0ms;
UPDATE OR IGNORE t1 SET c65='1271336641' WHERE (- (((t1.c2) NOT BETWEEN ('') AND (t1.c65)))); -- 0ms;
UPDATE t1 SET c65='	)'; -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.5373902325027626; -- 0ms;
UPDATE OR REPLACE t1 SET c89=0.2665902346374298 WHERE (((((t1.c65))!=((t1.c64)))) NOT BETWEEN ((- (t1.c1))) AND (t1.c65 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t1 SET c64='2098357693' WHERE ((((((((((t1.c1)AND(t1.c89)))OR(t1.c64)))AND(t1.c2)))OR(t1.c2)))<=(((t1.c2)|(t1.c2)))); -- 0ms;
UPDATE t1 SET c65=NULL WHERE ((((((t1.c89) NOT BETWEEN (t1.c89) AND (t1.c65)))OR(CASE t1.c89  WHEN t1.c1 THEN t1.c64 END)))AND(t1.c2)); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE t1 SET (c64)=(0.46020327699569763); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(-1); -- 0ms;
UPDATE OR IGNORE t1 SET c64=x'dbd950be'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL); -- 0ms;
UPDATE t1 SET c65='' WHERE ((CASE -7.45900407E8  WHEN t1.c65 THEN t1.c65 WHEN t1.c89 THEN t1.c89 WHEN '畋m9uc1' THEN t1.c64 ELSE t1.c1 END) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65, c89)=(0.9549123043851184, NULL, x'') WHERE ((((t1.c1) BETWEEN (t1.c64) AND (0.10632583370413029)))<=((~ (t1.c64)))); -- 0ms;
UPDATE OR REPLACE t1 SET (c65)=('-1556942765'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c89=x'' WHERE t1.c2; -- 0ms;
UPDATE t1 SET (c89)=(0X28d3208e) WHERE (((((((((+ (t1.c65)))AND(t1.c65 COLLATE RTRIM)))OR((NOT (t1.c65)))))AND((NOT (t1.c2)))))OR(CASE t1.c65  WHEN t1.c2 THEN t1.c65 END)); -- 0ms;
UPDATE OR ABORT t1 SET c1=NULL; -- 0ms;
UPDATE t1 SET c1=x'' WHERE ((t1.c2 COLLATE NOCASE)&((~ (t1.c89)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.5137604999921198) WHERE ((t1.c65 COLLATE RTRIM)>=((- (t1.c65)))); -- 1ms;
UPDATE OR ABORT t1 SET c65=0.4572279453712883, c1='X]i<', c89=553755413 WHERE CASE (((t1.c1, t1.c89, t1.c89)) BETWEEN ((t1.c89, t1.c64, 'S9\Wq\xg3')) AND ((t1.c2, t1.c89, t1.c2)))  WHEN ((t1.c65) BETWEEN (t1.c65) AND (t1.c2)) THEN t1.c64 COLLATE RTRIM END; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.20015061782282284 WHERE '985580606'; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c89, c1)=('1948991400', '-1569350632', NULL) WHERE ((CAST(NULL AS TEXT)) BETWEEN (((0.26672763559458423) NOT NULL)) AND (((t1.c89) NOTNULL))); -- 0ms;
UPDATE t1 SET c2=0.1192422679551185 WHERE ((((((t1.c65)AND(t1.c2)))AND(t1.c64)))%((((NULL, t1.c1, t1.c89))>((t1.c1, t1.c2, t1.c65))))); -- 0ms;
UPDATE OR IGNORE t1 SET c2='156511913' WHERE json_insert(((t1.c89) NOT BETWEEN (t1.c1) AND (t1.c2)), ((t1.c89) BETWEEN (t1.c2) AND (0xffffffffa482d702)), ((((t1.c65)OR(0.2545081758872565)))OR(t1.c1))); -- 0ms;
UPDATE OR IGNORE t1 SET c64=0.23407235157094486 WHERE (+ (t1.c2)); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0Xffffffffc7540ce7); -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR FAIL t1 SET (c2)=(x''); -- 0ms;
UPDATE OR FAIL t1 SET (c64)=('nK笭2&X5?u') WHERE CASE WHEN t1.c65 COLLATE RTRIM THEN SQLITE_SOURCE_ID() WHEN (t1.c65 IN ()) THEN CASE 0Xffffffffb2c3e1ff  WHEN t1.c64 THEN t1.c1 WHEN NULL THEN t1.c2 WHEN t1.c65 THEN t1.c1 END WHEN CAST(t1.c65 AS TEXT) THEN CAST(t1.c1 AS NUMERIC) ELSE CAST('3YK{Y' AS TEXT) END; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1, c1)=(NULL, x'') WHERE ((CASE t1.c1  WHEN x'' THEN x'' END)+(t1.c2)); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('U嵳D^JX	^*'); -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.2397866321101163 WHERE (- (CASE t1.c2  WHEN t1.c65 THEN t1.c89 END)); -- 0ms;
UPDATE OR FAIL t1 SET (c1)=('k氉GkAB0kJ') WHERE ((((t1.c1)OR(t1.c64))) NOT NULL); -- 0ms;
UPDATE t1 SET (c89, c1)=(x'', 0xffffffff8d78d89f) WHERE ((((t1.c89)*(t1.c1)))AND(CAST(t1.c1 AS REAL))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2)=(0.4692893531193345, x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c64, c89)=(0.6642095831330572, 'Mh6Tk', x'edd3') WHERE (((0Xffffffffae4b96c9 IN ()))<(((t1.c65) NOT BETWEEN (t1.c2) AND ('v.T ')))); -- 1ms;
UPDATE OR IGNORE t1 SET (c89)=(0.8256091595345679); -- 0ms;
UPDATE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c64=x'', c1=0.03166386084381423, c89=0.6100256105077245 WHERE ((CASE t1.c64  WHEN t1.c65 THEN t1.c1 END)&((((t1.c2))>((t1.c89))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('1960272071') WHERE (((t1.c2, t1.c2, 0.38614940156734356)) NOT BETWEEN ((x'5ee9', ((0X31ed0214) NOTNULL), ((t1.c64)<(x'')))) AND ((t1.c1, (((t1.c65, t1.c65, t1.c1))>((t1.c65, t1.c89, t1.c65))), ((t1.c65)>=(0.2866598000059455))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0xffffffffa71b0457); -- 0ms;
UPDATE OR IGNORE t1 SET c2=1569378992 WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET c1=906818069 WHERE CAST(TYPEOF(t1.c2) AS REAL); -- 0ms;
UPDATE t1 SET c65='.?', c89=0xffffffff9d343413; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(x'8766') WHERE ((t1.c2)IS(t1.c64)) COLLATE BINARY; -- 0ms;
UPDATE t1 SET c2='a''' WHERE (+ (CAST(t1.c64 AS TEXT))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE (t1.c2 IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c1=684925070; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.3645946321614125) WHERE ((t1.c89 COLLATE RTRIM) IS FALSE); -- 0ms;
UPDATE t1 SET c64=0.655277081567735; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2)=('1645046026', NULL) WHERE ((((((((t1.c64)AND(TYPEOF(t1.c89))))OR((((t1.c2))==((t1.c65))))))AND(((t1.c89) NOT BETWEEN (t1.c89) AND (t1.c64)))))AND((t1.c2 IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET c89='1803621658', c2=-1878305192, c1='0.09505315971475903' WHERE ((LIKELIHOOD(DISTINCT t1.c64, 0.6525888752399224))+(((t1.c89)IS(t1.c64)))); -- 0ms;
UPDATE t1 SET (c2)=(NULL) WHERE x''; -- 0ms;
UPDATE OR REPLACE t1 SET c2=NULL; -- 0ms;
UPDATE OR REPLACE t1 SET (c89)=(x'3a98'); -- 0ms;
UPDATE OR IGNORE t1 SET c64='', c2=NULL WHERE (((((- (t1.c65)))OR(((t1.c1) NOT BETWEEN (t1.c89) AND (t1.c1)))))AND(CAST('' AS REAL))); -- 0ms;
UPDATE OR FAIL t1 SET (c1, c89)=(x'', '') WHERE (NOT (((t1.c2)<=(t1.c89)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65='*', c2=x'', c64=NULL WHERE ((NOT (t1.c2)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL) WHERE t1.c64; -- 0ms;
UPDATE t1 SET c64=567660883; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'') WHERE ((t1.c89) NOT BETWEEN (t1.c89) AND (t1.c64)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.6678778567817951); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c64, c1, c65)=(x'', '-104420823', '245189408') WHERE (((t1.c1)) NOT BETWEEN ((CAST(t1.c2 AS REAL))) AND (((((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c2)))))); -- 1ms;
UPDATE t1 SET c65=x'7c15'; -- 0ms;
UPDATE OR FAIL t1 SET c65=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c64='0.029685534305701533', c64='-93808211', c65=NULL WHERE (((((NULL)) NOT BETWEEN ((t1.c64)) AND ((t1.c64))))>((- (x'')))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('1351268349'); -- 0ms;
UPDATE OR IGNORE t1 SET c1='u\sa7' WHERE ((((t1.c1) IS TRUE))*(t1.c89)); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x''; -- 0ms;
UPDATE OR ABORT t1 SET c2='!'; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('-1163367257') WHERE t1.c89; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE ((x'' IN ()) IN ()); -- 0ms;
UPDATE OR REPLACE t1 SET (c65)=(0.9382809215291158) WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET c64=0.3231823322558751; -- 0ms;
UPDATE OR FAIL t1 SET c65='UrLSY', c89='608736060' WHERE t1.c65; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.20020945693694692); -- 0ms;
UPDATE t1 SET (c1)=(-9.37992704E8) WHERE '-539893873'; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=('-18291610') WHERE ((((t1.c2 COLLATE BINARY)OR(((t1.c2) NOT BETWEEN ('2138843917') AND (t1.c1)))))OR((t1.c65 IN (t1.c64, t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0Xffffffff9be44fc5 WHERE ((((((t1.c2))<=((t1.c64)))))>((CASE NULL  WHEN t1.c64 THEN t1.c89 WHEN t1.c64 THEN t1.c65 WHEN t1.c65 THEN t1.c64 END))); -- 0ms;
UPDATE OR FAIL t1 SET (c64)=(0X5ec187f8) WHERE t1.c1; -- 0ms;
UPDATE t1 SET c1=NULL, c65=NULL WHERE x'e43d'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-2080492295'); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(-1830126314) WHERE (t1.c65 COLLATE BINARY IN (((t1.c64) BETWEEN (t1.c2) AND (t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c65)=('1914990562', 0.6042467321583977); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(0.480193184047515) WHERE CAST(((t1.c1) NOT NULL) AS INTEGER); -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=(NULL) WHERE ((((NOT (t1.c2)), ((t1.c65) IS FALSE), CASE WHEN t1.c1 THEN t1.c65 ELSE x'' END))<=((((((t1.c2)OR(t1.c2)))AND(t1.c89)), (t1.c89 IN ()), t1.c65))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE (((t1.c2 IN ()))<(((((t1.c2)AND(t1.c65)))AND(t1.c64)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.7591301012606488, c2=NULL WHERE STRFTIME(GLOB(t1.c64, t1.c89), '1052829832' COLLATE NOCASE, (((t1.c2, t1.c89, t1.c89)) BETWEEN ((t1.c1, t1.c89, t1.c2)) AND ((t1.c65, t1.c89, t1.c64))), CASE WHEN t1.c89 THEN t1.c65 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN t1.c65 WHEN t1.c1 THEN t1.c65 WHEN t1.c2 THEN t1.c89 END, ((((t1.c64)AND(t1.c64)))OR(t1.c65)), TYPEOF(DISTINCT t1.c1), (((t1.c64)) NOT BETWEEN ((t1.c2)) AND ((t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c64='553755413', c64=0.7539093617646759, c65=0.549279588979884 WHERE (((+ (t1.c65)))=((((t1.c89)) BETWEEN ((t1.c64)) AND ((t1.c64))))); -- 0ms;
UPDATE t1 SET c64=0.6596890176164555, c1=x'6877'; -- 0ms;
UPDATE OR FAIL t1 SET c1='473235751'; -- 0ms;
UPDATE OR IGNORE t1 SET c64='-1556942765'; -- 0ms;
UPDATE OR REPLACE t1 SET c1=NULL WHERE (((((t1.c64)<>(t1.c1))))>((x''))); -- 0ms;
UPDATE OR IGNORE t1 SET c89=-1992738396 WHERE ((((t1.c89) NOT NULL)) NOTNULL); -- 0ms;
UPDATE OR REPLACE t1 SET c89=x'', c64=NULL, c65=x'' WHERE (NOT (CAST(t1.c64 AS INTEGER))); -- 0ms;
UPDATE t1 SET c1=0Xfffffffff95b1234 WHERE (CASE t1.c64  WHEN t1.c89 THEN t1.c2 END IN (((t1.c2) NOT BETWEEN (0.8755867460340947) AND (t1.c64)), ((((((((t1.c65)AND(t1.c65)))AND(t1.c65)))AND(t1.c1)))AND(t1.c89)))); -- 0ms;
UPDATE OR IGNORE t1 SET c64=1346311057 WHERE ((x'')LIKE(((t1.c1)+(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'') WHERE '-1608479226'; -- 0ms;
UPDATE t1 SET (c89)=(0x7804696); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.7241086808581412); -- 0ms;
UPDATE t1 SET (c1, c1, c64)=(2.07182364E8, NULL, '~4xKG殝1︿ל'); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2, c64)=('', -601959014) WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL, c1=x'' WHERE LIKELIHOOD(DISTINCT ((((t1.c89)OR(t1.c89)))AND(t1.c64)), 0.7786327253096791); -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL, c2='' WHERE ((((STRFTIME(t1.c2, t1.c2, t1.c1))AND(((t1.c89)LIKE(t1.c1)))))AND(((((t1.c65)OR(t1.c65)))AND(NULL)))); -- 0ms;
UPDATE OR FAIL t1 SET c65='', c64='567660883', c89=x'c98f954e'; -- 0ms;
UPDATE t1 SET c64='J]', c1=0.9633131578814907 WHERE CASE ((t1.c65)|(t1.c65))  WHEN (~ (t1.c64)) THEN ((t1.c2) IS FALSE) ELSE IFNULL(t1.c1, t1.c1) END; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'4c4e', c1='-1838738700'; -- 0ms;
UPDATE OR IGNORE t1 SET c89='0.3707686074641464' WHERE ((t1.c64 COLLATE BINARY) BETWEEN ((((t1.c1))!=((t1.c65)))) AND ((~ (t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c89='玐N.#'; -- 0ms;
UPDATE OR FAIL t1 SET c64=-515807060, c89=0.03051744930602429; -- 0ms;
UPDATE OR FAIL t1 SET c2=207182364 WHERE t1.c2; -- 0ms;
UPDATE t1 SET (c89)=(NULL) WHERE ((t1.c89)<('-469251974')); -- 0ms;
UPDATE OR FAIL t1 SET (c2, c65)=('sS註﹄y+>뀣', -1.657523181E9); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('598670911') WHERE t1.c64; -- 0ms;
UPDATE OR REPLACE t1 SET c1=0.8027692378943249; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-2067746278'); -- 0ms;
UPDATE t1 SET (c64)=(0.4915182516260934) WHERE LENGTH((~ (t1.c2))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c89, c65)=(x'', '|', 'H,') WHERE (+ (NULLIF(DISTINCT x'3bda5e8e', t1.c1))); -- 1ms;
UPDATE OR IGNORE t1 SET c64=NULL WHERE ((CAST(t1.c64 AS REAL)) BETWEEN ((+ (t1.c1))) AND (HEX(DISTINCT t1.c89))); -- 0ms;
UPDATE t1 SET (c64)=(0.9918067619527016); -- 0ms;
UPDATE OR FAIL t1 SET (c2)=(2.08361756E8); -- 0ms;
UPDATE t1 SET c89=-1.27532906E9, c65=x'c972'; -- 0ms;
UPDATE OR IGNORE t1 SET c64=x''; -- 0ms;
UPDATE t1 SET (c89)=(NULL) WHERE ((((t1.c64) NOT BETWEEN (NULL) AND (t1.c2)))!=((t1.c2 IN ()))); -- 0ms;
UPDATE OR REPLACE t1 SET c64=0.7092592418005644 WHERE ((((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c1)))))>((((t1.c89) NOTNULL)))); -- 0ms;
UPDATE t1 SET c2='ంr' WHERE t1.c2; -- 0ms;
UPDATE t1 SET c1=x'', c64=0.08714294176929349, c65=NULL WHERE x''; -- 0ms;
UPDATE OR ABORT t1 SET c89='s' WHERE (((t1.c89 IN (t1.c89))) BETWEEN (CAST(t1.c89 AS TEXT)) AND ((((t1.c89))!=(('1831262905'))))); -- 0ms;
UPDATE t1 SET (c65)=(0X7f20b4c) WHERE CASE CASE t1.c1  WHEN t1.c89 THEN t1.c89 ELSE t1.c65 END  WHEN ((t1.c65)LIKE(t1.c65)) THEN ((((t1.c2)OR(t1.c2)))AND(t1.c89)) END; -- 0ms;
UPDATE t1 SET c65=x'', c1=0x1ad1526; -- 0ms;
UPDATE OR IGNORE t1 SET c2='PA)vv', c64=-1.233135781E9 WHERE CASE WHEN ((t1.c89)/(t1.c2)) THEN ((t1.c1) NOT BETWEEN (t1.c64) AND (t1.c89)) ELSE (+ (t1.c2)) END; -- 0ms;
UPDATE OR REPLACE t1 SET c89=0x67262c5c WHERE json_extract(t1.c89 COLLATE NOCASE, json_patch(NULL, t1.c65)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c64)=(0.5691924879967669, 0.7429179450354995); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.9223951190690162; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('aJLrU') WHERE CAST(((t1.c1) NOT NULL) AS INTEGER); -- 0ms;
UPDATE OR REPLACE t1 SET c1=-1.637305753E9; -- 0ms;
UPDATE t1 SET (c64)=(NULL); -- 0ms;
UPDATE t1 SET (c89)=(NULL) WHERE (- (t1.c64)) COLLATE BINARY; -- 0ms;
UPDATE OR ROLLBACK t1 SET c89=x'', c2=x'', c89=0.8192437460106755 WHERE PRINTF((~ (t1.c64))); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(NULL); -- 0ms;
UPDATE OR REPLACE t1 SET c2=NULL; -- 0ms;
UPDATE t1 SET c2=0.8107831638031302, c2=0.24110056623301146, c65=0.7522083202872045 WHERE (- (((t1.c65)>(t1.c64)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=NULL, c1='-33773530', c89=0.9881271810090123; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.7455041927202789; -- 0ms;
UPDATE OR REPLACE t1 SET c1='Rk-TU', c65=x'f6f2', c2=x'' WHERE t1.c1; -- 0ms;
UPDATE t1 SET (c64)=(x''); -- 0ms;
UPDATE t1 SET c1='' WHERE (t1.c2 COLLATE NOCASE IN ()); -- 0ms;
UPDATE OR ABORT t1 SET c89=NULL; -- 0ms;
UPDATE t1 SET (c2)=('[G') WHERE ((((t1.c89)&(t1.c65)))/((+ (t1.c2)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c89=0.838741332218953; -- 0ms;
UPDATE t1 SET (c89, c2, c1)=('-1226307668', x'', 'Χu') WHERE x'ecae'; -- 0ms;
UPDATE OR REPLACE t1 SET c1=NULL WHERE ((CAST(t1.c65 AS TEXT)) IS FALSE); -- 0ms;
UPDATE OR REPLACE t1 SET c64=''; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(-9.37992704E8) WHERE t1.c65; -- 0ms;
UPDATE OR REPLACE t1 SET c2=x'3d3a', c2='7{()' WHERE COALESCE(t1.c64, t1.c64) COLLATE RTRIM; -- 0ms;
UPDATE OR REPLACE t1 SET (c65)=('0.13007220473350634') WHERE ((~ (t1.c89)) IN ()); -- 1ms;
UPDATE t1 SET c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('208361756'); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=x'91007d15'; -- 0ms;
UPDATE t1 SET (c2, c89)=('-359304141', '1587542995'); -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL WHERE ((t1.c2 IN ()) IN (t1.c89)); -- 0ms;
UPDATE OR FAIL t1 SET (c65, c64)=(x'', 0.13397891829182207) WHERE (((((t1.c1)) NOT BETWEEN ((t1.c64)) AND ((t1.c2))))<(LOWER(t1.c2))); -- 0ms;
UPDATE t1 SET (c64, c2)=(-1.295785473E9, 0.03789234259772556) WHERE ((((t1.c89)<=(t1.c2)))<>((((t1.c65, x'05f9', t1.c65))>=((t1.c89, t1.c89, t1.c1))))); -- 0ms;
UPDATE OR IGNORE t1 SET c1='-247827385'; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=x'' WHERE LENGTH(t1.c1); -- 0ms;
UPDATE OR ABORT t1 SET (c2, c65)=(NULL, '\nM'); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL, c65='Q' WHERE ((t1.c64 COLLATE RTRIM) NOTNULL); -- 0ms;
UPDATE t1 SET (c2)=(1294911993) WHERE '-1151424946'; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE x''; -- 0ms;
UPDATE t1 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.27659955947473835, c1=x'fc00' WHERE (- (t1.c1)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c89=-1969933302; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=('2078480936') WHERE ((CAST(t1.c1 AS TEXT))<(TRIM(DISTINCT 0.6782550046774811))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65)=(x'', x'') WHERE ((((((t1.c65) ISNULL))OR((t1.c64 IN ()))))AND(((t1.c1)IS NOT(t1.c64)))); -- 0ms;
UPDATE t1 SET c65=NULL WHERE IFNULL(((t1.c64)+(t1.c2)), t1.c65); -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=(0.832162093487757) WHERE (((((((((t1.c65 IN ()))AND(CAST(t1.c1 AS TEXT))))AND(t1.c1)))AND(CAST(t1.c1 AS NUMERIC))))OR((+ (t1.c1)))); -- 0ms;
UPDATE OR ABORT t1 SET c65='1641612879'; -- 0ms;
UPDATE t1 SET (c89)=('-68246817'); -- 0ms;
UPDATE OR IGNORE t1 SET c89='\nET7똄' WHERE (((((t1.c2, t1.c89, t1.c2))!=((t1.c64, t1.c89, t1.c89))))>(0Xffffffffbb72ba75)); -- 0ms;
UPDATE OR IGNORE t1 SET c2='' WHERE t1.c2; -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c64)=('1096860100', 0.4172606228403253) WHERE CAST((t1.c64 IN ()) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.13397891829182207, c1=0.3492593044847895; -- 0ms;
UPDATE OR ROLLBACK t1 SET c64=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c89='' WHERE (((t1.c2)) BETWEEN (((((t1.c64)) NOT BETWEEN ((t1.c65)) AND ((t1.c65))))) AND ((((t1.c89) BETWEEN (t1.c1) AND (t1.c65))))); -- 0ms;
UPDATE t1 SET c2='980217077'; -- 0ms;
UPDATE OR ABORT t1 SET (c89, c2)=(x'ad082755', 'q}c6!.') WHERE ((t1.c2 COLLATE NOCASE)>=(NULL)); -- 0ms;
UPDATE t1 SET c1=0.4890934143764727, c1='-937992704' WHERE CAST(((t1.c89)IS NOT(t1.c64)) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'dd12', c1=x'', c64=x''; -- 0ms;
UPDATE OR REPLACE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('-469251974'); -- 0ms;
UPDATE OR ROLLBACK t1 SET c64='1707256257' WHERE ((t1.c64)IS NOT(t1.c1 COLLATE NOCASE)); -- 0ms;
UPDATE t1 SET c1=NULL WHERE NULL; -- 0ms;
UPDATE t1 SET c2='-1984519952' WHERE t1.c1; -- 1ms;
UPDATE OR IGNORE t1 SET c89=''; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'19d0', c65='Y1*>d'; -- 0ms;
UPDATE t1 SET c64=0x3a6cecf5; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0x42d93daf) WHERE ((((((t1.c65) NOT BETWEEN (t1.c89) AND (t1.c65)))OR(((t1.c65)<(x'b4ef')))))AND(((((((((((((t1.c64)OR(t1.c2)))OR(t1.c89)))AND(t1.c2)))OR('W\r')))OR(t1.c89)))OR(t1.c2)))); -- 0ms;
UPDATE t1 SET c64=NULL WHERE CASE WHEN ((t1.c1)*(t1.c1)) THEN ((((t1.c64)AND(t1.c89)))OR('684925070')) WHEN '0.9854121080198904' THEN (t1.c64 IN ()) WHEN ((-2134138021)-(t1.c65)) THEN (((t1.c89))!=((t1.c65))) WHEN ((t1.c64)AND(-797865820)) THEN ((((t1.c64)AND(t1.c2)))OR(t1.c65)) WHEN t1.c1 COLLATE NOCASE THEN t1.c64 END; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0x7fe4adf, c65='2031802487', c2=x'' WHERE CAST((((x'8a48', t1.c2, NULL)) BETWEEN ((t1.c2, t1.c64, t1.c65)) AND ((t1.c64, t1.c2, t1.c65))) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('') WHERE ((t1.c65)|(t1.c2)) COLLATE RTRIM; -- 0ms;
UPDATE t1 SET c65='L%6씱#vຯ' WHERE ((((t1.c2 COLLATE BINARY)AND(((t1.c1) NOT BETWEEN (4.2662992674191713E-4) AND (t1.c89)))))AND((t1.c2 IN ()))); -- 0ms;
UPDATE t1 SET (c1, c89, c1)=(x'', x'', x''); -- 1ms;
UPDATE OR IGNORE t1 SET c2=-9.37992704E8, c64=NULL, c64=0.8744632084786957; -- 0ms;
UPDATE OR IGNORE t1 SET c2=-4.69251974E8 WHERE CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c89 WHEN t1.c1 THEN t1.c89 END COLLATE BINARY; -- 0ms;
UPDATE t1 SET c64=x'' WHERE (- (x'' COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE t1 SET c89=x'', c2=x'' WHERE (((((((x'66ec'))<((t1.c65))))OR(TOTAL_CHANGES())))OR(CAST(t1.c64 AS TEXT))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=x'a473'; -- 0ms;
UPDATE t1 SET c64='973903333', c64='竳r}sL\noX' WHERE (((t1.c2)) BETWEEN (((t1.c2 IN ()))) AND ((((t1.c64)LIKE(t1.c64))))); -- 0ms;
UPDATE OR FAIL t1 SET (c1)=(0.07927588140200392) WHERE (((~ (t1.c65))) NOT BETWEEN (((t1.c65) BETWEEN (t1.c65) AND (t1.c64))) AND (((((t1.c65)AND(NULL)))OR(t1.c64)))); -- 0ms;
UPDATE t1 SET (c1)=(x'd4bd'); -- 0ms;
UPDATE t1 SET (c64, c1)=('32175978', 0.0037989844225814196); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(x''); -- 0ms;
UPDATE t1 SET c89=980217077 WHERE (((t1.c65)) BETWEEN ((t1.c65)) AND ((((0.3605840522273063)AND(t1.c64))))); -- 0ms;
UPDATE t1 SET (c65)=(0.8031005673931514) WHERE t1.c1; -- 0ms;
UPDATE t1 SET c89='1', c65=0.9584151103587903; -- 0ms;
UPDATE t1 SET c65=NULL WHERE CASE t1.c1  WHEN t1.c89 THEN t1.c89 END COLLATE RTRIM; -- 0ms;
UPDATE OR REPLACE t1 SET c64='' WHERE ((((((t1.c2)OR('1294911993')))OR(t1.c89))) ISNULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE t1.c2; -- 0ms;
UPDATE OR FAIL t1 SET (c65, c65, c64)=(208361756, x'0e71', NULL) WHERE (NOT (CASE t1.c64  WHEN t1.c65 THEN t1.c1 END)); -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=0.9267744171271265, c1=x'ddbc'; -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL; -- 0ms;
UPDATE t1 SET (c1)=('-1275329060') WHERE ((CAST(t1.c64 AS INTEGER))||(DATE('-1186248478', t1.c65, t1.c89))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(0.4568835256068824); -- 0ms;
UPDATE t1 SET c65=0.4147157716403481, c65=0.5072966751901177, c1=x'46b303a0', c1=x'c0db'; -- 0ms;
UPDATE t1 SET (c65, c2)=(x'7ba9b76a', -931031423) WHERE CAST(t1.c65 AS TEXT); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c1='-116875205', c64=NULL WHERE (((t1.c65) NOT BETWEEN (t1.c64) AND (NULL)) IN ((~ (t1.c64)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1)=(NULL, 0X41c7ec49); -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.29096959957864854 WHERE ((((t1.c2)/(t1.c65))) IS FALSE); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(-2.034697795E9) WHERE LENGTH((+ (t1.c65))); -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c1)=(x'', NULL) WHERE ((CASE WHEN t1.c89 THEN t1.c2 ELSE '1482752928' END)OR((~ (t1.c64)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.9977940103554004, c89=0.13457182769711873, c89=x'' WHERE CASE WHEN (t1.c89 IN ()) THEN t1.c2 ELSE ((((t1.c89)OR(t1.c64)))OR(t1.c89)) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE (NOT ((((x'0406')) NOT BETWEEN ((t1.c65)) AND ((t1.c64))))); -- 0ms;
UPDATE t1 SET (c64)=(1652494105); -- 0ms;
UPDATE OR IGNORE t1 SET c64=-1696762499; -- 0ms;
UPDATE OR FAIL t1 SET c64='2031802487' WHERE (((t1.c89 IN (t1.c2))) NOT BETWEEN (t1.c64) AND (((t1.c64)||(t1.c64)))); -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=(x'') WHERE ((json_array_length(t1.c89)) NOT NULL); -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(0.23798965107887804); -- 0ms;
UPDATE OR REPLACE t1 SET c64=x''; -- 0ms;
UPDATE OR FAIL t1 SET (c2)=(x'') WHERE ((((t1.c2) NOT NULL)) NOT BETWEEN (((t1.c89)>(t1.c1))) AND (CASE t1.c89  WHEN t1.c64 THEN t1.c1 ELSE t1.c2 END)); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c64)=(NULL, 0Xffffffff901f0db7) WHERE (((t1.c65, t1.c89, NULL, t1.c64, x''))>((t1.c89, t1.c2, t1.c2, NULL, t1.c65))) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(x'ecc2b07e'); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(NULL) WHERE ((((t1.c1 IN ())))<((CASE WHEN t1.c64 THEN t1.c89 WHEN '1954670370' THEN NULL WHEN t1.c1 THEN t1.c65 END))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('NB'); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c64)=(NULL, '1357444633'); -- 0ms;
UPDATE t1 SET (c2, c1)=('㾨n', x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.00938621212595514); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('-1105593872'); -- 0ms;
UPDATE OR FAIL t1 SET c65='1355546194'; -- 0ms;
UPDATE t1 SET c89='\mKu\n' WHERE ((CASE WHEN t1.c2 THEN t1.c1 ELSE t1.c2 END) NOTNULL); -- 0ms;
UPDATE t1 SET (c65)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('') WHERE (('-820887490')*(((t1.c64)>>(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(NULL); -- 0ms;
UPDATE t1 SET c2=x''; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('') WHERE ((t1.c65)>((+ (t1.c64)))); -- 0ms;
UPDATE t1 SET c65='-1613309082' WHERE ((((t1.c2)OR(t1.c2))) NOT BETWEEN (CAST(t1.c64 AS BLOB)) AND ('169119239' COLLATE RTRIM)); -- 0ms;
UPDATE t1 SET (c1)=(x'') WHERE (UPPER(DISTINCT t1.c2) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c64=-1.613309082E9 WHERE ((t1.c1 IN ()) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.005148537024371569; -- 0ms;
UPDATE OR IGNORE t1 SET c1='S7tW%IJ''' WHERE (((t1.c1 IN ())) IS FALSE); -- 0ms;
UPDATE t1 SET c65=NULL; -- 0ms;
UPDATE t1 SET (c1, c64, c2)=(x'', 0.03210957069122289, 0.6714991278999808); -- 0ms;
UPDATE t1 SET (c2, c89, c65)=(x'', x'3f4f', 1054001811); -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL WHERE (((t1.c65) IS FALSE) IN ((t1.c65 IN (t1.c89, t1.c89)), 0.1005518813468872)); -- 0ms;
UPDATE t1 SET (c1)=(NULL) WHERE (- (t1.c2)); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c89)=('j', '+ħ^'); -- 0ms;
UPDATE OR FAIL t1 SET (c2)=(NULL); -- 0ms;
UPDATE t1 SET c65=x'', c64=NULL WHERE DATE((((t1.c65, t1.c2, t1.c2))==((t1.c2, t1.c89, 0.5368839632805348))), ((t1.c1) BETWEEN ('*#') AND (t1.c2)), CASE WHEN t1.c64 THEN t1.c64 WHEN t1.c1 THEN t1.c64 WHEN t1.c65 THEN t1.c2 END, CAST(t1.c2 AS INTEGER), (t1.c89 IN ()), t1.c1, ((t1.c65)IS NOT(t1.c2))); -- 0ms;
UPDATE OR IGNORE t1 SET c89=''; -- 0ms;
UPDATE OR FAIL t1 SET (c89, c89)=('-761982651', '拭)'); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c65='ꩩS'; -- 0ms;
UPDATE OR IGNORE t1 SET c65='604252479'; -- 0ms;
UPDATE t1 SET c89=x''; -- 0ms;
UPDATE OR REPLACE t1 SET (c2, c89)=('D]', x''); -- 0ms;
UPDATE t1 SET c89=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE OR ABORT t1 SET c65=0.6940120870211581 WHERE ((((t1.c64) IS FALSE)) BETWEEN (((t1.c65)>>(1765957303))) AND (t1.c64)); -- 0ms;
UPDATE t1 SET (c89)=(0x2b77de7a); -- 0ms;
UPDATE OR ABORT t1 SET c89=NULL; -- 0ms;
UPDATE t1 SET (c2, c2, c65)=(0.5163373911478866, 0.22457107604455062, 'i<v嘘TSb[') WHERE ((t1.c1) IS FALSE); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('ufeE쐧Pz'); -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.2979236432385233; -- 0ms;
UPDATE t1 SET c2='714019320'; -- 1ms;
UPDATE OR IGNORE t1 SET c89=x'', c1='' WHERE '[R?~'; -- 0ms;
UPDATE OR FAIL t1 SET (c65)=('Hgt#') WHERE (NOT ((~ (t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c89=x'' WHERE ((((t1.c89) NOT BETWEEN (t1.c1) AND (t1.c89)))<<(t1.c89)); -- 0ms;
UPDATE OR IGNORE t1 SET c89=-2063400155; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c64=0.24863985572775038; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c65)=(x'', NULL) WHERE ((((x'')AND((t1.c64 IN ()))))AND((~ (t1.c89)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(NULL) WHERE COALESCE(DISTINCT ((t1.c65) NOT BETWEEN (t1.c64) AND (t1.c2)), (((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c65)))); -- 0ms;
UPDATE t1 SET (c1)=(0.414094477413377); -- 0ms;
UPDATE OR ABORT t1 SET c65=x'f38a' WHERE ((t1.c2) ISNULL); -- 0ms;
UPDATE OR FAIL t1 SET (c1, c1)=(x'', '-58855952'); -- 0ms;
UPDATE t1 SET c65=x'' WHERE (- (((NULL) NOT BETWEEN (t1.c1) AND (t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET c64=0.030255693321743826; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE CASE WHEN x'' COLLATE BINARY THEN ((t1.c89)IS(t1.c64)) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('536958468') WHERE (STRFTIME(t1.c1, t1.c89, t1.c89) IN ()); -- 0ms;
UPDATE OR ABORT t1 SET c89=NULL WHERE ((CASE WHEN '0.17853066147755858' THEN t1.c89 ELSE t1.c64 END)<>((t1.c1 IN (NULL, t1.c64, t1.c65)))); -- 0ms;
UPDATE t1 SET (c89)=(NULL) WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c89, c64)=(1641612879, NULL, '-1556942765') WHERE (((NOT (NULL))) BETWEEN ('1973065398') AND (JULIANDAY(t1.c2, t1.c2, t1.c64))); -- 0ms;
UPDATE t1 SET c2=x'' WHERE CASE NULL  WHEN ((((t1.c89)AND(t1.c64)))AND(t1.c1)) THEN ((((((((t1.c65)OR(t1.c65)))AND(t1.c64)))OR(t1.c1)))AND(t1.c65)) WHEN ((t1.c64) NOT BETWEEN (t1.c89) AND (t1.c89)) THEN (x'' IN ()) WHEN (((t1.c2, t1.c64, t1.c89)) NOT BETWEEN ((t1.c89, t1.c2, t1.c2)) AND ((t1.c2, t1.c1, t1.c64))) THEN ((t1.c89)%(t1.c65)) WHEN ((NULL)||(t1.c89)) THEN CAST(t1.c2 AS NUMERIC) WHEN (t1.c1 IN (t1.c89, t1.c2)) THEN CAST(t1.c2 AS BLOB) END; -- 0ms;
UPDATE OR REPLACE t1 SET (c89)=(x''); -- 0ms;
UPDATE t1 SET c89='[Ps', c2=x'', c64=0Xffffffffa04c6636 WHERE t1.c65; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(-1); -- 0ms;
UPDATE OR IGNORE t1 SET c64=0.7774465831480277; -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c65)=('596554485', x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c89)=(0.9902821954574879, NULL) WHERE (((((t1.c65)) BETWEEN ((t1.c2)) AND ((t1.c2)))) BETWEEN ((~ (t1.c64))) AND (t1.c65 COLLATE NOCASE)); -- 0ms;
UPDATE t1 SET (c1, c89)=(x'972b3568', 0.6660080535669514) WHERE (((t1.c89 IN ())) IS FALSE); -- 0ms;
UPDATE OR IGNORE t1 SET c64=x'' WHERE ((((t1.c89)>>(t1.c1))) NOT NULL); -- 0ms;
UPDATE t1 SET c1='1604528822' WHERE ((((((t1.c65)OR(t1.c2)))AND(t1.c65)))%(x'be749979')); -- 0ms;
UPDATE OR REPLACE t1 SET (c64, c89)=(NULL, '2087157128') WHERE json_array_length(CAST(t1.c64 AS INTEGER), t1.c89); -- 0ms;
UPDATE t1 SET (c89)=(0xffffffff91c48512); -- 0ms;
UPDATE t1 SET (c1, c89, c2)=('721819624', x'', -969361469); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c65)=('us', '溭years)F'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1)=(x'', 0.44758954518853933); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c64)=(0.4863239225284396) WHERE CAST(((t1.c89) NOT BETWEEN (t1.c89) AND (t1.c89)) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('-22381220') WHERE ((((t1.c1 COLLATE BINARY)AND(t1.c2)))AND((((t1.c1))<((t1.c64))))); -- 0ms;
UPDATE t1 SET (c2)=(x'') WHERE ((t1.c64)OR(t1.c1 COLLATE NOCASE)); -- 0ms;
UPDATE t1 SET c1=-1460095560 WHERE CASE 208361756  WHEN ((t1.c2)LIKE(t1.c65)) THEN (t1.c64 IN ()) END; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE ((t1.c64) BETWEEN (t1.c1 COLLATE RTRIM) AND ('')); -- 0ms;
UPDATE OR IGNORE t1 SET c64=607336919; -- 0ms;
UPDATE t1 SET (c89)=('2095771335') WHERE (((t1.c89)) NOT BETWEEN ((t1.c65)) AND (((t1.c65 IN ())))); -- 0ms;
UPDATE OR ABORT t1 SET c64=x''; -- 0ms;
UPDATE OR ABORT t1 SET c2='', c89=0Xffffffffec4b816b WHERE CAST(t1.c64 AS REAL); -- 0ms;
UPDATE OR FAIL t1 SET c89=0.5247868983947165 WHERE ((t1.c64) NOTNULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(''); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(NULL) WHERE (NOT (ABS(t1.c65))); -- 0ms;
UPDATE OR IGNORE t1 SET c2='819742916', c89=NULL WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE ((((t1.c64) IS FALSE)) NOT NULL); -- 0ms;
UPDATE t1 SET c89='1271336641', c89=x'' WHERE CASE WHEN t1.c1 COLLATE RTRIM THEN (t1.c65 IN ()) ELSE HEX(t1.c89) END; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c64)=('-181740096') WHERE (((t1.c89 IN ()))OR(((t1.c65) BETWEEN (t1.c65) AND (t1.c64)))); -- 0ms;
UPDATE OR REPLACE t1 SET c2='-513843634', c64=NULL; -- 0ms;
UPDATE OR ABORT t1 SET c2='' WHERE (((('BH')OR(json(t1.c65))))OR(((t1.c1)!=(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c64=-9.7100175E8; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('c0gp#ꭉ') WHERE ((CAST(t1.c1 AS BLOB))GLOB('%<%>땲挬')); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2, c1)=(0.7973858780352516, x'9da5', NULL) WHERE (((x'' IN (t1.c65))) BETWEEN (t1.c1) AND (t1.c1)); -- 0ms;
UPDATE t1 SET (c65)=(0X71b42a5d) WHERE (((t1.c1) BETWEEN (t1.c1) AND (t1.c65)) IN ()); -- 0ms;
UPDATE t1 SET c64='' WHERE (((((t1.c1)==(t1.c89)), TOTAL_CHANGES(), CAST(t1.c64 AS INTEGER)))>((CAST(t1.c89 AS TEXT), 0Xffffffffad501555, t1.c64 COLLATE BINARY))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(1402763229) WHERE ((t1.c2)IS(t1.c2)) COLLATE NOCASE; -- 0ms;
UPDATE OR FAIL t1 SET (c64)=('207182364'); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(0.3426946181046385) WHERE (((((t1.c65, t1.c65, t1.c65)) NOT BETWEEN ((t1.c65, t1.c65, t1.c65)) AND ((t1.c2, t1.c65, t1.c2))))&(((t1.c1)||(t1.c89)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=('-1505140825') WHERE t1.c65; -- 0ms;
UPDATE OR FAIL t1 SET c64=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(NULL); -- 0ms;
UPDATE OR FAIL t1 SET (c2)=('-359507746') WHERE ((SQLITE_COMPILEOPTION_USED(t1.c89)) ISNULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c65=x'ce1a'; -- 0ms;
UPDATE OR IGNORE t1 SET c2='', c64='0.8976164501959774', c64=x'' WHERE ((LIKELIHOOD(t1.c65, 0.5308652007478613)) BETWEEN (('eu쫼0le' IN (t1.c2))) AND (((t1.c64) IS FALSE))); -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(0.2910403471029137) WHERE ((t1.c2 COLLATE RTRIM) NOT BETWEEN (NULL) AND (((t1.c1) IS TRUE))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('0.7774465831480277') WHERE (((((t1.c89 IN (t1.c89, t1.c65)))AND(((t1.c1)IS NOT(t1.c64)))))OR(CAST(t1.c64 AS BLOB))); -- 0ms;
UPDATE OR ABORT t1 SET c2='-671241877'; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.5574690939549726) WHERE (((((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))))AND(((x'') NOT NULL))))AND(((t1.c64)>(x'')))); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE NULL; -- 0ms;
UPDATE OR REPLACE t1 SET c64=1.482752928E9, c1=5.67660883E8; -- 0ms;
UPDATE OR IGNORE t1 SET c1='G'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.23863339574591236 WHERE QUOTE(((((t1.c2)AND(t1.c89)))AND(t1.c1))); -- 0ms;
UPDATE t1 SET (c1)=(-1.151424946E9) WHERE ((((~ (t1.c89))))!=((t1.c1))); -- 1ms;
UPDATE OR ROLLBACK t1 SET (c64)=(x'7377') WHERE CASE t1.c89  WHEN t1.c1 THEN t1.c65 WHEN 0.6113343199148845 THEN t1.c2 WHEN -8.55495957E8 THEN t1.c1 ELSE t1.c89 END COLLATE BINARY; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(x''); -- 0ms;
UPDATE OR REPLACE t1 SET c89=')(5<~''~', c1='1044481089'; -- 0ms;
UPDATE OR FAIL t1 SET c89=0.08873626587548489; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c64='' WHERE CAST(t1.c89 AS BLOB) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.8271942961094793; -- 0ms;
UPDATE OR ABORT t1 SET c89=0.006217968495764947; -- 0ms;
UPDATE t1 SET (c65)=('') WHERE t1.c1; -- 0ms;
UPDATE t1 SET c89=0x6fcceaf6; -- 0ms;
UPDATE t1 SET (c65)=(NULL) WHERE t1.c2; -- 0ms;
UPDATE OR ROLLBACK t1 SET c65='-1397895839'; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=('-1921460065') WHERE ((((t1.c1)AND(t1.c64)))OR(t1.c64)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'accb'; -- 0ms;
UPDATE OR IGNORE t1 SET c1='<5'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE ((t1.c2) IS TRUE); -- 0ms;
UPDATE t1 SET c89='-1259426380', c64=x'3193' WHERE json_object(t1.c1, t1.c89 COLLATE BINARY); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0X1f1faa69; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.030608747587487883); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('1790220123') WHERE ((CAST(0.32325531235595395 AS BLOB))*(((((((((((((t1.c89)AND(t1.c64)))OR(t1.c65)))OR(t1.c65)))AND(t1.c2)))AND(t1.c2)))OR(t1.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('CB') WHERE ((t1.c64 COLLATE NOCASE)|((((t1.c89, t1.c64, 0.06984536946628861))==((t1.c2, t1.c1, t1.c64))))); -- 0ms;
UPDATE t1 SET c2=0.9661314236831816, c89='1101253170', c1=NULL WHERE CAST(t1.c2 AS TEXT); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0X6ece18f5, c2=x'', c65=x''; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=('~'); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(NULL) WHERE (((x''))<>(((((t1.c2))>=((t1.c1)))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('207182364') WHERE LIKE(t1.c1, t1.c64) COLLATE RTRIM; -- 0ms;
UPDATE t1 SET c89=x'', c2=x'' WHERE ((((t1.c1) IS TRUE))GLOB(((t1.c89) BETWEEN (t1.c2) AND (t1.c1)))); -- 0ms;
UPDATE OR REPLACE t1 SET (c64)=('XpQ|c') WHERE CAST(t1.c89 COLLATE BINARY AS BLOB); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.6015420434911859) WHERE t1.c64; -- 0ms;
UPDATE t1 SET (c2, c89)=(0.6648915552501427, '365224881') WHERE (((t1.c65, t1.c64, t1.c89)) BETWEEN ((CASE t1.c65  WHEN t1.c89 THEN x'' ELSE t1.c89 END, t1.c2, CAST('1983908720' AS NUMERIC))) AND ((CAST(t1.c65 AS TEXT), (NOT (t1.c89)), SQLITE_SOURCE_ID()))); -- 0ms;
UPDATE t1 SET c1='537881501'; -- 0ms;
UPDATE t1 SET (c2)=(0.5112237496435841) WHERE t1.c1; -- 0ms;
UPDATE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65='-256338737'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'b332'); -- 0ms;
UPDATE OR FAIL t1 SET (c1, c1, c65)=('-1151424946', '-1886679138', 0.623809969150082) WHERE (((t1.c1)) BETWEEN ((t1.c89)) AND ((CAST(t1.c65 AS TEXT)))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=1914990562 WHERE ((((t1.c1) IS TRUE))|(CAST(t1.c2 AS NUMERIC))); -- 0ms;
UPDATE OR REPLACE t1 SET c64=0X742b3fa8; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE CASE WHEN ((t1.c1)%(t1.c65)) THEN ((t1.c2)*(t1.c89)) ELSE ((t1.c89)OR(t1.c64)) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(1.38548182E9) WHERE x'ffc8'; -- 0ms;
UPDATE OR IGNORE t1 SET c2='' WHERE CAST((((t1.c64))!=((t1.c89))) AS INTEGER); -- 0ms;
UPDATE t1 SET (c64)=(x'') WHERE ((t1.c64 IN ()) IN ()); -- 0ms;
UPDATE OR FAIL t1 SET (c89)=(NULL); -- 0ms;
UPDATE t1 SET c1=1385481820 WHERE CASE WHEN ((t1.c65) NOTNULL) THEN LIKE(t1.c1, NULL, 'B') END; -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.6114753827173284 WHERE LIKELIHOOD(t1.c89, 0.0930503569253126) COLLATE BINARY; -- 0ms;
UPDATE t1 SET (c2, c1)=('M[3?]', 0.5240983891896946) WHERE (t1.c65 IN (((t1.c64)IS NOT(t1.c2)), ((t1.c65)!=(t1.c1)))); -- 0ms;
UPDATE t1 SET (c2)=('7') WHERE IFNULL(DISTINCT ((t1.c1)&(t1.c2)), t1.c2); -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c2, c1)=('PR', 'Fvp<', '0.36614796858082144') WHERE ((('1527661483')) BETWEEN ((NULL)) AND ((CASE WHEN t1.c64 THEN t1.c89 WHEN 0.8768777018024282 THEN t1.c65 WHEN -0.0 THEN t1.c65 END))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('-1085073352') WHERE ((t1.c89) NOT BETWEEN (0.8411518835954527) AND (t1.c2)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET c2='1641612879'; -- 0ms;
UPDATE t1 SET c89=0.32389622659051776, c89=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c89=''; -- 0ms;
UPDATE OR IGNORE t1 SET c65='635000977'; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(NULL) WHERE CASE (t1.c89 IN ())  WHEN ((t1.c64)<=(t1.c1)) THEN CASE WHEN t1.c64 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c89 THEN t1.c65 ELSE t1.c89 END WHEN CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c89 END THEN ((t1.c89) ISNULL) WHEN ((t1.c64) NOTNULL) THEN ((t1.c89) BETWEEN (t1.c1) AND (t1.c89)) ELSE ((t1.c2)-('')) END; -- 0ms;
UPDATE OR REPLACE t1 SET c2='ZW' WHERE CASE WHEN ((t1.c1) IS TRUE) THEN TRIM(t1.c65) ELSE CASE t1.c64  WHEN t1.c65 THEN t1.c64 END END; -- 0ms;
UPDATE OR IGNORE t1 SET c64='', c1=x'974d'; -- 0ms;
UPDATE OR ABORT t1 SET (c89)=('-971001750'); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.5604661550486637 WHERE t1.c89 COLLATE RTRIM; -- 0ms;
UPDATE OR ABORT t1 SET c64=x'' WHERE CASE t1.c2  WHEN t1.c89 THEN t1.c2 WHEN t1.c2 THEN t1.c2 WHEN t1.c65 THEN t1.c1 ELSE t1.c2 END COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE t1 SET (c89)=(NULL) WHERE ((((((t1.c64)!=(t1.c64)))OR(CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c89 THEN t1.c2 WHEN t1.c89 THEN t1.c64 ELSE t1.c64 END)))AND((t1.c65 IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE ((t1.c89)%(t1.c2)); -- 0ms;
UPDATE OR IGNORE t1 SET c1=-1556942765, c2=0xffffffffb7b40ec6, c1='' WHERE ((x'25d7')>(CAST(t1.c2 AS REAL))); -- 0ms;
UPDATE t1 SET (c1, c65)=(NULL, x'cd85'); -- 0ms;
UPDATE t1 SET c65='\ni鉼)g><''D', c64='uL.X2' WHERE (((CAST(x'' AS REAL)))=(((((t1.c1, t1.c1, t1.c64)) NOT BETWEEN ((-1.233135781E9, t1.c1, t1.c89)) AND ((t1.c2, t1.c2, t1.c2)))))); -- 1ms;
UPDATE OR IGNORE t1 SET (c2)=(')-Z1D{') WHERE CAST(((t1.c65)IS(t1.c65)) AS INTEGER); -- 0ms;
UPDATE OR FAIL t1 SET (c64)=(x'f093'); -- 0ms;
UPDATE t1 SET c1=x'' WHERE CAST(t1.c64 COLLATE NOCASE AS INTEGER); -- 0ms;
UPDATE t1 SET c1=x'', c2=-1264495742 WHERE LIKELY(DISTINCT t1.c65); -- 0ms;
UPDATE t1 SET (c89)=('1052829832'); -- 0ms;
UPDATE OR IGNORE t1 SET c89='-1161542996' WHERE (NOT (((x'')%(t1.c64)))); -- 0ms;
UPDATE OR ABORT t1 SET c65=0.7511541117436092 WHERE (t1.c89 IN ()) COLLATE BINARY; -- 0ms;
UPDATE OR ROLLBACK t1 SET c64=0.11913740989606869, c89='0.8919829050761907'; -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c1)=('㳣9zE5u,l嚁', '-1642093026') WHERE (((t1.c89) NOT NULL) IN (((x'') IS FALSE))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1, c65)=(NULL, 0X6868c8d9); -- 0ms;
UPDATE OR IGNORE t1 SET c65='0.3026632146030218' WHERE LIKELY(DISTINCT x'ca52') COLLATE RTRIM; -- 0ms;
UPDATE OR FAIL t1 SET (c2)=(x'') WHERE (t1.c64 IN (t1.c2)) COLLATE NOCASE; -- 0ms;
UPDATE t1 SET (c1)=(0.6125878195686917) WHERE ((0.2949521627376911) NOTNULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR FAIL t1 SET c64=-1816565897 WHERE CAST(((t1.c64) IS TRUE) AS INTEGER); -- 0ms;
UPDATE OR ABORT t1 SET c64='', c65=0.2528564807841841; -- 0ms;
UPDATE t1 SET (c65)=(NULL) WHERE CASE WHEN t1.c89 THEN t1.c64 WHEN t1.c2 THEN 0X7a16603 WHEN NULL THEN t1.c1 ELSE t1.c64 END COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c64=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c65='-937992704'; -- 0ms;
UPDATE OR FAIL t1 SET c89=0.4355842905621232 WHERE (((CAST(t1.c2 AS INTEGER)))!=(('53364785'))); -- 0ms;
UPDATE OR REPLACE t1 SET c64='1914990562', c1=x'', c89=x'7ce6' WHERE (((t1.c1 IN (t1.c64, t1.c1)))IS(((x'') BETWEEN (t1.c1) AND (t1.c64)))); -- 0ms;
UPDATE OR IGNORE t1 SET c64='0.22457107604455062' WHERE ((x'') NOT BETWEEN (CAST(t1.c89 AS REAL)) AND ((((t1.c89)) NOT BETWEEN ((t1.c89)) AND ((t1.c2))))); -- 0ms;
UPDATE OR IGNORE t1 SET c1='답?' WHERE CAST(((((x'88d8')AND(t1.c89)))OR(t1.c65)) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c89, c65)=(',怎', NULL, x'e05e') WHERE ((t1.c2) IS TRUE) COLLATE BINARY; -- 0ms;
UPDATE OR ROLLBACK t1 SET c89=x'deb3', c65=x'', c64=NULL; -- 0ms;
UPDATE OR ABORT t1 SET c89=x'', c89=x'' WHERE (((((((t1.c1)OR(t1.c89)))OR(t1.c2))))=((((t1.c89)<<(t1.c65))))); -- 0ms;
UPDATE OR FAIL t1 SET (c1, c1, c2)=(NULL, x'df0c', NULL) WHERE ((((t1.c2) ISNULL)) NOT NULL); -- 0ms;
UPDATE t1 SET c1='~/'; -- 1ms;
UPDATE OR IGNORE t1 SET (c1, c65)=(0.5530936977001277, x'ab6d'); -- 0ms;
UPDATE OR IGNORE t1 SET c89='-851342835' WHERE (~ ((((t1.c65)) NOT BETWEEN ((t1.c2)) AND ((t1.c65))))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 0ms;
UPDATE t1 SET (c65, c89)=(NULL, '6\h䘇+jx91') WHERE 0.5082040311524126; -- 0ms;
UPDATE t1 SET (c65)=(''); -- 0ms;
UPDATE t1 SET c64=NULL, c65=x'f74c'; -- 0ms;
UPDATE OR IGNORE t1 SET c89=1.68820597E8; -- 0ms;
UPDATE OR ABORT t1 SET (c64)=('-1591196964') WHERE x''; -- 0ms;
UPDATE OR IGNORE t1 SET c89='-1608479226' WHERE (((((((t1.c64))<((t1.c1))))OR(t1.c1 COLLATE NOCASE)))OR(((t1.c2)AND(t1.c89)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=NULL, c64='245189408', c65='j(U3'; -- 0ms;
UPDATE OR REPLACE t1 SET c64=0.28211621772629225 WHERE CAST(((x'')IS(t1.c64)) AS TEXT); -- 0ms;
UPDATE t1 SET (c89, c89)=(5.20831836E8, x'afd2'); -- 0ms;
UPDATE OR IGNORE t1 SET c64='1052829832'; -- 0ms;
UPDATE OR ABORT t1 SET c65=-1275329060; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c65, c2)=('0.007550103924562901', '1828703178', 0Xffffffffa8f8b5b8) WHERE (- ((t1.c65 IN (t1.c64, t1.c64)))); -- 0ms;
UPDATE t1 SET c2=0.5830782882879408 WHERE CASE WHEN ((((t1.c2)OR(t1.c65)))AND(t1.c2)) THEN ((t1.c64) BETWEEN (t1.c89) AND (t1.c89)) END; -- 0ms;
UPDATE t1 SET c65=0.725067562238485; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(NULL) WHERE ((((((t1.c89)OR(t1.c2)))AND(t1.c89)))IS(((((((((0X2849449e)AND(t1.c89)))OR(t1.c89)))OR(t1.c1)))AND(t1.c64)))); -- 0ms;
UPDATE OR FAIL t1 SET c89=x''; -- 0ms;
UPDATE OR REPLACE t1 SET (c64, c65, c89)=(0.6852042318720684, 0.5890210994738369, 'uH	A') WHERE (((t1.c89, t1.c89, t1.c2, t1.c2, t1.c1)) BETWEEN ((t1.c89, t1.c65, t1.c2, t1.c1, t1.c64)) AND ((t1.c65, t1.c89, t1.c1, '/(YL', t1.c2))) COLLATE RTRIM COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET c89=-1438396303 WHERE ((NULL) NOT BETWEEN (CASE t1.c65  WHEN NULL THEN t1.c89 END) AND (((t1.c1) IS FALSE))); -- 0ms;
UPDATE OR FAIL t1 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.4154721840694763); -- 0ms;
UPDATE OR ABORT t1 SET c1='721819624', c65=NULL; -- 0ms;
UPDATE OR FAIL t1 SET c2='zo3c79' WHERE (((((NULL, t1.c65, t1.c65)) NOT BETWEEN ((t1.c65, t1.c2, t1.c1)) AND ((t1.c64, t1.c89, t1.c64)))) NOT BETWEEN (((t1.c65) NOTNULL)) AND (TRIM(t1.c89))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('1581943639') WHERE ((((((((((t1.c65)OR(t1.c2)))OR(t1.c64)))AND(t1.c2)))OR(t1.c89)))=(t1.c64 COLLATE BINARY)); -- 0ms;
UPDATE OR REPLACE t1 SET c2=0.5652908439604748; -- 0ms;
UPDATE OR ROLLBACK t1 SET c64='-971001750' WHERE INSTR(((t1.c65) IS TRUE), (- (t1.c1))); -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c1)=(x'24ae', 0.3194968776882232) WHERE ((((t1.c2 IN ())))!=((((t1.c64)OR(t1.c64))))); -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL, c64=x'', c64=1604528822; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.3237320947879636); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL; -- 0ms;
UPDATE t1 SET c64=0Xffffffffc0cbc816; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(1099166254); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(''); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c1=x'' WHERE t1.c89; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'f291') WHERE t1.c2; -- 0ms;
UPDATE OR ABORT t1 SET c65=0xffffffff8c3f4f3c; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c89)=('9s\Dj)', 0.8279903759298668); -- 0ms;
UPDATE OR IGNORE t1 SET c64=-958675870, c2=0.0470375133779517; -- 0ms;
UPDATE OR REPLACE t1 SET (c64)=('즒wma'); -- 0ms;
UPDATE OR IGNORE t1 SET c2='871082068'; -- 0ms;
UPDATE OR ABORT t1 SET c65=-4.8827702E8, c89=-2085103287, c64=x'' WHERE CASE (((t1.c65, t1.c89, t1.c64))<=((t1.c89, t1.c1, x'')))  WHEN (((t1.c64))<=((t1.c64))) THEN ((t1.c1) NOT BETWEEN (NULL) AND (t1.c64)) ELSE t1.c2 COLLATE BINARY END; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.8919829050761907, c65=x''; -- 0ms;
UPDATE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('eu쫼0le'); -- 0ms;
UPDATE t1 SET c1='583106048', c89='-1370777911' WHERE (((t1.c65)) NOT BETWEEN ((t1.c89)) AND ((CASE 0.9604994643369095  WHEN t1.c1 THEN 'P' ELSE t1.c89 END))); -- 0ms;
UPDATE t1 SET c1=0Xffffffffcd022aeb; -- 0ms;
UPDATE OR IGNORE t1 SET c1='556657851'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'ab6d', c89=0.40564179623152996, c64='0.7795503010596846' WHERE (((t1.c89, t1.c89, t1.c2)) NOT BETWEEN ((t1.c2 COLLATE BINARY, ((t1.c2) BETWEEN (t1.c64) AND (t1.c65)), ((((t1.c89)AND(t1.c64)))AND(t1.c65)))) AND ((((t1.c1)<<(t1.c64)), x'', (t1.c1 IN (t1.c65))))); -- 0ms;
UPDATE t1 SET (c2)=(NULL); -- 0ms;
UPDATE t1 SET c2=-181740096, c89=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET c65='-465981636' WHERE ROUND(((t1.c89)|(t1.c64)), ((t1.c1)||('-1108353526'))); -- 0ms;
UPDATE t1 SET (c64, c1)=(-406309671, x'') WHERE ((+ (t1.c1)) IN (((t1.c1) NOT NULL))); -- 0ms;
UPDATE OR ABORT t1 SET c65=NULL WHERE t1.c64; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'') WHERE ((((t1.c1 COLLATE RTRIM)AND(((((((((t1.c2)AND(t1.c64)))OR(t1.c1)))AND(t1.c89)))OR(t1.c1)))))AND((((t1.c2))<>((t1.c89))))); -- 0ms;
UPDATE OR FAIL t1 SET (c65, c89)=(x'', NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.659770083631656) WHERE (((((t1.c65) IS FALSE)))!=((0.59743850613019))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.3654510610621987); -- 0ms;
UPDATE OR ROLLBACK t1 SET c64='-1714212235' WHERE (((((t1.c1)AND(t1.c64)))AND(t1.c89)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.3015487550908482); -- 0ms;
UPDATE OR ABORT t1 SET (c65)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c89='520831836' WHERE LIKELY(((t1.c1)IS NOT(t1.c1))); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(-2.034697795E9); -- 0ms;
UPDATE OR FAIL t1 SET (c2, c89)=(NULL, '207182364') WHERE ((NOT (t1.c65)) IN ()); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c64, c1)=(NULL, '348387326'); -- 0ms;
UPDATE t1 SET c64=x'' WHERE CAST(t1.c65 COLLATE BINARY AS REAL); -- 0ms;
UPDATE OR FAIL t1 SET c1='-58855952', c2=0.21733085017475107, c65=0.5204647827923454; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(0.9165037687670405) WHERE ((((((t1.c1)OR(t1.c2)))AND(t1.c89))) NOT NULL); -- 0ms;
UPDATE t1 SET (c65)=(0X4abd33a7) WHERE (((t1.c89)IS(t1.c2)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL WHERE CAST(t1.c89 AS BLOB) COLLATE BINARY COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL WHERE (- (((t1.c89) NOT BETWEEN (0.4260617172640576) AND (t1.c64)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0Xffffffffcd418a0d) WHERE (((t1.c89)) BETWEEN ((((t1.c1)|(t1.c89)))) AND ((CAST(t1.c64 AS INTEGER)))); -- 0ms;
UPDATE OR FAIL t1 SET c89=1950028055 WHERE (((((((((((((((((t1.c89 IN ()))AND((NOT (t1.c2)))))OR('bT')))AND((NOT (t1.c1)))))OR((((t1.c1))<=((t1.c2))))))OR(((t1.c2)/(t1.c64)))))AND(t1.c64 COLLATE RTRIM)))OR((t1.c89 IN (t1.c64, t1.c65)))))OR((((t1.c1)) NOT BETWEEN ((t1.c89)) AND ((t1.c64))))); -- 1ms;
UPDATE OR IGNORE t1 SET (c89)=(0.1648472155038615); -- 0ms;
UPDATE t1 SET c64=NULL; -- 0ms;
UPDATE t1 SET (c64, c89, c65)=(x'2749', 0.6077903528764046, 0.45654967444853856); -- 0ms;
UPDATE OR IGNORE t1 SET c2=2138986813; -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(NULL) WHERE json_extract(DATETIME(t1.c89, t1.c65, t1.c1, t1.c2, t1.c1, t1.c2, t1.c1), (+ (t1.c1)), SUBSTR(t1.c89, t1.c1), (((t1.c2, t1.c65, x''))<((t1.c65, t1.c89, t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65='1477905299'; -- 0ms;
UPDATE OR IGNORE t1 SET c64=772184689, c89=NULL WHERE ((NULL COLLATE RTRIM) BETWEEN (((((((((t1.c2)AND(t1.c2)))OR(t1.c1)))OR(t1.c2)))AND(t1.c64))) AND (((((NULL)OR(t1.c65)))AND(t1.c1)))); -- 0ms;
UPDATE t1 SET (c65)=(0X6777c387) WHERE (((CAST(t1.c65 AS BLOB), ((t1.c65)IS NOT(t1.c2)), CASE t1.c1  WHEN t1.c1 THEN t1.c2 END, COALESCE(DISTINCT t1.c1, t1.c64), ('F' IN ())))<>((t1.c64, t1.c89, (('775960112') ISNULL), ABS(t1.c89), ((t1.c65)==(t1.c1))))); -- 0ms;
UPDATE t1 SET c1=-565566333, c65=x'8f0f', c1='' WHERE ((((t1.c65)<>(t1.c1))) NOT BETWEEN ((~ (t1.c89))) AND (((t1.c64)OR(t1.c1)))); -- 1ms;
UPDATE t1 SET c2=NULL WHERE ((CASE t1.c1  WHEN t1.c64 THEN t1.c64 ELSE t1.c2 END)OR((('e)⥘XH.Sx8')IS NOT(t1.c64)))); -- 0ms;
UPDATE t1 SET c64=x'', c1=0.5528835280190917 WHERE (((((((((t1.c64)AND(t1.c2)))OR(t1.c2)))AND(t1.c89)))AND(NULL)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0xffffffff9c17557a) WHERE (t1.c64 IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'' WHERE IFNULL(t1.c89, 0.2813190112528914); -- 0ms;
UPDATE OR FAIL t1 SET c1=NULL; -- 0ms;
UPDATE t1 SET (c2)=('0.007550103924562901'); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0X1f555cdf WHERE (- (CASE NULL  WHEN t1.c1 THEN t1.c2 END)); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c64)=('') WHERE (((((t1.c64))<=((t1.c65))))*(((t1.c65) BETWEEN (t1.c65) AND (t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.7944315212008889 WHERE t1.c65; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1, c89)=(0.7369238757787046, '~d*6'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL) WHERE IFNULL(DISTINCT t1.c1 COLLATE RTRIM, (t1.c2 IN ())); -- 0ms;
UPDATE t1 SET (c64, c2)=(NULL, '1466655139') WHERE (CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c89 THEN t1.c65 WHEN t1.c64 THEN t1.c2 END IN ()); -- 0ms;
UPDATE OR FAIL t1 SET c89=NULL WHERE ((LTRIM(t1.c1))>>(CAST(t1.c89 AS REAL))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE ((t1.c64) BETWEEN (t1.c65) AND (t1.c89)) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET c64=x'' WHERE (~ (((0x5ddc5267)||(t1.c89)))); -- 0ms;
UPDATE OR FAIL t1 SET (c89)=(0.18851915979696543); -- 0ms;
UPDATE t1 SET (c65)=(''); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.8577178511031097); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c64, c64)=('-1033004016', 0.006217968495764947, NULL) WHERE ((CASE NULL  WHEN t1.c1 THEN t1.c65 ELSE t1.c65 END) IS FALSE); -- 1ms;
UPDATE t1 SET c89=x'' WHERE CAST(t1.c2 AS REAL) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET c89=0x4d8fd72a WHERE ((((((((CAST(t1.c89 AS NUMERIC))AND((t1.c2 IN (t1.c1)))))OR(((t1.c1)>(t1.c89)))))OR(t1.c89 COLLATE BINARY)))AND(((t1.c89)IS(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.36614796858082144; -- 0ms;
UPDATE t1 SET c64=NULL WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c1)=('1455339079', '()'); -- 0ms;
UPDATE OR FAIL t1 SET c64=0.9901677074515408, c65='#I+' WHERE ((((t1.c65)>=(t1.c65)))<<(((t1.c65)+(t1.c89)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.7952914336708504); -- 0ms;
UPDATE OR ABORT t1 SET c65='-417719561', c65=0X2721ac65; -- 0ms;
UPDATE t1 SET (c89)=(-1317161516) WHERE ((t1.c89) NOT BETWEEN ((((('1191684215')AND(t1.c1)))OR(t1.c64))) AND (CASE t1.c1  WHEN t1.c65 THEN t1.c65 END)); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=('365224881') WHERE ((((((((((((CASE WHEN t1.c89 THEN '-1151424946' END)OR(((t1.c89)-(t1.c89)))))AND(CAST(t1.c65 AS INTEGER))))OR(((t1.c1) NOT NULL))))AND((t1.c2 IN (t1.c65)))))AND((~ (t1.c2)))))OR(((t1.c64) BETWEEN (t1.c64) AND (t1.c89)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2='氃^'; -- 0ms;
UPDATE OR ABORT t1 SET (c2, c89)=(0xd26038f, '0.6263878568735209') WHERE ((((((t1.c1)OR(t1.c2)))OR(t1.c65)))-(((t1.c89)IS NOT(t1.c2)))); -- 0ms;
UPDATE t1 SET (c64)=(221958837) WHERE ABS((t1.c64 IN ())); -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c2)=('-1095388379', x''); -- 0ms;
UPDATE t1 SET c64=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE t1 SET c1=NULL WHERE '-2143498379' COLLATE BINARY; -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(0X74910d1a); -- 0ms;
UPDATE OR IGNORE t1 SET c1='^tJy#7쇄' WHERE (((((NULL, t1.c2, t1.c1)) NOT BETWEEN ((t1.c2, '1006586179', t1.c64)) AND ((t1.c89, t1.c1, t1.c65))))>=(((t1.c1) ISNULL))); -- 1ms;
UPDATE OR IGNORE t1 SET c2='Y㴽H^IB', c64=179709718 WHERE ((CAST(t1.c65 AS BLOB))+(((t1.c89)IS(NULL)))); -- 0ms;
UPDATE t1 SET (c89)=(1273556815) WHERE (+ (((((t1.c1)AND(t1.c1)))AND(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('-1276199130'); -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c89, c89)=('8\n(oK挩?<', 5.36958468E8, 'DU'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=-1608479226 WHERE load_extension((t1.c1 IN ())); -- 0ms;
UPDATE t1 SET c65='0.5622360129172099'; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(NULL) WHERE (- (((t1.c89)IS NOT(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'' WHERE (NOT (HEX(DISTINCT t1.c89))); -- 0ms;
UPDATE t1 SET c1=1.482752928E9 WHERE (((t1.c1 IN (t1.c2))) NOTNULL); -- 0ms;
UPDATE t1 SET c2=NULL WHERE CASE WHEN ((t1.c2) IS TRUE) THEN CASE t1.c1  WHEN t1.c2 THEN t1.c2 ELSE t1.c65 END END; -- 0ms;
UPDATE t1 SET c1=1.351268349E9; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'61a0f338') WHERE (((t1.c64)>=(t1.c64)) IN (t1.c2)); -- 0ms;
UPDATE OR IGNORE t1 SET c1='598670911'; -- 0ms;
UPDATE t1 SET (c64, c2)=('168820597', x'3bad') WHERE (~ (t1.c65 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE t1 SET (c1)=(0.7034708475789984); -- 0ms;
UPDATE t1 SET c64=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1)=('-120701476', '1215351548') WHERE ((CASE WHEN 0.09362392978230549 THEN t1.c1 END) NOT NULL); -- 1ms;
UPDATE OR IGNORE t1 SET (c1)=(0.8524203884055145) WHERE (t1.c64 IN ()); -- 0ms;
UPDATE t1 SET (c65)=(NULL) WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL, c89=NULL; -- 0ms;
UPDATE t1 SET (c64)=(NULL) WHERE (((t1.c89)) NOT BETWEEN ((LOWER(t1.c1))) AND ((((t1.c64) IS TRUE)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(-855554339) WHERE CASE UPPER(DISTINCT x'cf16')  WHEN (~ (t1.c64)) THEN t1.c89 ELSE ((t1.c1)||(t1.c89)) END; -- 0ms;
UPDATE t1 SET c64=0.18907633710709815; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(0.13499149485336226); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR REPLACE t1 SET c2=x'', c2='' WHERE (NOT (t1.c2 COLLATE RTRIM)); -- 0ms;
UPDATE OR REPLACE t1 SET c1=NULL WHERE ((CASE t1.c2  WHEN t1.c2 THEN 0.49901369406991414 WHEN t1.c65 THEN t1.c64 WHEN NULL THEN t1.c2 ELSE t1.c1 END)LIKE(RTRIM(t1.c1))); -- 0ms;
UPDATE t1 SET c64='-1698327027', c65='-2041054445', c2='|' WHERE (NOT (NULL)); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(1601958530); -- 0ms;
UPDATE t1 SET (c2, c1)=('Lꂑwi', x'ce73') WHERE ((t1.c2)<=(((t1.c2)IS NOT(t1.c1)))); -- 0ms;
UPDATE t1 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c89=')f' WHERE COALESCE(DISTINCT ((t1.c89)&(t1.c2)), t1.c64 COLLATE NOCASE); -- 0ms;
UPDATE OR IGNORE t1 SET c89=x'3c3a'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'1544'; -- 0ms;
UPDATE OR IGNORE t1 SET c65='24', c89='387850105'; -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL; -- 1ms;
UPDATE OR IGNORE t1 SET (c65)=('p%U쨲q₎㏓bꩇ') WHERE (+ (((t1.c2)&(t1.c64)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c65, c65)=('1457768100', NULL, x'9c14') WHERE CAST(596554485 AS REAL) COLLATE NOCASE; -- 0ms;
UPDATE t1 SET c64='' WHERE ((t1.c65) IS FALSE); -- 0ms;
UPDATE t1 SET c2='d\rhZ)S꬘' WHERE ((CASE t1.c89  WHEN t1.c2 THEN t1.c64 WHEN t1.c89 THEN t1.c65 WHEN t1.c65 THEN t1.c89 END)>=((((t1.c89))>=((t1.c89))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c64)=(0xffffffffccce1172, x'843bbf4c'); -- 0ms;
UPDATE OR REPLACE t1 SET (c89, c89)=('E|SpKQ\r+I', 0.7998995046400418) WHERE (((((t1.c1))>=((t1.c2)))) IS TRUE); -- 0ms;
UPDATE OR ABORT t1 SET (c64)=(0.9280487765573688) WHERE ((t1.c89 COLLATE RTRIM)>=(((t1.c65)&(t1.c64)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(-205570788) WHERE (((t1.c64 IN ()))>=(CAST(t1.c64 AS INTEGER))); -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c2)=(NULL, '0.007550103924562901'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=-1928793345; -- 0ms;
UPDATE t1 SET c2=0.9470171428518758, c1=x'225447e9', c2=NULL; -- 0ms;
UPDATE OR REPLACE t1 SET (c1, c64)=(x'6dc7', '556077255'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c1='169119239' WHERE CAST('-558432543' AS INTEGER); -- 0ms;
UPDATE t1 SET c65=0.5633822886378581, c1=0.4502569137040511 WHERE ((x'eae0396c')OR(t1.c1)); -- 0ms;
UPDATE OR FAIL t1 SET c64=1501568245, c89='1121533359', c89=x'6579'; -- 0ms;
UPDATE OR IGNORE t1 SET c89='0.7034708475789984' WHERE (LIKELY(t1.c2) IN ()); -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=(x'') WHERE NULL; -- 1ms;
UPDATE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c65=-2039452663; -- 0ms;
UPDATE OR FAIL t1 SET (c64, c1)=('836737204', NULL) WHERE ((t1.c89)>=(NULL)); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'') WHERE t1.c1; -- 0ms;
UPDATE OR FAIL t1 SET (c89)=('k') WHERE LAST_INSERT_ROWID(); -- 0ms;
UPDATE OR REPLACE t1 SET c65=x'' WHERE (((t1.c65 IN ())) BETWEEN ((+ (0.701904678214441))) AND (((t1.c2)IS(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=1880390413, c1=x'' WHERE ((((((t1.c89) NOT BETWEEN (t1.c2) AND (t1.c64)))AND(CASE t1.c89  WHEN t1.c1 THEN t1.c89 ELSE 2087157128 END)))OR(CAST(NULL AS REAL))); -- 0ms;
UPDATE t1 SET (c1)=(NULL) WHERE TYPEOF('1908707504'); -- 0ms;
UPDATE OR IGNORE t1 SET c89='435887853' WHERE (((x''))==((CAST(t1.c89 AS INTEGER)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE json_extract(t1.c64 COLLATE RTRIM, CAST(t1.c65 AS BLOB)); -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c89='-579154361' WHERE (((((t1.c64) NOTNULL)))>=(((+ (t1.c2))))); -- 0ms;
UPDATE t1 SET (c1)=('1121533359') WHERE CASE ((((t1.c2)OR(t1.c89)))AND(t1.c65))  WHEN (+ (t1.c64)) THEN ((t1.c1) IS FALSE) WHEN t1.c1 THEN NULL WHEN CAST(t1.c89 AS REAL) THEN ((t1.c2) IS TRUE) ELSE t1.c89 END; -- 0ms;
UPDATE OR IGNORE t1 SET c65=1.604528822E9, c1='596554485', c2=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c2=''; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c89='-1491401641', c2=0.6080992264295372; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c2)=(NULL, NULL); -- 0ms;
UPDATE OR FAIL t1 SET c89=0.5048240462686817 WHERE json_object(x'99dc', ((t1.c89)|(t1.c2))); -- 1ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE (NOT (CASE t1.c89  WHEN 0.8129108397027616 THEN t1.c2 END)); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.8874220400837151, c1=NULL, c1=0X4ff10ac; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c1)=(x'', x''); -- 0ms;
UPDATE OR REPLACE t1 SET c65='f%' WHERE ((CAST(t1.c89 AS INTEGER)) BETWEEN (t1.c2 COLLATE RTRIM) AND (((t1.c2)>=(t1.c64)))); -- 0ms;
UPDATE OR FAIL t1 SET c64='ZQ'; -- 0ms;
UPDATE OR IGNORE t1 SET c64=NULL WHERE ((CASE WHEN t1.c65 THEN t1.c2 ELSE t1.c1 END)OR(0Xffffffffec2ced1d)); -- 0ms;
UPDATE OR ABORT t1 SET (c2)=('598670911'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL) WHERE t1.c89 COLLATE RTRIM; -- 0ms;
UPDATE t1 SET (c89)=(0X2b77de7a) WHERE NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL; -- 0ms;
UPDATE OR REPLACE t1 SET c1='c'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c64=0.9861813062381792; -- 0ms;
UPDATE OR REPLACE t1 SET (c65, c64)=('1948991400', NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c2='' WHERE '-855495957'; -- 0ms;
UPDATE OR REPLACE t1 SET c89=x'4f74'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('\쇄') WHERE ((CAST(t1.c89 AS INTEGER)) IS TRUE); -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c64)=(')eH', NULL) WHERE (((t1.c65, t1.c89, t1.c2, t1.c89, NULL)) BETWEEN ((CAST(t1.c2 AS INTEGER), json_patch(t1.c64, x''), ((t1.c89)<>(t1.c64)), ((((((((t1.c2)AND(t1.c65)))OR(t1.c2)))OR(0.10871261700585699)))OR(t1.c65)), CASE WHEN t1.c89 THEN t1.c64 END)) AND (('0.7857070255418154', 'BﶧU', ((t1.c2)/(t1.c89)), ((t1.c2)-(NULL)), t1.c89))); -- 0ms;
UPDATE OR IGNORE t1 SET c1='552708111' WHERE (+ ((((t1.c2))<=((t1.c1))))); -- 0ms;
UPDATE OR IGNORE t1 SET c64='\rB7V'; -- 0ms;
UPDATE OR FAIL t1 SET c1=NULL WHERE (((((NULL)) BETWEEN ((t1.c65)) AND ((t1.c89)))) ISNULL); -- 0ms;
UPDATE OR ROLLBACK t1 SET c64=0.3742474500162424; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(912673900) WHERE ((((t1.c65)%(t1.c64))) BETWEEN (x'e041') AND (t1.c1 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.21243657126964144); -- 0ms;
UPDATE OR IGNORE t1 SET c1='2093461536' WHERE t1.c89; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.817555249479711) WHERE x'' COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET c89=x'' WHERE ((((CAST(t1.c2 AS BLOB))AND(((t1.c1)<(t1.c65)))))OR((((t1.c2, x'', t1.c65))==((t1.c89, t1.c1, t1.c1))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('-778724215') WHERE (((NULL IN ()))IS NOT(((t1.c2)OR(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('1501568245') WHERE CAST(((t1.c65)GLOB(t1.c65)) AS INTEGER); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=x'fa84f1ca' WHERE ((t1.c64) NOT BETWEEN (NULL) AND (t1.c64)) COLLATE BINARY; -- 0ms;
UPDATE t1 SET (c65)=('') WHERE t1.c2; -- 0ms;
UPDATE OR ABORT t1 SET (c64)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.5830782882879408 WHERE (+ (x'')); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c64, c89)=(0.7930096088631943, 0Xffffffffec9886ab); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(0.5622360129172099); -- 0ms;
UPDATE t1 SET c65='617572488', c64='' WHERE (((((t1.c89))>((t1.c64)))) NOT NULL); -- 0ms;
UPDATE t1 SET c65=''; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c64)=(x''); -- 0ms;
UPDATE t1 SET (c1, c89)=('', '-1405030235') WHERE t1.c64; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.00838584499242423 WHERE ((((((t1.c89))==((t1.c65))), (t1.c64 IN ()), SUBSTR(t1.c89, t1.c2)))!=(((t1.c89 IN (t1.c2, -2.041054445E9)), ((x'4acd')LIKE(t1.c2)), TYPEOF(DISTINCT t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2='g\rq', c64='-1333692628' WHERE ((TOTAL_CHANGES())<>((((t1.c89))>((t1.c1))))); -- 0ms;
UPDATE t1 SET c1='', c64='G+5!y7G' WHERE (t1.c89 IN ()) COLLATE BINARY COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('沙Z'); -- 0ms;
UPDATE t1 SET c64=0.9486544831057604; -- 0ms;
UPDATE OR IGNORE t1 SET c89='1751697625', c1=0x23adce32; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.23733430000996159 WHERE t1.c89; -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'' WHERE (((('')%(t1.c89)))*(t1.c89 COLLATE RTRIM)); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1, c64)=('', '-2039452663') WHERE t1.c1; -- 0ms;
UPDATE OR ABORT t1 SET (c64)=(0.6624085664561855) WHERE ((((t1.c64)-(t1.c89))) NOT BETWEEN ((((t1.c2, t1.c1, t1.c1, t1.c64, NULL)) NOT BETWEEN ((t1.c65, t1.c65, t1.c65, t1.c89, t1.c65)) AND ((t1.c64, t1.c64, t1.c65, t1.c1, t1.c65)))) AND (((t1.c89) NOT BETWEEN (t1.c1) AND (t1.c89)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(NULL) WHERE ((CAST(t1.c64 AS INTEGER))>>(t1.c2 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'3612'; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('1808729615') WHERE CAST(((((((((t1.c1)AND(t1.c89)))AND(t1.c2)))OR(t1.c64)))AND(t1.c89)) AS BLOB); -- 0ms;
UPDATE OR FAIL t1 SET c65=x''; -- 0ms;
UPDATE t1 SET c64='1421303825', c65=0X5f6ab7a6 WHERE t1.c89; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL, c89=x'', c64='kꢂ/'; -- 0ms;
UPDATE t1 SET c1=0.8375162930278991, c64='-2093322857'; -- 0ms;
UPDATE OR REPLACE t1 SET (c64, c1)=(0xffffffff9fd6db66, 0.9894707066673714); -- 0ms;
UPDATE t1 SET (c89)=(x'9f3e'); -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c2)=(0.6011508240415763, '1529679754'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('-1991528556') WHERE x'fdf7' COLLATE NOCASE; -- 0ms;
UPDATE t1 SET (c64)=(NULL) WHERE IFNULL(DISTINCT ((t1.c1) BETWEEN (NULL) AND (t1.c64)), t1.c1 COLLATE BINARY); -- 0ms;
UPDATE OR IGNORE t1 SET c64='1096860100'; -- 0ms;
UPDATE OR IGNORE t1 SET c64=NULL; -- 0ms;
UPDATE t1 SET (c2)=(0.5501153137726232); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'', c2='+P'; -- 0ms;
UPDATE t1 SET c1=x'', c2='468844100'; -- 0ms;
UPDATE OR FAIL t1 SET c2=x'', c64='522168937'; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL) WHERE TRIM(t1.c65 COLLATE RTRIM); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('}!L'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('') WHERE TYPEOF(((((t1.c65)OR(t1.c89)))OR(t1.c65))); -- 0ms;
UPDATE OR FAIL t1 SET (c89)=('''>Nt%k') WHERE -855495957; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(NULL) WHERE x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'351a') WHERE (((~ (t1.c64)))||(t1.c1 COLLATE NOCASE)); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(0xfffffffff908a03b); -- 0ms;
UPDATE OR ABORT t1 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(-952510726); -- 0ms;
UPDATE OR ABORT t1 SET c64=0.9105820460234807; -- 1ms;
UPDATE OR IGNORE t1 SET c64=NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c89)=(x''); -- 0ms;
UPDATE t1 SET (c65)=('7IRh{j') WHERE (- ((- (t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x''; -- 0ms;
UPDATE t1 SET (c64, c64, c2)=(x'', 5.56077255E8, NULL) WHERE ((((t1.c89)<=(t1.c89))) NOTNULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2='~M.', c89='1948991400' WHERE json_extract((('-2112609228')||(t1.c2)), CAST(t1.c65 AS REAL)); -- 0ms;
UPDATE OR FAIL t1 SET (c89)=(0.4871057148287967); -- 0ms;
UPDATE OR ABORT t1 SET c65='1174976485' WHERE CASE ((t1.c2)<>(t1.c65))  WHEN CASE WHEN t1.c1 THEN t1.c2 END THEN CAST(t1.c65 AS INTEGER) END; -- 0ms;
UPDATE OR FAIL t1 SET (c1, c64, c65)=(x'10fa', NULL, '-325548373') WHERE (((t1.c64)) BETWEEN ((((t1.c2)||(t1.c89)))) AND ((''))); -- 0ms;
UPDATE t1 SET c2=0Xb727a3b WHERE ((CAST(x'' AS TEXT))||(CASE WHEN NULL THEN t1.c65 WHEN '-2134138021' THEN t1.c65 WHEN t1.c2 THEN t1.c64 END)); -- 0ms;
UPDATE OR IGNORE t1 SET c64=x'', c89='vZᏂ.', c1=x'' WHERE ((((t1.c89) IS TRUE))>=((((t1.c65, t1.c89, t1.c1))>((t1.c64, t1.c64, t1.c89))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-1'); -- 0ms;
UPDATE t1 SET c65=-1538617002 WHERE ((((((((((t1.c2)OR(t1.c64)))OR(x'c3563373')))AND(t1.c2)))AND(1.031204038E9))) IS TRUE); -- 0ms;
UPDATE OR IGNORE t1 SET c89=-691855075 WHERE t1.c1; -- 0ms;
UPDATE t1 SET c64=-1.830126314E9; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c89)=(NULL, 'b!櫍x?'); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'' WHERE (- (((t1.c64) NOTNULL))); -- 0ms;
UPDATE t1 SET (c65, c64)=(0.3761428869817406, 0x5acf04e9) WHERE CAST(((((t1.c1)AND(t1.c89)))AND(t1.c89)) AS NUMERIC); -- 0ms;
UPDATE t1 SET c89=0.5065900507419953 WHERE TRIM(((((t1.c89)OR(t1.c2)))AND(t1.c2))); -- 1ms;
UPDATE t1 SET c1=NULL WHERE (- (json_array(t1.c64, t1.c65))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(5.56077255E8); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(-9.7100175E8); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'', c89=0.002844054462609713 WHERE (((t1.c89)||(t1.c65)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE CAST((+ (t1.c64)) AS REAL); -- 0ms;
UPDATE OR REPLACE t1 SET c2=NULL, c2=NULL, c89=0.5118096727094562 WHERE (((t1.c65)) NOT BETWEEN (((((t1.c89)) NOT BETWEEN ((t1.c65)) AND ((t1.c65))))) AND ((((t1.c89)LIKE(t1.c89))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c65, c65)=(x'', '', '6屘7i'); -- 0ms;
UPDATE OR FAIL t1 SET (c89)=('') WHERE ((UNLIKELY(t1.c2))+(CAST(t1.c89 AS TEXT))); -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c89)=(0Xffffffffeefd6061, '1'); -- 0ms;
UPDATE t1 SET (c89, c65)=(0.5759194222132653, 0.07177163888071914) WHERE NULL; -- 0ms;
UPDATE t1 SET (c89, c2, c1)=(x'1572', 0Xffffffffd92dbee2, 0.7716965798462581) WHERE (+ ((('1914990562') ISNULL))); -- 0ms;
UPDATE t1 SET (c64)=(NULL); -- 0ms;
UPDATE t1 SET c89='365224881' WHERE (t1.c65 IN ()) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET c89=''; -- 0ms;
UPDATE t1 SET (c1, c65)=(1883530529, NULL) WHERE (((t1.c2)) BETWEEN ((169163319)) AND ((t1.c64 COLLATE BINARY))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('g₎S踇R'); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(962466703); -- 0ms;
UPDATE OR ROLLBACK t1 SET c89=x'67d2'; -- 0ms;
UPDATE t1 SET (c2)=(x'e722'); -- 0ms;
UPDATE OR IGNORE t1 SET c89='-116875205' WHERE ((((t1.c2)IS(t1.c65)))GLOB(TRIM(t1.c89))); -- 0ms;
UPDATE t1 SET c1=x'', c64=NULL WHERE NULL; -- 0ms;
UPDATE OR ABORT t1 SET c65=0.5917412845254613, c89='', c89=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.644958197745164 WHERE ((((((t1.c89)) NOT BETWEEN (('-1460095560')) AND ((t1.c2)))))==((((t1.c64) NOT BETWEEN (t1.c64) AND (t1.c89))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(-1.491401641E9); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(-5.79154361E8) WHERE ((((t1.c65)>=('-1879997390'))) NOT BETWEEN (CASE t1.c1  WHEN t1.c89 THEN t1.c89 END) AND (((((t1.c89)AND(t1.c1)))AND(t1.c1)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('') WHERE (((((t1.c65)) BETWEEN ((t1.c89)) AND ((t1.c2)))) NOT BETWEEN (t1.c64 COLLATE RTRIM) AND (1629472198)); -- 0ms;
UPDATE t1 SET (c1)=(NULL) WHERE ((((((t1.c2)|(t1.c2)))AND((((t1.c65)) BETWEEN ((t1.c65)) AND ((t1.c64))))))OR(t1.c1)); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.5607350769341127) WHERE ((((0.4147157716403481)>=(t1.c2)))+(((t1.c65) IS FALSE))); -- 0ms;
UPDATE OR IGNORE t1 SET c89=7.29276026E8, c89='512381755'; -- 0ms;
UPDATE OR REPLACE t1 SET c1=0.9025283416613266 WHERE CASE ((t1.c2) NOT BETWEEN (t1.c65) AND (NULL))  WHEN ((((((((3.95302076E8)OR(t1.c2)))AND(t1.c89)))AND(t1.c2)))AND(t1.c2)) THEN (((t1.c65, 3.95098539E8, t1.c64)) NOT BETWEEN ((t1.c64, t1.c2, t1.c65)) AND ((t1.c65, t1.c89, t1.c89))) ELSE t1.c2 COLLATE RTRIM END; -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=0Xffffffffe0ef097c, c2=x'' WHERE LIKELY(LIKELY(t1.c65)); -- 0ms;
UPDATE OR ABORT t1 SET (c64)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(NULL) WHERE t1.c2; -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=(NULL) WHERE (((((t1.c89, t1.c65, t1.c2)) NOT BETWEEN ((t1.c1, t1.c64, t1.c2)) AND ((t1.c2, t1.c64, t1.c89))))<=((- (t1.c89)))); -- 0ms;
UPDATE OR REPLACE t1 SET (c1, c64)=(NULL, 0.7296879584165905) WHERE CAST(CHANGES() AS NUMERIC); -- 0ms;
UPDATE t1 SET (c1, c1, c89)=(x'', NULL, 0.8316131915288555) WHERE (((t1.c65)) NOT BETWEEN (((t1.c64 IN ()))) AND ((t1.c89))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2)=('791077062', 'pPGO'); -- 0ms;
UPDATE t1 SET c65='-1203337464', c64=1458688504 WHERE t1.c1 COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET c1=1.9489914E9, c64=0xfffffffff8d0d22c, c65=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('-1527774385'); -- 0ms;
UPDATE OR ABORT t1 SET c65='w' WHERE LIKE(t1.c1, CASE t1.c64  WHEN t1.c64 THEN t1.c65 WHEN t1.c89 THEN t1.c65 WHEN t1.c89 THEN 0.919367461746598 END, '1'); -- 0ms;
UPDATE OR IGNORE t1 SET c89='[D' WHERE (t1.c89 IN ()) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c2='-2034697795', c65=NULL; -- 0ms;
UPDATE t1 SET (c2)=(x'4392'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 0ms;
UPDATE t1 SET (c2, c65, c65)=(NULL, NULL, NULL) WHERE (~ ((((t1.c64)) NOT BETWEEN ((t1.c1)) AND ((t1.c89))))); -- 0ms;
UPDATE OR REPLACE t1 SET (c64)=('o3'); -- 0ms;
UPDATE OR FAIL t1 SET (c2)=(1.641612879E9); -- 0ms;
UPDATE OR REPLACE t1 SET c2=''; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'1f8b' WHERE NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c2=1933691553; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.18559221748748178) WHERE (- ((t1.c89 IN ()))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c89='-642821139', c89=NULL WHERE (((((t1.c89)) NOT BETWEEN ((0.7286175608708223)) AND ((t1.c64))))IS((t1.c1 IN (t1.c1)))); -- 0ms;
UPDATE t1 SET c1=0xffffffffca528d00; -- 0ms;
UPDATE OR REPLACE t1 SET c64=NULL; -- 1ms;
UPDATE t1 SET c89='ແ8' WHERE TRIM(CASE WHEN x'' THEN t1.c89 ELSE t1.c65 END); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c2)=(0.8561784474563501, NULL) WHERE CAST(t1.c2 AS REAL) COLLATE NOCASE; -- 0ms;
UPDATE OR ABORT t1 SET (c1)=(x'76a2d788'); -- 0ms;
UPDATE OR ABORT t1 SET (c64)=('') WHERE (((((t1.c65)) BETWEEN ((t1.c64)) AND ((t1.c2))))AND(t1.c65)); -- 0ms;
UPDATE OR REPLACE t1 SET c64=NULL, c64=NULL WHERE x''; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE t1.c64; -- 0ms;
UPDATE OR REPLACE t1 SET c2=x'4497', c65=-325548373 WHERE 'Mh6Tk'; -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c64, c2)=(x'', NULL, ''); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=(0.36825778773261686); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.36614796858082144); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.836444353734983; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('-68246817'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c89)=(818516593, NULL) WHERE t1.c89 COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0x212510c7) WHERE (((t1.c64))>((t1.c2))) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c2='K', c1='Z칵' WHERE (((((t1.c1)AND(t1.c1)))OR(t1.c2)) IN ()); -- 0ms;
UPDATE t1 SET (c89)=(0Xffffffffc6307902) WHERE (((t1.c64 IN ()))AND((- (t1.c65)))); -- 0ms;
UPDATE t1 SET c1=NULL, c64='2004414601', c65='' WHERE t1.c64; -- 0ms;
UPDATE OR IGNORE t1 SET c65='' WHERE ((MIN(t1.c2, t1.c64)) BETWEEN (((t1.c2)AND(t1.c64))) AND (t1.c89)); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(1.7976931348623157E308) WHERE (- (TRIM(DISTINCT t1.c89, t1.c64))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'31a8' WHERE ((ABS(t1.c2))>(((((t1.c65)AND(NULL)))AND(t1.c89)))); -- 0ms;
UPDATE OR IGNORE t1 SET c89='2007708008'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.8140466618047218) WHERE ABS(DISTINCT ((t1.c2) IS FALSE)); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0x1209b3a3) WHERE CASE t1.c89  WHEN t1.c1 THEN t1.c64 WHEN t1.c64 THEN x'' WHEN t1.c65 THEN t1.c65 ELSE t1.c2 END COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE LAST_INSERT_ROWID(); -- 0ms;
UPDATE t1 SET (c89, c64, c65)=(x'1e963025', NULL, x'') WHERE (((t1.c89 IN ()))IS((((t1.c65, t1.c64, t1.c2)) BETWEEN ((t1.c89, t1.c2, t1.c65)) AND ((t1.c1, t1.c2, t1.c1))))); -- 0ms;
UPDATE t1 SET c2=453049310 WHERE json_remove(((t1.c65) BETWEEN (t1.c65) AND (t1.c64)), ((((((((t1.c64)AND(t1.c1)))AND(t1.c65)))AND(t1.c89)))OR(t1.c89))); -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=(x'') WHERE NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET c89=0.19390469816849187, c64=''; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x'da8f'); -- 0ms;
UPDATE OR IGNORE t1 SET c89='\nW'; -- 0ms;
UPDATE t1 SET (c2, c1)=(NULL, 0.5080402951281714) WHERE (((((t1.c65)) BETWEEN ((t1.c64)) AND ((t1.c64)))) BETWEEN (((t1.c65)IS(t1.c64))) AND ((t1.c65 IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.03040293445972919) WHERE x''; -- 0ms;
UPDATE OR ABORT t1 SET c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.5879488580788738, c64='863126727'; -- 0ms;
UPDATE t1 SET c2=x'' WHERE (~ (t1.c89)) COLLATE RTRIM; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'', c89=NULL, c89=NULL; -- 0ms;
UPDATE OR REPLACE t1 SET c65='-2029015341'; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.9591395907211926 WHERE (NOT (t1.c1)); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.25885239384947667, c1=0.4479459242613356; -- 0ms;
UPDATE t1 SET (c64)=(NULL) WHERE ((0.7361487992081719 COLLATE NOCASE)=(t1.c65)); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('1641612879') WHERE t1.c65; -- 0ms;
UPDATE t1 SET c64=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR FAIL t1 SET (c2)=('*'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(924839083) WHERE (~ (CAST(t1.c2 AS BLOB))); -- 0ms;
UPDATE t1 SET c1='-2070699535'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1)=(x'', 'OY') WHERE (((((t1.c64)AND(t1.c2)))OR(t1.c65)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.45973768364545675); -- 0ms;
UPDATE t1 SET c2='674974063' WHERE ((((x'')<(t1.c65)))|((((('qiyg5')AND(t1.c64)))OR(t1.c64)))); -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c89='0.6762276018965433', c89=0.784305342210065, c1=x'' WHERE CAST((t1.c1 IN (t1.c2)) AS INTEGER); -- 0ms;
UPDATE OR FAIL t1 SET (c64)=('') WHERE (CASE t1.c1  WHEN t1.c89 THEN t1.c65 WHEN t1.c64 THEN 0.6963353088285311 WHEN t1.c89 THEN t1.c89 ELSE t1.c2 END IN ((t1.c1 IN ()), (t1.c64 IN (t1.c89)))); -- 0ms;
UPDATE t1 SET (c64)=('1816266492'); -- 0ms;
UPDATE OR REPLACE t1 SET c2=0X4f721a3a, c89=NULL; -- 0ms;
UPDATE t1 SET (c89)=(-1948014680); -- 1ms;
UPDATE OR REPLACE t1 SET (c2, c89)=('', x'4001'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0Xffffffff8a95340a, c65='^cL艒qv'; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(x'') WHERE MAX(CAST(t1.c1 AS INTEGER), LIKELIHOOD(DISTINCT t1.c64, 0.027824732214647097)); -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL, c64='<*E9eiꢆꙎ'; -- 0ms;
UPDATE OR ROLLBACK t1 SET c64='-1094180712'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=x''; -- 0ms;
UPDATE OR ABORT t1 SET (c65, c64)=('-971001750', NULL); -- 0ms;
UPDATE OR ABORT t1 SET (c65)=(0xffffffffa49f190d); -- 1ms;
UPDATE OR IGNORE t1 SET c2=0.5740612882827985; -- 0ms;
UPDATE OR IGNORE t1 SET c64=1515429120; -- 0ms;
UPDATE OR IGNORE t1 SET c1='}5570189939462853336-1046 449 4848274041693872088-R' WHERE CAST(((((((((t1.c65)OR(t1.c1)))OR(t1.c65)))OR(t1.c89)))OR(t1.c1)) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.19342776699786135 WHERE CAST(t1.c89 COLLATE BINARY AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c65, c65)=('', '-745900407', x'') WHERE t1.c89 COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(')''#e糸#'); -- 0ms;
UPDATE OR REPLACE t1 SET (c89, c1)=(0x7ec8713b, NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.960697204353387) WHERE CASE WHEN ((t1.c65) BETWEEN (t1.c89) AND (t1.c89)) THEN t1.c2 WHEN (('-1389406969')-(t1.c1)) THEN ((t1.c2) NOT BETWEEN (t1.c65) AND (t1.c89)) WHEN CAST(t1.c65 AS BLOB) THEN t1.c1 ELSE t1.c65 END; -- 0ms;
UPDATE t1 SET c64=0.7196315638685629, c64=x'' WHERE CAST(((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c64)) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t1 SET c1=''; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0x28a9c782, c2='ILJcr', c1='' WHERE (((t1.c1)) NOT BETWEEN ((x'2ad7' COLLATE RTRIM)) AND ((((t1.c64) NOT BETWEEN (t1.c64) AND (t1.c64))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(x''); -- 0ms;
UPDATE t1 SET c89=NULL, c89=x'6418'; -- 0ms;
UPDATE OR ABORT t1 SET (c89)=('133303116'); -- 0ms;
UPDATE OR IGNORE t1 SET c64=NULL, c1=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.27111808890225464) WHERE ((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c64)) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(NULL) WHERE x'8bae'; -- 0ms;
UPDATE OR REPLACE t1 SET (c89)=(NULL) WHERE t1.c1; -- 0ms;
UPDATE t1 SET (c2, c65)=('', NULL) WHERE ((t1.c65)+(t1.c89)) COLLATE BINARY COLLATE RTRIM; -- 0ms;
UPDATE OR ROLLBACK t1 SET c64=0.507764875806847; -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c64=NULL, c1=0.6061762742288281 WHERE (~ (((t1.c64) BETWEEN (t1.c89) AND (t1.c89)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c65, c64)=(0.21679475430436568, NULL, 'Ed'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c64)=(x'', 0.5250677251651306); -- 0ms;
UPDATE t1 SET c89=0.11968519320149851, c2=NULL, c2=NULL WHERE ((x'') ISNULL) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL, c65='0.1192422679551185'; -- 0ms;
UPDATE OR REPLACE t1 SET c64=0xffffffff8c1811bb; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(x'') WHERE (((+ (t1.c89)))OR(((((((((((((t1.c1)OR(t1.c89)))OR(t1.c2)))AND(t1.c1)))AND(0.25567425654087483)))OR(t1.c89)))AND(t1.c89)))); -- 1ms;
UPDATE OR REPLACE t1 SET (c65)=('-965231801'); -- 0ms;
UPDATE OR ABORT t1 SET (c64)=('-2067746278') WHERE (((((((t1.c1))==((t1.c65))))OR((t1.c64 IN ()))))OR((((t1.c65, t1.c1, t1.c1))>((t1.c64, t1.c89, t1.c64))))); -- 0ms;
UPDATE t1 SET c64='\r(?!X虤S|', c65=']/' WHERE 0Xffffffff91aeaa66; -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c1)=(NULL, x'') WHERE (((((((((((((t1.c65 IN ()))OR((~ (t1.c65)))))OR(CAST(t1.c64 AS BLOB))))OR(((t1.c2)&(t1.c89)))))OR(((((t1.c2)OR(t1.c2)))AND(t1.c1)))))AND(((t1.c64)>>(t1.c64)))))AND(((NULL) BETWEEN (t1.c2) AND (t1.c1)))); -- 0ms;
UPDATE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR REPLACE t1 SET c89=0.6171403534045603, c2=x'', c1=0.9236500432030432 WHERE (CASE WHEN t1.c65 THEN t1.c2 ELSE t1.c1 END IN ()); -- 0ms;
UPDATE OR ROLLBACK t1 SET c89=0.7106273507490019 WHERE ((((((((((t1.c89)OR('-180799363')))AND(t1.c2)))OR(t1.c65)))OR(t1.c89))) ISNULL); -- 0ms;
UPDATE t1 SET (c65)=(NULL) WHERE (t1.c1 IN (((t1.c2)&(t1.c65)))); -- 0ms;
UPDATE OR REPLACE t1 SET (c89)=('-1151424946') WHERE ((((t1.c2) ISNULL)) NOT NULL); -- 0ms;
UPDATE t1 SET c89=-939308856; -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL WHERE CASE WHEN ((t1.c2)%('驩nSd')) THEN (NOT (t1.c64)) ELSE ((0xffffffffe407c87a)>(t1.c89)) END; -- 0ms;
UPDATE OR REPLACE t1 SET (c65, c2)=(-1370777911, '') WHERE ((((((((((((((((t1.c64)AND(t1.c89)))AND(t1.c64)))OR(t1.c64)))AND(t1.c89)))OR(x'')))AND(CAST(t1.c65 AS TEXT))))OR(((t1.c1) BETWEEN (t1.c89) AND (t1.c65)))))OR(((t1.c2) NOT BETWEEN (t1.c65) AND (t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=-2107741; -- 0ms;
UPDATE t1 SET (c65, c1)=('753h', NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c65='Tbꇌ斯' WHERE ((CASE WHEN t1.c64 THEN 'FALSE' ELSE t1.c1 END)==(((t1.c89) NOT NULL))); -- 0ms;
UPDATE t1 SET c1=0xfb7534e, c89=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('0.6113343199148845') WHERE ((t1.c65 COLLATE NOCASE)*(t1.c1 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET c1='-185358194'; -- 0ms;
UPDATE OR IGNORE t1 SET c65='245189408' WHERE ((((((((t1.c2 COLLATE NOCASE)OR(((x'') BETWEEN ('g\rq') AND (t1.c89)))))AND(CAST(t1.c1 AS INTEGER))))AND(t1.c65 COLLATE BINARY)))AND((((t1.c89))>((t1.c1))))); -- 0ms;
UPDATE OR ABORT t1 SET (c1, c1)=(0Xffffffff900102cb, x'') WHERE t1.c64; -- 0ms;
UPDATE OR FAIL t1 SET c2='<4R(0' WHERE t1.c2; -- 0ms;
UPDATE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.21803496035976844; -- 0ms;
UPDATE t1 SET c2=0.3102287551962506; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=('/<fSa') WHERE CAST(CASE WHEN t1.c89 THEN t1.c2 END AS NUMERIC); -- 0ms;
UPDATE t1 SET (c1, c89)=('', NULL) WHERE ((((((((CASE WHEN t1.c65 THEN t1.c89 ELSE t1.c89 END)AND(TRIM(DISTINCT t1.c89))))AND((((t1.c2)) BETWEEN ((t1.c65)) AND ((t1.c64))))))AND(t1.c1 COLLATE RTRIM)))AND(((t1.c1)==(t1.c64)))); -- 0ms;
UPDATE t1 SET c64=NULL WHERE (((t1.c65, t1.c89, t1.c65, t1.c89, t1.c1)) NOT BETWEEN ((CAST(t1.c89 AS TEXT), (((t1.c2, t1.c1, t1.c64))!=((t1.c2, t1.c64, t1.c65))), ((((t1.c65)OR(t1.c65)))AND(t1.c89)), ((0.9512718025529373)|(t1.c89)), 'kv氉CI+(u\n')) AND ((t1.c1 COLLATE NOCASE, 0.21243657126964144, CAST(t1.c89 AS REAL), CAST(t1.c89 AS TEXT), ((((t1.c65)AND(t1.c65)))AND(t1.c64))))); -- 1ms;
UPDATE OR IGNORE t1 SET c2='>7|M\rX', c65=0x4bc70ec1 WHERE ((((((((((t1.c2)!=(NULL)))OR(CAST(t1.c2 AS NUMERIC))))OR(CASE t1.c2  WHEN t1.c89 THEN t1.c2 END)))AND(CAST(-8.51342835E8 AS BLOB))))OR(((t1.c64)OR(t1.c65)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=NULL; -- 0ms;
UPDATE t1 SET c65=x'71b1', c1=NULL, c65='_\n' WHERE (((((t1.c2, t1.c2, t1.c65)) BETWEEN ((t1.c89, '뎋 wU1~', t1.c1)) AND ((t1.c1, t1.c64, t1.c65))))*(CAST(t1.c2 AS NUMERIC))); -- 0ms;
UPDATE OR IGNORE t1 SET c64='', c89=0.3914839243244398; -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.6318547402285445 WHERE ((t1.c89) NOT BETWEEN (t1.c2) AND (0.8093268698486696)) COLLATE RTRIM; -- 0ms;
UPDATE OR ABORT t1 SET (c64, c1)=('', x''); -- 0ms;
UPDATE OR ABORT t1 SET c64=NULL, c89=']	' WHERE (UNLIKELY(t1.c89) IN ()); -- 0ms;
UPDATE t1 SET c2=x'70a4' WHERE ((t1.c64)>=(t1.c1)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'efaf'); -- 1ms;
UPDATE OR FAIL t1 SET (c64)=('3D&蓹D\'); -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c64)=(NULL, 0xffffffffb34115bf) WHERE CHANGES(); -- 0ms;
UPDATE t1 SET c64='553755413' WHERE ((UNLIKELY(DISTINCT t1.c1)) NOT BETWEEN (('208361756' IN ())) AND (load_extension(x'', 0.9670429354082745))); -- 0ms;
UPDATE t1 SET c64=NULL, c89=x'902a' WHERE CAST(((t1.c2)&(t1.c1)) AS REAL); -- 0ms;
UPDATE OR IGNORE t1 SET c89=x'', c1=NULL WHERE ((((t1.c65) NOTNULL))-((((t1.c64)) NOT BETWEEN ((t1.c1)) AND ((0.5020417366717103))))); -- 0ms;
UPDATE t1 SET c1=NULL, c1=x'77d5', c1=x'' WHERE STRFTIME((t1.c2 IN ()), ((t1.c64)IS NOT(t1.c65)), t1.c64 COLLATE NOCASE, (NOT (t1.c2)), ((0.2539851247485335)<=(t1.c64))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(NULL); -- 0ms;
UPDATE OR REPLACE t1 SET c2='' WHERE ABS('953590400'); -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=(''); -- 0ms;
UPDATE t1 SET (c64)=(NULL) WHERE LIKELY((t1.c1 IN ())); -- 0ms;
UPDATE OR ROLLBACK t1 SET c64=0x791ad877 WHERE ((((t1.c89) NOTNULL))%(((((t1.c64)OR(t1.c2)))OR(t1.c64)))); -- 0ms;
UPDATE t1 SET c1='0.8031005673931514', c89=NULL WHERE ((((t1.c64 COLLATE RTRIM)AND(((t1.c1) BETWEEN (t1.c64) AND (0.5480746257602451)))))AND(((((t1.c65)OR(t1.c1)))AND(t1.c64)))); -- 0ms;
UPDATE t1 SET (c2, c1)=('-1830126314', NULL) WHERE (((CAST(t1.c1 AS NUMERIC)))<((((t1.c2) BETWEEN (t1.c89) AND (t1.c89))))); -- 0ms;
UPDATE t1 SET (c64, c64)=(NULL, 0X9fd2d66) WHERE ((t1.c1) ISNULL); -- 0ms;
UPDATE t1 SET c64=0.15383445062980539; -- 0ms;
UPDATE OR IGNORE t1 SET c64=x'', c65=0x67c801fc WHERE t1.c65; -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c65)=('Y㴽H^IB', 0.01997512633830334); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c89, c2)=('gf<k|)', x'b7e6', '552708111') WHERE 0.9588143931781451; -- 0ms;
UPDATE t1 SET (c64)=('522168937'); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0xffffffffae4b96c9); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65, c89)=(NULL, '1233346652') WHERE ((((((((((1.604528822E9)OR(t1.c2)))OR(t1.c89)))OR(t1.c89)))AND(t1.c65))) NOT NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.9982837383717911, c2=-745900407 WHERE (((x'')) NOT BETWEEN ((((t1.c64) IS TRUE))) AND (((((x''))<=((t1.c2)))))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=1482752928, c64='' WHERE (~ (((t1.c2) BETWEEN (t1.c65) AND (t1.c64)))); -- 0ms;
UPDATE OR REPLACE t1 SET (c89, c2)=(0.722156037079911, ''); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=('') WHERE CASE WHEN t1.c65 COLLATE NOCASE THEN ((0.8923755791506666) NOT BETWEEN (t1.c65) AND (t1.c2)) WHEN ((x'')|(t1.c64)) THEN 2.6660469E7 WHEN t1.c64 THEN ((NULL) NOTNULL) ELSE ((t1.c1) ISNULL) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('-291017713') WHERE '3졺rꩡ俳._a'; -- 1ms;
UPDATE OR ROLLBACK t1 SET c2=NULL; -- 0ms;
UPDATE t1 SET (c89)=(133303116) WHERE (((t1.c89)) NOT BETWEEN ((((((t1.c89)OR(t1.c2)))AND(t1.c2)))) AND ((t1.c2 COLLATE RTRIM))); -- 0ms;
UPDATE t1 SET (c65)=(NULL) WHERE CAST(t1.c89 COLLATE NOCASE AS REAL); -- 0ms;
UPDATE t1 SET (c89)=(0.7795503010596846) WHERE (((t1.c65) ISNULL) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c64='0.8005092500234494'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0X14b77070) WHERE (- (((t1.c1)>=(t1.c89)))); -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(''); -- 0ms;
UPDATE OR IGNORE t1 SET c1='400874647', c64=''; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.13007220473350634) WHERE CAST(((t1.c1) ISNULL) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(x'6188') WHERE (NOT (t1.c65)); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0.9575393137933721) WHERE CAST(t1.c65 AS TEXT) COLLATE RTRIM COLLATE BINARY; -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=NULL WHERE ((((t1.c64) NOTNULL)) NOTNULL); -- 0ms;
UPDATE t1 SET c89='0.16698565676591703', c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(576350876); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0xe9d4b20); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0xffffffffdc6c49f2; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE t1.c89; -- 0ms;
UPDATE OR ROLLBACK t1 SET c64=0.5679752918952797 WHERE t1.c64; -- 0ms;
UPDATE t1 SET (c89)=('2027571146'); -- 0ms;
UPDATE OR ABORT t1 SET c2=NULL, c1=1445453029; -- 0ms;
UPDATE t1 SET (c2)=(x''); -- 0ms;
UPDATE t1 SET c89='' WHERE (- (t1.c64)) COLLATE BINARY; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(0.5507919066254618); -- 0ms;
UPDATE OR IGNORE t1 SET c64=NULL WHERE (((((t1.c65)>(t1.c1))))>((UNLIKELY(DISTINCT t1.c1)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c64=NULL WHERE ((t1.c89 COLLATE BINARY) NOTNULL); -- 0ms;
UPDATE OR REPLACE t1 SET (c64, c1, c64)=('-1921460065', 0Xc6b591c, 0x7f2a86f9) WHERE (NOT (((t1.c65)+(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'7217', c1=x''; -- 0ms;
UPDATE OR FAIL t1 SET (c89)=(0.37035362595161636); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0.1602779991909381) WHERE x''; -- 0ms;
UPDATE OR IGNORE t1 SET c64=x'', c1=NULL, c64=0Xffffffffceac75ca; -- 0ms;
UPDATE t1 SET c64=0.5771979566470004, c65=NULL; -- 0ms;
UPDATE t1 SET (c89)=('i{'); -- 0ms;
UPDATE OR ABORT t1 SET (c2)=(0.6470496008805882); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=('-881115739') WHERE (((t1.c2)) NOT BETWEEN ((CASE WHEN t1.c64 THEN t1.c65 ELSE t1.c65 END)) AND (((((t1.c64, t1.c1, NULL, t1.c2, NULL)) BETWEEN ((t1.c2, t1.c64, t1.c2, t1.c89, t1.c1)) AND ((t1.c1, t1.c89, t1.c64, t1.c65, t1.c89)))))); -- 0ms;
UPDATE OR ABORT t1 SET (c65)=(x'') WHERE NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL) WHERE ((t1.c65) NOT BETWEEN (t1.c89) AND (t1.c1)) COLLATE RTRIM; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(1.68820597E8); -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c1, c1)=(0.620115839141626, x'6176', x''); -- 0ms;
UPDATE OR REPLACE t1 SET c64=NULL, c2=NULL, c64=x'1569'; -- 0ms;
UPDATE OR FAIL t1 SET (c65)=(0.678591243745329) WHERE ((((((t1.c2)AND(t1.c2)))OR(t1.c2)))LIKE(SUBSTR(t1.c1, t1.c1))); -- 0ms;
UPDATE OR IGNORE t1 SET c64=x'' WHERE json_extract(((t1.c64) NOT BETWEEN (t1.c1) AND (t1.c1)), (t1.c2 IN ())); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL) WHERE (((t1.c65 IN ())) IS FALSE); -- 0ms;
UPDATE t1 SET c1='545243724'; -- 0ms;
UPDATE t1 SET (c65, c2, c1)=('ꩩU4E?Ob쭱Q', 0.9738398153685863, '-747323199'); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.8559552652244188) WHERE CAST(((((t1.c65)AND(t1.c65)))AND(t1.c64)) AS NUMERIC); -- 0ms;
UPDATE t1 SET (c2, c1)=('684925070', '') WHERE 0.37018106127786576; -- 0ms;
UPDATE t1 SET (c89, c65)=(x'', x'3e41'); -- 0ms;
UPDATE OR REPLACE t1 SET c65=x''; -- 1ms;
UPDATE OR ROLLBACK t1 SET (c64)=(0.5431616720366209) WHERE CAST(CAST(t1.c65 AS BLOB) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x''); -- 0ms;
UPDATE t1 SET (c1, c64)=(0.8031005673931514, '(d'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0x532f5e13 WHERE CASE ((((t1.c65)OR(t1.c64)))AND(t1.c89))  WHEN (- (t1.c65)) THEN ((t1.c89)GLOB(t1.c1)) ELSE ((t1.c64) IS TRUE) END; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'' WHERE t1.c89; -- 0ms;
UPDATE OR IGNORE t1 SET c89=-1018203322, c89='-1735629517', c2=NULL WHERE (CASE WHEN t1.c1 THEN t1.c89 WHEN t1.c64 THEN t1.c64 WHEN 0.620115839141626 THEN t1.c64 END IN (((t1.c89)>(0xffffffff8657fb13)), (- (t1.c65)))); -- 0ms;
UPDATE t1 SET c2='', c64=NULL; -- 0ms;
UPDATE OR ABORT t1 SET (c2, c89, c1)=('537881501', 0xffffffff8db8d6fe, x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(0.4044651707427318); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c89)=(x'', x''); -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.5904484764847943; -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL WHERE (- ((~ (t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR REPLACE t1 SET c89=NULL WHERE (CASE WHEN 0xffffffffe2e57be4 THEN t1.c1 ELSE t1.c65 END IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c2='<y', c65=7.21819624E8, c65=0X1a13ad97 WHERE t1.c2; -- 0ms;
UPDATE t1 SET c1='9Xa#C' WHERE ((t1.c2) BETWEEN (t1.c1) AND (t1.c1)) COLLATE RTRIM; -- 0ms;
UPDATE OR ABORT t1 SET (c89, c89, c64)=(0.46840473149585704, x'', 0xffffffffaf3387af) WHERE CASE WHEN (('gd.e,pf?i')AND('1478470753')) THEN ((t1.c89) ISNULL) WHEN (t1.c2 IN ()) THEN CASE WHEN t1.c2 THEN t1.c65 END WHEN IFNULL(DISTINCT t1.c89, t1.c2) THEN (~ (t1.c1)) ELSE ((t1.c2)IS(t1.c2)) END; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('') WHERE ((((t1.c64)/(t1.c64)))GLOB(CHAR(t1.c2))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=0.3842870708103773, c64=0.8561784474563501 WHERE CAST(t1.c89 COLLATE NOCASE AS NUMERIC); -- 0ms;
UPDATE OR IGNORE t1 SET c65=x'dac18620' WHERE (((t1.c2) IS TRUE) IN (((t1.c2)<=(t1.c1)))); -- 0ms;
UPDATE t1 SET c89='556077255' WHERE ((json_valid(t1.c65))IS NOT((('-1917718792') BETWEEN (t1.c65) AND (t1.c2)))); -- 0ms;
UPDATE OR REPLACE t1 SET (c65)=('KF'); -- 0ms;
UPDATE OR IGNORE t1 SET c89='473235751'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE ABS(DISTINCT (- (NULL))); -- 0ms;
UPDATE t1 SET c2=x'' WHERE (((((t1.c65)AND(t1.c2)))OR(t1.c64)) IN ()); -- 0ms;
UPDATE t1 SET c64=x''; -- 0ms;
UPDATE OR ABORT t1 SET c89=x''; -- 0ms;
UPDATE t1 SET (c2)=(x''); -- 0ms;
UPDATE t1 SET c65=0.7926908156504773 WHERE 0Xffffffffbb5ea64e; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL, c2=0X238eb2f5, c65=NULL; -- 0ms;
UPDATE t1 SET c64=NULL WHERE (((t1.c1 IN ('1Ef~', t1.c2, t1.c89)))%(((t1.c64)*(t1.c64)))); -- 0ms;
UPDATE OR IGNORE t1 SET c2='1660016405'; -- 0ms;
UPDATE OR REPLACE t1 SET (c89)=('') WHERE ((((t1.c1)==(t1.c2)))&((+ (t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE ((t1.c1)>(t1.c64)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1, c64)=(x'', 0.1130152133816481, 0.020245446299183123); -- 0ms;
UPDATE OR REPLACE t1 SET c64='-1830126314', c89='0.4044651707427318', c65=x'' WHERE CASE LIKELY(t1.c64)  WHEN (NOT (t1.c64)) THEN ((t1.c2)>(t1.c65)) WHEN ((t1.c89)GLOB(t1.c1)) THEN t1.c65 WHEN IFNULL(t1.c2, t1.c64) THEN ((t1.c65)|(t1.c89)) ELSE t1.c64 END; -- 0ms;
UPDATE OR IGNORE t1 SET c2=-1.27532906E9, c64=x'c267' WHERE 0xffffffff9bc3e65a COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET c2='_䜠', c1=x'722d', c65=-2041054445 WHERE (((t1.c64, '-860367513', t1.c89)) NOT BETWEEN ((((t1.c2)<<(t1.c65)), (~ (t1.c64)), ((t1.c1)>(t1.c65)))) AND ((((t1.c1) NOTNULL), t1.c1, t1.c89 COLLATE RTRIM))); -- 1ms;
UPDATE t1 SET (c89)=(x'') WHERE ((t1.c89) BETWEEN ((((0.7226568091242416))<=((t1.c1)))) AND (((0x580af04d)==(t1.c65)))); -- 0ms;
UPDATE OR IGNORE t1 SET c89='-1374549895' WHERE ((CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c65 END)>>(CASE WHEN t1.c64 THEN t1.c2 END)); -- 0ms;
UPDATE OR IGNORE t1 SET c89=215590546, c89='-664243601'; -- 0ms;
UPDATE t1 SET c65=0x3ef341d6 WHERE ((((((((NULL)OR(((x'')>(t1.c2)))))OR(t1.c65)))AND(t1.c2)))OR((((t1.c1)) NOT BETWEEN ((t1.c65)) AND ((t1.c2))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=('1034484258'); -- 0ms;
UPDATE t1 SET c89=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.13331760000592097, c64=x'77ff'; -- 0ms;
UPDATE OR FAIL t1 SET c89='-1608479226', c2=0.7926908156504773; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1, c2)=(-1603407817, 3.310690962530227E-4, x''); -- 0ms;
UPDATE t1 SET c89=NULL WHERE CASE WHEN json_quote(t1.c89) THEN (- (t1.c65)) WHEN CASE t1.c65  WHEN t1.c64 THEN t1.c64 END THEN CASE t1.c65  WHEN t1.c65 THEN t1.c2 ELSE t1.c65 END WHEN CAST(t1.c64 AS NUMERIC) THEN CAST(t1.c65 AS REAL) END; -- 0ms;
UPDATE OR IGNORE t1 SET c64='8' WHERE ((t1.c65 IN ()) IN (((((t1.c1)AND(t1.c65)))AND(t1.c1)))); -- 0ms;
UPDATE t1 SET c2='2g[' WHERE (((t1.c65, ((((t1.c1)OR('G]P3x\II')))OR(t1.c1)), (((t1.c2, t1.c1, t1.c64)) BETWEEN ((t1.c1, t1.c2, 0.09550843447918256)) AND ((t1.c64, t1.c89, '')))))>((CASE WHEN t1.c1 THEN t1.c64 WHEN t1.c1 THEN t1.c65 WHEN t1.c65 THEN t1.c64 END, t1.c89, ((t1.c64)<(x''))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('0.13322963160121248') WHERE (- ((t1.c65 IN (t1.c65)))); -- 0ms;
UPDATE t1 SET c64='_rsᕺ/8P'; -- 0ms;
UPDATE t1 SET c65='[]' WHERE ((((((t1.c64)OR(t1.c65)))AND(t1.c89)))/(t1.c65)); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c89, c2)=(0.4147157716403481, '-1933720542', 0.8028666537324698); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(0.7024822822415563) WHERE ((NULLIF(DISTINCT t1.c89, t1.c2))>>(((t1.c2) IS TRUE))); -- 0ms;
UPDATE OR ABORT t1 SET (c65)=('-2067630291') WHERE t1.c89; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(0.5511991545818271) WHERE t1.c65; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(x''); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(0.09505315971475903); -- 0ms;
UPDATE t1 SET c1=0.14548257704397383; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.9074185123699595, c2=0Xfffffffface56a9a; -- 0ms;
UPDATE OR IGNORE t1 SET c65='0.433371385082445'; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0Xffffffffbb5ea64e WHERE (+ (GLOB(t1.c89, t1.c2))); -- 0ms;
UPDATE OR ABORT t1 SET c1=x''; -- 0ms;
UPDATE OR ROLLBACK t1 SET c2=x'9337' WHERE '169119239'; -- 0ms;
UPDATE OR FAIL t1 SET (c89)=(-8.55495957E8) WHERE ((((t1.c1)==(0xffffffffc8c34bef)))IS NOT(t1.c89)); -- 0ms;
UPDATE t1 SET c65=0x4b578d20; -- 0ms;
UPDATE t1 SET (c2)=('1096860100') WHERE (((t1.c64)/(t1.c64)) IN ()); -- 0ms;
UPDATE OR FAIL t1 SET c64=x'e7e3' WHERE ((CASE t1.c89  WHEN t1.c89 THEN t1.c65 END) NOT BETWEEN (t1.c89) AND ((((t1.c89))<>((t1.c64))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(''); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('dm') WHERE ((((((t1.c65)OR(t1.c2)))AND(t1.c65))) NOTNULL); -- 0ms;
UPDATE OR FAIL t1 SET c65=x'' WHERE t1.c64; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c64=NULL WHERE ((((NULL) IS TRUE))%((t1.c65 IN ()))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.9736197398463953, c64=NULL, c2=-1736224666, c89='퉍>SzF}~Y' WHERE CASE CAST(t1.c2 AS REAL)  WHEN 0.9594860202039969 THEN ((((t1.c89)AND(t1.c2)))OR(t1.c89)) ELSE CAST(t1.c89 AS BLOB) END; -- 0ms;
UPDATE OR IGNORE t1 SET c64=NULL; -- 0ms;
UPDATE t1 SET (c65)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c64)=('598670911', '1999761201'); -- 0ms;
UPDATE OR ROLLBACK t1 SET c89=0.3602449853110471 WHERE t1.c2; -- 0ms;
UPDATE OR FAIL t1 SET c2=x'' WHERE t1.c1; -- 0ms;
UPDATE OR ABORT t1 SET (c1, c2)=(NULL, x'') WHERE ((((t1.c1)==(t1.c64)))&(((((t1.c1)AND(t1.c89)))OR(t1.c89)))); -- 0ms;
UPDATE OR IGNORE t1 SET c64=']3n%\'; -- 0ms;
UPDATE OR IGNORE t1 SET c1='-488277020', c64='973903333'; -- 1ms;
UPDATE OR IGNORE t1 SET c1=x'' WHERE ((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c65)))IS(((t1.c1) BETWEEN (t1.c65) AND (t1.c89)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(x'') WHERE t1.c65; -- 0ms;
UPDATE t1 SET (c65, c64)=(NULL, x'4c35'); -- 0ms;
UPDATE t1 SET (c89)=(-851342835); -- 0ms;
UPDATE OR ABORT t1 SET c64='ZJ|6BVFkc'; -- 0ms;
UPDATE OR ABORT t1 SET (c1, c2)=('473235751', 0xffffffff9e1fa61e) WHERE CASE WHEN (((t1.c1, t1.c64, t1.c1))>=((t1.c65, t1.c65, t1.c89))) THEN CASE t1.c64  WHEN NULL THEN t1.c64 END END; -- 0ms;
UPDATE OR FAIL t1 SET (c89)=(NULL) WHERE (((((t1.c1) NOT BETWEEN (t1.c64) AND (t1.c2)), ((t1.c89) ISNULL), (- (t1.c2))))<>((('1072724688' IN (t1.c89, t1.c64)), ((t1.c2) BETWEEN (t1.c64) AND (NULL)), (t1.c1 IN ())))); -- 0ms;
UPDATE OR IGNORE t1 SET c2='', c2=0.7701996611187227; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(0X74cc23b4) WHERE 9223372036854775807; -- 0ms;
UPDATE t1 SET c89=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=('1544688122'); -- 0ms;
UPDATE OR ABORT t1 SET (c1)=(0Xfffffffff2943a2a); -- 0ms;
UPDATE OR IGNORE t1 SET c1=''; -- 0ms;
UPDATE t1 SET (c89)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c1='-218908388' WHERE CAST(((0.2012902350274749) NOT BETWEEN (t1.c89) AND (t1.c65)) AS REAL); -- 0ms;
UPDATE t1 SET (c1, c89)=(x'2c13', 0.17816657569042693); -- 0ms;
UPDATE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR FAIL t1 SET c65=0.501984465644084; -- 0ms;
UPDATE OR FAIL t1 SET c64=NULL; -- 0ms;
UPDATE t1 SET c89=NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2, c89)=('0.7196315638685629', x'a0814fcf'); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'1234') WHERE json_patch((((t1.c65)) BETWEEN ((t1.c2)) AND ((t1.c64))), ((((t1.c89)OR(t1.c1)))AND(t1.c64))); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'fdfc' WHERE '7'; -- 0ms;
UPDATE OR REPLACE t1 SET (c64)=('-1919424096') WHERE ''; -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c2)=(0.8011822541280563, x'9c7ef5ce') WHERE (((t1.c89 IN ()))|(((t1.c65)>>(t1.c2)))); -- 0ms;
UPDATE t1 SET (c2)=(-1.637305753E9) WHERE (((+ (t1.c2)))>>(0.953069893204359)); -- 0ms;
UPDATE OR ROLLBACK t1 SET c64=x'', c64='444349288', c64=0.4063774771102251; -- 0ms;
UPDATE OR ABORT t1 SET (c89, c89)=(NULL, '168820597') WHERE ((((t1.c1, t1.c89, t1.c64)) NOT BETWEEN ((t1.c1, t1.c2, t1.c65)) AND ((t1.c1, t1.c2, t1.c1))) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL) WHERE CAST(((t1.c89) NOT BETWEEN (t1.c89) AND (NULL)) AS REAL); -- 0ms;
UPDATE t1 SET c89=x'7743', c89=0xffffffff8fc05316 WHERE (NOT (((t1.c89)-(t1.c89)))); -- 0ms;
UPDATE OR ABORT t1 SET (c64)=(NULL) WHERE (- (((t1.c89) NOT BETWEEN (t1.c1) AND (-1838178870)))); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'' WHERE (((((~ (t1.c89)))OR(t1.c89 COLLATE NOCASE)))OR(t1.c2)); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'') WHERE (((CAST(t1.c1 AS TEXT), (+ (t1.c64)), LTRIM(t1.c2, t1.c89)))!=((t1.c64, (~ (t1.c89)), (((t1.c1))<>((t1.c65)))))); -- 0ms;
UPDATE t1 SET c1=NULL WHERE NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c65)=('0.5679752918952797'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=1.086237885E9; -- 0ms;
UPDATE t1 SET (c65)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.7348794575331581 WHERE ((((x'') BETWEEN (t1.c1) AND (t1.c65))) BETWEEN (IFNULL(t1.c89, t1.c65)) AND (CAST(t1.c89 AS INTEGER))); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c64, c65)=('', NULL) WHERE ((((((((t1.c89)OR(t1.c64)))AND(t1.c64)))AND(0X40b8f63e)))AND(CAST(t1.c89 AS INTEGER))); -- 0ms;
UPDATE t1 SET c64=x'', c1=NULL; -- 0ms;
UPDATE t1 SET (c64)=(0.6377820224473887); -- 0ms;
UPDATE OR ABORT t1 SET (c89)=('?JG''') WHERE CAST((((t1.c65, t1.c2, t1.c89)) BETWEEN ((t1.c89, t1.c89, t1.c2)) AND ((t1.c64, t1.c65, t1.c89))) AS BLOB); -- 0ms;
UPDATE t1 SET (c65)=(-1779557198); -- 0ms;
UPDATE t1 SET (c1)=('S!'); -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(1291395640) WHERE t1.c89; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(0xffffffffcd022aeb); -- 0ms;
UPDATE t1 SET c1=0.7649585353048688; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(''); -- 1ms;
UPDATE OR IGNORE t1 SET (c89)=(x''); -- 0ms;
UPDATE t1 SET c64='#/v33*''\', c2=9.73903333E8 WHERE NULL; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c2)=(NULL) WHERE ((CASE WHEN t1.c65 THEN t1.c65 WHEN t1.c64 THEN t1.c2 WHEN t1.c89 THEN t1.c65 ELSE t1.c1 END) IS TRUE); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL); -- 0ms;
UPDATE OR FAIL t1 SET c65=NULL WHERE (((((t1.c65)!=(t1.c65))))>=(((- (t1.c64))))); -- 0ms;
UPDATE OR IGNORE t1 SET (c64)=(1948991400); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('UP1uF#Y'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL, c1='0.5530936977001277'; -- 0ms;
UPDATE OR ABORT t1 SET (c65)=(NULL) WHERE ((t1.c89) NOTNULL); -- 1ms;
UPDATE OR IGNORE t1 SET c89='1948991400' WHERE ((json_quote(t1.c2)) IS FALSE); -- 0ms;
UPDATE t1 SET c2=''; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c65=x'cd1f'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c2)=(0.551528410131929, NULL) WHERE CAST(t1.c64 AS TEXT) COLLATE RTRIM; -- 0ms;
UPDATE OR ROLLBACK t1 SET c64='0.13007220473350634' WHERE t1.c2; -- 0ms;
UPDATE OR FAIL t1 SET c65='1272483374' WHERE ((t1.c1 COLLATE RTRIM) NOTNULL); -- 0ms;
UPDATE t1 SET c1=0xffffffff9da69989; -- 0ms;
UPDATE t1 SET c2='0', c65=''; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c1)=(NULL, 1.69119239E8); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('F*!踆UMQ'); -- 0ms;
UPDATE OR ABORT t1 SET (c89, c89, c65)=(x'7eb6', 0.1744664333425937, x'') WHERE (('-642047300')OR(((((t1.c1)AND(t1.c64)))OR(t1.c1)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('EcN*'); -- 0ms;
UPDATE OR ABORT t1 SET c65=NULL, c65='蠥'; -- 0ms;
UPDATE OR IGNORE t1 SET c64='0.13322963160121248', c2=0.8163547142182889 WHERE ((((((t1.c1)OR(t1.c89)))AND(t1.c65))) IS TRUE); -- 0ms;
UPDATE OR ABORT t1 SET c89='3]㍘', c2='R5'; -- 0ms;
UPDATE OR IGNORE t1 SET (c2)=('26660469'); -- 0ms;
UPDATE OR IGNORE t1 SET c89='-851342835', c64=NULL, c89='n	' WHERE CAST(((((t1.c64)AND(t1.c65)))OR(t1.c65)) AS INTEGER); -- 0ms;
UPDATE OR REPLACE t1 SET c64=x'' WHERE (((t1.c2)) NOT BETWEEN ((((t1.c89)AND(t1.c65)))) AND ((x''))); -- 0ms;
UPDATE t1 SET c1=0x15c4e3b1 WHERE (((- (t1.c89)))>(((t1.c65) NOT BETWEEN (t1.c1) AND (t1.c2)))); -- 0ms;
UPDATE t1 SET (c64)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c2=0.7236626873574021 WHERE (NOT ((((t1.c89))>((0Xffffffffb20296aa))))); -- 0ms;
UPDATE OR ABORT t1 SET (c65, c64)=(0.1192422679551185, '208361756'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE (((t1.c64 IN (t1.c1, t1.c89)))OR(CAST(t1.c2 AS BLOB))); -- 0ms;
UPDATE t1 SET (c89)=(NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c89)=(0.9881401333890817, '877526483'); -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL WHERE (+ (x'')); -- 0ms;
UPDATE OR ABORT t1 SET c89=0.30725319616270597 WHERE ((((t1.c1)>>(x'')))%('1244314412')); -- 0ms;
UPDATE OR IGNORE t1 SET c1=0Xffffffff8d08f2ff; -- 0ms;
UPDATE OR IGNORE t1 SET c65='' WHERE ((t1.c2)>=(CAST(t1.c65 AS NUMERIC))); -- 1ms;
UPDATE OR ROLLBACK t1 SET (c89, c65)=('-1459066840', x'') WHERE CAST('' AS INTEGER) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET c89=NULL WHERE ((((((t1.c89) IS FALSE))AND((((x'863d', t1.c64, t1.c1))>=((t1.c1, t1.c89, t1.c64))))))OR(((t1.c1) IS TRUE))); -- 0ms;
UPDATE OR IGNORE t1 SET c64=NULL, c2='-2034697795' WHERE (~ ((((t1.c89)) NOT BETWEEN ((t1.c65)) AND ((NULL))))); -- 0ms;
UPDATE OR IGNORE t1 SET c65='' WHERE CASE ('' IN (t1.c1))  WHEN ((t1.c64)|(t1.c89)) THEN (((t1.c64))>=((t1.c89))) ELSE ((0.27424275568158085)IS(t1.c1)) END; -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c1='L6' WHERE HEX(DISTINCT ((t1.c1) NOT NULL)); -- 0ms;
UPDATE OR IGNORE t1 SET (c65)=(NULL); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=0.9053490925609164, c89='647S+N>T'; -- 0ms;
UPDATE OR IGNORE t1 SET (c65, c1)=(x'', x''); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'' WHERE ((((t1.c64) IS FALSE))/((NOT (t1.c64)))); -- 0ms;
UPDATE t1 SET (c2)=(''); -- 0ms;
UPDATE t1 SET (c89)=(x'') WHERE ((t1.c89 COLLATE NOCASE)<<(-1.556942765E9)); -- 0ms;
UPDATE t1 SET c89=0.6640180652822176, c65='m짹BQx', c65='࠸' WHERE ((t1.c1 COLLATE BINARY)AND(CAST(t1.c2 AS REAL))); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(NULL) WHERE CASE (+ (t1.c2))  WHEN TYPEOF(DISTINCT t1.c64) THEN t1.c65 COLLATE BINARY ELSE CASE WHEN t1.c1 THEN t1.c2 END END; -- 0ms;
UPDATE t1 SET (c65)=('*!') WHERE (('&]3')>(((((((((t1.c89)OR(t1.c64)))OR(t1.c89)))OR(-976951881)))OR(t1.c65)))); -- 0ms;
UPDATE OR FAIL t1 SET c1='536958468', c2=x'3256', c2=0X3d76ecc6; -- 0ms;
UPDATE t1 SET c1=0.23016458528802364 WHERE ((((((((t1.c64 COLLATE NOCASE)AND((+ (t1.c89)))))AND(t1.c1)))OR(x'')))OR(0.6681102621956709)); -- 0ms;
UPDATE OR IGNORE t1 SET (c89, c64)=(x'', NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('WJJ&GQ'); -- 1ms;
UPDATE OR REPLACE t1 SET (c89, c89)=(-668430055, NULL); -- 0ms;
UPDATE OR FAIL t1 SET c65=0.7121812083748051; -- 0ms;
UPDATE t1 SET c65=0x7faccee6; -- 0ms;
UPDATE OR IGNORE t1 SET c65=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c64=505584895, c1=''; -- 0ms;
UPDATE OR IGNORE t1 SET c89=3.95302076E8; -- 0ms;
UPDATE OR ABORT t1 SET c1=0.5726174106195626; -- 0ms;
UPDATE OR IGNORE t1 SET (c89)=(0.4812625079688967) WHERE t1.c1; -- 0ms;
UPDATE OR IGNORE t1 SET (c64, c65, c2)=(NULL, x'', 0.8731606722350489); -- 0ms;
UPDATE OR IGNORE t1 SET c89=0.08699001529671635, c2=NULL WHERE ((t1.c1 COLLATE RTRIM) NOTNULL); -- 0ms;
UPDATE OR IGNORE t1 SET c89='0.7857070255418154', c1=NULL WHERE ((((t1.c64) NOT BETWEEN (t1.c2) AND (t1.c64)))IS NOT(t1.c1)); -- 0ms;
UPDATE OR ROLLBACK t1 SET (c64)=(0.44200129786720554); -- 0ms;
UPDATE OR REPLACE t1 SET c64=0.5514753260190224; -- 0ms;
PRAGMA main.legacy_file_format = false; -- 0ms;
INSERT OR ABORT INTO t1(c2, c64, c89, c1) VALUES (x'', '-60795843', 0Xc0b8a0d, 0.9442809325710928); -- 0ms;
INSERT OR IGNORE INTO t1(c2, c64) VALUES (0.22917011596324255, 0.786402922774271); -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA main.defer_foreign_keys = true; -- 0ms;
INSERT OR IGNORE INTO t1(c2, c64, c1) VALUES (x'', NULL, NULL); -- 0ms;
INSERT OR REPLACE INTO t1(c65) VALUES (598670911); -- 0ms;
INSERT OR REPLACE INTO t1(c64) VALUES ('0.8561784474563501'); -- 0ms;
INSERT OR IGNORE INTO t1(c89, c1, c2, c64) VALUES (1215351548, x'cdba', NULL, -1497031918); -- 0ms;
INSERT OR IGNORE INTO t1(c2) VALUES (0x1c1bff3d); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t1(c1) VALUES (0Xffffffffddb05fb8); -- 0ms;
INSERT OR IGNORE INTO t1(c65, c64, c89, c2) VALUES (x'', 0x650f1f08, '1482752928', NULL); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM t1 WHERE (((((t1.c64) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c64) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c64) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c64) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c64) NOTNULL)) IS TRUE));
SELECT * FROM t1 WHERE (((json_valid(t1.c1)) ISNULL)) ORDER BY CASE WHEN t1.c1 THEN 'Gi' WHEN t1.c89 THEN (t1.c2 IN (t1.c89)) WHEN ((t1.c1) IS TRUE) THEN (('365224881')&(t1.c89)) END;
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(t1.c1)) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN t1.c1 THEN 'Gi' WHEN t1.c89 THEN (t1.c2 IN (t1.c89)) WHEN ((t1.c1) IS TRUE) THEN (('365224881')&(t1.c89)) END);
SELECT * FROM t1 WHERE (((json_valid(t1.c1)) ISNULL)) ORDER BY CASE WHEN t1.c1 THEN 'Gi' WHEN t1.c89 THEN (t1.c2 IN (t1.c89)) WHEN ((t1.c1) IS TRUE) THEN (('365224881')&(t1.c89)) END;
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(t1.c1)) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN t1.c1 THEN 'Gi' WHEN t1.c89 THEN (t1.c2 IN (t1.c89)) WHEN ((t1.c1) IS TRUE) THEN (('365224881')&(t1.c89)) END);
SELECT * FROM t1 WHERE (((json_valid(t1.c1)) ISNULL)) ORDER BY CASE WHEN t1.c1 THEN 'Gi' WHEN t1.c89 THEN (t1.c2 IN (t1.c89)) WHEN ((t1.c1) IS TRUE) THEN (('365224881')&(t1.c89)) END;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c89)) BETWEEN (((t1.c65 IN (t1.c89, t1.c2)))) AND ((TIME(t1.c89, t1.c2, t1.c65)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c89)) BETWEEN (((t1.c65 IN (t1.c89, t1.c2)))) AND ((TIME(t1.c89, t1.c2, t1.c65))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c89)) BETWEEN (((t1.c65 IN (t1.c89, t1.c2)))) AND ((TIME(t1.c89, t1.c2, t1.c65)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c89)) BETWEEN (((t1.c65 IN (t1.c89, t1.c2)))) AND ((TIME(t1.c89, t1.c2, t1.c65))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c89)) BETWEEN (((t1.c65 IN (t1.c89, t1.c2)))) AND ((TIME(t1.c89, t1.c2, t1.c65)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (CASE WHEN t1.c1 THEN t1.c2 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN t1.c1 THEN t1.c2 END))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (CASE WHEN t1.c1 THEN t1.c2 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN t1.c1 THEN t1.c2 END))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (CASE WHEN t1.c1 THEN t1.c2 END)));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((('133303116')) BETWEEN ((t1.c65)) AND ((t1.c65))))AND((+ (t1.c89)))))OR((t1.c64 IN (t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((('133303116')) BETWEEN ((t1.c65)) AND ((t1.c65))))AND((+ (t1.c89)))))OR((t1.c64 IN (t1.c2))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((('133303116')) BETWEEN ((t1.c65)) AND ((t1.c65))))AND((+ (t1.c89)))))OR((t1.c64 IN (t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((('133303116')) BETWEEN ((t1.c65)) AND ((t1.c65))))AND((+ (t1.c89)))))OR((t1.c64 IN (t1.c2))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((('133303116')) BETWEEN ((t1.c65)) AND ((t1.c65))))AND((+ (t1.c89)))))OR((t1.c64 IN (t1.c2)))));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c65) ORDER BY json_extract(((t1.c64)%(t1.c2)), (((t1.c2))<>((t1.c65))));
SELECT SUM(count) FROM (SELECT ((t1.c65) IS TRUE)  as count FROM t1 ORDER BY json_extract(((t1.c64)%(t1.c2)), (((t1.c2))<>((t1.c65)))));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c65) ORDER BY json_extract(((t1.c64)%(t1.c2)), (((t1.c2))<>((t1.c65))));
SELECT SUM(count) FROM (SELECT ((t1.c65) IS TRUE)  as count FROM t1 ORDER BY json_extract(((t1.c64)%(t1.c2)), (((t1.c2))<>((t1.c65)))));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c65) ORDER BY json_extract(((t1.c64)%(t1.c2)), (((t1.c2))<>((t1.c65))));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c65 COLLATE NOCASE)/((((t1.c64, t1.c2, t1.c2))>((t1.c89, t1.c1, t1.c2)))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c65 COLLATE NOCASE)/((((t1.c64, t1.c2, t1.c2))>((t1.c89, t1.c1, t1.c2)))))) IS TRUE)  as count FROM t1 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c65 COLLATE NOCASE)/((((t1.c64, t1.c2, t1.c2))>((t1.c89, t1.c1, t1.c2)))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c65 COLLATE NOCASE)/((((t1.c64, t1.c2, t1.c2))>((t1.c89, t1.c1, t1.c2)))))) IS TRUE)  as count FROM t1 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c65 COLLATE NOCASE)/((((t1.c64, t1.c2, t1.c2))>((t1.c89, t1.c1, t1.c2)))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c89)) BETWEEN ((t1.c1)) AND ((t1.c1))) IN (((t1.c65)OR(t1.c65)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c89)) BETWEEN ((t1.c1)) AND ((t1.c1))) IN (((t1.c65)OR(t1.c65))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c89)) BETWEEN ((t1.c1)) AND ((t1.c1))) IN (((t1.c65)OR(t1.c65)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c89)) BETWEEN ((t1.c1)) AND ((t1.c1))) IN (((t1.c65)OR(t1.c65))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c89)) BETWEEN ((t1.c1)) AND ((t1.c1))) IN (((t1.c65)OR(t1.c65)))));
SELECT ALL * FROM t1 WHERE (((((t1.c64) BETWEEN (t1.c65) AND (t1.c2)))IS NOT(0X0)));
SELECT SUM(count) FROM (SELECT ((((((t1.c64) BETWEEN (t1.c65) AND (t1.c2)))IS NOT(0x0))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c64) BETWEEN (t1.c65) AND (t1.c2)))IS NOT(0X0)));
SELECT SUM(count) FROM (SELECT ((((((t1.c64) BETWEEN (t1.c65) AND (t1.c2)))IS NOT(0x0))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c64) BETWEEN (t1.c65) AND (t1.c2)))IS NOT(0X0)));
SELECT ALL COUNT(*) FROM t1 WHERE (NULL) ORDER BY CASE WHEN t1.c1 THEN NULL END ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN t1.c1 THEN NULL END ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (NULL) ORDER BY CASE WHEN t1.c1 THEN NULL END ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN t1.c1 THEN NULL END ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (NULL) ORDER BY CASE WHEN t1.c1 THEN NULL END ASC;
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY ((CAST(t1.c2 AS INTEGER)) NOTNULL) ASC  NULLS FIRST, t1.c65 ASC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY ((CAST(t1.c2 AS INTEGER)) NOTNULL) ASC  NULLS FIRST, t1.c65 ASC);
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY ((CAST(t1.c2 AS INTEGER)) NOTNULL) ASC  NULLS FIRST, t1.c65 ASC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY ((CAST(t1.c2 AS INTEGER)) NOTNULL) ASC  NULLS FIRST, t1.c65 ASC);
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY ((CAST(t1.c2 AS INTEGER)) NOTNULL) ASC  NULLS FIRST, t1.c65 ASC;
SELECT COUNT(*) FROM t1 WHERE ('/\rlP#&'')');
SELECT SUM(count) FROM (SELECT ALL (('/\rlP#&'')') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ('/\rlP#&'')');
SELECT SUM(count) FROM (SELECT ALL (('/\rlP#&'')') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ('/\rlP#&'')');
SELECT COUNT(*) FROM t1 WHERE (((((t1.c64, t1.c64, 4.26905943E8))!=((t1.c65, t1.c2, t1.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t1.c64, t1.c64, 4.26905943E8))<>((t1.c65, t1.c2, t1.c2))) IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c64, t1.c64, 4.26905943E8))!=((t1.c65, t1.c2, t1.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t1.c64, t1.c64, 4.26905943E8))<>((t1.c65, t1.c2, t1.c2))) IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c64, t1.c64, 4.26905943E8))!=((t1.c65, t1.c2, t1.c2))) IN ()));
SELECT * FROM t1 WHERE (((CAST(t1.c89 AS BLOB)) NOT BETWEEN (x'') AND (((0Xc777aab)|(t1.c64))))) ORDER BY (('') BETWEEN (((t1.c1) NOTNULL)) AND (((t1.c65)LIKE(t1.c65))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c89 AS BLOB)) NOT BETWEEN (x'') AND (((0Xc777aab)|(t1.c64))))) IS TRUE)  as count FROM t1 ORDER BY (('') BETWEEN (((t1.c1) NOTNULL)) AND (((t1.c65)LIKE(t1.c65)))));
SELECT * FROM t1 WHERE (((CAST(t1.c89 AS BLOB)) NOT BETWEEN (x'') AND (((0Xc777aab)|(t1.c64))))) ORDER BY (('') BETWEEN (((t1.c1) NOTNULL)) AND (((t1.c65)LIKE(t1.c65))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c89 AS BLOB)) NOT BETWEEN (x'') AND (((0Xc777aab)|(t1.c64))))) IS TRUE)  as count FROM t1 ORDER BY (('') BETWEEN (((t1.c1) NOTNULL)) AND (((t1.c65)LIKE(t1.c65)))));
SELECT * FROM t1 WHERE (((CAST(t1.c89 AS BLOB)) NOT BETWEEN (x'') AND (((0Xc777aab)|(t1.c64))))) ORDER BY (('') BETWEEN (((t1.c1) NOTNULL)) AND (((t1.c65)LIKE(t1.c65))));
SELECT ALL COUNT(*) FROM t1 WHERE (RTRIM(((t1.c89)<<(t1.c2))));
SELECT SUM(count) FROM (SELECT ((RTRIM(((t1.c89)<<(t1.c2)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (RTRIM(((t1.c89)<<(t1.c2))));
SELECT SUM(count) FROM (SELECT ((RTRIM(((t1.c89)<<(t1.c2)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (RTRIM(((t1.c89)<<(t1.c2))));
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT * FROM t1 WHERE (((((t1.c1) IS FALSE)) NOT BETWEEN (((t1.c65) BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c64)>>(t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) IS FALSE)) NOT BETWEEN (((t1.c65) BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c64)>>(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c1) IS FALSE)) NOT BETWEEN (((t1.c65) BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c64)>>(t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) IS FALSE)) NOT BETWEEN (((t1.c65) BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c64)>>(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c1) IS FALSE)) NOT BETWEEN (((t1.c65) BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c64)>>(t1.c1)))));
SELECT ALL * FROM t1 WHERE (x'' COLLATE BINARY) ORDER BY SQLITE_SOURCE_ID()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY SQLITE_SOURCE_ID()  NULLS LAST);
SELECT ALL * FROM t1 WHERE (x'' COLLATE BINARY) ORDER BY SQLITE_SOURCE_ID()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY SQLITE_SOURCE_ID()  NULLS LAST);
SELECT ALL * FROM t1 WHERE (x'' COLLATE BINARY) ORDER BY SQLITE_SOURCE_ID()  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST((t1.c2 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((t1.c2 IN ()) AS REAL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST((t1.c2 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((t1.c2 IN ()) AS REAL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST((t1.c2 IN ()) AS REAL));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c2)*(t1.c89)))!=(UNLIKELY('-1616558402'))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2)*(t1.c89)))<>(UNLIKELY('-1616558402')))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c2)*(t1.c89)))!=(UNLIKELY('-1616558402'))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2)*(t1.c89)))<>(UNLIKELY('-1616558402')))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c2)*(t1.c89)))!=(UNLIKELY('-1616558402'))));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2);
SELECT COUNT(*) FROM t1 WHERE (t1.c89);
SELECT SUM(count) FROM (SELECT ALL ((t1.c89) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c89);
SELECT SUM(count) FROM (SELECT ALL ((t1.c89) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c89);
SELECT COUNT(*) FROM t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (x'');
SELECT * FROM t1 WHERE ((((+ (t1.c1)))<((NOT (x''))))) ORDER BY ((CASE WHEN t1.c64 THEN t1.c89 WHEN t1.c2 THEN t1.c65 WHEN t1.c2 THEN t1.c1 END) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND ((((t1.c64, t1.c65, t1.c2))>((t1.c65, NULL, t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t1.c1)))<((NOT (x''))))) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c64 THEN t1.c89 WHEN t1.c2 THEN t1.c65 WHEN t1.c2 THEN t1.c1 END) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND ((((t1.c64, t1.c65, t1.c2))>((t1.c65, NULL, t1.c2))))));
SELECT * FROM t1 WHERE ((((+ (t1.c1)))<((NOT (x''))))) ORDER BY ((CASE WHEN t1.c64 THEN t1.c89 WHEN t1.c2 THEN t1.c65 WHEN t1.c2 THEN t1.c1 END) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND ((((t1.c64, t1.c65, t1.c2))>((t1.c65, NULL, t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t1.c1)))<((NOT (x''))))) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c64 THEN t1.c89 WHEN t1.c2 THEN t1.c65 WHEN t1.c2 THEN t1.c1 END) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND ((((t1.c64, t1.c65, t1.c2))>((t1.c65, NULL, t1.c2))))));
SELECT * FROM t1 WHERE ((((+ (t1.c1)))<((NOT (x''))))) ORDER BY ((CASE WHEN t1.c64 THEN t1.c89 WHEN t1.c2 THEN t1.c65 WHEN t1.c2 THEN t1.c1 END) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND ((((t1.c64, t1.c65, t1.c2))>((t1.c65, NULL, t1.c2)))));
SELECT * FROM t1 WHERE (NULL) ORDER BY 'k줪P7劣|W' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 ORDER BY 'k줪P7劣|W' DESC  NULLS LAST);
SELECT * FROM t1 WHERE (NULL) ORDER BY 'k줪P7劣|W' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 ORDER BY 'k줪P7劣|W' DESC  NULLS LAST);
SELECT * FROM t1 WHERE (NULL) ORDER BY 'k줪P7劣|W' DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c65 IN ()))OR(t1.c1 COLLATE BINARY)))OR(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c89)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c65 IN ()))OR(t1.c1 COLLATE BINARY)))OR(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c89))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c65 IN ()))OR(t1.c1 COLLATE BINARY)))OR(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c89)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c65 IN ()))OR(t1.c1 COLLATE BINARY)))OR(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c89))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c65 IN ()))OR(t1.c1 COLLATE BINARY)))OR(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c89)))));
SELECT ALL * FROM t1 WHERE ((((t1.c2)*(t1.c64)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2)*(t1.c64)) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c2)*(t1.c64)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2)*(t1.c64)) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c2)*(t1.c64)) IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c89) ORDER BY (~ (((t1.c1) BETWEEN (t1.c89) AND (t1.c89)))), (((t1.c64 IN ()))<<((+ (t1.c1)))), (+ (CAST(t1.c64 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c89) IS TRUE)  as count FROM t1 ORDER BY (~ (((t1.c1) BETWEEN (t1.c89) AND (t1.c89)))), (((t1.c64 IN ()))<<((+ (t1.c1)))), (+ (CAST(t1.c64 AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c89) ORDER BY (~ (((t1.c1) BETWEEN (t1.c89) AND (t1.c89)))), (((t1.c64 IN ()))<<((+ (t1.c1)))), (+ (CAST(t1.c64 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c89) IS TRUE)  as count FROM t1 ORDER BY (~ (((t1.c1) BETWEEN (t1.c89) AND (t1.c89)))), (((t1.c64 IN ()))<<((+ (t1.c1)))), (+ (CAST(t1.c64 AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c89) ORDER BY (~ (((t1.c1) BETWEEN (t1.c89) AND (t1.c89)))), (((t1.c64 IN ()))<<((+ (t1.c1)))), (+ (CAST(t1.c64 AS REAL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE t1.c2  WHEN t1.c65 THEN t1.c65 WHEN t1.c2 THEN x'' WHEN t1.c64 THEN t1.c2 ELSE t1.c2 END COLLATE BINARY) ORDER BY (t1.c64 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c2  WHEN t1.c65 THEN t1.c65 WHEN t1.c2 THEN x'' WHEN t1.c64 THEN t1.c2 ELSE t1.c2 END COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY (t1.c64 IN ()) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE t1.c2  WHEN t1.c65 THEN t1.c65 WHEN t1.c2 THEN x'' WHEN t1.c64 THEN t1.c2 ELSE t1.c2 END COLLATE BINARY) ORDER BY (t1.c64 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c2  WHEN t1.c65 THEN t1.c65 WHEN t1.c2 THEN x'' WHEN t1.c64 THEN t1.c2 ELSE t1.c2 END COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY (t1.c64 IN ()) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE t1.c2  WHEN t1.c65 THEN t1.c65 WHEN t1.c2 THEN x'' WHEN t1.c64 THEN t1.c2 ELSE t1.c2 END COLLATE BINARY) ORDER BY (t1.c64 IN ()) COLLATE BINARY ASC;
SELECT COUNT(*) FROM t1 WHERE (CAST(t1.c2 AS NUMERIC) COLLATE RTRIM) ORDER BY t1.c65 DESC  NULLS FIRST, (+ (((((x'')OR(t1.c64)))OR(t1.c89))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c2 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY t1.c65 DESC  NULLS FIRST, (+ (((((x'')OR(t1.c64)))OR(t1.c89))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CAST(t1.c2 AS NUMERIC) COLLATE RTRIM) ORDER BY t1.c65 DESC  NULLS FIRST, (+ (((((x'')OR(t1.c64)))OR(t1.c89))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c2 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY t1.c65 DESC  NULLS FIRST, (+ (((((x'')OR(t1.c64)))OR(t1.c89))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CAST(t1.c2 AS NUMERIC) COLLATE RTRIM) ORDER BY t1.c65 DESC  NULLS FIRST, (+ (((((x'')OR(t1.c64)))OR(t1.c89))))  NULLS FIRST;
SELECT * FROM t1 WHERE (t1.c1) ORDER BY (((((t1.c1)) NOT BETWEEN ((t1.c65)) AND ((t1.c64))))<=(((t1.c89)/(t1.c64)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c1)) NOT BETWEEN ((t1.c65)) AND ((t1.c64))))<=(((t1.c89)/(t1.c64)))) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (t1.c1) ORDER BY (((((t1.c1)) NOT BETWEEN ((t1.c65)) AND ((t1.c64))))<=(((t1.c89)/(t1.c64)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c1)) NOT BETWEEN ((t1.c65)) AND ((t1.c64))))<=(((t1.c89)/(t1.c64)))) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (t1.c1) ORDER BY (((((t1.c1)) NOT BETWEEN ((t1.c65)) AND ((t1.c64))))<=(((t1.c89)/(t1.c64)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY ((((t1.c1)GLOB(t1.c89))) BETWEEN (t1.c89) AND ((~ (t1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1)GLOB(t1.c89))) BETWEEN (t1.c89) AND ((~ (t1.c1)))));
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY ((((t1.c1)GLOB(t1.c89))) BETWEEN (t1.c89) AND ((~ (t1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1)GLOB(t1.c89))) BETWEEN (t1.c89) AND ((~ (t1.c1)))));
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY ((((t1.c1)GLOB(t1.c89))) BETWEEN (t1.c89) AND ((~ (t1.c1))));
SELECT COUNT(*) FROM t1 WHERE (((t1.c89) ISNULL) COLLATE RTRIM) ORDER BY (((t1.c64))>((t1.c64))) ASC, ((((t1.c65)<=(t1.c2))) ISNULL) DESC, ((((((((t1.c65 COLLATE BINARY)OR(CAST(t1.c2 AS REAL))))OR((((NULL))<((t1.c89))))))AND(((t1.c65)OR(t1.c89)))))OR(CASE t1.c1  WHEN t1.c1 THEN '' END)) ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c89) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY (((t1.c64))>((t1.c64))) ASC, ((((t1.c65)<=(t1.c2))) ISNULL) DESC, ((((((((t1.c65 COLLATE BINARY)OR(CAST(t1.c2 AS REAL))))OR((((NULL))<((t1.c89))))))AND(((t1.c65)OR(t1.c89)))))OR(CASE t1.c1  WHEN t1.c1 THEN '' END)) ASC);
SELECT COUNT(*) FROM t1 WHERE (((t1.c89) ISNULL) COLLATE RTRIM) ORDER BY (((t1.c64))>((t1.c64))) ASC, ((((t1.c65)<=(t1.c2))) ISNULL) DESC, ((((((((t1.c65 COLLATE BINARY)OR(CAST(t1.c2 AS REAL))))OR((((NULL))<((t1.c89))))))AND(((t1.c65)OR(t1.c89)))))OR(CASE t1.c1  WHEN t1.c1 THEN '' END)) ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c89) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY (((t1.c64))>((t1.c64))) ASC, ((((t1.c65)<=(t1.c2))) ISNULL) DESC, ((((((((t1.c65 COLLATE BINARY)OR(CAST(t1.c2 AS REAL))))OR((((NULL))<((t1.c89))))))AND(((t1.c65)OR(t1.c89)))))OR(CASE t1.c1  WHEN t1.c1 THEN '' END)) ASC);
SELECT COUNT(*) FROM t1 WHERE (((t1.c89) ISNULL) COLLATE RTRIM) ORDER BY (((t1.c64))>((t1.c64))) ASC, ((((t1.c65)<=(t1.c2))) ISNULL) DESC, ((((((((t1.c65 COLLATE BINARY)OR(CAST(t1.c2 AS REAL))))OR((((NULL))<((t1.c89))))))AND(((t1.c65)OR(t1.c89)))))OR(CASE t1.c1  WHEN t1.c1 THEN '' END)) ASC;
SELECT COUNT(*) FROM t1 WHERE (json_array(((t1.c64)>>(t1.c2)), t1.c2 COLLATE RTRIM)) ORDER BY TRIM(DISTINCT t1.c2, t1.c1) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_array(((t1.c64)>>(t1.c2)), t1.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t1 ORDER BY TRIM(DISTINCT t1.c2, t1.c1) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (json_array(((t1.c64)>>(t1.c2)), t1.c2 COLLATE RTRIM)) ORDER BY TRIM(DISTINCT t1.c2, t1.c1) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_array(((t1.c64)>>(t1.c2)), t1.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t1 ORDER BY TRIM(DISTINCT t1.c2, t1.c1) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (NULLIF(((t1.c89)%(t1.c64)), CASE 'D*'  WHEN t1.c2 THEN t1.c89 END));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((t1.c89)%(t1.c64)), CASE 'D*'  WHEN t1.c2 THEN t1.c89 END)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (NULLIF(((t1.c89)%(t1.c64)), CASE 'D*'  WHEN t1.c2 THEN t1.c89 END));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((t1.c89)%(t1.c64)), CASE 'D*'  WHEN t1.c2 THEN t1.c89 END)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (NULLIF(((t1.c89)%(t1.c64)), CASE 'D*'  WHEN t1.c2 THEN t1.c89 END));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c89)<<(t1.c1))))>(((- (t1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c89)<<(t1.c1))))>(((- (t1.c2)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c89)<<(t1.c1))))>(((- (t1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c89)<<(t1.c1))))>(((- (t1.c2)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c89)<<(t1.c1))))>(((- (t1.c2))))));
SELECT COUNT(*) FROM t1 WHERE (CASE t1.c2  WHEN t1.c2 THEN t1.c1 WHEN t1.c2 THEN 0x404ff17e WHEN '-529691009' THEN t1.c2 ELSE t1.c65 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE t1.c2  WHEN t1.c2 THEN t1.c1 WHEN t1.c2 THEN 0X404ff17e WHEN '-529691009' THEN t1.c2 ELSE t1.c65 END COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE t1.c2  WHEN t1.c2 THEN t1.c1 WHEN t1.c2 THEN 0x404ff17e WHEN '-529691009' THEN t1.c2 ELSE t1.c65 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE t1.c2  WHEN t1.c2 THEN t1.c1 WHEN t1.c2 THEN 0X404ff17e WHEN '-529691009' THEN t1.c2 ELSE t1.c65 END COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE t1.c2  WHEN t1.c2 THEN t1.c1 WHEN t1.c2 THEN 0x404ff17e WHEN '-529691009' THEN t1.c2 ELSE t1.c65 END COLLATE BINARY);
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE (((((t1.c89) BETWEEN (t1.c2) AND (t1.c65))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c89) BETWEEN (t1.c2) AND (t1.c65))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE (((((t1.c89) BETWEEN (t1.c2) AND (t1.c65))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c89) BETWEEN (t1.c2) AND (t1.c65))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE (((((t1.c89) BETWEEN (t1.c2) AND (t1.c65))) ISNULL));
SELECT COUNT(*) FROM t1 WHERE (IFNULL(CAST(t1.c2 AS INTEGER), ((t1.c1)||(t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(t1.c2 AS INTEGER), ((t1.c1)||(t1.c2)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (IFNULL(CAST(t1.c2 AS INTEGER), ((t1.c1)||(t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(t1.c2 AS INTEGER), ((t1.c1)||(t1.c2)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (IFNULL(CAST(t1.c2 AS INTEGER), ((t1.c1)||(t1.c2))));
SELECT ALL COUNT(*) FROM t1 WHERE ((- (0X6f9d6790))) ORDER BY CASE ((t1.c64) NOT NULL)  WHEN CAST(t1.c65 AS TEXT) THEN t1.c2 WHEN ((t1.c89) NOT NULL) THEN CAST(t1.c65 AS BLOB) WHEN ((((((((t1.c1)AND(t1.c1)))OR(t1.c89)))AND(t1.c2)))AND(t1.c64)) THEN t1.c65 END;
SELECT SUM(count) FROM (SELECT (((- (0x6f9d6790))) IS TRUE)  as count FROM t1 ORDER BY CASE ((t1.c64) NOT NULL)  WHEN CAST(t1.c65 AS TEXT) THEN t1.c2 WHEN ((t1.c89) NOT NULL) THEN CAST(t1.c65 AS BLOB) WHEN ((((((((t1.c1)AND(t1.c1)))OR(t1.c89)))AND(t1.c2)))AND(t1.c64)) THEN t1.c65 END);
SELECT ALL COUNT(*) FROM t1 WHERE ((- (0X6f9d6790))) ORDER BY CASE ((t1.c64) NOT NULL)  WHEN CAST(t1.c65 AS TEXT) THEN t1.c2 WHEN ((t1.c89) NOT NULL) THEN CAST(t1.c65 AS BLOB) WHEN ((((((((t1.c1)AND(t1.c1)))OR(t1.c89)))AND(t1.c2)))AND(t1.c64)) THEN t1.c65 END;
SELECT SUM(count) FROM (SELECT (((- (0x6f9d6790))) IS TRUE)  as count FROM t1 ORDER BY CASE ((t1.c64) NOT NULL)  WHEN CAST(t1.c65 AS TEXT) THEN t1.c2 WHEN ((t1.c89) NOT NULL) THEN CAST(t1.c65 AS BLOB) WHEN ((((((((t1.c1)AND(t1.c1)))OR(t1.c89)))AND(t1.c2)))AND(t1.c64)) THEN t1.c65 END);
SELECT ALL COUNT(*) FROM t1 WHERE ((- (0X6f9d6790))) ORDER BY CASE ((t1.c64) NOT NULL)  WHEN CAST(t1.c65 AS TEXT) THEN t1.c2 WHEN ((t1.c89) NOT NULL) THEN CAST(t1.c65 AS BLOB) WHEN ((((((((t1.c1)AND(t1.c1)))OR(t1.c89)))AND(t1.c2)))AND(t1.c64)) THEN t1.c65 END;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(0.14858858354251403 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.14858858354251403 AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(0.14858858354251403 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.14858858354251403 AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(0.14858858354251403 AS NUMERIC));
SELECT ALL COUNT(*) FROM t1 WHERE ((('1085863486') NOT NULL));
SELECT SUM(count) FROM (SELECT (((('1085863486') NOT NULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((('1085863486') NOT NULL));
SELECT SUM(count) FROM (SELECT (((('1085863486') NOT NULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((('1085863486') NOT NULL));
SELECT ALL * FROM t1 WHERE (CASE WHEN ((((t1.c64)AND(t1.c64)))AND(t1.c2)) THEN ((t1.c64) NOTNULL) ELSE ((t1.c2)>>(t1.c64)) END) ORDER BY ((t1.c1) BETWEEN (t1.c64) AND (t1.c65)) COLLATE NOCASE DESC, x'' DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t1.c64)AND(t1.c64)))AND(t1.c2)) THEN ((t1.c64) NOTNULL) ELSE ((t1.c2)>>(t1.c64)) END) IS TRUE)  as count FROM t1 ORDER BY ((t1.c1) BETWEEN (t1.c64) AND (t1.c65)) COLLATE NOCASE DESC, x'' DESC);
SELECT ALL * FROM t1 WHERE (CASE WHEN ((((t1.c64)AND(t1.c64)))AND(t1.c2)) THEN ((t1.c64) NOTNULL) ELSE ((t1.c2)>>(t1.c64)) END) ORDER BY ((t1.c1) BETWEEN (t1.c64) AND (t1.c65)) COLLATE NOCASE DESC, x'' DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t1.c64)AND(t1.c64)))AND(t1.c2)) THEN ((t1.c64) NOTNULL) ELSE ((t1.c2)>>(t1.c64)) END) IS TRUE)  as count FROM t1 ORDER BY ((t1.c1) BETWEEN (t1.c64) AND (t1.c65)) COLLATE NOCASE DESC, x'' DESC);
SELECT ALL * FROM t1 WHERE (CASE WHEN ((((t1.c64)AND(t1.c64)))AND(t1.c2)) THEN ((t1.c64) NOTNULL) ELSE ((t1.c2)>>(t1.c64)) END) ORDER BY ((t1.c1) BETWEEN (t1.c64) AND (t1.c65)) COLLATE NOCASE DESC, x'' DESC;
SELECT COUNT(*) FROM t1 WHERE (CAST(t1.c64 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c64 AS REAL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(t1.c64 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c64 AS REAL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(t1.c64 AS REAL));
SELECT ALL COUNT(*) FROM t1 WHERE ((('0.21679475430436568')|(((t1.c89)LIKE(t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL (((('0.21679475430436568')|(((t1.c89)LIKE(t1.c64))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((('0.21679475430436568')|(((t1.c89)LIKE(t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL (((('0.21679475430436568')|(((t1.c89)LIKE(t1.c64))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((('0.21679475430436568')|(((t1.c89)LIKE(t1.c64)))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c89) NOT NULL))+(((t1.c1) BETWEEN (t1.c65) AND (t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c89) NOT NULL))+(((t1.c1) BETWEEN (t1.c65) AND (t1.c64))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c89) NOT NULL))+(((t1.c1) BETWEEN (t1.c65) AND (t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c89) NOT NULL))+(((t1.c1) BETWEEN (t1.c65) AND (t1.c64))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c89) NOT NULL))+(((t1.c1) BETWEEN (t1.c65) AND (t1.c64)))));
SELECT * FROM t1 WHERE ((((+ (t1.c65)))!=(t1.c64 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((+ (t1.c65)))<>(t1.c64 COLLATE RTRIM))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((+ (t1.c65)))!=(t1.c64 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((+ (t1.c65)))<>(t1.c64 COLLATE RTRIM))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((+ (t1.c65)))!=(t1.c64 COLLATE RTRIM)));
SELECT ALL * FROM t1 WHERE ((- (((t1.c1)||(0.9917598165642594)))));
SELECT SUM(count) FROM (SELECT (((- (((t1.c1)||(0.9917598165642594))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((- (((t1.c1)||(0.9917598165642594)))));
SELECT SUM(count) FROM (SELECT (((- (((t1.c1)||(0.9917598165642594))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((- (((t1.c1)||(0.9917598165642594)))));
SELECT COUNT(*) FROM t1 WHERE ((((~ (t1.c89))) NOT NULL)) ORDER BY (CAST(t1.c2 AS INTEGER) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (t1.c89))) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY (CAST(t1.c2 AS INTEGER) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((~ (t1.c89))) NOT NULL)) ORDER BY (CAST(t1.c2 AS INTEGER) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (t1.c89))) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY (CAST(t1.c2 AS INTEGER) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((~ (t1.c89))) NOT NULL)) ORDER BY (CAST(t1.c2 AS INTEGER) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((- (''))) ORDER BY SQLITE_COMPILEOPTION_GET(NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (''))) IS TRUE)  as count FROM t1 ORDER BY SQLITE_COMPILEOPTION_GET(NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((- (''))) ORDER BY SQLITE_COMPILEOPTION_GET(NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (''))) IS TRUE)  as count FROM t1 ORDER BY SQLITE_COMPILEOPTION_GET(NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((- (''))) ORDER BY SQLITE_COMPILEOPTION_GET(NULL)  NULLS LAST;
SELECT * FROM t1 WHERE (CAST(((t1.c1)%(t1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c1)%(t1.c2)) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c1)%(t1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c1)%(t1.c2)) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c1)%(t1.c2)) AS INTEGER));
SELECT COUNT(*) FROM t1 WHERE (t1.c64);
SELECT SUM(count) FROM (SELECT ((t1.c64) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c64);
SELECT SUM(count) FROM (SELECT ((t1.c64) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c64);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c89 AS TEXT))IS(((t1.c65) NOT BETWEEN (t1.c64) AND (t1.c1))))) ORDER BY (((t1.c2 IN ()))+(CAST(t1.c64 AS BLOB))), CASE WHEN NULL THEN (- (t1.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c89 AS TEXT))IS(((t1.c65) NOT BETWEEN (t1.c64) AND (t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c2 IN ()))+(CAST(t1.c64 AS BLOB))), CASE WHEN NULL THEN (- (t1.c2)) END DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c89 AS TEXT))IS(((t1.c65) NOT BETWEEN (t1.c64) AND (t1.c1))))) ORDER BY (((t1.c2 IN ()))+(CAST(t1.c64 AS BLOB))), CASE WHEN NULL THEN (- (t1.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c89 AS TEXT))IS(((t1.c65) NOT BETWEEN (t1.c64) AND (t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c2 IN ()))+(CAST(t1.c64 AS BLOB))), CASE WHEN NULL THEN (- (t1.c2)) END DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c89 AS TEXT))IS(((t1.c65) NOT BETWEEN (t1.c64) AND (t1.c1))))) ORDER BY (((t1.c2 IN ()))+(CAST(t1.c64 AS BLOB))), CASE WHEN NULL THEN (- (t1.c2)) END DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2 COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2 COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2 COLLATE RTRIM);
SELECT * FROM t1 WHERE (((((((((((t1.c89)+(t1.c89)))AND(HEX(t1.c1))))OR((((t1.c89)) BETWEEN ((t1.c64)) AND ((t1.c2))))))AND(t1.c64)))OR(CAST(t1.c89 AS TEXT)))) ORDER BY (((t1.c89))<=((t1.c1))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c89)+(t1.c89)))AND(HEX(t1.c1))))OR((((t1.c89)) BETWEEN ((t1.c64)) AND ((t1.c2))))))AND(t1.c64)))OR(CAST(t1.c89 AS TEXT)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c89))<=((t1.c1))) COLLATE BINARY  NULLS LAST);
SELECT * FROM t1 WHERE (((((((((((t1.c89)+(t1.c89)))AND(HEX(t1.c1))))OR((((t1.c89)) BETWEEN ((t1.c64)) AND ((t1.c2))))))AND(t1.c64)))OR(CAST(t1.c89 AS TEXT)))) ORDER BY (((t1.c89))<=((t1.c1))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c89)+(t1.c89)))AND(HEX(t1.c1))))OR((((t1.c89)) BETWEEN ((t1.c64)) AND ((t1.c2))))))AND(t1.c64)))OR(CAST(t1.c89 AS TEXT)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c89))<=((t1.c1))) COLLATE BINARY  NULLS LAST);
SELECT * FROM t1 WHERE (((((((((((t1.c89)+(t1.c89)))AND(HEX(t1.c1))))OR((((t1.c89)) BETWEEN ((t1.c64)) AND ((t1.c2))))))AND(t1.c64)))OR(CAST(t1.c89 AS TEXT)))) ORDER BY (((t1.c89))<=((t1.c1))) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (t1.c89);
SELECT SUM(count) FROM (SELECT ((t1.c89) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c89);
SELECT SUM(count) FROM (SELECT ((t1.c89) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c89);
SELECT * FROM t1 WHERE (CASE '' COLLATE BINARY  WHEN MIN(t1.c65, t1.c64) THEN (((t1.c64)) NOT BETWEEN ((t1.c64)) AND ((NULL))) WHEN ((t1.c65)<=(t1.c1)) THEN CAST(t1.c1 AS BLOB) WHEN ((((t1.c64)OR(t1.c64)))OR(t1.c1)) THEN ((0x7f20b4c) NOT NULL) ELSE CASE WHEN t1.c89 THEN t1.c1 WHEN 0X16685792 THEN t1.c64 WHEN t1.c2 THEN t1.c1 ELSE t1.c65 END END) ORDER BY 0.5622360129172099 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE '' COLLATE BINARY  WHEN MIN(t1.c65, t1.c64) THEN (((t1.c64)) NOT BETWEEN ((t1.c64)) AND ((NULL))) WHEN ((t1.c65)<=(t1.c1)) THEN CAST(t1.c1 AS BLOB) WHEN ((((t1.c64)OR(t1.c64)))OR(t1.c1)) THEN ((0X7f20b4c) NOT NULL) ELSE CASE WHEN t1.c89 THEN t1.c1 WHEN 0X16685792 THEN t1.c64 WHEN t1.c2 THEN t1.c1 ELSE t1.c65 END END) IS TRUE)  as count FROM t1 ORDER BY 0.5622360129172099 COLLATE RTRIM  NULLS LAST);
SELECT * FROM t1 WHERE (CASE '' COLLATE BINARY  WHEN MIN(t1.c65, t1.c64) THEN (((t1.c64)) NOT BETWEEN ((t1.c64)) AND ((NULL))) WHEN ((t1.c65)<=(t1.c1)) THEN CAST(t1.c1 AS BLOB) WHEN ((((t1.c64)OR(t1.c64)))OR(t1.c1)) THEN ((0x7f20b4c) NOT NULL) ELSE CASE WHEN t1.c89 THEN t1.c1 WHEN 0X16685792 THEN t1.c64 WHEN t1.c2 THEN t1.c1 ELSE t1.c65 END END) ORDER BY 0.5622360129172099 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE '' COLLATE BINARY  WHEN MIN(t1.c65, t1.c64) THEN (((t1.c64)) NOT BETWEEN ((t1.c64)) AND ((NULL))) WHEN ((t1.c65)<=(t1.c1)) THEN CAST(t1.c1 AS BLOB) WHEN ((((t1.c64)OR(t1.c64)))OR(t1.c1)) THEN ((0X7f20b4c) NOT NULL) ELSE CASE WHEN t1.c89 THEN t1.c1 WHEN 0X16685792 THEN t1.c64 WHEN t1.c2 THEN t1.c1 ELSE t1.c65 END END) IS TRUE)  as count FROM t1 ORDER BY 0.5622360129172099 COLLATE RTRIM  NULLS LAST);
SELECT * FROM t1 WHERE (CASE '' COLLATE BINARY  WHEN MIN(t1.c65, t1.c64) THEN (((t1.c64)) NOT BETWEEN ((t1.c64)) AND ((NULL))) WHEN ((t1.c65)<=(t1.c1)) THEN CAST(t1.c1 AS BLOB) WHEN ((((t1.c64)OR(t1.c64)))OR(t1.c1)) THEN ((0x7f20b4c) NOT NULL) ELSE CASE WHEN t1.c89 THEN t1.c1 WHEN 0X16685792 THEN t1.c64 WHEN t1.c2 THEN t1.c1 ELSE t1.c65 END END) ORDER BY 0.5622360129172099 COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((1001548675 IN ((((t1.c1, 0X1bf47f6b, t1.c1, t1.c65, t1.c1)) BETWEEN ((0.13322963160121248, t1.c89, t1.c65, t1.c64, t1.c64)) AND ((t1.c64, t1.c65, t1.c1, t1.c65, t1.c89))))));
SELECT SUM(count) FROM (SELECT (((1001548675 IN ((((t1.c1, 0x1bf47f6b, t1.c1, t1.c65, t1.c1)) BETWEEN ((0.13322963160121248, t1.c89, t1.c65, t1.c64, t1.c64)) AND ((t1.c64, t1.c65, t1.c1, t1.c65, t1.c89)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((1001548675 IN ((((t1.c1, 0X1bf47f6b, t1.c1, t1.c65, t1.c1)) BETWEEN ((0.13322963160121248, t1.c89, t1.c65, t1.c64, t1.c64)) AND ((t1.c64, t1.c65, t1.c1, t1.c65, t1.c89))))));
SELECT SUM(count) FROM (SELECT (((1001548675 IN ((((t1.c1, 0x1bf47f6b, t1.c1, t1.c65, t1.c1)) BETWEEN ((0.13322963160121248, t1.c89, t1.c65, t1.c64, t1.c64)) AND ((t1.c64, t1.c65, t1.c1, t1.c65, t1.c89)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((1001548675 IN ((((t1.c1, 0X1bf47f6b, t1.c1, t1.c65, t1.c1)) BETWEEN ((0.13322963160121248, t1.c89, t1.c65, t1.c64, t1.c64)) AND ((t1.c64, t1.c65, t1.c1, t1.c65, t1.c89))))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c89) IS FALSE))OR(x'')))AND(((t1.c89)IS(t1.c65)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c89) IS FALSE))OR(x'')))AND(((t1.c89)IS(t1.c65))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c89) IS FALSE))OR(x'')))AND(((t1.c89)IS(t1.c65)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c89) IS FALSE))OR(x'')))AND(((t1.c89)IS(t1.c65))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c89) IS FALSE))OR(x'')))AND(((t1.c89)IS(t1.c65)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((TRIM(DISTINCT t1.c2)) IS FALSE)) ORDER BY NULL DESC  NULLS FIRST, ((t1.c65)|(x'')) DESC, ((((((0.971193066184604)AND(t1.c65)))OR(t1.c89))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t1.c2)) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY NULL DESC  NULLS FIRST, ((t1.c65)|(x'')) DESC, ((((((0.971193066184604)AND(t1.c65)))OR(t1.c89))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((TRIM(DISTINCT t1.c2)) IS FALSE)) ORDER BY NULL DESC  NULLS FIRST, ((t1.c65)|(x'')) DESC, ((((((0.971193066184604)AND(t1.c65)))OR(t1.c89))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t1.c2)) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY NULL DESC  NULLS FIRST, ((t1.c65)|(x'')) DESC, ((((((0.971193066184604)AND(t1.c65)))OR(t1.c89))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((TRIM(DISTINCT t1.c2)) IS FALSE)) ORDER BY NULL DESC  NULLS FIRST, ((t1.c65)|(x'')) DESC, ((((((0.971193066184604)AND(t1.c65)))OR(t1.c89))) NOTNULL) DESC;
SELECT * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(CAST(t1.c89 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(CAST(t1.c89 AS BLOB))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(CAST(t1.c89 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(CAST(t1.c89 AS BLOB))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(CAST(t1.c89 AS BLOB)));
SELECT ALL * FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c2);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c65 AS REAL)) BETWEEN (CAST(t1.c2 AS BLOB)) AND (load_extension(t1.c1, t1.c64))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c65 AS REAL)) BETWEEN (CAST(t1.c2 AS BLOB)) AND (load_extension(t1.c1, t1.c64)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c65 AS REAL)) BETWEEN (CAST(t1.c2 AS BLOB)) AND (load_extension(t1.c1, t1.c64))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c65 AS REAL)) BETWEEN (CAST(t1.c2 AS BLOB)) AND (load_extension(t1.c1, t1.c64)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c64 IN (((t1.c2) NOT BETWEEN (NULL) AND (t1.c1)), (((t1.c65)) BETWEEN (('0.8744632084786957')) AND ((t1.c89))))));
SELECT SUM(count) FROM (SELECT ALL (((t1.c64 IN (((t1.c2) NOT BETWEEN (NULL) AND (t1.c1)), (((t1.c65)) BETWEEN (('0.8744632084786957')) AND ((t1.c89)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c64 IN (((t1.c2) NOT BETWEEN (NULL) AND (t1.c1)), (((t1.c65)) BETWEEN (('0.8744632084786957')) AND ((t1.c89))))));
SELECT SUM(count) FROM (SELECT ALL (((t1.c64 IN (((t1.c2) NOT BETWEEN (NULL) AND (t1.c1)), (((t1.c65)) BETWEEN (('0.8744632084786957')) AND ((t1.c89)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c64 IN (((t1.c2) NOT BETWEEN (NULL) AND (t1.c1)), (((t1.c65)) BETWEEN (('0.8744632084786957')) AND ((t1.c89))))));
SELECT COUNT(*) FROM t1 WHERE (CASE ((((((((t1.c1)AND(t1.c64)))AND(t1.c89)))OR(t1.c1)))AND(t1.c2))  WHEN ((t1.c2) IS TRUE) THEN COALESCE(t1.c89, t1.c89, t1.c1, 437803184) ELSE 'lz_?ꌫ9ak ' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((t1.c1)AND(t1.c64)))AND(t1.c89)))OR(t1.c1)))AND(t1.c2))  WHEN ((t1.c2) IS TRUE) THEN COALESCE(t1.c89, t1.c89, t1.c1, 437803184) ELSE 'lz_?ꌫ9ak ' END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE ((((((((t1.c1)AND(t1.c64)))AND(t1.c89)))OR(t1.c1)))AND(t1.c2))  WHEN ((t1.c2) IS TRUE) THEN COALESCE(t1.c89, t1.c89, t1.c1, 437803184) ELSE 'lz_?ꌫ9ak ' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((t1.c1)AND(t1.c64)))AND(t1.c89)))OR(t1.c1)))AND(t1.c2))  WHEN ((t1.c2) IS TRUE) THEN COALESCE(t1.c89, t1.c89, t1.c1, 437803184) ELSE 'lz_?ꌫ9ak ' END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE ((((((((t1.c1)AND(t1.c64)))AND(t1.c89)))OR(t1.c1)))AND(t1.c2))  WHEN ((t1.c2) IS TRUE) THEN COALESCE(t1.c89, t1.c89, t1.c1, 437803184) ELSE 'lz_?ꌫ9ak ' END);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2)) NOT BETWEEN ((((t1.c64)<(t1.c65)))) AND ((((t1.c65)GLOB(t1.c1)))))) ORDER BY (- (((t1.c65)==('ZI⼩rr{{'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2)) NOT BETWEEN ((((t1.c64)<(t1.c65)))) AND ((((t1.c65)GLOB(t1.c1)))))) IS TRUE)  as count FROM t1 ORDER BY (- (((t1.c65)==('ZI⼩rr{{'))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2)) NOT BETWEEN ((((t1.c64)<(t1.c65)))) AND ((((t1.c65)GLOB(t1.c1)))))) ORDER BY (- (((t1.c65)==('ZI⼩rr{{'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2)) NOT BETWEEN ((((t1.c64)<(t1.c65)))) AND ((((t1.c65)GLOB(t1.c1)))))) IS TRUE)  as count FROM t1 ORDER BY (- (((t1.c65)==('ZI⼩rr{{'))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2)) NOT BETWEEN ((((t1.c64)<(t1.c65)))) AND ((((t1.c65)GLOB(t1.c1)))))) ORDER BY (- (((t1.c65)==('ZI⼩rr{{'))))  NULLS FIRST;
SELECT * FROM t1 WHERE (CAST(CASE WHEN t1.c2 THEN t1.c64 ELSE t1.c64 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t1.c2 THEN t1.c64 ELSE t1.c64 END AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(CASE WHEN t1.c2 THEN t1.c64 ELSE t1.c64 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t1.c2 THEN t1.c64 ELSE t1.c64 END AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(CASE WHEN t1.c2 THEN t1.c64 ELSE t1.c64 END AS INTEGER));
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE ((((((t1.c89))>=((t1.c89))))>(t1.c64 COLLATE BINARY))) ORDER BY CASE WHEN t1.c65 THEN ((t1.c2)!=(t1.c1)) WHEN CASE t1.c65  WHEN t1.c1 THEN t1.c65 ELSE 1643210664 END THEN t1.c89 WHEN '133364822' THEN ']9)떸#' END, CASE WHEN (t1.c64 IN ()) THEN -1232107650 ELSE ((((t1.c1)OR(x'')))OR(t1.c2)) END  NULLS LAST, LOWER(HEX(DISTINCT t1.c1)), ((t1.c64) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c89))>=((t1.c89))))>(t1.c64 COLLATE BINARY))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN t1.c65 THEN ((t1.c2)!=(t1.c1)) WHEN CASE t1.c65  WHEN t1.c1 THEN t1.c65 ELSE 1643210664 END THEN t1.c89 WHEN '133364822' THEN ']9)떸#' END, CASE WHEN (t1.c64 IN ()) THEN -1232107650 ELSE ((((t1.c1)OR(x'')))OR(t1.c2)) END  NULLS LAST, LOWER(HEX(DISTINCT t1.c1)), ((t1.c64) ISNULL) DESC);
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE ((((((t1.c89))>=((t1.c89))))>(t1.c64 COLLATE BINARY))) ORDER BY CASE WHEN t1.c65 THEN ((t1.c2)!=(t1.c1)) WHEN CASE t1.c65  WHEN t1.c1 THEN t1.c65 ELSE 1643210664 END THEN t1.c89 WHEN '133364822' THEN ']9)떸#' END, CASE WHEN (t1.c64 IN ()) THEN -1232107650 ELSE ((((t1.c1)OR(x'')))OR(t1.c2)) END  NULLS LAST, LOWER(HEX(DISTINCT t1.c1)), ((t1.c64) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c89))>=((t1.c89))))>(t1.c64 COLLATE BINARY))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN t1.c65 THEN ((t1.c2)!=(t1.c1)) WHEN CASE t1.c65  WHEN t1.c1 THEN t1.c65 ELSE 1643210664 END THEN t1.c89 WHEN '133364822' THEN ']9)떸#' END, CASE WHEN (t1.c64 IN ()) THEN -1232107650 ELSE ((((t1.c1)OR(x'')))OR(t1.c2)) END  NULLS LAST, LOWER(HEX(DISTINCT t1.c1)), ((t1.c64) ISNULL) DESC);
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE ((((((t1.c89))>=((t1.c89))))>(t1.c64 COLLATE BINARY))) ORDER BY CASE WHEN t1.c65 THEN ((t1.c2)!=(t1.c1)) WHEN CASE t1.c65  WHEN t1.c1 THEN t1.c65 ELSE 1643210664 END THEN t1.c89 WHEN '133364822' THEN ']9)떸#' END, CASE WHEN (t1.c64 IN ()) THEN -1232107650 ELSE ((((t1.c1)OR(x'')))OR(t1.c2)) END  NULLS LAST, LOWER(HEX(DISTINCT t1.c1)), ((t1.c64) ISNULL) DESC;
SELECT * FROM t1 WHERE (CASE ((((((((t1.c64)OR(t1.c2)))AND(0.4025647111900277)))OR(x'')))OR('g\rq'))  WHEN ((t1.c1) IS TRUE) THEN (~ (t1.c1)) END) ORDER BY ((COALESCE(DISTINCT t1.c64, t1.c1, t1.c89, t1.c65))=('-488277020'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((t1.c64)OR(t1.c2)))AND(0.4025647111900277)))OR(x'')))OR('g\rq'))  WHEN ((t1.c1) IS TRUE) THEN (~ (t1.c1)) END) IS TRUE)  as count FROM t1 ORDER BY ((COALESCE(DISTINCT t1.c64, t1.c1, t1.c89, t1.c65))=('-488277020'))  NULLS LAST);
SELECT * FROM t1 WHERE (CASE ((((((((t1.c64)OR(t1.c2)))AND(0.4025647111900277)))OR(x'')))OR('g\rq'))  WHEN ((t1.c1) IS TRUE) THEN (~ (t1.c1)) END) ORDER BY ((COALESCE(DISTINCT t1.c64, t1.c1, t1.c89, t1.c65))=('-488277020'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((t1.c64)OR(t1.c2)))AND(0.4025647111900277)))OR(x'')))OR('g\rq'))  WHEN ((t1.c1) IS TRUE) THEN (~ (t1.c1)) END) IS TRUE)  as count FROM t1 ORDER BY ((COALESCE(DISTINCT t1.c64, t1.c1, t1.c89, t1.c65))=('-488277020'))  NULLS LAST);
SELECT * FROM t1 WHERE (CASE ((((((((t1.c64)OR(t1.c2)))AND(0.4025647111900277)))OR(x'')))OR('g\rq'))  WHEN ((t1.c1) IS TRUE) THEN (~ (t1.c1)) END) ORDER BY ((COALESCE(DISTINCT t1.c64, t1.c1, t1.c89, t1.c65))=('-488277020'))  NULLS LAST;
SELECT * FROM t1 WHERE (((+ (t1.c65)) IN ())) ORDER BY UNLIKELY(DISTINCT CASE t1.c2  WHEN t1.c2 THEN x'' WHEN t1.c2 THEN t1.c64 WHEN t1.c89 THEN t1.c89 END);
SELECT SUM(count) FROM (SELECT ((((+ (t1.c65)) IN ())) IS TRUE)  as count FROM t1 ORDER BY UNLIKELY(DISTINCT CASE t1.c2  WHEN t1.c2 THEN x'' WHEN t1.c2 THEN t1.c64 WHEN t1.c89 THEN t1.c89 END));
SELECT * FROM t1 WHERE (((+ (t1.c65)) IN ())) ORDER BY UNLIKELY(DISTINCT CASE t1.c2  WHEN t1.c2 THEN x'' WHEN t1.c2 THEN t1.c64 WHEN t1.c89 THEN t1.c89 END);
SELECT SUM(count) FROM (SELECT ((((+ (t1.c65)) IN ())) IS TRUE)  as count FROM t1 ORDER BY UNLIKELY(DISTINCT CASE t1.c2  WHEN t1.c2 THEN x'' WHEN t1.c2 THEN t1.c64 WHEN t1.c89 THEN t1.c89 END));
SELECT * FROM t1 WHERE (((+ (t1.c65)) IN ())) ORDER BY UNLIKELY(DISTINCT CASE t1.c2  WHEN t1.c2 THEN x'' WHEN t1.c2 THEN t1.c64 WHEN t1.c89 THEN t1.c89 END);
SELECT ALL COUNT(*) FROM t1 WHERE (((MAX('1697196814', t1.c89)) ISNULL)) ORDER BY t1.c2, '-58169424' ASC  NULLS LAST, (((((t1.c2) NOT BETWEEN (t1.c89) AND (t1.c2))))==((0.08445718946255654)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((MAX('1697196814', t1.c89)) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY t1.c2, '-58169424' ASC  NULLS LAST, (((((t1.c2) NOT BETWEEN (t1.c89) AND (t1.c2))))==((0.08445718946255654)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((MAX('1697196814', t1.c89)) ISNULL)) ORDER BY t1.c2, '-58169424' ASC  NULLS LAST, (((((t1.c2) NOT BETWEEN (t1.c89) AND (t1.c2))))==((0.08445718946255654)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((MAX('1697196814', t1.c89)) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY t1.c2, '-58169424' ASC  NULLS LAST, (((((t1.c2) NOT BETWEEN (t1.c89) AND (t1.c2))))==((0.08445718946255654)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((MAX('1697196814', t1.c89)) ISNULL)) ORDER BY t1.c2, '-58169424' ASC  NULLS LAST, (((((t1.c2) NOT BETWEEN (t1.c89) AND (t1.c2))))==((0.08445718946255654)))  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((x'') NOT BETWEEN (((NULL)*(t1.c2))) AND (((t1.c65)==(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (((NULL)*(t1.c2))) AND (((t1.c65)==(t1.c2))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((x'') NOT BETWEEN (((NULL)*(t1.c2))) AND (((t1.c65)==(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (((NULL)*(t1.c2))) AND (((t1.c65)==(t1.c2))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((x'') NOT BETWEEN (((NULL)*(t1.c2))) AND (((t1.c65)==(t1.c2)))));
SELECT ALL * FROM t1 WHERE ((((((t1.c64)) NOT BETWEEN (('FX')) AND (('p(X|wici'))))<(((((((((t1.c2)OR(t1.c65)))OR(0.20215257997287028)))AND(t1.c65)))OR(t1.c89)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c64)) NOT BETWEEN (('FX')) AND (('p(X|wici'))))<(((((((((t1.c2)OR(t1.c65)))OR(0.20215257997287028)))AND(t1.c65)))OR(t1.c89))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((t1.c64)) NOT BETWEEN (('FX')) AND (('p(X|wici'))))<(((((((((t1.c2)OR(t1.c65)))OR(0.20215257997287028)))AND(t1.c65)))OR(t1.c89)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c64)) NOT BETWEEN (('FX')) AND (('p(X|wici'))))<(((((((((t1.c2)OR(t1.c65)))OR(0.20215257997287028)))AND(t1.c65)))OR(t1.c89))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((t1.c64)) NOT BETWEEN (('FX')) AND (('p(X|wici'))))<(((((((((t1.c2)OR(t1.c65)))OR(0.20215257997287028)))AND(t1.c65)))OR(t1.c89)))));
SELECT * FROM t1 WHERE ((((((1157265999, t1.c1, t1.c89)) BETWEEN ((t1.c2, t1.c89, t1.c2)) AND ((t1.c1, t1.c65, t1.c89)))) BETWEEN (x'fb01') AND ((t1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((1157265999, t1.c1, t1.c89)) BETWEEN ((t1.c2, t1.c89, t1.c2)) AND ((t1.c1, t1.c65, t1.c89)))) BETWEEN (x'fb01') AND ((t1.c2 IN ())))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((1157265999, t1.c1, t1.c89)) BETWEEN ((t1.c2, t1.c89, t1.c2)) AND ((t1.c1, t1.c65, t1.c89)))) BETWEEN (x'fb01') AND ((t1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((1157265999, t1.c1, t1.c89)) BETWEEN ((t1.c2, t1.c89, t1.c2)) AND ((t1.c1, t1.c65, t1.c89)))) BETWEEN (x'fb01') AND ((t1.c2 IN ())))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((1157265999, t1.c1, t1.c89)) BETWEEN ((t1.c2, t1.c89, t1.c2)) AND ((t1.c1, t1.c65, t1.c89)))) BETWEEN (x'fb01') AND ((t1.c2 IN ()))));
SELECT * FROM t1 WHERE ('-0?WP}3h') ORDER BY t1.c65 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-0?WP}3h') IS TRUE)  as count FROM t1 ORDER BY t1.c65 ASC  NULLS LAST);
SELECT * FROM t1 WHERE ('-0?WP}3h') ORDER BY t1.c65 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-0?WP}3h') IS TRUE)  as count FROM t1 ORDER BY t1.c65 ASC  NULLS LAST);
SELECT * FROM t1 WHERE ('-0?WP}3h') ORDER BY t1.c65 ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((((((((((((((t1.c2)AND(t1.c89)))AND(t1.c1)))AND(t1.c64)))OR(NULL)))AND(t1.c2)))AND(t1.c65))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t1.c2)AND(t1.c89)))AND(t1.c1)))AND(t1.c64)))OR(NULL)))AND(t1.c2)))AND(t1.c65))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((((((((((((t1.c2)AND(t1.c89)))AND(t1.c1)))AND(t1.c64)))OR(NULL)))AND(t1.c2)))AND(t1.c65))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t1.c2)AND(t1.c89)))AND(t1.c1)))AND(t1.c64)))OR(NULL)))AND(t1.c2)))AND(t1.c65))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((((((((((((t1.c2)AND(t1.c89)))AND(t1.c1)))AND(t1.c64)))OR(NULL)))AND(t1.c2)))AND(t1.c65))) IS TRUE));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2))==(((('-851342835') BETWEEN (t1.c65) AND (t1.c65))))));
SELECT SUM(count) FROM (SELECT (((((t1.c2))==(((('-851342835') BETWEEN (t1.c65) AND (t1.c65)))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2))==(((('-851342835') BETWEEN (t1.c65) AND (t1.c65))))));
SELECT SUM(count) FROM (SELECT (((((t1.c2))==(((('-851342835') BETWEEN (t1.c65) AND (t1.c65)))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2))==(((('-851342835') BETWEEN (t1.c65) AND (t1.c65))))));
SELECT COUNT(*) FROM t1 WHERE (832397362) ORDER BY (+ ((((t1.c1))<((t1.c65)))))  NULLS FIRST, t1.c65;
SELECT SUM(count) FROM (SELECT ALL ((832397362) IS TRUE)  as count FROM t1 ORDER BY (+ ((((t1.c1))<((t1.c65)))))  NULLS FIRST, t1.c65);
SELECT COUNT(*) FROM t1 WHERE (832397362) ORDER BY (+ ((((t1.c1))<((t1.c65)))))  NULLS FIRST, t1.c65;
SELECT SUM(count) FROM (SELECT ALL ((832397362) IS TRUE)  as count FROM t1 ORDER BY (+ ((((t1.c1))<((t1.c65)))))  NULLS FIRST, t1.c65);
SELECT COUNT(*) FROM t1 WHERE (832397362) ORDER BY (+ ((((t1.c1))<((t1.c65)))))  NULLS FIRST, t1.c65;
SELECT * FROM t1 WHERE (((((NULL)AND(t1.c89)))OR(t1.c64)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(t1.c89)))OR(t1.c64)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((NULL)AND(t1.c89)))OR(t1.c64)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(t1.c89)))OR(t1.c64)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((NULL)AND(t1.c89)))OR(t1.c64)) COLLATE NOCASE);
SELECT COUNT(*) FROM t1 WHERE (((NULL) NOT BETWEEN (((t1.c89) NOT NULL)) AND (UPPER(DISTINCT 1088043718))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((t1.c89) NOT NULL)) AND (UPPER(DISTINCT 1088043718)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((NULL) NOT BETWEEN (((t1.c89) NOT NULL)) AND (UPPER(DISTINCT 1088043718))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((t1.c89) NOT NULL)) AND (UPPER(DISTINCT 1088043718)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((NULL) NOT BETWEEN (((t1.c89) NOT NULL)) AND (UPPER(DISTINCT 1088043718))));
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (t1.c89 IN ()) THEN (((t1.c1, '-2051737996', t1.c65, t1.c89, t1.c89)) BETWEEN ((0.8849645574711302, t1.c1, t1.c65, t1.c64, t1.c65)) AND ((t1.c89, t1.c64, 0x16dcf9da, t1.c89, t1.c64))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t1.c89 IN ()) THEN (((t1.c1, '-2051737996', t1.c65, t1.c89, t1.c89)) BETWEEN ((0.8849645574711302, t1.c1, t1.c65, t1.c64, t1.c65)) AND ((t1.c89, t1.c64, 0x16dcf9da, t1.c89, t1.c64))) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (t1.c89 IN ()) THEN (((t1.c1, '-2051737996', t1.c65, t1.c89, t1.c89)) BETWEEN ((0.8849645574711302, t1.c1, t1.c65, t1.c64, t1.c65)) AND ((t1.c89, t1.c64, 0x16dcf9da, t1.c89, t1.c64))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t1.c89 IN ()) THEN (((t1.c1, '-2051737996', t1.c65, t1.c89, t1.c89)) BETWEEN ((0.8849645574711302, t1.c1, t1.c65, t1.c64, t1.c65)) AND ((t1.c89, t1.c64, 0x16dcf9da, t1.c89, t1.c64))) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (t1.c89 IN ()) THEN (((t1.c1, '-2051737996', t1.c65, t1.c89, t1.c89)) BETWEEN ((0.8849645574711302, t1.c1, t1.c65, t1.c64, t1.c65)) AND ((t1.c89, t1.c64, 0x16dcf9da, t1.c89, t1.c64))) END);
SELECT ALL * FROM t1 WHERE (((((x'5536') NOT BETWEEN (t1.c89) AND (t1.c65)))IS NOT(CAST('1346505730' AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((x'5536') NOT BETWEEN (t1.c89) AND (t1.c65)))IS NOT(CAST('1346505730' AS TEXT)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((x'5536') NOT BETWEEN (t1.c89) AND (t1.c65)))IS NOT(CAST('1346505730' AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((x'5536') NOT BETWEEN (t1.c89) AND (t1.c65)))IS NOT(CAST('1346505730' AS TEXT)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((x'5536') NOT BETWEEN (t1.c89) AND (t1.c65)))IS NOT(CAST('1346505730' AS TEXT))));
SELECT * FROM t1 WHERE (t1.c64) ORDER BY (NOT ('')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c64) IS TRUE)  as count FROM t1 ORDER BY (NOT ('')) ASC);
SELECT * FROM t1 WHERE (t1.c64) ORDER BY (NOT ('')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c64) IS TRUE)  as count FROM t1 ORDER BY (NOT ('')) ASC);
SELECT * FROM t1 WHERE (t1.c64) ORDER BY (NOT ('')) ASC;
SELECT ALL * FROM t1 WHERE (((((((t1.c65))>=((t1.c2))), (NOT (t1.c89)), (~ (t1.c1))))<((((x'')IS NOT(t1.c65)), (+ (t1.c89)), (t1.c1 IN ()))))) ORDER BY ((CAST(t1.c2 AS INTEGER))<<(((t1.c1)||(t1.c64))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c65))>=((t1.c2))), (NOT (t1.c89)), (~ (t1.c1))))<((((x'')IS NOT(t1.c65)), (+ (t1.c89)), (t1.c1 IN ()))))) IS TRUE)  as count FROM t1 ORDER BY ((CAST(t1.c2 AS INTEGER))<<(((t1.c1)||(t1.c64))))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((((t1.c65))>=((t1.c2))), (NOT (t1.c89)), (~ (t1.c1))))<((((x'')IS NOT(t1.c65)), (+ (t1.c89)), (t1.c1 IN ()))))) ORDER BY ((CAST(t1.c2 AS INTEGER))<<(((t1.c1)||(t1.c64))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c65))>=((t1.c2))), (NOT (t1.c89)), (~ (t1.c1))))<((((x'')IS NOT(t1.c65)), (+ (t1.c89)), (t1.c1 IN ()))))) IS TRUE)  as count FROM t1 ORDER BY ((CAST(t1.c2 AS INTEGER))<<(((t1.c1)||(t1.c64))))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((((t1.c65))>=((t1.c2))), (NOT (t1.c89)), (~ (t1.c1))))<((((x'')IS NOT(t1.c65)), (+ (t1.c89)), (t1.c1 IN ()))))) ORDER BY ((CAST(t1.c2 AS INTEGER))<<(((t1.c1)||(t1.c64))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1)IS NOT(t1.c2)))&((t1.c64 IN (t1.c65)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1)IS NOT(t1.c2)))&((t1.c64 IN (t1.c65))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1)IS NOT(t1.c2)))&((t1.c64 IN (t1.c65)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1)IS NOT(t1.c2)))&((t1.c64 IN (t1.c65))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1)IS NOT(t1.c2)))&((t1.c64 IN (t1.c65)))));
SELECT ALL * FROM t1 WHERE (((t1.c1 COLLATE RTRIM)OR((+ (t1.c2))))) ORDER BY ((((t1.c64) NOT NULL))<=((+ (t1.c89))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c1 COLLATE RTRIM)OR((+ (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c64) NOT NULL))<=((+ (t1.c89))))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((t1.c1 COLLATE RTRIM)OR((+ (t1.c2))))) ORDER BY ((((t1.c64) NOT NULL))<=((+ (t1.c89))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c1 COLLATE RTRIM)OR((+ (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c64) NOT NULL))<=((+ (t1.c89))))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((t1.c1 COLLATE RTRIM)OR((+ (t1.c2))))) ORDER BY ((((t1.c64) NOT NULL))<=((+ (t1.c89))))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (CAST((((t1.c64, t1.c1, t1.c1, t1.c64, t1.c89)) NOT BETWEEN ((t1.c2, t1.c1, t1.c2, t1.c89, t1.c89)) AND ((t1.c65, t1.c64, t1.c2, t1.c89, t1.c65))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c64, t1.c1, t1.c1, t1.c64, t1.c89)) NOT BETWEEN ((t1.c2, t1.c1, t1.c2, t1.c89, t1.c89)) AND ((t1.c65, t1.c64, t1.c2, t1.c89, t1.c65))) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST((((t1.c64, t1.c1, t1.c1, t1.c64, t1.c89)) NOT BETWEEN ((t1.c2, t1.c1, t1.c2, t1.c89, t1.c89)) AND ((t1.c65, t1.c64, t1.c2, t1.c89, t1.c65))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c64, t1.c1, t1.c1, t1.c64, t1.c89)) NOT BETWEEN ((t1.c2, t1.c1, t1.c2, t1.c89, t1.c89)) AND ((t1.c65, t1.c64, t1.c2, t1.c89, t1.c65))) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST((((t1.c64, t1.c1, t1.c1, t1.c64, t1.c89)) NOT BETWEEN ((t1.c2, t1.c1, t1.c2, t1.c89, t1.c89)) AND ((t1.c65, t1.c64, t1.c2, t1.c89, t1.c65))) AS INTEGER));
SELECT * FROM t1 WHERE ((t1.c65 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((t1.c65 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((t1.c65 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((t1.c65 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((t1.c65 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c1)-(t1.c1)))AND(((t1.c2) IS FALSE))))AND(CASE t1.c89  WHEN t1.c2 THEN NULL END)))OR(((t1.c64)&(t1.c65)))))OR(t1.c65 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c1)-(t1.c1)))AND(((t1.c2) IS FALSE))))AND(CASE t1.c89  WHEN t1.c2 THEN NULL END)))OR(((t1.c64)&(t1.c65)))))OR(t1.c65 COLLATE BINARY))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c1)-(t1.c1)))AND(((t1.c2) IS FALSE))))AND(CASE t1.c89  WHEN t1.c2 THEN NULL END)))OR(((t1.c64)&(t1.c65)))))OR(t1.c65 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c1)-(t1.c1)))AND(((t1.c2) IS FALSE))))AND(CASE t1.c89  WHEN t1.c2 THEN NULL END)))OR(((t1.c64)&(t1.c65)))))OR(t1.c65 COLLATE BINARY))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c1)-(t1.c1)))AND(((t1.c2) IS FALSE))))AND(CASE t1.c89  WHEN t1.c2 THEN NULL END)))OR(((t1.c64)&(t1.c65)))))OR(t1.c65 COLLATE BINARY)));
SELECT COUNT(*) FROM t1 WHERE ((NOT ((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c64))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c64)))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((NOT ((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c64))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c64)))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((NOT ((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c64))))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c2)<(t1.c65)))%((+ (t1.c64))))) ORDER BY ((t1.c89 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2)<(t1.c65)))%((+ (t1.c64))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c89 IN ()) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c2)<(t1.c65)))%((+ (t1.c64))))) ORDER BY ((t1.c89 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2)<(t1.c65)))%((+ (t1.c64))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c89 IN ()) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c2)<(t1.c65)))%((+ (t1.c64))))) ORDER BY ((t1.c89 IN ()) IN ()) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((t1.c64)AND(t1.c64)))AND(((NULL) BETWEEN (t1.c65) AND ('꽎hdVCY_')))))AND((((t1.c2)) BETWEEN ((t1.c64)) AND ((t1.c64))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c64)AND(t1.c64)))AND(((NULL) BETWEEN (t1.c65) AND ('꽎hdVCY_')))))AND((((t1.c2)) BETWEEN ((t1.c64)) AND ((t1.c64)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((((t1.c64)AND(t1.c64)))AND(((NULL) BETWEEN (t1.c65) AND ('꽎hdVCY_')))))AND((((t1.c2)) BETWEEN ((t1.c64)) AND ((t1.c64))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c64)AND(t1.c64)))AND(((NULL) BETWEEN (t1.c65) AND ('꽎hdVCY_')))))AND((((t1.c2)) BETWEEN ((t1.c64)) AND ((t1.c64)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((((t1.c64)AND(t1.c64)))AND(((NULL) BETWEEN (t1.c65) AND ('꽎hdVCY_')))))AND((((t1.c2)) BETWEEN ((t1.c64)) AND ((t1.c64))))));
SELECT ALL * FROM t1 WHERE (t1.c65);
SELECT SUM(count) FROM (SELECT ALL ((t1.c65) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c65);
SELECT SUM(count) FROM (SELECT ALL ((t1.c65) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c65);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c65);
SELECT SUM(count) FROM (SELECT ((t1.c65) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c65);
SELECT SUM(count) FROM (SELECT ((t1.c65) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c65);
SELECT COUNT(*) FROM t1 WHERE (((1633531178)=(t1.c89 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((1633531178)=(t1.c89 COLLATE BINARY))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((1633531178)=(t1.c89 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((1633531178)=(t1.c89 COLLATE BINARY))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((1633531178)=(t1.c89 COLLATE BINARY)));
SELECT ALL * FROM t1 WHERE ((((t1.c2)) NOT BETWEEN ((((t1.c65)-(t1.c2)))) AND ((((((((((t1.c89)AND(t1.c2)))AND(t1.c2)))OR(t1.c2)))OR('0.709315907327262')))))) ORDER BY ((NOT (t1.c89)) IN ()) ASC  NULLS FIRST, CAST(((((t1.c1)OR(t1.c89)))OR(t1.c64)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c2)) NOT BETWEEN ((((t1.c65)-(t1.c2)))) AND ((((((((((t1.c89)AND(t1.c2)))AND(t1.c2)))OR(t1.c2)))OR('0.709315907327262')))))) IS TRUE)  as count FROM t1 ORDER BY ((NOT (t1.c89)) IN ()) ASC  NULLS FIRST, CAST(((((t1.c1)OR(t1.c89)))OR(t1.c64)) AS TEXT) ASC);
SELECT ALL * FROM t1 WHERE ((((t1.c2)) NOT BETWEEN ((((t1.c65)-(t1.c2)))) AND ((((((((((t1.c89)AND(t1.c2)))AND(t1.c2)))OR(t1.c2)))OR('0.709315907327262')))))) ORDER BY ((NOT (t1.c89)) IN ()) ASC  NULLS FIRST, CAST(((((t1.c1)OR(t1.c89)))OR(t1.c64)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c2)) NOT BETWEEN ((((t1.c65)-(t1.c2)))) AND ((((((((((t1.c89)AND(t1.c2)))AND(t1.c2)))OR(t1.c2)))OR('0.709315907327262')))))) IS TRUE)  as count FROM t1 ORDER BY ((NOT (t1.c89)) IN ()) ASC  NULLS FIRST, CAST(((((t1.c1)OR(t1.c89)))OR(t1.c64)) AS TEXT) ASC);
SELECT ALL * FROM t1 WHERE ((((t1.c2)) NOT BETWEEN ((((t1.c65)-(t1.c2)))) AND ((((((((((t1.c89)AND(t1.c2)))AND(t1.c2)))OR(t1.c2)))OR('0.709315907327262')))))) ORDER BY ((NOT (t1.c89)) IN ()) ASC  NULLS FIRST, CAST(((((t1.c1)OR(t1.c89)))OR(t1.c64)) AS TEXT) ASC;
SELECT ALL * FROM t1 WHERE (ROUND((((t1.c2, t1.c1, t1.c1))>((t1.c64, t1.c64, t1.c89))), CASE t1.c65  WHEN t1.c89 THEN t1.c64 WHEN t1.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c64 END)) ORDER BY ((((t1.c1)>>(t1.c1)))<<(((t1.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ((ROUND((((t1.c2, t1.c1, t1.c1))>((t1.c64, t1.c64, t1.c89))), CASE t1.c65  WHEN t1.c89 THEN t1.c64 WHEN t1.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c64 END)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1)>>(t1.c1)))<<(((t1.c2) ISNULL))));
SELECT ALL * FROM t1 WHERE (ROUND((((t1.c2, t1.c1, t1.c1))>((t1.c64, t1.c64, t1.c89))), CASE t1.c65  WHEN t1.c89 THEN t1.c64 WHEN t1.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c64 END)) ORDER BY ((((t1.c1)>>(t1.c1)))<<(((t1.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ((ROUND((((t1.c2, t1.c1, t1.c1))>((t1.c64, t1.c64, t1.c89))), CASE t1.c65  WHEN t1.c89 THEN t1.c64 WHEN t1.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c64 END)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1)>>(t1.c1)))<<(((t1.c2) ISNULL))));
SELECT ALL * FROM t1 WHERE (ROUND((((t1.c2, t1.c1, t1.c1))>((t1.c64, t1.c64, t1.c89))), CASE t1.c65  WHEN t1.c89 THEN t1.c64 WHEN t1.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c64 END)) ORDER BY ((((t1.c1)>>(t1.c1)))<<(((t1.c2) ISNULL)));
SELECT ALL COUNT(*) FROM t1 WHERE (((NOT (t1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t1.c1)) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((NOT (t1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t1.c1)) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((NOT (t1.c1)) IN ()));
SELECT COUNT(*) FROM t1 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c65)) BETWEEN ((((t1.c65) NOTNULL))) AND ((((t1.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((t1.c65)) BETWEEN ((((t1.c65) NOTNULL))) AND ((((t1.c1) ISNULL))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c65)) BETWEEN ((((t1.c65) NOTNULL))) AND ((((t1.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((t1.c65)) BETWEEN ((((t1.c65) NOTNULL))) AND ((((t1.c1) ISNULL))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c65)) BETWEEN ((((t1.c65) NOTNULL))) AND ((((t1.c1) ISNULL)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c64 COLLATE BINARY)>=(((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c65))))) ORDER BY ((t1.c1)>=(0.8666640023499627)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c64 COLLATE BINARY)>=(((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c65))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c1)>=(0.8666640023499627)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c64 COLLATE BINARY)>=(((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c65))))) ORDER BY ((t1.c1)>=(0.8666640023499627)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c64 COLLATE BINARY)>=(((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c65))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c1)>=(0.8666640023499627)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c64 COLLATE BINARY)>=(((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c65))))) ORDER BY ((t1.c1)>=(0.8666640023499627)) COLLATE NOCASE ASC;
SELECT * FROM t1 WHERE ((((t1.c65)) NOT BETWEEN (((((t1.c2, t1.c64, t1.c2)) NOT BETWEEN ((t1.c1, t1.c89, t1.c2)) AND ((0xffffffffdb86956f, t1.c1, t1.c1))))) AND ((((t1.c89)||(t1.c65))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c65)) NOT BETWEEN (((((t1.c2, t1.c64, t1.c2)) NOT BETWEEN ((t1.c1, t1.c89, t1.c2)) AND ((0Xffffffffdb86956f, t1.c1, t1.c1))))) AND ((((t1.c89)||(t1.c65)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c65)) NOT BETWEEN (((((t1.c2, t1.c64, t1.c2)) NOT BETWEEN ((t1.c1, t1.c89, t1.c2)) AND ((0xffffffffdb86956f, t1.c1, t1.c1))))) AND ((((t1.c89)||(t1.c65))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c65)) NOT BETWEEN (((((t1.c2, t1.c64, t1.c2)) NOT BETWEEN ((t1.c1, t1.c89, t1.c2)) AND ((0Xffffffffdb86956f, t1.c1, t1.c1))))) AND ((((t1.c89)||(t1.c65)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c65)) NOT BETWEEN (((((t1.c2, t1.c64, t1.c2)) NOT BETWEEN ((t1.c1, t1.c89, t1.c2)) AND ((0xffffffffdb86956f, t1.c1, t1.c1))))) AND ((((t1.c89)||(t1.c65))))));
SELECT ALL * FROM t1 WHERE ((t1.c1 IN ())) ORDER BY CASE WHEN ((t1.c2)>>(t1.c64)) THEN (((t1.c89, t1.c1, t1.c64))<>((t1.c64, t1.c64, t1.c65))) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((t1.c1 IN ())) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((t1.c2)>>(t1.c64)) THEN (((t1.c89, t1.c1, t1.c64))<>((t1.c64, t1.c64, t1.c65))) END DESC);
SELECT ALL * FROM t1 WHERE ((t1.c1 IN ())) ORDER BY CASE WHEN ((t1.c2)>>(t1.c64)) THEN (((t1.c89, t1.c1, t1.c64))<>((t1.c64, t1.c64, t1.c65))) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((t1.c1 IN ())) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((t1.c2)>>(t1.c64)) THEN (((t1.c89, t1.c1, t1.c64))<>((t1.c64, t1.c64, t1.c65))) END DESC);
SELECT ALL * FROM t1 WHERE ((t1.c1 IN ())) ORDER BY CASE WHEN ((t1.c2)>>(t1.c64)) THEN (((t1.c89, t1.c1, t1.c64))<>((t1.c64, t1.c64, t1.c65))) END DESC;
SELECT ALL * FROM t1 WHERE (((((~ (t1.c65))))<((((t1.c1) NOT BETWEEN ('684925070') AND (NULL)))))) ORDER BY (((t1.c64)) BETWEEN ((((t1.c89)|(t1.c89)))) AND ((((t1.c2)AND(t1.c89)))))  NULLS FIRST, CASE (('f	wQ')+('GX'))  WHEN t1.c2 COLLATE RTRIM THEN CAST('1167426896' AS BLOB) WHEN NULL THEN LAST_INSERT_ROWID() WHEN 0.14320756611753793 THEN ((t1.c65) IS FALSE) ELSE ((((t1.c1)AND(t1.c2)))OR(t1.c64)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (t1.c65))))<((((t1.c1) NOT BETWEEN ('684925070') AND (NULL)))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c64)) BETWEEN ((((t1.c89)|(t1.c89)))) AND ((((t1.c2)AND(t1.c89)))))  NULLS FIRST, CASE (('f	wQ')+('GX'))  WHEN t1.c2 COLLATE RTRIM THEN CAST('1167426896' AS BLOB) WHEN NULL THEN LAST_INSERT_ROWID() WHEN 0.14320756611753793 THEN ((t1.c65) IS FALSE) ELSE ((((t1.c1)AND(t1.c2)))OR(t1.c64)) END  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((~ (t1.c65))))<((((t1.c1) NOT BETWEEN ('684925070') AND (NULL)))))) ORDER BY (((t1.c64)) BETWEEN ((((t1.c89)|(t1.c89)))) AND ((((t1.c2)AND(t1.c89)))))  NULLS FIRST, CASE (('f	wQ')+('GX'))  WHEN t1.c2 COLLATE RTRIM THEN CAST('1167426896' AS BLOB) WHEN NULL THEN LAST_INSERT_ROWID() WHEN 0.14320756611753793 THEN ((t1.c65) IS FALSE) ELSE ((((t1.c1)AND(t1.c2)))OR(t1.c64)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (t1.c65))))<((((t1.c1) NOT BETWEEN ('684925070') AND (NULL)))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c64)) BETWEEN ((((t1.c89)|(t1.c89)))) AND ((((t1.c2)AND(t1.c89)))))  NULLS FIRST, CASE (('f	wQ')+('GX'))  WHEN t1.c2 COLLATE RTRIM THEN CAST('1167426896' AS BLOB) WHEN NULL THEN LAST_INSERT_ROWID() WHEN 0.14320756611753793 THEN ((t1.c65) IS FALSE) ELSE ((((t1.c1)AND(t1.c2)))OR(t1.c64)) END  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((~ (t1.c65))))<((((t1.c1) NOT BETWEEN ('684925070') AND (NULL)))))) ORDER BY (((t1.c64)) BETWEEN ((((t1.c89)|(t1.c89)))) AND ((((t1.c2)AND(t1.c89)))))  NULLS FIRST, CASE (('f	wQ')+('GX'))  WHEN t1.c2 COLLATE RTRIM THEN CAST('1167426896' AS BLOB) WHEN NULL THEN LAST_INSERT_ROWID() WHEN 0.14320756611753793 THEN ((t1.c65) IS FALSE) ELSE ((((t1.c1)AND(t1.c2)))OR(t1.c64)) END  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2)<=(t1.c1)) IN (0X1e3f70ec))) ORDER BY ((((t1.c89)OR((t1.c2 IN ()))))AND(t1.c64 COLLATE NOCASE)) ASC, ((CASE WHEN t1.c65 THEN t1.c65 END)%((t1.c2 IN (t1.c2, t1.c1)))) DESC, (((t1.c64, t1.c1, t1.c1)) NOT BETWEEN ((CASE WHEN t1.c89 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c89 THEN t1.c89 END, t1.c65, t1.c65)) AND ((CASE '-1370777911'  WHEN '' THEN NULL WHEN t1.c89 THEN t1.c1 WHEN t1.c65 THEN 0Xffffffff9bf341f4 END, (((t1.c64))>((t1.c65))), 0.0019835442236918466)));
SELECT SUM(count) FROM (SELECT (((((t1.c2)<=(t1.c1)) IN (0X1e3f70ec))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c89)OR((t1.c2 IN ()))))AND(t1.c64 COLLATE NOCASE)) ASC, ((CASE WHEN t1.c65 THEN t1.c65 END)%((t1.c2 IN (t1.c2, t1.c1)))) DESC, (((t1.c64, t1.c1, t1.c1)) NOT BETWEEN ((CASE WHEN t1.c89 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c89 THEN t1.c89 END, t1.c65, t1.c65)) AND ((CASE '-1370777911'  WHEN '' THEN NULL WHEN t1.c89 THEN t1.c1 WHEN t1.c65 THEN 0Xffffffff9bf341f4 END, (((t1.c64))>((t1.c65))), 0.0019835442236918466))));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2)<=(t1.c1)) IN (0X1e3f70ec))) ORDER BY ((((t1.c89)OR((t1.c2 IN ()))))AND(t1.c64 COLLATE NOCASE)) ASC, ((CASE WHEN t1.c65 THEN t1.c65 END)%((t1.c2 IN (t1.c2, t1.c1)))) DESC, (((t1.c64, t1.c1, t1.c1)) NOT BETWEEN ((CASE WHEN t1.c89 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c89 THEN t1.c89 END, t1.c65, t1.c65)) AND ((CASE '-1370777911'  WHEN '' THEN NULL WHEN t1.c89 THEN t1.c1 WHEN t1.c65 THEN 0Xffffffff9bf341f4 END, (((t1.c64))>((t1.c65))), 0.0019835442236918466)));
SELECT SUM(count) FROM (SELECT (((((t1.c2)<=(t1.c1)) IN (0X1e3f70ec))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c89)OR((t1.c2 IN ()))))AND(t1.c64 COLLATE NOCASE)) ASC, ((CASE WHEN t1.c65 THEN t1.c65 END)%((t1.c2 IN (t1.c2, t1.c1)))) DESC, (((t1.c64, t1.c1, t1.c1)) NOT BETWEEN ((CASE WHEN t1.c89 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c89 THEN t1.c89 END, t1.c65, t1.c65)) AND ((CASE '-1370777911'  WHEN '' THEN NULL WHEN t1.c89 THEN t1.c1 WHEN t1.c65 THEN 0Xffffffff9bf341f4 END, (((t1.c64))>((t1.c65))), 0.0019835442236918466))));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2)<=(t1.c1)) IN (0X1e3f70ec))) ORDER BY ((((t1.c89)OR((t1.c2 IN ()))))AND(t1.c64 COLLATE NOCASE)) ASC, ((CASE WHEN t1.c65 THEN t1.c65 END)%((t1.c2 IN (t1.c2, t1.c1)))) DESC, (((t1.c64, t1.c1, t1.c1)) NOT BETWEEN ((CASE WHEN t1.c89 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c89 THEN t1.c89 END, t1.c65, t1.c65)) AND ((CASE '-1370777911'  WHEN '' THEN NULL WHEN t1.c89 THEN t1.c1 WHEN t1.c65 THEN 0Xffffffff9bf341f4 END, (((t1.c64))>((t1.c65))), 0.0019835442236918466)));
SELECT ALL COUNT(*) FROM t1 WHERE (x'') ORDER BY ((t1.c65)IS(((t1.c2)IS(x'8edc'))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1 ORDER BY ((t1.c65)IS(((t1.c2)IS(x'8edc')))));
SELECT ALL COUNT(*) FROM t1 WHERE (x'') ORDER BY ((t1.c65)IS(((t1.c2)IS(x'8edc'))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1 ORDER BY ((t1.c65)IS(((t1.c2)IS(x'8edc')))));
SELECT ALL COUNT(*) FROM t1 WHERE (x'') ORDER BY ((t1.c65)IS(((t1.c2)IS(x'8edc'))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1) NOTNULL))*(t1.c65)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1) NOTNULL))*(t1.c65))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1) NOTNULL))*(t1.c65)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1) NOTNULL))*(t1.c65))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1) NOTNULL))*(t1.c65)));
SELECT ALL COUNT(*) FROM t1 WHERE ((((CASE WHEN t1.c64 THEN t1.c65 WHEN t1.c1 THEN t1.c89 WHEN '0.13322963160121248' THEN t1.c65 END, ((t1.c65)OR(t1.c2)), ((((t1.c65)AND(t1.c89)))AND(t1.c2))))<=(((t1.c64 IN ()), ((t1.c89)+(0Xffffffff95dd71b0)), CASE WHEN t1.c1 THEN t1.c64 END))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t1.c64 THEN t1.c65 WHEN t1.c1 THEN t1.c89 WHEN '0.13322963160121248' THEN t1.c65 END, ((t1.c65)OR(t1.c2)), ((((t1.c65)AND(t1.c89)))AND(t1.c2))))<=(((t1.c64 IN ()), ((t1.c89)+(0Xffffffff95dd71b0)), CASE WHEN t1.c1 THEN t1.c64 END)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((CASE WHEN t1.c64 THEN t1.c65 WHEN t1.c1 THEN t1.c89 WHEN '0.13322963160121248' THEN t1.c65 END, ((t1.c65)OR(t1.c2)), ((((t1.c65)AND(t1.c89)))AND(t1.c2))))<=(((t1.c64 IN ()), ((t1.c89)+(0Xffffffff95dd71b0)), CASE WHEN t1.c1 THEN t1.c64 END))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t1.c64 THEN t1.c65 WHEN t1.c1 THEN t1.c89 WHEN '0.13322963160121248' THEN t1.c65 END, ((t1.c65)OR(t1.c2)), ((((t1.c65)AND(t1.c89)))AND(t1.c2))))<=(((t1.c64 IN ()), ((t1.c89)+(0Xffffffff95dd71b0)), CASE WHEN t1.c1 THEN t1.c64 END)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((CASE WHEN t1.c64 THEN t1.c65 WHEN t1.c1 THEN t1.c89 WHEN '0.13322963160121248' THEN t1.c65 END, ((t1.c65)OR(t1.c2)), ((((t1.c65)AND(t1.c89)))AND(t1.c2))))<=(((t1.c64 IN ()), ((t1.c89)+(0Xffffffff95dd71b0)), CASE WHEN t1.c1 THEN t1.c64 END))));
SELECT * FROM t1 WHERE (((((CAST(t1.c2 AS TEXT))AND(((t1.c2) ISNULL))))AND(((((t1.c65)AND(t1.c65)))OR(t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c2 AS TEXT))AND(((t1.c2) ISNULL))))AND(((((t1.c65)AND(t1.c65)))OR(t1.c64))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((CAST(t1.c2 AS TEXT))AND(((t1.c2) ISNULL))))AND(((((t1.c65)AND(t1.c65)))OR(t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c2 AS TEXT))AND(((t1.c2) ISNULL))))AND(((((t1.c65)AND(t1.c65)))OR(t1.c64))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((CAST(t1.c2 AS TEXT))AND(((t1.c2) ISNULL))))AND(((((t1.c65)AND(t1.c65)))OR(t1.c64)))));
SELECT COUNT(*) FROM t1 WHERE ((NOT ((- (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (NULL))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((NOT ((- (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (NULL))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((NOT ((- (NULL)))));
SELECT * FROM t1 NOT INDEXED WHERE (((t1.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 NOT INDEXED WHERE (((t1.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 NOT INDEXED WHERE (((t1.c1) NOT NULL));
SELECT COUNT(*) FROM t1 WHERE (MAX(((((((((t1.c2)AND(t1.c2)))AND(t1.c64)))OR(t1.c1)))AND(t1.c2)), LOWER(DISTINCT t1.c65)));
SELECT SUM(count) FROM (SELECT ALL ((MAX(((((((((t1.c2)AND(t1.c2)))AND(t1.c64)))OR(t1.c1)))AND(t1.c2)), LOWER(DISTINCT t1.c65))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (MAX(((((((((t1.c2)AND(t1.c2)))AND(t1.c64)))OR(t1.c1)))AND(t1.c2)), LOWER(DISTINCT t1.c65)));
SELECT SUM(count) FROM (SELECT ALL ((MAX(((((((((t1.c2)AND(t1.c2)))AND(t1.c64)))OR(t1.c1)))AND(t1.c2)), LOWER(DISTINCT t1.c65))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (MAX(((((((((t1.c2)AND(t1.c2)))AND(t1.c64)))OR(t1.c1)))AND(t1.c2)), LOWER(DISTINCT t1.c65)));
SELECT * FROM t1 WHERE ((x'' IN ())) ORDER BY (((NOT (t1.c65)))|(((t1.c65)>>(t1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM t1 ORDER BY (((NOT (t1.c65)))|(((t1.c65)>>(t1.c1)))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE ((x'' IN ())) ORDER BY (((NOT (t1.c65)))|(((t1.c65)>>(t1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM t1 ORDER BY (((NOT (t1.c65)))|(((t1.c65)>>(t1.c1)))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE ((x'' IN ())) ORDER BY (((NOT (t1.c65)))|(((t1.c65)>>(t1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((t1.c65)AND(t1.c64)))OR(t1.c2))) BETWEEN (CAST(t1.c64 AS TEXT)) AND (t1.c1))) ORDER BY CASE WHEN (NOT (x'')) THEN (((t1.c64))=((t1.c1))) ELSE 0.6824259486122586 END DESC  NULLS FIRST, (NOT (t1.c64 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c65)AND(t1.c64)))OR(t1.c2))) BETWEEN (CAST(t1.c64 AS TEXT)) AND (t1.c1))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (NOT (x'')) THEN (((t1.c64))=((t1.c1))) ELSE 0.6824259486122586 END DESC  NULLS FIRST, (NOT (t1.c64 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((((t1.c65)AND(t1.c64)))OR(t1.c2))) BETWEEN (CAST(t1.c64 AS TEXT)) AND (t1.c1))) ORDER BY CASE WHEN (NOT (x'')) THEN (((t1.c64))=((t1.c1))) ELSE 0.6824259486122586 END DESC  NULLS FIRST, (NOT (t1.c64 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c65)AND(t1.c64)))OR(t1.c2))) BETWEEN (CAST(t1.c64 AS TEXT)) AND (t1.c1))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (NOT (x'')) THEN (((t1.c64))=((t1.c1))) ELSE 0.6824259486122586 END DESC  NULLS FIRST, (NOT (t1.c64 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((((t1.c65)AND(t1.c64)))OR(t1.c2))) BETWEEN (CAST(t1.c64 AS TEXT)) AND (t1.c1))) ORDER BY CASE WHEN (NOT (x'')) THEN (((t1.c64))=((t1.c1))) ELSE 0.6824259486122586 END DESC  NULLS FIRST, (NOT (t1.c64 COLLATE NOCASE))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((+ (((t1.c89)AND(t1.c2))))) ORDER BY CASE t1.c64  WHEN ((t1.c64) NOT BETWEEN (t1.c1) AND (t1.c2)) THEN ((('', t1.c2, x'98da')) NOT BETWEEN ((t1.c1, t1.c89, t1.c65)) AND ((t1.c65, t1.c2, t1.c89))) ELSE x'' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((t1.c89)AND(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY CASE t1.c64  WHEN ((t1.c64) NOT BETWEEN (t1.c1) AND (t1.c2)) THEN ((('', t1.c2, x'98da')) NOT BETWEEN ((t1.c1, t1.c89, t1.c65)) AND ((t1.c65, t1.c2, t1.c89))) ELSE x'' END  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((+ (((t1.c89)AND(t1.c2))))) ORDER BY CASE t1.c64  WHEN ((t1.c64) NOT BETWEEN (t1.c1) AND (t1.c2)) THEN ((('', t1.c2, x'98da')) NOT BETWEEN ((t1.c1, t1.c89, t1.c65)) AND ((t1.c65, t1.c2, t1.c89))) ELSE x'' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((t1.c89)AND(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY CASE t1.c64  WHEN ((t1.c64) NOT BETWEEN (t1.c1) AND (t1.c2)) THEN ((('', t1.c2, x'98da')) NOT BETWEEN ((t1.c1, t1.c89, t1.c65)) AND ((t1.c65, t1.c2, t1.c89))) ELSE x'' END  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((+ (((t1.c89)AND(t1.c2))))) ORDER BY CASE t1.c64  WHEN ((t1.c64) NOT BETWEEN (t1.c1) AND (t1.c2)) THEN ((('', t1.c2, x'98da')) NOT BETWEEN ((t1.c1, t1.c89, t1.c65)) AND ((t1.c65, t1.c2, t1.c89))) ELSE x'' END  NULLS FIRST;
SELECT * FROM t1 WHERE (UNLIKELY(((t1.c1)GLOB(t1.c65))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t1.c1)GLOB(t1.c65)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (UNLIKELY(((t1.c1)GLOB(t1.c65))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t1.c1)GLOB(t1.c65)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (UNLIKELY(((t1.c1)GLOB(t1.c65))));
SELECT * FROM t1 WHERE (CASE WHEN ((((t1.c65)OR(t1.c1)))OR(t1.c65)) THEN CASE WHEN t1.c2 THEN t1.c65 WHEN t1.c89 THEN t1.c64 WHEN t1.c65 THEN t1.c64 ELSE t1.c1 END ELSE CASE WHEN t1.c64 THEN t1.c89 ELSE t1.c64 END END) ORDER BY (((t1.c89)) BETWEEN ((((t1.c64)=(t1.c65)))) AND ((((t1.c1) NOT BETWEEN (t1.c64) AND (t1.c65))))) ASC  NULLS FIRST, ((((t1.c64 COLLATE BINARY)OR(((t1.c64)%(t1.c64)))))AND((t1.c64 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t1.c65)OR(t1.c1)))OR(t1.c65)) THEN CASE WHEN t1.c2 THEN t1.c65 WHEN t1.c89 THEN t1.c64 WHEN t1.c65 THEN t1.c64 ELSE t1.c1 END ELSE CASE WHEN t1.c64 THEN t1.c89 ELSE t1.c64 END END) IS TRUE)  as count FROM t1 ORDER BY (((t1.c89)) BETWEEN ((((t1.c64)==(t1.c65)))) AND ((((t1.c1) NOT BETWEEN (t1.c64) AND (t1.c65))))) ASC  NULLS FIRST, ((((t1.c64 COLLATE BINARY)OR(((t1.c64)%(t1.c64)))))AND((t1.c64 IN ()))) ASC);
SELECT * FROM t1 WHERE (CASE WHEN ((((t1.c65)OR(t1.c1)))OR(t1.c65)) THEN CASE WHEN t1.c2 THEN t1.c65 WHEN t1.c89 THEN t1.c64 WHEN t1.c65 THEN t1.c64 ELSE t1.c1 END ELSE CASE WHEN t1.c64 THEN t1.c89 ELSE t1.c64 END END) ORDER BY (((t1.c89)) BETWEEN ((((t1.c64)=(t1.c65)))) AND ((((t1.c1) NOT BETWEEN (t1.c64) AND (t1.c65))))) ASC  NULLS FIRST, ((((t1.c64 COLLATE BINARY)OR(((t1.c64)%(t1.c64)))))AND((t1.c64 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t1.c65)OR(t1.c1)))OR(t1.c65)) THEN CASE WHEN t1.c2 THEN t1.c65 WHEN t1.c89 THEN t1.c64 WHEN t1.c65 THEN t1.c64 ELSE t1.c1 END ELSE CASE WHEN t1.c64 THEN t1.c89 ELSE t1.c64 END END) IS TRUE)  as count FROM t1 ORDER BY (((t1.c89)) BETWEEN ((((t1.c64)==(t1.c65)))) AND ((((t1.c1) NOT BETWEEN (t1.c64) AND (t1.c65))))) ASC  NULLS FIRST, ((((t1.c64 COLLATE BINARY)OR(((t1.c64)%(t1.c64)))))AND((t1.c64 IN ()))) ASC);
SELECT COUNT(*) FROM t1 WHERE (0.3026632146030218) ORDER BY CAST(CAST(t1.c2 AS TEXT) AS TEXT);
SELECT SUM(count) FROM (SELECT ((0.3026632146030218) IS TRUE)  as count FROM t1 ORDER BY CAST(CAST(t1.c2 AS TEXT) AS TEXT));
SELECT COUNT(*) FROM t1 WHERE (0.3026632146030218) ORDER BY CAST(CAST(t1.c2 AS TEXT) AS TEXT);
SELECT SUM(count) FROM (SELECT ((0.3026632146030218) IS TRUE)  as count FROM t1 ORDER BY CAST(CAST(t1.c2 AS TEXT) AS TEXT));
SELECT COUNT(*) FROM t1 WHERE (0.3026632146030218) ORDER BY CAST(CAST(t1.c2 AS TEXT) AS TEXT);
SELECT COUNT(*) FROM t1 WHERE (((JULIANDAY(t1.c64, t1.c2, t1.c89))>=(((((((((t1.c64)AND(t1.c65)))AND(t1.c2)))AND(t1.c65)))AND(t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(t1.c64, t1.c2, t1.c89))>=(((((((((t1.c64)AND(t1.c65)))AND(t1.c2)))AND(t1.c65)))AND(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((JULIANDAY(t1.c64, t1.c2, t1.c89))>=(((((((((t1.c64)AND(t1.c65)))AND(t1.c2)))AND(t1.c65)))AND(t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(t1.c64, t1.c2, t1.c89))>=(((((((((t1.c64)AND(t1.c65)))AND(t1.c2)))AND(t1.c65)))AND(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((JULIANDAY(t1.c64, t1.c2, t1.c89))>=(((((((((t1.c64)AND(t1.c65)))AND(t1.c2)))AND(t1.c65)))AND(t1.c1)))));
SELECT ALL * FROM t1 WHERE (CAST(-2134138021 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(-2134138021 AS TEXT)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(-2134138021 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(-2134138021 AS TEXT)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(-2134138021 AS TEXT));
SELECT ALL COUNT(*) FROM t1 WHERE (0.13430011387620644);
SELECT SUM(count) FROM (SELECT ((0.13430011387620644) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (0.13430011387620644);
SELECT SUM(count) FROM (SELECT ((0.13430011387620644) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (0.13430011387620644);
SELECT * FROM t1 WHERE (((t1.c89 COLLATE NOCASE) ISNULL)) ORDER BY ((LIKELIHOOD(0.1049245559598575, 0.5096789359123978))>(((t1.c64) ISNULL))) DESC  NULLS LAST, (NOT (t1.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((((t1.c89 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY ((LIKELIHOOD(0.1049245559598575, 0.5096789359123978))>(((t1.c64) ISNULL))) DESC  NULLS LAST, (NOT (t1.c1)) DESC);
SELECT * FROM t1 WHERE (((t1.c89 COLLATE NOCASE) ISNULL)) ORDER BY ((LIKELIHOOD(0.1049245559598575, 0.5096789359123978))>(((t1.c64) ISNULL))) DESC  NULLS LAST, (NOT (t1.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((((t1.c89 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY ((LIKELIHOOD(0.1049245559598575, 0.5096789359123978))>(((t1.c64) ISNULL))) DESC  NULLS LAST, (NOT (t1.c1)) DESC);
SELECT * FROM t1 WHERE (((t1.c89 COLLATE NOCASE) ISNULL)) ORDER BY ((LIKELIHOOD(0.1049245559598575, 0.5096789359123978))>(((t1.c64) ISNULL))) DESC  NULLS LAST, (NOT (t1.c1)) DESC;
SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY (~ ((t1.c65 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 ORDER BY (~ ((t1.c65 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY (~ ((t1.c65 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 ORDER BY (~ ((t1.c65 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY (~ ((t1.c65 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((0x498c4646))>(((t1.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((0X498c4646))>(((t1.c2 IN ()))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((0x498c4646))>(((t1.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((0X498c4646))>(((t1.c2 IN ()))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((0x498c4646))>(((t1.c2 IN ())))));
SELECT ALL * FROM t1 WHERE (((- (t1.c65)) IN (t1.c2, HEX(t1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((- (t1.c65)) IN (t1.c2, HEX(t1.c1)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((- (t1.c65)) IN (t1.c2, HEX(t1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((- (t1.c65)) IN (t1.c2, HEX(t1.c1)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((- (t1.c65)) IN (t1.c2, HEX(t1.c1))));
SELECT COUNT(*) FROM t1 WHERE (load_extension(CAST(t1.c89 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((load_extension(CAST(t1.c89 AS NUMERIC))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (load_extension(CAST(t1.c89 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((load_extension(CAST(t1.c89 AS NUMERIC))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((- (((t1.c65)OR(t1.c64))))) ORDER BY (((t1.c65)) NOT BETWEEN (((+ (t1.c1)))) AND (((- (t1.c89))))) DESC;
SELECT SUM(count) FROM (SELECT (((- (((t1.c65)OR(t1.c64))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c65)) NOT BETWEEN (((+ (t1.c1)))) AND (((- (t1.c89))))) DESC);
SELECT ALL * FROM t1 WHERE ((- (((t1.c65)OR(t1.c64))))) ORDER BY (((t1.c65)) NOT BETWEEN (((+ (t1.c1)))) AND (((- (t1.c89))))) DESC;
SELECT SUM(count) FROM (SELECT (((- (((t1.c65)OR(t1.c64))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c65)) NOT BETWEEN (((+ (t1.c1)))) AND (((- (t1.c89))))) DESC);
SELECT ALL * FROM t1 WHERE ((- (((t1.c65)OR(t1.c64))))) ORDER BY (((t1.c65)) NOT BETWEEN (((+ (t1.c1)))) AND (((- (t1.c89))))) DESC;
SELECT COUNT(*) FROM t1 WHERE (((t1.c64 COLLATE NOCASE) NOT BETWEEN (t1.c2) AND (((t1.c1) BETWEEN ('-116875205') AND (t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c64 COLLATE NOCASE) NOT BETWEEN (t1.c2) AND (((t1.c1) BETWEEN ('-116875205') AND (t1.c64))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c64 COLLATE NOCASE) NOT BETWEEN (t1.c2) AND (((t1.c1) BETWEEN ('-116875205') AND (t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c64 COLLATE NOCASE) NOT BETWEEN (t1.c2) AND (((t1.c1) BETWEEN ('-116875205') AND (t1.c64))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c64 COLLATE NOCASE) NOT BETWEEN (t1.c2) AND (((t1.c1) BETWEEN ('-116875205') AND (t1.c64)))));
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c2)OR(t1.c2)))OR(t1.c2)))!=(t1.c2 COLLATE NOCASE))) ORDER BY '1751697625' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c2)OR(t1.c2)))OR(t1.c2)))!=(t1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t1 ORDER BY '1751697625' ASC);
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c2)OR(t1.c2)))OR(t1.c2)))!=(t1.c2 COLLATE NOCASE))) ORDER BY '1751697625' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c2)OR(t1.c2)))OR(t1.c2)))!=(t1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t1 ORDER BY '1751697625' ASC);
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c2)OR(t1.c2)))OR(t1.c2)))!=(t1.c2 COLLATE NOCASE))) ORDER BY '1751697625' ASC;
SELECT * FROM t1 WHERE (((((t1.c89)-(t1.c89)))AND(((t1.c89)%(t1.c2))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c89)-(t1.c89)))AND(((t1.c89)%(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY NULL ASC  NULLS LAST);
SELECT * FROM t1 WHERE (((((t1.c89)-(t1.c89)))AND(((t1.c89)%(t1.c2))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c89)-(t1.c89)))AND(((t1.c89)%(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY NULL ASC  NULLS LAST);
SELECT * FROM t1 WHERE (((((t1.c89)-(t1.c89)))AND(((t1.c89)%(t1.c2))))) ORDER BY NULL ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((NULL)OR(t1.c64)))AND(t1.c1)) IN (t1.c89)));
SELECT SUM(count) FROM (SELECT (((((((NULL)OR(t1.c64)))AND(t1.c1)) IN (t1.c89))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((NULL)OR(t1.c64)))AND(t1.c1)) IN (t1.c89)));
SELECT SUM(count) FROM (SELECT (((((((NULL)OR(t1.c64)))AND(t1.c1)) IN (t1.c89))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((NULL)OR(t1.c64)))AND(t1.c1)) IN (t1.c89)));
SELECT COUNT(*) FROM t1 WHERE (t1.c89) ORDER BY t1.c89  NULLS FIRST, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c89) IS TRUE)  as count FROM t1 ORDER BY t1.c89  NULLS FIRST, NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (t1.c89) ORDER BY t1.c89  NULLS FIRST, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c89) IS TRUE)  as count FROM t1 ORDER BY t1.c89  NULLS FIRST, NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (t1.c89) ORDER BY t1.c89  NULLS FIRST, NULL ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c2 THEN t1.c64 ELSE ((t1.c65) BETWEEN (t1.c64) AND (t1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c2 THEN t1.c64 ELSE ((t1.c65) BETWEEN (t1.c64) AND (t1.c2)) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c2 THEN t1.c64 ELSE ((t1.c65) BETWEEN (t1.c64) AND (t1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c2 THEN t1.c64 ELSE ((t1.c65) BETWEEN (t1.c64) AND (t1.c2)) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c2 THEN t1.c64 ELSE ((t1.c65) BETWEEN (t1.c64) AND (t1.c2)) END);
SELECT COUNT(*) FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c2);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c2)<=(((((((((t1.c2)OR(t1.c65)))AND(0xffffffffa965ad82)))AND(t1.c2)))AND(t1.c65))))) ORDER BY (((t1.c89, t1.c65, t1.c2)) BETWEEN ((((t1.c1)*(t1.c65)), ((t1.c89) ISNULL), (((t1.c65, t1.c65, NULL))>((t1.c1, t1.c65, t1.c65))))) AND (('1-500000', (((t1.c65, t1.c89, t1.c1))<((t1.c1, t1.c65, t1.c1))), (((t1.c1, t1.c64, t1.c65)) NOT BETWEEN ((t1.c2, t1.c64, t1.c89)) AND ((0.533523330696404, t1.c64, t1.c64))))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2)<=(((((((((t1.c2)OR(t1.c65)))AND(0xffffffffa965ad82)))AND(t1.c2)))AND(t1.c65))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c89, t1.c65, t1.c2)) BETWEEN ((((t1.c1)*(t1.c65)), ((t1.c89) ISNULL), (((t1.c65, t1.c65, NULL))>((t1.c1, t1.c65, t1.c65))))) AND (('1-500000', (((t1.c65, t1.c89, t1.c1))<((t1.c1, t1.c65, t1.c1))), (((t1.c1, t1.c64, t1.c65)) NOT BETWEEN ((t1.c2, t1.c64, t1.c89)) AND ((0.533523330696404, t1.c64, t1.c64)))))));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c2)<=(((((((((t1.c2)OR(t1.c65)))AND(0xffffffffa965ad82)))AND(t1.c2)))AND(t1.c65))))) ORDER BY (((t1.c89, t1.c65, t1.c2)) BETWEEN ((((t1.c1)*(t1.c65)), ((t1.c89) ISNULL), (((t1.c65, t1.c65, NULL))>((t1.c1, t1.c65, t1.c65))))) AND (('1-500000', (((t1.c65, t1.c89, t1.c1))<((t1.c1, t1.c65, t1.c1))), (((t1.c1, t1.c64, t1.c65)) NOT BETWEEN ((t1.c2, t1.c64, t1.c89)) AND ((0.533523330696404, t1.c64, t1.c64))))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2)<=(((((((((t1.c2)OR(t1.c65)))AND(0xffffffffa965ad82)))AND(t1.c2)))AND(t1.c65))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c89, t1.c65, t1.c2)) BETWEEN ((((t1.c1)*(t1.c65)), ((t1.c89) ISNULL), (((t1.c65, t1.c65, NULL))>((t1.c1, t1.c65, t1.c65))))) AND (('1-500000', (((t1.c65, t1.c89, t1.c1))<((t1.c1, t1.c65, t1.c1))), (((t1.c1, t1.c64, t1.c65)) NOT BETWEEN ((t1.c2, t1.c64, t1.c89)) AND ((0.533523330696404, t1.c64, t1.c64)))))));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c2)<=(((((((((t1.c2)OR(t1.c65)))AND(0xffffffffa965ad82)))AND(t1.c2)))AND(t1.c65))))) ORDER BY (((t1.c89, t1.c65, t1.c2)) BETWEEN ((((t1.c1)*(t1.c65)), ((t1.c89) ISNULL), (((t1.c65, t1.c65, NULL))>((t1.c1, t1.c65, t1.c65))))) AND (('1-500000', (((t1.c65, t1.c89, t1.c1))<((t1.c1, t1.c65, t1.c1))), (((t1.c1, t1.c64, t1.c65)) NOT BETWEEN ((t1.c2, t1.c64, t1.c89)) AND ((0.533523330696404, t1.c64, t1.c64))))));
SELECT * FROM t1 WHERE (t1.c65);
SELECT SUM(count) FROM (SELECT ((t1.c65) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c65);
SELECT SUM(count) FROM (SELECT ((t1.c65) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c65);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c65)OR(t1.c2)))OR(t1.c1)))OR('cr[ei}8?')))AND(-3.25548373E8)))AND(t1.c64))) ORDER BY ((+ (t1.c2)) IN ())  NULLS FIRST, 0.6510876083181066 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c65)OR(t1.c2)))OR(t1.c1)))OR('cr[ei}8?')))AND(-3.25548373E8)))AND(t1.c64))) IS TRUE)  as count FROM t1 ORDER BY ((+ (t1.c2)) IN ())  NULLS FIRST, 0.6510876083181066 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c65)OR(t1.c2)))OR(t1.c1)))OR('cr[ei}8?')))AND(-3.25548373E8)))AND(t1.c64))) ORDER BY ((+ (t1.c2)) IN ())  NULLS FIRST, 0.6510876083181066 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c65)OR(t1.c2)))OR(t1.c1)))OR('cr[ei}8?')))AND(-3.25548373E8)))AND(t1.c64))) IS TRUE)  as count FROM t1 ORDER BY ((+ (t1.c2)) IN ())  NULLS FIRST, 0.6510876083181066 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c65)OR(t1.c2)))OR(t1.c1)))OR('cr[ei}8?')))AND(-3.25548373E8)))AND(t1.c64))) ORDER BY ((+ (t1.c2)) IN ())  NULLS FIRST, 0.6510876083181066 ASC  NULLS LAST;
SELECT * FROM t1 WHERE (IFNULL(DISTINCT ((t1.c89) BETWEEN (t1.c65) AND (t1.c65)), ((t1.c2) NOTNULL))) ORDER BY ((CAST(1.914990562E9 AS BLOB))&(CAST(0.8523267237895917 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((t1.c89) BETWEEN (t1.c65) AND (t1.c65)), ((t1.c2) NOTNULL))) IS TRUE)  as count FROM t1 ORDER BY ((CAST(1.914990562E9 AS BLOB))&(CAST(0.8523267237895917 AS REAL))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (IFNULL(DISTINCT ((t1.c89) BETWEEN (t1.c65) AND (t1.c65)), ((t1.c2) NOTNULL))) ORDER BY ((CAST(1.914990562E9 AS BLOB))&(CAST(0.8523267237895917 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((t1.c89) BETWEEN (t1.c65) AND (t1.c65)), ((t1.c2) NOTNULL))) IS TRUE)  as count FROM t1 ORDER BY ((CAST(1.914990562E9 AS BLOB))&(CAST(0.8523267237895917 AS REAL))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (IFNULL(DISTINCT ((t1.c89) BETWEEN (t1.c65) AND (t1.c65)), ((t1.c2) NOTNULL))) ORDER BY ((CAST(1.914990562E9 AS BLOB))&(CAST(0.8523267237895917 AS REAL))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((CASE WHEN t1.c65 THEN t1.c1 END)/(((t1.c1)!=(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c65 THEN t1.c1 END)/(((t1.c1)<>(t1.c2))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CASE WHEN t1.c65 THEN t1.c1 END)/(((t1.c1)!=(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c65 THEN t1.c1 END)/(((t1.c1)<>(t1.c2))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CASE WHEN t1.c65 THEN t1.c1 END)/(((t1.c1)!=(t1.c2)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c65 IN ()))*(((t1.c64)%(t1.c89)))));
SELECT SUM(count) FROM (SELECT (((((t1.c65 IN ()))*(((t1.c64)%(t1.c89))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c65 IN ()))*(((t1.c64)%(t1.c89)))));
SELECT SUM(count) FROM (SELECT (((((t1.c65 IN ()))*(((t1.c64)%(t1.c89))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c65 IN ()))*(((t1.c64)%(t1.c89)))));
SELECT COUNT(*) FROM t1 WHERE ((('') NOT BETWEEN (((t1.c89) NOT BETWEEN (t1.c2) AND (t1.c89))) AND ((((t1.c1))<((t1.c64))))));
SELECT SUM(count) FROM (SELECT (((('') NOT BETWEEN (((t1.c89) NOT BETWEEN (t1.c2) AND (t1.c89))) AND ((((t1.c1))<((t1.c64)))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((('') NOT BETWEEN (((t1.c89) NOT BETWEEN (t1.c2) AND (t1.c89))) AND ((((t1.c1))<((t1.c64))))));
SELECT SUM(count) FROM (SELECT (((('') NOT BETWEEN (((t1.c89) NOT BETWEEN (t1.c2) AND (t1.c89))) AND ((((t1.c1))<((t1.c64)))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((('') NOT BETWEEN (((t1.c89) NOT BETWEEN (t1.c2) AND (t1.c89))) AND ((((t1.c1))<((t1.c64))))));
SELECT ALL * FROM t1 WHERE (COALESCE(DISTINCT ((t1.c1)/(t1.c2)), SQLITE_VERSION()));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((t1.c1)/(t1.c2)), SQLITE_VERSION())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (COALESCE(DISTINCT ((t1.c1)/(t1.c2)), SQLITE_VERSION()));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((t1.c1)/(t1.c2)), SQLITE_VERSION())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (COALESCE(DISTINCT ((t1.c1)/(t1.c2)), SQLITE_VERSION()));
SELECT * FROM t1 WHERE (((((((t1.c65))>((t1.c64))), 0.49946830121335406, ((t1.c89)<=(t1.c65))))<(((t1.c65 IN (t1.c2, t1.c2)), ((t1.c64)GLOB(t1.c65)), '-1969933302')))) ORDER BY ((t1.c1 IN (t1.c2, t1.c65)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c65))>((t1.c64))), 0.49946830121335406, ((t1.c89)<=(t1.c65))))<(((t1.c65 IN (t1.c2, t1.c2)), ((t1.c64)GLOB(t1.c65)), '-1969933302')))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c1 IN (t1.c2, t1.c65)) IN ())  NULLS LAST);
SELECT * FROM t1 WHERE (((((((t1.c65))>((t1.c64))), 0.49946830121335406, ((t1.c89)<=(t1.c65))))<(((t1.c65 IN (t1.c2, t1.c2)), ((t1.c64)GLOB(t1.c65)), '-1969933302')))) ORDER BY ((t1.c1 IN (t1.c2, t1.c65)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c65))>((t1.c64))), 0.49946830121335406, ((t1.c89)<=(t1.c65))))<(((t1.c65 IN (t1.c2, t1.c2)), ((t1.c64)GLOB(t1.c65)), '-1969933302')))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c1 IN (t1.c2, t1.c65)) IN ())  NULLS LAST);
SELECT * FROM t1 WHERE (((((((t1.c65))>((t1.c64))), 0.49946830121335406, ((t1.c89)<=(t1.c65))))<(((t1.c65 IN (t1.c2, t1.c2)), ((t1.c64)GLOB(t1.c65)), '-1969933302')))) ORDER BY ((t1.c1 IN (t1.c2, t1.c65)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((t1.c65 COLLATE NOCASE) NOT NULL)) ORDER BY t1.c89 DESC  NULLS LAST, CAST(CAST(t1.c2 AS BLOB) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c65 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY t1.c89 DESC  NULLS LAST, CAST(CAST(t1.c2 AS BLOB) AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((t1.c65 COLLATE NOCASE) NOT NULL)) ORDER BY t1.c89 DESC  NULLS LAST, CAST(CAST(t1.c2 AS BLOB) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c65 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY t1.c89 DESC  NULLS LAST, CAST(CAST(t1.c2 AS BLOB) AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((t1.c65 COLLATE NOCASE) NOT NULL)) ORDER BY t1.c89 DESC  NULLS LAST, CAST(CAST(t1.c2 AS BLOB) AS BLOB) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c65 IN ())) NOT NULL)) ORDER BY CASE WHEN CASE WHEN ' D{f''|' THEN t1.c89 END THEN (t1.c1 IN ()) WHEN t1.c1 THEN t1.c64 WHEN json_object(t1.c2, t1.c64) THEN ((((t1.c65)OR(t1.c64)))OR(t1.c65)) END ASC, ((((t1.c64)|(NULL))) BETWEEN (t1.c65) AND ((('l') ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c65 IN ())) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN CASE WHEN ' D{f''|' THEN t1.c89 END THEN (t1.c1 IN ()) WHEN t1.c1 THEN t1.c64 WHEN json_object(t1.c2, t1.c64) THEN ((((t1.c65)OR(t1.c64)))OR(t1.c65)) END ASC, ((((t1.c64)|(NULL))) BETWEEN (t1.c65) AND ((('l') ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c65 IN ())) NOT NULL)) ORDER BY CASE WHEN CASE WHEN ' D{f''|' THEN t1.c89 END THEN (t1.c1 IN ()) WHEN t1.c1 THEN t1.c64 WHEN json_object(t1.c2, t1.c64) THEN ((((t1.c65)OR(t1.c64)))OR(t1.c65)) END ASC, ((((t1.c64)|(NULL))) BETWEEN (t1.c65) AND ((('l') ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c65 IN ())) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN CASE WHEN ' D{f''|' THEN t1.c89 END THEN (t1.c1 IN ()) WHEN t1.c1 THEN t1.c64 WHEN json_object(t1.c2, t1.c64) THEN ((((t1.c65)OR(t1.c64)))OR(t1.c65)) END ASC, ((((t1.c64)|(NULL))) BETWEEN (t1.c65) AND ((('l') ISNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY CASE WHEN ((((t1.c2)AND(t1.c89)))OR(t1.c64)) THEN CASE WHEN t1.c2 THEN t1.c1 END ELSE ((t1.c65) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((((t1.c2)AND(t1.c89)))OR(t1.c64)) THEN CASE WHEN t1.c2 THEN t1.c1 END ELSE ((t1.c65) IS TRUE) END ASC);
SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY CASE WHEN ((((t1.c2)AND(t1.c89)))OR(t1.c64)) THEN CASE WHEN t1.c2 THEN t1.c1 END ELSE ((t1.c65) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((((t1.c2)AND(t1.c89)))OR(t1.c64)) THEN CASE WHEN t1.c2 THEN t1.c1 END ELSE ((t1.c65) IS TRUE) END ASC);
SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY CASE WHEN ((((t1.c2)AND(t1.c89)))OR(t1.c64)) THEN CASE WHEN t1.c2 THEN t1.c1 END ELSE ((t1.c65) IS TRUE) END ASC;
SELECT * FROM t1 WHERE (((((t1.c65) BETWEEN (t1.c89) AND (t1.c65))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c65) BETWEEN (t1.c89) AND (t1.c65))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c65) BETWEEN (t1.c89) AND (t1.c65))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c65) BETWEEN (t1.c89) AND (t1.c65))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c65) BETWEEN (t1.c89) AND (t1.c65))) IS TRUE));
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c64 AS NUMERIC)) NOT BETWEEN (((NULL)GLOB(t1.c89))) AND (CASE t1.c89  WHEN t1.c89 THEN t1.c2 WHEN t1.c65 THEN '0.6481211351024756' WHEN t1.c2 THEN t1.c89 ELSE t1.c64 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c64 AS NUMERIC)) NOT BETWEEN (((NULL)GLOB(t1.c89))) AND (CASE t1.c89  WHEN t1.c89 THEN t1.c2 WHEN t1.c65 THEN '0.6481211351024756' WHEN t1.c2 THEN t1.c89 ELSE t1.c64 END))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c64 AS NUMERIC)) NOT BETWEEN (((NULL)GLOB(t1.c89))) AND (CASE t1.c89  WHEN t1.c89 THEN t1.c2 WHEN t1.c65 THEN '0.6481211351024756' WHEN t1.c2 THEN t1.c89 ELSE t1.c64 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c64 AS NUMERIC)) NOT BETWEEN (((NULL)GLOB(t1.c89))) AND (CASE t1.c89  WHEN t1.c89 THEN t1.c2 WHEN t1.c65 THEN '0.6481211351024756' WHEN t1.c2 THEN t1.c89 ELSE t1.c64 END))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c64 AS NUMERIC)) NOT BETWEEN (((NULL)GLOB(t1.c89))) AND (CASE t1.c89  WHEN t1.c89 THEN t1.c2 WHEN t1.c65 THEN '0.6481211351024756' WHEN t1.c2 THEN t1.c89 ELSE t1.c64 END)));
SELECT ALL * FROM t1 WHERE (((((t1.c64) NOT NULL))LIKE(t1.c2))) ORDER BY CASE WHEN (t1.c2 IN ()) THEN ((t1.c89)>>(t1.c65)) WHEN ((t1.c1)GLOB(t1.c64)) THEN (((t1.c2)) NOT BETWEEN ((t1.c89)) AND ((t1.c65))) WHEN ((t1.c65)%(t1.c89)) THEN ((t1.c64) NOT BETWEEN (t1.c64) AND (0xffffffffa7c11b11)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c64) NOT NULL))LIKE(t1.c2))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (t1.c2 IN ()) THEN ((t1.c89)>>(t1.c65)) WHEN ((t1.c1)GLOB(t1.c64)) THEN (((t1.c2)) NOT BETWEEN ((t1.c89)) AND ((t1.c65))) WHEN ((t1.c65)%(t1.c89)) THEN ((t1.c64) NOT BETWEEN (t1.c64) AND (0Xffffffffa7c11b11)) END  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((t1.c64) NOT NULL))LIKE(t1.c2))) ORDER BY CASE WHEN (t1.c2 IN ()) THEN ((t1.c89)>>(t1.c65)) WHEN ((t1.c1)GLOB(t1.c64)) THEN (((t1.c2)) NOT BETWEEN ((t1.c89)) AND ((t1.c65))) WHEN ((t1.c65)%(t1.c89)) THEN ((t1.c64) NOT BETWEEN (t1.c64) AND (0xffffffffa7c11b11)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c64) NOT NULL))LIKE(t1.c2))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (t1.c2 IN ()) THEN ((t1.c89)>>(t1.c65)) WHEN ((t1.c1)GLOB(t1.c64)) THEN (((t1.c2)) NOT BETWEEN ((t1.c89)) AND ((t1.c65))) WHEN ((t1.c65)%(t1.c89)) THEN ((t1.c64) NOT BETWEEN (t1.c64) AND (0Xffffffffa7c11b11)) END  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((t1.c64) NOT NULL))LIKE(t1.c2))) ORDER BY CASE WHEN (t1.c2 IN ()) THEN ((t1.c89)>>(t1.c65)) WHEN ((t1.c1)GLOB(t1.c64)) THEN (((t1.c2)) NOT BETWEEN ((t1.c89)) AND ((t1.c65))) WHEN ((t1.c65)%(t1.c89)) THEN ((t1.c64) NOT BETWEEN (t1.c64) AND (0xffffffffa7c11b11)) END  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2))=(((t1.c1 IN (t1.c64)))))) ORDER BY CASE ((t1.c65) BETWEEN (t1.c2) AND (t1.c89))  WHEN LOWER(t1.c2) THEN ((t1.c89) ISNULL) END;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2))==(((t1.c1 IN (t1.c64)))))) IS TRUE)  as count FROM t1 ORDER BY CASE ((t1.c65) BETWEEN (t1.c2) AND (t1.c89))  WHEN LOWER(t1.c2) THEN ((t1.c89) ISNULL) END);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2))=(((t1.c1 IN (t1.c64)))))) ORDER BY CASE ((t1.c65) BETWEEN (t1.c2) AND (t1.c89))  WHEN LOWER(t1.c2) THEN ((t1.c89) ISNULL) END;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2))==(((t1.c1 IN (t1.c64)))))) IS TRUE)  as count FROM t1 ORDER BY CASE ((t1.c65) BETWEEN (t1.c2) AND (t1.c89))  WHEN LOWER(t1.c2) THEN ((t1.c89) ISNULL) END);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2))=(((t1.c1 IN (t1.c64)))))) ORDER BY CASE ((t1.c65) BETWEEN (t1.c2) AND (t1.c89))  WHEN LOWER(t1.c2) THEN ((t1.c89) ISNULL) END;
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c89) NOT BETWEEN (t1.c65) AND ('1034004367')) THEN (- ('\nITob	Q')) END) ORDER BY ((CASE WHEN NULL THEN t1.c1 WHEN t1.c65 THEN t1.c64 WHEN t1.c65 THEN t1.c2 ELSE 0.36614796858082144 END) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c89) NOT BETWEEN (t1.c65) AND ('1034004367')) THEN (- ('\nITob	Q')) END) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN NULL THEN t1.c1 WHEN t1.c65 THEN t1.c64 WHEN t1.c65 THEN t1.c2 ELSE 0.36614796858082144 END) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c89) NOT BETWEEN (t1.c65) AND ('1034004367')) THEN (- ('\nITob	Q')) END) ORDER BY ((CASE WHEN NULL THEN t1.c1 WHEN t1.c65 THEN t1.c64 WHEN t1.c65 THEN t1.c2 ELSE 0.36614796858082144 END) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c89) NOT BETWEEN (t1.c65) AND ('1034004367')) THEN (- ('\nITob	Q')) END) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN NULL THEN t1.c1 WHEN t1.c65 THEN t1.c64 WHEN t1.c65 THEN t1.c2 ELSE 0.36614796858082144 END) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c89) NOT BETWEEN (t1.c65) AND ('1034004367')) THEN (- ('\nITob	Q')) END) ORDER BY ((CASE WHEN NULL THEN t1.c1 WHEN t1.c65 THEN t1.c64 WHEN t1.c65 THEN t1.c2 ELSE 0.36614796858082144 END) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (t1.c65);
SELECT SUM(count) FROM (SELECT ((t1.c65) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c65);
SELECT SUM(count) FROM (SELECT ((t1.c65) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c65);
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT ALL COUNT(*) FROM t1 WHERE (LIKELIHOOD(t1.c2, 0.9103546333100954)) ORDER BY CASE ''  WHEN ((t1.c65)-(t1.c89)) THEN CASE WHEN t1.c65 THEN t1.c89 ELSE t1.c2 END ELSE (NOT (t1.c89)) END DESC, t1.c65 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(t1.c2, 0.9103546333100954)) IS TRUE)  as count FROM t1 ORDER BY CASE ''  WHEN ((t1.c65)-(t1.c89)) THEN CASE WHEN t1.c65 THEN t1.c89 ELSE t1.c2 END ELSE (NOT (t1.c89)) END DESC, t1.c65 COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (LIKELIHOOD(t1.c2, 0.9103546333100954)) ORDER BY CASE ''  WHEN ((t1.c65)-(t1.c89)) THEN CASE WHEN t1.c65 THEN t1.c89 ELSE t1.c2 END ELSE (NOT (t1.c89)) END DESC, t1.c65 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(t1.c2, 0.9103546333100954)) IS TRUE)  as count FROM t1 ORDER BY CASE ''  WHEN ((t1.c65)-(t1.c89)) THEN CASE WHEN t1.c65 THEN t1.c89 ELSE t1.c2 END ELSE (NOT (t1.c89)) END DESC, t1.c65 COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (LIKELIHOOD(t1.c2, 0.9103546333100954)) ORDER BY CASE ''  WHEN ((t1.c65)-(t1.c89)) THEN CASE WHEN t1.c65 THEN t1.c89 ELSE t1.c2 END ELSE (NOT (t1.c89)) END DESC, t1.c65 COLLATE NOCASE DESC;
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c65 IN ()))AND(((t1.c1)>(t1.c1)))))OR((t1.c2 IN ())))) ORDER BY (((t1.c2)&(t1.c65)) IN ((t1.c89 IN (t1.c64)))), ((('426905943' IN ()))%(0.6360362525797398)) ASC, ((((JULIANDAY(t1.c2, 0.06815889013921006, t1.c64, t1.c2, t1.c65))OR(((t1.c2) NOT NULL))))AND(t1.c65 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c65 IN ()))AND(((t1.c1)>(t1.c1)))))OR((t1.c2 IN ())))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c2)&(t1.c65)) IN ((t1.c89 IN (t1.c64)))), ((('426905943' IN ()))%(0.6360362525797398)) ASC, ((((JULIANDAY(t1.c2, 0.06815889013921006, t1.c64, t1.c2, t1.c65))OR(((t1.c2) NOT NULL))))AND(t1.c65 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c65 IN ()))AND(((t1.c1)>(t1.c1)))))OR((t1.c2 IN ())))) ORDER BY (((t1.c2)&(t1.c65)) IN ((t1.c89 IN (t1.c64)))), ((('426905943' IN ()))%(0.6360362525797398)) ASC, ((((JULIANDAY(t1.c2, 0.06815889013921006, t1.c64, t1.c2, t1.c65))OR(((t1.c2) NOT NULL))))AND(t1.c65 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c65 IN ()))AND(((t1.c1)>(t1.c1)))))OR((t1.c2 IN ())))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c2)&(t1.c65)) IN ((t1.c89 IN (t1.c64)))), ((('426905943' IN ()))%(0.6360362525797398)) ASC, ((((JULIANDAY(t1.c2, 0.06815889013921006, t1.c64, t1.c2, t1.c65))OR(((t1.c2) NOT NULL))))AND(t1.c65 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c65 IN ()))AND(((t1.c1)>(t1.c1)))))OR((t1.c2 IN ())))) ORDER BY (((t1.c2)&(t1.c65)) IN ((t1.c89 IN (t1.c64)))), ((('426905943' IN ()))%(0.6360362525797398)) ASC, ((((JULIANDAY(t1.c2, 0.06815889013921006, t1.c64, t1.c2, t1.c65))OR(((t1.c2) NOT NULL))))AND(t1.c65 COLLATE BINARY)) DESC;
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE ((((t1.c65, t1.c89, t1.c64)) BETWEEN ((CAST(t1.c64 AS TEXT), (+ (t1.c89)), IFNULL(DISTINCT t1.c1, t1.c2))) AND ((((t1.c64) BETWEEN (t1.c89) AND (t1.c2)), (t1.c2 IN (t1.c64)), ((t1.c2)<=(t1.c64))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c65, t1.c89, t1.c64)) BETWEEN ((CAST(t1.c64 AS TEXT), (+ (t1.c89)), IFNULL(DISTINCT t1.c1, t1.c2))) AND ((((t1.c64) BETWEEN (t1.c89) AND (t1.c2)), (t1.c2 IN (t1.c64)), ((t1.c2)<=(t1.c64)))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE ((((t1.c65, t1.c89, t1.c64)) BETWEEN ((CAST(t1.c64 AS TEXT), (+ (t1.c89)), IFNULL(DISTINCT t1.c1, t1.c2))) AND ((((t1.c64) BETWEEN (t1.c89) AND (t1.c2)), (t1.c2 IN (t1.c64)), ((t1.c2)<=(t1.c64))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c65, t1.c89, t1.c64)) BETWEEN ((CAST(t1.c64 AS TEXT), (+ (t1.c89)), IFNULL(DISTINCT t1.c1, t1.c2))) AND ((((t1.c64) BETWEEN (t1.c89) AND (t1.c2)), (t1.c2 IN (t1.c64)), ((t1.c2)<=(t1.c64)))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE ((((t1.c65, t1.c89, t1.c64)) BETWEEN ((CAST(t1.c64 AS TEXT), (+ (t1.c89)), IFNULL(DISTINCT t1.c1, t1.c2))) AND ((((t1.c64) BETWEEN (t1.c89) AND (t1.c2)), (t1.c2 IN (t1.c64)), ((t1.c2)<=(t1.c64))))));
SELECT ALL COUNT(*) FROM t1 WHERE (json_object(t1.c65, t1.c2) COLLATE BINARY) ORDER BY ((((x'')AND(((t1.c89) NOT BETWEEN (t1.c65) AND (t1.c2)))))OR(CAST(t1.c64 AS BLOB))) ASC  NULLS FIRST, (- (t1.c65 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((json_object(t1.c65, t1.c2) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY ((((x'')AND(((t1.c89) NOT BETWEEN (t1.c65) AND (t1.c2)))))OR(CAST(t1.c64 AS BLOB))) ASC  NULLS FIRST, (- (t1.c65 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (json_object(t1.c65, t1.c2) COLLATE BINARY) ORDER BY ((((x'')AND(((t1.c89) NOT BETWEEN (t1.c65) AND (t1.c2)))))OR(CAST(t1.c64 AS BLOB))) ASC  NULLS FIRST, (- (t1.c65 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((json_object(t1.c65, t1.c2) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY ((((x'')AND(((t1.c89) NOT BETWEEN (t1.c65) AND (t1.c2)))))OR(CAST(t1.c64 AS BLOB))) ASC  NULLS FIRST, (- (t1.c65 COLLATE RTRIM)) DESC);
SELECT ALL * FROM t1 WHERE ((x'' IN ((t1.c1 IN ('1b')), ((t1.c65)+(t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ((t1.c1 IN ('1b')), ((t1.c65)+(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((x'' IN ((t1.c1 IN ('1b')), ((t1.c65)+(t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ((t1.c1 IN ('1b')), ((t1.c65)+(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((x'' IN ((t1.c1 IN ('1b')), ((t1.c65)+(t1.c1)))));
SELECT * FROM t1 WHERE (((t1.c65 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c65 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c65 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c65 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c65 COLLATE NOCASE) NOT NULL));
SELECT ALL * FROM t1 WHERE (((((t1.c89)) NOT BETWEEN ((t1.c65)) AND ((t1.c1))) IN ())) ORDER BY (NOT (((t1.c1) ISNULL))) ASC  NULLS LAST, (((- (t1.c1)))|(CASE WHEN t1.c64 THEN t1.c1 WHEN t1.c65 THEN t1.c1 WHEN t1.c64 THEN 0.7290072365030116 END)) ASC  NULLS LAST, CAST(t1.c64 AS TEXT) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c89)) NOT BETWEEN ((t1.c65)) AND ((t1.c1))) IN ())) IS TRUE)  as count FROM t1 ORDER BY (NOT (((t1.c1) ISNULL))) ASC  NULLS LAST, (((- (t1.c1)))|(CASE WHEN t1.c64 THEN t1.c1 WHEN t1.c65 THEN t1.c1 WHEN t1.c64 THEN 0.7290072365030116 END)) ASC  NULLS LAST, CAST(t1.c64 AS TEXT) COLLATE BINARY);
SELECT ALL * FROM t1 WHERE (((((t1.c89)) NOT BETWEEN ((t1.c65)) AND ((t1.c1))) IN ())) ORDER BY (NOT (((t1.c1) ISNULL))) ASC  NULLS LAST, (((- (t1.c1)))|(CASE WHEN t1.c64 THEN t1.c1 WHEN t1.c65 THEN t1.c1 WHEN t1.c64 THEN 0.7290072365030116 END)) ASC  NULLS LAST, CAST(t1.c64 AS TEXT) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c89)) NOT BETWEEN ((t1.c65)) AND ((t1.c1))) IN ())) IS TRUE)  as count FROM t1 ORDER BY (NOT (((t1.c1) ISNULL))) ASC  NULLS LAST, (((- (t1.c1)))|(CASE WHEN t1.c64 THEN t1.c1 WHEN t1.c65 THEN t1.c1 WHEN t1.c64 THEN 0.7290072365030116 END)) ASC  NULLS LAST, CAST(t1.c64 AS TEXT) COLLATE BINARY);
SELECT ALL * FROM t1 WHERE (((((t1.c89)) NOT BETWEEN ((t1.c65)) AND ((t1.c1))) IN ())) ORDER BY (NOT (((t1.c1) ISNULL))) ASC  NULLS LAST, (((- (t1.c1)))|(CASE WHEN t1.c64 THEN t1.c1 WHEN t1.c65 THEN t1.c1 WHEN t1.c64 THEN 0.7290072365030116 END)) ASC  NULLS LAST, CAST(t1.c64 AS TEXT) COLLATE BINARY;
SELECT ALL * FROM t1 NOT INDEXED WHERE (x'') ORDER BY (((x'')) BETWEEN (((((t1.c64)) NOT BETWEEN ((t1.c89)) AND ((t1.c65))))) AND (((t1.c89 IN (t1.c89, t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 ORDER BY (((x'')) BETWEEN (((((t1.c64)) NOT BETWEEN ((t1.c89)) AND ((t1.c65))))) AND (((t1.c89 IN (t1.c89, t1.c1))))));
SELECT ALL * FROM t1 NOT INDEXED WHERE (x'') ORDER BY (((x'')) BETWEEN (((((t1.c64)) NOT BETWEEN ((t1.c89)) AND ((t1.c65))))) AND (((t1.c89 IN (t1.c89, t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 ORDER BY (((x'')) BETWEEN (((((t1.c64)) NOT BETWEEN ((t1.c89)) AND ((t1.c65))))) AND (((t1.c89 IN (t1.c89, t1.c1))))));
SELECT ALL * FROM t1 NOT INDEXED WHERE (x'') ORDER BY (((x'')) BETWEEN (((((t1.c64)) NOT BETWEEN ((t1.c89)) AND ((t1.c65))))) AND (((t1.c89 IN (t1.c89, t1.c1)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN NULL THEN t1.c64 ELSE t1.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN NULL THEN t1.c64 ELSE t1.c2 END) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN NULL THEN t1.c64 ELSE t1.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN NULL THEN t1.c64 ELSE t1.c2 END) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN NULL THEN t1.c64 ELSE t1.c2 END) NOTNULL));
SELECT ALL * FROM t1 WHERE ((CASE WHEN t1.c1 THEN t1.c89 END IN (((t1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t1.c1 THEN t1.c89 END IN (((t1.c1) ISNULL)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((CASE WHEN t1.c1 THEN t1.c89 END IN (((t1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t1.c1 THEN t1.c89 END IN (((t1.c1) ISNULL)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((CASE WHEN t1.c1 THEN t1.c89 END IN (((t1.c1) ISNULL))));
SELECT * FROM t1 WHERE (t1.c1) ORDER BY (((((NULL) NOT BETWEEN (t1.c2) AND (t1.c2)), (~ (t1.c1)), t1.c65 COLLATE BINARY))>((((((t1.c64)OR(t1.c65)))AND(t1.c1)), CAST(t1.c2 AS BLOB), DATETIME(t1.c2, t1.c65, t1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1 ORDER BY (((((NULL) NOT BETWEEN (t1.c2) AND (t1.c2)), (~ (t1.c1)), t1.c65 COLLATE BINARY))>((((((t1.c64)OR(t1.c65)))AND(t1.c1)), CAST(t1.c2 AS BLOB), DATETIME(t1.c2, t1.c65, t1.c1))))  NULLS LAST);
SELECT * FROM t1 WHERE (t1.c1) ORDER BY (((((NULL) NOT BETWEEN (t1.c2) AND (t1.c2)), (~ (t1.c1)), t1.c65 COLLATE BINARY))>((((((t1.c64)OR(t1.c65)))AND(t1.c1)), CAST(t1.c2 AS BLOB), DATETIME(t1.c2, t1.c65, t1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1 ORDER BY (((((NULL) NOT BETWEEN (t1.c2) AND (t1.c2)), (~ (t1.c1)), t1.c65 COLLATE BINARY))>((((((t1.c64)OR(t1.c65)))AND(t1.c1)), CAST(t1.c2 AS BLOB), DATETIME(t1.c2, t1.c65, t1.c1))))  NULLS LAST);
SELECT * FROM t1 WHERE (t1.c1) ORDER BY (((((NULL) NOT BETWEEN (t1.c2) AND (t1.c2)), (~ (t1.c1)), t1.c65 COLLATE BINARY))>((((((t1.c64)OR(t1.c65)))AND(t1.c1)), CAST(t1.c2 AS BLOB), DATETIME(t1.c2, t1.c65, t1.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((NOT ((((('-1565289801')OR(t1.c2)))OR(t1.c89))))) ORDER BY CASE WHEN ((NULL) NOT BETWEEN (x'eb7f') AND ('-1912299088')) THEN t1.c2 ELSE ((t1.c65) NOT BETWEEN (t1.c89) AND ('')) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((('-1565289801')OR(t1.c2)))OR(t1.c89))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((NULL) NOT BETWEEN (x'eb7f') AND ('-1912299088')) THEN t1.c2 ELSE ((t1.c65) NOT BETWEEN (t1.c89) AND ('')) END DESC);
SELECT COUNT(*) FROM t1 WHERE ((NOT ((((('-1565289801')OR(t1.c2)))OR(t1.c89))))) ORDER BY CASE WHEN ((NULL) NOT BETWEEN (x'eb7f') AND ('-1912299088')) THEN t1.c2 ELSE ((t1.c65) NOT BETWEEN (t1.c89) AND ('')) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((('-1565289801')OR(t1.c2)))OR(t1.c89))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((NULL) NOT BETWEEN (x'eb7f') AND ('-1912299088')) THEN t1.c2 ELSE ((t1.c65) NOT BETWEEN (t1.c89) AND ('')) END DESC);
SELECT COUNT(*) FROM t1 WHERE ((NOT ((((('-1565289801')OR(t1.c2)))OR(t1.c89))))) ORDER BY CASE WHEN ((NULL) NOT BETWEEN (x'eb7f') AND ('-1912299088')) THEN t1.c2 ELSE ((t1.c65) NOT BETWEEN (t1.c89) AND ('')) END DESC;
SELECT ALL * FROM t1 WHERE ((((t1.c89, t1.c2, t1.c65)) NOT BETWEEN ((0.575079972080397, ((t1.c2)&(t1.c89)), (((t1.c2))==((t1.c2))))) AND ((x'', ((t1.c2)>(t1.c89)), CAST(t1.c64 AS TEXT))))) ORDER BY LOWER(DISTINCT t1.c89) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c89, t1.c2, t1.c65)) NOT BETWEEN ((0.575079972080397, ((t1.c2)&(t1.c89)), (((t1.c2))=((t1.c2))))) AND ((x'', ((t1.c2)>(t1.c89)), CAST(t1.c64 AS TEXT))))) IS TRUE)  as count FROM t1 ORDER BY LOWER(DISTINCT t1.c89) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((((t1.c89, t1.c2, t1.c65)) NOT BETWEEN ((0.575079972080397, ((t1.c2)&(t1.c89)), (((t1.c2))==((t1.c2))))) AND ((x'', ((t1.c2)>(t1.c89)), CAST(t1.c64 AS TEXT))))) ORDER BY LOWER(DISTINCT t1.c89) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c89, t1.c2, t1.c65)) NOT BETWEEN ((0.575079972080397, ((t1.c2)&(t1.c89)), (((t1.c2))=((t1.c2))))) AND ((x'', ((t1.c2)>(t1.c89)), CAST(t1.c64 AS TEXT))))) IS TRUE)  as count FROM t1 ORDER BY LOWER(DISTINCT t1.c89) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((((t1.c89, t1.c2, t1.c65)) NOT BETWEEN ((0.575079972080397, ((t1.c2)&(t1.c89)), (((t1.c2))==((t1.c2))))) AND ((x'', ((t1.c2)>(t1.c89)), CAST(t1.c64 AS TEXT))))) ORDER BY LOWER(DISTINCT t1.c89) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ('-2141028992') ORDER BY t1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-2141028992') IS TRUE)  as count FROM t1 ORDER BY t1.c2  NULLS LAST);
SELECT ALL * FROM t1 WHERE ('-2141028992') ORDER BY t1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-2141028992') IS TRUE)  as count FROM t1 ORDER BY t1.c2  NULLS LAST);
SELECT ALL * FROM t1 WHERE ('-2141028992') ORDER BY t1.c2  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((t1.c1) BETWEEN (t1.c89) AND (t1.c65)) COLLATE NOCASE) ORDER BY ((((t1.c2)=(t1.c89))) BETWEEN (((t1.c1)OR(t1.c65))) AND (((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c64)))), CASE t1.c2  WHEN ((t1.c89)<(t1.c89)) THEN ((t1.c1) ISNULL) ELSE 0.9431240090691068 COLLATE RTRIM END  NULLS FIRST, ((((t1.c1) ISNULL))GLOB((t1.c64 IN (t1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1) BETWEEN (t1.c89) AND (t1.c65)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c2)=(t1.c89))) BETWEEN (((t1.c1)OR(t1.c65))) AND (((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c64)))), CASE t1.c2  WHEN ((t1.c89)<(t1.c89)) THEN ((t1.c1) ISNULL) ELSE 0.9431240090691068 COLLATE RTRIM END  NULLS FIRST, ((((t1.c1) ISNULL))GLOB((t1.c64 IN (t1.c2)))) DESC);
SELECT COUNT(*) FROM t1 WHERE (((t1.c1) BETWEEN (t1.c89) AND (t1.c65)) COLLATE NOCASE) ORDER BY ((((t1.c2)=(t1.c89))) BETWEEN (((t1.c1)OR(t1.c65))) AND (((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c64)))), CASE t1.c2  WHEN ((t1.c89)<(t1.c89)) THEN ((t1.c1) ISNULL) ELSE 0.9431240090691068 COLLATE RTRIM END  NULLS FIRST, ((((t1.c1) ISNULL))GLOB((t1.c64 IN (t1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1) BETWEEN (t1.c89) AND (t1.c65)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c2)=(t1.c89))) BETWEEN (((t1.c1)OR(t1.c65))) AND (((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c64)))), CASE t1.c2  WHEN ((t1.c89)<(t1.c89)) THEN ((t1.c1) ISNULL) ELSE 0.9431240090691068 COLLATE RTRIM END  NULLS FIRST, ((((t1.c1) ISNULL))GLOB((t1.c64 IN (t1.c2)))) DESC);
SELECT COUNT(*) FROM t1 WHERE (((t1.c1) BETWEEN (t1.c89) AND (t1.c65)) COLLATE NOCASE) ORDER BY ((((t1.c2)=(t1.c89))) BETWEEN (((t1.c1)OR(t1.c65))) AND (((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c64)))), CASE t1.c2  WHEN ((t1.c89)<(t1.c89)) THEN ((t1.c1) ISNULL) ELSE 0.9431240090691068 COLLATE RTRIM END  NULLS FIRST, ((((t1.c1) ISNULL))GLOB((t1.c64 IN (t1.c2)))) DESC;
SELECT ALL * FROM t1 WHERE ('k^k');
SELECT SUM(count) FROM (SELECT ALL (('k^k') IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ('k^k');
SELECT SUM(count) FROM (SELECT ALL (('k^k') IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ('k^k');
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((t1.c2)AND(t1.c1)))AND(t1.c64)), (((t1.c1)) BETWEEN ((t1.c64)) AND ((t1.c64))), t1.c2))=((t1.c64 COLLATE NOCASE, ((((((((t1.c2)AND(t1.c65)))AND(t1.c1)))AND(t1.c2)))AND(t1.c89)), ((t1.c65)OR(t1.c64))))));
SELECT SUM(count) FROM (SELECT (((((((((t1.c2)AND(t1.c1)))AND(t1.c64)), (((t1.c1)) BETWEEN ((t1.c64)) AND ((t1.c64))), t1.c2))=((t1.c64 COLLATE NOCASE, ((((((((t1.c2)AND(t1.c65)))AND(t1.c1)))AND(t1.c2)))AND(t1.c89)), ((t1.c65)OR(t1.c64)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((t1.c2)AND(t1.c1)))AND(t1.c64)), (((t1.c1)) BETWEEN ((t1.c64)) AND ((t1.c64))), t1.c2))=((t1.c64 COLLATE NOCASE, ((((((((t1.c2)AND(t1.c65)))AND(t1.c1)))AND(t1.c2)))AND(t1.c89)), ((t1.c65)OR(t1.c64))))));
SELECT SUM(count) FROM (SELECT (((((((((t1.c2)AND(t1.c1)))AND(t1.c64)), (((t1.c1)) BETWEEN ((t1.c64)) AND ((t1.c64))), t1.c2))=((t1.c64 COLLATE NOCASE, ((((((((t1.c2)AND(t1.c65)))AND(t1.c1)))AND(t1.c2)))AND(t1.c89)), ((t1.c65)OR(t1.c64)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((t1.c2)AND(t1.c1)))AND(t1.c64)), (((t1.c1)) BETWEEN ((t1.c64)) AND ((t1.c64))), t1.c2))=((t1.c64 COLLATE NOCASE, ((((((((t1.c2)AND(t1.c65)))AND(t1.c1)))AND(t1.c2)))AND(t1.c89)), ((t1.c65)OR(t1.c64))))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c64)=(t1.c65)))+('598670911'))) ORDER BY '-2067746278' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64)==(t1.c65)))+('598670911'))) IS TRUE)  as count FROM t1 ORDER BY '-2067746278' ASC);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c64)=(t1.c65)))+('598670911'))) ORDER BY '-2067746278' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64)==(t1.c65)))+('598670911'))) IS TRUE)  as count FROM t1 ORDER BY '-2067746278' ASC);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c64)=(t1.c65)))+('598670911'))) ORDER BY '-2067746278' ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c65)AND(NULL)))AND(t1.c65)))AND(t1.c2)))OR(t1.c65)))%((620658020 IN (t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c65)AND(NULL)))AND(t1.c65)))AND(t1.c2)))OR(t1.c65)))%((620658020 IN (t1.c2))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c65)AND(NULL)))AND(t1.c65)))AND(t1.c2)))OR(t1.c65)))%((620658020 IN (t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c65)AND(NULL)))AND(t1.c65)))AND(t1.c2)))OR(t1.c65)))%((620658020 IN (t1.c2))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c65)AND(NULL)))AND(t1.c65)))AND(t1.c2)))OR(t1.c65)))%((620658020 IN (t1.c2)))));
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c64) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c64) IS TRUE) AS REAL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c64) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c64) IS TRUE) AS REAL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c64) IS TRUE) AS REAL));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)%(t1.c1)) IN ())) ORDER BY ((((t1.c89) NOT BETWEEN (t1.c2) AND (t1.c65)))IS NOT(t1.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c1)%(t1.c1)) IN ())) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c89) NOT BETWEEN (t1.c2) AND (t1.c65)))IS NOT(t1.c2)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)%(t1.c1)) IN ())) ORDER BY ((((t1.c89) NOT BETWEEN (t1.c2) AND (t1.c65)))IS NOT(t1.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c1)%(t1.c1)) IN ())) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c89) NOT BETWEEN (t1.c2) AND (t1.c65)))IS NOT(t1.c2)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)%(t1.c1)) IN ())) ORDER BY ((((t1.c89) NOT BETWEEN (t1.c2) AND (t1.c65)))IS NOT(t1.c2)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT ALL * FROM t1 WHERE (0.5607350769341127) ORDER BY ((((((t1.c65) IS TRUE))AND((((t1.c2)) BETWEEN ((t1.c89)) AND ((t1.c2))))))AND(((((t1.c64)AND(x'')))OR(t1.c64)))) DESC;
SELECT SUM(count) FROM (SELECT ((0.5607350769341127) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c65) IS TRUE))AND((((t1.c2)) BETWEEN ((t1.c89)) AND ((t1.c2))))))AND(((((t1.c64)AND(x'')))OR(t1.c64)))) DESC);
SELECT ALL * FROM t1 WHERE (0.5607350769341127) ORDER BY ((((((t1.c65) IS TRUE))AND((((t1.c2)) BETWEEN ((t1.c89)) AND ((t1.c2))))))AND(((((t1.c64)AND(x'')))OR(t1.c64)))) DESC;
SELECT SUM(count) FROM (SELECT ((0.5607350769341127) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c65) IS TRUE))AND((((t1.c2)) BETWEEN ((t1.c89)) AND ((t1.c2))))))AND(((((t1.c64)AND(x'')))OR(t1.c64)))) DESC);
SELECT ALL * FROM t1 WHERE (0.5607350769341127) ORDER BY ((((((t1.c65) IS TRUE))AND((((t1.c2)) BETWEEN ((t1.c89)) AND ((t1.c2))))))AND(((((t1.c64)AND(x'')))OR(t1.c64)))) DESC;
SELECT COUNT(*) FROM t1 WHERE ((- (CASE WHEN t1.c1 THEN t1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN t1.c1 THEN t1.c2 END))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((- (CASE WHEN t1.c1 THEN t1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN t1.c1 THEN t1.c2 END))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((- (CASE WHEN t1.c1 THEN t1.c2 END)));
SELECT * FROM t1 WHERE ((((((+ (t1.c2)))AND(t1.c89)))AND('966606580'))) ORDER BY (+ (CHANGES())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (t1.c2)))AND(t1.c89)))AND('966606580'))) IS TRUE)  as count FROM t1 ORDER BY (+ (CHANGES())) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE ((((((+ (t1.c2)))AND(t1.c89)))AND('966606580'))) ORDER BY (+ (CHANGES())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (t1.c2)))AND(t1.c89)))AND('966606580'))) IS TRUE)  as count FROM t1 ORDER BY (+ (CHANGES())) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE ((((((+ (t1.c2)))AND(t1.c89)))AND('966606580'))) ORDER BY (+ (CHANGES())) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (-1.27532906E9) ORDER BY (~ (t1.c2));
SELECT SUM(count) FROM (SELECT ((-1.27532906E9) IS TRUE)  as count FROM t1 ORDER BY (~ (t1.c2)));
SELECT ALL COUNT(*) FROM t1 WHERE (-1.27532906E9) ORDER BY (~ (t1.c2));
SELECT SUM(count) FROM (SELECT ((-1.27532906E9) IS TRUE)  as count FROM t1 ORDER BY (~ (t1.c2)));
SELECT ALL COUNT(*) FROM t1 WHERE (-1.27532906E9) ORDER BY (~ (t1.c2));
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN LIKELY(DISTINCT t1.c2) THEN ((t1.c64)&(t1.c1)) WHEN (~ (t1.c65)) THEN (t1.c2 IN ()) WHEN CAST(t1.c1 AS REAL) THEN t1.c1 ELSE ((((((((t1.c89)OR(t1.c1)))OR(t1.c65)))OR(-1117507860)))AND(t1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELY(DISTINCT t1.c2) THEN ((t1.c64)&(t1.c1)) WHEN (~ (t1.c65)) THEN (t1.c2 IN ()) WHEN CAST(t1.c1 AS REAL) THEN t1.c1 ELSE ((((((((t1.c89)OR(t1.c1)))OR(t1.c65)))OR(-1117507860)))AND(t1.c1)) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN LIKELY(DISTINCT t1.c2) THEN ((t1.c64)&(t1.c1)) WHEN (~ (t1.c65)) THEN (t1.c2 IN ()) WHEN CAST(t1.c1 AS REAL) THEN t1.c1 ELSE ((((((((t1.c89)OR(t1.c1)))OR(t1.c65)))OR(-1117507860)))AND(t1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELY(DISTINCT t1.c2) THEN ((t1.c64)&(t1.c1)) WHEN (~ (t1.c65)) THEN (t1.c2 IN ()) WHEN CAST(t1.c1 AS REAL) THEN t1.c1 ELSE ((((((((t1.c89)OR(t1.c1)))OR(t1.c65)))OR(-1117507860)))AND(t1.c1)) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN LIKELY(DISTINCT t1.c2) THEN ((t1.c64)&(t1.c1)) WHEN (~ (t1.c65)) THEN (t1.c2 IN ()) WHEN CAST(t1.c1 AS REAL) THEN t1.c1 ELSE ((((((((t1.c89)OR(t1.c1)))OR(t1.c65)))OR(-1117507860)))AND(t1.c1)) END);
SELECT COUNT(*) FROM t1 WHERE (CASE (((t1.c2))==((t1.c65)))  WHEN (t1.c89 IN ()) THEN x'' ELSE ((t1.c65) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t1.c2))==((t1.c65)))  WHEN (t1.c89 IN ()) THEN x'' ELSE ((t1.c65) NOT NULL) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE (((t1.c2))==((t1.c65)))  WHEN (t1.c89 IN ()) THEN x'' ELSE ((t1.c65) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t1.c2))==((t1.c65)))  WHEN (t1.c89 IN ()) THEN x'' ELSE ((t1.c65) NOT NULL) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE (((t1.c2))==((t1.c65)))  WHEN (t1.c89 IN ()) THEN x'' ELSE ((t1.c65) NOT NULL) END);
SELECT COUNT(*) FROM t1 WHERE (TRIM(t1.c64, ((t1.c64) IS TRUE))) ORDER BY CAST((((t1.c1))>((t1.c89))) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t1.c64, ((t1.c64) IS TRUE))) IS TRUE)  as count FROM t1 ORDER BY CAST((((t1.c1))>((t1.c89))) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (TRIM(t1.c64, ((t1.c64) IS TRUE))) ORDER BY CAST((((t1.c1))>((t1.c89))) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t1.c64, ((t1.c64) IS TRUE))) IS TRUE)  as count FROM t1 ORDER BY CAST((((t1.c1))>((t1.c89))) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (TRIM(t1.c64, ((t1.c64) IS TRUE))) ORDER BY CAST((((t1.c1))>((t1.c89))) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c65 AS BLOB)) IS FALSE)) ORDER BY ((((t1.c64)!=(t1.c89))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c65 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c64)<>(t1.c89))) ISNULL));
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c65 AS BLOB)) IS FALSE)) ORDER BY ((((t1.c64)!=(t1.c89))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c65 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c64)<>(t1.c89))) ISNULL));
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c65 AS BLOB)) IS FALSE)) ORDER BY ((((t1.c64)!=(t1.c89))) ISNULL);
SELECT ALL * FROM t1 WHERE (((~ (t1.c64)) IN (((((((((t1.c1)AND(t1.c65)))AND(t1.c64)))OR(t1.c2)))AND(t1.c2))))) ORDER BY CHANGES() ASC;
SELECT SUM(count) FROM (SELECT ALL ((((~ (t1.c64)) IN (((((((((t1.c1)AND(t1.c65)))AND(t1.c64)))OR(t1.c2)))AND(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY CHANGES() ASC);
SELECT ALL * FROM t1 WHERE (((~ (t1.c64)) IN (((((((((t1.c1)AND(t1.c65)))AND(t1.c64)))OR(t1.c2)))AND(t1.c2))))) ORDER BY CHANGES() ASC;
SELECT SUM(count) FROM (SELECT ALL ((((~ (t1.c64)) IN (((((((((t1.c1)AND(t1.c65)))AND(t1.c64)))OR(t1.c2)))AND(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY CHANGES() ASC);
SELECT ALL * FROM t1 WHERE (((~ (t1.c64)) IN (((((((((t1.c1)AND(t1.c65)))AND(t1.c64)))OR(t1.c2)))AND(t1.c2))))) ORDER BY CHANGES() ASC;
SELECT * FROM t1 WHERE ((~ (t1.c64 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (t1.c64 COLLATE BINARY))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((~ (t1.c64 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (t1.c64 COLLATE BINARY))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((~ (t1.c64 COLLATE BINARY)));
SELECT * FROM t1 WHERE (TIME(((t1.c64)>(t1.c89)), ((t1.c65)AND(t1.c1)), ((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c65)))) ORDER BY (((('-1613309082')<=(t1.c1))) BETWEEN (CAST(t1.c1 AS TEXT)) AND (CASE WHEN t1.c2 THEN t1.c64 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TIME(((t1.c64)>(t1.c89)), ((t1.c65)AND(t1.c1)), ((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c65)))) IS TRUE)  as count FROM t1 ORDER BY (((('-1613309082')<=(t1.c1))) BETWEEN (CAST(t1.c1 AS TEXT)) AND (CASE WHEN t1.c2 THEN t1.c64 END)) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (TIME(((t1.c64)>(t1.c89)), ((t1.c65)AND(t1.c1)), ((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c65)))) ORDER BY (((('-1613309082')<=(t1.c1))) BETWEEN (CAST(t1.c1 AS TEXT)) AND (CASE WHEN t1.c2 THEN t1.c64 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TIME(((t1.c64)>(t1.c89)), ((t1.c65)AND(t1.c1)), ((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c65)))) IS TRUE)  as count FROM t1 ORDER BY (((('-1613309082')<=(t1.c1))) BETWEEN (CAST(t1.c1 AS TEXT)) AND (CASE WHEN t1.c2 THEN t1.c64 END)) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (TIME(((t1.c64)>(t1.c89)), ((t1.c65)AND(t1.c1)), ((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c65)))) ORDER BY (((('-1613309082')<=(t1.c1))) BETWEEN (CAST(t1.c1 AS TEXT)) AND (CASE WHEN t1.c2 THEN t1.c64 END)) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (TYPEOF(IFNULL(t1.c65, t1.c89)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(IFNULL(t1.c65, t1.c89))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (TYPEOF(IFNULL(t1.c65, t1.c89)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(IFNULL(t1.c65, t1.c89))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (TYPEOF(IFNULL(t1.c65, t1.c89)));
SELECT ALL COUNT(*) FROM t1 WHERE (((NULL)GLOB(((((t1.c1)AND(t1.c89)))OR(t1.c64))))) ORDER BY t1.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((NULL)GLOB(((((t1.c1)AND(t1.c89)))OR(t1.c64))))) IS TRUE)  as count FROM t1 ORDER BY t1.c2 DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((NULL)GLOB(((((t1.c1)AND(t1.c89)))OR(t1.c64))))) ORDER BY t1.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((NULL)GLOB(((((t1.c1)AND(t1.c89)))OR(t1.c64))))) IS TRUE)  as count FROM t1 ORDER BY t1.c2 DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((NULL)GLOB(((((t1.c1)AND(t1.c89)))OR(t1.c64))))) ORDER BY t1.c2 DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(CAST(0Xffffffff85744e89 AS BLOB) AS BLOB)) ORDER BY (((t1.c2 IN ())) BETWEEN (NULL) AND ((('165710550') BETWEEN (t1.c64) AND (t1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(0xffffffff85744e89 AS BLOB) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c2 IN ())) BETWEEN (NULL) AND ((('165710550') BETWEEN (t1.c64) AND (t1.c1)))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(CAST(0Xffffffff85744e89 AS BLOB) AS BLOB)) ORDER BY (((t1.c2 IN ())) BETWEEN (NULL) AND ((('165710550') BETWEEN (t1.c64) AND (t1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(0xffffffff85744e89 AS BLOB) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c2 IN ())) BETWEEN (NULL) AND ((('165710550') BETWEEN (t1.c64) AND (t1.c1)))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(CAST(0Xffffffff85744e89 AS BLOB) AS BLOB)) ORDER BY (((t1.c2 IN ())) BETWEEN (NULL) AND ((('165710550') BETWEEN (t1.c64) AND (t1.c1)))) ASC;
SELECT COUNT(*) FROM t1 WHERE ((NOT ('-1501959935'))) ORDER BY ((((t1.c65)GLOB(t1.c65)))>(CASE WHEN t1.c1 THEN t1.c65 END)), 0.6355920439417506;
SELECT SUM(count) FROM (SELECT (((NOT ('-1501959935'))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c65)GLOB(t1.c65)))>(CASE WHEN t1.c1 THEN t1.c65 END)), 0.6355920439417506);
SELECT COUNT(*) FROM t1 WHERE ((NOT ('-1501959935'))) ORDER BY ((((t1.c65)GLOB(t1.c65)))>(CASE WHEN t1.c1 THEN t1.c65 END)), 0.6355920439417506;
SELECT SUM(count) FROM (SELECT (((NOT ('-1501959935'))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c65)GLOB(t1.c65)))>(CASE WHEN t1.c1 THEN t1.c65 END)), 0.6355920439417506);
SELECT COUNT(*) FROM t1 WHERE ((NOT ('-1501959935'))) ORDER BY ((((t1.c65)GLOB(t1.c65)))>(CASE WHEN t1.c1 THEN t1.c65 END)), 0.6355920439417506;
SELECT * FROM t1 WHERE (((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c2 THEN t1.c64 WHEN t1.c1 THEN t1.c2 ELSE t1.c65 END)OR(((t1.c89) NOT NULL))))AND(((t1.c64) NOT BETWEEN (t1.c2) AND (t1.c2))))) ORDER BY (((((t1.c1) NOTNULL)))>(((NOT (t1.c65))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c2 THEN t1.c64 WHEN t1.c1 THEN t1.c2 ELSE t1.c65 END)OR(((t1.c89) NOT NULL))))AND(((t1.c64) NOT BETWEEN (t1.c2) AND (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c1) NOTNULL)))>(((NOT (t1.c65))))) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c2 THEN t1.c64 WHEN t1.c1 THEN t1.c2 ELSE t1.c65 END)OR(((t1.c89) NOT NULL))))AND(((t1.c64) NOT BETWEEN (t1.c2) AND (t1.c2))))) ORDER BY (((((t1.c1) NOTNULL)))>(((NOT (t1.c65))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c2 THEN t1.c64 WHEN t1.c1 THEN t1.c2 ELSE t1.c65 END)OR(((t1.c89) NOT NULL))))AND(((t1.c64) NOT BETWEEN (t1.c2) AND (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c1) NOTNULL)))>(((NOT (t1.c65))))) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (((((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c2 THEN t1.c64 WHEN t1.c1 THEN t1.c2 ELSE t1.c65 END)OR(((t1.c89) NOT NULL))))AND(((t1.c64) NOT BETWEEN (t1.c2) AND (t1.c2))))) ORDER BY (((((t1.c1) NOTNULL)))>(((NOT (t1.c65))))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CASE (t1.c2 IN (t1.c65))  WHEN IFNULL(DISTINCT t1.c1, 'TRUE') THEN t1.c65 COLLATE NOCASE END) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t1.c2 IN (t1.c65))  WHEN IFNULL(DISTINCT t1.c1, 'TRUE') THEN t1.c65 COLLATE NOCASE END) IS TRUE)  as count FROM t1 ORDER BY NULL);
SELECT ALL * FROM t1 WHERE (CASE (t1.c2 IN (t1.c65))  WHEN IFNULL(DISTINCT t1.c1, 'TRUE') THEN t1.c65 COLLATE NOCASE END) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t1.c2 IN (t1.c65))  WHEN IFNULL(DISTINCT t1.c1, 'TRUE') THEN t1.c65 COLLATE NOCASE END) IS TRUE)  as count FROM t1 ORDER BY NULL);
SELECT ALL * FROM t1 WHERE (CASE (t1.c2 IN (t1.c65))  WHEN IFNULL(DISTINCT t1.c1, 'TRUE') THEN t1.c65 COLLATE NOCASE END) ORDER BY NULL;
SELECT * FROM t1 WHERE ((((t1.c2, t1.c64, t1.c64)) BETWEEN (((+ ('-1747459811')), ((((t1.c2)AND(t1.c89)))AND(t1.c64)), ((t1.c65) NOT BETWEEN (t1.c89) AND (t1.c89)))) AND ((t1.c2 COLLATE RTRIM, json_patch(t1.c89, t1.c64), (~ (t1.c1))))));
SELECT SUM(count) FROM (SELECT (((((t1.c2, t1.c64, t1.c64)) BETWEEN (((+ ('-1747459811')), ((((t1.c2)AND(t1.c89)))AND(t1.c64)), ((t1.c65) NOT BETWEEN (t1.c89) AND (t1.c89)))) AND ((t1.c2 COLLATE RTRIM, json_patch(t1.c89, t1.c64), (~ (t1.c1)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c2, t1.c64, t1.c64)) BETWEEN (((+ ('-1747459811')), ((((t1.c2)AND(t1.c89)))AND(t1.c64)), ((t1.c65) NOT BETWEEN (t1.c89) AND (t1.c89)))) AND ((t1.c2 COLLATE RTRIM, json_patch(t1.c89, t1.c64), (~ (t1.c1))))));
SELECT SUM(count) FROM (SELECT (((((t1.c2, t1.c64, t1.c64)) BETWEEN (((+ ('-1747459811')), ((((t1.c2)AND(t1.c89)))AND(t1.c64)), ((t1.c65) NOT BETWEEN (t1.c89) AND (t1.c89)))) AND ((t1.c2 COLLATE RTRIM, json_patch(t1.c89, t1.c64), (~ (t1.c1)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c2, t1.c64, t1.c64)) BETWEEN (((+ ('-1747459811')), ((((t1.c2)AND(t1.c89)))AND(t1.c64)), ((t1.c65) NOT BETWEEN (t1.c89) AND (t1.c89)))) AND ((t1.c2 COLLATE RTRIM, json_patch(t1.c89, t1.c64), (~ (t1.c1))))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c64)OR(t1.c65)))OR(0.7714771774141252)) IN ())) ORDER BY t1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t1.c64)OR(t1.c65)))OR(0.7714771774141252)) IN ())) IS TRUE)  as count FROM t1 ORDER BY t1.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c64)OR(t1.c65)))OR(0.7714771774141252)) IN ())) ORDER BY t1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t1.c64)OR(t1.c65)))OR(0.7714771774141252)) IN ())) IS TRUE)  as count FROM t1 ORDER BY t1.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c64)OR(t1.c65)))OR(0.7714771774141252)) IN ())) ORDER BY t1.c1  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c2)) BETWEEN ((t1.c64)) AND ((t1.c89)))) NOT NULL)) ORDER BY CAST(((((t1.c65)AND(t1.c65)))OR(t1.c2)) AS REAL) ASC  NULLS FIRST, CAST((((t1.c89, x'341e', t1.c2))>=((x'', t1.c1, t1.c2))) AS INTEGER), ((LIKELY(t1.c64)) BETWEEN (CASE ']]_4PIKO'  WHEN t1.c89 THEN 1052829832 ELSE t1.c1 END) AND (((('', t1.c89, t1.c89)) BETWEEN ((t1.c89, t1.c89, t1.c1)) AND ((t1.c1, t1.c65, t1.c65))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c2)) BETWEEN ((t1.c64)) AND ((t1.c89)))) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY CAST(((((t1.c65)AND(t1.c65)))OR(t1.c2)) AS REAL) ASC  NULLS FIRST, CAST((((t1.c89, x'341e', t1.c2))>=((x'', t1.c1, t1.c2))) AS INTEGER), ((LIKELY(t1.c64)) BETWEEN (CASE ']]_4PIKO'  WHEN t1.c89 THEN 1052829832 ELSE t1.c1 END) AND (((('', t1.c89, t1.c89)) BETWEEN ((t1.c89, t1.c89, t1.c1)) AND ((t1.c1, t1.c65, t1.c65))))) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c2)) BETWEEN ((t1.c64)) AND ((t1.c89)))) NOT NULL)) ORDER BY CAST(((((t1.c65)AND(t1.c65)))OR(t1.c2)) AS REAL) ASC  NULLS FIRST, CAST((((t1.c89, x'341e', t1.c2))>=((x'', t1.c1, t1.c2))) AS INTEGER), ((LIKELY(t1.c64)) BETWEEN (CASE ']]_4PIKO'  WHEN t1.c89 THEN 1052829832 ELSE t1.c1 END) AND (((('', t1.c89, t1.c89)) BETWEEN ((t1.c89, t1.c89, t1.c1)) AND ((t1.c1, t1.c65, t1.c65))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c2)) BETWEEN ((t1.c64)) AND ((t1.c89)))) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY CAST(((((t1.c65)AND(t1.c65)))OR(t1.c2)) AS REAL) ASC  NULLS FIRST, CAST((((t1.c89, x'341e', t1.c2))>=((x'', t1.c1, t1.c2))) AS INTEGER), ((LIKELY(t1.c64)) BETWEEN (CASE ']]_4PIKO'  WHEN t1.c89 THEN 1052829832 ELSE t1.c1 END) AND (((('', t1.c89, t1.c89)) BETWEEN ((t1.c89, t1.c89, t1.c1)) AND ((t1.c1, t1.c65, t1.c65))))) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c2)) BETWEEN ((t1.c64)) AND ((t1.c89)))) NOT NULL)) ORDER BY CAST(((((t1.c65)AND(t1.c65)))OR(t1.c2)) AS REAL) ASC  NULLS FIRST, CAST((((t1.c89, x'341e', t1.c2))>=((x'', t1.c1, t1.c2))) AS INTEGER), ((LIKELY(t1.c64)) BETWEEN (CASE ']]_4PIKO'  WHEN t1.c89 THEN 1052829832 ELSE t1.c1 END) AND (((('', t1.c89, t1.c89)) BETWEEN ((t1.c89, t1.c89, t1.c1)) AND ((t1.c1, t1.c65, t1.c65))))) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c89)>(t1.c89)), (((t1.c89)) BETWEEN ((t1.c64)) AND ((t1.c89))), ((t1.c64) NOTNULL), ((((t1.c89)OR(t1.c65)))OR(t1.c65)), ((((t1.c1)OR('-1642093026')))AND(t1.c2))))==((((t1.c2) NOTNULL), t1.c89, ((('-851342835'))<=((t1.c65))), t1.c2, ((0.3953064678413547) BETWEEN (0.8630309676431221) AND (t1.c1))))));
SELECT SUM(count) FROM (SELECT (((((((t1.c89)>(t1.c89)), (((t1.c89)) BETWEEN ((t1.c64)) AND ((t1.c89))), ((t1.c64) NOTNULL), ((((t1.c89)OR(t1.c65)))OR(t1.c65)), ((((t1.c1)OR('-1642093026')))AND(t1.c2))))==((((t1.c2) NOTNULL), t1.c89, ((('-851342835'))<=((t1.c65))), t1.c2, ((0.3953064678413547) BETWEEN (0.8630309676431221) AND (t1.c1)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c89)>(t1.c89)), (((t1.c89)) BETWEEN ((t1.c64)) AND ((t1.c89))), ((t1.c64) NOTNULL), ((((t1.c89)OR(t1.c65)))OR(t1.c65)), ((((t1.c1)OR('-1642093026')))AND(t1.c2))))==((((t1.c2) NOTNULL), t1.c89, ((('-851342835'))<=((t1.c65))), t1.c2, ((0.3953064678413547) BETWEEN (0.8630309676431221) AND (t1.c1))))));
SELECT SUM(count) FROM (SELECT (((((((t1.c89)>(t1.c89)), (((t1.c89)) BETWEEN ((t1.c64)) AND ((t1.c89))), ((t1.c64) NOTNULL), ((((t1.c89)OR(t1.c65)))OR(t1.c65)), ((((t1.c1)OR('-1642093026')))AND(t1.c2))))==((((t1.c2) NOTNULL), t1.c89, ((('-851342835'))<=((t1.c65))), t1.c2, ((0.3953064678413547) BETWEEN (0.8630309676431221) AND (t1.c1)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c89)>(t1.c89)), (((t1.c89)) BETWEEN ((t1.c64)) AND ((t1.c89))), ((t1.c64) NOTNULL), ((((t1.c89)OR(t1.c65)))OR(t1.c65)), ((((t1.c1)OR('-1642093026')))AND(t1.c2))))==((((t1.c2) NOTNULL), t1.c89, ((('-851342835'))<=((t1.c65))), t1.c2, ((0.3953064678413547) BETWEEN (0.8630309676431221) AND (t1.c1))))));
SELECT COUNT(*) FROM t1 WHERE (CAST(TOTAL_CHANGES() AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TOTAL_CHANGES() AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(TOTAL_CHANGES() AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TOTAL_CHANGES() AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(TOTAL_CHANGES() AS INTEGER));
SELECT COUNT(*) FROM t1 WHERE (((t1.c64 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c64 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c64 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c64 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c64 COLLATE BINARY) ISNULL));
SELECT COUNT(*) FROM t1 WHERE ((- ((t1.c65 IN ())))) ORDER BY 0.8926795611212492 DESC  NULLS LAST, ((((t1.c2 IN ())))<((((t1.c89)+(t1.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((t1.c65 IN ())))) IS TRUE)  as count FROM t1 ORDER BY 0.8926795611212492 DESC  NULLS LAST, ((((t1.c2 IN ())))<((((t1.c89)+(t1.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((- ((t1.c65 IN ())))) ORDER BY 0.8926795611212492 DESC  NULLS LAST, ((((t1.c2 IN ())))<((((t1.c89)+(t1.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((t1.c65 IN ())))) IS TRUE)  as count FROM t1 ORDER BY 0.8926795611212492 DESC  NULLS LAST, ((((t1.c2 IN ())))<((((t1.c89)+(t1.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((- ((t1.c65 IN ())))) ORDER BY 0.8926795611212492 DESC  NULLS LAST, ((((t1.c2 IN ())))<((((t1.c89)+(t1.c1))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1)>>(t1.c2))) BETWEEN ((((0.20006799747011428))!=((t1.c64)))) AND (((((t1.c1)AND(t1.c2)))OR(t1.c89)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1)>>(t1.c2))) BETWEEN ((((0.20006799747011428))<>((t1.c64)))) AND (((((t1.c1)AND(t1.c2)))OR(t1.c89))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1)>>(t1.c2))) BETWEEN ((((0.20006799747011428))!=((t1.c64)))) AND (((((t1.c1)AND(t1.c2)))OR(t1.c89)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1)>>(t1.c2))) BETWEEN ((((0.20006799747011428))<>((t1.c64)))) AND (((((t1.c1)AND(t1.c2)))OR(t1.c89))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1)>>(t1.c2))) BETWEEN ((((0.20006799747011428))!=((t1.c64)))) AND (((((t1.c1)AND(t1.c2)))OR(t1.c89)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c89)) BETWEEN ((((t1.c89)>=(t1.c64)))) AND (((((t1.c65)) NOT BETWEEN (('1259985531')) AND ((t1.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c89)) BETWEEN ((((t1.c89)>=(t1.c64)))) AND (((((t1.c65)) NOT BETWEEN (('1259985531')) AND ((t1.c1))))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c89)) BETWEEN ((((t1.c89)>=(t1.c64)))) AND (((((t1.c65)) NOT BETWEEN (('1259985531')) AND ((t1.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c89)) BETWEEN ((((t1.c89)>=(t1.c64)))) AND (((((t1.c65)) NOT BETWEEN (('1259985531')) AND ((t1.c1))))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c89)) BETWEEN ((((t1.c89)>=(t1.c64)))) AND (((((t1.c65)) NOT BETWEEN (('1259985531')) AND ((t1.c1)))))));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c64 IN ()))>>((((t1.c64))=((t1.c2)))))) ORDER BY ((((((t1.c64)>=(t1.c1)))AND(CASE t1.c89  WHEN NULL THEN t1.c1 WHEN t1.c89 THEN t1.c1 WHEN -1e500 THEN t1.c2 END)))AND(LTRIM(t1.c1, t1.c64)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c64 IN ()))>>((((t1.c64))==((t1.c2)))))) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c64)>=(t1.c1)))AND(CASE t1.c89  WHEN NULL THEN t1.c1 WHEN t1.c89 THEN t1.c1 WHEN -1e500 THEN t1.c2 END)))AND(LTRIM(t1.c1, t1.c64)))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c64 IN ()))>>((((t1.c64))=((t1.c2)))))) ORDER BY ((((((t1.c64)>=(t1.c1)))AND(CASE t1.c89  WHEN NULL THEN t1.c1 WHEN t1.c89 THEN t1.c1 WHEN -1e500 THEN t1.c2 END)))AND(LTRIM(t1.c1, t1.c64)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c64 IN ()))>>((((t1.c64))==((t1.c2)))))) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c64)>=(t1.c1)))AND(CASE t1.c89  WHEN NULL THEN t1.c1 WHEN t1.c89 THEN t1.c1 WHEN -1e500 THEN t1.c2 END)))AND(LTRIM(t1.c1, t1.c64)))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c64 IN ()))>>((((t1.c64))=((t1.c2)))))) ORDER BY ((((((t1.c64)>=(t1.c1)))AND(CASE t1.c89  WHEN NULL THEN t1.c1 WHEN t1.c89 THEN t1.c1 WHEN -1e500 THEN t1.c2 END)))AND(LTRIM(t1.c1, t1.c64)))  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((NULL IN (t1.c89, t1.c65))) NOT BETWEEN (t1.c64) AND (UNLIKELY(t1.c2)))) ORDER BY (((t1.c65)) NOT BETWEEN ((t1.c2)) AND ((t1.c1))) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL IN (t1.c89, t1.c65))) NOT BETWEEN (t1.c64) AND (UNLIKELY(t1.c2)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c65)) NOT BETWEEN ((t1.c2)) AND ((t1.c1))) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((NULL IN (t1.c89, t1.c65))) NOT BETWEEN (t1.c64) AND (UNLIKELY(t1.c2)))) ORDER BY (((t1.c65)) NOT BETWEEN ((t1.c2)) AND ((t1.c1))) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL IN (t1.c89, t1.c65))) NOT BETWEEN (t1.c64) AND (UNLIKELY(t1.c2)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c65)) NOT BETWEEN ((t1.c2)) AND ((t1.c1))) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((NULL IN (t1.c89, t1.c65))) NOT BETWEEN (t1.c64) AND (UNLIKELY(t1.c2)))) ORDER BY (((t1.c65)) NOT BETWEEN ((t1.c2)) AND ((t1.c1))) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c1) BETWEEN (0.5773278428768005) AND (t1.c2))) BETWEEN (((t1.c65)<=(t1.c2))) AND (0.4479459242613356)));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) BETWEEN (0.5773278428768005) AND (t1.c2))) BETWEEN (((t1.c65)<=(t1.c2))) AND (0.4479459242613356))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c1) BETWEEN (0.5773278428768005) AND (t1.c2))) BETWEEN (((t1.c65)<=(t1.c2))) AND (0.4479459242613356)));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) BETWEEN (0.5773278428768005) AND (t1.c2))) BETWEEN (((t1.c65)<=(t1.c2))) AND (0.4479459242613356))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c1) BETWEEN (0.5773278428768005) AND (t1.c2))) BETWEEN (((t1.c65)<=(t1.c2))) AND (0.4479459242613356)));
SELECT ALL COUNT(*) FROM t1 WHERE (x'b573') ORDER BY (((((- (t1.c89)))OR(((((t1.c65)AND(t1.c1)))AND(t1.c65)))))AND(((t1.c1) BETWEEN (t1.c2) AND (t1.c89))))  NULLS FIRST, ((t1.c64 IN (x'')) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'b573') IS TRUE)  as count FROM t1 ORDER BY (((((- (t1.c89)))OR(((((t1.c65)AND(t1.c1)))AND(t1.c65)))))AND(((t1.c1) BETWEEN (t1.c2) AND (t1.c89))))  NULLS FIRST, ((t1.c64 IN (x'')) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (x'b573') ORDER BY (((((- (t1.c89)))OR(((((t1.c65)AND(t1.c1)))AND(t1.c65)))))AND(((t1.c1) BETWEEN (t1.c2) AND (t1.c89))))  NULLS FIRST, ((t1.c64 IN (x'')) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'b573') IS TRUE)  as count FROM t1 ORDER BY (((((- (t1.c89)))OR(((((t1.c65)AND(t1.c1)))AND(t1.c65)))))AND(((t1.c1) BETWEEN (t1.c2) AND (t1.c89))))  NULLS FIRST, ((t1.c64 IN (x'')) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (x'b573') ORDER BY (((((- (t1.c89)))OR(((((t1.c65)AND(t1.c1)))AND(t1.c65)))))AND(((t1.c1) BETWEEN (t1.c2) AND (t1.c89))))  NULLS FIRST, ((t1.c64 IN (x'')) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c64)-('0.9839013270082686')) AS BLOB)) ORDER BY ((x'')>>((+ (t1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c64)-('0.9839013270082686')) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY ((x'')>>((+ (t1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c64)-('0.9839013270082686')) AS BLOB)) ORDER BY ((x'')>>((+ (t1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c64)-('0.9839013270082686')) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY ((x'')>>((+ (t1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c64)-('0.9839013270082686')) AS BLOB)) ORDER BY ((x'')>>((+ (t1.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c65)%(t1.c65)))||(t1.c1))) ORDER BY ((((t1.c1 IN (t1.c1)), t1.c2 COLLATE NOCASE, CAST(t1.c89 AS BLOB)))==((((((((((t1.c89)AND(t1.c1)))OR(t1.c2)))OR(t1.c65)))OR(t1.c65)), CAST(t1.c65 AS TEXT), ((t1.c2)>('596554485')))));
SELECT SUM(count) FROM (SELECT ((((((t1.c65)%(t1.c65)))||(t1.c1))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1 IN (t1.c1)), t1.c2 COLLATE NOCASE, CAST(t1.c89 AS BLOB)))=((((((((((t1.c89)AND(t1.c1)))OR(t1.c2)))OR(t1.c65)))OR(t1.c65)), CAST(t1.c65 AS TEXT), ((t1.c2)>('596554485'))))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c65)%(t1.c65)))||(t1.c1))) ORDER BY ((((t1.c1 IN (t1.c1)), t1.c2 COLLATE NOCASE, CAST(t1.c89 AS BLOB)))==((((((((((t1.c89)AND(t1.c1)))OR(t1.c2)))OR(t1.c65)))OR(t1.c65)), CAST(t1.c65 AS TEXT), ((t1.c2)>('596554485')))));
SELECT SUM(count) FROM (SELECT ((((((t1.c65)%(t1.c65)))||(t1.c1))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1 IN (t1.c1)), t1.c2 COLLATE NOCASE, CAST(t1.c89 AS BLOB)))=((((((((((t1.c89)AND(t1.c1)))OR(t1.c2)))OR(t1.c65)))OR(t1.c65)), CAST(t1.c65 AS TEXT), ((t1.c2)>('596554485'))))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c65)%(t1.c65)))||(t1.c1))) ORDER BY ((((t1.c1 IN (t1.c1)), t1.c2 COLLATE NOCASE, CAST(t1.c89 AS BLOB)))==((((((((((t1.c89)AND(t1.c1)))OR(t1.c2)))OR(t1.c65)))OR(t1.c65)), CAST(t1.c65 AS TEXT), ((t1.c2)>('596554485')))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((CAST('' AS NUMERIC))OR(CAST(t1.c1 AS BLOB))))AND((((t1.c64)) BETWEEN ((t1.c64)) AND ((t1.c89))))));
SELECT SUM(count) FROM (SELECT ((((((CAST('' AS NUMERIC))OR(CAST(t1.c1 AS BLOB))))AND((((t1.c64)) BETWEEN ((t1.c64)) AND ((t1.c89)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((CAST('' AS NUMERIC))OR(CAST(t1.c1 AS BLOB))))AND((((t1.c64)) BETWEEN ((t1.c64)) AND ((t1.c89))))));
SELECT SUM(count) FROM (SELECT ((((((CAST('' AS NUMERIC))OR(CAST(t1.c1 AS BLOB))))AND((((t1.c64)) BETWEEN ((t1.c64)) AND ((t1.c89)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((CAST('' AS NUMERIC))OR(CAST(t1.c1 AS BLOB))))AND((((t1.c64)) BETWEEN ((t1.c64)) AND ((t1.c89))))));
SELECT ALL * FROM t1 WHERE (((LIKELIHOOD(t1.c65, 0.6146828584475531)) NOT BETWEEN (((t1.c65)GLOB(t1.c89))) AND (t1.c2)));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(t1.c65, 0.6146828584475531)) NOT BETWEEN (((t1.c65)GLOB(t1.c89))) AND (t1.c2))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((LIKELIHOOD(t1.c65, 0.6146828584475531)) NOT BETWEEN (((t1.c65)GLOB(t1.c89))) AND (t1.c2)));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(t1.c65, 0.6146828584475531)) NOT BETWEEN (((t1.c65)GLOB(t1.c89))) AND (t1.c2))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((LIKELIHOOD(t1.c65, 0.6146828584475531)) NOT BETWEEN (((t1.c65)GLOB(t1.c89))) AND (t1.c2)));
SELECT ALL COUNT(*) FROM t1 NOT INDEXED WHERE ((((t1.c2 IN (t1.c2)))>(CAST(t1.c2 AS NUMERIC)))) ORDER BY CAST(JULIANDAY(t1.c64, t1.c89, t1.c65) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((t1.c2 IN (t1.c2)))>(CAST(t1.c2 AS NUMERIC)))) IS TRUE)  as count FROM t1 ORDER BY CAST(JULIANDAY(t1.c64, t1.c89, t1.c65) AS INTEGER));
SELECT ALL COUNT(*) FROM t1 NOT INDEXED WHERE ((((t1.c2 IN (t1.c2)))>(CAST(t1.c2 AS NUMERIC)))) ORDER BY CAST(JULIANDAY(t1.c64, t1.c89, t1.c65) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((t1.c2 IN (t1.c2)))>(CAST(t1.c2 AS NUMERIC)))) IS TRUE)  as count FROM t1 ORDER BY CAST(JULIANDAY(t1.c64, t1.c89, t1.c65) AS INTEGER));
SELECT ALL COUNT(*) FROM t1 NOT INDEXED WHERE ((((t1.c2 IN (t1.c2)))>(CAST(t1.c2 AS NUMERIC)))) ORDER BY CAST(JULIANDAY(t1.c64, t1.c89, t1.c65) AS INTEGER);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c64)>(t1.c89)))|(CASE WHEN t1.c64 THEN t1.c1 WHEN t1.c64 THEN t1.c64 WHEN t1.c64 THEN t1.c64 WHEN t1.c65 THEN t1.c65 WHEN t1.c64 THEN '0.3271672102505442' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64)>(t1.c89)))|(CASE WHEN t1.c64 THEN t1.c1 WHEN t1.c64 THEN t1.c64 WHEN t1.c64 THEN t1.c64 WHEN t1.c65 THEN t1.c65 WHEN t1.c64 THEN '0.3271672102505442' END))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c64)>(t1.c89)))|(CASE WHEN t1.c64 THEN t1.c1 WHEN t1.c64 THEN t1.c64 WHEN t1.c64 THEN t1.c64 WHEN t1.c65 THEN t1.c65 WHEN t1.c64 THEN '0.3271672102505442' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64)>(t1.c89)))|(CASE WHEN t1.c64 THEN t1.c1 WHEN t1.c64 THEN t1.c64 WHEN t1.c64 THEN t1.c64 WHEN t1.c65 THEN t1.c65 WHEN t1.c64 THEN '0.3271672102505442' END))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c64)>(t1.c89)))|(CASE WHEN t1.c64 THEN t1.c1 WHEN t1.c64 THEN t1.c64 WHEN t1.c64 THEN t1.c64 WHEN t1.c65 THEN t1.c65 WHEN t1.c64 THEN '0.3271672102505442' END)));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c1) NOTNULL)  WHEN HEX(t1.c2) THEN ((t1.c89)%(t1.c64)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c1) NOTNULL)  WHEN HEX(t1.c2) THEN ((t1.c89)%(t1.c64)) END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c1) NOTNULL)  WHEN HEX(t1.c2) THEN ((t1.c89)%(t1.c64)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c1) NOTNULL)  WHEN HEX(t1.c2) THEN ((t1.c89)%(t1.c64)) END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c1) NOTNULL)  WHEN HEX(t1.c2) THEN ((t1.c89)%(t1.c64)) END);
SELECT * FROM t1 WHERE (((((t1.c64)) NOT BETWEEN ((t1.c64)) AND ((NULL))) IN (CAST(t1.c64 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64)) NOT BETWEEN ((t1.c64)) AND ((NULL))) IN (CAST(t1.c64 AS NUMERIC)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c64)) NOT BETWEEN ((t1.c64)) AND ((NULL))) IN (CAST(t1.c64 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64)) NOT BETWEEN ((t1.c64)) AND ((NULL))) IN (CAST(t1.c64 AS NUMERIC)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c64)) NOT BETWEEN ((t1.c64)) AND ((NULL))) IN (CAST(t1.c64 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c65, t1.c2, t1.c2, t1.c64, t1.c89, t1.c89, t1.c65))<((t1.c65, t1.c64, NULL, t1.c89, t1.c1, t1.c89, t1.c64))) COLLATE BINARY) ORDER BY ((x'') IS TRUE) ASC  NULLS FIRST, CASE CASE t1.c65  WHEN t1.c65 THEN t1.c65 WHEN t1.c64 THEN t1.c2 WHEN t1.c1 THEN t1.c64 END  WHEN (- (t1.c89)) THEN CAST(x'ba64' AS INTEGER) ELSE TRIM(t1.c2) END DESC, ((UPPER(DISTINCT t1.c2)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c65, t1.c2, t1.c2, t1.c64, t1.c89, t1.c89, t1.c65))<((t1.c65, t1.c64, NULL, t1.c89, t1.c1, t1.c89, t1.c64))) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY ((x'') IS TRUE) ASC  NULLS FIRST, CASE CASE t1.c65  WHEN t1.c65 THEN t1.c65 WHEN t1.c64 THEN t1.c2 WHEN t1.c1 THEN t1.c64 END  WHEN (- (t1.c89)) THEN CAST(x'ba64' AS INTEGER) ELSE TRIM(t1.c2) END DESC, ((UPPER(DISTINCT t1.c2)) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c65, t1.c2, t1.c2, t1.c64, t1.c89, t1.c89, t1.c65))<((t1.c65, t1.c64, NULL, t1.c89, t1.c1, t1.c89, t1.c64))) COLLATE BINARY) ORDER BY ((x'') IS TRUE) ASC  NULLS FIRST, CASE CASE t1.c65  WHEN t1.c65 THEN t1.c65 WHEN t1.c64 THEN t1.c2 WHEN t1.c1 THEN t1.c64 END  WHEN (- (t1.c89)) THEN CAST(x'ba64' AS INTEGER) ELSE TRIM(t1.c2) END DESC, ((UPPER(DISTINCT t1.c2)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c65, t1.c2, t1.c2, t1.c64, t1.c89, t1.c89, t1.c65))<((t1.c65, t1.c64, NULL, t1.c89, t1.c1, t1.c89, t1.c64))) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY ((x'') IS TRUE) ASC  NULLS FIRST, CASE CASE t1.c65  WHEN t1.c65 THEN t1.c65 WHEN t1.c64 THEN t1.c2 WHEN t1.c1 THEN t1.c64 END  WHEN (- (t1.c89)) THEN CAST(x'ba64' AS INTEGER) ELSE TRIM(t1.c2) END DESC, ((UPPER(DISTINCT t1.c2)) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c65, t1.c2, t1.c2, t1.c64, t1.c89, t1.c89, t1.c65))<((t1.c65, t1.c64, NULL, t1.c89, t1.c1, t1.c89, t1.c64))) COLLATE BINARY) ORDER BY ((x'') IS TRUE) ASC  NULLS FIRST, CASE CASE t1.c65  WHEN t1.c65 THEN t1.c65 WHEN t1.c64 THEN t1.c2 WHEN t1.c1 THEN t1.c64 END  WHEN (- (t1.c89)) THEN CAST(x'ba64' AS INTEGER) ELSE TRIM(t1.c2) END DESC, ((UPPER(DISTINCT t1.c2)) IS TRUE) ASC;
SELECT COUNT(*) FROM t1 WHERE (((t1.c1) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t1.c1) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c1) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t1.c1) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c1) NOT NULL) COLLATE RTRIM);
SELECT * FROM t1 WHERE ((((((NOT (t1.c65)))AND(((t1.c1)=(t1.c1)))))AND(((-1401610632)&(t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t1.c65)))AND(((t1.c1)==(t1.c1)))))AND(((-1401610632)&(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((NOT (t1.c65)))AND(((t1.c1)=(t1.c1)))))AND(((-1401610632)&(t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t1.c65)))AND(((t1.c1)==(t1.c1)))))AND(((-1401610632)&(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((NOT (t1.c65)))AND(((t1.c1)=(t1.c1)))))AND(((-1401610632)&(t1.c1)))));
SELECT * FROM t1 WHERE ((((((t1.c65)) NOT BETWEEN ((NULL)) AND ((t1.c2)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c65)) NOT BETWEEN ((NULL)) AND ((t1.c2)))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c65)) NOT BETWEEN ((NULL)) AND ((t1.c2)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c65)) NOT BETWEEN ((NULL)) AND ((t1.c2)))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c65)) NOT BETWEEN ((NULL)) AND ((t1.c2)))) ISNULL));
SELECT ALL * FROM t1 WHERE (COALESCE(CAST(t1.c64 AS TEXT), (+ (t1.c65))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(t1.c64 AS TEXT), (+ (t1.c65)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (COALESCE(CAST(t1.c64 AS TEXT), (+ (t1.c65))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(t1.c64 AS TEXT), (+ (t1.c65)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (COALESCE(CAST(t1.c64 AS TEXT), (+ (t1.c65))));
SELECT * FROM t1 WHERE ((((t1.c64)IS NOT(t1.c64)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c64)IS NOT(t1.c64)) IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c64)IS NOT(t1.c64)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c64)IS NOT(t1.c64)) IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c64)IS NOT(t1.c64)) IN ()));
SELECT * FROM t1 WHERE (CASE ((t1.c64)IS(t1.c2))  WHEN NULL THEN t1.c1 ELSE CASE t1.c65  WHEN t1.c89 THEN t1.c1 WHEN t1.c65 THEN t1.c64 WHEN x'' THEN t1.c2 WHEN t1.c1 THEN 'ແe!J' WHEN t1.c89 THEN t1.c1 ELSE t1.c89 END END) ORDER BY t1.c89  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c64)IS(t1.c2))  WHEN NULL THEN t1.c1 ELSE CASE t1.c65  WHEN t1.c89 THEN t1.c1 WHEN t1.c65 THEN t1.c64 WHEN x'' THEN t1.c2 WHEN t1.c1 THEN 'ແe!J' WHEN t1.c89 THEN t1.c1 ELSE t1.c89 END END) IS TRUE)  as count FROM t1 ORDER BY t1.c89  NULLS LAST);
SELECT * FROM t1 WHERE (CASE ((t1.c64)IS(t1.c2))  WHEN NULL THEN t1.c1 ELSE CASE t1.c65  WHEN t1.c89 THEN t1.c1 WHEN t1.c65 THEN t1.c64 WHEN x'' THEN t1.c2 WHEN t1.c1 THEN 'ແe!J' WHEN t1.c89 THEN t1.c1 ELSE t1.c89 END END) ORDER BY t1.c89  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c64)IS(t1.c2))  WHEN NULL THEN t1.c1 ELSE CASE t1.c65  WHEN t1.c89 THEN t1.c1 WHEN t1.c65 THEN t1.c64 WHEN x'' THEN t1.c2 WHEN t1.c1 THEN 'ແe!J' WHEN t1.c89 THEN t1.c1 ELSE t1.c89 END END) IS TRUE)  as count FROM t1 ORDER BY t1.c89  NULLS LAST);
SELECT * FROM t1 WHERE (CASE ((t1.c64)IS(t1.c2))  WHEN NULL THEN t1.c1 ELSE CASE t1.c65  WHEN t1.c89 THEN t1.c1 WHEN t1.c65 THEN t1.c64 WHEN x'' THEN t1.c2 WHEN t1.c1 THEN 'ແe!J' WHEN t1.c89 THEN t1.c1 ELSE t1.c89 END END) ORDER BY t1.c89  NULLS LAST;
SELECT * FROM t1 WHERE (((((((((NULL COLLATE RTRIM)OR((0.08374255788531804 IN ()))))OR(((((t1.c64)AND(t1.c64)))OR(t1.c65)))))AND(CAST('1052829832' AS NUMERIC))))AND(t1.c65 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL COLLATE RTRIM)OR((0.08374255788531804 IN ()))))OR(((((t1.c64)AND(t1.c64)))OR(t1.c65)))))AND(CAST('1052829832' AS NUMERIC))))AND(t1.c65 COLLATE BINARY))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((((((NULL COLLATE RTRIM)OR((0.08374255788531804 IN ()))))OR(((((t1.c64)AND(t1.c64)))OR(t1.c65)))))AND(CAST('1052829832' AS NUMERIC))))AND(t1.c65 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL COLLATE RTRIM)OR((0.08374255788531804 IN ()))))OR(((((t1.c64)AND(t1.c64)))OR(t1.c65)))))AND(CAST('1052829832' AS NUMERIC))))AND(t1.c65 COLLATE BINARY))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((((((NULL COLLATE RTRIM)OR((0.08374255788531804 IN ()))))OR(((((t1.c64)AND(t1.c64)))OR(t1.c65)))))AND(CAST('1052829832' AS NUMERIC))))AND(t1.c65 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t1 WHERE (ABS(CAST(t1.c65 AS INTEGER))) ORDER BY 0X5450542e  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(t1.c65 AS INTEGER))) IS TRUE)  as count FROM t1 ORDER BY 0x5450542e  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (ABS(CAST(t1.c65 AS INTEGER))) ORDER BY 0X5450542e  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(t1.c65 AS INTEGER))) IS TRUE)  as count FROM t1 ORDER BY 0x5450542e  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c1, t1.c89, t1.c1))<=((t1.c64, 'p*yR\_p~S', t1.c64)))) IS TRUE)) ORDER BY t1.c65  NULLS LAST, t1.c1, (((t1.c65, t1.c65, t1.c89, t1.c2, x'')) BETWEEN ((((t1.c65)<<(t1.c65)), ((t1.c64) IS TRUE), (t1.c89 IN ()), (t1.c65 IN (t1.c65, t1.c1)), CASE WHEN t1.c64 THEN t1.c89 WHEN t1.c1 THEN t1.c2 WHEN t1.c65 THEN t1.c89 END)) AND ((t1.c89 COLLATE NOCASE, t1.c89 COLLATE BINARY, ((t1.c64)LIKE(t1.c1)), (0.3735382069860147 IN (t1.c65)), ((((NULL)AND(t1.c2)))AND(t1.c65))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c1, t1.c89, t1.c1))<=((t1.c64, 'p*yR\_p~S', t1.c64)))) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY t1.c65  NULLS LAST, t1.c1, (((t1.c65, t1.c65, t1.c89, t1.c2, x'')) BETWEEN ((((t1.c65)<<(t1.c65)), ((t1.c64) IS TRUE), (t1.c89 IN ()), (t1.c65 IN (t1.c65, t1.c1)), CASE WHEN t1.c64 THEN t1.c89 WHEN t1.c1 THEN t1.c2 WHEN t1.c65 THEN t1.c89 END)) AND ((t1.c89 COLLATE NOCASE, t1.c89 COLLATE BINARY, ((t1.c64)LIKE(t1.c1)), (0.3735382069860147 IN (t1.c65)), ((((NULL)AND(t1.c2)))AND(t1.c65))))) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c1, t1.c89, t1.c1))<=((t1.c64, 'p*yR\_p~S', t1.c64)))) IS TRUE)) ORDER BY t1.c65  NULLS LAST, t1.c1, (((t1.c65, t1.c65, t1.c89, t1.c2, x'')) BETWEEN ((((t1.c65)<<(t1.c65)), ((t1.c64) IS TRUE), (t1.c89 IN ()), (t1.c65 IN (t1.c65, t1.c1)), CASE WHEN t1.c64 THEN t1.c89 WHEN t1.c1 THEN t1.c2 WHEN t1.c65 THEN t1.c89 END)) AND ((t1.c89 COLLATE NOCASE, t1.c89 COLLATE BINARY, ((t1.c64)LIKE(t1.c1)), (0.3735382069860147 IN (t1.c65)), ((((NULL)AND(t1.c2)))AND(t1.c65))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c1, t1.c89, t1.c1))<=((t1.c64, 'p*yR\_p~S', t1.c64)))) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY t1.c65  NULLS LAST, t1.c1, (((t1.c65, t1.c65, t1.c89, t1.c2, x'')) BETWEEN ((((t1.c65)<<(t1.c65)), ((t1.c64) IS TRUE), (t1.c89 IN ()), (t1.c65 IN (t1.c65, t1.c1)), CASE WHEN t1.c64 THEN t1.c89 WHEN t1.c1 THEN t1.c2 WHEN t1.c65 THEN t1.c89 END)) AND ((t1.c89 COLLATE NOCASE, t1.c89 COLLATE BINARY, ((t1.c64)LIKE(t1.c1)), (0.3735382069860147 IN (t1.c65)), ((((NULL)AND(t1.c2)))AND(t1.c65))))) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c1, t1.c89, t1.c1))<=((t1.c64, 'p*yR\_p~S', t1.c64)))) IS TRUE)) ORDER BY t1.c65  NULLS LAST, t1.c1, (((t1.c65, t1.c65, t1.c89, t1.c2, x'')) BETWEEN ((((t1.c65)<<(t1.c65)), ((t1.c64) IS TRUE), (t1.c89 IN ()), (t1.c65 IN (t1.c65, t1.c1)), CASE WHEN t1.c64 THEN t1.c89 WHEN t1.c1 THEN t1.c2 WHEN t1.c65 THEN t1.c89 END)) AND ((t1.c89 COLLATE NOCASE, t1.c89 COLLATE BINARY, ((t1.c64)LIKE(t1.c1)), (0.3735382069860147 IN (t1.c65)), ((((NULL)AND(t1.c2)))AND(t1.c65))))) DESC;
SELECT * FROM t1 WHERE ((((t1.c65)) BETWEEN (((((NULL))==((t1.c2))))) AND (('1296355917'))));
SELECT SUM(count) FROM (SELECT (((((t1.c65)) BETWEEN (((((NULL))=((t1.c2))))) AND (('1296355917')))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c65)) BETWEEN (((((NULL))==((t1.c2))))) AND (('1296355917'))));
SELECT SUM(count) FROM (SELECT (((((t1.c65)) BETWEEN (((((NULL))=((t1.c2))))) AND (('1296355917')))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c65)) BETWEEN (((((NULL))==((t1.c2))))) AND (('1296355917'))));
SELECT * FROM t1 WHERE ((((((x'') NOT NULL)))<((((2.07182364E8) NOT BETWEEN (t1.c65) AND (t1.c64)))))) ORDER BY CAST(((((t1.c65)OR(t1.c64)))OR(t1.c64)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((((x'') NOT NULL)))<((((2.07182364E8) NOT BETWEEN (t1.c65) AND (t1.c64)))))) IS TRUE)  as count FROM t1 ORDER BY CAST(((((t1.c65)OR(t1.c64)))OR(t1.c64)) AS NUMERIC));
SELECT * FROM t1 WHERE ((((((x'') NOT NULL)))<((((2.07182364E8) NOT BETWEEN (t1.c65) AND (t1.c64)))))) ORDER BY CAST(((((t1.c65)OR(t1.c64)))OR(t1.c64)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((((x'') NOT NULL)))<((((2.07182364E8) NOT BETWEEN (t1.c65) AND (t1.c64)))))) IS TRUE)  as count FROM t1 ORDER BY CAST(((((t1.c65)OR(t1.c64)))OR(t1.c64)) AS NUMERIC));
SELECT * FROM t1 WHERE ((((((x'') NOT NULL)))<((((2.07182364E8) NOT BETWEEN (t1.c65) AND (t1.c64)))))) ORDER BY CAST(((((t1.c65)OR(t1.c64)))OR(t1.c64)) AS NUMERIC);
SELECT * FROM t1 WHERE (((((CAST(t1.c1 AS BLOB))OR(t1.c64)))AND(t1.c89)));
SELECT SUM(count) FROM (SELECT ((((((CAST(t1.c1 AS BLOB))OR(t1.c64)))AND(t1.c89))) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT * FROM t1 WHERE (((((CAST(t1.c1 AS BLOB))OR(t1.c64)))AND(t1.c89)));
SELECT SUM(count) FROM (SELECT ((((((CAST(t1.c1 AS BLOB))OR(t1.c64)))AND(t1.c89))) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT * FROM t1 WHERE (((((CAST(t1.c1 AS BLOB))OR(t1.c64)))AND(t1.c89)));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(t1.c64 COLLATE BINARY AS BLOB)) ORDER BY ((t1.c2) NOTNULL) DESC, CAST(CASE WHEN t1.c89 THEN t1.c1 ELSE '-1670669643' END AS INTEGER) DESC, ((t1.c65 COLLATE RTRIM)|(((((((((t1.c2)OR(t1.c1)))OR(t1.c89)))OR(t1.c64)))AND(t1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c64 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c2) NOTNULL) DESC, CAST(CASE WHEN t1.c89 THEN t1.c1 ELSE '-1670669643' END AS INTEGER) DESC, ((t1.c65 COLLATE RTRIM)|(((((((((t1.c2)OR(t1.c1)))OR(t1.c89)))OR(t1.c64)))AND(t1.c2)))) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(t1.c64 COLLATE BINARY AS BLOB)) ORDER BY ((t1.c2) NOTNULL) DESC, CAST(CASE WHEN t1.c89 THEN t1.c1 ELSE '-1670669643' END AS INTEGER) DESC, ((t1.c65 COLLATE RTRIM)|(((((((((t1.c2)OR(t1.c1)))OR(t1.c89)))OR(t1.c64)))AND(t1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c64 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c2) NOTNULL) DESC, CAST(CASE WHEN t1.c89 THEN t1.c1 ELSE '-1670669643' END AS INTEGER) DESC, ((t1.c65 COLLATE RTRIM)|(((((((((t1.c2)OR(t1.c1)))OR(t1.c89)))OR(t1.c64)))AND(t1.c2)))) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(t1.c64 COLLATE BINARY AS BLOB)) ORDER BY ((t1.c2) NOTNULL) DESC, CAST(CASE WHEN t1.c89 THEN t1.c1 ELSE '-1670669643' END AS INTEGER) DESC, ((t1.c65 COLLATE RTRIM)|(((((((((t1.c2)OR(t1.c1)))OR(t1.c89)))OR(t1.c64)))AND(t1.c2)))) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (GLOB(0.1154464034309991, CASE WHEN t1.c65 THEN t1.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(0.1154464034309991, CASE WHEN t1.c65 THEN t1.c2 END)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (GLOB(0.1154464034309991, CASE WHEN t1.c65 THEN t1.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(0.1154464034309991, CASE WHEN t1.c65 THEN t1.c2 END)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (GLOB(0.1154464034309991, CASE WHEN t1.c65 THEN t1.c2 END));
SELECT COUNT(*) FROM t1 WHERE (x'5cfe');
SELECT SUM(count) FROM (SELECT ((x'5cfe') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (x'5cfe');
SELECT SUM(count) FROM (SELECT ((x'5cfe') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (x'5cfe');
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c89 AS REAL)) BETWEEN ((NOT (t1.c1))) AND ((((t1.c65, t1.c65, t1.c64)) NOT BETWEEN ((t1.c65, t1.c1, t1.c64)) AND ((t1.c1, -1.642093026E9, t1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c89 AS REAL)) BETWEEN ((NOT (t1.c1))) AND ((((t1.c65, t1.c65, t1.c64)) NOT BETWEEN ((t1.c65, t1.c1, t1.c64)) AND ((t1.c1, -1.642093026E9, t1.c1)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c89 AS REAL)) BETWEEN ((NOT (t1.c1))) AND ((((t1.c65, t1.c65, t1.c64)) NOT BETWEEN ((t1.c65, t1.c1, t1.c64)) AND ((t1.c1, -1.642093026E9, t1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c89 AS REAL)) BETWEEN ((NOT (t1.c1))) AND ((((t1.c65, t1.c65, t1.c64)) NOT BETWEEN ((t1.c65, t1.c1, t1.c64)) AND ((t1.c1, -1.642093026E9, t1.c1)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c89 AS REAL)) BETWEEN ((NOT (t1.c1))) AND ((((t1.c65, t1.c65, t1.c64)) NOT BETWEEN ((t1.c65, t1.c1, t1.c64)) AND ((t1.c1, -1.642093026E9, t1.c1))))));
SELECT ALL COUNT(*) FROM t1 WHERE (((('-1370777911'))==((CASE '-1746815211'  WHEN t1.c89 THEN t1.c65 WHEN t1.c89 THEN t1.c65 WHEN x'' THEN t1.c1 WHEN 1.296355917E9 THEN t1.c65 WHEN t1.c2 THEN t1.c1 END)))) ORDER BY ((t1.c64)==((((t1.c89))==((t1.c65))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('-1370777911'))=((CASE '-1746815211'  WHEN t1.c89 THEN t1.c65 WHEN t1.c89 THEN t1.c65 WHEN x'' THEN t1.c1 WHEN 1.296355917E9 THEN t1.c65 WHEN t1.c2 THEN t1.c1 END)))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c64)=((((t1.c89))==((t1.c65))))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (((('-1370777911'))==((CASE '-1746815211'  WHEN t1.c89 THEN t1.c65 WHEN t1.c89 THEN t1.c65 WHEN x'' THEN t1.c1 WHEN 1.296355917E9 THEN t1.c65 WHEN t1.c2 THEN t1.c1 END)))) ORDER BY ((t1.c64)==((((t1.c89))==((t1.c65))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('-1370777911'))=((CASE '-1746815211'  WHEN t1.c89 THEN t1.c65 WHEN t1.c89 THEN t1.c65 WHEN x'' THEN t1.c1 WHEN 1.296355917E9 THEN t1.c65 WHEN t1.c2 THEN t1.c1 END)))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c64)=((((t1.c89))==((t1.c65))))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (((('-1370777911'))==((CASE '-1746815211'  WHEN t1.c89 THEN t1.c65 WHEN t1.c89 THEN t1.c65 WHEN x'' THEN t1.c1 WHEN 1.296355917E9 THEN t1.c65 WHEN t1.c2 THEN t1.c1 END)))) ORDER BY ((t1.c64)==((((t1.c89))==((t1.c65))))) ASC;
SELECT ALL COUNT(*) FROM t1 WHERE ((((CASE WHEN t1.c64 THEN -1830126314 END))<=((t1.c65)))) ORDER BY x'd0d5';
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t1.c64 THEN -1830126314 END))<=((t1.c65)))) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY x'd0d5');
SELECT ALL COUNT(*) FROM t1 WHERE ((((CASE WHEN t1.c64 THEN -1830126314 END))<=((t1.c65)))) ORDER BY x'd0d5';
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t1.c64 THEN -1830126314 END))<=((t1.c65)))) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY x'd0d5');
SELECT ALL COUNT(*) FROM t1 WHERE ((((CASE WHEN t1.c64 THEN -1830126314 END))<=((t1.c65)))) ORDER BY x'd0d5';
SELECT * FROM t1 WHERE ((+ (t1.c2))) ORDER BY t1.c89;
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c2))) IS TRUE)  as count FROM t1 ORDER BY t1.c89);
SELECT * FROM t1 WHERE ((+ (t1.c2))) ORDER BY t1.c89;
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c2))) IS TRUE)  as count FROM t1 ORDER BY t1.c89);
SELECT * FROM t1 WHERE ((+ (t1.c2))) ORDER BY t1.c89;
SELECT ALL * FROM t1 WHERE ((NOT (((t1.c1) NOT BETWEEN (x'') AND (t1.c2))))) ORDER BY ((((((t1.c64)AND(t1.c65)))AND(t1.c65))) BETWEEN (0.8686264557117914 COLLATE NOCASE) AND ((((NULL, 'cb', t1.c64)) NOT BETWEEN ((t1.c64, t1.c64, t1.c1)) AND ((t1.c65, t1.c64, t1.c65))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c1) NOT BETWEEN (x'') AND (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c64)AND(t1.c65)))AND(t1.c65))) BETWEEN (0.8686264557117914 COLLATE NOCASE) AND ((((NULL, 'cb', t1.c64)) NOT BETWEEN ((t1.c64, t1.c64, t1.c1)) AND ((t1.c65, t1.c64, t1.c65))))) ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((NOT (((t1.c1) NOT BETWEEN (x'') AND (t1.c2))))) ORDER BY ((((((t1.c64)AND(t1.c65)))AND(t1.c65))) BETWEEN (0.8686264557117914 COLLATE NOCASE) AND ((((NULL, 'cb', t1.c64)) NOT BETWEEN ((t1.c64, t1.c64, t1.c1)) AND ((t1.c65, t1.c64, t1.c65))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c1) NOT BETWEEN (x'') AND (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c64)AND(t1.c65)))AND(t1.c65))) BETWEEN (0.8686264557117914 COLLATE NOCASE) AND ((((NULL, 'cb', t1.c64)) NOT BETWEEN ((t1.c64, t1.c64, t1.c1)) AND ((t1.c65, t1.c64, t1.c65))))) ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((NOT (((t1.c1) NOT BETWEEN (x'') AND (t1.c2))))) ORDER BY ((((((t1.c64)AND(t1.c65)))AND(t1.c65))) BETWEEN (0.8686264557117914 COLLATE NOCASE) AND ((((NULL, 'cb', t1.c64)) NOT BETWEEN ((t1.c64, t1.c64, t1.c1)) AND ((t1.c65, t1.c64, t1.c65))))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((CAST(t1.c89 AS REAL)) NOTNULL)) ORDER BY (((t1.c64)) BETWEEN (((((t1.c64, t1.c64, t1.c65))!=((t1.c65, t1.c65, t1.c64))))) AND (((t1.c89 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c89 AS REAL)) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c64)) BETWEEN (((((t1.c64, t1.c64, t1.c65))!=((t1.c65, t1.c65, t1.c64))))) AND (((t1.c89 IN ())))) DESC);
SELECT * FROM t1 WHERE (((CAST(t1.c89 AS REAL)) NOTNULL)) ORDER BY (((t1.c64)) BETWEEN (((((t1.c64, t1.c64, t1.c65))!=((t1.c65, t1.c65, t1.c64))))) AND (((t1.c89 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c89 AS REAL)) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c64)) BETWEEN (((((t1.c64, t1.c64, t1.c65))!=((t1.c65, t1.c65, t1.c64))))) AND (((t1.c89 IN ())))) DESC);
SELECT * FROM t1 WHERE (((CAST(t1.c89 AS REAL)) NOTNULL)) ORDER BY (((t1.c64)) BETWEEN (((((t1.c64, t1.c64, t1.c65))!=((t1.c65, t1.c65, t1.c64))))) AND (((t1.c89 IN ())))) DESC;
SELECT * FROM t1 WHERE (((-1.642093026E9)OR(t1.c1)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((-1.642093026E9)OR(t1.c1)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((-1.642093026E9)OR(t1.c1)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((-1.642093026E9)OR(t1.c1)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((-1.642093026E9)OR(t1.c1)) COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM t1 WHERE (((((t1.c2)||(t1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c2)||(t1.c2))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c2)||(t1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c2)||(t1.c2))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c2)||(t1.c2))) IS TRUE));
SELECT ALL * FROM t1 WHERE (((((((((((((((t1.c1)AND(t1.c65)))AND(NULL)))OR(t1.c65)))OR(t1.c1)))OR(t1.c1)))OR(t1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t1.c1)AND(t1.c65)))AND(NULL)))OR(t1.c65)))OR(t1.c1)))OR(t1.c1)))OR(t1.c2))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((((((((t1.c1)AND(t1.c65)))AND(NULL)))OR(t1.c65)))OR(t1.c1)))OR(t1.c1)))OR(t1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t1.c1)AND(t1.c65)))AND(NULL)))OR(t1.c65)))OR(t1.c1)))OR(t1.c1)))OR(t1.c2))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((((((((t1.c1)AND(t1.c65)))AND(NULL)))OR(t1.c65)))OR(t1.c1)))OR(t1.c1)))OR(t1.c2))) IS TRUE));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c64 IN ()))/(x'07e7')));
SELECT SUM(count) FROM (SELECT (((((t1.c64 IN ()))/(x'07e7'))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c64 IN ()))/(x'07e7')));
SELECT SUM(count) FROM (SELECT (((((t1.c64 IN ()))/(x'07e7'))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c64 IN ()))/(x'07e7')));
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c89))!=((t1.c64)))) NOT BETWEEN (CAST(t1.c65 AS NUMERIC)) AND (0X41a3ca32))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c89))!=((t1.c64)))) NOT BETWEEN (CAST(t1.c65 AS NUMERIC)) AND (0x41a3ca32))) IS TRUE)  as count FROM t1 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c89))!=((t1.c64)))) NOT BETWEEN (CAST(t1.c65 AS NUMERIC)) AND (0X41a3ca32))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c89))!=((t1.c64)))) NOT BETWEEN (CAST(t1.c65 AS NUMERIC)) AND (0x41a3ca32))) IS TRUE)  as count FROM t1 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c89))!=((t1.c64)))) NOT BETWEEN (CAST(t1.c65 AS NUMERIC)) AND (0X41a3ca32))) ORDER BY x''  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c1)%(t1.c89)) IN (CASE WHEN t1.c1 THEN t1.c64 WHEN t1.c65 THEN t1.c2 WHEN t1.c89 THEN t1.c89 WHEN t1.c89 THEN t1.c64 WHEN t1.c64 THEN t1.c89 ELSE t1.c64 END)));
SELECT SUM(count) FROM (SELECT (((((t1.c1)%(t1.c89)) IN (CASE WHEN t1.c1 THEN t1.c64 WHEN t1.c65 THEN t1.c2 WHEN t1.c89 THEN t1.c89 WHEN t1.c89 THEN t1.c64 WHEN t1.c64 THEN t1.c89 ELSE t1.c64 END))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c1)%(t1.c89)) IN (CASE WHEN t1.c1 THEN t1.c64 WHEN t1.c65 THEN t1.c2 WHEN t1.c89 THEN t1.c89 WHEN t1.c89 THEN t1.c64 WHEN t1.c64 THEN t1.c89 ELSE t1.c64 END)));
SELECT SUM(count) FROM (SELECT (((((t1.c1)%(t1.c89)) IN (CASE WHEN t1.c1 THEN t1.c64 WHEN t1.c65 THEN t1.c2 WHEN t1.c89 THEN t1.c89 WHEN t1.c89 THEN t1.c64 WHEN t1.c64 THEN t1.c89 ELSE t1.c64 END))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c1)%(t1.c89)) IN (CASE WHEN t1.c1 THEN t1.c64 WHEN t1.c65 THEN t1.c2 WHEN t1.c89 THEN t1.c89 WHEN t1.c89 THEN t1.c64 WHEN t1.c64 THEN t1.c89 ELSE t1.c64 END)));
SELECT ALL COUNT(*) FROM t1 WHERE (2.45189408E8) ORDER BY NULL COLLATE NOCASE  NULLS LAST, (((t1.c89 IN ()))<(NULL));
SELECT SUM(count) FROM (SELECT ((2.45189408E8) IS TRUE)  as count FROM t1 ORDER BY NULL COLLATE NOCASE  NULLS LAST, (((t1.c89 IN ()))<(NULL)));
SELECT ALL COUNT(*) FROM t1 WHERE (2.45189408E8) ORDER BY NULL COLLATE NOCASE  NULLS LAST, (((t1.c89 IN ()))<(NULL));
SELECT SUM(count) FROM (SELECT ((2.45189408E8) IS TRUE)  as count FROM t1 ORDER BY NULL COLLATE NOCASE  NULLS LAST, (((t1.c89 IN ()))<(NULL)));
SELECT ALL COUNT(*) FROM t1 WHERE (2.45189408E8) ORDER BY NULL COLLATE NOCASE  NULLS LAST, (((t1.c89 IN ()))<(NULL));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c64)||(t1.c64)))&(((t1.c64)!=(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64)||(t1.c64)))&(((t1.c64)!=(NULL))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c64)||(t1.c64)))&(((t1.c64)!=(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64)||(t1.c64)))&(((t1.c64)!=(NULL))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c64)||(t1.c64)))&(((t1.c64)!=(NULL)))));
SELECT * FROM t1 WHERE ((((t1.c64)) BETWEEN ((t1.c64 COLLATE RTRIM)) AND ((((((t1.c64)OR(t1.c89)))AND(t1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c64)) BETWEEN ((t1.c64 COLLATE RTRIM)) AND ((((((t1.c64)OR(t1.c89)))AND(t1.c1)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c64)) BETWEEN ((t1.c64 COLLATE RTRIM)) AND ((((((t1.c64)OR(t1.c89)))AND(t1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c64)) BETWEEN ((t1.c64 COLLATE RTRIM)) AND ((((((t1.c64)OR(t1.c89)))AND(t1.c1)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c64)) BETWEEN ((t1.c64 COLLATE RTRIM)) AND ((((((t1.c64)OR(t1.c89)))AND(t1.c1))))));
SELECT ALL * FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (NULL);
SELECT ALL COUNT(*) FROM t1 NOT INDEXED WHERE (((t1.c2)*((((t1.c65, t1.c65, t1.c64))<((t1.c64, t1.c65, t1.c2))))));
SELECT SUM(count) FROM (SELECT ((((t1.c2)*((((t1.c65, t1.c65, t1.c64))<((t1.c64, t1.c65, t1.c2)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 NOT INDEXED WHERE (((t1.c2)*((((t1.c65, t1.c65, t1.c64))<((t1.c64, t1.c65, t1.c2))))));
SELECT SUM(count) FROM (SELECT ((((t1.c2)*((((t1.c65, t1.c65, t1.c64))<((t1.c64, t1.c65, t1.c2)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 NOT INDEXED WHERE (((t1.c2)*((((t1.c65, t1.c65, t1.c64))<((t1.c64, t1.c65, t1.c2))))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c89)%(t1.c89)))OR(((t1.c89)LIKE(x'392c')))))OR((- (t1.c89))))) ORDER BY SQLITE_COMPILEOPTION_GET(t1.c2) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c89)%(t1.c89)))OR(((t1.c89)LIKE(x'392c')))))OR((- (t1.c89))))) IS TRUE)  as count FROM t1 ORDER BY SQLITE_COMPILEOPTION_GET(t1.c2) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c89)%(t1.c89)))OR(((t1.c89)LIKE(x'392c')))))OR((- (t1.c89))))) ORDER BY SQLITE_COMPILEOPTION_GET(t1.c2) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c89)%(t1.c89)))OR(((t1.c89)LIKE(x'392c')))))OR((- (t1.c89))))) IS TRUE)  as count FROM t1 ORDER BY SQLITE_COMPILEOPTION_GET(t1.c2) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c89)%(t1.c89)))OR(((t1.c89)LIKE(x'392c')))))OR((- (t1.c89))))) ORDER BY SQLITE_COMPILEOPTION_GET(t1.c2) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((NULL)) NOT BETWEEN ((((t1.c64) BETWEEN (t1.c65) AND (t1.c64)))) AND ((((t1.c1)OR(t1.c1)))))) ORDER BY ((((NULLIF(DISTINCT t1.c89, t1.c89))AND(CAST(t1.c65 AS NUMERIC))))AND(((((t1.c1)AND(NULL)))AND(t1.c89))));
SELECT SUM(count) FROM (SELECT (((((NULL)) NOT BETWEEN ((((t1.c64) BETWEEN (t1.c65) AND (t1.c64)))) AND ((((t1.c1)OR(t1.c1)))))) IS TRUE)  as count FROM t1 ORDER BY ((((NULLIF(DISTINCT t1.c89, t1.c89))AND(CAST(t1.c65 AS NUMERIC))))AND(((((t1.c1)AND(NULL)))AND(t1.c89)))));
SELECT COUNT(*) FROM t1 WHERE ((((NULL)) NOT BETWEEN ((((t1.c64) BETWEEN (t1.c65) AND (t1.c64)))) AND ((((t1.c1)OR(t1.c1)))))) ORDER BY ((((NULLIF(DISTINCT t1.c89, t1.c89))AND(CAST(t1.c65 AS NUMERIC))))AND(((((t1.c1)AND(NULL)))AND(t1.c89))));
SELECT SUM(count) FROM (SELECT (((((NULL)) NOT BETWEEN ((((t1.c64) BETWEEN (t1.c65) AND (t1.c64)))) AND ((((t1.c1)OR(t1.c1)))))) IS TRUE)  as count FROM t1 ORDER BY ((((NULLIF(DISTINCT t1.c89, t1.c89))AND(CAST(t1.c65 AS NUMERIC))))AND(((((t1.c1)AND(NULL)))AND(t1.c89)))));
SELECT COUNT(*) FROM t1 WHERE ((((NULL)) NOT BETWEEN ((((t1.c64) BETWEEN (t1.c65) AND (t1.c64)))) AND ((((t1.c1)OR(t1.c1)))))) ORDER BY ((((NULLIF(DISTINCT t1.c89, t1.c89))AND(CAST(t1.c65 AS NUMERIC))))AND(((((t1.c1)AND(NULL)))AND(t1.c89))));
SELECT COUNT(*) FROM t1 WHERE (TRIM(DISTINCT ((t1.c2) ISNULL))) ORDER BY (((((t1.c65) BETWEEN (t1.c65) AND (''))))<((t1.c89)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((t1.c2) ISNULL))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c65) BETWEEN (t1.c65) AND (''))))<((t1.c89))));
SELECT COUNT(*) FROM t1 WHERE (TRIM(DISTINCT ((t1.c2) ISNULL))) ORDER BY (((((t1.c65) BETWEEN (t1.c65) AND (''))))<((t1.c89)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((t1.c2) ISNULL))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c65) BETWEEN (t1.c65) AND (''))))<((t1.c89))));
SELECT COUNT(*) FROM t1 WHERE (TRIM(DISTINCT ((t1.c2) ISNULL))) ORDER BY (((((t1.c65) BETWEEN (t1.c65) AND (''))))<((t1.c89)));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c1)) AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c1)) AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c1)) AS NUMERIC));
SELECT COUNT(*) FROM t1 WHERE ((NOT (((t1.c2)AND(t1.c64)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c2)AND(t1.c64))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((NOT (((t1.c2)AND(t1.c64)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c2)AND(t1.c64))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((NOT (((t1.c2)AND(t1.c64)))));
SELECT ALL * FROM t1 WHERE (CAST(0.09053438786171619 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.09053438786171619 AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(0.09053438786171619 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.09053438786171619 AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(0.09053438786171619 AS NUMERIC));
SELECT COUNT(*) FROM t1 WHERE (5.56077255E8) ORDER BY ((((t1.c1)+(t1.c1))) BETWEEN ((+ (t1.c65))) AND (((t1.c64)<(t1.c89))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((5.56077255E8) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1)+(t1.c1))) BETWEEN ((+ (t1.c65))) AND (((t1.c64)<(t1.c89))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (5.56077255E8) ORDER BY ((((t1.c1)+(t1.c1))) BETWEEN ((+ (t1.c65))) AND (((t1.c64)<(t1.c89))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((5.56077255E8) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1)+(t1.c1))) BETWEEN ((+ (t1.c65))) AND (((t1.c64)<(t1.c89))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (5.56077255E8) ORDER BY ((((t1.c1)+(t1.c1))) BETWEEN ((+ (t1.c65))) AND (((t1.c64)<(t1.c89))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c89)IS NOT(t1.c64))  WHEN ((((t1.c65)OR(t1.c1)))OR(t1.c64)) THEN ((t1.c64) BETWEEN (t1.c2) AND (t1.c65)) WHEN ((t1.c89) NOT NULL) THEN ((t1.c64)==(t1.c89)) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c2)) THEN (t1.c1 IN (t1.c1)) ELSE CASE WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN 0X7c677d88 THEN t1.c89 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c89)IS NOT(t1.c64))  WHEN ((((t1.c65)OR(t1.c1)))OR(t1.c64)) THEN ((t1.c64) BETWEEN (t1.c2) AND (t1.c65)) WHEN ((t1.c89) NOT NULL) THEN ((t1.c64)==(t1.c89)) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c2)) THEN (t1.c1 IN (t1.c1)) ELSE CASE WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN 0X7c677d88 THEN t1.c89 END END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c89)IS NOT(t1.c64))  WHEN ((((t1.c65)OR(t1.c1)))OR(t1.c64)) THEN ((t1.c64) BETWEEN (t1.c2) AND (t1.c65)) WHEN ((t1.c89) NOT NULL) THEN ((t1.c64)==(t1.c89)) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c2)) THEN (t1.c1 IN (t1.c1)) ELSE CASE WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN 0X7c677d88 THEN t1.c89 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c89)IS NOT(t1.c64))  WHEN ((((t1.c65)OR(t1.c1)))OR(t1.c64)) THEN ((t1.c64) BETWEEN (t1.c2) AND (t1.c65)) WHEN ((t1.c89) NOT NULL) THEN ((t1.c64)==(t1.c89)) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c2)) THEN (t1.c1 IN (t1.c1)) ELSE CASE WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN 0X7c677d88 THEN t1.c89 END END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c89)IS NOT(t1.c64))  WHEN ((((t1.c65)OR(t1.c1)))OR(t1.c64)) THEN ((t1.c64) BETWEEN (t1.c2) AND (t1.c65)) WHEN ((t1.c89) NOT NULL) THEN ((t1.c64)==(t1.c89)) WHEN ((t1.c1) BETWEEN (t1.c1) AND (t1.c2)) THEN (t1.c1 IN (t1.c1)) ELSE CASE WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN 0X7c677d88 THEN t1.c89 END END);
SELECT * FROM t1 WHERE (((((((t1.c2) NOTNULL))OR(t1.c89 COLLATE NOCASE)))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c65))))) ORDER BY CAST(((((((((t1.c1)OR(t1.c2)))OR(t1.c89)))OR(t1.c89)))OR(0.684089140219725)) AS TEXT) ASC, TRIM(CAST(t1.c2 AS NUMERIC), x'') DESC, ((t1.c2) BETWEEN (t1.c64) AND ('0.01581120284145643')) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c2) NOTNULL))OR(t1.c89 COLLATE NOCASE)))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c65))))) IS TRUE)  as count FROM t1 ORDER BY CAST(((((((((t1.c1)OR(t1.c2)))OR(t1.c89)))OR(t1.c89)))OR(0.684089140219725)) AS TEXT) ASC, TRIM(CAST(t1.c2 AS NUMERIC), x'') DESC, ((t1.c2) BETWEEN (t1.c64) AND ('0.01581120284145643')) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM t1 WHERE (((((((t1.c2) NOTNULL))OR(t1.c89 COLLATE NOCASE)))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c65))))) ORDER BY CAST(((((((((t1.c1)OR(t1.c2)))OR(t1.c89)))OR(t1.c89)))OR(0.684089140219725)) AS TEXT) ASC, TRIM(CAST(t1.c2 AS NUMERIC), x'') DESC, ((t1.c2) BETWEEN (t1.c64) AND ('0.01581120284145643')) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c2) NOTNULL))OR(t1.c89 COLLATE NOCASE)))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c65))))) IS TRUE)  as count FROM t1 ORDER BY CAST(((((((((t1.c1)OR(t1.c2)))OR(t1.c89)))OR(t1.c89)))OR(0.684089140219725)) AS TEXT) ASC, TRIM(CAST(t1.c2 AS NUMERIC), x'') DESC, ((t1.c2) BETWEEN (t1.c64) AND ('0.01581120284145643')) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM t1 WHERE (((((((t1.c2) NOTNULL))OR(t1.c89 COLLATE NOCASE)))AND(((t1.c1) BETWEEN (t1.c1) AND (t1.c65))))) ORDER BY CAST(((((((((t1.c1)OR(t1.c2)))OR(t1.c89)))OR(t1.c89)))OR(0.684089140219725)) AS TEXT) ASC, TRIM(CAST(t1.c2 AS NUMERIC), x'') DESC, ((t1.c2) BETWEEN (t1.c64) AND ('0.01581120284145643')) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c64)))) ISNULL)) ORDER BY ((LOWER(DISTINCT t1.c64))+(((t1.c1)<=(t1.c65)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c64)))) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY ((LOWER(DISTINCT t1.c64))+(((t1.c1)<=(t1.c65)))) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c64)))) ISNULL)) ORDER BY ((LOWER(DISTINCT t1.c64))+(((t1.c1)<=(t1.c65)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c64)))) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY ((LOWER(DISTINCT t1.c64))+(((t1.c1)<=(t1.c65)))) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c64)))) ISNULL)) ORDER BY ((LOWER(DISTINCT t1.c64))+(((t1.c1)<=(t1.c65)))) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE ((((+ (x'bb41')))||(((t1.c89) NOT BETWEEN (t1.c64) AND (t1.c1))))) ORDER BY CAST(((((t1.c1)AND(t1.c1)))AND(t1.c1)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (x'bb41')))||(((t1.c89) NOT BETWEEN (t1.c64) AND (t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY CAST(((((t1.c1)AND(t1.c1)))AND(t1.c1)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((+ (x'bb41')))||(((t1.c89) NOT BETWEEN (t1.c64) AND (t1.c1))))) ORDER BY CAST(((((t1.c1)AND(t1.c1)))AND(t1.c1)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (x'bb41')))||(((t1.c89) NOT BETWEEN (t1.c64) AND (t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY CAST(((((t1.c1)AND(t1.c1)))AND(t1.c1)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((+ (x'bb41')))||(((t1.c89) NOT BETWEEN (t1.c64) AND (t1.c1))))) ORDER BY CAST(((((t1.c1)AND(t1.c1)))AND(t1.c1)) AS TEXT) ASC;
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c89) IS TRUE) THEN t1.c89 WHEN CASE WHEN t1.c89 THEN t1.c1 ELSE t1.c65 END THEN CASE t1.c2  WHEN t1.c64 THEN t1.c89 ELSE t1.c2 END WHEN t1.c64 THEN LTRIM(t1.c64, t1.c1) ELSE LIKELY(t1.c64) END) ORDER BY CAST(((((((((t1.c1)AND(t1.c64)))OR(t1.c2)))AND(t1.c65)))AND(t1.c2)) AS REAL), (+ (((t1.c1) BETWEEN (0.8148498945954924) AND (t1.c2)))) DESC, CAST(((t1.c89) BETWEEN (t1.c64) AND (t1.c89)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c89) IS TRUE) THEN t1.c89 WHEN CASE WHEN t1.c89 THEN t1.c1 ELSE t1.c65 END THEN CASE t1.c2  WHEN t1.c64 THEN t1.c89 ELSE t1.c2 END WHEN t1.c64 THEN LTRIM(t1.c64, t1.c1) ELSE LIKELY(t1.c64) END) IS TRUE)  as count FROM t1 ORDER BY CAST(((((((((t1.c1)AND(t1.c64)))OR(t1.c2)))AND(t1.c65)))AND(t1.c2)) AS REAL), (+ (((t1.c1) BETWEEN (0.8148498945954924) AND (t1.c2)))) DESC, CAST(((t1.c89) BETWEEN (t1.c64) AND (t1.c89)) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c89) IS TRUE) THEN t1.c89 WHEN CASE WHEN t1.c89 THEN t1.c1 ELSE t1.c65 END THEN CASE t1.c2  WHEN t1.c64 THEN t1.c89 ELSE t1.c2 END WHEN t1.c64 THEN LTRIM(t1.c64, t1.c1) ELSE LIKELY(t1.c64) END) ORDER BY CAST(((((((((t1.c1)AND(t1.c64)))OR(t1.c2)))AND(t1.c65)))AND(t1.c2)) AS REAL), (+ (((t1.c1) BETWEEN (0.8148498945954924) AND (t1.c2)))) DESC, CAST(((t1.c89) BETWEEN (t1.c64) AND (t1.c89)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c89) IS TRUE) THEN t1.c89 WHEN CASE WHEN t1.c89 THEN t1.c1 ELSE t1.c65 END THEN CASE t1.c2  WHEN t1.c64 THEN t1.c89 ELSE t1.c2 END WHEN t1.c64 THEN LTRIM(t1.c64, t1.c1) ELSE LIKELY(t1.c64) END) IS TRUE)  as count FROM t1 ORDER BY CAST(((((((((t1.c1)AND(t1.c64)))OR(t1.c2)))AND(t1.c65)))AND(t1.c2)) AS REAL), (+ (((t1.c1) BETWEEN (0.8148498945954924) AND (t1.c2)))) DESC, CAST(((t1.c89) BETWEEN (t1.c64) AND (t1.c89)) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c89) IS TRUE) THEN t1.c89 WHEN CASE WHEN t1.c89 THEN t1.c1 ELSE t1.c65 END THEN CASE t1.c2  WHEN t1.c64 THEN t1.c89 ELSE t1.c2 END WHEN t1.c64 THEN LTRIM(t1.c64, t1.c1) ELSE LIKELY(t1.c64) END) ORDER BY CAST(((((((((t1.c1)AND(t1.c64)))OR(t1.c2)))AND(t1.c65)))AND(t1.c2)) AS REAL), (+ (((t1.c1) BETWEEN (0.8148498945954924) AND (t1.c2)))) DESC, CAST(((t1.c89) BETWEEN (t1.c64) AND (t1.c89)) AS BLOB)  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((- (x'')) IN ())) ORDER BY ((CASE WHEN t1.c65 THEN t1.c64 END) BETWEEN (t1.c65) AND (CAST(0.2260730121223129 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((- (x'')) IN ())) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c65 THEN t1.c64 END) BETWEEN (t1.c65) AND (CAST(0.2260730121223129 AS INTEGER))));
SELECT ALL * FROM t1 WHERE (((- (x'')) IN ())) ORDER BY ((CASE WHEN t1.c65 THEN t1.c64 END) BETWEEN (t1.c65) AND (CAST(0.2260730121223129 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((- (x'')) IN ())) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c65 THEN t1.c64 END) BETWEEN (t1.c65) AND (CAST(0.2260730121223129 AS INTEGER))));
SELECT ALL * FROM t1 WHERE (((- (x'')) IN ())) ORDER BY ((CASE WHEN t1.c65 THEN t1.c64 END) BETWEEN (t1.c65) AND (CAST(0.2260730121223129 AS INTEGER)));
SELECT * FROM t1 WHERE (((((t1.c64) NOT BETWEEN (t1.c65) AND (t1.c1)))IS NOT(((t1.c65)||(t1.c2))))) ORDER BY (- ((((t1.c65, t1.c1, t1.c65)) BETWEEN ((t1.c65, t1.c65, t1.c89)) AND ((t1.c89, t1.c65, t1.c1)))))  NULLS FIRST, ((((t1.c2) NOTNULL)) BETWEEN (((t1.c89)OR(t1.c1))) AND (CAST(t1.c89 AS INTEGER))), (UPPER(t1.c1) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c64) NOT BETWEEN (t1.c65) AND (t1.c1)))IS NOT(((t1.c65)||(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (- ((((t1.c65, t1.c1, t1.c65)) BETWEEN ((t1.c65, t1.c65, t1.c89)) AND ((t1.c89, t1.c65, t1.c1)))))  NULLS FIRST, ((((t1.c2) NOTNULL)) BETWEEN (((t1.c89)OR(t1.c1))) AND (CAST(t1.c89 AS INTEGER))), (UPPER(t1.c1) IN ())  NULLS LAST);
SELECT * FROM t1 WHERE (((((t1.c64) NOT BETWEEN (t1.c65) AND (t1.c1)))IS NOT(((t1.c65)||(t1.c2))))) ORDER BY (- ((((t1.c65, t1.c1, t1.c65)) BETWEEN ((t1.c65, t1.c65, t1.c89)) AND ((t1.c89, t1.c65, t1.c1)))))  NULLS FIRST, ((((t1.c2) NOTNULL)) BETWEEN (((t1.c89)OR(t1.c1))) AND (CAST(t1.c89 AS INTEGER))), (UPPER(t1.c1) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c64) NOT BETWEEN (t1.c65) AND (t1.c1)))IS NOT(((t1.c65)||(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (- ((((t1.c65, t1.c1, t1.c65)) BETWEEN ((t1.c65, t1.c65, t1.c89)) AND ((t1.c89, t1.c65, t1.c1)))))  NULLS FIRST, ((((t1.c2) NOTNULL)) BETWEEN (((t1.c89)OR(t1.c1))) AND (CAST(t1.c89 AS INTEGER))), (UPPER(t1.c1) IN ())  NULLS LAST);
SELECT * FROM t1 WHERE (((((t1.c64) NOT BETWEEN (t1.c65) AND (t1.c1)))IS NOT(((t1.c65)||(t1.c2))))) ORDER BY (- ((((t1.c65, t1.c1, t1.c65)) BETWEEN ((t1.c65, t1.c65, t1.c89)) AND ((t1.c89, t1.c65, t1.c1)))))  NULLS FIRST, ((((t1.c2) NOTNULL)) BETWEEN (((t1.c89)OR(t1.c1))) AND (CAST(t1.c89 AS INTEGER))), (UPPER(t1.c1) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((((((x''))<((t1.c64))))AND(CASE t1.c64  WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN NULL WHEN t1.c65 THEN t1.c64 END)))AND('133303116'))) ORDER BY (NOT (CAST(t1.c1 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((x''))<((t1.c64))))AND(CASE t1.c64  WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN NULL WHEN t1.c65 THEN t1.c64 END)))AND('133303116'))) IS TRUE)  as count FROM t1 ORDER BY (NOT (CAST(t1.c1 AS NUMERIC))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((((((((x''))<((t1.c64))))AND(CASE t1.c64  WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN NULL WHEN t1.c65 THEN t1.c64 END)))AND('133303116'))) ORDER BY (NOT (CAST(t1.c1 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((x''))<((t1.c64))))AND(CASE t1.c64  WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN NULL WHEN t1.c65 THEN t1.c64 END)))AND('133303116'))) IS TRUE)  as count FROM t1 ORDER BY (NOT (CAST(t1.c1 AS NUMERIC))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((((((((x''))<((t1.c64))))AND(CASE t1.c64  WHEN t1.c2 THEN t1.c1 WHEN t1.c1 THEN NULL WHEN t1.c65 THEN t1.c64 END)))AND('133303116'))) ORDER BY (NOT (CAST(t1.c1 AS NUMERIC))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (TRIM(CAST(t1.c65 AS INTEGER), t1.c2 COLLATE NOCASE)) ORDER BY (((t1.c2)|(t1.c65)) IN ((+ (t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(t1.c65 AS INTEGER), t1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c2)|(t1.c65)) IN ((+ (t1.c2)))));
SELECT ALL COUNT(*) FROM t1 WHERE (TRIM(CAST(t1.c65 AS INTEGER), t1.c2 COLLATE NOCASE)) ORDER BY (((t1.c2)|(t1.c65)) IN ((+ (t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(t1.c65 AS INTEGER), t1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c2)|(t1.c65)) IN ((+ (t1.c2)))));
SELECT ALL COUNT(*) FROM t1 WHERE (TRIM(CAST(t1.c65 AS INTEGER), t1.c2 COLLATE NOCASE)) ORDER BY (((t1.c2)|(t1.c65)) IN ((+ (t1.c2))));
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c2) BETWEEN (553755413) AND (t1.c1))))<=(((t1.c65 IN ()))))) ORDER BY ((CASE WHEN t1.c2 THEN t1.c64 WHEN t1.c1 THEN t1.c89 WHEN t1.c64 THEN t1.c2 END)&((((t1.c89, t1.c89, 5.53755413E8, t1.c2, t1.c2))<=((t1.c2, t1.c89, t1.c89, t1.c64, t1.c64))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2) BETWEEN (553755413) AND (t1.c1))))<=(((t1.c65 IN ()))))) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c2 THEN t1.c64 WHEN t1.c1 THEN t1.c89 WHEN t1.c64 THEN t1.c2 END)&((((t1.c89, t1.c89, 5.53755413E8, t1.c2, t1.c2))<=((t1.c2, t1.c89, t1.c89, t1.c64, t1.c64))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c2) BETWEEN (553755413) AND (t1.c1))))<=(((t1.c65 IN ()))))) ORDER BY ((CASE WHEN t1.c2 THEN t1.c64 WHEN t1.c1 THEN t1.c89 WHEN t1.c64 THEN t1.c2 END)&((((t1.c89, t1.c89, 5.53755413E8, t1.c2, t1.c2))<=((t1.c2, t1.c89, t1.c89, t1.c64, t1.c64))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2) BETWEEN (553755413) AND (t1.c1))))<=(((t1.c65 IN ()))))) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c2 THEN t1.c64 WHEN t1.c1 THEN t1.c89 WHEN t1.c64 THEN t1.c2 END)&((((t1.c89, t1.c89, 5.53755413E8, t1.c2, t1.c2))<=((t1.c2, t1.c89, t1.c89, t1.c64, t1.c64))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c2) BETWEEN (553755413) AND (t1.c1))))<=(((t1.c65 IN ()))))) ORDER BY ((CASE WHEN t1.c2 THEN t1.c64 WHEN t1.c1 THEN t1.c89 WHEN t1.c64 THEN t1.c2 END)&((((t1.c89, t1.c89, 5.53755413E8, t1.c2, t1.c2))<=((t1.c2, t1.c89, t1.c89, t1.c64, t1.c64))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c2)OR(t1.c2)))AND(t1.c2)) IN ())) ORDER BY CASE t1.c89  WHEN t1.c65 THEN t1.c64 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c2)OR(t1.c2)))AND(t1.c2)) IN ())) IS TRUE)  as count FROM t1 ORDER BY CASE t1.c89  WHEN t1.c65 THEN t1.c64 END COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c2)OR(t1.c2)))AND(t1.c2)) IN ())) ORDER BY CASE t1.c89  WHEN t1.c65 THEN t1.c64 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c2)OR(t1.c2)))AND(t1.c2)) IN ())) IS TRUE)  as count FROM t1 ORDER BY CASE t1.c89  WHEN t1.c65 THEN t1.c64 END COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c2)OR(t1.c2)))AND(t1.c2)) IN ())) ORDER BY CASE t1.c89  WHEN t1.c65 THEN t1.c64 END COLLATE NOCASE DESC;
SELECT COUNT(*) FROM t1 WHERE ((t1.c65 IN ()) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((NULL)&((~ (t1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t1.c65 IN ()) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY ((NULL)&((~ (t1.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((t1.c65 IN ()) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((NULL)&((~ (t1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t1.c65 IN ()) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY ((NULL)&((~ (t1.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((t1.c65 IN ()) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((NULL)&((~ (t1.c1)))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c89 IN (t1.c65)), t1.c1 COLLATE BINARY, CAST(t1.c2 AS REAL)))<=(((+ (t1.c2)), t1.c2, (((t1.c1)) NOT BETWEEN ((t1.c64)) AND ((t1.c1)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c89 IN (t1.c65)), t1.c1 COLLATE BINARY, CAST(t1.c2 AS REAL)))<=(((+ (t1.c2)), t1.c2, (((t1.c1)) NOT BETWEEN ((t1.c64)) AND ((t1.c1))))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c89 IN (t1.c65)), t1.c1 COLLATE BINARY, CAST(t1.c2 AS REAL)))<=(((+ (t1.c2)), t1.c2, (((t1.c1)) NOT BETWEEN ((t1.c64)) AND ((t1.c1)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c89 IN (t1.c65)), t1.c1 COLLATE BINARY, CAST(t1.c2 AS REAL)))<=(((+ (t1.c2)), t1.c2, (((t1.c1)) NOT BETWEEN ((t1.c64)) AND ((t1.c1))))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c89 IN (t1.c65)), t1.c1 COLLATE BINARY, CAST(t1.c2 AS REAL)))<=(((+ (t1.c2)), t1.c2, (((t1.c1)) NOT BETWEEN ((t1.c64)) AND ((t1.c1)))))));
SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(t1.c89)) ORDER BY CAST((t1.c1 IN (t1.c1)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(t1.c89)) IS TRUE)  as count FROM t1 ORDER BY CAST((t1.c1 IN (t1.c1)) AS NUMERIC) DESC);
SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(t1.c89)) ORDER BY CAST((t1.c1 IN (t1.c1)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(t1.c89)) IS TRUE)  as count FROM t1 ORDER BY CAST((t1.c1 IN (t1.c1)) AS NUMERIC) DESC);
SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(t1.c89)) ORDER BY CAST((t1.c1 IN (t1.c1)) AS NUMERIC) DESC;
SELECT ALL * FROM t1 WHERE ((NOT (UNLIKELY(DISTINCT t1.c65)))) ORDER BY (+ (((((t1.c64)OR(t1.c89)))OR(t1.c2)))), CAST((((t1.c89))=((t1.c64))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((NOT (UNLIKELY(DISTINCT t1.c65)))) IS TRUE)  as count FROM t1 ORDER BY (+ (((((t1.c64)OR(t1.c89)))OR(t1.c2)))), CAST((((t1.c89))=((t1.c64))) AS INTEGER));
SELECT ALL * FROM t1 WHERE ((NOT (UNLIKELY(DISTINCT t1.c65)))) ORDER BY (+ (((((t1.c64)OR(t1.c89)))OR(t1.c2)))), CAST((((t1.c89))=((t1.c64))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((NOT (UNLIKELY(DISTINCT t1.c65)))) IS TRUE)  as count FROM t1 ORDER BY (+ (((((t1.c64)OR(t1.c89)))OR(t1.c2)))), CAST((((t1.c89))=((t1.c64))) AS INTEGER));
SELECT ALL * FROM t1 WHERE ((NOT (UNLIKELY(DISTINCT t1.c65)))) ORDER BY (+ (((((t1.c64)OR(t1.c89)))OR(t1.c2)))), CAST((((t1.c89))=((t1.c64))) AS INTEGER);
SELECT ALL COUNT(*) FROM t1 WHERE ((((- (t1.c1))) BETWEEN ((t1.c2 IN (t1.c65))) AND (CASE t1.c89  WHEN t1.c89 THEN t1.c2 ELSE t1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (t1.c1))) BETWEEN ((t1.c2 IN (t1.c65))) AND (CASE t1.c89  WHEN t1.c89 THEN t1.c2 ELSE t1.c1 END))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((- (t1.c1))) BETWEEN ((t1.c2 IN (t1.c65))) AND (CASE t1.c89  WHEN t1.c89 THEN t1.c2 ELSE t1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (t1.c1))) BETWEEN ((t1.c2 IN (t1.c65))) AND (CASE t1.c89  WHEN t1.c89 THEN t1.c2 ELSE t1.c1 END))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((- (t1.c1))) BETWEEN ((t1.c2 IN (t1.c65))) AND (CASE t1.c89  WHEN t1.c89 THEN t1.c2 ELSE t1.c1 END)));
SELECT ALL * FROM t1 WHERE ((t1.c64 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t1.c64 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((t1.c64 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t1.c64 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((t1.c64 IN ()) COLLATE BINARY);
SELECT ALL * FROM t1 WHERE ((((+ (NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (NULL))) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((+ (NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (NULL))) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((+ (NULL))) IS FALSE));
SELECT * FROM t1 WHERE (t1.c65);
SELECT SUM(count) FROM (SELECT ALL ((t1.c65) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c65);
SELECT SUM(count) FROM (SELECT ALL ((t1.c65) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c65);
SELECT * FROM t1 WHERE ((~ (t1.c2)) COLLATE NOCASE) ORDER BY ((CASE t1.c64  WHEN t1.c1 THEN t1.c89 END) IS TRUE), ((((t1.c64)) NOT BETWEEN ((t1.c2)) AND ((t1.c64))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (t1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c64  WHEN t1.c1 THEN t1.c89 END) IS TRUE), ((((t1.c64)) NOT BETWEEN ((t1.c2)) AND ((t1.c64))) IN ())  NULLS LAST);
SELECT * FROM t1 WHERE ((~ (t1.c2)) COLLATE NOCASE) ORDER BY ((CASE t1.c64  WHEN t1.c1 THEN t1.c89 END) IS TRUE), ((((t1.c64)) NOT BETWEEN ((t1.c2)) AND ((t1.c64))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (t1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c64  WHEN t1.c1 THEN t1.c89 END) IS TRUE), ((((t1.c64)) NOT BETWEEN ((t1.c2)) AND ((t1.c64))) IN ())  NULLS LAST);
SELECT * FROM t1 WHERE ((~ (t1.c2)) COLLATE NOCASE) ORDER BY ((CASE t1.c64  WHEN t1.c1 THEN t1.c89 END) IS TRUE), ((((t1.c64)) NOT BETWEEN ((t1.c2)) AND ((t1.c64))) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c89)) BETWEEN ((CAST(t1.c2 AS TEXT))) AND ((t1.c1 COLLATE BINARY)))) ORDER BY CASE WHEN (t1.c1 IN ()) THEN ((t1.c65) NOT NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c89)) BETWEEN ((CAST(t1.c2 AS TEXT))) AND ((t1.c1 COLLATE BINARY)))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (t1.c1 IN ()) THEN ((t1.c65) NOT NULL) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c89)) BETWEEN ((CAST(t1.c2 AS TEXT))) AND ((t1.c1 COLLATE BINARY)))) ORDER BY CASE WHEN (t1.c1 IN ()) THEN ((t1.c65) NOT NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c89)) BETWEEN ((CAST(t1.c2 AS TEXT))) AND ((t1.c1 COLLATE BINARY)))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (t1.c1 IN ()) THEN ((t1.c65) NOT NULL) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c89)) BETWEEN ((CAST(t1.c2 AS TEXT))) AND ((t1.c1 COLLATE BINARY)))) ORDER BY CASE WHEN (t1.c1 IN ()) THEN ((t1.c65) NOT NULL) END ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c65))==((t1.c64))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((t1.c65))=((t1.c64))) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c65))==((t1.c64))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((t1.c65))=((t1.c64))) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c65))==((t1.c64))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c64)OR(t1.c64)))OR(t1.c64)))LIKE(MAX(t1.c89, t1.c1, t1.c89, t1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c64)OR(t1.c64)))OR(t1.c64)))LIKE(MAX(t1.c89, t1.c1, t1.c89, t1.c1)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c64)OR(t1.c64)))OR(t1.c64)))LIKE(MAX(t1.c89, t1.c1, t1.c89, t1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c64)OR(t1.c64)))OR(t1.c64)))LIKE(MAX(t1.c89, t1.c1, t1.c89, t1.c1)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c64)OR(t1.c64)))OR(t1.c64)))LIKE(MAX(t1.c89, t1.c1, t1.c89, t1.c1))));
SELECT * FROM t1 WHERE (((((t1.c2) NOTNULL)) NOTNULL)) ORDER BY ((((t1.c89)OR(((t1.c89)>(t1.c64)))))OR((((t1.c2))=((t1.c89)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c89)OR(((t1.c89)>(t1.c64)))))OR((((t1.c2))=((t1.c89)))))  NULLS FIRST);
SELECT * FROM t1 WHERE (((((t1.c2) NOTNULL)) NOTNULL)) ORDER BY ((((t1.c89)OR(((t1.c89)>(t1.c64)))))OR((((t1.c2))=((t1.c89)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c89)OR(((t1.c89)>(t1.c64)))))OR((((t1.c2))=((t1.c89)))))  NULLS FIRST);
SELECT * FROM t1 WHERE (((((t1.c2) NOTNULL)) NOTNULL)) ORDER BY ((((t1.c89)OR(((t1.c89)>(t1.c64)))))OR((((t1.c2))=((t1.c89)))))  NULLS FIRST;
SELECT * FROM t1 WHERE (((HEX(t1.c65))<<(CASE t1.c65  WHEN t1.c2 THEN t1.c1 END))) ORDER BY ((t1.c65)IS(0.44904007171468596 COLLATE BINARY))  NULLS LAST, CAST(((t1.c2) IS TRUE) AS TEXT)  NULLS FIRST, (((((t1.c89)) BETWEEN ((0x47cea836)) AND ((t1.c64)))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(t1.c65))<<(CASE t1.c65  WHEN t1.c2 THEN t1.c1 END))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c65)IS(0.44904007171468596 COLLATE BINARY))  NULLS LAST, CAST(((t1.c2) IS TRUE) AS TEXT)  NULLS FIRST, (((((t1.c89)) BETWEEN ((0X47cea836)) AND ((t1.c64)))) NOTNULL) ASC);
SELECT * FROM t1 WHERE (((HEX(t1.c65))<<(CASE t1.c65  WHEN t1.c2 THEN t1.c1 END))) ORDER BY ((t1.c65)IS(0.44904007171468596 COLLATE BINARY))  NULLS LAST, CAST(((t1.c2) IS TRUE) AS TEXT)  NULLS FIRST, (((((t1.c89)) BETWEEN ((0x47cea836)) AND ((t1.c64)))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(t1.c65))<<(CASE t1.c65  WHEN t1.c2 THEN t1.c1 END))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c65)IS(0.44904007171468596 COLLATE BINARY))  NULLS LAST, CAST(((t1.c2) IS TRUE) AS TEXT)  NULLS FIRST, (((((t1.c89)) BETWEEN ((0X47cea836)) AND ((t1.c64)))) NOTNULL) ASC);
SELECT * FROM t1 WHERE (((HEX(t1.c65))<<(CASE t1.c65  WHEN t1.c2 THEN t1.c1 END))) ORDER BY ((t1.c65)IS(0.44904007171468596 COLLATE BINARY))  NULLS LAST, CAST(((t1.c2) IS TRUE) AS TEXT)  NULLS FIRST, (((((t1.c89)) BETWEEN ((0x47cea836)) AND ((t1.c64)))) NOTNULL) ASC;
SELECT ALL * FROM t1 WHERE (load_extension(((t1.c2)/(t1.c2)))) ORDER BY ((((CAST(t1.c1 AS NUMERIC))AND(((t1.c1)>=(t1.c1)))))AND(json_array_length(0.25765373466425256, t1.c1)))  NULLS FIRST, LIKELIHOOD(0.5400144989444724, 0.057840365035438324) DESC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((t1.c2)/(t1.c2)))) IS TRUE)  as count FROM t1 ORDER BY ((((CAST(t1.c1 AS NUMERIC))AND(((t1.c1)>=(t1.c1)))))AND(json_array_length(0.25765373466425256, t1.c1)))  NULLS FIRST, LIKELIHOOD(0.5400144989444724, 0.057840365035438324) DESC);
SELECT ALL * FROM t1 WHERE (load_extension(((t1.c2)/(t1.c2)))) ORDER BY ((((CAST(t1.c1 AS NUMERIC))AND(((t1.c1)>=(t1.c1)))))AND(json_array_length(0.25765373466425256, t1.c1)))  NULLS FIRST, LIKELIHOOD(0.5400144989444724, 0.057840365035438324) DESC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((t1.c2)/(t1.c2)))) IS TRUE)  as count FROM t1 ORDER BY ((((CAST(t1.c1 AS NUMERIC))AND(((t1.c1)>=(t1.c1)))))AND(json_array_length(0.25765373466425256, t1.c1)))  NULLS FIRST, LIKELIHOOD(0.5400144989444724, 0.057840365035438324) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (t1.c65 COLLATE BINARY))) ORDER BY (- (((t1.c2) NOT NULL))) DESC, ((t1.c2) BETWEEN ((t1.c2 IN ())) AND ((((t1.c1)) NOT BETWEEN ((-1673938079)) AND ((t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c65 COLLATE BINARY))) IS TRUE)  as count FROM t1 ORDER BY (- (((t1.c2) NOT NULL))) DESC, ((t1.c2) BETWEEN ((t1.c2 IN ())) AND ((((t1.c1)) NOT BETWEEN ((-1673938079)) AND ((t1.c64))))));
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (t1.c65 COLLATE BINARY))) ORDER BY (- (((t1.c2) NOT NULL))) DESC, ((t1.c2) BETWEEN ((t1.c2 IN ())) AND ((((t1.c1)) NOT BETWEEN ((-1673938079)) AND ((t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c65 COLLATE BINARY))) IS TRUE)  as count FROM t1 ORDER BY (- (((t1.c2) NOT NULL))) DESC, ((t1.c2) BETWEEN ((t1.c2 IN ())) AND ((((t1.c1)) NOT BETWEEN ((-1673938079)) AND ((t1.c64))))));
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (t1.c65 COLLATE BINARY))) ORDER BY (- (((t1.c2) NOT NULL))) DESC, ((t1.c2) BETWEEN ((t1.c2 IN ())) AND ((((t1.c1)) NOT BETWEEN ((-1673938079)) AND ((t1.c64)))));
SELECT * FROM t1 WHERE (((((((t1.c89)AND(t1.c89)))OR(t1.c65)))<=(t1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c89)AND(t1.c89)))OR(t1.c65)))<=(t1.c2))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((((t1.c89)AND(t1.c89)))OR(t1.c65)))<=(t1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c89)AND(t1.c89)))OR(t1.c65)))<=(t1.c2))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((((t1.c89)AND(t1.c89)))OR(t1.c65)))<=(t1.c2)));
SELECT * FROM t1 WHERE (CAST(((t1.c65)<(t1.c65)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c65)<(t1.c65)) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c65)<(t1.c65)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c65)<(t1.c65)) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c65)<(t1.c65)) AS INTEGER));
SELECT COUNT(*) FROM t1 WHERE (CAST(CAST(t1.c65 AS REAL) AS NUMERIC)) ORDER BY t1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c65 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY t1.c2  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CAST(CAST(t1.c65 AS REAL) AS NUMERIC)) ORDER BY t1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c65 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY t1.c2  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CAST(CAST(t1.c65 AS REAL) AS NUMERIC)) ORDER BY t1.c2  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c2) ISNULL)) NOTNULL)) ORDER BY ((1216149752)GLOB((t1.c64 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2) ISNULL)) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY ((1216149752)GLOB((t1.c64 IN ()))));
SELECT ALL * FROM t1 WHERE (((((t1.c2) ISNULL)) NOTNULL)) ORDER BY ((1216149752)GLOB((t1.c64 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2) ISNULL)) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY ((1216149752)GLOB((t1.c64 IN ()))));
SELECT ALL * FROM t1 WHERE (((((t1.c2) ISNULL)) NOTNULL)) ORDER BY ((1216149752)GLOB((t1.c64 IN ())));
SELECT COUNT(*) FROM t1 WHERE ((NOT (t1.c64)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (t1.c64)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((NOT (t1.c64)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (t1.c64)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((NOT (t1.c64)) COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE (((('-1151424946' IN ()))>=(CAST(t1.c89 AS NUMERIC)))) ORDER BY ((UNLIKELY(t1.c89)) BETWEEN (CASE WHEN t1.c64 THEN t1.c89 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN t1.c65 END) AND (((t1.c64) NOT BETWEEN (t1.c65) AND (t1.c65)))) ASC  NULLS FIRST, ((t1.c64)<>(t1.c64)) ASC;
SELECT SUM(count) FROM (SELECT ((((('-1151424946' IN ()))>=(CAST(t1.c89 AS NUMERIC)))) IS TRUE)  as count FROM t1 ORDER BY ((UNLIKELY(t1.c89)) BETWEEN (CASE WHEN t1.c64 THEN t1.c89 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN t1.c65 END) AND (((t1.c64) NOT BETWEEN (t1.c65) AND (t1.c65)))) ASC  NULLS FIRST, ((t1.c64)<>(t1.c64)) ASC);
SELECT ALL * FROM t1 WHERE (((('-1151424946' IN ()))>=(CAST(t1.c89 AS NUMERIC)))) ORDER BY ((UNLIKELY(t1.c89)) BETWEEN (CASE WHEN t1.c64 THEN t1.c89 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN t1.c65 END) AND (((t1.c64) NOT BETWEEN (t1.c65) AND (t1.c65)))) ASC  NULLS FIRST, ((t1.c64)<>(t1.c64)) ASC;
SELECT SUM(count) FROM (SELECT ((((('-1151424946' IN ()))>=(CAST(t1.c89 AS NUMERIC)))) IS TRUE)  as count FROM t1 ORDER BY ((UNLIKELY(t1.c89)) BETWEEN (CASE WHEN t1.c64 THEN t1.c89 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN t1.c65 END) AND (((t1.c64) NOT BETWEEN (t1.c65) AND (t1.c65)))) ASC  NULLS FIRST, ((t1.c64)<>(t1.c64)) ASC);
SELECT ALL * FROM t1 WHERE (((('-1151424946' IN ()))>=(CAST(t1.c89 AS NUMERIC)))) ORDER BY ((UNLIKELY(t1.c89)) BETWEEN (CASE WHEN t1.c64 THEN t1.c89 WHEN t1.c2 THEN t1.c2 WHEN t1.c1 THEN t1.c65 END) AND (((t1.c64) NOT BETWEEN (t1.c65) AND (t1.c65)))) ASC  NULLS FIRST, ((t1.c64)<>(t1.c64)) ASC;
SELECT COUNT(*) FROM t1 WHERE (x'b750') ORDER BY CAST(IFNULL(DISTINCT t1.c2, t1.c64) AS REAL) DESC  NULLS LAST, t1.c65;
SELECT SUM(count) FROM (SELECT ALL ((x'b750') IS TRUE)  as count FROM t1 ORDER BY CAST(IFNULL(DISTINCT t1.c2, t1.c64) AS REAL) DESC  NULLS LAST, t1.c65);
SELECT COUNT(*) FROM t1 WHERE (x'b750') ORDER BY CAST(IFNULL(DISTINCT t1.c2, t1.c64) AS REAL) DESC  NULLS LAST, t1.c65;
SELECT SUM(count) FROM (SELECT ALL ((x'b750') IS TRUE)  as count FROM t1 ORDER BY CAST(IFNULL(DISTINCT t1.c2, t1.c64) AS REAL) DESC  NULLS LAST, t1.c65);
SELECT COUNT(*) FROM t1 WHERE (x'b750') ORDER BY CAST(IFNULL(DISTINCT t1.c2, t1.c64) AS REAL) DESC  NULLS LAST, t1.c65;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)) BETWEEN (((- (t1.c2)))) AND ((t1.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)) BETWEEN (((- (t1.c2)))) AND ((t1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)) BETWEEN (((- (t1.c2)))) AND ((t1.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)) BETWEEN (((- (t1.c2)))) AND ((t1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)) BETWEEN (((- (t1.c2)))) AND ((t1.c1 COLLATE RTRIM))));
SELECT * FROM t1 WHERE (((((CAST(t1.c1 AS INTEGER))AND((((t1.c65))=((t1.c1))))))OR(TRIM(t1.c64)))) ORDER BY ((0.2864425147005203)%(t1.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((CAST(t1.c1 AS INTEGER))AND((((t1.c65))==((t1.c1))))))OR(TRIM(t1.c64)))) IS TRUE)  as count FROM t1 ORDER BY ((0.2864425147005203)%(t1.c1)) COLLATE RTRIM);
SELECT * FROM t1 WHERE (((((CAST(t1.c1 AS INTEGER))AND((((t1.c65))=((t1.c1))))))OR(TRIM(t1.c64)))) ORDER BY ((0.2864425147005203)%(t1.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((CAST(t1.c1 AS INTEGER))AND((((t1.c65))==((t1.c1))))))OR(TRIM(t1.c64)))) IS TRUE)  as count FROM t1 ORDER BY ((0.2864425147005203)%(t1.c1)) COLLATE RTRIM);
SELECT * FROM t1 WHERE (((((CAST(t1.c1 AS INTEGER))AND((((t1.c65))=((t1.c1))))))OR(TRIM(t1.c64)))) ORDER BY ((0.2864425147005203)%(t1.c1)) COLLATE RTRIM;
SELECT ALL * FROM t1 WHERE (t1.c89) ORDER BY ((('+e(' IN (NULL)))IS NOT(-724948024));
SELECT SUM(count) FROM (SELECT ALL ((t1.c89) IS TRUE)  as count FROM t1 ORDER BY ((('+e(' IN (NULL)))IS NOT(-724948024)));
SELECT ALL * FROM t1 WHERE (t1.c89) ORDER BY ((('+e(' IN (NULL)))IS NOT(-724948024));
SELECT SUM(count) FROM (SELECT ALL ((t1.c89) IS TRUE)  as count FROM t1 ORDER BY ((('+e(' IN (NULL)))IS NOT(-724948024)));
SELECT ALL * FROM t1 WHERE (t1.c89) ORDER BY ((('+e(' IN (NULL)))IS NOT(-724948024));
SELECT ALL COUNT(*) FROM t1 WHERE (((((x'') ISNULL))/((NOT (t1.c2))))) ORDER BY ((((x'') NOTNULL)) BETWEEN (NULL COLLATE BINARY) AND (((((((((t1.c2)AND(t1.c64)))OR(t1.c64)))AND(t1.c89)))OR(t1.c89)))) DESC  NULLS FIRST, (((t1.c1 IN ())) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((((x'') ISNULL))/((NOT (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((x'') NOTNULL)) BETWEEN (NULL COLLATE BINARY) AND (((((((((t1.c2)AND(t1.c64)))OR(t1.c64)))AND(t1.c89)))OR(t1.c89)))) DESC  NULLS FIRST, (((t1.c1 IN ())) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((((x'') ISNULL))/((NOT (t1.c2))))) ORDER BY ((((x'') NOTNULL)) BETWEEN (NULL COLLATE BINARY) AND (((((((((t1.c2)AND(t1.c64)))OR(t1.c64)))AND(t1.c89)))OR(t1.c89)))) DESC  NULLS FIRST, (((t1.c1 IN ())) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((((x'') ISNULL))/((NOT (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((x'') NOTNULL)) BETWEEN (NULL COLLATE BINARY) AND (((((((((t1.c2)AND(t1.c64)))OR(t1.c64)))AND(t1.c89)))OR(t1.c89)))) DESC  NULLS FIRST, (((t1.c1 IN ())) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((((x'') ISNULL))/((NOT (t1.c2))))) ORDER BY ((((x'') NOTNULL)) BETWEEN (NULL COLLATE BINARY) AND (((((((((t1.c2)AND(t1.c64)))OR(t1.c64)))AND(t1.c89)))OR(t1.c89)))) DESC  NULLS FIRST, (((t1.c1 IN ())) IS TRUE) DESC;
SELECT * FROM t1 WHERE ((+ (NULL)) COLLATE RTRIM) ORDER BY (((((t1.c89)) BETWEEN ((t1.c2)) AND ((t1.c64)))) NOT BETWEEN ((((t1.c65, t1.c2, t1.c89)) NOT BETWEEN ((t1.c1, t1.c1, t1.c64)) AND ((NULL, t1.c1, t1.c64)))) AND (((t1.c89)IS(t1.c65)))) ASC, (+ (CAST(t1.c65 AS REAL))), ((NULL) IS TRUE);
SELECT SUM(count) FROM (SELECT (((+ (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c89)) BETWEEN ((t1.c2)) AND ((t1.c64)))) NOT BETWEEN ((((t1.c65, t1.c2, t1.c89)) NOT BETWEEN ((t1.c1, t1.c1, t1.c64)) AND ((NULL, t1.c1, t1.c64)))) AND (((t1.c89)IS(t1.c65)))) ASC, (+ (CAST(t1.c65 AS REAL))), ((NULL) IS TRUE));
SELECT * FROM t1 WHERE ((+ (NULL)) COLLATE RTRIM) ORDER BY (((((t1.c89)) BETWEEN ((t1.c2)) AND ((t1.c64)))) NOT BETWEEN ((((t1.c65, t1.c2, t1.c89)) NOT BETWEEN ((t1.c1, t1.c1, t1.c64)) AND ((NULL, t1.c1, t1.c64)))) AND (((t1.c89)IS(t1.c65)))) ASC, (+ (CAST(t1.c65 AS REAL))), ((NULL) IS TRUE);
SELECT SUM(count) FROM (SELECT (((+ (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c89)) BETWEEN ((t1.c2)) AND ((t1.c64)))) NOT BETWEEN ((((t1.c65, t1.c2, t1.c89)) NOT BETWEEN ((t1.c1, t1.c1, t1.c64)) AND ((NULL, t1.c1, t1.c64)))) AND (((t1.c89)IS(t1.c65)))) ASC, (+ (CAST(t1.c65 AS REAL))), ((NULL) IS TRUE));
SELECT * FROM t1 WHERE ((+ (NULL)) COLLATE RTRIM) ORDER BY (((((t1.c89)) BETWEEN ((t1.c2)) AND ((t1.c64)))) NOT BETWEEN ((((t1.c65, t1.c2, t1.c89)) NOT BETWEEN ((t1.c1, t1.c1, t1.c64)) AND ((NULL, t1.c1, t1.c64)))) AND (((t1.c89)IS(t1.c65)))) ASC, (+ (CAST(t1.c65 AS REAL))), ((NULL) IS TRUE);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1)LIKE(t1.c89))) BETWEEN (((((t1.c89)OR(t1.c1)))OR(x''))) AND ((((t1.c89)) BETWEEN ((t1.c64)) AND ((t1.c64))))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1)LIKE(t1.c89))) BETWEEN (((((t1.c89)OR(t1.c1)))OR(x''))) AND ((((t1.c89)) BETWEEN ((t1.c64)) AND ((t1.c64)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1)LIKE(t1.c89))) BETWEEN (((((t1.c89)OR(t1.c1)))OR(x''))) AND ((((t1.c89)) BETWEEN ((t1.c64)) AND ((t1.c64))))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1)LIKE(t1.c89))) BETWEEN (((((t1.c89)OR(t1.c1)))OR(x''))) AND ((((t1.c89)) BETWEEN ((t1.c64)) AND ((t1.c64)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1)LIKE(t1.c89))) BETWEEN (((((t1.c89)OR(t1.c1)))OR(x''))) AND ((((t1.c89)) BETWEEN ((t1.c64)) AND ((t1.c64))))));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2) ORDER BY ((((t1.c65) NOT BETWEEN ('yZ嗉C') AND (t1.c89)))>((t1.c89 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c65) NOT BETWEEN ('yZ嗉C') AND (t1.c89)))>((t1.c89 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2) ORDER BY ((((t1.c65) NOT BETWEEN ('yZ嗉C') AND (t1.c89)))>((t1.c89 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c65) NOT BETWEEN ('yZ嗉C') AND (t1.c89)))>((t1.c89 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2) ORDER BY ((((t1.c65) NOT BETWEEN ('yZ嗉C') AND (t1.c89)))>((t1.c89 IN ()))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((('1690109674')AND(CAST(1.33303116E8 AS NUMERIC))))AND(t1.c1 COLLATE RTRIM))) ORDER BY x'32c4'  NULLS LAST, CASE WHEN ((t1.c2) IS FALSE) THEN ((t1.c89)*(t1.c89)) WHEN (t1.c1 IN ()) THEN ((t1.c1) NOTNULL) WHEN ((t1.c2) BETWEEN (t1.c89) AND (t1.c65)) THEN t1.c1 WHEN x'' COLLATE BINARY THEN (((t1.c89))<((x'6c46'))) WHEN ((t1.c89) NOT NULL) THEN (t1.c64 IN ()) ELSE UPPER(t1.c1) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('1690109674')AND(CAST(1.33303116E8 AS NUMERIC))))AND(t1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1 ORDER BY x'32c4'  NULLS LAST, CASE WHEN ((t1.c2) IS FALSE) THEN ((t1.c89)*(t1.c89)) WHEN (t1.c1 IN ()) THEN ((t1.c1) NOTNULL) WHEN ((t1.c2) BETWEEN (t1.c89) AND (t1.c65)) THEN t1.c1 WHEN x'' COLLATE BINARY THEN (((t1.c89))<((x'6c46'))) WHEN ((t1.c89) NOT NULL) THEN (t1.c64 IN ()) ELSE UPPER(t1.c1) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((('1690109674')AND(CAST(1.33303116E8 AS NUMERIC))))AND(t1.c1 COLLATE RTRIM))) ORDER BY x'32c4'  NULLS LAST, CASE WHEN ((t1.c2) IS FALSE) THEN ((t1.c89)*(t1.c89)) WHEN (t1.c1 IN ()) THEN ((t1.c1) NOTNULL) WHEN ((t1.c2) BETWEEN (t1.c89) AND (t1.c65)) THEN t1.c1 WHEN x'' COLLATE BINARY THEN (((t1.c89))<((x'6c46'))) WHEN ((t1.c89) NOT NULL) THEN (t1.c64 IN ()) ELSE UPPER(t1.c1) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('1690109674')AND(CAST(1.33303116E8 AS NUMERIC))))AND(t1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1 ORDER BY x'32c4'  NULLS LAST, CASE WHEN ((t1.c2) IS FALSE) THEN ((t1.c89)*(t1.c89)) WHEN (t1.c1 IN ()) THEN ((t1.c1) NOTNULL) WHEN ((t1.c2) BETWEEN (t1.c89) AND (t1.c65)) THEN t1.c1 WHEN x'' COLLATE BINARY THEN (((t1.c89))<((x'6c46'))) WHEN ((t1.c89) NOT NULL) THEN (t1.c64 IN ()) ELSE UPPER(t1.c1) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((('1690109674')AND(CAST(1.33303116E8 AS NUMERIC))))AND(t1.c1 COLLATE RTRIM))) ORDER BY x'32c4'  NULLS LAST, CASE WHEN ((t1.c2) IS FALSE) THEN ((t1.c89)*(t1.c89)) WHEN (t1.c1 IN ()) THEN ((t1.c1) NOTNULL) WHEN ((t1.c2) BETWEEN (t1.c89) AND (t1.c65)) THEN t1.c1 WHEN x'' COLLATE BINARY THEN (((t1.c89))<((x'6c46'))) WHEN ((t1.c89) NOT NULL) THEN (t1.c64 IN ()) ELSE UPPER(t1.c1) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((NOT (x'cc27')));
SELECT SUM(count) FROM (SELECT (((NOT (x'cc27'))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((NOT (x'cc27')));
SELECT SUM(count) FROM (SELECT (((NOT (x'cc27'))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((NOT (x'cc27')));
SELECT * FROM t1 WHERE (((((t1.c2 IN ()), STRFTIME(0.620115839141626, t1.c64, t1.c89, t1.c1, t1.c1), json_valid(t1.c2)))<=((((t1.c89) NOTNULL), t1.c89, CASE WHEN NULL THEN t1.c89 ELSE t1.c65 END)))) ORDER BY ((((t1.c89, t1.c89, t1.c1)) BETWEEN ((t1.c2, t1.c2, t1.c2)) AND (('', NULL, t1.c2))) IN (((t1.c2) IS TRUE), (((t1.c64, t1.c1, t1.c2)) NOT BETWEEN ((t1.c2, t1.c89, t1.c1)) AND ((t1.c65, t1.c2, t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2 IN ()), STRFTIME(0.620115839141626, t1.c64, t1.c89, t1.c1, t1.c1), json_valid(t1.c2)))<=((((t1.c89) NOTNULL), t1.c89, CASE WHEN NULL THEN t1.c89 ELSE t1.c65 END)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c89, t1.c89, t1.c1)) BETWEEN ((t1.c2, t1.c2, t1.c2)) AND (('', NULL, t1.c2))) IN (((t1.c2) IS TRUE), (((t1.c64, t1.c1, t1.c2)) NOT BETWEEN ((t1.c2, t1.c89, t1.c1)) AND ((t1.c65, t1.c2, t1.c1))))));
SELECT * FROM t1 WHERE (((((t1.c2 IN ()), STRFTIME(0.620115839141626, t1.c64, t1.c89, t1.c1, t1.c1), json_valid(t1.c2)))<=((((t1.c89) NOTNULL), t1.c89, CASE WHEN NULL THEN t1.c89 ELSE t1.c65 END)))) ORDER BY ((((t1.c89, t1.c89, t1.c1)) BETWEEN ((t1.c2, t1.c2, t1.c2)) AND (('', NULL, t1.c2))) IN (((t1.c2) IS TRUE), (((t1.c64, t1.c1, t1.c2)) NOT BETWEEN ((t1.c2, t1.c89, t1.c1)) AND ((t1.c65, t1.c2, t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2 IN ()), STRFTIME(0.620115839141626, t1.c64, t1.c89, t1.c1, t1.c1), json_valid(t1.c2)))<=((((t1.c89) NOTNULL), t1.c89, CASE WHEN NULL THEN t1.c89 ELSE t1.c65 END)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c89, t1.c89, t1.c1)) BETWEEN ((t1.c2, t1.c2, t1.c2)) AND (('', NULL, t1.c2))) IN (((t1.c2) IS TRUE), (((t1.c64, t1.c1, t1.c2)) NOT BETWEEN ((t1.c2, t1.c89, t1.c1)) AND ((t1.c65, t1.c2, t1.c1))))));
SELECT * FROM t1 WHERE (((((t1.c2 IN ()), STRFTIME(0.620115839141626, t1.c64, t1.c89, t1.c1, t1.c1), json_valid(t1.c2)))<=((((t1.c89) NOTNULL), t1.c89, CASE WHEN NULL THEN t1.c89 ELSE t1.c65 END)))) ORDER BY ((((t1.c89, t1.c89, t1.c1)) BETWEEN ((t1.c2, t1.c2, t1.c2)) AND (('', NULL, t1.c2))) IN (((t1.c2) IS TRUE), (((t1.c64, t1.c1, t1.c2)) NOT BETWEEN ((t1.c2, t1.c89, t1.c1)) AND ((t1.c65, t1.c2, t1.c1)))));
SELECT * FROM t1 WHERE ((~ (((((t1.c2)AND(t1.c1)))OR(t1.c65))))) ORDER BY (((NULL COLLATE RTRIM))==(((t1.c65 IN (t1.c64)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((t1.c2)AND(t1.c1)))OR(t1.c65))))) IS TRUE)  as count FROM t1 ORDER BY (((NULL COLLATE RTRIM))=(((t1.c65 IN (t1.c64)))))  NULLS LAST);
SELECT * FROM t1 WHERE ((~ (((((t1.c2)AND(t1.c1)))OR(t1.c65))))) ORDER BY (((NULL COLLATE RTRIM))==(((t1.c65 IN (t1.c64)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((t1.c2)AND(t1.c1)))OR(t1.c65))))) IS TRUE)  as count FROM t1 ORDER BY (((NULL COLLATE RTRIM))=(((t1.c65 IN (t1.c64)))))  NULLS LAST);
SELECT * FROM t1 WHERE ((~ (((((t1.c2)AND(t1.c1)))OR(t1.c65))))) ORDER BY (((NULL COLLATE RTRIM))==(((t1.c65 IN (t1.c64)))))  NULLS LAST;
SELECT * FROM t1 WHERE ((NOT (((t1.c1)GLOB(t1.c64)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c1)GLOB(t1.c64))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((NOT (((t1.c1)GLOB(t1.c64)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c1)GLOB(t1.c64))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((NOT (((t1.c1)GLOB(t1.c64)))));
SELECT * FROM t1 WHERE (json_patch(NULL, CAST(t1.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(NULL, CAST(t1.c2 AS NUMERIC))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (json_patch(NULL, CAST(t1.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(NULL, CAST(t1.c2 AS NUMERIC))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (json_patch(NULL, CAST(t1.c2 AS NUMERIC)));
SELECT ALL * FROM t1 WHERE ((((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) IS TRUE)) ORDER BY ((((t1.c89 IN ('1351268349', t1.c89))))>=(((((t1.c1)) NOT BETWEEN ((t1.c65)) AND ((t1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c89 IN ('1351268349', t1.c89))))>=(((((t1.c1)) NOT BETWEEN ((t1.c65)) AND ((t1.c1)))))));
SELECT ALL * FROM t1 WHERE ((((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) IS TRUE)) ORDER BY ((((t1.c89 IN ('1351268349', t1.c89))))>=(((((t1.c1)) NOT BETWEEN ((t1.c65)) AND ((t1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c89 IN ('1351268349', t1.c89))))>=(((((t1.c1)) NOT BETWEEN ((t1.c65)) AND ((t1.c1)))))));
SELECT ALL * FROM t1 WHERE ((((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c1)))) IS TRUE)) ORDER BY ((((t1.c89 IN ('1351268349', t1.c89))))>=(((((t1.c1)) NOT BETWEEN ((t1.c65)) AND ((t1.c1))))));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c65);
SELECT SUM(count) FROM (SELECT ((t1.c65) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c65);
SELECT SUM(count) FROM (SELECT ((t1.c65) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c65);
SELECT ALL * FROM t1 WHERE (((CASE t1.c89  WHEN t1.c1 THEN t1.c2 END) NOT BETWEEN ((('')OR(t1.c65))) AND ((t1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c89  WHEN t1.c1 THEN t1.c2 END) NOT BETWEEN ((('')OR(t1.c65))) AND ((t1.c2 IN ())))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((CASE t1.c89  WHEN t1.c1 THEN t1.c2 END) NOT BETWEEN ((('')OR(t1.c65))) AND ((t1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c89  WHEN t1.c1 THEN t1.c2 END) NOT BETWEEN ((('')OR(t1.c65))) AND ((t1.c2 IN ())))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((CASE t1.c89  WHEN t1.c1 THEN t1.c2 END) NOT BETWEEN ((('')OR(t1.c65))) AND ((t1.c2 IN ()))));
SELECT COUNT(*) FROM t1 WHERE (CAST(CAST(t1.c64 AS NUMERIC) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c64 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(CAST(t1.c64 AS NUMERIC) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c64 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(CAST(t1.c64 AS NUMERIC) AS REAL));
SELECT * FROM t1 WHERE (CASE t1.c89  WHEN t1.c65 THEN t1.c89 WHEN t1.c65 THEN t1.c64 WHEN t1.c89 THEN t1.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c89  WHEN t1.c65 THEN t1.c89 WHEN t1.c65 THEN t1.c64 WHEN t1.c89 THEN t1.c2 END COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE t1.c89  WHEN t1.c65 THEN t1.c89 WHEN t1.c65 THEN t1.c64 WHEN t1.c89 THEN t1.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c89  WHEN t1.c65 THEN t1.c89 WHEN t1.c65 THEN t1.c64 WHEN t1.c89 THEN t1.c2 END COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE t1.c89  WHEN t1.c65 THEN t1.c89 WHEN t1.c65 THEN t1.c64 WHEN t1.c89 THEN t1.c2 END COLLATE NOCASE);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN CAST('5\v!' AS NUMERIC) THEN NULL ELSE ((t1.c2) IS TRUE) END) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST('5\v!' AS NUMERIC) THEN NULL ELSE ((t1.c2) IS TRUE) END) IS TRUE)  as count FROM t1 ORDER BY SQLITE_VERSION() ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN CAST('5\v!' AS NUMERIC) THEN NULL ELSE ((t1.c2) IS TRUE) END) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST('5\v!' AS NUMERIC) THEN NULL ELSE ((t1.c2) IS TRUE) END) IS TRUE)  as count FROM t1 ORDER BY SQLITE_VERSION() ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN CAST('5\v!' AS NUMERIC) THEN NULL ELSE ((t1.c2) IS TRUE) END) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c64)))AND(t1.c65)))OR(COALESCE(t1.c65, t1.c1)))) ORDER BY '567660883' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c64)))AND(t1.c65)))OR(COALESCE(t1.c65, t1.c1)))) IS TRUE)  as count FROM t1 ORDER BY '567660883' ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c64)))AND(t1.c65)))OR(COALESCE(t1.c65, t1.c1)))) ORDER BY '567660883' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c64)))AND(t1.c65)))OR(COALESCE(t1.c65, t1.c1)))) IS TRUE)  as count FROM t1 ORDER BY '567660883' ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c64)))AND(t1.c65)))OR(COALESCE(t1.c65, t1.c1)))) ORDER BY '567660883' ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((t1.c2 COLLATE NOCASE)*((((('')AND(0.3271672102505442)))AND(t1.c89)))));
SELECT SUM(count) FROM (SELECT ((((t1.c2 COLLATE NOCASE)*((((('')AND(0.3271672102505442)))AND(t1.c89))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c2 COLLATE NOCASE)*((((('')AND(0.3271672102505442)))AND(t1.c89)))));
SELECT SUM(count) FROM (SELECT ((((t1.c2 COLLATE NOCASE)*((((('')AND(0.3271672102505442)))AND(t1.c89))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c2 COLLATE NOCASE)*((((('')AND(0.3271672102505442)))AND(t1.c89)))));
SELECT COUNT(*) FROM t1 WHERE ((+ (t1.c64)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c64)) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((+ (t1.c64)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c64)) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((+ (t1.c64)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 WHERE ((((CAST(t1.c64 AS TEXT)))!=((((((t1.c65)OR(t1.c2)))AND(t1.c89))))));
SELECT SUM(count) FROM (SELECT (((((CAST(t1.c64 AS TEXT)))<>((((((t1.c65)OR(t1.c2)))AND(t1.c89)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((CAST(t1.c64 AS TEXT)))!=((((((t1.c65)OR(t1.c2)))AND(t1.c89))))));
SELECT SUM(count) FROM (SELECT (((((CAST(t1.c64 AS TEXT)))<>((((((t1.c65)OR(t1.c2)))AND(t1.c89)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((CAST(t1.c64 AS TEXT)))!=((((((t1.c65)OR(t1.c2)))AND(t1.c89))))));
SELECT ALL * FROM t1 WHERE ((+ (((((t1.c89)OR(t1.c2)))OR(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t1.c89)OR(t1.c2)))OR(t1.c2))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((+ (((((t1.c89)OR(t1.c2)))OR(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t1.c89)OR(t1.c2)))OR(t1.c2))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((+ (((((t1.c89)OR(t1.c2)))OR(t1.c2)))));
SELECT ALL * FROM t1 WHERE (CASE (t1.c1 IN (t1.c1))  WHEN ((((t1.c64)AND(t1.c1)))OR(t1.c65)) THEN ((t1.c89) BETWEEN (t1.c64) AND (t1.c65)) END) ORDER BY CAST(((t1.c1)IS NOT(t1.c65)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t1.c1 IN (t1.c1))  WHEN ((((t1.c64)AND(t1.c1)))OR(t1.c65)) THEN ((t1.c89) BETWEEN (t1.c64) AND (t1.c65)) END) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c1)IS NOT(t1.c65)) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CASE (t1.c1 IN (t1.c1))  WHEN ((((t1.c64)AND(t1.c1)))OR(t1.c65)) THEN ((t1.c89) BETWEEN (t1.c64) AND (t1.c65)) END) ORDER BY CAST(((t1.c1)IS NOT(t1.c65)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t1.c1 IN (t1.c1))  WHEN ((((t1.c64)AND(t1.c1)))OR(t1.c65)) THEN ((t1.c89) BETWEEN (t1.c64) AND (t1.c65)) END) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c1)IS NOT(t1.c65)) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CASE (t1.c1 IN (t1.c1))  WHEN ((((t1.c64)AND(t1.c1)))OR(t1.c65)) THEN ((t1.c89) BETWEEN (t1.c64) AND (t1.c65)) END) ORDER BY CAST(((t1.c1)IS NOT(t1.c65)) AS BLOB) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c1) ORDER BY CASE t1.c64  WHEN t1.c64 THEN t1.c65 END COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1 ORDER BY CASE t1.c64  WHEN t1.c64 THEN t1.c65 END COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (t1.c1) ORDER BY CASE t1.c64  WHEN t1.c64 THEN t1.c65 END COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1 ORDER BY CASE t1.c64  WHEN t1.c64 THEN t1.c65 END COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (t1.c1) ORDER BY CASE t1.c64  WHEN t1.c64 THEN t1.c65 END COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CAST(0.9738398153685863 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.9738398153685863 AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(0.9738398153685863 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.9738398153685863 AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(0.9738398153685863 AS NUMERIC));
SELECT ALL * FROM t1 WHERE (CAST(SUBSTR(t1.c2, t1.c2) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SUBSTR(t1.c2, t1.c2) AS REAL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(SUBSTR(t1.c2, t1.c2) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SUBSTR(t1.c2, t1.c2) AS REAL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(SUBSTR(t1.c2, t1.c2) AS REAL));
SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED((+ (t1.c65))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED((+ (t1.c65)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED((+ (t1.c65))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED((+ (t1.c65)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED((+ (t1.c65))));
SELECT ALL * FROM t1 WHERE (((t1.c65) ISNULL)) ORDER BY (+ (json_valid(t1.c65)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c65) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY (+ (json_valid(t1.c65)))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((t1.c65) ISNULL)) ORDER BY (+ (json_valid(t1.c65)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c65) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY (+ (json_valid(t1.c65)))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((t1.c65) ISNULL)) ORDER BY (+ (json_valid(t1.c65)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c89);
SELECT SUM(count) FROM (SELECT ((t1.c89) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c89);
SELECT SUM(count) FROM (SELECT ((t1.c89) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c89);
SELECT ALL COUNT(*) FROM t1 WHERE ((CAST(t1.c64 AS INTEGER) IN ())) ORDER BY (INSTR(t1.c2, t1.c89) IN ());
SELECT SUM(count) FROM (SELECT ALL (((CAST(t1.c64 AS INTEGER) IN ())) IS TRUE)  as count FROM t1 ORDER BY (INSTR(t1.c2, t1.c89) IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE ((CAST(t1.c64 AS INTEGER) IN ())) ORDER BY (INSTR(t1.c2, t1.c89) IN ());
SELECT SUM(count) FROM (SELECT ALL (((CAST(t1.c64 AS INTEGER) IN ())) IS TRUE)  as count FROM t1 ORDER BY (INSTR(t1.c2, t1.c89) IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE ((CAST(t1.c64 AS INTEGER) IN ())) ORDER BY (INSTR(t1.c2, t1.c89) IN ());
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c2, t1.c64, t1.c65))>=((t1.c65, t1.c65, t1.c65)))))<=((t1.c89 COLLATE BINARY)))) ORDER BY (((t1.c1)) BETWEEN ((CAST(t1.c89 AS BLOB))) AND ((NULL))), CAST(t1.c64 AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t1.c2, t1.c64, t1.c65))>=((t1.c65, t1.c65, t1.c65)))))<=((t1.c89 COLLATE BINARY)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1)) BETWEEN ((CAST(t1.c89 AS BLOB))) AND ((NULL))), CAST(t1.c64 AS REAL) ASC);
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c2, t1.c64, t1.c65))>=((t1.c65, t1.c65, t1.c65)))))<=((t1.c89 COLLATE BINARY)))) ORDER BY (((t1.c1)) BETWEEN ((CAST(t1.c89 AS BLOB))) AND ((NULL))), CAST(t1.c64 AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t1.c2, t1.c64, t1.c65))>=((t1.c65, t1.c65, t1.c65)))))<=((t1.c89 COLLATE BINARY)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1)) BETWEEN ((CAST(t1.c89 AS BLOB))) AND ((NULL))), CAST(t1.c64 AS REAL) ASC);
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c2, t1.c64, t1.c65))>=((t1.c65, t1.c65, t1.c65)))))<=((t1.c89 COLLATE BINARY)))) ORDER BY (((t1.c1)) BETWEEN ((CAST(t1.c89 AS BLOB))) AND ((NULL))), CAST(t1.c64 AS REAL) ASC;
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((t1.c1 IN (t1.c1, t1.c1)))AND((NOT (t1.c65)))))OR(((t1.c64) ISNULL))))AND(((t1.c89)<=(t1.c64)))))AND(t1.c64))) ORDER BY (((t1.c1)OR(t1.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((((((((t1.c1 IN (t1.c1, t1.c1)))AND((NOT (t1.c65)))))OR(((t1.c64) ISNULL))))AND(((t1.c89)<=(t1.c64)))))AND(t1.c64))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1)OR(t1.c1)) IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((t1.c1 IN (t1.c1, t1.c1)))AND((NOT (t1.c65)))))OR(((t1.c64) ISNULL))))AND(((t1.c89)<=(t1.c64)))))AND(t1.c64))) ORDER BY (((t1.c1)OR(t1.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((((((((t1.c1 IN (t1.c1, t1.c1)))AND((NOT (t1.c65)))))OR(((t1.c64) ISNULL))))AND(((t1.c89)<=(t1.c64)))))AND(t1.c64))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1)OR(t1.c1)) IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((t1.c1 IN (t1.c1, t1.c1)))AND((NOT (t1.c65)))))OR(((t1.c64) ISNULL))))AND(((t1.c89)<=(t1.c64)))))AND(t1.c64))) ORDER BY (((t1.c1)OR(t1.c1)) IN ());
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c65 THEN t1.c1 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c65 THEN t1.c1 END) ISNULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c65 THEN t1.c1 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c65 THEN t1.c1 END) ISNULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c65 THEN t1.c1 END) ISNULL));
SELECT COUNT(*) FROM t1 WHERE (IFNULL(DISTINCT ((459475048)>(t1.c1)), COALESCE(DISTINCT t1.c1, t1.c65))) ORDER BY ((((t1.c1)AND(((t1.c64) BETWEEN (t1.c2) AND (t1.c64)))))OR(t1.c2 COLLATE BINARY)) ASC, ((t1.c65)&(((((((((t1.c89)AND(t1.c64)))AND(t1.c65)))OR(t1.c64)))OR(t1.c64)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((459475048)>(t1.c1)), COALESCE(DISTINCT t1.c1, t1.c65))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1)AND(((t1.c64) BETWEEN (t1.c2) AND (t1.c64)))))OR(t1.c2 COLLATE BINARY)) ASC, ((t1.c65)&(((((((((t1.c89)AND(t1.c64)))AND(t1.c65)))OR(t1.c64)))OR(t1.c64)))) ASC);
SELECT COUNT(*) FROM t1 WHERE (IFNULL(DISTINCT ((459475048)>(t1.c1)), COALESCE(DISTINCT t1.c1, t1.c65))) ORDER BY ((((t1.c1)AND(((t1.c64) BETWEEN (t1.c2) AND (t1.c64)))))OR(t1.c2 COLLATE BINARY)) ASC, ((t1.c65)&(((((((((t1.c89)AND(t1.c64)))AND(t1.c65)))OR(t1.c64)))OR(t1.c64)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((459475048)>(t1.c1)), COALESCE(DISTINCT t1.c1, t1.c65))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1)AND(((t1.c64) BETWEEN (t1.c2) AND (t1.c64)))))OR(t1.c2 COLLATE BINARY)) ASC, ((t1.c65)&(((((((((t1.c89)AND(t1.c64)))AND(t1.c65)))OR(t1.c64)))OR(t1.c64)))) ASC);
SELECT COUNT(*) FROM t1 WHERE (IFNULL(DISTINCT ((459475048)>(t1.c1)), COALESCE(DISTINCT t1.c1, t1.c65))) ORDER BY ((((t1.c1)AND(((t1.c64) BETWEEN (t1.c2) AND (t1.c64)))))OR(t1.c2 COLLATE BINARY)) ASC, ((t1.c65)&(((((((((t1.c89)AND(t1.c64)))AND(t1.c65)))OR(t1.c64)))OR(t1.c64)))) ASC;
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c64, -745900407, t1.c1)) BETWEEN ((t1.c64, t1.c89, t1.c65)) AND ((t1.c65, t1.c64, 'c6')))) NOT BETWEEN (CASE WHEN t1.c64 THEN -4.8827702E8 WHEN t1.c2 THEN t1.c89 WHEN t1.c2 THEN t1.c89 END) AND (((t1.c89)AND(t1.c89)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c64, -745900407, t1.c1)) BETWEEN ((t1.c64, t1.c89, t1.c65)) AND ((t1.c65, t1.c64, 'c6')))) NOT BETWEEN (CASE WHEN t1.c64 THEN -4.8827702E8 WHEN t1.c2 THEN t1.c89 WHEN t1.c2 THEN t1.c89 END) AND (((t1.c89)AND(t1.c89))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c64, -745900407, t1.c1)) BETWEEN ((t1.c64, t1.c89, t1.c65)) AND ((t1.c65, t1.c64, 'c6')))) NOT BETWEEN (CASE WHEN t1.c64 THEN -4.8827702E8 WHEN t1.c2 THEN t1.c89 WHEN t1.c2 THEN t1.c89 END) AND (((t1.c89)AND(t1.c89)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c64, -745900407, t1.c1)) BETWEEN ((t1.c64, t1.c89, t1.c65)) AND ((t1.c65, t1.c64, 'c6')))) NOT BETWEEN (CASE WHEN t1.c64 THEN -4.8827702E8 WHEN t1.c2 THEN t1.c89 WHEN t1.c2 THEN t1.c89 END) AND (((t1.c89)AND(t1.c89))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c64, -745900407, t1.c1)) BETWEEN ((t1.c64, t1.c89, t1.c65)) AND ((t1.c65, t1.c64, 'c6')))) NOT BETWEEN (CASE WHEN t1.c64 THEN -4.8827702E8 WHEN t1.c2 THEN t1.c89 WHEN t1.c2 THEN t1.c89 END) AND (((t1.c89)AND(t1.c89)))));
SELECT * FROM t1 WHERE (((((t1.c64) ISNULL))GLOB(CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c89 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64) ISNULL))GLOB(CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c89 END))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c64) ISNULL))GLOB(CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c89 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64) ISNULL))GLOB(CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c89 END))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c64) ISNULL))GLOB(CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c89 END)));
SELECT * FROM t1 WHERE (CAST(t1.c64 AS NUMERIC)) ORDER BY CASE -2.070699535E9  WHEN CAST(t1.c64 AS BLOB) THEN CAST(t1.c64 AS NUMERIC) WHEN CAST(t1.c1 AS REAL) THEN ((((t1.c65)OR(t1.c1)))AND(t1.c1)) WHEN (+ (t1.c65)) THEN (NOT (t1.c2)) ELSE (~ (t1.c65)) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c64 AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY CASE -2.070699535E9  WHEN CAST(t1.c64 AS BLOB) THEN CAST(t1.c64 AS NUMERIC) WHEN CAST(t1.c1 AS REAL) THEN ((((t1.c65)OR(t1.c1)))AND(t1.c1)) WHEN (+ (t1.c65)) THEN (NOT (t1.c2)) ELSE (~ (t1.c65)) END ASC);
SELECT * FROM t1 WHERE (CAST(t1.c64 AS NUMERIC)) ORDER BY CASE -2.070699535E9  WHEN CAST(t1.c64 AS BLOB) THEN CAST(t1.c64 AS NUMERIC) WHEN CAST(t1.c1 AS REAL) THEN ((((t1.c65)OR(t1.c1)))AND(t1.c1)) WHEN (+ (t1.c65)) THEN (NOT (t1.c2)) ELSE (~ (t1.c65)) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c64 AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY CASE -2.070699535E9  WHEN CAST(t1.c64 AS BLOB) THEN CAST(t1.c64 AS NUMERIC) WHEN CAST(t1.c1 AS REAL) THEN ((((t1.c65)OR(t1.c1)))AND(t1.c1)) WHEN (+ (t1.c65)) THEN (NOT (t1.c2)) ELSE (~ (t1.c65)) END ASC);
SELECT * FROM t1 WHERE (CAST(t1.c64 AS NUMERIC)) ORDER BY CASE -2.070699535E9  WHEN CAST(t1.c64 AS BLOB) THEN CAST(t1.c64 AS NUMERIC) WHEN CAST(t1.c1 AS REAL) THEN ((((t1.c65)OR(t1.c1)))AND(t1.c1)) WHEN (+ (t1.c65)) THEN (NOT (t1.c2)) ELSE (~ (t1.c65)) END ASC;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c2)LIKE(t1.c64)) IN (t1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2)LIKE(t1.c64)) IN (t1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c2)LIKE(t1.c64)) IN (t1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2)LIKE(t1.c64)) IN (t1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c2)LIKE(t1.c64)) IN (t1.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c1) NOTNULL))AND((+ (')_4')))))AND(((t1.c65) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c1) NOTNULL))AND((+ (')_4')))))AND(((t1.c65) NOTNULL)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c1) NOTNULL))AND((+ (')_4')))))AND(((t1.c65) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c1) NOTNULL))AND((+ (')_4')))))AND(((t1.c65) NOTNULL)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c1) NOTNULL))AND((+ (')_4')))))AND(((t1.c65) NOTNULL))));
SELECT ALL * FROM t1 WHERE (((((((((((((t1.c1)AND(t1.c1)))OR(t1.c2)))AND('NBxp,k')))AND(NULL)))OR(((((((((t1.c1)OR(t1.c64)))AND(t1.c2)))OR(t1.c1)))AND(t1.c89)))))AND(CASE WHEN t1.c64 THEN t1.c65 WHEN t1.c2 THEN t1.c89 WHEN t1.c2 THEN t1.c89 END))) ORDER BY (((((t1.c2)) NOT BETWEEN ((t1.c89)) AND ((t1.c2))))%((((t1.c1)) BETWEEN ((t1.c65)) AND ((t1.c64)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t1.c1)AND(t1.c1)))OR(t1.c2)))AND('NBxp,k')))AND(NULL)))OR(((((((((t1.c1)OR(t1.c64)))AND(t1.c2)))OR(t1.c1)))AND(t1.c89)))))AND(CASE WHEN t1.c64 THEN t1.c65 WHEN t1.c2 THEN t1.c89 WHEN t1.c2 THEN t1.c89 END))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c2)) NOT BETWEEN ((t1.c89)) AND ((t1.c2))))%((((t1.c1)) BETWEEN ((t1.c65)) AND ((t1.c64)))))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((((((((((t1.c1)AND(t1.c1)))OR(t1.c2)))AND('NBxp,k')))AND(NULL)))OR(((((((((t1.c1)OR(t1.c64)))AND(t1.c2)))OR(t1.c1)))AND(t1.c89)))))AND(CASE WHEN t1.c64 THEN t1.c65 WHEN t1.c2 THEN t1.c89 WHEN t1.c2 THEN t1.c89 END))) ORDER BY (((((t1.c2)) NOT BETWEEN ((t1.c89)) AND ((t1.c2))))%((((t1.c1)) BETWEEN ((t1.c65)) AND ((t1.c64)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t1.c1)AND(t1.c1)))OR(t1.c2)))AND('NBxp,k')))AND(NULL)))OR(((((((((t1.c1)OR(t1.c64)))AND(t1.c2)))OR(t1.c1)))AND(t1.c89)))))AND(CASE WHEN t1.c64 THEN t1.c65 WHEN t1.c2 THEN t1.c89 WHEN t1.c2 THEN t1.c89 END))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c2)) NOT BETWEEN ((t1.c89)) AND ((t1.c2))))%((((t1.c1)) BETWEEN ((t1.c65)) AND ((t1.c64)))))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((((((((((t1.c1)AND(t1.c1)))OR(t1.c2)))AND('NBxp,k')))AND(NULL)))OR(((((((((t1.c1)OR(t1.c64)))AND(t1.c2)))OR(t1.c1)))AND(t1.c89)))))AND(CASE WHEN t1.c64 THEN t1.c65 WHEN t1.c2 THEN t1.c89 WHEN t1.c2 THEN t1.c89 END))) ORDER BY (((((t1.c2)) NOT BETWEEN ((t1.c89)) AND ((t1.c2))))%((((t1.c1)) BETWEEN ((t1.c65)) AND ((t1.c64)))))  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c65, t1.c65, t1.c2)) NOT BETWEEN ((x'73da', (t1.c1 IN ('-1077276676')), 26660469)) AND ((CAST(t1.c1 AS TEXT), (t1.c2 IN ()), ((t1.c2) NOTNULL))))) ORDER BY (- (NULLIF(t1.c1, t1.c89)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c65, t1.c65, t1.c2)) NOT BETWEEN ((x'73da', (t1.c1 IN ('-1077276676')), 26660469)) AND ((CAST(t1.c1 AS TEXT), (t1.c2 IN ()), ((t1.c2) NOTNULL))))) IS TRUE)  as count FROM t1 ORDER BY (- (NULLIF(t1.c1, t1.c89)))  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c65, t1.c65, t1.c2)) NOT BETWEEN ((x'73da', (t1.c1 IN ('-1077276676')), 26660469)) AND ((CAST(t1.c1 AS TEXT), (t1.c2 IN ()), ((t1.c2) NOTNULL))))) ORDER BY (- (NULLIF(t1.c1, t1.c89)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c65, t1.c65, t1.c2)) NOT BETWEEN ((x'73da', (t1.c1 IN ('-1077276676')), 26660469)) AND ((CAST(t1.c1 AS TEXT), (t1.c2 IN ()), ((t1.c2) NOTNULL))))) IS TRUE)  as count FROM t1 ORDER BY (- (NULLIF(t1.c1, t1.c89)))  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c65, t1.c65, t1.c2)) NOT BETWEEN ((x'73da', (t1.c1 IN ('-1077276676')), 26660469)) AND ((CAST(t1.c1 AS TEXT), (t1.c2 IN ()), ((t1.c2) NOTNULL))))) ORDER BY (- (NULLIF(t1.c1, t1.c89)))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((+ (t1.c64)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c64)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((+ (t1.c64)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c64)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((+ (t1.c64)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((t1.c2 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((t1.c2 IN ()) AS REAL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((t1.c2 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((t1.c2 IN ()) AS REAL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((t1.c2 IN ()) AS REAL));
SELECT * FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c2);
SELECT * FROM t1 WHERE ((((t1.c64)) BETWEEN ((0.3567843239576588 COLLATE RTRIM)) AND ((CASE t1.c1  WHEN t1.c2 THEN t1.c2 WHEN t1.c64 THEN t1.c64 WHEN t1.c2 THEN t1.c2 END)))) ORDER BY ((t1.c2 COLLATE BINARY)GLOB((((t1.c65)) NOT BETWEEN ((t1.c64)) AND (('973903333')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c64)) BETWEEN ((0.3567843239576588 COLLATE RTRIM)) AND ((CASE t1.c1  WHEN t1.c2 THEN t1.c2 WHEN t1.c64 THEN t1.c64 WHEN t1.c2 THEN t1.c2 END)))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c2 COLLATE BINARY)GLOB((((t1.c65)) NOT BETWEEN ((t1.c64)) AND (('973903333')))))  NULLS LAST);
SELECT * FROM t1 WHERE ((((t1.c64)) BETWEEN ((0.3567843239576588 COLLATE RTRIM)) AND ((CASE t1.c1  WHEN t1.c2 THEN t1.c2 WHEN t1.c64 THEN t1.c64 WHEN t1.c2 THEN t1.c2 END)))) ORDER BY ((t1.c2 COLLATE BINARY)GLOB((((t1.c65)) NOT BETWEEN ((t1.c64)) AND (('973903333')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c64)) BETWEEN ((0.3567843239576588 COLLATE RTRIM)) AND ((CASE t1.c1  WHEN t1.c2 THEN t1.c2 WHEN t1.c64 THEN t1.c64 WHEN t1.c2 THEN t1.c2 END)))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c2 COLLATE BINARY)GLOB((((t1.c65)) NOT BETWEEN ((t1.c64)) AND (('973903333')))))  NULLS LAST);
SELECT * FROM t1 WHERE ((((t1.c64)) BETWEEN ((0.3567843239576588 COLLATE RTRIM)) AND ((CASE t1.c1  WHEN t1.c2 THEN t1.c2 WHEN t1.c64 THEN t1.c64 WHEN t1.c2 THEN t1.c2 END)))) ORDER BY ((t1.c2 COLLATE BINARY)GLOB((((t1.c65)) NOT BETWEEN ((t1.c64)) AND (('973903333')))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (LENGTH(NULL));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(NULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (LENGTH(NULL));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(NULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (LENGTH(NULL));
SELECT ALL * FROM t1 WHERE (json_extract(t1.c2, ((t1.c64)>(t1.c1)), ((t1.c1)IS(t1.c65)), ((t1.c2) BETWEEN (t1.c2) AND (t1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(t1.c2, ((t1.c64)>(t1.c1)), ((t1.c1)IS(t1.c65)), ((t1.c2) BETWEEN (t1.c2) AND (t1.c1)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (json_extract(t1.c2, ((t1.c64)>(t1.c1)), ((t1.c1)IS(t1.c65)), ((t1.c2) BETWEEN (t1.c2) AND (t1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(t1.c2, ((t1.c64)>(t1.c1)), ((t1.c1)IS(t1.c65)), ((t1.c2) BETWEEN (t1.c2) AND (t1.c1)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (TYPEOF(SQLITE_COMPILEOPTION_GET('1501568245'))) ORDER BY ((t1.c89 IN ()) IN ()) DESC  NULLS LAST, ((((((t1.c64)%('>mXቔi{91S')))AND(((t1.c1) NOTNULL))))OR(((t1.c64)GLOB(t1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(SQLITE_COMPILEOPTION_GET('1501568245'))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c89 IN ()) IN ()) DESC  NULLS LAST, ((((((t1.c64)%('>mXቔi{91S')))AND(((t1.c1) NOTNULL))))OR(((t1.c64)GLOB(t1.c2)))) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (TYPEOF(SQLITE_COMPILEOPTION_GET('1501568245'))) ORDER BY ((t1.c89 IN ()) IN ()) DESC  NULLS LAST, ((((((t1.c64)%('>mXቔi{91S')))AND(((t1.c1) NOTNULL))))OR(((t1.c64)GLOB(t1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(SQLITE_COMPILEOPTION_GET('1501568245'))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c89 IN ()) IN ()) DESC  NULLS LAST, ((((((t1.c64)%('>mXቔi{91S')))AND(((t1.c1) NOTNULL))))OR(((t1.c64)GLOB(t1.c2)))) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (TYPEOF(SQLITE_COMPILEOPTION_GET('1501568245'))) ORDER BY ((t1.c89 IN ()) IN ()) DESC  NULLS LAST, ((((((t1.c64)%('>mXቔi{91S')))AND(((t1.c1) NOTNULL))))OR(((t1.c64)GLOB(t1.c2)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (t1.c89)) COLLATE RTRIM COLLATE NOCASE) ORDER BY (((((~ (t1.c64)))OR((((t1.c89)) BETWEEN ((t1.c89)) AND ((t1.c2))))))OR((NOT (t1.c65)))), ((((t1.c65) IS FALSE)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (t1.c89)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (((((~ (t1.c64)))OR((((t1.c89)) BETWEEN ((t1.c89)) AND ((t1.c2))))))OR((NOT (t1.c65)))), ((((t1.c65) IS FALSE)) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (t1.c89)) COLLATE RTRIM COLLATE NOCASE) ORDER BY (((((~ (t1.c64)))OR((((t1.c89)) BETWEEN ((t1.c89)) AND ((t1.c2))))))OR((NOT (t1.c65)))), ((((t1.c65) IS FALSE)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (t1.c89)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (((((~ (t1.c64)))OR((((t1.c89)) BETWEEN ((t1.c89)) AND ((t1.c2))))))OR((NOT (t1.c65)))), ((((t1.c65) IS FALSE)) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (t1.c89)) COLLATE RTRIM COLLATE NOCASE) ORDER BY (((((~ (t1.c64)))OR((((t1.c89)) BETWEEN ((t1.c89)) AND ((t1.c2))))))OR((NOT (t1.c65)))), ((((t1.c65) IS FALSE)) IS FALSE) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY t1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 ORDER BY t1.c1  NULLS LAST);
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY t1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 ORDER BY t1.c1  NULLS LAST);
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY t1.c1  NULLS LAST;
SELECT * FROM t1 WHERE (((t1.c89) NOTNULL)) ORDER BY (((((t1.c2)AND(t1.c2)))AND(t1.c64)) IN ())  NULLS FIRST, (((t1.c1, x'', t1.c1)) BETWEEN (((((t1.c89))<>((t1.c1))), CASE t1.c2  WHEN t1.c64 THEN t1.c65 ELSE t1.c2 END, CASE t1.c65  WHEN t1.c64 THEN t1.c65 ELSE t1.c65 END)) AND ((((((t1.c65)AND(t1.c65)))OR(t1.c65)), (('-2041054445')+(t1.c64)), t1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((t1.c89) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c2)AND(t1.c2)))AND(t1.c64)) IN ())  NULLS FIRST, (((t1.c1, x'', t1.c1)) BETWEEN (((((t1.c89))<>((t1.c1))), CASE t1.c2  WHEN t1.c64 THEN t1.c65 ELSE t1.c2 END, CASE t1.c65  WHEN t1.c64 THEN t1.c65 ELSE t1.c65 END)) AND ((((((t1.c65)AND(t1.c65)))OR(t1.c65)), (('-2041054445')+(t1.c64)), t1.c1))) DESC);
SELECT * FROM t1 WHERE (((t1.c89) NOTNULL)) ORDER BY (((((t1.c2)AND(t1.c2)))AND(t1.c64)) IN ())  NULLS FIRST, (((t1.c1, x'', t1.c1)) BETWEEN (((((t1.c89))<>((t1.c1))), CASE t1.c2  WHEN t1.c64 THEN t1.c65 ELSE t1.c2 END, CASE t1.c65  WHEN t1.c64 THEN t1.c65 ELSE t1.c65 END)) AND ((((((t1.c65)AND(t1.c65)))OR(t1.c65)), (('-2041054445')+(t1.c64)), t1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((t1.c89) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c2)AND(t1.c2)))AND(t1.c64)) IN ())  NULLS FIRST, (((t1.c1, x'', t1.c1)) BETWEEN (((((t1.c89))<>((t1.c1))), CASE t1.c2  WHEN t1.c64 THEN t1.c65 ELSE t1.c2 END, CASE t1.c65  WHEN t1.c64 THEN t1.c65 ELSE t1.c65 END)) AND ((((((t1.c65)AND(t1.c65)))OR(t1.c65)), (('-2041054445')+(t1.c64)), t1.c1))) DESC);
SELECT * FROM t1 WHERE (((t1.c89) NOTNULL)) ORDER BY (((((t1.c2)AND(t1.c2)))AND(t1.c64)) IN ())  NULLS FIRST, (((t1.c1, x'', t1.c1)) BETWEEN (((((t1.c89))<>((t1.c1))), CASE t1.c2  WHEN t1.c64 THEN t1.c65 ELSE t1.c2 END, CASE t1.c65  WHEN t1.c64 THEN t1.c65 ELSE t1.c65 END)) AND ((((((t1.c65)AND(t1.c65)))OR(t1.c65)), (('-2041054445')+(t1.c64)), t1.c1))) DESC;
SELECT * FROM t1 WHERE ((((t1.c1 IN ()))%(((t1.c65) BETWEEN (t1.c89) AND (t1.c2)))));
SELECT SUM(count) FROM (SELECT (((((t1.c1 IN ()))%(((t1.c65) BETWEEN (t1.c89) AND (t1.c2))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c1 IN ()))%(((t1.c65) BETWEEN (t1.c89) AND (t1.c2)))));
SELECT SUM(count) FROM (SELECT (((((t1.c1 IN ()))%(((t1.c65) BETWEEN (t1.c89) AND (t1.c2))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c1 IN ()))%(((t1.c65) BETWEEN (t1.c89) AND (t1.c2)))));
SELECT ALL * FROM t1 WHERE ((((t1.c2)=(t1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2)=(t1.c2)) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c2)=(t1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2)=(t1.c2)) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c2)=(t1.c2)) IN ()));
SELECT * FROM t1 WHERE (LOWER(DISTINCT ((t1.c64) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((t1.c64) NOTNULL))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (LOWER(DISTINCT ((t1.c64) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((t1.c64) NOTNULL))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (LOWER(DISTINCT ((t1.c64) NOTNULL)));
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c2)AND(NULL)))AND(t1.c65)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2)AND(NULL)))AND(t1.c65)) IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c2)AND(NULL)))AND(t1.c65)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2)AND(NULL)))AND(t1.c65)) IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c2)AND(NULL)))AND(t1.c65)) IN ()));
SELECT * FROM t1 WHERE (((((t1.c65)==(t1.c2))) BETWEEN (((((((((t1.c64)AND(t1.c64)))AND(t1.c1)))OR(t1.c1)))AND(t1.c2))) AND (((t1.c65) BETWEEN (t1.c64) AND (t1.c64))))) ORDER BY ((((('-2057426178') NOTNULL)))>((t1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c65)=(t1.c2))) BETWEEN (((((((((t1.c64)AND(t1.c64)))AND(t1.c1)))OR(t1.c1)))AND(t1.c2))) AND (((t1.c65) BETWEEN (t1.c64) AND (t1.c64))))) IS TRUE)  as count FROM t1 ORDER BY ((((('-2057426178') NOTNULL)))>((t1.c1 COLLATE RTRIM))));
SELECT * FROM t1 WHERE (((((t1.c65)==(t1.c2))) BETWEEN (((((((((t1.c64)AND(t1.c64)))AND(t1.c1)))OR(t1.c1)))AND(t1.c2))) AND (((t1.c65) BETWEEN (t1.c64) AND (t1.c64))))) ORDER BY ((((('-2057426178') NOTNULL)))>((t1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c65)=(t1.c2))) BETWEEN (((((((((t1.c64)AND(t1.c64)))AND(t1.c1)))OR(t1.c1)))AND(t1.c2))) AND (((t1.c65) BETWEEN (t1.c64) AND (t1.c64))))) IS TRUE)  as count FROM t1 ORDER BY ((((('-2057426178') NOTNULL)))>((t1.c1 COLLATE RTRIM))));
SELECT * FROM t1 WHERE (((((t1.c65)==(t1.c2))) BETWEEN (((((((((t1.c64)AND(t1.c64)))AND(t1.c1)))OR(t1.c1)))AND(t1.c2))) AND (((t1.c65) BETWEEN (t1.c64) AND (t1.c64))))) ORDER BY ((((('-2057426178') NOTNULL)))>((t1.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t1 WHERE (TRIM(DISTINCT CASE WHEN t1.c65 THEN t1.c89 ELSE t1.c2 END));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CASE WHEN t1.c65 THEN t1.c89 ELSE t1.c2 END)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (TRIM(DISTINCT CASE WHEN t1.c65 THEN t1.c89 ELSE t1.c2 END));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CASE WHEN t1.c65 THEN t1.c89 ELSE t1.c2 END)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (TRIM(DISTINCT CASE WHEN t1.c65 THEN t1.c89 ELSE t1.c2 END));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c64) BETWEEN (t1.c1) AND (t1.c89)))&(((t1.c1)&(t1.c2))))) ORDER BY 0.1523189147171038 ASC  NULLS FIRST, (((CASE t1.c65  WHEN t1.c2 THEN t1.c65 WHEN t1.c65 THEN t1.c65 WHEN t1.c2 THEN t1.c64 ELSE t1.c2 END, ((((t1.c64)OR(t1.c64)))OR(t1.c65)), t1.c65, ((t1.c65)GLOB(t1.c2)), t1.c89 COLLATE RTRIM))!=(((t1.c65 IN (t1.c89)), ((((t1.c89)OR(t1.c64)))AND(x'')), t1.c65, CAST(t1.c1 AS TEXT), t1.c65))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64) BETWEEN (t1.c1) AND (t1.c89)))&(((t1.c1)&(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY 0.1523189147171038 ASC  NULLS FIRST, (((CASE t1.c65  WHEN t1.c2 THEN t1.c65 WHEN t1.c65 THEN t1.c65 WHEN t1.c2 THEN t1.c64 ELSE t1.c2 END, ((((t1.c64)OR(t1.c64)))OR(t1.c65)), t1.c65, ((t1.c65)GLOB(t1.c2)), t1.c89 COLLATE RTRIM))!=(((t1.c65 IN (t1.c89)), ((((t1.c89)OR(t1.c64)))AND(x'')), t1.c65, CAST(t1.c1 AS TEXT), t1.c65))) DESC);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c64) BETWEEN (t1.c1) AND (t1.c89)))&(((t1.c1)&(t1.c2))))) ORDER BY 0.1523189147171038 ASC  NULLS FIRST, (((CASE t1.c65  WHEN t1.c2 THEN t1.c65 WHEN t1.c65 THEN t1.c65 WHEN t1.c2 THEN t1.c64 ELSE t1.c2 END, ((((t1.c64)OR(t1.c64)))OR(t1.c65)), t1.c65, ((t1.c65)GLOB(t1.c2)), t1.c89 COLLATE RTRIM))!=(((t1.c65 IN (t1.c89)), ((((t1.c89)OR(t1.c64)))AND(x'')), t1.c65, CAST(t1.c1 AS TEXT), t1.c65))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c64) BETWEEN (t1.c1) AND (t1.c89)))&(((t1.c1)&(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY 0.1523189147171038 ASC  NULLS FIRST, (((CASE t1.c65  WHEN t1.c2 THEN t1.c65 WHEN t1.c65 THEN t1.c65 WHEN t1.c2 THEN t1.c64 ELSE t1.c2 END, ((((t1.c64)OR(t1.c64)))OR(t1.c65)), t1.c65, ((t1.c65)GLOB(t1.c2)), t1.c89 COLLATE RTRIM))!=(((t1.c65 IN (t1.c89)), ((((t1.c89)OR(t1.c64)))AND(x'')), t1.c65, CAST(t1.c1 AS TEXT), t1.c65))) DESC);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c64) BETWEEN (t1.c1) AND (t1.c89)))&(((t1.c1)&(t1.c2))))) ORDER BY 0.1523189147171038 ASC  NULLS FIRST, (((CASE t1.c65  WHEN t1.c2 THEN t1.c65 WHEN t1.c65 THEN t1.c65 WHEN t1.c2 THEN t1.c64 ELSE t1.c2 END, ((((t1.c64)OR(t1.c64)))OR(t1.c65)), t1.c65, ((t1.c65)GLOB(t1.c2)), t1.c89 COLLATE RTRIM))!=(((t1.c65 IN (t1.c89)), ((((t1.c89)OR(t1.c64)))AND(x'')), t1.c65, CAST(t1.c1 AS TEXT), t1.c65))) DESC;
SELECT * FROM t1 WHERE (CASE CAST(t1.c2 AS TEXT)  WHEN (((t1.c65, NULL, t1.c65))>((t1.c89, t1.c89, t1.c65))) THEN ((t1.c65) NOT BETWEEN (t1.c89) AND (t1.c2)) ELSE ((t1.c89)IS(t1.c65)) END) ORDER BY ((((t1.c65)&(t1.c2)))>>(t1.c64 COLLATE RTRIM)) ASC, (- (((t1.c65) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t1.c2 AS TEXT)  WHEN (((t1.c65, NULL, t1.c65))>((t1.c89, t1.c89, t1.c65))) THEN ((t1.c65) NOT BETWEEN (t1.c89) AND (t1.c2)) ELSE ((t1.c89)IS(t1.c65)) END) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c65)&(t1.c2)))>>(t1.c64 COLLATE RTRIM)) ASC, (- (((t1.c65) NOT NULL)))  NULLS LAST);
SELECT * FROM t1 WHERE (CASE CAST(t1.c2 AS TEXT)  WHEN (((t1.c65, NULL, t1.c65))>((t1.c89, t1.c89, t1.c65))) THEN ((t1.c65) NOT BETWEEN (t1.c89) AND (t1.c2)) ELSE ((t1.c89)IS(t1.c65)) END) ORDER BY ((((t1.c65)&(t1.c2)))>>(t1.c64 COLLATE RTRIM)) ASC, (- (((t1.c65) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t1.c2 AS TEXT)  WHEN (((t1.c65, NULL, t1.c65))>((t1.c89, t1.c89, t1.c65))) THEN ((t1.c65) NOT BETWEEN (t1.c89) AND (t1.c2)) ELSE ((t1.c89)IS(t1.c65)) END) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c65)&(t1.c2)))>>(t1.c64 COLLATE RTRIM)) ASC, (- (((t1.c65) NOT NULL)))  NULLS LAST);
SELECT * FROM t1 WHERE (CASE CAST(t1.c2 AS TEXT)  WHEN (((t1.c65, NULL, t1.c65))>((t1.c89, t1.c89, t1.c65))) THEN ((t1.c65) NOT BETWEEN (t1.c89) AND (t1.c2)) ELSE ((t1.c89)IS(t1.c65)) END) ORDER BY ((((t1.c65)&(t1.c2)))>>(t1.c64 COLLATE RTRIM)) ASC, (- (((t1.c65) NOT NULL)))  NULLS LAST;
SELECT * FROM t1 WHERE ((((t1.c2)>(t1.c89)) IN ())) ORDER BY t1.c89 DESC, t1.c2 ASC, 0.042865922124887934 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c2)>(t1.c89)) IN ())) IS TRUE)  as count FROM t1 ORDER BY t1.c89 DESC, t1.c2 ASC, 0.042865922124887934 ASC  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c2)>(t1.c89)) IN ())) ORDER BY t1.c89 DESC, t1.c2 ASC, 0.042865922124887934 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c2)>(t1.c89)) IN ())) IS TRUE)  as count FROM t1 ORDER BY t1.c89 DESC, t1.c2 ASC, 0.042865922124887934 ASC  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c2)>(t1.c89)) IN ())) ORDER BY t1.c89 DESC, t1.c2 ASC, 0.042865922124887934 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(t1.c1 COLLATE BINARY AS REAL)) ORDER BY (((((('') BETWEEN (t1.c64) AND (t1.c1)))AND((~ (t1.c89)))))AND(((t1.c89)LIKE(t1.c89)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c1 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM t1 ORDER BY (((((('') BETWEEN (t1.c64) AND (t1.c1)))AND((~ (t1.c89)))))AND(((t1.c89)LIKE(t1.c89)))) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(t1.c1 COLLATE BINARY AS REAL)) ORDER BY (((((('') BETWEEN (t1.c64) AND (t1.c1)))AND((~ (t1.c89)))))AND(((t1.c89)LIKE(t1.c89)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c1 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM t1 ORDER BY (((((('') BETWEEN (t1.c64) AND (t1.c1)))AND((~ (t1.c89)))))AND(((t1.c89)LIKE(t1.c89)))) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(t1.c1 COLLATE BINARY AS REAL)) ORDER BY (((((('') BETWEEN (t1.c64) AND (t1.c1)))AND((~ (t1.c89)))))AND(((t1.c89)LIKE(t1.c89)))) DESC;
SELECT COUNT(*) FROM t1 WHERE (CASE t1.c2  WHEN (t1.c64 IN ()) THEN CAST(t1.c64 AS INTEGER) WHEN JULIANDAY(t1.c64, t1.c2, t1.c89, t1.c65, t1.c2) THEN CAST(0.3256392304299418 AS INTEGER) WHEN ((t1.c65)LIKE(t1.c2)) THEN t1.c64 COLLATE BINARY ELSE ((t1.c2) IS FALSE) END) ORDER BY (((t1.c89) IS TRUE) IN ((x'' IN ()), (~ (t1.c64))));
SELECT SUM(count) FROM (SELECT ((CASE t1.c2  WHEN (t1.c64 IN ()) THEN CAST(t1.c64 AS INTEGER) WHEN JULIANDAY(t1.c64, t1.c2, t1.c89, t1.c65, t1.c2) THEN CAST(0.3256392304299418 AS INTEGER) WHEN ((t1.c65)LIKE(t1.c2)) THEN t1.c64 COLLATE BINARY ELSE ((t1.c2) IS FALSE) END) IS TRUE)  as count FROM t1 ORDER BY (((t1.c89) IS TRUE) IN ((x'' IN ()), (~ (t1.c64)))));
SELECT COUNT(*) FROM t1 WHERE (CASE t1.c2  WHEN (t1.c64 IN ()) THEN CAST(t1.c64 AS INTEGER) WHEN JULIANDAY(t1.c64, t1.c2, t1.c89, t1.c65, t1.c2) THEN CAST(0.3256392304299418 AS INTEGER) WHEN ((t1.c65)LIKE(t1.c2)) THEN t1.c64 COLLATE BINARY ELSE ((t1.c2) IS FALSE) END) ORDER BY (((t1.c89) IS TRUE) IN ((x'' IN ()), (~ (t1.c64))));
SELECT SUM(count) FROM (SELECT ((CASE t1.c2  WHEN (t1.c64 IN ()) THEN CAST(t1.c64 AS INTEGER) WHEN JULIANDAY(t1.c64, t1.c2, t1.c89, t1.c65, t1.c2) THEN CAST(0.3256392304299418 AS INTEGER) WHEN ((t1.c65)LIKE(t1.c2)) THEN t1.c64 COLLATE BINARY ELSE ((t1.c2) IS FALSE) END) IS TRUE)  as count FROM t1 ORDER BY (((t1.c89) IS TRUE) IN ((x'' IN ()), (~ (t1.c64)))));
SELECT COUNT(*) FROM t1 WHERE (CASE t1.c2  WHEN (t1.c64 IN ()) THEN CAST(t1.c64 AS INTEGER) WHEN JULIANDAY(t1.c64, t1.c2, t1.c89, t1.c65, t1.c2) THEN CAST(0.3256392304299418 AS INTEGER) WHEN ((t1.c65)LIKE(t1.c2)) THEN t1.c64 COLLATE BINARY ELSE ((t1.c2) IS FALSE) END) ORDER BY (((t1.c89) IS TRUE) IN ((x'' IN ()), (~ (t1.c64))));
SELECT ALL * FROM t1 WHERE ((t1.c1 IN (t1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((t1.c1 IN (t1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((t1.c1 IN (t1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((t1.c1 IN (t1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((t1.c1 IN (t1.c1)) COLLATE NOCASE);
SELECT ALL * FROM t1 WHERE (CASE UPPER(t1.c64)  WHEN NULL THEN (t1.c1 IN ()) END) ORDER BY (((NOT (t1.c65))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE UPPER(t1.c64)  WHEN NULL THEN (t1.c1 IN ()) END) IS TRUE)  as count FROM t1 ORDER BY (((NOT (t1.c65))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CASE UPPER(t1.c64)  WHEN NULL THEN (t1.c1 IN ()) END) ORDER BY (((NOT (t1.c65))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE UPPER(t1.c64)  WHEN NULL THEN (t1.c1 IN ()) END) IS TRUE)  as count FROM t1 ORDER BY (((NOT (t1.c65))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CASE UPPER(t1.c64)  WHEN NULL THEN (t1.c1 IN ()) END) ORDER BY (((NOT (t1.c65))) IS FALSE)  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((t1.c2 COLLATE RTRIM)||('920317930'))) ORDER BY ((t1.c89) IS FALSE) DESC, json_array(t1.c2, ((t1.c1) IS TRUE)), ((t1.c1 IN ()) IN ((NOT ('F')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c2 COLLATE RTRIM)||('920317930'))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c89) IS FALSE) DESC, json_array(t1.c2, ((t1.c1) IS TRUE)), ((t1.c1 IN ()) IN ((NOT ('F')))) ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((t1.c2 COLLATE RTRIM)||('920317930'))) ORDER BY ((t1.c89) IS FALSE) DESC, json_array(t1.c2, ((t1.c1) IS TRUE)), ((t1.c1 IN ()) IN ((NOT ('F')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c2 COLLATE RTRIM)||('920317930'))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c89) IS FALSE) DESC, json_array(t1.c2, ((t1.c1) IS TRUE)), ((t1.c1 IN ()) IN ((NOT ('F')))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((t1.c2 IN (((((t1.c64)AND(t1.c1)))OR(t1.c1))))) ORDER BY ((((((((t1.c89)AND(t1.c1)))OR(t1.c89)))AND(t1.c2)))OR(t1.c65)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c2 IN (((((t1.c64)AND(t1.c1)))OR(t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c89)AND(t1.c1)))OR(t1.c89)))AND(t1.c2)))OR(t1.c65)) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((t1.c2 IN (((((t1.c64)AND(t1.c1)))OR(t1.c1))))) ORDER BY ((((((((t1.c89)AND(t1.c1)))OR(t1.c89)))AND(t1.c2)))OR(t1.c65)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c2 IN (((((t1.c64)AND(t1.c1)))OR(t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c89)AND(t1.c1)))OR(t1.c89)))AND(t1.c2)))OR(t1.c65)) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((t1.c2 IN (((((t1.c64)AND(t1.c1)))OR(t1.c1))))) ORDER BY ((((((((t1.c89)AND(t1.c1)))OR(t1.c89)))AND(t1.c2)))OR(t1.c65)) COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (HEX((t1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((HEX((t1.c2 IN ()))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (HEX((t1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((HEX((t1.c2 IN ()))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (HEX((t1.c2 IN ())));
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c64)>=(t1.c64)) AS NUMERIC)) ORDER BY ((((CASE WHEN t1.c65 THEN t1.c89 END)OR(((t1.c2)||(t1.c1)))))OR(CAST(t1.c64 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c64)>=(t1.c64)) AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY ((((CASE WHEN t1.c65 THEN t1.c89 END)OR(((t1.c2)||(t1.c1)))))OR(CAST(t1.c64 AS BLOB))));
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c64)>=(t1.c64)) AS NUMERIC)) ORDER BY ((((CASE WHEN t1.c65 THEN t1.c89 END)OR(((t1.c2)||(t1.c1)))))OR(CAST(t1.c64 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c64)>=(t1.c64)) AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY ((((CASE WHEN t1.c65 THEN t1.c89 END)OR(((t1.c2)||(t1.c1)))))OR(CAST(t1.c64 AS BLOB))));
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c64)>=(t1.c64)) AS NUMERIC)) ORDER BY ((((CASE WHEN t1.c65 THEN t1.c89 END)OR(((t1.c2)||(t1.c1)))))OR(CAST(t1.c64 AS BLOB)));
SELECT * FROM t1 WHERE ((NOT (t1.c2))) ORDER BY ((t1.c64) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c2))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c64) ISNULL)  NULLS FIRST);
SELECT * FROM t1 WHERE ((NOT (t1.c2))) ORDER BY ((t1.c64) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c2))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c64) ISNULL)  NULLS FIRST);
SELECT * FROM t1 WHERE ((NOT (t1.c2))) ORDER BY ((t1.c64) ISNULL)  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((TYPEOF(DISTINCT t1.c1))>=(t1.c2))) ORDER BY CAST(t1.c64 AS TEXT) COLLATE BINARY DESC  NULLS LAST, ((LOWER(t1.c1))+((((t1.c65)) NOT BETWEEN ((t1.c89)) AND ((t1.c65))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT t1.c1))>=(t1.c2))) IS TRUE)  as count FROM t1 ORDER BY CAST(t1.c64 AS TEXT) COLLATE BINARY DESC  NULLS LAST, ((LOWER(t1.c1))+((((t1.c65)) NOT BETWEEN ((t1.c89)) AND ((t1.c65))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((TYPEOF(DISTINCT t1.c1))>=(t1.c2))) ORDER BY CAST(t1.c64 AS TEXT) COLLATE BINARY DESC  NULLS LAST, ((LOWER(t1.c1))+((((t1.c65)) NOT BETWEEN ((t1.c89)) AND ((t1.c65))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT t1.c1))>=(t1.c2))) IS TRUE)  as count FROM t1 ORDER BY CAST(t1.c64 AS TEXT) COLLATE BINARY DESC  NULLS LAST, ((LOWER(t1.c1))+((((t1.c65)) NOT BETWEEN ((t1.c89)) AND ((t1.c65))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((TYPEOF(DISTINCT t1.c1))>=(t1.c2))) ORDER BY CAST(t1.c64 AS TEXT) COLLATE BINARY DESC  NULLS LAST, ((LOWER(t1.c1))+((((t1.c65)) NOT BETWEEN ((t1.c89)) AND ((t1.c65))))) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((t1.c2 IN ()))&(((t1.c65) BETWEEN (t1.c2) AND (t1.c64))))) ORDER BY ((t1.c64) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2 IN ()))&(((t1.c65) BETWEEN (t1.c2) AND (t1.c64))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c64) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((((t1.c2 IN ()))&(((t1.c65) BETWEEN (t1.c2) AND (t1.c64))))) ORDER BY ((t1.c64) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2 IN ()))&(((t1.c65) BETWEEN (t1.c2) AND (t1.c64))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c64) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((((t1.c2 IN ()))&(((t1.c65) BETWEEN (t1.c2) AND (t1.c64))))) ORDER BY ((t1.c64) NOTNULL)  NULLS FIRST;
SELECT * FROM t1 WHERE ((+ (t1.c65)) COLLATE RTRIM) ORDER BY TYPEOF((t1.c89 IN (t1.c1))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (t1.c65)) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY TYPEOF((t1.c89 IN (t1.c1))) DESC);
SELECT * FROM t1 WHERE ((+ (t1.c65)) COLLATE RTRIM) ORDER BY TYPEOF((t1.c89 IN (t1.c1))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (t1.c65)) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY TYPEOF((t1.c89 IN (t1.c1))) DESC);
SELECT * FROM t1 WHERE ((+ (t1.c65)) COLLATE RTRIM) ORDER BY TYPEOF((t1.c89 IN (t1.c1))) DESC;
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY t1.c65 DESC  NULLS LAST, '1294911993'  NULLS LAST, ((CAST('' AS INTEGER))LIKE(CASE WHEN t1.c89 THEN t1.c89 END));
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY t1.c65 DESC  NULLS LAST, '1294911993'  NULLS LAST, ((CAST('' AS INTEGER))LIKE(CASE WHEN t1.c89 THEN t1.c89 END)));
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY t1.c65 DESC  NULLS LAST, '1294911993'  NULLS LAST, ((CAST('' AS INTEGER))LIKE(CASE WHEN t1.c89 THEN t1.c89 END));
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY t1.c65 DESC  NULLS LAST, '1294911993'  NULLS LAST, ((CAST('' AS INTEGER))LIKE(CASE WHEN t1.c89 THEN t1.c89 END)));
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY t1.c65 DESC  NULLS LAST, '1294911993'  NULLS LAST, ((CAST('' AS INTEGER))LIKE(CASE WHEN t1.c89 THEN t1.c89 END));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((NULL)OR(t1.c65)))AND(t1.c89)))AND('')))OR(t1.c64)) IN ((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c65))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NULL)OR(t1.c65)))AND(t1.c89)))AND('')))OR(t1.c64)) IN ((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c65)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((NULL)OR(t1.c65)))AND(t1.c89)))AND('')))OR(t1.c64)) IN ((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c65))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NULL)OR(t1.c65)))AND(t1.c89)))AND('')))OR(t1.c64)) IN ((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c65)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((NULL)OR(t1.c65)))AND(t1.c89)))AND('')))OR(t1.c64)) IN ((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c65))))));
SELECT ALL COUNT(*) FROM t1 WHERE (json_insert((t1.c89 IN ()), NULLIF(t1.c89, t1.c64), (((t1.c65))<=((t1.c2)))));
SELECT SUM(count) FROM (SELECT ((json_insert((t1.c89 IN ()), NULLIF(t1.c89, t1.c64), (((t1.c65))<=((t1.c2))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (json_insert((t1.c89 IN ()), NULLIF(t1.c89, t1.c64), (((t1.c65))<=((t1.c2)))));
SELECT SUM(count) FROM (SELECT ((json_insert((t1.c89 IN ()), NULLIF(t1.c89, t1.c64), (((t1.c65))<=((t1.c2))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (json_insert((t1.c89 IN ()), NULLIF(t1.c89, t1.c64), (((t1.c65))<=((t1.c2)))));
SELECT * FROM t1 WHERE (((UPPER(DISTINCT t1.c89)) NOT BETWEEN (((t1.c1) IS FALSE)) AND (t1.c1))) ORDER BY ((~ (t1.c89)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT t1.c89)) NOT BETWEEN (((t1.c1) IS FALSE)) AND (t1.c1))) IS TRUE)  as count FROM t1 ORDER BY ((~ (t1.c89)) IN ()) DESC);
SELECT * FROM t1 WHERE (((UPPER(DISTINCT t1.c89)) NOT BETWEEN (((t1.c1) IS FALSE)) AND (t1.c1))) ORDER BY ((~ (t1.c89)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT t1.c89)) NOT BETWEEN (((t1.c1) IS FALSE)) AND (t1.c1))) IS TRUE)  as count FROM t1 ORDER BY ((~ (t1.c89)) IN ()) DESC);
SELECT * FROM t1 WHERE (((UPPER(DISTINCT t1.c89)) NOT BETWEEN (((t1.c1) IS FALSE)) AND (t1.c1))) ORDER BY ((~ (t1.c89)) IN ()) DESC;
SELECT COUNT(*) FROM t1 WHERE ((NOT (CHANGES()))) ORDER BY ((CAST(t1.c89 AS TEXT)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CHANGES()))) IS TRUE)  as count FROM t1 ORDER BY ((CAST(t1.c89 AS TEXT)) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((NOT (CHANGES()))) ORDER BY ((CAST(t1.c89 AS TEXT)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CHANGES()))) IS TRUE)  as count FROM t1 ORDER BY ((CAST(t1.c89 AS TEXT)) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((NOT (CHANGES()))) ORDER BY ((CAST(t1.c89 AS TEXT)) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((CASE t1.c65  WHEN t1.c1 THEN t1.c89 WHEN t1.c65 THEN t1.c89 WHEN t1.c1 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c65 THEN t1.c64 END) BETWEEN (CAST(t1.c1 AS NUMERIC)) AND (((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c65))))) ORDER BY 0.4728012054891356 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE t1.c65  WHEN t1.c1 THEN t1.c89 WHEN t1.c65 THEN t1.c89 WHEN t1.c1 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c65 THEN t1.c64 END) BETWEEN (CAST(t1.c1 AS NUMERIC)) AND (((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c65))))) IS TRUE)  as count FROM t1 ORDER BY 0.4728012054891356 ASC);
SELECT COUNT(*) FROM t1 WHERE (((CASE t1.c65  WHEN t1.c1 THEN t1.c89 WHEN t1.c65 THEN t1.c89 WHEN t1.c1 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c65 THEN t1.c64 END) BETWEEN (CAST(t1.c1 AS NUMERIC)) AND (((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c65))))) ORDER BY 0.4728012054891356 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE t1.c65  WHEN t1.c1 THEN t1.c89 WHEN t1.c65 THEN t1.c89 WHEN t1.c1 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c65 THEN t1.c64 END) BETWEEN (CAST(t1.c1 AS NUMERIC)) AND (((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c65))))) IS TRUE)  as count FROM t1 ORDER BY 0.4728012054891356 ASC);
SELECT COUNT(*) FROM t1 WHERE (((CASE t1.c65  WHEN t1.c1 THEN t1.c89 WHEN t1.c65 THEN t1.c89 WHEN t1.c1 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN t1.c65 THEN t1.c64 END) BETWEEN (CAST(t1.c1 AS NUMERIC)) AND (((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c65))))) ORDER BY 0.4728012054891356 ASC;
SELECT * FROM t1 WHERE (CAST(t1.c64 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c64 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(t1.c64 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c64 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(t1.c64 AS REAL) COLLATE BINARY);
SELECT * FROM t1 WHERE (UPPER((NOT (t1.c2)))) ORDER BY ((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c65)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((UPPER((NOT (t1.c2)))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c65)) COLLATE NOCASE);
SELECT * FROM t1 WHERE (UPPER((NOT (t1.c2)))) ORDER BY ((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c65)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((UPPER((NOT (t1.c2)))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c65)) COLLATE NOCASE);
SELECT * FROM t1 WHERE (UPPER((NOT (t1.c2)))) ORDER BY ((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c65)) COLLATE NOCASE;
SELECT ALL * FROM t1 WHERE ((((((t1.c65 IN ()))AND(((t1.c89) NOT BETWEEN (t1.c65) AND (t1.c1)))))OR(((t1.c65) NOT BETWEEN (t1.c1) AND (0.6844434351953389))))) ORDER BY t1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t1.c65 IN ()))AND(((t1.c89) NOT BETWEEN (t1.c65) AND (t1.c1)))))OR(((t1.c65) NOT BETWEEN (t1.c1) AND (0.6844434351953389))))) IS TRUE)  as count FROM t1 ORDER BY t1.c1 ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((((((t1.c65 IN ()))AND(((t1.c89) NOT BETWEEN (t1.c65) AND (t1.c1)))))OR(((t1.c65) NOT BETWEEN (t1.c1) AND (0.6844434351953389))))) ORDER BY t1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t1.c65 IN ()))AND(((t1.c89) NOT BETWEEN (t1.c65) AND (t1.c1)))))OR(((t1.c65) NOT BETWEEN (t1.c1) AND (0.6844434351953389))))) IS TRUE)  as count FROM t1 ORDER BY t1.c1 ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((((((t1.c65 IN ()))AND(((t1.c89) NOT BETWEEN (t1.c65) AND (t1.c1)))))OR(((t1.c65) NOT BETWEEN (t1.c1) AND (0.6844434351953389))))) ORDER BY t1.c1 ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT ALL * FROM t1 WHERE ((- (((t1.c89) BETWEEN (t1.c65) AND (t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c89) BETWEEN (t1.c65) AND (t1.c64))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((- (((t1.c89) BETWEEN (t1.c65) AND (t1.c64)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c89) BETWEEN (t1.c65) AND (t1.c64))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((- (((t1.c89) BETWEEN (t1.c65) AND (t1.c64)))));
SELECT COUNT(*) FROM t1 WHERE ((((('-1657523181') NOT NULL))IS NOT(((t1.c65) BETWEEN (t1.c1) AND (t1.c89)))));
SELECT SUM(count) FROM (SELECT (((((('-1657523181') NOT NULL))IS NOT(((t1.c65) BETWEEN (t1.c1) AND (t1.c89))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((('-1657523181') NOT NULL))IS NOT(((t1.c65) BETWEEN (t1.c1) AND (t1.c89)))));
SELECT SUM(count) FROM (SELECT (((((('-1657523181') NOT NULL))IS NOT(((t1.c65) BETWEEN (t1.c1) AND (t1.c89))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((('-1657523181') NOT NULL))IS NOT(((t1.c65) BETWEEN (t1.c1) AND (t1.c89)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (t1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (t1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (t1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (t1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (t1.c2)) COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE ((((0.005148537024371569 IN ()))%(((t1.c89) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((0.005148537024371569 IN ()))%(((t1.c89) IS TRUE)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((0.005148537024371569 IN ()))%(((t1.c89) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((0.005148537024371569 IN ()))%(((t1.c89) IS TRUE)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((0.005148537024371569 IN ()))%(((t1.c89) IS TRUE))));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c89)>=(t1.c2)) AS BLOB)) ORDER BY (((0.9774676933821744 IN ())) BETWEEN (json_extract(t1.c1, t1.c64)) AND (((NULL)>(t1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c89)>=(t1.c2)) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY (((0.9774676933821744 IN ())) BETWEEN (json_extract(t1.c1, t1.c64)) AND (((NULL)>(t1.c2)))) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c89)>=(t1.c2)) AS BLOB)) ORDER BY (((0.9774676933821744 IN ())) BETWEEN (json_extract(t1.c1, t1.c64)) AND (((NULL)>(t1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c89)>=(t1.c2)) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY (((0.9774676933821744 IN ())) BETWEEN (json_extract(t1.c1, t1.c64)) AND (((NULL)>(t1.c2)))) DESC);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c2)=(t1.c64))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c2)==(t1.c64))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c2)=(t1.c64))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c2)==(t1.c64))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c2)=(t1.c64))) IS TRUE));
SELECT * FROM t1 WHERE (((((t1.c1) NOTNULL))OR(CAST(t1.c89 AS BLOB)))) ORDER BY ((((((t1.c65)OR('')))AND(((0.9884343388124781) BETWEEN (t1.c2) AND (t1.c2)))))AND(CAST(t1.c64 AS BLOB))), 0.9236500432030432;
SELECT SUM(count) FROM (SELECT ((((((t1.c1) NOTNULL))OR(CAST(t1.c89 AS BLOB)))) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c65)OR('')))AND(((0.9884343388124781) BETWEEN (t1.c2) AND (t1.c2)))))AND(CAST(t1.c64 AS BLOB))), 0.9236500432030432);
SELECT * FROM t1 WHERE (((((t1.c1) NOTNULL))OR(CAST(t1.c89 AS BLOB)))) ORDER BY ((((((t1.c65)OR('')))AND(((0.9884343388124781) BETWEEN (t1.c2) AND (t1.c2)))))AND(CAST(t1.c64 AS BLOB))), 0.9236500432030432;
SELECT SUM(count) FROM (SELECT ((((((t1.c1) NOTNULL))OR(CAST(t1.c89 AS BLOB)))) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c65)OR('')))AND(((0.9884343388124781) BETWEEN (t1.c2) AND (t1.c2)))))AND(CAST(t1.c64 AS BLOB))), 0.9236500432030432);
SELECT * FROM t1 WHERE (((((t1.c1) NOTNULL))OR(CAST(t1.c89 AS BLOB)))) ORDER BY ((((((t1.c65)OR('')))AND(((0.9884343388124781) BETWEEN (t1.c2) AND (t1.c2)))))AND(CAST(t1.c64 AS BLOB))), 0.9236500432030432;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE NULL  WHEN t1.c65 THEN t1.c64 ELSE '''ꀻd' END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN t1.c65 THEN t1.c64 ELSE '''ꀻd' END COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE NULL  WHEN t1.c65 THEN t1.c64 ELSE '''ꀻd' END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN t1.c65 THEN t1.c64 ELSE '''ꀻd' END COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE NULL  WHEN t1.c65 THEN t1.c64 ELSE '''ꀻd' END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1 WHERE (UNLIKELY(DISTINCT ((t1.c1)>(t1.c65))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((t1.c1)>(t1.c65)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (UNLIKELY(DISTINCT ((t1.c1)>(t1.c65))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((t1.c1)>(t1.c65)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (UNLIKELY(DISTINCT ((t1.c1)>(t1.c65))));
SELECT COUNT(*) FROM t1 WHERE ('299643840') ORDER BY (((t1.c2 IN ())) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (('299643840') IS TRUE)  as count FROM t1 ORDER BY (((t1.c2 IN ())) NOTNULL) ASC);
SELECT COUNT(*) FROM t1 WHERE ('299643840') ORDER BY (((t1.c2 IN ())) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (('299643840') IS TRUE)  as count FROM t1 ORDER BY (((t1.c2 IN ())) NOTNULL) ASC);
SELECT COUNT(*) FROM t1 WHERE ('299643840') ORDER BY (((t1.c2 IN ())) NOTNULL) ASC;
SELECT * FROM t1 WHERE ((- ((((t1.c65, t1.c2, t1.c64))>=((t1.c89, t1.c1, t1.c65)))))) ORDER BY (((((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c65))))%(((t1.c2) BETWEEN (t1.c89) AND (t1.c89)))) ASC, CASE t1.c64  WHEN t1.c65 THEN t1.c2 WHEN t1.c65 THEN t1.c89 WHEN t1.c2 THEN t1.c89 END COLLATE RTRIM DESC  NULLS FIRST, ((CAST(t1.c2 AS BLOB))&(((((((((t1.c64)OR(t1.c2)))AND(t1.c89)))AND(t1.c89)))OR(NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((t1.c65, t1.c2, t1.c64))>=((t1.c89, t1.c1, t1.c65)))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c65))))%(((t1.c2) BETWEEN (t1.c89) AND (t1.c89)))) ASC, CASE t1.c64  WHEN t1.c65 THEN t1.c2 WHEN t1.c65 THEN t1.c89 WHEN t1.c2 THEN t1.c89 END COLLATE RTRIM DESC  NULLS FIRST, ((CAST(t1.c2 AS BLOB))&(((((((((t1.c64)OR(t1.c2)))AND(t1.c89)))AND(t1.c89)))OR(NULL)))) DESC  NULLS LAST);
SELECT * FROM t1 WHERE ((- ((((t1.c65, t1.c2, t1.c64))>=((t1.c89, t1.c1, t1.c65)))))) ORDER BY (((((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c65))))%(((t1.c2) BETWEEN (t1.c89) AND (t1.c89)))) ASC, CASE t1.c64  WHEN t1.c65 THEN t1.c2 WHEN t1.c65 THEN t1.c89 WHEN t1.c2 THEN t1.c89 END COLLATE RTRIM DESC  NULLS FIRST, ((CAST(t1.c2 AS BLOB))&(((((((((t1.c64)OR(t1.c2)))AND(t1.c89)))AND(t1.c89)))OR(NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((t1.c65, t1.c2, t1.c64))>=((t1.c89, t1.c1, t1.c65)))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c65))))%(((t1.c2) BETWEEN (t1.c89) AND (t1.c89)))) ASC, CASE t1.c64  WHEN t1.c65 THEN t1.c2 WHEN t1.c65 THEN t1.c89 WHEN t1.c2 THEN t1.c89 END COLLATE RTRIM DESC  NULLS FIRST, ((CAST(t1.c2 AS BLOB))&(((((((((t1.c64)OR(t1.c2)))AND(t1.c89)))AND(t1.c89)))OR(NULL)))) DESC  NULLS LAST);
SELECT * FROM t1 WHERE ((- ((((t1.c65, t1.c2, t1.c64))>=((t1.c89, t1.c1, t1.c65)))))) ORDER BY (((((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c65))))%(((t1.c2) BETWEEN (t1.c89) AND (t1.c89)))) ASC, CASE t1.c64  WHEN t1.c65 THEN t1.c2 WHEN t1.c65 THEN t1.c89 WHEN t1.c2 THEN t1.c89 END COLLATE RTRIM DESC  NULLS FIRST, ((CAST(t1.c2 AS BLOB))&(((((((((t1.c64)OR(t1.c2)))AND(t1.c89)))AND(t1.c89)))OR(NULL)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c2 AS INTEGER)) BETWEEN (((t1.c2) BETWEEN (t1.c1) AND (t1.c2))) AND (((((((((t1.c2)OR(t1.c65)))OR(t1.c65)))AND(t1.c89)))OR(t1.c65))))) ORDER BY CASE WHEN (+ (t1.c65)) THEN ((t1.c65)!=('470153787')) ELSE (~ (t1.c89)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c2 AS INTEGER)) BETWEEN (((t1.c2) BETWEEN (t1.c1) AND (t1.c2))) AND (((((((((t1.c2)OR(t1.c65)))OR(t1.c65)))AND(t1.c89)))OR(t1.c65))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (+ (t1.c65)) THEN ((t1.c65)!=('470153787')) ELSE (~ (t1.c89)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c2 AS INTEGER)) BETWEEN (((t1.c2) BETWEEN (t1.c1) AND (t1.c2))) AND (((((((((t1.c2)OR(t1.c65)))OR(t1.c65)))AND(t1.c89)))OR(t1.c65))))) ORDER BY CASE WHEN (+ (t1.c65)) THEN ((t1.c65)!=('470153787')) ELSE (~ (t1.c89)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c2 AS INTEGER)) BETWEEN (((t1.c2) BETWEEN (t1.c1) AND (t1.c2))) AND (((((((((t1.c2)OR(t1.c65)))OR(t1.c65)))AND(t1.c89)))OR(t1.c65))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (+ (t1.c65)) THEN ((t1.c65)!=('470153787')) ELSE (~ (t1.c89)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c2 AS INTEGER)) BETWEEN (((t1.c2) BETWEEN (t1.c1) AND (t1.c2))) AND (((((((((t1.c2)OR(t1.c65)))OR(t1.c65)))AND(t1.c89)))OR(t1.c65))))) ORDER BY CASE WHEN (+ (t1.c65)) THEN ((t1.c65)!=('470153787')) ELSE (~ (t1.c89)) END ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c65) ISNULL))LIKE(TRIM(DISTINCT t1.c89, t1.c2)))) ORDER BY CAST((t1.c89 IN (t1.c64)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c65) ISNULL))LIKE(TRIM(DISTINCT t1.c89, t1.c2)))) IS TRUE)  as count FROM t1 ORDER BY CAST((t1.c89 IN (t1.c64)) AS REAL)  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((t1.c65) ISNULL))LIKE(TRIM(DISTINCT t1.c89, t1.c2)))) ORDER BY CAST((t1.c89 IN (t1.c64)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c65) ISNULL))LIKE(TRIM(DISTINCT t1.c89, t1.c2)))) IS TRUE)  as count FROM t1 ORDER BY CAST((t1.c89 IN (t1.c64)) AS REAL)  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((t1.c65) ISNULL))LIKE(TRIM(DISTINCT t1.c89, t1.c2)))) ORDER BY CAST((t1.c89 IN (t1.c64)) AS REAL)  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((t1.c64) BETWEEN (t1.c89) AND (t1.c64)))AND(t1.c89 COLLATE BINARY)))OR(t1.c64 COLLATE NOCASE))) ORDER BY ((4.688441E8) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c64) BETWEEN (t1.c89) AND (t1.c64)))AND(t1.c89 COLLATE BINARY)))OR(t1.c64 COLLATE NOCASE))) IS TRUE)  as count FROM t1 ORDER BY ((4.688441E8) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((((t1.c64) BETWEEN (t1.c89) AND (t1.c64)))AND(t1.c89 COLLATE BINARY)))OR(t1.c64 COLLATE NOCASE))) ORDER BY ((4.688441E8) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c64) BETWEEN (t1.c89) AND (t1.c64)))AND(t1.c89 COLLATE BINARY)))OR(t1.c64 COLLATE NOCASE))) IS TRUE)  as count FROM t1 ORDER BY ((4.688441E8) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((((t1.c64) BETWEEN (t1.c89) AND (t1.c64)))AND(t1.c89 COLLATE BINARY)))OR(t1.c64 COLLATE NOCASE))) ORDER BY ((4.688441E8) ISNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c65) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c65) IS FALSE) IN ())) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c65) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c65) IS FALSE) IN ())) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c65) IS FALSE) IN ()));
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT ALL * FROM t1 WHERE (((((((((((((t1.c65)AND(t1.c64)))OR(t1.c65)))AND((((t1.c89)) BETWEEN ((t1.c65)) AND ((t1.c1))))))AND((t1.c1 IN ()))))OR((t1.c2 IN ()))))OR(CAST(t1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t1.c65)AND(t1.c64)))OR(t1.c65)))AND((((t1.c89)) BETWEEN ((t1.c65)) AND ((t1.c1))))))AND((t1.c1 IN ()))))OR((t1.c2 IN ()))))OR(CAST(t1.c2 AS TEXT)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((((((t1.c65)AND(t1.c64)))OR(t1.c65)))AND((((t1.c89)) BETWEEN ((t1.c65)) AND ((t1.c1))))))AND((t1.c1 IN ()))))OR((t1.c2 IN ()))))OR(CAST(t1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t1.c65)AND(t1.c64)))OR(t1.c65)))AND((((t1.c89)) BETWEEN ((t1.c65)) AND ((t1.c1))))))AND((t1.c1 IN ()))))OR((t1.c2 IN ()))))OR(CAST(t1.c2 AS TEXT)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((((((t1.c65)AND(t1.c64)))OR(t1.c65)))AND((((t1.c89)) BETWEEN ((t1.c65)) AND ((t1.c1))))))AND((t1.c1 IN ()))))OR((t1.c2 IN ()))))OR(CAST(t1.c2 AS TEXT))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1)OR((((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c1))))))OR(((t1.c89)<>(x'')))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1)OR((((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c1))))))OR(((t1.c89)<>(x''))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1)OR((((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c1))))))OR(((t1.c89)<>(x'')))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1)OR((((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c1))))))OR(((t1.c89)<>(x''))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1)OR((((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c1))))))OR(((t1.c89)<>(x'')))));
SELECT * FROM t1 WHERE ((((((t1.c65)-(t1.c2)), t1.c1 COLLATE BINARY, ((((t1.c2)OR(t1.c65)))AND(t1.c89))))<(((((t1.c89))>=((t1.c1))), (t1.c65 IN ()), CASE t1.c1  WHEN '' THEN t1.c89 WHEN t1.c65 THEN t1.c2 WHEN t1.c89 THEN t1.c89 END))));
SELECT SUM(count) FROM (SELECT (((((((t1.c65)-(t1.c2)), t1.c1 COLLATE BINARY, ((((t1.c2)OR(t1.c65)))AND(t1.c89))))<(((((t1.c89))>=((t1.c1))), (t1.c65 IN ()), CASE t1.c1  WHEN '' THEN t1.c89 WHEN t1.c65 THEN t1.c2 WHEN t1.c89 THEN t1.c89 END)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c65)-(t1.c2)), t1.c1 COLLATE BINARY, ((((t1.c2)OR(t1.c65)))AND(t1.c89))))<(((((t1.c89))>=((t1.c1))), (t1.c65 IN ()), CASE t1.c1  WHEN '' THEN t1.c89 WHEN t1.c65 THEN t1.c2 WHEN t1.c89 THEN t1.c89 END))));
SELECT SUM(count) FROM (SELECT (((((((t1.c65)-(t1.c2)), t1.c1 COLLATE BINARY, ((((t1.c2)OR(t1.c65)))AND(t1.c89))))<(((((t1.c89))>=((t1.c1))), (t1.c65 IN ()), CASE t1.c1  WHEN '' THEN t1.c89 WHEN t1.c65 THEN t1.c2 WHEN t1.c89 THEN t1.c89 END)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c65)-(t1.c2)), t1.c1 COLLATE BINARY, ((((t1.c2)OR(t1.c65)))AND(t1.c89))))<(((((t1.c89))>=((t1.c1))), (t1.c65 IN ()), CASE t1.c1  WHEN '' THEN t1.c89 WHEN t1.c65 THEN t1.c2 WHEN t1.c89 THEN t1.c89 END))));
SELECT COUNT(*) FROM t1 WHERE (((x'')/(((t1.c65)<=(t1.c65)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')/(((t1.c65)<=(t1.c65))))) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT COUNT(*) FROM t1 WHERE (((x'')/(((t1.c65)<=(t1.c65)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')/(((t1.c65)<=(t1.c65))))) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT COUNT(*) FROM t1 WHERE (((x'')/(((t1.c65)<=(t1.c65)))));
SELECT ALL * FROM t1 WHERE (CAST((0X6458d3f6 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((0x6458d3f6 IN ()) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST((0X6458d3f6 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((0x6458d3f6 IN ()) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST((0X6458d3f6 IN ()) AS INTEGER));
SELECT COUNT(*) FROM t1 WHERE (t1.c65);
SELECT SUM(count) FROM (SELECT ALL ((t1.c65) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c65);
SELECT SUM(count) FROM (SELECT ALL ((t1.c65) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c65);
SELECT COUNT(*) FROM t1 WHERE ((((((((t1.c1, t1.c2, t1.c65))=((t1.c64, t1.c64, t1.c89))))AND(((t1.c89)/(t1.c64)))))OR(CASE WHEN t1.c65 THEN t1.c64 WHEN t1.c89 THEN t1.c2 WHEN t1.c2 THEN t1.c65 ELSE t1.c89 END)));
SELECT SUM(count) FROM (SELECT (((((((((t1.c1, t1.c2, t1.c65))==((t1.c64, t1.c64, t1.c89))))AND(((t1.c89)/(t1.c64)))))OR(CASE WHEN t1.c65 THEN t1.c64 WHEN t1.c89 THEN t1.c2 WHEN t1.c2 THEN t1.c65 ELSE t1.c89 END))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((((t1.c1, t1.c2, t1.c65))=((t1.c64, t1.c64, t1.c89))))AND(((t1.c89)/(t1.c64)))))OR(CASE WHEN t1.c65 THEN t1.c64 WHEN t1.c89 THEN t1.c2 WHEN t1.c2 THEN t1.c65 ELSE t1.c89 END)));
SELECT SUM(count) FROM (SELECT (((((((((t1.c1, t1.c2, t1.c65))==((t1.c64, t1.c64, t1.c89))))AND(((t1.c89)/(t1.c64)))))OR(CASE WHEN t1.c65 THEN t1.c64 WHEN t1.c89 THEN t1.c2 WHEN t1.c2 THEN t1.c65 ELSE t1.c89 END))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((((t1.c1, t1.c2, t1.c65))=((t1.c64, t1.c64, t1.c89))))AND(((t1.c89)/(t1.c64)))))OR(CASE WHEN t1.c65 THEN t1.c64 WHEN t1.c89 THEN t1.c2 WHEN t1.c2 THEN t1.c65 ELSE t1.c89 END)));
SELECT ALL * FROM t1 WHERE ((+ ('d* ??L')));
SELECT SUM(count) FROM (SELECT ALL (((+ ('d* ??L'))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((+ ('d* ??L')));
SELECT SUM(count) FROM (SELECT ALL (((+ ('d* ??L'))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((+ ('d* ??L')));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c64)) NOT BETWEEN ((((((t1.c65)OR(t1.c89)))AND(t1.c89)))) AND ((((((t1.c89)AND(t1.c2)))OR(t1.c1)))))) ORDER BY LOWER(DISTINCT CAST(t1.c1 AS TEXT)) DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c64)) NOT BETWEEN ((((((t1.c65)OR(t1.c89)))AND(t1.c89)))) AND ((((((t1.c89)AND(t1.c2)))OR(t1.c1)))))) IS TRUE)  as count FROM t1 ORDER BY LOWER(DISTINCT CAST(t1.c1 AS TEXT)) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c64)) NOT BETWEEN ((((((t1.c65)OR(t1.c89)))AND(t1.c89)))) AND ((((((t1.c89)AND(t1.c2)))OR(t1.c1)))))) ORDER BY LOWER(DISTINCT CAST(t1.c1 AS TEXT)) DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c64)) NOT BETWEEN ((((((t1.c65)OR(t1.c89)))AND(t1.c89)))) AND ((((((t1.c89)AND(t1.c2)))OR(t1.c1)))))) IS TRUE)  as count FROM t1 ORDER BY LOWER(DISTINCT CAST(t1.c1 AS TEXT)) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c64)) NOT BETWEEN ((((((t1.c65)OR(t1.c89)))AND(t1.c89)))) AND ((((((t1.c89)AND(t1.c2)))OR(t1.c1)))))) ORDER BY LOWER(DISTINCT CAST(t1.c1 AS TEXT)) DESC;
SELECT * FROM t1 WHERE (json_array(((t1.c2)GLOB(t1.c64)), ((t1.c89)IS NOT(t1.c65))));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((t1.c2)GLOB(t1.c64)), ((t1.c89)IS NOT(t1.c65)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (json_array(((t1.c2)GLOB(t1.c64)), ((t1.c89)IS NOT(t1.c65))));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((t1.c2)GLOB(t1.c64)), ((t1.c89)IS NOT(t1.c65)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (json_array(((t1.c2)GLOB(t1.c64)), ((t1.c89)IS NOT(t1.c65))));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN (~ (t1.c89)) THEN ((((t1.c64)OR(t1.c1)))OR(t1.c64)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (t1.c89)) THEN ((((t1.c64)OR(t1.c1)))OR(t1.c64)) END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN (~ (t1.c89)) THEN ((((t1.c64)OR(t1.c1)))OR(t1.c64)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (t1.c89)) THEN ((((t1.c64)OR(t1.c1)))OR(t1.c64)) END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN (~ (t1.c89)) THEN ((((t1.c64)OR(t1.c1)))OR(t1.c64)) END);
SELECT ALL * FROM t1 WHERE (((((x'') IS FALSE))<=(((0xffffffff86706c09)IS NOT(t1.c2))))) ORDER BY ((((x'') NOT BETWEEN (t1.c2) AND (t1.c65))) NOTNULL), (((t1.c1))==((t1.c89))) COLLATE NOCASE ASC, CASE ((t1.c64) BETWEEN (x'') AND (t1.c1))  WHEN (t1.c65 IN ()) THEN ((t1.c65) IS TRUE) ELSE CAST(t1.c2 AS REAL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'') IS FALSE))<=(((0Xffffffff86706c09)IS NOT(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((x'') NOT BETWEEN (t1.c2) AND (t1.c65))) NOTNULL), (((t1.c1))=((t1.c89))) COLLATE NOCASE ASC, CASE ((t1.c64) BETWEEN (x'') AND (t1.c1))  WHEN (t1.c65 IN ()) THEN ((t1.c65) IS TRUE) ELSE CAST(t1.c2 AS REAL) END  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((x'') IS FALSE))<=(((0xffffffff86706c09)IS NOT(t1.c2))))) ORDER BY ((((x'') NOT BETWEEN (t1.c2) AND (t1.c65))) NOTNULL), (((t1.c1))==((t1.c89))) COLLATE NOCASE ASC, CASE ((t1.c64) BETWEEN (x'') AND (t1.c1))  WHEN (t1.c65 IN ()) THEN ((t1.c65) IS TRUE) ELSE CAST(t1.c2 AS REAL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'') IS FALSE))<=(((0Xffffffff86706c09)IS NOT(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((x'') NOT BETWEEN (t1.c2) AND (t1.c65))) NOTNULL), (((t1.c1))=((t1.c89))) COLLATE NOCASE ASC, CASE ((t1.c64) BETWEEN (x'') AND (t1.c1))  WHEN (t1.c65 IN ()) THEN ((t1.c65) IS TRUE) ELSE CAST(t1.c2 AS REAL) END  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((x'') IS FALSE))<=(((0xffffffff86706c09)IS NOT(t1.c2))))) ORDER BY ((((x'') NOT BETWEEN (t1.c2) AND (t1.c65))) NOTNULL), (((t1.c1))==((t1.c89))) COLLATE NOCASE ASC, CASE ((t1.c64) BETWEEN (x'') AND (t1.c1))  WHEN (t1.c65 IN ()) THEN ((t1.c65) IS TRUE) ELSE CAST(t1.c2 AS REAL) END  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c65) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c65) IS TRUE)) ISNULL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c65) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c65) IS TRUE)) ISNULL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c65) IS TRUE)) ISNULL));
SELECT COUNT(*) FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c2);
SELECT ALL * FROM t1 WHERE (CAST(t1.c1 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c1 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(t1.c1 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c1 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(t1.c1 COLLATE RTRIM AS BLOB));
SELECT * FROM t1 WHERE (((t1.c89) NOT NULL)) ORDER BY (~ (CASE WHEN t1.c64 THEN t1.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c89) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY (~ (CASE WHEN t1.c64 THEN t1.c1 END)) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (((t1.c89) NOT NULL)) ORDER BY (~ (CASE WHEN t1.c64 THEN t1.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c89) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY (~ (CASE WHEN t1.c64 THEN t1.c1 END)) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (((t1.c89) NOT NULL)) ORDER BY (~ (CASE WHEN t1.c64 THEN t1.c1 END)) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (CAST(CASE WHEN t1.c65 THEN '-2067746278' END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t1.c65 THEN '-2067746278' END AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(CASE WHEN t1.c65 THEN '-2067746278' END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t1.c65 THEN '-2067746278' END AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(CASE WHEN t1.c65 THEN '-2067746278' END AS NUMERIC));
SELECT * FROM t1 WHERE ((((((t1.c89))<((t1.c2))))<=((('791539053') NOT BETWEEN (t1.c1) AND ('䍜kIN')))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c89))<((t1.c2))))<=((('791539053') NOT BETWEEN (t1.c1) AND ('䍜kIN'))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c89))<((t1.c2))))<=((('791539053') NOT BETWEEN (t1.c1) AND ('䍜kIN')))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c89))<((t1.c2))))<=((('791539053') NOT BETWEEN (t1.c1) AND ('䍜kIN'))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c89))<((t1.c2))))<=((('791539053') NOT BETWEEN (t1.c1) AND ('䍜kIN')))));
SELECT ALL COUNT(*) FROM t1 WHERE (x'') ORDER BY t1.c65  NULLS LAST, (((t1.c64)&(t1.c64)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1 ORDER BY t1.c65  NULLS LAST, (((t1.c64)&(t1.c64)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (x'') ORDER BY t1.c65  NULLS LAST, (((t1.c64)&(t1.c64)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1 ORDER BY t1.c65  NULLS LAST, (((t1.c64)&(t1.c64)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (x'') ORDER BY t1.c65  NULLS LAST, (((t1.c64)&(t1.c64)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c65)>(t1.c1))) NOT BETWEEN ((t1.c2 IN ())) AND (((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c1))))) ORDER BY ('' IN (((t1.c89) NOTNULL), (((t1.c64))==((t1.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c65)>(t1.c1))) NOT BETWEEN ((t1.c2 IN ())) AND (((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY ('' IN (((t1.c89) NOTNULL), (((t1.c64))=((t1.c1))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c65)>(t1.c1))) NOT BETWEEN ((t1.c2 IN ())) AND (((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c1))))) ORDER BY ('' IN (((t1.c89) NOTNULL), (((t1.c64))==((t1.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c65)>(t1.c1))) NOT BETWEEN ((t1.c2 IN ())) AND (((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY ('' IN (((t1.c89) NOTNULL), (((t1.c64))=((t1.c1))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c65)>(t1.c1))) NOT BETWEEN ((t1.c2 IN ())) AND (((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c1))))) ORDER BY ('' IN (((t1.c89) NOTNULL), (((t1.c64))==((t1.c1))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (CAST((~ (t1.c89)) AS REAL)) ORDER BY CAST((t1.c65 IN (t1.c64, t1.c64)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (t1.c89)) AS REAL)) IS TRUE)  as count FROM t1 ORDER BY CAST((t1.c65 IN (t1.c64, t1.c64)) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (CAST((~ (t1.c89)) AS REAL)) ORDER BY CAST((t1.c65 IN (t1.c64, t1.c64)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (t1.c89)) AS REAL)) IS TRUE)  as count FROM t1 ORDER BY CAST((t1.c65 IN (t1.c64, t1.c64)) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (CAST((~ (t1.c89)) AS REAL)) ORDER BY CAST((t1.c65 IN (t1.c64, t1.c64)) AS REAL) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c89) ORDER BY (((t1.c89) NOT BETWEEN (t1.c65) AND (0.03210957069122289)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((t1.c89) IS TRUE)  as count FROM t1 ORDER BY (((t1.c89) NOT BETWEEN (t1.c65) AND (0.03210957069122289)) IN ()));
SELECT * FROM t1 WHERE (t1.c89) ORDER BY (((t1.c89) NOT BETWEEN (t1.c65) AND (0.03210957069122289)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((t1.c89) IS TRUE)  as count FROM t1 ORDER BY (((t1.c89) NOT BETWEEN (t1.c65) AND (0.03210957069122289)) IN ()));
SELECT * FROM t1 WHERE (t1.c89) ORDER BY (((t1.c89) NOT BETWEEN (t1.c65) AND (0.03210957069122289)) IN ());
SELECT COUNT(*) FROM t1 WHERE (((t1.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t1.c2 IN ()) IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t1.c2 IN ()) IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c2 IN ()) IN ()));
SELECT * FROM t1 WHERE (((((t1.c2)<<(t1.c1)))LIKE((NOT (t1.c2))))) ORDER BY NULLIF(DISTINCT CASE WHEN t1.c64 THEN t1.c89 END, ((((t1.c65)AND(t1.c64)))AND(t1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2)<<(t1.c1)))LIKE((NOT (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY NULLIF(DISTINCT CASE WHEN t1.c64 THEN t1.c89 END, ((((t1.c65)AND(t1.c64)))AND(t1.c2))) ASC  NULLS LAST);
SELECT * FROM t1 WHERE (((((t1.c2)<<(t1.c1)))LIKE((NOT (t1.c2))))) ORDER BY NULLIF(DISTINCT CASE WHEN t1.c64 THEN t1.c89 END, ((((t1.c65)AND(t1.c64)))AND(t1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2)<<(t1.c1)))LIKE((NOT (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY NULLIF(DISTINCT CASE WHEN t1.c64 THEN t1.c89 END, ((((t1.c65)AND(t1.c64)))AND(t1.c2))) ASC  NULLS LAST);
SELECT * FROM t1 WHERE (((((t1.c2)<<(t1.c1)))LIKE((NOT (t1.c2))))) ORDER BY NULLIF(DISTINCT CASE WHEN t1.c64 THEN t1.c89 END, ((((t1.c65)AND(t1.c64)))AND(t1.c2))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c65)AND(t1.c65)))OR(t1.c65)))||(((t1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c65)AND(t1.c65)))OR(t1.c65)))||(((t1.c1) IS FALSE)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c65)AND(t1.c65)))OR(t1.c65)))||(((t1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c65)AND(t1.c65)))OR(t1.c65)))||(((t1.c1) IS FALSE)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c65)AND(t1.c65)))OR(t1.c65)))||(((t1.c1) IS FALSE))));
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN t1.c64 THEN t1.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c64 THEN t1.c1 END COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN t1.c64 THEN t1.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c64 THEN t1.c1 END COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN t1.c64 THEN t1.c1 END COLLATE NOCASE);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1) NOTNULL)) NOT BETWEEN (CAST(t1.c89 AS REAL)) AND (t1.c65)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1) NOTNULL)) NOT BETWEEN (CAST(t1.c89 AS REAL)) AND (t1.c65))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1) NOTNULL)) NOT BETWEEN (CAST(t1.c89 AS REAL)) AND (t1.c65)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1) NOTNULL)) NOT BETWEEN (CAST(t1.c89 AS REAL)) AND (t1.c65))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1) NOTNULL)) NOT BETWEEN (CAST(t1.c89 AS REAL)) AND (t1.c65)));
SELECT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c89 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c1 THEN t1.c89 END) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c89 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c1 THEN t1.c89 END) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c89 END) NOTNULL));
SELECT ALL * FROM t1 WHERE (((((((((((((((((((((t1.c2)AND(t1.c65)))OR(t1.c64)))AND(6.8492507E8)))OR(t1.c65)))AND(t1.c64)))OR(t1.c89)))OR(CASE WHEN t1.c64 THEN t1.c65 END)))AND(((t1.c1) NOT BETWEEN ('1751697625') AND (t1.c2)))))OR('KF')))OR(((((((((t1.c2)OR(t1.c1)))OR(t1.c89)))OR(t1.c64)))OR(t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((t1.c2)AND(t1.c65)))OR(t1.c64)))AND(6.8492507E8)))OR(t1.c65)))AND(t1.c64)))OR(t1.c89)))OR(CASE WHEN t1.c64 THEN t1.c65 END)))AND(((t1.c1) NOT BETWEEN ('1751697625') AND (t1.c2)))))OR('KF')))OR(((((((((t1.c2)OR(t1.c1)))OR(t1.c89)))OR(t1.c64)))OR(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((((((((((((((t1.c2)AND(t1.c65)))OR(t1.c64)))AND(6.8492507E8)))OR(t1.c65)))AND(t1.c64)))OR(t1.c89)))OR(CASE WHEN t1.c64 THEN t1.c65 END)))AND(((t1.c1) NOT BETWEEN ('1751697625') AND (t1.c2)))))OR('KF')))OR(((((((((t1.c2)OR(t1.c1)))OR(t1.c89)))OR(t1.c64)))OR(t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((t1.c2)AND(t1.c65)))OR(t1.c64)))AND(6.8492507E8)))OR(t1.c65)))AND(t1.c64)))OR(t1.c89)))OR(CASE WHEN t1.c64 THEN t1.c65 END)))AND(((t1.c1) NOT BETWEEN ('1751697625') AND (t1.c2)))))OR('KF')))OR(((((((((t1.c2)OR(t1.c1)))OR(t1.c89)))OR(t1.c64)))OR(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((((((((((((((t1.c2)AND(t1.c65)))OR(t1.c64)))AND(6.8492507E8)))OR(t1.c65)))AND(t1.c64)))OR(t1.c89)))OR(CASE WHEN t1.c64 THEN t1.c65 END)))AND(((t1.c1) NOT BETWEEN ('1751697625') AND (t1.c2)))))OR('KF')))OR(((((((((t1.c2)OR(t1.c1)))OR(t1.c89)))OR(t1.c64)))OR(t1.c1)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC))<<(0.2824200558984562)));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c1 AS NUMERIC))<<(0.2824200558984562))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC))<<(0.2824200558984562)));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c1 AS NUMERIC))<<(0.2824200558984562))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c1 AS NUMERIC))<<(0.2824200558984562)));
SELECT ALL COUNT(*) FROM t1 WHERE ((+ ((NOT (t1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (t1.c1))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ ((NOT (t1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (t1.c1))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ ((NOT (t1.c1)))));
SELECT * FROM t1 WHERE (CASE WHEN t1.c2 THEN ((t1.c89)IS NOT(t1.c1)) WHEN t1.c64 COLLATE BINARY THEN t1.c89 WHEN '' THEN t1.c65 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c2 THEN ((t1.c89)IS NOT(t1.c1)) WHEN t1.c64 COLLATE BINARY THEN t1.c89 WHEN '' THEN t1.c65 END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE WHEN t1.c2 THEN ((t1.c89)IS NOT(t1.c1)) WHEN t1.c64 COLLATE BINARY THEN t1.c89 WHEN '' THEN t1.c65 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c2 THEN ((t1.c89)IS NOT(t1.c1)) WHEN t1.c64 COLLATE BINARY THEN t1.c89 WHEN '' THEN t1.c65 END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE WHEN t1.c2 THEN ((t1.c89)IS NOT(t1.c1)) WHEN t1.c64 COLLATE BINARY THEN t1.c89 WHEN '' THEN t1.c65 END);
SELECT * FROM t1 WHERE ((((((((((t1.c65)AND(t1.c89)))AND(t1.c89)))OR(t1.c65)))AND(t1.c89)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t1.c65)AND(t1.c89)))AND(t1.c89)))OR(t1.c65)))AND(t1.c89)) IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((((((t1.c65)AND(t1.c89)))AND(t1.c89)))OR(t1.c65)))AND(t1.c89)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t1.c65)AND(t1.c89)))AND(t1.c89)))OR(t1.c65)))AND(t1.c89)) IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((((((t1.c65)AND(t1.c89)))AND(t1.c89)))OR(t1.c65)))AND(t1.c89)) IN ()));
SELECT COUNT(*) FROM t1 WHERE ('	䔿[iU5');
SELECT SUM(count) FROM (SELECT ALL (('	䔿[iU5') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ('	䔿[iU5');
SELECT SUM(count) FROM (SELECT ALL (('	䔿[iU5') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ('	䔿[iU5');
SELECT * FROM t1 WHERE (((CAST(t1.c1 AS REAL)) NOTNULL)) ORDER BY CAST(((t1.c89)<=(t1.c2)) AS REAL) DESC, (+ (((t1.c64) NOT BETWEEN (0x2746c90c) AND (t1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c1 AS REAL)) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c89)<=(t1.c2)) AS REAL) DESC, (+ (((t1.c64) NOT BETWEEN (0x2746c90c) AND (t1.c2)))) DESC);
SELECT * FROM t1 WHERE (((CAST(t1.c1 AS REAL)) NOTNULL)) ORDER BY CAST(((t1.c89)<=(t1.c2)) AS REAL) DESC, (+ (((t1.c64) NOT BETWEEN (0x2746c90c) AND (t1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c1 AS REAL)) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c89)<=(t1.c2)) AS REAL) DESC, (+ (((t1.c64) NOT BETWEEN (0x2746c90c) AND (t1.c2)))) DESC);
SELECT * FROM t1 WHERE (((CAST(t1.c1 AS REAL)) NOTNULL)) ORDER BY CAST(((t1.c89)<=(t1.c2)) AS REAL) DESC, (+ (((t1.c64) NOT BETWEEN (0x2746c90c) AND (t1.c2)))) DESC;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c89))<((t1.c89))) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t1.c89))<((t1.c89))) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c89))<((t1.c89))) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t1.c89))<((t1.c89))) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c89))<((t1.c89))) COLLATE RTRIM COLLATE BINARY);
SELECT COUNT(*) FROM t1 WHERE ((((CAST(t1.c65 AS TEXT)))=((((t1.c1) NOT BETWEEN (t1.c64) AND (t1.c2)))))) ORDER BY (((t1.c65)OR(t1.c89)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t1.c65 AS TEXT)))=((((t1.c1) NOT BETWEEN (t1.c64) AND (t1.c2)))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c65)OR(t1.c89)) IN ()));
SELECT COUNT(*) FROM t1 WHERE ((((CAST(t1.c65 AS TEXT)))=((((t1.c1) NOT BETWEEN (t1.c64) AND (t1.c2)))))) ORDER BY (((t1.c65)OR(t1.c89)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t1.c65 AS TEXT)))=((((t1.c1) NOT BETWEEN (t1.c64) AND (t1.c2)))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c65)OR(t1.c89)) IN ()));
SELECT COUNT(*) FROM t1 WHERE ((((CAST(t1.c65 AS TEXT)))=((((t1.c1) NOT BETWEEN (t1.c64) AND (t1.c2)))))) ORDER BY (((t1.c65)OR(t1.c89)) IN ());
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2, t1.c65, t1.c1)) BETWEEN ((CAST(t1.c65 AS BLOB), ((t1.c65)>=(t1.c64)), NULL)) AND ((((t1.c1) NOTNULL), ((t1.c64) NOT BETWEEN (t1.c89) AND (x'')), (NOT ('')))))) ORDER BY ((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c65)) COLLATE BINARY ASC, ((t1.c65) NOT NULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2, t1.c65, t1.c1)) BETWEEN ((CAST(t1.c65 AS BLOB), ((t1.c65)>=(t1.c64)), NULL)) AND ((((t1.c1) NOTNULL), ((t1.c64) NOT BETWEEN (t1.c89) AND (x'')), (NOT ('')))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c65)) COLLATE BINARY ASC, ((t1.c65) NOT NULL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2, t1.c65, t1.c1)) BETWEEN ((CAST(t1.c65 AS BLOB), ((t1.c65)>=(t1.c64)), NULL)) AND ((((t1.c1) NOTNULL), ((t1.c64) NOT BETWEEN (t1.c89) AND (x'')), (NOT ('')))))) ORDER BY ((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c65)) COLLATE BINARY ASC, ((t1.c65) NOT NULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2, t1.c65, t1.c1)) BETWEEN ((CAST(t1.c65 AS BLOB), ((t1.c65)>=(t1.c64)), NULL)) AND ((((t1.c1) NOTNULL), ((t1.c64) NOT BETWEEN (t1.c89) AND (x'')), (NOT ('')))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c65)) COLLATE BINARY ASC, ((t1.c65) NOT NULL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2, t1.c65, t1.c1)) BETWEEN ((CAST(t1.c65 AS BLOB), ((t1.c65)>=(t1.c64)), NULL)) AND ((((t1.c1) NOTNULL), ((t1.c64) NOT BETWEEN (t1.c89) AND (x'')), (NOT ('')))))) ORDER BY ((t1.c65) NOT BETWEEN (t1.c2) AND (t1.c65)) COLLATE BINARY ASC, ((t1.c65) NOT NULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((UPPER(t1.c65) IN ())) ORDER BY ((((t1.c1)|(t1.c1)))<(((t1.c65) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((UPPER(t1.c65) IN ())) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1)|(t1.c1)))<(((t1.c65) ISNULL))));
SELECT ALL * FROM t1 WHERE ((UPPER(t1.c65) IN ())) ORDER BY ((((t1.c1)|(t1.c1)))<(((t1.c65) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((UPPER(t1.c65) IN ())) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1)|(t1.c1)))<(((t1.c65) ISNULL))));
SELECT ALL * FROM t1 WHERE ((UPPER(t1.c65) IN ())) ORDER BY ((((t1.c1)|(t1.c1)))<(((t1.c65) ISNULL)));
SELECT COUNT(*) FROM t1 WHERE ((((+ (t1.c65)))||(((t1.c1) NOT BETWEEN (x'') AND (t1.c65))))) ORDER BY CASE ((t1.c89)|(t1.c64))  WHEN ((x'') IS TRUE) THEN ((t1.c89) IS FALSE) ELSE t1.c1 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t1.c65)))||(((t1.c1) NOT BETWEEN (x'') AND (t1.c65))))) IS TRUE)  as count FROM t1 ORDER BY CASE ((t1.c89)|(t1.c64))  WHEN ((x'') IS TRUE) THEN ((t1.c89) IS FALSE) ELSE t1.c1 COLLATE NOCASE END);
SELECT COUNT(*) FROM t1 WHERE ((((+ (t1.c65)))||(((t1.c1) NOT BETWEEN (x'') AND (t1.c65))))) ORDER BY CASE ((t1.c89)|(t1.c64))  WHEN ((x'') IS TRUE) THEN ((t1.c89) IS FALSE) ELSE t1.c1 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t1.c65)))||(((t1.c1) NOT BETWEEN (x'') AND (t1.c65))))) IS TRUE)  as count FROM t1 ORDER BY CASE ((t1.c89)|(t1.c64))  WHEN ((x'') IS TRUE) THEN ((t1.c89) IS FALSE) ELSE t1.c1 COLLATE NOCASE END);
SELECT COUNT(*) FROM t1 WHERE ((((+ (t1.c65)))||(((t1.c1) NOT BETWEEN (x'') AND (t1.c65))))) ORDER BY CASE ((t1.c89)|(t1.c64))  WHEN ((x'') IS TRUE) THEN ((t1.c89) IS FALSE) ELSE t1.c1 COLLATE NOCASE END;
SELECT ALL * FROM t1 WHERE (((((((((t1.c2)AND(((t1.c65) NOTNULL))))OR((((NULL)) BETWEEN ((t1.c2)) AND ((t1.c89))))))AND(x'')))OR(((t1.c65) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((t1.c2)AND(((t1.c65) NOTNULL))))OR((((NULL)) BETWEEN ((t1.c2)) AND ((t1.c89))))))AND(x'')))OR(((t1.c65) NOT NULL)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((t1.c2)AND(((t1.c65) NOTNULL))))OR((((NULL)) BETWEEN ((t1.c2)) AND ((t1.c89))))))AND(x'')))OR(((t1.c65) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((t1.c2)AND(((t1.c65) NOTNULL))))OR((((NULL)) BETWEEN ((t1.c2)) AND ((t1.c89))))))AND(x'')))OR(((t1.c65) NOT NULL)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((t1.c2)AND(((t1.c65) NOTNULL))))OR((((NULL)) BETWEEN ((t1.c2)) AND ((t1.c89))))))AND(x'')))OR(((t1.c65) NOT NULL))));
SELECT COUNT(*) FROM t1 WHERE (CAST(t1.c64 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t1.c64 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(t1.c64 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t1.c64 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(t1.c64 AS TEXT) COLLATE BINARY);
SELECT * FROM t1 WHERE (((t1.c64 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c64 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c64 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c64 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c64 COLLATE NOCASE) ISNULL));
SELECT ALL COUNT(*) FROM t1 WHERE ((((NULL IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((NULL IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((NULL IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c65) ORDER BY ((x'')LIKE(t1.c2)) COLLATE NOCASE  NULLS FIRST, (((('1508769035')GLOB(t1.c89))) NOT BETWEEN ((((t1.c89))<=((t1.c64)))) AND (x'')) ASC;
SELECT SUM(count) FROM (SELECT ((t1.c65) IS TRUE)  as count FROM t1 ORDER BY ((x'')LIKE(t1.c2)) COLLATE NOCASE  NULLS FIRST, (((('1508769035')GLOB(t1.c89))) NOT BETWEEN ((((t1.c89))<=((t1.c64)))) AND (x'')) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c65) ORDER BY ((x'')LIKE(t1.c2)) COLLATE NOCASE  NULLS FIRST, (((('1508769035')GLOB(t1.c89))) NOT BETWEEN ((((t1.c89))<=((t1.c64)))) AND (x'')) ASC;
SELECT SUM(count) FROM (SELECT ((t1.c65) IS TRUE)  as count FROM t1 ORDER BY ((x'')LIKE(t1.c2)) COLLATE NOCASE  NULLS FIRST, (((('1508769035')GLOB(t1.c89))) NOT BETWEEN ((((t1.c89))<=((t1.c64)))) AND (x'')) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c65) ORDER BY ((x'')LIKE(t1.c2)) COLLATE NOCASE  NULLS FIRST, (((('1508769035')GLOB(t1.c89))) NOT BETWEEN ((((t1.c89))<=((t1.c64)))) AND (x'')) ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN (((t1.c65)) BETWEEN ((t1.c65)) AND ((t1.c65))) THEN ((((((((t1.c65)AND(t1.c2)))AND(t1.c89)))AND(t1.c65)))OR(t1.c89)) ELSE (+ (t1.c1)) END) ORDER BY t1.c89 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t1.c65)) BETWEEN ((t1.c65)) AND ((t1.c65))) THEN ((((((((t1.c65)AND(t1.c2)))AND(t1.c89)))AND(t1.c65)))OR(t1.c89)) ELSE (+ (t1.c1)) END) IS TRUE)  as count FROM t1 ORDER BY t1.c89 ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN (((t1.c65)) BETWEEN ((t1.c65)) AND ((t1.c65))) THEN ((((((((t1.c65)AND(t1.c2)))AND(t1.c89)))AND(t1.c65)))OR(t1.c89)) ELSE (+ (t1.c1)) END) ORDER BY t1.c89 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t1.c65)) BETWEEN ((t1.c65)) AND ((t1.c65))) THEN ((((((((t1.c65)AND(t1.c2)))AND(t1.c89)))AND(t1.c65)))OR(t1.c89)) ELSE (+ (t1.c1)) END) IS TRUE)  as count FROM t1 ORDER BY t1.c89 ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN (((t1.c65)) BETWEEN ((t1.c65)) AND ((t1.c65))) THEN ((((((((t1.c65)AND(t1.c2)))AND(t1.c89)))AND(t1.c65)))OR(t1.c89)) ELSE (+ (t1.c1)) END) ORDER BY t1.c89 ASC;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c89)) NOT BETWEEN (((((t1.c1, t1.c89, '-1265074002'))<=((t1.c64, t1.c1, 0.07662962813315599))))) AND ((CASE WHEN t1.c89 THEN t1.c89 WHEN t1.c2 THEN t1.c1 WHEN t1.c89 THEN '596554485' END)))) ORDER BY ((t1.c64)GLOB(((t1.c89) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c89)) NOT BETWEEN (((((t1.c1, t1.c89, '-1265074002'))<=((t1.c64, t1.c1, 0.07662962813315599))))) AND ((CASE WHEN t1.c89 THEN t1.c89 WHEN t1.c2 THEN t1.c1 WHEN t1.c89 THEN '596554485' END)))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c64)GLOB(((t1.c89) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c89)) NOT BETWEEN (((((t1.c1, t1.c89, '-1265074002'))<=((t1.c64, t1.c1, 0.07662962813315599))))) AND ((CASE WHEN t1.c89 THEN t1.c89 WHEN t1.c2 THEN t1.c1 WHEN t1.c89 THEN '596554485' END)))) ORDER BY ((t1.c64)GLOB(((t1.c89) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c89)) NOT BETWEEN (((((t1.c1, t1.c89, '-1265074002'))<=((t1.c64, t1.c1, 0.07662962813315599))))) AND ((CASE WHEN t1.c89 THEN t1.c89 WHEN t1.c2 THEN t1.c1 WHEN t1.c89 THEN '596554485' END)))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c64)GLOB(((t1.c89) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c89)) NOT BETWEEN (((((t1.c1, t1.c89, '-1265074002'))<=((t1.c64, t1.c1, 0.07662962813315599))))) AND ((CASE WHEN t1.c89 THEN t1.c89 WHEN t1.c2 THEN t1.c1 WHEN t1.c89 THEN '596554485' END)))) ORDER BY ((t1.c64)GLOB(((t1.c89) NOT NULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (NULL) ORDER BY ((((((((((t1.c1)%(t1.c65)))AND(((t1.c89) ISNULL))))AND(CAST(t1.c2 AS BLOB))))AND(((t1.c89) NOT NULL))))AND((- (t1.c1))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 ORDER BY ((((((((((t1.c1)%(t1.c65)))AND(((t1.c89) ISNULL))))AND(CAST(t1.c2 AS BLOB))))AND(((t1.c89) NOT NULL))))AND((- (t1.c1)))));
SELECT ALL COUNT(*) FROM t1 WHERE (NULL) ORDER BY ((((((((((t1.c1)%(t1.c65)))AND(((t1.c89) ISNULL))))AND(CAST(t1.c2 AS BLOB))))AND(((t1.c89) NOT NULL))))AND((- (t1.c1))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 ORDER BY ((((((((((t1.c1)%(t1.c65)))AND(((t1.c89) ISNULL))))AND(CAST(t1.c2 AS BLOB))))AND(((t1.c89) NOT NULL))))AND((- (t1.c1)))));
SELECT ALL COUNT(*) FROM t1 WHERE (NULL) ORDER BY ((((((((((t1.c1)%(t1.c65)))AND(((t1.c89) ISNULL))))AND(CAST(t1.c2 AS BLOB))))AND(((t1.c89) NOT NULL))))AND((- (t1.c1))));
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (NULL)) COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE (t1.c65) ORDER BY ('832397362' IN (t1.c89 COLLATE RTRIM))  NULLS LAST, CAST(((t1.c89) BETWEEN (t1.c64) AND (t1.c64)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c65) IS TRUE)  as count FROM t1 ORDER BY ('832397362' IN (t1.c89 COLLATE RTRIM))  NULLS LAST, CAST(((t1.c89) BETWEEN (t1.c64) AND (t1.c64)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (t1.c65) ORDER BY ('832397362' IN (t1.c89 COLLATE RTRIM))  NULLS LAST, CAST(((t1.c89) BETWEEN (t1.c64) AND (t1.c64)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c65) IS TRUE)  as count FROM t1 ORDER BY ('832397362' IN (t1.c89 COLLATE RTRIM))  NULLS LAST, CAST(((t1.c89) BETWEEN (t1.c64) AND (t1.c64)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (t1.c65) ORDER BY ('832397362' IN (t1.c89 COLLATE RTRIM))  NULLS LAST, CAST(((t1.c89) BETWEEN (t1.c64) AND (t1.c64)) AS BLOB) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (TIME(((t1.c64)OR(t1.c65)), ((t1.c64)GLOB(t1.c89)), ((((((((t1.c64)AND(t1.c1)))OR(t1.c2)))OR(t1.c1)))AND(t1.c64)))) ORDER BY (((t1.c65, t1.c64, t1.c1)) BETWEEN ((t1.c64, t1.c2, t1.c65)) AND ((t1.c2, t1.c2, t1.c2))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((TIME(((t1.c64)OR(t1.c65)), ((t1.c64)GLOB(t1.c89)), ((((((((t1.c64)AND(t1.c1)))OR(t1.c2)))OR(t1.c1)))AND(t1.c64)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c65, t1.c64, t1.c1)) BETWEEN ((t1.c64, t1.c2, t1.c65)) AND ((t1.c2, t1.c2, t1.c2))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 WHERE (TIME(((t1.c64)OR(t1.c65)), ((t1.c64)GLOB(t1.c89)), ((((((((t1.c64)AND(t1.c1)))OR(t1.c2)))OR(t1.c1)))AND(t1.c64)))) ORDER BY (((t1.c65, t1.c64, t1.c1)) BETWEEN ((t1.c64, t1.c2, t1.c65)) AND ((t1.c2, t1.c2, t1.c2))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((TIME(((t1.c64)OR(t1.c65)), ((t1.c64)GLOB(t1.c89)), ((((((((t1.c64)AND(t1.c1)))OR(t1.c2)))OR(t1.c1)))AND(t1.c64)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c65, t1.c64, t1.c1)) BETWEEN ((t1.c64, t1.c2, t1.c65)) AND ((t1.c2, t1.c2, t1.c2))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 WHERE (TIME(((t1.c64)OR(t1.c65)), ((t1.c64)GLOB(t1.c89)), ((((((((t1.c64)AND(t1.c1)))OR(t1.c2)))OR(t1.c1)))AND(t1.c64)))) ORDER BY (((t1.c65, t1.c64, t1.c1)) BETWEEN ((t1.c64, t1.c2, t1.c65)) AND ((t1.c2, t1.c2, t1.c2))) COLLATE NOCASE;
SELECT ALL * FROM t1 WHERE ((((NOT (t1.c89))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t1.c89))) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((NOT (t1.c89))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t1.c89))) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((NOT (t1.c89))) IS FALSE));
SELECT * FROM t1 WHERE (CAST((NOT (t1.c65)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t1.c65)) AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST((NOT (t1.c65)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t1.c65)) AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST((NOT (t1.c65)) AS NUMERIC));
SELECT * FROM t1 WHERE ((- (CAST(t1.c65 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((- (CAST(t1.c65 AS TEXT)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((- (CAST(t1.c65 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((- (CAST(t1.c65 AS TEXT)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((- (CAST(t1.c65 AS TEXT))));
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c2) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c2) ISNULL) AS REAL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c2) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c2) ISNULL) AS REAL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c2) ISNULL) AS REAL));
SELECT ALL * FROM t1 WHERE (t1.c64);
SELECT SUM(count) FROM (SELECT ((t1.c64) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT ALL * FROM t1 WHERE (t1.c64);
SELECT SUM(count) FROM (SELECT ((t1.c64) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT ALL * FROM t1 WHERE (t1.c64);
SELECT * FROM t1 WHERE ((((((t1.c2))>((t1.c89))))<=(t1.c89 COLLATE RTRIM))) ORDER BY (((NULL IN ())) ISNULL) ASC  NULLS FIRST, t1.c65  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t1.c2))>((t1.c89))))<=(t1.c89 COLLATE RTRIM))) IS TRUE)  as count FROM t1 ORDER BY (((NULL IN ())) ISNULL) ASC  NULLS FIRST, t1.c65  NULLS FIRST);
SELECT * FROM t1 WHERE ((((((t1.c2))>((t1.c89))))<=(t1.c89 COLLATE RTRIM))) ORDER BY (((NULL IN ())) ISNULL) ASC  NULLS FIRST, t1.c65  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t1.c2))>((t1.c89))))<=(t1.c89 COLLATE RTRIM))) IS TRUE)  as count FROM t1 ORDER BY (((NULL IN ())) ISNULL) ASC  NULLS FIRST, t1.c65  NULLS FIRST);
SELECT * FROM t1 WHERE ((((((t1.c2))>((t1.c89))))<=(t1.c89 COLLATE RTRIM))) ORDER BY (((NULL IN ())) ISNULL) ASC  NULLS FIRST, t1.c65  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((NOT ((('')OR(t1.c64)))));
SELECT SUM(count) FROM (SELECT (((NOT ((('')OR(t1.c64))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((NOT ((('')OR(t1.c64)))));
SELECT SUM(count) FROM (SELECT (((NOT ((('')OR(t1.c64))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((NOT ((('')OR(t1.c64)))));
SELECT ALL * FROM t1 WHERE ((((t1.c64)) NOT BETWEEN ((((((((((t1.c64)OR(t1.c65)))AND(t1.c64)))OR(t1.c64)))OR(t1.c64)))) AND ((CAST('' AS REAL))))) ORDER BY (((((((t1.c64)AND(t1.c2)))AND(t1.c64)), (- (t1.c1)), t1.c65 COLLATE NOCASE))<(((((t1.c89)) NOT BETWEEN ((t1.c65)) AND ((t1.c2))), CASE WHEN t1.c64 THEN t1.c2 END, ABS(x'c944')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c64)) NOT BETWEEN ((((((((((t1.c64)OR(t1.c65)))AND(t1.c64)))OR(t1.c64)))OR(t1.c64)))) AND ((CAST('' AS REAL))))) IS TRUE)  as count FROM t1 ORDER BY (((((((t1.c64)AND(t1.c2)))AND(t1.c64)), (- (t1.c1)), t1.c65 COLLATE NOCASE))<(((((t1.c89)) NOT BETWEEN ((t1.c65)) AND ((t1.c2))), CASE WHEN t1.c64 THEN t1.c2 END, ABS(x'c944')))) ASC);
SELECT ALL * FROM t1 WHERE ((((t1.c64)) NOT BETWEEN ((((((((((t1.c64)OR(t1.c65)))AND(t1.c64)))OR(t1.c64)))OR(t1.c64)))) AND ((CAST('' AS REAL))))) ORDER BY (((((((t1.c64)AND(t1.c2)))AND(t1.c64)), (- (t1.c1)), t1.c65 COLLATE NOCASE))<(((((t1.c89)) NOT BETWEEN ((t1.c65)) AND ((t1.c2))), CASE WHEN t1.c64 THEN t1.c2 END, ABS(x'c944')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c64)) NOT BETWEEN ((((((((((t1.c64)OR(t1.c65)))AND(t1.c64)))OR(t1.c64)))OR(t1.c64)))) AND ((CAST('' AS REAL))))) IS TRUE)  as count FROM t1 ORDER BY (((((((t1.c64)AND(t1.c2)))AND(t1.c64)), (- (t1.c1)), t1.c65 COLLATE NOCASE))<(((((t1.c89)) NOT BETWEEN ((t1.c65)) AND ((t1.c2))), CASE WHEN t1.c64 THEN t1.c2 END, ABS(x'c944')))) ASC);
SELECT ALL * FROM t1 WHERE ((((t1.c64)) NOT BETWEEN ((((((((((t1.c64)OR(t1.c65)))AND(t1.c64)))OR(t1.c64)))OR(t1.c64)))) AND ((CAST('' AS REAL))))) ORDER BY (((((((t1.c64)AND(t1.c2)))AND(t1.c64)), (- (t1.c1)), t1.c65 COLLATE NOCASE))<(((((t1.c89)) NOT BETWEEN ((t1.c65)) AND ((t1.c2))), CASE WHEN t1.c64 THEN t1.c2 END, ABS(x'c944')))) ASC;
SELECT * FROM t1 WHERE ((+ (((t1.c1)=(t1.c1))))) ORDER BY CASE ('-45385713' IN ())  WHEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c64))) THEN x'' WHEN t1.c65 COLLATE NOCASE THEN ((t1.c64)IS NOT(t1.c89)) WHEN ((t1.c2) NOT BETWEEN (x'') AND (t1.c65)) THEN (t1.c1 IN (t1.c89)) ELSE json_patch(t1.c89, t1.c2) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t1.c1)==(t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY CASE ('-45385713' IN ())  WHEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c64))) THEN x'' WHEN t1.c65 COLLATE NOCASE THEN ((t1.c64)IS NOT(t1.c89)) WHEN ((t1.c2) NOT BETWEEN (x'') AND (t1.c65)) THEN (t1.c1 IN (t1.c89)) ELSE json_patch(t1.c89, t1.c2) END DESC);
SELECT * FROM t1 WHERE ((+ (((t1.c1)=(t1.c1))))) ORDER BY CASE ('-45385713' IN ())  WHEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c64))) THEN x'' WHEN t1.c65 COLLATE NOCASE THEN ((t1.c64)IS NOT(t1.c89)) WHEN ((t1.c2) NOT BETWEEN (x'') AND (t1.c65)) THEN (t1.c1 IN (t1.c89)) ELSE json_patch(t1.c89, t1.c2) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t1.c1)==(t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY CASE ('-45385713' IN ())  WHEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c64))) THEN x'' WHEN t1.c65 COLLATE NOCASE THEN ((t1.c64)IS NOT(t1.c89)) WHEN ((t1.c2) NOT BETWEEN (x'') AND (t1.c65)) THEN (t1.c1 IN (t1.c89)) ELSE json_patch(t1.c89, t1.c2) END DESC);
SELECT * FROM t1 WHERE ((+ (((t1.c1)=(t1.c1))))) ORDER BY CASE ('-45385713' IN ())  WHEN (((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c64))) THEN x'' WHEN t1.c65 COLLATE NOCASE THEN ((t1.c64)IS NOT(t1.c89)) WHEN ((t1.c2) NOT BETWEEN (x'') AND (t1.c65)) THEN (t1.c1 IN (t1.c89)) ELSE json_patch(t1.c89, t1.c2) END DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c65)||(t1.c2))) NOTNULL)) ORDER BY (((((((((((((+ (t1.c1)))AND(((((t1.c65)AND(t1.c89)))OR(t1.c2)))))AND(t1.c1)))AND(t1.c65)))OR(((((((((((((t1.c2)OR(t1.c89)))OR(t1.c1)))OR(t1.c64)))OR(t1.c65)))OR(t1.c89)))OR(t1.c2)))))AND(x'')))AND((t1.c1 IN (t1.c64))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c65)||(t1.c2))) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY (((((((((((((+ (t1.c1)))AND(((((t1.c65)AND(t1.c89)))OR(t1.c2)))))AND(t1.c1)))AND(t1.c65)))OR(((((((((((((t1.c2)OR(t1.c89)))OR(t1.c1)))OR(t1.c64)))OR(t1.c65)))OR(t1.c89)))OR(t1.c2)))))AND(x'')))AND((t1.c1 IN (t1.c64))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c65)||(t1.c2))) NOTNULL)) ORDER BY (((((((((((((+ (t1.c1)))AND(((((t1.c65)AND(t1.c89)))OR(t1.c2)))))AND(t1.c1)))AND(t1.c65)))OR(((((((((((((t1.c2)OR(t1.c89)))OR(t1.c1)))OR(t1.c64)))OR(t1.c65)))OR(t1.c89)))OR(t1.c2)))))AND(x'')))AND((t1.c1 IN (t1.c64))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c65)||(t1.c2))) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY (((((((((((((+ (t1.c1)))AND(((((t1.c65)AND(t1.c89)))OR(t1.c2)))))AND(t1.c1)))AND(t1.c65)))OR(((((((((((((t1.c2)OR(t1.c89)))OR(t1.c1)))OR(t1.c64)))OR(t1.c65)))OR(t1.c89)))OR(t1.c2)))))AND(x'')))AND((t1.c1 IN (t1.c64))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c65)||(t1.c2))) NOTNULL)) ORDER BY (((((((((((((+ (t1.c1)))AND(((((t1.c65)AND(t1.c89)))OR(t1.c2)))))AND(t1.c1)))AND(t1.c65)))OR(((((((((((((t1.c2)OR(t1.c89)))OR(t1.c1)))OR(t1.c64)))OR(t1.c65)))OR(t1.c89)))OR(t1.c2)))))AND(x'')))AND((t1.c1 IN (t1.c64))))  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c89) ORDER BY '鱓z\z걿6ec'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c89) IS TRUE)  as count FROM t1 ORDER BY '鱓z\z걿6ec'  NULLS FIRST);
SELECT * FROM t1 WHERE (t1.c89) ORDER BY '鱓z\z걿6ec'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c89) IS TRUE)  as count FROM t1 ORDER BY '鱓z\z걿6ec'  NULLS FIRST);
SELECT * FROM t1 WHERE (t1.c89) ORDER BY '鱓z\z걿6ec'  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (0.15303605459836656)));
SELECT SUM(count) FROM (SELECT (((~ (0.15303605459836656))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (0.15303605459836656)));
SELECT SUM(count) FROM (SELECT (((~ (0.15303605459836656))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (0.15303605459836656)));
SELECT ALL * FROM t1 WHERE ((((t1.c65) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c65) IS FALSE) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c65) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c65) IS FALSE) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c65) IS FALSE) IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c1 COLLATE RTRIM))<>((CASE t1.c2  WHEN t1.c64 THEN t1.c89 ELSE t1.c2 END)))) ORDER BY (((((- (t1.c89)))OR(MIN(t1.c65, t1.c89, t1.c64, t1.c1))))OR(COALESCE(t1.c1, t1.c64))) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c1 COLLATE RTRIM))!=((CASE t1.c2  WHEN t1.c64 THEN t1.c89 ELSE t1.c2 END)))) IS TRUE)  as count FROM t1 ORDER BY (((((- (t1.c89)))OR(MIN(t1.c65, t1.c89, t1.c64, t1.c1))))OR(COALESCE(t1.c1, t1.c64))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c1 COLLATE RTRIM))<>((CASE t1.c2  WHEN t1.c64 THEN t1.c89 ELSE t1.c2 END)))) ORDER BY (((((- (t1.c89)))OR(MIN(t1.c65, t1.c89, t1.c64, t1.c1))))OR(COALESCE(t1.c1, t1.c64))) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c1 COLLATE RTRIM))!=((CASE t1.c2  WHEN t1.c64 THEN t1.c89 ELSE t1.c2 END)))) IS TRUE)  as count FROM t1 ORDER BY (((((- (t1.c89)))OR(MIN(t1.c65, t1.c89, t1.c64, t1.c1))))OR(COALESCE(t1.c1, t1.c64))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c1 COLLATE RTRIM))<>((CASE t1.c2  WHEN t1.c64 THEN t1.c89 ELSE t1.c2 END)))) ORDER BY (((((- (t1.c89)))OR(MIN(t1.c65, t1.c89, t1.c64, t1.c1))))OR(COALESCE(t1.c1, t1.c64))) ASC;
SELECT * FROM t1 WHERE (((((t1.c65) BETWEEN (t1.c89) AND (t1.c2))) IS FALSE)) ORDER BY ((((((((0.8616089286792025)OR(t1.c65)))OR('')))AND(((t1.c65)%(t1.c89)))))AND(t1.c64 COLLATE RTRIM)), (((t1.c64 IN (t1.c89, t1.c64)))!=(t1.c64)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c65) BETWEEN (t1.c89) AND (t1.c2))) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY ((((((((0.8616089286792025)OR(t1.c65)))OR('')))AND(((t1.c65)%(t1.c89)))))AND(t1.c64 COLLATE RTRIM)), (((t1.c64 IN (t1.c89, t1.c64)))!=(t1.c64)) DESC);
SELECT * FROM t1 WHERE (((((t1.c65) BETWEEN (t1.c89) AND (t1.c2))) IS FALSE)) ORDER BY ((((((((0.8616089286792025)OR(t1.c65)))OR('')))AND(((t1.c65)%(t1.c89)))))AND(t1.c64 COLLATE RTRIM)), (((t1.c64 IN (t1.c89, t1.c64)))!=(t1.c64)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c65) BETWEEN (t1.c89) AND (t1.c2))) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY ((((((((0.8616089286792025)OR(t1.c65)))OR('')))AND(((t1.c65)%(t1.c89)))))AND(t1.c64 COLLATE RTRIM)), (((t1.c64 IN (t1.c89, t1.c64)))!=(t1.c64)) DESC);
SELECT * FROM t1 WHERE (((((t1.c65) BETWEEN (t1.c89) AND (t1.c2))) IS FALSE)) ORDER BY ((((((((0.8616089286792025)OR(t1.c65)))OR('')))AND(((t1.c65)%(t1.c89)))))AND(t1.c64 COLLATE RTRIM)), (((t1.c64 IN (t1.c89, t1.c64)))!=(t1.c64)) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2) ORDER BY (((t1.c1, t1.c2, t1.c1, t1.c65, t1.c89)) BETWEEN ((UPPER(t1.c65), (t1.c65 IN ()), (t1.c2 IN ()), t1.c65, (t1.c89 IN ()))) AND ((CASE t1.c89  WHEN t1.c89 THEN t1.c1 END, (+ (NULL)), (('<*') IS TRUE), CAST(t1.c64 AS BLOB), ((t1.c64)IS NOT(t1.c89)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1, t1.c2, t1.c1, t1.c65, t1.c89)) BETWEEN ((UPPER(t1.c65), (t1.c65 IN ()), (t1.c2 IN ()), t1.c65, (t1.c89 IN ()))) AND ((CASE t1.c89  WHEN t1.c89 THEN t1.c1 END, (+ (NULL)), (('<*') IS TRUE), CAST(t1.c64 AS BLOB), ((t1.c64)IS NOT(t1.c89)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2) ORDER BY (((t1.c1, t1.c2, t1.c1, t1.c65, t1.c89)) BETWEEN ((UPPER(t1.c65), (t1.c65 IN ()), (t1.c2 IN ()), t1.c65, (t1.c89 IN ()))) AND ((CASE t1.c89  WHEN t1.c89 THEN t1.c1 END, (+ (NULL)), (('<*') IS TRUE), CAST(t1.c64 AS BLOB), ((t1.c64)IS NOT(t1.c89)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1, t1.c2, t1.c1, t1.c65, t1.c89)) BETWEEN ((UPPER(t1.c65), (t1.c65 IN ()), (t1.c2 IN ()), t1.c65, (t1.c89 IN ()))) AND ((CASE t1.c89  WHEN t1.c89 THEN t1.c1 END, (+ (NULL)), (('<*') IS TRUE), CAST(t1.c64 AS BLOB), ((t1.c64)IS NOT(t1.c89)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2) ORDER BY (((t1.c1, t1.c2, t1.c1, t1.c65, t1.c89)) BETWEEN ((UPPER(t1.c65), (t1.c65 IN ()), (t1.c2 IN ()), t1.c65, (t1.c89 IN ()))) AND ((CASE t1.c89  WHEN t1.c89 THEN t1.c1 END, (+ (NULL)), (('<*') IS TRUE), CAST(t1.c64 AS BLOB), ((t1.c64)IS NOT(t1.c89)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (SQLITE_VERSION());
SELECT * FROM t1 WHERE ((((t1.c1, t1.c65, t1.c89)) NOT BETWEEN ((ABS(t1.c2), t1.c2, (((t1.c2, t1.c64, t1.c89))>=((t1.c1, t1.c89, t1.c89))))) AND ((CASE t1.c2  WHEN t1.c2 THEN t1.c89 END, t1.c89, t1.c64 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((t1.c1, t1.c65, t1.c89)) NOT BETWEEN ((ABS(t1.c2), t1.c2, (((t1.c2, t1.c64, t1.c89))>=((t1.c1, t1.c89, t1.c89))))) AND ((CASE t1.c2  WHEN t1.c2 THEN t1.c89 END, t1.c89, t1.c64 COLLATE BINARY)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c1, t1.c65, t1.c89)) NOT BETWEEN ((ABS(t1.c2), t1.c2, (((t1.c2, t1.c64, t1.c89))>=((t1.c1, t1.c89, t1.c89))))) AND ((CASE t1.c2  WHEN t1.c2 THEN t1.c89 END, t1.c89, t1.c64 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((t1.c1, t1.c65, t1.c89)) NOT BETWEEN ((ABS(t1.c2), t1.c2, (((t1.c2, t1.c64, t1.c89))>=((t1.c1, t1.c89, t1.c89))))) AND ((CASE t1.c2  WHEN t1.c2 THEN t1.c89 END, t1.c89, t1.c64 COLLATE BINARY)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c1, t1.c65, t1.c89)) NOT BETWEEN ((ABS(t1.c2), t1.c2, (((t1.c2, t1.c64, t1.c89))>=((t1.c1, t1.c89, t1.c89))))) AND ((CASE t1.c2  WHEN t1.c2 THEN t1.c89 END, t1.c89, t1.c64 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c2)AND(t1.c2)))AND(t1.c1)))<>((- (t1.c2))))) ORDER BY (((CASE t1.c1  WHEN t1.c1 THEN t1.c64 END))<((((t1.c64) ISNULL)))) DESC, (- ((((t1.c2)) BETWEEN ((t1.c89)) AND ((t1.c89))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c2)AND(t1.c2)))AND(t1.c1)))<>((- (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((CASE t1.c1  WHEN t1.c1 THEN t1.c64 END))<((((t1.c64) ISNULL)))) DESC, (- ((((t1.c2)) BETWEEN ((t1.c89)) AND ((t1.c89))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c2)AND(t1.c2)))AND(t1.c1)))<>((- (t1.c2))))) ORDER BY (((CASE t1.c1  WHEN t1.c1 THEN t1.c64 END))<((((t1.c64) ISNULL)))) DESC, (- ((((t1.c2)) BETWEEN ((t1.c89)) AND ((t1.c89))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c2)AND(t1.c2)))AND(t1.c1)))<>((- (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((CASE t1.c1  WHEN t1.c1 THEN t1.c64 END))<((((t1.c64) ISNULL)))) DESC, (- ((((t1.c2)) BETWEEN ((t1.c89)) AND ((t1.c89))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c2)AND(t1.c2)))AND(t1.c1)))<>((- (t1.c2))))) ORDER BY (((CASE t1.c1  WHEN t1.c1 THEN t1.c64 END))<((((t1.c64) ISNULL)))) DESC, (- ((((t1.c2)) BETWEEN ((t1.c89)) AND ((t1.c89))))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c1 COLLATE BINARY)OR(t1.c2)))AND(t1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1 COLLATE BINARY)OR(t1.c2)))AND(t1.c2))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c1 COLLATE BINARY)OR(t1.c2)))AND(t1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1 COLLATE BINARY)OR(t1.c2)))AND(t1.c2))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c1 COLLATE BINARY)OR(t1.c2)))AND(t1.c2)));
SELECT * FROM t1 WHERE (CASE WHEN ((t1.c2)GLOB(t1.c89)) THEN ((t1.c64) ISNULL) ELSE (((t1.c2))<>((t1.c1))) END) ORDER BY ((json_extract(t1.c1, '-1556942765'))OR(t1.c64)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c2)GLOB(t1.c89)) THEN ((t1.c64) ISNULL) ELSE (((t1.c2))!=((t1.c1))) END) IS TRUE)  as count FROM t1 ORDER BY ((json_extract(t1.c1, '-1556942765'))OR(t1.c64)) DESC);
SELECT * FROM t1 WHERE (CASE WHEN ((t1.c2)GLOB(t1.c89)) THEN ((t1.c64) ISNULL) ELSE (((t1.c2))<>((t1.c1))) END) ORDER BY ((json_extract(t1.c1, '-1556942765'))OR(t1.c64)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c2)GLOB(t1.c89)) THEN ((t1.c64) ISNULL) ELSE (((t1.c2))!=((t1.c1))) END) IS TRUE)  as count FROM t1 ORDER BY ((json_extract(t1.c1, '-1556942765'))OR(t1.c64)) DESC);
SELECT * FROM t1 WHERE (((t1.c64 COLLATE RTRIM) BETWEEN (CASE WHEN NULL THEN t1.c65 ELSE t1.c89 END) AND ((((t1.c89))<>(('af{xGh)7'))))));
SELECT SUM(count) FROM (SELECT ((((t1.c64 COLLATE RTRIM) BETWEEN (CASE WHEN NULL THEN t1.c65 ELSE t1.c89 END) AND ((((t1.c89))<>(('af{xGh)7')))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c64 COLLATE RTRIM) BETWEEN (CASE WHEN NULL THEN t1.c65 ELSE t1.c89 END) AND ((((t1.c89))<>(('af{xGh)7'))))));
SELECT SUM(count) FROM (SELECT ((((t1.c64 COLLATE RTRIM) BETWEEN (CASE WHEN NULL THEN t1.c65 ELSE t1.c89 END) AND ((((t1.c89))<>(('af{xGh)7')))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c64 COLLATE RTRIM) BETWEEN (CASE WHEN NULL THEN t1.c65 ELSE t1.c89 END) AND ((((t1.c89))<>(('af{xGh)7'))))));
SELECT * FROM t1 WHERE (((INSTR(t1.c64, t1.c1))<=((t1.c1 IN ())))) ORDER BY CASE WHEN ((t1.c1)IS(t1.c2)) THEN t1.c64 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((INSTR(t1.c64, t1.c1))<=((t1.c1 IN ())))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((t1.c1)IS(t1.c2)) THEN t1.c64 END DESC);
SELECT * FROM t1 WHERE (((INSTR(t1.c64, t1.c1))<=((t1.c1 IN ())))) ORDER BY CASE WHEN ((t1.c1)IS(t1.c2)) THEN t1.c64 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((INSTR(t1.c64, t1.c1))<=((t1.c1 IN ())))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((t1.c1)IS(t1.c2)) THEN t1.c64 END DESC);
SELECT * FROM t1 WHERE (((INSTR(t1.c64, t1.c1))<=((t1.c1 IN ())))) ORDER BY CASE WHEN ((t1.c1)IS(t1.c2)) THEN t1.c64 END DESC;
SELECT COUNT(*) FROM t1 WHERE (0.04126163981849318) ORDER BY (((((+ (t1.c89)))AND(t1.c89)))AND(((t1.c1) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.04126163981849318) IS TRUE)  as count FROM t1 ORDER BY (((((+ (t1.c89)))AND(t1.c89)))AND(((t1.c1) NOT NULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (0.04126163981849318) ORDER BY (((((+ (t1.c89)))AND(t1.c89)))AND(((t1.c1) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.04126163981849318) IS TRUE)  as count FROM t1 ORDER BY (((((+ (t1.c89)))AND(t1.c89)))AND(((t1.c1) NOT NULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (0.04126163981849318) ORDER BY (((((+ (t1.c89)))AND(t1.c89)))AND(((t1.c1) NOT NULL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((t1.c65)/(t1.c89)) COLLATE NOCASE) ORDER BY (((~ (t1.c1)))<>(CAST(t1.c65 AS TEXT))), (((((t1.c89 IN ()))OR(t1.c1)))AND(((((t1.c2)OR(t1.c1)))OR(t1.c89)))) DESC  NULLS LAST, ((((((t1.c64)OR(t1.c1)))AND(t1.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c65)/(t1.c89)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (((~ (t1.c1)))<>(CAST(t1.c65 AS TEXT))), (((((t1.c89 IN ()))OR(t1.c1)))AND(((((t1.c2)OR(t1.c1)))OR(t1.c89)))) DESC  NULLS LAST, ((((((t1.c64)OR(t1.c1)))AND(t1.c1))) NOT NULL));
SELECT COUNT(*) FROM t1 WHERE (((t1.c65)/(t1.c89)) COLLATE NOCASE) ORDER BY (((~ (t1.c1)))<>(CAST(t1.c65 AS TEXT))), (((((t1.c89 IN ()))OR(t1.c1)))AND(((((t1.c2)OR(t1.c1)))OR(t1.c89)))) DESC  NULLS LAST, ((((((t1.c64)OR(t1.c1)))AND(t1.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c65)/(t1.c89)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (((~ (t1.c1)))<>(CAST(t1.c65 AS TEXT))), (((((t1.c89 IN ()))OR(t1.c1)))AND(((((t1.c2)OR(t1.c1)))OR(t1.c89)))) DESC  NULLS LAST, ((((((t1.c64)OR(t1.c1)))AND(t1.c1))) NOT NULL));
SELECT COUNT(*) FROM t1 WHERE (((t1.c65)/(t1.c89)) COLLATE NOCASE) ORDER BY (((~ (t1.c1)))<>(CAST(t1.c65 AS TEXT))), (((((t1.c89 IN ()))OR(t1.c1)))AND(((((t1.c2)OR(t1.c1)))OR(t1.c89)))) DESC  NULLS LAST, ((((((t1.c64)OR(t1.c1)))AND(t1.c1))) NOT NULL);
SELECT ALL COUNT(*) FROM t1 WHERE ((('-2146601175') ISNULL));
SELECT SUM(count) FROM (SELECT (((('-2146601175') ISNULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((('-2146601175') ISNULL));
SELECT SUM(count) FROM (SELECT (((('-2146601175') ISNULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((('-2146601175') ISNULL));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c89)-(t1.c89)) IN (((t1.c64) IS TRUE), (((t1.c64, t1.c2, t1.c64)) NOT BETWEEN ((t1.c65, t1.c64, t1.c2)) AND ((t1.c2, '', -374719260))))));
SELECT SUM(count) FROM (SELECT (((((t1.c89)-(t1.c89)) IN (((t1.c64) IS TRUE), (((t1.c64, t1.c2, t1.c64)) NOT BETWEEN ((t1.c65, t1.c64, t1.c2)) AND ((t1.c2, '', -374719260)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c89)-(t1.c89)) IN (((t1.c64) IS TRUE), (((t1.c64, t1.c2, t1.c64)) NOT BETWEEN ((t1.c65, t1.c64, t1.c2)) AND ((t1.c2, '', -374719260))))));
SELECT SUM(count) FROM (SELECT (((((t1.c89)-(t1.c89)) IN (((t1.c64) IS TRUE), (((t1.c64, t1.c2, t1.c64)) NOT BETWEEN ((t1.c65, t1.c64, t1.c2)) AND ((t1.c2, '', -374719260)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c89)-(t1.c89)) IN (((t1.c64) IS TRUE), (((t1.c64, t1.c2, t1.c64)) NOT BETWEEN ((t1.c65, t1.c64, t1.c2)) AND ((t1.c2, '', -374719260))))));
SELECT * FROM t1 WHERE (((((t1.c89)AND(((t1.c64) BETWEEN (t1.c2) AND (NULL)))))OR(t1.c65)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c89)AND(((t1.c64) BETWEEN (t1.c2) AND (NULL)))))OR(t1.c65))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c89)AND(((t1.c64) BETWEEN (t1.c2) AND (NULL)))))OR(t1.c65)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c89)AND(((t1.c64) BETWEEN (t1.c2) AND (NULL)))))OR(t1.c65))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c89)AND(((t1.c64) BETWEEN (t1.c2) AND (NULL)))))OR(t1.c65)));
SELECT * FROM t1 WHERE ((t1.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((t1.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((t1.c2 COLLATE NOCASE IN ()));
SELECT ALL * FROM t1 WHERE (((((((((((((t1.c64)AND(t1.c65)))OR(t1.c2)))AND(t1.c89)))AND(t1.c64)))AND((+ (t1.c65)))))AND(((t1.c1) BETWEEN (t1.c89) AND (t1.c2))))) ORDER BY (((((t1.c89)<(t1.c2))))!=((LOWER(t1.c64)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t1.c64)AND(t1.c65)))OR(t1.c2)))AND(t1.c89)))AND(t1.c64)))AND((+ (t1.c65)))))AND(((t1.c1) BETWEEN (t1.c89) AND (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c89)<(t1.c2))))!=((LOWER(t1.c64)))) DESC);
SELECT ALL * FROM t1 WHERE (((((((((((((t1.c64)AND(t1.c65)))OR(t1.c2)))AND(t1.c89)))AND(t1.c64)))AND((+ (t1.c65)))))AND(((t1.c1) BETWEEN (t1.c89) AND (t1.c2))))) ORDER BY (((((t1.c89)<(t1.c2))))!=((LOWER(t1.c64)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t1.c64)AND(t1.c65)))OR(t1.c2)))AND(t1.c89)))AND(t1.c64)))AND((+ (t1.c65)))))AND(((t1.c1) BETWEEN (t1.c89) AND (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c89)<(t1.c2))))!=((LOWER(t1.c64)))) DESC);
SELECT ALL * FROM t1 WHERE (((((((((((((t1.c64)AND(t1.c65)))OR(t1.c2)))AND(t1.c89)))AND(t1.c64)))AND((+ (t1.c65)))))AND(((t1.c1) BETWEEN (t1.c89) AND (t1.c2))))) ORDER BY (((((t1.c89)<(t1.c2))))!=((LOWER(t1.c64)))) DESC;
SELECT * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN (((t1.c1 IN ()))) AND ((((t1.c65)<=(t1.c89))))));
SELECT SUM(count) FROM (SELECT (((((t1.c1)) NOT BETWEEN (((t1.c1 IN ()))) AND ((((t1.c65)<=(t1.c89)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN (((t1.c1 IN ()))) AND ((((t1.c65)<=(t1.c89))))));
SELECT SUM(count) FROM (SELECT (((((t1.c1)) NOT BETWEEN (((t1.c1 IN ()))) AND ((((t1.c65)<=(t1.c89)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN (((t1.c1 IN ()))) AND ((((t1.c65)<=(t1.c89))))));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((((0.4375066060929934))>((t1.c89))) AS BLOB)) ORDER BY ((t1.c89) NOT BETWEEN (HEX(t1.c1)) AND (HEX(t1.c65))) DESC  NULLS FIRST, t1.c1 DESC, (((~ (t1.c89)))+(CAST(t1.c1 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.4375066060929934))>((t1.c89))) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c89) NOT BETWEEN (HEX(t1.c1)) AND (HEX(t1.c65))) DESC  NULLS FIRST, t1.c1 DESC, (((~ (t1.c89)))+(CAST(t1.c1 AS TEXT))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((((0.4375066060929934))>((t1.c89))) AS BLOB)) ORDER BY ((t1.c89) NOT BETWEEN (HEX(t1.c1)) AND (HEX(t1.c65))) DESC  NULLS FIRST, t1.c1 DESC, (((~ (t1.c89)))+(CAST(t1.c1 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.4375066060929934))>((t1.c89))) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c89) NOT BETWEEN (HEX(t1.c1)) AND (HEX(t1.c65))) DESC  NULLS FIRST, t1.c1 DESC, (((~ (t1.c89)))+(CAST(t1.c1 AS TEXT))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((((0.4375066060929934))>((t1.c89))) AS BLOB)) ORDER BY ((t1.c89) NOT BETWEEN (HEX(t1.c1)) AND (HEX(t1.c65))) DESC  NULLS FIRST, t1.c1 DESC, (((~ (t1.c89)))+(CAST(t1.c1 AS TEXT))) ASC;
SELECT * FROM t1 WHERE (CASE WHEN ((((((((t1.c2)AND(t1.c65)))OR(t1.c89)))AND(t1.c2)))AND(t1.c89)) THEN t1.c89 WHEN ((t1.c1) ISNULL) THEN ((0.8261078169101426)AND(t1.c65)) WHEN 's᯾~Stt[L)' THEN ((((t1.c64)AND(t1.c89)))OR(t1.c89)) END) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((t1.c2)AND(t1.c65)))OR(t1.c89)))AND(t1.c2)))AND(t1.c89)) THEN t1.c89 WHEN ((t1.c1) ISNULL) THEN ((0.8261078169101426)AND(t1.c65)) WHEN 's᯾~Stt[L)' THEN ((((t1.c64)AND(t1.c89)))OR(t1.c89)) END) IS TRUE)  as count FROM t1 ORDER BY NULL  NULLS FIRST);
SELECT * FROM t1 WHERE (CASE WHEN ((((((((t1.c2)AND(t1.c65)))OR(t1.c89)))AND(t1.c2)))AND(t1.c89)) THEN t1.c89 WHEN ((t1.c1) ISNULL) THEN ((0.8261078169101426)AND(t1.c65)) WHEN 's᯾~Stt[L)' THEN ((((t1.c64)AND(t1.c89)))OR(t1.c89)) END) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((t1.c2)AND(t1.c65)))OR(t1.c89)))AND(t1.c2)))AND(t1.c89)) THEN t1.c89 WHEN ((t1.c1) ISNULL) THEN ((0.8261078169101426)AND(t1.c65)) WHEN 's᯾~Stt[L)' THEN ((((t1.c64)AND(t1.c89)))OR(t1.c89)) END) IS TRUE)  as count FROM t1 ORDER BY NULL  NULLS FIRST);
SELECT * FROM t1 WHERE (CASE WHEN ((((((((t1.c2)AND(t1.c65)))OR(t1.c89)))AND(t1.c2)))AND(t1.c89)) THEN t1.c89 WHEN ((t1.c1) ISNULL) THEN ((0.8261078169101426)AND(t1.c65)) WHEN 's᯾~Stt[L)' THEN ((((t1.c64)AND(t1.c89)))OR(t1.c89)) END) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((((((((('')AND(t1.c1)))AND(t1.c65)))OR(t1.c64)))AND(t1.c2))) NOT BETWEEN (LIKELY(t1.c2)) AND (((t1.c64)IS(0Xffffffffcaff6332)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('')AND(t1.c1)))AND(t1.c65)))OR(t1.c64)))AND(t1.c2))) NOT BETWEEN (LIKELY(t1.c2)) AND (((t1.c64)IS(0Xffffffffcaff6332))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((((((('')AND(t1.c1)))AND(t1.c65)))OR(t1.c64)))AND(t1.c2))) NOT BETWEEN (LIKELY(t1.c2)) AND (((t1.c64)IS(0Xffffffffcaff6332)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('')AND(t1.c1)))AND(t1.c65)))OR(t1.c64)))AND(t1.c2))) NOT BETWEEN (LIKELY(t1.c2)) AND (((t1.c64)IS(0Xffffffffcaff6332))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((((((('')AND(t1.c1)))AND(t1.c65)))OR(t1.c64)))AND(t1.c2))) NOT BETWEEN (LIKELY(t1.c2)) AND (((t1.c64)IS(0Xffffffffcaff6332)))));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN 0X196ce75 COLLATE BINARY THEN CASE WHEN t1.c89 THEN t1.c89 WHEN t1.c65 THEN t1.c89 WHEN 0X5970192f THEN t1.c65 END END) ORDER BY ((t1.c64 COLLATE NOCASE) NOT NULL), (t1.c64 IN (((t1.c89) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0x196ce75 COLLATE BINARY THEN CASE WHEN t1.c89 THEN t1.c89 WHEN t1.c65 THEN t1.c89 WHEN 0x5970192f THEN t1.c65 END END) IS TRUE)  as count FROM t1 ORDER BY ((t1.c64 COLLATE NOCASE) NOT NULL), (t1.c64 IN (((t1.c89) NOTNULL))));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN 0X196ce75 COLLATE BINARY THEN CASE WHEN t1.c89 THEN t1.c89 WHEN t1.c65 THEN t1.c89 WHEN 0X5970192f THEN t1.c65 END END) ORDER BY ((t1.c64 COLLATE NOCASE) NOT NULL), (t1.c64 IN (((t1.c89) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0x196ce75 COLLATE BINARY THEN CASE WHEN t1.c89 THEN t1.c89 WHEN t1.c65 THEN t1.c89 WHEN 0x5970192f THEN t1.c65 END END) IS TRUE)  as count FROM t1 ORDER BY ((t1.c64 COLLATE NOCASE) NOT NULL), (t1.c64 IN (((t1.c89) NOTNULL))));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN 0X196ce75 COLLATE BINARY THEN CASE WHEN t1.c89 THEN t1.c89 WHEN t1.c65 THEN t1.c89 WHEN 0X5970192f THEN t1.c65 END END) ORDER BY ((t1.c64 COLLATE NOCASE) NOT NULL), (t1.c64 IN (((t1.c89) NOTNULL)));
SELECT ALL * FROM t1 WHERE (((t1.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c1) NOTNULL));
SELECT * FROM t1 WHERE ((((t1.c89 IN ())) BETWEEN ((- (t1.c1))) AND ((- (t1.c89))))) ORDER BY json_array_length(((((t1.c89)AND(t1.c65)))OR(NULL))) DESC  NULLS FIRST, CAST(((t1.c2)+(t1.c2)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c89 IN ())) BETWEEN ((- (t1.c1))) AND ((- (t1.c89))))) IS TRUE)  as count FROM t1 ORDER BY json_array_length(((((t1.c89)AND(t1.c65)))OR(NULL))) DESC  NULLS FIRST, CAST(((t1.c2)+(t1.c2)) AS NUMERIC)  NULLS LAST);
SELECT * FROM t1 WHERE ((((t1.c89 IN ())) BETWEEN ((- (t1.c1))) AND ((- (t1.c89))))) ORDER BY json_array_length(((((t1.c89)AND(t1.c65)))OR(NULL))) DESC  NULLS FIRST, CAST(((t1.c2)+(t1.c2)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c89 IN ())) BETWEEN ((- (t1.c1))) AND ((- (t1.c89))))) IS TRUE)  as count FROM t1 ORDER BY json_array_length(((((t1.c89)AND(t1.c65)))OR(NULL))) DESC  NULLS FIRST, CAST(((t1.c2)+(t1.c2)) AS NUMERIC)  NULLS LAST);
SELECT * FROM t1 WHERE ((((t1.c89 IN ())) BETWEEN ((- (t1.c1))) AND ((- (t1.c89))))) ORDER BY json_array_length(((((t1.c89)AND(t1.c65)))OR(NULL))) DESC  NULLS FIRST, CAST(((t1.c2)+(t1.c2)) AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM t1 WHERE (LIKE(CAST(t1.c1 AS REAL), (x'379f' IN ()))) ORDER BY (((t1.c2 COLLATE BINARY))<=((t1.c89))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE(CAST(t1.c1 AS REAL), (x'379f' IN ()))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c2 COLLATE BINARY))<=((t1.c89))) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (LIKE(CAST(t1.c1 AS REAL), (x'379f' IN ()))) ORDER BY (((t1.c2 COLLATE BINARY))<=((t1.c89))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE(CAST(t1.c1 AS REAL), (x'379f' IN ()))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c2 COLLATE BINARY))<=((t1.c89))) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (LIKE(CAST(t1.c1 AS REAL), (x'379f' IN ()))) ORDER BY (((t1.c2 COLLATE BINARY))<=((t1.c89))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE ((((((t1.c64)LIKE(t1.c1))))!=((CASE WHEN t1.c1 THEN t1.c89 ELSE x'e063' END)))) ORDER BY (~ ((t1.c2 IN ('-1878981941')))), (((((NULL)IS NOT(t1.c64))))==((CAST(t1.c64 AS NUMERIC)))) DESC  NULLS FIRST, (((t1.c1, t1.c65, -9.37992704E8)) NOT BETWEEN ((NULL, t1.c2 COLLATE RTRIM, (NOT (t1.c64)))) AND ((CAST(t1.c1 AS REAL), ((t1.c64)LIKE(t1.c2)), x'')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c64)LIKE(t1.c1))))<>((CASE WHEN t1.c1 THEN t1.c89 ELSE x'e063' END)))) IS TRUE)  as count FROM t1 ORDER BY (~ ((t1.c2 IN ('-1878981941')))), (((((NULL)IS NOT(t1.c64))))==((CAST(t1.c64 AS NUMERIC)))) DESC  NULLS FIRST, (((t1.c1, t1.c65, -9.37992704E8)) NOT BETWEEN ((NULL, t1.c2 COLLATE RTRIM, (NOT (t1.c64)))) AND ((CAST(t1.c1 AS REAL), ((t1.c64)LIKE(t1.c2)), x'')))  NULLS FIRST);
SELECT * FROM t1 WHERE ((((((t1.c64)LIKE(t1.c1))))!=((CASE WHEN t1.c1 THEN t1.c89 ELSE x'e063' END)))) ORDER BY (~ ((t1.c2 IN ('-1878981941')))), (((((NULL)IS NOT(t1.c64))))==((CAST(t1.c64 AS NUMERIC)))) DESC  NULLS FIRST, (((t1.c1, t1.c65, -9.37992704E8)) NOT BETWEEN ((NULL, t1.c2 COLLATE RTRIM, (NOT (t1.c64)))) AND ((CAST(t1.c1 AS REAL), ((t1.c64)LIKE(t1.c2)), x'')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c64)LIKE(t1.c1))))<>((CASE WHEN t1.c1 THEN t1.c89 ELSE x'e063' END)))) IS TRUE)  as count FROM t1 ORDER BY (~ ((t1.c2 IN ('-1878981941')))), (((((NULL)IS NOT(t1.c64))))==((CAST(t1.c64 AS NUMERIC)))) DESC  NULLS FIRST, (((t1.c1, t1.c65, -9.37992704E8)) NOT BETWEEN ((NULL, t1.c2 COLLATE RTRIM, (NOT (t1.c64)))) AND ((CAST(t1.c1 AS REAL), ((t1.c64)LIKE(t1.c2)), x'')))  NULLS FIRST);
SELECT * FROM t1 WHERE ((((((t1.c64)LIKE(t1.c1))))!=((CASE WHEN t1.c1 THEN t1.c89 ELSE x'e063' END)))) ORDER BY (~ ((t1.c2 IN ('-1878981941')))), (((((NULL)IS NOT(t1.c64))))==((CAST(t1.c64 AS NUMERIC)))) DESC  NULLS FIRST, (((t1.c1, t1.c65, -9.37992704E8)) NOT BETWEEN ((NULL, t1.c2 COLLATE RTRIM, (NOT (t1.c64)))) AND ((CAST(t1.c1 AS REAL), ((t1.c64)LIKE(t1.c2)), x'')))  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((LIKELIHOOD(t1.c89, 0.16102527824334112)) NOT BETWEEN (-1.613309082E9) AND (((t1.c89)<>('a''H7n'))))) ORDER BY ((t1.c2)||(t1.c65)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(t1.c89, 0.16102527824334112)) NOT BETWEEN (-1.613309082E9) AND (((t1.c89)<>('a''H7n'))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c2)||(t1.c65)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM t1 WHERE (((LIKELIHOOD(t1.c89, 0.16102527824334112)) NOT BETWEEN (-1.613309082E9) AND (((t1.c89)<>('a''H7n'))))) ORDER BY ((t1.c2)||(t1.c65)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(t1.c89, 0.16102527824334112)) NOT BETWEEN (-1.613309082E9) AND (((t1.c89)<>('a''H7n'))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c2)||(t1.c65)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM t1 WHERE (((LIKELIHOOD(t1.c89, 0.16102527824334112)) NOT BETWEEN (-1.613309082E9) AND (((t1.c89)<>('a''H7n'))))) ORDER BY ((t1.c2)||(t1.c65)) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c89) BETWEEN (t1.c1) AND (''))) NOT BETWEEN ((((t1.c2))>((t1.c1)))) AND (((t1.c89) IS FALSE)))) ORDER BY TRIM(DISTINCT CASE WHEN t1.c89 THEN t1.c89 END, (t1.c1 IN ()))  NULLS FIRST, (((- (t1.c1))) BETWEEN (0.756102980761799) AND ((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c65))))), t1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c89) BETWEEN (t1.c1) AND (''))) NOT BETWEEN ((((t1.c2))>((t1.c1)))) AND (((t1.c89) IS FALSE)))) IS TRUE)  as count FROM t1 ORDER BY TRIM(DISTINCT CASE WHEN t1.c89 THEN t1.c89 END, (t1.c1 IN ()))  NULLS FIRST, (((- (t1.c1))) BETWEEN (0.756102980761799) AND ((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c65))))), t1.c2 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c89) BETWEEN (t1.c1) AND (''))) NOT BETWEEN ((((t1.c2))>((t1.c1)))) AND (((t1.c89) IS FALSE)))) ORDER BY TRIM(DISTINCT CASE WHEN t1.c89 THEN t1.c89 END, (t1.c1 IN ()))  NULLS FIRST, (((- (t1.c1))) BETWEEN (0.756102980761799) AND ((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c65))))), t1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c89) BETWEEN (t1.c1) AND (''))) NOT BETWEEN ((((t1.c2))>((t1.c1)))) AND (((t1.c89) IS FALSE)))) IS TRUE)  as count FROM t1 ORDER BY TRIM(DISTINCT CASE WHEN t1.c89 THEN t1.c89 END, (t1.c1 IN ()))  NULLS FIRST, (((- (t1.c1))) BETWEEN (0.756102980761799) AND ((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c65))))), t1.c2 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c89) BETWEEN (t1.c1) AND (''))) NOT BETWEEN ((((t1.c2))>((t1.c1)))) AND (((t1.c89) IS FALSE)))) ORDER BY TRIM(DISTINCT CASE WHEN t1.c89 THEN t1.c89 END, (t1.c1 IN ()))  NULLS FIRST, (((- (t1.c1))) BETWEEN (0.756102980761799) AND ((((t1.c89)) NOT BETWEEN ((t1.c1)) AND ((t1.c65))))), t1.c2 DESC  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c1);
SELECT * FROM t1 WHERE (0.257893016661194);
SELECT SUM(count) FROM (SELECT ((0.257893016661194) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (0.257893016661194);
SELECT SUM(count) FROM (SELECT ((0.257893016661194) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (0.257893016661194);
SELECT COUNT(*) FROM t1 WHERE (ABS(DISTINCT ((t1.c65)*(t1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((t1.c65)*(t1.c1)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (ABS(DISTINCT ((t1.c65)*(t1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((t1.c65)*(t1.c1)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (ABS(DISTINCT ((t1.c65)*(t1.c1))));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c65) NOT BETWEEN (t1.c2) AND (NULL)) THEN ((t1.c1)AND(0.018249065332544778)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c65) NOT BETWEEN (t1.c2) AND (NULL)) THEN ((t1.c1)AND(0.018249065332544778)) END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c65) NOT BETWEEN (t1.c2) AND (NULL)) THEN ((t1.c1)AND(0.018249065332544778)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c65) NOT BETWEEN (t1.c2) AND (NULL)) THEN ((t1.c1)AND(0.018249065332544778)) END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c65) NOT BETWEEN (t1.c2) AND (NULL)) THEN ((t1.c1)AND(0.018249065332544778)) END);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1 IN ())) NOT BETWEEN ((~ (t1.c65))) AND ((~ (t1.c2)))));
SELECT SUM(count) FROM (SELECT (((((t1.c1 IN ())) NOT BETWEEN ((~ (t1.c65))) AND ((~ (t1.c2))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1 IN ())) NOT BETWEEN ((~ (t1.c65))) AND ((~ (t1.c2)))));
SELECT SUM(count) FROM (SELECT (((((t1.c1 IN ())) NOT BETWEEN ((~ (t1.c65))) AND ((~ (t1.c2))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1 IN ())) NOT BETWEEN ((~ (t1.c65))) AND ((~ (t1.c2)))));
SELECT * FROM t1 WHERE (CASE t1.c65  WHEN t1.c2 THEN t1.c64 END COLLATE NOCASE) ORDER BY (((NOT (t1.c64))) NOT NULL) ASC  NULLS FIRST, json_valid(((x'')=(t1.c1))) DESC  NULLS FIRST, (('0.22010649492198875' IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((CASE t1.c65  WHEN t1.c2 THEN t1.c64 END COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (((NOT (t1.c64))) NOT NULL) ASC  NULLS FIRST, json_valid(((x'')==(t1.c1))) DESC  NULLS FIRST, (('0.22010649492198875' IN ()) IN ()));
SELECT * FROM t1 WHERE (CASE t1.c65  WHEN t1.c2 THEN t1.c64 END COLLATE NOCASE) ORDER BY (((NOT (t1.c64))) NOT NULL) ASC  NULLS FIRST, json_valid(((x'')=(t1.c1))) DESC  NULLS FIRST, (('0.22010649492198875' IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((CASE t1.c65  WHEN t1.c2 THEN t1.c64 END COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (((NOT (t1.c64))) NOT NULL) ASC  NULLS FIRST, json_valid(((x'')==(t1.c1))) DESC  NULLS FIRST, (('0.22010649492198875' IN ()) IN ()));
SELECT * FROM t1 WHERE (CASE t1.c65  WHEN t1.c2 THEN t1.c64 END COLLATE NOCASE) ORDER BY (((NOT (t1.c64))) NOT NULL) ASC  NULLS FIRST, json_valid(((x'')=(t1.c1))) DESC  NULLS FIRST, (('0.22010649492198875' IN ()) IN ());
SELECT ALL * FROM t1 WHERE (((LIKELIHOOD(t1.c64, 0.9617233828018118)) BETWEEN (((((t1.c2)AND(t1.c89)))AND(t1.c1))) AND (((t1.c65)%(t1.c89)))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(t1.c64, 0.9617233828018118)) BETWEEN (((((t1.c2)AND(t1.c89)))AND(t1.c1))) AND (((t1.c65)%(t1.c89))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((LIKELIHOOD(t1.c64, 0.9617233828018118)) BETWEEN (((((t1.c2)AND(t1.c89)))AND(t1.c1))) AND (((t1.c65)%(t1.c89)))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(t1.c64, 0.9617233828018118)) BETWEEN (((((t1.c2)AND(t1.c89)))AND(t1.c1))) AND (((t1.c65)%(t1.c89))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((LIKELIHOOD(t1.c64, 0.9617233828018118)) BETWEEN (((((t1.c2)AND(t1.c89)))AND(t1.c1))) AND (((t1.c65)%(t1.c89)))));
SELECT COUNT(*) FROM t1 WHERE (t1.c89) ORDER BY (((((t1.c89)OR(t1.c65)))AND(t1.c89)) IN ((((t1.c89))==((t1.c89))))) DESC  NULLS LAST, ((t1.c89) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c89) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c89)OR(t1.c65)))AND(t1.c89)) IN ((((t1.c89))=((t1.c89))))) DESC  NULLS LAST, ((t1.c89) NOT NULL) DESC);
SELECT COUNT(*) FROM t1 WHERE (t1.c89) ORDER BY (((((t1.c89)OR(t1.c65)))AND(t1.c89)) IN ((((t1.c89))==((t1.c89))))) DESC  NULLS LAST, ((t1.c89) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c89) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c89)OR(t1.c65)))AND(t1.c89)) IN ((((t1.c89))=((t1.c89))))) DESC  NULLS LAST, ((t1.c89) NOT NULL) DESC);
SELECT COUNT(*) FROM t1 WHERE (t1.c89) ORDER BY (((((t1.c89)OR(t1.c65)))AND(t1.c89)) IN ((((t1.c89))==((t1.c89))))) DESC  NULLS LAST, ((t1.c89) NOT NULL) DESC;
SELECT * FROM t1 WHERE (TYPEOF(DISTINCT (- (t1.c64))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (- (t1.c64)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (TYPEOF(DISTINCT (- (t1.c64))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (- (t1.c64)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (TYPEOF(DISTINCT (- (t1.c64))));
SELECT COUNT(*) FROM t1 WHERE ((- (t1.c89 COLLATE BINARY))) ORDER BY (((((t1.c64)) BETWEEN ((t1.c2)) AND ((0.7440911016739995))))>(((t1.c64)%(t1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c89 COLLATE BINARY))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c64)) BETWEEN ((t1.c2)) AND ((0.7440911016739995))))>(((t1.c64)%(t1.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((- (t1.c89 COLLATE BINARY))) ORDER BY (((((t1.c64)) BETWEEN ((t1.c2)) AND ((0.7440911016739995))))>(((t1.c64)%(t1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c89 COLLATE BINARY))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c64)) BETWEEN ((t1.c2)) AND ((0.7440911016739995))))>(((t1.c64)%(t1.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((- (t1.c89 COLLATE BINARY))) ORDER BY (((((t1.c64)) BETWEEN ((t1.c2)) AND ((0.7440911016739995))))>(((t1.c64)%(t1.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY (((t1.c2) NOT NULL) IN (((t1.c89) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY (((t1.c2) NOT NULL) IN (((t1.c89) NOT NULL))) ASC);
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY (((t1.c2) NOT NULL) IN (((t1.c89) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY (((t1.c2) NOT NULL) IN (((t1.c89) NOT NULL))) ASC);
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY (((t1.c2) NOT NULL) IN (((t1.c89) NOT NULL))) ASC;
SELECT COUNT(*) FROM t1 WHERE (((((((((CASE t1.c65  WHEN t1.c2 THEN x'70d7' END)AND(CASE 0Xffffffff8493a1f1  WHEN t1.c64 THEN t1.c89 ELSE t1.c89 END)))OR(t1.c1 COLLATE NOCASE)))OR(t1.c2 COLLATE RTRIM)))OR(((t1.c2)==(t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE t1.c65  WHEN t1.c2 THEN x'70d7' END)AND(CASE 0Xffffffff8493a1f1  WHEN t1.c64 THEN t1.c89 ELSE t1.c89 END)))OR(t1.c1 COLLATE NOCASE)))OR(t1.c2 COLLATE RTRIM)))OR(((t1.c2)=(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((((((CASE t1.c65  WHEN t1.c2 THEN x'70d7' END)AND(CASE 0Xffffffff8493a1f1  WHEN t1.c64 THEN t1.c89 ELSE t1.c89 END)))OR(t1.c1 COLLATE NOCASE)))OR(t1.c2 COLLATE RTRIM)))OR(((t1.c2)==(t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE t1.c65  WHEN t1.c2 THEN x'70d7' END)AND(CASE 0Xffffffff8493a1f1  WHEN t1.c64 THEN t1.c89 ELSE t1.c89 END)))OR(t1.c1 COLLATE NOCASE)))OR(t1.c2 COLLATE RTRIM)))OR(((t1.c2)=(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((((((CASE t1.c65  WHEN t1.c2 THEN x'70d7' END)AND(CASE 0Xffffffff8493a1f1  WHEN t1.c64 THEN t1.c89 ELSE t1.c89 END)))OR(t1.c1 COLLATE NOCASE)))OR(t1.c2 COLLATE RTRIM)))OR(((t1.c2)==(t1.c1)))));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2);
SELECT ALL * FROM t1 WHERE (t1.c89);
SELECT SUM(count) FROM (SELECT ((t1.c89) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c89);
SELECT SUM(count) FROM (SELECT ((t1.c89) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c89);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY (- (CAST(t1.c65 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1 ORDER BY (- (CAST(t1.c65 AS TEXT))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY (- (CAST(t1.c65 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1 ORDER BY (- (CAST(t1.c65 AS TEXT))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY (- (CAST(t1.c65 AS TEXT))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((t1.c89 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c89 IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((t1.c89 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c89 IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((t1.c89 IN ()));
SELECT COUNT(*) FROM t1 WHERE (x'') ORDER BY ((t1.c65)GLOB(t1.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 ORDER BY ((t1.c65)GLOB(t1.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM t1 WHERE (x'') ORDER BY ((t1.c65)GLOB(t1.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 ORDER BY ((t1.c65)GLOB(t1.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM t1 WHERE (x'') ORDER BY ((t1.c65)GLOB(t1.c1)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM t1 WHERE (UPPER(DISTINCT CASE t1.c89  WHEN t1.c2 THEN t1.c2 WHEN t1.c64 THEN t1.c89 WHEN t1.c89 THEN t1.c89 ELSE '' END)) ORDER BY ((0.9473475607057525)IS NOT(((((t1.c89)AND(' oWeJC雉t\n')))AND(t1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE t1.c89  WHEN t1.c2 THEN t1.c2 WHEN t1.c64 THEN t1.c89 WHEN t1.c89 THEN t1.c89 ELSE '' END)) IS TRUE)  as count FROM t1 ORDER BY ((0.9473475607057525)IS NOT(((((t1.c89)AND(' oWeJC雉t\n')))AND(t1.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (UPPER(DISTINCT CASE t1.c89  WHEN t1.c2 THEN t1.c2 WHEN t1.c64 THEN t1.c89 WHEN t1.c89 THEN t1.c89 ELSE '' END)) ORDER BY ((0.9473475607057525)IS NOT(((((t1.c89)AND(' oWeJC雉t\n')))AND(t1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE t1.c89  WHEN t1.c2 THEN t1.c2 WHEN t1.c64 THEN t1.c89 WHEN t1.c89 THEN t1.c89 ELSE '' END)) IS TRUE)  as count FROM t1 ORDER BY ((0.9473475607057525)IS NOT(((((t1.c89)AND(' oWeJC雉t\n')))AND(t1.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (UPPER(DISTINCT CASE t1.c89  WHEN t1.c2 THEN t1.c2 WHEN t1.c64 THEN t1.c89 WHEN t1.c89 THEN t1.c89 ELSE '' END)) ORDER BY ((0.9473475607057525)IS NOT(((((t1.c89)AND(' oWeJC雉t\n')))AND(t1.c2))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c65)<(t1.c1)) AS TEXT)) ORDER BY ((t1.c65 IN ()) IN ()), ((((((t1.c89)AND(t1.c64)))AND(t1.c64)))<=(t1.c65)) ASC  NULLS FIRST, t1.c89  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c65)<(t1.c1)) AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c65 IN ()) IN ()), ((((((t1.c89)AND(t1.c64)))AND(t1.c64)))<=(t1.c65)) ASC  NULLS FIRST, t1.c89  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CAST(((t1.c65)<(t1.c1)) AS TEXT)) ORDER BY ((t1.c65 IN ()) IN ()), ((((((t1.c89)AND(t1.c64)))AND(t1.c64)))<=(t1.c65)) ASC  NULLS FIRST, t1.c89  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c65)<(t1.c1)) AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c65 IN ()) IN ()), ((((((t1.c89)AND(t1.c64)))AND(t1.c64)))<=(t1.c65)) ASC  NULLS FIRST, t1.c89  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CAST(((t1.c65)<(t1.c1)) AS TEXT)) ORDER BY ((t1.c65 IN ()) IN ()), ((((((t1.c89)AND(t1.c64)))AND(t1.c64)))<=(t1.c65)) ASC  NULLS FIRST, t1.c89  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c89, t1.c2, t1.c64)) BETWEEN ((CHANGES(), (('!\r腘1ZJMK') IS TRUE), ((((t1.c2)OR(t1.c1)))AND(t1.c89)))) AND ((((t1.c89) NOT BETWEEN ('-1608479226') AND (t1.c2)), CAST(t1.c1 AS INTEGER), NULLIF(DISTINCT t1.c2, t1.c89)))));
SELECT SUM(count) FROM (SELECT (((((t1.c89, t1.c2, t1.c64)) BETWEEN ((CHANGES(), (('!\r腘1ZJMK') IS TRUE), ((((t1.c2)OR(t1.c1)))AND(t1.c89)))) AND ((((t1.c89) NOT BETWEEN ('-1608479226') AND (t1.c2)), CAST(t1.c1 AS INTEGER), NULLIF(DISTINCT t1.c2, t1.c89))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c89, t1.c2, t1.c64)) BETWEEN ((CHANGES(), (('!\r腘1ZJMK') IS TRUE), ((((t1.c2)OR(t1.c1)))AND(t1.c89)))) AND ((((t1.c89) NOT BETWEEN ('-1608479226') AND (t1.c2)), CAST(t1.c1 AS INTEGER), NULLIF(DISTINCT t1.c2, t1.c89)))));
SELECT SUM(count) FROM (SELECT (((((t1.c89, t1.c2, t1.c64)) BETWEEN ((CHANGES(), (('!\r腘1ZJMK') IS TRUE), ((((t1.c2)OR(t1.c1)))AND(t1.c89)))) AND ((((t1.c89) NOT BETWEEN ('-1608479226') AND (t1.c2)), CAST(t1.c1 AS INTEGER), NULLIF(DISTINCT t1.c2, t1.c89))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c89, t1.c2, t1.c64)) BETWEEN ((CHANGES(), (('!\r腘1ZJMK') IS TRUE), ((((t1.c2)OR(t1.c1)))AND(t1.c89)))) AND ((((t1.c89) NOT BETWEEN ('-1608479226') AND (t1.c2)), CAST(t1.c1 AS INTEGER), NULLIF(DISTINCT t1.c2, t1.c89)))));
SELECT ALL * FROM t1 NOT INDEXED WHERE ((((((~ (t1.c65)))OR(x'' COLLATE NOCASE)))OR(((t1.c2) BETWEEN (t1.c1) AND (t1.c89)))));
SELECT SUM(count) FROM (SELECT (((((((~ (t1.c65)))OR(x'' COLLATE NOCASE)))OR(((t1.c2) BETWEEN (t1.c1) AND (t1.c89))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 NOT INDEXED WHERE ((((((~ (t1.c65)))OR(x'' COLLATE NOCASE)))OR(((t1.c2) BETWEEN (t1.c1) AND (t1.c89)))));
SELECT SUM(count) FROM (SELECT (((((((~ (t1.c65)))OR(x'' COLLATE NOCASE)))OR(((t1.c2) BETWEEN (t1.c1) AND (t1.c89))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 NOT INDEXED WHERE ((((((~ (t1.c65)))OR(x'' COLLATE NOCASE)))OR(((t1.c2) BETWEEN (t1.c1) AND (t1.c89)))));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c65);
SELECT SUM(count) FROM (SELECT ((t1.c65) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c65);
SELECT SUM(count) FROM (SELECT ((t1.c65) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c65);
SELECT * FROM t1 WHERE (((t1.c64)<>(t1.c2)) COLLATE BINARY) ORDER BY (((((t1.c89, t1.c2, t1.c65)) NOT BETWEEN ((t1.c65, t1.c89, t1.c89)) AND ((t1.c64, t1.c1, t1.c89))))IS((t1.c64 IN (t1.c1)))) DESC, ((((((((((((((NULL)<=(t1.c1)))AND(((((((((t1.c1)AND(t1.c64)))OR(t1.c64)))AND(t1.c65)))OR('2F<')))))AND(LOWER(DISTINCT t1.c2))))OR(((t1.c1)-(t1.c1)))))AND('-709789291')))AND(((NULL) IS FALSE))))OR(((((t1.c89)OR(t1.c64)))OR(NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c64)!=(t1.c2)) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c89, t1.c2, t1.c65)) NOT BETWEEN ((t1.c65, t1.c89, t1.c89)) AND ((t1.c64, t1.c1, t1.c89))))IS((t1.c64 IN (t1.c1)))) DESC, ((((((((((((((NULL)<=(t1.c1)))AND(((((((((t1.c1)AND(t1.c64)))OR(t1.c64)))AND(t1.c65)))OR('2F<')))))AND(LOWER(DISTINCT t1.c2))))OR(((t1.c1)-(t1.c1)))))AND('-709789291')))AND(((NULL) IS FALSE))))OR(((((t1.c89)OR(t1.c64)))OR(NULL)))) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (((t1.c64)<>(t1.c2)) COLLATE BINARY) ORDER BY (((((t1.c89, t1.c2, t1.c65)) NOT BETWEEN ((t1.c65, t1.c89, t1.c89)) AND ((t1.c64, t1.c1, t1.c89))))IS((t1.c64 IN (t1.c1)))) DESC, ((((((((((((((NULL)<=(t1.c1)))AND(((((((((t1.c1)AND(t1.c64)))OR(t1.c64)))AND(t1.c65)))OR('2F<')))))AND(LOWER(DISTINCT t1.c2))))OR(((t1.c1)-(t1.c1)))))AND('-709789291')))AND(((NULL) IS FALSE))))OR(((((t1.c89)OR(t1.c64)))OR(NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c64)!=(t1.c2)) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c89, t1.c2, t1.c65)) NOT BETWEEN ((t1.c65, t1.c89, t1.c89)) AND ((t1.c64, t1.c1, t1.c89))))IS((t1.c64 IN (t1.c1)))) DESC, ((((((((((((((NULL)<=(t1.c1)))AND(((((((((t1.c1)AND(t1.c64)))OR(t1.c64)))AND(t1.c65)))OR('2F<')))))AND(LOWER(DISTINCT t1.c2))))OR(((t1.c1)-(t1.c1)))))AND('-709789291')))AND(((NULL) IS FALSE))))OR(((((t1.c89)OR(t1.c64)))OR(NULL)))) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (((t1.c64)<>(t1.c2)) COLLATE BINARY) ORDER BY (((((t1.c89, t1.c2, t1.c65)) NOT BETWEEN ((t1.c65, t1.c89, t1.c89)) AND ((t1.c64, t1.c1, t1.c89))))IS((t1.c64 IN (t1.c1)))) DESC, ((((((((((((((NULL)<=(t1.c1)))AND(((((((((t1.c1)AND(t1.c64)))OR(t1.c64)))AND(t1.c65)))OR('2F<')))))AND(LOWER(DISTINCT t1.c2))))OR(((t1.c1)-(t1.c1)))))AND('-709789291')))AND(((NULL) IS FALSE))))OR(((((t1.c89)OR(t1.c64)))OR(NULL)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c65, t1.c2, t1.c64, t1.c64, 1.68820597E8))>((t1.c2, t1.c64, t1.c64, t1.c2, t1.c89))))-((t1.c64 IN ())))) ORDER BY x'' ASC  NULLS LAST, ((((((t1.c65) NOT BETWEEN (t1.c1) AND (t1.c64)))OR(((t1.c1) BETWEEN (t1.c64) AND (t1.c65)))))OR(t1.c1))  NULLS FIRST, ((((t1.c65)||(t1.c65)))*(CAST(t1.c2 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c65, t1.c2, t1.c64, t1.c64, 1.68820597E8))>((t1.c2, t1.c64, t1.c64, t1.c2, t1.c89))))-((t1.c64 IN ())))) IS TRUE)  as count FROM t1 ORDER BY x'' ASC  NULLS LAST, ((((((t1.c65) NOT BETWEEN (t1.c1) AND (t1.c64)))OR(((t1.c1) BETWEEN (t1.c64) AND (t1.c65)))))OR(t1.c1))  NULLS FIRST, ((((t1.c65)||(t1.c65)))*(CAST(t1.c2 AS TEXT))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c65, t1.c2, t1.c64, t1.c64, 1.68820597E8))>((t1.c2, t1.c64, t1.c64, t1.c2, t1.c89))))-((t1.c64 IN ())))) ORDER BY x'' ASC  NULLS LAST, ((((((t1.c65) NOT BETWEEN (t1.c1) AND (t1.c64)))OR(((t1.c1) BETWEEN (t1.c64) AND (t1.c65)))))OR(t1.c1))  NULLS FIRST, ((((t1.c65)||(t1.c65)))*(CAST(t1.c2 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c65, t1.c2, t1.c64, t1.c64, 1.68820597E8))>((t1.c2, t1.c64, t1.c64, t1.c2, t1.c89))))-((t1.c64 IN ())))) IS TRUE)  as count FROM t1 ORDER BY x'' ASC  NULLS LAST, ((((((t1.c65) NOT BETWEEN (t1.c1) AND (t1.c64)))OR(((t1.c1) BETWEEN (t1.c64) AND (t1.c65)))))OR(t1.c1))  NULLS FIRST, ((((t1.c65)||(t1.c65)))*(CAST(t1.c2 AS TEXT))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c65, t1.c2, t1.c64, t1.c64, 1.68820597E8))>((t1.c2, t1.c64, t1.c64, t1.c2, t1.c89))))-((t1.c64 IN ())))) ORDER BY x'' ASC  NULLS LAST, ((((((t1.c65) NOT BETWEEN (t1.c1) AND (t1.c64)))OR(((t1.c1) BETWEEN (t1.c64) AND (t1.c65)))))OR(t1.c1))  NULLS FIRST, ((((t1.c65)||(t1.c65)))*(CAST(t1.c2 AS TEXT))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ('');
SELECT * FROM t1 WHERE (((NULL) IS FALSE)) ORDER BY (((((t1.c1) NOT NULL), (- (t1.c2)), (('')<>(0.6491014807501586))))>=((((t1.c89) ISNULL), (~ (t1.c89)), t1.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c1) NOT NULL), (- (t1.c2)), (('')!=(0.6491014807501586))))>=((((t1.c89) ISNULL), (~ (t1.c89)), t1.c1))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (((NULL) IS FALSE)) ORDER BY (((((t1.c1) NOT NULL), (- (t1.c2)), (('')<>(0.6491014807501586))))>=((((t1.c89) ISNULL), (~ (t1.c89)), t1.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c1) NOT NULL), (- (t1.c2)), (('')!=(0.6491014807501586))))>=((((t1.c89) ISNULL), (~ (t1.c89)), t1.c1))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (((NULL) IS FALSE)) ORDER BY (((((t1.c1) NOT NULL), (- (t1.c2)), (('')<>(0.6491014807501586))))>=((((t1.c89) ISNULL), (~ (t1.c89)), t1.c1))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c89))>=((0.4962750782092552))))<>((t1.c1 IN (t1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c89))>=((0.4962750782092552))))!=((t1.c1 IN (t1.c1))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c89))>=((0.4962750782092552))))<>((t1.c1 IN (t1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c89))>=((0.4962750782092552))))!=((t1.c1 IN (t1.c1))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c89))>=((0.4962750782092552))))<>((t1.c1 IN (t1.c1)))));
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (t1.c1 IN (t1.c2, t1.c89, t1.c1)) THEN (+ (t1.c89)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t1.c1 IN (t1.c2, t1.c89, t1.c1)) THEN (+ (t1.c89)) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (t1.c1 IN (t1.c2, t1.c89, t1.c1)) THEN (+ (t1.c89)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t1.c1 IN (t1.c2, t1.c89, t1.c1)) THEN (+ (t1.c89)) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (t1.c1 IN (t1.c2, t1.c89, t1.c1)) THEN (+ (t1.c89)) END);
SELECT ALL COUNT(*) FROM t1 WHERE ('-2070699535') ORDER BY TRIM(DISTINCT (t1.c1 IN ())) DESC  NULLS FIRST, t1.c89;
SELECT SUM(count) FROM (SELECT (('-2070699535') IS TRUE)  as count FROM t1 ORDER BY TRIM(DISTINCT (t1.c1 IN ())) DESC  NULLS FIRST, t1.c89);
SELECT ALL COUNT(*) FROM t1 WHERE ('-2070699535') ORDER BY TRIM(DISTINCT (t1.c1 IN ())) DESC  NULLS FIRST, t1.c89;
SELECT SUM(count) FROM (SELECT (('-2070699535') IS TRUE)  as count FROM t1 ORDER BY TRIM(DISTINCT (t1.c1 IN ())) DESC  NULLS FIRST, t1.c89);
SELECT ALL COUNT(*) FROM t1 WHERE ('-2070699535') ORDER BY TRIM(DISTINCT (t1.c1 IN ())) DESC  NULLS FIRST, t1.c89;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c1)OR(t1.c2))  WHEN ((t1.c64)>=(t1.c89)) THEN ((t1.c65) NOT BETWEEN (t1.c1) AND (0.4274861158423059)) ELSE CASE t1.c65  WHEN t1.c65 THEN t1.c64 END END) ORDER BY rtreenode((((t1.c65))!=((t1.c2))), (t1.c1 IN ())) ASC  NULLS LAST, LTRIM(LIKELY(t1.c1), ((t1.c65)IS(t1.c64)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c1)OR(t1.c2))  WHEN ((t1.c64)>=(t1.c89)) THEN ((t1.c65) NOT BETWEEN (t1.c1) AND (0.4274861158423059)) ELSE CASE t1.c65  WHEN t1.c65 THEN t1.c64 END END) IS TRUE)  as count FROM t1 ORDER BY rtreenode((((t1.c65))<>((t1.c2))), (t1.c1 IN ())) ASC  NULLS LAST, LTRIM(LIKELY(t1.c1), ((t1.c65)IS(t1.c64)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c1)OR(t1.c2))  WHEN ((t1.c64)>=(t1.c89)) THEN ((t1.c65) NOT BETWEEN (t1.c1) AND (0.4274861158423059)) ELSE CASE t1.c65  WHEN t1.c65 THEN t1.c64 END END) ORDER BY rtreenode((((t1.c65))!=((t1.c2))), (t1.c1 IN ())) ASC  NULLS LAST, LTRIM(LIKELY(t1.c1), ((t1.c65)IS(t1.c64)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c1)OR(t1.c2))  WHEN ((t1.c64)>=(t1.c89)) THEN ((t1.c65) NOT BETWEEN (t1.c1) AND (0.4274861158423059)) ELSE CASE t1.c65  WHEN t1.c65 THEN t1.c64 END END) IS TRUE)  as count FROM t1 ORDER BY rtreenode((((t1.c65))<>((t1.c2))), (t1.c1 IN ())) ASC  NULLS LAST, LTRIM(LIKELY(t1.c1), ((t1.c65)IS(t1.c64)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c1)OR(t1.c2))  WHEN ((t1.c64)>=(t1.c89)) THEN ((t1.c65) NOT BETWEEN (t1.c1) AND (0.4274861158423059)) ELSE CASE t1.c65  WHEN t1.c65 THEN t1.c64 END END) ORDER BY rtreenode((((t1.c65))!=((t1.c2))), (t1.c1 IN ())) ASC  NULLS LAST, LTRIM(LIKELY(t1.c1), ((t1.c65)IS(t1.c64)))  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((t1.c1 IN (((t1.c89) IS TRUE), ((t1.c2) BETWEEN (t1.c2) AND (t1.c65))))) ORDER BY (TOTAL_CHANGES() IN (CAST(t1.c2 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((t1.c1 IN (((t1.c89) IS TRUE), ((t1.c2) BETWEEN (t1.c2) AND (t1.c65))))) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY (TOTAL_CHANGES() IN (CAST(t1.c2 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM t1 WHERE ((t1.c1 IN (((t1.c89) IS TRUE), ((t1.c2) BETWEEN (t1.c2) AND (t1.c65))))) ORDER BY (TOTAL_CHANGES() IN (CAST(t1.c2 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((t1.c1 IN (((t1.c89) IS TRUE), ((t1.c2) BETWEEN (t1.c2) AND (t1.c65))))) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY (TOTAL_CHANGES() IN (CAST(t1.c2 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM t1 WHERE ((t1.c1 IN (((t1.c89) IS TRUE), ((t1.c2) BETWEEN (t1.c2) AND (t1.c65))))) ORDER BY (TOTAL_CHANGES() IN (CAST(t1.c2 AS NUMERIC))) ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN (- (t1.c89)) THEN CASE t1.c64  WHEN t1.c1 THEN 0Xffffffff84c0b21a END ELSE (((t1.c1)) NOT BETWEEN ((t1.c64)) AND ((t1.c64))) END) ORDER BY CASE ((((t1.c2)OR(t1.c1)))OR(t1.c64))  WHEN CASE WHEN x'' THEN t1.c1 END THEN CASE t1.c65  WHEN t1.c64 THEN t1.c2 ELSE t1.c65 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (t1.c89)) THEN CASE t1.c64  WHEN t1.c1 THEN 0Xffffffff84c0b21a END ELSE (((t1.c1)) NOT BETWEEN ((t1.c64)) AND ((t1.c64))) END) IS TRUE)  as count FROM t1 ORDER BY CASE ((((t1.c2)OR(t1.c1)))OR(t1.c64))  WHEN CASE WHEN x'' THEN t1.c1 END THEN CASE t1.c65  WHEN t1.c64 THEN t1.c2 ELSE t1.c65 END END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN (- (t1.c89)) THEN CASE t1.c64  WHEN t1.c1 THEN 0Xffffffff84c0b21a END ELSE (((t1.c1)) NOT BETWEEN ((t1.c64)) AND ((t1.c64))) END) ORDER BY CASE ((((t1.c2)OR(t1.c1)))OR(t1.c64))  WHEN CASE WHEN x'' THEN t1.c1 END THEN CASE t1.c65  WHEN t1.c64 THEN t1.c2 ELSE t1.c65 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (t1.c89)) THEN CASE t1.c64  WHEN t1.c1 THEN 0Xffffffff84c0b21a END ELSE (((t1.c1)) NOT BETWEEN ((t1.c64)) AND ((t1.c64))) END) IS TRUE)  as count FROM t1 ORDER BY CASE ((((t1.c2)OR(t1.c1)))OR(t1.c64))  WHEN CASE WHEN x'' THEN t1.c1 END THEN CASE t1.c65  WHEN t1.c64 THEN t1.c2 ELSE t1.c65 END END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN (- (t1.c89)) THEN CASE t1.c64  WHEN t1.c1 THEN 0Xffffffff84c0b21a END ELSE (((t1.c1)) NOT BETWEEN ((t1.c64)) AND ((t1.c64))) END) ORDER BY CASE ((((t1.c2)OR(t1.c1)))OR(t1.c64))  WHEN CASE WHEN x'' THEN t1.c1 END THEN CASE t1.c65  WHEN t1.c64 THEN t1.c2 ELSE t1.c65 END END ASC  NULLS LAST;
