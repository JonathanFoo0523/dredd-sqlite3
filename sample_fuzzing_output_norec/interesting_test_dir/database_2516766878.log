-- Time: 2024/06/10 11:55:18
-- Database: database78
-- Database version: 3.40.0
-- seed value: 2516766878
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4, c5, c6); -- 5ms;
UPDATE OR ABORT rt0 SET (c2)=(0Xffffffffb28c8c22); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c4, c5, c0, c1, c2) VALUES (-1.299411934E9, '-1299411934', x'', '%I', '2119842530', 0.8418364070751119); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c6, c0, c1, c3) VALUES ('', x'8bd98fd3', '543464874', 0X65a92400, NULL); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c3, c4, c2, c6, c5) VALUES ('-1299411934', 0.8418364070751119, NULL, x'', 22590133, 1239369134), ('HL', '22590133', 0.38134962099777403, NULL, 0.8128608486733011, x'739e'), (x'', NULL, '1360611548', '1705583616', x'b401', '1360611548'); -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES ('1705583616'); -- 0ms;
UPDATE OR IGNORE rt0 SET c3=0.5371588449287636; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('-1299411934'); -- 0ms;
END; -- 0ms;
UPDATE rt0 SET c4=0.05807812080523578; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c5='-1299411934' WHERE (((rt0.c0 IN ()))IS(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c4)))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c3, c2)=('1878154310', 'fq?D鶪㫢', 1286146206) WHERE 346600919 COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE rt0 SET c5='-1312736862'; -- 0ms;
UPDATE OR IGNORE rt0 SET c0='~k' WHERE ((((((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c5)))OR(CASE WHEN rt0.c6 THEN rt0.c4 END)))AND(((((((((rt0.c5)OR(rt0.c5)))AND(NULL)))AND(rt0.c3)))OR(rt0.c2)))))OR((((rt0.c2))<((rt0.c1))))))AND(0.8054777309384631)); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c5, c0) VALUES ('1565926913', x'', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3) VALUES (NULL, '*W\rP'); -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
UPDATE rt0 SET (c1)=('0.38134962099777403') WHERE ((((rt0.c2) IS TRUE)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '729270532 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS REAL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x13013338 IN ()))=((('Q') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1299411934 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0Xffffffffe9a4de9e)OR('6')))AND(0x13013338)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (COALESCE(DISTINCT 0.5840350584366621, NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1759440222'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8418364070751119; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1312736862'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-772255852 4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1239369134 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '543464874 sz=-486314541 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1940797314' AS REAL))<>(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1384837929 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-450514825 sz=1759440222 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(0.09855406389909649 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT)) BETWEEN (((x'')<(1e500))) AND ((('-486314541') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1175299794 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-587248753 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-30392699 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE((NULL IN ()), ((((0xffffffffb1c139a2)OR(x'8d18')))AND('	XsF~z')), 'p'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=346600919 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-12048351 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('1697209018'))) BETWEEN ((x'9148' IN ())) AND (x'' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1854918577 sz=-1536428162 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2058980488 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=2119842530 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-210025525'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-481800953'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1175299794 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2058980488 sz=-57046238 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (-1952546862)))-((((-748815875, x'21ea', 'LN')) BETWEEN (('0.8128608486733011', '*w\rp', NULL)) AND (('1854918577', x'7607', x''))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1759440222 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1859182032 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (x'') AND (1697209018)))<<((~ (0.7767611963017742)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE NULL  WHEN x'' THEN 0.042015654172936845 END)AND(((x'')>(0Xffffffffd9c25ffe)))))OR(((98389693)-(NULL)))))AND(((-1.940797314E9)&('X,*j')))))OR(CAST(0.5840350584366621 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>>(0.3331744051605898))) NOT BETWEEN ((- (0.9505049829840566))) AND ((('') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-10047856 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL)))>(CAST('' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER((('') BETWEEN ('-806844097') AND ('	XsF~z'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2088501812 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('7ss,|.') NOTNULL) THEN json_array_length('Sz	h5M\&') ELSE x'' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((''))!=((x'46d1'))) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((highlight('-486314541', 'UM7l䖮hAq', '', 0.10223482596885158))*(-1370555384)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1189846028 sz=2088501812 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'0dbb')) NOT BETWEEN ((((NULL) IS TRUE))) AND ((x'984c'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ ('+8j')) THEN ((x'8707') IS TRUE) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)GLOB(NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '729270532 sz=1343215281'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'J'  WHEN -5.87248753E8 THEN -5.7046238E7 WHEN -3.75071074E8 THEN NULL WHEN 0.7332064211056131 THEN x'' END) NOT BETWEEN (json_valid(0.1696331973899653)) AND (((x'') BETWEEN (NULL) AND ('2119842530')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '858444337 sz=-2058980488 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL))>((-368127626))) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.09855406389909649) NOT NULL))AND(((((x'')AND(0.060621349517191114)))AND(NULL)))))OR((((('')AND('6')))OR(0.07204485756756196)))))AND(CASE x''  WHEN '*' THEN NULL END)))AND(('-204224245' IN (x'', '~J')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '780441847 sz=-2095157512 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1323686106 108265820 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5515387085335294 AS TEXT)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1189846028 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-424054769'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE INSTR(((0.8322786045862341) NOT BETWEEN ('-320046400') AND (NULL)), ((x'024d')%(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'dbd5')) NOT BETWEEN ((NULL)) AND ((1.759440222E9)))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((((((('')OR('E<')))OR(x'')))AND(0.460661704149512)))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=-1453507719 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1189846028)) NOT BETWEEN ((((x'e67d')LIKE(-1512478466)))) AND ((TRIM('-30392699', 'fn')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1646262409 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1845364063 sz=1729683188 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1216028905 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((8.58444337E8) NOTNULL)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) NOT BETWEEN ((0.08987486171364312)) AND (('1697209018'))))>=(((((0.4470366107385624)OR(-5.87248753E8)))AND(0.23613544162539768)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')||(NULL)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x''  WHEN '' THEN 0Xffffffffb9f2592e ELSE NULL END IN (0.10223482596885158 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1315751129 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=729270532'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(0.05807812080523578)))AND(''))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1360611548 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '\%'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '598634342 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-66002942'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1323686106 2 sz=895605700 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1227795596 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1565926913'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(x'' AS BLOB))AND(((x'ce4d') NOTNULL))))AND(NULL)))OR(((0X3a80bbc5)>(x'')))))AND((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2047932482 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 1.227795596E9 THEN x'8f0e' WHEN 0.5515387085335294 THEN ' e\n%wDrn' WHEN '1286146206' THEN -7.48815875E8 ELSE '*ml\NF' END IN (((x'')IS('-450514825')), (NOT ('3S')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('->J{zn#l'))<((0Xffffffff8b9e7fd2)))  WHEN CAST(x'3d47' AS INTEGER) THEN (('g6') IS TRUE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1941321779 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1332505348'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.5840350584366621  WHEN x'' THEN '' WHEN -1240927424 THEN x'' WHEN 0.08987486171364312 THEN 1343215281 END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)/(CAST(0.31353655707006634 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1758800824 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN (('-0.0' IN (0.8779172132269644))) AND (((('0.3331744051605898', 0.68810655772932, NULL)) NOT BETWEEN ((x'', NULL, -1119834836)) AND ((NULL, x'd015', '1189846028'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=81090527 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.24753863185184943)) NOT BETWEEN ((NULL)) AND ((NULL))))OR(x'ba97' COLLATE BINARY)))AND(HEX(0Xffffffffcde31dab))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULLIF(DISTINCT NULL, -354848517))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-499751573 sz=-368127626'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'50025cd9')<('')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('7ZK+GJ*M')=(0xffffffff8c51c87e))  WHEN ((('ld'))>=(('TC'))) THEN (((NULL)) NOT BETWEEN ((0Xffffffffb46b8bb5)) AND ((x'82ce4649'))) ELSE TRIM(DISTINCT 0.8054777309384631, ')6䴇k') END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE 0.09226018685954751  WHEN NULL THEN NULL ELSE '-375071074' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN COALESCE(DISTINCT 0.24009041036387668, 'TI') THEN 0.5506643629980372 WHEN CASE WHEN x'' THEN NULL WHEN NULL THEN -1.370555384E9 WHEN 0.31697991595629726 THEN -1.175299794E9 END THEN LTRIM(x'', x'acde') WHEN ((x'') NOT NULL) THEN ((NULL)>>(0xffffffff85ef07be)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('0.0' COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1451475596'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-708265121'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1940797314'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0x14a8b5d7))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.8703133688394504)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-368127626 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.6517555627561503)))GLOB(((0.779918814657195) NOT BETWEEN (2.11984253E9) AND ('	Y&')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-912471525 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS INTEGER) IN (LIKELY('u\rs1\_'), ((NULL)OR('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '711584919 sz=1286146206 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-37349562 0 sz=1286146206'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-359875677 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('' AS TEXT) IN ((-82736965 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1175299794 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 sz=198388170 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1114340803'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 1.360611548E9 THEN '(舘K}' END) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-708265121 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1506256982 0 sz=22484780 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-826247048 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1355597424 1476560179 sz=-1312736862 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1227795596)/(0.6146438652181694)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((-6.41572866E8 IN ()))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((- (9.8389693E7)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL))GLOB('1836447482' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1324850454'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'63cb', NULL, x'')) NOT BETWEEN ((('ri' IN ()), ((0.3108814168287798)IS(NULL)), CASE 'HJ2Rhd'  WHEN 0.748449055604491 THEN NULL WHEN NULL THEN NULL WHEN x'' THEN '-1646262409' ELSE 0.5453758547430401 END)) AND ((((-799589780)>>(NULL)), ((NULL) IS FALSE), '0.6517555627561503'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '841583479 sz=346600919 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('~Ii+')AND('318845752')))OR(NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9515270933068718)) BETWEEN ((0.38134962099777403)) AND ((((('75/5V!')) BETWEEN ((0.07285391114298001)) AND ((x'')))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER('-424054769')) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1759440222)AND(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(((NULL)<=(NULL)), (75046720 IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1439337479 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (NULL)) IN ('', '7-#W떑U-\rp')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1451475596 sz=1197423402 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1332505348'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1142682497')IS(x''))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=733486654 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1114340803'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-66002942 0 sz=-1450821438'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('툱,' IN ()))>=(CAST(0.060621349517191114 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1585235409'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('M\nyV')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((NULL)OR(NULL)))AND(NULL)))OR('')))AND(2134182262)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=549114987 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=1405068973 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=140769901'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'8b67'))=(((~ (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.37737622249278147 COLLATE NOCASE) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'73bd') NOT BETWEEN ('-799589780') AND (0.048199171242738315)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '134314905 1239369134 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-359875677 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT NULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.18855479624400062)AND(x'')))OR(0.5502467130573498))) BETWEEN (((NULL)IS NOT(0.28097657209323457))) AND (CAST(0Xffffffff8421b449 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2124964894 1859182032 sz=1472184339'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-772255852'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-409834067 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.1461718095544955)GLOB(NULL)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-2035342895 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '578456538 sz=-822515441 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('5rA') BETWEEN (0x71a14e82) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT (NULL IN ('-708696312'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1995208689 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE HEX('173775014')  WHEN (+ ('')) THEN CASE 0.1461718095544955  WHEN 0xffffffffb9c8af17 THEN 0.7767611963017742 END WHEN (('Ḿ*|MW') NOT NULL) THEN (- (0.37066358452901194)) WHEN (((0X4a094a07))==((-1269757882))) THEN ((0.5442633096738544)IS NOT('0.07204485756756196')) ELSE (+ (0.3536004419091515)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1506256982 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (SUBSTR(1447336582, x'') IN (CASE WHEN 0.4901987529801273 THEN '-37349562' END, LIKELY(DISTINCT '-10047856'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-556506544 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN ('䖮O') AND ('-1374129446')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1854918577 sz=-128560573 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-4.50514825E8) NOT NULL)))>=(((~ ('v'''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-204224245'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1233489262 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('*F9OgV+') BETWEEN (x'') AND (NULL)))>>((((x'', x'f2d6', x''))==(('-748815875', NULL, 'Y'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT '1101442346' COLLATE RTRIM, CAST('1049712220' AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((-2017843261)<<(0.2682376771842092)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7767611963017742)AND(NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('')) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL))<=(('*ݷ'))))OR(PRINTF(-1451475596, NULL, '1286146206'))))OR(((((NULL)OR(1729683188)))OR(0Xffffffffb5f9354d)))))OR(((0.8485808335015909) NOT BETWEEN (x'') AND ('')))))OR(((x'')/(0.48676838804995004)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (5.98634342E8) AND (0Xffffffffae4efc08)))=(((NULL) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-320046400 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1697209018 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '140769901 sz=1488868523 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-284715934 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1653042081'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-81760036 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=145512005 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2058980488 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((('x⾼''칩')OR(0.6780145825962042)))OR(0.8485808335015909)) THEN CASE WHEN '' THEN NULL ELSE '' END ELSE ((NULL) ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT BETWEEN ('') AND ('-1184336570')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-202760410'; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.37066358452901194 AS TEXT))<>((((0X5f1e0a6c)) BETWEEN ((NULL)) AND ((0.6315686329313004))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (x'') AND ('-1355597424')))<(((-6.6002942E7) BETWEEN (0.7149978254876084) AND ('-392631649')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((CAST(0.8322786045862341 AS NUMERIC))AND((('-1089398771')%(0.6717057267022003)))))AND((('-3053581')*(0.52050440493639)))))OR(x'9235' COLLATE BINARY)))AND(CASE x'85263815'  WHEN 0.16175740191288657 THEN '1476560179' END)))AND((NOT (x'')))))AND((((('-762012630')AND(0.1529519296831523)))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-728179582 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('Ul㻿!' AS TEXT))OR(('' IN ()))))AND((0.8933895784496689 IN (x'', '108265820')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CHANGES() AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '75046720 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=232839570'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1413537875 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-299555378) NOT BETWEEN (0X263dc72f) AND (NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-481800953 0 sz=692712029'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=447630113 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-582404720 2 sz=-1299411934 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (-375071074 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1552330251 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('1611235632' COLLATE RTRIM IN (((0.11295399706692977) NOT BETWEEN (NULL) AND (1.859182032E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-813689357 sz=-579962477 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '0.07285391114298001'  WHEN NULL THEN '108265820' WHEN ',p{v+2<RR' THEN x'0a49' WHEN x'3fb8' THEN x'' ELSE '' END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x70b840d9)) BETWEEN ((x'da45')) AND (((~ (0.5902882081774533))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=346600919 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=841583479'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1360611548 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x'')))&(LOWER('-2038411141'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffff85ef07be) NOT BETWEEN ('') AND (NULL)))IS('2088501812')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=533570033 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('-3080200'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1369274333 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-204224245 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(((NULL)&(x'')), 0.45141882710739145); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'07b0')-(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2137828146 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('22484780') IS FALSE)) NOT BETWEEN (((x'') IS FALSE)) AND (((NULL) NOT BETWEEN (x'') AND (0.8984117083433467)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=81090527 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '539944729 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.036703978630773126) NOT BETWEEN ('0.08987486171364312') AND (0.2211042415311314))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2088501812')LIKE(x''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('ZX咹[)7Vc]') NOT NULL)  WHEN NULL COLLATE NOCASE THEN CAST(NULL AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')AND('*D')))OR(0.805948883886021)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-66002942'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1881803347 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1343215281 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '465724684 sz=710565968 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (x'') AND ('-1324850454')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=895605700 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1323686106 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=111879034 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-259783972 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-641572866 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((load_extension(0.8472815051792836)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-557035072 -1439337479 sz=-1704750116'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1462530129 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-9052800'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1187459902 -644575190 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-405191061 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1286146206 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Y<fIy')AND('~J1Eb頤><')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('5&' COLLATE NOCASE)&(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_quote(((((x'')OR('')))OR(0.7612188654041565))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-826247048)IS('981515205'))) BETWEEN ((('')=(x'd790'))) AND (((NULL)||(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('*C' AS REAL) IN (LIKELIHOOD(DISTINCT x'', 0.06840673281980192))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x''))=((NULL))) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1838549518 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.05843062779605546  WHEN (((0.856274525832623))=((0.3731514920365776))) THEN ((NULL)OR(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.21834082185701964)IS(((((0.7031640516688459)AND(NULL)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1350026656 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=90128403'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1883684978 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('2103829265')IS NOT(((NULL)GLOB(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=140769901 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type(((0.826435951662794) BETWEEN (NULL) AND ('-748815875'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((IFNULL(DISTINCT -1921912103, NULL))OR('Y!' COLLATE NOCASE)))OR(CAST(NULL AS REAL))))AND((((0X23d3f52e, x'', 0.37066358452901194, '', x'5f35'))==((NULL, x'', 0.0840572431113662, 0.16526235198803862, NULL))))))AND(((0xfffffffff56af5d5)-(0.4470366107385624)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (-6.41572866E8)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('	xsf~z' COLLATE BINARY) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('E'))>=((-1.758800824E9))))>(CASE WHEN x'' THEN '\⮬Z霰(^\n' WHEN 0.7031290389218797 THEN NULL WHEN NULL THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-806844097 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=951927064'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) NOT BETWEEN ((NOT (0.5938337765973043))) AND (LAST_INSERT_ROWID())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-319229996 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME('-1299411934', x'', NULL, 0.7135150870607493, '981515205') COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'405b' AS NUMERIC))OR((('-1941321779') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1806224115 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.49617100621725907)>=('')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('743429536') NOT BETWEEN (0.45589653432128874) AND (0.3990745428349618)))OR(('C04a' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((- ('644810429')))) AND ((((x'')AND(''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=612449864 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2035434154'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '8801583 -1526528380 -339498427 sz=-736397731 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1384837929'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.5840350584366621)AND('EQ')))AND(0.14899749010254892)))OR(0.32064999703692143)))OR(-1011284647)))LIKE('ZX咹[)7Vc]' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1836447482 sz=-748815875 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1070004290 sz=1378046162 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '895605700 1463649041 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1092465772 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-561737686 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1944585841 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=486753041 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-14308738 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1255352431 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-424054769' COLLATE BINARY  WHEN (('2088501812')/(0.12433838820461152)) THEN ((((((((-263253727)AND('')))OR(NULL)))OR('23676659')))OR('-558644928')) WHEN x'9e40' COLLATE BINARY THEN '1216001931' COLLATE NOCASE WHEN COALESCE('*d', 0.8377194525153883, 0.914292355549316, 0.8371034614954544) THEN CAST(NULL AS NUMERIC) WHEN CASE WHEN NULL THEN NULL END THEN ((x'')IS NOT(0.9256142998576616)) WHEN CASE x'2ee4'  WHEN 'v''' THEN 0xfffffffffb1188bb END THEN ((NULL)<=(NULL)) ELSE ((NULL)|(0.8406435657895539)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(((NULL) NOT BETWEEN ('-1182607168') AND (NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) BETWEEN (((0.08757193717200129)<=(-901259079))) AND ((((0X68deed5e))<=(('1662974220'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1512478466 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 879449233'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN (0.3207129353920528)))<=('-2057644185' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-708265121'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.07447881529397038))>=((x''))))AND(((('-1312736862', '', 0.9083171174320688)) BETWEEN ((0Xfffffffff37b43cb, NULL, '-1940797314')) AND ((x'', NULL, x'c219'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-1312736862 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0.9643511482634302  WHEN 0.0869928404289183 THEN 0.9688554710942002 ELSE 0x627b879a END IN ((((-1453507719))!=((0.05807812080523578))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-61548710 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1649989401'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'')%(x''))  WHEN ((-1177432751)||('729270532')) THEN CASE 0xffffffffc2a2032b  WHEN 783769948 THEN 'uW!pwds' WHEN 1208617205 THEN x'56d06175' WHEN 'LK*Q' THEN NULL ELSE '' END ELSE x'e6b4' COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1574815619 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) NOT BETWEEN (((-2067154342)*(NULL))) AND ((NOT (0.8182797161823657)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1759440222 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1018997435 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=98389693'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((1020202187) NOT NULL)  WHEN ((0Xffffffffb46b8bb5) BETWEEN (NULL) AND (x'')) THEN (('')>=('ZX咹[)7Vc]')) ELSE ((1323686106) BETWEEN (0.27513276878356574) AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('0.5938337765973043')) BETWEEN (((('*P')>=(0X3b472329)))) AND ((x'a266'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1296404238 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.7551489197219724) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')>=(x''))) BETWEEN (((NULL) ISNULL)) AND (((0.2211042415311314) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=557974922 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-205613940 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1056435244 2 sz=122623135 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-3.200464E8 AS INTEGER) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1684763317 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-498352121 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ()) IN ((('-424054769')IS('-1268020299')), ((NULL) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1437057600'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=108265820 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1078736459'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(x'' AS BLOB)))=((((NULL)<=(-3.7349562E7))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('p}')<=(NULL)) THEN (+ (x'7b93')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('GIZŜ' COLLATE NOCASE) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1188588514 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKE(0.5453758547430401, 0.7175435952515877)) NOT BETWEEN (('-355718212' IN ())) AND ((((((((('458679533')OR(0.23613544162539768)))OR('-31813756')))OR(0.5325039608031163)))OR(0.8090865086125558)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(CASE -1859041660  WHEN 0.039115593116341274 THEN x'' ELSE x'' END, CAST(-968008837 AS BLOB)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=841583479 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-113545825 sz=1074302108 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(CASE -649598815  WHEN NULL THEN x'601e' END, ((0x65a92400)<<('729270532'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '644484763 sz=-12048351 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8485808335015909 COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1926143687 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.826435951662794') BETWEEN ('LN') AND ('-770089579')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1299411934 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1262914734'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-199771352 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=941300782 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '230915630 sz=729270532 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1836447482'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((UNLIKELY(7.504672E7))AND(((('0.2682376771842092', NULL, '>3', 0.048199171242738315, '853365531'))<>((NULL, 0.09022929753682474, ' 5', 0.32213451416305194, '\rM'))))))OR(((((((((0.8113496396363173)AND(NULL)))OR(x'')))AND('-1175299794')))OR('1189846028')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 sz=-791243050 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-194875555'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(((((NULL)AND(NULL)))AND(0xffffffffce6ecdd0))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2119688885 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('I7py㫁FyZ')&(NULL)))/(CAST(x'8578' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-48996622') NOT BETWEEN (NULL) AND (0.6197867909273271)))AND(((0X49be36a2) NOT NULL))))AND(((((0.4445527422432396)AND(x'6336')))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1741782912 sz=-1798293485 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LIKELIHOOD(DISTINCT x'', 0.8554677187869701)  WHEN CASE -37349562  WHEN x'1190c9a7' THEN NULL ELSE x'' END THEN (('-1758800824')*(0.22889873311609887)) ELSE CAST(0.13177312716137157 AS REAL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=269668476 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('e' COLLATE RTRIM) BETWEEN (((((NULL)OR(1865837738)))OR(-1.940797314E9))) AND (((('-210025525', '1343215281', 0Xffffffffd35df9fd)) NOT BETWEEN ((NULL, 0.4984473368638205, x'')) AND ((x'bd59', '0.8779172132269644', 0.3512591825170829))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '662075978 526093370 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((- (0.29065711513209425)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1419309054 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (NULL) AND (x'53df9d43')))IS((- ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-539369432 2 sz=841583479 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('733486654' AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1854918577 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=632844378 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1743571723 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.2149606540758061) NOT BETWEEN ('NAnQ룊\n&') AND (x'6149')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((((('711584919')OR(x'')))OR('0.042015654172936845')))AND(x'')))AND('0.2211042415311314')))AND(CASE NULL  WHEN '841583479' THEN -1403857807 ELSE '0.21834082185701964' END)))AND(((((0.3475218822006815)OR(NULL)))OR(NULL)))))AND(CAST(NULL AS TEXT))))OR((((NULL, 0.03328399379339064, 0.37971211923508685))!=((x'', x'', x'7794'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1506256982'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)<<(x'')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1193952733 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT x'') COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-2.095157512E9)AND(0.06715615830233301)))OR(' 㡹\n泎23')))*(((NULL)AND('S7pog褿#')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=981515205'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT 244553725, 0.5387242006149591, x'63a8', 0.4407482399591788) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '598634342 0 sz=-66002942 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1374975118 -702195142 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-780109113 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1239369134'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-199878292 2 sz=-912471525 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1299411934'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-912471525 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(NULL)))AND(1329291076)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=381782917 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-297846513'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=111958361 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2065246247 sz=-668479512 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('-1299411934')AND('')))AND('\⮬Z霰(^\n')))AND(x'966d')))AND(0.07048380183504366)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1251694269 780441847 sz=-499751573'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-450514825 -855095269 sz=-714294301 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')AND(NULL)))OR(2102390570)))AND(x'')))AND(1.286146206E9)))GLOB(((x'')>>('敧')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-499751573'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATE(((x'') NOT BETWEEN ('') AND (NULL)), ((NULL)||('yh')), ((('1060663214', '', 0.8332917415894784, '', x'', 22590133, x'')) BETWEEN ((0.1529519296831523, 'I0', '', 0.6315686329313004, '1780390695', x'b564', -1.268020299E9)) AND ((0Xffffffff9039c907, 0.9324919798084683, x'', x'', 0.6217075175477269, '?{', 0.201525341897831)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1658411457'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2132245440 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=73485108 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=551379210 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1216028905'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1209638173 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6181434635971944) NOT BETWEEN ('-1370555384' COLLATE BINARY) AND (((0.9083171174320688) BETWEEN (0.7001565715799358) AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1749645147 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((NULL)OR(x'')))OR(NULL))  WHEN ((-1646262409) BETWEEN (772936472) AND (x'')) THEN (('KV') NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((''))<((NULL)))) BETWEEN ((NULL IN (NULL, '0.6717057267022003', 0.6875870532361628))) AND ((~ (x'6272')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (NULL) AND (1.87815431E9)))>>((((x'c3302bfb'))=(('-762371205'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1022465378 IN ('')))==(((((0.29606685494423524)OR(-1941321779)))OR(0.9941993727676731)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2134792148 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=180255389 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-424054769 -354848517 sz=-2041615737 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0X58028533) IS TRUE)  WHEN (- ('B\rZyXe骔')) THEN CASE NULL  WHEN x'6af5' THEN -587248753 ELSE '1697209018' END ELSE 'Xhq뉀U⚢%s0' COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1323686106'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'5d71')) BETWEEN ((((0xffffffffea8cbba3)|('W9RPV')))) AND ((((((0.5760091962282199)OR(x'33e8')))AND('1312584580'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-912471525 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0X10fa0f3b) NOT NULL)))>=((((x'6e89') NOT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1216028905'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-66002942 0 sz=2076231191 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)||(0.06630504946490068))) NOT BETWEEN (x'') AND (CASE WHEN x'' THEN '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '160616895'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOT BETWEEN ('') AND ('-2014921744')))OR(((-3.68127626E8)<(NULL)))))OR((~ ('FH#7')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1565926913 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-629302734 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (('-359875677') NOT BETWEEN ('&') AND (0X7bbec13d))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-8.2736965E7)OR(-1462868741)))OR(0.98274139750451)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 0.9479558565316689  WHEN '-320046400' THEN 543464874 WHEN 'ri' THEN 0.6539761844729437 WHEN 0.4225187665271041 THEN x'' ELSE x'' END, LENGTH('-748815875'), (((0.819353573025207, 0x4a0488f7, x''))<=((NULL, 0.5966687705470117, NULL)))))>((((((((((((((x'5a04')AND(0.16933353270272944)))OR(x'81696d68')))AND(0.7347302728711701)))AND('0.8933895784496689')))AND('')))OR(0.060621349517191114)), ((((1652788433)OR(x'77eae7ab')))AND(NULL)), HEX('318845752')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '598634342 sz=-708265121 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1697209018 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1370555384 -1240927424 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1223350915 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'fa9dbeb6') ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=733486654 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1056805257 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-683491035 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1515943554 -365499765'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY)AND((('-1758800824') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1794756645 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1491437240 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1393705185 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=1590638998 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=346600919'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-772255852 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2057126718 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.19313466114874167, 1468685248, x''))>=(('-102975301', 0X27853d18, 0.4807023184237199))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1287289862 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=346600919 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-752121680') IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-883325622 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x4d557df)GLOB(x'73e3'))) IS TRUE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((((((x'')OR(x'')))OR(0.5204415387222201)))OR(x'')))OR(0.357755996974795)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.476560179E9) BETWEEN (-74350120) AND (0Xffffffffa96f226e)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2103803181 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN ((((0.6227813589515813)IS('49441163')))) AND ((x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-423369865 -826247048 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((~ (936045834)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.11844143255056994 AS NUMERIC) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('170202002')AND('1143445357')))<(CASE x''  WHEN NULL THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0x6e8fcfb1) NOT BETWEEN (0.040393326961485454) AND ('->J{ZN#L')) THEN ((0.12343259111085891)AND(x'bcae')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN 1.286146206E9 THEN '-204224245' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1355597424 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2086378508'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2055004168 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '780441847 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT '130557273', ((-1945678424) IS FALSE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'c6a0') IS TRUE)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('~J1wbz><')IS(0.9964328857098969)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-737070926 sz=-346780659 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=724964743 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('') NOT BETWEEN ('-375071074') AND ('m?op'))))>((((NULL) BETWEEN (0.6416067076064538) AND (0.6148774709896344))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.24009041036387668 AS BLOB)) NOT BETWEEN ('nT,P') AND (CAST(x'' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-772255852 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR('氝')))OR(x'')))AND('-66002942')))OR(NULL)))|(UPPER(DISTINCT x'21c6'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-92978370'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1578113926 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=68960309 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(0.05469203120656796, (((NULL, 0.7335542241263755, -1129076976, 0.1020699152325506, '108265820')) BETWEEN ((9.8389693E7, x'', x'', NULL, '184434192')) AND ((0.4883341464412998, 0x2492f3d, '-156809963', 1.286146206E9, x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-708265121 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(ABS(x'dd30')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN 0.7332064211056131 THEN 906990485 ELSE 0.9556740521979171 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT (((((((('~k')OR(NULL)))AND(-3.68127626E8)))OR('')))OR(7.504672E7))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1565926913 sz=-1956509408 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT NULL, 0.9596471067052627))|((('') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2038032855 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'140b')LIKE(1.360611548E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=437162413 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1966997839')>=(NULL)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(NULL, '1741348060') COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('p}')>(0.6561844217648306)))AND((+ (NULL)))))OR(((((NULL)AND(x'')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1489784069)AND('yW')))OR('-1952546862')))||(((x'')=(0.062129336945999425)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1927708089'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((((x'')) NOT BETWEEN ((0.012073569982482879)) AND ((x''))), 'J' COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'c5d25d14')AND(0.06859776132746187)))OR('-486314541'))) BETWEEN ((('툱Rᑈ]4A\n./') IS TRUE)) AND ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (((((((('1565926913')AND(0.19054375258255074)))OR(0.28585390589460336)))OR(x'd659')))AND(0.8133723992365814))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1299411934 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=885477815 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-840753749 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 108265820 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-295033516 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF('1989765757')) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.8896754751319557 IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-450514825 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1743983015 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1882609098 -1639316549 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7918701794178877; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-500010044'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-184793096 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (0.34901596106283206)))OR((- ('UL㻿!')))))OR(json(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-665309033 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'ba9d' THEN ((((((((0.3025318508862036)OR('1705583616')))AND('1836447482')))OR(-5.87248753E8)))AND(0x7b841619)) ELSE ((198388170)AND(0.37066358452901194)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', '629052370', x'5093')) BETWEEN (((- ('')), CAST(NULL AS REAL), 0.52050440493639)) AND ((CASE '-630511193'  WHEN '՘k' THEN 'z~㦢f' WHEN x'' THEN x'' WHEN 0.695039497123715 THEN '鶪ᜬo' ELSE 1325254750 END, (-1.451475596E9 IN ()), (((0.5932070065094622))<=((NULL)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1315751129'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1332505348 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1565926913 sz=346600919 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1142682497'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=113568846 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1814496260 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=645943790 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-27176118') BETWEEN (2065098825) AND (',.')) COLLATE RTRIM COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('-500882142')) BETWEEN (('[]')) AND (('Mvm稛HSpw['))) THEN (~ (0.3076382379759476)) ELSE CAST(0.6315686329313004 AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-882104889 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1426423628)>=('\')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1748997580')IS('22590133'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=20527027 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1033922609 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('~J1Eb頤><')IS(0.8965714471977686))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((('0.08987486171364312', NULL, x'd285'))==((x'1a0c', x'6a42', NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1859788880 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 3ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'' THEN NULL ELSE '-368127626' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=108265820 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1927808276 noskipscan'); -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
UPDATE OR IGNORE rt0 SET (c5)=(1108188105) WHERE ((((rt0.c5) NOT BETWEEN (rt0.c1) AND (rt0.c5)))GLOB(rt0.c0 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c4, c6, c3, c5, c1) VALUES (NULL, 0.4365480140382433, '688570131', x'', 0.570208671305508, x'e9fdbba2'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=('䓓') WHERE ((((rt0.c3 IN ())))<=((rt0.c0 COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO rt0(c6, c5, c3, c2, c1) VALUES ('0.31697991595629726', 0xffffffff89693ce0, '{', x'', 'v0pjDE0'); -- 0ms;
UPDATE OR REPLACE rt0 SET c2='-871867431'; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=0Xffffffffcfe8893f, c6='1964557317' WHERE ((rt0.c1 COLLATE NOCASE) BETWEEN ((rt0.c3 IN ())) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))); -- 0ms;
INSERT OR ABORT INTO rt0(c6) VALUES ('743904786'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c6, c4, c0) VALUES (0.4090820631075337, -1299411934, 1.506256982E9); -- 0ms;
INSERT OR IGNORE INTO rt0(c6, c2) VALUES (((LTRIM(x''))||((0.39689980571763195 IN (NULL)))), '()'), (0.09280763814092363, 870452154), ('-1758800824', 0xffffffffc450827b); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA secure_delete = false; -- 0ms;
END; -- 0ms;
COMMIT; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((1.0826582E8)AND(0.7189606936721019)))OR(x''))))<=((((x'eb28ef9f')*(0.9845467460376495))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1512478466 0 sz=913857058'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')-(''))) NOT BETWEEN (SQLITE_COMPILEOPTION_GET('-608321751')) AND (CAST(0.006276884399476379 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=-1500956180 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((2089878614) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'8dec' AS TEXT)) BETWEEN (0xffffffffc99cca1b) AND (CAST(0.9660925236334729 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-879499904' AS INTEGER)) BETWEEN ((((0X416dc3f5))>=((NULL)))) AND ((0.09679790981650926 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('TW8EQf' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1334782278 sz=-1511205875'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '' COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=938803392 unordered noskipscan'); -- 4ms;
DELETE FROM sqlite_stat1 WHERE CAST(((51769104)LIKE('J-*%')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, '', NULL)) NOT BETWEEN ((NULL, CAST(x'' AS TEXT), (('845467816') IS FALSE))) AND (((+ (0.9781983075458127)), (0.5442633096738544 IN ()), NULL COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1014381491 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1978585616 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7308579500004521 IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=108176563 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-278239348'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1151929019', 0X75ebb471, x'')) BETWEEN (((x'' IN ()), (('a*mH]BO') NOTNULL), CASE WHEN NULL THEN '0.6146438652181694' ELSE 'd|g8u3' END)) AND ((LIKELY(DISTINCT '865758065'), (('\%') NOTNULL), ((((((((0x3561dbc4)OR(NULL)))OR(-1.845364063E9)))OR(1.476560179E9)))AND(1705583616))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((',+LoX ')AND('1641480671')))OR('(舘K}')))AND(1412056573)))OR(0.5011488102321398)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '175685471 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1572957735'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.3207129353920528') BETWEEN (NULL) AND (x'6d24')))<<(LOWER(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-912471525 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1915936904 0 sz=-635097615 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1871477445 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=9223372036854775807'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-337381950 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-37349562 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('') IS TRUE) IN ((('22590133') BETWEEN (0.16033989270732585) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1100015253'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1859182032 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1994670836 sz=1585526934 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-405598957 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.813851498401835 AS TEXT)) BETWEEN (((NULL) NOT NULL)) AND ((- (0.10887310243972426)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=9223372036854775807 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'1588'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) BETWEEN (CASE WHEN '-66002942' THEN x'' WHEN 'A' THEN 0.6961290054780129 WHEN x'52bf' THEN 0.9376743223810369 WHEN x'5a5d' THEN 0.9942524616193027 WHEN 2.248478E7 THEN NULL ELSE x'8bdc' END) AND (UPPER(DISTINCT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.854918577E9, NULL, x'b7b9')) NOT BETWEEN (((('X쇢xv')LIKE('-912471525')), (((0xfffffffffca07e52, x'aa9d', '-1585871770'))>=(('-1784550657', 0.538863988398048, x''))), NULL COLLATE NOCASE)) AND (((('-305251962') NOT NULL), x'9631' COLLATE BINARY, ((NULL) NOT BETWEEN (0.914292355549316) AND (0.8703133688394504))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))AND(TRIM(7.80441847E8, '0.5506643629980372'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')!=(732545244))))>=(((0.4845319216945987 IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-449498628 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1812290574 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1297280521 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE x''  WHEN x'4cd5' THEN '318845752' WHEN x'' THEN '' WHEN NULL THEN x'' ELSE '7288990' END)OR('1098755644')))AND((('-748815875')IS NOT(0X27a31673)))))OR(CAST('ⅰtm)\nD''#' AS REAL))))AND(CASE '&'  WHEN x'a952' THEN NULL WHEN 1.323686106E9 THEN -1769673095 WHEN '-509002266' THEN NULL ELSE -1.952546862E9 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1524196358 0 0 sz=-1312736862 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=981515205 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1952546862'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)|('858444337')))OR(((NULL)>=(0.060621349517191114)))))AND((NOT ('-148391136')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1476560179 sz=111575427'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1360611548 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'7afe98bd') IS TRUE)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-181973669 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-0.0 AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1370555384 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN NULL THEN 2121834093 END THEN (((('-1536428162')OR(0X2e15f692)))AND(0.26633719934438316)) WHEN UNLIKELY('1933887212') THEN x'' COLLATE RTRIM WHEN (((('')OR(0.6895709682021575)))AND('ydwﭷ❀	\rbk')) THEN (('') NOT NULL) WHEN json_remove(0xffffffffa7dd193a, '-1628880707', '䓓', 0.1409995433233271) THEN CASE WHEN '*+' THEN 0.49706893857910983 ELSE NULL END WHEN (+ (NULL)) THEN TRIM(DISTINCT NULL, 0.8779172132269644) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1439337479 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'f482')GLOB('~J'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1344708943 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-365833100 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2000703743 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '890612509 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('M\nyV') NOT NULL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)-(0.8374202389953402)))<(CASE WHEN NULL THEN NULL ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((0x2c76cbdd)OR(NULL)))AND('')) THEN (('sz	h5m\&')AND('244794390')) ELSE CAST(0.24245936543918256 AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -195006318 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '75046720 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)=('508593646')))OR(0.1841410571174399 COLLATE NOCASE)))AND((x'' IN (0.6212125392920896)))))AND((NULL IN (NULL)))))AND(CASE 0xffffffffe693bba8  WHEN 'ETZ1欄j*⋅N' THEN 'N|m/Y(V\rL' ELSE NULL END)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((json_extract(x'', NULL)) BETWEEN (((('')) NOT BETWEEN ((NULL)) AND ((x'')))) AND (0.3133493293251022)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('' COLLATE RTRIM)OR((NOT (x'')))))AND((+ ('0.060621349517191114')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((~ (x'b71f')))OR((-960032403 IN ()))))AND(((729270532) BETWEEN (9.8389693E7) AND (NULL)))))AND(((x'5aa7') IS TRUE))))OR((('1125487020')<('-1245667336')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1870394648 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1431785261'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x6752ad56 COLLATE BINARY)<(((('')) BETWEEN ((x'')) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1377343363 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=506581828 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1119834836'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8152604672539736)%(((NULL)IS(0.6031689107911345)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=198388170'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-748815875 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1614816518 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((387563874)/(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1829558342'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -210025525 sz=-1391102204 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (x'')) IN ((- (0x3a80bbc5)), CAST(x'' AS TEXT))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE '-806844097'  WHEN '-1251533697' THEN x'' ELSE -1471388268 END)OR(((NULL) IS TRUE))))OR(0.8958222148840498 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1674607173 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS REAL)) NOT NULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE x''  WHEN 0.08381061437558013 THEN x'' END THEN (+ (0.748449055604491)) WHEN ((NULL) NOTNULL) THEN (('fq?D鶪㫢') IS FALSE) WHEN CASE 'Nedq'  WHEN '0.8779172132269644' THEN x'' END THEN (0.14899749010254892 IN ()) ELSE ((0x52d74ce3) ISNULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(CAST(x'99e6' AS REAL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '198388170 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1286668768', x'1351', x''))>(('', NULL, NULL)))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE INSTR((((('1323686106')AND('')))AND(x'')), ((('1054516468'))!=(('1\')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'') BETWEEN ('') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1948846164 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.22657217396372287 COLLATE RTRIM AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffb9f2592e) IS TRUE) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '98389693 sz=1506256982'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '22484780 2 sz=-863495754 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('5衂녞' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE x'3d96'  WHEN ' R' THEN x'' ELSE '-687734928' END)AND(CASE 0X553e2343  WHEN 1.7976931348623157E308 THEN x'' ELSE 0.8013191599746795 END)))OR(('-486314541' IN ()))))AND(((x'006f')!=(0.523882192993955)))))AND(IFNULL(NULL, ''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('711584919')) NOT BETWEEN (((((('%I')OR(NULL)))OR(x'')))) AND ((CAST(x'b37d' AS TEXT)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=923259717 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE NULL  WHEN 0.3638063431298886 THEN x'' ELSE 0.7864904877377938 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-66002942 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '22484780'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1332505348 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKE('(S)域', x'9b0b'))LIKE(CASE WHEN 0x117642d6 THEN x'd1e8' ELSE '.' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=224292576 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2048196972'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1370555384'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('1216028905' IN ()) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-12048351 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1694098033 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL)))IS NOT(x'' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-879144077 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-812478651'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.24565260132220246)>>(-1)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1214666802 sz=535211442 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1677343045 sz=-912471525 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE BINARY IN (0.15503383381994984)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1565926913 2 sz=-1125104765 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1902881918 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (('')) AND (((NOT (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=634419066 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('q0' COLLATE BINARY)IS NOT(CASE WHEN '318845752' THEN 0.3301046432513354 WHEN '-85989289' THEN '' WHEN NULL THEN '%Y' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 'V 8P' THEN '-458627404' ELSE NULL END) BETWEEN (((0.8652320486456233) NOTNULL)) AND ((((x''))<>((0.9256142998576616))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-110342899 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1974600897 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((1309344678)>(x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('޾{U禢.')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1323264270 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=431097885 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 -1352259953 sz=1220819528 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.05235183871484539 THEN '-1299411934' END) ISNULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'8bf9' IN ()) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'')))OR(CASE 0.6626183737964982  WHEN '\n~BHVb\r' THEN 'B0X' ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1150424811 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))IS NOT(((x'')IS(0.19377504135922274)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-8039088 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-481800953'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1619904754 2 sz=-10047856'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0xffffffffb798c64f)<(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((0.16207966650822425)LIKE(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((((((('')OR('-990792303')))AND(0x5b23dd7)))OR(x'')))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOT BETWEEN ((((('㤥m2MUC')OR('')))OR(NULL))) AND ((((NULL)) BETWEEN (('-1315751129')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1986148821 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 606477947 sz=1931561422'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-806844097'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1565926913' IN ())))!=((x'a3988a00'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1343674938 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1460833810 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-128776217'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1828194734') BETWEEN ('{00!1') AND (x'46c4')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=81090527 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1197423402' IN ())) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-720484335 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '989574844 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-840753749 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=497193793 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE ''  WHEN '-1512478466' THEN NULL WHEN x'' THEN 0.08020144481219316 WHEN NULL THEN '븮(ꡈ' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ (x''))  WHEN CAST(x'' AS INTEGER) THEN ((x'2e399efa') ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT ('-748815875' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '711584919 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1878154310 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1346506622 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '1991528244' THEN NULL END) BETWEEN ((~ (x'8731b424'))) AND (((x'')LIKE('uY2m')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1941321779 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1506256982 sz=98389693 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.354670435524275 AS BLOB) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2124994309 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.19845413070473683; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x6b54b269)>=(x'f590')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (COALESCE(DISTINCT '-373459606', x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-912471525'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2114854670 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1002253827 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0Xffffffffb28c8c22, x'', -8.06844097E8)) NOT BETWEEN ((x'f64302da', '981515205', '-661177867')) AND ((NULL, 0.1000262182183218, x''))) THEN (- (0.5457351082542216)) WHEN ((('AMh|', '0.12433838820461152', NULL))==((x'', 'T\yW', '-1952546862'))) THEN (x'' IN (x'')) WHEN LTRIM(0.28364061361204906, -3.75071074E8) THEN CASE WHEN 1976381256 THEN '198388170' END ELSE ((NULL)LIKE(0.7232671359375884)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1574473037 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-860578987 sz=-1646262409'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1383340074'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=733486654 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)LIKE(x'7e48f88f')))+((+ ('yFlo')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'50a6')LIKE(1070588786))) BETWEEN (((x'')OR(-450514825))) AND (LIKELY(0x23ae6f66))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('%5n|mALnL')-(0.04690597751627312))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=490122997 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-912471525'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1451475596'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2091554095 sz=-204224245 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(NULL, ((x'aad3a521')-(''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -1694056565 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((x'')OR(0.47147178200690454)))AND(NULL)) THEN ((NULL) BETWEEN (0.631949791946862) AND (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1145268913 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1572251748 sz=-709494777 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x20f1a274))>=(((~ (-50114845))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1238747409 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=82185105 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.9083171174320688') BETWEEN (x'322a') AND (-1219184460)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-2109913686 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-10047856 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 612670235 THEN 1642243638 WHEN NULL THEN '3\r' WHEN 0.2902773187805099 THEN x'' ELSE -9223372036854775808 END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 707816645 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-994067384 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.11295399706692977))>=((x''))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '177740338 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-1') NOTNULL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1481352188 sz=1793353054 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.2740005021317323)<=((~ (0.1360685925331755)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=79503010'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-726687869 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1855512175 sz=1104151397 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-636016584 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1823447746 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)*(NULL)) AS NUMERIC); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-9223372036854775808 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('5n撨n/' IN ())  WHEN '0.0' THEN (~ ('')) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=708808537 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=674312710 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1941321779 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2088501812 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1729683188 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1959588557', '0.6146438652181694', -623855632)) BETWEEN ((((((x'')AND(NULL)))AND('TI')), (((('711584919')OR(0.7542801092116997)))AND(NULL)), 'I8{\dS')) AND ((x'94143e30' COLLATE NOCASE, ((x'')-(NULL)), '2144893772' COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-954557349 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2075887979 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1197585355 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1189846028'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=547013358'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULLIF(DISTINCT '108265820', 'I7py㫁FyZ'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=22484780 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=618939447 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1476560179 sz=-608846749 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1973810076 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('194964992')) BETWEEN ((0x6c391d59)) AND (('')))) NOT BETWEEN (CAST('aq' AS TEXT)) AND (json_type('*f9ogv+'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-30392699 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1845364063 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(x'fc98'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE -114800070  WHEN -0.0 THEN NULL WHEN '#Z' THEN x'' WHEN NULL THEN 0.04837531328409039 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-441371500 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '35459805 sz=1974897398 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=81090527'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=780441847'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1315751129 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'fce8' IN ()) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=-1230909424 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LIKELY('툱,') AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM(x'') COLLATE BINARY COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1855412930 -1888200638 -1068427218'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-13632123 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '0.4901987529801273' THEN ((((NULL)OR(0.8005991982613506)))OR('}xYa***\r')) WHEN '2022968975' THEN ((1332505348) IS FALSE) WHEN x'd9b3' COLLATE RTRIM THEN (((('1265973557')OR(x'8d11')))OR(NULL)) ELSE ((NULL) NOTNULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(((((((((((((x'')OR(NULL)))AND(x'608a')))OR(' MJa>NBk+')))AND(-1269850781)))AND(NULL)))AND(0.060621349517191114))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1506256982 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1086561148 sz=1840885597 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1941321779 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=186151038 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=864477659 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LIKE(x'', x'2839') THEN TRIM(346600919) ELSE (0.9532480935322222 IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1601941361 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-708762814 sz=1519654523 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.16696546665476597 AS BLOB))=(CASE 0.14513360775686157  WHEN x'ae90' THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2072454221 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1312736862 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1555653358 sz=1460172675 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1786520532 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1760711540' COLLATE BINARY))<>((x'' COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((22590133 IN (NULL, '-1175299794'))) NOT BETWEEN ((((x'4c97')) BETWEEN ((0.8824011809151344)) AND (('')))) AND (((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'') BETWEEN ('2088501812') AND (234742288)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1476560179 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR('%f{\rU㡡')))OR(0.9553954167007674)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-826247048 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (- (x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1453507719'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-84669420'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2101396839 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1817653589 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8371034614954544)GLOB(NULL)))<=(0.2327228644637943)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM) NOT BETWEEN ((NOT ('1163255645'))) AND ((((0.8933840921850164)) NOT BETWEEN (('')) AND (('1536158293'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(1239369134 AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.25013595007501144)) NOT BETWEEN ((((x'')GLOB('tv')))) AND ((UPPER(DISTINCT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1343215281 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-527578139 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-57046238 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-359875677 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '543464874 sz=2018092234 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.15843013574172582)IS(0.8485808335015909))  WHEN NULL COLLATE NOCASE THEN NULL COLLATE RTRIM ELSE (((0.34924712376255695, '-1952546862', 0.5322591489634196)) NOT BETWEEN ((x'', 0X2fbd81ec, x'382e1a32')) AND ((NULL, NULL, NULL))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.6412759547337465)OR(NULL)))AND('-499751573')))OR((NULL IN ()))))AND(((((0.49681849998544003)AND(x'2ccf')))AND('潦')))))AND((('-320046400') IS FALSE))))AND(HEX(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1190823579 sz=22484780 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('823280688') NOTNULL) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1144418 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 198388170 sz=787084490 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 1832410153 sz=-1525803978 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT (((-1758800824))>((0.9652523530020618)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-375071074 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=711584919'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('3c' AS INTEGER))%((((0.051856921117214516)) BETWEEN (('h\')) AND (('%4o{w'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT 0.19463237727404492, 1565926913) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-587248753 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2088501812 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0X627ee44f THEN NULL ELSE '-2095157512' END)&((NULL IN ('140769901', -367007763)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1360611548 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.856274525832623 AS NUMERIC)) BETWEEN (json('')) AND (((NULL) NOT BETWEEN (x'') AND (0.7196503344945889)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.826435951662794, NULL, '60314923')) NOT BETWEEN ((0.2567855951746827, CAST(-3.59875677E8 AS BLOB), NULL)) AND (('!s.' COLLATE RTRIM, ((0.6559749291676236)>>(0.8090166445407583)), ((NULL) BETWEEN ('|%A\*X') AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1002641775 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-999248791 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<<(x''))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1127626113 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE 0.6622832895779338  WHEN '198388170' THEN 0.4312065953451213 WHEN '-\r' THEN 0xffffffffe9a4de9e WHEN NULL THEN 0.8406435657895539 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1230358406'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-867350691 sz=-1301752599 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-210025525 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X7b411fe3)>>('-1453507719'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-742528885 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '888241757'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-840753749 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=227951503 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1069085192 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-296623792 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1286146206 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')OR(0.7907115703017767)))AND(''))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1300155066 0 sz=572595581 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1801859572 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1468121475 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ ('')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2038096314 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('ER㖷t鏻Ip')%('')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=255179052 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1299411934'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('SK', '1595995014', NULL))<(('1290678334', 0.40342929382211945, NULL))))<=((('-291117323')>(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'' AS INTEGER)  WHEN NULL COLLATE BINARY THEN (('') NOT NULL) ELSE CASE WHEN 0.1529519296831523 THEN 0.2273102837959915 ELSE NULL END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) NOT BETWEEN (-487448283) AND (0.7580783357665261)) THEN (+ ('8f')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1175299794 sz=1472739109 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-237969454 sz=-1439337479 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-840753749 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1053247358') BETWEEN (x'') AND (NULL))) NOT BETWEEN (((((NULL)AND(x'')))AND(x'2c17'))) AND (CASE x''  WHEN '1907695964' THEN x'e6f7b79b' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'', 0.37066358452901194, 0.15473599459121978, '')) BETWEEN ((CAST('nLlb+' AS TEXT), 0.020770026417308185 COLLATE NOCASE, CAST(-1255849691 AS TEXT), x'' COLLATE NOCASE, IFNULL(DISTINCT x'9adc', '1267231796'))) AND (((NOT (0.5971725167970058)), 0.45621057511652297 COLLATE BINARY, ((NULL)<=(-193000123)), (('1859182032')+(-1.536428162E9)), (('<vU')&(x'a521'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '316367265 0 sz=-1431873759 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-587248753'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=248134693 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.18900403966829593) NOT BETWEEN (0.060621349517191114) AND ('0.8054777309384631')))OR(((0.6086964426894772) ISNULL))))OR((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN (NULL)))>>(((((-756994782)AND('-827241225')))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((RTRIM(-745195714), ((NULL)/(NULL)), ((0.0639647756650068) IS TRUE)))<((((0.7091143747832904)|(NULL)), (('-1758800824') ISNULL), CASE ']1'  WHEN '-938620617' THEN 0.08987486171364312 WHEN NULL THEN '*ml\NF' WHEN NULL THEN 0.2682376771842092 WHEN -2.095157512E9 THEN 0.6490443705636761 WHEN NULL THEN '⯃8>\r⡉RyEO' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(((NULL)|(NULL)), (((x'')) NOT BETWEEN (('uw!pwds')) AND (('u[')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'798b' COLLATE RTRIM AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '977253249'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-748815875 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-840599388 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1530336647 sz=1276065351 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.08987486171364312, 229089670, 0.17169566740000575))<=((-840753749, NULL, '-1941321779'))))>>((('Jm+\nt#L')>=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0Xffffffff9400d565)OR(NULL)))OR((((0.6195940260935626, x'', ''))=(('-30392699', NULL, x'f8ab3d7862d4'))))))AND(((NULL) BETWEEN (1601722048) AND (711584919)))))AND((((0.21834082185701964))>(('1933134019'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')|('jV㭹l6Is')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE((('-1114340803')>>(7.80441847E8))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1323686106 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.28097657209323457 COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('FALSE') NOT BETWEEN (NULL) AND (NULL)))-(x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'start of day'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2119842530 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0X2efeed10) IS FALSE) THEN (('-1733139801') BETWEEN ('1013122199') AND (0.7260807236226581)) WHEN 0.39983146667481695 THEN ((0Xffffffffbaf8a683) NOTNULL) WHEN (+ (0x13e0f3b8)) THEN 0X6718def4 COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-518227383 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=895605700 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1894112127 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=603213247 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1940797314 1338357223 sz=-227700098 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((~ ('-1834305807')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-587248753 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((1.360611548E9)GLOB(NULL)) THEN CASE WHEN 0.15527790245747464 THEN '[' END WHEN ((((NULL)OR('K6')))AND(x'c598')) THEN CAST(0.6705330429499805 AS INTEGER) WHEN 75046720 COLLATE BINARY THEN (0.26945680902512936 IN ()) ELSE TRIM('[tIk3i', 0.048199171242738315) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1105710117'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-806844097'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NOT ('mlTKg')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1312736862 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2079866553 -1792167363 sz=-1957955530 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-748815875')>=(NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-509880702'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (x'')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-57046238'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1476560179 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1114933388 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -2028196205 COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((+ (NULL)), ((7.504672E7)OR(0Xffffffffead970fb))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1705583616')IS(0.18894742712885193 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0.24165021797260022)AND(x'')))AND(NULL)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1524179596 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('j%\rNvk')) NOT BETWEEN (((((('㤣QU')AND(0X5883b671)))OR('584338493')))) AND ((-1368390425))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.249039926801632  WHEN NULL THEN 0.2556319441556748 END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=184402003 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7128287588981922 IN ()))AND(TRIM(DISTINCT NULL, '-772255852'))))AND((((0x383d91b0)) BETWEEN ((0.18048316333758851)) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY((NULL IN ()), CASE WHEN x'' THEN NULL END, ((0.4885600241107311) IS TRUE), (+ ('#1')), NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1024688255 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) ISNULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('iK㰦Y2 j}')<=('-1713750374')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') NOT BETWEEN (x'') AND (NULL)) THEN NULL COLLATE NOCASE WHEN CAST(NULL AS REAL) THEN '[]' WHEN ((-210025525) NOTNULL) THEN json_valid(0xffffffffae4efc08) ELSE (((0.47900132351871005, 1086612618, '-82736965')) BETWEEN (('', 0.7720306756969411, 0.5442633096738544)) AND ((0X475f3b2a, x'', ''))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.10310953104786968 IN ('-1674770613'))))<=((0x487b20e9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=198388170'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-806844097 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-942776398')GLOB(1854020105)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1175299794 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((('')AND(0xffffffffd9c372da)))OR(2019236818)))||(((1569755267) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=32389163 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8138382852668521))!=(('nH*Y')))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-799589780'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1453507719 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (PRINTF(0.4346593432944744) IN ((~ (0.4262980100171122)), ((1.759440222E9)|(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'1142') NOT BETWEEN (x'') AND ('UA}5Z*')))>>(((((((((NULL)OR(0.7135150870607493)))AND('')))AND('-0.0')))OR(0.15180804448648044)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-2095157512')OR('now~淓')))OR('841583479')))IS NOT((NULL IN ('2088501812', 0xffffffffcec07878)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1589077180 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((rtreenode(NULL, 0.4283821947038795))AND(((NULL)<=('Jn,-{h')))))OR(CAST('-990792303' AS BLOB))))OR((('YU') NOT BETWEEN (NULL) AND (NULL)))))AND(CASE WHEN x'a4d71600' THEN x'f014' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('T*7Q\rd')==('-1240927424'))))<=(((((('543464874')AND(0.13884244960496595)))OR(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-491304084'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'' COLLATE RTRIM  WHEN ((((((((0.37496542048599035)OR(0.5494296578033129)))AND('i\5r''e~IK')))OR(x'858fb7ee')))AND('')) THEN ((x'')>(-1.370555384E9)) ELSE (x'' IN ('', '')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1952546862 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.31353655707006634 IN (json_extract(0xffffffff8ce0c0bb, x'e15f'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7076676320528682; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-748815875'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1237733211 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN '1286146206' THEN NULL WHEN '-204224245' THEN NULL WHEN -3.68127626E8 THEN NULL ELSE '198388170' END IN ((('f>c') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1553933847 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (x''))  WHEN (((NULL)) NOT BETWEEN ((0.7767611963017742)) AND ((x''))) THEN ((x'')OR(x'')) WHEN (((NULL, x'', NULL)) BETWEEN ((NULL, NULL, 0.3731514920365776)) AND (('-354848517', NULL, x''))) THEN ((0.5220729688428056)/(0.2636994879406561)) WHEN (('1142682497')=(x'')) THEN CASE WHEN NULL THEN NULL ELSE 'u' END ELSE UNLIKELY(0.6378646949445909) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0X4251f36 WHEN NULL THEN '' WHEN 0.13534367700483396 THEN NULL END) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<(0.6938980488327396))) IS TRUE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ (''))))>((0.783374012985071 COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((json_quote(NULL))AND(CAST('H*J' AS NUMERIC))))OR((('-88017901')IS NOT('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('135662362') IS FALSE)  WHEN NULL THEN CAST(0.036703978630773126 AS TEXT) ELSE (('W-M1|')-(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=614062788 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (0.9123380984448809)))OR(CAST(NULL AS TEXT))))OR((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-204224245 0 sz=1003425436 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2119163620 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1197487132 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN x'' WHEN 0.3647451683816083 THEN '22484780' WHEN 22484780 THEN 0.9870600478661362 END)GLOB(((((0.49974830035954365)AND(NULL)))AND(0.6188910299398622)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=541434666 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -175975563'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-359875677 sz=54529410 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1160978919 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1635947065 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-990792303 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1343215281 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((0.2682376771842092)/('⇓Od}y')))) AND ((CAST('' AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1321907714 sz=-1369127827 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1521304164 IN ()))!=(((NULL)%('1GXLDU蜈\ne')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1920591362 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'550e')>=(((',P{V+2<RR') BETWEEN (NULL) AND (-1317106340)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1565926913 sz=858444337 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 4 sz=953143008 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1413163194'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=672968359 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '901217250 733486654 sz=436352646 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-514095992 sz=1397749890 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2100044755 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2047932482'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-545629392 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=895605700 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) NOT BETWEEN (0xffffffffe9a5eb0d COLLATE RTRIM) AND ((((NULL, -990792303, '1042764501', '318845752', x''))<>((2146910164, NULL, 0.2444648087074509, 0.4470366107385624, '-1512478466'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=('-1602143717')))LIKE(json_patch(x'', 'hSU嵆'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'fa3d'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((((0.173245828703523))<((x''))))) AND ((((x'')OR(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1619758077 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'Mvm稛HSpw['; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2106258735 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1697209018') NOTNULL))OR((- ('')))))OR(((x'8db9') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_remove('}<_Ah,5T]', 0.7941689987550626, '븛8	Ecf,', '-420502919')) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1859182032 sz=2056295723 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1682144748 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.048199171242738315)OR(x'')))OR('1187778379')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.6711598168591051)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.9108304673968151)AND(0.9045754974524276)))OR(x'')))AND('-571076806')))OR(0.6734059773105375)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('a摲')) BETWEEN ((CASE 'Ul㻿!'  WHEN 0.07019208108530561 THEN 0.6886964676634599 WHEN 0.2938120099526147 THEN NULL WHEN x'8df6' THEN x'' ELSE x'' END)) AND ((x'7557'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2035459304 sz=-1357228160 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-748815875')>=(NULL))  WHEN CAST(0.4429047371163639 AS REAL) THEN LIKELIHOOD(0.7332064211056131, 0.8799766348002779) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2050419905'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN '140769901' THEN x'' WHEN x'' THEN '{QEY' WHEN x'' THEN NULL END AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1189846028 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-450514825'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1240927424'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) ISNULL)  WHEN (NOT (x'27cc0e56')) THEN ((0.5498436271812988)LIKE(-1.175299794E9)) WHEN ((']㵴o ')!=('0.8377194525153883')) THEN (('') NOT NULL) WHEN ABS(DISTINCT '%i+ykYT}B') THEN ((0.6173145654536316)>(0.9643511482634302)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-1590710578 AS TEXT))IS((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL))>=(((x'0c46')LIKE(0.04942047929263238)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' AS BLOB); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(x'2a55'))>(((((((((x'')AND(NULL)))OR(x'')))OR(NULL)))OR('-497845670')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1005214255 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1439337479'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN NULL THEN '785250239' ELSE NULL END)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-623690692 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1476885069 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1511119598'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1144718102 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-806844097 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-57046238)) BETWEEN ((CASE NULL  WHEN '	xsf~z' THEN 213266656 ELSE '' END)) AND ((NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-537972439 -1154863536 sz=-1935317837 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (0.43629851373493356 IN ()) THEN (('1909415466')AND(0X511948dc)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-320046400 0 sz=-246434220 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=981515205'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.8724797350582474 AS TEXT)) BETWEEN (CASE NULL  WHEN '-2134868691' THEN NULL END) AND (CAST('o䓆' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=374758564'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('')<=('[B19')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1323686106 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1783137179 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')OR('-337429468')))OR(NULL)))*(CAST(x'' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=841583479'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1536428162 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1295331132 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('780441847' AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=671707175 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-708265121 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1854918577 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=234869202 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.14200776141189342) IS TRUE) THEN -2.04224245E8 END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')<=('')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-339318398'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN ((0.6361576890646855)) AND ((NULL)))) NOT BETWEEN (x'fdb9') AND (0.36933083181282167)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '883162979 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '714059836 -1628532175 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) BETWEEN (x'642e') AND ('1962993714')))OR(((((0.5076704620990504)AND('-1310126650')))AND('-66002942')))))AND(((((x'')OR(NULL)))AND(x'')))))OR(((((x'8789')AND(NULL)))OR(x'eeaa')))))AND(((0.0869928404289183)<=(x'd111')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=895605700 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1197423402 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-30392699')LIKE('')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-649932616'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 sz=-1188252773 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('I灻Hzx')AND(((x'c887')>=(NULL)))))AND((('108316139') ISNULL))))AND(CAST('u AS\' AS NUMERIC))))OR((('-1907763056') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.1587763393929672; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN ('IqQVSK\nod') AND (NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1765122976 sz=1878154310 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 'J' THEN x'' END) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS FALSE)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.8131746651988073)))<(((NULL)AND(-210025525)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<(0.7618713462749451))) NOT BETWEEN ((((NULL, 0Xfffffffffb1188bb, 0.530835748334895))!=((0.24229557781588185, '297900001', NULL)))) AND (CASE WHEN x'' THEN 0.5944792852644957 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9515270933068718 IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('0.6780145825962042')AND(x'')))AND(0.29439440839645614)))AND((+ ('-1025973278')))))OR(UNLIKELY(DISTINCT '-12048351'))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=436562822 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2100413750 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-990792303'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=258845970 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1952546862 1929312941 sz=198388170 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1045863035 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1098200669 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1606653814 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(3.18845752E8 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-217120319 sz=1709274593'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1879972255 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'V졾3xw {&N'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6629932632388074) BETWEEN (-957986904) AND (NULL)))LIKE(((x'') BETWEEN ('2135015260') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR IGNORE rt0 SET (c5)=(0.4697475239512797); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(0x54c2976) WHERE (((((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c1))))=((rt0.c5 COLLATE RTRIM))); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
PRAGMA mmap_size = -2161676905192812797; -- 0ms;
UPDATE rt1 SET c2=0x32298b77, c0=0x20649daa, c1='-690770121'; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=-368127626, c4=x'4aaf' WHERE x''; -- 0ms;
INSERT OR IGNORE INTO rt0(c6, c3, c2) VALUES (0.31697991595629726, x'ed395dcd', '7ss,|.'); -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=('DDe\Es	2Q') WHERE (NOT ((((rt1.c1, rt1.c1, rt1.c2))=((rt1.c1, rt1.c2, rt1.c1))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt1 SET c2=9.81515205E8; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c5, c4, c1, c3, c6) VALUES (NULL, 629679553, x'', NULL, 8.58444337E8, '1270965317'), ('UT', 0.43234881513023316, NULL, NULL, 0.04849015238966303, x'6fa1'), ('-1319803503', 0.8763020529697633, x'', x'', NULL, x''); -- 0ms;
PRAGMA mmap_size = -6052197082572915879; -- 0ms;
UPDATE OR REPLACE rt0 SET c0='858444337'; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.defer_foreign_keys = true; -- 0ms;
END; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c5, c6, c4, c3, c1, c2) VALUES (0.6118802074618834, 0xffffffff97c6e8c7, 0.9843030260688893, '0.23613544162539768', 1.859182032E9, x'', x''); -- 0ms;
INSERT OR ABORT INTO rt1 VALUES (NULL, '', NULL), ('-1200395811', x'', 0.7497833292433834), ('{', '', '1662585579'); -- 0ms;
PRAGMA temp.locking_mode = EXCLUSIVE; -- 0ms;
UPDATE rt1 SET c1=x'' WHERE CASE WHEN ((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)) THEN ((((0.4653207981606978)AND(rt1.c1)))OR(rt1.c0)) ELSE x'' END; -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (NULL, 0.09855406389909649, 'P\/h', x'', '1263054563', 0.9505049829840566, 0X32305fd6), ('f7', x'a2b4', NULL, '?+', 0.006203597106321901, '316921004', ''), (0.9965558222772194, -1656341330, 'Tb', '0.9643511482634302', 0.9802490406701693, x'', NULL), ('F\nK%}p', NULL, 'SC롙	', x'', '-82736965', 0.3782820060984089, 'N4'), (x'', NULL, '-901128831', NULL, NULL, NULL, NULL), ('-931583357', '텶v1h2J', 'Wo烚', ' 㡹\n泎23', NULL, NULL, ''), (0.08757193717200129, '-601479148', x'', 0.49388259980042526, 0.9025036747456396, 0x539c58df, '1416149447'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c0, c1) VALUES (NULL, 1.239369134E9, 0.6217575380189218), ('F.>\rwꨆ8\r', '->J{zn#l', 0Xffffffffbff9288d), ('p)', '781908069', 0.6417152560590539); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA automatic_index; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c0, c3, c5, c6) VALUES ('', NULL, '~(', '1733782316', '140769901'); -- 1ms;
PRAGMA soft_heap_limit; -- 0ms;
INSERT OR REPLACE INTO rt1(c0, c2) VALUES (0.9461393703976986, NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES ('-190929763'); -- 0ms;
UPDATE rt0 SET c3=1245750616, c1=0.679089808659542; -- 0ms;
UPDATE OR FAIL rt1 SET (c1)=(x'5443'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1, c0) VALUES (0.3917878629485161, 0.6073007798681487), ('\c3', x'c255'), (0.08219547347954737, 0.18997793910646965); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3, c0, c6) VALUES ('', 0Xffffffffc99cca1b, 0.8229876351328473, x''), (0.791807363493756, NULL, 0.3177597441851311, 'Sz	h5M\&'), ('氐c', x'', -210944384, 0.7644518060793889); -- 0ms;
PRAGMA temp.auto_vacuum; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0) VALUES (0Xffffffffcfe8893f), (NULL), ('-877699955'); -- 1ms;
PRAGMA main.wal_autocheckpoint = -6939415367566554230; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i30 ON t0(((((c0) NOT NULL))OR(((c0)*('-204224245')))) DESC) WHERE 0.13091885728344743; -- 0ms;
PRAGMA temp.stats; -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('598125184'), (NULL), (NULL); -- 0ms;
CREATE UNIQUE INDEX i89 ON t0((((c0)*(c0)) IN ()) COLLATE NOCASE ASC); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i64 ON t0((~ (((c0) NOT NULL))) COLLATE NOCASE DESC) WHERE (('Wu') BETWEEN (CASE c0  WHEN c0 THEN c0 END) AND ((((c0)) NOT BETWEEN ((c0)) AND ((c0))))); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c2, c6, c4, c5) VALUES ('[WY#5', 0.316915139357802, '-888497065', '-840753749', x''), ('-450514825', NULL, '108265820', x'8582', x'dd91'), (x'', 0.5844420155618608, 0xffffffffe23bedfb, NULL, NULL), ('-320046400', 'x\r!%㽘', -201847049, NULL, NULL), ('-213846254', NULL, 'Ṉ', NULL, ''); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('-685370293'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.906506028323173), (0.6492845208763516), (x''); -- 0ms;
UPDATE OR ABORT rt1 SET (c2)=(0.009613165271216806); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1) VALUES ('0硸7zn'); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
VACUUM; -- 1ms;
UPDATE OR IGNORE rt1 SET c0='愺7ey?', c0=x'a08f' WHERE PRINTF(CAST(rt1.c0 AS TEXT)); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=x'adeb'; -- 0ms;
UPDATE OR ABORT t0 SET c0=x'' WHERE (((t0.c0)) BETWEEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((t0.c0 COLLATE RTRIM))); -- 0ms;
ANALYZE rt0; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR ROLLBACK rt1 SET c2='-1312736862', c0=x'e2c93b3d', c2='5&'; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=x''; -- 1ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 0ms;
ANALYZE i30; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''), (0.636779917487827), (x'1888'); -- 1ms;
INSERT OR IGNORE INTO rt0(c4) VALUES (x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE t0; -- 1ms;
PRAGMA foreign_keys; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c15; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0, c2) VALUES (x'59b9', '1262999714', x'0fcd'); -- 0ms;
UPDATE OR IGNORE t0 SET (c15)=(0.492294896146918) WHERE (NOT (CASE t0.c15  WHEN t0.c15 THEN t0.c15 WHEN t0.c15 THEN t0.c15 WHEN t0.c15 THEN 0.015857287317686097 ELSE t0.c15 END)); -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
UPDATE OR IGNORE rt1 SET c2='-1240927424'; -- 0ms;
PRAGMA main.defer_foreign_keys = true; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=NULL WHERE CAST(((((((((rt0.c5)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c6)) AS REAL); -- 0ms;
ANALYZE rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR REPLACE INTO rt1(c2) VALUES (0.6417911573322409); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN t0 ON ((CASE rt1.c1  WHEN t0.c0 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c3 WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)OR(((rt0.c4)!=(rt0.c0)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN t0 ON ((CASE rt1.c1  WHEN t0.c0 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c3 WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)OR(((rt0.c4)<>(rt0.c0)))));
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN t0 ON ((CASE rt1.c1  WHEN t0.c0 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c3 WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)OR(((rt0.c4)!=(rt0.c0)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN t0 ON ((CASE rt1.c1  WHEN t0.c0 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c3 WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)OR(((rt0.c4)<>(rt0.c0)))));
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN t0 ON ((CASE rt1.c1  WHEN t0.c0 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c3 WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END)OR(((rt0.c4)!=(rt0.c0)))) WHERE (rt0.c1);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1) NOTNULL), (NOT (rt1.c2)), (- (rt1.c1))))>=(((NOT (rt1.c2)), ((rt1.c1) IS TRUE), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))))) ORDER BY CASE WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1) NOTNULL), (NOT (rt1.c2)), (- (rt1.c1))))>=(((NOT (rt1.c2)), ((rt1.c1) IS TRUE), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1) NOTNULL), (NOT (rt1.c2)), (- (rt1.c1))))>=(((NOT (rt1.c2)), ((rt1.c1) IS TRUE), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))))) ORDER BY CASE WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1) NOTNULL), (NOT (rt1.c2)), (- (rt1.c1))))>=(((NOT (rt1.c2)), ((rt1.c1) IS TRUE), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1) NOTNULL), (NOT (rt1.c2)), (- (rt1.c1))))>=(((NOT (rt1.c2)), ((rt1.c1) IS TRUE), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))))) ORDER BY CASE WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END COLLATE NOCASE DESC;
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM FULL OUTER JOIN rt1 ON CASE CASE rt0.c5  WHEN -912471525 THEN rt0.c4 END  WHEN ((((rt1.c2)AND(rt0.c4)))OR(rt1.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c3 END ELSE UPPER('-1301844078') END WHERE ((rt0.c6 IN (CASE WHEN rt0.c4 THEN rt1.c1 WHEN rt0.c0 THEN '' WHEN rt0.c2 THEN rt1.c2 END, (+ (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((rt0.c6 IN (CASE WHEN rt0.c4 THEN rt1.c1 WHEN rt0.c0 THEN '' WHEN rt0.c2 THEN rt1.c2 END, (+ (rt0.c4))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM FULL OUTER JOIN rt1 ON CASE CASE rt0.c5  WHEN -912471525 THEN rt0.c4 END  WHEN ((((rt1.c2)AND(rt0.c4)))OR(rt1.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c3 END ELSE UPPER('-1301844078') END);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM FULL OUTER JOIN rt1 ON CASE CASE rt0.c5  WHEN -912471525 THEN rt0.c4 END  WHEN ((((rt1.c2)AND(rt0.c4)))OR(rt1.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c3 END ELSE UPPER('-1301844078') END WHERE ((rt0.c6 IN (CASE WHEN rt0.c4 THEN rt1.c1 WHEN rt0.c0 THEN '' WHEN rt0.c2 THEN rt1.c2 END, (+ (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((rt0.c6 IN (CASE WHEN rt0.c4 THEN rt1.c1 WHEN rt0.c0 THEN '' WHEN rt0.c2 THEN rt1.c2 END, (+ (rt0.c4))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM FULL OUTER JOIN rt1 ON CASE CASE rt0.c5  WHEN -912471525 THEN rt0.c4 END  WHEN ((((rt1.c2)AND(rt0.c4)))OR(rt1.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c3 END ELSE UPPER('-1301844078') END);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM FULL OUTER JOIN rt1 ON CASE CASE rt0.c5  WHEN -912471525 THEN rt0.c4 END  WHEN ((((rt1.c2)AND(rt0.c4)))OR(rt1.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c3 END ELSE UPPER('-1301844078') END WHERE ((rt0.c6 IN (CASE WHEN rt0.c4 THEN rt1.c1 WHEN rt0.c0 THEN '' WHEN rt0.c2 THEN rt1.c2 END, (+ (rt0.c4)))));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((((rt0.c2) NOT NULL))OR((NOT (rt0.c4)))))OR((rt0.c6 IN ())))) ORDER BY (((((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c0))))>((rt0.c3)))  NULLS FIRST, CAST(CAST(rt0.c0 AS REAL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT NULL))OR((NOT (rt0.c4)))))OR((rt0.c6 IN ())))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (((((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c0))))>((rt0.c3)))  NULLS FIRST, CAST(CAST(rt0.c0 AS REAL) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((((rt0.c2) NOT NULL))OR((NOT (rt0.c4)))))OR((rt0.c6 IN ())))) ORDER BY (((((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c0))))>((rt0.c3)))  NULLS FIRST, CAST(CAST(rt0.c0 AS REAL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT NULL))OR((NOT (rt0.c4)))))OR((rt0.c6 IN ())))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (((((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c0))))>((rt0.c3)))  NULLS FIRST, CAST(CAST(rt0.c0 AS REAL) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((((rt0.c2) NOT NULL))OR((NOT (rt0.c4)))))OR((rt0.c6 IN ())))) ORDER BY (((((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c0))))>((rt0.c3)))  NULLS FIRST, CAST(CAST(rt0.c0 AS REAL) AS NUMERIC);
SELECT ALL * FROM rt1, rt0, t0 WHERE (CAST(rt0.c3 COLLATE RTRIM AS REAL)) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t0 WHERE (CAST(rt0.c3 COLLATE RTRIM AS REAL)) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t0 WHERE (CAST(rt0.c3 COLLATE RTRIM AS REAL)) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c5)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c1)AND(rt0.c5)))AND(rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c5)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c1)AND(rt0.c5)))AND(rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c5)))AND(rt0.c2)))));
SELECT * FROM rt0, rt1, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY rt1.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((rt0.c3) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((rt0.c3) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((rt0.c3) IS TRUE)) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE ((+ (rt0.c1))) ORDER BY ((CAST('0.5371588449287636' AS NUMERIC))||(rt0.c3 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST('0.5371588449287636' AS NUMERIC))||(rt0.c3 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((+ (rt0.c1))) ORDER BY ((CAST('0.5371588449287636' AS NUMERIC))||(rt0.c3 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST('0.5371588449287636' AS NUMERIC))||(rt0.c3 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((+ (rt0.c1))) ORDER BY ((CAST('0.5371588449287636' AS NUMERIC))||(rt0.c3 COLLATE RTRIM))  NULLS FIRST;
SELECT * FROM rt1, rt0 WHERE (((DATETIME(rt0.c6, rt0.c6, NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(rt0.c6, rt0.c6, NULL)) IS FALSE)) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED);
SELECT * FROM rt1, rt0 WHERE (((DATETIME(rt0.c6, rt0.c6, NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(rt0.c6, rt0.c6, NULL)) IS FALSE)) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED);
SELECT * FROM rt1, rt0 WHERE (((DATETIME(rt0.c6, rt0.c6, NULL)) IS FALSE));
SELECT * FROM t0, rt1, rt0 WHERE (CAST(LIKELY(rt0.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(rt0.c2) AS INTEGER)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (CAST(LIKELY(rt0.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(rt0.c2) AS INTEGER)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (CAST(LIKELY(rt0.c2) AS INTEGER));
SELECT ALL * FROM rt0, t0, rt1 WHERE (0.7343300084825125) ORDER BY 1.506256982E9 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7343300084825125) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY 1.506256982E9 ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0, rt1 WHERE (0.7343300084825125) ORDER BY 1.506256982E9 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7343300084825125) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY 1.506256982E9 ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0, rt1 WHERE (0.7343300084825125) ORDER BY 1.506256982E9 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)) COLLATE BINARY) ORDER BY CASE WHEN '' THEN ((((rt1.c1)OR(1.476560179E9)))AND(rt1.c2)) WHEN ((rt1.c2)<=(rt1.c2)) THEN rt1.c1 WHEN ((rt1.c1)LIKE(rt1.c2)) THEN (NOT (0.8620320391259766)) WHEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END THEN (rt1.c2 IN (rt1.c1, rt1.c1)) WHEN ((rt1.c0)==(rt1.c1)) THEN ((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)))OR(x'91cc')))OR(rt1.c1)) WHEN LIKELIHOOD(DISTINCT x'', 0.5019577471484363) THEN json(rt1.c2) WHEN ((rt1.c0) NOT BETWEEN (0.21834082185701964) AND (rt1.c2)) THEN ((rt1.c2)OR(rt1.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN '' THEN ((((rt1.c1)OR(1.476560179E9)))AND(rt1.c2)) WHEN ((rt1.c2)<=(rt1.c2)) THEN rt1.c1 WHEN ((rt1.c1)LIKE(rt1.c2)) THEN (NOT (0.8620320391259766)) WHEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END THEN (rt1.c2 IN (rt1.c1, rt1.c1)) WHEN ((rt1.c0)==(rt1.c1)) THEN ((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)))OR(x'91cc')))OR(rt1.c1)) WHEN LIKELIHOOD(DISTINCT x'', 0.5019577471484363) THEN json(rt1.c2) WHEN ((rt1.c0) NOT BETWEEN (0.21834082185701964) AND (rt1.c2)) THEN ((rt1.c2)OR(rt1.c2)) END ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)) COLLATE BINARY) ORDER BY CASE WHEN '' THEN ((((rt1.c1)OR(1.476560179E9)))AND(rt1.c2)) WHEN ((rt1.c2)<=(rt1.c2)) THEN rt1.c1 WHEN ((rt1.c1)LIKE(rt1.c2)) THEN (NOT (0.8620320391259766)) WHEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END THEN (rt1.c2 IN (rt1.c1, rt1.c1)) WHEN ((rt1.c0)==(rt1.c1)) THEN ((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)))OR(x'91cc')))OR(rt1.c1)) WHEN LIKELIHOOD(DISTINCT x'', 0.5019577471484363) THEN json(rt1.c2) WHEN ((rt1.c0) NOT BETWEEN (0.21834082185701964) AND (rt1.c2)) THEN ((rt1.c2)OR(rt1.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN '' THEN ((((rt1.c1)OR(1.476560179E9)))AND(rt1.c2)) WHEN ((rt1.c2)<=(rt1.c2)) THEN rt1.c1 WHEN ((rt1.c1)LIKE(rt1.c2)) THEN (NOT (0.8620320391259766)) WHEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END THEN (rt1.c2 IN (rt1.c1, rt1.c1)) WHEN ((rt1.c0)==(rt1.c1)) THEN ((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)))OR(x'91cc')))OR(rt1.c1)) WHEN LIKELIHOOD(DISTINCT x'', 0.5019577471484363) THEN json(rt1.c2) WHEN ((rt1.c0) NOT BETWEEN (0.21834082185701964) AND (rt1.c2)) THEN ((rt1.c2)OR(rt1.c2)) END ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)) COLLATE BINARY) ORDER BY CASE WHEN '' THEN ((((rt1.c1)OR(1.476560179E9)))AND(rt1.c2)) WHEN ((rt1.c2)<=(rt1.c2)) THEN rt1.c1 WHEN ((rt1.c1)LIKE(rt1.c2)) THEN (NOT (0.8620320391259766)) WHEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END THEN (rt1.c2 IN (rt1.c1, rt1.c1)) WHEN ((rt1.c0)==(rt1.c1)) THEN ((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)))OR(x'91cc')))OR(rt1.c1)) WHEN LIKELIHOOD(DISTINCT x'', 0.5019577471484363) THEN json(rt1.c2) WHEN ((rt1.c0) NOT BETWEEN (0.21834082185701964) AND (rt1.c2)) THEN ((rt1.c2)OR(rt1.c2)) END ASC;
SELECT ALL * FROM t0, rt1 WHERE ((+ (446385123))) ORDER BY '1865985696'  NULLS FIRST, (((rt1.c1)<<(t0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((+ (446385123))) IS TRUE)  as count FROM t0, rt1 ORDER BY '1865985696'  NULLS FIRST, (((rt1.c1)<<(t0.c0)) IN ()) ASC);
SELECT ALL * FROM t0, rt1 WHERE ((+ (446385123))) ORDER BY '1865985696'  NULLS FIRST, (((rt1.c1)<<(t0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((+ (446385123))) IS TRUE)  as count FROM t0, rt1 ORDER BY '1865985696'  NULLS FIRST, (((rt1.c1)<<(t0.c0)) IN ()) ASC);
SELECT ALL * FROM t0, rt1 WHERE ((+ (446385123))) ORDER BY '1865985696'  NULLS FIRST, (((rt1.c1)<<(t0.c0)) IN ()) ASC;
SELECT COUNT(*) FROM t0, rt1 WHERE (((0.8182797161823657) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c2 WHEN 0.11738403957477872 THEN '774604805' WHEN rt1.c1 THEN x'5815' END) AND (t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((0.8182797161823657) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c2 WHEN 0.11738403957477872 THEN '774604805' WHEN rt1.c1 THEN x'5815' END) AND (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (((0.8182797161823657) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c2 WHEN 0.11738403957477872 THEN '774604805' WHEN rt1.c1 THEN x'5815' END) AND (t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((0.8182797161823657) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c2 WHEN 0.11738403957477872 THEN '774604805' WHEN rt1.c1 THEN x'5815' END) AND (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (((0.8182797161823657) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c2 WHEN 0.11738403957477872 THEN '774604805' WHEN rt1.c1 THEN x'5815' END) AND (t0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 NOT INDEXED, rt1, t0 INDEXED BY i64 WHERE (((0.1553491559364255)>>(((((x'')OR(rt1.c2)))AND(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ((((0.1553491559364255)>>(((((x'')OR(rt1.c2)))AND(rt0.c5))))) IS TRUE)  as count FROM rt0, rt1, t0 INDEXED BY i64);
SELECT COUNT(*) FROM rt0 NOT INDEXED, rt1, t0 INDEXED BY i64 WHERE (((0.1553491559364255)>>(((((x'')OR(rt1.c2)))AND(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ((((0.1553491559364255)>>(((((x'')OR(rt1.c2)))AND(rt0.c5))))) IS TRUE)  as count FROM rt0, rt1, t0 INDEXED BY i64);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END AS REAL)) ORDER BY (((((- (rt1.c2)))OR(-1512478466)))OR((rt1.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY (((((- (rt1.c2)))OR(-1512478466)))OR((rt1.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END AS REAL)) ORDER BY (((((- (rt1.c2)))OR(-1512478466)))OR((rt1.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY (((((- (rt1.c2)))OR(-1512478466)))OR((rt1.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END AS REAL)) ORDER BY (((((- (rt1.c2)))OR(-1512478466)))OR((rt1.c0 IN ()))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(rt0.c2 COLLATE RTRIM AS REAL)) ORDER BY LOWER(((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY LOWER(((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(rt0.c2 COLLATE RTRIM AS REAL)) ORDER BY LOWER(((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY LOWER(((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(rt0.c2 COLLATE RTRIM AS REAL)) ORDER BY LOWER(((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED RIGHT OUTER JOIN rt0 ON CASE rt0.c3  WHEN rt0.c5 COLLATE BINARY THEN ((',G5<')+(rt0.c6)) WHEN ((((rt0.c3)OR(rt0.c5)))AND(rt0.c5)) THEN CASE WHEN rt0.c4 THEN rt0.c6 ELSE rt1.c0 END WHEN (+ (rt1.c0)) THEN ((x'00c0')&(rt0.c6)) END RIGHT OUTER JOIN rt1 ON IFNULL(((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c3)), rt0.c2 COLLATE BINARY) WHERE (x'') ORDER BY ((CAST(t0.c0 AS INTEGER))<=(0.5242563670456247))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CASE rt0.c3  WHEN rt0.c5 COLLATE BINARY THEN ((',G5<')+(rt0.c6)) WHEN ((((rt0.c3)OR(rt0.c5)))AND(rt0.c5)) THEN CASE WHEN rt0.c4 THEN rt0.c6 ELSE rt1.c0 END WHEN (+ (rt1.c0)) THEN ((x'00c0')&(rt0.c6)) END RIGHT OUTER JOIN rt1 ON IFNULL(((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c3)), rt0.c2 COLLATE BINARY) ORDER BY ((CAST(t0.c0 AS INTEGER))<=(0.5242563670456247))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED RIGHT OUTER JOIN rt0 ON CASE rt0.c3  WHEN rt0.c5 COLLATE BINARY THEN ((',G5<')+(rt0.c6)) WHEN ((((rt0.c3)OR(rt0.c5)))AND(rt0.c5)) THEN CASE WHEN rt0.c4 THEN rt0.c6 ELSE rt1.c0 END WHEN (+ (rt1.c0)) THEN ((x'00c0')&(rt0.c6)) END RIGHT OUTER JOIN rt1 ON IFNULL(((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c3)), rt0.c2 COLLATE BINARY) WHERE (x'') ORDER BY ((CAST(t0.c0 AS INTEGER))<=(0.5242563670456247))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CASE rt0.c3  WHEN rt0.c5 COLLATE BINARY THEN ((',G5<')+(rt0.c6)) WHEN ((((rt0.c3)OR(rt0.c5)))AND(rt0.c5)) THEN CASE WHEN rt0.c4 THEN rt0.c6 ELSE rt1.c0 END WHEN (+ (rt1.c0)) THEN ((x'00c0')&(rt0.c6)) END RIGHT OUTER JOIN rt1 ON IFNULL(((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c3)), rt0.c2 COLLATE BINARY) ORDER BY ((CAST(t0.c0 AS INTEGER))<=(0.5242563670456247))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN UPPER('') THEN LTRIM(t0.c0) WHEN t0.c0 THEN (((t0.c0, t0.c0, 0.9256142998576616, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, 0.07178181177232112)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) WHEN ((0.12115705977592306) NOTNULL) THEN ((t0.c0)OR('?萪w떑PR[')) END) ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN CASE 'H傱MKH	'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN TRIM(DISTINCT t0.c0, x'') THEN t0.c0 COLLATE BINARY WHEN (~ (t0.c0)) THEN t0.c0 ELSE CAST(t0.c0 AS NUMERIC) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER('') THEN LTRIM(t0.c0) WHEN t0.c0 THEN (((t0.c0, t0.c0, 0.9256142998576616, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, 0.07178181177232112)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) WHEN ((0.12115705977592306) NOTNULL) THEN ((t0.c0)OR('?萪w떑PR[')) END) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN CASE 'H傱MKH	'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN TRIM(DISTINCT t0.c0, x'') THEN t0.c0 COLLATE BINARY WHEN (~ (t0.c0)) THEN t0.c0 ELSE CAST(t0.c0 AS NUMERIC) END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN UPPER('') THEN LTRIM(t0.c0) WHEN t0.c0 THEN (((t0.c0, t0.c0, 0.9256142998576616, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, 0.07178181177232112)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) WHEN ((0.12115705977592306) NOTNULL) THEN ((t0.c0)OR('?萪w떑PR[')) END) ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN CASE 'H傱MKH	'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN TRIM(DISTINCT t0.c0, x'') THEN t0.c0 COLLATE BINARY WHEN (~ (t0.c0)) THEN t0.c0 ELSE CAST(t0.c0 AS NUMERIC) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER('') THEN LTRIM(t0.c0) WHEN t0.c0 THEN (((t0.c0, t0.c0, 0.9256142998576616, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, 0.07178181177232112)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) WHEN ((0.12115705977592306) NOTNULL) THEN ((t0.c0)OR('?萪w떑PR[')) END) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN CASE 'H傱MKH	'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN TRIM(DISTINCT t0.c0, x'') THEN t0.c0 COLLATE BINARY WHEN (~ (t0.c0)) THEN t0.c0 ELSE CAST(t0.c0 AS NUMERIC) END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN UPPER('') THEN LTRIM(t0.c0) WHEN t0.c0 THEN (((t0.c0, t0.c0, 0.9256142998576616, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, 0.07178181177232112)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) WHEN ((0.12115705977592306) NOTNULL) THEN ((t0.c0)OR('?萪w떑PR[')) END) ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN CASE 'H傱MKH	'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN TRIM(DISTINCT t0.c0, x'') THEN t0.c0 COLLATE BINARY WHEN (~ (t0.c0)) THEN t0.c0 ELSE CAST(t0.c0 AS NUMERIC) END ASC;
SELECT ALL * FROM rt0, t0 FULL OUTER JOIN rt1 ON (((CHANGES()))<((rt0.c4))) WHERE (((((rt0.c5) NOT BETWEEN (rt0.c2) AND ('}5')))LIKE(TYPEOF(rt1.c2)))) ORDER BY ((((t0.c0) NOTNULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c5) NOT BETWEEN (rt0.c2) AND ('}5')))LIKE(TYPEOF(rt1.c2)))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN rt1 ON (((CHANGES()))<((rt0.c4))) ORDER BY ((((t0.c0) NOTNULL)) NOT NULL));
SELECT ALL * FROM rt0, t0 FULL OUTER JOIN rt1 ON (((CHANGES()))<((rt0.c4))) WHERE (((((rt0.c5) NOT BETWEEN (rt0.c2) AND ('}5')))LIKE(TYPEOF(rt1.c2)))) ORDER BY ((((t0.c0) NOTNULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c5) NOT BETWEEN (rt0.c2) AND ('}5')))LIKE(TYPEOF(rt1.c2)))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN rt1 ON (((CHANGES()))<((rt0.c4))) ORDER BY ((((t0.c0) NOTNULL)) NOT NULL));
SELECT ALL * FROM rt0, t0 FULL OUTER JOIN rt1 ON (((CHANGES()))<((rt0.c4))) WHERE (((((rt0.c5) NOT BETWEEN (rt0.c2) AND ('}5')))LIKE(TYPEOF(rt1.c2)))) ORDER BY ((((t0.c0) NOTNULL)) NOT NULL);
SELECT * FROM rt1 NOT INDEXED WHERE (((rt1.c1 COLLATE NOCASE)<>((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE)!=((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 NOT INDEXED WHERE (((rt1.c1 COLLATE NOCASE)<>((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE)!=((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 NOT INDEXED WHERE (((rt1.c1 COLLATE NOCASE)<>((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (PRINTF(((rt0.c4) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) ORDER BY (((x''))>=((((rt0.c4) ISNULL))));
SELECT SUM(count) FROM (SELECT ((PRINTF(((rt0.c4) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((x''))>=((((rt0.c4) ISNULL)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (PRINTF(((rt0.c4) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) ORDER BY (((x''))>=((((rt0.c4) ISNULL))));
SELECT SUM(count) FROM (SELECT ((PRINTF(((rt0.c4) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((x''))>=((((rt0.c4) ISNULL)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (PRINTF(((rt0.c4) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) ORDER BY (((x''))>=((((rt0.c4) ISNULL))));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((rt0.c2 COLLATE RTRIM)>=(NULLIF(DISTINCT t0.c0, rt0.c1)))) ORDER BY (('1726880354')>=(rt0.c3 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)>=(NULLIF(DISTINCT t0.c0, rt0.c1)))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (('1726880354')>=(rt0.c3 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((rt0.c2 COLLATE RTRIM)>=(NULLIF(DISTINCT t0.c0, rt0.c1)))) ORDER BY (('1726880354')>=(rt0.c3 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)>=(NULLIF(DISTINCT t0.c0, rt0.c1)))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (('1726880354')>=(rt0.c3 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((rt0.c2 COLLATE RTRIM)>=(NULLIF(DISTINCT t0.c0, rt0.c1)))) ORDER BY (('1726880354')>=(rt0.c3 COLLATE RTRIM));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN t0 ON CAST(((rt0.c3)IS NOT(rt0.c4)) AS REAL) WHERE (CAST(((t0.c0) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT NULL) AS TEXT)) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN t0 ON CAST(((rt0.c3)IS NOT(rt0.c4)) AS REAL));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN t0 ON CAST(((rt0.c3)IS NOT(rt0.c4)) AS REAL) WHERE (CAST(((t0.c0) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT NULL) AS TEXT)) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN t0 ON CAST(((rt0.c3)IS NOT(rt0.c4)) AS REAL));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN t0 ON CAST(((rt0.c3)IS NOT(rt0.c4)) AS REAL) WHERE (CAST(((t0.c0) NOT NULL) AS TEXT));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2)IS('A83')) COLLATE BINARY) ORDER BY (- (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)IS('A83')) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (- (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2)IS('A83')) COLLATE BINARY) ORDER BY (- (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)IS('A83')) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (- (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2)IS('A83')) COLLATE BINARY) ORDER BY (- (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON (CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c1 END IN ()) CROSS JOIN rt0 ON (((CAST(rt1.c2 AS REAL)))<=(((((rt0.c5, rt0.c6, rt0.c1))<=((rt1.c1, rt0.c2, 0.3925622013038409)))))) WHERE ((((rt1.c0 IN ()))||((((1697209018, rt0.c6, rt0.c3)) BETWEEN ((rt1.c1, rt0.c0, 0.4089912352683629)) AND ((rt0.c4, x'', rt0.c5)))))) ORDER BY ((GLOB(rt1.c0, rt0.c3))<=((('1142682497')<=(rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))||((((1697209018, rt0.c6, rt0.c3)) BETWEEN ((rt1.c1, rt0.c0, 0.4089912352683629)) AND ((rt0.c4, x'', rt0.c5)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON (CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c1 END IN ()) CROSS JOIN rt0 ON (((CAST(rt1.c2 AS REAL)))<=(((((rt0.c5, rt0.c6, rt0.c1))<=((rt1.c1, rt0.c2, 0.3925622013038409)))))) ORDER BY ((GLOB(rt1.c0, rt0.c3))<=((('1142682497')<=(rt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON (CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c1 END IN ()) CROSS JOIN rt0 ON (((CAST(rt1.c2 AS REAL)))<=(((((rt0.c5, rt0.c6, rt0.c1))<=((rt1.c1, rt0.c2, 0.3925622013038409)))))) WHERE ((((rt1.c0 IN ()))||((((1697209018, rt0.c6, rt0.c3)) BETWEEN ((rt1.c1, rt0.c0, 0.4089912352683629)) AND ((rt0.c4, x'', rt0.c5)))))) ORDER BY ((GLOB(rt1.c0, rt0.c3))<=((('1142682497')<=(rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))||((((1697209018, rt0.c6, rt0.c3)) BETWEEN ((rt1.c1, rt0.c0, 0.4089912352683629)) AND ((rt0.c4, x'', rt0.c5)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON (CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c1 END IN ()) CROSS JOIN rt0 ON (((CAST(rt1.c2 AS REAL)))<=(((((rt0.c5, rt0.c6, rt0.c1))<=((rt1.c1, rt0.c2, 0.3925622013038409)))))) ORDER BY ((GLOB(rt1.c0, rt0.c3))<=((('1142682497')<=(rt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON (CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c1 END IN ()) CROSS JOIN rt0 ON (((CAST(rt1.c2 AS REAL)))<=(((((rt0.c5, rt0.c6, rt0.c1))<=((rt1.c1, rt0.c2, 0.3925622013038409)))))) WHERE ((((rt1.c0 IN ()))||((((1697209018, rt0.c6, rt0.c3)) BETWEEN ((rt1.c1, rt0.c0, 0.4089912352683629)) AND ((rt0.c4, x'', rt0.c5)))))) ORDER BY ((GLOB(rt1.c0, rt0.c3))<=((('1142682497')<=(rt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 INDEXED BY i30 NATURAL JOIN rt1 WHERE (((((rt0.c0)=(rt1.c2))) NOT BETWEEN (x'') AND ((((rt0.c0, rt1.c1, t0.c0))==((x'', rt0.c1, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)=(rt1.c2))) NOT BETWEEN (x'') AND ((((rt0.c0, rt1.c1, t0.c0))==((x'', rt0.c1, rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 INDEXED BY i30 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM t0, rt0 INDEXED BY i30 NATURAL JOIN rt1 WHERE (((((rt0.c0)=(rt1.c2))) NOT BETWEEN (x'') AND ((((rt0.c0, rt1.c1, t0.c0))==((x'', rt0.c1, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)=(rt1.c2))) NOT BETWEEN (x'') AND ((((rt0.c0, rt1.c1, t0.c0))==((x'', rt0.c1, rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 INDEXED BY i30 NATURAL JOIN rt1);
SELECT * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE);
SELECT * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE);
SELECT * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE;
SELECT COUNT(*) FROM rt1, t0 WHERE ((((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c0))))OR(x'')))OR(CASE NULL  WHEN t0.c0 THEN -156134973 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c0))))OR(x'')))OR(CASE NULL  WHEN t0.c0 THEN -156134973 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c0))))OR(x'')))OR(CASE NULL  WHEN t0.c0 THEN -156134973 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c0))))OR(x'')))OR(CASE NULL  WHEN t0.c0 THEN -156134973 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c0))))OR(x'')))OR(CASE NULL  WHEN t0.c0 THEN -156134973 ELSE rt1.c1 END)));
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)) THEN 1878154310 ELSE ((rt0.c2) IS FALSE) END) ORDER BY ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))LIKE(((rt0.c4) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)) THEN 1878154310 ELSE ((rt0.c2) IS FALSE) END) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))LIKE(((rt0.c4) NOT NULL))));
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)) THEN 1878154310 ELSE ((rt0.c2) IS FALSE) END) ORDER BY ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))LIKE(((rt0.c4) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)) THEN 1878154310 ELSE ((rt0.c2) IS FALSE) END) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))LIKE(((rt0.c4) NOT NULL))));
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)) THEN 1878154310 ELSE ((rt0.c2) IS FALSE) END) ORDER BY ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))LIKE(((rt0.c4) NOT NULL)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('ohoJ\r71') ORDER BY TRIM(DISTINCT CAST('-1966836042' AS NUMERIC)) ASC, CASE WHEN (rt0.c3 IN (rt0.c6, rt0.c4)) THEN ((rt0.c3)%(rt0.c6)) ELSE (((rt0.c4))>((rt0.c6))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('ohoJ\r71') IS TRUE)  as count FROM rt0, t0 ORDER BY TRIM(DISTINCT CAST('-1966836042' AS NUMERIC)) ASC, CASE WHEN (rt0.c3 IN (rt0.c6, rt0.c4)) THEN ((rt0.c3)%(rt0.c6)) ELSE (((rt0.c4))>((rt0.c6))) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('ohoJ\r71') ORDER BY TRIM(DISTINCT CAST('-1966836042' AS NUMERIC)) ASC, CASE WHEN (rt0.c3 IN (rt0.c6, rt0.c4)) THEN ((rt0.c3)%(rt0.c6)) ELSE (((rt0.c4))>((rt0.c6))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('ohoJ\r71') IS TRUE)  as count FROM rt0, t0 ORDER BY TRIM(DISTINCT CAST('-1966836042' AS NUMERIC)) ASC, CASE WHEN (rt0.c3 IN (rt0.c6, rt0.c4)) THEN ((rt0.c3)%(rt0.c6)) ELSE (((rt0.c4))>((rt0.c6))) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('ohoJ\r71') ORDER BY TRIM(DISTINCT CAST('-1966836042' AS NUMERIC)) ASC, CASE WHEN (rt0.c3 IN (rt0.c6, rt0.c4)) THEN ((rt0.c3)%(rt0.c6)) ELSE (((rt0.c4))>((rt0.c6))) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON (- (LIKELY(rt0.c3))) FULL OUTER JOIN t0 ON ((UPPER(0.11083889147699588)) NOT NULL) WHERE ((- (((rt0.c6)>=(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c6)>=(rt1.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (- (LIKELY(rt0.c3))) FULL OUTER JOIN t0 ON ((UPPER(0.11083889147699588)) NOT NULL));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON (- (LIKELY(rt0.c3))) FULL OUTER JOIN t0 ON ((UPPER(0.11083889147699588)) NOT NULL) WHERE ((- (((rt0.c6)>=(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c6)>=(rt1.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (- (LIKELY(rt0.c3))) FULL OUTER JOIN t0 ON ((UPPER(0.11083889147699588)) NOT NULL));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON (- (LIKELY(rt0.c3))) FULL OUTER JOIN t0 ON ((UPPER(0.11083889147699588)) NOT NULL) WHERE ((- (((rt0.c6)>=(rt1.c2)))));
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON (((t0.c0))=(((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((NULL)))))) WHERE ((CAST(rt1.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c2 AS REAL) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON (((t0.c0))==(((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((NULL)))))));
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON (((t0.c0))=(((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((NULL)))))) WHERE ((CAST(rt1.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c2 AS REAL) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON (((t0.c0))==(((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((NULL)))))));
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON (((t0.c0))=(((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((NULL)))))) WHERE ((CAST(rt1.c2 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c3) BETWEEN (rt1.c2) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) BETWEEN (rt1.c2) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c3) BETWEEN (rt1.c2) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) BETWEEN (rt1.c2) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c3) BETWEEN (rt1.c2) AND (rt0.c0)) IN ()));
SELECT * FROM t0 INNER JOIN rt0 ON (- (((((((((((((((((NULL)AND(t0.c0)))OR(rt0.c2)))AND(rt0.c6)))AND(rt1.c2)))OR(rt0.c5)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)))) INNER JOIN rt1 ON ((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (((rt0.c0)<>(NULL))) AND ((((rt0.c4, rt1.c2, rt0.c5))>=((rt1.c1, rt1.c1, rt1.c1))))) WHERE (((NULL COLLATE RTRIM)IS(UNLIKELY(rt0.c6)))) ORDER BY ((COALESCE(rt0.c1, rt0.c4)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE RTRIM)IS(UNLIKELY(rt0.c6)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- (((((((((((((((((NULL)AND(t0.c0)))OR(rt0.c2)))AND(rt0.c6)))AND(rt1.c2)))OR(rt0.c5)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)))) INNER JOIN rt1 ON ((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (((rt0.c0)<>(NULL))) AND ((((rt0.c4, rt1.c2, rt0.c5))>=((rt1.c1, rt1.c1, rt1.c1))))) ORDER BY ((COALESCE(rt0.c1, rt0.c4)) NOTNULL)  NULLS FIRST);
SELECT * FROM t0 INNER JOIN rt0 ON (- (((((((((((((((((NULL)AND(t0.c0)))OR(rt0.c2)))AND(rt0.c6)))AND(rt1.c2)))OR(rt0.c5)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)))) INNER JOIN rt1 ON ((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (((rt0.c0)<>(NULL))) AND ((((rt0.c4, rt1.c2, rt0.c5))>=((rt1.c1, rt1.c1, rt1.c1))))) WHERE (((NULL COLLATE RTRIM)IS(UNLIKELY(rt0.c6)))) ORDER BY ((COALESCE(rt0.c1, rt0.c4)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE RTRIM)IS(UNLIKELY(rt0.c6)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- (((((((((((((((((NULL)AND(t0.c0)))OR(rt0.c2)))AND(rt0.c6)))AND(rt1.c2)))OR(rt0.c5)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)))) INNER JOIN rt1 ON ((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (((rt0.c0)<>(NULL))) AND ((((rt0.c4, rt1.c2, rt0.c5))>=((rt1.c1, rt1.c1, rt1.c1))))) ORDER BY ((COALESCE(rt0.c1, rt0.c4)) NOTNULL)  NULLS FIRST);
SELECT * FROM t0 INNER JOIN rt0 ON (- (((((((((((((((((NULL)AND(t0.c0)))OR(rt0.c2)))AND(rt0.c6)))AND(rt1.c2)))OR(rt0.c5)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)))) INNER JOIN rt1 ON ((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (((rt0.c0)<>(NULL))) AND ((((rt0.c4, rt1.c2, rt0.c5))>=((rt1.c1, rt1.c1, rt1.c1))))) WHERE (((NULL COLLATE RTRIM)IS(UNLIKELY(rt0.c6)))) ORDER BY ((COALESCE(rt0.c1, rt0.c4)) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM rt0, rt1, t0 WHERE (((rt0.c1 COLLATE RTRIM) IS FALSE)) ORDER BY ((((LOWER(rt1.c2))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt1.c0)&(rt0.c5)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((LOWER(rt1.c2))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt1.c0)&(rt0.c5)))) ASC);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((rt0.c1 COLLATE RTRIM) IS FALSE)) ORDER BY ((((LOWER(rt1.c2))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt1.c0)&(rt0.c5)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((LOWER(rt1.c2))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt1.c0)&(rt0.c5)))) ASC);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((rt0.c1 COLLATE RTRIM) IS FALSE)) ORDER BY ((((LOWER(rt1.c2))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt1.c0)&(rt0.c5)))) ASC;
SELECT * FROM t0, rt0, rt1 WHERE ((((rt0.c5)) BETWEEN ((((((rt1.c2)OR(rt0.c3)))OR(rt0.c3)))) AND ((((rt0.c1)/(rt0.c6)))))) ORDER BY UNLIKELY(((rt1.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) BETWEEN ((((((rt1.c2)OR(rt0.c3)))OR(rt0.c3)))) AND ((((rt0.c1)/(rt0.c6)))))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY UNLIKELY(((rt1.c2) IS FALSE)));
SELECT * FROM t0, rt0, rt1 WHERE ((((rt0.c5)) BETWEEN ((((((rt1.c2)OR(rt0.c3)))OR(rt0.c3)))) AND ((((rt0.c1)/(rt0.c6)))))) ORDER BY UNLIKELY(((rt1.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) BETWEEN ((((((rt1.c2)OR(rt0.c3)))OR(rt0.c3)))) AND ((((rt0.c1)/(rt0.c6)))))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY UNLIKELY(((rt1.c2) IS FALSE)));
SELECT * FROM t0, rt0, rt1 WHERE ((((rt0.c5)) BETWEEN ((((((rt1.c2)OR(rt0.c3)))OR(rt0.c3)))) AND ((((rt0.c1)/(rt0.c6)))))) ORDER BY UNLIKELY(((rt1.c2) IS FALSE));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)<<(rt1.c0))) NOT NULL)) ORDER BY CASE (rt1.c2 IN ())  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND (('\'))) THEN (0.3990745428349618 IN ()) END, x'45b6'  NULLS LAST, (~ (((rt1.c2)AND(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<<(rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY CASE (rt1.c2 IN ())  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND (('\'))) THEN (0.3990745428349618 IN ()) END, x'45b6'  NULLS LAST, (~ (((rt1.c2)AND(rt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)<<(rt1.c0))) NOT NULL)) ORDER BY CASE (rt1.c2 IN ())  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND (('\'))) THEN (0.3990745428349618 IN ()) END, x'45b6'  NULLS LAST, (~ (((rt1.c2)AND(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<<(rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY CASE (rt1.c2 IN ())  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND (('\'))) THEN (0.3990745428349618 IN ()) END, x'45b6'  NULLS LAST, (~ (((rt1.c2)AND(rt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)<<(rt1.c0))) NOT NULL)) ORDER BY CASE (rt1.c2 IN ())  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND (('\'))) THEN (0.3990745428349618 IN ()) END, x'45b6'  NULLS LAST, (~ (((rt1.c2)AND(rt1.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(((rt0.c3)AND(rt0.c6)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)AND(rt0.c6)) AS REAL)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(((rt0.c3)AND(rt0.c6)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)AND(rt0.c6)) AS REAL)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(((rt0.c3)AND(rt0.c6)) AS REAL));
SELECT COUNT(*) FROM rt1, rt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (rt1.c1);
SELECT ALL * FROM rt0 WHERE (((((rt0.c6) NOT BETWEEN (rt0.c6) AND (x'')))&(((rt0.c5)<=(rt0.c4))))) ORDER BY ((((rt0.c4)OR(rt0.c1))) ISNULL), ((((rt0.c5) NOTNULL))!=(rt0.c1));
SELECT SUM(count) FROM (SELECT ((((((rt0.c6) NOT BETWEEN (rt0.c6) AND (x'')))&(((rt0.c5)<=(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)OR(rt0.c1))) ISNULL), ((((rt0.c5) NOTNULL))<>(rt0.c1)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c6) NOT BETWEEN (rt0.c6) AND (x'')))&(((rt0.c5)<=(rt0.c4))))) ORDER BY ((((rt0.c4)OR(rt0.c1))) ISNULL), ((((rt0.c5) NOTNULL))!=(rt0.c1));
SELECT SUM(count) FROM (SELECT ((((((rt0.c6) NOT BETWEEN (rt0.c6) AND (x'')))&(((rt0.c5)<=(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)OR(rt0.c1))) ISNULL), ((((rt0.c5) NOTNULL))<>(rt0.c1)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c6) NOT BETWEEN (rt0.c6) AND (x'')))&(((rt0.c5)<=(rt0.c4))))) ORDER BY ((((rt0.c4)OR(rt0.c1))) ISNULL), ((((rt0.c5) NOTNULL))!=(rt0.c1));
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS REAL)) ORDER BY ((((rt0.c0) NOTNULL))%(rt0.c4 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS BLOB) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOTNULL))%(rt0.c4 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS REAL)) ORDER BY ((((rt0.c0) NOTNULL))%(rt0.c4 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS BLOB) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOTNULL))%(rt0.c4 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS REAL)) ORDER BY ((((rt0.c0) NOTNULL))%(rt0.c4 COLLATE BINARY))  NULLS FIRST;
SELECT * FROM rt1, rt0, t0 WHERE (((NOT (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (((NOT (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (((NOT (rt1.c1)) IN ()));
SELECT COUNT(*) FROM rt1 WHERE ((- (UNLIKELY(x'')))) ORDER BY CASE WHEN ((rt1.c1)LIKE(rt1.c1)) THEN ((rt1.c1)OR(rt1.c2)) WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c0) NOT NULL) WHEN ((rt1.c2)IS(rt1.c2)) THEN TRIM(DISTINCT rt1.c0) ELSE NULL END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (UNLIKELY(x'')))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c1)LIKE(rt1.c1)) THEN ((rt1.c1)OR(rt1.c2)) WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c0) NOT NULL) WHEN ((rt1.c2)IS(rt1.c2)) THEN TRIM(DISTINCT rt1.c0) ELSE NULL END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((- (UNLIKELY(x'')))) ORDER BY CASE WHEN ((rt1.c1)LIKE(rt1.c1)) THEN ((rt1.c1)OR(rt1.c2)) WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c0) NOT NULL) WHEN ((rt1.c2)IS(rt1.c2)) THEN TRIM(DISTINCT rt1.c0) ELSE NULL END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (UNLIKELY(x'')))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c1)LIKE(rt1.c1)) THEN ((rt1.c1)OR(rt1.c2)) WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c0) NOT NULL) WHEN ((rt1.c2)IS(rt1.c2)) THEN TRIM(DISTINCT rt1.c0) ELSE NULL END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((- (UNLIKELY(x'')))) ORDER BY CASE WHEN ((rt1.c1)LIKE(rt1.c1)) THEN ((rt1.c1)OR(rt1.c2)) WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c0) NOT NULL) WHEN ((rt1.c2)IS(rt1.c2)) THEN TRIM(DISTINCT rt1.c0) ELSE NULL END ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((+ ((((NULL, rt1.c1, 428343303))>=((rt1.c2, rt1.c2, rt1.c0)))))) ORDER BY (- ((rt1.c1 IN ()))), (((((rt1.c0, rt1.c0, rt1.c1, rt1.c1, rt1.c2))>=((rt1.c0, rt1.c2, rt1.c1, rt1.c0, 0.8782549029191804)))) NOT BETWEEN (((rt1.c0) IS TRUE)) AND ((((rt1.c0, rt1.c0, rt1.c1))=((rt1.c1, rt1.c0, rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((((NULL, rt1.c1, 428343303))>=((rt1.c2, rt1.c2, rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (- ((rt1.c1 IN ()))), (((((rt1.c0, rt1.c0, rt1.c1, rt1.c1, rt1.c2))>=((rt1.c0, rt1.c2, rt1.c1, rt1.c0, 0.8782549029191804)))) NOT BETWEEN (((rt1.c0) IS TRUE)) AND ((((rt1.c0, rt1.c0, rt1.c1))==((rt1.c1, rt1.c0, rt1.c2))))) ASC);
SELECT ALL * FROM rt1 WHERE ((+ ((((NULL, rt1.c1, 428343303))>=((rt1.c2, rt1.c2, rt1.c0)))))) ORDER BY (- ((rt1.c1 IN ()))), (((((rt1.c0, rt1.c0, rt1.c1, rt1.c1, rt1.c2))>=((rt1.c0, rt1.c2, rt1.c1, rt1.c0, 0.8782549029191804)))) NOT BETWEEN (((rt1.c0) IS TRUE)) AND ((((rt1.c0, rt1.c0, rt1.c1))=((rt1.c1, rt1.c0, rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((((NULL, rt1.c1, 428343303))>=((rt1.c2, rt1.c2, rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (- ((rt1.c1 IN ()))), (((((rt1.c0, rt1.c0, rt1.c1, rt1.c1, rt1.c2))>=((rt1.c0, rt1.c2, rt1.c1, rt1.c0, 0.8782549029191804)))) NOT BETWEEN (((rt1.c0) IS TRUE)) AND ((((rt1.c0, rt1.c0, rt1.c1))==((rt1.c1, rt1.c0, rt1.c2))))) ASC);
SELECT ALL * FROM rt1 WHERE ((+ ((((NULL, rt1.c1, 428343303))>=((rt1.c2, rt1.c2, rt1.c0)))))) ORDER BY (- ((rt1.c1 IN ()))), (((((rt1.c0, rt1.c0, rt1.c1, rt1.c1, rt1.c2))>=((rt1.c0, rt1.c2, rt1.c1, rt1.c0, 0.8782549029191804)))) NOT BETWEEN (((rt1.c0) IS TRUE)) AND ((((rt1.c0, rt1.c0, rt1.c1))=((rt1.c1, rt1.c0, rt1.c2))))) ASC;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (((((t0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))) IS TRUE)) ORDER BY (rt1.c2 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))) IS TRUE)) IS TRUE)  as count FROM t0 NATURAL JOIN rt1 ORDER BY (rt1.c2 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (((((t0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))) IS TRUE)) ORDER BY (rt1.c2 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))) IS TRUE)) IS TRUE)  as count FROM t0 NATURAL JOIN rt1 ORDER BY (rt1.c2 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (((((t0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))) IS TRUE)) ORDER BY (rt1.c2 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM rt1, rt0, t0 WHERE (CAST(NULL AS REAL)) ORDER BY ((((rt1.c2) IS FALSE)) BETWEEN (((('', t0.c0, t0.c0))!=((NULL, rt1.c2, rt0.c5)))) AND (json_extract(rt0.c3, t0.c0))) DESC  NULLS LAST, (~ (((rt0.c6)>=(rt0.c6)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((rt1.c2) IS FALSE)) BETWEEN (((('', t0.c0, t0.c0))!=((NULL, rt1.c2, rt0.c5)))) AND (json_extract(rt0.c3, t0.c0))) DESC  NULLS LAST, (~ (((rt0.c6)>=(rt0.c6)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t0 WHERE (CAST(NULL AS REAL)) ORDER BY ((((rt1.c2) IS FALSE)) BETWEEN (((('', t0.c0, t0.c0))!=((NULL, rt1.c2, rt0.c5)))) AND (json_extract(rt0.c3, t0.c0))) DESC  NULLS LAST, (~ (((rt0.c6)>=(rt0.c6)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((rt1.c2) IS FALSE)) BETWEEN (((('', t0.c0, t0.c0))!=((NULL, rt1.c2, rt0.c5)))) AND (json_extract(rt0.c3, t0.c0))) DESC  NULLS LAST, (~ (((rt0.c6)>=(rt0.c6)))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE ((((rt1.c0 IN ())) NOT BETWEEN (((rt0.c6) NOT BETWEEN (rt1.c2) AND (NULL))) AND (((((rt0.c6)AND(rt1.c2)))OR(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ())) NOT BETWEEN (((rt0.c6) NOT BETWEEN (rt1.c2) AND (NULL))) AND (((((rt0.c6)AND(rt1.c2)))OR(rt0.c5))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((((rt1.c0 IN ())) NOT BETWEEN (((rt0.c6) NOT BETWEEN (rt1.c2) AND (NULL))) AND (((((rt0.c6)AND(rt1.c2)))OR(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ())) NOT BETWEEN (((rt0.c6) NOT BETWEEN (rt1.c2) AND (NULL))) AND (((((rt0.c6)AND(rt1.c2)))OR(rt0.c5))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((((rt1.c0 IN ())) NOT BETWEEN (((rt0.c6) NOT BETWEEN (rt1.c2) AND (NULL))) AND (((((rt0.c6)AND(rt1.c2)))OR(rt0.c5)))));
SELECT * FROM t0 FULL OUTER JOIN rt1 ON ((((((rt0.c5)AND(rt0.c5)))AND(rt1.c1)))=((((rt0.c6)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))) FULL OUTER JOIN rt0 ON (+ ('e')) WHERE (rt0.c5) ORDER BY ((((0.46265699308025277)OR(rt0.c2 COLLATE NOCASE)))OR((((rt1.c0, rt0.c4, rt0.c6)) BETWEEN ((rt0.c6, rt1.c0, rt0.c6)) AND ((rt0.c3, rt0.c5, t0.c0)))));
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON ((((((rt0.c5)AND(rt0.c5)))AND(rt1.c1)))=((((rt0.c6)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))) FULL OUTER JOIN rt0 ON (+ ('e')) ORDER BY ((((0.46265699308025277)OR(rt0.c2 COLLATE NOCASE)))OR((((rt1.c0, rt0.c4, rt0.c6)) BETWEEN ((rt0.c6, rt1.c0, rt0.c6)) AND ((rt0.c3, rt0.c5, t0.c0))))));
SELECT * FROM t0 FULL OUTER JOIN rt1 ON ((((((rt0.c5)AND(rt0.c5)))AND(rt1.c1)))=((((rt0.c6)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))) FULL OUTER JOIN rt0 ON (+ ('e')) WHERE (rt0.c5) ORDER BY ((((0.46265699308025277)OR(rt0.c2 COLLATE NOCASE)))OR((((rt1.c0, rt0.c4, rt0.c6)) BETWEEN ((rt0.c6, rt1.c0, rt0.c6)) AND ((rt0.c3, rt0.c5, t0.c0)))));
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON ((((((rt0.c5)AND(rt0.c5)))AND(rt1.c1)))=((((rt0.c6)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))) FULL OUTER JOIN rt0 ON (+ ('e')) ORDER BY ((((0.46265699308025277)OR(rt0.c2 COLLATE NOCASE)))OR((((rt1.c0, rt0.c4, rt0.c6)) BETWEEN ((rt0.c6, rt1.c0, rt0.c6)) AND ((rt0.c3, rt0.c5, t0.c0))))));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((('-1384837929')||(0.266074941598924)))AND((('') NOTNULL))))AND(rt0.c0 COLLATE NOCASE))) ORDER BY (((rt0.c2, rt1.c2, rt0.c4, rt1.c2, rt1.c2)) NOT BETWEEN (('1883222891', COALESCE(DISTINCT rt1.c1, '-1114340803'), ((rt1.c0)>(rt0.c3)), ABS(DISTINCT rt0.c2), ((0xffffffffa0475a86) ISNULL))) AND ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)), CAST(rt0.c1 AS REAL), CAST(0.6293272576083941 AS NUMERIC), x'e747', ((rt1.c2) BETWEEN (rt0.c6) AND (rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('-1384837929')||(0.266074941598924)))AND((('') NOTNULL))))AND(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c2, rt1.c2, rt0.c4, rt1.c2, rt1.c2)) NOT BETWEEN (('1883222891', COALESCE(DISTINCT rt1.c1, '-1114340803'), ((rt1.c0)>(rt0.c3)), ABS(DISTINCT rt0.c2), ((0Xffffffffa0475a86) ISNULL))) AND ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)), CAST(rt0.c1 AS REAL), CAST(0.6293272576083941 AS NUMERIC), x'e747', ((rt1.c2) BETWEEN (rt0.c6) AND (rt0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((('-1384837929')||(0.266074941598924)))AND((('') NOTNULL))))AND(rt0.c0 COLLATE NOCASE))) ORDER BY (((rt0.c2, rt1.c2, rt0.c4, rt1.c2, rt1.c2)) NOT BETWEEN (('1883222891', COALESCE(DISTINCT rt1.c1, '-1114340803'), ((rt1.c0)>(rt0.c3)), ABS(DISTINCT rt0.c2), ((0xffffffffa0475a86) ISNULL))) AND ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)), CAST(rt0.c1 AS REAL), CAST(0.6293272576083941 AS NUMERIC), x'e747', ((rt1.c2) BETWEEN (rt0.c6) AND (rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('-1384837929')||(0.266074941598924)))AND((('') NOTNULL))))AND(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c2, rt1.c2, rt0.c4, rt1.c2, rt1.c2)) NOT BETWEEN (('1883222891', COALESCE(DISTINCT rt1.c1, '-1114340803'), ((rt1.c0)>(rt0.c3)), ABS(DISTINCT rt0.c2), ((0Xffffffffa0475a86) ISNULL))) AND ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)), CAST(rt0.c1 AS REAL), CAST(0.6293272576083941 AS NUMERIC), x'e747', ((rt1.c2) BETWEEN (rt0.c6) AND (rt0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((('-1384837929')||(0.266074941598924)))AND((('') NOTNULL))))AND(rt0.c0 COLLATE NOCASE))) ORDER BY (((rt0.c2, rt1.c2, rt0.c4, rt1.c2, rt1.c2)) NOT BETWEEN (('1883222891', COALESCE(DISTINCT rt1.c1, '-1114340803'), ((rt1.c0)>(rt0.c3)), ABS(DISTINCT rt0.c2), ((0xffffffffa0475a86) ISNULL))) AND ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)), CAST(rt0.c1 AS REAL), CAST(0.6293272576083941 AS NUMERIC), x'e747', ((rt1.c2) BETWEEN (rt0.c6) AND (rt0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c6) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY CASE (((rt0.c4))<=((rt0.c0)))  WHEN (- (rt0.c2)) THEN CAST(rt0.c3 AS BLOB) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c6) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c4))<=((rt0.c0)))  WHEN (- (rt0.c2)) THEN CAST(rt0.c3 AS BLOB) END ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c6) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY CASE (((rt0.c4))<=((rt0.c0)))  WHEN (- (rt0.c2)) THEN CAST(rt0.c3 AS BLOB) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c6) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c4))<=((rt0.c0)))  WHEN (- (rt0.c2)) THEN CAST(rt0.c3 AS BLOB) END ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c6) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY CASE (((rt0.c4))<=((rt0.c0)))  WHEN (- (rt0.c2)) THEN CAST(rt0.c3 AS BLOB) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c6  WHEN rt0.c6 THEN rt0.c6 END)=(CAST(NULL AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c6  WHEN rt0.c6 THEN rt0.c6 END)==(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c6  WHEN rt0.c6 THEN rt0.c6 END)=(CAST(NULL AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c6  WHEN rt0.c6 THEN rt0.c6 END)==(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c6  WHEN rt0.c6 THEN rt0.c6 END)=(CAST(NULL AS BLOB))));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN t0 ON rt0.c3 WHERE ((((0Xffffffffd86e65bb)) BETWEEN ((((rt1.c0)||(rt0.c5)))) AND (((rt0.c6 IN (rt0.c5)))))) ORDER BY ((UPPER(DISTINCT rt1.c0))/('-66002942')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0xffffffffd86e65bb)) BETWEEN ((((rt1.c0)||(rt0.c5)))) AND (((rt0.c6 IN (rt0.c5)))))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN t0 ON rt0.c3 ORDER BY ((UPPER(DISTINCT rt1.c0))/('-66002942')) DESC);
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN t0 ON rt0.c3 WHERE ((((0Xffffffffd86e65bb)) BETWEEN ((((rt1.c0)||(rt0.c5)))) AND (((rt0.c6 IN (rt0.c5)))))) ORDER BY ((UPPER(DISTINCT rt1.c0))/('-66002942')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0xffffffffd86e65bb)) BETWEEN ((((rt1.c0)||(rt0.c5)))) AND (((rt0.c6 IN (rt0.c5)))))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN t0 ON rt0.c3 ORDER BY ((UPPER(DISTINCT rt1.c0))/('-66002942')) DESC);
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN t0 ON rt0.c3 WHERE ((((0Xffffffffd86e65bb)) BETWEEN ((((rt1.c0)||(rt0.c5)))) AND (((rt0.c6 IN (rt0.c5)))))) ORDER BY ((UPPER(DISTINCT rt1.c0))/('-66002942')) DESC;
SELECT * FROM rt1 INNER JOIN t0 ON (((((((rt1.c0)AND(rt0.c2)))AND(t0.c0)), (- (rt1.c2)), (((((((('-1368123908')OR(t0.c0)))AND(rt0.c5)))OR(rt0.c5)))AND(rt1.c0))))<=((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN t0.c0 ELSE rt0.c2 END, (((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c5))), rt1.c2))) LEFT OUTER JOIN rt0 ON rt1.c0 WHERE (((((rt0.c3)!=(rt1.c2))) NOT NULL)) ORDER BY CAST(rt0.c5 AS INTEGER) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)!=(rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON (((((((rt1.c0)AND(rt0.c2)))AND(t0.c0)), (- (rt1.c2)), (((((((('-1368123908')OR(t0.c0)))AND(rt0.c5)))OR(rt0.c5)))AND(rt1.c0))))<=((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN t0.c0 ELSE rt0.c2 END, (((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c5))), rt1.c2))) LEFT OUTER JOIN rt0 ON rt1.c0 ORDER BY CAST(rt0.c5 AS INTEGER) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN t0 ON (((((((rt1.c0)AND(rt0.c2)))AND(t0.c0)), (- (rt1.c2)), (((((((('-1368123908')OR(t0.c0)))AND(rt0.c5)))OR(rt0.c5)))AND(rt1.c0))))<=((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN t0.c0 ELSE rt0.c2 END, (((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c5))), rt1.c2))) LEFT OUTER JOIN rt0 ON rt1.c0 WHERE (((((rt0.c3)!=(rt1.c2))) NOT NULL)) ORDER BY CAST(rt0.c5 AS INTEGER) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)!=(rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON (((((((rt1.c0)AND(rt0.c2)))AND(t0.c0)), (- (rt1.c2)), (((((((('-1368123908')OR(t0.c0)))AND(rt0.c5)))OR(rt0.c5)))AND(rt1.c0))))<=((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN t0.c0 ELSE rt0.c2 END, (((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c5))), rt1.c2))) LEFT OUTER JOIN rt0 ON rt1.c0 ORDER BY CAST(rt0.c5 AS INTEGER) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN t0 ON (((((((rt1.c0)AND(rt0.c2)))AND(t0.c0)), (- (rt1.c2)), (((((((('-1368123908')OR(t0.c0)))AND(rt0.c5)))OR(rt0.c5)))AND(rt1.c0))))<=((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN t0.c0 ELSE rt0.c2 END, (((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c5))), rt1.c2))) LEFT OUTER JOIN rt0 ON rt1.c0 WHERE (((((rt0.c3)!=(rt1.c2))) NOT NULL)) ORDER BY CAST(rt0.c5 AS INTEGER) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(rt0.c4) COLLATE RTRIM) ORDER BY rt0.c4 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(rt0.c4) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4 COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(rt0.c4) COLLATE RTRIM) ORDER BY rt0.c4 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(rt0.c4) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4 COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(rt0.c4) COLLATE RTRIM) ORDER BY rt0.c4 COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS NUMERIC))||(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY x''  NULLS FIRST, (((((((-2093122712, rt0.c3, rt0.c5, rt0.c6, rt0.c2, rt0.c1, rt0.c4))>((rt0.c1, rt0.c5, rt0.c0, rt0.c6, rt0.c5, rt0.c6, rt0.c0))))OR(((rt0.c0)AND(rt0.c2)))))OR((rt0.c4 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS NUMERIC))||(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS FIRST, (((((((-2093122712, rt0.c3, rt0.c5, rt0.c6, rt0.c2, rt0.c1, rt0.c4))>((rt0.c1, rt0.c5, rt0.c0, rt0.c6, rt0.c5, rt0.c6, rt0.c0))))OR(((rt0.c0)AND(rt0.c2)))))OR((rt0.c4 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS NUMERIC))||(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY x''  NULLS FIRST, (((((((-2093122712, rt0.c3, rt0.c5, rt0.c6, rt0.c2, rt0.c1, rt0.c4))>((rt0.c1, rt0.c5, rt0.c0, rt0.c6, rt0.c5, rt0.c6, rt0.c0))))OR(((rt0.c0)AND(rt0.c2)))))OR((rt0.c4 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS NUMERIC))||(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS FIRST, (((((((-2093122712, rt0.c3, rt0.c5, rt0.c6, rt0.c2, rt0.c1, rt0.c4))>((rt0.c1, rt0.c5, rt0.c0, rt0.c6, rt0.c5, rt0.c6, rt0.c0))))OR(((rt0.c0)AND(rt0.c2)))))OR((rt0.c4 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS NUMERIC))||(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY x''  NULLS FIRST, (((((((-2093122712, rt0.c3, rt0.c5, rt0.c6, rt0.c2, rt0.c1, rt0.c4))>((rt0.c1, rt0.c5, rt0.c0, rt0.c6, rt0.c5, rt0.c6, rt0.c0))))OR(((rt0.c0)AND(rt0.c2)))))OR((rt0.c4 IN ()))) ASC;
SELECT * FROM rt0 INNER JOIN rt1 ON (((rt0.c3) NOT NULL) IN ((((rt0.c0))<=((t0.c0))), ((rt0.c2) IS FALSE))) INNER JOIN t0 ON IFNULL(((rt0.c4)GLOB(rt0.c6)), LIKELIHOOD(rt0.c3, 0.19173153391354214)) WHERE (((rt0.c2 COLLATE RTRIM) ISNULL)) ORDER BY (((UNICODE(rt0.c1)))=((((rt0.c4) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((rt0.c3) NOT NULL) IN ((((rt0.c0))<=((t0.c0))), ((rt0.c2) IS FALSE))) INNER JOIN t0 ON IFNULL(((rt0.c4)GLOB(rt0.c6)), LIKELIHOOD(rt0.c3, 0.19173153391354214)) ORDER BY (((UNICODE(rt0.c1)))==((((rt0.c4) IS FALSE)))) ASC);
SELECT * FROM rt0 INNER JOIN rt1 ON (((rt0.c3) NOT NULL) IN ((((rt0.c0))<=((t0.c0))), ((rt0.c2) IS FALSE))) INNER JOIN t0 ON IFNULL(((rt0.c4)GLOB(rt0.c6)), LIKELIHOOD(rt0.c3, 0.19173153391354214)) WHERE (((rt0.c2 COLLATE RTRIM) ISNULL)) ORDER BY (((UNICODE(rt0.c1)))=((((rt0.c4) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((rt0.c3) NOT NULL) IN ((((rt0.c0))<=((t0.c0))), ((rt0.c2) IS FALSE))) INNER JOIN t0 ON IFNULL(((rt0.c4)GLOB(rt0.c6)), LIKELIHOOD(rt0.c3, 0.19173153391354214)) ORDER BY (((UNICODE(rt0.c1)))==((((rt0.c4) IS FALSE)))) ASC);
SELECT * FROM rt0 INNER JOIN rt1 ON (((rt0.c3) NOT NULL) IN ((((rt0.c0))<=((t0.c0))), ((rt0.c2) IS FALSE))) INNER JOIN t0 ON IFNULL(((rt0.c4)GLOB(rt0.c6)), LIKELIHOOD(rt0.c3, 0.19173153391354214)) WHERE (((rt0.c2 COLLATE RTRIM) ISNULL)) ORDER BY (((UNICODE(rt0.c1)))=((((rt0.c4) IS FALSE)))) ASC;
SELECT ALL COUNT(*) FROM rt1 INDEXED BY i30 WHERE (((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))==((rt1.c2 IN (0.4075782520849076, rt1.c1))))) ORDER BY SQLITE_SOURCE_ID();
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))==((rt1.c2 IN (0.4075782520849076, rt1.c1))))) IS TRUE)  as count FROM rt1 INDEXED BY i30 ORDER BY SQLITE_SOURCE_ID());
SELECT ALL COUNT(*) FROM rt1 INDEXED BY i30 WHERE (((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))==((rt1.c2 IN (0.4075782520849076, rt1.c1))))) ORDER BY SQLITE_SOURCE_ID();
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))==((rt1.c2 IN (0.4075782520849076, rt1.c1))))) IS TRUE)  as count FROM rt1 INDEXED BY i30 ORDER BY SQLITE_SOURCE_ID());
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c6)))-(((1696137977)AND(rt0.c4))))) ORDER BY (rt0.c0 IN ()) ASC  NULLS LAST, (((rt0.c6 IN ())) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c6)))-(((1696137977)AND(rt0.c4))))) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED ORDER BY (rt0.c0 IN ()) ASC  NULLS LAST, (((rt0.c6 IN ())) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c6)))-(((1696137977)AND(rt0.c4))))) ORDER BY (rt0.c0 IN ()) ASC  NULLS LAST, (((rt0.c6 IN ())) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c6)))-(((1696137977)AND(rt0.c4))))) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED ORDER BY (rt0.c0 IN ()) ASC  NULLS LAST, (((rt0.c6 IN ())) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c6)))-(((1696137977)AND(rt0.c4))))) ORDER BY (rt0.c0 IN ()) ASC  NULLS LAST, (((rt0.c6 IN ())) NOTNULL)  NULLS FIRST;
SELECT * FROM rt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (NULL);
SELECT ALL * FROM rt1, t0 WHERE (CASE t0.c0  WHEN IFNULL(DISTINCT rt1.c0, '[q{cWh') THEN rt1.c1 ELSE ((rt1.c2) BETWEEN (rt1.c1) AND (NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN IFNULL(DISTINCT rt1.c0, '[q{cWh') THEN rt1.c1 ELSE ((rt1.c2) BETWEEN (rt1.c1) AND (NULL)) END) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (CASE t0.c0  WHEN IFNULL(DISTINCT rt1.c0, '[q{cWh') THEN rt1.c1 ELSE ((rt1.c2) BETWEEN (rt1.c1) AND (NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN IFNULL(DISTINCT rt1.c0, '[q{cWh') THEN rt1.c1 ELSE ((rt1.c2) BETWEEN (rt1.c1) AND (NULL)) END) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (CASE t0.c0  WHEN IFNULL(DISTINCT rt1.c0, '[q{cWh') THEN rt1.c1 ELSE ((rt1.c2) BETWEEN (rt1.c1) AND (NULL)) END);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c6 THEN rt0.c4 ELSE rt0.c6 END)|(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c6 THEN rt0.c4 ELSE rt0.c6 END)|(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c6 THEN rt0.c4 ELSE rt0.c6 END)|(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c6 THEN rt0.c4 ELSE rt0.c6 END)|(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c6 THEN rt0.c4 ELSE rt0.c6 END)|(rt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM t0 WHERE (((((t0.c0)AND(x'' COLLATE RTRIM)))OR(((((((((t0.c0)OR(t0.c0)))AND('-1258999045')))OR(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(x'' COLLATE RTRIM)))OR(((((((((t0.c0)OR(t0.c0)))AND('-1258999045')))OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)AND(x'' COLLATE RTRIM)))OR(((((((((t0.c0)OR(t0.c0)))AND('-1258999045')))OR(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(x'' COLLATE RTRIM)))OR(((((((((t0.c0)OR(t0.c0)))AND('-1258999045')))OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)AND(x'' COLLATE RTRIM)))OR(((((((((t0.c0)OR(t0.c0)))AND('-1258999045')))OR(t0.c0)))OR(t0.c0)))));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON rt0.c5 CROSS JOIN rt1 ON ((((rt0.c1))<((rt0.c6))) IN ()) WHERE (CAST((- (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON rt0.c5 CROSS JOIN rt1 ON ((((rt0.c1))<((rt0.c6))) IN ()));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON rt0.c5 CROSS JOIN rt1 ON ((((rt0.c1))<((rt0.c6))) IN ()) WHERE (CAST((- (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON rt0.c5 CROSS JOIN rt1 ON ((((rt0.c1))<((rt0.c6))) IN ()));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON rt0.c5 CROSS JOIN rt1 ON ((((rt0.c1))<((rt0.c6))) IN ()) WHERE (CAST((- (rt0.c2)) AS BLOB));
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c6, NULL)) NOT BETWEEN (((((rt0.c6, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c5, rt0.c1)) AND ((rt0.c0, rt0.c5, rt0.c5))), (- (rt0.c6)), (NOT (rt0.c2)))) AND ((CAST(rt0.c0 AS INTEGER), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c6)), rt0.c6 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c6, NULL)) NOT BETWEEN (((((rt0.c6, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c5, rt0.c1)) AND ((rt0.c0, rt0.c5, rt0.c5))), (- (rt0.c6)), (NOT (rt0.c2)))) AND ((CAST(rt0.c0 AS INTEGER), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c6)), rt0.c6 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c6, NULL)) NOT BETWEEN (((((rt0.c6, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c5, rt0.c1)) AND ((rt0.c0, rt0.c5, rt0.c5))), (- (rt0.c6)), (NOT (rt0.c2)))) AND ((CAST(rt0.c0 AS INTEGER), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c6)), rt0.c6 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c6, NULL)) NOT BETWEEN (((((rt0.c6, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c5, rt0.c1)) AND ((rt0.c0, rt0.c5, rt0.c5))), (- (rt0.c6)), (NOT (rt0.c2)))) AND ((CAST(rt0.c0 AS INTEGER), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c6)), rt0.c6 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c6, NULL)) NOT BETWEEN (((((rt0.c6, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c5, rt0.c1)) AND ((rt0.c0, rt0.c5, rt0.c5))), (- (rt0.c6)), (NOT (rt0.c2)))) AND ((CAST(rt0.c0 AS INTEGER), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c6)), rt0.c6 COLLATE NOCASE))));
SELECT ALL * FROM t0, rt1, rt0 WHERE (CAST(json_insert(rt1.c1, rt0.c1, rt0.c3, rt1.c1, rt0.c0) AS INTEGER)) ORDER BY ((0.5490900372102414)<>(((((rt0.c0)OR(rt1.c2)))AND(rt0.c4)))) DESC  NULLS LAST, (((rt1.c0 IN ()))*(((NULL)>(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(json_insert(rt1.c1, rt0.c1, rt0.c3, rt1.c1, rt0.c0) AS INTEGER)) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((0.5490900372102414)!=(((((rt0.c0)OR(rt1.c2)))AND(rt0.c4)))) DESC  NULLS LAST, (((rt1.c0 IN ()))*(((NULL)>(rt0.c3)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt1, rt0 WHERE (CAST(json_insert(rt1.c1, rt0.c1, rt0.c3, rt1.c1, rt0.c0) AS INTEGER)) ORDER BY ((0.5490900372102414)<>(((((rt0.c0)OR(rt1.c2)))AND(rt0.c4)))) DESC  NULLS LAST, (((rt1.c0 IN ()))*(((NULL)>(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(json_insert(rt1.c1, rt0.c1, rt0.c3, rt1.c1, rt0.c0) AS INTEGER)) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((0.5490900372102414)!=(((((rt0.c0)OR(rt1.c2)))AND(rt0.c4)))) DESC  NULLS LAST, (((rt1.c0 IN ()))*(((NULL)>(rt0.c3)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE ((NULL IN ()));
SELECT * FROM t0, rt0, rt1 WHERE (NULLIF(CAST(rt0.c4 AS REAL), ((rt1.c1)OR(rt0.c2)))) ORDER BY (+ (0x77b94201)) ASC, LTRIM(t0.c0 COLLATE BINARY), ((SQLITE_COMPILEOPTION_GET(rt1.c1)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CAST(rt0.c4 AS REAL), ((rt1.c1)OR(rt0.c2)))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (+ (0x77b94201)) ASC, LTRIM(t0.c0 COLLATE BINARY), ((SQLITE_COMPILEOPTION_GET(rt1.c1)) ISNULL)  NULLS FIRST);
SELECT * FROM t0, rt0, rt1 WHERE (NULLIF(CAST(rt0.c4 AS REAL), ((rt1.c1)OR(rt0.c2)))) ORDER BY (+ (0x77b94201)) ASC, LTRIM(t0.c0 COLLATE BINARY), ((SQLITE_COMPILEOPTION_GET(rt1.c1)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CAST(rt0.c4 AS REAL), ((rt1.c1)OR(rt0.c2)))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (+ (0x77b94201)) ASC, LTRIM(t0.c0 COLLATE BINARY), ((SQLITE_COMPILEOPTION_GET(rt1.c1)) ISNULL)  NULLS FIRST);
SELECT * FROM rt0, t0 LEFT OUTER JOIN rt1 ON (NOT (((rt0.c3) ISNULL))) WHERE (((TOTAL_CHANGES())!=(((rt0.c3)IS(1906160368)))));
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES())<>(((rt0.c3)IS(1906160368))))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN rt1 ON (NOT (((rt0.c3) ISNULL))));
SELECT * FROM rt0, t0 LEFT OUTER JOIN rt1 ON (NOT (((rt0.c3) ISNULL))) WHERE (((TOTAL_CHANGES())!=(((rt0.c3)IS(1906160368)))));
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES())<>(((rt0.c3)IS(1906160368))))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN rt1 ON (NOT (((rt0.c3) ISNULL))));
SELECT * FROM rt0, t0 LEFT OUTER JOIN rt1 ON (NOT (((rt0.c3) ISNULL))) WHERE (((TOTAL_CHANGES())!=(((rt0.c3)IS(1906160368)))));
SELECT * FROM t0, rt1 WHERE (CAST((((t0.c0, 1.197423402E9, rt1.c0)) BETWEEN ((rt1.c2, rt1.c1, t0.c0)) AND ((rt1.c0, rt1.c1, rt1.c1))) AS REAL)) ORDER BY CASE ((rt1.c0)&(rt1.c2))  WHEN x'' THEN LIKELY(DISTINCT rt1.c2) WHEN ((rt1.c0) ISNULL) THEN (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) WHEN CAST(t0.c0 AS INTEGER) THEN ((rt1.c2) ISNULL) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)) THEN rt1.c1 WHEN CASE WHEN rt1.c1 THEN t0.c0 WHEN rt1.c1 THEN '-748815875' WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END THEN '-210025525' ELSE CASE t0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END END;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0, 1.197423402E9, rt1.c0)) BETWEEN ((rt1.c2, rt1.c1, t0.c0)) AND ((rt1.c0, rt1.c1, rt1.c1))) AS REAL)) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE ((rt1.c0)&(rt1.c2))  WHEN x'' THEN LIKELY(DISTINCT rt1.c2) WHEN ((rt1.c0) ISNULL) THEN (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) WHEN CAST(t0.c0 AS INTEGER) THEN ((rt1.c2) ISNULL) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)) THEN rt1.c1 WHEN CASE WHEN rt1.c1 THEN t0.c0 WHEN rt1.c1 THEN '-748815875' WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END THEN '-210025525' ELSE CASE t0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END END);
SELECT * FROM t0, rt1 WHERE (CAST((((t0.c0, 1.197423402E9, rt1.c0)) BETWEEN ((rt1.c2, rt1.c1, t0.c0)) AND ((rt1.c0, rt1.c1, rt1.c1))) AS REAL)) ORDER BY CASE ((rt1.c0)&(rt1.c2))  WHEN x'' THEN LIKELY(DISTINCT rt1.c2) WHEN ((rt1.c0) ISNULL) THEN (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) WHEN CAST(t0.c0 AS INTEGER) THEN ((rt1.c2) ISNULL) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)) THEN rt1.c1 WHEN CASE WHEN rt1.c1 THEN t0.c0 WHEN rt1.c1 THEN '-748815875' WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END THEN '-210025525' ELSE CASE t0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END END;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0, 1.197423402E9, rt1.c0)) BETWEEN ((rt1.c2, rt1.c1, t0.c0)) AND ((rt1.c0, rt1.c1, rt1.c1))) AS REAL)) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE ((rt1.c0)&(rt1.c2))  WHEN x'' THEN LIKELY(DISTINCT rt1.c2) WHEN ((rt1.c0) ISNULL) THEN (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) WHEN CAST(t0.c0 AS INTEGER) THEN ((rt1.c2) ISNULL) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)) THEN rt1.c1 WHEN CASE WHEN rt1.c1 THEN t0.c0 WHEN rt1.c1 THEN '-748815875' WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END THEN '-210025525' ELSE CASE t0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END END);
SELECT * FROM t0, rt1 WHERE (CAST((((t0.c0, 1.197423402E9, rt1.c0)) BETWEEN ((rt1.c2, rt1.c1, t0.c0)) AND ((rt1.c0, rt1.c1, rt1.c1))) AS REAL)) ORDER BY CASE ((rt1.c0)&(rt1.c2))  WHEN x'' THEN LIKELY(DISTINCT rt1.c2) WHEN ((rt1.c0) ISNULL) THEN (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) WHEN CAST(t0.c0 AS INTEGER) THEN ((rt1.c2) ISNULL) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)) THEN rt1.c1 WHEN CASE WHEN rt1.c1 THEN t0.c0 WHEN rt1.c1 THEN '-748815875' WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END THEN '-210025525' ELSE CASE t0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END END;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((x'') NOTNULL) IN ())) ORDER BY CASE WHEN x'' THEN (NOT (rt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x'') NOTNULL) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN x'' THEN (NOT (rt0.c1)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((x'') NOTNULL) IN ())) ORDER BY CASE WHEN x'' THEN (NOT (rt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x'') NOTNULL) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN x'' THEN (NOT (rt0.c1)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((x'') NOTNULL) IN ())) ORDER BY CASE WHEN x'' THEN (NOT (rt0.c1)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((0.060621349517191114) BETWEEN (rt0.c6) AND (rt0.c4))) ISNULL)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c6 ELSE rt0.c4 END) NOTNULL)  NULLS LAST, (((rt0.c2)-(rt0.c1)) IN (((rt0.c1)AND(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.060621349517191114) BETWEEN (rt0.c6) AND (rt0.c4))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c6 ELSE rt0.c4 END) NOTNULL)  NULLS LAST, (((rt0.c2)-(rt0.c1)) IN (((rt0.c1)AND(rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((0.060621349517191114) BETWEEN (rt0.c6) AND (rt0.c4))) ISNULL)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c6 ELSE rt0.c4 END) NOTNULL)  NULLS LAST, (((rt0.c2)-(rt0.c1)) IN (((rt0.c1)AND(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.060621349517191114) BETWEEN (rt0.c6) AND (rt0.c4))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c6 ELSE rt0.c4 END) NOTNULL)  NULLS LAST, (((rt0.c2)-(rt0.c1)) IN (((rt0.c1)AND(rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((0.060621349517191114) BETWEEN (rt0.c6) AND (rt0.c4))) ISNULL)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c6 ELSE rt0.c4 END) NOTNULL)  NULLS LAST, (((rt0.c2)-(rt0.c1)) IN (((rt0.c1)AND(rt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0 INNER JOIN rt0 ON (((((rt0.c0))>((rt0.c3))))<(TRIM(rt1.c1, rt0.c3))) WHERE (((((((((CAST(rt0.c3 AS NUMERIC))OR(rt1.c1 COLLATE RTRIM)))AND(((rt0.c5)<=(t0.c0)))))AND(CAST('A!' AS REAL))))AND(((((rt1.c2)OR('s~ipixES፹')))AND(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c3 AS NUMERIC))OR(rt1.c1 COLLATE RTRIM)))AND(((rt0.c5)<=(t0.c0)))))AND(CAST('A!' AS REAL))))AND(((((rt1.c2)OR('s~ipixES፹')))AND(rt0.c5))))) IS TRUE)  as count FROM rt1, t0 INNER JOIN rt0 ON (((((rt0.c0))>((rt0.c3))))<(TRIM(rt1.c1, rt0.c3))));
SELECT COUNT(*) FROM rt1, t0 INNER JOIN rt0 ON (((((rt0.c0))>((rt0.c3))))<(TRIM(rt1.c1, rt0.c3))) WHERE (((((((((CAST(rt0.c3 AS NUMERIC))OR(rt1.c1 COLLATE RTRIM)))AND(((rt0.c5)<=(t0.c0)))))AND(CAST('A!' AS REAL))))AND(((((rt1.c2)OR('s~ipixES፹')))AND(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c3 AS NUMERIC))OR(rt1.c1 COLLATE RTRIM)))AND(((rt0.c5)<=(t0.c0)))))AND(CAST('A!' AS REAL))))AND(((((rt1.c2)OR('s~ipixES፹')))AND(rt0.c5))))) IS TRUE)  as count FROM rt1, t0 INNER JOIN rt0 ON (((((rt0.c0))>((rt0.c3))))<(TRIM(rt1.c1, rt0.c3))));
SELECT COUNT(*) FROM rt1, t0 INNER JOIN rt0 ON (((((rt0.c0))>((rt0.c3))))<(TRIM(rt1.c1, rt0.c3))) WHERE (((((((((CAST(rt0.c3 AS NUMERIC))OR(rt1.c1 COLLATE RTRIM)))AND(((rt0.c5)<=(t0.c0)))))AND(CAST('A!' AS REAL))))AND(((((rt1.c2)OR('s~ipixES፹')))AND(rt0.c5)))));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (NULL) ORDER BY ((']9+')<<(rt1.c0 COLLATE BINARY)), (((rt0.c2 IN ())) BETWEEN (8.956057E8) AND (((rt0.c2)!=(rt0.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((']9+')<<(rt1.c0 COLLATE BINARY)), (((rt0.c2 IN ())) BETWEEN (8.956057E8) AND (((rt0.c2)!=(rt0.c4)))) DESC);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (NULL) ORDER BY ((']9+')<<(rt1.c0 COLLATE BINARY)), (((rt0.c2 IN ())) BETWEEN (8.956057E8) AND (((rt0.c2)!=(rt0.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((']9+')<<(rt1.c0 COLLATE BINARY)), (((rt0.c2 IN ())) BETWEEN (8.956057E8) AND (((rt0.c2)!=(rt0.c4)))) DESC);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (NULL) ORDER BY ((']9+')<<(rt1.c0 COLLATE BINARY)), (((rt0.c2 IN ())) BETWEEN (8.956057E8) AND (((rt0.c2)!=(rt0.c4)))) DESC;
SELECT * FROM rt0, rt1 WHERE ((NOT (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((NOT (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((NOT (rt0.c1)) COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS BLOB))IS((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS BLOB))IS((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS BLOB))IS((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS BLOB))IS((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS BLOB))IS((rt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((CAST(rt0.c1 AS REAL)) BETWEEN (rt0.c0) AND (t0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c5) IS FALSE))>(rt0.c4)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL)) BETWEEN (rt0.c0) AND (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((((rt0.c5) IS FALSE))>(rt0.c4)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((CAST(rt0.c1 AS REAL)) BETWEEN (rt0.c0) AND (t0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c5) IS FALSE))>(rt0.c4)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL)) BETWEEN (rt0.c0) AND (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((((rt0.c5) IS FALSE))>(rt0.c4)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((CAST(rt0.c1 AS REAL)) BETWEEN (rt0.c0) AND (t0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c5) IS FALSE))>(rt0.c4)) ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (-1952546862 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((-1952546862 COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (-1952546862 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((-1952546862 COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (-1952546862 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c2 COLLATE BINARY AS INTEGER)) ORDER BY ABS(rt1.c2)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY ABS(rt1.c2)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c2 COLLATE BINARY AS INTEGER)) ORDER BY ABS(rt1.c2)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY ABS(rt1.c2)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c2 COLLATE BINARY AS INTEGER)) ORDER BY ABS(rt1.c2)  NULLS LAST;
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4)))AND(((rt0.c1)OR(0xffffffffc3a70ce9)))))OR(((NULL) NOTNULL))) WHERE ((((rt0.c6 IN ('\n}㔸'))) NOT BETWEEN (t0.c0) AND ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c6 IN ('\n}㔸'))) NOT BETWEEN (t0.c0) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4)))AND(((rt0.c1)OR(0xffffffffc3a70ce9)))))OR(((NULL) NOTNULL))));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4)))AND(((rt0.c1)OR(0xffffffffc3a70ce9)))))OR(((NULL) NOTNULL))) WHERE ((((rt0.c6 IN ('\n}㔸'))) NOT BETWEEN (t0.c0) AND ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c6 IN ('\n}㔸'))) NOT BETWEEN (t0.c0) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4)))AND(((rt0.c1)OR(0xffffffffc3a70ce9)))))OR(((NULL) NOTNULL))));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4)))AND(((rt0.c1)OR(0xffffffffc3a70ce9)))))OR(((NULL) NOTNULL))) WHERE ((((rt0.c6 IN ('\n}㔸'))) NOT BETWEEN (t0.c0) AND ((+ (rt0.c0)))));
SELECT ALL * FROM rt1, t0 WHERE ('-1175299794') ORDER BY (((rt1.c0 IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT (('-1175299794') IS TRUE)  as count FROM rt1, t0 ORDER BY (((rt1.c0 IN ())) ISNULL));
SELECT ALL * FROM rt1, t0 WHERE ('-1175299794') ORDER BY (((rt1.c0 IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT (('-1175299794') IS TRUE)  as count FROM rt1, t0 ORDER BY (((rt1.c0 IN ())) ISNULL));
SELECT ALL * FROM rt1, t0 WHERE ('-1175299794') ORDER BY (((rt1.c0 IN ())) ISNULL);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL)) NOTNULL));
SELECT ALL * FROM rt0, t0 WHERE (rt0.c4) ORDER BY LOWER(rt0.c0 COLLATE RTRIM), ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c5 WHEN 0Xffffffffa95d3b79 THEN rt0.c0 END)|(LAST_INSERT_ROWID())), UNLIKELY(DISTINCT ((((rt0.c0)AND(rt0.c0)))OR(t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0, t0 ORDER BY LOWER(rt0.c0 COLLATE RTRIM), ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c5 WHEN 0xffffffffa95d3b79 THEN rt0.c0 END)|(LAST_INSERT_ROWID())), UNLIKELY(DISTINCT ((((rt0.c0)AND(rt0.c0)))OR(t0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (rt0.c4) ORDER BY LOWER(rt0.c0 COLLATE RTRIM), ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c5 WHEN 0Xffffffffa95d3b79 THEN rt0.c0 END)|(LAST_INSERT_ROWID())), UNLIKELY(DISTINCT ((((rt0.c0)AND(rt0.c0)))OR(t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0, t0 ORDER BY LOWER(rt0.c0 COLLATE RTRIM), ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c5 WHEN 0xffffffffa95d3b79 THEN rt0.c0 END)|(LAST_INSERT_ROWID())), UNLIKELY(DISTINCT ((((rt0.c0)AND(rt0.c0)))OR(t0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (rt0.c4) ORDER BY LOWER(rt0.c0 COLLATE RTRIM), ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c5 WHEN 0Xffffffffa95d3b79 THEN rt0.c0 END)|(LAST_INSERT_ROWID())), UNLIKELY(DISTINCT ((((rt0.c0)AND(rt0.c0)))OR(t0.c0))) DESC  NULLS FIRST;
SELECT * FROM rt1, t0, rt0 WHERE (((((rt0.c5, rt0.c6, rt1.c2))!=((rt0.c4, rt0.c2, rt1.c1))) IN (((rt0.c3)-(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5, rt0.c6, rt1.c2))<>((rt0.c4, rt0.c2, rt1.c1))) IN (((rt0.c3)-(rt0.c0))))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (((((rt0.c5, rt0.c6, rt1.c2))!=((rt0.c4, rt0.c2, rt1.c1))) IN (((rt0.c3)-(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5, rt0.c6, rt1.c2))<>((rt0.c4, rt0.c2, rt1.c1))) IN (((rt0.c3)-(rt0.c0))))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (((((rt0.c5, rt0.c6, rt1.c2))!=((rt0.c4, rt0.c2, rt1.c1))) IN (((rt0.c3)-(rt0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c0) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) IS FALSE) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c0) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) IS FALSE) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c0) IS FALSE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (LIKE(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (- (t0.c0)), 'k')) ORDER BY (+ ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (- (t0.c0)), 'k')) IS TRUE)  as count FROM t0 ORDER BY (+ ((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKE(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (- (t0.c0)), 'k')) ORDER BY (+ ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (- (t0.c0)), 'k')) IS TRUE)  as count FROM t0 ORDER BY (+ ((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKE(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (- (t0.c0)), 'k')) ORDER BY (+ ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 INDEXED BY i30 WHERE (TRIM(((rt0.c5)<>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c5)<>(rt0.c2)))) IS TRUE)  as count FROM rt0 INDEXED BY i30);
SELECT ALL * FROM rt0 INDEXED BY i30 WHERE (TRIM(((rt0.c5)<>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c5)<>(rt0.c2)))) IS TRUE)  as count FROM rt0 INDEXED BY i30);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY CASE WHEN ((t0.c0)|(t0.c0)) THEN t0.c0 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0)|(t0.c0)) THEN t0.c0 COLLATE NOCASE END  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY CASE WHEN ((t0.c0)|(t0.c0)) THEN t0.c0 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0)|(t0.c0)) THEN t0.c0 COLLATE NOCASE END  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY CASE WHEN ((t0.c0)|(t0.c0)) THEN t0.c0 COLLATE NOCASE END  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)) THEN ((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)) ELSE SQLITE_COMPILEOPTION_USED(rt1.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)) THEN ((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)) ELSE SQLITE_COMPILEOPTION_USED(rt1.c2) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)) THEN ((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)) ELSE SQLITE_COMPILEOPTION_USED(rt1.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)) THEN ((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)) ELSE SQLITE_COMPILEOPTION_USED(rt1.c2) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)) THEN ((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)) ELSE SQLITE_COMPILEOPTION_USED(rt1.c2) END);
SELECT ALL * FROM rt0 WHERE ((((NULL)*(rt0.c5)) IN (((((((((rt0.c6)OR(rt0.c6)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c5)), CHAR(rt0.c1)))) ORDER BY ((((CASE WHEN rt0.c4 THEN 0.4810244183697445 ELSE rt0.c1 END)AND(((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c6)))))AND(((rt0.c5) ISNULL)))  NULLS LAST, CASE rt0.c3  WHEN rt0.c5 THEN rt0.c0 END COLLATE NOCASE ASC, CAST('9IKy' AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((NULL)*(rt0.c5)) IN (((((((((rt0.c6)OR(rt0.c6)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c5)), CHAR(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c4 THEN 0.4810244183697445 ELSE rt0.c1 END)AND(((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c6)))))AND(((rt0.c5) ISNULL)))  NULLS LAST, CASE rt0.c3  WHEN rt0.c5 THEN rt0.c0 END COLLATE NOCASE ASC, CAST('9IKy' AS NUMERIC));
SELECT ALL * FROM rt0 WHERE ((((NULL)*(rt0.c5)) IN (((((((((rt0.c6)OR(rt0.c6)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c5)), CHAR(rt0.c1)))) ORDER BY ((((CASE WHEN rt0.c4 THEN 0.4810244183697445 ELSE rt0.c1 END)AND(((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c6)))))AND(((rt0.c5) ISNULL)))  NULLS LAST, CASE rt0.c3  WHEN rt0.c5 THEN rt0.c0 END COLLATE NOCASE ASC, CAST('9IKy' AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((NULL)*(rt0.c5)) IN (((((((((rt0.c6)OR(rt0.c6)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c5)), CHAR(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c4 THEN 0.4810244183697445 ELSE rt0.c1 END)AND(((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c6)))))AND(((rt0.c5) ISNULL)))  NULLS LAST, CASE rt0.c3  WHEN rt0.c5 THEN rt0.c0 END COLLATE NOCASE ASC, CAST('9IKy' AS NUMERIC));
SELECT ALL * FROM rt0 WHERE ((((NULL)*(rt0.c5)) IN (((((((((rt0.c6)OR(rt0.c6)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c5)), CHAR(rt0.c1)))) ORDER BY ((((CASE WHEN rt0.c4 THEN 0.4810244183697445 ELSE rt0.c1 END)AND(((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c6)))))AND(((rt0.c5) ISNULL)))  NULLS LAST, CASE rt0.c3  WHEN rt0.c5 THEN rt0.c0 END COLLATE NOCASE ASC, CAST('9IKy' AS NUMERIC);
SELECT * FROM rt0, t0 WHERE ((~ (TYPEOF(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (TYPEOF(rt0.c0)))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((~ (TYPEOF(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (TYPEOF(rt0.c0)))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((~ (TYPEOF(rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN rt1.c2 THEN ((rt1.c0)|(rt0.c2)) WHEN '-450514825' THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)) WHEN ((rt0.c1)>>(rt0.c2)) THEN ((rt0.c5) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 THEN ((rt1.c0)|(rt0.c2)) WHEN '-450514825' THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)) WHEN ((rt0.c1)>>(rt0.c2)) THEN ((rt0.c5) ISNULL) END) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN rt1.c2 THEN ((rt1.c0)|(rt0.c2)) WHEN '-450514825' THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)) WHEN ((rt0.c1)>>(rt0.c2)) THEN ((rt0.c5) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 THEN ((rt1.c0)|(rt0.c2)) WHEN '-450514825' THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)) WHEN ((rt0.c1)>>(rt0.c2)) THEN ((rt0.c5) ISNULL) END) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN rt1.c2 THEN ((rt1.c0)|(rt0.c2)) WHEN '-450514825' THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)) WHEN ((rt0.c1)>>(rt0.c2)) THEN ((rt0.c5) ISNULL) END);
SELECT * FROM rt1 NOT INDEXED, t0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1 NOT INDEXED, t0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1 NOT INDEXED, t0 WHERE (rt1.c0);
SELECT COUNT(*) FROM rt1 WHERE (CAST((rt1.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST((rt1.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST((rt1.c0 IN ()) AS INTEGER));
SELECT * FROM rt1 WHERE ((rt1.c2 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((rt1.c2 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((rt1.c2 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY rt1.c1 COLLATE NOCASE, ((rt1.c2) NOTNULL), (+ (((rt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 COLLATE NOCASE, ((rt1.c2) NOTNULL), (+ (((rt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY rt1.c1 COLLATE NOCASE, ((rt1.c2) NOTNULL), (+ (((rt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 COLLATE NOCASE, ((rt1.c2) NOTNULL), (+ (((rt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY rt1.c1 COLLATE NOCASE, ((rt1.c2) NOTNULL), (+ (((rt1.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((((((rt0.c5)OR(rt0.c1)))AND(x'')) IN ())) ORDER BY ((((((rt1.c1)OR(rt0.c4)))AND(rt1.c2))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5)OR(rt0.c1)))AND(x'')) IN ())) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((((rt1.c1)OR(rt0.c4)))AND(rt1.c2))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((((((rt0.c5)OR(rt0.c1)))AND(x'')) IN ())) ORDER BY ((((((rt1.c1)OR(rt0.c4)))AND(rt1.c2))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5)OR(rt0.c1)))AND(x'')) IN ())) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((((rt1.c1)OR(rt0.c4)))AND(rt1.c2))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((((((rt0.c5)OR(rt0.c1)))AND(x'')) IN ())) ORDER BY ((((((rt1.c1)OR(rt0.c4)))AND(rt1.c2))) IS TRUE) DESC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (((((((rt1.c0)AND(t0.c0)))OR('1652861076')))AND(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(t0.c0)))OR('1652861076')))AND(rt1.c0))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((((((rt1.c0)AND(t0.c0)))OR('1652861076')))AND(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(t0.c0)))OR('1652861076')))AND(rt1.c0))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((((((rt1.c0)AND(t0.c0)))OR('1652861076')))AND(rt1.c0)));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0) IS FALSE))AND(LIKELIHOOD(DISTINCT t0.c0, 0.40924295689948853))))AND(t0.c0))) ORDER BY ((('' IN ()))|(t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) IS FALSE))AND(LIKELIHOOD(DISTINCT t0.c0, 0.40924295689948853))))AND(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY ((('' IN ()))|(t0.c0)) ASC);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0) IS FALSE))AND(LIKELIHOOD(DISTINCT t0.c0, 0.40924295689948853))))AND(t0.c0))) ORDER BY ((('' IN ()))|(t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) IS FALSE))AND(LIKELIHOOD(DISTINCT t0.c0, 0.40924295689948853))))AND(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY ((('' IN ()))|(t0.c0)) ASC);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0) IS FALSE))AND(LIKELIHOOD(DISTINCT t0.c0, 0.40924295689948853))))AND(t0.c0))) ORDER BY ((('' IN ()))|(t0.c0)) ASC;
SELECT * FROM rt1 INDEXED BY i30 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS NUMERIC)) NOTNULL) WHERE (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (0.27039345865494246))) IS FALSE)) ORDER BY CASE WHEN rt1.c2 COLLATE BINARY THEN ('-2095157512' IN ()) ELSE rt1.c1 END  NULLS LAST, ((rt1.c0)GLOB(t0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (0.27039345865494246))) IS FALSE)) IS TRUE)  as count FROM rt1 INDEXED BY i30 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS NUMERIC)) NOTNULL) ORDER BY CASE WHEN rt1.c2 COLLATE BINARY THEN ('-2095157512' IN ()) ELSE rt1.c1 END  NULLS LAST, ((rt1.c0)GLOB(t0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM rt1 INDEXED BY i30 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS NUMERIC)) NOTNULL) WHERE (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (0.27039345865494246))) IS FALSE)) ORDER BY CASE WHEN rt1.c2 COLLATE BINARY THEN ('-2095157512' IN ()) ELSE rt1.c1 END  NULLS LAST, ((rt1.c0)GLOB(t0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (0.27039345865494246))) IS FALSE)) IS TRUE)  as count FROM rt1 INDEXED BY i30 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS NUMERIC)) NOTNULL) ORDER BY CASE WHEN rt1.c2 COLLATE BINARY THEN ('-2095157512' IN ()) ELSE rt1.c1 END  NULLS LAST, ((rt1.c0)GLOB(t0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (LIKELIHOOD(DISTINCT CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, 0.24724141822830614)) ORDER BY CAST(((t0.c0)%(t0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, 0.24724141822830614)) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)%(t0.c0)) AS INTEGER));
SELECT * FROM t0 WHERE (LIKELIHOOD(DISTINCT CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, 0.24724141822830614)) ORDER BY CAST(((t0.c0)%(t0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, 0.24724141822830614)) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)%(t0.c0)) AS INTEGER));
SELECT * FROM t0 WHERE (LIKELIHOOD(DISTINCT CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, 0.24724141822830614)) ORDER BY CAST(((t0.c0)%(t0.c0)) AS INTEGER);
SELECT * FROM t0, rt0, rt1 WHERE (CAST(DATETIME('0.5442633096738544', x'9ea5', rt0.c2, rt0.c0, x'8fe4') AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(DATETIME('0.5442633096738544', x'9ea5', rt0.c2, rt0.c0, x'8fe4') AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE (CAST(DATETIME('0.5442633096738544', x'9ea5', rt0.c2, rt0.c0, x'8fe4') AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(DATETIME('0.5442633096738544', x'9ea5', rt0.c2, rt0.c0, x'8fe4') AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE (CAST(DATETIME('0.5442633096738544', x'9ea5', rt0.c2, rt0.c0, x'8fe4') AS NUMERIC));
SELECT COUNT(*) FROM rt1, t0 WHERE (((~ (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (((~ (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (((~ (rt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c2 IN (rt1.c0)) COLLATE BINARY) ORDER BY NULL COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY NULL COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c2 IN (rt1.c0)) COLLATE BINARY) ORDER BY NULL COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY NULL COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c2 IN (rt1.c0)) COLLATE BINARY) ORDER BY NULL COLLATE NOCASE;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) IS TRUE) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS TRUE) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) IS TRUE) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS TRUE) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) IS TRUE) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)));
SELECT * FROM t0 WHERE (CASE ('-484013150' IN (t0.c0))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ('-484013150' IN (t0.c0))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE ('-484013150' IN (t0.c0))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ('-484013150' IN (t0.c0))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE ('-484013150' IN (t0.c0))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 END END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c1 THEN rt1.c0 END IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c1 THEN rt1.c0 END IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c0 END IN ()));
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((NOT (rt1.c0))) BETWEEN (rt1.c1 COLLATE BINARY) AND ((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c0))) BETWEEN (rt1.c1 COLLATE BINARY) AND ((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((NOT (rt1.c0))) BETWEEN (rt1.c1 COLLATE BINARY) AND ((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c0))) BETWEEN (rt1.c1 COLLATE BINARY) AND ((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((NOT (rt1.c0))) BETWEEN (rt1.c1 COLLATE BINARY) AND ((rt0.c4 IN ()))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (+ (rt0.c3)) COLLATE RTRIM WHERE (rt0.c5 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c5 COLLATE NOCASE) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (+ (rt0.c3)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (+ (rt0.c3)) COLLATE RTRIM WHERE (rt0.c5 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c5 COLLATE NOCASE) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (+ (rt0.c3)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (+ (rt0.c3)) COLLATE RTRIM WHERE (rt0.c5 COLLATE NOCASE);
SELECT ALL * FROM t0, rt0, rt1 WHERE (rt0.c5) ORDER BY rt0.c5 COLLATE BINARY COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY rt0.c5 COLLATE BINARY COLLATE NOCASE ASC);
SELECT ALL * FROM t0, rt0, rt1 WHERE (rt0.c5) ORDER BY rt0.c5 COLLATE BINARY COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY rt0.c5 COLLATE BINARY COLLATE NOCASE ASC);
SELECT ALL * FROM t0, rt0, rt1 WHERE (rt0.c5) ORDER BY rt0.c5 COLLATE BINARY COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c5 WHEN t0.c0 THEN rt0.c6 WHEN x'2908' THEN rt1.c0 ELSE rt1.c1 END COLLATE NOCASE) ORDER BY (((((((((rt1.c2 IN ()))OR((- (rt0.c6)))))OR(((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(t0.c0)))AND(rt0.c2)))))AND(rt1.c1)))AND((+ (NULL))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c5 WHEN t0.c0 THEN rt0.c6 WHEN x'2908' THEN rt1.c0 ELSE rt1.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((((((((rt1.c2 IN ()))OR((- (rt0.c6)))))OR(((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(t0.c0)))AND(rt0.c2)))))AND(rt1.c1)))AND((+ (NULL)))));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c5 WHEN t0.c0 THEN rt0.c6 WHEN x'2908' THEN rt1.c0 ELSE rt1.c1 END COLLATE NOCASE) ORDER BY (((((((((rt1.c2 IN ()))OR((- (rt0.c6)))))OR(((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(t0.c0)))AND(rt0.c2)))))AND(rt1.c1)))AND((+ (NULL))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c5 WHEN t0.c0 THEN rt0.c6 WHEN x'2908' THEN rt1.c0 ELSE rt1.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((((((((rt1.c2 IN ()))OR((- (rt0.c6)))))OR(((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(t0.c0)))AND(rt0.c2)))))AND(rt1.c1)))AND((+ (NULL)))));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c5 WHEN t0.c0 THEN rt0.c6 WHEN x'2908' THEN rt1.c0 ELSE rt1.c1 END COLLATE NOCASE) ORDER BY (((((((((rt1.c2 IN ()))OR((- (rt0.c6)))))OR(((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(t0.c0)))AND(rt0.c2)))))AND(rt1.c1)))AND((+ (NULL))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c4)*(((0.7424434386286042)>=(rt1.c2))))) ORDER BY 0.01047276027913302 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)*(((0.7424434386286042)>=(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY 0.01047276027913302 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c4)*(((0.7424434386286042)>=(rt1.c2))))) ORDER BY 0.01047276027913302 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)*(((0.7424434386286042)>=(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY 0.01047276027913302 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c4)*(((0.7424434386286042)>=(rt1.c2))))) ORDER BY 0.01047276027913302 DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE)) ORDER BY 'ApixvM' COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY 'ApixvM' COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE)) ORDER BY 'ApixvM' COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY 'ApixvM' COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE)) ORDER BY 'ApixvM' COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM t0, rt0, rt1 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE ((NOT (x'')));
SELECT ALL * FROM rt1 WHERE (((((((((((((((x'')OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((x'')OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((((((x'')OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((x'')OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((((((x'')OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0))) NOT NULL));
SELECT * FROM t0, rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c4)AND(rt1.c2))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c6))) AND ((- (rt0.c5)))) WHERE (COALESCE(DISTINCT ((rt1.c0)<<(rt0.c6)), ((rt0.c4)LIKE(rt0.c1)))) ORDER BY ((('')) NOT BETWEEN ((((t0.c0)GLOB(rt1.c1)))) AND ((((((((((rt0.c6)AND(rt0.c4)))OR(rt1.c0)))OR(rt0.c3)))AND(rt1.c0))))) ASC, ((CAST(rt0.c1 AS TEXT))LIKE(TRIM(DISTINCT rt1.c0, rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((rt1.c0)<<(rt0.c6)), ((rt0.c4)LIKE(rt0.c1)))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c4)AND(rt1.c2))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c6))) AND ((- (rt0.c5)))) ORDER BY ((('')) NOT BETWEEN ((((t0.c0)GLOB(rt1.c1)))) AND ((((((((((rt0.c6)AND(rt0.c4)))OR(rt1.c0)))OR(rt0.c3)))AND(rt1.c0))))) ASC, ((CAST(rt0.c1 AS TEXT))LIKE(TRIM(DISTINCT rt1.c0, rt0.c0))) DESC  NULLS FIRST);
SELECT * FROM t0, rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c4)AND(rt1.c2))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c6))) AND ((- (rt0.c5)))) WHERE (COALESCE(DISTINCT ((rt1.c0)<<(rt0.c6)), ((rt0.c4)LIKE(rt0.c1)))) ORDER BY ((('')) NOT BETWEEN ((((t0.c0)GLOB(rt1.c1)))) AND ((((((((((rt0.c6)AND(rt0.c4)))OR(rt1.c0)))OR(rt0.c3)))AND(rt1.c0))))) ASC, ((CAST(rt0.c1 AS TEXT))LIKE(TRIM(DISTINCT rt1.c0, rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((rt1.c0)<<(rt0.c6)), ((rt0.c4)LIKE(rt0.c1)))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c4)AND(rt1.c2))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c6))) AND ((- (rt0.c5)))) ORDER BY ((('')) NOT BETWEEN ((((t0.c0)GLOB(rt1.c1)))) AND ((((((((((rt0.c6)AND(rt0.c4)))OR(rt1.c0)))OR(rt0.c3)))AND(rt1.c0))))) ASC, ((CAST(rt0.c1 AS TEXT))LIKE(TRIM(DISTINCT rt1.c0, rt0.c0))) DESC  NULLS FIRST);
SELECT * FROM t0, rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c4)AND(rt1.c2))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c6))) AND ((- (rt0.c5)))) WHERE (COALESCE(DISTINCT ((rt1.c0)<<(rt0.c6)), ((rt0.c4)LIKE(rt0.c1)))) ORDER BY ((('')) NOT BETWEEN ((((t0.c0)GLOB(rt1.c1)))) AND ((((((((((rt0.c6)AND(rt0.c4)))OR(rt1.c0)))OR(rt0.c3)))AND(rt1.c0))))) ASC, ((CAST(rt0.c1 AS TEXT))LIKE(TRIM(DISTINCT rt1.c0, rt0.c0))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST(((((((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c1)))OR(0.7149978254876084)))OR(rt0.c5)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c1)))OR(0.7149978254876084)))OR(rt0.c5)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((((((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c1)))OR(0.7149978254876084)))OR(rt0.c5)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c1)))OR(0.7149978254876084)))OR(rt0.c5)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((((((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c1)))OR(0.7149978254876084)))OR(rt0.c5)) AS REAL));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON CAST(((((rt1.c2)OR(rt1.c2)))AND(t0.c0)) AS REAL) WHERE (CAST(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END AS TEXT)) ORDER BY (((rt1.c1) BETWEEN (rt1.c2) AND ('O]ChiJẠ!')) IN ()), (((((((((rt1.c2 IN ()))OR(((x'f74c5b0c') IS TRUE))))OR(1142682497)))OR((t0.c0 IN ()))))OR(0.7870816804553056))  NULLS FIRST, json_object(((rt1.c2)>(0.5708664528612196)), ((t0.c0)&(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END AS TEXT)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON CAST(((((rt1.c2)OR(rt1.c2)))AND(t0.c0)) AS REAL) ORDER BY (((rt1.c1) BETWEEN (rt1.c2) AND ('O]ChiJẠ!')) IN ()), (((((((((rt1.c2 IN ()))OR(((x'f74c5b0c') IS TRUE))))OR(1142682497)))OR((t0.c0 IN ()))))OR(0.7870816804553056))  NULLS FIRST, json_object(((rt1.c2)>(0.5708664528612196)), ((t0.c0)&(rt1.c0))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON CAST(((((rt1.c2)OR(rt1.c2)))AND(t0.c0)) AS REAL) WHERE (CAST(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END AS TEXT)) ORDER BY (((rt1.c1) BETWEEN (rt1.c2) AND ('O]ChiJẠ!')) IN ()), (((((((((rt1.c2 IN ()))OR(((x'f74c5b0c') IS TRUE))))OR(1142682497)))OR((t0.c0 IN ()))))OR(0.7870816804553056))  NULLS FIRST, json_object(((rt1.c2)>(0.5708664528612196)), ((t0.c0)&(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END AS TEXT)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON CAST(((((rt1.c2)OR(rt1.c2)))AND(t0.c0)) AS REAL) ORDER BY (((rt1.c1) BETWEEN (rt1.c2) AND ('O]ChiJẠ!')) IN ()), (((((((((rt1.c2 IN ()))OR(((x'f74c5b0c') IS TRUE))))OR(1142682497)))OR((t0.c0 IN ()))))OR(0.7870816804553056))  NULLS FIRST, json_object(((rt1.c2)>(0.5708664528612196)), ((t0.c0)&(rt1.c0))));
SELECT * FROM t0, rt1 WHERE ((NOT ((NOT (rt1.c1))))) ORDER BY (((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (rt1.c1))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) DESC);
SELECT * FROM t0, rt1 WHERE ((NOT ((NOT (rt1.c1))))) ORDER BY (((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (rt1.c1))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) DESC);
SELECT * FROM t0, rt1 WHERE ((NOT ((NOT (rt1.c1))))) ORDER BY (((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) DESC;
SELECT * FROM rt1 WHERE ((((((rt1.c2 IN ()))OR(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))OR(ABS(DISTINCT x''))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2 IN ()))OR(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))OR(ABS(DISTINCT x'')))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c2 IN ()))OR(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))OR(ABS(DISTINCT x''))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2 IN ()))OR(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))OR(ABS(DISTINCT x'')))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c2 IN ()))OR(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))OR(ABS(DISTINCT x''))));
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT NULL)) NOT BETWEEN (t0.c0) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL)) NOT BETWEEN (t0.c0) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT NULL)) NOT BETWEEN (t0.c0) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL)) NOT BETWEEN (t0.c0) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT NULL)) NOT BETWEEN (t0.c0) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)));
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c6 COLLATE RTRIM  WHEN ((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c6)) ELSE ((rt0.c1)>=(rt0.c0)) END) ORDER BY CAST(((rt0.c4)||(rt0.c2)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c6 COLLATE RTRIM  WHEN ((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c6)) ELSE ((rt0.c1)>=(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4)||(rt0.c2)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c6 COLLATE RTRIM  WHEN ((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c6)) ELSE ((rt0.c1)>=(rt0.c0)) END) ORDER BY CAST(((rt0.c4)||(rt0.c2)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c6 COLLATE RTRIM  WHEN ((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c6)) ELSE ((rt0.c1)>=(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4)||(rt0.c2)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c6 COLLATE RTRIM  WHEN ((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c6)) ELSE ((rt0.c1)>=(rt0.c0)) END) ORDER BY CAST(((rt0.c4)||(rt0.c2)) AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (rt0.c3) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (rt0.c3) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (rt0.c3) ORDER BY NULL;
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (rt1.c1) ORDER BY json_object(((rt1.c1) IS TRUE), x'')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM t0, rt1 ORDER BY json_object(((rt1.c1) IS TRUE), x'')  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (rt1.c1) ORDER BY json_object(((rt1.c1) IS TRUE), x'')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM t0, rt1 ORDER BY json_object(((rt1.c1) IS TRUE), x'')  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL) ORDER BY ((((((((CAST(rt1.c2 AS INTEGER))AND(((0.3536004419091515)/(rt1.c1)))))OR((~ (rt1.c1)))))OR((rt1.c0 IN ()))))AND(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY ((((((((CAST(rt1.c2 AS INTEGER))AND(((0.3536004419091515)/(rt1.c1)))))OR((~ (rt1.c1)))))OR((rt1.c0 IN ()))))AND(NULL)) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL) ORDER BY ((((((((CAST(rt1.c2 AS INTEGER))AND(((0.3536004419091515)/(rt1.c1)))))OR((~ (rt1.c1)))))OR((rt1.c0 IN ()))))AND(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY ((((((((CAST(rt1.c2 AS INTEGER))AND(((0.3536004419091515)/(rt1.c1)))))OR((~ (rt1.c1)))))OR((rt1.c0 IN ()))))AND(NULL)) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL) ORDER BY ((((((((CAST(rt1.c2 AS INTEGER))AND(((0.3536004419091515)/(rt1.c1)))))OR((~ (rt1.c1)))))OR((rt1.c0 IN ()))))AND(NULL)) DESC;
SELECT * FROM rt1 WHERE (((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)))AND(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)))AND(rt1.c2))) ORDER BY ((((((((((rt1.c2) NOT BETWEEN ('-1478010841') AND (rt1.c2)))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (NULL)))))AND(CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN NULL THEN rt1.c2 ELSE rt1.c0 END)))OR(CAST(rt1.c2 AS NUMERIC))))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) ASC  NULLS LAST, ((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1))) BETWEEN ((rt1.c1 IN ())) AND (rt1.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)))AND(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)))AND(rt1.c2))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY ((((((((((rt1.c2) NOT BETWEEN ('-1478010841') AND (rt1.c2)))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (NULL)))))AND(CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN NULL THEN rt1.c2 ELSE rt1.c0 END)))OR(CAST(rt1.c2 AS NUMERIC))))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) ASC  NULLS LAST, ((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1))) BETWEEN ((rt1.c1 IN ())) AND (rt1.c2))  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)))AND(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)))AND(rt1.c2))) ORDER BY ((((((((((rt1.c2) NOT BETWEEN ('-1478010841') AND (rt1.c2)))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (NULL)))))AND(CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN NULL THEN rt1.c2 ELSE rt1.c0 END)))OR(CAST(rt1.c2 AS NUMERIC))))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) ASC  NULLS LAST, ((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1))) BETWEEN ((rt1.c1 IN ())) AND (rt1.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)))AND(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)))AND(rt1.c2))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY ((((((((((rt1.c2) NOT BETWEEN ('-1478010841') AND (rt1.c2)))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (NULL)))))AND(CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN NULL THEN rt1.c2 ELSE rt1.c0 END)))OR(CAST(rt1.c2 AS NUMERIC))))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) ASC  NULLS LAST, ((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1))) BETWEEN ((rt1.c1 IN ())) AND (rt1.c2))  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)))AND(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)))AND(rt1.c2))) ORDER BY ((((((((((rt1.c2) NOT BETWEEN ('-1478010841') AND (rt1.c2)))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (NULL)))))AND(CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN NULL THEN rt1.c2 ELSE rt1.c0 END)))OR(CAST(rt1.c2 AS NUMERIC))))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) ASC  NULLS LAST, ((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1))) BETWEEN ((rt1.c1 IN ())) AND (rt1.c2))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(CASE rt1.c0  WHEN 'RqVf8k域' THEN t0.c0 END AS INTEGER)) ORDER BY ((CASE WHEN t0.c0 THEN rt1.c1 ELSE rt1.c0 END) NOT BETWEEN (t0.c0) AND (((('0', NULL, t0.c0)) NOT BETWEEN ((t0.c0, rt1.c0, rt1.c2)) AND ((rt1.c1, t0.c0, t0.c0))))), ((((rt1.c0)>(rt1.c1)))>(rt1.c1))  NULLS FIRST, (((((((t0.c0))<((t0.c0))))OR(((rt1.c0)<=(t0.c0)))))AND(((rt1.c2)>>(NULL))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c0  WHEN 'RqVf8k域' THEN t0.c0 END AS INTEGER)) IS TRUE)  as count FROM t0, rt1 ORDER BY ((CASE WHEN t0.c0 THEN rt1.c1 ELSE rt1.c0 END) NOT BETWEEN (t0.c0) AND (((('0', NULL, t0.c0)) NOT BETWEEN ((t0.c0, rt1.c0, rt1.c2)) AND ((rt1.c1, t0.c0, t0.c0))))), ((((rt1.c0)>(rt1.c1)))>(rt1.c1))  NULLS FIRST, (((((((t0.c0))<((t0.c0))))OR(((rt1.c0)<=(t0.c0)))))AND(((rt1.c2)>>(NULL)))));
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(CASE rt1.c0  WHEN 'RqVf8k域' THEN t0.c0 END AS INTEGER)) ORDER BY ((CASE WHEN t0.c0 THEN rt1.c1 ELSE rt1.c0 END) NOT BETWEEN (t0.c0) AND (((('0', NULL, t0.c0)) NOT BETWEEN ((t0.c0, rt1.c0, rt1.c2)) AND ((rt1.c1, t0.c0, t0.c0))))), ((((rt1.c0)>(rt1.c1)))>(rt1.c1))  NULLS FIRST, (((((((t0.c0))<((t0.c0))))OR(((rt1.c0)<=(t0.c0)))))AND(((rt1.c2)>>(NULL))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c0  WHEN 'RqVf8k域' THEN t0.c0 END AS INTEGER)) IS TRUE)  as count FROM t0, rt1 ORDER BY ((CASE WHEN t0.c0 THEN rt1.c1 ELSE rt1.c0 END) NOT BETWEEN (t0.c0) AND (((('0', NULL, t0.c0)) NOT BETWEEN ((t0.c0, rt1.c0, rt1.c2)) AND ((rt1.c1, t0.c0, t0.c0))))), ((((rt1.c0)>(rt1.c1)))>(rt1.c1))  NULLS FIRST, (((((((t0.c0))<((t0.c0))))OR(((rt1.c0)<=(t0.c0)))))AND(((rt1.c2)>>(NULL)))));
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(CASE rt1.c0  WHEN 'RqVf8k域' THEN t0.c0 END AS INTEGER)) ORDER BY ((CASE WHEN t0.c0 THEN rt1.c1 ELSE rt1.c0 END) NOT BETWEEN (t0.c0) AND (((('0', NULL, t0.c0)) NOT BETWEEN ((t0.c0, rt1.c0, rt1.c2)) AND ((rt1.c1, t0.c0, t0.c0))))), ((((rt1.c0)>(rt1.c1)))>(rt1.c1))  NULLS FIRST, (((((((t0.c0))<((t0.c0))))OR(((rt1.c0)<=(t0.c0)))))AND(((rt1.c2)>>(NULL))));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOTNULL)) IS FALSE));
SELECT COUNT(*) FROM rt1, t0 NOT INDEXED, rt0 WHERE (HEX(DISTINCT rt0.c1 COLLATE BINARY)) ORDER BY DATE(x'', t0.c0 COLLATE RTRIM, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)), ((((((((t0.c0)OR(rt0.c5)))AND(rt0.c4)))AND('598634342')))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY DATE(x'', t0.c0 COLLATE RTRIM, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)), ((((((((t0.c0)OR(rt0.c5)))AND(rt0.c4)))AND('598634342')))OR(rt0.c1))));
SELECT COUNT(*) FROM rt1, t0 NOT INDEXED, rt0 WHERE (HEX(DISTINCT rt0.c1 COLLATE BINARY)) ORDER BY DATE(x'', t0.c0 COLLATE RTRIM, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)), ((((((((t0.c0)OR(rt0.c5)))AND(rt0.c4)))AND('598634342')))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY DATE(x'', t0.c0 COLLATE RTRIM, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)), ((((((((t0.c0)OR(rt0.c5)))AND(rt0.c4)))AND('598634342')))OR(rt0.c1))));
SELECT COUNT(*) FROM rt1, t0 NOT INDEXED, rt0 WHERE (HEX(DISTINCT rt0.c1 COLLATE BINARY)) ORDER BY DATE(x'', t0.c0 COLLATE RTRIM, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)), ((((((((t0.c0)OR(rt0.c5)))AND(rt0.c4)))AND('598634342')))OR(rt0.c1)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((UPPER(rt1.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((UPPER(rt1.c1)) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((UPPER(rt1.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((UPPER(rt1.c1)) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((UPPER(rt1.c1)) IS FALSE));
SELECT * FROM t0 WHERE ((((t0.c0)<(t0.c0)) IN ())) ORDER BY NULL DESC  NULLS LAST, (((t0.c0)) NOT BETWEEN ((IFNULL(DISTINCT t0.c0, t0.c0))) AND (((+ (t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)<(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY NULL DESC  NULLS LAST, (((t0.c0)) NOT BETWEEN ((IFNULL(DISTINCT t0.c0, t0.c0))) AND (((+ (t0.c0))))) DESC);
SELECT * FROM t0 WHERE ((((t0.c0)<(t0.c0)) IN ())) ORDER BY NULL DESC  NULLS LAST, (((t0.c0)) NOT BETWEEN ((IFNULL(DISTINCT t0.c0, t0.c0))) AND (((+ (t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)<(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY NULL DESC  NULLS LAST, (((t0.c0)) NOT BETWEEN ((IFNULL(DISTINCT t0.c0, t0.c0))) AND (((+ (t0.c0))))) DESC);
SELECT * FROM t0 WHERE ((((t0.c0)<(t0.c0)) IN ())) ORDER BY NULL DESC  NULLS LAST, (((t0.c0)) NOT BETWEEN ((IFNULL(DISTINCT t0.c0, t0.c0))) AND (((+ (t0.c0))))) DESC;
SELECT * FROM rt0, rt1 WHERE (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c2))) BETWEEN (rt0.c6) AND (((rt0.c2) IS TRUE)))) ORDER BY (NOT (DATETIME(rt0.c0, x'99fa', ''))) DESC, ((((((((((rt0.c2)AND(rt0.c5)))OR(rt0.c0)))OR(rt1.c0)))OR('8f]-')))|(UNLIKELY(rt1.c0))), rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c2))) BETWEEN (rt0.c6) AND (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (NOT (DATETIME(rt0.c0, x'99fa', ''))) DESC, ((((((((((rt0.c2)AND(rt0.c5)))OR(rt0.c0)))OR(rt1.c0)))OR('8f]-')))|(UNLIKELY(rt1.c0))), rt0.c4  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c2))) BETWEEN (rt0.c6) AND (((rt0.c2) IS TRUE)))) ORDER BY (NOT (DATETIME(rt0.c0, x'99fa', ''))) DESC, ((((((((((rt0.c2)AND(rt0.c5)))OR(rt0.c0)))OR(rt1.c0)))OR('8f]-')))|(UNLIKELY(rt1.c0))), rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c2))) BETWEEN (rt0.c6) AND (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (NOT (DATETIME(rt0.c0, x'99fa', ''))) DESC, ((((((((((rt0.c2)AND(rt0.c5)))OR(rt0.c0)))OR(rt1.c0)))OR('8f]-')))|(UNLIKELY(rt1.c0))), rt0.c4  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c2))) BETWEEN (rt0.c6) AND (((rt0.c2) IS TRUE)))) ORDER BY (NOT (DATETIME(rt0.c0, x'99fa', ''))) DESC, ((((((((((rt0.c2)AND(rt0.c5)))OR(rt0.c0)))OR(rt1.c0)))OR('8f]-')))|(UNLIKELY(rt1.c0))), rt0.c4  NULLS LAST;
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON SQLITE_COMPILEOPTION_USED((rt1.c2 IN ())) WHERE (((((rt1.c2)LIKE(t0.c0)))|(((rt1.c1)LIKE(rt1.c1))))) ORDER BY (((NOT (t0.c0)))<=((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)LIKE(t0.c0)))|(((rt1.c1)LIKE(rt1.c1))))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON SQLITE_COMPILEOPTION_USED((rt1.c2 IN ())) ORDER BY (((NOT (t0.c0)))<=((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON SQLITE_COMPILEOPTION_USED((rt1.c2 IN ())) WHERE (((((rt1.c2)LIKE(t0.c0)))|(((rt1.c1)LIKE(rt1.c1))))) ORDER BY (((NOT (t0.c0)))<=((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)LIKE(t0.c0)))|(((rt1.c1)LIKE(rt1.c1))))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON SQLITE_COMPILEOPTION_USED((rt1.c2 IN ())) ORDER BY (((NOT (t0.c0)))<=((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON SQLITE_COMPILEOPTION_USED((rt1.c2 IN ())) WHERE (((((rt1.c2)LIKE(t0.c0)))|(((rt1.c1)LIKE(rt1.c1))))) ORDER BY (((NOT (t0.c0)))<=((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(CAST(t0.c0 AS REAL))))AND('8o')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(CAST(t0.c0 AS REAL))))AND('8o'))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(CAST(t0.c0 AS REAL))))AND('8o')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(CAST(t0.c0 AS REAL))))AND('8o'))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(CAST(t0.c0 AS REAL))))AND('8o')));
SELECT COUNT(*) FROM t0, rt1 WHERE (((((rt1.c2) IS FALSE)) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((((('b{}央')OR(rt1.c2)))AND(rt1.c2))))) ORDER BY ((((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))=((((((((((rt1.c0)OR(rt1.c0)))OR(t0.c0)))OR(rt1.c2)))AND(t0.c0))))) ASC  NULLS LAST, CASE WHEN ((x'')>>(rt1.c1)) THEN (t0.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS FALSE)) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((((('b{}央')OR(rt1.c2)))AND(rt1.c2))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))==((((((((((rt1.c0)OR(rt1.c0)))OR(t0.c0)))OR(rt1.c2)))AND(t0.c0))))) ASC  NULLS LAST, CASE WHEN ((x'')>>(rt1.c1)) THEN (t0.c0 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 WHERE (((((rt1.c2) IS FALSE)) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((((('b{}央')OR(rt1.c2)))AND(rt1.c2))))) ORDER BY ((((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))=((((((((((rt1.c0)OR(rt1.c0)))OR(t0.c0)))OR(rt1.c2)))AND(t0.c0))))) ASC  NULLS LAST, CASE WHEN ((x'')>>(rt1.c1)) THEN (t0.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS FALSE)) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((((('b{}央')OR(rt1.c2)))AND(rt1.c2))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))==((((((((((rt1.c0)OR(rt1.c0)))OR(t0.c0)))OR(rt1.c2)))AND(t0.c0))))) ASC  NULLS LAST, CASE WHEN ((x'')>>(rt1.c1)) THEN (t0.c0 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 WHERE (((((rt1.c2) IS FALSE)) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND ((((('b{}央')OR(rt1.c2)))AND(rt1.c2))))) ORDER BY ((((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))=((((((((((rt1.c0)OR(rt1.c0)))OR(t0.c0)))OR(rt1.c2)))AND(t0.c0))))) ASC  NULLS LAST, CASE WHEN ((x'')>>(rt1.c1)) THEN (t0.c0 IN ()) END  NULLS LAST;
SELECT * FROM rt0 WHERE (ABS(DISTINCT ((rt0.c6) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((rt0.c6) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (ABS(DISTINCT ((rt0.c6) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((rt0.c6) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (ABS(DISTINCT ((rt0.c6) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((CAST(rt1.c1 AS TEXT))<((t0.c0 IN ())))) ORDER BY ((((((rt1.c1) IS FALSE))OR(x'')))AND((('77283563') BETWEEN (-1.175299794E9) AND (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS TEXT))<((t0.c0 IN ())))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((((rt1.c1) IS FALSE))OR(x'')))AND((('77283563') BETWEEN (-1.175299794E9) AND (t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((CAST(rt1.c1 AS TEXT))<((t0.c0 IN ())))) ORDER BY ((((((rt1.c1) IS FALSE))OR(x'')))AND((('77283563') BETWEEN (-1.175299794E9) AND (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS TEXT))<((t0.c0 IN ())))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((((rt1.c1) IS FALSE))OR(x'')))AND((('77283563') BETWEEN (-1.175299794E9) AND (t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((CAST(rt1.c1 AS TEXT))<((t0.c0 IN ())))) ORDER BY ((((((rt1.c1) IS FALSE))OR(x'')))AND((('77283563') BETWEEN (-1.175299794E9) AND (t0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN '	%8n{}U#Z' THEN (rt0.c4 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '	%8n{}U#Z' THEN (rt0.c4 IN ()) END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN '	%8n{}U#Z' THEN (rt0.c4 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '	%8n{}U#Z' THEN (rt0.c4 IN ()) END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN '	%8n{}U#Z' THEN (rt0.c4 IN ()) END);
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((NULL)<<(((rt1.c0)IS NOT(x'5996')))) FULL OUTER JOIN rt1 ON ((((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c0)))OR(rt1.c2)))AND(rt0.c0))) IS FALSE) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((NULL)<<(((rt1.c0)IS NOT(x'5996')))) FULL OUTER JOIN rt1 ON ((((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c0)))OR(rt1.c2)))AND(rt0.c0))) IS FALSE));
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((NULL)<<(((rt1.c0)IS NOT(x'5996')))) FULL OUTER JOIN rt1 ON ((((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c0)))OR(rt1.c2)))AND(rt0.c0))) IS FALSE) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((NULL)<<(((rt1.c0)IS NOT(x'5996')))) FULL OUTER JOIN rt1 ON ((((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c0)))OR(rt1.c2)))AND(rt0.c0))) IS FALSE));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c6)OR(rt0.c3)))OR(0.9808712236864895)))>(NULL)) WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c1 AS NUMERIC), 0.9168479862306281));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT CAST(rt0.c1 AS NUMERIC), 0.9168479862306281)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c6)OR(rt0.c3)))OR(0.9808712236864895)))>(NULL)));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c6)OR(rt0.c3)))OR(0.9808712236864895)))>(NULL)) WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c1 AS NUMERIC), 0.9168479862306281));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT CAST(rt0.c1 AS NUMERIC), 0.9168479862306281)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c6)OR(rt0.c3)))OR(0.9808712236864895)))>(NULL)));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c6)OR(rt0.c3)))OR(0.9808712236864895)))>(NULL)) WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c1 AS NUMERIC), 0.9168479862306281));
SELECT COUNT(*) FROM t0 INDEXED BY i30 WHERE (x'702f');
SELECT SUM(count) FROM (SELECT ALL ((x'702f') IS TRUE)  as count FROM t0 INDEXED BY i30);
SELECT COUNT(*) FROM t0 INDEXED BY i30 WHERE (x'702f');
SELECT SUM(count) FROM (SELECT ALL ((x'702f') IS TRUE)  as count FROM t0 INDEXED BY i30);
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c3, rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c5))>=((rt0.c1))), (~ (rt0.c6)), ((rt0.c3)IS NOT(rt0.c6)))) AND ((((rt0.c2) BETWEEN (rt0.c6) AND (rt0.c4)), ((rt1.c1)GLOB(t0.c0)), TYPEOF(NULL)))) INNER JOIN t0 ON ((((CAST(rt0.c4 AS INTEGER))AND((rt1.c0 IN ()))))OR(CAST(rt0.c1 AS INTEGER))) WHERE (CAST(((rt0.c6)>(rt0.c5)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c6)>(rt0.c5)) AS NUMERIC)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c3, rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c5))>=((rt0.c1))), (~ (rt0.c6)), ((rt0.c3)IS NOT(rt0.c6)))) AND ((((rt0.c2) BETWEEN (rt0.c6) AND (rt0.c4)), ((rt1.c1)GLOB(t0.c0)), TYPEOF(NULL)))) INNER JOIN t0 ON ((((CAST(rt0.c4 AS INTEGER))AND((rt1.c0 IN ()))))OR(CAST(rt0.c1 AS INTEGER))));
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c3, rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c5))>=((rt0.c1))), (~ (rt0.c6)), ((rt0.c3)IS NOT(rt0.c6)))) AND ((((rt0.c2) BETWEEN (rt0.c6) AND (rt0.c4)), ((rt1.c1)GLOB(t0.c0)), TYPEOF(NULL)))) INNER JOIN t0 ON ((((CAST(rt0.c4 AS INTEGER))AND((rt1.c0 IN ()))))OR(CAST(rt0.c1 AS INTEGER))) WHERE (CAST(((rt0.c6)>(rt0.c5)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c6)>(rt0.c5)) AS NUMERIC)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c3, rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c5))>=((rt0.c1))), (~ (rt0.c6)), ((rt0.c3)IS NOT(rt0.c6)))) AND ((((rt0.c2) BETWEEN (rt0.c6) AND (rt0.c4)), ((rt1.c1)GLOB(t0.c0)), TYPEOF(NULL)))) INNER JOIN t0 ON ((((CAST(rt0.c4 AS INTEGER))AND((rt1.c0 IN ()))))OR(CAST(rt0.c1 AS INTEGER))));
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT ALL * FROM rt1 CROSS JOIN t0 ON (((((0.15026505980930427)/(rt1.c2))))!=((SQLITE_SOURCE_ID()))) WHERE ((CASE rt1.c0  WHEN 'x,*j' THEN 0xffffffffc417b726 ELSE t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c0  WHEN 'x,*j' THEN 0xffffffffc417b726 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (((((0.15026505980930427)/(rt1.c2))))!=((SQLITE_SOURCE_ID()))));
SELECT ALL * FROM rt1 CROSS JOIN t0 ON (((((0.15026505980930427)/(rt1.c2))))!=((SQLITE_SOURCE_ID()))) WHERE ((CASE rt1.c0  WHEN 'x,*j' THEN 0xffffffffc417b726 ELSE t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c0  WHEN 'x,*j' THEN 0xffffffffc417b726 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (((((0.15026505980930427)/(rt1.c2))))!=((SQLITE_SOURCE_ID()))));
SELECT ALL * FROM rt1 CROSS JOIN t0 ON (((((0.15026505980930427)/(rt1.c2))))!=((SQLITE_SOURCE_ID()))) WHERE ((CASE rt1.c0  WHEN 'x,*j' THEN 0xffffffffc417b726 ELSE t0.c0 END IN ()));
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(((rt0.c1)*(rt0.c6)) AS BLOB)) ORDER BY (((rt0.c5)) BETWEEN (((rt0.c5 IN ()))) AND (((((rt1.c0, rt0.c5, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, rt0.c2)) AND ((rt0.c1, rt1.c0, t0.c0)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)*(rt0.c6)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (((rt0.c5)) BETWEEN (((rt0.c5 IN ()))) AND (((((rt1.c0, rt0.c5, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, rt0.c2)) AND ((rt0.c1, rt1.c0, t0.c0)))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(((rt0.c1)*(rt0.c6)) AS BLOB)) ORDER BY (((rt0.c5)) BETWEEN (((rt0.c5 IN ()))) AND (((((rt1.c0, rt0.c5, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, rt0.c2)) AND ((rt0.c1, rt1.c0, t0.c0)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)*(rt0.c6)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (((rt0.c5)) BETWEEN (((rt0.c5 IN ()))) AND (((((rt1.c0, rt0.c5, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, rt0.c2)) AND ((rt0.c1, rt1.c0, t0.c0)))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(((rt0.c1)*(rt0.c6)) AS BLOB)) ORDER BY (((rt0.c5)) BETWEEN (((rt0.c5 IN ()))) AND (((((rt1.c0, rt0.c5, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, rt0.c2)) AND ((rt0.c1, rt1.c0, t0.c0)))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0 WHERE ('-587248753');
SELECT SUM(count) FROM (SELECT (('-587248753') IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE ('-587248753');
SELECT SUM(count) FROM (SELECT (('-587248753') IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE ('-587248753');
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0 WHERE (COALESCE(CAST(t0.c0 AS INTEGER), CAST(t0.c0 AS NUMERIC), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND('2114828281')))OR(t0.c0)), (NOT (t0.c0)), (t0.c0 IN (t0.c0, t0.c0)), ((NULL) ISNULL), ROUND(t0.c0, t0.c0), t0.c0 COLLATE BINARY)) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL), CASE LIKE(t0.c0, x'49d50d4d')  WHEN PRINTF(t0.c0) THEN (NOT (NULL)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(CAST(t0.c0 AS INTEGER), CAST(t0.c0 AS NUMERIC), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND('2114828281')))OR(t0.c0)), (NOT (t0.c0)), (t0.c0 IN (t0.c0, t0.c0)), ((NULL) ISNULL), ROUND(t0.c0, t0.c0), t0.c0 COLLATE BINARY)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL), CASE LIKE(t0.c0, x'49d50d4d')  WHEN PRINTF(t0.c0) THEN (NOT (NULL)) END  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (COALESCE(CAST(t0.c0 AS INTEGER), CAST(t0.c0 AS NUMERIC), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND('2114828281')))OR(t0.c0)), (NOT (t0.c0)), (t0.c0 IN (t0.c0, t0.c0)), ((NULL) ISNULL), ROUND(t0.c0, t0.c0), t0.c0 COLLATE BINARY)) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL), CASE LIKE(t0.c0, x'49d50d4d')  WHEN PRINTF(t0.c0) THEN (NOT (NULL)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(CAST(t0.c0 AS INTEGER), CAST(t0.c0 AS NUMERIC), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND('2114828281')))OR(t0.c0)), (NOT (t0.c0)), (t0.c0 IN (t0.c0, t0.c0)), ((NULL) ISNULL), ROUND(t0.c0, t0.c0), t0.c0 COLLATE BINARY)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL), CASE LIKE(t0.c0, x'49d50d4d')  WHEN PRINTF(t0.c0) THEN (NOT (NULL)) END  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (COALESCE(CAST(t0.c0 AS INTEGER), CAST(t0.c0 AS NUMERIC), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND('2114828281')))OR(t0.c0)), (NOT (t0.c0)), (t0.c0 IN (t0.c0, t0.c0)), ((NULL) ISNULL), ROUND(t0.c0, t0.c0), t0.c0 COLLATE BINARY)) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL), CASE LIKE(t0.c0, x'49d50d4d')  WHEN PRINTF(t0.c0) THEN (NOT (NULL)) END  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT ALL * FROM rt0, rt1, t0 WHERE ((CAST(rt0.c0 AS REAL) IN ())) ORDER BY rt0.c6 ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY rt0.c6 ASC);
SELECT ALL * FROM rt0, rt1, t0 WHERE ((CAST(rt0.c0 AS REAL) IN ())) ORDER BY rt0.c6 ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY rt0.c6 ASC);
SELECT ALL * FROM rt0, rt1, t0 WHERE ((CAST(rt0.c0 AS REAL) IN ())) ORDER BY rt0.c6 ASC;
SELECT * FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c2)-(rt1.c0)))) AND ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c1)))))) ORDER BY CAST(x'2bbd' AS NUMERIC), ((rt1.c0 COLLATE RTRIM)/((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((((rt1.c2)-(rt1.c0)))) AND ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(x'2bbd' AS NUMERIC), ((rt1.c0 COLLATE RTRIM)/((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) ASC);
SELECT * FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c2)-(rt1.c0)))) AND ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c1)))))) ORDER BY CAST(x'2bbd' AS NUMERIC), ((rt1.c0 COLLATE RTRIM)/((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((((rt1.c2)-(rt1.c0)))) AND ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(x'2bbd' AS NUMERIC), ((rt1.c0 COLLATE RTRIM)/((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) ASC);
SELECT * FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c2)-(rt1.c0)))) AND ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c1)))))) ORDER BY CAST(x'2bbd' AS NUMERIC), ((rt1.c0 COLLATE RTRIM)/((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) ASC;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((((((((t0.c0)OR(t0.c0)))OR('')))OR(t0.c0)))OR(t0.c0)) THEN 0X4d557df COLLATE RTRIM WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN ((t0.c0)<(t0.c0)) THEN t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t0.c0)OR(t0.c0)))OR('')))OR(t0.c0)))OR(t0.c0)) THEN 0X4d557df COLLATE RTRIM WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN ((t0.c0)<(t0.c0)) THEN t0.c0 END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((((((((t0.c0)OR(t0.c0)))OR('')))OR(t0.c0)))OR(t0.c0)) THEN 0X4d557df COLLATE RTRIM WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN ((t0.c0)<(t0.c0)) THEN t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t0.c0)OR(t0.c0)))OR('')))OR(t0.c0)))OR(t0.c0)) THEN 0X4d557df COLLATE RTRIM WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN ((t0.c0)<(t0.c0)) THEN t0.c0 END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((((((((t0.c0)OR(t0.c0)))OR('')))OR(t0.c0)))OR(t0.c0)) THEN 0X4d557df COLLATE RTRIM WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN ((t0.c0)<(t0.c0)) THEN t0.c0 END);
SELECT ALL * FROM rt1, t0 WHERE ((UNLIKELY(DISTINCT rt1.c0) IN (((rt1.c0)LIKE(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(DISTINCT rt1.c0) IN (((rt1.c0)LIKE(t0.c0))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE ((UNLIKELY(DISTINCT rt1.c0) IN (((rt1.c0)LIKE(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(DISTINCT rt1.c0) IN (((rt1.c0)LIKE(t0.c0))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE ((UNLIKELY(DISTINCT rt1.c0) IN (((rt1.c0)LIKE(t0.c0)))));
SELECT ALL * FROM rt0, t0, rt1 WHERE (((rt0.c2) NOT BETWEEN ('733486654') AND ((rt0.c6 IN ())))) ORDER BY CASE WHEN ((((t0.c0)OR(rt0.c2)))AND(NULL)) THEN ((rt1.c1)IS(rt0.c5)) ELSE ((rt0.c2)<<(rt0.c3)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN ('733486654') AND ((rt0.c6 IN ())))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY CASE WHEN ((((t0.c0)OR(rt0.c2)))AND(NULL)) THEN ((rt1.c1)IS(rt0.c5)) ELSE ((rt0.c2)<<(rt0.c3)) END  NULLS LAST);
SELECT ALL * FROM rt0, t0, rt1 WHERE (((rt0.c2) NOT BETWEEN ('733486654') AND ((rt0.c6 IN ())))) ORDER BY CASE WHEN ((((t0.c0)OR(rt0.c2)))AND(NULL)) THEN ((rt1.c1)IS(rt0.c5)) ELSE ((rt0.c2)<<(rt0.c3)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN ('733486654') AND ((rt0.c6 IN ())))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY CASE WHEN ((((t0.c0)OR(rt0.c2)))AND(NULL)) THEN ((rt1.c1)IS(rt0.c5)) ELSE ((rt0.c2)<<(rt0.c3)) END  NULLS LAST);
SELECT ALL * FROM rt0, t0, rt1 WHERE (((rt0.c2) NOT BETWEEN ('733486654') AND ((rt0.c6 IN ())))) ORDER BY CASE WHEN ((((t0.c0)OR(rt0.c2)))AND(NULL)) THEN ((rt1.c1)IS(rt0.c5)) ELSE ((rt0.c2)<<(rt0.c3)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((CASE WHEN rt1.c1 THEN rt0.c5 ELSE rt0.c4 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c1 THEN rt0.c5 ELSE rt0.c4 END IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((CASE WHEN rt1.c1 THEN rt0.c5 ELSE rt0.c4 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c1 THEN rt0.c5 ELSE rt0.c4 END IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((CASE WHEN rt1.c1 THEN rt0.c5 ELSE rt0.c4 END IN ()));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (~ ((+ (rt0.c4)))) LEFT OUTER JOIN rt1 ON ((((rt0.c0)GLOB(rt1.c0))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c0 END) AND ((0.38598012174091945 IN ()))) WHERE (CAST(CASE WHEN rt1.c1 THEN rt0.c6 ELSE rt0.c5 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt1.c1 THEN rt0.c6 ELSE rt0.c5 END AS REAL)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (~ ((+ (rt0.c4)))) LEFT OUTER JOIN rt1 ON ((((rt0.c0)GLOB(rt1.c0))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c0 END) AND ((0.38598012174091945 IN ()))));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (~ ((+ (rt0.c4)))) LEFT OUTER JOIN rt1 ON ((((rt0.c0)GLOB(rt1.c0))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c0 END) AND ((0.38598012174091945 IN ()))) WHERE (CAST(CASE WHEN rt1.c1 THEN rt0.c6 ELSE rt0.c5 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt1.c1 THEN rt0.c6 ELSE rt0.c5 END AS REAL)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (~ ((+ (rt0.c4)))) LEFT OUTER JOIN rt1 ON ((((rt0.c0)GLOB(rt1.c0))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c0 END) AND ((0.38598012174091945 IN ()))));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (~ ((+ (rt0.c4)))) LEFT OUTER JOIN rt1 ON ((((rt0.c0)GLOB(rt1.c0))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c0 END) AND ((0.38598012174091945 IN ()))) WHERE (CAST(CASE WHEN rt1.c1 THEN rt0.c6 ELSE rt0.c5 END AS REAL));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (((((1697209018)-(t0.c0)))%(HEX(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((1697209018)-(t0.c0)))%(HEX(rt0.c0)))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (((((1697209018)-(t0.c0)))%(HEX(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((1697209018)-(t0.c0)))%(HEX(rt0.c0)))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (((((1697209018)-(t0.c0)))%(HEX(rt0.c0))));
SELECT ALL * FROM rt0, t0, rt1 WHERE ((- ((((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c5))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c5)))))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL * FROM rt0, t0, rt1 WHERE ((- ((((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c5))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c5)))))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL * FROM rt0, t0, rt1 WHERE ((- ((((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c5))))));
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN rt1 ON CAST('0.21834082185701964' AS NUMERIC) WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL)) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN rt1 ON CAST('0.21834082185701964' AS NUMERIC));
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN rt1 ON CAST('0.21834082185701964' AS NUMERIC) WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL)) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN rt1 ON CAST('0.21834082185701964' AS NUMERIC));
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN rt1 ON CAST('0.21834082185701964' AS NUMERIC) WHERE (((x'') NOTNULL));
SELECT ALL COUNT(*) FROM t0, rt0 INDEXED BY i30, rt1 WHERE (ABS(DISTINCT x'6d60' COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT x'6d60' COLLATE BINARY)) IS TRUE)  as count FROM t0, rt0 INDEXED BY i30, rt1);
SELECT ALL COUNT(*) FROM t0, rt0 INDEXED BY i30, rt1 WHERE (ABS(DISTINCT x'6d60' COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT x'6d60' COLLATE BINARY)) IS TRUE)  as count FROM t0, rt0 INDEXED BY i30, rt1);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (- ((((rt0.c1)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c5))))) RIGHT OUTER JOIN t0 ON ((rt1.c1 COLLATE BINARY)!=(((rt0.c5) ISNULL))) WHERE ((((('')) NOT BETWEEN (('6l5\rD')) AND ((rt0.c4))) IN (rt0.c6))) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('')) NOT BETWEEN (('6l5\rD')) AND ((rt0.c4))) IN (rt0.c6))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (- ((((rt0.c1)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c5))))) RIGHT OUTER JOIN t0 ON ((rt1.c1 COLLATE BINARY)!=(((rt0.c5) ISNULL))) ORDER BY x'' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (- ((((rt0.c1)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c5))))) RIGHT OUTER JOIN t0 ON ((rt1.c1 COLLATE BINARY)!=(((rt0.c5) ISNULL))) WHERE ((((('')) NOT BETWEEN (('6l5\rD')) AND ((rt0.c4))) IN (rt0.c6))) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('')) NOT BETWEEN (('6l5\rD')) AND ((rt0.c4))) IN (rt0.c6))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (- ((((rt0.c1)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c5))))) RIGHT OUTER JOIN t0 ON ((rt1.c1 COLLATE BINARY)!=(((rt0.c5) ISNULL))) ORDER BY x'' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (- ((((rt0.c1)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c5))))) RIGHT OUTER JOIN t0 ON ((rt1.c1 COLLATE BINARY)!=(((rt0.c5) ISNULL))) WHERE ((((('')) NOT BETWEEN (('6l5\rD')) AND ((rt0.c4))) IN (rt0.c6))) ORDER BY x'' ASC  NULLS LAST;
SELECT ALL * FROM rt0, rt1 NATURAL JOIN t0 WHERE (CAST((((rt1.c2))>=((rt1.c0))) AS INTEGER)) ORDER BY CASE WHEN ((rt0.c3) NOTNULL) THEN ((t0.c0) IS TRUE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c2))>=((rt1.c0))) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN t0 ORDER BY CASE WHEN ((rt0.c3) NOTNULL) THEN ((t0.c0) IS TRUE) END  NULLS LAST);
SELECT ALL * FROM rt0, rt1 NATURAL JOIN t0 WHERE (CAST((((rt1.c2))>=((rt1.c0))) AS INTEGER)) ORDER BY CASE WHEN ((rt0.c3) NOTNULL) THEN ((t0.c0) IS TRUE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c2))>=((rt1.c0))) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN t0 ORDER BY CASE WHEN ((rt0.c3) NOTNULL) THEN ((t0.c0) IS TRUE) END  NULLS LAST);
SELECT ALL * FROM rt0, rt1 NATURAL JOIN t0 WHERE (CAST((((rt1.c2))>=((rt1.c0))) AS INTEGER)) ORDER BY CASE WHEN ((rt0.c3) NOTNULL) THEN ((t0.c0) IS TRUE) END  NULLS LAST;
SELECT * FROM rt0, rt1, t0 WHERE (((CAST(rt0.c5 AS INTEGER))IS NOT(((rt0.c4) NOTNULL)))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))>(rt0.c0 COLLATE RTRIM)) ASC, ((CAST(rt0.c3 AS REAL)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c5 AS INTEGER))IS NOT(((rt0.c4) NOTNULL)))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))>(rt0.c0 COLLATE RTRIM)) ASC, ((CAST(rt0.c3 AS REAL)) NOT NULL) DESC  NULLS LAST);
SELECT * FROM rt0, rt1, t0 WHERE (((CAST(rt0.c5 AS INTEGER))IS NOT(((rt0.c4) NOTNULL)))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))>(rt0.c0 COLLATE RTRIM)) ASC, ((CAST(rt0.c3 AS REAL)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c5 AS INTEGER))IS NOT(((rt0.c4) NOTNULL)))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))>(rt0.c0 COLLATE RTRIM)) ASC, ((CAST(rt0.c3 AS REAL)) NOT NULL) DESC  NULLS LAST);
SELECT * FROM rt0, rt1, t0 WHERE (((CAST(rt0.c5 AS INTEGER))IS NOT(((rt0.c4) NOTNULL)))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))>(rt0.c0 COLLATE RTRIM)) ASC, ((CAST(rt0.c3 AS REAL)) NOT NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0 IN ())) ISNULL));
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t0 ON (x'' IN (((t0.c0) IS FALSE))) WHERE (((((rt0.c6) NOTNULL))GLOB(((((rt0.c2)AND(rt0.c5)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c6) NOTNULL))GLOB(((((rt0.c2)AND(rt0.c5)))AND(rt1.c1))))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN t0 ON (x'' IN (((t0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t0 ON (x'' IN (((t0.c0) IS FALSE))) WHERE (((((rt0.c6) NOTNULL))GLOB(((((rt0.c2)AND(rt0.c5)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c6) NOTNULL))GLOB(((((rt0.c2)AND(rt0.c5)))AND(rt1.c1))))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN t0 ON (x'' IN (((t0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t0 ON (x'' IN (((t0.c0) IS FALSE))) WHERE (((((rt0.c6) NOTNULL))GLOB(((((rt0.c2)AND(rt0.c5)))AND(rt1.c1)))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((PRINTF(rt0.c0))>=(((rt0.c4) BETWEEN (rt0.c2) AND (0x2cba7edc))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((((rt0.c3)AND('E,C(uMᶫ0g')))) AND ((((t0.c0) ISNULL))))  NULLS LAST, ((x'')-(((x'')LIKE(0xffffffffd39ee721))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((PRINTF(rt0.c0))>=(((rt0.c4) BETWEEN (rt0.c2) AND (0X2cba7edc))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c3)) NOT BETWEEN ((((rt0.c3)AND('E,C(uMᶫ0g')))) AND ((((t0.c0) ISNULL))))  NULLS LAST, ((x'')-(((x'')LIKE(0Xffffffffd39ee721))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((PRINTF(rt0.c0))>=(((rt0.c4) BETWEEN (rt0.c2) AND (0x2cba7edc))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((((rt0.c3)AND('E,C(uMᶫ0g')))) AND ((((t0.c0) ISNULL))))  NULLS LAST, ((x'')-(((x'')LIKE(0xffffffffd39ee721))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((PRINTF(rt0.c0))>=(((rt0.c4) BETWEEN (rt0.c2) AND (0X2cba7edc))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c3)) NOT BETWEEN ((((rt0.c3)AND('E,C(uMᶫ0g')))) AND ((((t0.c0) ISNULL))))  NULLS LAST, ((x'')-(((x'')LIKE(0Xffffffffd39ee721))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((PRINTF(rt0.c0))>=(((rt0.c4) BETWEEN (rt0.c2) AND (0x2cba7edc))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((((rt0.c3)AND('E,C(uMᶫ0g')))) AND ((((t0.c0) ISNULL))))  NULLS LAST, ((x'')-(((x'')LIKE(0xffffffffd39ee721))))  NULLS FIRST;
SELECT ALL * FROM rt1, t0, rt0 WHERE (CASE 266675023  WHEN rt0.c3 THEN (rt0.c6 IN ()) END) ORDER BY (CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt1.c2 WHEN rt0.c4 THEN rt0.c4 ELSE rt1.c0 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE 266675023  WHEN rt0.c3 THEN (rt0.c6 IN ()) END) IS TRUE)  as count FROM rt1, t0 NOT INDEXED, rt0 ORDER BY (CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt1.c2 WHEN rt0.c4 THEN rt0.c4 ELSE rt1.c0 END IN ()) ASC);
SELECT ALL * FROM rt1, t0, rt0 WHERE (CASE 266675023  WHEN rt0.c3 THEN (rt0.c6 IN ()) END) ORDER BY (CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt1.c2 WHEN rt0.c4 THEN rt0.c4 ELSE rt1.c0 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE 266675023  WHEN rt0.c3 THEN (rt0.c6 IN ()) END) IS TRUE)  as count FROM rt1, t0 NOT INDEXED, rt0 ORDER BY (CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt1.c2 WHEN rt0.c4 THEN rt0.c4 ELSE rt1.c0 END IN ()) ASC);
SELECT ALL * FROM rt1, t0, rt0 WHERE (CASE 266675023  WHEN rt0.c3 THEN (rt0.c6 IN ()) END) ORDER BY (CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt1.c2 WHEN rt0.c4 THEN rt0.c4 ELSE rt1.c0 END IN ()) ASC;
SELECT ALL * FROM rt1, rt0 NATURAL JOIN t0 WHERE (CASE (((rt0.c3, rt1.c1, rt0.c0, rt0.c4, rt0.c6))>=((rt0.c6, x'', rt1.c2, rt0.c6, rt0.c4)))  WHEN (NULL IN (rt0.c1, rt0.c0)) THEN CAST(rt0.c6 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c3, rt1.c1, rt0.c0, rt0.c4, rt0.c6))>=((rt0.c6, x'', rt1.c2, rt0.c6, rt0.c4)))  WHEN (NULL IN (rt0.c1, rt0.c0)) THEN CAST(rt0.c6 AS NUMERIC) END) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt1, rt0 NATURAL JOIN t0 WHERE (CASE (((rt0.c3, rt1.c1, rt0.c0, rt0.c4, rt0.c6))>=((rt0.c6, x'', rt1.c2, rt0.c6, rt0.c4)))  WHEN (NULL IN (rt0.c1, rt0.c0)) THEN CAST(rt0.c6 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c3, rt1.c1, rt0.c0, rt0.c4, rt0.c6))>=((rt0.c6, x'', rt1.c2, rt0.c6, rt0.c4)))  WHEN (NULL IN (rt0.c1, rt0.c0)) THEN CAST(rt0.c6 AS NUMERIC) END) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt1, rt0 NATURAL JOIN t0 WHERE (CASE (((rt0.c3, rt1.c1, rt0.c0, rt0.c4, rt0.c6))>=((rt0.c6, x'', rt1.c2, rt0.c6, rt0.c4)))  WHEN (NULL IN (rt0.c1, rt0.c0)) THEN CAST(rt0.c6 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM rt1, rt0 INNER JOIN t0 ON rt0.c0 WHERE (((((((t0.c0)&(0Xfffffffffdc61746)))AND(((-4.24054769E8) IS FALSE))))OR((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)&(0xfffffffffdc61746)))AND(((-4.24054769E8) IS FALSE))))OR((t0.c0 IN ())))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN t0 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt1, rt0 INNER JOIN t0 ON rt0.c0 WHERE (((((((t0.c0)&(0Xfffffffffdc61746)))AND(((-4.24054769E8) IS FALSE))))OR((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)&(0xfffffffffdc61746)))AND(((-4.24054769E8) IS FALSE))))OR((t0.c0 IN ())))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN t0 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt1, rt0 INNER JOIN t0 ON rt0.c0 WHERE (((((((t0.c0)&(0Xfffffffffdc61746)))AND(((-4.24054769E8) IS FALSE))))OR((t0.c0 IN ()))));
SELECT ALL * FROM t0, rt0, rt1 WHERE (((CAST(rt0.c6 AS BLOB)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (CASE rt1.c0  WHEN rt0.c4 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c6 AS BLOB)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (CASE rt1.c0  WHEN rt0.c4 THEN rt0.c4 END))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (((CAST(rt0.c6 AS BLOB)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (CASE rt1.c0  WHEN rt0.c4 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c6 AS BLOB)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (CASE rt1.c0  WHEN rt0.c4 THEN rt0.c4 END))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (((CAST(rt0.c6 AS BLOB)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (CASE rt1.c0  WHEN rt0.c4 THEN rt0.c4 END)));
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE ('75046720');
SELECT SUM(count) FROM (SELECT (('75046720') IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE ('75046720');
SELECT SUM(count) FROM (SELECT (('75046720') IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE ('75046720');
SELECT ALL * FROM rt0 WHERE (0.9010851162291716);
SELECT SUM(count) FROM (SELECT ALL ((0.9010851162291716) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0.9010851162291716);
SELECT SUM(count) FROM (SELECT ALL ((0.9010851162291716) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0.9010851162291716);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c4) NOT NULL)) BETWEEN (rt1.c2 COLLATE RTRIM) AND ((((rt1.c2))<>((rt1.c1)))))) ORDER BY CASE WHEN (((rt0.c5))>((rt0.c1))) THEN CAST(rt0.c6 AS NUMERIC) ELSE ((((rt1.c0)OR(rt0.c4)))AND(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT NULL)) BETWEEN (rt1.c2 COLLATE RTRIM) AND ((((rt1.c2))!=((rt1.c1)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN (((rt0.c5))>((rt0.c1))) THEN CAST(rt0.c6 AS NUMERIC) ELSE ((((rt1.c0)OR(rt0.c4)))AND(rt0.c2)) END ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c4) NOT NULL)) BETWEEN (rt1.c2 COLLATE RTRIM) AND ((((rt1.c2))<>((rt1.c1)))))) ORDER BY CASE WHEN (((rt0.c5))>((rt0.c1))) THEN CAST(rt0.c6 AS NUMERIC) ELSE ((((rt1.c0)OR(rt0.c4)))AND(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT NULL)) BETWEEN (rt1.c2 COLLATE RTRIM) AND ((((rt1.c2))!=((rt1.c1)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN (((rt0.c5))>((rt0.c1))) THEN CAST(rt0.c6 AS NUMERIC) ELSE ((((rt1.c0)OR(rt0.c4)))AND(rt0.c2)) END ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c4) NOT NULL)) BETWEEN (rt1.c2 COLLATE RTRIM) AND ((((rt1.c2))<>((rt1.c1)))))) ORDER BY CASE WHEN (((rt0.c5))>((rt0.c1))) THEN CAST(rt0.c6 AS NUMERIC) ELSE ((((rt1.c0)OR(rt0.c4)))AND(rt0.c2)) END ASC;
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON 0.5075139631398498 WHERE (((CASE rt0.c5  WHEN '-898505646' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c5 END)>>(rt0.c5))) ORDER BY rt0.c5 ASC  NULLS FIRST, rt0.c5 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c5  WHEN '-898505646' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c5 END)>>(rt0.c5))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON 0.5075139631398498 ORDER BY rt0.c5 ASC  NULLS FIRST, rt0.c5 ASC  NULLS LAST);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON 0.5075139631398498 WHERE (((CASE rt0.c5  WHEN '-898505646' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c5 END)>>(rt0.c5))) ORDER BY rt0.c5 ASC  NULLS FIRST, rt0.c5 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c5  WHEN '-898505646' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c5 END)>>(rt0.c5))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON 0.5075139631398498 ORDER BY rt0.c5 ASC  NULLS FIRST, rt0.c5 ASC  NULLS LAST);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON 0.5075139631398498 WHERE (((CASE rt0.c5  WHEN '-898505646' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c5 END)>>(rt0.c5))) ORDER BY rt0.c5 ASC  NULLS FIRST, rt0.c5 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (LOWER(DISTINCT t0.c0 COLLATE NOCASE)) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT t0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, t0 ORDER BY t0.c0 DESC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (LOWER(DISTINCT t0.c0 COLLATE NOCASE)) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT t0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, t0 ORDER BY t0.c0 DESC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (LOWER(DISTINCT t0.c0 COLLATE NOCASE)) ORDER BY t0.c0 DESC;
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c6)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON CASE rt0.c5 COLLATE NOCASE  WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c5)) ELSE (('') ISNULL) END WHERE (((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c2 END)<>(rt0.c0))) ORDER BY ((CASE WHEN 0.7314859908259973 THEN rt0.c2 ELSE 0xffffffffa171f651 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c2 END)!=(rt0.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c6)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON CASE rt0.c5 COLLATE NOCASE  WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c5)) ELSE (('') ISNULL) END ORDER BY ((CASE WHEN 0.7314859908259973 THEN rt0.c2 ELSE 0xffffffffa171f651 END) NOT NULL));
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c6)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON CASE rt0.c5 COLLATE NOCASE  WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c5)) ELSE (('') ISNULL) END WHERE (((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c2 END)<>(rt0.c0))) ORDER BY ((CASE WHEN 0.7314859908259973 THEN rt0.c2 ELSE 0xffffffffa171f651 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c2 END)!=(rt0.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c6)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON CASE rt0.c5 COLLATE NOCASE  WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c5)) ELSE (('') ISNULL) END ORDER BY ((CASE WHEN 0.7314859908259973 THEN rt0.c2 ELSE 0xffffffffa171f651 END) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN rt1 ON rt0.c0 WHERE (((((((rt0.c5)AND(rt1.c0)))AND(x''))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)AND(rt1.c0)))AND(x''))) IS FALSE)) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN rt1 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN rt1 ON rt0.c0 WHERE (((((((rt0.c5)AND(rt1.c0)))AND(x''))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)AND(rt1.c0)))AND(x''))) IS FALSE)) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN rt1 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN rt1 ON rt0.c0 WHERE (((((((rt0.c5)AND(rt1.c0)))AND(x''))) IS FALSE));
SELECT ALL * FROM rt0, t0 WHERE (UPPER(((rt0.c4)=(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c4)==(rt0.c4)))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0);
SELECT ALL * FROM rt0, t0 WHERE (UPPER(((rt0.c4)=(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c4)==(rt0.c4)))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0);
SELECT ALL * FROM rt0, t0 WHERE (UPPER(((rt0.c4)=(rt0.c4))));
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE t0.c0 END)IS NOT((((rt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE t0.c0 END)IS NOT((((rt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE t0.c0 END)IS NOT((((rt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE t0.c0 END)IS NOT((((rt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE t0.c0 END)IS NOT((((rt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))))));
SELECT * FROM rt1, t0, rt0 WHERE ((- (((((rt0.c6)AND(rt1.c0)))AND(rt0.c2))))) ORDER BY ((0X5c08338f)<=(((rt0.c3) BETWEEN (rt0.c6) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c6)AND(rt1.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((0X5c08338f)<=(((rt0.c3) BETWEEN (rt0.c6) AND (rt1.c1)))));
SELECT * FROM rt1, t0, rt0 WHERE ((- (((((rt0.c6)AND(rt1.c0)))AND(rt0.c2))))) ORDER BY ((0X5c08338f)<=(((rt0.c3) BETWEEN (rt0.c6) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c6)AND(rt1.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((0X5c08338f)<=(((rt0.c3) BETWEEN (rt0.c6) AND (rt1.c1)))));
SELECT * FROM rt1, t0, rt0 WHERE ((- (((((rt0.c6)AND(rt1.c0)))AND(rt0.c2))))) ORDER BY ((0X5c08338f)<=(((rt0.c3) BETWEEN (rt0.c6) AND (rt1.c1))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON CAST(ABS(rt0.c1) AS BLOB) LEFT OUTER JOIN rt0 ON rt0.c1 WHERE ((((rt0.c1) IS FALSE) IN (((rt1.c0) NOTNULL), (- (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS FALSE) IN (((rt1.c0) NOTNULL), (- (rt0.c4))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON CAST(ABS(rt0.c1) AS BLOB) LEFT OUTER JOIN rt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON CAST(ABS(rt0.c1) AS BLOB) LEFT OUTER JOIN rt0 ON rt0.c1 WHERE ((((rt0.c1) IS FALSE) IN (((rt1.c0) NOTNULL), (- (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS FALSE) IN (((rt1.c0) NOTNULL), (- (rt0.c4))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON CAST(ABS(rt0.c1) AS BLOB) LEFT OUTER JOIN rt0 ON rt0.c1);
SELECT ALL * FROM t0 WHERE (((((t0.c0)*(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)*(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)*(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)*(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)*(t0.c0))) NOT NULL));
SELECT COUNT(*) FROM t0, rt0 WHERE ('%');
SELECT SUM(count) FROM (SELECT (('%') IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ('%');
SELECT SUM(count) FROM (SELECT (('%') IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ('%');
SELECT ALL * FROM rt1 NOT INDEXED LEFT OUTER JOIN t0 ON (+ (t0.c0)) WHERE (CASE WHEN rt1.c0 COLLATE NOCASE THEN ((rt1.c0)|(rt1.c2)) END) ORDER BY ((rt1.c2)IS(((rt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 COLLATE NOCASE THEN ((rt1.c0)|(rt1.c2)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON (+ (t0.c0)) ORDER BY ((rt1.c2)IS(((rt1.c0) ISNULL))));
SELECT ALL * FROM rt1 NOT INDEXED LEFT OUTER JOIN t0 ON (+ (t0.c0)) WHERE (CASE WHEN rt1.c0 COLLATE NOCASE THEN ((rt1.c0)|(rt1.c2)) END) ORDER BY ((rt1.c2)IS(((rt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 COLLATE NOCASE THEN ((rt1.c0)|(rt1.c2)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON (+ (t0.c0)) ORDER BY ((rt1.c2)IS(((rt1.c0) ISNULL))));
SELECT ALL * FROM rt1 NOT INDEXED LEFT OUTER JOIN t0 ON (+ (t0.c0)) WHERE (CASE WHEN rt1.c0 COLLATE NOCASE THEN ((rt1.c0)|(rt1.c2)) END) ORDER BY ((rt1.c2)IS(((rt1.c0) ISNULL)));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON (((json_remove(rt1.c2, t0.c0), ((rt0.c5) BETWEEN (rt1.c2) AND (rt1.c1)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))>=((CAST(rt0.c1 AS INTEGER), x'1740', rt0.c2 COLLATE BINARY))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt1.c1)||(rt0.c6)) THEN ((((rt1.c1)OR(rt0.c5)))OR(rt1.c2)) END WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON (((json_remove(rt1.c2, t0.c0), ((rt0.c5) BETWEEN (rt1.c2) AND (rt1.c1)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))>=((CAST(rt0.c1 AS INTEGER), x'1740', rt0.c2 COLLATE BINARY))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt1.c1)||(rt0.c6)) THEN ((((rt1.c1)OR(rt0.c5)))OR(rt1.c2)) END);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON (((json_remove(rt1.c2, t0.c0), ((rt0.c5) BETWEEN (rt1.c2) AND (rt1.c1)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))>=((CAST(rt0.c1 AS INTEGER), x'1740', rt0.c2 COLLATE BINARY))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt1.c1)||(rt0.c6)) THEN ((((rt1.c1)OR(rt0.c5)))OR(rt1.c2)) END WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON (((json_remove(rt1.c2, t0.c0), ((rt0.c5) BETWEEN (rt1.c2) AND (rt1.c1)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))>=((CAST(rt0.c1 AS INTEGER), x'1740', rt0.c2 COLLATE BINARY))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt1.c1)||(rt0.c6)) THEN ((((rt1.c1)OR(rt0.c5)))OR(rt1.c2)) END);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON CASE (((rt1.c2, NULL, 0.24002317235307358))<((rt0.c4, rt1.c2, rt0.c2)))  WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (rt1.c0)) THEN LIKELIHOOD(rt0.c0, 0.09639904630064888) WHEN (rt1.c1 IN ()) THEN HEX(NULL) WHEN ((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c5)) THEN ((rt0.c1) IS FALSE) ELSE (- (rt0.c3)) END WHERE ((((~ (rt1.c2))) ISNULL)) ORDER BY ((((rt0.c4) IS TRUE)) NOT BETWEEN (x'8b7c') AND (CASE rt0.c3  WHEN rt1.c0 THEN rt0.c6 ELSE rt0.c1 END))  NULLS LAST, ((((((rt1.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))<=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c3 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON CASE (((rt1.c2, NULL, 0.24002317235307358))<((rt0.c4, rt1.c2, rt0.c2)))  WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (rt1.c0)) THEN LIKELIHOOD(rt0.c0, 0.09639904630064888) WHEN (rt1.c1 IN ()) THEN HEX(NULL) WHEN ((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c5)) THEN ((rt0.c1) IS FALSE) ELSE (- (rt0.c3)) END ORDER BY ((((rt0.c4) IS TRUE)) NOT BETWEEN (x'8b7c') AND (CASE rt0.c3  WHEN rt1.c0 THEN rt0.c6 ELSE rt0.c1 END))  NULLS LAST, ((((((rt1.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))<=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c3 END)))  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON CASE (((rt1.c2, NULL, 0.24002317235307358))<((rt0.c4, rt1.c2, rt0.c2)))  WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (rt1.c0)) THEN LIKELIHOOD(rt0.c0, 0.09639904630064888) WHEN (rt1.c1 IN ()) THEN HEX(NULL) WHEN ((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c5)) THEN ((rt0.c1) IS FALSE) ELSE (- (rt0.c3)) END WHERE ((((~ (rt1.c2))) ISNULL)) ORDER BY ((((rt0.c4) IS TRUE)) NOT BETWEEN (x'8b7c') AND (CASE rt0.c3  WHEN rt1.c0 THEN rt0.c6 ELSE rt0.c1 END))  NULLS LAST, ((((((rt1.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))<=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c3 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON CASE (((rt1.c2, NULL, 0.24002317235307358))<((rt0.c4, rt1.c2, rt0.c2)))  WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (rt1.c0)) THEN LIKELIHOOD(rt0.c0, 0.09639904630064888) WHEN (rt1.c1 IN ()) THEN HEX(NULL) WHEN ((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c5)) THEN ((rt0.c1) IS FALSE) ELSE (- (rt0.c3)) END ORDER BY ((((rt0.c4) IS TRUE)) NOT BETWEEN (x'8b7c') AND (CASE rt0.c3  WHEN rt1.c0 THEN rt0.c6 ELSE rt0.c1 END))  NULLS LAST, ((((((rt1.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))<=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c3 END)))  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON CASE (((rt1.c2, NULL, 0.24002317235307358))<((rt0.c4, rt1.c2, rt0.c2)))  WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (rt1.c0)) THEN LIKELIHOOD(rt0.c0, 0.09639904630064888) WHEN (rt1.c1 IN ()) THEN HEX(NULL) WHEN ((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c5)) THEN ((rt0.c1) IS FALSE) ELSE (- (rt0.c3)) END WHERE ((((~ (rt1.c2))) ISNULL)) ORDER BY ((((rt0.c4) IS TRUE)) NOT BETWEEN (x'8b7c') AND (CASE rt0.c3  WHEN rt1.c0 THEN rt0.c6 ELSE rt0.c1 END))  NULLS LAST, ((((((rt1.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))<=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c3 END)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c1 COLLATE NOCASE AS BLOB) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c1 COLLATE NOCASE AS BLOB));
SELECT ALL COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c1 COLLATE NOCASE AS BLOB) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c1 COLLATE NOCASE AS BLOB));
SELECT ALL COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c1 COLLATE NOCASE AS BLOB) WHERE ('');
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (rt0.c2 IN ())  WHEN (((rt0.c1)) BETWEEN ((rt0.c6)) AND ((rt0.c2))) THEN rt0.c2 COLLATE RTRIM WHEN TRIM(rt0.c2, rt0.c0) THEN ((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c6)) WHEN (- (rt0.c5)) THEN (rt0.c5 IN (rt0.c3)) END) ORDER BY (~ ((- (rt0.c6))));
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c2 IN ())  WHEN (((rt0.c1)) BETWEEN ((rt0.c6)) AND ((rt0.c2))) THEN rt0.c2 COLLATE RTRIM WHEN TRIM(rt0.c2, rt0.c0) THEN ((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c6)) WHEN (- (rt0.c5)) THEN (rt0.c5 IN (rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY (~ ((- (rt0.c6)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (rt0.c2 IN ())  WHEN (((rt0.c1)) BETWEEN ((rt0.c6)) AND ((rt0.c2))) THEN rt0.c2 COLLATE RTRIM WHEN TRIM(rt0.c2, rt0.c0) THEN ((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c6)) WHEN (- (rt0.c5)) THEN (rt0.c5 IN (rt0.c3)) END) ORDER BY (~ ((- (rt0.c6))));
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c2 IN ())  WHEN (((rt0.c1)) BETWEEN ((rt0.c6)) AND ((rt0.c2))) THEN rt0.c2 COLLATE RTRIM WHEN TRIM(rt0.c2, rt0.c0) THEN ((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c6)) WHEN (- (rt0.c5)) THEN (rt0.c5 IN (rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY (~ ((- (rt0.c6)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (rt0.c2 IN ())  WHEN (((rt0.c1)) BETWEEN ((rt0.c6)) AND ((rt0.c2))) THEN rt0.c2 COLLATE RTRIM WHEN TRIM(rt0.c2, rt0.c0) THEN ((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c6)) WHEN (- (rt0.c5)) THEN (rt0.c5 IN (rt0.c3)) END) ORDER BY (~ ((- (rt0.c6))));
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN rt0.c4 THEN rt0.c1 COLLATE BINARY ELSE (rt0.c4 IN ()) END) ORDER BY x'9210'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) IS FALSE)  WHEN rt0.c4 THEN rt0.c1 COLLATE BINARY ELSE (rt0.c4 IN ()) END) IS TRUE)  as count FROM rt0, t0 ORDER BY x'9210'  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN rt0.c4 THEN rt0.c1 COLLATE BINARY ELSE (rt0.c4 IN ()) END) ORDER BY x'9210'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) IS FALSE)  WHEN rt0.c4 THEN rt0.c1 COLLATE BINARY ELSE (rt0.c4 IN ()) END) IS TRUE)  as count FROM rt0, t0 ORDER BY x'9210'  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN rt0.c4 THEN rt0.c1 COLLATE BINARY ELSE (rt0.c4 IN ()) END) ORDER BY x'9210'  NULLS FIRST;
SELECT ALL * FROM rt1, t0 INDEXED BY i30, rt0 WHERE (((((rt0.c1) NOTNULL)) IS TRUE)) ORDER BY (((CASE rt0.c2  WHEN '-1402211378' THEN rt0.c1 END, ((((((((rt0.c6)OR(rt0.c4)))OR(rt1.c1)))AND(rt0.c6)))AND(rt1.c0)), (NOT (rt0.c1))))<((((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c4)), t0.c0, ((rt0.c3)>=(rt1.c1))))) DESC, (((((- (rt0.c2)))AND(rt1.c1 COLLATE NOCASE)))OR(((0.3457409626303811) BETWEEN (rt1.c0) AND (rt0.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt1, t0 INDEXED BY i30, rt0 ORDER BY (((CASE rt0.c2  WHEN '-1402211378' THEN rt0.c1 END, ((((((((rt0.c6)OR(rt0.c4)))OR(rt1.c1)))AND(rt0.c6)))AND(rt1.c0)), (NOT (rt0.c1))))<((((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c4)), t0.c0, ((rt0.c3)>=(rt1.c1))))) DESC, (((((- (rt0.c2)))AND(rt1.c1 COLLATE NOCASE)))OR(((0.3457409626303811) BETWEEN (rt1.c0) AND (rt0.c5)))) DESC);
SELECT ALL * FROM rt1, t0 INDEXED BY i30, rt0 WHERE (((((rt0.c1) NOTNULL)) IS TRUE)) ORDER BY (((CASE rt0.c2  WHEN '-1402211378' THEN rt0.c1 END, ((((((((rt0.c6)OR(rt0.c4)))OR(rt1.c1)))AND(rt0.c6)))AND(rt1.c0)), (NOT (rt0.c1))))<((((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c4)), t0.c0, ((rt0.c3)>=(rt1.c1))))) DESC, (((((- (rt0.c2)))AND(rt1.c1 COLLATE NOCASE)))OR(((0.3457409626303811) BETWEEN (rt1.c0) AND (rt0.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt1, t0 INDEXED BY i30, rt0 ORDER BY (((CASE rt0.c2  WHEN '-1402211378' THEN rt0.c1 END, ((((((((rt0.c6)OR(rt0.c4)))OR(rt1.c1)))AND(rt0.c6)))AND(rt1.c0)), (NOT (rt0.c1))))<((((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c4)), t0.c0, ((rt0.c3)>=(rt1.c1))))) DESC, (((((- (rt0.c2)))AND(rt1.c1 COLLATE NOCASE)))OR(((0.3457409626303811) BETWEEN (rt1.c0) AND (rt0.c5)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((rt0.c3 IN (rt0.c6))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((rt0.c3 IN (rt0.c6))) AND (NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((rt0.c3 IN (rt0.c6))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((rt0.c3 IN (rt0.c6))) AND (NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((rt0.c3 IN (rt0.c6))) AND (NULL)));
SELECT ALL * FROM rt0, t0 WHERE (-1975365791);
SELECT SUM(count) FROM (SELECT ALL ((-1975365791) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (-1975365791);
SELECT SUM(count) FROM (SELECT ALL ((-1975365791) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (-1975365791);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST((- (rt0.c4)) AS TEXT)) ORDER BY (((~ (rt0.c5))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c4)) AS TEXT)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((~ (rt0.c5))) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST((- (rt0.c4)) AS TEXT)) ORDER BY (((~ (rt0.c5))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c4)) AS TEXT)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((~ (rt0.c5))) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST((- (rt0.c4)) AS TEXT)) ORDER BY (((~ (rt0.c5))) IS FALSE) ASC  NULLS FIRST;
SELECT * FROM rt0, t0 INDEXED BY i30 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0, t0 INDEXED BY i30);
SELECT * FROM rt0, t0 INDEXED BY i30 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0, t0 INDEXED BY i30);
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (((rt1.c1 COLLATE BINARY) BETWEEN (rt0.c5 COLLATE BINARY) AND (rt0.c5)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE BINARY) BETWEEN (rt0.c5 COLLATE BINARY) AND (rt0.c5))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (((rt1.c1 COLLATE BINARY) BETWEEN (rt0.c5 COLLATE BINARY) AND (rt0.c5)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE BINARY) BETWEEN (rt0.c5 COLLATE BINARY) AND (rt0.c5))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (((rt1.c1 COLLATE BINARY) BETWEEN (rt0.c5 COLLATE BINARY) AND (rt0.c5)));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((((((rt0.c5)OR(rt0.c6)))OR(rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c2 END) AND ((NOT (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)OR(rt0.c6)))OR(rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c2 END) AND ((NOT (rt1.c1))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((((((rt0.c5)OR(rt0.c6)))OR(rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c2 END) AND ((NOT (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)OR(rt0.c6)))OR(rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c2 END) AND ((NOT (rt1.c1))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((((((rt0.c5)OR(rt0.c6)))OR(rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c2 END) AND ((NOT (rt1.c1)))));
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (0.31697991595629726 COLLATE RTRIM IN (-1563579734)) WHERE ((((rt1.c1)>>(rt1.c0)) IN ())) ORDER BY (- (((rt1.c0) IS TRUE))) ASC, (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))+(((rt1.c1)==(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)>>(rt1.c0)) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON (0.31697991595629726 COLLATE RTRIM IN (-1563579734)) ORDER BY (- (((rt1.c0) IS TRUE))) ASC, (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))+(((rt1.c1)==(rt1.c0)))) DESC);
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (0.31697991595629726 COLLATE RTRIM IN (-1563579734)) WHERE ((((rt1.c1)>>(rt1.c0)) IN ())) ORDER BY (- (((rt1.c0) IS TRUE))) ASC, (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))+(((rt1.c1)==(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)>>(rt1.c0)) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON (0.31697991595629726 COLLATE RTRIM IN (-1563579734)) ORDER BY (- (((rt1.c0) IS TRUE))) ASC, (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))+(((rt1.c1)==(rt1.c0)))) DESC);
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (0.31697991595629726 COLLATE RTRIM IN (-1563579734)) WHERE ((((rt1.c1)>>(rt1.c0)) IN ())) ORDER BY (- (((rt1.c0) IS TRUE))) ASC, (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))+(((rt1.c1)==(rt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c6))) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c5))) AND (((rt0.c6)&(rt0.c5))))) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c6))) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c5))) AND (((rt0.c6)&(rt0.c5))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c6))) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c5))) AND (((rt0.c6)&(rt0.c5))))) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c6))) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c5))) AND (((rt0.c6)&(rt0.c5))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c6))) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c5))) AND (((rt0.c6)&(rt0.c5))))) ORDER BY rt0.c3  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE ((LIKELIHOOD(rt0.c3, 0.19818131077726442) IN (NULL))) ORDER BY (NOT (((rt1.c0)>(rt0.c3)))), CAST(CAST(rt0.c4 AS BLOB) AS REAL), 0Xe2cab7f;
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(rt0.c3, 0.19818131077726442) IN (NULL))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (NOT (((rt1.c0)>(rt0.c3)))), CAST(CAST(rt0.c4 AS BLOB) AS REAL), 0Xe2cab7f);
SELECT * FROM rt0, rt1 WHERE ((LIKELIHOOD(rt0.c3, 0.19818131077726442) IN (NULL))) ORDER BY (NOT (((rt1.c0)>(rt0.c3)))), CAST(CAST(rt0.c4 AS BLOB) AS REAL), 0Xe2cab7f;
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(rt0.c3, 0.19818131077726442) IN (NULL))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (NOT (((rt1.c0)>(rt0.c3)))), CAST(CAST(rt0.c4 AS BLOB) AS REAL), 0Xe2cab7f);
SELECT * FROM rt0 WHERE ((((((rt0.c6) BETWEEN (rt0.c2) AND (rt0.c2))))<=((((rt0.c1)<<(rt0.c4))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c6) BETWEEN (rt0.c2) AND (rt0.c2))))<=((((rt0.c1)<<(rt0.c4)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c6) BETWEEN (rt0.c2) AND (rt0.c2))))<=((((rt0.c1)<<(rt0.c4))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c6) BETWEEN (rt0.c2) AND (rt0.c2))))<=((((rt0.c1)<<(rt0.c4)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c6) BETWEEN (rt0.c2) AND (rt0.c2))))<=((((rt0.c1)<<(rt0.c4))))));
SELECT COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT (t0.c0 IN ()))) ORDER BY (LIKE(t0.c0, t0.c0) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (t0.c0 IN ()))) IS TRUE)  as count FROM t0 ORDER BY (LIKE(t0.c0, t0.c0) IN ()) DESC);
SELECT COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT (t0.c0 IN ()))) ORDER BY (LIKE(t0.c0, t0.c0) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (t0.c0 IN ()))) IS TRUE)  as count FROM t0 ORDER BY (LIKE(t0.c0, t0.c0) IN ()) DESC);
SELECT COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT (t0.c0 IN ()))) ORDER BY (LIKE(t0.c0, t0.c0) IN ()) DESC;
SELECT * FROM t0 WHERE (LOWER(((t0.c0)|(t0.c0)))) ORDER BY CASE WHEN t0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS INTEGER) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(((t0.c0)|(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS INTEGER) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC);
SELECT * FROM t0 WHERE (LOWER(((t0.c0)|(t0.c0)))) ORDER BY CASE WHEN t0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS INTEGER) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(((t0.c0)|(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS INTEGER) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC);
SELECT * FROM t0 WHERE (LOWER(((t0.c0)|(t0.c0)))) ORDER BY CASE WHEN t0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS INTEGER) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC;
SELECT ALL * FROM rt1, rt0, t0 WHERE (CASE WHEN ((rt1.c1)*(rt0.c5)) THEN ((rt0.c3) NOT NULL) END) ORDER BY ((rt0.c0 COLLATE NOCASE) ISNULL) DESC, (((rt0.c1)) NOT BETWEEN (((((rt0.c3))>=((rt1.c1))))) AND (((- (-1114340803)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1)*(rt0.c5)) THEN ((rt0.c3) NOT NULL) END) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((rt0.c0 COLLATE NOCASE) ISNULL) DESC, (((rt0.c1)) NOT BETWEEN (((((rt0.c3))>=((rt1.c1))))) AND (((- (-1114340803)))))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t0 WHERE (CASE WHEN ((rt1.c1)*(rt0.c5)) THEN ((rt0.c3) NOT NULL) END) ORDER BY ((rt0.c0 COLLATE NOCASE) ISNULL) DESC, (((rt0.c1)) NOT BETWEEN (((((rt0.c3))>=((rt1.c1))))) AND (((- (-1114340803)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1)*(rt0.c5)) THEN ((rt0.c3) NOT NULL) END) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((rt0.c0 COLLATE NOCASE) ISNULL) DESC, (((rt0.c1)) NOT BETWEEN (((((rt0.c3))>=((rt1.c1))))) AND (((- (-1114340803)))))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t0 WHERE (CASE WHEN ((rt1.c1)*(rt0.c5)) THEN ((rt0.c3) NOT NULL) END) ORDER BY ((rt0.c0 COLLATE NOCASE) ISNULL) DESC, (((rt0.c1)) NOT BETWEEN (((((rt0.c3))>=((rt1.c1))))) AND (((- (-1114340803)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, t0 INDEXED BY i30 WHERE (((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END)AND(CAST(t0.c0 AS BLOB))))OR(((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c2))))) ORDER BY CASE WHEN ((((rt1.c2)AND(rt0.c2)))OR(rt1.c2)) THEN 0x141debb2 END ASC  NULLS LAST, ((((rt0.c4)AND(LENGTH(rt0.c5))))AND(rt0.c3 COLLATE RTRIM)) ASC, ((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c3)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END)AND(CAST(t0.c0 AS BLOB))))OR(((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt0, rt1, t0 INDEXED BY i30 ORDER BY CASE WHEN ((((rt1.c2)AND(rt0.c2)))OR(rt1.c2)) THEN 0x141debb2 END ASC  NULLS LAST, ((((rt0.c4)AND(LENGTH(rt0.c5))))AND(rt0.c3 COLLATE RTRIM)) ASC, ((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c3)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 INDEXED BY i30 WHERE (((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END)AND(CAST(t0.c0 AS BLOB))))OR(((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c2))))) ORDER BY CASE WHEN ((((rt1.c2)AND(rt0.c2)))OR(rt1.c2)) THEN 0x141debb2 END ASC  NULLS LAST, ((((rt0.c4)AND(LENGTH(rt0.c5))))AND(rt0.c3 COLLATE RTRIM)) ASC, ((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c3)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END)AND(CAST(t0.c0 AS BLOB))))OR(((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt0, rt1, t0 INDEXED BY i30 ORDER BY CASE WHEN ((((rt1.c2)AND(rt0.c2)))OR(rt1.c2)) THEN 0x141debb2 END ASC  NULLS LAST, ((((rt0.c4)AND(LENGTH(rt0.c5))))AND(rt0.c3 COLLATE RTRIM)) ASC, ((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c3)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE (((((NULL)AND(rt1.c0)))IS NOT(IFNULL(t0.c0, rt1.c0)))) ORDER BY (((((rt1.c0))>=((t0.c0))))<(((rt1.c1) NOT BETWEEN (1.360611548E9) AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(rt1.c0)))IS NOT(IFNULL(t0.c0, rt1.c0)))) IS TRUE)  as count FROM rt1, t0 ORDER BY (((((rt1.c0))>=((t0.c0))))<(((rt1.c1) NOT BETWEEN (1.360611548E9) AND (rt1.c2)))));
SELECT ALL * FROM rt1, t0 WHERE (((((NULL)AND(rt1.c0)))IS NOT(IFNULL(t0.c0, rt1.c0)))) ORDER BY (((((rt1.c0))>=((t0.c0))))<(((rt1.c1) NOT BETWEEN (1.360611548E9) AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(rt1.c0)))IS NOT(IFNULL(t0.c0, rt1.c0)))) IS TRUE)  as count FROM rt1, t0 ORDER BY (((((rt1.c0))>=((t0.c0))))<(((rt1.c1) NOT BETWEEN (1.360611548E9) AND (rt1.c2)))));
SELECT ALL * FROM rt1, t0 WHERE (((((NULL)AND(rt1.c0)))IS NOT(IFNULL(t0.c0, rt1.c0)))) ORDER BY (((((rt1.c0))>=((t0.c0))))<(((rt1.c1) NOT BETWEEN (1.360611548E9) AND (rt1.c2))));
SELECT * FROM rt1, rt0 NATURAL JOIN t0 WHERE (((((rt0.c2)>(NULL)))<=(0.6397957767040162))) ORDER BY rt1.c0 DESC, ((((rt0.c6 IN (rt0.c6, '-1653552121'))))<=((((rt1.c2)IS(rt0.c6)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>(NULL)))<=(0.6397957767040162))) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN t0 ORDER BY rt1.c0 DESC, ((((rt0.c6 IN (rt0.c6, '-1653552121'))))<=((((rt1.c2)IS(rt0.c6)))))  NULLS FIRST);
SELECT * FROM rt1, rt0 NATURAL JOIN t0 WHERE (((((rt0.c2)>(NULL)))<=(0.6397957767040162))) ORDER BY rt1.c0 DESC, ((((rt0.c6 IN (rt0.c6, '-1653552121'))))<=((((rt1.c2)IS(rt0.c6)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>(NULL)))<=(0.6397957767040162))) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN t0 ORDER BY rt1.c0 DESC, ((((rt0.c6 IN (rt0.c6, '-1653552121'))))<=((((rt1.c2)IS(rt0.c6)))))  NULLS FIRST);
SELECT * FROM rt1, rt0 NATURAL JOIN t0 WHERE (((((rt0.c2)>(NULL)))<=(0.6397957767040162))) ORDER BY rt1.c0 DESC, ((((rt0.c6 IN (rt0.c6, '-1653552121'))))<=((((rt1.c2)IS(rt0.c6)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((-210025525)GLOB(rt0.c6)))OR(((rt0.c2)>>(t0.c0)))))AND(IFNULL(rt0.c1, rt0.c0)))) ORDER BY (CASE rt0.c0  WHEN x'' THEN rt0.c3 ELSE NULL END IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((-210025525)GLOB(rt0.c6)))OR(((rt0.c2)>>(t0.c0)))))AND(IFNULL(rt0.c1, rt0.c0)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (CASE rt0.c0  WHEN x'' THEN rt0.c3 ELSE NULL END IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((-210025525)GLOB(rt0.c6)))OR(((rt0.c2)>>(t0.c0)))))AND(IFNULL(rt0.c1, rt0.c0)))) ORDER BY (CASE rt0.c0  WHEN x'' THEN rt0.c3 ELSE NULL END IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((-210025525)GLOB(rt0.c6)))OR(((rt0.c2)>>(t0.c0)))))AND(IFNULL(rt0.c1, rt0.c0)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (CASE rt0.c0  WHEN x'' THEN rt0.c3 ELSE NULL END IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((-210025525)GLOB(rt0.c6)))OR(((rt0.c2)>>(t0.c0)))))AND(IFNULL(rt0.c1, rt0.c0)))) ORDER BY (CASE rt0.c0  WHEN x'' THEN rt0.c3 ELSE NULL END IN ()) ASC  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (CAST(rt0.c5 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c5 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST(rt0.c5 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c5 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST(rt0.c5 AS REAL) COLLATE NOCASE);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON NULL COLLATE RTRIM WHERE (CAST((((rt1.c1))=((rt0.c3))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1))==((rt0.c3))) AS REAL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON NULL COLLATE RTRIM);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON NULL COLLATE RTRIM WHERE (CAST((((rt1.c1))=((rt0.c3))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1))==((rt0.c3))) AS REAL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON NULL COLLATE RTRIM);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON NULL COLLATE RTRIM WHERE (CAST((((rt1.c1))=((rt0.c3))) AS REAL));
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON ((((((((((rt1.c2)AND(-52380201)))AND(rt1.c0)))AND(rt1.c2)))AND(t0.c0)))-((('-1119834836') IS FALSE))) WHERE (CASE WHEN LTRIM(rt1.c1) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LTRIM(rt1.c1) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON ((((((((((rt1.c2)AND(-52380201)))AND(rt1.c0)))AND(rt1.c2)))AND(t0.c0)))-((('-1119834836') IS FALSE))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON ((((((((((rt1.c2)AND(-52380201)))AND(rt1.c0)))AND(rt1.c2)))AND(t0.c0)))-((('-1119834836') IS FALSE))) WHERE (CASE WHEN LTRIM(rt1.c1) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LTRIM(rt1.c1) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON ((((((((((rt1.c2)AND(-52380201)))AND(rt1.c0)))AND(rt1.c2)))AND(t0.c0)))-((('-1119834836') IS FALSE))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON ((((((((((rt1.c2)AND(-52380201)))AND(rt1.c0)))AND(rt1.c2)))AND(t0.c0)))-((('-1119834836') IS FALSE))) WHERE (CASE WHEN LTRIM(rt1.c1) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END);
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON rt0.c4 WHERE ('630221841');
SELECT SUM(count) FROM (SELECT ALL (('630221841') IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON rt0.c4);
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON rt0.c4 WHERE ('630221841');
SELECT SUM(count) FROM (SELECT ALL (('630221841') IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON rt0.c4);
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON rt0.c4 WHERE ('630221841');
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c0))>=((rt1.c0))) IN (((rt1.c1) IS TRUE), (NOT (rt1.c2)))) WHERE (((+ (rt1.c1)) IN (CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((+ (rt1.c1)) IN (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c0))>=((rt1.c0))) IN (((rt1.c1) IS TRUE), (NOT (rt1.c2)))));
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c0))>=((rt1.c0))) IN (((rt1.c1) IS TRUE), (NOT (rt1.c2)))) WHERE (((+ (rt1.c1)) IN (CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((+ (rt1.c1)) IN (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c0))>=((rt1.c0))) IN (((rt1.c1) IS TRUE), (NOT (rt1.c2)))));
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c0))>=((rt1.c0))) IN (((rt1.c1) IS TRUE), (NOT (rt1.c2)))) WHERE (((+ (rt1.c1)) IN (CAST(rt1.c2 AS BLOB))));
SELECT * FROM rt1, t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN rt1.c2 END COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN t0.c0 THEN rt1.c2 END COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN rt1.c2 END COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN t0.c0 THEN rt1.c2 END COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN rt1.c2 END COLLATE NOCASE COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON (~ (((rt1.c2) ISNULL))) LEFT OUTER JOIN rt0 ON CAST(((rt1.c2) NOT NULL) AS BLOB) WHERE (rt0.c5) ORDER BY (((rt0.c0))<=((rt0.c0))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON (~ (((rt1.c2) ISNULL))) LEFT OUTER JOIN rt0 ON CAST(((rt1.c2) NOT NULL) AS BLOB) ORDER BY (((rt0.c0))<=((rt0.c0))) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON (~ (((rt1.c2) ISNULL))) LEFT OUTER JOIN rt0 ON CAST(((rt1.c2) NOT NULL) AS BLOB) WHERE (rt0.c5) ORDER BY (((rt0.c0))<=((rt0.c0))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON (~ (((rt1.c2) ISNULL))) LEFT OUTER JOIN rt0 ON CAST(((rt1.c2) NOT NULL) AS BLOB) ORDER BY (((rt0.c0))<=((rt0.c0))) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON (~ (((rt1.c2) ISNULL))) LEFT OUTER JOIN rt0 ON CAST(((rt1.c2) NOT NULL) AS BLOB) WHERE (rt0.c5) ORDER BY (((rt0.c0))<=((rt0.c0))) COLLATE BINARY ASC;
SELECT * FROM rt1 WHERE (LENGTH(rt1.c0 COLLATE BINARY)) ORDER BY (((rt1.c0 IN ()))AND(((NULL)|(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((LENGTH(rt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 IN ()))AND(((NULL)|(rt1.c0)))) ASC);
SELECT * FROM rt1 WHERE (LENGTH(rt1.c0 COLLATE BINARY)) ORDER BY (((rt1.c0 IN ()))AND(((NULL)|(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((LENGTH(rt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 IN ()))AND(((NULL)|(rt1.c0)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c6)==(rt0.c6))))) ORDER BY (((((NOT (rt0.c5)))AND((((rt0.c1, rt0.c5, rt0.c1, rt0.c1, rt0.c3))>((0.3108814168287798, rt0.c0, rt0.c6, rt0.c6, NULL))))))AND(CAST(rt0.c5 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c6)=(rt0.c6))))) IS TRUE)  as count FROM rt0 ORDER BY (((((NOT (rt0.c5)))AND((((rt0.c1, rt0.c5, rt0.c1, rt0.c1, rt0.c3))>((0.3108814168287798, rt0.c0, rt0.c6, rt0.c6, NULL))))))AND(CAST(rt0.c5 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c6)==(rt0.c6))))) ORDER BY (((((NOT (rt0.c5)))AND((((rt0.c1, rt0.c5, rt0.c1, rt0.c1, rt0.c3))>((0.3108814168287798, rt0.c0, rt0.c6, rt0.c6, NULL))))))AND(CAST(rt0.c5 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c6)=(rt0.c6))))) IS TRUE)  as count FROM rt0 ORDER BY (((((NOT (rt0.c5)))AND((((rt0.c1, rt0.c5, rt0.c1, rt0.c1, rt0.c3))>((0.3108814168287798, rt0.c0, rt0.c6, rt0.c6, NULL))))))AND(CAST(rt0.c5 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c6)==(rt0.c6))))) ORDER BY (((((NOT (rt0.c5)))AND((((rt0.c1, rt0.c5, rt0.c1, rt0.c1, rt0.c3))>((0.3108814168287798, rt0.c0, rt0.c6, rt0.c6, NULL))))))AND(CAST(rt0.c5 AS NUMERIC)));
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CASE (((rt0.c5, rt1.c0, rt0.c0))>=((rt0.c3, rt0.c4, rt1.c1)))  WHEN TRIM(rt0.c2) THEN (((rt1.c0, rt0.c3, rt0.c0)) BETWEEN ((t0.c0, t0.c0, rt1.c2)) AND ((t0.c0, rt0.c1, 1.87815431E9))) ELSE ((rt1.c1)-(rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c5, rt1.c0, rt0.c0))>=((rt0.c3, rt0.c4, rt1.c1)))  WHEN TRIM(rt0.c2) THEN (((rt1.c0, rt0.c3, rt0.c0)) BETWEEN ((t0.c0, t0.c0, rt1.c2)) AND ((t0.c0, rt0.c1, 1.87815431E9))) ELSE ((rt1.c1)-(rt0.c4)) END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CASE (((rt0.c5, rt1.c0, rt0.c0))>=((rt0.c3, rt0.c4, rt1.c1)))  WHEN TRIM(rt0.c2) THEN (((rt1.c0, rt0.c3, rt0.c0)) BETWEEN ((t0.c0, t0.c0, rt1.c2)) AND ((t0.c0, rt0.c1, 1.87815431E9))) ELSE ((rt1.c1)-(rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c5, rt1.c0, rt0.c0))>=((rt0.c3, rt0.c4, rt1.c1)))  WHEN TRIM(rt0.c2) THEN (((rt1.c0, rt0.c3, rt0.c0)) BETWEEN ((t0.c0, t0.c0, rt1.c2)) AND ((t0.c0, rt0.c1, 1.87815431E9))) ELSE ((rt1.c1)-(rt0.c4)) END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CASE (((rt0.c5, rt1.c0, rt0.c0))>=((rt0.c3, rt0.c4, rt1.c1)))  WHEN TRIM(rt0.c2) THEN (((rt1.c0, rt0.c3, rt0.c0)) BETWEEN ((t0.c0, t0.c0, rt1.c2)) AND ((t0.c0, rt0.c1, 1.87815431E9))) ELSE ((rt1.c1)-(rt0.c4)) END);
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN rt0 ON rt0.c3 WHERE (IFNULL(DISTINCT x'', rt0.c1 COLLATE RTRIM)) ORDER BY ((x'')OR(rt0.c4 COLLATE NOCASE)), (('N.zx \n6') NOT BETWEEN ((((rt1.c0, rt0.c6, rt1.c2))<>((rt0.c3, rt0.c5, rt1.c0)))) AND (CAST(rt0.c4 AS NUMERIC))) DESC  NULLS LAST, (((((rt0.c4)AND(rt0.c5)))OR(rt0.c3)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT x'', rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM t0, rt1 INNER JOIN rt0 ON rt0.c3 ORDER BY ((x'')OR(rt0.c4 COLLATE NOCASE)), (('N.zx \n6') NOT BETWEEN ((((rt1.c0, rt0.c6, rt1.c2))!=((rt0.c3, rt0.c5, rt1.c0)))) AND (CAST(rt0.c4 AS NUMERIC))) DESC  NULLS LAST, (((((rt0.c4)AND(rt0.c5)))OR(rt0.c3)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN rt0 ON rt0.c3 WHERE (IFNULL(DISTINCT x'', rt0.c1 COLLATE RTRIM)) ORDER BY ((x'')OR(rt0.c4 COLLATE NOCASE)), (('N.zx \n6') NOT BETWEEN ((((rt1.c0, rt0.c6, rt1.c2))<>((rt0.c3, rt0.c5, rt1.c0)))) AND (CAST(rt0.c4 AS NUMERIC))) DESC  NULLS LAST, (((((rt0.c4)AND(rt0.c5)))OR(rt0.c3)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT x'', rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM t0, rt1 INNER JOIN rt0 ON rt0.c3 ORDER BY ((x'')OR(rt0.c4 COLLATE NOCASE)), (('N.zx \n6') NOT BETWEEN ((((rt1.c0, rt0.c6, rt1.c2))!=((rt0.c3, rt0.c5, rt1.c0)))) AND (CAST(rt0.c4 AS NUMERIC))) DESC  NULLS LAST, (((((rt0.c4)AND(rt0.c5)))OR(rt0.c3)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN rt0 ON rt0.c3 WHERE (IFNULL(DISTINCT x'', rt0.c1 COLLATE RTRIM)) ORDER BY ((x'')OR(rt0.c4 COLLATE NOCASE)), (('N.zx \n6') NOT BETWEEN ((((rt1.c0, rt0.c6, rt1.c2))<>((rt0.c3, rt0.c5, rt1.c0)))) AND (CAST(rt0.c4 AS NUMERIC))) DESC  NULLS LAST, (((((rt0.c4)AND(rt0.c5)))OR(rt0.c3)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c0)>(rt1.c0)) COLLATE RTRIM) ORDER BY CASE (((rt0.c4, x'7dbb', rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c6)) AND ((rt0.c6, rt1.c0, rt0.c0)))  WHEN (rt0.c5 IN (rt0.c1)) THEN rt0.c3 COLLATE RTRIM END ASC, ((CASE rt1.c0  WHEN rt1.c2 THEN rt0.c4 END)OR(NULLIF(DISTINCT rt0.c5, rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE (((rt0.c4, x'7dbb', rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c6)) AND ((rt0.c6, rt1.c0, rt0.c0)))  WHEN (rt0.c5 IN (rt0.c1)) THEN rt0.c3 COLLATE RTRIM END ASC, ((CASE rt1.c0  WHEN rt1.c2 THEN rt0.c4 END)OR(NULLIF(DISTINCT rt0.c5, rt0.c2))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c0)>(rt1.c0)) COLLATE RTRIM) ORDER BY CASE (((rt0.c4, x'7dbb', rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c6)) AND ((rt0.c6, rt1.c0, rt0.c0)))  WHEN (rt0.c5 IN (rt0.c1)) THEN rt0.c3 COLLATE RTRIM END ASC, ((CASE rt1.c0  WHEN rt1.c2 THEN rt0.c4 END)OR(NULLIF(DISTINCT rt0.c5, rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE (((rt0.c4, x'7dbb', rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c6)) AND ((rt0.c6, rt1.c0, rt0.c0)))  WHEN (rt0.c5 IN (rt0.c1)) THEN rt0.c3 COLLATE RTRIM END ASC, ((CASE rt1.c0  WHEN rt1.c2 THEN rt0.c4 END)OR(NULLIF(DISTINCT rt0.c5, rt0.c2))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c0)>(rt1.c0)) COLLATE RTRIM) ORDER BY CASE (((rt0.c4, x'7dbb', rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c6)) AND ((rt0.c6, rt1.c0, rt0.c0)))  WHEN (rt0.c5 IN (rt0.c1)) THEN rt0.c3 COLLATE RTRIM END ASC, ((CASE rt1.c0  WHEN rt1.c2 THEN rt0.c4 END)OR(NULLIF(DISTINCT rt0.c5, rt0.c2))) ASC  NULLS FIRST;
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)) COLLATE RTRIM WHERE (((((CAST(rt1.c1 AS BLOB))AND(MIN(rt1.c2, rt1.c1))))AND(rt1.c0 COLLATE NOCASE))) ORDER BY 7.11584919E8  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c1 AS BLOB))AND(MIN(rt1.c2, rt1.c1))))AND(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)) COLLATE RTRIM ORDER BY 7.11584919E8  NULLS LAST);
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)) COLLATE RTRIM WHERE (((((CAST(rt1.c1 AS BLOB))AND(MIN(rt1.c2, rt1.c1))))AND(rt1.c0 COLLATE NOCASE))) ORDER BY 7.11584919E8  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c1 AS BLOB))AND(MIN(rt1.c2, rt1.c1))))AND(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)) COLLATE RTRIM ORDER BY 7.11584919E8  NULLS LAST);
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)) COLLATE RTRIM WHERE (((((CAST(rt1.c1 AS BLOB))AND(MIN(rt1.c2, rt1.c1))))AND(rt1.c0 COLLATE NOCASE))) ORDER BY 7.11584919E8  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((INSTR(rt1.c2, rt1.c0)) BETWEEN ((+ (rt1.c2))) AND (rt1.c0 COLLATE BINARY))) ORDER BY ((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((INSTR(rt1.c2, rt1.c0)) BETWEEN ((+ (rt1.c2))) AND (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((INSTR(rt1.c2, rt1.c0)) BETWEEN ((+ (rt1.c2))) AND (rt1.c0 COLLATE BINARY))) ORDER BY ((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((INSTR(rt1.c2, rt1.c0)) BETWEEN ((+ (rt1.c2))) AND (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((INSTR(rt1.c2, rt1.c0)) BETWEEN ((+ (rt1.c2))) AND (rt1.c0 COLLATE BINARY))) ORDER BY ((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE BINARY) ORDER BY (t0.c0 IN (rt0.c3)) COLLATE RTRIM DESC, CASE WHEN (~ (t0.c0)) THEN ((rt0.c6) IS FALSE) END  NULLS FIRST, ((((rt0.c4) NOT BETWEEN (rt1.c0) AND (rt0.c5))) BETWEEN (((rt0.c1)>=(rt0.c3))) AND (json_quote(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (t0.c0 IN (rt0.c3)) COLLATE RTRIM DESC, CASE WHEN (~ (t0.c0)) THEN ((rt0.c6) IS FALSE) END  NULLS FIRST, ((((rt0.c4) NOT BETWEEN (rt1.c0) AND (rt0.c5))) BETWEEN (((rt0.c1)>=(rt0.c3))) AND (json_quote(rt0.c1))));
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE BINARY) ORDER BY (t0.c0 IN (rt0.c3)) COLLATE RTRIM DESC, CASE WHEN (~ (t0.c0)) THEN ((rt0.c6) IS FALSE) END  NULLS FIRST, ((((rt0.c4) NOT BETWEEN (rt1.c0) AND (rt0.c5))) BETWEEN (((rt0.c1)>=(rt0.c3))) AND (json_quote(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (t0.c0 IN (rt0.c3)) COLLATE RTRIM DESC, CASE WHEN (~ (t0.c0)) THEN ((rt0.c6) IS FALSE) END  NULLS FIRST, ((((rt0.c4) NOT BETWEEN (rt1.c0) AND (rt0.c5))) BETWEEN (((rt0.c1)>=(rt0.c3))) AND (json_quote(rt0.c1))));
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE BINARY) ORDER BY (t0.c0 IN (rt0.c3)) COLLATE RTRIM DESC, CASE WHEN (~ (t0.c0)) THEN ((rt0.c6) IS FALSE) END  NULLS FIRST, ((((rt0.c4) NOT BETWEEN (rt1.c0) AND (rt0.c5))) BETWEEN (((rt0.c1)>=(rt0.c3))) AND (json_quote(rt0.c1)));
SELECT * FROM t0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c3)>>(rt0.c6))) IS FALSE) WHERE ((((((rt0.c1)>(rt0.c6))))>=((rt0.c1)))) ORDER BY (((((+ (0.9370189333262608)))OR(CAST(rt0.c4 AS BLOB))))OR(x'')), (((((rt0.c1)OR(rt1.c0)))OR(rt1.c1)) IN ((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)>(rt0.c6))))>=((rt0.c1)))) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c3)>>(rt0.c6))) IS FALSE) ORDER BY (((((+ (0.9370189333262608)))OR(CAST(rt0.c4 AS BLOB))))OR(x'')), (((((rt0.c1)OR(rt1.c0)))OR(rt1.c1)) IN ((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST);
SELECT * FROM t0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c3)>>(rt0.c6))) IS FALSE) WHERE ((((((rt0.c1)>(rt0.c6))))>=((rt0.c1)))) ORDER BY (((((+ (0.9370189333262608)))OR(CAST(rt0.c4 AS BLOB))))OR(x'')), (((((rt0.c1)OR(rt1.c0)))OR(rt1.c1)) IN ((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)>(rt0.c6))))>=((rt0.c1)))) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c3)>>(rt0.c6))) IS FALSE) ORDER BY (((((+ (0.9370189333262608)))OR(CAST(rt0.c4 AS BLOB))))OR(x'')), (((((rt0.c1)OR(rt1.c0)))OR(rt1.c1)) IN ((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST);
SELECT * FROM t0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c3)>>(rt0.c6))) IS FALSE) WHERE ((((((rt0.c1)>(rt0.c6))))>=((rt0.c1)))) ORDER BY (((((+ (0.9370189333262608)))OR(CAST(rt0.c4 AS BLOB))))OR(x'')), (((((rt0.c1)OR(rt1.c0)))OR(rt1.c1)) IN ((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((+ (rt1.c1)))!=(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY CAST((NOT (rt1.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c1)))!=(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY CAST((NOT (rt1.c0)) AS REAL));
SELECT ALL * FROM rt1 WHERE ((((+ (rt1.c1)))!=(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY CAST((NOT (rt1.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c1)))!=(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY CAST((NOT (rt1.c0)) AS REAL));
SELECT ALL * FROM rt1 WHERE ((((+ (rt1.c1)))!=(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY CAST((NOT (rt1.c0)) AS REAL);
SELECT ALL COUNT(*) FROM rt0 WHERE (1445178433);
SELECT SUM(count) FROM (SELECT ((1445178433) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (1445178433);
SELECT SUM(count) FROM (SELECT ((1445178433) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (1445178433);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c4)>=(rt0.c1)), CAST(rt0.c3 AS REAL), ((rt0.c2) IS FALSE)))>=((CAST(rt1.c1 AS INTEGER), (rt0.c0 IN ()), rt0.c6))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)>=(rt0.c1)), CAST(rt0.c3 AS REAL), ((rt0.c2) IS FALSE)))>=((CAST(rt1.c1 AS INTEGER), (rt0.c0 IN ()), rt0.c6)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c4)>=(rt0.c1)), CAST(rt0.c3 AS REAL), ((rt0.c2) IS FALSE)))>=((CAST(rt1.c1 AS INTEGER), (rt0.c0 IN ()), rt0.c6))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)>=(rt0.c1)), CAST(rt0.c3 AS REAL), ((rt0.c2) IS FALSE)))>=((CAST(rt1.c1 AS INTEGER), (rt0.c0 IN ()), rt0.c6)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c4)>=(rt0.c1)), CAST(rt0.c3 AS REAL), ((rt0.c2) IS FALSE)))>=((CAST(rt1.c1 AS INTEGER), (rt0.c0 IN ()), rt0.c6))));
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN t0.c0 COLLATE NOCASE THEN rt0.c4 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 COLLATE NOCASE THEN rt0.c4 END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN t0.c0 COLLATE NOCASE THEN rt0.c4 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 COLLATE NOCASE THEN rt0.c4 END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN t0.c0 COLLATE NOCASE THEN rt0.c4 END);
SELECT * FROM rt1, t0, rt0 WHERE (((((rt0.c3)<=(rt1.c0))) NOT BETWEEN (CASE WHEN NULL THEN rt0.c2 ELSE rt1.c2 END) AND (rt0.c6 COLLATE RTRIM))) ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (((rt1.c0)|(rt0.c0))) AND (CHAR(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<=(rt1.c0))) NOT BETWEEN (CASE WHEN NULL THEN rt0.c2 ELSE rt1.c2 END) AND (rt0.c6 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (((rt1.c0)|(rt0.c0))) AND (CHAR(rt1.c1))));
SELECT * FROM rt1, t0, rt0 WHERE (((((rt0.c3)<=(rt1.c0))) NOT BETWEEN (CASE WHEN NULL THEN rt0.c2 ELSE rt1.c2 END) AND (rt0.c6 COLLATE RTRIM))) ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (((rt1.c0)|(rt0.c0))) AND (CHAR(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<=(rt1.c0))) NOT BETWEEN (CASE WHEN NULL THEN rt0.c2 ELSE rt1.c2 END) AND (rt0.c6 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (((rt1.c0)|(rt0.c0))) AND (CHAR(rt1.c1))));
SELECT * FROM rt1, t0, rt0 WHERE (((((rt0.c3)<=(rt1.c0))) NOT BETWEEN (CASE WHEN NULL THEN rt0.c2 ELSE rt1.c2 END) AND (rt0.c6 COLLATE RTRIM))) ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (((rt1.c0)|(rt0.c0))) AND (CHAR(rt1.c1)));
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE NOCASE)LIKE(TIME(rt1.c1, rt1.c1, rt1.c0)))) ORDER BY ((rt1.c2 COLLATE NOCASE) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE)LIKE(TIME(rt1.c1, rt1.c1, rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2 COLLATE NOCASE) IS TRUE) DESC);
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE NOCASE)LIKE(TIME(rt1.c1, rt1.c1, rt1.c0)))) ORDER BY ((rt1.c2 COLLATE NOCASE) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE)LIKE(TIME(rt1.c1, rt1.c1, rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2 COLLATE NOCASE) IS TRUE) DESC);
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE NOCASE)LIKE(TIME(rt1.c1, rt1.c1, rt1.c0)))) ORDER BY ((rt1.c2 COLLATE NOCASE) IS TRUE) DESC;
SELECT ALL * FROM t0, rt1 WHERE (rt1.c2) ORDER BY ((((((((rt1.c0)OR(t0.c0)))OR(rt1.c2)))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))))))OR((('0.8703133688394504')>=(rt1.c0)))) ASC, rt1.c0 COLLATE BINARY  NULLS LAST, CASE ((t0.c0) ISNULL)  WHEN (rt1.c2 IN ()) THEN ((((((((t0.c0)AND(rt1.c1)))OR(t0.c0)))AND(t0.c0)))OR(rt1.c0)) WHEN (((t0.c0, rt1.c1, rt1.c0))>((t0.c0, rt1.c1, x''))) THEN rt1.c2 WHEN ((((rt1.c2)AND(t0.c0)))OR(rt1.c1)) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0)IS(rt1.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN 0xffffffff9b19b7e7 WHEN NULL THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN 0.15218761263784042 THEN rt1.c1 END WHEN ((rt1.c0)|(rt1.c2)) THEN CAST(rt1.c1 AS REAL) ELSE t0.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((((rt1.c0)OR(t0.c0)))OR(rt1.c2)))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))))))OR((('0.8703133688394504')>=(rt1.c0)))) ASC, rt1.c0 COLLATE BINARY  NULLS LAST, CASE ((t0.c0) ISNULL)  WHEN (rt1.c2 IN ()) THEN ((((((((t0.c0)AND(rt1.c1)))OR(t0.c0)))AND(t0.c0)))OR(rt1.c0)) WHEN (((t0.c0, rt1.c1, rt1.c0))>((t0.c0, rt1.c1, x''))) THEN rt1.c2 WHEN ((((rt1.c2)AND(t0.c0)))OR(rt1.c1)) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0)IS(rt1.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN 0Xffffffff9b19b7e7 WHEN NULL THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN 0.15218761263784042 THEN rt1.c1 END WHEN ((rt1.c0)|(rt1.c2)) THEN CAST(rt1.c1 AS REAL) ELSE t0.c0 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE (rt1.c2) ORDER BY ((((((((rt1.c0)OR(t0.c0)))OR(rt1.c2)))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))))))OR((('0.8703133688394504')>=(rt1.c0)))) ASC, rt1.c0 COLLATE BINARY  NULLS LAST, CASE ((t0.c0) ISNULL)  WHEN (rt1.c2 IN ()) THEN ((((((((t0.c0)AND(rt1.c1)))OR(t0.c0)))AND(t0.c0)))OR(rt1.c0)) WHEN (((t0.c0, rt1.c1, rt1.c0))>((t0.c0, rt1.c1, x''))) THEN rt1.c2 WHEN ((((rt1.c2)AND(t0.c0)))OR(rt1.c1)) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0)IS(rt1.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN 0xffffffff9b19b7e7 WHEN NULL THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN 0.15218761263784042 THEN rt1.c1 END WHEN ((rt1.c0)|(rt1.c2)) THEN CAST(rt1.c1 AS REAL) ELSE t0.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((((rt1.c0)OR(t0.c0)))OR(rt1.c2)))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))))))OR((('0.8703133688394504')>=(rt1.c0)))) ASC, rt1.c0 COLLATE BINARY  NULLS LAST, CASE ((t0.c0) ISNULL)  WHEN (rt1.c2 IN ()) THEN ((((((((t0.c0)AND(rt1.c1)))OR(t0.c0)))AND(t0.c0)))OR(rt1.c0)) WHEN (((t0.c0, rt1.c1, rt1.c0))>((t0.c0, rt1.c1, x''))) THEN rt1.c2 WHEN ((((rt1.c2)AND(t0.c0)))OR(rt1.c1)) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0)IS(rt1.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN 0Xffffffff9b19b7e7 WHEN NULL THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN 0.15218761263784042 THEN rt1.c1 END WHEN ((rt1.c0)|(rt1.c2)) THEN CAST(rt1.c1 AS REAL) ELSE t0.c0 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE (rt1.c2) ORDER BY ((((((((rt1.c0)OR(t0.c0)))OR(rt1.c2)))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))))))OR((('0.8703133688394504')>=(rt1.c0)))) ASC, rt1.c0 COLLATE BINARY  NULLS LAST, CASE ((t0.c0) ISNULL)  WHEN (rt1.c2 IN ()) THEN ((((((((t0.c0)AND(rt1.c1)))OR(t0.c0)))AND(t0.c0)))OR(rt1.c0)) WHEN (((t0.c0, rt1.c1, rt1.c0))>((t0.c0, rt1.c1, x''))) THEN rt1.c2 WHEN ((((rt1.c2)AND(t0.c0)))OR(rt1.c1)) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0)IS(rt1.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN 0xffffffff9b19b7e7 WHEN NULL THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN 0.15218761263784042 THEN rt1.c1 END WHEN ((rt1.c0)|(rt1.c2)) THEN CAST(rt1.c1 AS REAL) ELSE t0.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.9472424957349596) ORDER BY (('-1355597424') NOTNULL);
SELECT SUM(count) FROM (SELECT ((0.9472424957349596) IS TRUE)  as count FROM rt0 ORDER BY (('-1355597424') NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.9472424957349596) ORDER BY (('-1355597424') NOTNULL);
SELECT SUM(count) FROM (SELECT ((0.9472424957349596) IS TRUE)  as count FROM rt0 ORDER BY (('-1355597424') NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.9472424957349596) ORDER BY (('-1355597424') NOTNULL);
SELECT * FROM rt0, t0 WHERE (((rt0.c5)&(rt0.c3)) COLLATE BINARY) ORDER BY rt0.c5  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c5)&(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c5  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (((rt0.c5)&(rt0.c3)) COLLATE BINARY) ORDER BY rt0.c5  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c5)&(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c5  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (((rt0.c5)&(rt0.c3)) COLLATE BINARY) ORDER BY rt0.c5  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((0.43068019329991314)) NOT BETWEEN (('7#ZG')) AND ((rt1.c2))) COLLATE RTRIM) ORDER BY ((((('') NOT BETWEEN (rt1.c2) AND (rt1.c1))))>=((CASE WHEN rt1.c1 THEN rt1.c2 ELSE NULL END))), (~ (rt1.c1));
SELECT SUM(count) FROM (SELECT ALL (((((0.43068019329991314)) NOT BETWEEN (('7#ZG')) AND ((rt1.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY ((((('') NOT BETWEEN (rt1.c2) AND (rt1.c1))))>=((CASE WHEN rt1.c1 THEN rt1.c2 ELSE NULL END))), (~ (rt1.c1)));
SELECT ALL * FROM rt1 WHERE ((((0.43068019329991314)) NOT BETWEEN (('7#ZG')) AND ((rt1.c2))) COLLATE RTRIM) ORDER BY ((((('') NOT BETWEEN (rt1.c2) AND (rt1.c1))))>=((CASE WHEN rt1.c1 THEN rt1.c2 ELSE NULL END))), (~ (rt1.c1));
SELECT SUM(count) FROM (SELECT ALL (((((0.43068019329991314)) NOT BETWEEN (('7#ZG')) AND ((rt1.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY ((((('') NOT BETWEEN (rt1.c2) AND (rt1.c1))))>=((CASE WHEN rt1.c1 THEN rt1.c2 ELSE NULL END))), (~ (rt1.c1)));
SELECT ALL * FROM rt1 WHERE ((((0.43068019329991314)) NOT BETWEEN (('7#ZG')) AND ((rt1.c2))) COLLATE RTRIM) ORDER BY ((((('') NOT BETWEEN (rt1.c2) AND (rt1.c1))))>=((CASE WHEN rt1.c1 THEN rt1.c2 ELSE NULL END))), (~ (rt1.c1));
SELECT * FROM rt1 WHERE (((rt1.c1)*(rt1.c2)) COLLATE BINARY) ORDER BY ((((rtreenode(rt1.c1, rt1.c1))OR(NULLIF(rt1.c2, rt1.c2))))AND(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)*(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((((rtreenode(rt1.c1, rt1.c1))OR(NULLIF(rt1.c2, rt1.c2))))AND(NULL)) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE (((rt1.c1)*(rt1.c2)) COLLATE BINARY) ORDER BY ((((rtreenode(rt1.c1, rt1.c1))OR(NULLIF(rt1.c2, rt1.c2))))AND(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)*(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((((rtreenode(rt1.c1, rt1.c1))OR(NULLIF(rt1.c2, rt1.c2))))AND(NULL)) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE (((rt1.c1)*(rt1.c2)) COLLATE BINARY) ORDER BY ((((rtreenode(rt1.c1, rt1.c1))OR(NULLIF(rt1.c2, rt1.c2))))AND(NULL)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (((SQLITE_COMPILEOPTION_USED(rt0.c4))IS NOT((- (rt0.c5))))) ORDER BY ((rt0.c2 COLLATE NOCASE)&(((((((((rt0.c6)OR(rt0.c5)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(rt0.c4))IS NOT((- (rt0.c5))))) IS TRUE)  as count FROM rt0, rt1 NOT INDEXED ORDER BY ((rt0.c2 COLLATE NOCASE)&(((((((((rt0.c6)OR(rt0.c5)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((SQLITE_COMPILEOPTION_USED(rt0.c4))IS NOT((- (rt0.c5))))) ORDER BY ((rt0.c2 COLLATE NOCASE)&(((((((((rt0.c6)OR(rt0.c5)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(rt0.c4))IS NOT((- (rt0.c5))))) IS TRUE)  as count FROM rt0, rt1 NOT INDEXED ORDER BY ((rt0.c2 COLLATE NOCASE)&(((((((((rt0.c6)OR(rt0.c5)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((SQLITE_COMPILEOPTION_USED(rt0.c4))IS NOT((- (rt0.c5))))) ORDER BY ((rt0.c2 COLLATE NOCASE)&(((((((((rt0.c6)OR(rt0.c5)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3))))  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE (((rt1.c1)<(((((((((((((rt0.c6)AND(rt0.c6)))AND(rt1.c2)))OR(0.8703133688394504)))OR(rt1.c2)))AND(rt1.c2)))OR(rt0.c3))))) ORDER BY (((((rt0.c6)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))+(((((((((rt0.c0)AND(rt1.c2)))AND(NULL)))OR(rt1.c1)))OR(rt0.c1)))) ASC, (~ (-1931217931)) DESC  NULLS LAST, CASE (NOT (rt0.c3))  WHEN CASE 0.24763418872089304  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c4 END THEN (rt0.c5 IN (rt1.c0, rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)<(((((((((((((rt0.c6)AND(rt0.c6)))AND(rt1.c2)))OR(0.8703133688394504)))OR(rt1.c2)))AND(rt1.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt0.c6)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))+(((((((((rt0.c0)AND(rt1.c2)))AND(NULL)))OR(rt1.c1)))OR(rt0.c1)))) ASC, (~ (-1931217931)) DESC  NULLS LAST, CASE (NOT (rt0.c3))  WHEN CASE 0.24763418872089304  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c4 END THEN (rt0.c5 IN (rt1.c0, rt0.c0)) END DESC);
SELECT ALL * FROM rt1, rt0 WHERE (((rt1.c1)<(((((((((((((rt0.c6)AND(rt0.c6)))AND(rt1.c2)))OR(0.8703133688394504)))OR(rt1.c2)))AND(rt1.c2)))OR(rt0.c3))))) ORDER BY (((((rt0.c6)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))+(((((((((rt0.c0)AND(rt1.c2)))AND(NULL)))OR(rt1.c1)))OR(rt0.c1)))) ASC, (~ (-1931217931)) DESC  NULLS LAST, CASE (NOT (rt0.c3))  WHEN CASE 0.24763418872089304  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c4 END THEN (rt0.c5 IN (rt1.c0, rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)<(((((((((((((rt0.c6)AND(rt0.c6)))AND(rt1.c2)))OR(0.8703133688394504)))OR(rt1.c2)))AND(rt1.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt0.c6)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))+(((((((((rt0.c0)AND(rt1.c2)))AND(NULL)))OR(rt1.c1)))OR(rt0.c1)))) ASC, (~ (-1931217931)) DESC  NULLS LAST, CASE (NOT (rt0.c3))  WHEN CASE 0.24763418872089304  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c4 END THEN (rt0.c5 IN (rt1.c0, rt0.c0)) END DESC);
SELECT ALL * FROM rt1, rt0 WHERE (((rt1.c1)<(((((((((((((rt0.c6)AND(rt0.c6)))AND(rt1.c2)))OR(0.8703133688394504)))OR(rt1.c2)))AND(rt1.c2)))OR(rt0.c3))))) ORDER BY (((((rt0.c6)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))+(((((((((rt0.c0)AND(rt1.c2)))AND(NULL)))OR(rt1.c1)))OR(rt0.c1)))) ASC, (~ (-1931217931)) DESC  NULLS LAST, CASE (NOT (rt0.c3))  WHEN CASE 0.24763418872089304  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c4 END THEN (rt0.c5 IN (rt1.c0, rt0.c0)) END DESC;
SELECT * FROM t0, rt1 WHERE ((CAST(t0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c0 AS REAL) IN ())) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE ((CAST(t0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c0 AS REAL) IN ())) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE ((CAST(t0.c0 AS REAL) IN ()));
SELECT ALL * FROM rt1, rt0 WHERE ((((NOT (rt1.c1)))LIKE(rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c1)))LIKE(rt0.c4))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((NOT (rt1.c1)))LIKE(rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c1)))LIKE(rt0.c4))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((NOT (rt1.c1)))LIKE(rt0.c4)));
SELECT COUNT(*) FROM t0 WHERE (NULLIF(DISTINCT ((t0.c0)IS(t0.c0)), ((t0.c0) IS TRUE))) ORDER BY ((((t0.c0)AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((t0.c0)IS(t0.c0)), ((t0.c0) IS TRUE))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC);
SELECT COUNT(*) FROM t0 WHERE (NULLIF(DISTINCT ((t0.c0)IS(t0.c0)), ((t0.c0) IS TRUE))) ORDER BY ((((t0.c0)AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((t0.c0)IS(t0.c0)), ((t0.c0) IS TRUE))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC);
SELECT COUNT(*) FROM t0 WHERE (NULLIF(DISTINCT ((t0.c0)IS(t0.c0)), ((t0.c0) IS TRUE))) ORDER BY ((((t0.c0)AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt1.c0)AND(rt1.c0)))OR(rt0.c5))) BETWEEN (((0x4a105b22)==(rt0.c3))) AND ((rt0.c1 IN ())))) ORDER BY (((((rt1.c2 IN ()))OR(rt0.c2)))AND(CAST(rt1.c1 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(rt1.c0)))OR(rt0.c5))) BETWEEN (((0X4a105b22)=(rt0.c3))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt1.c2 IN ()))OR(rt0.c2)))AND(CAST(rt1.c1 AS TEXT))) ASC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt1.c0)AND(rt1.c0)))OR(rt0.c5))) BETWEEN (((0x4a105b22)==(rt0.c3))) AND ((rt0.c1 IN ())))) ORDER BY (((((rt1.c2 IN ()))OR(rt0.c2)))AND(CAST(rt1.c1 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(rt1.c0)))OR(rt0.c5))) BETWEEN (((0X4a105b22)=(rt0.c3))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt1.c2 IN ()))OR(rt0.c2)))AND(CAST(rt1.c1 AS TEXT))) ASC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt1.c0)AND(rt1.c0)))OR(rt0.c5))) BETWEEN (((0x4a105b22)==(rt0.c3))) AND ((rt0.c1 IN ())))) ORDER BY (((((rt1.c2 IN ()))OR(rt0.c2)))AND(CAST(rt1.c1 AS TEXT))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((0.10193356932760933) IS TRUE))-((((x'', rt0.c5, rt0.c1))!=((rt0.c1, rt0.c2, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((0.10193356932760933) IS TRUE))-((((x'', rt0.c5, rt0.c1))!=((rt0.c1, rt0.c2, rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((0.10193356932760933) IS TRUE))-((((x'', rt0.c5, rt0.c1))!=((rt0.c1, rt0.c2, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((0.10193356932760933) IS TRUE))-((((x'', rt0.c5, rt0.c1))!=((rt0.c1, rt0.c2, rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((0.10193356932760933) IS TRUE))-((((x'', rt0.c5, rt0.c1))!=((rt0.c1, rt0.c2, rt0.c3))))));
SELECT ALL * FROM rt0, t0 WHERE (((COALESCE(rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c6 IN ())) AND (CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END))) ORDER BY HEX(((((t0.c0)AND(rt0.c4)))AND(rt0.c1))), ((CASE WHEN rt0.c2 THEN rt0.c5 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c6 IN ())) AND (CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY HEX(((((t0.c0)AND(rt0.c4)))AND(rt0.c1))), ((CASE WHEN rt0.c2 THEN rt0.c5 END) NOTNULL) DESC);
SELECT ALL * FROM rt0, t0 WHERE (((COALESCE(rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c6 IN ())) AND (CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END))) ORDER BY HEX(((((t0.c0)AND(rt0.c4)))AND(rt0.c1))), ((CASE WHEN rt0.c2 THEN rt0.c5 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c6 IN ())) AND (CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY HEX(((((t0.c0)AND(rt0.c4)))AND(rt0.c1))), ((CASE WHEN rt0.c2 THEN rt0.c5 END) NOTNULL) DESC);
SELECT ALL * FROM rt0, t0 WHERE (((COALESCE(rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c6 IN ())) AND (CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END))) ORDER BY HEX(((((t0.c0)AND(rt0.c4)))AND(rt0.c1))), ((CASE WHEN rt0.c2 THEN rt0.c5 END) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((+ (((((rt1.c1)OR(rt1.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt1.c1)OR(rt1.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((+ (((((rt1.c1)OR(rt1.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt1.c1)OR(rt1.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((+ (((((rt1.c1)OR(rt1.c2)))AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((('' IN (rt0.c3, rt0.c0)))>(x'25ed' COLLATE BINARY))) ORDER BY 1.854918577E9 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((('' IN (rt0.c3, rt0.c0)))>(x'25ed' COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY 1.854918577E9 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((('' IN (rt0.c3, rt0.c0)))>(x'25ed' COLLATE BINARY))) ORDER BY 1.854918577E9 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((('' IN (rt0.c3, rt0.c0)))>(x'25ed' COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY 1.854918577E9 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((('' IN (rt0.c3, rt0.c0)))>(x'25ed' COLLATE BINARY))) ORDER BY 1.854918577E9 DESC;
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((rt0.c5 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((rt0.c5 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((rt0.c5 COLLATE NOCASE) NOT NULL));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((CASE WHEN -1952546862 THEN rt0.c5 WHEN rt0.c4 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN -1952546862 THEN rt0.c5 WHEN rt0.c4 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(NULL))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((CASE WHEN -1952546862 THEN rt0.c5 WHEN rt0.c4 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN -1952546862 THEN rt0.c5 WHEN rt0.c4 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(NULL))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((CASE WHEN -1952546862 THEN rt0.c5 WHEN rt0.c4 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(NULL)));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((- (((rt0.c0)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)&(rt0.c0))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((- (((rt0.c0)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)&(rt0.c0))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((- (((rt0.c0)&(rt0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)>(t0.c0)))|(0.21406947736962512 COLLATE RTRIM))) ORDER BY CASE ((t0.c0)IS(t0.c0))  WHEN ((((t0.c0)AND(t0.c0)))AND(0.0840572431113662)) THEN t0.c0 WHEN (t0.c0 IN ()) THEN 0.029751569268818834 WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0) NOTNULL) END ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>(t0.c0)))|(0.21406947736962512 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0)IS(t0.c0))  WHEN ((((t0.c0)AND(t0.c0)))AND(0.0840572431113662)) THEN t0.c0 WHEN (t0.c0 IN ()) THEN 0.029751569268818834 WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0) NOTNULL) END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)>(t0.c0)))|(0.21406947736962512 COLLATE RTRIM))) ORDER BY CASE ((t0.c0)IS(t0.c0))  WHEN ((((t0.c0)AND(t0.c0)))AND(0.0840572431113662)) THEN t0.c0 WHEN (t0.c0 IN ()) THEN 0.029751569268818834 WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0) NOTNULL) END ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>(t0.c0)))|(0.21406947736962512 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0)IS(t0.c0))  WHEN ((((t0.c0)AND(t0.c0)))AND(0.0840572431113662)) THEN t0.c0 WHEN (t0.c0 IN ()) THEN 0.029751569268818834 WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0) NOTNULL) END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)>(t0.c0)))|(0.21406947736962512 COLLATE RTRIM))) ORDER BY CASE ((t0.c0)IS(t0.c0))  WHEN ((((t0.c0)AND(t0.c0)))AND(0.0840572431113662)) THEN t0.c0 WHEN (t0.c0 IN ()) THEN 0.029751569268818834 WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0) NOTNULL) END ASC;
SELECT * FROM rt0 WHERE (((0.9041731231282356)==(rt0.c4)) COLLATE BINARY) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (rt0.c1) AND ((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.9041731231282356)==(rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (rt0.c1) AND ((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))) DESC);
SELECT * FROM rt0 WHERE (((0.9041731231282356)==(rt0.c4)) COLLATE BINARY) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (rt0.c1) AND ((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.9041731231282356)==(rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (rt0.c1) AND ((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))) DESC);
SELECT * FROM rt0 WHERE (((0.9041731231282356)==(rt0.c4)) COLLATE BINARY) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (rt0.c1) AND ((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))) DESC;
SELECT ALL * FROM t0 WHERE (((TRIM(DISTINCT t0.c0, t0.c0)) BETWEEN (t0.c0) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ORDER BY '3뼋';
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t0.c0, t0.c0)) BETWEEN (t0.c0) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY '3뼋');
SELECT ALL * FROM t0 WHERE (((TRIM(DISTINCT t0.c0, t0.c0)) BETWEEN (t0.c0) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ORDER BY '3뼋';
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t0.c0, t0.c0)) BETWEEN (t0.c0) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY '3뼋');
SELECT ALL * FROM t0 WHERE (((TRIM(DISTINCT t0.c0, t0.c0)) BETWEEN (t0.c0) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ORDER BY '3뼋';
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0) NOT NULL)  WHEN ((((t0.c0)AND(t0.c0)))OR(0.33708279167939037)) THEN 0xffffffff889c40d1 END) ORDER BY (- ((NOT (t0.c0)))) ASC  NULLS LAST, (((+ (t0.c0)))>>(CAST(t0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOT NULL)  WHEN ((((t0.c0)AND(t0.c0)))OR(0.33708279167939037)) THEN 0xffffffff889c40d1 END) IS TRUE)  as count FROM t0 ORDER BY (- ((NOT (t0.c0)))) ASC  NULLS LAST, (((+ (t0.c0)))>>(CAST(t0.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0) NOT NULL)  WHEN ((((t0.c0)AND(t0.c0)))OR(0.33708279167939037)) THEN 0xffffffff889c40d1 END) ORDER BY (- ((NOT (t0.c0)))) ASC  NULLS LAST, (((+ (t0.c0)))>>(CAST(t0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOT NULL)  WHEN ((((t0.c0)AND(t0.c0)))OR(0.33708279167939037)) THEN 0xffffffff889c40d1 END) IS TRUE)  as count FROM t0 ORDER BY (- ((NOT (t0.c0)))) ASC  NULLS LAST, (((+ (t0.c0)))>>(CAST(t0.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0) NOT NULL)  WHEN ((((t0.c0)AND(t0.c0)))OR(0.33708279167939037)) THEN 0xffffffff889c40d1 END) ORDER BY (- ((NOT (t0.c0)))) ASC  NULLS LAST, (((+ (t0.c0)))>>(CAST(t0.c0 AS INTEGER)))  NULLS LAST;
SELECT ALL * FROM rt1, rt0, t0 WHERE (((rt0.c1)IS NOT((((rt0.c6)) BETWEEN ((rt0.c4)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS NOT((((rt0.c6)) BETWEEN ((rt0.c4)) AND ((NULL)))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE (((rt0.c1)IS NOT((((rt0.c6)) BETWEEN ((rt0.c4)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS NOT((((rt0.c6)) BETWEEN ((rt0.c4)) AND ((NULL)))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE (((rt0.c1)IS NOT((((rt0.c6)) BETWEEN ((rt0.c4)) AND ((NULL))))));
SELECT * FROM rt1 INDEXED BY i30, t0, rt0 WHERE ((((rt0.c4)) BETWEEN ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c0)))))) ORDER BY ((rt1.c2) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) BETWEEN ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1 INDEXED BY i30, t0, rt0 ORDER BY ((rt1.c2) IS TRUE));
SELECT * FROM rt1 INDEXED BY i30, t0, rt0 WHERE ((((rt0.c4)) BETWEEN ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c0)))))) ORDER BY ((rt1.c2) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) BETWEEN ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1 INDEXED BY i30, t0, rt0 ORDER BY ((rt1.c2) IS TRUE));
SELECT ALL * FROM rt0, rt1 WHERE (HEX(DISTINCT (((rt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) ORDER BY (((((rt1.c0)GLOB(rt0.c5)), (((rt1.c0)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c6))), (NOT (rt0.c2))))>((((rt0.c5) IS FALSE), ((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c6)), rt0.c6))) DESC  NULLS FIRST, (((((rt0.c4) NOT BETWEEN (rt0.c6) AND (x'c573')), (~ (NULL)), ((rt0.c5)GLOB(rt1.c1))))<=((CAST(rt1.c1 AS TEXT), LIKELY(rt0.c2), 'h<1\rِ	 K\')));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (((rt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((rt1.c0)GLOB(rt0.c5)), (((rt1.c0)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c6))), (NOT (rt0.c2))))>((((rt0.c5) IS FALSE), ((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c6)), rt0.c6))) DESC  NULLS FIRST, (((((rt0.c4) NOT BETWEEN (rt0.c6) AND (x'c573')), (~ (NULL)), ((rt0.c5)GLOB(rt1.c1))))<=((CAST(rt1.c1 AS TEXT), LIKELY(rt0.c2), 'h<1\rِ	 K\'))));
SELECT ALL * FROM rt0, rt1 WHERE (HEX(DISTINCT (((rt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) ORDER BY (((((rt1.c0)GLOB(rt0.c5)), (((rt1.c0)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c6))), (NOT (rt0.c2))))>((((rt0.c5) IS FALSE), ((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c6)), rt0.c6))) DESC  NULLS FIRST, (((((rt0.c4) NOT BETWEEN (rt0.c6) AND (x'c573')), (~ (NULL)), ((rt0.c5)GLOB(rt1.c1))))<=((CAST(rt1.c1 AS TEXT), LIKELY(rt0.c2), 'h<1\rِ	 K\')));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (((rt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((rt1.c0)GLOB(rt0.c5)), (((rt1.c0)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c6))), (NOT (rt0.c2))))>((((rt0.c5) IS FALSE), ((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c6)), rt0.c6))) DESC  NULLS FIRST, (((((rt0.c4) NOT BETWEEN (rt0.c6) AND (x'c573')), (~ (NULL)), ((rt0.c5)GLOB(rt1.c1))))<=((CAST(rt1.c1 AS TEXT), LIKELY(rt0.c2), 'h<1\rِ	 K\'))));
SELECT ALL * FROM rt0, rt1 WHERE (HEX(DISTINCT (((rt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) ORDER BY (((((rt1.c0)GLOB(rt0.c5)), (((rt1.c0)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c6))), (NOT (rt0.c2))))>((((rt0.c5) IS FALSE), ((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c6)), rt0.c6))) DESC  NULLS FIRST, (((((rt0.c4) NOT BETWEEN (rt0.c6) AND (x'c573')), (~ (NULL)), ((rt0.c5)GLOB(rt1.c1))))<=((CAST(rt1.c1 AS TEXT), LIKELY(rt0.c2), 'h<1\rِ	 K\')));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c0)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3))) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c0)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3))) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c0)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3))) IN ()));
SELECT COUNT(*) FROM rt0, t0 WHERE (json(rt0.c6 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((json(rt0.c6 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (json(rt0.c6 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((json(rt0.c6 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (json(rt0.c6 COLLATE NOCASE));
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON rt1.c2 LEFT OUTER JOIN rt0 ON (((rt0.c6 IN (rt0.c4))) BETWEEN (((rt0.c6) IS TRUE)) AND ((rt1.c0 IN (rt0.c0)))) WHERE ((((((rt0.c3)AND(rt1.c2)))AND(rt0.c1)) IN ())) ORDER BY '0.31353655707006634';
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)AND(rt1.c2)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON rt1.c2 LEFT OUTER JOIN rt0 ON (((rt0.c6 IN (rt0.c4))) BETWEEN (((rt0.c6) IS TRUE)) AND ((rt1.c0 IN (rt0.c0)))) ORDER BY '0.31353655707006634');
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON rt1.c2 LEFT OUTER JOIN rt0 ON (((rt0.c6 IN (rt0.c4))) BETWEEN (((rt0.c6) IS TRUE)) AND ((rt1.c0 IN (rt0.c0)))) WHERE ((((((rt0.c3)AND(rt1.c2)))AND(rt0.c1)) IN ())) ORDER BY '0.31353655707006634';
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)AND(rt1.c2)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON rt1.c2 LEFT OUTER JOIN rt0 ON (((rt0.c6 IN (rt0.c4))) BETWEEN (((rt0.c6) IS TRUE)) AND ((rt1.c0 IN (rt0.c0)))) ORDER BY '0.31353655707006634');
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON rt1.c2 LEFT OUTER JOIN rt0 ON (((rt0.c6 IN (rt0.c4))) BETWEEN (((rt0.c6) IS TRUE)) AND ((rt1.c0 IN (rt0.c0)))) WHERE ((((((rt0.c3)AND(rt1.c2)))AND(rt0.c1)) IN ())) ORDER BY '0.31353655707006634';
SELECT ALL * FROM t0 WHERE ('ﳻ,');
SELECT SUM(count) FROM (SELECT (('ﳻ,') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ('ﳻ,');
SELECT SUM(count) FROM (SELECT (('ﳻ,') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ('ﳻ,');
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON DATE(rt0.c1 COLLATE RTRIM, CAST(rt1.c1 AS REAL), (rt1.c1 IN (t0.c0))) FULL OUTER JOIN t0 ON CAST((- (t0.c0)) AS NUMERIC) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON DATE(rt0.c1 COLLATE RTRIM, CAST(rt1.c1 AS REAL), (rt1.c1 IN (t0.c0))) FULL OUTER JOIN t0 ON CAST((- (t0.c0)) AS NUMERIC));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON DATE(rt0.c1 COLLATE RTRIM, CAST(rt1.c1 AS REAL), (rt1.c1 IN (t0.c0))) FULL OUTER JOIN t0 ON CAST((- (t0.c0)) AS NUMERIC) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON DATE(rt0.c1 COLLATE RTRIM, CAST(rt1.c1 AS REAL), (rt1.c1 IN (t0.c0))) FULL OUTER JOIN t0 ON CAST((- (t0.c0)) AS NUMERIC));
SELECT * FROM rt0, rt1 WHERE ((((0.47491404301893114))<=((CAST(rt0.c3 AS INTEGER))))) ORDER BY ((((((rt0.c6)>>(rt0.c2)))OR(COALESCE(rt0.c5, rt0.c1))))OR('+)IPaLP'))  NULLS LAST, CASE WHEN ((rt0.c0) IS FALSE) THEN CAST(-2.10025525E8 AS NUMERIC) ELSE (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((0.6824929918042942))) END, ((HEX(rt1.c0)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((0.47491404301893114))<=((CAST(rt0.c3 AS INTEGER))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((rt0.c6)>>(rt0.c2)))OR(COALESCE(rt0.c5, rt0.c1))))OR('+)IPaLP'))  NULLS LAST, CASE WHEN ((rt0.c0) IS FALSE) THEN CAST(-2.10025525E8 AS NUMERIC) ELSE (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((0.6824929918042942))) END, ((HEX(rt1.c0)) IS FALSE));
SELECT * FROM rt0, rt1 WHERE ((((0.47491404301893114))<=((CAST(rt0.c3 AS INTEGER))))) ORDER BY ((((((rt0.c6)>>(rt0.c2)))OR(COALESCE(rt0.c5, rt0.c1))))OR('+)IPaLP'))  NULLS LAST, CASE WHEN ((rt0.c0) IS FALSE) THEN CAST(-2.10025525E8 AS NUMERIC) ELSE (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((0.6824929918042942))) END, ((HEX(rt1.c0)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((0.47491404301893114))<=((CAST(rt0.c3 AS INTEGER))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((rt0.c6)>>(rt0.c2)))OR(COALESCE(rt0.c5, rt0.c1))))OR('+)IPaLP'))  NULLS LAST, CASE WHEN ((rt0.c0) IS FALSE) THEN CAST(-2.10025525E8 AS NUMERIC) ELSE (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((0.6824929918042942))) END, ((HEX(rt1.c0)) IS FALSE));
SELECT * FROM rt0, rt1 WHERE ((((0.47491404301893114))<=((CAST(rt0.c3 AS INTEGER))))) ORDER BY ((((((rt0.c6)>>(rt0.c2)))OR(COALESCE(rt0.c5, rt0.c1))))OR('+)IPaLP'))  NULLS LAST, CASE WHEN ((rt0.c0) IS FALSE) THEN CAST(-2.10025525E8 AS NUMERIC) ELSE (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((0.6824929918042942))) END, ((HEX(rt1.c0)) IS FALSE);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((((CASE rt0.c1  WHEN rt1.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c4 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 ELSE x'1c22' END)AND(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c3)))))OR(((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c1  WHEN rt1.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c4 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 ELSE x'1c22' END)AND(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c3)))))OR(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((((CASE rt0.c1  WHEN rt1.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c4 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 ELSE x'1c22' END)AND(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c3)))))OR(((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c1  WHEN rt1.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c4 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 ELSE x'1c22' END)AND(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c3)))))OR(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((((CASE rt0.c1  WHEN rt1.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c4 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 ELSE x'1c22' END)AND(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c3)))))OR(((t0.c0) IS FALSE))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c5) NOTNULL) IN ())  NULLS LAST, (~ (CAST(rt0.c6 AS INTEGER)))  NULLS LAST, TYPEOF(DISTINCT (((rt0.c6, rt0.c4, rt0.c6)) BETWEEN ((rt0.c0, x'', rt0.c5)) AND ((rt0.c4, 0.359616928945914, rt0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c5) NOTNULL) IN ())  NULLS LAST, (~ (CAST(rt0.c6 AS INTEGER)))  NULLS LAST, TYPEOF(DISTINCT (((rt0.c6, rt0.c4, rt0.c6)) BETWEEN ((rt0.c0, x'', rt0.c5)) AND ((rt0.c4, 0.359616928945914, rt0.c4)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c5) NOTNULL) IN ())  NULLS LAST, (~ (CAST(rt0.c6 AS INTEGER)))  NULLS LAST, TYPEOF(DISTINCT (((rt0.c6, rt0.c4, rt0.c6)) BETWEEN ((rt0.c0, x'', rt0.c5)) AND ((rt0.c4, 0.359616928945914, rt0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c5) NOTNULL) IN ())  NULLS LAST, (~ (CAST(rt0.c6 AS INTEGER)))  NULLS LAST, TYPEOF(DISTINCT (((rt0.c6, rt0.c4, rt0.c6)) BETWEEN ((rt0.c0, x'', rt0.c5)) AND ((rt0.c4, 0.359616928945914, rt0.c4)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c5) NOTNULL) IN ())  NULLS LAST, (~ (CAST(rt0.c6 AS INTEGER)))  NULLS LAST, TYPEOF(DISTINCT (((rt0.c6, rt0.c4, rt0.c6)) BETWEEN ((rt0.c0, x'', rt0.c5)) AND ((rt0.c4, 0.359616928945914, rt0.c4)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, t0, rt1 WHERE ((- ((rt1.c2 IN ())))) ORDER BY (NOT (((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR(rt0.c6))));
SELECT SUM(count) FROM (SELECT (((- ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (NOT (((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR(rt0.c6)))));
SELECT ALL * FROM rt0, t0, rt1 WHERE ((- ((rt1.c2 IN ())))) ORDER BY (NOT (((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR(rt0.c6))));
SELECT SUM(count) FROM (SELECT (((- ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (NOT (((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR(rt0.c6)))));
SELECT ALL * FROM rt0, t0, rt1 WHERE ((- ((rt1.c2 IN ())))) ORDER BY (NOT (((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR(rt0.c6))));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((NULL IN ()));
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)OR(x'')))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))|(((t0.c0)%(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)OR(x'')))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))|(((t0.c0)%(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)OR(x'')))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))|(((t0.c0)%(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)OR(x'')))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))|(((t0.c0)%(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0)OR(x'')))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))|(((t0.c0)%(t0.c0)))));
SELECT ALL * FROM rt0, rt1 FULL OUTER JOIN t0 ON CAST(rt0.c1 AS TEXT) COLLATE NOCASE WHERE (CASE ((rt0.c0)>(rt0.c6))  WHEN ((rt0.c5) BETWEEN (rt1.c1) AND (t0.c0)) THEN ((rt0.c3)LIKE(rt1.c2)) WHEN ((rt0.c3) BETWEEN (NULL) AND (t0.c0)) THEN CAST(rt0.c6 AS TEXT) WHEN '1035500108' THEN (rt0.c1 IN (x'', rt0.c2)) ELSE CASE WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)>(rt0.c6))  WHEN ((rt0.c5) BETWEEN (rt1.c1) AND (t0.c0)) THEN ((rt0.c3)LIKE(rt1.c2)) WHEN ((rt0.c3) BETWEEN (NULL) AND (t0.c0)) THEN CAST(rt0.c6 AS TEXT) WHEN '1035500108' THEN (rt0.c1 IN (x'', rt0.c2)) ELSE CASE WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END END) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN t0 ON CAST(rt0.c1 AS TEXT) COLLATE NOCASE);
SELECT ALL * FROM rt0, rt1 FULL OUTER JOIN t0 ON CAST(rt0.c1 AS TEXT) COLLATE NOCASE WHERE (CASE ((rt0.c0)>(rt0.c6))  WHEN ((rt0.c5) BETWEEN (rt1.c1) AND (t0.c0)) THEN ((rt0.c3)LIKE(rt1.c2)) WHEN ((rt0.c3) BETWEEN (NULL) AND (t0.c0)) THEN CAST(rt0.c6 AS TEXT) WHEN '1035500108' THEN (rt0.c1 IN (x'', rt0.c2)) ELSE CASE WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)>(rt0.c6))  WHEN ((rt0.c5) BETWEEN (rt1.c1) AND (t0.c0)) THEN ((rt0.c3)LIKE(rt1.c2)) WHEN ((rt0.c3) BETWEEN (NULL) AND (t0.c0)) THEN CAST(rt0.c6 AS TEXT) WHEN '1035500108' THEN (rt0.c1 IN (x'', rt0.c2)) ELSE CASE WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END END) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN t0 ON CAST(rt0.c1 AS TEXT) COLLATE NOCASE);
SELECT ALL * FROM rt0, rt1 FULL OUTER JOIN t0 ON CAST(rt0.c1 AS TEXT) COLLATE NOCASE WHERE (CASE ((rt0.c0)>(rt0.c6))  WHEN ((rt0.c5) BETWEEN (rt1.c1) AND (t0.c0)) THEN ((rt0.c3)LIKE(rt1.c2)) WHEN ((rt0.c3) BETWEEN (NULL) AND (t0.c0)) THEN CAST(rt0.c6 AS TEXT) WHEN '1035500108' THEN (rt0.c1 IN (x'', rt0.c2)) ELSE CASE WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END END);
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c0 IN ())) IS TRUE)) ORDER BY ((((t0.c0) IS TRUE)) NOT BETWEEN (rt1.c2) AND (CAST(rt1.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((t0.c0) IS TRUE)) NOT BETWEEN (rt1.c2) AND (CAST(rt1.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c0 IN ())) IS TRUE)) ORDER BY ((((t0.c0) IS TRUE)) NOT BETWEEN (rt1.c2) AND (CAST(rt1.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((t0.c0) IS TRUE)) NOT BETWEEN (rt1.c2) AND (CAST(rt1.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE ((((t0.c0 IN ())) IS TRUE)) ORDER BY ((((t0.c0) IS TRUE)) NOT BETWEEN (rt1.c2) AND (CAST(rt1.c0 AS INTEGER)))  NULLS FIRST;
SELECT * FROM t0, rt0, rt1 WHERE (((((((((rt1.c2 COLLATE BINARY)OR(((((rt0.c0)OR(rt0.c2)))AND(rt0.c6)))))AND(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(NULL)))OR(rt0.c3)))))OR(((t0.c0)-(rt1.c2)))))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c6 THEN rt0.c4 WHEN rt1.c0 THEN rt0.c5 WHEN t0.c0 THEN t0.c0 ELSE 0.8575662223820233 END)));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2 COLLATE BINARY)OR(((((rt0.c0)OR(rt0.c2)))AND(rt0.c6)))))AND(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(NULL)))OR(rt0.c3)))))OR(((t0.c0)-(rt1.c2)))))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c6 THEN rt0.c4 WHEN rt1.c0 THEN rt0.c5 WHEN t0.c0 THEN t0.c0 ELSE 0.8575662223820233 END))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE (((((((((rt1.c2 COLLATE BINARY)OR(((((rt0.c0)OR(rt0.c2)))AND(rt0.c6)))))AND(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(NULL)))OR(rt0.c3)))))OR(((t0.c0)-(rt1.c2)))))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c6 THEN rt0.c4 WHEN rt1.c0 THEN rt0.c5 WHEN t0.c0 THEN t0.c0 ELSE 0.8575662223820233 END)));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2 COLLATE BINARY)OR(((((rt0.c0)OR(rt0.c2)))AND(rt0.c6)))))AND(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(NULL)))OR(rt0.c3)))))OR(((t0.c0)-(rt1.c2)))))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c6 THEN rt0.c4 WHEN rt1.c0 THEN rt0.c5 WHEN t0.c0 THEN t0.c0 ELSE 0.8575662223820233 END))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE (((((((((rt1.c2 COLLATE BINARY)OR(((((rt0.c0)OR(rt0.c2)))AND(rt0.c6)))))AND(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(NULL)))OR(rt0.c3)))))OR(((t0.c0)-(rt1.c2)))))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c6 THEN rt0.c4 WHEN rt1.c0 THEN rt0.c5 WHEN t0.c0 THEN t0.c0 ELSE 0.8575662223820233 END)));
SELECT ALL * FROM rt0 WHERE (0.9729034708337491 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0.9729034708337491 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0.9729034708337491 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0.9729034708337491 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0.9729034708337491 COLLATE NOCASE);
SELECT * FROM t0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY (0.7031640516688459 IN ()), ((x'b420')=(CASE WHEN rt1.c1 THEN t0.c0 ELSE rt1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS TEXT)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON rt1.c0 ORDER BY (0.7031640516688459 IN ()), ((x'b420')==(CASE WHEN rt1.c1 THEN t0.c0 ELSE rt1.c2 END)) ASC);
SELECT * FROM t0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY (0.7031640516688459 IN ()), ((x'b420')=(CASE WHEN rt1.c1 THEN t0.c0 ELSE rt1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS TEXT)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON rt1.c0 ORDER BY (0.7031640516688459 IN ()), ((x'b420')==(CASE WHEN rt1.c1 THEN t0.c0 ELSE rt1.c2 END)) ASC);
SELECT * FROM t0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY (0.7031640516688459 IN ()), ((x'b420')=(CASE WHEN rt1.c1 THEN t0.c0 ELSE rt1.c2 END)) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (1.189846028E9);
SELECT SUM(count) FROM (SELECT ALL ((1.189846028E9) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (1.189846028E9);
SELECT SUM(count) FROM (SELECT ALL ((1.189846028E9) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (1.189846028E9);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT * FROM rt1 NOT INDEXED, rt0, t0 WHERE ((~ (CAST(rt0.c1 AS INTEGER)))) ORDER BY ((CASE WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c4 END) BETWEEN ((rt0.c1 IN ())) AND (NULL))  NULLS FIRST, (((t0.c0 IN (rt0.c0)))<((~ (rt0.c2)))), (+ (HEX(DISTINCT rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((CASE WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c4 END) BETWEEN ((rt0.c1 IN ())) AND (NULL))  NULLS FIRST, (((t0.c0 IN (rt0.c0)))<((~ (rt0.c2)))), (+ (HEX(DISTINCT rt0.c1))) DESC);
SELECT * FROM rt1 NOT INDEXED, rt0, t0 WHERE ((~ (CAST(rt0.c1 AS INTEGER)))) ORDER BY ((CASE WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c4 END) BETWEEN ((rt0.c1 IN ())) AND (NULL))  NULLS FIRST, (((t0.c0 IN (rt0.c0)))<((~ (rt0.c2)))), (+ (HEX(DISTINCT rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((CASE WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c4 END) BETWEEN ((rt0.c1 IN ())) AND (NULL))  NULLS FIRST, (((t0.c0 IN (rt0.c0)))<((~ (rt0.c2)))), (+ (HEX(DISTINCT rt0.c1))) DESC);
SELECT * FROM rt1 NOT INDEXED, rt0, t0 WHERE ((~ (CAST(rt0.c1 AS INTEGER)))) ORDER BY ((CASE WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c4 END) BETWEEN ((rt0.c1 IN ())) AND (NULL))  NULLS FIRST, (((t0.c0 IN (rt0.c0)))<((~ (rt0.c2)))), (+ (HEX(DISTINCT rt0.c1))) DESC;
SELECT COUNT(*) FROM t0 WHERE (CAST((NOT (t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c0)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((NOT (t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c0)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((NOT (t0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ((NOT ((NOT (rt0.c6))))) ORDER BY ((rt0.c4) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (rt0.c6))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((rt0.c4) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ((NOT ((NOT (rt0.c6))))) ORDER BY ((rt0.c4) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (rt0.c6))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((rt0.c4) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ((NOT ((NOT (rt0.c6))))) ORDER BY ((rt0.c4) NOTNULL) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((((((((rt0.c3 IN ()))OR(((((rt0.c3)OR(rt0.c5)))OR(rt0.c4)))))OR(DATETIME(rt0.c4, rt0.c3, rt0.c3))))AND(CASE rt0.c5  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c5 END)))AND(CASE WHEN NULL THEN rt0.c1 END))) ORDER BY (~ ((+ (rt0.c6)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3 IN ()))OR(((((rt0.c3)OR(rt0.c5)))OR(rt0.c4)))))OR(DATETIME(rt0.c4, rt0.c3, rt0.c3))))AND(CASE rt0.c5  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c5 END)))AND(CASE WHEN NULL THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((+ (rt0.c6)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((rt0.c3 IN ()))OR(((((rt0.c3)OR(rt0.c5)))OR(rt0.c4)))))OR(DATETIME(rt0.c4, rt0.c3, rt0.c3))))AND(CASE rt0.c5  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c5 END)))AND(CASE WHEN NULL THEN rt0.c1 END))) ORDER BY (~ ((+ (rt0.c6)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3 IN ()))OR(((((rt0.c3)OR(rt0.c5)))OR(rt0.c4)))))OR(DATETIME(rt0.c4, rt0.c3, rt0.c3))))AND(CASE rt0.c5  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c5 END)))AND(CASE WHEN NULL THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((+ (rt0.c6)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((rt0.c3 IN ()))OR(((((rt0.c3)OR(rt0.c5)))OR(rt0.c4)))))OR(DATETIME(rt0.c4, rt0.c3, rt0.c3))))AND(CASE rt0.c5  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c5 END)))AND(CASE WHEN NULL THEN rt0.c1 END))) ORDER BY (~ ((+ (rt0.c6)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((~ (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((~ (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((~ (t0.c0)) AS NUMERIC));
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((0.17048145082996102 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((0.17048145082996102 IN ())) IS TRUE)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((0.17048145082996102 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((0.17048145082996102 IN ())) IS TRUE)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((0.17048145082996102 IN ())) IS TRUE));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0, rt1.c2, rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((TRIM(DISTINCT rt1.c1), ((rt1.c2)IS NOT(rt1.c0)), rt1.c0 COLLATE BINARY, CAST(rt1.c1 AS TEXT), ((rt1.c2)>>(rt1.c2)))) AND (((rt1.c0 IN ()), (((rt1.c0, rt1.c0, rt1.c0))<((rt1.c2, rt1.c1, x''))), rt1.c0, ((NULL) BETWEEN (rt1.c0) AND (rt1.c2)), (- (x''))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c2, rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((TRIM(DISTINCT rt1.c1), ((rt1.c2)IS NOT(rt1.c0)), rt1.c0 COLLATE BINARY, CAST(rt1.c1 AS TEXT), ((rt1.c2)>>(rt1.c2)))) AND (((rt1.c0 IN ()), (((rt1.c0, rt1.c0, rt1.c0))<((rt1.c2, rt1.c1, x''))), rt1.c0, ((NULL) BETWEEN (rt1.c0) AND (rt1.c2)), (- (x'')))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0, rt1.c2, rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((TRIM(DISTINCT rt1.c1), ((rt1.c2)IS NOT(rt1.c0)), rt1.c0 COLLATE BINARY, CAST(rt1.c1 AS TEXT), ((rt1.c2)>>(rt1.c2)))) AND (((rt1.c0 IN ()), (((rt1.c0, rt1.c0, rt1.c0))<((rt1.c2, rt1.c1, x''))), rt1.c0, ((NULL) BETWEEN (rt1.c0) AND (rt1.c2)), (- (x''))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c2, rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((TRIM(DISTINCT rt1.c1), ((rt1.c2)IS NOT(rt1.c0)), rt1.c0 COLLATE BINARY, CAST(rt1.c1 AS TEXT), ((rt1.c2)>>(rt1.c2)))) AND (((rt1.c0 IN ()), (((rt1.c0, rt1.c0, rt1.c0))<((rt1.c2, rt1.c1, x''))), rt1.c0, ((NULL) BETWEEN (rt1.c0) AND (rt1.c2)), (- (x'')))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0, rt1.c2, rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((TRIM(DISTINCT rt1.c1), ((rt1.c2)IS NOT(rt1.c0)), rt1.c0 COLLATE BINARY, CAST(rt1.c1 AS TEXT), ((rt1.c2)>>(rt1.c2)))) AND (((rt1.c0 IN ()), (((rt1.c0, rt1.c0, rt1.c0))<((rt1.c2, rt1.c1, x''))), rt1.c0, ((NULL) BETWEEN (rt1.c0) AND (rt1.c2)), (- (x''))))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c4)))OR(((rt0.c1) NOT NULL))))OR((NOT (rt0.c6))))) ORDER BY x'f756' ASC  NULLS LAST, rt0.c3 DESC, CASE WHEN ((0.7469889752956494)||(rt0.c1)) THEN ((rt0.c5)>(rt1.c2)) ELSE ((rt0.c4) BETWEEN (rt0.c6) AND (rt0.c3)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c4)))OR(((rt0.c1) NOT NULL))))OR((NOT (rt0.c6))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY x'f756' ASC  NULLS LAST, rt0.c3 DESC, CASE WHEN ((0.7469889752956494)||(rt0.c1)) THEN ((rt0.c5)>(rt1.c2)) ELSE ((rt0.c4) BETWEEN (rt0.c6) AND (rt0.c3)) END);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c4)))OR(((rt0.c1) NOT NULL))))OR((NOT (rt0.c6))))) ORDER BY x'f756' ASC  NULLS LAST, rt0.c3 DESC, CASE WHEN ((0.7469889752956494)||(rt0.c1)) THEN ((rt0.c5)>(rt1.c2)) ELSE ((rt0.c4) BETWEEN (rt0.c6) AND (rt0.c3)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c4)))OR(((rt0.c1) NOT NULL))))OR((NOT (rt0.c6))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY x'f756' ASC  NULLS LAST, rt0.c3 DESC, CASE WHEN ((0.7469889752956494)||(rt0.c1)) THEN ((rt0.c5)>(rt1.c2)) ELSE ((rt0.c4) BETWEEN (rt0.c6) AND (rt0.c3)) END);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c4)))OR(((rt0.c1) NOT NULL))))OR((NOT (rt0.c6))))) ORDER BY x'f756' ASC  NULLS LAST, rt0.c3 DESC, CASE WHEN ((0.7469889752956494)||(rt0.c1)) THEN ((rt0.c5)>(rt1.c2)) ELSE ((rt0.c4) BETWEEN (rt0.c6) AND (rt0.c3)) END;
SELECT ALL * FROM t0, rt0, rt1 WHERE (rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (rt0.c1 COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE ((((+ (rt1.c1))) NOT BETWEEN (((rt1.c0)IS(rt1.c1))) AND (x''))) ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c1) IS FALSE))) AND (((rt1.c1 IN (rt1.c1))))), CASE WHEN ((rt1.c1)+(rt1.c2)) THEN (rt1.c2 IN ()) WHEN CAST(rt1.c2 AS REAL) THEN NULLIF(rt1.c0, rt1.c0) WHEN ((-3.59875677E8)LIKE(rt1.c2)) THEN ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)) ELSE (NOT (rt1.c2)) END  NULLS LAST, ((CAST(rt1.c2 AS NUMERIC))<=(((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1))) NOT BETWEEN (((rt1.c0)IS(rt1.c1))) AND (x''))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c1) IS FALSE))) AND (((rt1.c1 IN (rt1.c1))))), CASE WHEN ((rt1.c1)+(rt1.c2)) THEN (rt1.c2 IN ()) WHEN CAST(rt1.c2 AS REAL) THEN NULLIF(rt1.c0, rt1.c0) WHEN ((-3.59875677E8)LIKE(rt1.c2)) THEN ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)) ELSE (NOT (rt1.c2)) END  NULLS LAST, ((CAST(rt1.c2 AS NUMERIC))<=(((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((+ (rt1.c1))) NOT BETWEEN (((rt1.c0)IS(rt1.c1))) AND (x''))) ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c1) IS FALSE))) AND (((rt1.c1 IN (rt1.c1))))), CASE WHEN ((rt1.c1)+(rt1.c2)) THEN (rt1.c2 IN ()) WHEN CAST(rt1.c2 AS REAL) THEN NULLIF(rt1.c0, rt1.c0) WHEN ((-3.59875677E8)LIKE(rt1.c2)) THEN ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)) ELSE (NOT (rt1.c2)) END  NULLS LAST, ((CAST(rt1.c2 AS NUMERIC))<=(((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1))) NOT BETWEEN (((rt1.c0)IS(rt1.c1))) AND (x''))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c1) IS FALSE))) AND (((rt1.c1 IN (rt1.c1))))), CASE WHEN ((rt1.c1)+(rt1.c2)) THEN (rt1.c2 IN ()) WHEN CAST(rt1.c2 AS REAL) THEN NULLIF(rt1.c0, rt1.c0) WHEN ((-3.59875677E8)LIKE(rt1.c2)) THEN ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)) ELSE (NOT (rt1.c2)) END  NULLS LAST, ((CAST(rt1.c2 AS NUMERIC))<=(((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((+ (rt1.c1))) NOT BETWEEN (((rt1.c0)IS(rt1.c1))) AND (x''))) ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c1) IS FALSE))) AND (((rt1.c1 IN (rt1.c1))))), CASE WHEN ((rt1.c1)+(rt1.c2)) THEN (rt1.c2 IN ()) WHEN CAST(rt1.c2 AS REAL) THEN NULLIF(rt1.c0, rt1.c0) WHEN ((-3.59875677E8)LIKE(rt1.c2)) THEN ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)) ELSE (NOT (rt1.c2)) END  NULLS LAST, ((CAST(rt1.c2 AS NUMERIC))<=(((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)AND((t0.c0 IN (t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)AND((t0.c0 IN (t0.c0, t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)AND((t0.c0 IN (t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)AND((t0.c0 IN (t0.c0, t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)AND((t0.c0 IN (t0.c0, t0.c0)))));
SELECT ALL * FROM t0 INNER JOIN rt1 ON CASE ((rt0.c5)&(rt1.c2))  WHEN rt0.c4 COLLATE RTRIM THEN CASE WHEN rt0.c3 THEN rt0.c3 END ELSE (NOT (rt0.c2)) END FULL OUTER JOIN rt0 ON ((((((rt1.c2)OR(0Xffffffffbd94823d)))OR(rt1.c2)))>=((+ (rt1.c1)))) WHERE (CASE rt0.c5 COLLATE NOCASE  WHEN DATETIME(rt1.c2, rt0.c2, rt0.c1, rt1.c1, rt1.c2) THEN '{}' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c5 COLLATE NOCASE  WHEN DATETIME(rt1.c2, rt0.c2, rt0.c1, rt1.c1, rt1.c2) THEN '{}' END) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON CASE ((rt0.c5)&(rt1.c2))  WHEN rt0.c4 COLLATE RTRIM THEN CASE WHEN rt0.c3 THEN rt0.c3 END ELSE (NOT (rt0.c2)) END FULL OUTER JOIN rt0 ON ((((((rt1.c2)OR(0xffffffffbd94823d)))OR(rt1.c2)))>=((+ (rt1.c1)))));
SELECT ALL * FROM t0 INNER JOIN rt1 ON CASE ((rt0.c5)&(rt1.c2))  WHEN rt0.c4 COLLATE RTRIM THEN CASE WHEN rt0.c3 THEN rt0.c3 END ELSE (NOT (rt0.c2)) END FULL OUTER JOIN rt0 ON ((((((rt1.c2)OR(0Xffffffffbd94823d)))OR(rt1.c2)))>=((+ (rt1.c1)))) WHERE (CASE rt0.c5 COLLATE NOCASE  WHEN DATETIME(rt1.c2, rt0.c2, rt0.c1, rt1.c1, rt1.c2) THEN '{}' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c5 COLLATE NOCASE  WHEN DATETIME(rt1.c2, rt0.c2, rt0.c1, rt1.c1, rt1.c2) THEN '{}' END) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON CASE ((rt0.c5)&(rt1.c2))  WHEN rt0.c4 COLLATE RTRIM THEN CASE WHEN rt0.c3 THEN rt0.c3 END ELSE (NOT (rt0.c2)) END FULL OUTER JOIN rt0 ON ((((((rt1.c2)OR(0xffffffffbd94823d)))OR(rt1.c2)))>=((+ (rt1.c1)))));
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))AND(NULL)))AND(((t0.c0)AND(t0.c0))))) ORDER BY (~ ((t0.c0 IN (t0.c0)))) DESC  NULLS LAST, ((CAST(t0.c0 AS BLOB)) NOTNULL), ((((x'')&(t0.c0)))IS(0.6226295207966982))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS REAL))AND(NULL)))AND(((t0.c0)AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (~ ((t0.c0 IN (t0.c0)))) DESC  NULLS LAST, ((CAST(t0.c0 AS BLOB)) NOTNULL), ((((x'')&(t0.c0)))IS(0.6226295207966982))  NULLS LAST);
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))AND(NULL)))AND(((t0.c0)AND(t0.c0))))) ORDER BY (~ ((t0.c0 IN (t0.c0)))) DESC  NULLS LAST, ((CAST(t0.c0 AS BLOB)) NOTNULL), ((((x'')&(t0.c0)))IS(0.6226295207966982))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS REAL))AND(NULL)))AND(((t0.c0)AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (~ ((t0.c0 IN (t0.c0)))) DESC  NULLS LAST, ((CAST(t0.c0 AS BLOB)) NOTNULL), ((((x'')&(t0.c0)))IS(0.6226295207966982))  NULLS LAST);
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))AND(NULL)))AND(((t0.c0)AND(t0.c0))))) ORDER BY (~ ((t0.c0 IN (t0.c0)))) DESC  NULLS LAST, ((CAST(t0.c0 AS BLOB)) NOTNULL), ((((x'')&(t0.c0)))IS(0.6226295207966982))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c5)=(rt0.c2)))/(((rt0.c2) NOT BETWEEN (0.9505049829840566) AND (rt0.c0))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c5 END)<<(((((rt0.c1)OR(rt0.c0)))OR(rt0.c6))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)=(rt0.c2)))/(((rt0.c2) NOT BETWEEN (0.9505049829840566) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c5 END)<<(((((rt0.c1)OR(rt0.c0)))OR(rt0.c6))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c5)=(rt0.c2)))/(((rt0.c2) NOT BETWEEN (0.9505049829840566) AND (rt0.c0))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c5 END)<<(((((rt0.c1)OR(rt0.c0)))OR(rt0.c6))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)=(rt0.c2)))/(((rt0.c2) NOT BETWEEN (0.9505049829840566) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c5 END)<<(((((rt0.c1)OR(rt0.c0)))OR(rt0.c6))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c5)=(rt0.c2)))/(((rt0.c2) NOT BETWEEN (0.9505049829840566) AND (rt0.c0))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c5 END)<<(((((rt0.c1)OR(rt0.c0)))OR(rt0.c6))))  NULLS FIRST;
SELECT ALL * FROM t0, rt1, rt0 WHERE (TYPEOF(DISTINCT ((rt1.c1)|(rt0.c2)))) ORDER BY CASE WHEN (- (t0.c0)) THEN ((rt0.c4)<>(rt0.c1)) WHEN ((((rt0.c4)AND(rt0.c3)))AND(rt0.c6)) THEN ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c4)) WHEN ((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c2)) THEN rt1.c1 COLLATE BINARY WHEN rt1.c2 COLLATE NOCASE THEN (((rt0.c5)) BETWEEN ((rt1.c1)) AND ((rt0.c1))) WHEN CAST(rt0.c5 AS INTEGER) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt1.c1)) WHEN ((x'3cb6978f')IS(rt0.c2)) THEN rt1.c1 WHEN (rt0.c0 IN ()) THEN GLOB(rt1.c1, rt0.c3) END ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((rt1.c1)|(rt0.c2)))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CASE WHEN (- (t0.c0)) THEN ((rt0.c4)!=(rt0.c1)) WHEN ((((rt0.c4)AND(rt0.c3)))AND(rt0.c6)) THEN ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c4)) WHEN ((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c2)) THEN rt1.c1 COLLATE BINARY WHEN rt1.c2 COLLATE NOCASE THEN (((rt0.c5)) BETWEEN ((rt1.c1)) AND ((rt0.c1))) WHEN CAST(rt0.c5 AS INTEGER) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt1.c1)) WHEN ((x'3cb6978f')IS(rt0.c2)) THEN rt1.c1 WHEN (rt0.c0 IN ()) THEN GLOB(rt1.c1, rt0.c3) END ASC);
SELECT ALL * FROM t0, rt1, rt0 WHERE (TYPEOF(DISTINCT ((rt1.c1)|(rt0.c2)))) ORDER BY CASE WHEN (- (t0.c0)) THEN ((rt0.c4)<>(rt0.c1)) WHEN ((((rt0.c4)AND(rt0.c3)))AND(rt0.c6)) THEN ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c4)) WHEN ((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c2)) THEN rt1.c1 COLLATE BINARY WHEN rt1.c2 COLLATE NOCASE THEN (((rt0.c5)) BETWEEN ((rt1.c1)) AND ((rt0.c1))) WHEN CAST(rt0.c5 AS INTEGER) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt1.c1)) WHEN ((x'3cb6978f')IS(rt0.c2)) THEN rt1.c1 WHEN (rt0.c0 IN ()) THEN GLOB(rt1.c1, rt0.c3) END ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((rt1.c1)|(rt0.c2)))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CASE WHEN (- (t0.c0)) THEN ((rt0.c4)!=(rt0.c1)) WHEN ((((rt0.c4)AND(rt0.c3)))AND(rt0.c6)) THEN ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c4)) WHEN ((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c2)) THEN rt1.c1 COLLATE BINARY WHEN rt1.c2 COLLATE NOCASE THEN (((rt0.c5)) BETWEEN ((rt1.c1)) AND ((rt0.c1))) WHEN CAST(rt0.c5 AS INTEGER) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt1.c1)) WHEN ((x'3cb6978f')IS(rt0.c2)) THEN rt1.c1 WHEN (rt0.c0 IN ()) THEN GLOB(rt1.c1, rt0.c3) END ASC);
SELECT ALL * FROM t0, rt1, rt0 WHERE (TYPEOF(DISTINCT ((rt1.c1)|(rt0.c2)))) ORDER BY CASE WHEN (- (t0.c0)) THEN ((rt0.c4)<>(rt0.c1)) WHEN ((((rt0.c4)AND(rt0.c3)))AND(rt0.c6)) THEN ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c4)) WHEN ((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c2)) THEN rt1.c1 COLLATE BINARY WHEN rt1.c2 COLLATE NOCASE THEN (((rt0.c5)) BETWEEN ((rt1.c1)) AND ((rt0.c1))) WHEN CAST(rt0.c5 AS INTEGER) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt1.c1)) WHEN ((x'3cb6978f')IS(rt0.c2)) THEN rt1.c1 WHEN (rt0.c0 IN ()) THEN GLOB(rt1.c1, rt0.c3) END ASC;
SELECT COUNT(*) FROM t0 WHERE ((- ((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- ((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- ((- (t0.c0)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON ABS(DISTINCT CASE WHEN '' THEN rt0.c2 END) WHERE (CAST(rt0.c3 COLLATE NOCASE AS INTEGER)) ORDER BY (((t0.c0)) BETWEEN ((CASE rt0.c4  WHEN rt0.c6 THEN rt0.c6 ELSE rt0.c5 END)) AND ((((rt0.c0)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ABS(DISTINCT CASE WHEN '' THEN rt0.c2 END) ORDER BY (((t0.c0)) BETWEEN ((CASE rt0.c4  WHEN rt0.c6 THEN rt0.c6 ELSE rt0.c5 END)) AND ((((rt0.c0)+(rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON ABS(DISTINCT CASE WHEN '' THEN rt0.c2 END) WHERE (CAST(rt0.c3 COLLATE NOCASE AS INTEGER)) ORDER BY (((t0.c0)) BETWEEN ((CASE rt0.c4  WHEN rt0.c6 THEN rt0.c6 ELSE rt0.c5 END)) AND ((((rt0.c0)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ABS(DISTINCT CASE WHEN '' THEN rt0.c2 END) ORDER BY (((t0.c0)) BETWEEN ((CASE rt0.c4  WHEN rt0.c6 THEN rt0.c6 ELSE rt0.c5 END)) AND ((((rt0.c0)+(rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON ABS(DISTINCT CASE WHEN '' THEN rt0.c2 END) WHERE (CAST(rt0.c3 COLLATE NOCASE AS INTEGER)) ORDER BY (((t0.c0)) BETWEEN ((CASE rt0.c4  WHEN rt0.c6 THEN rt0.c6 ELSE rt0.c5 END)) AND ((((rt0.c0)+(rt0.c1)))));
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((((((((((t0.c0)AND(rt0.c4)))OR(rt0.c5)))AND(rt0.c6)))OR(rt0.c1)))LIKE(((((rt0.c1)AND(rt1.c1)))AND(rt0.c2))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)AND(rt0.c4)))OR(rt0.c5)))AND(rt0.c6)))OR(rt0.c1)))LIKE(((((rt0.c1)AND(rt1.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY t0.c0);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((((((((((t0.c0)AND(rt0.c4)))OR(rt0.c5)))AND(rt0.c6)))OR(rt0.c1)))LIKE(((((rt0.c1)AND(rt1.c1)))AND(rt0.c2))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)AND(rt0.c4)))OR(rt0.c5)))AND(rt0.c6)))OR(rt0.c1)))LIKE(((((rt0.c1)AND(rt1.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY t0.c0);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((((((((((t0.c0)AND(rt0.c4)))OR(rt0.c5)))AND(rt0.c6)))OR(rt0.c1)))LIKE(((((rt0.c1)AND(rt1.c1)))AND(rt0.c2))))) ORDER BY t0.c0;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((- (rt0.c6)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c6))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((- (rt0.c6)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c6))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((- (rt0.c6)));
SELECT * FROM rt1, rt0 WHERE (((UNLIKELY(x''))LIKE(((rt0.c1)OR(rt0.c6))))) ORDER BY ((((rt1.c1) IS TRUE)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(x''))LIKE(((rt0.c1)OR(rt0.c6))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c1) IS TRUE)) ISNULL) DESC);
SELECT * FROM rt1, rt0 WHERE (((UNLIKELY(x''))LIKE(((rt0.c1)OR(rt0.c6))))) ORDER BY ((((rt1.c1) IS TRUE)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(x''))LIKE(((rt0.c1)OR(rt0.c6))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c1) IS TRUE)) ISNULL) DESC);
SELECT * FROM rt1, rt0 WHERE (((UNLIKELY(x''))LIKE(((rt0.c1)OR(rt0.c6))))) ORDER BY ((((rt1.c1) IS TRUE)) ISNULL) DESC;
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0)))%(((NULL) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CASE WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)<>(t0.c0)) END ASC, (((((t0.c0))!=((t0.c0)))) BETWEEN ((+ (t0.c0))) AND (t0.c0));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))%(((NULL) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)!=(t0.c0)) END ASC, (((((t0.c0))<>((t0.c0)))) BETWEEN ((+ (t0.c0))) AND (t0.c0)));
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0)))%(((NULL) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CASE WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)<>(t0.c0)) END ASC, (((((t0.c0))!=((t0.c0)))) BETWEEN ((+ (t0.c0))) AND (t0.c0));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))%(((NULL) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)!=(t0.c0)) END ASC, (((((t0.c0))<>((t0.c0)))) BETWEEN ((+ (t0.c0))) AND (t0.c0)));
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0)))%(((NULL) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CASE WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)<>(t0.c0)) END ASC, (((((t0.c0))!=((t0.c0)))) BETWEEN ((+ (t0.c0))) AND (t0.c0));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((((((CASE rt0.c6  WHEN t0.c0 THEN rt0.c2 END)OR(ROUND(rt0.c2, rt0.c3))))AND(((((x'')OR(rt0.c1)))OR(rt0.c3)))))AND((rt0.c3 IN ()))))OR((((-840753749))>((rt0.c5))))) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((((((CASE rt0.c6  WHEN t0.c0 THEN rt0.c2 END)OR(ROUND(rt0.c2, rt0.c3))))AND(((((x'')OR(rt0.c1)))OR(rt0.c3)))))AND((rt0.c3 IN ()))))OR((((-840753749))>((rt0.c5))))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((((((CASE rt0.c6  WHEN t0.c0 THEN rt0.c2 END)OR(ROUND(rt0.c2, rt0.c3))))AND(((((x'')OR(rt0.c1)))OR(rt0.c3)))))AND((rt0.c3 IN ()))))OR((((-840753749))>((rt0.c5))))) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((((((CASE rt0.c6  WHEN t0.c0 THEN rt0.c2 END)OR(ROUND(rt0.c2, rt0.c3))))AND(((((x'')OR(rt0.c1)))OR(rt0.c3)))))AND((rt0.c3 IN ()))))OR((((-840753749))>((rt0.c5))))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((((((CASE rt0.c6  WHEN t0.c0 THEN rt0.c2 END)OR(ROUND(rt0.c2, rt0.c3))))AND(((((x'')OR(rt0.c1)))OR(rt0.c3)))))AND((rt0.c3 IN ()))))OR((((-840753749))>((rt0.c5))))) WHERE (rt0.c4);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((rt1.c2 COLLATE RTRIM)) AND (((((rt1.c2, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, NULL, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c2)))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN ((rt1.c2 COLLATE RTRIM)) AND (((((rt1.c2, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, NULL, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c2))))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((rt1.c2 COLLATE RTRIM)) AND (((((rt1.c2, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, NULL, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c2)))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN ((rt1.c2 COLLATE RTRIM)) AND (((((rt1.c2, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, NULL, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c2))))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((rt1.c2 COLLATE RTRIM)) AND (((((rt1.c2, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, NULL, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c2)))))));
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((t0.c0)+(CASE rt0.c6  WHEN rt0.c2 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)+(CASE rt0.c6  WHEN rt0.c2 THEN rt1.c1 END))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((t0.c0)+(CASE rt0.c6  WHEN rt0.c2 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)+(CASE rt0.c6  WHEN rt0.c2 THEN rt1.c1 END))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((t0.c0)+(CASE rt0.c6  WHEN rt0.c2 THEN rt1.c1 END)));
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN rt1 ON (+ (CAST(rt0.c5 AS NUMERIC))) WHERE (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)))*(rt0.c5 COLLATE BINARY))) ORDER BY ((((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c2))) NOTNULL) DESC  NULLS FIRST, ((0.12879556495507172)>(((rt0.c0)>(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)))*(rt0.c5 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN rt1 ON (+ (CAST(rt0.c5 AS NUMERIC))) ORDER BY ((((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c2))) NOTNULL) DESC  NULLS FIRST, ((0.12879556495507172)>(((rt0.c0)>(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN rt1 ON (+ (CAST(rt0.c5 AS NUMERIC))) WHERE (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)))*(rt0.c5 COLLATE BINARY))) ORDER BY ((((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c2))) NOTNULL) DESC  NULLS FIRST, ((0.12879556495507172)>(((rt0.c0)>(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)))*(rt0.c5 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN rt1 ON (+ (CAST(rt0.c5 AS NUMERIC))) ORDER BY ((((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c2))) NOTNULL) DESC  NULLS FIRST, ((0.12879556495507172)>(((rt0.c0)>(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN rt1 ON (+ (CAST(rt0.c5 AS NUMERIC))) WHERE (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)))*(rt0.c5 COLLATE BINARY))) ORDER BY ((((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c2))) NOTNULL) DESC  NULLS FIRST, ((0.12879556495507172)>(((rt0.c0)>(rt0.c1))))  NULLS FIRST;
SELECT * FROM rt0, t0, rt1 WHERE (CASE rt0.c6  WHEN (((rt0.c3, t0.c0, t0.c0)) NOT BETWEEN ((rt0.c6, rt1.c1, rt0.c2)) AND ((rt0.c5, rt0.c3, rt1.c1))) THEN ((rt0.c3)<<(t0.c0)) WHEN (rt0.c0 IN ()) THEN (((((((('-1646262409')AND(0.23946270253183022)))OR(rt0.c4)))OR(rt0.c6)))OR(rt0.c4)) WHEN x'' COLLATE BINARY THEN ((rt0.c5)IS(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c6  WHEN (((rt0.c3, t0.c0, t0.c0)) NOT BETWEEN ((rt0.c6, rt1.c1, rt0.c2)) AND ((rt0.c5, rt0.c3, rt1.c1))) THEN ((rt0.c3)<<(t0.c0)) WHEN (rt0.c0 IN ()) THEN (((((((('-1646262409')AND(0.23946270253183022)))OR(rt0.c4)))OR(rt0.c6)))OR(rt0.c4)) WHEN x'' COLLATE BINARY THEN ((rt0.c5)IS(rt1.c2)) END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (CASE rt0.c6  WHEN (((rt0.c3, t0.c0, t0.c0)) NOT BETWEEN ((rt0.c6, rt1.c1, rt0.c2)) AND ((rt0.c5, rt0.c3, rt1.c1))) THEN ((rt0.c3)<<(t0.c0)) WHEN (rt0.c0 IN ()) THEN (((((((('-1646262409')AND(0.23946270253183022)))OR(rt0.c4)))OR(rt0.c6)))OR(rt0.c4)) WHEN x'' COLLATE BINARY THEN ((rt0.c5)IS(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c6  WHEN (((rt0.c3, t0.c0, t0.c0)) NOT BETWEEN ((rt0.c6, rt1.c1, rt0.c2)) AND ((rt0.c5, rt0.c3, rt1.c1))) THEN ((rt0.c3)<<(t0.c0)) WHEN (rt0.c0 IN ()) THEN (((((((('-1646262409')AND(0.23946270253183022)))OR(rt0.c4)))OR(rt0.c6)))OR(rt0.c4)) WHEN x'' COLLATE BINARY THEN ((rt0.c5)IS(rt1.c2)) END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (CASE rt0.c6  WHEN (((rt0.c3, t0.c0, t0.c0)) NOT BETWEEN ((rt0.c6, rt1.c1, rt0.c2)) AND ((rt0.c5, rt0.c3, rt1.c1))) THEN ((rt0.c3)<<(t0.c0)) WHEN (rt0.c0 IN ()) THEN (((((((('-1646262409')AND(0.23946270253183022)))OR(rt0.c4)))OR(rt0.c6)))OR(rt0.c4)) WHEN x'' COLLATE BINARY THEN ((rt0.c5)IS(rt1.c2)) END);
SELECT ALL COUNT(*) FROM rt0, rt1 NATURAL JOIN t0 WHERE (((((((((LOWER(rt0.c2))AND(((((((((rt1.c2)AND(rt0.c5)))OR(rt1.c2)))OR(rt1.c0)))OR(rt0.c5)))))OR(((((x'c6f0')OR(rt0.c1)))AND(rt1.c2)))))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt1.c2)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((LOWER(rt0.c2))AND(((((((((rt1.c2)AND(rt0.c5)))OR(rt1.c2)))OR(rt1.c0)))OR(rt0.c5)))))OR(((((x'c6f0')OR(rt0.c1)))AND(rt1.c2)))))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt1.c2)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, rt1 NATURAL JOIN t0 WHERE (((((((((LOWER(rt0.c2))AND(((((((((rt1.c2)AND(rt0.c5)))OR(rt1.c2)))OR(rt1.c0)))OR(rt0.c5)))))OR(((((x'c6f0')OR(rt0.c1)))AND(rt1.c2)))))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt1.c2)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((LOWER(rt0.c2))AND(((((((((rt1.c2)AND(rt0.c5)))OR(rt1.c2)))OR(rt1.c0)))OR(rt0.c5)))))OR(((((x'c6f0')OR(rt0.c1)))AND(rt1.c2)))))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt1.c2)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, rt1 NATURAL JOIN t0 WHERE (((((((((LOWER(rt0.c2))AND(((((((((rt1.c2)AND(rt0.c5)))OR(rt1.c2)))OR(rt1.c0)))OR(rt0.c5)))))OR(((((x'c6f0')OR(rt0.c1)))AND(rt1.c2)))))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt1.c2)GLOB(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (0.2993452980231368) ORDER BY rt1.c2  NULLS FIRST, CASE (- (rt1.c2))  WHEN 1040829163 THEN (rt1.c1 IN ()) WHEN (rt1.c0 IN ()) THEN rt1.c2 WHEN CASE rt1.c2  WHEN '섕	v!	T娒Y' THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END THEN CAST(rt1.c0 AS REAL) ELSE CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END END;
SELECT SUM(count) FROM (SELECT ALL ((0.2993452980231368) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS FIRST, CASE (- (rt1.c2))  WHEN 1040829163 THEN (rt1.c1 IN ()) WHEN (rt1.c0 IN ()) THEN rt1.c2 WHEN CASE rt1.c2  WHEN '섕	v!	T娒Y' THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END THEN CAST(rt1.c0 AS REAL) ELSE CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END END);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.2993452980231368) ORDER BY rt1.c2  NULLS FIRST, CASE (- (rt1.c2))  WHEN 1040829163 THEN (rt1.c1 IN ()) WHEN (rt1.c0 IN ()) THEN rt1.c2 WHEN CASE rt1.c2  WHEN '섕	v!	T娒Y' THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END THEN CAST(rt1.c0 AS REAL) ELSE CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END END;
SELECT SUM(count) FROM (SELECT ALL ((0.2993452980231368) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS FIRST, CASE (- (rt1.c2))  WHEN 1040829163 THEN (rt1.c1 IN ()) WHEN (rt1.c0 IN ()) THEN rt1.c2 WHEN CASE rt1.c2  WHEN '섕	v!	T娒Y' THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END THEN CAST(rt1.c0 AS REAL) ELSE CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END END);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.2993452980231368) ORDER BY rt1.c2  NULLS FIRST, CASE (- (rt1.c2))  WHEN 1040829163 THEN (rt1.c1 IN ()) WHEN (rt1.c0 IN ()) THEN rt1.c2 WHEN CASE rt1.c2  WHEN '섕	v!	T娒Y' THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END THEN CAST(rt1.c0 AS REAL) ELSE CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END END;
SELECT * FROM rt0 INNER JOIN t0 ON 0.49943679029284127 WHERE (HEX(((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON 0.49943679029284127);
SELECT * FROM rt0 INNER JOIN t0 ON 0.49943679029284127 WHERE (HEX(((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON 0.49943679029284127);
SELECT * FROM rt0 INNER JOIN t0 ON 0.49943679029284127 WHERE (HEX(((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0))));
SELECT * FROM rt1 FULL OUTER JOIN t0 ON CAST((((rt1.c2, rt1.c2, t0.c0, rt1.c0, rt1.c0))<=((rt1.c1, x'', '-354848517', t0.c0, rt1.c0))) AS NUMERIC) WHERE (((rt1.c0 COLLATE NOCASE) NOT BETWEEN ((('') NOTNULL)) AND (UPPER(DISTINCT rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE) NOT BETWEEN ((('') NOTNULL)) AND (UPPER(DISTINCT rt1.c0)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON CAST((((rt1.c2, rt1.c2, t0.c0, rt1.c0, rt1.c0))<=((rt1.c1, x'', '-354848517', t0.c0, rt1.c0))) AS NUMERIC));
SELECT * FROM rt1 FULL OUTER JOIN t0 ON CAST((((rt1.c2, rt1.c2, t0.c0, rt1.c0, rt1.c0))<=((rt1.c1, x'', '-354848517', t0.c0, rt1.c0))) AS NUMERIC) WHERE (((rt1.c0 COLLATE NOCASE) NOT BETWEEN ((('') NOTNULL)) AND (UPPER(DISTINCT rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE) NOT BETWEEN ((('') NOTNULL)) AND (UPPER(DISTINCT rt1.c0)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON CAST((((rt1.c2, rt1.c2, t0.c0, rt1.c0, rt1.c0))<=((rt1.c1, x'', '-354848517', t0.c0, rt1.c0))) AS NUMERIC));
SELECT * FROM rt1 FULL OUTER JOIN t0 ON CAST((((rt1.c2, rt1.c2, t0.c0, rt1.c0, rt1.c0))<=((rt1.c1, x'', '-354848517', t0.c0, rt1.c0))) AS NUMERIC) WHERE (((rt1.c0 COLLATE NOCASE) NOT BETWEEN ((('') NOTNULL)) AND (UPPER(DISTINCT rt1.c0))));
SELECT * FROM rt0 WHERE (CASE ((rt0.c5) NOT NULL)  WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 COLLATE NOCASE WHEN CASE WHEN rt0.c6 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END THEN '-516874138' WHEN '7ZKkGJ*M' THEN (((rt0.c2))!=((rt0.c6))) END) ORDER BY CASE WHEN ((0.8478718431119041)<=(rt0.c6)) THEN ((rt0.c1)>=(rt0.c6)) WHEN '' THEN ((rt0.c2)+(rt0.c6)) WHEN (((rt0.c4))>=((rt0.c4))) THEN ((rt0.c4)%(0.9724323257034223)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c5) NOT NULL)  WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 COLLATE NOCASE WHEN CASE WHEN rt0.c6 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END THEN '-516874138' WHEN '7ZKkGJ*M' THEN (((rt0.c2))!=((rt0.c6))) END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((0.8478718431119041)<=(rt0.c6)) THEN ((rt0.c1)>=(rt0.c6)) WHEN '' THEN ((rt0.c2)+(rt0.c6)) WHEN (((rt0.c4))>=((rt0.c4))) THEN ((rt0.c4)%(0.9724323257034223)) END DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE ((rt0.c5) NOT NULL)  WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 COLLATE NOCASE WHEN CASE WHEN rt0.c6 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END THEN '-516874138' WHEN '7ZKkGJ*M' THEN (((rt0.c2))!=((rt0.c6))) END) ORDER BY CASE WHEN ((0.8478718431119041)<=(rt0.c6)) THEN ((rt0.c1)>=(rt0.c6)) WHEN '' THEN ((rt0.c2)+(rt0.c6)) WHEN (((rt0.c4))>=((rt0.c4))) THEN ((rt0.c4)%(0.9724323257034223)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c5) NOT NULL)  WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 COLLATE NOCASE WHEN CASE WHEN rt0.c6 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END THEN '-516874138' WHEN '7ZKkGJ*M' THEN (((rt0.c2))!=((rt0.c6))) END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((0.8478718431119041)<=(rt0.c6)) THEN ((rt0.c1)>=(rt0.c6)) WHEN '' THEN ((rt0.c2)+(rt0.c6)) WHEN (((rt0.c4))>=((rt0.c4))) THEN ((rt0.c4)%(0.9724323257034223)) END DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE ((rt0.c5) NOT NULL)  WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 COLLATE NOCASE WHEN CASE WHEN rt0.c6 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END THEN '-516874138' WHEN '7ZKkGJ*M' THEN (((rt0.c2))!=((rt0.c6))) END) ORDER BY CASE WHEN ((0.8478718431119041)<=(rt0.c6)) THEN ((rt0.c1)>=(rt0.c6)) WHEN '' THEN ((rt0.c2)+(rt0.c6)) WHEN (((rt0.c4))>=((rt0.c4))) THEN ((rt0.c4)%(0.9724323257034223)) END DESC  NULLS LAST;
SELECT * FROM rt0, rt1, t0 WHERE (((rt0.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (((rt0.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (((rt0.c2) NOTNULL));
SELECT ALL * FROM rt1, rt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (rt1.c2);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((((((((rt0.c5)>>('-1940797314')))OR(((rt0.c2) BETWEEN (1506256982) AND (rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt1.c2 END)))AND(json_array_length(rt0.c5, rt0.c2))))AND(((rt1.c2)%(rt1.c1))))) ORDER BY ((LIKELY(rt1.c1))>=(json_remove(rt0.c2, rt0.c2))) ASC  NULLS FIRST, ((((t0.c0)/(rt1.c1))) NOT BETWEEN (((rt0.c5) ISNULL)) AND (((rt0.c5) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c5)>>('-1940797314')))OR(((rt0.c2) BETWEEN (1506256982) AND (rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt1.c2 END)))AND(json_array_length(rt0.c5, rt0.c2))))AND(((rt1.c2)%(rt1.c1))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((LIKELY(rt1.c1))>=(json_remove(rt0.c2, rt0.c2))) ASC  NULLS FIRST, ((((t0.c0)/(rt1.c1))) NOT BETWEEN (((rt0.c5) ISNULL)) AND (((rt0.c5) NOT NULL)))  NULLS FIRST);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((((((((rt0.c5)>>('-1940797314')))OR(((rt0.c2) BETWEEN (1506256982) AND (rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt1.c2 END)))AND(json_array_length(rt0.c5, rt0.c2))))AND(((rt1.c2)%(rt1.c1))))) ORDER BY ((LIKELY(rt1.c1))>=(json_remove(rt0.c2, rt0.c2))) ASC  NULLS FIRST, ((((t0.c0)/(rt1.c1))) NOT BETWEEN (((rt0.c5) ISNULL)) AND (((rt0.c5) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c5)>>('-1940797314')))OR(((rt0.c2) BETWEEN (1506256982) AND (rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt1.c2 END)))AND(json_array_length(rt0.c5, rt0.c2))))AND(((rt1.c2)%(rt1.c1))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((LIKELY(rt1.c1))>=(json_remove(rt0.c2, rt0.c2))) ASC  NULLS FIRST, ((((t0.c0)/(rt1.c1))) NOT BETWEEN (((rt0.c5) ISNULL)) AND (((rt0.c5) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c6 AS REAL)) BETWEEN ((~ (rt0.c6))) AND (CASE WHEN '0.0' THEN rt0.c1 END))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c6 AS REAL)) BETWEEN ((~ (rt0.c6))) AND (CASE WHEN '0.0' THEN rt0.c1 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c0 DESC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c6 AS REAL)) BETWEEN ((~ (rt0.c6))) AND (CASE WHEN '0.0' THEN rt0.c1 END))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c6 AS REAL)) BETWEEN ((~ (rt0.c6))) AND (CASE WHEN '0.0' THEN rt0.c1 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c0 DESC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c6 AS REAL)) BETWEEN ((~ (rt0.c6))) AND (CASE WHEN '0.0' THEN rt0.c1 END))) ORDER BY rt0.c0 DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE) ORDER BY (((t0.c0 IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((t0.c0 IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE) ORDER BY (((t0.c0 IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((t0.c0 IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE) ORDER BY (((t0.c0 IN ())) NOT NULL);
SELECT ALL * FROM rt1, t0 WHERE (CAST(((rt1.c0) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) NOT NULL) AS TEXT)) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (CAST(((rt1.c0) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) NOT NULL) AS TEXT)) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (CAST(((rt1.c0) NOT NULL) AS TEXT));
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c0) BETWEEN (rt1.c0) AND (rt1.c2)) IN ())) ORDER BY CAST((((0.23102996409833232, rt1.c1, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2))) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) BETWEEN (rt1.c0) AND (rt1.c2)) IN ())) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST((((0.23102996409833232, rt1.c1, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2))) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c0) BETWEEN (rt1.c0) AND (rt1.c2)) IN ())) ORDER BY CAST((((0.23102996409833232, rt1.c1, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2))) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) BETWEEN (rt1.c0) AND (rt1.c2)) IN ())) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST((((0.23102996409833232, rt1.c1, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2))) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c0) BETWEEN (rt1.c0) AND (rt1.c2)) IN ())) ORDER BY CAST((((0.23102996409833232, rt1.c1, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2))) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM rt0 CROSS JOIN t0 ON '-66002942' FULL OUTER JOIN rt1 ON (((- (rt0.c0))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0) BETWEEN (rt0.c2) AND (x'')))) WHERE (CASE rt0.c1  WHEN ((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt0.c3) NOTNULL) END) ORDER BY TYPEOF(DISTINCT (NOT (rt1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN ((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt0.c3) NOTNULL) END) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON '-66002942' FULL OUTER JOIN rt1 ON (((- (rt0.c0))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0) BETWEEN (rt0.c2) AND (x'')))) ORDER BY TYPEOF(DISTINCT (NOT (rt1.c2))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON '-66002942' FULL OUTER JOIN rt1 ON (((- (rt0.c0))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0) BETWEEN (rt0.c2) AND (x'')))) WHERE (CASE rt0.c1  WHEN ((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt0.c3) NOTNULL) END) ORDER BY TYPEOF(DISTINCT (NOT (rt1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN ((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt0.c3) NOTNULL) END) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON '-66002942' FULL OUTER JOIN rt1 ON (((- (rt0.c0))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0) BETWEEN (rt0.c2) AND (x'')))) ORDER BY TYPEOF(DISTINCT (NOT (rt1.c2))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON '-66002942' FULL OUTER JOIN rt1 ON (((- (rt0.c0))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0) BETWEEN (rt0.c2) AND (x'')))) WHERE (CASE rt0.c1  WHEN ((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt0.c3) NOTNULL) END) ORDER BY TYPEOF(DISTINCT (NOT (rt1.c2))) ASC  NULLS LAST;
SELECT * FROM rt1 WHERE (((CAST(rt1.c1 AS INTEGER))&(TRIM(rt1.c1, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS INTEGER))&(TRIM(rt1.c1, rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CAST(rt1.c1 AS INTEGER))&(TRIM(rt1.c1, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS INTEGER))&(TRIM(rt1.c1, rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CAST(rt1.c1 AS INTEGER))&(TRIM(rt1.c1, rt1.c0))));
SELECT ALL * FROM rt1, t0 WHERE (NULL) ORDER BY ((((((((((x'')OR(rt1.c0)))AND(t0.c0)))OR(t0.c0)))AND(0.646943441421069)))OR((((rt1.c0))=((rt1.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((((((((x'')OR(rt1.c0)))AND(t0.c0)))OR(t0.c0)))AND(0.646943441421069)))OR((((rt1.c0))=((rt1.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM rt1, t0 WHERE (NULL) ORDER BY ((((((((((x'')OR(rt1.c0)))AND(t0.c0)))OR(t0.c0)))AND(0.646943441421069)))OR((((rt1.c0))=((rt1.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((((((((x'')OR(rt1.c0)))AND(t0.c0)))OR(t0.c0)))AND(0.646943441421069)))OR((((rt1.c0))=((rt1.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM rt1, t0 WHERE (NULL) ORDER BY ((((((((((x'')OR(rt1.c0)))AND(t0.c0)))OR(t0.c0)))AND(0.646943441421069)))OR((((rt1.c0))=((rt1.c1))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (~ (((rt0.c3) BETWEEN (0.9776383690878866) AND (rt0.c2)))) WHERE ((('^b') NOT BETWEEN ((rt0.c3 IN ())) AND (CASE '-1816715657'  WHEN rt1.c0 THEN rt1.c2 END))) ORDER BY (NOT (((rt0.c1)IS(rt0.c6)))) ASC, load_extension(rt1.c1 COLLATE BINARY, CAST(rt1.c0 AS INTEGER)) DESC;
SELECT SUM(count) FROM (SELECT (((('^b') NOT BETWEEN ((rt0.c3 IN ())) AND (CASE '-1816715657'  WHEN rt1.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (~ (((rt0.c3) BETWEEN (0.9776383690878866) AND (rt0.c2)))) ORDER BY (NOT (((rt0.c1)IS(rt0.c6)))) ASC, load_extension(rt1.c1 COLLATE BINARY, CAST(rt1.c0 AS INTEGER)) DESC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (~ (((rt0.c3) BETWEEN (0.9776383690878866) AND (rt0.c2)))) WHERE ((('^b') NOT BETWEEN ((rt0.c3 IN ())) AND (CASE '-1816715657'  WHEN rt1.c0 THEN rt1.c2 END))) ORDER BY (NOT (((rt0.c1)IS(rt0.c6)))) ASC, load_extension(rt1.c1 COLLATE BINARY, CAST(rt1.c0 AS INTEGER)) DESC;
SELECT SUM(count) FROM (SELECT (((('^b') NOT BETWEEN ((rt0.c3 IN ())) AND (CASE '-1816715657'  WHEN rt1.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (~ (((rt0.c3) BETWEEN (0.9776383690878866) AND (rt0.c2)))) ORDER BY (NOT (((rt0.c1)IS(rt0.c6)))) ASC, load_extension(rt1.c1 COLLATE BINARY, CAST(rt1.c0 AS INTEGER)) DESC);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) ORDER BY (NULL IN ());
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (NULL IN ()));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) ORDER BY (NULL IN ());
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (NULL IN ()));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) ORDER BY (NULL IN ());
SELECT * FROM rt0, t0, rt1 WHERE ((((rt1.c0)) BETWEEN ((IFNULL(t0.c0, t0.c0))) AND ((rt1.c0)))) ORDER BY ((((((((((rt1.c1)OR(rt0.c5)))OR(rt0.c5)))AND(rt0.c3)))OR(t0.c0)))<=(((rt0.c1)<(rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((IFNULL(t0.c0, t0.c0))) AND ((rt1.c0)))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((((((((((rt1.c1)OR(rt0.c5)))OR(rt0.c5)))AND(rt0.c3)))OR(t0.c0)))<=(((rt0.c1)<(rt0.c3)))) ASC);
SELECT * FROM rt0, t0, rt1 WHERE ((((rt1.c0)) BETWEEN ((IFNULL(t0.c0, t0.c0))) AND ((rt1.c0)))) ORDER BY ((((((((((rt1.c1)OR(rt0.c5)))OR(rt0.c5)))AND(rt0.c3)))OR(t0.c0)))<=(((rt0.c1)<(rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((IFNULL(t0.c0, t0.c0))) AND ((rt1.c0)))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((((((((((rt1.c1)OR(rt0.c5)))OR(rt0.c5)))AND(rt0.c3)))OR(t0.c0)))<=(((rt0.c1)<(rt0.c3)))) ASC);
SELECT * FROM rt0, t0, rt1 WHERE ((((rt1.c0)) BETWEEN ((IFNULL(t0.c0, t0.c0))) AND ((rt1.c0)))) ORDER BY ((((((((((rt1.c1)OR(rt0.c5)))OR(rt0.c5)))AND(rt0.c3)))OR(t0.c0)))<=(((rt0.c1)<(rt0.c3)))) ASC;
SELECT COUNT(*) FROM t0 WHERE ((((~ (1647708666)))/(CASE x''  WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((~ (1647708666)))/(CASE x''  WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((~ (1647708666)))/(CASE x''  WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((~ (1647708666)))/(CASE x''  WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((~ (1647708666)))/(CASE x''  WHEN t0.c0 THEN t0.c0 END)));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0 COLLATE BINARY)OR((((t0.c0))>((t0.c0))))))OR(((t0.c0)%(t0.c0))))) ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 COLLATE BINARY)OR((((t0.c0))>((t0.c0))))))OR(((t0.c0)%(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0 COLLATE BINARY)OR((((t0.c0))>((t0.c0))))))OR(((t0.c0)%(t0.c0))))) ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 COLLATE BINARY)OR((((t0.c0))>((t0.c0))))))OR(((t0.c0)%(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0 COLLATE BINARY)OR((((t0.c0))>((t0.c0))))))OR(((t0.c0)%(t0.c0))))) ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (t0.c0)))AND((~ (rt1.c2)))))OR(rt1.c2)) WHERE (CAST((('-720242416')>=(rt1.c1)) AS TEXT)) ORDER BY IFNULL(((((t0.c0)AND(rt1.c1)))OR(t0.c0)), ((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-720242416')>=(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (t0.c0)))AND((~ (rt1.c2)))))OR(rt1.c2)) ORDER BY IFNULL(((((t0.c0)AND(rt1.c1)))OR(t0.c0)), ((NULL) IS FALSE)));
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (t0.c0)))AND((~ (rt1.c2)))))OR(rt1.c2)) WHERE (CAST((('-720242416')>=(rt1.c1)) AS TEXT)) ORDER BY IFNULL(((((t0.c0)AND(rt1.c1)))OR(t0.c0)), ((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-720242416')>=(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (t0.c0)))AND((~ (rt1.c2)))))OR(rt1.c2)) ORDER BY IFNULL(((((t0.c0)AND(rt1.c1)))OR(t0.c0)), ((NULL) IS FALSE)));
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (t0.c0)))AND((~ (rt1.c2)))))OR(rt1.c2)) WHERE (CAST((('-720242416')>=(rt1.c1)) AS TEXT)) ORDER BY IFNULL(((((t0.c0)AND(rt1.c1)))OR(t0.c0)), ((NULL) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (JULIANDAY(rt0.c3, rt0.c0, rt0.c4) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(rt0.c3, rt0.c0, rt0.c4) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (JULIANDAY(rt0.c3, rt0.c0, rt0.c4) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(rt0.c3, rt0.c0, rt0.c4) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (JULIANDAY(rt0.c3, rt0.c0, rt0.c4) COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE (((((- (t0.c0)), ((t0.c0)&(t0.c0)), t0.c0))=((((t0.c0) NOTNULL), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY (t0.c0 IN ((t0.c0 IN (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (t0.c0)), ((t0.c0)&(t0.c0)), t0.c0))=((((t0.c0) NOTNULL), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ((t0.c0 IN (t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((- (t0.c0)), ((t0.c0)&(t0.c0)), t0.c0))=((((t0.c0) NOTNULL), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY (t0.c0 IN ((t0.c0 IN (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (t0.c0)), ((t0.c0)&(t0.c0)), t0.c0))=((((t0.c0) NOTNULL), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ((t0.c0 IN (t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((- (t0.c0)), ((t0.c0)&(t0.c0)), t0.c0))=((((t0.c0) NOTNULL), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY (t0.c0 IN ((t0.c0 IN (t0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt1, rt0 WHERE (LIKE(rt0.c3, ((((rt0.c6)OR(rt0.c2)))OR(rt0.c2)), '-'));
SELECT SUM(count) FROM (SELECT ((LIKE(rt0.c3, ((((rt0.c6)OR(rt0.c2)))OR(rt0.c2)), '-')) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (LIKE(rt0.c3, ((((rt0.c6)OR(rt0.c2)))OR(rt0.c2)), '-'));
SELECT SUM(count) FROM (SELECT ((LIKE(rt0.c3, ((((rt0.c6)OR(rt0.c2)))OR(rt0.c2)), '-')) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (LIKE(rt0.c3, ((((rt0.c6)OR(rt0.c2)))OR(rt0.c2)), '-'));
SELECT ALL * FROM t0 WHERE (((((t0.c0)IS(t0.c0)))AND(UPPER(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS(t0.c0)))AND(UPPER(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)IS(t0.c0)))AND(UPPER(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS(t0.c0)))AND(UPPER(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)IS(t0.c0)))AND(UPPER(t0.c0))));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c5 IN ()) THEN TIME(rt0.c3, rt0.c4, rt0.c5) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2) ISNULL) WHEN ((t0.c0)-(rt0.c4)) THEN (-1370555384 IN ()) END WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c6)) THEN rt0.c6 WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0)||(rt0.c1)) WHEN CAST(rt0.c3 AS REAL) THEN ((rt0.c6) NOT BETWEEN (rt0.c2) AND (0.11613982429526959)) WHEN CASE rt0.c5  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 END THEN ((t0.c0) NOT NULL) WHEN ((((rt0.c4)AND(rt0.c1)))OR(rt0.c3)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE CAST(rt0.c1 AS INTEGER) END) ORDER BY (- (rt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c6)) THEN rt0.c6 WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0)||(rt0.c1)) WHEN CAST(rt0.c3 AS REAL) THEN ((rt0.c6) NOT BETWEEN (rt0.c2) AND (0.11613982429526959)) WHEN CASE rt0.c5  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 END THEN ((t0.c0) NOT NULL) WHEN ((((rt0.c4)AND(rt0.c1)))OR(rt0.c3)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE CAST(rt0.c1 AS INTEGER) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c5 IN ()) THEN TIME(rt0.c3, rt0.c4, rt0.c5) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2) ISNULL) WHEN ((t0.c0)-(rt0.c4)) THEN (-1370555384 IN ()) END ORDER BY (- (rt0.c0)) COLLATE BINARY DESC);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c5 IN ()) THEN TIME(rt0.c3, rt0.c4, rt0.c5) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2) ISNULL) WHEN ((t0.c0)-(rt0.c4)) THEN (-1370555384 IN ()) END WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c6)) THEN rt0.c6 WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0)||(rt0.c1)) WHEN CAST(rt0.c3 AS REAL) THEN ((rt0.c6) NOT BETWEEN (rt0.c2) AND (0.11613982429526959)) WHEN CASE rt0.c5  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 END THEN ((t0.c0) NOT NULL) WHEN ((((rt0.c4)AND(rt0.c1)))OR(rt0.c3)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE CAST(rt0.c1 AS INTEGER) END) ORDER BY (- (rt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c6)) THEN rt0.c6 WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0)||(rt0.c1)) WHEN CAST(rt0.c3 AS REAL) THEN ((rt0.c6) NOT BETWEEN (rt0.c2) AND (0.11613982429526959)) WHEN CASE rt0.c5  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 END THEN ((t0.c0) NOT NULL) WHEN ((((rt0.c4)AND(rt0.c1)))OR(rt0.c3)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE CAST(rt0.c1 AS INTEGER) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c5 IN ()) THEN TIME(rt0.c3, rt0.c4, rt0.c5) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2) ISNULL) WHEN ((t0.c0)-(rt0.c4)) THEN (-1370555384 IN ()) END ORDER BY (- (rt0.c0)) COLLATE BINARY DESC);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c5 IN ()) THEN TIME(rt0.c3, rt0.c4, rt0.c5) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c2) ISNULL) WHEN ((t0.c0)-(rt0.c4)) THEN (-1370555384 IN ()) END WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c6)) THEN rt0.c6 WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0)||(rt0.c1)) WHEN CAST(rt0.c3 AS REAL) THEN ((rt0.c6) NOT BETWEEN (rt0.c2) AND (0.11613982429526959)) WHEN CASE rt0.c5  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 END THEN ((t0.c0) NOT NULL) WHEN ((((rt0.c4)AND(rt0.c1)))OR(rt0.c3)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE CAST(rt0.c1 AS INTEGER) END) ORDER BY (- (rt0.c0)) COLLATE BINARY DESC;
SELECT * FROM rt0, rt1, t0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (rt1.c1);
SELECT * FROM rt0 WHERE (CAST(0.042015654172936845 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.042015654172936845 AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(0.042015654172936845 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.042015654172936845 AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(0.042015654172936845 AS BLOB));
SELECT ALL * FROM t0, rt0 WHERE (((NULLIF(0.18789271768252735, 0.11295399706692977)) NOT BETWEEN (((rt0.c6)*(rt0.c4))) AND (((((rt0.c1)OR(rt0.c1)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(0.18789271768252735, 0.11295399706692977)) NOT BETWEEN (((rt0.c6)*(rt0.c4))) AND (((((rt0.c1)OR(rt0.c1)))AND(rt0.c4))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((NULLIF(0.18789271768252735, 0.11295399706692977)) NOT BETWEEN (((rt0.c6)*(rt0.c4))) AND (((((rt0.c1)OR(rt0.c1)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(0.18789271768252735, 0.11295399706692977)) NOT BETWEEN (((rt0.c6)*(rt0.c4))) AND (((((rt0.c1)OR(rt0.c1)))AND(rt0.c4))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((NULLIF(0.18789271768252735, 0.11295399706692977)) NOT BETWEEN (((rt0.c6)*(rt0.c4))) AND (((((rt0.c1)OR(rt0.c1)))AND(rt0.c4)))));
SELECT * FROM t0, rt0 WHERE ((~ (TYPEOF(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((~ (TYPEOF(DISTINCT rt0.c2)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((~ (TYPEOF(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((~ (TYPEOF(DISTINCT rt0.c2)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((~ (TYPEOF(DISTINCT rt0.c2))));
SELECT ALL * FROM t0, rt1, rt0 INDEXED BY i30 WHERE ((~ (CASE rt0.c2  WHEN -8.06844097E8 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt1.c1 THEN rt0.c0 ELSE 0.4091644925804572 END))) ORDER BY ((('-1952546862', rt1.c1, rt0.c6)) BETWEEN ((((x'') ISNULL), (((t0.c0)) BETWEEN ((rt0.c6)) AND ((rt0.c1))), (((rt1.c0)) BETWEEN ((t0.c0)) AND ((rt0.c5))))) AND ((rt0.c0, ((rt0.c3) NOT BETWEEN (rt1.c2) AND (0.4160428623091872)), (x'ba00' IN (rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c2  WHEN -8.06844097E8 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt1.c1 THEN rt0.c0 ELSE 0.4091644925804572 END))) IS TRUE)  as count FROM t0, rt1, rt0 INDEXED BY i30 ORDER BY ((('-1952546862', rt1.c1, rt0.c6)) BETWEEN ((((x'') ISNULL), (((t0.c0)) BETWEEN ((rt0.c6)) AND ((rt0.c1))), (((rt1.c0)) BETWEEN ((t0.c0)) AND ((rt0.c5))))) AND ((rt0.c0, ((rt0.c3) NOT BETWEEN (rt1.c2) AND (0.4160428623091872)), (x'ba00' IN (rt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM t0, rt1, rt0 INDEXED BY i30 WHERE ((~ (CASE rt0.c2  WHEN -8.06844097E8 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt1.c1 THEN rt0.c0 ELSE 0.4091644925804572 END))) ORDER BY ((('-1952546862', rt1.c1, rt0.c6)) BETWEEN ((((x'') ISNULL), (((t0.c0)) BETWEEN ((rt0.c6)) AND ((rt0.c1))), (((rt1.c0)) BETWEEN ((t0.c0)) AND ((rt0.c5))))) AND ((rt0.c0, ((rt0.c3) NOT BETWEEN (rt1.c2) AND (0.4160428623091872)), (x'ba00' IN (rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c2  WHEN -8.06844097E8 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt1.c1 THEN rt0.c0 ELSE 0.4091644925804572 END))) IS TRUE)  as count FROM t0, rt1, rt0 INDEXED BY i30 ORDER BY ((('-1952546862', rt1.c1, rt0.c6)) BETWEEN ((((x'') ISNULL), (((t0.c0)) BETWEEN ((rt0.c6)) AND ((rt0.c1))), (((rt1.c0)) BETWEEN ((t0.c0)) AND ((rt0.c5))))) AND ((rt0.c0, ((rt0.c3) NOT BETWEEN (rt1.c2) AND (0.4160428623091872)), (x'ba00' IN (rt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(((rt0.c5)>>(rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c5)>>(rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(((rt0.c5)>>(rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c5)>>(rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(((rt0.c5)>>(rt1.c2)) AS TEXT));
SELECT ALL * FROM t0 CROSS JOIN rt1 ON CASE (rt1.c0 IN ())  WHEN CAST(rt1.c0 AS REAL) THEN rt1.c2 COLLATE BINARY WHEN (rt1.c2 IN ()) THEN ((rt1.c0)||(rt1.c2)) WHEN rt1.c0 COLLATE NOCASE THEN ((t0.c0) BETWEEN (t0.c0) AND (rt1.c2)) ELSE ((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)) END WHERE (((((((((((t0.c0)AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c0))) ISNULL)) ORDER BY ((((((((((rt1.c2) BETWEEN (0xffffffff9a476593) AND (rt1.c1)))AND(((((((((((((t0.c0)OR(-3.54848517E8)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)))OR(t0.c0)))OR(rt1.c0)))))AND((~ (rt1.c0)))))AND(((t0.c0)||(rt1.c0)))))OR(0.11918408840226646)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c0))) ISNULL)) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON CASE (rt1.c0 IN ())  WHEN CAST(rt1.c0 AS REAL) THEN rt1.c2 COLLATE BINARY WHEN (rt1.c2 IN ()) THEN ((rt1.c0)||(rt1.c2)) WHEN rt1.c0 COLLATE NOCASE THEN ((t0.c0) BETWEEN (t0.c0) AND (rt1.c2)) ELSE ((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)) END ORDER BY ((((((((((rt1.c2) BETWEEN (0xffffffff9a476593) AND (rt1.c1)))AND(((((((((((((t0.c0)OR(-3.54848517E8)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)))OR(t0.c0)))OR(rt1.c0)))))AND((~ (rt1.c0)))))AND(((t0.c0)||(rt1.c0)))))OR(0.11918408840226646)) ASC);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON CASE (rt1.c0 IN ())  WHEN CAST(rt1.c0 AS REAL) THEN rt1.c2 COLLATE BINARY WHEN (rt1.c2 IN ()) THEN ((rt1.c0)||(rt1.c2)) WHEN rt1.c0 COLLATE NOCASE THEN ((t0.c0) BETWEEN (t0.c0) AND (rt1.c2)) ELSE ((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)) END WHERE (((((((((((t0.c0)AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c0))) ISNULL)) ORDER BY ((((((((((rt1.c2) BETWEEN (0xffffffff9a476593) AND (rt1.c1)))AND(((((((((((((t0.c0)OR(-3.54848517E8)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)))OR(t0.c0)))OR(rt1.c0)))))AND((~ (rt1.c0)))))AND(((t0.c0)||(rt1.c0)))))OR(0.11918408840226646)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c0))) ISNULL)) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON CASE (rt1.c0 IN ())  WHEN CAST(rt1.c0 AS REAL) THEN rt1.c2 COLLATE BINARY WHEN (rt1.c2 IN ()) THEN ((rt1.c0)||(rt1.c2)) WHEN rt1.c0 COLLATE NOCASE THEN ((t0.c0) BETWEEN (t0.c0) AND (rt1.c2)) ELSE ((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)) END ORDER BY ((((((((((rt1.c2) BETWEEN (0xffffffff9a476593) AND (rt1.c1)))AND(((((((((((((t0.c0)OR(-3.54848517E8)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)))OR(t0.c0)))OR(rt1.c0)))))AND((~ (rt1.c0)))))AND(((t0.c0)||(rt1.c0)))))OR(0.11918408840226646)) ASC);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON CASE (rt1.c0 IN ())  WHEN CAST(rt1.c0 AS REAL) THEN rt1.c2 COLLATE BINARY WHEN (rt1.c2 IN ()) THEN ((rt1.c0)||(rt1.c2)) WHEN rt1.c0 COLLATE NOCASE THEN ((t0.c0) BETWEEN (t0.c0) AND (rt1.c2)) ELSE ((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)) END WHERE (((((((((((t0.c0)AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c0))) ISNULL)) ORDER BY ((((((((((rt1.c2) BETWEEN (0xffffffff9a476593) AND (rt1.c1)))AND(((((((((((((t0.c0)OR(-3.54848517E8)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)))OR(t0.c0)))OR(rt1.c0)))))AND((~ (rt1.c0)))))AND(((t0.c0)||(rt1.c0)))))OR(0.11918408840226646)) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CAST(t0.c0 AS BLOB)) IS FALSE)) ORDER BY '1879607722';
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY '1879607722');
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CAST(t0.c0 AS BLOB)) IS FALSE)) ORDER BY '1879607722';
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY '1879607722');
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CAST(t0.c0 AS BLOB)) IS FALSE)) ORDER BY '1879607722';
SELECT COUNT(*) FROM rt0 WHERE (HEX(DISTINCT ((rt0.c4) IS TRUE))) ORDER BY ((((rt0.c1)<<(rt0.c6))) NOT BETWEEN (((((rt0.c2)OR(rt0.c4)))OR(rt0.c5))) AND (((rt0.c5) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((rt0.c4) IS TRUE))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<<(rt0.c6))) NOT BETWEEN (((((rt0.c2)OR(rt0.c4)))OR(rt0.c5))) AND (((rt0.c5) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (HEX(DISTINCT ((rt0.c4) IS TRUE))) ORDER BY ((((rt0.c1)<<(rt0.c6))) NOT BETWEEN (((((rt0.c2)OR(rt0.c4)))OR(rt0.c5))) AND (((rt0.c5) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((rt0.c4) IS TRUE))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<<(rt0.c6))) NOT BETWEEN (((((rt0.c2)OR(rt0.c4)))OR(rt0.c5))) AND (((rt0.c5) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (HEX(DISTINCT ((rt0.c4) IS TRUE))) ORDER BY ((((rt0.c1)<<(rt0.c6))) NOT BETWEEN (((((rt0.c2)OR(rt0.c4)))OR(rt0.c5))) AND (((rt0.c5) NOTNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((((((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c5)))AND((((rt0.c2, rt0.c1, rt1.c1, rt0.c3, rt0.c4))<=((rt0.c1, rt0.c4, rt1.c1, NULL, rt0.c4))))))AND(rt0.c3 COLLATE RTRIM)))OR(((((rt0.c1)OR(rt1.c1)))OR(rt1.c0)))))OR(0.8182797161823657 COLLATE RTRIM)) WHERE (IFNULL(rt0.c1 COLLATE RTRIM, (+ (rt0.c6)))) ORDER BY ((((rt0.c2)>(rt1.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c1 COLLATE RTRIM, (+ (rt0.c6)))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((((((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c5)))AND((((rt0.c2, rt0.c1, rt1.c1, rt0.c3, rt0.c4))<=((rt0.c1, rt0.c4, rt1.c1, NULL, rt0.c4))))))AND(rt0.c3 COLLATE RTRIM)))OR(((((rt0.c1)OR(rt1.c1)))OR(rt1.c0)))))OR(0.8182797161823657 COLLATE RTRIM)) ORDER BY ((((rt0.c2)>(rt1.c0))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((((((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c5)))AND((((rt0.c2, rt0.c1, rt1.c1, rt0.c3, rt0.c4))<=((rt0.c1, rt0.c4, rt1.c1, NULL, rt0.c4))))))AND(rt0.c3 COLLATE RTRIM)))OR(((((rt0.c1)OR(rt1.c1)))OR(rt1.c0)))))OR(0.8182797161823657 COLLATE RTRIM)) WHERE (IFNULL(rt0.c1 COLLATE RTRIM, (+ (rt0.c6)))) ORDER BY ((((rt0.c2)>(rt1.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c1 COLLATE RTRIM, (+ (rt0.c6)))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((((((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c5)))AND((((rt0.c2, rt0.c1, rt1.c1, rt0.c3, rt0.c4))<=((rt0.c1, rt0.c4, rt1.c1, NULL, rt0.c4))))))AND(rt0.c3 COLLATE RTRIM)))OR(((((rt0.c1)OR(rt1.c1)))OR(rt1.c0)))))OR(0.8182797161823657 COLLATE RTRIM)) ORDER BY ((((rt0.c2)>(rt1.c0))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((((((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c5)))AND((((rt0.c2, rt0.c1, rt1.c1, rt0.c3, rt0.c4))<=((rt0.c1, rt0.c4, rt1.c1, NULL, rt0.c4))))))AND(rt0.c3 COLLATE RTRIM)))OR(((((rt0.c1)OR(rt1.c1)))OR(rt1.c0)))))OR(0.8182797161823657 COLLATE RTRIM)) WHERE (IFNULL(rt0.c1 COLLATE RTRIM, (+ (rt0.c6)))) ORDER BY ((((rt0.c2)>(rt1.c0))) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((rt0.c1 IN ()) IN ((((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN ((((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c2)))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((rt0.c1 IN ()) IN ((((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN ((((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c2)))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((rt0.c1 IN ()) IN ((((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c2))))));
SELECT * FROM t0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (rt1.c2);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c3)AND(rt0.c1)))OR(NULL)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)))AND(x''))) NOT NULL)) ORDER BY CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c5))) THEN CASE rt0.c6  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END END DESC  NULLS LAST, NULLIF(DISTINCT (+ (rt0.c0)), CAST(rt0.c4 AS INTEGER)) DESC  NULLS FIRST, (((rt0.c5 IN ())) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c3)AND(rt0.c1)))OR(NULL)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)))AND(x''))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c5))) THEN CASE rt0.c6  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END END DESC  NULLS LAST, NULLIF(DISTINCT (+ (rt0.c0)), CAST(rt0.c4 AS INTEGER)) DESC  NULLS FIRST, (((rt0.c5 IN ())) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c3)AND(rt0.c1)))OR(NULL)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)))AND(x''))) NOT NULL)) ORDER BY CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c5))) THEN CASE rt0.c6  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END END DESC  NULLS LAST, NULLIF(DISTINCT (+ (rt0.c0)), CAST(rt0.c4 AS INTEGER)) DESC  NULLS FIRST, (((rt0.c5 IN ())) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c3)AND(rt0.c1)))OR(NULL)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)))AND(x''))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c5))) THEN CASE rt0.c6  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END END DESC  NULLS LAST, NULLIF(DISTINCT (+ (rt0.c0)), CAST(rt0.c4 AS INTEGER)) DESC  NULLS FIRST, (((rt0.c5 IN ())) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c3)AND(rt0.c1)))OR(NULL)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)))AND(x''))) NOT NULL)) ORDER BY CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c5))) THEN CASE rt0.c6  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END END DESC  NULLS LAST, NULLIF(DISTINCT (+ (rt0.c0)), CAST(rt0.c4 AS INTEGER)) DESC  NULLS FIRST, (((rt0.c5 IN ())) NOTNULL) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN (t0.c0 COLLATE RTRIM) AND (CAST('' AS TEXT)))) ORDER BY ((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) BETWEEN (t0.c0 COLLATE RTRIM) AND (CAST('' AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY ((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE);
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN (t0.c0 COLLATE RTRIM) AND (CAST('' AS TEXT)))) ORDER BY ((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) BETWEEN (t0.c0 COLLATE RTRIM) AND (CAST('' AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY ((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE);
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN (t0.c0 COLLATE RTRIM) AND (CAST('' AS TEXT)))) ORDER BY ((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE;
SELECT ALL * FROM rt0, t0 WHERE (CAST(rt0.c2 AS REAL)) ORDER BY (rt0.c4 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (rt0.c4 COLLATE RTRIM IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (CAST(rt0.c2 AS REAL)) ORDER BY (rt0.c4 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (rt0.c4 COLLATE RTRIM IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (CAST(rt0.c2 AS REAL)) ORDER BY (rt0.c4 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)IS(((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY)IS(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)IS(((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY)IS(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)IS(((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT COUNT(*) FROM t0, rt0 WHERE (SUBSTR(rt0.c0, rt0.c1) COLLATE BINARY) ORDER BY ((~ (t0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SUBSTR(rt0.c0, rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY ((~ (t0.c0)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (SUBSTR(rt0.c0, rt0.c1) COLLATE BINARY) ORDER BY ((~ (t0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SUBSTR(rt0.c0, rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY ((~ (t0.c0)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (SUBSTR(rt0.c0, rt0.c1) COLLATE BINARY) ORDER BY ((~ (t0.c0)) IN ()) ASC  NULLS FIRST;
SELECT * FROM rt0, t0, rt1 WHERE ((((CAST(rt0.c2 AS REAL)))==((t0.c0 COLLATE BINARY)))) ORDER BY (((- (rt0.c3)))OR(t0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS REAL)))==((t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (((- (rt0.c3)))OR(t0.c0)));
SELECT * FROM rt0, t0, rt1 WHERE ((((CAST(rt0.c2 AS REAL)))==((t0.c0 COLLATE BINARY)))) ORDER BY (((- (rt0.c3)))OR(t0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS REAL)))==((t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (((- (rt0.c3)))OR(t0.c0)));
SELECT * FROM rt0, t0, rt1 WHERE ((((CAST(rt0.c2 AS REAL)))==((t0.c0 COLLATE BINARY)))) ORDER BY (((- (rt0.c3)))OR(t0.c0));
SELECT * FROM t0, rt0, rt1 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE (CHANGES());
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND('')))AND(rt0.c6)) THEN (- (rt0.c1)) WHEN ((rt0.c1)+(rt0.c0)) THEN '75046720' WHEN (~ (x'c21d')) THEN (- (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)AND('')))AND(rt0.c6)) THEN (- (rt0.c1)) WHEN ((rt0.c1)+(rt0.c0)) THEN '75046720' WHEN (~ (x'c21d')) THEN (- (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND('')))AND(rt0.c6)) THEN (- (rt0.c1)) WHEN ((rt0.c1)+(rt0.c0)) THEN '75046720' WHEN (~ (x'c21d')) THEN (- (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)AND('')))AND(rt0.c6)) THEN (- (rt0.c1)) WHEN ((rt0.c1)+(rt0.c0)) THEN '75046720' WHEN (~ (x'c21d')) THEN (- (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND('')))AND(rt0.c6)) THEN (- (rt0.c1)) WHEN ((rt0.c1)+(rt0.c0)) THEN '75046720' WHEN (~ (x'c21d')) THEN (- (rt0.c1)) END);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (NULLIF(rt1.c1, t0.c0) COLLATE NOCASE) ORDER BY CASE WHEN CAST(t0.c0 AS NUMERIC) THEN load_extension(rt0.c1, rt1.c0) WHEN ((((rt0.c6)OR(t0.c0)))OR(t0.c0)) THEN ((rt0.c6)<<(rt1.c0)) WHEN ((rt1.c1) NOT BETWEEN (rt0.c6) AND (rt1.c0)) THEN ((((rt0.c2)OR(rt1.c1)))OR(rt0.c5)) END DESC, ((NULL) NOTNULL);
SELECT SUM(count) FROM (SELECT ((NULLIF(rt1.c1, t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY CASE WHEN CAST(t0.c0 AS NUMERIC) THEN load_extension(rt0.c1, rt1.c0) WHEN ((((rt0.c6)OR(t0.c0)))OR(t0.c0)) THEN ((rt0.c6)<<(rt1.c0)) WHEN ((rt1.c1) NOT BETWEEN (rt0.c6) AND (rt1.c0)) THEN ((((rt0.c2)OR(rt1.c1)))OR(rt0.c5)) END DESC, ((NULL) NOTNULL));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (NULLIF(rt1.c1, t0.c0) COLLATE NOCASE) ORDER BY CASE WHEN CAST(t0.c0 AS NUMERIC) THEN load_extension(rt0.c1, rt1.c0) WHEN ((((rt0.c6)OR(t0.c0)))OR(t0.c0)) THEN ((rt0.c6)<<(rt1.c0)) WHEN ((rt1.c1) NOT BETWEEN (rt0.c6) AND (rt1.c0)) THEN ((((rt0.c2)OR(rt1.c1)))OR(rt0.c5)) END DESC, ((NULL) NOTNULL);
SELECT SUM(count) FROM (SELECT ((NULLIF(rt1.c1, t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY CASE WHEN CAST(t0.c0 AS NUMERIC) THEN load_extension(rt0.c1, rt1.c0) WHEN ((((rt0.c6)OR(t0.c0)))OR(t0.c0)) THEN ((rt0.c6)<<(rt1.c0)) WHEN ((rt1.c1) NOT BETWEEN (rt0.c6) AND (rt1.c0)) THEN ((((rt0.c2)OR(rt1.c1)))OR(rt0.c5)) END DESC, ((NULL) NOTNULL));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (NULLIF(rt1.c1, t0.c0) COLLATE NOCASE) ORDER BY CASE WHEN CAST(t0.c0 AS NUMERIC) THEN load_extension(rt0.c1, rt1.c0) WHEN ((((rt0.c6)OR(t0.c0)))OR(t0.c0)) THEN ((rt0.c6)<<(rt1.c0)) WHEN ((rt1.c1) NOT BETWEEN (rt0.c6) AND (rt1.c0)) THEN ((((rt0.c2)OR(rt1.c1)))OR(rt0.c5)) END DESC, ((NULL) NOTNULL);
SELECT * FROM t0, rt0, rt1 WHERE ((((NOT (rt1.c2)))OR(((((((((t0.c0)AND(rt1.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(rt1.c1))))) ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c5)&(rt0.c2)))) AND (((rt1.c2 IN ())))) ASC, (((rt1.c0)) BETWEEN ((((rt0.c4)>=(rt0.c0)))) AND (((((rt0.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c5)))))), ((((((rt0.c5)AND(rt1.c0)))OR(rt1.c2))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND ((((rt0.c0, t0.c0, rt0.c0, '-1370555384', rt1.c1))==((rt1.c1, rt0.c5, rt0.c3, rt1.c2, rt1.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2)))OR(((((((((t0.c0)AND(rt1.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(rt1.c1))))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c5)&(rt0.c2)))) AND (((rt1.c2 IN ())))) ASC, (((rt1.c0)) BETWEEN ((((rt0.c4)>=(rt0.c0)))) AND (((((rt0.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c5)))))), ((((((rt0.c5)AND(rt1.c0)))OR(rt1.c2))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND ((((rt0.c0, t0.c0, rt0.c0, '-1370555384', rt1.c1))==((rt1.c1, rt0.c5, rt0.c3, rt1.c2, rt1.c2))))) ASC  NULLS FIRST);
SELECT * FROM t0, rt0, rt1 WHERE ((((NOT (rt1.c2)))OR(((((((((t0.c0)AND(rt1.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(rt1.c1))))) ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c5)&(rt0.c2)))) AND (((rt1.c2 IN ())))) ASC, (((rt1.c0)) BETWEEN ((((rt0.c4)>=(rt0.c0)))) AND (((((rt0.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c5)))))), ((((((rt0.c5)AND(rt1.c0)))OR(rt1.c2))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND ((((rt0.c0, t0.c0, rt0.c0, '-1370555384', rt1.c1))==((rt1.c1, rt0.c5, rt0.c3, rt1.c2, rt1.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2)))OR(((((((((t0.c0)AND(rt1.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(rt1.c1))))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c5)&(rt0.c2)))) AND (((rt1.c2 IN ())))) ASC, (((rt1.c0)) BETWEEN ((((rt0.c4)>=(rt0.c0)))) AND (((((rt0.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c5)))))), ((((((rt0.c5)AND(rt1.c0)))OR(rt1.c2))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND ((((rt0.c0, t0.c0, rt0.c0, '-1370555384', rt1.c1))==((rt1.c1, rt0.c5, rt0.c3, rt1.c2, rt1.c2))))) ASC  NULLS FIRST);
SELECT * FROM t0, rt0, rt1 WHERE ((((NOT (rt1.c2)))OR(((((((((t0.c0)AND(rt1.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(rt1.c1))))) ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c5)&(rt0.c2)))) AND (((rt1.c2 IN ())))) ASC, (((rt1.c0)) BETWEEN ((((rt0.c4)>=(rt0.c0)))) AND (((((rt0.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c5)))))), ((((((rt0.c5)AND(rt1.c0)))OR(rt1.c2))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND ((((rt0.c0, t0.c0, rt0.c0, '-1370555384', rt1.c1))==((rt1.c1, rt0.c5, rt0.c3, rt1.c2, rt1.c2))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (((((CASE WHEN rt1.c0 THEN rt0.c5 ELSE rt0.c2 END)OR(rt1.c0)))AND(((rt0.c6) IS TRUE)))) ORDER BY (('-1232624443') NOT BETWEEN (((0.25566306872666666)>(rt0.c2))) AND (rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt1.c0 THEN rt0.c5 ELSE rt0.c2 END)OR(rt1.c0)))AND(((rt0.c6) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (('-1232624443') NOT BETWEEN (((0.25566306872666666)>(rt0.c2))) AND (rt0.c1)));
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (((((CASE WHEN rt1.c0 THEN rt0.c5 ELSE rt0.c2 END)OR(rt1.c0)))AND(((rt0.c6) IS TRUE)))) ORDER BY (('-1232624443') NOT BETWEEN (((0.25566306872666666)>(rt0.c2))) AND (rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt1.c0 THEN rt0.c5 ELSE rt0.c2 END)OR(rt1.c0)))AND(((rt0.c6) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (('-1232624443') NOT BETWEEN (((0.25566306872666666)>(rt0.c2))) AND (rt0.c1)));
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (((((CASE WHEN rt1.c0 THEN rt0.c5 ELSE rt0.c2 END)OR(rt1.c0)))AND(((rt0.c6) IS TRUE)))) ORDER BY (('-1232624443') NOT BETWEEN (((0.25566306872666666)>(rt0.c2))) AND (rt0.c1));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (t0.c0) AND (rt0.c5)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (t0.c0) AND (rt0.c5))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (t0.c0) AND (rt0.c5)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (t0.c0) AND (rt0.c5))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (t0.c0) AND (rt0.c5)));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ((~ (rt1.c2)));
SELECT SUM(count) FROM (SELECT (((~ (rt1.c2))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ((~ (rt1.c2)));
SELECT SUM(count) FROM (SELECT (((~ (rt1.c2))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ((~ (rt1.c2)));
SELECT * FROM rt0, t0, rt1 WHERE (LTRIM(((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) ORDER BY ((((rt0.c1)IS NOT(rt0.c5))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((((rt0.c1)IS NOT(rt0.c5))) NOTNULL) DESC  NULLS LAST);
SELECT * FROM rt0, t0, rt1 WHERE (LTRIM(((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) ORDER BY ((((rt0.c1)IS NOT(rt0.c5))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((((rt0.c1)IS NOT(rt0.c5))) NOTNULL) DESC  NULLS LAST);
SELECT * FROM rt0, t0, rt1 WHERE (LTRIM(((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) ORDER BY ((((rt0.c1)IS NOT(rt0.c5))) NOTNULL) DESC  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE (((((((rt0.c4)<=(rt1.c1)))OR('2119842530')))AND(CAST(rt1.c2 AS TEXT)))) ORDER BY ((~ (rt0.c4)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)<=(rt1.c1)))OR('2119842530')))AND(CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((~ (rt0.c4)) IN ())  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (((((((rt0.c4)<=(rt1.c1)))OR('2119842530')))AND(CAST(rt1.c2 AS TEXT)))) ORDER BY ((~ (rt0.c4)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)<=(rt1.c1)))OR('2119842530')))AND(CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((~ (rt0.c4)) IN ())  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (((((((rt0.c4)<=(rt1.c1)))OR('2119842530')))AND(CAST(rt1.c2 AS TEXT)))) ORDER BY ((~ (rt0.c4)) IN ())  NULLS LAST;
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON CAST((rt0.c4 IN (rt1.c1)) AS REAL) INNER JOIN t0 ON ((((((((((rt1.c2) IS FALSE))AND(('&' IN (rt1.c2)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((t0.c0) NOT NULL))))OR((((rt0.c5, '-1199296789', rt0.c3, t0.c0, rt0.c0))>((rt0.c1, rt0.c4, '0.3731514920365776', rt0.c4, rt0.c3))))) WHERE (CAST(0.8984117083433467 AS NUMERIC)) ORDER BY TRIM(-1689730658, (((t0.c0))<=((rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0.8984117083433467 AS NUMERIC)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CAST((rt0.c4 IN (rt1.c1)) AS REAL) INNER JOIN t0 ON ((((((((((rt1.c2) IS FALSE))AND(('&' IN (rt1.c2)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((t0.c0) NOT NULL))))OR((((rt0.c5, '-1199296789', rt0.c3, t0.c0, rt0.c0))>((rt0.c1, rt0.c4, '0.3731514920365776', rt0.c4, rt0.c3))))) ORDER BY TRIM(-1689730658, (((t0.c0))<=((rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON CAST((rt0.c4 IN (rt1.c1)) AS REAL) INNER JOIN t0 ON ((((((((((rt1.c2) IS FALSE))AND(('&' IN (rt1.c2)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((t0.c0) NOT NULL))))OR((((rt0.c5, '-1199296789', rt0.c3, t0.c0, rt0.c0))>((rt0.c1, rt0.c4, '0.3731514920365776', rt0.c4, rt0.c3))))) WHERE (CAST(0.8984117083433467 AS NUMERIC)) ORDER BY TRIM(-1689730658, (((t0.c0))<=((rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0.8984117083433467 AS NUMERIC)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CAST((rt0.c4 IN (rt1.c1)) AS REAL) INNER JOIN t0 ON ((((((((((rt1.c2) IS FALSE))AND(('&' IN (rt1.c2)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((t0.c0) NOT NULL))))OR((((rt0.c5, '-1199296789', rt0.c3, t0.c0, rt0.c0))>((rt0.c1, rt0.c4, '0.3731514920365776', rt0.c4, rt0.c3))))) ORDER BY TRIM(-1689730658, (((t0.c0))<=((rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON CAST((rt0.c4 IN (rt1.c1)) AS REAL) INNER JOIN t0 ON ((((((((((rt1.c2) IS FALSE))AND(('&' IN (rt1.c2)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((t0.c0) NOT NULL))))OR((((rt0.c5, '-1199296789', rt0.c3, t0.c0, rt0.c0))>((rt0.c1, rt0.c4, '0.3731514920365776', rt0.c4, rt0.c3))))) WHERE (CAST(0.8984117083433467 AS NUMERIC)) ORDER BY TRIM(-1689730658, (((t0.c0))<=((rt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM rt0, rt1, t0 WHERE (((rt0.c2)-(rt0.c1)) COLLATE RTRIM) ORDER BY ((((rt0.c1)AND(rt0.c1)))OR(rt0.c5)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)-(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((rt0.c1)AND(rt0.c1)))OR(rt0.c5)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM rt0, rt1, t0 WHERE (((rt0.c2)-(rt0.c1)) COLLATE RTRIM) ORDER BY ((((rt0.c1)AND(rt0.c1)))OR(rt0.c5)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)-(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((rt0.c1)AND(rt0.c1)))OR(rt0.c5)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM rt0, rt1, t0 WHERE (((rt0.c2)-(rt0.c1)) COLLATE RTRIM) ORDER BY ((((rt0.c1)AND(rt0.c1)))OR(rt0.c5)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, t0 WHERE (((rt1.c0)>>(rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c0)>>(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (((rt1.c0)>>(rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c0)>>(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (((rt1.c0)>>(rt1.c1)) COLLATE RTRIM);
SELECT * FROM t0, rt0 INDEXED BY i30, rt1 WHERE ((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN x'a8cc' WHEN t0.c0 THEN rt0.c4 ELSE rt1.c1 END))>=((CAST(rt0.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN x'a8cc' WHEN t0.c0 THEN rt0.c4 ELSE rt1.c1 END))>=((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM t0, rt0 INDEXED BY i30, rt1);
SELECT * FROM t0, rt0 INDEXED BY i30, rt1 WHERE ((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN x'a8cc' WHEN t0.c0 THEN rt0.c4 ELSE rt1.c1 END))>=((CAST(rt0.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN x'a8cc' WHEN t0.c0 THEN rt0.c4 ELSE rt1.c1 END))>=((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM t0, rt0 INDEXED BY i30, rt1);
SELECT * FROM rt0 WHERE ((+ (CAST(-1913536731 AS NUMERIC)))) ORDER BY ((((rt0.c0)*(rt0.c2)))<=(((((((((rt0.c1)AND(rt0.c5)))OR(rt0.c6)))AND(rt0.c3)))AND(rt0.c6)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(-1913536731 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)*(rt0.c2)))<=(((((((((rt0.c1)AND(rt0.c5)))OR(rt0.c6)))AND(rt0.c3)))AND(rt0.c6)))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((+ (CAST(-1913536731 AS NUMERIC)))) ORDER BY ((((rt0.c0)*(rt0.c2)))<=(((((((((rt0.c1)AND(rt0.c5)))OR(rt0.c6)))AND(rt0.c3)))AND(rt0.c6)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(-1913536731 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)*(rt0.c2)))<=(((((((((rt0.c1)AND(rt0.c5)))OR(rt0.c6)))AND(rt0.c3)))AND(rt0.c6)))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((+ (CAST(-1913536731 AS NUMERIC)))) ORDER BY ((((rt0.c0)*(rt0.c2)))<=(((((((((rt0.c1)AND(rt0.c5)))OR(rt0.c6)))AND(rt0.c3)))AND(rt0.c6)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (~ (((((rt0.c0)AND(rt0.c5)))AND(rt0.c3)))) DESC  NULLS LAST, rt0.c5  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (~ (((((rt0.c0)AND(rt0.c5)))AND(rt0.c3)))) DESC  NULLS LAST, rt0.c5  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (~ (((((rt0.c0)AND(rt0.c5)))AND(rt0.c3)))) DESC  NULLS LAST, rt0.c5  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (~ (((((rt0.c0)AND(rt0.c5)))AND(rt0.c3)))) DESC  NULLS LAST, rt0.c5  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (~ (((((rt0.c0)AND(rt0.c5)))AND(rt0.c3)))) DESC  NULLS LAST, rt0.c5  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED WHERE (((((x'')LIKE('1951631052')))/((rt0.c5 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')LIKE('1951631052')))/((rt0.c5 IN ())))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED WHERE (((((x'')LIKE('1951631052')))/((rt0.c5 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')LIKE('1951631052')))/((rt0.c5 IN ())))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED WHERE (((((x'')LIKE('1951631052')))/((rt0.c5 IN ()))));
SELECT * FROM rt0, t0 WHERE (-1952546862);
SELECT SUM(count) FROM (SELECT ALL ((-1952546862) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (-1952546862);
SELECT SUM(count) FROM (SELECT ALL ((-1952546862) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (-1952546862);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3) NOT BETWEEN (rt0.c6) AND (rt0.c5)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c3) NOT BETWEEN (rt0.c6) AND (rt0.c5)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3) NOT BETWEEN (rt0.c6) AND (rt0.c5)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c3) NOT BETWEEN (rt0.c6) AND (rt0.c5)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3) NOT BETWEEN (rt0.c6) AND (rt0.c5)) IN ()));
SELECT ALL * FROM rt0, rt1 WHERE ((+ ((rt0.c5 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c5 IN ())))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((+ ((rt0.c5 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c5 IN ())))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((+ ((rt0.c5 IN ()))));
SELECT * FROM t0, rt1 WHERE (((((((((((rt1.c1)OR(rt1.c1)))AND(t0.c0)))AND(rt1.c2)))AND(rt1.c2)))IS(((']KNh,D\')<>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c1)OR(rt1.c1)))AND(t0.c0)))AND(rt1.c2)))AND(rt1.c2)))IS(((']KNh,D\')!=(rt1.c1))))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((((((((((rt1.c1)OR(rt1.c1)))AND(t0.c0)))AND(rt1.c2)))AND(rt1.c2)))IS(((']KNh,D\')<>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c1)OR(rt1.c1)))AND(t0.c0)))AND(rt1.c2)))AND(rt1.c2)))IS(((']KNh,D\')!=(rt1.c1))))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((((((((((rt1.c1)OR(rt1.c1)))AND(t0.c0)))AND(rt1.c2)))AND(rt1.c2)))IS(((']KNh,D\')<>(rt1.c1)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CASE WHEN 'J' THEN t0.c0 COLLATE RTRIM ELSE ((rt0.c4)LIKE(rt0.c5)) END WHERE (((rt0.c0 COLLATE BINARY)>=((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY)>=((rt0.c0 IN ())))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CASE WHEN 'J' THEN t0.c0 COLLATE RTRIM ELSE ((rt0.c4)LIKE(rt0.c5)) END);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CASE WHEN 'J' THEN t0.c0 COLLATE RTRIM ELSE ((rt0.c4)LIKE(rt0.c5)) END WHERE (((rt0.c0 COLLATE BINARY)>=((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY)>=((rt0.c0 IN ())))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CASE WHEN 'J' THEN t0.c0 COLLATE RTRIM ELSE ((rt0.c4)LIKE(rt0.c5)) END);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CASE WHEN 'J' THEN t0.c0 COLLATE RTRIM ELSE ((rt0.c4)LIKE(rt0.c5)) END WHERE (((rt0.c0 COLLATE BINARY)>=((rt0.c0 IN ()))));
SELECT * FROM t0 WHERE (CHAR((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CHAR((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST);
SELECT * FROM t0 WHERE (CHAR((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CHAR((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST);
SELECT * FROM t0 WHERE (CHAR((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ('-806844097' COLLATE BINARY) ORDER BY (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))>=((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (('-806844097' COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))>=((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END))));
SELECT COUNT(*) FROM rt1 WHERE ('-806844097' COLLATE BINARY) ORDER BY (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))>=((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (('-806844097' COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))>=((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END))));
SELECT COUNT(*) FROM rt1 WHERE ('-806844097' COLLATE BINARY) ORDER BY (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))>=((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN rt1 ON '-1114340803' WHERE ((((rt0.c5, rt1.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, ((rt0.c5) IS FALSE), ((rt0.c0)<(rt0.c5)))) AND ((((rt1.c2)GLOB(rt0.c5)), ((rt0.c0) NOT NULL), (- (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5, rt1.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, ((rt0.c5) IS FALSE), ((rt0.c0)<(rt0.c5)))) AND ((((rt1.c2)GLOB(rt0.c5)), ((rt0.c0) NOT NULL), (- (rt0.c1)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN rt1 ON '-1114340803');
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN rt1 ON '-1114340803' WHERE ((((rt0.c5, rt1.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, ((rt0.c5) IS FALSE), ((rt0.c0)<(rt0.c5)))) AND ((((rt1.c2)GLOB(rt0.c5)), ((rt0.c0) NOT NULL), (- (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5, rt1.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, ((rt0.c5) IS FALSE), ((rt0.c0)<(rt0.c5)))) AND ((((rt1.c2)GLOB(rt0.c5)), ((rt0.c0) NOT NULL), (- (rt0.c1)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN rt1 ON '-1114340803');
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN rt1 ON '-1114340803' WHERE ((((rt0.c5, rt1.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, ((rt0.c5) IS FALSE), ((rt0.c0)<(rt0.c5)))) AND ((((rt1.c2)GLOB(rt0.c5)), ((rt0.c0) NOT NULL), (- (rt0.c1))))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ ('1705583616')));
SELECT SUM(count) FROM (SELECT ALL (((+ ('1705583616'))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ ('1705583616')));
SELECT SUM(count) FROM (SELECT ALL (((+ ('1705583616'))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ ('1705583616')));
SELECT ALL * FROM rt0, rt1 WHERE (TYPEOF(DISTINCT (rt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (rt1.c2 IN ()))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (TYPEOF(DISTINCT (rt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (rt1.c2 IN ()))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (TYPEOF(DISTINCT (rt1.c2 IN ())));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c1)>=(rt1.c0))))>=(((+ (rt1.c1)))))) ORDER BY rt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)>=(rt1.c0))))>=(((+ (rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c1)>=(rt1.c0))))>=(((+ (rt1.c1)))))) ORDER BY rt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)>=(rt1.c0))))>=(((+ (rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c1)>=(rt1.c0))))>=(((+ (rt1.c1)))))) ORDER BY rt1.c1  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (0.48676838804995004);
SELECT SUM(count) FROM (SELECT ALL ((0.48676838804995004) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (0.48676838804995004);
SELECT SUM(count) FROM (SELECT ALL ((0.48676838804995004) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (0.48676838804995004);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) ISNULL))AND(t0.c0 COLLATE RTRIM)))OR(((t0.c0)>(t0.c0))))) ORDER BY (- (((t0.c0)+(NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) ISNULL))AND(t0.c0 COLLATE RTRIM)))OR(((t0.c0)>(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c0)+(NULL)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) ISNULL))AND(t0.c0 COLLATE RTRIM)))OR(((t0.c0)>(t0.c0))))) ORDER BY (- (((t0.c0)+(NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) ISNULL))AND(t0.c0 COLLATE RTRIM)))OR(((t0.c0)>(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c0)+(NULL)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) ISNULL))AND(t0.c0 COLLATE RTRIM)))OR(((t0.c0)>(t0.c0))))) ORDER BY (- (((t0.c0)+(NULL)))) ASC;
SELECT ALL * FROM rt0, rt1, t0 WHERE (CASE WHEN rt0.c3 THEN ((rt0.c1)IS NOT(NULL)) ELSE rt1.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 THEN ((rt0.c1)IS NOT(NULL)) ELSE rt1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (CASE WHEN rt0.c3 THEN ((rt0.c1)IS NOT(NULL)) ELSE rt1.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 THEN ((rt0.c1)IS NOT(NULL)) ELSE rt1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (CASE WHEN rt0.c3 THEN ((rt0.c1)IS NOT(NULL)) ELSE rt1.c1 COLLATE NOCASE END);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((rt0.c4 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((rt0.c4 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((rt0.c4 COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt1, rt0, t0 WHERE ((((rt0.c4, rt0.c3, rt0.c1)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE, (rt0.c2 IN (rt0.c3, rt0.c0)), (NOT (rt1.c2)))) AND ((CASE WHEN rt0.c3 THEN rt1.c0 ELSE t0.c0 END, CASE rt1.c0  WHEN rt1.c2 THEN rt0.c6 WHEN 0.8843166748175799 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c3 END, ((rt0.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4, rt0.c3, rt0.c1)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE, (rt0.c2 IN (rt0.c3, rt0.c0)), (NOT (rt1.c2)))) AND ((CASE WHEN rt0.c3 THEN rt1.c0 ELSE t0.c0 END, CASE rt1.c0  WHEN rt1.c2 THEN rt0.c6 WHEN 0.8843166748175799 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c3 END, ((rt0.c1) ISNULL))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE ((((rt0.c4, rt0.c3, rt0.c1)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE, (rt0.c2 IN (rt0.c3, rt0.c0)), (NOT (rt1.c2)))) AND ((CASE WHEN rt0.c3 THEN rt1.c0 ELSE t0.c0 END, CASE rt1.c0  WHEN rt1.c2 THEN rt0.c6 WHEN 0.8843166748175799 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c3 END, ((rt0.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4, rt0.c3, rt0.c1)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE, (rt0.c2 IN (rt0.c3, rt0.c0)), (NOT (rt1.c2)))) AND ((CASE WHEN rt0.c3 THEN rt1.c0 ELSE t0.c0 END, CASE rt1.c0  WHEN rt1.c2 THEN rt0.c6 WHEN 0.8843166748175799 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c3 END, ((rt0.c1) ISNULL))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE ((((rt0.c4, rt0.c3, rt0.c1)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE, (rt0.c2 IN (rt0.c3, rt0.c0)), (NOT (rt1.c2)))) AND ((CASE WHEN rt0.c3 THEN rt1.c0 ELSE t0.c0 END, CASE rt1.c0  WHEN rt1.c2 THEN rt0.c6 WHEN 0.8843166748175799 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c3 END, ((rt0.c1) ISNULL)))));
SELECT ALL * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))/(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS NOT(t0.c0)))/(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))/(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS NOT(t0.c0)))/(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))/(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)|(rt0.c2))) ISNULL)) ORDER BY (~ (((rt0.c2)||(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)|(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2)||(rt0.c0)))) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)|(rt0.c2))) ISNULL)) ORDER BY (~ (((rt0.c2)||(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)|(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2)||(rt0.c0)))) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)|(rt0.c2))) ISNULL)) ORDER BY (~ (((rt0.c2)||(rt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE (CASE (rt0.c1 IN ())  WHEN CAST(rt0.c2 AS TEXT) THEN (rt0.c4 IN (rt0.c0, rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c1 IN ())  WHEN CAST(rt0.c2 AS TEXT) THEN (rt0.c4 IN (rt0.c0, rt0.c4)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE (rt0.c1 IN ())  WHEN CAST(rt0.c2 AS TEXT) THEN (rt0.c4 IN (rt0.c0, rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c1 IN ())  WHEN CAST(rt0.c2 AS TEXT) THEN (rt0.c4 IN (rt0.c0, rt0.c4)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE (rt0.c1 IN ())  WHEN CAST(rt0.c2 AS TEXT) THEN (rt0.c4 IN (rt0.c0, rt0.c4)) END);
SELECT ALL * FROM rt1 WHERE (((rt1.c1) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c1) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c1) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1) IS FALSE) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((((((((0.5754546247336241)OR(0.7807692761646065)))OR(rt1.c2 COLLATE NOCASE)))OR(CASE rt1.c2  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN 0.6048471995390788 WHEN rt1.c1 THEN rt1.c2 ELSE x'' END)))OR(rt1.c2)) WHERE ((((rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((NULL, (t0.c0 IN ()), ((((rt1.c2)AND(rt1.c2)))AND(t0.c0)))) AND ((((t0.c0)LIKE(rt1.c0)), t0.c0 COLLATE NOCASE, (((rt1.c2, t0.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((t0.c0, rt1.c1, t0.c0))))))) ORDER BY CAST((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((t0.c0))) AS TEXT) ASC  NULLS LAST, ((t0.c0 COLLATE NOCASE) NOT NULL)  NULLS FIRST, (((((rt1.c1))<((rt1.c2))))<>((NOT (rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((NULL, (t0.c0 IN ()), ((((rt1.c2)AND(rt1.c2)))AND(t0.c0)))) AND ((((t0.c0)LIKE(rt1.c0)), t0.c0 COLLATE NOCASE, (((rt1.c2, t0.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((t0.c0, rt1.c1, t0.c0))))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((((((0.5754546247336241)OR(0.7807692761646065)))OR(rt1.c2 COLLATE NOCASE)))OR(CASE rt1.c2  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN 0.6048471995390788 WHEN rt1.c1 THEN rt1.c2 ELSE x'' END)))OR(rt1.c2)) ORDER BY CAST((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((t0.c0))) AS TEXT) ASC  NULLS LAST, ((t0.c0 COLLATE NOCASE) NOT NULL)  NULLS FIRST, (((((rt1.c1))<((rt1.c2))))!=((NOT (rt1.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((((((((0.5754546247336241)OR(0.7807692761646065)))OR(rt1.c2 COLLATE NOCASE)))OR(CASE rt1.c2  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN 0.6048471995390788 WHEN rt1.c1 THEN rt1.c2 ELSE x'' END)))OR(rt1.c2)) WHERE ((((rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((NULL, (t0.c0 IN ()), ((((rt1.c2)AND(rt1.c2)))AND(t0.c0)))) AND ((((t0.c0)LIKE(rt1.c0)), t0.c0 COLLATE NOCASE, (((rt1.c2, t0.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((t0.c0, rt1.c1, t0.c0))))))) ORDER BY CAST((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((t0.c0))) AS TEXT) ASC  NULLS LAST, ((t0.c0 COLLATE NOCASE) NOT NULL)  NULLS FIRST, (((((rt1.c1))<((rt1.c2))))<>((NOT (rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((NULL, (t0.c0 IN ()), ((((rt1.c2)AND(rt1.c2)))AND(t0.c0)))) AND ((((t0.c0)LIKE(rt1.c0)), t0.c0 COLLATE NOCASE, (((rt1.c2, t0.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((t0.c0, rt1.c1, t0.c0))))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((((((0.5754546247336241)OR(0.7807692761646065)))OR(rt1.c2 COLLATE NOCASE)))OR(CASE rt1.c2  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN 0.6048471995390788 WHEN rt1.c1 THEN rt1.c2 ELSE x'' END)))OR(rt1.c2)) ORDER BY CAST((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((t0.c0))) AS TEXT) ASC  NULLS LAST, ((t0.c0 COLLATE NOCASE) NOT NULL)  NULLS FIRST, (((((rt1.c1))<((rt1.c2))))!=((NOT (rt1.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((((((((0.5754546247336241)OR(0.7807692761646065)))OR(rt1.c2 COLLATE NOCASE)))OR(CASE rt1.c2  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN 0.6048471995390788 WHEN rt1.c1 THEN rt1.c2 ELSE x'' END)))OR(rt1.c2)) WHERE ((((rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((NULL, (t0.c0 IN ()), ((((rt1.c2)AND(rt1.c2)))AND(t0.c0)))) AND ((((t0.c0)LIKE(rt1.c0)), t0.c0 COLLATE NOCASE, (((rt1.c2, t0.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((t0.c0, rt1.c1, t0.c0))))))) ORDER BY CAST((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((t0.c0))) AS TEXT) ASC  NULLS LAST, ((t0.c0 COLLATE NOCASE) NOT NULL)  NULLS FIRST, (((((rt1.c1))<((rt1.c2))))<>((NOT (rt1.c2)))) DESC  NULLS FIRST;
SELECT * FROM rt1, rt0, t0 WHERE (((rt0.c5)LIKE(rt0.c3)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c5)LIKE(rt0.c3)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (((rt0.c5)LIKE(rt0.c3)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c5)LIKE(rt0.c3)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (((rt0.c5)LIKE(rt0.c3)) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((rt0.c5)|(rt0.c5))) AND (((rt0.c6)<=(rt0.c5)))) WHERE (TYPEOF(((rt0.c0)>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt0.c0)>(rt0.c1)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((rt0.c5)|(rt0.c5))) AND (((rt0.c6)<=(rt0.c5)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((rt0.c5)|(rt0.c5))) AND (((rt0.c6)<=(rt0.c5)))) WHERE (TYPEOF(((rt0.c0)>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt0.c0)>(rt0.c1)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((rt0.c5)|(rt0.c5))) AND (((rt0.c6)<=(rt0.c5)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((rt0.c5)|(rt0.c5))) AND (((rt0.c6)<=(rt0.c5)))) WHERE (TYPEOF(((rt0.c0)>(rt0.c1))));
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c2) ORDER BY rt1.c1, ((((((((((rt1.c2)OR(rt0.c3)))AND(rt0.c4)))OR(NULL)))OR(rt0.c6)))>(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c1, ((((((((((rt1.c2)OR(rt0.c3)))AND(rt0.c4)))OR(NULL)))OR(rt0.c6)))>(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END)) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c2) ORDER BY rt1.c1, ((((((((((rt1.c2)OR(rt0.c3)))AND(rt0.c4)))OR(NULL)))OR(rt0.c6)))>(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c1, ((((((((((rt1.c2)OR(rt0.c3)))AND(rt0.c4)))OR(NULL)))OR(rt0.c6)))>(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END)) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c2) ORDER BY rt1.c1, ((((((((((rt1.c2)OR(rt0.c3)))AND(rt0.c4)))OR(NULL)))OR(rt0.c6)))>(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END)) DESC;
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((((rt1.c0 IN (rt0.c1)))GLOB(((rt0.c4)|(0.5831142062475292))))) ORDER BY ((((0.2533853607212938)=(rt0.c0)))<(((rt0.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN (rt0.c1)))GLOB(((rt0.c4)|(0.5831142062475292))))) IS TRUE)  as count FROM rt1, rt0, t0 NOT INDEXED ORDER BY ((((0.2533853607212938)=(rt0.c0)))<(((rt0.c2) IS TRUE))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((((rt1.c0 IN (rt0.c1)))GLOB(((rt0.c4)|(0.5831142062475292))))) ORDER BY ((((0.2533853607212938)=(rt0.c0)))<(((rt0.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN (rt0.c1)))GLOB(((rt0.c4)|(0.5831142062475292))))) IS TRUE)  as count FROM rt1, rt0, t0 NOT INDEXED ORDER BY ((((0.2533853607212938)=(rt0.c0)))<(((rt0.c2) IS TRUE))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((((rt1.c0 IN (rt0.c1)))GLOB(((rt0.c4)|(0.5831142062475292))))) ORDER BY ((((0.2533853607212938)=(rt0.c0)))<(((rt0.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((json_patch(t0.c0, t0.c0)) NOT BETWEEN (t0.c0) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (- ((t0.c0 IN (t0.c0, t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(t0.c0, t0.c0)) NOT BETWEEN (t0.c0) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (- ((t0.c0 IN (t0.c0, t0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((json_patch(t0.c0, t0.c0)) NOT BETWEEN (t0.c0) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (- ((t0.c0 IN (t0.c0, t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(t0.c0, t0.c0)) NOT BETWEEN (t0.c0) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (- ((t0.c0 IN (t0.c0, t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((NOT (((rt0.c1) BETWEEN ('1836447482') AND (0.7519713502399498)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) BETWEEN ('1836447482') AND (0.7519713502399498))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((NOT (((rt0.c1) BETWEEN ('1836447482') AND (0.7519713502399498)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) BETWEEN ('1836447482') AND (0.7519713502399498))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((NOT (((rt0.c1) BETWEEN ('1836447482') AND (0.7519713502399498)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((('') BETWEEN (((rt0.c3)GLOB(rt0.c3))) AND ((rt0.c5 IN ())))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c6 END)AND(CAST(rt0.c0 AS TEXT))))AND(((rt0.c4)>>(0.9741868240680104))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('') BETWEEN (((rt0.c3)GLOB(rt0.c3))) AND ((rt0.c5 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c6 END)AND(CAST(rt0.c0 AS TEXT))))AND(((rt0.c4)>>(0.9741868240680104))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((('') BETWEEN (((rt0.c3)GLOB(rt0.c3))) AND ((rt0.c5 IN ())))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c6 END)AND(CAST(rt0.c0 AS TEXT))))AND(((rt0.c4)>>(0.9741868240680104))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('') BETWEEN (((rt0.c3)GLOB(rt0.c3))) AND ((rt0.c5 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c6 END)AND(CAST(rt0.c0 AS TEXT))))AND(((rt0.c4)>>(0.9741868240680104))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((('') BETWEEN (((rt0.c3)GLOB(rt0.c3))) AND ((rt0.c5 IN ())))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c6 END)AND(CAST(rt0.c0 AS TEXT))))AND(((rt0.c4)>>(0.9741868240680104))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0 WHERE (((((((((((((t0.c0)AND(rt1.c1)))AND(t0.c0)))OR(t0.c0)))AND(0.4489302114254108)))AND((- (rt1.c1)))))AND(CAST(rt1.c0 AS REAL)))) ORDER BY CAST(((t0.c0) BETWEEN (rt1.c0) AND (x'32a5')) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0)AND(rt1.c1)))AND(t0.c0)))OR(t0.c0)))AND(0.4489302114254108)))AND((- (rt1.c1)))))AND(CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(((t0.c0) BETWEEN (rt1.c0) AND (x'32a5')) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0 WHERE (((((((((((((t0.c0)AND(rt1.c1)))AND(t0.c0)))OR(t0.c0)))AND(0.4489302114254108)))AND((- (rt1.c1)))))AND(CAST(rt1.c0 AS REAL)))) ORDER BY CAST(((t0.c0) BETWEEN (rt1.c0) AND (x'32a5')) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0)AND(rt1.c1)))AND(t0.c0)))OR(t0.c0)))AND(0.4489302114254108)))AND((- (rt1.c1)))))AND(CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(((t0.c0) BETWEEN (rt1.c0) AND (x'32a5')) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0 WHERE (((((((((((((t0.c0)AND(rt1.c1)))AND(t0.c0)))OR(t0.c0)))AND(0.4489302114254108)))AND((- (rt1.c1)))))AND(CAST(rt1.c0 AS REAL)))) ORDER BY CAST(((t0.c0) BETWEEN (rt1.c0) AND (x'32a5')) AS TEXT)  NULLS LAST;
SELECT * FROM rt0 WHERE (((((0.9231665310255631)AND((- (NULL)))))OR((~ (rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9231665310255631)AND((- (NULL)))))OR((~ (rt0.c5))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((0.9231665310255631)AND((- (NULL)))))OR((~ (rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9231665310255631)AND((- (NULL)))))OR((~ (rt0.c5))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((0.9231665310255631)AND((- (NULL)))))OR((~ (rt0.c5)))));
SELECT * FROM rt0, rt1 INNER JOIN t0 ON (rt0.c2 IN ()) COLLATE NOCASE WHERE (rt1.c1) ORDER BY (((+ (rt1.c1)))||(((rt0.c6)/(rt0.c2)))), ((((((((((((((((rt1.c1)AND(rt0.c2)))AND(rt1.c0)))OR(rt0.c4)))OR(rt1.c0)))OR(NULL)))AND(((rt0.c4) ISNULL))))OR((~ (rt1.c2)))))OR(((rt0.c5)||(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t0 ON (rt0.c2 IN ()) COLLATE NOCASE ORDER BY (((+ (rt1.c1)))||(((rt0.c6)/(rt0.c2)))), ((((((((((((((((rt1.c1)AND(rt0.c2)))AND(rt1.c0)))OR(rt0.c4)))OR(rt1.c0)))OR(NULL)))AND(((rt0.c4) ISNULL))))OR((~ (rt1.c2)))))OR(((rt0.c5)||(rt0.c2)))) ASC);
SELECT * FROM rt0, rt1 INNER JOIN t0 ON (rt0.c2 IN ()) COLLATE NOCASE WHERE (rt1.c1) ORDER BY (((+ (rt1.c1)))||(((rt0.c6)/(rt0.c2)))), ((((((((((((((((rt1.c1)AND(rt0.c2)))AND(rt1.c0)))OR(rt0.c4)))OR(rt1.c0)))OR(NULL)))AND(((rt0.c4) ISNULL))))OR((~ (rt1.c2)))))OR(((rt0.c5)||(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t0 ON (rt0.c2 IN ()) COLLATE NOCASE ORDER BY (((+ (rt1.c1)))||(((rt0.c6)/(rt0.c2)))), ((((((((((((((((rt1.c1)AND(rt0.c2)))AND(rt1.c0)))OR(rt0.c4)))OR(rt1.c0)))OR(NULL)))AND(((rt0.c4) ISNULL))))OR((~ (rt1.c2)))))OR(((rt0.c5)||(rt0.c2)))) ASC);
SELECT * FROM rt0, rt1 INNER JOIN t0 ON (rt0.c2 IN ()) COLLATE NOCASE WHERE (rt1.c1) ORDER BY (((+ (rt1.c1)))||(((rt0.c6)/(rt0.c2)))), ((((((((((((((((rt1.c1)AND(rt0.c2)))AND(rt1.c0)))OR(rt0.c4)))OR(rt1.c0)))OR(NULL)))AND(((rt0.c4) ISNULL))))OR((~ (rt1.c2)))))OR(((rt0.c5)||(rt0.c2)))) ASC;
SELECT COUNT(*) FROM rt1, rt0 WHERE (TYPEOF(CASE WHEN rt0.c5 THEN rt1.c1 ELSE rt0.c4 END));
SELECT SUM(count) FROM (SELECT ((TYPEOF(CASE WHEN rt0.c5 THEN rt1.c1 ELSE rt0.c4 END)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (TYPEOF(CASE WHEN rt0.c5 THEN rt1.c1 ELSE rt0.c4 END));
SELECT SUM(count) FROM (SELECT ((TYPEOF(CASE WHEN rt0.c5 THEN rt1.c1 ELSE rt0.c4 END)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (TYPEOF(CASE WHEN rt0.c5 THEN rt1.c1 ELSE rt0.c4 END));
SELECT ALL * FROM rt1, rt0, t0 WHERE ((- (rt0.c5)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (rt0.c5)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE ((- (rt0.c5)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (rt0.c5)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE ((- (rt0.c5)) COLLATE NOCASE);
SELECT ALL * FROM t0, rt1 WHERE (0.04599431270236809 COLLATE RTRIM) ORDER BY (((((rt1.c1))=((rt1.c2))))|(ABS(DISTINCT rt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.04599431270236809 COLLATE RTRIM) IS TRUE)  as count FROM t0, rt1 ORDER BY (((((rt1.c1))=((rt1.c2))))|(ABS(DISTINCT rt1.c0))) DESC);
SELECT ALL * FROM t0, rt1 WHERE (0.04599431270236809 COLLATE RTRIM) ORDER BY (((((rt1.c1))=((rt1.c2))))|(ABS(DISTINCT rt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.04599431270236809 COLLATE RTRIM) IS TRUE)  as count FROM t0, rt1 ORDER BY (((((rt1.c1))=((rt1.c2))))|(ABS(DISTINCT rt1.c0))) DESC);
SELECT ALL * FROM t0, rt1 WHERE (0.04599431270236809 COLLATE RTRIM) ORDER BY (((((rt1.c1))=((rt1.c2))))|(ABS(DISTINCT rt1.c0))) DESC;
SELECT * FROM t0, rt0 LEFT OUTER JOIN rt1 ON json_object(CASE WHEN rt0.c4 THEN rt1.c1 ELSE NULL END, ((((t0.c0)OR(rt0.c5)))OR(x''))) WHERE ((((rt0.c6 IN (rt0.c0))) BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c1))) ORDER BY HEX(((rt0.c4) BETWEEN (t0.c0) AND (t0.c0))), (rt1.c1 IN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN '꺐qU?1&s' WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c6 WHEN rt1.c1 THEN rt1.c0 ELSE '-1268020299' END, ((rt0.c6) ISNULL)));
SELECT SUM(count) FROM (SELECT (((((rt0.c6 IN (rt0.c0))) BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c1))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON json_object(CASE WHEN rt0.c4 THEN rt1.c1 ELSE NULL END, ((((t0.c0)OR(rt0.c5)))OR(x''))) ORDER BY HEX(((rt0.c4) BETWEEN (t0.c0) AND (t0.c0))), (rt1.c1 IN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN '꺐qU?1&s' WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c6 WHEN rt1.c1 THEN rt1.c0 ELSE '-1268020299' END, ((rt0.c6) ISNULL))));
SELECT * FROM t0, rt0 LEFT OUTER JOIN rt1 ON json_object(CASE WHEN rt0.c4 THEN rt1.c1 ELSE NULL END, ((((t0.c0)OR(rt0.c5)))OR(x''))) WHERE ((((rt0.c6 IN (rt0.c0))) BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c1))) ORDER BY HEX(((rt0.c4) BETWEEN (t0.c0) AND (t0.c0))), (rt1.c1 IN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN '꺐qU?1&s' WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c6 WHEN rt1.c1 THEN rt1.c0 ELSE '-1268020299' END, ((rt0.c6) ISNULL)));
SELECT SUM(count) FROM (SELECT (((((rt0.c6 IN (rt0.c0))) BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c1))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON json_object(CASE WHEN rt0.c4 THEN rt1.c1 ELSE NULL END, ((((t0.c0)OR(rt0.c5)))OR(x''))) ORDER BY HEX(((rt0.c4) BETWEEN (t0.c0) AND (t0.c0))), (rt1.c1 IN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN '꺐qU?1&s' WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c6 WHEN rt1.c1 THEN rt1.c0 ELSE '-1268020299' END, ((rt0.c6) ISNULL))));
SELECT * FROM rt1, t0, rt0 WHERE (((((rt0.c0 IN ()), CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt0.c4 END, rt1.c2, COALESCE(DISTINCT rt1.c1, rt0.c3), ((1306919852) NOT BETWEEN (rt0.c2) AND (x''))))<((CAST(rt1.c1 AS TEXT), rt0.c5 COLLATE BINARY, rt0.c2 COLLATE RTRIM, ((rt0.c6) NOT NULL), NULL)))) ORDER BY CAST(((rt1.c0) IS FALSE) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ()), CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt0.c4 END, rt1.c2, COALESCE(DISTINCT rt1.c1, rt0.c3), ((1306919852) NOT BETWEEN (rt0.c2) AND (x''))))<((CAST(rt1.c1 AS TEXT), rt0.c5 COLLATE BINARY, rt0.c2 COLLATE RTRIM, ((rt0.c6) NOT NULL), NULL)))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY CAST(((rt1.c0) IS FALSE) AS BLOB) ASC);
SELECT * FROM rt1, t0, rt0 WHERE (((((rt0.c0 IN ()), CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt0.c4 END, rt1.c2, COALESCE(DISTINCT rt1.c1, rt0.c3), ((1306919852) NOT BETWEEN (rt0.c2) AND (x''))))<((CAST(rt1.c1 AS TEXT), rt0.c5 COLLATE BINARY, rt0.c2 COLLATE RTRIM, ((rt0.c6) NOT NULL), NULL)))) ORDER BY CAST(((rt1.c0) IS FALSE) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ()), CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt0.c4 END, rt1.c2, COALESCE(DISTINCT rt1.c1, rt0.c3), ((1306919852) NOT BETWEEN (rt0.c2) AND (x''))))<((CAST(rt1.c1 AS TEXT), rt0.c5 COLLATE BINARY, rt0.c2 COLLATE RTRIM, ((rt0.c6) NOT NULL), NULL)))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY CAST(((rt1.c0) IS FALSE) AS BLOB) ASC);
SELECT * FROM rt1, t0, rt0 WHERE (((((rt0.c0 IN ()), CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt0.c4 END, rt1.c2, COALESCE(DISTINCT rt1.c1, rt0.c3), ((1306919852) NOT BETWEEN (rt0.c2) AND (x''))))<((CAST(rt1.c1 AS TEXT), rt0.c5 COLLATE BINARY, rt0.c2 COLLATE RTRIM, ((rt0.c6) NOT NULL), NULL)))) ORDER BY CAST(((rt1.c0) IS FALSE) AS BLOB) ASC;
SELECT ALL * FROM rt0 WHERE (((((0.9016844315067263) ISNULL))*(((rt0.c3)OR(0.3764901460252196)))));
SELECT SUM(count) FROM (SELECT ((((((0.9016844315067263) ISNULL))*(((rt0.c3)OR(0.3764901460252196))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((0.9016844315067263) ISNULL))*(((rt0.c3)OR(0.3764901460252196)))));
SELECT SUM(count) FROM (SELECT ((((((0.9016844315067263) ISNULL))*(((rt0.c3)OR(0.3764901460252196))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((0.9016844315067263) ISNULL))*(((rt0.c3)OR(0.3764901460252196)))));
SELECT ALL * FROM rt1, t0 WHERE ((NOT ((~ (rt1.c1))))) ORDER BY ((((((rt1.c0)>=(rt1.c2)))AND(rt1.c1)))AND('' COLLATE NOCASE))  NULLS LAST, (((((t0.c0)<=(rt1.c2))))<>(((t0.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (rt1.c1))))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((((rt1.c0)>=(rt1.c2)))AND(rt1.c1)))AND('' COLLATE NOCASE))  NULLS LAST, (((((t0.c0)<=(rt1.c2))))!=(((t0.c0 IN ())))) DESC);
SELECT ALL * FROM rt1, t0 WHERE ((NOT ((~ (rt1.c1))))) ORDER BY ((((((rt1.c0)>=(rt1.c2)))AND(rt1.c1)))AND('' COLLATE NOCASE))  NULLS LAST, (((((t0.c0)<=(rt1.c2))))<>(((t0.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (rt1.c1))))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((((rt1.c0)>=(rt1.c2)))AND(rt1.c1)))AND('' COLLATE NOCASE))  NULLS LAST, (((((t0.c0)<=(rt1.c2))))!=(((t0.c0 IN ())))) DESC);
SELECT ALL * FROM rt1, t0 WHERE ((NOT ((~ (rt1.c1))))) ORDER BY ((((((rt1.c0)>=(rt1.c2)))AND(rt1.c1)))AND('' COLLATE NOCASE))  NULLS LAST, (((((t0.c0)<=(rt1.c2))))<>(((t0.c0 IN ())))) DESC;
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)AND(rt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)AND(rt1.c1))) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)AND(rt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)AND(rt1.c1))) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)AND(rt1.c1))) IS TRUE));
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c0)))-('-1175299794')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c0)))-('-1175299794'))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c0)))-('-1175299794')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c0)))-('-1175299794'))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c0)))-('-1175299794')));
SELECT * FROM t0, rt1, rt0 WHERE (CAST((~ (rt0.c5)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c5)) AS BLOB)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (CAST((~ (rt0.c5)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c5)) AS BLOB)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (CAST((~ (rt0.c5)) AS BLOB));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c4)*(rt0.c5))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((((rt0.c2)AND(rt0.c1)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)*(rt0.c5))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((((rt0.c2)AND(rt0.c1)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c4)*(rt0.c5))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((((rt0.c2)AND(rt0.c1)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)*(rt0.c5))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((((rt0.c2)AND(rt0.c1)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c4)*(rt0.c5))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((((rt0.c2)AND(rt0.c1)))OR(rt1.c2)))));
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST(CASE WHEN rt0.c4 THEN rt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c4 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST(CASE WHEN rt0.c4 THEN rt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c4 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST(CASE WHEN rt0.c4 THEN rt0.c2 END AS TEXT));
SELECT * FROM rt0, rt1, t0 WHERE (((CAST(rt1.c1 AS INTEGER)) IS TRUE)) ORDER BY rt0.c5  NULLS FIRST, TRIM(DISTINCT ABS(rt0.c1)) DESC  NULLS LAST, LIKELIHOOD(DISTINCT CASE rt0.c6  WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c4 END, 0.956863124346671) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY rt0.c5  NULLS FIRST, TRIM(DISTINCT ABS(rt0.c1)) DESC  NULLS LAST, LIKELIHOOD(DISTINCT CASE rt0.c6  WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c4 END, 0.956863124346671) DESC  NULLS FIRST);
SELECT * FROM rt0, rt1, t0 WHERE (((CAST(rt1.c1 AS INTEGER)) IS TRUE)) ORDER BY rt0.c5  NULLS FIRST, TRIM(DISTINCT ABS(rt0.c1)) DESC  NULLS LAST, LIKELIHOOD(DISTINCT CASE rt0.c6  WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c4 END, 0.956863124346671) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY rt0.c5  NULLS FIRST, TRIM(DISTINCT ABS(rt0.c1)) DESC  NULLS LAST, LIKELIHOOD(DISTINCT CASE rt0.c6  WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c4 END, 0.956863124346671) DESC  NULLS FIRST);
SELECT * FROM rt0, rt1, t0 WHERE (((CAST(rt1.c1 AS INTEGER)) IS TRUE)) ORDER BY rt0.c5  NULLS FIRST, TRIM(DISTINCT ABS(rt0.c1)) DESC  NULLS LAST, LIKELIHOOD(DISTINCT CASE rt0.c6  WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c4 END, 0.956863124346671) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, rt1 WHERE ((((NOT (0.8406435657895539))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NOT (0.8406435657895539))) IS TRUE)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((((NOT (0.8406435657895539))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NOT (0.8406435657895539))) IS TRUE)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((((NOT (0.8406435657895539))) IS TRUE));
SELECT * FROM rt0 WHERE (((rt0.c3)IS NOT(((((rt0.c1)AND(rt0.c6)))OR(rt0.c2))))) ORDER BY (CAST(rt0.c4 AS BLOB) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)IS NOT(((((rt0.c1)AND(rt0.c6)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c4 AS BLOB) IN ()) ASC);
SELECT * FROM rt0 WHERE (((rt0.c3)IS NOT(((((rt0.c1)AND(rt0.c6)))OR(rt0.c2))))) ORDER BY (CAST(rt0.c4 AS BLOB) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)IS NOT(((((rt0.c1)AND(rt0.c6)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c4 AS BLOB) IN ()) ASC);
SELECT * FROM rt0 WHERE (((rt0.c3)IS NOT(((((rt0.c1)AND(rt0.c6)))OR(rt0.c2))))) ORDER BY (CAST(rt0.c4 AS BLOB) IN ()) ASC;
SELECT * FROM t0 INNER JOIN rt0 ON (((+ (rt0.c5)))LIKE(CASE WHEN rt0.c2 THEN 22590133 END)) WHERE ((((((((rt0.c5)OR(rt0.c0)))OR(rt0.c3))))>=((rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c5)OR(rt0.c0)))OR(rt0.c3))))>=((rt0.c3)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((+ (rt0.c5)))LIKE(CASE WHEN rt0.c2 THEN 22590133 END)));
SELECT * FROM t0 INNER JOIN rt0 ON (((+ (rt0.c5)))LIKE(CASE WHEN rt0.c2 THEN 22590133 END)) WHERE ((((((((rt0.c5)OR(rt0.c0)))OR(rt0.c3))))>=((rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c5)OR(rt0.c0)))OR(rt0.c3))))>=((rt0.c3)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((+ (rt0.c5)))LIKE(CASE WHEN rt0.c2 THEN 22590133 END)));
SELECT * FROM t0 INNER JOIN rt0 ON (((+ (rt0.c5)))LIKE(CASE WHEN rt0.c2 THEN 22590133 END)) WHERE ((((((((rt0.c5)OR(rt0.c0)))OR(rt0.c3))))>=((rt0.c3))));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((rt0.c6)%(rt0.c2)))<(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c6)%(rt0.c2)))<(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((rt0.c6)%(rt0.c2)))<(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c6)%(rt0.c2)))<(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((rt0.c6)%(rt0.c2)))<(((rt0.c2) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c0 IN (rt1.c2))))<((CAST(rt0.c5 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN (rt1.c2))))<((CAST(rt0.c5 AS TEXT))))) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c0 IN (rt1.c2))))<((CAST(rt0.c5 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN (rt1.c2))))<((CAST(rt0.c5 AS TEXT))))) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c0 IN (rt1.c2))))<((CAST(rt0.c5 AS TEXT)))));
SELECT COUNT(*) FROM t0 WHERE ((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM t0 WHERE (CASE ((NULL)-(t0.c0))  WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) IS FALSE) WHEN CAST(t0.c0 AS NUMERIC) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) END) ORDER BY CAST(((t0.c0)<>(t0.c0)) AS TEXT) DESC, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((NULL)-(t0.c0))  WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) IS FALSE) WHEN CAST(t0.c0 AS NUMERIC) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)!=(t0.c0)) AS TEXT) DESC, t0.c0 DESC);
SELECT * FROM t0 WHERE (CASE ((NULL)-(t0.c0))  WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) IS FALSE) WHEN CAST(t0.c0 AS NUMERIC) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) END) ORDER BY CAST(((t0.c0)<>(t0.c0)) AS TEXT) DESC, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((NULL)-(t0.c0))  WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) IS FALSE) WHEN CAST(t0.c0 AS NUMERIC) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)!=(t0.c0)) AS TEXT) DESC, t0.c0 DESC);
SELECT * FROM t0 WHERE (CASE ((NULL)-(t0.c0))  WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) IS FALSE) WHEN CAST(t0.c0 AS NUMERIC) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) END) ORDER BY CAST(((t0.c0)<>(t0.c0)) AS TEXT) DESC, t0.c0 DESC;
SELECT * FROM rt0, t0 WHERE (CAST(((rt0.c4) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST(((rt0.c4) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST(((rt0.c4) ISNULL) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt0.c0)|(rt0.c5)))) AND ((rt1.c2))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((((rt0.c0)|(rt0.c5)))) AND ((rt1.c2)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt0.c0)|(rt0.c5)))) AND ((rt1.c2))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((((rt0.c0)|(rt0.c5)))) AND ((rt1.c2)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt0.c0)|(rt0.c5)))) AND ((rt1.c2))));
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (CAST(((((rt0.c4)AND(rt0.c5)))AND(rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c4)AND(rt0.c5)))AND(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (CAST(((((rt0.c4)AND(rt0.c5)))AND(rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c4)AND(rt0.c5)))AND(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (CAST(((((rt0.c4)AND(rt0.c5)))AND(rt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c2)<=(rt0.c1))))==(((rt0.c0 IN ()))))) ORDER BY (((((rt0.c5, rt0.c2, rt0.c3)) BETWEEN ((rt0.c4, rt0.c2, rt0.c6)) AND ((rt0.c3, t0.c0, rt0.c4))))/(((((t0.c0)AND(rt0.c0)))OR(rt0.c4)))), ((((rt0.c6)AND(rt0.c5))) NOT NULL), ((((rt0.c2)!=(t0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)<=(rt0.c1))))==(((rt0.c0 IN ()))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c5, rt0.c2, rt0.c3)) BETWEEN ((rt0.c4, rt0.c2, rt0.c6)) AND ((rt0.c3, t0.c0, rt0.c4))))/(((((t0.c0)AND(rt0.c0)))OR(rt0.c4)))), ((((rt0.c6)AND(rt0.c5))) NOT NULL), ((((rt0.c2)<>(t0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c2)<=(rt0.c1))))==(((rt0.c0 IN ()))))) ORDER BY (((((rt0.c5, rt0.c2, rt0.c3)) BETWEEN ((rt0.c4, rt0.c2, rt0.c6)) AND ((rt0.c3, t0.c0, rt0.c4))))/(((((t0.c0)AND(rt0.c0)))OR(rt0.c4)))), ((((rt0.c6)AND(rt0.c5))) NOT NULL), ((((rt0.c2)!=(t0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)<=(rt0.c1))))==(((rt0.c0 IN ()))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c5, rt0.c2, rt0.c3)) BETWEEN ((rt0.c4, rt0.c2, rt0.c6)) AND ((rt0.c3, t0.c0, rt0.c4))))/(((((t0.c0)AND(rt0.c0)))OR(rt0.c4)))), ((((rt0.c6)AND(rt0.c5))) NOT NULL), ((((rt0.c2)<>(t0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c2)<=(rt0.c1))))==(((rt0.c0 IN ()))))) ORDER BY (((((rt0.c5, rt0.c2, rt0.c3)) BETWEEN ((rt0.c4, rt0.c2, rt0.c6)) AND ((rt0.c3, t0.c0, rt0.c4))))/(((((t0.c0)AND(rt0.c0)))OR(rt0.c4)))), ((((rt0.c6)AND(rt0.c5))) NOT NULL), ((((rt0.c2)!=(t0.c0))) IS FALSE);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)/(NULL)))LIKE(PRINTF('>.pCE)Fa'))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)/(NULL)))LIKE(PRINTF('>.pCE)Fa')))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)/(NULL)))LIKE(PRINTF('>.pCE)Fa'))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)/(NULL)))LIKE(PRINTF('>.pCE)Fa')))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)/(NULL)))LIKE(PRINTF('>.pCE)Fa'))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON rt1.c2 COLLATE RTRIM WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON rt1.c2 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON rt1.c2 COLLATE RTRIM WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON rt1.c2 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON rt1.c2 COLLATE RTRIM WHERE (t0.c0);
SELECT * FROM rt0, rt1 WHERE (CAST(((rt0.c6)||(rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c6)||(rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CAST(((rt0.c6)||(rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c6)||(rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CAST(((rt0.c6)||(rt1.c1)) AS REAL));
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((('\-'))<>((rt1.c2))) COLLATE NOCASE WHERE (CAST((x'' IN (t0.c0)) AS BLOB)) ORDER BY ((rt1.c1)<>(((rt0.c2) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN (t0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((('\-'))<>((rt1.c2))) COLLATE NOCASE ORDER BY ((rt1.c1)<>(((rt0.c2) ISNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((('\-'))<>((rt1.c2))) COLLATE NOCASE WHERE (CAST((x'' IN (t0.c0)) AS BLOB)) ORDER BY ((rt1.c1)<>(((rt0.c2) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN (t0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((('\-'))<>((rt1.c2))) COLLATE NOCASE ORDER BY ((rt1.c1)<>(((rt0.c2) ISNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((('\-'))<>((rt1.c2))) COLLATE NOCASE WHERE (CAST((x'' IN (t0.c0)) AS BLOB)) ORDER BY ((rt1.c1)<>(((rt0.c2) ISNULL))) DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (NULL) ORDER BY CASE ((rt1.c0)&(t0.c0))  WHEN CAST(rt1.c1 AS NUMERIC) THEN '0.460661704149512' ELSE CAST(rt1.c0 AS INTEGER) END DESC  NULLS FIRST, rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE ((rt1.c0)&(t0.c0))  WHEN CAST(rt1.c1 AS NUMERIC) THEN '0.460661704149512' ELSE CAST(rt1.c0 AS INTEGER) END DESC  NULLS FIRST, rt1.c0 DESC);
SELECT ALL * FROM t0, rt1 WHERE (NULL) ORDER BY CASE ((rt1.c0)&(t0.c0))  WHEN CAST(rt1.c1 AS NUMERIC) THEN '0.460661704149512' ELSE CAST(rt1.c0 AS INTEGER) END DESC  NULLS FIRST, rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE ((rt1.c0)&(t0.c0))  WHEN CAST(rt1.c1 AS NUMERIC) THEN '0.460661704149512' ELSE CAST(rt1.c0 AS INTEGER) END DESC  NULLS FIRST, rt1.c0 DESC);
SELECT ALL * FROM t0, rt1 WHERE (NULL) ORDER BY CASE ((rt1.c0)&(t0.c0))  WHEN CAST(rt1.c1 AS NUMERIC) THEN '0.460661704149512' ELSE CAST(rt1.c0 AS INTEGER) END DESC  NULLS FIRST, rt1.c0 DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c5) ORDER BY CASE WHEN (~ (rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c6)) AND ((rt0.c3))) WHEN ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c1)) WHEN ((rt0.c2) NOT NULL) THEN rt0.c5 WHEN ((rt0.c4)%(rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN (rt0.c6 IN ()) THEN CASE WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c6 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c5 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CASE WHEN (~ (rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c6)) AND ((rt0.c3))) WHEN ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c1)) WHEN ((rt0.c2) NOT NULL) THEN rt0.c5 WHEN ((rt0.c4)%(rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN (rt0.c6 IN ()) THEN CASE WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c6 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c5 END END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c5) ORDER BY CASE WHEN (~ (rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c6)) AND ((rt0.c3))) WHEN ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c1)) WHEN ((rt0.c2) NOT NULL) THEN rt0.c5 WHEN ((rt0.c4)%(rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN (rt0.c6 IN ()) THEN CASE WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c6 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c5 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CASE WHEN (~ (rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c6)) AND ((rt0.c3))) WHEN ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c1)) WHEN ((rt0.c2) NOT NULL) THEN rt0.c5 WHEN ((rt0.c4)%(rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN (rt0.c6 IN ()) THEN CASE WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c6 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c5 END END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c5) ORDER BY CASE WHEN (~ (rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c6)) AND ((rt0.c3))) WHEN ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c1)) WHEN ((rt0.c2) NOT NULL) THEN rt0.c5 WHEN ((rt0.c4)%(rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN (rt0.c6 IN ()) THEN CASE WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c6 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c5 END END  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c1 COLLATE BINARY AS TEXT)) ORDER BY HEX(DISTINCT CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY HEX(DISTINCT CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c1 COLLATE BINARY AS TEXT)) ORDER BY HEX(DISTINCT CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY HEX(DISTINCT CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c1 COLLATE BINARY AS TEXT)) ORDER BY HEX(DISTINCT CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)<>(t0.c0))) BETWEEN (CASE WHEN 0.6717442699800714 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((((t0.c0))=((t0.c0)))))) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN '-282415390' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)!=(t0.c0))) BETWEEN (CASE WHEN 0.6717442699800714 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((((t0.c0))==((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN '-282415390' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS REAL)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c0)<>(t0.c0))) BETWEEN (CASE WHEN 0.6717442699800714 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((((t0.c0))=((t0.c0)))))) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN '-282415390' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)!=(t0.c0))) BETWEEN (CASE WHEN 0.6717442699800714 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((((t0.c0))==((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN '-282415390' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS REAL)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c0)<>(t0.c0))) BETWEEN (CASE WHEN 0.6717442699800714 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND ((((t0.c0))=((t0.c0)))))) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN '-282415390' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(((rt0.c6)IS(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c6)IS(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(((rt0.c6)IS(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c6)IS(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(((rt0.c6)IS(t0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (HEX(DISTINCT rt1.c0 COLLATE RTRIM)) ORDER BY (((~ (rt1.c2))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT rt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt1, t0 ORDER BY (((~ (rt1.c2))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (HEX(DISTINCT rt1.c0 COLLATE RTRIM)) ORDER BY (((~ (rt1.c2))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT rt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt1, t0 ORDER BY (((~ (rt1.c2))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (HEX(DISTINCT rt1.c0 COLLATE RTRIM)) ORDER BY (((~ (rt1.c2))) NOT NULL) DESC;
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (((rt1.c0) BETWEEN (0.5840350584366621) AND (rt1.c0)) COLLATE BINARY) ORDER BY (NOT (CAST(rt0.c2 AS TEXT)))  NULLS FIRST, ((rt0.c6 IN (-1129722042)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) BETWEEN (0.5840350584366621) AND (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (NOT (CAST(rt0.c2 AS TEXT)))  NULLS FIRST, ((rt0.c6 IN (-1129722042)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (((rt1.c0) BETWEEN (0.5840350584366621) AND (rt1.c0)) COLLATE BINARY) ORDER BY (NOT (CAST(rt0.c2 AS TEXT)))  NULLS FIRST, ((rt0.c6 IN (-1129722042)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) BETWEEN (0.5840350584366621) AND (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (NOT (CAST(rt0.c2 AS TEXT)))  NULLS FIRST, ((rt0.c6 IN (-1129722042)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (((rt1.c0) BETWEEN (0.5840350584366621) AND (rt1.c0)) COLLATE BINARY) ORDER BY (NOT (CAST(rt0.c2 AS TEXT)))  NULLS FIRST, ((rt0.c6 IN (-1129722042)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt1.c0, rt0.c4, rt0.c2)) BETWEEN ((rt0.c3, ((rt0.c1)>(rt0.c5)), ((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((((rt0.c4)=('')), ((rt0.c5)&(rt0.c1)), rt0.c4 COLLATE RTRIM))) WHERE (((rt1.c2)>>(((((((((rt0.c4)AND(rt0.c5)))AND(rt0.c2)))OR(rt0.c6)))AND(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)>>(((((((((rt0.c4)AND(rt0.c5)))AND(rt0.c2)))OR(rt0.c6)))AND(rt0.c5))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt1.c0, rt0.c4, rt0.c2)) BETWEEN ((rt0.c3, ((rt0.c1)>(rt0.c5)), ((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((((rt0.c4)=('')), ((rt0.c5)&(rt0.c1)), rt0.c4 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt1.c0, rt0.c4, rt0.c2)) BETWEEN ((rt0.c3, ((rt0.c1)>(rt0.c5)), ((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((((rt0.c4)=('')), ((rt0.c5)&(rt0.c1)), rt0.c4 COLLATE RTRIM))) WHERE (((rt1.c2)>>(((((((((rt0.c4)AND(rt0.c5)))AND(rt0.c2)))OR(rt0.c6)))AND(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)>>(((((((((rt0.c4)AND(rt0.c5)))AND(rt0.c2)))OR(rt0.c6)))AND(rt0.c5))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt1.c0, rt0.c4, rt0.c2)) BETWEEN ((rt0.c3, ((rt0.c1)>(rt0.c5)), ((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((((rt0.c4)=('')), ((rt0.c5)&(rt0.c1)), rt0.c4 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt1.c0, rt0.c4, rt0.c2)) BETWEEN ((rt0.c3, ((rt0.c1)>(rt0.c5)), ((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((((rt0.c4)=('')), ((rt0.c5)&(rt0.c1)), rt0.c4 COLLATE RTRIM))) WHERE (((rt1.c2)>>(((((((((rt0.c4)AND(rt0.c5)))AND(rt0.c2)))OR(rt0.c6)))AND(rt0.c5)))));
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c3)&(rt0.c3))) ISNULL)) ORDER BY (((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt1.c1)))) NOT BETWEEN ((rt0.c2 IN (rt0.c1))) AND (((rt1.c1)>>(rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)&(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt1.c1)))) NOT BETWEEN ((rt0.c2 IN (rt0.c1))) AND (((rt1.c1)>>(rt0.c3))))  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c3)&(rt0.c3))) ISNULL)) ORDER BY (((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt1.c1)))) NOT BETWEEN ((rt0.c2 IN (rt0.c1))) AND (((rt1.c1)>>(rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)&(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt1.c1)))) NOT BETWEEN ((rt0.c2 IN (rt0.c1))) AND (((rt1.c1)>>(rt0.c3))))  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c3)&(rt0.c3))) ISNULL)) ORDER BY (((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt1.c1)))) NOT BETWEEN ((rt0.c2 IN (rt0.c1))) AND (((rt1.c1)>>(rt0.c3))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c4)*(rt0.c6)) COLLATE NOCASE) ORDER BY ((((((rt0.c4)OR(rt0.c1)))AND(rt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)*(rt0.c6)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c4)OR(rt0.c1)))AND(rt0.c0))) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c4)*(rt0.c6)) COLLATE NOCASE) ORDER BY ((((((rt0.c4)OR(rt0.c1)))AND(rt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)*(rt0.c6)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c4)OR(rt0.c1)))AND(rt0.c0))) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c4)*(rt0.c6)) COLLATE NOCASE) ORDER BY ((((((rt0.c4)OR(rt0.c1)))AND(rt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c0)%(rt0.c2)), ((rt0.c4)=(rt0.c2)))) ORDER BY (((~ (rt0.c1))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))) AND ((((rt0.c4, rt0.c3, rt0.c4)) BETWEEN ((rt0.c1, rt0.c6, rt0.c3)) AND ((rt0.c0, rt0.c4, rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt0.c0)%(rt0.c2)), ((rt0.c4)==(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c1))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))) AND ((((rt0.c4, rt0.c3, rt0.c4)) BETWEEN ((rt0.c1, rt0.c6, rt0.c3)) AND ((rt0.c0, rt0.c4, rt0.c3)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c0)%(rt0.c2)), ((rt0.c4)=(rt0.c2)))) ORDER BY (((~ (rt0.c1))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))) AND ((((rt0.c4, rt0.c3, rt0.c4)) BETWEEN ((rt0.c1, rt0.c6, rt0.c3)) AND ((rt0.c0, rt0.c4, rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt0.c0)%(rt0.c2)), ((rt0.c4)==(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c1))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))) AND ((((rt0.c4, rt0.c3, rt0.c4)) BETWEEN ((rt0.c1, rt0.c6, rt0.c3)) AND ((rt0.c0, rt0.c4, rt0.c3)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c0)%(rt0.c2)), ((rt0.c4)=(rt0.c2)))) ORDER BY (((~ (rt0.c1))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))) AND ((((rt0.c4, rt0.c3, rt0.c4)) BETWEEN ((rt0.c1, rt0.c6, rt0.c3)) AND ((rt0.c0, rt0.c4, rt0.c3)))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ())) ORDER BY (+ (t0.c0)), (((t0.c0)) BETWEEN ((((((t0.c0)AND(t0.c0)))AND('>h繗Sw')))) AND ((INSTR(t0.c0, t0.c0)))) DESC  NULLS FIRST, ((~ (t0.c0)) IN ((((t0.c0))!=((t0.c0))), t0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c0)), (((t0.c0)) BETWEEN ((((((t0.c0)AND(t0.c0)))AND('>h繗Sw')))) AND ((INSTR(t0.c0, t0.c0)))) DESC  NULLS FIRST, ((~ (t0.c0)) IN ((((t0.c0))<>((t0.c0))), t0.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ())) ORDER BY (+ (t0.c0)), (((t0.c0)) BETWEEN ((((((t0.c0)AND(t0.c0)))AND('>h繗Sw')))) AND ((INSTR(t0.c0, t0.c0)))) DESC  NULLS FIRST, ((~ (t0.c0)) IN ((((t0.c0))!=((t0.c0))), t0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c0)), (((t0.c0)) BETWEEN ((((((t0.c0)AND(t0.c0)))AND('>h繗Sw')))) AND ((INSTR(t0.c0, t0.c0)))) DESC  NULLS FIRST, ((~ (t0.c0)) IN ((((t0.c0))<>((t0.c0))), t0.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ())) ORDER BY (+ (t0.c0)), (((t0.c0)) BETWEEN ((((((t0.c0)AND(t0.c0)))AND('>h繗Sw')))) AND ((INSTR(t0.c0, t0.c0)))) DESC  NULLS FIRST, ((~ (t0.c0)) IN ((((t0.c0))!=((t0.c0))), t0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0, rt1 WHERE (UNICODE((NOT (t0.c0))));
SELECT SUM(count) FROM (SELECT ((UNICODE((NOT (t0.c0)))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (UNICODE((NOT (t0.c0))));
SELECT SUM(count) FROM (SELECT ((UNICODE((NOT (t0.c0)))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (UNICODE((NOT (t0.c0))));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1 COLLATE BINARY) ORDER BY ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))LIKE(rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c1 COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))LIKE(rt1.c2)) DESC);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1 COLLATE BINARY) ORDER BY ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))LIKE(rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c1 COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))LIKE(rt1.c2)) DESC);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1 COLLATE BINARY) ORDER BY ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))LIKE(rt1.c2)) DESC;
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN rt1 ON (((rt0.c3)) BETWEEN (((- (rt0.c4)))) AND (((rt0.c0 IN ())))) WHERE (((((0.4421123649676967)AND(rt0.c5)))AND(rt1.c0)) COLLATE NOCASE) ORDER BY ((((((rt0.c0)<=('2145098531')))AND((((((((('?>')AND(t0.c0)))AND(rt0.c2)))AND(rt1.c2)))OR(rt0.c1)))))OR((((rt0.c2, NULL, rt1.c2)) NOT BETWEEN ((rt0.c4, rt1.c1, rt0.c6)) AND ((x'', 0.5991379138768614, rt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.4421123649676967)AND(rt0.c5)))AND(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN rt1 ON (((rt0.c3)) BETWEEN (((- (rt0.c4)))) AND (((rt0.c0 IN ())))) ORDER BY ((((((rt0.c0)<=('2145098531')))AND((((((((('?>')AND(t0.c0)))AND(rt0.c2)))AND(rt1.c2)))OR(rt0.c1)))))OR((((rt0.c2, NULL, rt1.c2)) NOT BETWEEN ((rt0.c4, rt1.c1, rt0.c6)) AND ((x'', 0.5991379138768614, rt1.c0))))) ASC);
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN rt1 ON (((rt0.c3)) BETWEEN (((- (rt0.c4)))) AND (((rt0.c0 IN ())))) WHERE (((((0.4421123649676967)AND(rt0.c5)))AND(rt1.c0)) COLLATE NOCASE) ORDER BY ((((((rt0.c0)<=('2145098531')))AND((((((((('?>')AND(t0.c0)))AND(rt0.c2)))AND(rt1.c2)))OR(rt0.c1)))))OR((((rt0.c2, NULL, rt1.c2)) NOT BETWEEN ((rt0.c4, rt1.c1, rt0.c6)) AND ((x'', 0.5991379138768614, rt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.4421123649676967)AND(rt0.c5)))AND(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN rt1 ON (((rt0.c3)) BETWEEN (((- (rt0.c4)))) AND (((rt0.c0 IN ())))) ORDER BY ((((((rt0.c0)<=('2145098531')))AND((((((((('?>')AND(t0.c0)))AND(rt0.c2)))AND(rt1.c2)))OR(rt0.c1)))))OR((((rt0.c2, NULL, rt1.c2)) NOT BETWEEN ((rt0.c4, rt1.c1, rt0.c6)) AND ((x'', 0.5991379138768614, rt1.c0))))) ASC);
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN rt1 ON (((rt0.c3)) BETWEEN (((- (rt0.c4)))) AND (((rt0.c0 IN ())))) WHERE (((((0.4421123649676967)AND(rt0.c5)))AND(rt1.c0)) COLLATE NOCASE) ORDER BY ((((((rt0.c0)<=('2145098531')))AND((((((((('?>')AND(t0.c0)))AND(rt0.c2)))AND(rt1.c2)))OR(rt0.c1)))))OR((((rt0.c2, NULL, rt1.c2)) NOT BETWEEN ((rt0.c4, rt1.c1, rt0.c6)) AND ((x'', 0.5991379138768614, rt1.c0))))) ASC;
SELECT COUNT(*) FROM rt1, t0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC)) BETWEEN ('*Q&FS') AND (LIKELIHOOD(rt0.c3, 0.9454801788804105))) WHERE ((~ (((rt0.c3)==(rt0.c6)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c3)==(rt0.c6))))) IS TRUE)  as count FROM rt1, t0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC)) BETWEEN ('*Q&FS') AND (LIKELIHOOD(rt0.c3, 0.9454801788804105))));
SELECT COUNT(*) FROM rt1, t0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC)) BETWEEN ('*Q&FS') AND (LIKELIHOOD(rt0.c3, 0.9454801788804105))) WHERE ((~ (((rt0.c3)==(rt0.c6)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c3)==(rt0.c6))))) IS TRUE)  as count FROM rt1, t0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC)) BETWEEN ('*Q&FS') AND (LIKELIHOOD(rt0.c3, 0.9454801788804105))));
SELECT COUNT(*) FROM rt1, t0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC)) BETWEEN ('*Q&FS') AND (LIKELIHOOD(rt0.c3, 0.9454801788804105))) WHERE ((~ (((rt0.c3)==(rt0.c6)))));
SELECT * FROM rt1, rt0 WHERE (((0xffffffffecec7ac0)>((((rt0.c4))=((rt1.c0)))))) ORDER BY (~ (0.9985875583341717)) ASC;
SELECT SUM(count) FROM (SELECT ((((0Xffffffffecec7ac0)>((((rt0.c4))=((rt1.c0)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (~ (0.9985875583341717)) ASC);
SELECT * FROM rt1, rt0 WHERE (((0xffffffffecec7ac0)>((((rt0.c4))=((rt1.c0)))))) ORDER BY (~ (0.9985875583341717)) ASC;
SELECT SUM(count) FROM (SELECT ((((0Xffffffffecec7ac0)>((((rt0.c4))=((rt1.c0)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (~ (0.9985875583341717)) ASC);
SELECT * FROM rt1, rt0 WHERE (((0xffffffffecec7ac0)>((((rt0.c4))=((rt1.c0)))))) ORDER BY (~ (0.9985875583341717)) ASC;
SELECT ALL * FROM t0, rt1, rt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (rt1.c0);
SELECT * FROM rt1, rt0 WHERE ((('u') IS FALSE)) ORDER BY CAST((~ (NULL)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('u') IS FALSE)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((~ (NULL)) AS TEXT) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE ((('u') IS FALSE)) ORDER BY CAST((~ (NULL)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('u') IS FALSE)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((~ (NULL)) AS TEXT) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE ((('u') IS FALSE)) ORDER BY CAST((~ (NULL)) AS TEXT) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((+ (((rt1.c2)<=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c2)<=(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((+ (((rt1.c2)<=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c2)<=(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((+ (((rt1.c2)<=(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) NOT NULL) LEFT OUTER JOIN t0 ON rt0.c1 WHERE (((((((((((((((rt1.c1)AND(rt0.c5)))OR(rt1.c0)))OR(rt0.c1)))OR(rt0.c5)))AND(rt0.c6)))AND(rt1.c1)))AND(((rt0.c2)%(rt1.c1))))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c6 END)AND(NULL)))OR(((rt1.c1) ISNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c1)AND(rt0.c5)))OR(rt1.c0)))OR(rt0.c1)))OR(rt0.c5)))AND(rt0.c6)))AND(rt1.c1)))AND(((rt0.c2)%(rt1.c1))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) NOT NULL) LEFT OUTER JOIN t0 ON rt0.c1 ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c6 END)AND(NULL)))OR(((rt1.c1) ISNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) NOT NULL) LEFT OUTER JOIN t0 ON rt0.c1 WHERE (((((((((((((((rt1.c1)AND(rt0.c5)))OR(rt1.c0)))OR(rt0.c1)))OR(rt0.c5)))AND(rt0.c6)))AND(rt1.c1)))AND(((rt0.c2)%(rt1.c1))))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c6 END)AND(NULL)))OR(((rt1.c1) ISNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c1)AND(rt0.c5)))OR(rt1.c0)))OR(rt0.c1)))OR(rt0.c5)))AND(rt0.c6)))AND(rt1.c1)))AND(((rt0.c2)%(rt1.c1))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) NOT NULL) LEFT OUTER JOIN t0 ON rt0.c1 ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c6 END)AND(NULL)))OR(((rt1.c1) ISNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) NOT NULL) LEFT OUTER JOIN t0 ON rt0.c1 WHERE (((((((((((((((rt1.c1)AND(rt0.c5)))OR(rt1.c0)))OR(rt0.c1)))OR(rt0.c5)))AND(rt0.c6)))AND(rt1.c1)))AND(((rt0.c2)%(rt1.c1))))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c6 END)AND(NULL)))OR(((rt1.c1) ISNULL))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY (rt0.c4 COLLATE BINARY IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c4 COLLATE BINARY IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY (rt0.c4 COLLATE BINARY IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c4 COLLATE BINARY IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY (rt0.c4 COLLATE BINARY IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((~ (CAST(rt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((~ (CAST(rt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((~ (CAST(rt1.c1 AS REAL))));
SELECT ALL * FROM rt1, rt0 WHERE (CASE WHEN CASE rt0.c3  WHEN rt1.c1 THEN rt0.c0 END THEN '1286146206' ELSE (rt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c3  WHEN rt1.c1 THEN rt0.c0 END THEN '1286146206' ELSE (rt1.c0 IN ()) END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CASE WHEN CASE rt0.c3  WHEN rt1.c1 THEN rt0.c0 END THEN '1286146206' ELSE (rt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c3  WHEN rt1.c1 THEN rt0.c0 END THEN '1286146206' ELSE (rt1.c0 IN ()) END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CASE WHEN CASE rt0.c3  WHEN rt1.c1 THEN rt0.c0 END THEN '1286146206' ELSE (rt1.c0 IN ()) END);
SELECT ALL * FROM rt1, rt0 NOT INDEXED WHERE (((0.46727103450894136) BETWEEN (CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt0.c6 END) AND (((rt0.c4) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((0.46727103450894136) BETWEEN (CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt0.c6 END) AND (((rt0.c4) NOT NULL)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 NOT INDEXED WHERE (((0.46727103450894136) BETWEEN (CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt0.c6 END) AND (((rt0.c4) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((0.46727103450894136) BETWEEN (CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt0.c6 END) AND (((rt0.c4) NOT NULL)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 NOT INDEXED WHERE (((0.46727103450894136) BETWEEN (CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt0.c6 END) AND (((rt0.c4) NOT NULL))));
SELECT ALL * FROM t0, rt0 CROSS JOIN rt1 ON ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c6 WHEN rt0.c3 THEN '1227795596' ELSE rt0.c1 END) NOTNULL) WHERE (CAST((rt0.c5 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c5 IN ()) AS REAL)) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 CROSS JOIN rt1 ON ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c6 WHEN rt0.c3 THEN '1227795596' ELSE rt0.c1 END) NOTNULL));
SELECT ALL * FROM t0, rt0 CROSS JOIN rt1 ON ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c6 WHEN rt0.c3 THEN '1227795596' ELSE rt0.c1 END) NOTNULL) WHERE (CAST((rt0.c5 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c5 IN ()) AS REAL)) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 CROSS JOIN rt1 ON ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c6 WHEN rt0.c3 THEN '1227795596' ELSE rt0.c1 END) NOTNULL));
SELECT ALL * FROM t0, rt0 CROSS JOIN rt1 ON ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c6 WHEN rt0.c3 THEN '1227795596' ELSE rt0.c1 END) NOTNULL) WHERE (CAST((rt0.c5 IN ()) AS REAL));
SELECT * FROM t0, rt0, rt1 WHERE (CAST(((0.6377753418108204)==(rt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.6377753418108204)==(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE (CAST(((0.6377753418108204)==(rt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.6377753418108204)==(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE (CAST(((0.6377753418108204)==(rt1.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((json_remove(rt0.c5, rt0.c0))AND(rt0.c5)))OR(RTRIM(rt0.c5))))AND(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END)))OR((((rt0.c5))>=((rt0.c5))))))AND(CASE rt0.c2  WHEN rt0.c5 THEN rt0.c4 END)))OR((rt0.c0 IN (rt0.c3))))) ORDER BY ((((((((rt0.c0 COLLATE RTRIM)OR(((rt0.c3) NOTNULL))))OR(rt0.c0 COLLATE NOCASE)))AND(((rt0.c4) NOTNULL))))OR(CAST(rt0.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((json_remove(rt0.c5, rt0.c0))AND(rt0.c5)))OR(RTRIM(rt0.c5))))AND(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END)))OR((((rt0.c5))>=((rt0.c5))))))AND(CASE rt0.c2  WHEN rt0.c5 THEN rt0.c4 END)))OR((rt0.c0 IN (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0 COLLATE RTRIM)OR(((rt0.c3) NOTNULL))))OR(rt0.c0 COLLATE NOCASE)))AND(((rt0.c4) NOTNULL))))OR(CAST(rt0.c0 AS REAL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((json_remove(rt0.c5, rt0.c0))AND(rt0.c5)))OR(RTRIM(rt0.c5))))AND(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END)))OR((((rt0.c5))>=((rt0.c5))))))AND(CASE rt0.c2  WHEN rt0.c5 THEN rt0.c4 END)))OR((rt0.c0 IN (rt0.c3))))) ORDER BY ((((((((rt0.c0 COLLATE RTRIM)OR(((rt0.c3) NOTNULL))))OR(rt0.c0 COLLATE NOCASE)))AND(((rt0.c4) NOTNULL))))OR(CAST(rt0.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((json_remove(rt0.c5, rt0.c0))AND(rt0.c5)))OR(RTRIM(rt0.c5))))AND(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END)))OR((((rt0.c5))>=((rt0.c5))))))AND(CASE rt0.c2  WHEN rt0.c5 THEN rt0.c4 END)))OR((rt0.c0 IN (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0 COLLATE RTRIM)OR(((rt0.c3) NOTNULL))))OR(rt0.c0 COLLATE NOCASE)))AND(((rt0.c4) NOTNULL))))OR(CAST(rt0.c0 AS REAL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN rt1 ON json_quote((((rt1.c2)) NOT BETWEEN (('6v')) AND ((rt0.c0)))) WHERE (0.6150385926281806);
SELECT SUM(count) FROM (SELECT ((0.6150385926281806) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN rt1 ON json_quote((((rt1.c2)) NOT BETWEEN (('6v')) AND ((rt0.c0)))));
SELECT COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN rt1 ON json_quote((((rt1.c2)) NOT BETWEEN (('6v')) AND ((rt0.c0)))) WHERE (0.6150385926281806);
SELECT SUM(count) FROM (SELECT ((0.6150385926281806) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN rt1 ON json_quote((((rt1.c2)) NOT BETWEEN (('6v')) AND ((rt0.c0)))));
SELECT COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN rt1 ON json_quote((((rt1.c2)) NOT BETWEEN (('6v')) AND ((rt0.c0)))) WHERE (0.6150385926281806);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (x'2e6b');
SELECT SUM(count) FROM (SELECT ((x'2e6b') IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (x'2e6b');
SELECT SUM(count) FROM (SELECT ((x'2e6b') IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (x'2e6b');
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN rt1 WHERE (((x'')AND(rt0.c6 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')AND(rt0.c6 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN rt1 WHERE (((x'')AND(rt0.c6 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')AND(rt0.c6 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN rt1 WHERE (((x'')AND(rt0.c6 COLLATE BINARY)));
SELECT COUNT(*) FROM t0 WHERE ((+ (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY (((t0.c0 IN ('22590133', t0.c0)))IS(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'01bc' THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST, TRIM(DISTINCT (+ (t0.c0)), (+ (t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ('22590133', t0.c0)))IS(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'01bc' THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST, TRIM(DISTINCT (+ (t0.c0)), (+ (t0.c0))) DESC);
SELECT COUNT(*) FROM t0 WHERE ((+ (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY (((t0.c0 IN ('22590133', t0.c0)))IS(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'01bc' THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST, TRIM(DISTINCT (+ (t0.c0)), (+ (t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ('22590133', t0.c0)))IS(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'01bc' THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST, TRIM(DISTINCT (+ (t0.c0)), (+ (t0.c0))) DESC);
SELECT COUNT(*) FROM t0 WHERE ((+ (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY (((t0.c0 IN ('22590133', t0.c0)))IS(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'01bc' THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST, TRIM(DISTINCT (+ (t0.c0)), (+ (t0.c0))) DESC;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON rt0.c1 WHERE (0.45418854494429295);
SELECT SUM(count) FROM (SELECT ALL ((0.45418854494429295) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON rt0.c1);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON rt0.c1 WHERE (0.45418854494429295);
SELECT SUM(count) FROM (SELECT ALL ((0.45418854494429295) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON rt0.c1);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON rt0.c1 WHERE (0.45418854494429295);
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1) IS TRUE))<(((rt1.c2) ISNULL))) CROSS JOIN t0 ON (+ (((rt0.c1)<<(rt0.c5)))) WHERE (CASE rt1.c1  WHEN json_array(rt1.c2, '-30392699') THEN ((rt0.c4)%(rt0.c2)) ELSE ((rt1.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1  WHEN json_array(rt1.c2, '-30392699') THEN ((rt0.c4)%(rt0.c2)) ELSE ((rt1.c0) NOTNULL) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1) IS TRUE))<(((rt1.c2) ISNULL))) CROSS JOIN t0 ON (+ (((rt0.c1)<<(rt0.c5)))));
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1) IS TRUE))<(((rt1.c2) ISNULL))) CROSS JOIN t0 ON (+ (((rt0.c1)<<(rt0.c5)))) WHERE (CASE rt1.c1  WHEN json_array(rt1.c2, '-30392699') THEN ((rt0.c4)%(rt0.c2)) ELSE ((rt1.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1  WHEN json_array(rt1.c2, '-30392699') THEN ((rt0.c4)%(rt0.c2)) ELSE ((rt1.c0) NOTNULL) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1) IS TRUE))<(((rt1.c2) ISNULL))) CROSS JOIN t0 ON (+ (((rt0.c1)<<(rt0.c5)))));
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1) IS TRUE))<(((rt1.c2) ISNULL))) CROSS JOIN t0 ON (+ (((rt0.c1)<<(rt0.c5)))) WHERE (CASE rt1.c1  WHEN json_array(rt1.c2, '-30392699') THEN ((rt0.c4)%(rt0.c2)) ELSE ((rt1.c0) NOTNULL) END);
SELECT ALL * FROM rt1 INNER JOIN t0 ON (x'1b63' IN (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))) FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c3 IN ()) THEN NULL END WHERE ((((((t0.c0 IN ()))AND(((rt0.c2)<(rt0.c2)))))AND(CASE WHEN rt0.c6 THEN rt1.c1 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN ()))AND(((rt0.c2)<(rt0.c2)))))AND(CASE WHEN rt0.c6 THEN rt1.c1 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON (x'1b63' IN (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))) FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c3 IN ()) THEN NULL END);
SELECT ALL * FROM rt1 INNER JOIN t0 ON (x'1b63' IN (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))) FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c3 IN ()) THEN NULL END WHERE ((((((t0.c0 IN ()))AND(((rt0.c2)<(rt0.c2)))))AND(CASE WHEN rt0.c6 THEN rt1.c1 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN ()))AND(((rt0.c2)<(rt0.c2)))))AND(CASE WHEN rt0.c6 THEN rt1.c1 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON (x'1b63' IN (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))) FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c3 IN ()) THEN NULL END);
SELECT COUNT(*) FROM rt0, rt1 WHERE (NULL) ORDER BY CASE WHEN '''K	g5㠈ˁ ' THEN 0.8192276446633878 END COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN '''K	g5㠈ˁ ' THEN 0.8192276446633878 END COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (NULL) ORDER BY CASE WHEN '''K	g5㠈ˁ ' THEN 0.8192276446633878 END COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN '''K	g5㠈ˁ ' THEN 0.8192276446633878 END COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (NULL) ORDER BY CASE WHEN '''K	g5㠈ˁ ' THEN 0.8192276446633878 END COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE WHEN '' THEN t0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN '' THEN t0.c0 END AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE WHEN '' THEN t0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN '' THEN t0.c0 END AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE WHEN '' THEN t0.c0 END AS TEXT));
SELECT * FROM t0, rt1, rt0 WHERE (rt0.c6) ORDER BY (((((NOT (rt0.c5)))AND(CASE WHEN rt0.c0 THEN '' WHEN rt0.c4 THEN NULL WHEN rt0.c5 THEN rt0.c2 WHEN rt1.c2 THEN NULL WHEN rt0.c0 THEN rt1.c1 END)))AND(((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ((rt0.c6) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (((((NOT (rt0.c5)))AND(CASE WHEN rt0.c0 THEN '' WHEN rt0.c4 THEN NULL WHEN rt0.c5 THEN rt0.c2 WHEN rt1.c2 THEN NULL WHEN rt0.c0 THEN rt1.c1 END)))AND(((rt0.c2) ISNULL))));
SELECT * FROM t0, rt1, rt0 WHERE (rt0.c6) ORDER BY (((((NOT (rt0.c5)))AND(CASE WHEN rt0.c0 THEN '' WHEN rt0.c4 THEN NULL WHEN rt0.c5 THEN rt0.c2 WHEN rt1.c2 THEN NULL WHEN rt0.c0 THEN rt1.c1 END)))AND(((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ((rt0.c6) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (((((NOT (rt0.c5)))AND(CASE WHEN rt0.c0 THEN '' WHEN rt0.c4 THEN NULL WHEN rt0.c5 THEN rt0.c2 WHEN rt1.c2 THEN NULL WHEN rt0.c0 THEN rt1.c1 END)))AND(((rt0.c2) ISNULL))));
SELECT * FROM t0, rt1, rt0 WHERE (rt0.c6) ORDER BY (((((NOT (rt0.c5)))AND(CASE WHEN rt0.c0 THEN '' WHEN rt0.c4 THEN NULL WHEN rt0.c5 THEN rt0.c2 WHEN rt1.c2 THEN NULL WHEN rt0.c0 THEN rt1.c1 END)))AND(((rt0.c2) ISNULL)));
SELECT COUNT(*) FROM rt1, t0 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c1) AND (t0.c0)) AS REAL)) ORDER BY ((((CASE t0.c0  WHEN rt1.c0 THEN rt1.c2 END)AND((('-684925846')%(t0.c0)))))AND(((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) BETWEEN (rt1.c1) AND (t0.c0)) AS REAL)) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((CASE t0.c0  WHEN rt1.c0 THEN rt1.c2 END)AND((('-684925846')%(t0.c0)))))AND(((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT COUNT(*) FROM rt1, t0 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c1) AND (t0.c0)) AS REAL)) ORDER BY ((((CASE t0.c0  WHEN rt1.c0 THEN rt1.c2 END)AND((('-684925846')%(t0.c0)))))AND(((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) BETWEEN (rt1.c1) AND (t0.c0)) AS REAL)) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((CASE t0.c0  WHEN rt1.c0 THEN rt1.c2 END)AND((('-684925846')%(t0.c0)))))AND(((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT COUNT(*) FROM rt1, t0 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c1) AND (t0.c0)) AS REAL)) ORDER BY ((((CASE t0.c0  WHEN rt1.c0 THEN rt1.c2 END)AND((('-684925846')%(t0.c0)))))AND(((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c1))));
SELECT ALL * FROM rt0, t0, rt1 WHERE (('' IN ())) ORDER BY ((CASE WHEN rt0.c5 THEN rt0.c1 ELSE t0.c0 END) NOTNULL)  NULLS FIRST, (~ (((rt0.c5)<=(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((CASE WHEN rt0.c5 THEN rt0.c1 ELSE t0.c0 END) NOTNULL)  NULLS FIRST, (~ (((rt0.c5)<=(t0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, rt1 WHERE (('' IN ())) ORDER BY ((CASE WHEN rt0.c5 THEN rt0.c1 ELSE t0.c0 END) NOTNULL)  NULLS FIRST, (~ (((rt0.c5)<=(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((CASE WHEN rt0.c5 THEN rt0.c1 ELSE t0.c0 END) NOTNULL)  NULLS FIRST, (~ (((rt0.c5)<=(t0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, rt1 WHERE (('' IN ())) ORDER BY ((CASE WHEN rt0.c5 THEN rt0.c1 ELSE t0.c0 END) NOTNULL)  NULLS FIRST, (~ (((rt0.c5)<=(t0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN t0 ON (+ ((rt0.c1 IN ()))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN t0 ON (+ ((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN t0 ON (+ ((rt0.c1 IN ()))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN t0 ON (+ ((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN t0 ON (+ ((rt0.c1 IN ()))) WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((((('')OR(CASE rt1.c0  WHEN rt1.c0 THEN x'5938' END)))OR(((rt0.c2) IS FALSE))))OR((('913065242')-(rt0.c4)))))OR(rt0.c5)));
SELECT SUM(count) FROM (SELECT ALL (((((((((('')OR(CASE rt1.c0  WHEN rt1.c0 THEN x'5938' END)))OR(((rt0.c2) IS FALSE))))OR((('913065242')-(rt0.c4)))))OR(rt0.c5))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((((('')OR(CASE rt1.c0  WHEN rt1.c0 THEN x'5938' END)))OR(((rt0.c2) IS FALSE))))OR((('913065242')-(rt0.c4)))))OR(rt0.c5)));
SELECT SUM(count) FROM (SELECT ALL (((((((((('')OR(CASE rt1.c0  WHEN rt1.c0 THEN x'5938' END)))OR(((rt0.c2) IS FALSE))))OR((('913065242')-(rt0.c4)))))OR(rt0.c5))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((((('')OR(CASE rt1.c0  WHEN rt1.c0 THEN x'5938' END)))OR(((rt0.c2) IS FALSE))))OR((('913065242')-(rt0.c4)))))OR(rt0.c5)));
SELECT * FROM rt1 WHERE ((((~ (rt1.c1)))|(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c1)))|(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((~ (rt1.c1)))|(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c1)))|(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((~ (rt1.c1)))|(rt1.c2 COLLATE NOCASE)));
SELECT * FROM t0, rt0 WHERE (x'a66c');
SELECT SUM(count) FROM (SELECT ALL ((x'a66c') IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (x'a66c');
SELECT SUM(count) FROM (SELECT ALL ((x'a66c') IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (x'a66c');
SELECT * FROM t0 CROSS JOIN rt1 ON (((t0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((((rt0.c1)AND(rt1.c2)))OR(0.5011922907275382))))) FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c6)AND(rt1.c2)))AND(rt0.c4)))AND(rt1.c2)))AND(rt1.c0)))OR(rt0.c3)))AND(t0.c0)))*(LENGTH(NULL))) WHERE (((((((rt1.c1)OR(rt0.c5)))OR(rt1.c1)))%(0.3697392216010291)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(rt0.c5)))OR(rt1.c1)))%(0.3697392216010291))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON (((t0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((((rt0.c1)AND(rt1.c2)))OR(0.5011922907275382))))) FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c6)AND(rt1.c2)))AND(rt0.c4)))AND(rt1.c2)))AND(rt1.c0)))OR(rt0.c3)))AND(t0.c0)))*(LENGTH(NULL))));
SELECT * FROM t0 CROSS JOIN rt1 ON (((t0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((((rt0.c1)AND(rt1.c2)))OR(0.5011922907275382))))) FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c6)AND(rt1.c2)))AND(rt0.c4)))AND(rt1.c2)))AND(rt1.c0)))OR(rt0.c3)))AND(t0.c0)))*(LENGTH(NULL))) WHERE (((((((rt1.c1)OR(rt0.c5)))OR(rt1.c1)))%(0.3697392216010291)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(rt0.c5)))OR(rt1.c1)))%(0.3697392216010291))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON (((t0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((((rt0.c1)AND(rt1.c2)))OR(0.5011922907275382))))) FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c6)AND(rt1.c2)))AND(rt0.c4)))AND(rt1.c2)))AND(rt1.c0)))OR(rt0.c3)))AND(t0.c0)))*(LENGTH(NULL))));
SELECT COUNT(*) FROM t0, rt0 WHERE (((x'6e4a')LIKE((- (rt0.c3))))) ORDER BY CASE WHEN ((((t0.c0)AND(rt0.c6)))OR(rt0.c3)) THEN (NOT (rt0.c2)) WHEN LTRIM(rt0.c4, rt0.c1) THEN CASE WHEN rt0.c2 THEN rt0.c3 END WHEN '1729683188' COLLATE NOCASE THEN ((rt0.c3)>=(rt0.c4)) ELSE CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 ELSE 1.216028905E9 END END ASC;
SELECT SUM(count) FROM (SELECT ((((x'6e4a')LIKE((- (rt0.c3))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN ((((t0.c0)AND(rt0.c6)))OR(rt0.c3)) THEN (NOT (rt0.c2)) WHEN LTRIM(rt0.c4, rt0.c1) THEN CASE WHEN rt0.c2 THEN rt0.c3 END WHEN '1729683188' COLLATE NOCASE THEN ((rt0.c3)>=(rt0.c4)) ELSE CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 ELSE 1.216028905E9 END END ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((x'6e4a')LIKE((- (rt0.c3))))) ORDER BY CASE WHEN ((((t0.c0)AND(rt0.c6)))OR(rt0.c3)) THEN (NOT (rt0.c2)) WHEN LTRIM(rt0.c4, rt0.c1) THEN CASE WHEN rt0.c2 THEN rt0.c3 END WHEN '1729683188' COLLATE NOCASE THEN ((rt0.c3)>=(rt0.c4)) ELSE CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 ELSE 1.216028905E9 END END ASC;
SELECT SUM(count) FROM (SELECT ((((x'6e4a')LIKE((- (rt0.c3))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN ((((t0.c0)AND(rt0.c6)))OR(rt0.c3)) THEN (NOT (rt0.c2)) WHEN LTRIM(rt0.c4, rt0.c1) THEN CASE WHEN rt0.c2 THEN rt0.c3 END WHEN '1729683188' COLLATE NOCASE THEN ((rt0.c3)>=(rt0.c4)) ELSE CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 ELSE 1.216028905E9 END END ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((x'6e4a')LIKE((- (rt0.c3))))) ORDER BY CASE WHEN ((((t0.c0)AND(rt0.c6)))OR(rt0.c3)) THEN (NOT (rt0.c2)) WHEN LTRIM(rt0.c4, rt0.c1) THEN CASE WHEN rt0.c2 THEN rt0.c3 END WHEN '1729683188' COLLATE NOCASE THEN ((rt0.c3)>=(rt0.c4)) ELSE CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 ELSE 1.216028905E9 END END ASC;
SELECT ALL * FROM rt1, t0 WHERE (COALESCE(DISTINCT t0.c0, (rt1.c0 IN ()), (NOT (rt1.c2)), ((rt1.c0) BETWEEN (t0.c0) AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT t0.c0, (rt1.c0 IN ()), (NOT (rt1.c2)), ((rt1.c0) BETWEEN (t0.c0) AND (rt1.c2)))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (COALESCE(DISTINCT t0.c0, (rt1.c0 IN ()), (NOT (rt1.c2)), ((rt1.c0) BETWEEN (t0.c0) AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT t0.c0, (rt1.c0 IN ()), (NOT (rt1.c2)), ((rt1.c0) BETWEEN (t0.c0) AND (rt1.c2)))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (COALESCE(DISTINCT t0.c0, (rt1.c0 IN ()), (NOT (rt1.c2)), ((rt1.c0) BETWEEN (t0.c0) AND (rt1.c2))));
SELECT * FROM rt1, rt0 WHERE ((((((rt1.c1))>((rt1.c0)))) BETWEEN ((rt0.c1 IN ())) AND ((~ (rt1.c1))))) ORDER BY ((CASE WHEN rt0.c5 THEN rt0.c6 ELSE rt0.c5 END) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1))>((rt1.c0)))) BETWEEN ((rt0.c1 IN ())) AND ((~ (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CASE WHEN rt0.c5 THEN rt0.c6 ELSE rt0.c5 END) IS TRUE)  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE ((((((rt1.c1))>((rt1.c0)))) BETWEEN ((rt0.c1 IN ())) AND ((~ (rt1.c1))))) ORDER BY ((CASE WHEN rt0.c5 THEN rt0.c6 ELSE rt0.c5 END) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1))>((rt1.c0)))) BETWEEN ((rt0.c1 IN ())) AND ((~ (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CASE WHEN rt0.c5 THEN rt0.c6 ELSE rt0.c5 END) IS TRUE)  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE ((((((rt1.c1))>((rt1.c0)))) BETWEEN ((rt0.c1 IN ())) AND ((~ (rt1.c1))))) ORDER BY ((CASE WHEN rt0.c5 THEN rt0.c6 ELSE rt0.c5 END) IS TRUE)  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c0)-(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)-(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c0)-(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)-(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c0)-(rt1.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (CASE rt0.c3 COLLATE BINARY  WHEN ((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)) THEN ((rt0.c2)<>(rt0.c1)) END) ORDER BY (- (x'')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c3 COLLATE BINARY  WHEN ((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)) THEN ((rt0.c2)!=(rt0.c1)) END) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (- (x'')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (CASE rt0.c3 COLLATE BINARY  WHEN ((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)) THEN ((rt0.c2)<>(rt0.c1)) END) ORDER BY (- (x'')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c3 COLLATE BINARY  WHEN ((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)) THEN ((rt0.c2)!=(rt0.c1)) END) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (- (x'')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (CASE rt0.c3 COLLATE BINARY  WHEN ((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)) THEN ((rt0.c2)<>(rt0.c1)) END) ORDER BY (- (x'')) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN (IFNULL(rt1.c2, rt1.c2)) AND (((('4)')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) ORDER BY (('.f~\n')/((NOT (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN (IFNULL(rt1.c2, rt1.c2)) AND (((('4)')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (('.f~\n')/((NOT (rt1.c2)))) ASC);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN (IFNULL(rt1.c2, rt1.c2)) AND (((('4)')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) ORDER BY (('.f~\n')/((NOT (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN (IFNULL(rt1.c2, rt1.c2)) AND (((('4)')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (('.f~\n')/((NOT (rt1.c2)))) ASC);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN (IFNULL(rt1.c2, rt1.c2)) AND (((('4)')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) ORDER BY (('.f~\n')/((NOT (rt1.c2)))) ASC;
SELECT * FROM t0 WHERE ((((((t0.c0))>(('x]')))) IS FALSE)) ORDER BY ((((t0.c0)<>(t0.c0))) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((NULL, NULL, t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))>(('x]')))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)<>(t0.c0))) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((NULL, NULL, t0.c0))))));
SELECT * FROM t0 WHERE ((((((t0.c0))>(('x]')))) IS FALSE)) ORDER BY ((((t0.c0)<>(t0.c0))) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((NULL, NULL, t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))>(('x]')))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)<>(t0.c0))) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((NULL, NULL, t0.c0))))));
SELECT * FROM t0 WHERE ((((((t0.c0))>(('x]')))) IS FALSE)) ORDER BY ((((t0.c0)<>(t0.c0))) BETWEEN (CAST(t0.c0 AS BLOB)) AND ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((NULL, NULL, t0.c0)))));
SELECT ALL * FROM t0, rt0 WHERE (CASE COALESCE(x'82db', rt0.c4, rt0.c2, rt0.c4)  WHEN rt0.c4 COLLATE RTRIM THEN ((rt0.c5)IS NOT(rt0.c5)) ELSE (+ (rt0.c5)) END);
SELECT SUM(count) FROM (SELECT ((CASE COALESCE(x'82db', rt0.c4, rt0.c2, rt0.c4)  WHEN rt0.c4 COLLATE RTRIM THEN ((rt0.c5)IS NOT(rt0.c5)) ELSE (+ (rt0.c5)) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE COALESCE(x'82db', rt0.c4, rt0.c2, rt0.c4)  WHEN rt0.c4 COLLATE RTRIM THEN ((rt0.c5)IS NOT(rt0.c5)) ELSE (+ (rt0.c5)) END);
SELECT SUM(count) FROM (SELECT ((CASE COALESCE(x'82db', rt0.c4, rt0.c2, rt0.c4)  WHEN rt0.c4 COLLATE RTRIM THEN ((rt0.c5)IS NOT(rt0.c5)) ELSE (+ (rt0.c5)) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE COALESCE(x'82db', rt0.c4, rt0.c2, rt0.c4)  WHEN rt0.c4 COLLATE RTRIM THEN ((rt0.c5)IS NOT(rt0.c5)) ELSE (+ (rt0.c5)) END);
SELECT * FROM rt1, t0, rt0 WHERE (rt0.c6) ORDER BY ((CASE rt0.c5  WHEN rt0.c2 THEN rt1.c0 END)&(CASE 'rDf'  WHEN rt0.c6 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c4 WHEN rt1.c1 THEN rt0.c4 ELSE rt0.c5 END));
SELECT SUM(count) FROM (SELECT ((rt0.c6) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((CASE rt0.c5  WHEN rt0.c2 THEN rt1.c0 END)&(CASE 'rDf'  WHEN rt0.c6 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c4 WHEN rt1.c1 THEN rt0.c4 ELSE rt0.c5 END)));
SELECT * FROM rt1, t0, rt0 WHERE (rt0.c6) ORDER BY ((CASE rt0.c5  WHEN rt0.c2 THEN rt1.c0 END)&(CASE 'rDf'  WHEN rt0.c6 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c4 WHEN rt1.c1 THEN rt0.c4 ELSE rt0.c5 END));
SELECT SUM(count) FROM (SELECT ((rt0.c6) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((CASE rt0.c5  WHEN rt0.c2 THEN rt1.c0 END)&(CASE 'rDf'  WHEN rt0.c6 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c4 WHEN rt1.c1 THEN rt0.c4 ELSE rt0.c5 END)));
SELECT * FROM rt1, t0, rt0 WHERE (rt0.c6) ORDER BY ((CASE rt0.c5  WHEN rt0.c2 THEN rt1.c0 END)&(CASE 'rDf'  WHEN rt0.c6 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c4 WHEN rt1.c1 THEN rt0.c4 ELSE rt0.c5 END));
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND((t0.c0 IN ()))))OR(CAST(t0.c0 AS REAL))))AND((~ (t0.c0)))))OR(t0.c0))) ORDER BY (NOT (0.3974310201776544)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND((t0.c0 IN ()))))OR(CAST(t0.c0 AS REAL))))AND((~ (t0.c0)))))OR(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY (NOT (0.3974310201776544)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND((t0.c0 IN ()))))OR(CAST(t0.c0 AS REAL))))AND((~ (t0.c0)))))OR(t0.c0))) ORDER BY (NOT (0.3974310201776544)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND((t0.c0 IN ()))))OR(CAST(t0.c0 AS REAL))))AND((~ (t0.c0)))))OR(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY (NOT (0.3974310201776544)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND((t0.c0 IN ()))))OR(CAST(t0.c0 AS REAL))))AND((~ (t0.c0)))))OR(t0.c0))) ORDER BY (NOT (0.3974310201776544)) COLLATE NOCASE;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ABS((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, 0.645888701978722)) AND ((t0.c0, t0.c0, t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ABS((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, 0.645888701978722)) AND ((t0.c0, t0.c0, t0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ABS((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, 0.645888701978722)) AND ((t0.c0, t0.c0, t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ABS((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, 0.645888701978722)) AND ((t0.c0, t0.c0, t0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ABS((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, 0.645888701978722)) AND ((t0.c0, t0.c0, t0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (json_valid(rt1.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((json_valid(rt1.c1 COLLATE RTRIM)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (json_valid(rt1.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((json_valid(rt1.c1 COLLATE RTRIM)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (json_valid(rt1.c1 COLLATE RTRIM));
SELECT COUNT(*) FROM rt1, t0 WHERE (((NULL COLLATE NOCASE) BETWEEN (CAST(rt1.c0 AS REAL)) AND ((((rt1.c2))<((t0.c0)))))) ORDER BY CAST(rt1.c1 COLLATE RTRIM AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE NOCASE) BETWEEN (CAST(rt1.c0 AS REAL)) AND ((((rt1.c2))<((t0.c0)))))) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(rt1.c1 COLLATE RTRIM AS INTEGER) ASC);
SELECT COUNT(*) FROM rt1, t0 WHERE (((NULL COLLATE NOCASE) BETWEEN (CAST(rt1.c0 AS REAL)) AND ((((rt1.c2))<((t0.c0)))))) ORDER BY CAST(rt1.c1 COLLATE RTRIM AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE NOCASE) BETWEEN (CAST(rt1.c0 AS REAL)) AND ((((rt1.c2))<((t0.c0)))))) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(rt1.c1 COLLATE RTRIM AS INTEGER) ASC);
SELECT COUNT(*) FROM rt1, t0 WHERE (((NULL COLLATE NOCASE) BETWEEN (CAST(rt1.c0 AS REAL)) AND ((((rt1.c2))<((t0.c0)))))) ORDER BY CAST(rt1.c1 COLLATE RTRIM AS INTEGER) ASC;
SELECT * FROM rt0, rt1, t0 WHERE (((((('535136987', rt0.c3, rt0.c6))>=((rt0.c0, t0.c0, rt0.c4)))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (HEX(DISTINCT t0.c0)))) ORDER BY ((((rt1.c1)LIKE('1664839172'))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('535136987', rt0.c3, rt0.c6))>=((rt0.c0, t0.c0, rt0.c4)))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (HEX(DISTINCT t0.c0)))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((rt1.c1)LIKE('1664839172'))) IS TRUE) DESC  NULLS LAST);
SELECT * FROM rt0, rt1, t0 WHERE (((((('535136987', rt0.c3, rt0.c6))>=((rt0.c0, t0.c0, rt0.c4)))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (HEX(DISTINCT t0.c0)))) ORDER BY ((((rt1.c1)LIKE('1664839172'))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('535136987', rt0.c3, rt0.c6))>=((rt0.c0, t0.c0, rt0.c4)))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (HEX(DISTINCT t0.c0)))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((rt1.c1)LIKE('1664839172'))) IS TRUE) DESC  NULLS LAST);
SELECT * FROM rt0, rt1, t0 WHERE (((((('535136987', rt0.c3, rt0.c6))>=((rt0.c0, t0.c0, rt0.c4)))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (HEX(DISTINCT t0.c0)))) ORDER BY ((((rt1.c1)LIKE('1664839172'))) IS TRUE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((((NULL)AND(rt0.c5)))OR(rt0.c2)) AS BLOB) FULL OUTER JOIN rt1 ON (NOT (rt0.c6 COLLATE NOCASE)) WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (t0.c0)))|((rt1.c1 IN (rt0.c6, rt0.c5))))) ORDER BY (((((((((((rt1.c0)AND(rt1.c0)))OR(rt0.c6)))OR(rt1.c0)))AND(rt1.c0))))>((((rt1.c1) NOT NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c1) AND (t0.c0)))|((rt1.c1 IN (rt0.c6, rt0.c5))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((((NULL)AND(rt0.c5)))OR(rt0.c2)) AS BLOB) FULL OUTER JOIN rt1 ON (NOT (rt0.c6 COLLATE NOCASE)) ORDER BY (((((((((((rt1.c0)AND(rt1.c0)))OR(rt0.c6)))OR(rt1.c0)))AND(rt1.c0))))>((((rt1.c1) NOT NULL))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((((NULL)AND(rt0.c5)))OR(rt0.c2)) AS BLOB) FULL OUTER JOIN rt1 ON (NOT (rt0.c6 COLLATE NOCASE)) WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (t0.c0)))|((rt1.c1 IN (rt0.c6, rt0.c5))))) ORDER BY (((((((((((rt1.c0)AND(rt1.c0)))OR(rt0.c6)))OR(rt1.c0)))AND(rt1.c0))))>((((rt1.c1) NOT NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c1) AND (t0.c0)))|((rt1.c1 IN (rt0.c6, rt0.c5))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((((NULL)AND(rt0.c5)))OR(rt0.c2)) AS BLOB) FULL OUTER JOIN rt1 ON (NOT (rt0.c6 COLLATE NOCASE)) ORDER BY (((((((((((rt1.c0)AND(rt1.c0)))OR(rt0.c6)))OR(rt1.c0)))AND(rt1.c0))))>((((rt1.c1) NOT NULL))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((((NULL)AND(rt0.c5)))OR(rt0.c2)) AS BLOB) FULL OUTER JOIN rt1 ON (NOT (rt0.c6 COLLATE NOCASE)) WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (t0.c0)))|((rt1.c1 IN (rt0.c6, rt0.c5))))) ORDER BY (((((((((((rt1.c0)AND(rt1.c0)))OR(rt0.c6)))OR(rt1.c0)))AND(rt1.c0))))>((((rt1.c1) NOT NULL))))  NULLS FIRST;
SELECT * FROM rt0, t0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('-1114340803');
SELECT SUM(count) FROM (SELECT ALL (('-1114340803') IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('-1114340803');
SELECT SUM(count) FROM (SELECT ALL (('-1114340803') IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('-1114340803');
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((rt0.c6))==((-3.54848517E8))))) AND ((((NULL) NOT NULL))))) ORDER BY ((((((((rt0.c5 COLLATE RTRIM)OR(rt0.c0 COLLATE NOCASE)))OR(UPPER(rt0.c0))))AND(((rt0.c2) IS FALSE))))OR(((((rt0.c0)OR(rt0.c3)))OR(rt0.c5)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((((rt0.c6))==((-3.54848517E8))))) AND ((((NULL) NOT NULL))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c5 COLLATE RTRIM)OR(rt0.c0 COLLATE NOCASE)))OR(UPPER(rt0.c0))))AND(((rt0.c2) IS FALSE))))OR(((((rt0.c0)OR(rt0.c3)))OR(rt0.c5)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((rt0.c6))==((-3.54848517E8))))) AND ((((NULL) NOT NULL))))) ORDER BY ((((((((rt0.c5 COLLATE RTRIM)OR(rt0.c0 COLLATE NOCASE)))OR(UPPER(rt0.c0))))AND(((rt0.c2) IS FALSE))))OR(((((rt0.c0)OR(rt0.c3)))OR(rt0.c5)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((((rt0.c6))==((-3.54848517E8))))) AND ((((NULL) NOT NULL))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c5 COLLATE RTRIM)OR(rt0.c0 COLLATE NOCASE)))OR(UPPER(rt0.c0))))AND(((rt0.c2) IS FALSE))))OR(((((rt0.c0)OR(rt0.c3)))OR(rt0.c5)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((rt0.c6))==((-3.54848517E8))))) AND ((((NULL) NOT NULL))))) ORDER BY ((((((((rt0.c5 COLLATE RTRIM)OR(rt0.c0 COLLATE NOCASE)))OR(UPPER(rt0.c0))))AND(((rt0.c2) IS FALSE))))OR(((((rt0.c0)OR(rt0.c3)))OR(rt0.c5)))) ASC  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE (((((rt0.c1)>=(rt0.c2)))&((rt0.c3 IN ())))) ORDER BY CAST(NULL AS REAL), ((rt0.c3 COLLATE NOCASE) IS FALSE) ASC  NULLS FIRST, CAST(rt0.c4 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(rt0.c2)))&((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(NULL AS REAL), ((rt0.c3 COLLATE NOCASE) IS FALSE) ASC  NULLS FIRST, CAST(rt0.c4 AS BLOB));
SELECT * FROM rt0, rt1 WHERE (((((rt0.c1)>=(rt0.c2)))&((rt0.c3 IN ())))) ORDER BY CAST(NULL AS REAL), ((rt0.c3 COLLATE NOCASE) IS FALSE) ASC  NULLS FIRST, CAST(rt0.c4 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(rt0.c2)))&((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(NULL AS REAL), ((rt0.c3 COLLATE NOCASE) IS FALSE) ASC  NULLS FIRST, CAST(rt0.c4 AS BLOB));
SELECT * FROM rt0, rt1 WHERE (((((rt0.c1)>=(rt0.c2)))&((rt0.c3 IN ())))) ORDER BY CAST(NULL AS REAL), ((rt0.c3 COLLATE NOCASE) IS FALSE) ASC  NULLS FIRST, CAST(rt0.c4 AS BLOB);
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((((((((rt1.c1)OR(rt0.c6)))AND(rt1.c0)))AND(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((((rt0.c0, 0.9175149288770724, rt0.c5))>((rt0.c2, rt1.c0, x'')))) AND (rt0.c6)) WHERE (TRIM((((rt1.c0, rt1.c1, rt0.c1))=((rt1.c1, rt1.c2, rt0.c6))))) ORDER BY ((CASE rt0.c4  WHEN rt0.c3 THEN x'' END) BETWEEN (((rt0.c1)!=(rt0.c5))) AND (((rt0.c6) ISNULL))) DESC  NULLS FIRST, (((rt1.c1)) BETWEEN ((CAST(rt0.c2 AS TEXT))) AND ((((rt0.c3) NOTNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((rt1.c0, rt1.c1, rt0.c1))==((rt1.c1, rt1.c2, rt0.c6))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((((((((rt1.c1)OR(rt0.c6)))AND(rt1.c0)))AND(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((((rt0.c0, 0.9175149288770724, rt0.c5))>((rt0.c2, rt1.c0, x'')))) AND (rt0.c6)) ORDER BY ((CASE rt0.c4  WHEN rt0.c3 THEN x'' END) BETWEEN (((rt0.c1)!=(rt0.c5))) AND (((rt0.c6) ISNULL))) DESC  NULLS FIRST, (((rt1.c1)) BETWEEN ((CAST(rt0.c2 AS TEXT))) AND ((((rt0.c3) NOTNULL))))  NULLS LAST);
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((((((((rt1.c1)OR(rt0.c6)))AND(rt1.c0)))AND(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((((rt0.c0, 0.9175149288770724, rt0.c5))>((rt0.c2, rt1.c0, x'')))) AND (rt0.c6)) WHERE (TRIM((((rt1.c0, rt1.c1, rt0.c1))=((rt1.c1, rt1.c2, rt0.c6))))) ORDER BY ((CASE rt0.c4  WHEN rt0.c3 THEN x'' END) BETWEEN (((rt0.c1)!=(rt0.c5))) AND (((rt0.c6) ISNULL))) DESC  NULLS FIRST, (((rt1.c1)) BETWEEN ((CAST(rt0.c2 AS TEXT))) AND ((((rt0.c3) NOTNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((rt1.c0, rt1.c1, rt0.c1))==((rt1.c1, rt1.c2, rt0.c6))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((((((((rt1.c1)OR(rt0.c6)))AND(rt1.c0)))AND(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((((rt0.c0, 0.9175149288770724, rt0.c5))>((rt0.c2, rt1.c0, x'')))) AND (rt0.c6)) ORDER BY ((CASE rt0.c4  WHEN rt0.c3 THEN x'' END) BETWEEN (((rt0.c1)!=(rt0.c5))) AND (((rt0.c6) ISNULL))) DESC  NULLS FIRST, (((rt1.c1)) BETWEEN ((CAST(rt0.c2 AS TEXT))) AND ((((rt0.c3) NOTNULL))))  NULLS LAST);
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((((((((rt1.c1)OR(rt0.c6)))AND(rt1.c0)))AND(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((((rt0.c0, 0.9175149288770724, rt0.c5))>((rt0.c2, rt1.c0, x'')))) AND (rt0.c6)) WHERE (TRIM((((rt1.c0, rt1.c1, rt0.c1))=((rt1.c1, rt1.c2, rt0.c6))))) ORDER BY ((CASE rt0.c4  WHEN rt0.c3 THEN x'' END) BETWEEN (((rt0.c1)!=(rt0.c5))) AND (((rt0.c6) ISNULL))) DESC  NULLS FIRST, (((rt1.c1)) BETWEEN ((CAST(rt0.c2 AS TEXT))) AND ((((rt0.c3) NOTNULL))))  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE (INSTR((((rt0.c5, rt1.c2, '')) NOT BETWEEN ((rt1.c1, rt0.c2, rt0.c2)) AND (('XoJᷥvM', rt0.c1, rt0.c3))), (((rt1.c0))<=((rt0.c6))))) ORDER BY (((rt1.c1)) NOT BETWEEN (((((x'')) BETWEEN ((rt0.c4)) AND ((rt0.c6))))) AND (((NOT (rt0.c2)))))  NULLS FIRST, ((IFNULL(rt1.c0, rt0.c3))==(('' IN ()))) DESC, ((rt0.c2 COLLATE RTRIM) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((INSTR((((rt0.c5, rt1.c2, '')) NOT BETWEEN ((rt1.c1, rt0.c2, rt0.c2)) AND (('XoJᷥvM', rt0.c1, rt0.c3))), (((rt1.c0))<=((rt0.c6))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c1)) NOT BETWEEN (((((x'')) BETWEEN ((rt0.c4)) AND ((rt0.c6))))) AND (((NOT (rt0.c2)))))  NULLS FIRST, ((IFNULL(rt1.c0, rt0.c3))=(('' IN ()))) DESC, ((rt0.c2 COLLATE RTRIM) ISNULL) ASC);
SELECT ALL * FROM rt0, rt1 WHERE (INSTR((((rt0.c5, rt1.c2, '')) NOT BETWEEN ((rt1.c1, rt0.c2, rt0.c2)) AND (('XoJᷥvM', rt0.c1, rt0.c3))), (((rt1.c0))<=((rt0.c6))))) ORDER BY (((rt1.c1)) NOT BETWEEN (((((x'')) BETWEEN ((rt0.c4)) AND ((rt0.c6))))) AND (((NOT (rt0.c2)))))  NULLS FIRST, ((IFNULL(rt1.c0, rt0.c3))==(('' IN ()))) DESC, ((rt0.c2 COLLATE RTRIM) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((INSTR((((rt0.c5, rt1.c2, '')) NOT BETWEEN ((rt1.c1, rt0.c2, rt0.c2)) AND (('XoJᷥvM', rt0.c1, rt0.c3))), (((rt1.c0))<=((rt0.c6))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c1)) NOT BETWEEN (((((x'')) BETWEEN ((rt0.c4)) AND ((rt0.c6))))) AND (((NOT (rt0.c2)))))  NULLS FIRST, ((IFNULL(rt1.c0, rt0.c3))=(('' IN ()))) DESC, ((rt0.c2 COLLATE RTRIM) ISNULL) ASC);
SELECT ALL * FROM rt0, rt1 WHERE (INSTR((((rt0.c5, rt1.c2, '')) NOT BETWEEN ((rt1.c1, rt0.c2, rt0.c2)) AND (('XoJᷥvM', rt0.c1, rt0.c3))), (((rt1.c0))<=((rt0.c6))))) ORDER BY (((rt1.c1)) NOT BETWEEN (((((x'')) BETWEEN ((rt0.c4)) AND ((rt0.c6))))) AND (((NOT (rt0.c2)))))  NULLS FIRST, ((IFNULL(rt1.c0, rt0.c3))==(('' IN ()))) DESC, ((rt0.c2 COLLATE RTRIM) ISNULL) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c6) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<(MIN(rt0.c6, rt0.c5))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c6) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<(MIN(rt0.c6, rt0.c5)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c6) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<(MIN(rt0.c6, rt0.c5))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c6) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<(MIN(rt0.c6, rt0.c5)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c6) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<(MIN(rt0.c6, rt0.c5))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)AND(t0.c0)))OR(t0.c0)) AS BLOB)) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ISNULL)  NULLS LAST, ((t0.c0 COLLATE NOCASE) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c0)AND(t0.c0)))OR(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ISNULL)  NULLS LAST, ((t0.c0 COLLATE NOCASE) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)AND(t0.c0)))OR(t0.c0)) AS BLOB)) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ISNULL)  NULLS LAST, ((t0.c0 COLLATE NOCASE) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c0)AND(t0.c0)))OR(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ISNULL)  NULLS LAST, ((t0.c0 COLLATE NOCASE) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)AND(t0.c0)))OR(t0.c0)) AS BLOB)) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ISNULL)  NULLS LAST, ((t0.c0 COLLATE NOCASE) NOT NULL) DESC;
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN rt1 ON ((CAST(t0.c0 AS BLOB))*(((rt1.c1)%(t0.c0)))) WHERE (CAST(0.16608866581509796 AS REAL)) ORDER BY CAST((rt1.c1 IN (rt0.c3)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.16608866581509796 AS REAL)) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN rt1 ON ((CAST(t0.c0 AS BLOB))*(((rt1.c1)%(t0.c0)))) ORDER BY CAST((rt1.c1 IN (rt0.c3)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN rt1 ON ((CAST(t0.c0 AS BLOB))*(((rt1.c1)%(t0.c0)))) WHERE (CAST(0.16608866581509796 AS REAL)) ORDER BY CAST((rt1.c1 IN (rt0.c3)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.16608866581509796 AS REAL)) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN rt1 ON ((CAST(t0.c0 AS BLOB))*(((rt1.c1)%(t0.c0)))) ORDER BY CAST((rt1.c1 IN (rt0.c3)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN rt1 ON ((CAST(t0.c0 AS BLOB))*(((rt1.c1)%(t0.c0)))) WHERE (CAST(0.16608866581509796 AS REAL)) ORDER BY CAST((rt1.c1 IN (rt0.c3)) AS REAL)  NULLS LAST;
SELECT * FROM rt0, t0, rt1 WHERE (((((rt0.c5)OR(rt0.c2)))AND(rt0.c5)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)OR(rt0.c2)))AND(rt0.c5)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (((((rt0.c5)OR(rt0.c2)))AND(rt0.c5)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)OR(rt0.c2)))AND(rt0.c5)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (((((rt0.c5)OR(rt0.c2)))AND(rt0.c5)) COLLATE RTRIM);
SELECT * FROM t0 WHERE (((((t0.c0)IS(t0.c0))) ISNULL)) ORDER BY CAST('0.914292355549316' AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY CAST('0.914292355549316' AS BLOB));
SELECT * FROM t0 WHERE (((((t0.c0)IS(t0.c0))) ISNULL)) ORDER BY CAST('0.914292355549316' AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY CAST('0.914292355549316' AS BLOB));
SELECT * FROM t0 WHERE (((((t0.c0)IS(t0.c0))) ISNULL)) ORDER BY CAST('0.914292355549316' AS BLOB);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (CASE rt0.c5  WHEN rt0.c6 THEN rt0.c1 END IN ()) WHERE (UPPER((~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((~ (rt0.c1)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (CASE rt0.c5  WHEN rt0.c6 THEN rt0.c1 END IN ()));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (CASE rt0.c5  WHEN rt0.c6 THEN rt0.c1 END IN ()) WHERE (UPPER((~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((~ (rt0.c1)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (CASE rt0.c5  WHEN rt0.c6 THEN rt0.c1 END IN ()));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (CASE rt0.c5  WHEN rt0.c6 THEN rt0.c1 END IN ()) WHERE (UPPER((~ (rt0.c1))));
SELECT ALL * FROM rt0 WHERE ((((1216028905)<(rt0.c0)) IN (((rt0.c1) ISNULL), rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL (((((1216028905)<(rt0.c0)) IN (((rt0.c1) ISNULL), rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((1216028905)<(rt0.c0)) IN (((rt0.c1) ISNULL), rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL (((((1216028905)<(rt0.c0)) IN (((rt0.c1) ISNULL), rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((1216028905)<(rt0.c0)) IN (((rt0.c1) ISNULL), rt0.c4)));
SELECT * FROM rt0, t0 WHERE ((~ (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((~ (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((~ (rt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (LENGTH(((rt0.c6) NOTNULL))) ORDER BY ((LIKELY(rt0.c6))-(rt0.c3 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((LENGTH(((rt0.c6) NOTNULL))) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELY(rt0.c6))-(rt0.c3 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM rt0 WHERE (LENGTH(((rt0.c6) NOTNULL))) ORDER BY ((LIKELY(rt0.c6))-(rt0.c3 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((LENGTH(((rt0.c6) NOTNULL))) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELY(rt0.c6))-(rt0.c3 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM rt0 WHERE (LENGTH(((rt0.c6) NOTNULL))) ORDER BY ((LIKELY(rt0.c6))-(rt0.c3 COLLATE NOCASE)) ASC;
SELECT * FROM rt1, rt0 WHERE (CASE json_patch(rt0.c2, rt1.c1)  WHEN CAST(rt0.c1 AS TEXT) THEN (NOT (rt0.c6)) END) ORDER BY (((((rt0.c1)>(rt0.c3))))<>((((rt0.c1) IS TRUE)))) DESC  NULLS LAST, (((rt0.c4)) BETWEEN (((rt0.c0 IN (rt0.c0)))) AND ((rt0.c6)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE json_patch(rt0.c2, rt1.c1)  WHEN CAST(rt0.c1 AS TEXT) THEN (NOT (rt0.c6)) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt0.c1)>(rt0.c3))))!=((((rt0.c1) IS TRUE)))) DESC  NULLS LAST, (((rt0.c4)) BETWEEN (((rt0.c0 IN (rt0.c0)))) AND ((rt0.c6)))  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (CASE json_patch(rt0.c2, rt1.c1)  WHEN CAST(rt0.c1 AS TEXT) THEN (NOT (rt0.c6)) END) ORDER BY (((((rt0.c1)>(rt0.c3))))<>((((rt0.c1) IS TRUE)))) DESC  NULLS LAST, (((rt0.c4)) BETWEEN (((rt0.c0 IN (rt0.c0)))) AND ((rt0.c6)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE json_patch(rt0.c2, rt1.c1)  WHEN CAST(rt0.c1 AS TEXT) THEN (NOT (rt0.c6)) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt0.c1)>(rt0.c3))))!=((((rt0.c1) IS TRUE)))) DESC  NULLS LAST, (((rt0.c4)) BETWEEN (((rt0.c0 IN (rt0.c0)))) AND ((rt0.c6)))  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (CASE json_patch(rt0.c2, rt1.c1)  WHEN CAST(rt0.c1 AS TEXT) THEN (NOT (rt0.c6)) END) ORDER BY (((((rt0.c1)>(rt0.c3))))<>((((rt0.c1) IS TRUE)))) DESC  NULLS LAST, (((rt0.c4)) BETWEEN (((rt0.c0 IN (rt0.c0)))) AND ((rt0.c6)))  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE (CAST(rt0.c6 COLLATE RTRIM AS NUMERIC)) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c6 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c4 END AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c6 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c6 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c4 END AS BLOB) ASC);
SELECT * FROM rt0, rt1 WHERE (CAST(rt0.c6 COLLATE RTRIM AS NUMERIC)) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c6 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c4 END AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c6 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c6 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c4 END AS BLOB) ASC);
SELECT * FROM rt0, rt1 WHERE (CAST(rt0.c6 COLLATE RTRIM AS NUMERIC)) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c6 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c4 END AS BLOB) ASC;
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i30, rt1 WHERE ((- (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1))) IS TRUE)  as count FROM rt0 INDEXED BY i30, rt1);
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i30, rt1 WHERE ((- (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1))) IS TRUE)  as count FROM rt0 INDEXED BY i30, rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)*(rt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)*(rt1.c1))) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)*(rt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)*(rt1.c1))) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)*(rt1.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((CASE WHEN rt1.c1 THEN rt0.c1 ELSE '98389693' END)>(rt0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c2)>=(t0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN rt0.c1 ELSE '98389693' END)>(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((rt0.c2)>=(t0.c0))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((CASE WHEN rt1.c1 THEN rt0.c1 ELSE '98389693' END)>(rt0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c2)>=(t0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN rt0.c1 ELSE '98389693' END)>(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((rt0.c2)>=(t0.c0))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((CASE WHEN rt1.c1 THEN rt0.c1 ELSE '98389693' END)>(rt0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c2)>=(t0.c0))) NOTNULL) ASC;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN ())) IS FALSE));
SELECT * FROM rt1, rt0 WHERE (((x'') NOTNULL)) ORDER BY (rt0.c6 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (rt0.c6 IN ())  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (((x'') NOTNULL)) ORDER BY (rt0.c6 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (rt0.c6 IN ())  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (((x'') NOTNULL)) ORDER BY (rt0.c6 IN ())  NULLS LAST;
SELECT * FROM rt0 CROSS JOIN t0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c6))) ISNULL) WHERE (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c6)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c6)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c6))) ISNULL));
SELECT * FROM rt0 CROSS JOIN t0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c6))) ISNULL) WHERE (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c6)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c6)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c6))) ISNULL));
SELECT * FROM rt0 CROSS JOIN t0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c6))) ISNULL) WHERE (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c6)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (LIKE(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3)), CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3)), CAST(rt0.c0 AS REAL))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (LIKE(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3)), CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3)), CAST(rt0.c0 AS REAL))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (LIKE(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3)), CAST(rt0.c0 AS REAL)));
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c4)OR(rt0.c5)))<<((~ (rt0.c1))))) ORDER BY ((rt1.c2 COLLATE BINARY) BETWEEN (NULL COLLATE BINARY) AND (((((rt1.c1)OR('780441847')))OR(rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)OR(rt0.c5)))<<((~ (rt0.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt1.c2 COLLATE BINARY) BETWEEN (NULL COLLATE BINARY) AND (((((rt1.c1)OR('780441847')))OR(rt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c4)OR(rt0.c5)))<<((~ (rt0.c1))))) ORDER BY ((rt1.c2 COLLATE BINARY) BETWEEN (NULL COLLATE BINARY) AND (((((rt1.c1)OR('780441847')))OR(rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)OR(rt0.c5)))<<((~ (rt0.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt1.c2 COLLATE BINARY) BETWEEN (NULL COLLATE BINARY) AND (((((rt1.c1)OR('780441847')))OR(rt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c4)OR(rt0.c5)))<<((~ (rt0.c1))))) ORDER BY ((rt1.c2 COLLATE BINARY) BETWEEN (NULL COLLATE BINARY) AND (((((rt1.c1)OR('780441847')))OR(rt1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, rt0, t0 WHERE (((((((rt0.c3)AND(rt0.c6)))AND(rt0.c3)))<<(((rt1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)AND(rt0.c6)))AND(rt0.c3)))<<(((rt1.c2) NOT NULL)))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE (((((((rt0.c3)AND(rt0.c6)))AND(rt0.c3)))<<(((rt1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)AND(rt0.c6)))AND(rt0.c3)))<<(((rt1.c2) NOT NULL)))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE (((((((rt0.c3)AND(rt0.c6)))AND(rt0.c3)))<<(((rt1.c2) NOT NULL))));
SELECT * FROM rt0, t0 WHERE (CAST(rt0.c4 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 AS INTEGER)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST(rt0.c4 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 AS INTEGER)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST(rt0.c4 AS INTEGER));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((('0Wm') NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c4)OR(rt0.c3))) AND (CAST(t0.c0 AS TEXT))) WHERE (((((rt0.c1)LIKE(x'')))>(CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(x'')))>(CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((('0Wm') NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c4)OR(rt0.c3))) AND (CAST(t0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((('0Wm') NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c4)OR(rt0.c3))) AND (CAST(t0.c0 AS TEXT))) WHERE (((((rt0.c1)LIKE(x'')))>(CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(x'')))>(CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((('0Wm') NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c4)OR(rt0.c3))) AND (CAST(t0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((('0Wm') NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c4)OR(rt0.c3))) AND (CAST(t0.c0 AS TEXT))) WHERE (((((rt0.c1)LIKE(x'')))>(CAST(rt0.c3 AS REAL))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c2)))==(0xfffffffffcd8d211)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c2)))==(0Xfffffffffcd8d211))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c2)))==(0xfffffffffcd8d211)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c2)))==(0Xfffffffffcd8d211))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c2)))==(0xfffffffffcd8d211)));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((rt1.c0)>=(rt1.c0)))) AND (((rt1.c2 IN ()))))) ORDER BY (((((NOT (rt1.c2)))AND(x'')))AND(0.8098260609726952)) DESC, ((('-3ᦤG-㷣i', CAST(rt1.c2 AS REAL), 'y!'))>=((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)), (rt1.c0 IN ()), 0x3d044168))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((((rt1.c0)>=(rt1.c0)))) AND (((rt1.c2 IN ()))))) IS TRUE)  as count FROM rt1 ORDER BY (((((NOT (rt1.c2)))AND(x'')))AND(0.8098260609726952)) DESC, ((('-3ᦤG-㷣i', CAST(rt1.c2 AS REAL), 'y!'))>=((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)), (rt1.c0 IN ()), 0x3d044168))) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((rt1.c0)>=(rt1.c0)))) AND (((rt1.c2 IN ()))))) ORDER BY (((((NOT (rt1.c2)))AND(x'')))AND(0.8098260609726952)) DESC, ((('-3ᦤG-㷣i', CAST(rt1.c2 AS REAL), 'y!'))>=((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)), (rt1.c0 IN ()), 0x3d044168))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((((rt1.c0)>=(rt1.c0)))) AND (((rt1.c2 IN ()))))) IS TRUE)  as count FROM rt1 ORDER BY (((((NOT (rt1.c2)))AND(x'')))AND(0.8098260609726952)) DESC, ((('-3ᦤG-㷣i', CAST(rt1.c2 AS REAL), 'y!'))>=((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)), (rt1.c0 IN ()), 0x3d044168))) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((rt1.c0)>=(rt1.c0)))) AND (((rt1.c2 IN ()))))) ORDER BY (((((NOT (rt1.c2)))AND(x'')))AND(0.8098260609726952)) DESC, ((('-3ᦤG-㷣i', CAST(rt1.c2 AS REAL), 'y!'))>=((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)), (rt1.c0 IN ()), 0x3d044168))) DESC;
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (x'7515');
SELECT SUM(count) FROM (SELECT ((x'7515') IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (x'7515');
SELECT SUM(count) FROM (SELECT ((x'7515') IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (x'7515');
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED, t0 WHERE (rt0.c2);
SELECT * FROM rt0 CROSS JOIN t0 ON NULLIF(((rt0.c5)/(rt1.c1)), NULL) FULL OUTER JOIN rt1 ON highlight('-641572866', rt0.c6, SUBSTR(rt0.c0, rt0.c4), ((rt1.c0)>>(rt0.c4))) WHERE (((rt1.c2)!=(((((((((rt0.c0)AND(rt1.c2)))OR(rt0.c6)))OR(rt1.c1)))AND(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)<>(((((((((rt0.c0)AND(rt1.c2)))OR(rt0.c6)))OR(rt1.c1)))AND(rt0.c5))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON NULLIF(((rt0.c5)/(rt1.c1)), NULL) FULL OUTER JOIN rt1 ON highlight('-641572866', rt0.c6, SUBSTR(rt0.c0, rt0.c4), ((rt1.c0)>>(rt0.c4))));
SELECT * FROM rt0 CROSS JOIN t0 ON NULLIF(((rt0.c5)/(rt1.c1)), NULL) FULL OUTER JOIN rt1 ON highlight('-641572866', rt0.c6, SUBSTR(rt0.c0, rt0.c4), ((rt1.c0)>>(rt0.c4))) WHERE (((rt1.c2)!=(((((((((rt0.c0)AND(rt1.c2)))OR(rt0.c6)))OR(rt1.c1)))AND(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)<>(((((((((rt0.c0)AND(rt1.c2)))OR(rt0.c6)))OR(rt1.c1)))AND(rt0.c5))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON NULLIF(((rt0.c5)/(rt1.c1)), NULL) FULL OUTER JOIN rt1 ON highlight('-641572866', rt0.c6, SUBSTR(rt0.c0, rt0.c4), ((rt1.c0)>>(rt0.c4))));
SELECT * FROM rt1, rt0 WHERE (((((x'4fda307b5edc')AND(((rt0.c6) NOT BETWEEN (x'1a3b') AND (rt1.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END))) ORDER BY CASE WHEN ((rt0.c3)>=(rt0.c3)) THEN ((rt0.c3) NOTNULL) ELSE CAST(rt0.c4 AS REAL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'4fda307b5edc')AND(((rt0.c6) NOT BETWEEN (x'1a3b') AND (rt1.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN ((rt0.c3)>=(rt0.c3)) THEN ((rt0.c3) NOTNULL) ELSE CAST(rt0.c4 AS REAL) END ASC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (((((x'4fda307b5edc')AND(((rt0.c6) NOT BETWEEN (x'1a3b') AND (rt1.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END))) ORDER BY CASE WHEN ((rt0.c3)>=(rt0.c3)) THEN ((rt0.c3) NOTNULL) ELSE CAST(rt0.c4 AS REAL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'4fda307b5edc')AND(((rt0.c6) NOT BETWEEN (x'1a3b') AND (rt1.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN ((rt0.c3)>=(rt0.c3)) THEN ((rt0.c3) NOTNULL) ELSE CAST(rt0.c4 AS REAL) END ASC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (((((x'4fda307b5edc')AND(((rt0.c6) NOT BETWEEN (x'1a3b') AND (rt1.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END))) ORDER BY CASE WHEN ((rt0.c3)>=(rt0.c3)) THEN ((rt0.c3) NOTNULL) ELSE CAST(rt0.c4 AS REAL) END ASC  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (((((CAST(rt0.c6 AS REAL))OR('65P淓a8')))AND(x''))) ORDER BY x'' COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c6 AS REAL))OR('65P淓a8')))AND(x''))) IS TRUE)  as count FROM t0, rt0 ORDER BY x'' COLLATE RTRIM ASC);
SELECT * FROM t0, rt0 WHERE (((((CAST(rt0.c6 AS REAL))OR('65P淓a8')))AND(x''))) ORDER BY x'' COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c6 AS REAL))OR('65P淓a8')))AND(x''))) IS TRUE)  as count FROM t0, rt0 ORDER BY x'' COLLATE RTRIM ASC);
SELECT * FROM t0, rt0 WHERE (((((CAST(rt0.c6 AS REAL))OR('65P淓a8')))AND(x''))) ORDER BY x'' COLLATE RTRIM ASC;
SELECT * FROM rt0 WHERE ((((+ (rt0.c3)))IS NOT(((rt0.c2) NOTNULL)))) ORDER BY CAST(((rt0.c4)*(rt0.c2)) AS NUMERIC), ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c6)))AND(((rt0.c6) BETWEEN (rt0.c6) AND (0.10355338250455937)))) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3)))IS NOT(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4)*(rt0.c2)) AS NUMERIC), ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c6)))AND(((rt0.c6) BETWEEN (rt0.c6) AND (0.10355338250455937)))) ASC);
SELECT * FROM rt0 WHERE ((((+ (rt0.c3)))IS NOT(((rt0.c2) NOTNULL)))) ORDER BY CAST(((rt0.c4)*(rt0.c2)) AS NUMERIC), ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c6)))AND(((rt0.c6) BETWEEN (rt0.c6) AND (0.10355338250455937)))) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3)))IS NOT(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4)*(rt0.c2)) AS NUMERIC), ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c6)))AND(((rt0.c6) BETWEEN (rt0.c6) AND (0.10355338250455937)))) ASC);
SELECT * FROM rt0 WHERE ((((+ (rt0.c3)))IS NOT(((rt0.c2) NOTNULL)))) ORDER BY CAST(((rt0.c4)*(rt0.c2)) AS NUMERIC), ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c6)))AND(((rt0.c6) BETWEEN (rt0.c6) AND (0.10355338250455937)))) ASC;
SELECT * FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ())) ORDER BY '301214474' ASC;
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0 ORDER BY '301214474' ASC);
SELECT * FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ())) ORDER BY '301214474' ASC;
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0 ORDER BY '301214474' ASC);
SELECT * FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ())) ORDER BY '301214474' ASC;
SELECT * FROM rt1, rt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c2))<=((rt0.c5))))) AND ((rt1.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((((rt0.c2))<=((rt0.c5))))) AND ((rt1.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c2))<=((rt0.c5))))) AND ((rt1.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((((rt0.c2))<=((rt0.c5))))) AND ((rt1.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c2))<=((rt0.c5))))) AND ((rt1.c2 COLLATE RTRIM))));
SELECT * FROM rt0 WHERE ((CAST('￿\ĨJWj[' AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST('￿\ĨJWj[' AS TEXT) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((CAST('￿\ĨJWj[' AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST('￿\ĨJWj[' AS TEXT) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((CAST('￿\ĨJWj[' AS TEXT) IN ()));
SELECT * FROM t0, rt0, rt1 WHERE (json_array_length(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END)) ORDER BY (((((t0.c0))=((rt0.c1))))IS NOT((- (x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array_length(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END)) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (((((t0.c0))=((rt0.c1))))IS NOT((- (x''))))  NULLS FIRST);
SELECT * FROM t0, rt0, rt1 WHERE (json_array_length(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END)) ORDER BY (((((t0.c0))=((rt0.c1))))IS NOT((- (x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array_length(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END)) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (((((t0.c0))=((rt0.c1))))IS NOT((- (x''))))  NULLS FIRST);
SELECT * FROM t0, rt0, rt1 WHERE (json_array_length(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END)) ORDER BY (((((t0.c0))=((rt0.c1))))IS NOT((- (x''))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((UNLIKELY(DISTINCT '1729683188'))AND(0.9065039353456102)))AND(((rt1.c2) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((rt1.c1 COLLATE RTRIM) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((UNLIKELY(DISTINCT '1729683188'))AND(0.9065039353456102)))AND(((rt1.c2) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((rt1.c1 COLLATE RTRIM) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((UNLIKELY(DISTINCT '1729683188'))AND(0.9065039353456102)))AND(((rt1.c2) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((rt1.c1 COLLATE RTRIM) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((UNLIKELY(DISTINCT '1729683188'))AND(0.9065039353456102)))AND(((rt1.c2) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((rt1.c1 COLLATE RTRIM) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((UNLIKELY(DISTINCT '1729683188'))AND(0.9065039353456102)))AND(((rt1.c2) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((rt1.c1 COLLATE RTRIM) NOTNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN (((rt0.c3 IN (rt0.c2, rt1.c2)))) AND (((rt1.c2 IN (rt0.c6, rt0.c5))))) WHERE (rt0.c6) ORDER BY (((((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))AND(rt0.c4)))AND(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 END, ABS(DISTINCT rt1.c1)))<((IFNULL(DISTINCT -1.941321779E9, rt0.c4), (rt0.c1 IN ()), (rt0.c6 IN (t0.c0, t0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c6) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN (((rt0.c3 IN (rt0.c2, rt1.c2)))) AND (((rt1.c2 IN (rt0.c6, rt0.c5))))) ORDER BY (((((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))AND(rt0.c4)))AND(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 END, ABS(DISTINCT rt1.c1)))<((IFNULL(DISTINCT -1.941321779E9, rt0.c4), (rt0.c1 IN ()), (rt0.c6 IN (t0.c0, t0.c0))))) ASC);
SELECT COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN (((rt0.c3 IN (rt0.c2, rt1.c2)))) AND (((rt1.c2 IN (rt0.c6, rt0.c5))))) WHERE (rt0.c6) ORDER BY (((((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))AND(rt0.c4)))AND(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 END, ABS(DISTINCT rt1.c1)))<((IFNULL(DISTINCT -1.941321779E9, rt0.c4), (rt0.c1 IN ()), (rt0.c6 IN (t0.c0, t0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c6) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN (((rt0.c3 IN (rt0.c2, rt1.c2)))) AND (((rt1.c2 IN (rt0.c6, rt0.c5))))) ORDER BY (((((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))AND(rt0.c4)))AND(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 END, ABS(DISTINCT rt1.c1)))<((IFNULL(DISTINCT -1.941321779E9, rt0.c4), (rt0.c1 IN ()), (rt0.c6 IN (t0.c0, t0.c0))))) ASC);
SELECT COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN (((rt0.c3 IN (rt0.c2, rt1.c2)))) AND (((rt1.c2 IN (rt0.c6, rt0.c5))))) WHERE (rt0.c6) ORDER BY (((((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))AND(rt0.c4)))AND(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 END, ABS(DISTINCT rt1.c1)))<((IFNULL(DISTINCT -1.941321779E9, rt0.c4), (rt0.c1 IN ()), (rt0.c6 IN (t0.c0, t0.c0))))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (CAST(0.2670373634299752 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.2670373634299752 AS REAL)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (CAST(0.2670373634299752 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.2670373634299752 AS REAL)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (CAST(0.2670373634299752 AS REAL));
SELECT * FROM t0 WHERE (((SQLITE_VERSION()) IS TRUE)) ORDER BY (- (('-718253060' IN ()))), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((- (t0.c0))) AND (((t0.c0)%(t0.c0)))), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))GLOB((- (t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION()) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (- (('-718253060' IN ()))), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((- (t0.c0))) AND (((t0.c0)%(t0.c0)))), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))GLOB((- (t0.c0)))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((SQLITE_VERSION()) IS TRUE)) ORDER BY (- (('-718253060' IN ()))), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((- (t0.c0))) AND (((t0.c0)%(t0.c0)))), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))GLOB((- (t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION()) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (- (('-718253060' IN ()))), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((- (t0.c0))) AND (((t0.c0)%(t0.c0)))), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))GLOB((- (t0.c0)))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((SQLITE_VERSION()) IS TRUE)) ORDER BY (- (('-718253060' IN ()))), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((- (t0.c0))) AND (((t0.c0)%(t0.c0)))), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))GLOB((- (t0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((CASE rt1.c2  WHEN rt0.c4 THEN t0.c0 END)OR(((((rt0.c5)OR(rt1.c0)))OR(rt0.c3)))))AND(UNLIKELY(rt0.c6))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt1.c2  WHEN rt0.c4 THEN t0.c0 END)OR(((((rt0.c5)OR(rt1.c0)))OR(rt0.c3)))))AND(UNLIKELY(rt0.c6)))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((CASE rt1.c2  WHEN rt0.c4 THEN t0.c0 END)OR(((((rt0.c5)OR(rt1.c0)))OR(rt0.c3)))))AND(UNLIKELY(rt0.c6))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt1.c2  WHEN rt0.c4 THEN t0.c0 END)OR(((((rt0.c5)OR(rt1.c0)))OR(rt0.c3)))))AND(UNLIKELY(rt0.c6)))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((CASE rt1.c2  WHEN rt0.c4 THEN t0.c0 END)OR(((((rt0.c5)OR(rt1.c0)))OR(rt0.c3)))))AND(UNLIKELY(rt0.c6))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c1 COLLATE BINARY)AND(rt1.c0)))AND(CASE WHEN rt1.c1 THEN 0.6879978370795016 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1 COLLATE BINARY)AND(rt1.c0)))AND(CASE WHEN rt1.c1 THEN 0.6879978370795016 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1 COLLATE BINARY)AND(rt1.c0)))AND(CASE WHEN rt1.c1 THEN 0.6879978370795016 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1 COLLATE BINARY)AND(rt1.c0)))AND(CASE WHEN rt1.c1 THEN 0.6879978370795016 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1 COLLATE BINARY)AND(rt1.c0)))AND(CASE WHEN rt1.c1 THEN 0.6879978370795016 ELSE rt1.c0 END)));
SELECT COUNT(*) FROM rt0 WHERE ((~ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CHANGES()) ORDER BY (rt1.c0 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt1, t0 ORDER BY (rt1.c0 IN ()) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CHANGES()) ORDER BY (rt1.c0 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt1, t0 ORDER BY (rt1.c0 IN ()) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CHANGES()) ORDER BY (rt1.c0 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (-7.72255852E8) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((-7.72255852E8) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS BLOB)) NOTNULL));
SELECT ALL * FROM rt0 WHERE (-7.72255852E8) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((-7.72255852E8) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS BLOB)) NOTNULL));
SELECT ALL * FROM rt0 WHERE (-7.72255852E8) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOTNULL);
SELECT ALL * FROM rt1, t0, rt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY CAST(((t0.c0)&(rt0.c6)) AS NUMERIC) DESC, (NOT (((rt0.c3) IS FALSE)))  NULLS FIRST, ((TYPEOF(DISTINCT rt0.c3)) BETWEEN (((rt0.c4) BETWEEN (0X7d0c2bb5) AND (t0.c0))) AND (CAST(rt0.c6 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY CAST(((t0.c0)&(rt0.c6)) AS NUMERIC) DESC, (NOT (((rt0.c3) IS FALSE)))  NULLS FIRST, ((TYPEOF(DISTINCT rt0.c3)) BETWEEN (((rt0.c4) BETWEEN (0x7d0c2bb5) AND (t0.c0))) AND (CAST(rt0.c6 AS INTEGER))) DESC);
SELECT ALL * FROM rt1, t0, rt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY CAST(((t0.c0)&(rt0.c6)) AS NUMERIC) DESC, (NOT (((rt0.c3) IS FALSE)))  NULLS FIRST, ((TYPEOF(DISTINCT rt0.c3)) BETWEEN (((rt0.c4) BETWEEN (0X7d0c2bb5) AND (t0.c0))) AND (CAST(rt0.c6 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY CAST(((t0.c0)&(rt0.c6)) AS NUMERIC) DESC, (NOT (((rt0.c3) IS FALSE)))  NULLS FIRST, ((TYPEOF(DISTINCT rt0.c3)) BETWEEN (((rt0.c4) BETWEEN (0x7d0c2bb5) AND (t0.c0))) AND (CAST(rt0.c6 AS INTEGER))) DESC);
SELECT ALL * FROM rt1, t0, rt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY CAST(((t0.c0)&(rt0.c6)) AS NUMERIC) DESC, (NOT (((rt0.c3) IS FALSE)))  NULLS FIRST, ((TYPEOF(DISTINCT rt0.c3)) BETWEEN (((rt0.c4) BETWEEN (0X7d0c2bb5) AND (t0.c0))) AND (CAST(rt0.c6 AS INTEGER))) DESC;
SELECT * FROM rt1 WHERE (((((rt1.c0 IN ()), (rt1.c1 IN (rt1.c0)), ((rt1.c1)IS NOT(rt1.c2))))<((((rt1.c2) ISNULL), ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)), (rt1.c1 IN ()))))) ORDER BY COALESCE((rt1.c2 IN ()), ((rt1.c1)>=(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0 IN ()), (rt1.c1 IN (rt1.c0)), ((rt1.c1)IS NOT(rt1.c2))))<((((rt1.c2) ISNULL), ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)), (rt1.c1 IN ()))))) IS TRUE)  as count FROM rt1 ORDER BY COALESCE((rt1.c2 IN ()), ((rt1.c1)>=(rt1.c1))));
SELECT * FROM rt1 WHERE (((((rt1.c0 IN ()), (rt1.c1 IN (rt1.c0)), ((rt1.c1)IS NOT(rt1.c2))))<((((rt1.c2) ISNULL), ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)), (rt1.c1 IN ()))))) ORDER BY COALESCE((rt1.c2 IN ()), ((rt1.c1)>=(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0 IN ()), (rt1.c1 IN (rt1.c0)), ((rt1.c1)IS NOT(rt1.c2))))<((((rt1.c2) ISNULL), ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)), (rt1.c1 IN ()))))) IS TRUE)  as count FROM rt1 ORDER BY COALESCE((rt1.c2 IN ()), ((rt1.c1)>=(rt1.c1))));
SELECT * FROM rt1 WHERE (((((rt1.c0 IN ()), (rt1.c1 IN (rt1.c0)), ((rt1.c1)IS NOT(rt1.c2))))<((((rt1.c2) ISNULL), ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)), (rt1.c1 IN ()))))) ORDER BY COALESCE((rt1.c2 IN ()), ((rt1.c1)>=(rt1.c1)));
SELECT ALL * FROM rt0, rt1 WHERE (((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 END)<=((~ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 END)<=((~ (rt1.c2))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 END)<=((~ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 END)<=((~ (rt1.c2))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 END)<=((~ (rt1.c2)))));
