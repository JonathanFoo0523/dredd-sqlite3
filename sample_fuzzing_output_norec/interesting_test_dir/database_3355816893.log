-- Time: 2024/06/09 19:32:58
-- Database: database93
-- Database version: 3.40.0
-- seed value: 3355816893
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4, +c5 BLOB ); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 0ms;
PRAGMA main.soft_heap_limit; -- 0ms;
REINDEX; -- 0ms;
PRAGMA temp.auto_vacuum = FULL; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x''), (x'76ae'), (0.03522707229676869); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, prefix = 51, ); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('EᖡP'), (x''), (NULL); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x'6a60'); -- 1ms;
UPDATE OR REPLACE vt0 SET c0=x'0f03'; -- 0ms;
CREATE TEMPORARY VIEW v0(c0) AS SELECT DISTINCT CASE WHEN (- (rt0.c5)) THEN ((vt1.c0) BETWEEN (rt0.c2) AND (vt0.c0)) END FROM vt1, rt0, vt0 WHERE ((((~ (0.03522707229676869))) IS TRUE)); -- 0ms;
UPDATE OR REPLACE rt0 SET c3=1e500, c5=0.757569109531256, c5=0.5093136988261241 WHERE json_valid(((rt0.c0) NOT NULL)); -- 0ms;
PRAGMA short_column_names; -- 1ms;
PRAGMA temp.cache_spill; -- 0ms;
PRAGMA temp.cache_size; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL); -- 8ms;
INSERT OR REPLACE INTO rt0(c4, c2) VALUES (-1072158262, NULL), ('?ONnKSy', x'855b'), ('''6#', 1.673654039E9); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'1c79'), (0.05154836667473217), (x'c80c'); -- 1ms;
PRAGMA main.incremental_vacuum; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='' WHERE (NULL IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-936700511 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-663547150 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1890194213 -663547150 sz=-936700511 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY('1890194213') COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=195656663 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN '''!EZA篗' END)GLOB(((((((((943911718)OR(0.06031810817944072)))OR(NULL)))OR(0.39508024830767297)))OR(x'4487')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '602174909 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN '1e500' THEN x'd9d7' END IN (((x'')<<(0.8832460658315899)), ((NULL) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5813129572010126 COLLATE NOCASE) BETWEEN (LIKELIHOOD('', 0.385941871800734)) AND ((((NULL)) NOT BETWEEN (('3')) AND (('-663547150'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=943911718 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'10ca' IN ()))AND(CAST('195656663' AS NUMERIC))))OR((('')>(-1.072158262E9)))))OR((0.8001677410751777 IN ()))))OR(((((1890194213)AND(x'')))OR(-1873030474)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (LTRIM(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1611447251 0 sz=998551551'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', ' sz=-1873030474 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=602174909'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.03522707229676869)) NOT BETWEEN ((NULL)) AND ((-6.6354715E8))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0.6419694378263896 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.05154836667473217)AND('-1288385651'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '32119893 -904383393'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=393836161 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '2 sz=959146241'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1612309651 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1072158262 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') NOT NULL)  WHEN CASE WHEN '' THEN 0.9761647125551224 ELSE '3l]Z' END THEN json_type(x'17c9') ELSE ((0xfffffffffb2f794a) IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1796579932 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'58ab6615') NOT BETWEEN (((x'')|(NULL))) AND ((((x'')) NOT BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object(json(x'877f'), (('0.5813129572010126')AND(0.981227325386763)), ((-143474480) BETWEEN (0.40207959140538496) AND ('-1139709334')), x''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST('943911718' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'b46d' COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '1246055913 2 sz=-940234923 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 0.981227325386763  WHEN 0Xffffffff9ff3442d THEN 0.16602848274863646 WHEN 0Xffffffffa84a1c47 THEN 1.246055913E9 WHEN '-143474480' THEN -143474480 END AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT (NOT (x''))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', ' sz=764322451'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('837692699')))|(CAST(0Xffffffffaa698deb AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<(x''))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'')-('Ku')) THEN (0.3853221563775593 IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, -57713320, NULL)) NOT BETWEEN (('' COLLATE BINARY, (((-9.36700511E8))<=((0.07210682312179995))), x'')) AND (((((x''))>=(('0.39508024830767297'))), ((x'3497')>=(0.3656109905734397)), CASE NULL  WHEN '!TI3i' THEN x'd4e1' ELSE '-498004375' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', ' sz=-1139709334 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1873030474 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.3853221563775593 THEN NULL WHEN 0xffffffffa07ab49b THEN '32119893' WHEN x'' THEN '-1611447251' ELSE 0.5933174775430591 END) BETWEEN ((((0.8473282864092274, '1<-RR皁A', '1796579932'))>=((NULL, NULL, x'3f1c')))) AND ((((('A!')OR(x'')))AND('-1288385651')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((-1139709334))<((0.20655008816612164))) THEN LTRIM(NULL, NULL) WHEN CASE NULL  WHEN '-953529548' THEN 0.8473282864092274 END THEN (~ (NULL)) WHEN ((NULL) BETWEEN ('붰1{}') AND (NULL)) THEN (('-1435922965')>(0.5753118238993943)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((load_extension(x'', NULL))%((((0.9400907107325369)) NOT BETWEEN ((NULL)) AND ((9.98551551E8))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('80')IS NOT('')))GLOB(((0.7171962679962994) NOT BETWEEN (x'') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1467009715 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-882960890 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) NOTNULL)  WHEN -1288385651 THEN ((x'') NOT BETWEEN (821594032) AND (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-80774838 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (x'8e62755c')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-498004375' COLLATE NOCASE)/((+ (x'12a4')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', '-16033779 sz=195656663 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-837949908 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('393836161') IS FALSE)) BETWEEN ((('488598762') NOTNULL)) AND (CASE -4.98004375E8  WHEN 0.04220663680995784 THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', '2 2 sz=-239462880 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1788188698 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL))OR(1921527943 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 1931895675 sz=264956857 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=-2085467635 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-531751272'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-14601371 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=-1238493143 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN x'' THEN NULL ELSE '1826177146' END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1288385651 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')GLOB('1826177146')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '2X}k'  WHEN '1246055913' THEN NULL ELSE NULL END) BETWEEN (NULL) AND (NULLIF('C+Y(', '-904383393'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1511063859'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.5117441193749448)OR('')))AND('')))AND(((394912599)<<('-494490443')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1602571109'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1788188698 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0x5a110133) BETWEEN ('-498004375') AND (0.33199512128268616)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')AND('#9v[I{I6騊')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '764322451'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '4 sz=1577901802 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1931895675) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-1435922965 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1884382817 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object(((NULL) BETWEEN (x'') AND ('195541743')), ((0.6476139352583601) NOT BETWEEN (NULL) AND (NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'aaf3'))) BETWEEN ((NOT (2.64956857E8))) AND ((NOT (x'')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('-87587568') AND (x'1735')))*(((NULL)%(0.17278734967763965)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 1467009715 sz=400405073 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) NOT BETWEEN (CAST(1948983296 AS BLOB)) AND ((((('cmuzTc!n')OR('0.17278734967763965')))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(643789665 AS TEXT) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-140366567 -940234923 sz=1246055913 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-184003832 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=213347432 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-2085467635 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((('-1873030474')AND(0.5813129572010126)))AND(NULL))  WHEN (((NULL)) NOT BETWEEN ((NULL)) AND ((x'43cd'))) THEN CAST('tRp~q&᱇' AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-1288385651') NOT BETWEEN (-57713320) AND ('-880495299')))OR((('3') BETWEEN (-299231661) AND (0.6951785453338344)))))OR(((NULL) IS TRUE))))OR((x'10d6' IN (0X7c795588)))))OR((((0x20813bad))!=((0.16703572234529196))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '186492330 0 346534096 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=821594032 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', ' sz=9971428'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1467009715 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1600902354 1796579932'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '-498004375 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME(((x'04cc') ISNULL), (((''))!=((NULL))), NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('959146241')OR(x'')))OR(x''))) NOT BETWEEN (LIKELY('-1726316143')) AND (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (NULL) AND (0xffffffffd58e183d)))AND(((('')) BETWEEN ((x'')) AND ((0Xee27982))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5455823403672273 IN (x'')))%(((('1577901802', NULL, 0x6b15a25c)) NOT BETWEEN ((x'', 0.4680332246823352, '''*')) AND (('-1817923255', x'1501', x'8692'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '' THEN CAST('1740116183' AS REAL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.43947865223785043 IN ()))OR(LOWER('-1808227769'))))AND(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=393836161 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1399268775 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '-945538296 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'255a')) NOT BETWEEN (('-1056050176')) AND (('')))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=821594032 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (3.94912599E8))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2088326536 sz=424734904'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (x'76b8' IN ()) THEN CASE WHEN NULL THEN 0.8053923463167846 END ELSE CASE '-299231661'  WHEN '0.8832460658315899' THEN x'dd305ff1' ELSE '0.03522707229676869' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=532625412 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=495374440 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1675610508 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=693573442 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0.061316355466286 END) BETWEEN (((((0.989713491518199)AND('424734904')))AND(''))) AND ((('-940234923') BETWEEN (-1.4347448E8) AND (0.1582325622606986)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN x'' THEN 0.7652099737802481 END THEN '' END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1921527943'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '841540380 -1238493143 sz=-1505035196 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')>=(x''))))>(((('BK/_ihb') BETWEEN ('943911718') AND (0xffffffffa511d814))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')OR(NULL)))OR(x'')))AND(-364534610)))AND('-1532285404')))OR(CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7379889516167996 IN ())) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-140366567 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('195656663')AND('1171526359')))OR(x'')))OR(x'')))OR(x'')))<>(((x'3d283e48')*(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -217892467 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '186492330 sz=-1873030474 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2mM&') IS FALSE)) BETWEEN (x'') AND (((x'ce40') BETWEEN (0.35792180857523004) AND ('?v''?UMh')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LOWER(0xfffffffffb2f794a)  WHEN (+ (-1.808227769E9)) THEN ABS('''*') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', ' sz=1990741850 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((((NULL)AND(x'')))AND(0xffffffffcb49db20)), ((0xf5e9c8e) IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-140366567 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 6ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-882960890 sz=-299231661 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '' COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5296828282074678) BETWEEN ('㓗\n') AND (x'')))*(((0.0744523479546162)IS('-1090771031')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)GLOB('R_Q88H!rN')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('249723266')OR(0.16602848274863646))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X30f887b0, 0.05969087358803504, x'')) BETWEEN (('1012641858', NULL, 998551551)) AND ((0.989713491518199, 0x2603f276, 0.9835701846909157))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'6fd4') NOT BETWEEN ('-1600902354') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN x'' THEN -1.056050176E9 END)AND((x'' IN ()))))OR(((0x668ac95b) NOT BETWEEN (0.20655008816612164) AND ('7GᨅU')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1042101521 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1537964779'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '1012641858'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1857677898 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-530421767 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (ABS(x'') IN (CAST(x'' AS REAL), (NOT (9971428.0)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0X265f7361)=(0.989713491518199)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.23667185030267446)>=((~ (x'baec')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')==('-371710018')))||(((((x'6c17')AND(x'')))OR(x'ef08f25d')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)/(1535587301)))&((('-494490443') BETWEEN (NULL) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-743941143 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-405471413 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 828178758 sz=268325936 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-360668823 sz=714771075'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(0.11892388900797113 AS REAL))AND((((((((('')AND(-1160064324)))AND(1830641041)))AND(NULL)))OR(NULL)))))AND((('#9v[i{i6騊') NOT BETWEEN ('-1138737535') AND (0.45250280728713477)))))AND('trp~q&᱇' COLLATE BINARY)))OR(CASE WHEN NULL THEN -120048841 ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('+o-') NOT NULL) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL))GLOB(x'cf018a98')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 -953529548 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-217892467 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(x'' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-2082092429'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN 0.7357528774297902 THEN NULL WHEN '-364534610' THEN '693573442' WHEN NULL THEN 0Xffffffffa1c0e31c END)<<((((x'')) NOT BETWEEN ((1990741850)) AND ((6.93573442E8))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '2 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1808227769 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', '-57713320'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((1929965128)>>(0Xffffffff93e6dd4e)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=837692699 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1948983296'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1346789827 1399268775'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', ' sz=-1288385651'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN '-1662569775' THEN x'0fb0c108' END)AND(LIKELIHOOD('0.5813129572010126', 0.49055607502806087))))AND(((0.2795934695574729)<<('0.06031810817944072')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension((('-1288385651')>('195541743')), (- (NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-140366567')) NOT BETWEEN (((((('-p')OR(0.30257398194644447)))AND('䨍7A+')))) AND ((((((0.47089339380388373)OR(NULL)))OR(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (x'' IN (NULL))  WHEN ((NULL)*(-1069246675)) THEN ((x'')AND('')) WHEN STRFTIME(1562643978, 0.5177299926396808, -1.525557228E9, 0.9636752362063236, 0.8962031336114127) THEN ((((0.9318443820259729)OR(0.1858694538717327)))OR('t>5cvp')) WHEN 0.1356959415432688 THEN CASE -877888884  WHEN '' THEN '-1238493143' WHEN 0.342648602943862 THEN '' WHEN 0.9612049016645601 THEN '-882960890' END ELSE 0.7838129033413841 END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('jc' IN (((1.95656663E8) IS FALSE))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X27b8a48e IN ()))OR(((((x'ef6d')AND(0.39508024830767297)))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=959146241 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=393836161 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1239287874 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'e3e7') NOT NULL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1947012469 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN ())  WHEN ('' IN ()) THEN ((NULL)%(NULL)) ELSE (((x''))>=(('-1738973647'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '506565341 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1748511709 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE NOCASE COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((3.2119893E7) IS TRUE))AND(((0xfffffffff772c0d0)GLOB(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1473035125 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'4bc3' COLLATE RTRIM) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=-301528743 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1890828691' COLLATE BINARY))>=(((((('1577901802')AND('393836161')))OR(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT TRIM(DISTINCT '')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1077464946'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1705485605 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-1238493143 1913415481 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1602571109 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(-1382469527 AS NUMERIC) THEN x'' WHEN ((((x'')AND('\n3')))OR(-1085439806)) THEN (NOT (NULL)) WHEN CASE WHEN NULL THEN '-880495299' WHEN 0xffffffffc80d1a22 THEN 'z4' WHEN x'' THEN NULL ELSE x'' END THEN (((NULL, NULL, NULL, x'', 0.33147292417784513))>=((NULL, NULL, x'', '2X}k', 0.03605152592356653))) ELSE ((x'1a29') NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1740116183')<>(x'')))AND((('-611391204')IS NOT('A!')))))OR(((-934942139)GLOB(0.40592735815917225)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '213347432 sz=-1011081503 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('0.33147292417784513')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0x3cae597 AS NUMERIC) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '1517483462 sz=-2049252745'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-1675610508 -798935849 sz=-1181339016 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM('X', NULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '-904383393 0 sz=-1884382817 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', '-1423732200 2134848134 sz=-1611447251 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('636777891')>(0.7346390627428785))  WHEN ((((NULL)OR('-1712535345')))AND(0.2819437876592715)) THEN LIKELY(x'') ELSE ((0.3478448038408032)IS(0.31166087467147696)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((json_object(x'9be2', 204283421, NULL, x''))AND(((0.9705946654284358)-('')))))AND(((x'')OR(0.28257396196537643)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((((((0.45250280728713477)OR('V%')))OR('0.7652099737802481')))OR(NULL)))OR(0X4fd714ca)))OR('-1e500')))OR(x'')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')AND(0.07510249089309251)))OR(NULL)))>=(((NULL) ISNULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-789018473 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-57713320 1437821569'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-531751272 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(DISTINCT 945604722)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN (x'') AND (x'')) IN (1358022383, ((((0.29513952313158465)OR(NULL)))OR('-1738489189')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') BETWEEN (0.31123344598551983) AND (0.9755978460066926)) IN ()); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LOWER('-498004375') THEN ((x'8d02') BETWEEN (NULL) AND (x'c5b0')) ELSE (('0.05154836667473217')AND('2X}K')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN (-7.98935849E8) AND (0.029720079782591724)) IN ((((x'', '?ONnKSy', NULL)) BETWEEN ((0x4a1257e3, 'R_Q88H!rN', '0.16602848274863646')) AND ((NULL, NULL, ''))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=1790281514'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'X'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL, NULL, '-1494216834'))==((-1288385651, NULL, x'01f5'))))OR(CASE WHEN 0.9129728249967051 THEN NULL END)))OR(((('195541743')) BETWEEN ((0.35792180857523004)) AND (('1650450024'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1796579932 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-691585528 sz=-192359507 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 50556670 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1545329475 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE -1.84003832E8  WHEN '' THEN x'' ELSE 319408181 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1429905029'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=32119893 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=312711222'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1001763322 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((1443726668)LIKE('''6#')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.47089339380388373)) NOT BETWEEN (('+똿')) AND ((0x51b143e6))) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-904383393'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1847264783 -1254001248 sz=2062081496'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '2 sz=1136838034 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(CAST(0X265f7361 AS REAL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0xffffffffffffffff AS NUMERIC) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN '' END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=9223372036854775807'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(((0.11892388900797113)<(''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.7335153048923538 THEN NULL END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=764322451 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1600902354'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-9223372036854775808'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', ' sz=369119779 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((((((('eC')AND('-887276290')))OR(1.577901802E9)))OR('')))OR('-16033779')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(('-837949908' IN ()), NULL COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1466592886'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=-1730697005 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1635613536 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-143474480'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-494490443'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-703251337 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '73046732 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN NULL THEN 0Xffffffffd1c88b9a WHEN 1138167441 THEN x'' WHEN x'' THEN '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '998551551 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '4 sz=1637257975 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((x'')OR(x'be84')))OR(x'')) THEN (~ (NULL)) ELSE CAST(NULL AS BLOB) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT 0.1203551928149853 COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-243046276 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=480657028 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '637792886 sz=1540136811 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1399268775', x'', 0.05198125660746156)) NOT BETWEEN ((((('-498004375'))>=(('	p15q!X'))), (+ (-1.884382817E9)), (0.20719638426800802 IN ()))) AND ((((0.953937618605294)>=(NULL)), NULL COLLATE BINARY, (~ ('637792886'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=889494096 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Kp') NOT BETWEEN (0xffffffffd2395e02) AND (0.6992519563644621))) NOT BETWEEN (((NULL) NOTNULL)) AND (PRINTF(0Xfffffffff8ce643d))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1 sz=1467009715'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-961870535 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '-1856136694 0 sz=1869747468 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'16b7') IS TRUE) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1997513745 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '154110116 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=1990741850 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-448283216 -341441063 sz=1065984605'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1098431004') BETWEEN (x'') AND (NULL)))AND('-360015652')))AND((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(x''))GLOB((('') NOT BETWEEN (NULL) AND (0.8093254553976241)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=1171526359 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1890194213'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1792484337 sz=195541743 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (('᱇' COLLATE RTRIM)) AND (('/3nw'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1600902354 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x''  WHEN 0.17262437149830312 THEN x'' ELSE NULL END AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('0Z')=('Udhus(*QP')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0xffffffffec126e96) BETWEEN ('8k!o69Q!u') AND (5.45340333E8)) THEN (~ (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-2121499545 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', NULL, (((0.724574173816079, 0Xffffffffcb84b53d, x''))<=((NULL, 0.521821930695367, '')))))>=((((x'9125') BETWEEN (x'') AND (0.588196820513822)), ((((x'')OR(NULL)))AND(NULL)), CAST(NULL AS BLOB)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', ' sz=363176918 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=545340333 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6170066952317733, x'36ff', '0.28257396196537643')) NOT BETWEEN ((x'', ((0.4375828586873085) NOT BETWEEN (-1684343398) AND ('')), CASE WHEN '-884352224' THEN 'tq' WHEN x'' THEN 0X588a8721 WHEN 0.25650440226180926 THEN x'' END)) AND ((CAST('' AS INTEGER), 1.921527943E9, (((NULL)) NOT BETWEEN ((0.5592425232719354)) AND (('1012641858')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=575018491 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE NOCASE THEN ']솔' COLLATE NOCASE ELSE (('Bcytw%') IS TRUE) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1760530901 sz=-1825619324'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.9209267234282736, '-880495299')) BETWEEN (((((('-880495299')AND(NULL)))OR('-1525557228')), CAST(0X7a4a58cf AS REAL), ((NULL)*(0.8919130143377428)))) AND (((('-531751272') BETWEEN ('}d[~0}') AND (x'')), ((0.9179036827716625) NOTNULL), ((('1890194213', '998551551', 0.9209267234282736)) NOT BETWEEN (('喈](*I.', '1027667535', '-837949908')) AND ((NULL, '0.04220663680995784', NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CHAR('1925050811'))-((('0.05969087358803504')&(0X1ea1c55)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2017120131 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1713666884 sz=-1886948014 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-2067043357 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((MIN(NULL, '1796579932'))AND(NULL)))AND((1.95541743E8 IN (x'66e5')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1238493143 sz=-1434285529 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-239462880 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (NULL) AND ('1990741850'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.14572345163589118; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', ' sz=-792830935 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)IS NOT('1604695047')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=391186909'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2001558863 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' sz=1666132485 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-1072158262' AS INTEGER) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-531751272 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)IS NOT('')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', '0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 -105022504 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(DISTINCT 0.06850754802566583)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X66d42d1)OR(((NULL)>('o\rcዲD|.')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, x'', ''))<((x'', 0.3995538412196503, 0.8350672856427569)))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6038501487571092 COLLATE RTRIM)==(CAST(0.24933465337487448 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1557033162 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1467009715 sz=0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((~ ('525561041')))AND(((((((((0.3662966403226261)AND(NULL)))OR(NULL)))OR(NULL)))OR(NULL)))))OR((~ ('1826177146')))))OR((((1.95541743E8, '393836161', -4.98004375E8))>((-834735977, 0.508600722453497, 0xba97bd7))))))OR(((-6.6354715E8) BETWEEN (x'c759') AND (0.7747239523510255)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0xffffffff9bd8246c  WHEN 0.8919130143377428 THEN '897571969' ELSE NULL END)AND((- ('-1775397417')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('195656663')AND(0.5576317566241416)))OR(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '1713801883' THEN '' END)>>(((NULL)<(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (-2085467635 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0xffffffff8bb858b8)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1399268775 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT ('643789665'))))>=((CHANGES()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=300959273 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2132320007 2137396960 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=346534096'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((('1214394043')AND('A!')))OR(0X5ca7f4e1)) THEN (((('278880763')OR(x'')))AND(x'')) WHEN (~ (0xffffffffa2b11774)) THEN (('693573442')||(0.9591291224999846)) WHEN (((0xffffffff915d9a0a)) BETWEEN (('')) AND ((0X786a7701))) THEN CASE NULL  WHEN '' THEN 'YnBxJ[' ELSE 0.7020964099204513 END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN MIN('-936700511', 0.972746301028018) ELSE ('~Wn!<' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1675610508 0 sz=170784545 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1467009715 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-114557559 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL((((NULL)) NOT BETWEEN ((1577416766)) AND (('0.6476139352583601'))), ((0.057568388950733684) BETWEEN ('-87587568') AND ('9223372036854775807'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'f637') IS TRUE))<((- (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(((x'') IS FALSE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1132612095 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 -1525476046 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-483990121'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2024409842'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 125113305 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.9996758720570167) NOTNULL) THEN x'' COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1673973396 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=602174909'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '627017527 sz=2090617534'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('0.6419694378263896')<(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -373149515 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '213347432 -712528594 sz=668535447'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '488598762 sz=-974171552 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1934192042 sz=1674233951 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-712107971 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1408573862 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-299231661 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2131055991 -44444562 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1038491869 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 996915841 sz=2129388629 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', '0 sz=393836161 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-458830163 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'')))<('' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1877715871 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=1461991598'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((0.4715259583639161))>((x'eb88'))))OR(((((x'b61d')AND(NULL)))AND(x'71fb')))))AND(((NULL)||('\rJv<')))))OR((0.8424495677750097 IN (NULL)))))OR(((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', ' sz=-2133301622 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL('-1834248266', NULL)) BETWEEN (CAST(0.6509516719464474 AS BLOB)) AND (((('1423473973')) BETWEEN ((0x6c6cfccd)) AND (('㤳F~	Z3L뉧3'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2813680072835366; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE NOCASE)IS NOT(((x'') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(((x'') NOT NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER((('') IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-479870530 sz=-1634790012'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-1611851259 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', '-1647995888 -308811092 sz=744607211'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN NULL THEN '0.5093136988261241' WHEN '렧|\rF)' THEN '-556695580' WHEN '' THEN x'55a4' WHEN NULL THEN x'' WHEN x'' THEN 0.33917665454422463 ELSE 1833906325 END AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1788188698'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '168866225 sz=-87587568 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' COLLATE BINARY)AND(((((NULL)AND('Y*')))AND('CEmePP?')))))OR(CASE x''  WHEN 0.4660312716720957 THEN 0.9556344668767431 ELSE 1 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('t6\8')AND(NULL)))OR('fj')) IN (((0xffffffffaa698deb) NOT NULL), ((x'ddce')>(0.10943384514275811)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=-546377264 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'K3#EP<x' THEN CASE WHEN x'' THEN '\MYPi' ELSE 0.28717031680096006 END ELSE CAST('p\rp' AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-47194145) NOT BETWEEN (NULL) AND (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('lJl6.' IN ()) IN ((('906820370')!=(0.11848027674082451)), 0.530022416208964)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1307102097 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((-1602571109) IS TRUE) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=249723266'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1105401132 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=481275699 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS TEXT) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1930616149 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('SV' AS TEXT) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=393836161 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.047726847689768204)) BETWEEN ((x'')) AND ((4.00405073E8)))) BETWEEN ('' COLLATE BINARY) AND ('-2145841391')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '75427177 sz=-714969040'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1335486522 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((('9Xmd'))<((x''))), (NOT (0Xffffffffbe37134e)), (((('-522051540')OR(x'')))AND(NULL)), ((((((((x'')OR(NULL)))OR(x'')))OR('/*?')))AND('ndRcst쿑a'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '2 0 sz=1058948911 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0X6b15a25c))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1958769872 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', '-1241358655 -783406499 sz=1999023267'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 sz=195656663'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9497690474716285; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.30257398194644447; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-217892467 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'913b', x'', x''))<=((NULL, '', 'BN'))))AND(((0.9531568543661119) NOTNULL))))OR(CASE WHEN -1090771031 THEN 0Xffffffffa2cc0459 WHEN '㑙|㵮NF' THEN NULL WHEN '-880495299' THEN 'X' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1235618442 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<<(NULL)))LIKE((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=764322451'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1826177146 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=132790588 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-854853585 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1158184098 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-798935849 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (0.13207241073647935) AND (609370150))) NOT BETWEEN (((0.5455823403672273) NOT BETWEEN (-1001624053) AND (x'adea'))) AND ((((0Xffffffff9268bc40)) BETWEEN ((0X742b2000)) AND ((x'1220'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-140366567'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-649285215 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-675753726 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.39508024830767297)<>(0.254250473586512)))OR((x'' IN ()))))AND(((x'') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=142023270'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('W/') IS TRUE) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ (0.8798116878503255))  WHEN LIKELY(0.14572345163589118) THEN '''*' COLLATE NOCASE ELSE ((0.11051787824076165)==('.k')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1393172769 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1505035196 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((1.511063859E9) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '-681435227 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-471767380 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('772523191' IN ('-1450999562', 0.9761647125551224, x'')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x75a9586d) BETWEEN ('2101816843') AND (x''))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=643789665 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=1511063859 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN (1.673654039E9)))LIKE(LTRIM('', 0.07210682312179995))); -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN 0.6686582810369681 THEN '1396605638' ELSE '-1788188698' END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 605704532; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS((+ ('-603189936'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 0 sz=1'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=2009751575 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-641890951 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1121175241 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-163237910' AS BLOB) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=554792536 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('0.7379889516167996' AS INTEGER) THEN ((('-1166680006'))!=((''))) ELSE ('-429569772' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=-60593254 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.37216552988235674)>>(0.1582325622606986)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', ' sz=-1149058664'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-203010092 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('921240188')OR(-1.090771031E9 COLLATE NOCASE)))OR(x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE BINARY)AND(CAST('붰1{}' AS REAL))))OR(UPPER(DISTINCT 0.8350672856427569))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=837692699 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '614063819 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '-1236464260 sz=-567674900'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'LR}\nt.'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=548873445 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x''))=((x'')))  WHEN (0.9592016529596623 IN ()) THEN '㓗\n' COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-140366567 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=853122826'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'd53d')OR(x'')))AND(CASE WHEN 0.0 THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-749944576 sz=-856784354 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 sz=693573442 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN ((CASE NULL  WHEN -57713320 THEN 6.02174909E8 WHEN 0x6d181f78 THEN '0.5753118238993943' WHEN '-377569717' THEN NULL END)) AND (((((-1239183654))<((NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1940419242 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=707142633 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-1788188698 sz=-1675610508 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '454334159 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM(((NULL)>(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('.~!' COLLATE NOCASE)*(0.9162323531150601 COLLATE BINARY)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'')))/(1518172187)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1428687602 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=532625412 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('-184003832' AS INTEGER))AND(((0x489a11b7) IS FALSE))))AND('2037544516')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.16545442375941866 AS INTEGER)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '379110736 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.6992519563644621 AS NUMERIC) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) NOT BETWEEN ((((('Eo(&s{ꖄ')AND(NULL)))OR(NULL))) AND (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1842852072 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '495374440' COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=195656663 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT CAST('-16033779' AS REAL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '1672995516 2 sz=-1532285404 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN x'' THEN '0TEi/' WHEN 0.7243038308921619 THEN x'f53e' WHEN x'' THEN x'' WHEN 0.6231472210322616 THEN 0.5758790113237842 WHEN 0.04107384825844451 THEN x'3e88' END THEN 0.17347639552888217 COLLATE RTRIM ELSE (((x'a130')) NOT BETWEEN ((-1812190712)) AND (('~dfS铣gj'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1072158262 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=1353917709 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-430153335 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1272329115'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-1884382817 sz=-87587568 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-712107971 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-744999994 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=326769520'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1600902354 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=-1884382817 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('715076354' IN (NULL)))LIKE((('A0>N') NOT BETWEEN (-338589497) AND ('-963542941')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))>>(((0x7c795588)<=(-2.17892467E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-143474480 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1238493143 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR((((('')AND(x'')))AND(NULL)))))AND(((NULL)<(NULL)))))AND((0.9329729574405469 IN (NULL, NULL)))))AND('-1675610508' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1092664687 sz=-1817923255'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'8198')==(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1.890194213E9)) NOT BETWEEN ((NULL)) AND (('1143433957')))) NOT BETWEEN (('' IN ())) AND (x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.45694754611046684)/(0.8426424154743866)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', '1495939043 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ('-247029066'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1134406871 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1467460533 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-1505035196 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) BETWEEN (NULL) AND (NULL)) THEN (NULL IN (x'', x'59529c2a')) WHEN (((((((('cw')AND(-16033779)))AND(0Xfffffffff52a3280)))AND(0.4082021787552145)))OR(x'3c14')) THEN json_patch(0.20497864512472685, NULL) WHEN ((NULL) NOT NULL) THEN (0.6839879030523791 IN ('-1611851259')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('589778505') NOT BETWEEN (-8.8296089E8) AND (-8.0774838E7)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-2132874307 sz=1492733834'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 9223372036854775807 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1180063381'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-880495299 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1817923255 sz=587703421'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1808227769 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '325022359 sz=-1626712687 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=917686327 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=1556134956 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'a7fe')AND(NULL)))AND(NULL)))OR('-1817923255')))OR('-364534610'))) BETWEEN (CAST(x'8107' AS INTEGER)) AND ('1826177146' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'6743')AND(0.5460266982155122)))OR(-219185488)))<(((0.44517428529853786)>>('-55594086')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '393836161 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('L/T' IN ())) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('fj', NULL, 0.5592425232719354)) BETWEEN ((CAST(-394496915 AS TEXT), CAST(0xfffffffff5776f50 AS BLOB), ABS(DISTINCT 'Kp'))) AND (((+ (x'')), CASE NULL  WHEN '' THEN 0.6759128810225631 ELSE '7' END, x'' COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-81660950 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')) BETWEEN (('\~')) AND ((NULL)))) BETWEEN (0.8084379931151867 COLLATE RTRIM) AND (NULLIF(0x35c81877, '-798935849'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 0 sz=1747853748 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '0 sz=-445482979 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '2 sz=1399268775 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1164133789'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1600902354'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '2 0 sz=2080492020 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1720371547 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=500204047'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-143474480 sz=-634641609'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=483908464'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1923919751 sz=17393182 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt1', '0 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=-96091850 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((~ (-158554776))))<=((DATETIME(0.8985255769838589, '693573442', '-1471538105', '1163521122', NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('393836161')*(x''))) BETWEEN (CASE 0.7434903351955457  WHEN -8.84352224E8 THEN x'' WHEN NULL THEN '-1538270126' WHEN 0.17262437149830312 THEN 0.1480473971280062 END) AND (((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1139709334 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1990741850 sz=-1636798211 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1435922965 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=-371895927 unordered'); -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
REINDEX; -- 1ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE (vt0.c0 IN ()); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  vt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA mmap_size = 8442347223091582686; -- 0ms;
PRAGMA main.secure_delete; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (NULL); -- 1ms;
PRAGMA cache_size = -477927827135281602; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE CASE (- (vt0.c0))  WHEN ((vt0.c0)==(vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN vt0.c0 COLLATE NOCASE THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN vt0.c0 THEN (NOT (vt0.c0)) ELSE COALESCE(x'', vt0.c0, vt0.c0, vt0.c0) END; -- 0ms;
UPDATE OR FAIL vt0 SET c0=NULL, c0=NULL; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (939018987); -- 0ms;
REINDEX; -- 1ms;
INSERT OR FAIL INTO vt1(c0) VALUES (x'cfc9'), (1070850372), ('ku'); -- 0ms;
DROP TABLE IF EXISTS rt0; -- 0ms;
DROP VIEW v0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('0.7379889516167996'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA integrity_check; -- 0ms;
REINDEX; -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 INTEGER ); -- 0ms;
UPDATE t0 SET c0=258643824; -- 0ms;
PRAGMA temp.application_id = -291019393984198614; -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 448123016); -- 0ms;
PRAGMA main.busy_timeout; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((NOT (vt0.c0)))))AND((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((NOT (vt0.c0)))))AND((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((NOT (vt0.c0)))))AND((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((NOT (vt0.c0)))))AND((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((NOT (vt0.c0)))))AND((vt0.c0 IN (vt0.c0)))));
SELECT * FROM vt0, t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (NULL);
SELECT * FROM t0, vt0 WHERE (ABS(DISTINCT HEX(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT HEX(DISTINCT t0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (ABS(DISTINCT HEX(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT HEX(DISTINCT t0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (ABS(DISTINCT HEX(DISTINCT t0.c0)));
SELECT * FROM vt0, vt1 WHERE ((~ (RTRIM('')))) ORDER BY x'8c30'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (RTRIM('')))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'8c30'  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((~ (RTRIM('')))) ORDER BY x'8c30'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (RTRIM('')))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'8c30'  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((~ (RTRIM('')))) ORDER BY x'8c30'  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) NOT BETWEEN ('T!EZAg') AND (vt0.c0 COLLATE NOCASE))) ORDER BY CAST(CASE vt0.c0  WHEN 0.47089339380388373 THEN vt0.c0 ELSE vt0.c0 END AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0))) NOT BETWEEN ('T!EZAg') AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN 0.47089339380388373 THEN vt0.c0 ELSE vt0.c0 END AS REAL));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) NOT BETWEEN ('T!EZAg') AND (vt0.c0 COLLATE NOCASE))) ORDER BY CAST(CASE vt0.c0  WHEN 0.47089339380388373 THEN vt0.c0 ELSE vt0.c0 END AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0))) NOT BETWEEN ('T!EZAg') AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN 0.47089339380388373 THEN vt0.c0 ELSE vt0.c0 END AS REAL));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) NOT BETWEEN ('T!EZAg') AND (vt0.c0 COLLATE NOCASE))) ORDER BY CAST(CASE vt0.c0  WHEN 0.47089339380388373 THEN vt0.c0 ELSE vt0.c0 END AS REAL);
SELECT * FROM vt1, t0 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR((t0.c0 IN ()))))OR(t0.c0 COLLATE NOCASE)))OR(((t0.c0)-(vt1.c0)))))OR((t0.c0 IN (t0.c0))))) ORDER BY (+ (vt1.c0)) ASC, ((t0.c0 COLLATE BINARY) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR((t0.c0 IN ()))))OR(t0.c0 COLLATE NOCASE)))OR(((t0.c0)-(vt1.c0)))))OR((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (+ (vt1.c0)) ASC, ((t0.c0 COLLATE BINARY) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR((t0.c0 IN ()))))OR(t0.c0 COLLATE NOCASE)))OR(((t0.c0)-(vt1.c0)))))OR((t0.c0 IN (t0.c0))))) ORDER BY (+ (vt1.c0)) ASC, ((t0.c0 COLLATE BINARY) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR((t0.c0 IN ()))))OR(t0.c0 COLLATE NOCASE)))OR(((t0.c0)-(vt1.c0)))))OR((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (+ (vt1.c0)) ASC, ((t0.c0 COLLATE BINARY) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR((t0.c0 IN ()))))OR(t0.c0 COLLATE NOCASE)))OR(((t0.c0)-(vt1.c0)))))OR((t0.c0 IN (t0.c0))))) ORDER BY (+ (vt1.c0)) ASC, ((t0.c0 COLLATE BINARY) NOT NULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, t0 WHERE (0x45655eb9) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((0x45655eb9) IS TRUE)  as count FROM vt1, t0 ORDER BY '' DESC);
SELECT ALL * FROM vt1, t0 WHERE (0x45655eb9) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((0x45655eb9) IS TRUE)  as count FROM vt1, t0 ORDER BY '' DESC);
SELECT ALL * FROM vt1, t0 WHERE (0x45655eb9) ORDER BY '' DESC;
SELECT COUNT(*) FROM t0, vt1 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS('-479637746')));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS('-479637746'))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS('-479637746')));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS('-479637746'))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)IS('-479637746')));
SELECT ALL * FROM vt0, vt1 WHERE (DATE((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt1.c0, ((vt0.c0)IS NOT(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((DATE((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt1.c0, ((vt0.c0)IS NOT(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (DATE((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt1.c0, ((vt0.c0)IS NOT(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((DATE((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt1.c0, ((vt0.c0)IS NOT(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (DATE((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt1.c0, ((vt0.c0)IS NOT(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((+ (vt1.c0))))<>(('X'))));
SELECT SUM(count) FROM (SELECT ((((((+ (vt1.c0))))<>(('X')))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((+ (vt1.c0))))<>(('X'))));
SELECT SUM(count) FROM (SELECT ((((((+ (vt1.c0))))<>(('X')))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((+ (vt1.c0))))<>(('X'))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((ABS(t0.c0))==(CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((ABS(t0.c0))==(CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((ABS(t0.c0))==(CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((ABS(t0.c0))==(CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((ABS(t0.c0))==(CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((JULIANDAY(vt1.c0, vt0.c0, vt0.c0)) NOT NULL)) ORDER BY SQLITE_VERSION();
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(vt1.c0, vt0.c0, vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY SQLITE_VERSION());
SELECT ALL * FROM vt0, vt1 WHERE (((JULIANDAY(vt1.c0, vt0.c0, vt0.c0)) NOT NULL)) ORDER BY SQLITE_VERSION();
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(vt1.c0, vt0.c0, vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY SQLITE_VERSION());
SELECT ALL * FROM vt0, vt1 WHERE (((JULIANDAY(vt1.c0, vt0.c0, vt0.c0)) NOT NULL)) ORDER BY SQLITE_VERSION();
SELECT * FROM vt1, vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))AND(0.07837095754861512)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)AND(vt0.c0)))AND(0.07837095754861512)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))AND(0.07837095754861512)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)AND(vt0.c0)))AND(0.07837095754861512)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))AND(0.07837095754861512)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ()));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (vt1.c0 COLLATE NOCASE) ORDER BY ((((vt0.c0) ISNULL)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((vt0.c0) ISNULL)) IS FALSE) ASC);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (vt1.c0 COLLATE NOCASE) ORDER BY ((((vt0.c0) ISNULL)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((vt0.c0) ISNULL)) IS FALSE) ASC);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (vt1.c0 COLLATE NOCASE) ORDER BY ((((vt0.c0) ISNULL)) IS FALSE) ASC;
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST((- (vt0.c0)) AS INTEGER)) ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST((- (vt0.c0)) AS INTEGER)) ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST((- (vt0.c0)) AS INTEGER)) ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS LAST;
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((t0.c0 COLLATE RTRIM)AND((((vt0.c0, vt1.c0, vt1.c0))!=((vt1.c0, t0.c0, NULL))))))AND(((t0.c0)||(-1e500)))) RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE ((((HEX(DISTINCT vt1.c0), (- (vt0.c0)), ((((((((vt1.c0)OR(t0.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c0))))<(((('-1053881220')GLOB(vt0.c0)), ((vt0.c0) IS FALSE), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY (('CEmePP?') NOT BETWEEN (UNLIKELY(t0.c0)) AND (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END)) ASC  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN (((vt0.c0, vt1.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, vt1.c0))) END DESC;
SELECT SUM(count) FROM (SELECT (((((HEX(DISTINCT vt1.c0), (- (vt0.c0)), ((((((((vt1.c0)OR(t0.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c0))))<(((('-1053881220')GLOB(vt0.c0)), ((vt0.c0) IS FALSE), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((t0.c0 COLLATE RTRIM)AND((((vt0.c0, vt1.c0, vt1.c0))!=((vt1.c0, t0.c0, NULL))))))AND(((t0.c0)||(-1e500)))) RIGHT OUTER JOIN vt1 ON vt1.c0 ORDER BY (('CEmePP?') NOT BETWEEN (UNLIKELY(t0.c0)) AND (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END)) ASC  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN (((vt0.c0, vt1.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, vt1.c0))) END DESC);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((t0.c0 COLLATE RTRIM)AND((((vt0.c0, vt1.c0, vt1.c0))!=((vt1.c0, t0.c0, NULL))))))AND(((t0.c0)||(-1e500)))) RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE ((((HEX(DISTINCT vt1.c0), (- (vt0.c0)), ((((((((vt1.c0)OR(t0.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c0))))<(((('-1053881220')GLOB(vt0.c0)), ((vt0.c0) IS FALSE), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY (('CEmePP?') NOT BETWEEN (UNLIKELY(t0.c0)) AND (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END)) ASC  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN (((vt0.c0, vt1.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, vt1.c0))) END DESC;
SELECT SUM(count) FROM (SELECT (((((HEX(DISTINCT vt1.c0), (- (vt0.c0)), ((((((((vt1.c0)OR(t0.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c0))))<(((('-1053881220')GLOB(vt0.c0)), ((vt0.c0) IS FALSE), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((t0.c0 COLLATE RTRIM)AND((((vt0.c0, vt1.c0, vt1.c0))!=((vt1.c0, t0.c0, NULL))))))AND(((t0.c0)||(-1e500)))) RIGHT OUTER JOIN vt1 ON vt1.c0 ORDER BY (('CEmePP?') NOT BETWEEN (UNLIKELY(t0.c0)) AND (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END)) ASC  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN (((vt0.c0, vt1.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, vt1.c0))) END DESC);
SELECT COUNT(*) FROM vt1, t0 WHERE (((DATE(t0.c0, 0.27403520798080294, 0.882858169682001))IS(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((DATE(t0.c0, 0.27403520798080294, 0.882858169682001))IS(x''))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((DATE(t0.c0, 0.27403520798080294, 0.882858169682001))IS(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((DATE(t0.c0, 0.27403520798080294, 0.882858169682001))IS(x''))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((DATE(t0.c0, 0.27403520798080294, 0.882858169682001))IS(x'')));
SELECT ALL * FROM vt1, t0 WHERE (((((t0.c0)IS NOT(t0.c0)))!=((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(t0.c0)))!=((~ (t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((((t0.c0)IS NOT(t0.c0)))!=((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(t0.c0)))!=((~ (t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((((t0.c0)IS NOT(t0.c0)))!=((~ (t0.c0)))));
SELECT * FROM vt1, t0, vt0 WHERE (((SQLITE_VERSION())IS NOT(((vt1.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())IS NOT(((vt1.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((SQLITE_VERSION())IS NOT(((vt1.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())IS NOT(((vt1.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((SQLITE_VERSION())IS NOT(((vt1.c0)||(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0))>=((vt0.c0))))>>((t0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((vt0.c0))))>>((t0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0))>=((vt0.c0))))>>((t0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((vt0.c0))))>>((t0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0))>=((vt0.c0))))>>((t0.c0 IN (vt0.c0)))));
SELECT ALL * FROM t0, vt0, vt1 WHERE (CASE ((((vt0.c0)OR(NULL)))AND(vt0.c0))  WHEN (~ (vt1.c0)) THEN ((t0.c0)IS(vt0.c0)) END) ORDER BY CAST(((((t0.c0)OR(vt0.c0)))AND(t0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)OR(NULL)))AND(vt0.c0))  WHEN (~ (vt1.c0)) THEN ((t0.c0)IS(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(((((t0.c0)OR(vt0.c0)))AND(t0.c0)) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CASE ((((vt0.c0)OR(NULL)))AND(vt0.c0))  WHEN (~ (vt1.c0)) THEN ((t0.c0)IS(vt0.c0)) END) ORDER BY CAST(((((t0.c0)OR(vt0.c0)))AND(t0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)OR(NULL)))AND(vt0.c0))  WHEN (~ (vt1.c0)) THEN ((t0.c0)IS(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(((((t0.c0)OR(vt0.c0)))AND(t0.c0)) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CASE ((((vt0.c0)OR(NULL)))AND(vt0.c0))  WHEN (~ (vt1.c0)) THEN ((t0.c0)IS(vt0.c0)) END) ORDER BY CAST(((((t0.c0)OR(vt0.c0)))AND(t0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0, vt1 WHERE (((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((vt0.c0)AND(vt1.c0))))) ORDER BY 'ᣬ&D8K24Us' ASC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN ((t0.c0 IN (vt0.c0, vt1.c0))) AND (CAST(x'' AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((vt0.c0)AND(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY 'ᣬ&D8K24Us' ASC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN ((t0.c0 IN (vt0.c0, vt1.c0))) AND (CAST(x'' AS REAL))) DESC);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((vt0.c0)AND(vt1.c0))))) ORDER BY 'ᣬ&D8K24Us' ASC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN ((t0.c0 IN (vt0.c0, vt1.c0))) AND (CAST(x'' AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((vt0.c0)AND(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY 'ᣬ&D8K24Us' ASC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN ((t0.c0 IN (vt0.c0, vt1.c0))) AND (CAST(x'' AS REAL))) DESC);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((vt0.c0)AND(vt1.c0))))) ORDER BY 'ᣬ&D8K24Us' ASC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN ((t0.c0 IN (vt0.c0, vt1.c0))) AND (CAST(x'' AS REAL))) DESC;
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((vt0.c0)>(vt0.c0)) COLLATE RTRIM  NULLS LAST, (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)>(vt0.c0)) COLLATE RTRIM  NULLS LAST, (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((vt0.c0)>(vt0.c0)) COLLATE RTRIM  NULLS LAST, (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)>(vt0.c0)) COLLATE RTRIM  NULLS LAST, (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((vt0.c0)>(vt0.c0)) COLLATE RTRIM  NULLS LAST, (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) COLLATE BINARY) ORDER BY LOWER(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY LOWER(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE x'' END));
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) COLLATE BINARY) ORDER BY LOWER(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY LOWER(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE x'' END));
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) COLLATE BINARY) ORDER BY LOWER(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE x'' END);
SELECT * FROM t0, vt1, vt0 WHERE (((((((((((x'')<(vt0.c0)))OR(((t0.c0)<(vt1.c0)))))OR(t0.c0 COLLATE BINARY)))AND(((t0.c0)-(vt0.c0)))))AND(((vt1.c0) NOTNULL)))) ORDER BY CASE WHEN NULLIF(DISTINCT 0.9755978460066926, vt0.c0) THEN (~ (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((x'')<(vt0.c0)))OR(((t0.c0)<(vt1.c0)))))OR(t0.c0 COLLATE BINARY)))AND(((t0.c0)-(vt0.c0)))))AND(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE WHEN NULLIF(DISTINCT 0.9755978460066926, vt0.c0) THEN (~ (vt0.c0)) END  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (((((((((((x'')<(vt0.c0)))OR(((t0.c0)<(vt1.c0)))))OR(t0.c0 COLLATE BINARY)))AND(((t0.c0)-(vt0.c0)))))AND(((vt1.c0) NOTNULL)))) ORDER BY CASE WHEN NULLIF(DISTINCT 0.9755978460066926, vt0.c0) THEN (~ (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((x'')<(vt0.c0)))OR(((t0.c0)<(vt1.c0)))))OR(t0.c0 COLLATE BINARY)))AND(((t0.c0)-(vt0.c0)))))AND(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE WHEN NULLIF(DISTINCT 0.9755978460066926, vt0.c0) THEN (~ (vt0.c0)) END  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (((((((((((x'')<(vt0.c0)))OR(((t0.c0)<(vt1.c0)))))OR(t0.c0 COLLATE BINARY)))AND(((t0.c0)-(vt0.c0)))))AND(((vt1.c0) NOTNULL)))) ORDER BY CASE WHEN NULLIF(DISTINCT 0.9755978460066926, vt0.c0) THEN (~ (vt0.c0)) END  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (((CAST(0.5531758357811364 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.5531758357811364 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CAST(0.5531758357811364 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.5531758357811364 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CAST(0.5531758357811364 AS INTEGER)) IS FALSE));
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, 0X6bf330d2)) BETWEEN ((0x74028954, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, 0X6bf330d2)) BETWEEN ((0x74028954, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, 0X6bf330d2)) BETWEEN ((0x74028954, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, 0X6bf330d2)) BETWEEN ((0x74028954, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, 0X6bf330d2)) BETWEEN ((0x74028954, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0)))) IS TRUE));
SELECT * FROM vt1, vt0 WHERE ('1983786477');
SELECT SUM(count) FROM (SELECT (('1983786477') IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ('1983786477');
SELECT SUM(count) FROM (SELECT (('1983786477') IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ('1983786477');
SELECT * FROM vt1 INNER JOIN t0 ON ((((((vt1.c0) IS FALSE))AND(NULL)))OR((t0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c0 AS BLOB) AS NUMERIC) WHERE (((HEX(vt0.c0))!=((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((HEX(vt0.c0))!=((t0.c0 IN ())))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((((vt1.c0) IS FALSE))AND(NULL)))OR((t0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c0 AS BLOB) AS NUMERIC));
SELECT * FROM vt1 INNER JOIN t0 ON ((((((vt1.c0) IS FALSE))AND(NULL)))OR((t0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c0 AS BLOB) AS NUMERIC) WHERE (((HEX(vt0.c0))!=((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((HEX(vt0.c0))!=((t0.c0 IN ())))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((((vt1.c0) IS FALSE))AND(NULL)))OR((t0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c0 AS BLOB) AS NUMERIC));
SELECT * FROM vt1 INNER JOIN t0 ON ((((((vt1.c0) IS FALSE))AND(NULL)))OR((t0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c0 AS BLOB) AS NUMERIC) WHERE (((HEX(vt0.c0))!=((t0.c0 IN ()))));
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))IS NOT(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((vt0.c0)-(vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))IS NOT(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)-(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))IS NOT(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((vt0.c0)-(vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))IS NOT(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)-(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))IS NOT(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((vt0.c0)-(vt0.c0)) COLLATE NOCASE;
SELECT ALL * FROM vt0, t0 WHERE ((+ (((vt0.c0)-(t0.c0))))) ORDER BY CAST(((((((((t0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('-1929814317')))OR(vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)-(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((((((((t0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('-1929814317')))OR(vt0.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((+ (((vt0.c0)-(t0.c0))))) ORDER BY CAST(((((((((t0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('-1929814317')))OR(vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)-(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((((((((t0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('-1929814317')))OR(vt0.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((+ (((vt0.c0)-(t0.c0))))) ORDER BY CAST(((((((((t0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('-1929814317')))OR(vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (((t0.c0 COLLATE RTRIM))<=((x''))) WHERE ((((vt1.c0 IN (vt1.c0))) ISNULL)) ORDER BY NULL ASC, CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c0))) ISNULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (((t0.c0 COLLATE RTRIM))<=((x''))) ORDER BY NULL ASC, CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT) DESC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (((t0.c0 COLLATE RTRIM))<=((x''))) WHERE ((((vt1.c0 IN (vt1.c0))) ISNULL)) ORDER BY NULL ASC, CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c0))) ISNULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (((t0.c0 COLLATE RTRIM))<=((x''))) ORDER BY NULL ASC, CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT) DESC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (((t0.c0 COLLATE RTRIM))<=((x''))) WHERE ((((vt1.c0 IN (vt1.c0))) ISNULL)) ORDER BY NULL ASC, CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT) DESC;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON LOWER(DISTINCT HEX(DISTINCT vt0.c0)) WHERE (((((vt0.c0)GLOB(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON LOWER(DISTINCT HEX(DISTINCT vt0.c0)));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON LOWER(DISTINCT HEX(DISTINCT vt0.c0)) WHERE (((((vt0.c0)GLOB(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON LOWER(DISTINCT HEX(DISTINCT vt0.c0)));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON LOWER(DISTINCT HEX(DISTINCT vt0.c0)) WHERE (((((vt0.c0)GLOB(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL * FROM t0, vt1 WHERE ((((((((((vt1.c0 IN (vt1.c0)))AND(((((((((t0.c0)OR('-1836725682')))OR(vt1.c0)))OR(t0.c0)))OR(NULL)))))AND(((((-626860194)AND(vt1.c0)))AND(vt1.c0)))))OR((t0.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0 IN (vt1.c0)))AND(((((((((t0.c0)OR('-1836725682')))OR(vt1.c0)))OR(t0.c0)))OR(NULL)))))AND(((((-626860194)AND(vt1.c0)))AND(vt1.c0)))))OR((t0.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((((((((((vt1.c0 IN (vt1.c0)))AND(((((((((t0.c0)OR('-1836725682')))OR(vt1.c0)))OR(t0.c0)))OR(NULL)))))AND(((((-626860194)AND(vt1.c0)))AND(vt1.c0)))))OR((t0.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0 IN (vt1.c0)))AND(((((((((t0.c0)OR('-1836725682')))OR(vt1.c0)))OR(t0.c0)))OR(NULL)))))AND(((((-626860194)AND(vt1.c0)))AND(vt1.c0)))))OR((t0.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((((((((((vt1.c0 IN (vt1.c0)))AND(((((((((t0.c0)OR('-1836725682')))OR(vt1.c0)))OR(t0.c0)))OR(NULL)))))AND(((((-626860194)AND(vt1.c0)))AND(vt1.c0)))))OR((t0.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC))));
SELECT ALL * FROM vt1, t0, vt0 WHERE (LIKELIHOOD(((vt1.c0)<<(vt1.c0)), 0.5732771656943918)) ORDER BY (CAST(t0.c0 AS INTEGER) IN ()) DESC, ((vt1.c0 IN ()) IN ((((vt1.c0))<=((vt1.c0))), vt1.c0 COLLATE NOCASE))  NULLS FIRST, ((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)/(0.16879801579891074)) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt1.c0)<<(vt1.c0)), 0.5732771656943918)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (CAST(t0.c0 AS INTEGER) IN ()) DESC, ((vt1.c0 IN ()) IN ((((vt1.c0))<=((vt1.c0))), vt1.c0 COLLATE NOCASE))  NULLS FIRST, ((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)/(0.16879801579891074)) ASC);
SELECT ALL * FROM vt1, t0, vt0 WHERE (LIKELIHOOD(((vt1.c0)<<(vt1.c0)), 0.5732771656943918)) ORDER BY (CAST(t0.c0 AS INTEGER) IN ()) DESC, ((vt1.c0 IN ()) IN ((((vt1.c0))<=((vt1.c0))), vt1.c0 COLLATE NOCASE))  NULLS FIRST, ((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)/(0.16879801579891074)) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt1.c0)<<(vt1.c0)), 0.5732771656943918)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (CAST(t0.c0 AS INTEGER) IN ()) DESC, ((vt1.c0 IN ()) IN ((((vt1.c0))<=((vt1.c0))), vt1.c0 COLLATE NOCASE))  NULLS FIRST, ((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)/(0.16879801579891074)) ASC);
SELECT ALL * FROM vt1, t0, vt0 WHERE (LIKELIHOOD(((vt1.c0)<<(vt1.c0)), 0.5732771656943918)) ORDER BY (CAST(t0.c0 AS INTEGER) IN ()) DESC, ((vt1.c0 IN ()) IN ((((vt1.c0))<=((vt1.c0))), vt1.c0 COLLATE NOCASE))  NULLS FIRST, ((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)/(0.16879801579891074)) ASC;
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY (((vt1.c0)) BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c0)))) AND ((-2.085467635E9)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c0)))) AND ((-2.085467635E9)))  NULLS FIRST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY (((vt1.c0)) BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c0)))) AND ((-2.085467635E9)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c0)))) AND ((-2.085467635E9)))  NULLS FIRST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY (((vt1.c0)) BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c0)))) AND ((-2.085467635E9)))  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((+ (t0.c0)) AS BLOB) FULL OUTER JOIN t0 ON (vt1.c0 COLLATE BINARY IN ()) WHERE ((NULL COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((NULL COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((+ (t0.c0)) AS BLOB) FULL OUTER JOIN t0 ON (vt1.c0 COLLATE BINARY IN ()));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((+ (t0.c0)) AS BLOB) FULL OUTER JOIN t0 ON (vt1.c0 COLLATE BINARY IN ()) WHERE ((NULL COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((NULL COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((+ (t0.c0)) AS BLOB) FULL OUTER JOIN t0 ON (vt1.c0 COLLATE BINARY IN ()));
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)<(vt1.c0)))>=(CAST(vt0.c0 AS TEXT)))) ORDER BY ((json_type('8F')) IS TRUE), ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))AND(((vt0.c0)=(vt1.c0)))))AND(UPPER(DISTINCT vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<(vt1.c0)))>=(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((json_type('8F')) IS TRUE), ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))AND(((vt0.c0)==(vt1.c0)))))AND(UPPER(DISTINCT vt1.c0)))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)<(vt1.c0)))>=(CAST(vt0.c0 AS TEXT)))) ORDER BY ((json_type('8F')) IS TRUE), ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))AND(((vt0.c0)=(vt1.c0)))))AND(UPPER(DISTINCT vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<(vt1.c0)))>=(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((json_type('8F')) IS TRUE), ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))AND(((vt0.c0)==(vt1.c0)))))AND(UPPER(DISTINCT vt1.c0)))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((CAST(vt0.c0 AS BLOB))!=(((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))<>(((((vt0.c0)OR(t0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((CAST(vt0.c0 AS BLOB))!=(((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))<>(((((vt0.c0)OR(t0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((CAST(vt0.c0 AS BLOB))!=(((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) BETWEEN (('')) AND ((x''))))GLOB(((vt1.c0) NOT NULL)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN (('')) AND ((x''))))GLOB(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) BETWEEN (('')) AND ((x''))))GLOB(((vt1.c0) NOT NULL)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN (('')) AND ((x''))))GLOB(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) BETWEEN (('')) AND ((x''))))GLOB(((vt1.c0) NOT NULL)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), vt1.c0) WHERE (CAST(((vt0.c0)<=(vt1.c0)) AS REAL)) ORDER BY (+ (((t0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<=(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 INNER JOIN t0 ON TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), vt1.c0) ORDER BY (+ (((t0.c0) IS FALSE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), vt1.c0) WHERE (CAST(((vt0.c0)<=(vt1.c0)) AS REAL)) ORDER BY (+ (((t0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<=(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 INNER JOIN t0 ON TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), vt1.c0) ORDER BY (+ (((t0.c0) IS FALSE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), vt1.c0) WHERE (CAST(((vt0.c0)<=(vt1.c0)) AS REAL)) ORDER BY (+ (((t0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((((((((vt1.c0 COLLATE RTRIM)OR((vt1.c0 IN (vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)))OR(((vt1.c0)/(vt1.c0)))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0 COLLATE RTRIM)OR((vt1.c0 IN (vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)))OR(((vt1.c0)/(vt1.c0)))))AND(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((vt1.c0 COLLATE RTRIM)OR((vt1.c0 IN (vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)))OR(((vt1.c0)/(vt1.c0)))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0 COLLATE RTRIM)OR((vt1.c0 IN (vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)))OR(((vt1.c0)/(vt1.c0)))))AND(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((vt1.c0 COLLATE RTRIM)OR((vt1.c0 IN (vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)))OR(((vt1.c0)/(vt1.c0)))))AND(vt1.c0)));
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON ((t0.c0) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)>>(t0.c0)))) WHERE (vt0.c0 COLLATE NOCASE) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON ((t0.c0) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)>>(t0.c0)))) ORDER BY t0.c0);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON ((t0.c0) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)>>(t0.c0)))) WHERE (vt0.c0 COLLATE NOCASE) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON ((t0.c0) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)>>(t0.c0)))) ORDER BY t0.c0);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON ((t0.c0) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)>>(t0.c0)))) WHERE (vt0.c0 COLLATE NOCASE) ORDER BY t0.c0;
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt1.c0 IN ())))>=((((((t0.c0)OR(vt0.c0)))OR(t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ())))>=((((((t0.c0)OR(vt0.c0)))OR(t0.c0)))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt1.c0 IN ())))>=((((((t0.c0)OR(vt0.c0)))OR(t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ())))>=((((((t0.c0)OR(vt0.c0)))OR(t0.c0)))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt1.c0 IN ())))>=((((((t0.c0)OR(vt0.c0)))OR(t0.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) ORDER BY CAST(((vt1.c0) IS TRUE) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) IS TRUE) AS REAL) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) ORDER BY CAST(((vt1.c0) IS TRUE) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) IS TRUE) AS REAL) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) ORDER BY CAST(((vt1.c0) IS TRUE) AS REAL) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE (SQLITE_SOURCE_ID() COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS BLOB))GLOB(((vt1.c0) IS TRUE))) DESC  NULLS FIRST, CAST(LIKELIHOOD(t0.c0, 0.640413560651168) AS INTEGER) ASC  NULLS FIRST, (vt0.c0 COLLATE RTRIM IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID() COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1 ORDER BY ((CAST(vt0.c0 AS BLOB))GLOB(((vt1.c0) IS TRUE))) DESC  NULLS FIRST, CAST(LIKELIHOOD(t0.c0, 0.640413560651168) AS INTEGER) ASC  NULLS FIRST, (vt0.c0 COLLATE RTRIM IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE (SQLITE_SOURCE_ID() COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS BLOB))GLOB(((vt1.c0) IS TRUE))) DESC  NULLS FIRST, CAST(LIKELIHOOD(t0.c0, 0.640413560651168) AS INTEGER) ASC  NULLS FIRST, (vt0.c0 COLLATE RTRIM IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID() COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1 ORDER BY ((CAST(vt0.c0 AS BLOB))GLOB(((vt1.c0) IS TRUE))) DESC  NULLS FIRST, CAST(LIKELIHOOD(t0.c0, 0.640413560651168) AS INTEGER) ASC  NULLS FIRST, (vt0.c0 COLLATE RTRIM IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE (SQLITE_SOURCE_ID() COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS BLOB))GLOB(((vt1.c0) IS TRUE))) DESC  NULLS FIRST, CAST(LIKELIHOOD(t0.c0, 0.640413560651168) AS INTEGER) ASC  NULLS FIRST, (vt0.c0 COLLATE RTRIM IN ()) ASC;
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((((((vt1.c0)AND(t0.c0)))AND(vt0.c0)))OR(((t0.c0)*(t0.c0)))))AND(((vt1.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(t0.c0)))AND(vt0.c0)))OR(((t0.c0)*(t0.c0)))))AND(((vt1.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((((((vt1.c0)AND(t0.c0)))AND(vt0.c0)))OR(((t0.c0)*(t0.c0)))))AND(((vt1.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(t0.c0)))AND(vt0.c0)))OR(((t0.c0)*(t0.c0)))))AND(((vt1.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((((((vt1.c0)AND(t0.c0)))AND(vt0.c0)))OR(((t0.c0)*(t0.c0)))))AND(((vt1.c0)<(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL)) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL)) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS REAL)) NOTNULL));
SELECT COUNT(*) FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('');
SELECT * FROM vt1 CROSS JOIN t0 ON ((((t0.c0) BETWEEN (vt0.c0) AND ('-241687564'))) NOT BETWEEN ((vt0.c0 IN (t0.c0, t0.c0))) AND (((0.5705671569774994) BETWEEN (vt1.c0) AND (x'')))) RIGHT OUTER JOIN vt0 ON ((DATE(vt1.c0, vt1.c0, vt0.c0))LIKE(vt0.c0 COLLATE BINARY)) WHERE ((~ (CASE vt0.c0  WHEN t0.c0 THEN vt1.c0 WHEN 'k?>' THEN t0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (NOT (((vt0.c0) NOT NULL))) ASC, CASE WHEN UPPER(vt1.c0) THEN (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) WHEN ((vt0.c0) NOT NULL) THEN ((vt1.c0)>>(t0.c0)) WHEN (((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (- (vt1.c0)) ELSE MIN(t0.c0, vt1.c0, vt0.c0, t0.c0) END  NULLS LAST, ((((IFNULL(0.7375589267255788, vt1.c0))OR(((vt0.c0) NOTNULL))))AND(((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CASE vt0.c0  WHEN t0.c0 THEN vt1.c0 WHEN 'k?>' THEN t0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((((t0.c0) BETWEEN (vt0.c0) AND ('-241687564'))) NOT BETWEEN ((vt0.c0 IN (t0.c0, t0.c0))) AND (((0.5705671569774994) BETWEEN (vt1.c0) AND (x'')))) RIGHT OUTER JOIN vt0 ON ((DATE(vt1.c0, vt1.c0, vt0.c0))LIKE(vt0.c0 COLLATE BINARY)) ORDER BY (NOT (((vt0.c0) NOT NULL))) ASC, CASE WHEN UPPER(vt1.c0) THEN (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) WHEN ((vt0.c0) NOT NULL) THEN ((vt1.c0)>>(t0.c0)) WHEN (((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (- (vt1.c0)) ELSE MIN(t0.c0, vt1.c0, vt0.c0, t0.c0) END  NULLS LAST, ((((IFNULL(0.7375589267255788, vt1.c0))OR(((vt0.c0) NOTNULL))))AND(((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN t0 ON ((((t0.c0) BETWEEN (vt0.c0) AND ('-241687564'))) NOT BETWEEN ((vt0.c0 IN (t0.c0, t0.c0))) AND (((0.5705671569774994) BETWEEN (vt1.c0) AND (x'')))) RIGHT OUTER JOIN vt0 ON ((DATE(vt1.c0, vt1.c0, vt0.c0))LIKE(vt0.c0 COLLATE BINARY)) WHERE ((~ (CASE vt0.c0  WHEN t0.c0 THEN vt1.c0 WHEN 'k?>' THEN t0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (NOT (((vt0.c0) NOT NULL))) ASC, CASE WHEN UPPER(vt1.c0) THEN (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) WHEN ((vt0.c0) NOT NULL) THEN ((vt1.c0)>>(t0.c0)) WHEN (((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (- (vt1.c0)) ELSE MIN(t0.c0, vt1.c0, vt0.c0, t0.c0) END  NULLS LAST, ((((IFNULL(0.7375589267255788, vt1.c0))OR(((vt0.c0) NOTNULL))))AND(((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CASE vt0.c0  WHEN t0.c0 THEN vt1.c0 WHEN 'k?>' THEN t0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((((t0.c0) BETWEEN (vt0.c0) AND ('-241687564'))) NOT BETWEEN ((vt0.c0 IN (t0.c0, t0.c0))) AND (((0.5705671569774994) BETWEEN (vt1.c0) AND (x'')))) RIGHT OUTER JOIN vt0 ON ((DATE(vt1.c0, vt1.c0, vt0.c0))LIKE(vt0.c0 COLLATE BINARY)) ORDER BY (NOT (((vt0.c0) NOT NULL))) ASC, CASE WHEN UPPER(vt1.c0) THEN (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) WHEN ((vt0.c0) NOT NULL) THEN ((vt1.c0)>>(t0.c0)) WHEN (((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (- (vt1.c0)) ELSE MIN(t0.c0, vt1.c0, vt0.c0, t0.c0) END  NULLS LAST, ((((IFNULL(0.7375589267255788, vt1.c0))OR(((vt0.c0) NOTNULL))))AND(((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (t0.c0);
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)||(t0.c0)))+(((vt1.c0)%(vt0.c0)))) WHERE (CASE ((vt1.c0)<<(NULL))  WHEN (- (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)<<(NULL))  WHEN (- (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)||(t0.c0)))+(((vt1.c0)%(vt0.c0)))));
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)||(t0.c0)))+(((vt1.c0)%(vt0.c0)))) WHERE (CASE ((vt1.c0)<<(NULL))  WHEN (- (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)<<(NULL))  WHEN (- (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)||(t0.c0)))+(((vt1.c0)%(vt0.c0)))));
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)||(t0.c0)))+(((vt1.c0)%(vt0.c0)))) WHERE (CASE ((vt1.c0)<<(NULL))  WHEN (- (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (775914969 IN (NULL COLLATE RTRIM)) CROSS JOIN vt1 ON (((- (vt1.c0))) IS FALSE) WHERE (CASE WHEN (- ('839511753')) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- ('839511753')) THEN vt1.c0 END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (775914969 IN (NULL COLLATE RTRIM)) CROSS JOIN vt1 ON (((- (vt1.c0))) IS FALSE));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (775914969 IN (NULL COLLATE RTRIM)) CROSS JOIN vt1 ON (((- (vt1.c0))) IS FALSE) WHERE (CASE WHEN (- ('839511753')) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- ('839511753')) THEN vt1.c0 END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (775914969 IN (NULL COLLATE RTRIM)) CROSS JOIN vt1 ON (((- (vt1.c0))) IS FALSE));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (775914969 IN (NULL COLLATE RTRIM)) CROSS JOIN vt1 ON (((- (vt1.c0))) IS FALSE) WHERE (CASE WHEN (- ('839511753')) THEN vt1.c0 END);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt0.c0)/(vt1.c0))  WHEN x'' THEN ((0xfffffffffcce7fd7) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END WHERE ((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS TEXT))) AND (((NOT (vt1.c0)))))) ORDER BY x'4e6f' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS TEXT))) AND (((NOT (vt1.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt0.c0)/(vt1.c0))  WHEN x'' THEN ((0Xfffffffffcce7fd7) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END ORDER BY x'4e6f' COLLATE RTRIM);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt0.c0)/(vt1.c0))  WHEN x'' THEN ((0xfffffffffcce7fd7) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END WHERE ((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS TEXT))) AND (((NOT (vt1.c0)))))) ORDER BY x'4e6f' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS TEXT))) AND (((NOT (vt1.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt0.c0)/(vt1.c0))  WHEN x'' THEN ((0Xfffffffffcce7fd7) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END ORDER BY x'4e6f' COLLATE RTRIM);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt0.c0)/(vt1.c0))  WHEN x'' THEN ((0xfffffffffcce7fd7) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END WHERE ((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS TEXT))) AND (((NOT (vt1.c0)))))) ORDER BY x'4e6f' COLLATE RTRIM;
SELECT * FROM t0 WHERE (((t0.c0)<>(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)!=(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)<>(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)!=(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)<>(t0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((((((t0.c0)IS(t0.c0)))AND(CASE t0.c0  WHEN 'do*s' THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((x'') NOTNULL))))OR(((t0.c0)OR(vt1.c0)))))OR((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)IS(t0.c0)))AND(CASE t0.c0  WHEN 'do*s' THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((x'') NOTNULL))))OR(((t0.c0)OR(vt1.c0)))))OR((NOT (t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((((((t0.c0)IS(t0.c0)))AND(CASE t0.c0  WHEN 'do*s' THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((x'') NOTNULL))))OR(((t0.c0)OR(vt1.c0)))))OR((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)IS(t0.c0)))AND(CASE t0.c0  WHEN 'do*s' THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((x'') NOTNULL))))OR(((t0.c0)OR(vt1.c0)))))OR((NOT (t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((((((t0.c0)IS(t0.c0)))AND(CASE t0.c0  WHEN 'do*s' THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((x'') NOTNULL))))OR(((t0.c0)OR(vt1.c0)))))OR((NOT (t0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c0))<=((((t0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))<=((((t0.c0) ISNULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c0))<=((((t0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))<=((((t0.c0) ISNULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c0))<=((((t0.c0) ISNULL)))));
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)>(x'')) IN (((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>(x'')) IN (((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)>(x'')) IN (((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>(x'')) IN (((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)>(x'')) IN (((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))));
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((vt1.c0) NOTNULL) IN (((vt0.c0)LIKE(vt1.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((('''6#') BETWEEN (vt1.c0) AND (vt0.c0)))) AND (((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOTNULL) IN (((vt0.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((('''6#') BETWEEN (vt1.c0) AND (vt0.c0)))) AND (((t0.c0 IN ())))));
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((vt1.c0) NOTNULL) IN (((vt0.c0)LIKE(vt1.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((('''6#') BETWEEN (vt1.c0) AND (vt0.c0)))) AND (((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOTNULL) IN (((vt0.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((('''6#') BETWEEN (vt1.c0) AND (vt0.c0)))) AND (((t0.c0 IN ())))));
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((vt1.c0) NOTNULL) IN (((vt0.c0)LIKE(vt1.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((('''6#') BETWEEN (vt1.c0) AND (vt0.c0)))) AND (((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)-(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)-(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)-(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)-(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)-(vt1.c0))) NOTNULL));
SELECT ALL * FROM vt1 NOT INDEXED WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (vt1.c0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (MAX(((vt1.c0)<=(vt0.c0)), QUOTE(t0.c0), vt1.c0, (vt1.c0 IN (vt0.c0)))) ORDER BY (((- (vt1.c0)))/((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((MAX(((vt1.c0)<=(vt0.c0)), QUOTE(t0.c0), vt1.c0, (vt1.c0 IN (vt0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((- (vt1.c0)))/((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (MAX(((vt1.c0)<=(vt0.c0)), QUOTE(t0.c0), vt1.c0, (vt1.c0 IN (vt0.c0)))) ORDER BY (((- (vt1.c0)))/((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((MAX(((vt1.c0)<=(vt0.c0)), QUOTE(t0.c0), vt1.c0, (vt1.c0 IN (vt0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((- (vt1.c0)))/((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (MAX(((vt1.c0)<=(vt0.c0)), QUOTE(t0.c0), vt1.c0, (vt1.c0 IN (vt0.c0)))) ORDER BY (((- (vt1.c0)))/((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT * FROM vt1 INNER JOIN t0 ON vt0.c0 INNER JOIN vt0 ON (+ (json_array_length(t0.c0, vt1.c0))) WHERE ((((CAST(vt0.c0 AS TEXT)))==((NULL))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS TEXT)))=((NULL)))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON vt0.c0 INNER JOIN vt0 ON (+ (json_array_length(t0.c0, vt1.c0))));
SELECT * FROM vt1 INNER JOIN t0 ON vt0.c0 INNER JOIN vt0 ON (+ (json_array_length(t0.c0, vt1.c0))) WHERE ((((CAST(vt0.c0 AS TEXT)))==((NULL))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS TEXT)))=((NULL)))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON vt0.c0 INNER JOIN vt0 ON (+ (json_array_length(t0.c0, vt1.c0))));
SELECT * FROM vt1 INNER JOIN t0 ON vt0.c0 INNER JOIN vt0 ON (+ (json_array_length(t0.c0, vt1.c0))) WHERE ((((CAST(vt0.c0 AS TEXT)))==((NULL))));
SELECT ALL * FROM vt1, t0 WHERE (HEX((- (t0.c0)))) ORDER BY ('fj' IN ())  NULLS LAST, CAST(((t0.c0) IS TRUE) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX((- (t0.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ('fj' IN ())  NULLS LAST, CAST(((t0.c0) IS TRUE) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt1, t0 WHERE (HEX((- (t0.c0)))) ORDER BY ('fj' IN ())  NULLS LAST, CAST(((t0.c0) IS TRUE) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX((- (t0.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ('fj' IN ())  NULLS LAST, CAST(((t0.c0) IS TRUE) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt1, t0 WHERE (HEX((- (t0.c0)))) ORDER BY ('fj' IN ())  NULLS LAST, CAST(((t0.c0) IS TRUE) AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON ((t0.c0 COLLATE BINARY)>=('%8R>')) WHERE (CASE WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) THEN load_extension(vt0.c0, vt1.c0) WHEN t0.c0 COLLATE RTRIM THEN ((NULL)<(t0.c0)) WHEN vt1.c0 THEN 94724931 END) ORDER BY CAST(0x3741edef AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) THEN load_extension(vt0.c0, vt1.c0) WHEN t0.c0 COLLATE RTRIM THEN ((NULL)<(t0.c0)) WHEN vt1.c0 THEN 94724931 END) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON ((t0.c0 COLLATE BINARY)>=('%8R>')) ORDER BY CAST(0X3741edef AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON ((t0.c0 COLLATE BINARY)>=('%8R>')) WHERE (CASE WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) THEN load_extension(vt0.c0, vt1.c0) WHEN t0.c0 COLLATE RTRIM THEN ((NULL)<(t0.c0)) WHEN vt1.c0 THEN 94724931 END) ORDER BY CAST(0x3741edef AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) THEN load_extension(vt0.c0, vt1.c0) WHEN t0.c0 COLLATE RTRIM THEN ((NULL)<(t0.c0)) WHEN vt1.c0 THEN 94724931 END) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON ((t0.c0 COLLATE BINARY)>=('%8R>')) ORDER BY CAST(0X3741edef AS BLOB)  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)<>(vt0.c0))) BETWEEN (((vt0.c0)>(t0.c0))) AND (((((((((((((t0.c0)AND(x'2b78')))OR(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(t0.c0))))) ORDER BY (((0xffffffffc1bb0af3)) BETWEEN (((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND (('1826177146'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)!=(vt0.c0))) BETWEEN (((vt0.c0)>(t0.c0))) AND (((((((((((((t0.c0)AND(x'2b78')))OR(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((0xffffffffc1bb0af3)) BETWEEN (((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND (('1826177146'))) DESC);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)<>(vt0.c0))) BETWEEN (((vt0.c0)>(t0.c0))) AND (((((((((((((t0.c0)AND(x'2b78')))OR(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(t0.c0))))) ORDER BY (((0xffffffffc1bb0af3)) BETWEEN (((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND (('1826177146'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)!=(vt0.c0))) BETWEEN (((vt0.c0)>(t0.c0))) AND (((((((((((((t0.c0)AND(x'2b78')))OR(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((0xffffffffc1bb0af3)) BETWEEN (((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND (('1826177146'))) DESC);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)<>(vt0.c0))) BETWEEN (((vt0.c0)>(t0.c0))) AND (((((((((((((t0.c0)AND(x'2b78')))OR(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(t0.c0))))) ORDER BY (((0xffffffffc1bb0af3)) BETWEEN (((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND (('1826177146'))) DESC;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((((vt1.c0)<=(vt1.c0)))>>(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (x'')) THEN CAST(6.43789665E8 AS NUMERIC) WHEN CAST(vt1.c0 AS BLOB) THEN ((((((((vt0.c0)AND(t0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) WHEN CASE WHEN t0.c0 THEN x'' WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 END THEN ((t0.c0)<(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (x'')) THEN CAST(6.43789665E8 AS NUMERIC) WHEN CAST(vt1.c0 AS BLOB) THEN ((((((((vt0.c0)AND(t0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) WHEN CASE WHEN t0.c0 THEN x'' WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 END THEN ((t0.c0)<(t0.c0)) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((((vt1.c0)<=(vt1.c0)))>>(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((((vt1.c0)<=(vt1.c0)))>>(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (x'')) THEN CAST(6.43789665E8 AS NUMERIC) WHEN CAST(vt1.c0 AS BLOB) THEN ((((((((vt0.c0)AND(t0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) WHEN CASE WHEN t0.c0 THEN x'' WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 END THEN ((t0.c0)<(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (x'')) THEN CAST(6.43789665E8 AS NUMERIC) WHEN CAST(vt1.c0 AS BLOB) THEN ((((((((vt0.c0)AND(t0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) WHEN CASE WHEN t0.c0 THEN x'' WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 END THEN ((t0.c0)<(t0.c0)) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((((vt1.c0)<=(vt1.c0)))>>(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT * FROM t0, vt1 WHERE (((CAST(t0.c0 AS INTEGER))IS NOT((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER))IS NOT((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((CAST(t0.c0 AS INTEGER))IS NOT((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER))IS NOT((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((CAST(t0.c0 AS INTEGER))IS NOT((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)LIKE(x'd7af'))) IS TRUE)) ORDER BY ((((vt0.c0)<=(vt1.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (((((((((NULL)OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(x'd7af'))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)<=(vt1.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (((((((((NULL)OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)LIKE(x'd7af'))) IS TRUE)) ORDER BY ((((vt0.c0)<=(vt1.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (((((((((NULL)OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(x'd7af'))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)<=(vt1.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (((((((((NULL)OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)LIKE(x'd7af'))) IS TRUE)) ORDER BY ((((vt0.c0)<=(vt1.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (((((((((NULL)OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((('' COLLATE BINARY) NOT BETWEEN (0.8474318837426288) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((('' COLLATE BINARY) NOT BETWEEN (0.8474318837426288) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('' COLLATE BINARY) NOT BETWEEN (0.8474318837426288) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((('' COLLATE BINARY) NOT BETWEEN (0.8474318837426288) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('' COLLATE BINARY) NOT BETWEEN (0.8474318837426288) AND (((vt0.c0) NOT NULL))));
SELECT * FROM t0 INNER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN vt1 ON (NOT (t0.c0)) WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN vt1 ON (NOT (t0.c0)));
SELECT * FROM t0 INNER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN vt1 ON (NOT (t0.c0)) WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN vt1 ON (NOT (t0.c0)));
SELECT * FROM t0 INNER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN vt1 ON (NOT (t0.c0)) WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ()));
SELECT * FROM t0 FULL OUTER JOIN vt1 ON t0.c0 WHERE (t0.c0) ORDER BY ((((0.14251826606598916)AND(0.3217441501801025)))OR(((t0.c0)+(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON t0.c0 ORDER BY ((((0.14251826606598916)AND(0.3217441501801025)))OR(((t0.c0)+(vt1.c0)))));
SELECT * FROM t0 FULL OUTER JOIN vt1 ON t0.c0 WHERE (t0.c0) ORDER BY ((((0.14251826606598916)AND(0.3217441501801025)))OR(((t0.c0)+(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON t0.c0 ORDER BY ((((0.14251826606598916)AND(0.3217441501801025)))OR(((t0.c0)+(vt1.c0)))));
SELECT * FROM t0 FULL OUTER JOIN vt1 ON t0.c0 WHERE (t0.c0) ORDER BY ((((0.14251826606598916)AND(0.3217441501801025)))OR(((t0.c0)+(vt1.c0))));
SELECT * FROM vt0, vt1 WHERE ((((~ (vt1.c0))) NOTNULL)) ORDER BY ((UNLIKELY(DISTINCT vt0.c0))==((((vt0.c0))>((vt1.c0)))))  NULLS FIRST, x'db49' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((UNLIKELY(DISTINCT vt0.c0))=((((vt0.c0))>((vt1.c0)))))  NULLS FIRST, x'db49' ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((((~ (vt1.c0))) NOTNULL)) ORDER BY ((UNLIKELY(DISTINCT vt0.c0))==((((vt0.c0))>((vt1.c0)))))  NULLS FIRST, x'db49' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((UNLIKELY(DISTINCT vt0.c0))=((((vt0.c0))>((vt1.c0)))))  NULLS FIRST, x'db49' ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((((~ (vt1.c0))) NOTNULL)) ORDER BY ((UNLIKELY(DISTINCT vt0.c0))==((((vt0.c0))>((vt1.c0)))))  NULLS FIRST, x'db49' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOTNULL)) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOTNULL)) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOTNULL)) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) ISNULL);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE (t0.c0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (vt1.c0 IN ()) THEN CAST(vt1.c0 AS TEXT) END) ORDER BY (~ (CAST(vt0.c0 AS BLOB)))  NULLS LAST, (+ (((vt1.c0)AND(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (~ (CAST(vt0.c0 AS BLOB)))  NULLS LAST, (+ (((vt1.c0)AND(vt1.c0)))) DESC);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (vt1.c0 IN ()) THEN CAST(vt1.c0 AS TEXT) END) ORDER BY (~ (CAST(vt0.c0 AS BLOB)))  NULLS LAST, (+ (((vt1.c0)AND(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (~ (CAST(vt0.c0 AS BLOB)))  NULLS LAST, (+ (((vt1.c0)AND(vt1.c0)))) DESC);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (vt1.c0 IN ()) THEN CAST(vt1.c0 AS TEXT) END) ORDER BY (~ (CAST(vt0.c0 AS BLOB)))  NULLS LAST, (+ (((vt1.c0)AND(vt1.c0)))) DESC;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0))!=((vt0.c0))) COLLATE BINARY) ORDER BY ((((vt1.c0)AND(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))!=((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0)AND(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0))!=((vt0.c0))) COLLATE BINARY) ORDER BY ((((vt1.c0)AND(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))!=((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0)AND(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0))!=((vt0.c0))) COLLATE BINARY) ORDER BY ((((vt1.c0)AND(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (CASE WHEN ((NULL)<<(vt0.c0)) THEN CAST(vt1.c0 AS NUMERIC) WHEN CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END THEN CASE WHEN vt1.c0 THEN x'35dc3ab1' END WHEN ((vt1.c0) BETWEEN (0.1858694538717327) AND (t0.c0)) THEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))) WHEN (NOT (vt0.c0)) THEN ((vt0.c0)OR(0.23667185030267446)) WHEN '-1039563289' THEN json_extract(t0.c0, vt0.c0) ELSE CASE NULL  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END END) ORDER BY CAST(((vt0.c0)AND(vt1.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL)<<(vt0.c0)) THEN CAST(vt1.c0 AS NUMERIC) WHEN CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END THEN CASE WHEN vt1.c0 THEN x'35dc3ab1' END WHEN ((vt1.c0) BETWEEN (0.1858694538717327) AND (t0.c0)) THEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))) WHEN (NOT (vt0.c0)) THEN ((vt0.c0)OR(0.23667185030267446)) WHEN '-1039563289' THEN json_extract(t0.c0, vt0.c0) ELSE CASE NULL  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST(((vt0.c0)AND(vt1.c0)) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (CASE WHEN ((NULL)<<(vt0.c0)) THEN CAST(vt1.c0 AS NUMERIC) WHEN CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END THEN CASE WHEN vt1.c0 THEN x'35dc3ab1' END WHEN ((vt1.c0) BETWEEN (0.1858694538717327) AND (t0.c0)) THEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))) WHEN (NOT (vt0.c0)) THEN ((vt0.c0)OR(0.23667185030267446)) WHEN '-1039563289' THEN json_extract(t0.c0, vt0.c0) ELSE CASE NULL  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END END) ORDER BY CAST(((vt0.c0)AND(vt1.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL)<<(vt0.c0)) THEN CAST(vt1.c0 AS NUMERIC) WHEN CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END THEN CASE WHEN vt1.c0 THEN x'35dc3ab1' END WHEN ((vt1.c0) BETWEEN (0.1858694538717327) AND (t0.c0)) THEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))) WHEN (NOT (vt0.c0)) THEN ((vt0.c0)OR(0.23667185030267446)) WHEN '-1039563289' THEN json_extract(t0.c0, vt0.c0) ELSE CASE NULL  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST(((vt0.c0)AND(vt1.c0)) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (CASE WHEN ((NULL)<<(vt0.c0)) THEN CAST(vt1.c0 AS NUMERIC) WHEN CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END THEN CASE WHEN vt1.c0 THEN x'35dc3ab1' END WHEN ((vt1.c0) BETWEEN (0.1858694538717327) AND (t0.c0)) THEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))) WHEN (NOT (vt0.c0)) THEN ((vt0.c0)OR(0.23667185030267446)) WHEN '-1039563289' THEN json_extract(t0.c0, vt0.c0) ELSE CASE NULL  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END END) ORDER BY CAST(((vt0.c0)AND(vt1.c0)) AS TEXT) DESC;
SELECT * FROM vt1, t0, vt0 WHERE (((((t0.c0)LIKE(NULL))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND ((~ (-299231661))))) ORDER BY (vt1.c0 COLLATE NOCASE IN (((((t0.c0)AND(vt1.c0)))OR(t0.c0)))) ASC  NULLS FIRST, (NOT (LIKELIHOOD(vt1.c0, 0.49404416699282205))), UNLIKELY(DISTINCT ((t0.c0) BETWEEN (x'') AND (t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)LIKE(NULL))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND ((~ (-299231661))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (vt1.c0 COLLATE NOCASE IN (((((t0.c0)AND(vt1.c0)))OR(t0.c0)))) ASC  NULLS FIRST, (NOT (LIKELIHOOD(vt1.c0, 0.49404416699282205))), UNLIKELY(DISTINCT ((t0.c0) BETWEEN (x'') AND (t0.c0))) DESC);
SELECT * FROM vt1, t0, vt0 WHERE (((((t0.c0)LIKE(NULL))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND ((~ (-299231661))))) ORDER BY (vt1.c0 COLLATE NOCASE IN (((((t0.c0)AND(vt1.c0)))OR(t0.c0)))) ASC  NULLS FIRST, (NOT (LIKELIHOOD(vt1.c0, 0.49404416699282205))), UNLIKELY(DISTINCT ((t0.c0) BETWEEN (x'') AND (t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)LIKE(NULL))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND ((~ (-299231661))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (vt1.c0 COLLATE NOCASE IN (((((t0.c0)AND(vt1.c0)))OR(t0.c0)))) ASC  NULLS FIRST, (NOT (LIKELIHOOD(vt1.c0, 0.49404416699282205))), UNLIKELY(DISTINCT ((t0.c0) BETWEEN (x'') AND (t0.c0))) DESC);
SELECT * FROM vt1, t0, vt0 WHERE (((((t0.c0)LIKE(NULL))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND ((~ (-299231661))))) ORDER BY (vt1.c0 COLLATE NOCASE IN (((((t0.c0)AND(vt1.c0)))OR(t0.c0)))) ASC  NULLS FIRST, (NOT (LIKELIHOOD(vt1.c0, 0.49404416699282205))), UNLIKELY(DISTINCT ((t0.c0) BETWEEN (x'') AND (t0.c0))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ('0.1356959415432688');
SELECT SUM(count) FROM (SELECT ALL (('0.1356959415432688') IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0 WHERE ('0.1356959415432688');
SELECT SUM(count) FROM (SELECT ALL (('0.1356959415432688') IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0 WHERE ('0.1356959415432688');
SELECT ALL * FROM t0, vt0 WHERE (TRIM(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(vt0.c0)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (TRIM(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(vt0.c0)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (TRIM(vt0.c0));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) WHEN SQLITE_SOURCE_ID() THEN ((-1646215546)<=(vt0.c0)) WHEN (- (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY vt0.c0, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0)-(vt0.c0)))), MIN(((vt0.c0)IS NOT(vt0.c0)), 0.061316355466286, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<<(vt0.c0)), vt0.c0, ((vt0.c0)<>(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) WHEN SQLITE_SOURCE_ID() THEN ((-1646215546)<=(vt0.c0)) WHEN (- (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0)-(vt0.c0)))), MIN(((vt0.c0)IS NOT(vt0.c0)), 0.061316355466286, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<<(vt0.c0)), vt0.c0, ((vt0.c0)!=(vt0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) WHEN SQLITE_SOURCE_ID() THEN ((-1646215546)<=(vt0.c0)) WHEN (- (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY vt0.c0, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0)-(vt0.c0)))), MIN(((vt0.c0)IS NOT(vt0.c0)), 0.061316355466286, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<<(vt0.c0)), vt0.c0, ((vt0.c0)<>(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) WHEN SQLITE_SOURCE_ID() THEN ((-1646215546)<=(vt0.c0)) WHEN (- (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0)-(vt0.c0)))), MIN(((vt0.c0)IS NOT(vt0.c0)), 0.061316355466286, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<<(vt0.c0)), vt0.c0, ((vt0.c0)!=(vt0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) WHEN SQLITE_SOURCE_ID() THEN ((-1646215546)<=(vt0.c0)) WHEN (- (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY vt0.c0, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))||(((vt0.c0)-(vt0.c0)))), MIN(((vt0.c0)IS NOT(vt0.c0)), 0.061316355466286, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<<(vt0.c0)), vt0.c0, ((vt0.c0)<>(vt0.c0))) DESC  NULLS FIRST;
SELECT * FROM t0, vt0 FULL OUTER JOIN vt1 ON ((~ (t0.c0)) IN ()) WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))+(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (((vt1.c0 IN ()))GLOB((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))+(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON ((~ (t0.c0)) IN ()) ORDER BY (((vt1.c0 IN ()))GLOB((vt1.c0 IN ()))));
SELECT * FROM t0, vt0 FULL OUTER JOIN vt1 ON ((~ (t0.c0)) IN ()) WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))+(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (((vt1.c0 IN ()))GLOB((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))+(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON ((~ (t0.c0)) IN ()) ORDER BY (((vt1.c0 IN ()))GLOB((vt1.c0 IN ()))));
SELECT * FROM t0, vt0 FULL OUTER JOIN vt1 ON ((~ (t0.c0)) IN ()) WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))+(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (((vt1.c0 IN ()))GLOB((vt1.c0 IN ())));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((SQLITE_COMPILEOPTION_GET(vt0.c0))AND(vt0.c0 COLLATE NOCASE)))OR(vt0.c0)))AND(t0.c0 COLLATE BINARY)))AND((('(8|g') BETWEEN (t0.c0) AND (vt0.c0))))) ORDER BY (((((t0.c0 IN ()))AND(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND((+ (t0.c0))))  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((SQLITE_COMPILEOPTION_GET(vt0.c0))AND(vt0.c0 COLLATE NOCASE)))OR(vt0.c0)))AND(t0.c0 COLLATE BINARY)))AND((('(8|g') BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c0 IN ()))AND(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND((+ (t0.c0))))  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((SQLITE_COMPILEOPTION_GET(vt0.c0))AND(vt0.c0 COLLATE NOCASE)))OR(vt0.c0)))AND(t0.c0 COLLATE BINARY)))AND((('(8|g') BETWEEN (t0.c0) AND (vt0.c0))))) ORDER BY (((((t0.c0 IN ()))AND(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND((+ (t0.c0))))  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((SQLITE_COMPILEOPTION_GET(vt0.c0))AND(vt0.c0 COLLATE NOCASE)))OR(vt0.c0)))AND(t0.c0 COLLATE BINARY)))AND((('(8|g') BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c0 IN ()))AND(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND((+ (t0.c0))))  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))IS(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))IS(t0.c0))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))IS(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))IS(t0.c0))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))IS(t0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE (x'2540');
SELECT SUM(count) FROM (SELECT ALL ((x'2540') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (x'2540');
SELECT SUM(count) FROM (SELECT ALL ((x'2540') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (x'2540');
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))OR('9Xmd')))AND(vt0.c0)) WHEN (((vt0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0))) THEN CASE WHEN '' THEN vt0.c0 WHEN -4.98004375E8 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN 0.40512966123873184 THEN ((vt0.c0) ISNULL) WHEN CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN t0.c0 COLLATE RTRIM WHEN TRIM(t0.c0, vt0.c0) THEN ((t0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))OR('9Xmd')))AND(vt0.c0)) WHEN (((vt0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0))) THEN CASE WHEN '' THEN vt0.c0 WHEN -4.98004375E8 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN 0.40512966123873184 THEN ((vt0.c0) ISNULL) WHEN CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN t0.c0 COLLATE RTRIM WHEN TRIM(t0.c0, vt0.c0) THEN ((t0.c0) NOT NULL) END);
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))OR('9Xmd')))AND(vt0.c0)) WHEN (((vt0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0))) THEN CASE WHEN '' THEN vt0.c0 WHEN -4.98004375E8 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN 0.40512966123873184 THEN ((vt0.c0) ISNULL) WHEN CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN t0.c0 COLLATE RTRIM WHEN TRIM(t0.c0, vt0.c0) THEN ((t0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))OR('9Xmd')))AND(vt0.c0)) WHEN (((vt0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0))) THEN CASE WHEN '' THEN vt0.c0 WHEN -4.98004375E8 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN 0.40512966123873184 THEN ((vt0.c0) ISNULL) WHEN CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN t0.c0 COLLATE RTRIM WHEN TRIM(t0.c0, vt0.c0) THEN ((t0.c0) NOT NULL) END);
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))OR('9Xmd')))AND(vt0.c0)) WHEN (((vt0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0))) THEN CASE WHEN '' THEN vt0.c0 WHEN -4.98004375E8 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END WHEN 0.40512966123873184 THEN ((vt0.c0) ISNULL) WHEN CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN t0.c0 COLLATE RTRIM WHEN TRIM(t0.c0, vt0.c0) THEN ((t0.c0) NOT NULL) END;
SELECT ALL * FROM t0, vt0 WHERE ((~ (CAST(vt0.c0 AS BLOB)))) ORDER BY CASE WHEN (NOT (t0.c0)) THEN ((t0.c0)*(t0.c0)) ELSE ((vt0.c0)IS(t0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN (NOT (t0.c0)) THEN ((t0.c0)*(t0.c0)) ELSE ((vt0.c0)IS(t0.c0)) END  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((~ (CAST(vt0.c0 AS BLOB)))) ORDER BY CASE WHEN (NOT (t0.c0)) THEN ((t0.c0)*(t0.c0)) ELSE ((vt0.c0)IS(t0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN (NOT (t0.c0)) THEN ((t0.c0)*(t0.c0)) ELSE ((vt0.c0)IS(t0.c0)) END  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((~ (CAST(vt0.c0 AS BLOB)))) ORDER BY CASE WHEN (NOT (t0.c0)) THEN ((t0.c0)*(t0.c0)) ELSE ((vt0.c0)IS(t0.c0)) END  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY json_extract(CHANGES(), vt1.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt1.c0) IS FALSE)) DESC, CAST(vt1.c0 AS TEXT) COLLATE RTRIM DESC, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_extract(CHANGES(), vt1.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt1.c0) IS FALSE)) DESC, CAST(vt1.c0 AS TEXT) COLLATE RTRIM DESC, vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY json_extract(CHANGES(), vt1.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt1.c0) IS FALSE)) DESC, CAST(vt1.c0 AS TEXT) COLLATE RTRIM DESC, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_extract(CHANGES(), vt1.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt1.c0) IS FALSE)) DESC, CAST(vt1.c0 AS TEXT) COLLATE RTRIM DESC, vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((vt0.c0)OR(t0.c0)))OR(t0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt1.c0)LIKE(vt0.c0)))) RIGHT OUTER JOIN t0 ON (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE WHERE (((((((t0.c0) IS TRUE))OR(((vt0.c0) ISNULL))))OR(((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) IS TRUE))OR(((vt0.c0) ISNULL))))OR(((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((vt0.c0)OR(t0.c0)))OR(t0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt1.c0)LIKE(vt0.c0)))) RIGHT OUTER JOIN t0 ON (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((vt0.c0)OR(t0.c0)))OR(t0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt1.c0)LIKE(vt0.c0)))) RIGHT OUTER JOIN t0 ON (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE WHERE (((((((t0.c0) IS TRUE))OR(((vt0.c0) ISNULL))))OR(((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) IS TRUE))OR(((vt0.c0) ISNULL))))OR(((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((vt0.c0)OR(t0.c0)))OR(t0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt1.c0)LIKE(vt0.c0)))) RIGHT OUTER JOIN t0 ON (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE);
SELECT * FROM vt1, vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (x'');
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)%(x''))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)%(x''))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)%(x''))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)%(x''))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)%(x''))) NOTNULL));
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((CAST(t0.c0 AS REAL))AND(vt1.c0)))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS REAL))AND(vt1.c0)))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((CAST(t0.c0 AS REAL))AND(vt1.c0)))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS REAL))AND(vt1.c0)))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((CAST(t0.c0 AS REAL))AND(vt1.c0)))OR((vt1.c0 IN ()))));
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt0.c0)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt0.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt0.c0)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt0.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt0.c0)&(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (((NULL) ISNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((NULL) ISNULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (((NULL) ISNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((NULL) ISNULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (((NULL) ISNULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (0.9392845184402681))) ORDER BY (((((vt1.c0)<<(vt1.c0))))==((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.9392845184402681))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)<<(vt1.c0))))=((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (0.9392845184402681))) ORDER BY (((((vt1.c0)<<(vt1.c0))))==((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.9392845184402681))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)<<(vt1.c0))))=((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (0.9392845184402681))) ORDER BY (((((vt1.c0)<<(vt1.c0))))==((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0, vt0.c0)) IN (((vt0.c0)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c0, vt0.c0)) IN (((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0, vt0.c0)) IN (((vt0.c0)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c0, vt0.c0)) IN (((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0, vt0.c0)) IN (((vt0.c0)=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY (vt0.c0 IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY (vt0.c0 IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY (vt0.c0 IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN (vt1.c0))))) LEFT OUTER JOIN vt0 ON ((0.7866210174490297) BETWEEN ((((vt1.c0, vt1.c0, t0.c0))!=((vt1.c0, vt0.c0, vt1.c0)))) AND ((vt0.c0 IN ()))) WHERE (CASE CHANGES()  WHEN ((vt1.c0)==(t0.c0)) THEN vt0.c0 END) ORDER BY (+ (((((vt1.c0)AND(vt0.c0)))OR(x'')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CHANGES()  WHEN ((vt1.c0)==(t0.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN (vt1.c0))))) LEFT OUTER JOIN vt0 ON ((0.7866210174490297) BETWEEN ((((vt1.c0, vt1.c0, t0.c0))!=((vt1.c0, vt0.c0, vt1.c0)))) AND ((vt0.c0 IN ()))) ORDER BY (+ (((((vt1.c0)AND(vt0.c0)))OR(x'')))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN (vt1.c0))))) LEFT OUTER JOIN vt0 ON ((0.7866210174490297) BETWEEN ((((vt1.c0, vt1.c0, t0.c0))!=((vt1.c0, vt0.c0, vt1.c0)))) AND ((vt0.c0 IN ()))) WHERE (CASE CHANGES()  WHEN ((vt1.c0)==(t0.c0)) THEN vt0.c0 END) ORDER BY (+ (((((vt1.c0)AND(vt0.c0)))OR(x'')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CHANGES()  WHEN ((vt1.c0)==(t0.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN (vt1.c0))))) LEFT OUTER JOIN vt0 ON ((0.7866210174490297) BETWEEN ((((vt1.c0, vt1.c0, t0.c0))!=((vt1.c0, vt0.c0, vt1.c0)))) AND ((vt0.c0 IN ()))) ORDER BY (+ (((((vt1.c0)AND(vt0.c0)))OR(x'')))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN (vt1.c0))))) LEFT OUTER JOIN vt0 ON ((0.7866210174490297) BETWEEN ((((vt1.c0, vt1.c0, t0.c0))!=((vt1.c0, vt0.c0, vt1.c0)))) AND ((vt0.c0 IN ()))) WHERE (CASE CHANGES()  WHEN ((vt1.c0)==(t0.c0)) THEN vt0.c0 END) ORDER BY (+ (((((vt1.c0)AND(vt0.c0)))OR(x'')))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON CAST(((t0.c0)+(t0.c0)) AS NUMERIC) LEFT OUTER JOIN vt0 ON (~ ((((('-57713320')AND(vt0.c0)))AND(t0.c0)))) WHERE (TYPEOF(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CAST(((t0.c0)+(t0.c0)) AS NUMERIC) LEFT OUTER JOIN vt0 ON (~ ((((('-57713320')AND(vt0.c0)))AND(t0.c0)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON CAST(((t0.c0)+(t0.c0)) AS NUMERIC) LEFT OUTER JOIN vt0 ON (~ ((((('-57713320')AND(vt0.c0)))AND(t0.c0)))) WHERE (TYPEOF(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CAST(((t0.c0)+(t0.c0)) AS NUMERIC) LEFT OUTER JOIN vt0 ON (~ ((((('-57713320')AND(vt0.c0)))AND(t0.c0)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON CAST(((t0.c0)+(t0.c0)) AS NUMERIC) LEFT OUTER JOIN vt0 ON (~ ((((('-57713320')AND(vt0.c0)))AND(t0.c0)))) WHERE (TYPEOF(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((NOT (((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM)IS NOT(''));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((vt1.c0 COLLATE RTRIM)IS NOT('')));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((NOT (((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM)IS NOT(''));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((vt1.c0 COLLATE RTRIM)IS NOT('')));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((NOT (((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM)IS NOT(''));
SELECT ALL * FROM vt0 INNER JOIN t0 ON CAST(CAST(vt1.c0 AS TEXT) AS REAL) INNER JOIN vt1 ON CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM WHERE (CASE WHEN NULLIF(DISTINCT vt0.c0, vt1.c0) THEN t0.c0 COLLATE BINARY ELSE CASE WHEN vt1.c0 THEN vt0.c0 END END) ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN ((t0.c0 IN ())) AND ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(DISTINCT vt0.c0, vt1.c0) THEN t0.c0 COLLATE BINARY ELSE CASE WHEN vt1.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST(CAST(vt1.c0 AS TEXT) AS REAL) INNER JOIN vt1 ON CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN ((t0.c0 IN ())) AND ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) ASC);
SELECT ALL * FROM vt0 INNER JOIN t0 ON CAST(CAST(vt1.c0 AS TEXT) AS REAL) INNER JOIN vt1 ON CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM WHERE (CASE WHEN NULLIF(DISTINCT vt0.c0, vt1.c0) THEN t0.c0 COLLATE BINARY ELSE CASE WHEN vt1.c0 THEN vt0.c0 END END) ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN ((t0.c0 IN ())) AND ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(DISTINCT vt0.c0, vt1.c0) THEN t0.c0 COLLATE BINARY ELSE CASE WHEN vt1.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST(CAST(vt1.c0 AS TEXT) AS REAL) INNER JOIN vt1 ON CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN ((t0.c0 IN ())) AND ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) ASC);
SELECT ALL * FROM vt0 INNER JOIN t0 ON CAST(CAST(vt1.c0 AS TEXT) AS REAL) INNER JOIN vt1 ON CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM WHERE (CASE WHEN NULLIF(DISTINCT vt0.c0, vt1.c0) THEN t0.c0 COLLATE BINARY ELSE CASE WHEN vt1.c0 THEN vt0.c0 END END) ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN ((t0.c0 IN ())) AND ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) ASC;
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY ((((t0.c0)/('')))=(CASE '-798935849'  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' END)) DESC  NULLS FIRST, LOWER(json_patch(vt0.c0, vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0)/('')))==(CASE '-798935849'  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' END)) DESC  NULLS FIRST, LOWER(json_patch(vt0.c0, vt0.c0)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY ((((t0.c0)/('')))=(CASE '-798935849'  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' END)) DESC  NULLS FIRST, LOWER(json_patch(vt0.c0, vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0)/('')))==(CASE '-798935849'  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' END)) DESC  NULLS FIRST, LOWER(json_patch(vt0.c0, vt0.c0)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY ((((t0.c0)/('')))=(CASE '-798935849'  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' END)) DESC  NULLS FIRST, LOWER(json_patch(vt0.c0, vt0.c0)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((((((((((NULL)AND(vt1.c0)))AND(vt1.c0)))AND('1740116183')))OR(t0.c0)))AND(vt0.c0)))OR(x'16d2')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((((((NULL)AND(vt1.c0)))AND(vt1.c0)))AND('1740116183')))OR(t0.c0)))AND(vt0.c0)))OR(x'16d2')) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((((((((((NULL)AND(vt1.c0)))AND(vt1.c0)))AND('1740116183')))OR(t0.c0)))AND(vt0.c0)))OR(x'16d2')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((((((NULL)AND(vt1.c0)))AND(vt1.c0)))AND('1740116183')))OR(t0.c0)))AND(vt0.c0)))OR(x'16d2')) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((((((((((NULL)AND(vt1.c0)))AND(vt1.c0)))AND('1740116183')))OR(t0.c0)))AND(vt0.c0)))OR(x'16d2')) COLLATE RTRIM);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))GLOB((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))GLOB((NOT (t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))GLOB((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))GLOB((NOT (t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))GLOB((NOT (t0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((vt0.c0 IN ()));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((vt0.c0)=(vt0.c0)))AND(CAST('-712107971' AS INTEGER))))OR(COALESCE(vt0.c0, vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)==(vt0.c0)))AND(CAST('-712107971' AS INTEGER))))OR(COALESCE(vt0.c0, vt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((vt0.c0)=(vt0.c0)))AND(CAST('-712107971' AS INTEGER))))OR(COALESCE(vt0.c0, vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)==(vt0.c0)))AND(CAST('-712107971' AS INTEGER))))OR(COALESCE(vt0.c0, vt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((vt0.c0)=(vt0.c0)))AND(CAST('-712107971' AS INTEGER))))OR(COALESCE(vt0.c0, vt0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0) ISNULL))OR(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))OR(((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) ISNULL))OR(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))OR(((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0) ISNULL))OR(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))OR(((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) ISNULL))OR(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))OR(((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0) ISNULL))OR(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))OR(((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))));
SELECT * FROM vt0, t0 NOT INDEXED WHERE (((((((((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))OR((t0.c0 IN (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND((vt0.c0 IN ()))))AND(t0.c0))) ORDER BY (((t0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))) AND ((CAST(t0.c0 AS TEXT)))) ASC, (((('-1754251567') NOTNULL)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))OR((t0.c0 IN (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND((vt0.c0 IN ()))))AND(t0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))) AND ((CAST(t0.c0 AS TEXT)))) ASC, (((('-1754251567') NOTNULL)) NOT NULL) ASC);
SELECT * FROM vt0, t0 NOT INDEXED WHERE (((((((((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))OR((t0.c0 IN (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND((vt0.c0 IN ()))))AND(t0.c0))) ORDER BY (((t0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))) AND ((CAST(t0.c0 AS TEXT)))) ASC, (((('-1754251567') NOTNULL)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))OR((t0.c0 IN (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND((vt0.c0 IN ()))))AND(t0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))) AND ((CAST(t0.c0 AS TEXT)))) ASC, (((('-1754251567') NOTNULL)) NOT NULL) ASC);
SELECT * FROM vt0, t0 NOT INDEXED WHERE (((((((((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))OR((t0.c0 IN (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND((vt0.c0 IN ()))))AND(t0.c0))) ORDER BY (((t0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))) AND ((CAST(t0.c0 AS TEXT)))) ASC, (((('-1754251567') NOTNULL)) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((t0.c0)|(0.32167180414147567))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)|(0.32167180414147567))) IS TRUE)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((t0.c0)|(0.32167180414147567))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)|(0.32167180414147567))) IS TRUE)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((t0.c0)|(0.32167180414147567))) IS TRUE));
SELECT ALL * FROM vt1, vt0 WHERE ((((('0.5592425232719354') BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)>=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'')))));
SELECT SUM(count) FROM (SELECT (((((('0.5592425232719354') BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)>=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))));
SELECT ALL * FROM vt1, vt0 WHERE ((((('0.5592425232719354') BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)>=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'')))));
SELECT SUM(count) FROM (SELECT (((((('0.5592425232719354') BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)>=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))));
SELECT ALL * FROM vt1, vt0 WHERE ((((('0.5592425232719354') BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)>=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'')))));
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY COALESCE(((vt0.c0) NOT BETWEEN (0xffffffffd972f313) AND (vt0.c0)), (vt0.c0 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY COALESCE(((vt0.c0) NOT BETWEEN (0Xffffffffd972f313) AND (vt0.c0)), (vt0.c0 IN ()))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY COALESCE(((vt0.c0) NOT BETWEEN (0xffffffffd972f313) AND (vt0.c0)), (vt0.c0 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY COALESCE(((vt0.c0) NOT BETWEEN (0Xffffffffd972f313) AND (vt0.c0)), (vt0.c0 IN ()))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY COALESCE(((vt0.c0) NOT BETWEEN (0xffffffffd972f313) AND (vt0.c0)), (vt0.c0 IN ()))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON (NOT (CAST(t0.c0 AS INTEGER))) WHERE (((((vt1.c0)-(t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)-(t0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (NOT (CAST(t0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON (NOT (CAST(t0.c0 AS INTEGER))) WHERE (((((vt1.c0)-(t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)-(t0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (NOT (CAST(t0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON (NOT (CAST(t0.c0 AS INTEGER))) WHERE (((((vt1.c0)-(t0.c0))) NOTNULL));
SELECT ALL * FROM vt1, t0 INNER JOIN vt0 ON (+ (((vt1.c0) IS TRUE))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON (+ (((vt1.c0) IS TRUE))));
SELECT ALL * FROM vt1, t0 INNER JOIN vt0 ON (+ (((vt1.c0) IS TRUE))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON (+ (((vt1.c0) IS TRUE))));
SELECT ALL * FROM vt1, t0 INNER JOIN vt0 ON (+ (((vt1.c0) IS TRUE))) WHERE (t0.c0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) IS TRUE)) ORDER BY '-315770845' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY '-315770845' COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) IS TRUE)) ORDER BY '-315770845' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY '-315770845' COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) IS TRUE)) ORDER BY '-315770845' COLLATE NOCASE DESC;
SELECT ALL * FROM vt1, vt0, t0 WHERE ('-1196941173') ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1196941173') IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY vt1.c0 ASC);
SELECT ALL * FROM vt1, vt0, t0 WHERE ('-1196941173') ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1196941173') IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY vt1.c0 ASC);
SELECT ALL * FROM vt1, vt0, t0 WHERE ('-1196941173') ORDER BY vt1.c0 ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(x'' AS NUMERIC))|(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS NUMERIC))|(NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(x'' AS NUMERIC))|(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS NUMERIC))|(NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(x'' AS NUMERIC))|(NULL)));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt1.c0)&(vt0.c0)))) WHERE (((TRIM(DISTINCT vt1.c0, vt0.c0)) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR('-1149588948'))) AND ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c0, vt0.c0)) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR('-1149588948'))) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt1.c0)&(vt0.c0)))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt1.c0)&(vt0.c0)))) WHERE (((TRIM(DISTINCT vt1.c0, vt0.c0)) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR('-1149588948'))) AND ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c0, vt0.c0)) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR('-1149588948'))) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt1.c0)&(vt0.c0)))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt1.c0)&(vt0.c0)))) WHERE (((TRIM(DISTINCT vt1.c0, vt0.c0)) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR('-1149588948'))) AND ((~ (vt1.c0)))));
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((vt1.c0) NOTNULL)) BETWEEN ((~ (vt1.c0))) AND (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) BETWEEN ((~ (vt1.c0))) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((vt1.c0) NOTNULL)) BETWEEN ((~ (vt1.c0))) AND (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) BETWEEN ((~ (vt1.c0))) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((vt1.c0) NOTNULL)) BETWEEN ((~ (vt1.c0))) AND (((vt0.c0) ISNULL))));
SELECT COUNT(*) FROM vt1 WHERE (((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)AND(x'')))AND(((vt1.c0) IS FALSE))))OR(CASE x''  WHEN vt1.c0 THEN vt1.c0 END)))OR((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 0.1371269621850899, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)AND(x'')))AND(((vt1.c0) IS FALSE))))OR(CASE x''  WHEN vt1.c0 THEN vt1.c0 END)))OR((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 0.1371269621850899, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)AND(x'')))AND(((vt1.c0) IS FALSE))))OR(CASE x''  WHEN vt1.c0 THEN vt1.c0 END)))OR((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 0.1371269621850899, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)AND(x'')))AND(((vt1.c0) IS FALSE))))OR(CASE x''  WHEN vt1.c0 THEN vt1.c0 END)))OR((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 0.1371269621850899, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)AND(x'')))AND(((vt1.c0) IS FALSE))))OR(CASE x''  WHEN vt1.c0 THEN vt1.c0 END)))OR((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 0.1371269621850899, vt1.c0))))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT NULL))LIKE(((0.4467768832755713)<>(vt1.c0))))) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT), '3l]z';
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL))LIKE(((0.4467768832755713)!=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT), '3l]z');
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT NULL))LIKE(((0.4467768832755713)<>(vt1.c0))))) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT), '3l]z';
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL))LIKE(((0.4467768832755713)!=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT), '3l]z');
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT NULL))LIKE(((0.4467768832755713)<>(vt1.c0))))) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT), '3l]z';
SELECT * FROM t0, vt1, vt0 WHERE (vt0.c0) ORDER BY (- (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (- (vt0.c0))  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (vt0.c0) ORDER BY (- (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (- (vt0.c0))  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (vt0.c0) ORDER BY (- (vt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN vt1 ON (((((((('.~!')OR(((-1413412333)LIKE(vt1.c0)))))OR((- (vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(t0.c0 COLLATE RTRIM)) WHERE (((((((((NULL)OR(HEX(vt0.c0))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((vt1.c0) NOT BETWEEN (t0.c0) AND ('943911718')))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt1.c0))))) ORDER BY ((CASE 0.10773080929608592  WHEN vt0.c0 THEN '0.1582325622606986' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)OR(HEX(vt0.c0))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((vt1.c0) NOT BETWEEN (t0.c0) AND ('943911718')))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON (((((((('.~!')OR(((-1413412333)LIKE(vt1.c0)))))OR((- (vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(t0.c0 COLLATE RTRIM)) ORDER BY ((CASE 0.10773080929608592  WHEN vt0.c0 THEN '0.1582325622606986' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN vt1 ON (((((((('.~!')OR(((-1413412333)LIKE(vt1.c0)))))OR((- (vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(t0.c0 COLLATE RTRIM)) WHERE (((((((((NULL)OR(HEX(vt0.c0))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((vt1.c0) NOT BETWEEN (t0.c0) AND ('943911718')))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt1.c0))))) ORDER BY ((CASE 0.10773080929608592  WHEN vt0.c0 THEN '0.1582325622606986' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)OR(HEX(vt0.c0))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((vt1.c0) NOT BETWEEN (t0.c0) AND ('943911718')))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON (((((((('.~!')OR(((-1413412333)LIKE(vt1.c0)))))OR((- (vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(t0.c0 COLLATE RTRIM)) ORDER BY ((CASE 0.10773080929608592  WHEN vt0.c0 THEN '0.1582325622606986' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN vt1 ON (((((((('.~!')OR(((-1413412333)LIKE(vt1.c0)))))OR((- (vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(t0.c0 COLLATE RTRIM)) WHERE (((((((((NULL)OR(HEX(vt0.c0))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((vt1.c0) NOT BETWEEN (t0.c0) AND ('943911718')))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt1.c0))))) ORDER BY ((CASE 0.10773080929608592  WHEN vt0.c0 THEN '0.1582325622606986' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((- (((vt0.c0)=(vt0.c0))))) ORDER BY ((TYPEOF(vt0.c0))<=(((vt0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((TYPEOF(vt0.c0))<=(((vt0.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((- (((vt0.c0)=(vt0.c0))))) ORDER BY ((TYPEOF(vt0.c0))<=(((vt0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((TYPEOF(vt0.c0))<=(((vt0.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((- (((vt0.c0)=(vt0.c0))))) ORDER BY ((TYPEOF(vt0.c0))<=(((vt0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0) IS TRUE))OR((((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))))))AND(vt1.c0 COLLATE RTRIM)))OR(((t0.c0) IS FALSE))))AND((vt1.c0 IN ()))) LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (1568926777) AND (t0.c0)))/(CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE ((~ (LIKELY(vt1.c0)))) ORDER BY ',^툑' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (LIKELY(vt1.c0)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0) IS TRUE))OR((((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))))))AND(vt1.c0 COLLATE RTRIM)))OR(((t0.c0) IS FALSE))))AND((vt1.c0 IN ()))) LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (1568926777) AND (t0.c0)))/(CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt0.c0 END)) ORDER BY ',^툑' DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0) IS TRUE))OR((((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))))))AND(vt1.c0 COLLATE RTRIM)))OR(((t0.c0) IS FALSE))))AND((vt1.c0 IN ()))) LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (1568926777) AND (t0.c0)))/(CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE ((~ (LIKELY(vt1.c0)))) ORDER BY ',^툑' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (LIKELY(vt1.c0)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0) IS TRUE))OR((((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))))))AND(vt1.c0 COLLATE RTRIM)))OR(((t0.c0) IS FALSE))))AND((vt1.c0 IN ()))) LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (1568926777) AND (t0.c0)))/(CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt0.c0 END)) ORDER BY ',^툑' DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0) IS TRUE))OR((((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))))))AND(vt1.c0 COLLATE RTRIM)))OR(((t0.c0) IS FALSE))))AND((vt1.c0 IN ()))) LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (1568926777) AND (t0.c0)))/(CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE ((~ (LIKELY(vt1.c0)))) ORDER BY ',^툑' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(NULL)) IN (((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(x'')))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(NULL)) IN (((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(x'')))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(NULL)) IN (((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(x'')))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(NULL)) IN (((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(x'')))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(NULL)) IN (((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(x'')))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT * FROM vt0, t0, vt1 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, t0, vt1 NOT INDEXED);
SELECT * FROM vt0, t0, vt1 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, t0, vt1 NOT INDEXED);
SELECT * FROM vt0, t0, vt1 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(t0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((~ (vt0.c0)))IS NOT(((vt0.c0) IS FALSE)))) ORDER BY TOTAL_CHANGES() ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))IS NOT(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY TOTAL_CHANGES() ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((~ (vt0.c0)))IS NOT(((vt0.c0) IS FALSE)))) ORDER BY TOTAL_CHANGES() ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))IS NOT(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY TOTAL_CHANGES() ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((~ (vt0.c0)))IS NOT(((vt0.c0) IS FALSE)))) ORDER BY TOTAL_CHANGES() ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((('195656663')GLOB(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('195656663')GLOB(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((('195656663')GLOB(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('195656663')GLOB(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((('195656663')GLOB(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON x'' WHERE (CASE ((t0.c0) ISNULL)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)) THEN ((vt1.c0)>(t0.c0)) ELSE ((t0.c0)<>(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) ISNULL)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)) THEN ((vt1.c0)>(t0.c0)) ELSE ((t0.c0)<>(vt1.c0)) END) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON x'');
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON x'' WHERE (CASE ((t0.c0) ISNULL)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)) THEN ((vt1.c0)>(t0.c0)) ELSE ((t0.c0)<>(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) ISNULL)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)) THEN ((vt1.c0)>(t0.c0)) ELSE ((t0.c0)<>(vt1.c0)) END) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON x'');
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON x'' WHERE (CASE ((t0.c0) ISNULL)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)) THEN ((vt1.c0)>(t0.c0)) ELSE ((t0.c0)<>(vt1.c0)) END);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC), ((vt1.c0)>(vt1.c0)), ((((NULL)AND(vt1.c0)))OR(vt1.c0)))) AND ((vt1.c0 COLLATE RTRIM, CASE WHEN vt1.c0 THEN vt1.c0 END, x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC), ((vt1.c0)>(vt1.c0)), ((((NULL)AND(vt1.c0)))OR(vt1.c0)))) AND ((vt1.c0 COLLATE RTRIM, CASE WHEN vt1.c0 THEN vt1.c0 END, x'')))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC), ((vt1.c0)>(vt1.c0)), ((((NULL)AND(vt1.c0)))OR(vt1.c0)))) AND ((vt1.c0 COLLATE RTRIM, CASE WHEN vt1.c0 THEN vt1.c0 END, x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC), ((vt1.c0)>(vt1.c0)), ((((NULL)AND(vt1.c0)))OR(vt1.c0)))) AND ((vt1.c0 COLLATE RTRIM, CASE WHEN vt1.c0 THEN vt1.c0 END, x'')))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC), ((vt1.c0)>(vt1.c0)), ((((NULL)AND(vt1.c0)))OR(vt1.c0)))) AND ((vt1.c0 COLLATE RTRIM, CASE WHEN vt1.c0 THEN vt1.c0 END, x'')))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((t0.c0 IN ()) COLLATE RTRIM) ORDER BY (vt1.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (vt1.c0 IN ()));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((t0.c0 IN ()) COLLATE RTRIM) ORDER BY (vt1.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (vt1.c0 IN ()));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((t0.c0 IN ()) COLLATE RTRIM) ORDER BY (vt1.c0 IN ());
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0))) NOT NULL)) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)LIKE(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY x'' DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0))) NOT NULL)) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)LIKE(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY x'' DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0))) NOT NULL)) ORDER BY x'' DESC;
SELECT ALL * FROM vt0, vt1, t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(((((vt1.c0)OR(vt0.c0)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(((((vt1.c0)OR(vt0.c0)))OR(NULL))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(((((vt1.c0)OR(vt0.c0)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(((((vt1.c0)OR(vt0.c0)))OR(NULL))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(((((vt1.c0)OR(vt0.c0)))OR(NULL)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.8678609851809562)AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((((((((vt0.c0) NOTNULL))OR(((vt0.c0)IS(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) IS FALSE))))AND(CAST('-wj7]BlT' AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((((0.8678609851809562)AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0) NOTNULL))OR(((vt0.c0)IS(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) IS FALSE))))AND(CAST('-wj7]BlT' AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.8678609851809562)AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((((((((vt0.c0) NOTNULL))OR(((vt0.c0)IS(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) IS FALSE))))AND(CAST('-wj7]BlT' AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((((0.8678609851809562)AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0) NOTNULL))OR(((vt0.c0)IS(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) IS FALSE))))AND(CAST('-wj7]BlT' AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.8678609851809562)AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((((((((vt0.c0) NOTNULL))OR(((vt0.c0)IS(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) IS FALSE))))AND(CAST('-wj7]BlT' AS BLOB)));
SELECT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END) AND (vt0.c0 COLLATE BINARY))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' ASC);
SELECT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END) AND (vt0.c0 COLLATE BINARY))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' ASC);
SELECT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END) AND (vt0.c0 COLLATE BINARY))) ORDER BY x'' ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)) ORDER BY NULL, TOTAL_CHANGES() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY NULL, TOTAL_CHANGES() ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)) ORDER BY NULL, TOTAL_CHANGES() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY NULL, TOTAL_CHANGES() ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)) ORDER BY NULL, TOTAL_CHANGES() ASC  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c0)AND(vt1.c0))) NOT BETWEEN (((t0.c0) NOTNULL)) AND ((t0.c0 IN (vt1.c0)))) WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)/(vt1.c0)), (vt1.c0 IN ()), ((((t0.c0)OR(t0.c0)))OR(t0.c0)))) AND ((((vt1.c0)LIKE(t0.c0)), TYPEOF(DISTINCT t0.c0), (~ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)/(vt1.c0)), (vt1.c0 IN ()), ((((t0.c0)OR(t0.c0)))OR(t0.c0)))) AND ((((vt1.c0)LIKE(t0.c0)), TYPEOF(DISTINCT t0.c0), (~ (vt1.c0)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c0)AND(vt1.c0))) NOT BETWEEN (((t0.c0) NOTNULL)) AND ((t0.c0 IN (vt1.c0)))));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c0)AND(vt1.c0))) NOT BETWEEN (((t0.c0) NOTNULL)) AND ((t0.c0 IN (vt1.c0)))) WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)/(vt1.c0)), (vt1.c0 IN ()), ((((t0.c0)OR(t0.c0)))OR(t0.c0)))) AND ((((vt1.c0)LIKE(t0.c0)), TYPEOF(DISTINCT t0.c0), (~ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)/(vt1.c0)), (vt1.c0 IN ()), ((((t0.c0)OR(t0.c0)))OR(t0.c0)))) AND ((((vt1.c0)LIKE(t0.c0)), TYPEOF(DISTINCT t0.c0), (~ (vt1.c0)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c0)AND(vt1.c0))) NOT BETWEEN (((t0.c0) NOTNULL)) AND ((t0.c0 IN (vt1.c0)))));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c0)AND(vt1.c0))) NOT BETWEEN (((t0.c0) NOTNULL)) AND ((t0.c0 IN (vt1.c0)))) WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)/(vt1.c0)), (vt1.c0 IN ()), ((((t0.c0)OR(t0.c0)))OR(t0.c0)))) AND ((((vt1.c0)LIKE(t0.c0)), TYPEOF(DISTINCT t0.c0), (~ (vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((vt1.c0)LIKE(t0.c0))) AND (-9.36700511E8))) ORDER BY (vt0.c0 IN ()), ((x'4eff' COLLATE RTRIM)LIKE(json_array_length(vt0.c0))) ASC, rtreenode(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) BETWEEN (((vt1.c0)LIKE(t0.c0))) AND (-9.36700511E8))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (vt0.c0 IN ()), ((x'4eff' COLLATE RTRIM)LIKE(json_array_length(vt0.c0))) ASC, rtreenode(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (~ (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((vt1.c0)LIKE(t0.c0))) AND (-9.36700511E8))) ORDER BY (vt0.c0 IN ()), ((x'4eff' COLLATE RTRIM)LIKE(json_array_length(vt0.c0))) ASC, rtreenode(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) BETWEEN (((vt1.c0)LIKE(t0.c0))) AND (-9.36700511E8))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (vt0.c0 IN ()), ((x'4eff' COLLATE RTRIM)LIKE(json_array_length(vt0.c0))) ASC, rtreenode(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (~ (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((vt1.c0)LIKE(t0.c0))) AND (-9.36700511E8))) ORDER BY (vt0.c0 IN ()), ((x'4eff' COLLATE RTRIM)LIKE(json_array_length(vt0.c0))) ASC, rtreenode(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (~ (vt0.c0)));
SELECT * FROM t0 WHERE (((((t0.c0) ISNULL))IS(ROUND(t0.c0, t0.c0)))) ORDER BY (((t0.c0)IS NOT(t0.c0)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL))IS(ROUND(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)IS NOT(t0.c0)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT * FROM t0 WHERE (((((t0.c0) ISNULL))IS(ROUND(t0.c0, t0.c0)))) ORDER BY (((t0.c0)IS NOT(t0.c0)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL))IS(ROUND(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)IS NOT(t0.c0)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT * FROM t0 WHERE (((((t0.c0) ISNULL))IS(ROUND(t0.c0, t0.c0)))) ORDER BY (((t0.c0)IS NOT(t0.c0)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (LIKELIHOOD((((vt0.c0))>=((vt1.c0))), 0.13992561780181123));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((vt0.c0))>=((vt1.c0))), 0.13992561780181123)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (LIKELIHOOD((((vt0.c0))>=((vt1.c0))), 0.13992561780181123));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((vt0.c0))>=((vt1.c0))), 0.13992561780181123)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (LIKELIHOOD((((vt0.c0))>=((vt1.c0))), 0.13992561780181123));
SELECT ALL * FROM vt1, vt0 WHERE (CASE (('-1873030474') BETWEEN (vt1.c0) AND (vt0.c0))  WHEN (- (vt1.c0)) THEN ((0.781407197066946) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN NULL ELSE (+ (vt1.c0)) END) ORDER BY (vt1.c0 IN ((+ (0x5905fc5c)), (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((1308856481, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (('-1873030474') BETWEEN (vt1.c0) AND (vt0.c0))  WHEN (- (vt1.c0)) THEN ((0.781407197066946) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN NULL ELSE (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt1.c0 IN ((+ (0x5905fc5c)), (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((1308856481, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE (('-1873030474') BETWEEN (vt1.c0) AND (vt0.c0))  WHEN (- (vt1.c0)) THEN ((0.781407197066946) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN NULL ELSE (+ (vt1.c0)) END) ORDER BY (vt1.c0 IN ((+ (0x5905fc5c)), (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((1308856481, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (('-1873030474') BETWEEN (vt1.c0) AND (vt0.c0))  WHEN (- (vt1.c0)) THEN ((0.781407197066946) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN NULL ELSE (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt1.c0 IN ((+ (0x5905fc5c)), (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((1308856481, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE (('-1873030474') BETWEEN (vt1.c0) AND (vt0.c0))  WHEN (- (vt1.c0)) THEN ((0.781407197066946) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN NULL ELSE (+ (vt1.c0)) END) ORDER BY (vt1.c0 IN ((+ (0x5905fc5c)), (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((1308856481, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (load_extension(UNLIKELY(DISTINCT t0.c0))) ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(UNLIKELY(DISTINCT t0.c0))) IS TRUE)  as count FROM t0 ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (load_extension(UNLIKELY(DISTINCT t0.c0))) ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(UNLIKELY(DISTINCT t0.c0))) IS TRUE)  as count FROM t0 ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (load_extension(UNLIKELY(DISTINCT t0.c0))) ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST;
SELECT * FROM t0 INNER JOIN vt0 ON (('FALSE' COLLATE RTRIM) IS TRUE) INNER JOIN vt1 ON ((((((((NULL)AND(x'')))AND(((t0.c0)AND(t0.c0)))))AND(((vt0.c0) IS FALSE))))OR(((vt1.c0)=(t0.c0)))) WHERE ((((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (('FALSE' COLLATE RTRIM) IS TRUE) INNER JOIN vt1 ON ((((((((NULL)AND(x'')))AND(((t0.c0)AND(t0.c0)))))AND(((vt0.c0) IS FALSE))))OR(((vt1.c0)==(t0.c0)))));
SELECT * FROM t0 INNER JOIN vt0 ON (('FALSE' COLLATE RTRIM) IS TRUE) INNER JOIN vt1 ON ((((((((NULL)AND(x'')))AND(((t0.c0)AND(t0.c0)))))AND(((vt0.c0) IS FALSE))))OR(((vt1.c0)=(t0.c0)))) WHERE ((((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (('FALSE' COLLATE RTRIM) IS TRUE) INNER JOIN vt1 ON ((((((((NULL)AND(x'')))AND(((t0.c0)AND(t0.c0)))))AND(((vt0.c0) IS FALSE))))OR(((vt1.c0)==(t0.c0)))));
SELECT * FROM t0 INNER JOIN vt0 ON (('FALSE' COLLATE RTRIM) IS TRUE) INNER JOIN vt1 ON ((((((((NULL)AND(x'')))AND(((t0.c0)AND(t0.c0)))))AND(((vt0.c0) IS FALSE))))OR(((vt1.c0)=(t0.c0)))) WHERE ((((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) IN ()));
SELECT COUNT(*) FROM t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (x'');
SELECT ALL * FROM t0, vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT * FROM t0, vt0 WHERE (((LOWER(DISTINCT t0.c0))||(((((t0.c0)OR(t0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT t0.c0))||(((((t0.c0)OR(t0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((LOWER(DISTINCT t0.c0))||(((((t0.c0)OR(t0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT t0.c0))||(((((t0.c0)OR(t0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((LOWER(DISTINCT t0.c0))||(((((t0.c0)OR(t0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON '-283907814' INNER JOIN t0 ON NULL WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON '-283907814' INNER JOIN t0 ON NULL);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON '-283907814' INNER JOIN t0 ON NULL WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON '-283907814' INNER JOIN t0 ON NULL);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON '-283907814' INNER JOIN t0 ON NULL WHERE ((- (vt0.c0)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))) AND (LIKE(t0.c0, t0.c0))) WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0.5976012397066064 END AS BLOB)) ORDER BY '-712107971'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0.5976012397066064 END AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))) AND (LIKE(t0.c0, t0.c0))) ORDER BY '-712107971'  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))) AND (LIKE(t0.c0, t0.c0))) WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0.5976012397066064 END AS BLOB)) ORDER BY '-712107971'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0.5976012397066064 END AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))) AND (LIKE(t0.c0, t0.c0))) ORDER BY '-712107971'  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))) AND (LIKE(t0.c0, t0.c0))) WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0.5976012397066064 END AS BLOB)) ORDER BY '-712107971'  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1 WHERE ((((((+ (vt1.c0)))AND(CAST(t0.c0 AS NUMERIC))))AND((- (t0.c0))))) ORDER BY ((0.757569109531256) ISNULL) ASC, CAST(((t0.c0) NOT NULL) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt1.c0)))AND(CAST(t0.c0 AS NUMERIC))))AND((- (t0.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((0.757569109531256) ISNULL) ASC, CAST(((t0.c0) NOT NULL) AS INTEGER) DESC);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((((+ (vt1.c0)))AND(CAST(t0.c0 AS NUMERIC))))AND((- (t0.c0))))) ORDER BY ((0.757569109531256) ISNULL) ASC, CAST(((t0.c0) NOT NULL) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt1.c0)))AND(CAST(t0.c0 AS NUMERIC))))AND((- (t0.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((0.757569109531256) ISNULL) ASC, CAST(((t0.c0) NOT NULL) AS INTEGER) DESC);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((((+ (vt1.c0)))AND(CAST(t0.c0 AS NUMERIC))))AND((- (t0.c0))))) ORDER BY ((0.757569109531256) ISNULL) ASC, CAST(((t0.c0) NOT NULL) AS INTEGER) DESC;
SELECT ALL * FROM vt0, t0, vt1 WHERE (0.2449046053975329) ORDER BY CAST(((((t0.c0)AND(vt0.c0)))OR(vt1.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.2449046053975329) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CAST(((((t0.c0)AND(vt0.c0)))OR(vt1.c0)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (0.2449046053975329) ORDER BY CAST(((((t0.c0)AND(vt0.c0)))OR(vt1.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.2449046053975329) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CAST(((((t0.c0)AND(vt0.c0)))OR(vt1.c0)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (0.2449046053975329) ORDER BY CAST(((((t0.c0)AND(vt0.c0)))OR(vt1.c0)) AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 FULL OUTER JOIN vt0 ON (((t0.c0) IS FALSE) IN ()) WHERE (((MAX(vt0.c0, vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((+ (vt1.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((MAX(vt0.c0, vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((+ (vt1.c0))) AND (NULL))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON (((t0.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt1, t0 FULL OUTER JOIN vt0 ON (((t0.c0) IS FALSE) IN ()) WHERE (((MAX(vt0.c0, vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((+ (vt1.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((MAX(vt0.c0, vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((+ (vt1.c0))) AND (NULL))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON (((t0.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt1, t0 FULL OUTER JOIN vt0 ON (((t0.c0) IS FALSE) IN ()) WHERE (((MAX(vt0.c0, vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((+ (vt1.c0))) AND (NULL)));
SELECT * FROM vt1 NOT INDEXED, vt0, t0 WHERE (((((t0.c0)|(vt0.c0))) BETWEEN (((t0.c0) BETWEEN (0.9084173380324929) AND (t0.c0))) AND (CAST(vt0.c0 AS REAL)))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)|(vt0.c0))) BETWEEN (((t0.c0) BETWEEN (0.9084173380324929) AND (t0.c0))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY NULL ASC);
SELECT * FROM vt1 NOT INDEXED, vt0, t0 WHERE (((((t0.c0)|(vt0.c0))) BETWEEN (((t0.c0) BETWEEN (0.9084173380324929) AND (t0.c0))) AND (CAST(vt0.c0 AS REAL)))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)|(vt0.c0))) BETWEEN (((t0.c0) BETWEEN (0.9084173380324929) AND (t0.c0))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY NULL ASC);
SELECT * FROM vt1 NOT INDEXED, vt0, t0 WHERE (((((t0.c0)|(vt0.c0))) BETWEEN (((t0.c0) BETWEEN (0.9084173380324929) AND (t0.c0))) AND (CAST(vt0.c0 AS REAL)))) ORDER BY NULL ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((NULL)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NULL)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NULL)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<>((vt0.c0)))) IS TRUE)) ORDER BY (~ ((+ (vt0.c0)))) ASC  NULLS FIRST, (((((((vt0.c0)AND('1988746475')))AND(vt0.c0))))>=((CAST(vt0.c0 AS BLOB)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<>((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (~ ((+ (vt0.c0)))) ASC  NULLS FIRST, (((((((vt0.c0)AND('1988746475')))AND(vt0.c0))))>=((CAST(vt0.c0 AS BLOB)))) DESC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<>((vt0.c0)))) IS TRUE)) ORDER BY (~ ((+ (vt0.c0)))) ASC  NULLS FIRST, (((((((vt0.c0)AND('1988746475')))AND(vt0.c0))))>=((CAST(vt0.c0 AS BLOB)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<>((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (~ ((+ (vt0.c0)))) ASC  NULLS FIRST, (((((((vt0.c0)AND('1988746475')))AND(vt0.c0))))>=((CAST(vt0.c0 AS BLOB)))) DESC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<>((vt0.c0)))) IS TRUE)) ORDER BY (~ ((+ (vt0.c0)))) ASC  NULLS FIRST, (((((((vt0.c0)AND('1988746475')))AND(vt0.c0))))>=((CAST(vt0.c0 AS BLOB)))) DESC;
SELECT * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE (x'') ORDER BY vt1.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE (x'') ORDER BY vt1.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE (x'') ORDER BY vt1.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY;
SELECT COUNT(*) FROM t0 WHERE (TYPEOF(0.8899166815218369));
SELECT SUM(count) FROM (SELECT ((TYPEOF(0.8899166815218369)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TYPEOF(0.8899166815218369));
SELECT SUM(count) FROM (SELECT ((TYPEOF(0.8899166815218369)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TYPEOF(0.8899166815218369));
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT ((t0.c0)LIKE(vt1.c0))) WHERE ((~ (vt1.c0 COLLATE BINARY))) ORDER BY CASE NULL COLLATE RTRIM  WHEN '-1136035440' THEN (NULL IN ()) WHEN ((vt1.c0) IS TRUE) THEN ((x'')IS NOT('-948797885')) WHEN ((vt1.c0) ISNULL) THEN (+ (vt1.c0)) ELSE (vt0.c0 IN (vt1.c0)) END  NULLS LAST, (((vt1.c0 IN ()))IS NOT(t0.c0)) DESC  NULLS LAST, ((CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)>>(((t0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT ((t0.c0)LIKE(vt1.c0))) ORDER BY CASE NULL COLLATE RTRIM  WHEN '-1136035440' THEN (NULL IN ()) WHEN ((vt1.c0) IS TRUE) THEN ((x'')IS NOT('-948797885')) WHEN ((vt1.c0) ISNULL) THEN (+ (vt1.c0)) ELSE (vt0.c0 IN (vt1.c0)) END  NULLS LAST, (((vt1.c0 IN ()))IS NOT(t0.c0)) DESC  NULLS LAST, ((CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)>>(((t0.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT ((t0.c0)LIKE(vt1.c0))) WHERE ((~ (vt1.c0 COLLATE BINARY))) ORDER BY CASE NULL COLLATE RTRIM  WHEN '-1136035440' THEN (NULL IN ()) WHEN ((vt1.c0) IS TRUE) THEN ((x'')IS NOT('-948797885')) WHEN ((vt1.c0) ISNULL) THEN (+ (vt1.c0)) ELSE (vt0.c0 IN (vt1.c0)) END  NULLS LAST, (((vt1.c0 IN ()))IS NOT(t0.c0)) DESC  NULLS LAST, ((CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)>>(((t0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT ((t0.c0)LIKE(vt1.c0))) ORDER BY CASE NULL COLLATE RTRIM  WHEN '-1136035440' THEN (NULL IN ()) WHEN ((vt1.c0) IS TRUE) THEN ((x'')IS NOT('-948797885')) WHEN ((vt1.c0) ISNULL) THEN (+ (vt1.c0)) ELSE (vt0.c0 IN (vt1.c0)) END  NULLS LAST, (((vt1.c0 IN ()))IS NOT(t0.c0)) DESC  NULLS LAST, ((CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)>>(((t0.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT ((t0.c0)LIKE(vt1.c0))) WHERE ((~ (vt1.c0 COLLATE BINARY))) ORDER BY CASE NULL COLLATE RTRIM  WHEN '-1136035440' THEN (NULL IN ()) WHEN ((vt1.c0) IS TRUE) THEN ((x'')IS NOT('-948797885')) WHEN ((vt1.c0) ISNULL) THEN (+ (vt1.c0)) ELSE (vt0.c0 IN (vt1.c0)) END  NULLS LAST, (((vt1.c0 IN ()))IS NOT(t0.c0)) DESC  NULLS LAST, ((CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)>>(((t0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((- (t0.c0)))IS NOT(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.18139593515771502 ELSE t0.c0 END)) WHERE (HEX(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((HEX(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((- (t0.c0)))IS NOT(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.18139593515771502 ELSE t0.c0 END)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((- (t0.c0)))IS NOT(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.18139593515771502 ELSE t0.c0 END)) WHERE (HEX(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((HEX(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((- (t0.c0)))IS NOT(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.18139593515771502 ELSE t0.c0 END)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((- (t0.c0)))IS NOT(CASE WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.18139593515771502 ELSE t0.c0 END)) WHERE (HEX(vt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt1.c0) NOTNULL))OR(((vt0.c0)-(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL))OR(((vt0.c0)-(t0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt1.c0) NOTNULL))OR(((vt0.c0)-(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL))OR(((vt0.c0)-(t0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt1.c0) NOTNULL))OR(((vt0.c0)-(t0.c0)))));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((x'', CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, x'')) AND ((vt1.c0, ((vt1.c0) IS FALSE), (vt0.c0 IN (NULL))))) RIGHT OUTER JOIN vt0 ON NULL WHERE ((((((((((((t0.c0, 0.6106433128892297, vt1.c0))>((vt1.c0, t0.c0, NULL))))OR((~ (t0.c0)))))OR(((t0.c0)%(vt1.c0)))))AND((((t0.c0, vt0.c0, vt0.c0, vt1.c0, t0.c0))!=((vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))))))AND(0.19198407611472978))) ORDER BY ((CAST(vt0.c0 AS INTEGER))GLOB(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST, ((x'')<<(CASE '771679255'  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN 0.5717953069894395 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c0, 0.6106433128892297, vt1.c0))>((vt1.c0, t0.c0, NULL))))OR((~ (t0.c0)))))OR(((t0.c0)%(vt1.c0)))))AND((((t0.c0, vt0.c0, vt0.c0, vt1.c0, t0.c0))!=((vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))))))AND(0.19198407611472978))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((x'', CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, x'')) AND ((vt1.c0, ((vt1.c0) IS FALSE), (vt0.c0 IN (NULL))))) RIGHT OUTER JOIN vt0 ON NULL ORDER BY ((CAST(vt0.c0 AS INTEGER))GLOB(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST, ((x'')<<(CASE '771679255'  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN 0.5717953069894395 THEN vt0.c0 END))  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN vt1 ON (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((x'', CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, x'')) AND ((vt1.c0, ((vt1.c0) IS FALSE), (vt0.c0 IN (NULL))))) RIGHT OUTER JOIN vt0 ON NULL WHERE ((((((((((((t0.c0, 0.6106433128892297, vt1.c0))>((vt1.c0, t0.c0, NULL))))OR((~ (t0.c0)))))OR(((t0.c0)%(vt1.c0)))))AND((((t0.c0, vt0.c0, vt0.c0, vt1.c0, t0.c0))!=((vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))))))AND(0.19198407611472978))) ORDER BY ((CAST(vt0.c0 AS INTEGER))GLOB(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST, ((x'')<<(CASE '771679255'  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN 0.5717953069894395 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c0, 0.6106433128892297, vt1.c0))>((vt1.c0, t0.c0, NULL))))OR((~ (t0.c0)))))OR(((t0.c0)%(vt1.c0)))))AND((((t0.c0, vt0.c0, vt0.c0, vt1.c0, t0.c0))!=((vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))))))AND(0.19198407611472978))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((x'', CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, x'')) AND ((vt1.c0, ((vt1.c0) IS FALSE), (vt0.c0 IN (NULL))))) RIGHT OUTER JOIN vt0 ON NULL ORDER BY ((CAST(vt0.c0 AS INTEGER))GLOB(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST, ((x'')<<(CASE '771679255'  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN 0.5717953069894395 THEN vt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) ISNULL));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0))>=((vt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>=((vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0))>=((vt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>=((vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0))>=((vt1.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) ORDER BY ((vt1.c0)<<(IFNULL(vt1.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0)<<(IFNULL(vt1.c0, vt0.c0))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) ORDER BY ((vt1.c0)<<(IFNULL(vt1.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0)<<(IFNULL(vt1.c0, vt0.c0))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) ORDER BY ((vt1.c0)<<(IFNULL(vt1.c0, vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((((((((vt0.c0)LIKE(vt0.c0)))OR('1612309651')))AND(((t0.c0)&(vt0.c0)))))AND(t0.c0)))OR('Z0')))AND(CASE WHEN 0.3087080676144107 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(x'')))OR(((vt0.c0)IS(t0.c0)))))OR(ABS(DISTINCT vt0.c0)))) ORDER BY (('z>K<5')<(((vt0.c0)LIKE(t0.c0)))) DESC  NULLS FIRST, ((((t0.c0)>(t0.c0)))<=(((vt0.c0)==(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((vt0.c0)LIKE(vt0.c0)))OR('1612309651')))AND(((t0.c0)&(vt0.c0)))))AND(t0.c0)))OR('Z0')))AND(CASE WHEN 0.3087080676144107 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(x'')))OR(((vt0.c0)IS(t0.c0)))))OR(ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (('z>K<5')<(((vt0.c0)LIKE(t0.c0)))) DESC  NULLS FIRST, ((((t0.c0)>(t0.c0)))<=(((vt0.c0)==(t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((((((((vt0.c0)LIKE(vt0.c0)))OR('1612309651')))AND(((t0.c0)&(vt0.c0)))))AND(t0.c0)))OR('Z0')))AND(CASE WHEN 0.3087080676144107 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(x'')))OR(((vt0.c0)IS(t0.c0)))))OR(ABS(DISTINCT vt0.c0)))) ORDER BY (('z>K<5')<(((vt0.c0)LIKE(t0.c0)))) DESC  NULLS FIRST, ((((t0.c0)>(t0.c0)))<=(((vt0.c0)==(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((vt0.c0)LIKE(vt0.c0)))OR('1612309651')))AND(((t0.c0)&(vt0.c0)))))AND(t0.c0)))OR('Z0')))AND(CASE WHEN 0.3087080676144107 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(x'')))OR(((vt0.c0)IS(t0.c0)))))OR(ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (('z>K<5')<(((vt0.c0)LIKE(t0.c0)))) DESC  NULLS FIRST, ((((t0.c0)>(t0.c0)))<=(((vt0.c0)==(t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((((((((vt0.c0)LIKE(vt0.c0)))OR('1612309651')))AND(((t0.c0)&(vt0.c0)))))AND(t0.c0)))OR('Z0')))AND(CASE WHEN 0.3087080676144107 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(x'')))OR(((vt0.c0)IS(t0.c0)))))OR(ABS(DISTINCT vt0.c0)))) ORDER BY (('z>K<5')<(((vt0.c0)LIKE(t0.c0)))) DESC  NULLS FIRST, ((((t0.c0)>(t0.c0)))<=(((vt0.c0)==(t0.c0)))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((~ (t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((~ (t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((~ (t0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (x'ad91bac8') ORDER BY (((- (vt1.c0)))>>(ABS(vt0.c0))) ASC  NULLS LAST, ((NULLIF(DISTINCT NULL, vt1.c0))GLOB(CAST(t0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'ad91bac8') IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((- (vt1.c0)))>>(ABS(vt0.c0))) ASC  NULLS LAST, ((NULLIF(DISTINCT NULL, vt1.c0))GLOB(CAST(t0.c0 AS TEXT))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (x'ad91bac8') ORDER BY (((- (vt1.c0)))>>(ABS(vt0.c0))) ASC  NULLS LAST, ((NULLIF(DISTINCT NULL, vt1.c0))GLOB(CAST(t0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'ad91bac8') IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((- (vt1.c0)))>>(ABS(vt0.c0))) ASC  NULLS LAST, ((NULLIF(DISTINCT NULL, vt1.c0))GLOB(CAST(t0.c0 AS TEXT))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (x'ad91bac8') ORDER BY (((- (vt1.c0)))>>(ABS(vt0.c0))) ASC  NULLS LAST, ((NULLIF(DISTINCT NULL, vt1.c0))GLOB(CAST(t0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ('943911718');
SELECT SUM(count) FROM (SELECT (('943911718') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('943911718');
SELECT SUM(count) FROM (SELECT (('943911718') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('943911718');
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((CASE WHEN 0.3914622241869017 THEN t0.c0 END))<((CASE WHEN t0.c0 THEN t0.c0 END)))) ORDER BY CASE WHEN ((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN t0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN ((x'c3496d88') IS TRUE) WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (('')IS NOT(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END  NULLS FIRST, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN 0.3914622241869017 THEN t0.c0 END))<((CASE WHEN t0.c0 THEN t0.c0 END)))) IS TRUE)  as count FROM vt0 NOT INDEXED NATURAL JOIN t0 ORDER BY CASE WHEN ((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN t0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN ((x'c3496d88') IS TRUE) WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (('')IS NOT(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END  NULLS FIRST, NULL DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((CASE WHEN 0.3914622241869017 THEN t0.c0 END))<((CASE WHEN t0.c0 THEN t0.c0 END)))) ORDER BY CASE WHEN ((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN t0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN ((x'c3496d88') IS TRUE) WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (('')IS NOT(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END  NULLS FIRST, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN 0.3914622241869017 THEN t0.c0 END))<((CASE WHEN t0.c0 THEN t0.c0 END)))) IS TRUE)  as count FROM vt0 NOT INDEXED NATURAL JOIN t0 ORDER BY CASE WHEN ((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN t0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN ((x'c3496d88') IS TRUE) WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (('')IS NOT(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END  NULLS FIRST, NULL DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((CASE WHEN 0.3914622241869017 THEN t0.c0 END))<((CASE WHEN t0.c0 THEN t0.c0 END)))) ORDER BY CASE WHEN ((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN t0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN ((x'c3496d88') IS TRUE) WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (('')IS NOT(vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END  NULLS FIRST, NULL DESC;
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((t0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (((vt0.c0) ISNULL)))) ORDER BY CASE CHAR(vt1.c0, vt0.c0, vt0.c0)  WHEN (((x''))<((vt0.c0))) THEN ((((t0.c0)OR(0.8283719120024388)))OR(vt1.c0)) WHEN ((((((((0.06031810817944072)AND(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))OR(vt0.c0)) THEN ((vt1.c0) IS FALSE) WHEN '' THEN ((((vt1.c0)AND(t0.c0)))OR(t0.c0)) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) END ASC, ((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)OR(vt1.c0 COLLATE RTRIM)))OR((~ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CASE CHAR(vt1.c0, vt0.c0, vt0.c0)  WHEN (((x''))<((vt0.c0))) THEN ((((t0.c0)OR(0.8283719120024388)))OR(vt1.c0)) WHEN ((((((((0.06031810817944072)AND(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))OR(vt0.c0)) THEN ((vt1.c0) IS FALSE) WHEN '' THEN ((((vt1.c0)AND(t0.c0)))OR(t0.c0)) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) END ASC, ((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)OR(vt1.c0 COLLATE RTRIM)))OR((~ (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((t0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (((vt0.c0) ISNULL)))) ORDER BY CASE CHAR(vt1.c0, vt0.c0, vt0.c0)  WHEN (((x''))<((vt0.c0))) THEN ((((t0.c0)OR(0.8283719120024388)))OR(vt1.c0)) WHEN ((((((((0.06031810817944072)AND(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))OR(vt0.c0)) THEN ((vt1.c0) IS FALSE) WHEN '' THEN ((((vt1.c0)AND(t0.c0)))OR(t0.c0)) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) END ASC, ((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)OR(vt1.c0 COLLATE RTRIM)))OR((~ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CASE CHAR(vt1.c0, vt0.c0, vt0.c0)  WHEN (((x''))<((vt0.c0))) THEN ((((t0.c0)OR(0.8283719120024388)))OR(vt1.c0)) WHEN ((((((((0.06031810817944072)AND(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))OR(vt0.c0)) THEN ((vt1.c0) IS FALSE) WHEN '' THEN ((((vt1.c0)AND(t0.c0)))OR(t0.c0)) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) END ASC, ((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)OR(vt1.c0 COLLATE RTRIM)))OR((~ (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((t0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (((vt0.c0) ISNULL)))) ORDER BY CASE CHAR(vt1.c0, vt0.c0, vt0.c0)  WHEN (((x''))<((vt0.c0))) THEN ((((t0.c0)OR(0.8283719120024388)))OR(vt1.c0)) WHEN ((((((((0.06031810817944072)AND(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))OR(vt0.c0)) THEN ((vt1.c0) IS FALSE) WHEN '' THEN ((((vt1.c0)AND(t0.c0)))OR(t0.c0)) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) END ASC, ((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)OR(vt1.c0 COLLATE RTRIM)))OR((~ (vt0.c0)))) ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0)||(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)||(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0)||(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)||(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0)||(vt1.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE ((((('1931895675')OR(t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((('1931895675')OR(t0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE ((((('1931895675')OR(t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((('1931895675')OR(t0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE ((((('1931895675')OR(t0.c0))) IS FALSE));
SELECT ALL * FROM vt1, vt0, t0 WHERE (GLOB(vt1.c0, ((((t0.c0)OR(t0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((GLOB(vt1.c0, ((((t0.c0)OR(t0.c0)))OR(t0.c0)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (GLOB(vt1.c0, ((((t0.c0)OR(t0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((GLOB(vt1.c0, ((((t0.c0)OR(t0.c0)))OR(t0.c0)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (GLOB(vt1.c0, ((((t0.c0)OR(t0.c0)))OR(t0.c0))));
SELECT COUNT(*) FROM t0 WHERE ((+ (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 'rX' END))) ORDER BY ((CASE t0.c0  WHEN NULL THEN t0.c0 END) NOT BETWEEN (((t0.c0)OR(t0.c0))) AND (t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 'rX' END))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c0  WHEN NULL THEN t0.c0 END) NOT BETWEEN (((t0.c0)OR(t0.c0))) AND (t0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((+ (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 'rX' END))) ORDER BY ((CASE t0.c0  WHEN NULL THEN t0.c0 END) NOT BETWEEN (((t0.c0)OR(t0.c0))) AND (t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 'rX' END))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c0  WHEN NULL THEN t0.c0 END) NOT BETWEEN (((t0.c0)OR(t0.c0))) AND (t0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((+ (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 'rX' END))) ORDER BY ((CASE t0.c0  WHEN NULL THEN t0.c0 END) NOT BETWEEN (((t0.c0)OR(t0.c0))) AND (t0.c0)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(x''))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(x''))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(x''))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(x''))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(x''))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) ISNULL));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND('d_f(%')) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND('d_f(%')) DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND('d_f(%')) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND('d_f(%')) DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND('d_f(%')) DESC;
SELECT * FROM t0, vt1 WHERE (CASE WHEN ((vt1.c0)/(t0.c0)) THEN '-1317595375' END) ORDER BY (((NOT (0.765360113838724))) IS TRUE) DESC, vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)/(t0.c0)) THEN '-1317595375' END) IS TRUE)  as count FROM t0, vt1 ORDER BY (((NOT (0.765360113838724))) IS TRUE) DESC, vt1.c0 ASC);
SELECT * FROM t0, vt1 WHERE (CASE WHEN ((vt1.c0)/(t0.c0)) THEN '-1317595375' END) ORDER BY (((NOT (0.765360113838724))) IS TRUE) DESC, vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)/(t0.c0)) THEN '-1317595375' END) IS TRUE)  as count FROM t0, vt1 ORDER BY (((NOT (0.765360113838724))) IS TRUE) DESC, vt1.c0 ASC);
SELECT * FROM t0, vt1 WHERE (CASE WHEN ((vt1.c0)/(t0.c0)) THEN '-1317595375' END) ORDER BY (((NOT (0.765360113838724))) IS TRUE) DESC, vt1.c0 ASC;
SELECT ALL * FROM t0, vt1, vt0 WHERE (CAST((('&%M ')AND(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((('&%M ')AND(vt1.c0)) AS REAL)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (CAST((('&%M ')AND(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((('&%M ')AND(vt1.c0)) AS REAL)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (CAST((('&%M ')AND(vt1.c0)) AS REAL));
SELECT * FROM t0, vt0 WHERE (((((t0.c0) NOT NULL))GLOB(((((vt0.c0)AND(t0.c0)))OR(t0.c0))))) ORDER BY (NOT (((t0.c0)-(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL))GLOB(((((vt0.c0)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (((t0.c0)-(t0.c0)))) DESC);
SELECT * FROM t0, vt0 WHERE (((((t0.c0) NOT NULL))GLOB(((((vt0.c0)AND(t0.c0)))OR(t0.c0))))) ORDER BY (NOT (((t0.c0)-(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL))GLOB(((((vt0.c0)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (((t0.c0)-(t0.c0)))) DESC);
SELECT * FROM t0, vt0 WHERE (((((t0.c0) NOT NULL))GLOB(((((vt0.c0)AND(t0.c0)))OR(t0.c0))))) ORDER BY (NOT (((t0.c0)-(t0.c0)))) DESC;
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON LOWER((vt1.c0 IN ())) FULL OUTER JOIN vt1 ON (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) BETWEEN (TRIM(vt0.c0, t0.c0)) AND (json_extract(t0.c0, t0.c0))) WHERE ((((vt1.c0 IN (vt1.c0))) BETWEEN (((t0.c0)IS NOT(vt1.c0))) AND ((~ (vt0.c0))))) ORDER BY (((CASE WHEN '837692699' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))>((vt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.c0))) BETWEEN (((t0.c0)IS NOT(vt1.c0))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON LOWER((vt1.c0 IN ())) FULL OUTER JOIN vt1 ON (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) BETWEEN (TRIM(vt0.c0, t0.c0)) AND (json_extract(t0.c0, t0.c0))) ORDER BY (((CASE WHEN '837692699' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))>((vt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON LOWER((vt1.c0 IN ())) FULL OUTER JOIN vt1 ON (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) BETWEEN (TRIM(vt0.c0, t0.c0)) AND (json_extract(t0.c0, t0.c0))) WHERE ((((vt1.c0 IN (vt1.c0))) BETWEEN (((t0.c0)IS NOT(vt1.c0))) AND ((~ (vt0.c0))))) ORDER BY (((CASE WHEN '837692699' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))>((vt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.c0))) BETWEEN (((t0.c0)IS NOT(vt1.c0))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON LOWER((vt1.c0 IN ())) FULL OUTER JOIN vt1 ON (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) BETWEEN (TRIM(vt0.c0, t0.c0)) AND (json_extract(t0.c0, t0.c0))) ORDER BY (((CASE WHEN '837692699' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))>((vt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON LOWER((vt1.c0 IN ())) FULL OUTER JOIN vt1 ON (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) BETWEEN (TRIM(vt0.c0, t0.c0)) AND (json_extract(t0.c0, t0.c0))) WHERE ((((vt1.c0 IN (vt1.c0))) BETWEEN (((t0.c0)IS NOT(vt1.c0))) AND ((~ (vt0.c0))))) ORDER BY (((CASE WHEN '837692699' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))>((vt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (json_quote(TYPEOF(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(TYPEOF(vt0.c0))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (json_quote(TYPEOF(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(TYPEOF(vt0.c0))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (json_quote(TYPEOF(vt0.c0)));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CASE WHEN ((NULL)*(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((((vt1.c0)AND(t0.c0)))OR(t0.c0)) THEN (NOT (x'')) WHEN ((vt1.c0)*(t0.c0)) THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL)*(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((((vt1.c0)AND(t0.c0)))OR(t0.c0)) THEN (NOT (x'')) WHEN ((vt1.c0)*(t0.c0)) THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CASE WHEN ((NULL)*(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((((vt1.c0)AND(t0.c0)))OR(t0.c0)) THEN (NOT (x'')) WHEN ((vt1.c0)*(t0.c0)) THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL)*(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((((vt1.c0)AND(t0.c0)))OR(t0.c0)) THEN (NOT (x'')) WHEN ((vt1.c0)*(t0.c0)) THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CASE WHEN ((NULL)*(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((((vt1.c0)AND(t0.c0)))OR(t0.c0)) THEN (NOT (x'')) WHEN ((vt1.c0)*(t0.c0)) THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT * FROM vt1, vt0, t0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(LOWER(DISTINCT t0.c0))))AND(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(LOWER(DISTINCT t0.c0))))AND(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(LOWER(DISTINCT t0.c0))))AND(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(LOWER(DISTINCT t0.c0))))AND(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(LOWER(DISTINCT t0.c0))))AND(vt1.c0 COLLATE BINARY)));
SELECT * FROM vt0 WHERE (0x6b697fa);
SELECT SUM(count) FROM (SELECT ((0x6b697fa) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0x6b697fa);
SELECT SUM(count) FROM (SELECT ((0x6b697fa) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0x6b697fa);
SELECT * FROM vt1, vt0, t0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (CHANGES());
SELECT * FROM vt1, vt0, t0 WHERE ((t0.c0 IN (t0.c0)) COLLATE RTRIM) ORDER BY LIKELY((((t0.c0))>((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY LIKELY((((t0.c0))>((vt1.c0)))));
SELECT * FROM vt1, vt0, t0 WHERE ((t0.c0 IN (t0.c0)) COLLATE RTRIM) ORDER BY LIKELY((((t0.c0))>((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY LIKELY((((t0.c0))>((vt1.c0)))));
SELECT * FROM vt1, vt0, t0 WHERE ((t0.c0 IN (t0.c0)) COLLATE RTRIM) ORDER BY LIKELY((((t0.c0))>((vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((UNLIKELY('m2ix䯖KT') IN ())) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ('0.9129728249967051', (+ (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((UNLIKELY('m2ix䯖KT') IN ())) IS TRUE)  as count FROM vt1 ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ('0.9129728249967051', (+ (vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((UNLIKELY('m2ix䯖KT') IN ())) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ('0.9129728249967051', (+ (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((UNLIKELY('m2ix䯖KT') IN ())) IS TRUE)  as count FROM vt1 ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ('0.9129728249967051', (+ (vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((UNLIKELY('m2ix䯖KT') IN ())) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ('0.9129728249967051', (+ (vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((+ (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((+ (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((+ (vt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(CASE vt1.c0  WHEN vt0.c0 THEN NULL WHEN 'lr}\nt.' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN '1840004437' END AS BLOB)) ORDER BY ((ROUND(vt1.c0, vt0.c0))IS(vt1.c0));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt0.c0 THEN NULL WHEN 'lr}\nt.' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN '1840004437' END AS BLOB)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((ROUND(vt1.c0, vt0.c0))IS(vt1.c0)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(CASE vt1.c0  WHEN vt0.c0 THEN NULL WHEN 'lr}\nt.' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN '1840004437' END AS BLOB)) ORDER BY ((ROUND(vt1.c0, vt0.c0))IS(vt1.c0));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt0.c0 THEN NULL WHEN 'lr}\nt.' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN '1840004437' END AS BLOB)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((ROUND(vt1.c0, vt0.c0))IS(vt1.c0)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(CASE vt1.c0  WHEN vt0.c0 THEN NULL WHEN 'lr}\nt.' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN '1840004437' END AS BLOB)) ORDER BY ((ROUND(vt1.c0, vt0.c0))IS(vt1.c0));
SELECT * FROM t0, vt1, vt0 WHERE (UNICODE(((vt1.c0)<=(vt1.c0)))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((UNICODE(((vt1.c0)<=(vt1.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) ASC);
SELECT * FROM t0, vt1, vt0 WHERE (UNICODE(((vt1.c0)<=(vt1.c0)))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((UNICODE(((vt1.c0)<=(vt1.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) ASC);
SELECT * FROM t0, vt1, vt0 WHERE (UNICODE(((vt1.c0)<=(vt1.c0)))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) ASC;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CAST(((vt0.c0)<=(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<=(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CAST(((vt0.c0)<=(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<=(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CAST(((vt0.c0)<=(vt1.c0)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL));
SELECT ALL * FROM t0, vt1, vt0 WHERE (vt1.c0) ORDER BY (x'' IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (x'' IN ()) COLLATE RTRIM ASC);
SELECT ALL * FROM t0, vt1, vt0 WHERE (vt1.c0) ORDER BY (x'' IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (x'' IN ()) COLLATE RTRIM ASC);
SELECT ALL * FROM t0, vt1, vt0 WHERE (vt1.c0) ORDER BY (x'' IN ()) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(-1.090771031E9))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))AND(-1.090771031E9))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(-1.090771031E9))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))AND(-1.090771031E9))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(-1.090771031E9))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('');
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)GLOB(t0.c0)))+(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)GLOB(t0.c0)))+(t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)GLOB(t0.c0)))+(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)GLOB(t0.c0)))+(t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)GLOB(t0.c0)))+(t0.c0)));
SELECT COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ('-184016161');
SELECT SUM(count) FROM (SELECT ALL (('-184016161') IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ('-184016161');
SELECT SUM(count) FROM (SELECT ALL (('-184016161') IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ('-184016161');
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((x'' COLLATE RTRIM) BETWEEN (((vt0.c0)<(t0.c0))) AND (DATETIME(vt0.c0, vt0.c0, vt0.c0))) WHERE (CASE WHEN (((vt0.c0))<((vt0.c0))) THEN CAST(vt0.c0 AS REAL) ELSE CAST(vt0.c0 AS NUMERIC) END) ORDER BY ((((((t0.c0, t0.c0, vt0.c0, vt0.c0, t0.c0)) BETWEEN ((t0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, t0.c0, t0.c0, vt0.c0, t0.c0)))))==((((-1.817923255E9)*(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))<((vt0.c0))) THEN CAST(vt0.c0 AS REAL) ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((x'' COLLATE RTRIM) BETWEEN (((vt0.c0)<(t0.c0))) AND (DATETIME(vt0.c0, vt0.c0, vt0.c0))) ORDER BY ((((((t0.c0, t0.c0, vt0.c0, vt0.c0, t0.c0)) BETWEEN ((t0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, t0.c0, t0.c0, vt0.c0, t0.c0)))))==((((-1.817923255E9)*(vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((x'' COLLATE RTRIM) BETWEEN (((vt0.c0)<(t0.c0))) AND (DATETIME(vt0.c0, vt0.c0, vt0.c0))) WHERE (CASE WHEN (((vt0.c0))<((vt0.c0))) THEN CAST(vt0.c0 AS REAL) ELSE CAST(vt0.c0 AS NUMERIC) END) ORDER BY ((((((t0.c0, t0.c0, vt0.c0, vt0.c0, t0.c0)) BETWEEN ((t0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, t0.c0, t0.c0, vt0.c0, t0.c0)))))==((((-1.817923255E9)*(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))<((vt0.c0))) THEN CAST(vt0.c0 AS REAL) ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((x'' COLLATE RTRIM) BETWEEN (((vt0.c0)<(t0.c0))) AND (DATETIME(vt0.c0, vt0.c0, vt0.c0))) ORDER BY ((((((t0.c0, t0.c0, vt0.c0, vt0.c0, t0.c0)) BETWEEN ((t0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, t0.c0, t0.c0, vt0.c0, t0.c0)))))==((((-1.817923255E9)*(vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((x'' COLLATE RTRIM) BETWEEN (((vt0.c0)<(t0.c0))) AND (DATETIME(vt0.c0, vt0.c0, vt0.c0))) WHERE (CASE WHEN (((vt0.c0))<((vt0.c0))) THEN CAST(vt0.c0 AS REAL) ELSE CAST(vt0.c0 AS NUMERIC) END) ORDER BY ((((((t0.c0, t0.c0, vt0.c0, vt0.c0, t0.c0)) BETWEEN ((t0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, t0.c0, t0.c0, vt0.c0, t0.c0)))))==((((-1.817923255E9)*(vt0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c0 AS INTEGER), ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<>((((vt1.c0) ISNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, (vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS INTEGER), ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))!=((((vt1.c0) ISNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, (vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c0 AS INTEGER), ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<>((((vt1.c0) ISNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, (vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS INTEGER), ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))!=((((vt1.c0) ISNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, (vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c0 AS INTEGER), ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<>((((vt1.c0) ISNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, (vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0))))));
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c0)*(t0.c0))) ISNULL)) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)*(t0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (vt0.c0)) COLLATE RTRIM  NULLS FIRST, vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c0)*(t0.c0))) ISNULL)) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)*(t0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (vt0.c0)) COLLATE RTRIM  NULLS FIRST, vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c0)*(t0.c0))) ISNULL)) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((~ (vt0.c0)))%(((vt1.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))%(((vt1.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((~ (vt0.c0)))%(((vt1.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))%(((vt1.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((~ (vt0.c0)))%(((vt1.c0)>(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (1720371547) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<(('1740116183'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((1720371547) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<(('1740116183'))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (1720371547) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<(('1740116183'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((1720371547) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<(('1740116183'))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (1720371547) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<(('1740116183'))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON ((json_array_length(t0.c0, vt0.c0)) BETWEEN (((t0.c0)|(t0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('1361049701'))))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON ((json_array_length(t0.c0, vt0.c0)) BETWEEN (((t0.c0)|(t0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('1361049701'))))));
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON ((json_array_length(t0.c0, vt0.c0)) BETWEEN (((t0.c0)|(t0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('1361049701'))))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON ((json_array_length(t0.c0, vt0.c0)) BETWEEN (((t0.c0)|(t0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('1361049701'))))));
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON ((json_array_length(t0.c0, vt0.c0)) BETWEEN (((t0.c0)|(t0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('1361049701'))))) WHERE (vt1.c0);
SELECT ALL * FROM vt0, t0 WHERE ((+ (((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((+ (((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((+ (((t0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (MAX(((vt1.c0)=(vt1.c0)), (0.07510249089309251 IN ()), ((((((((vt0.c0)OR(vt1.c0)))OR(t0.c0)))OR(t0.c0)))AND('')), (NOT (t0.c0)))) ORDER BY ((TRIM(vt0.c0))!=(((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((MAX(((vt1.c0)=(vt1.c0)), (0.07510249089309251 IN ()), ((((((((vt0.c0)OR(vt1.c0)))OR(t0.c0)))OR(t0.c0)))AND('')), (NOT (t0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((TRIM(vt0.c0))!=(((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (MAX(((vt1.c0)=(vt1.c0)), (0.07510249089309251 IN ()), ((((((((vt0.c0)OR(vt1.c0)))OR(t0.c0)))OR(t0.c0)))AND('')), (NOT (t0.c0)))) ORDER BY ((TRIM(vt0.c0))!=(((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((MAX(((vt1.c0)=(vt1.c0)), (0.07510249089309251 IN ()), ((((((((vt0.c0)OR(vt1.c0)))OR(t0.c0)))OR(t0.c0)))AND('')), (NOT (t0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((TRIM(vt0.c0))!=(((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (MAX(((vt1.c0)=(vt1.c0)), (0.07510249089309251 IN ()), ((((((((vt0.c0)OR(vt1.c0)))OR(t0.c0)))OR(t0.c0)))AND('')), (NOT (t0.c0)))) ORDER BY ((TRIM(vt0.c0))!=(((((t0.c0)OR(t0.c0)))AND(t0.c0))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))!=((vt1.c0))))<(((((0.9376501531684186)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))!=((vt1.c0))))<(((((0.9376501531684186)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))!=((vt1.c0))))<(((((0.9376501531684186)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))!=((vt1.c0))))<(((((0.9376501531684186)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))!=((vt1.c0))))<(((((0.9376501531684186)AND(vt1.c0)))AND(vt1.c0)))));
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (0.2259578477537595))) IS TRUE) WHERE (((((((vt1.c0)AND(0.5414137202194481)))OR(t0.c0))) IS TRUE)) ORDER BY ((((((vt0.c0)OR(0.9129728249967051)))AND(vt0.c0)))>=('Bcytw%')) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(0.5414137202194481)))OR(t0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (0.2259578477537595))) IS TRUE) ORDER BY ((((((vt0.c0)OR(0.9129728249967051)))AND(vt0.c0)))>=('Bcytw%')) ASC);
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (0.2259578477537595))) IS TRUE) WHERE (((((((vt1.c0)AND(0.5414137202194481)))OR(t0.c0))) IS TRUE)) ORDER BY ((((((vt0.c0)OR(0.9129728249967051)))AND(vt0.c0)))>=('Bcytw%')) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(0.5414137202194481)))OR(t0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (0.2259578477537595))) IS TRUE) ORDER BY ((((((vt0.c0)OR(0.9129728249967051)))AND(vt0.c0)))>=('Bcytw%')) ASC);
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (0.2259578477537595))) IS TRUE) WHERE (((((((vt1.c0)AND(0.5414137202194481)))OR(t0.c0))) IS TRUE)) ORDER BY ((((((vt0.c0)OR(0.9129728249967051)))AND(vt0.c0)))>=('Bcytw%')) ASC;
SELECT * FROM t0, vt1, vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) END) ORDER BY ((((-766456627)AND((((vt0.c0))=((vt0.c0))))))AND(((vt1.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((-766456627)AND((((vt0.c0))=((vt0.c0))))))AND(((vt1.c0) NOT NULL)))  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) END) ORDER BY ((((-766456627)AND((((vt0.c0))=((vt0.c0))))))AND(((vt1.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((-766456627)AND((((vt0.c0))=((vt0.c0))))))AND(((vt1.c0) NOT NULL)))  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) END) ORDER BY ((((-766456627)AND((((vt0.c0))=((vt0.c0))))))AND(((vt1.c0) NOT NULL)))  NULLS LAST;
SELECT * FROM t0, vt1, vt0 WHERE (((((((((CAST(vt1.c0 AS INTEGER))AND(CAST(vt0.c0 AS INTEGER))))AND(((((vt1.c0)AND(x'')))OR(vt1.c0)))))AND((vt1.c0 IN ()))))OR(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt1.c0 AS INTEGER))AND(CAST(vt0.c0 AS INTEGER))))AND(((((vt1.c0)AND(x'')))OR(vt1.c0)))))AND((vt1.c0 IN ()))))OR(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (((((((((CAST(vt1.c0 AS INTEGER))AND(CAST(vt0.c0 AS INTEGER))))AND(((((vt1.c0)AND(x'')))OR(vt1.c0)))))AND((vt1.c0 IN ()))))OR(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt1.c0 AS INTEGER))AND(CAST(vt0.c0 AS INTEGER))))AND(((((vt1.c0)AND(x'')))OR(vt1.c0)))))AND((vt1.c0 IN ()))))OR(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (((((((((CAST(vt1.c0 AS INTEGER))AND(CAST(vt0.c0 AS INTEGER))))AND(((((vt1.c0)AND(x'')))OR(vt1.c0)))))AND((vt1.c0 IN ()))))OR(((vt0.c0)GLOB(vt0.c0)))));
SELECT COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE ((((t0.c0 COLLATE NOCASE))!=((((t0.c0)-(vt1.c0)))))) ORDER BY ((((x'') IS FALSE)) IS FALSE) ASC  NULLS FIRST, ((((vt1.c0)%(t0.c0))) NOT BETWEEN (((NULL)||(t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, ((vt1.c0)/(vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 COLLATE NOCASE))<>((((t0.c0)-(vt1.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY ((((x'') IS FALSE)) IS FALSE) ASC  NULLS FIRST, ((((vt1.c0)%(t0.c0))) NOT BETWEEN (((NULL)||(t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, ((vt1.c0)/(vt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE ((((t0.c0 COLLATE NOCASE))!=((((t0.c0)-(vt1.c0)))))) ORDER BY ((((x'') IS FALSE)) IS FALSE) ASC  NULLS FIRST, ((((vt1.c0)%(t0.c0))) NOT BETWEEN (((NULL)||(t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, ((vt1.c0)/(vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 COLLATE NOCASE))<>((((t0.c0)-(vt1.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY ((((x'') IS FALSE)) IS FALSE) ASC  NULLS FIRST, ((((vt1.c0)%(t0.c0))) NOT BETWEEN (((NULL)||(t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, ((vt1.c0)/(vt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE ((((t0.c0 COLLATE NOCASE))!=((((t0.c0)-(vt1.c0)))))) ORDER BY ((((x'') IS FALSE)) IS FALSE) ASC  NULLS FIRST, ((((vt1.c0)%(t0.c0))) NOT BETWEEN (((NULL)||(t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) ASC  NULLS LAST, ((vt1.c0)/(vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS REAL))=(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL))=(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS REAL))=(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL))=(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS REAL))=(CAST(vt1.c0 AS BLOB))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY NULL ASC  NULLS FIRST, (- (UNLIKELY(-1.7976931348623157E308))) ASC, (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY NULL ASC  NULLS FIRST, (- (UNLIKELY(-1.7976931348623157E308))) ASC, (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) DESC);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY NULL ASC  NULLS FIRST, (- (UNLIKELY(-1.7976931348623157E308))) ASC, (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY NULL ASC  NULLS FIRST, (- (UNLIKELY(-1.7976931348623157E308))) ASC, (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) DESC);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY NULL ASC  NULLS FIRST, (- (UNLIKELY(-1.7976931348623157E308))) ASC, (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) DESC;
SELECT ALL * FROM vt0, t0 WHERE (TRIM(x'8215', CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)) ORDER BY ((vt0.c0)IS NOT(t0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(x'8215', CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0)IS NOT(t0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (TRIM(x'8215', CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)) ORDER BY ((vt0.c0)IS NOT(t0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(x'8215', CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0)IS NOT(t0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (TRIM(x'8215', CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)) ORDER BY ((vt0.c0)IS NOT(t0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((('q\h#') NOT BETWEEN ((- (vt1.c0))) AND ((((t0.c0))>((vt1.c0)))))) ORDER BY '' ASC  NULLS LAST, ((((vt1.c0)AND(t0.c0)))OR(CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) DESC  NULLS FIRST, CASE WHEN ((((vt0.c0)AND(t0.c0)))AND(t0.c0)) THEN (((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt0.c0, vt0.c0))) ELSE vt0.c0 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL (((('q\h#') NOT BETWEEN ((- (vt1.c0))) AND ((((t0.c0))>((vt1.c0)))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY '' ASC  NULLS LAST, ((((vt1.c0)AND(t0.c0)))OR(CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) DESC  NULLS FIRST, CASE WHEN ((((vt0.c0)AND(t0.c0)))AND(t0.c0)) THEN (((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt0.c0, vt0.c0))) ELSE vt0.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((('q\h#') NOT BETWEEN ((- (vt1.c0))) AND ((((t0.c0))>((vt1.c0)))))) ORDER BY '' ASC  NULLS LAST, ((((vt1.c0)AND(t0.c0)))OR(CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) DESC  NULLS FIRST, CASE WHEN ((((vt0.c0)AND(t0.c0)))AND(t0.c0)) THEN (((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt0.c0, vt0.c0))) ELSE vt0.c0 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL (((('q\h#') NOT BETWEEN ((- (vt1.c0))) AND ((((t0.c0))>((vt1.c0)))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY '' ASC  NULLS LAST, ((((vt1.c0)AND(t0.c0)))OR(CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) DESC  NULLS FIRST, CASE WHEN ((((vt0.c0)AND(t0.c0)))AND(t0.c0)) THEN (((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt0.c0, vt0.c0))) ELSE vt0.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((('q\h#') NOT BETWEEN ((- (vt1.c0))) AND ((((t0.c0))>((vt1.c0)))))) ORDER BY '' ASC  NULLS LAST, ((((vt1.c0)AND(t0.c0)))OR(CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) DESC  NULLS FIRST, CASE WHEN ((((vt0.c0)AND(t0.c0)))AND(t0.c0)) THEN (((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt0.c0, vt0.c0))) ELSE vt0.c0 COLLATE NOCASE END;
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELY(DISTINCT ((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((vt1.c0) ISNULL))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELY(DISTINCT ((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((vt1.c0) ISNULL))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELY(DISTINCT ((vt1.c0) ISNULL)));
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0) NOT NULL))))OR(LOWER(DISTINCT t0.c0))))OR(((t0.c0) IS TRUE)))) ORDER BY ((((((t0.c0) IS FALSE))AND(NULLIF(0Xf5e9c8e, t0.c0))))AND(((t0.c0)|(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0) NOT NULL))))OR(LOWER(DISTINCT t0.c0))))OR(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0) IS FALSE))AND(NULLIF(0xf5e9c8e, t0.c0))))AND(((t0.c0)|(t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0) NOT NULL))))OR(LOWER(DISTINCT t0.c0))))OR(((t0.c0) IS TRUE)))) ORDER BY ((((((t0.c0) IS FALSE))AND(NULLIF(0Xf5e9c8e, t0.c0))))AND(((t0.c0)|(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0) NOT NULL))))OR(LOWER(DISTINCT t0.c0))))OR(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0) IS FALSE))AND(NULLIF(0xf5e9c8e, t0.c0))))AND(((t0.c0)|(t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0) NOT NULL))))OR(LOWER(DISTINCT t0.c0))))OR(((t0.c0) IS TRUE)))) ORDER BY ((((((t0.c0) IS FALSE))AND(NULLIF(0Xf5e9c8e, t0.c0))))AND(((t0.c0)|(t0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE (((UNICODE(vt1.c0))&(0.5933174775430591)));
SELECT SUM(count) FROM (SELECT ((((UNICODE(vt1.c0))&(0.5933174775430591))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE (((UNICODE(vt1.c0))&(0.5933174775430591)));
SELECT SUM(count) FROM (SELECT ((((UNICODE(vt1.c0))&(0.5933174775430591))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE (((UNICODE(vt1.c0))&(0.5933174775430591)));
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, NULL)) AND ((((((NULL)OR(t0.c0)))OR(t0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)), ((vt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, NULL)) AND ((((((NULL)OR(t0.c0)))OR(t0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)), ((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, NULL)) AND ((((((NULL)OR(t0.c0)))OR(t0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)), ((vt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, NULL)) AND ((((((NULL)OR(t0.c0)))OR(t0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)), ((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, NULL)) AND ((((((NULL)OR(t0.c0)))OR(t0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)), ((vt0.c0) NOTNULL)))));
SELECT ALL * FROM vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c0) NOTNULL)))<>((((vt0.c0)==(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOTNULL)))<>((((vt0.c0)==(t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c0) NOTNULL)))<>((((vt0.c0)==(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOTNULL)))<>((((vt0.c0)==(t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c0) NOTNULL)))<>((((vt0.c0)==(t0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CAST(((1385559783)&('1826177146')) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((1385559783)&('1826177146')) AS REAL)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CAST(((1385559783)&('1826177146')) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((1385559783)&('1826177146')) AS REAL)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CAST(((1385559783)&('1826177146')) AS REAL));
SELECT ALL * FROM vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (vt1.c0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((vt0.c0)OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((vt0.c0)OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((vt0.c0)OR(vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (CAST(0.6311708244328229 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0.6311708244328229 AS TEXT)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (CAST(0.6311708244328229 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0.6311708244328229 AS TEXT)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (CAST(0.6311708244328229 AS TEXT));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (t0.c0) AND (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (t0.c0) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (t0.c0) AND (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (t0.c0) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (t0.c0) AND (t0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (NOT (vt0.c0)) LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt0.c0, t0.c0)) BETWEEN ((vt1.c0, NULL, vt0.c0)) AND ((x'84446be5', '0.521821930695367', x'e8c6'))) AS TEXT) WHERE (UPPER(((t0.c0) IS TRUE))) ORDER BY UNLIKELY(DISTINCT (((t0.c0, vt1.c0, vt1.c0))=(('T', t0.c0, vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((t0.c0) IS TRUE))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (NOT (vt0.c0)) LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt0.c0, t0.c0)) BETWEEN ((vt1.c0, NULL, vt0.c0)) AND ((x'84446be5', '0.521821930695367', x'e8c6'))) AS TEXT) ORDER BY UNLIKELY(DISTINCT (((t0.c0, vt1.c0, vt1.c0))==(('T', t0.c0, vt1.c0)))) DESC);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (NOT (vt0.c0)) LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt0.c0, t0.c0)) BETWEEN ((vt1.c0, NULL, vt0.c0)) AND ((x'84446be5', '0.521821930695367', x'e8c6'))) AS TEXT) WHERE (UPPER(((t0.c0) IS TRUE))) ORDER BY UNLIKELY(DISTINCT (((t0.c0, vt1.c0, vt1.c0))=(('T', t0.c0, vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((t0.c0) IS TRUE))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (NOT (vt0.c0)) LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt0.c0, t0.c0)) BETWEEN ((vt1.c0, NULL, vt0.c0)) AND ((x'84446be5', '0.521821930695367', x'e8c6'))) AS TEXT) ORDER BY UNLIKELY(DISTINCT (((t0.c0, vt1.c0, vt1.c0))==(('T', t0.c0, vt1.c0)))) DESC);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (NOT (vt0.c0)) LEFT OUTER JOIN vt1 ON CAST((((vt1.c0, vt0.c0, t0.c0)) BETWEEN ((vt1.c0, NULL, vt0.c0)) AND ((x'84446be5', '0.521821930695367', x'e8c6'))) AS TEXT) WHERE (UPPER(((t0.c0) IS TRUE))) ORDER BY UNLIKELY(DISTINCT (((t0.c0, vt1.c0, vt1.c0))=(('T', t0.c0, vt1.c0)))) DESC;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT * FROM t0, vt0 WHERE (((((t0.c0)IS NOT(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS NOT(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c0)IS NOT(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS NOT(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c0)IS NOT(t0.c0))) NOT NULL));
SELECT ALL * FROM vt1, vt0 INNER JOIN t0 ON (((((vt1.c0)AND(vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) WHERE (CASE WHEN ((NULL)<(vt1.c0)) THEN (NOT (vt1.c0)) WHEN '1621261814' THEN ((vt1.c0) IS TRUE) WHEN (((vt0.c0))<((vt1.c0))) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE ((t0.c0)IS(t0.c0)) END) ORDER BY vt0.c0 DESC, CASE WHEN (((t0.c0))<((t0.c0))) THEN NULL ELSE vt0.c0 END DESC, ((((t0.c0)||(vt1.c0)))=((- (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL)<(vt1.c0)) THEN (NOT (vt1.c0)) WHEN '1621261814' THEN ((vt1.c0) IS TRUE) WHEN (((vt0.c0))<((vt1.c0))) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE ((t0.c0)IS(t0.c0)) END) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON (((((vt1.c0)AND(vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) ORDER BY vt0.c0 DESC, CASE WHEN (((t0.c0))<((t0.c0))) THEN NULL ELSE vt0.c0 END DESC, ((((t0.c0)||(vt1.c0)))=((- (vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 INNER JOIN t0 ON (((((vt1.c0)AND(vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) WHERE (CASE WHEN ((NULL)<(vt1.c0)) THEN (NOT (vt1.c0)) WHEN '1621261814' THEN ((vt1.c0) IS TRUE) WHEN (((vt0.c0))<((vt1.c0))) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE ((t0.c0)IS(t0.c0)) END) ORDER BY vt0.c0 DESC, CASE WHEN (((t0.c0))<((t0.c0))) THEN NULL ELSE vt0.c0 END DESC, ((((t0.c0)||(vt1.c0)))=((- (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL)<(vt1.c0)) THEN (NOT (vt1.c0)) WHEN '1621261814' THEN ((vt1.c0) IS TRUE) WHEN (((vt0.c0))<((vt1.c0))) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE ((t0.c0)IS(t0.c0)) END) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON (((((vt1.c0)AND(vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) ORDER BY vt0.c0 DESC, CASE WHEN (((t0.c0))<((t0.c0))) THEN NULL ELSE vt0.c0 END DESC, ((((t0.c0)||(vt1.c0)))=((- (vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 INNER JOIN t0 ON (((((vt1.c0)AND(vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) WHERE (CASE WHEN ((NULL)<(vt1.c0)) THEN (NOT (vt1.c0)) WHEN '1621261814' THEN ((vt1.c0) IS TRUE) WHEN (((vt0.c0))<((vt1.c0))) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE ((t0.c0)IS(t0.c0)) END) ORDER BY vt0.c0 DESC, CASE WHEN (((t0.c0))<((t0.c0))) THEN NULL ELSE vt0.c0 END DESC, ((((t0.c0)||(vt1.c0)))=((- (vt1.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)OR(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)OR(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)OR(CAST(vt0.c0 AS TEXT))));
SELECT * FROM vt1 WHERE (CASE UPPER(DISTINCT vt1.c0)  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE UPPER(DISTINCT vt1.c0)  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE UPPER(DISTINCT vt1.c0)  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE UPPER(DISTINCT vt1.c0)  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE UPPER(DISTINCT vt1.c0)  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (NULL) ORDER BY ((((((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END)OR(((t0.c0)<=(t0.c0)))))AND(((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))))OR(((x'4739') NOT NULL))))OR(((((((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(-8.80495299E8)))OR(t0.c0)))AND(vt0.c0)))AND('-134561997')))), ((((((((((vt0.c0)OR(0.8664965340101151)))OR(x'3c27')))OR(vt0.c0)))OR(vt0.c0)))>((+ (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END)OR(((t0.c0)<=(t0.c0)))))AND(((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))))OR(((x'4739') NOT NULL))))OR(((((((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(-8.80495299E8)))OR(t0.c0)))AND(vt0.c0)))AND('-134561997')))), ((((((((((vt0.c0)OR(0.8664965340101151)))OR(x'3c27')))OR(vt0.c0)))OR(vt0.c0)))>((+ (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (NULL) ORDER BY ((((((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END)OR(((t0.c0)<=(t0.c0)))))AND(((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))))OR(((x'4739') NOT NULL))))OR(((((((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(-8.80495299E8)))OR(t0.c0)))AND(vt0.c0)))AND('-134561997')))), ((((((((((vt0.c0)OR(0.8664965340101151)))OR(x'3c27')))OR(vt0.c0)))OR(vt0.c0)))>((+ (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END)OR(((t0.c0)<=(t0.c0)))))AND(((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))))OR(((x'4739') NOT NULL))))OR(((((((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(-8.80495299E8)))OR(t0.c0)))AND(vt0.c0)))AND('-134561997')))), ((((((((((vt0.c0)OR(0.8664965340101151)))OR(x'3c27')))OR(vt0.c0)))OR(vt0.c0)))>((+ (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (NULL) ORDER BY ((((((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END)OR(((t0.c0)<=(t0.c0)))))AND(((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))))OR(((x'4739') NOT NULL))))OR(((((((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(-8.80495299E8)))OR(t0.c0)))AND(vt0.c0)))AND('-134561997')))), ((((((((((vt0.c0)OR(0.8664965340101151)))OR(x'3c27')))OR(vt0.c0)))OR(vt0.c0)))>((+ (vt0.c0)))) DESC;
SELECT ALL * FROM t0 WHERE (((((((((((t0.c0)IS NOT(t0.c0)))OR(((((t0.c0)AND(0.4831467368177288)))AND('-364534610')))))AND((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(CASE t0.c0  WHEN 0.7335153048923538 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)IS NOT(t0.c0)))OR(((((t0.c0)AND(0.4831467368177288)))AND('-364534610')))))AND((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(CASE t0.c0  WHEN 0.7335153048923538 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((t0.c0)IS NOT(t0.c0)))OR(((((t0.c0)AND(0.4831467368177288)))AND('-364534610')))))AND((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(CASE t0.c0  WHEN 0.7335153048923538 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)IS NOT(t0.c0)))OR(((((t0.c0)AND(0.4831467368177288)))AND('-364534610')))))AND((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(CASE t0.c0  WHEN 0.7335153048923538 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((t0.c0)IS NOT(t0.c0)))OR(((((t0.c0)AND(0.4831467368177288)))AND('-364534610')))))AND((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(CASE t0.c0  WHEN 0.7335153048923538 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0)%(t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) NOTNULL) END) ORDER BY '[R讋{xie莦-' ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)%(t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) NOTNULL) END) IS TRUE)  as count FROM t0 ORDER BY '[R讋{xie莦-' ASC);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0)%(t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) NOTNULL) END) ORDER BY '[R讋{xie莦-' ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)%(t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) NOTNULL) END) IS TRUE)  as count FROM t0 ORDER BY '[R讋{xie莦-' ASC);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0)%(t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) NOTNULL) END) ORDER BY '[R讋{xie莦-' ASC;
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN vt1 ON ABS(DISTINCT ((vt1.c0) IS FALSE)) WHERE ((((vt1.c0)<=(t0.c0)) IN (((vt1.c0)IS(vt1.c0)), ((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)<=(t0.c0)) IN (((vt1.c0)IS(vt1.c0)), ((t0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON ABS(DISTINCT ((vt1.c0) IS FALSE)));
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN vt1 ON ABS(DISTINCT ((vt1.c0) IS FALSE)) WHERE ((((vt1.c0)<=(t0.c0)) IN (((vt1.c0)IS(vt1.c0)), ((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)<=(t0.c0)) IN (((vt1.c0)IS(vt1.c0)), ((t0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON ABS(DISTINCT ((vt1.c0) IS FALSE)));
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN vt1 ON ABS(DISTINCT ((vt1.c0) IS FALSE)) WHERE ((((vt1.c0)<=(t0.c0)) IN (((vt1.c0)IS(vt1.c0)), ((t0.c0) NOT NULL))));
SELECT * FROM vt0, vt1, t0 WHERE ((((((vt0.c0))>=((t0.c0))))+(((t0.c0)GLOB(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>=((t0.c0))))+(((t0.c0)GLOB(t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ((((((vt0.c0))>=((t0.c0))))+(((t0.c0)GLOB(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>=((t0.c0))))+(((t0.c0)GLOB(t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ((((((vt0.c0))>=((t0.c0))))+(((t0.c0)GLOB(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((t0.c0)<=(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0)<=(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((t0.c0)<=(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0)<=(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((t0.c0)<=(vt0.c0)) COLLATE NOCASE);
SELECT * FROM vt0, vt1, t0 WHERE (((vt1.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((vt1.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((vt1.c0 COLLATE NOCASE) IS FALSE));
SELECT * FROM t0, vt1 INNER JOIN vt0 ON CAST(((((x'')AND(vt0.c0)))AND(vt0.c0)) AS BLOB) WHERE (((t0.c0) NOT BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (((vt1.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (((vt1.c0)>=(vt1.c0))))) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON CAST(((((x'')AND(vt0.c0)))AND(vt0.c0)) AS BLOB));
SELECT * FROM t0, vt1 INNER JOIN vt0 ON CAST(((((x'')AND(vt0.c0)))AND(vt0.c0)) AS BLOB) WHERE (((t0.c0) NOT BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (((vt1.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (((vt1.c0)>=(vt1.c0))))) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON CAST(((((x'')AND(vt0.c0)))AND(vt0.c0)) AS BLOB));
SELECT * FROM t0, vt1 INNER JOIN vt0 ON CAST(((((x'')AND(vt0.c0)))AND(vt0.c0)) AS BLOB) WHERE (((t0.c0) NOT BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (((vt1.c0)>=(vt1.c0)))));
SELECT ALL * FROM vt0, vt1, t0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((x'' IN ()));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN (vt1.c0 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((0.17136220229007437)) AND ((vt1.c0))) THEN ((vt1.c0) NOT NULL) WHEN ((vt0.c0) IS FALSE) THEN ((vt1.c0) NOT NULL) END) ORDER BY json_insert('0.5753118238993943', (vt1.c0 IN (t0.c0, vt1.c0)), (NOT (vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) IS FALSE) THEN (vt1.c0 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((0.17136220229007437)) AND ((vt1.c0))) THEN ((vt1.c0) NOT NULL) WHEN ((vt0.c0) IS FALSE) THEN ((vt1.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY json_insert('0.5753118238993943', (vt1.c0 IN (t0.c0, vt1.c0)), (NOT (vt1.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN (vt1.c0 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((0.17136220229007437)) AND ((vt1.c0))) THEN ((vt1.c0) NOT NULL) WHEN ((vt0.c0) IS FALSE) THEN ((vt1.c0) NOT NULL) END) ORDER BY json_insert('0.5753118238993943', (vt1.c0 IN (t0.c0, vt1.c0)), (NOT (vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) IS FALSE) THEN (vt1.c0 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((0.17136220229007437)) AND ((vt1.c0))) THEN ((vt1.c0) NOT NULL) WHEN ((vt0.c0) IS FALSE) THEN ((vt1.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY json_insert('0.5753118238993943', (vt1.c0 IN (t0.c0, vt1.c0)), (NOT (vt1.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN (vt1.c0 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((0.17136220229007437)) AND ((vt1.c0))) THEN ((vt1.c0) NOT NULL) WHEN ((vt0.c0) IS FALSE) THEN ((vt1.c0) NOT NULL) END) ORDER BY json_insert('0.5753118238993943', (vt1.c0 IN (t0.c0, vt1.c0)), (NOT (vt1.c0)))  NULLS LAST;
SELECT ALL * FROM vt1, t0 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN t0.c0 COLLATE BINARY WHEN ((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((0.4833358404688728)OR(vt1.c0)) WHEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN LOWER(NULL) THEN vt1.c0 WHEN ((((((((vt1.c0)OR(t0.c0)))OR(x'')))AND(t0.c0)))AND(vt1.c0)) THEN ((t0.c0)*(vt1.c0)) WHEN MAX(t0.c0, t0.c0) THEN CAST(vt1.c0 AS INTEGER) WHEN (vt1.c0 IN ()) THEN (~ (t0.c0)) END) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (json_insert(t0.c0, t0.c0, t0.c0))), LIKELIHOOD(DISTINCT t0.c0, 0.853760017571073) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE RTRIM THEN t0.c0 COLLATE BINARY WHEN ((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((0.4833358404688728)OR(vt1.c0)) WHEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN LOWER(NULL) THEN vt1.c0 WHEN ((((((((vt1.c0)OR(t0.c0)))OR(x'')))AND(t0.c0)))AND(vt1.c0)) THEN ((t0.c0)*(vt1.c0)) WHEN MAX(t0.c0, t0.c0) THEN CAST(vt1.c0 AS INTEGER) WHEN (vt1.c0 IN ()) THEN (~ (t0.c0)) END) IS TRUE)  as count FROM vt1, t0 ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (json_insert(t0.c0, t0.c0, t0.c0))), LIKELIHOOD(DISTINCT t0.c0, 0.853760017571073) COLLATE NOCASE);
SELECT ALL * FROM vt1, t0 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN t0.c0 COLLATE BINARY WHEN ((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((0.4833358404688728)OR(vt1.c0)) WHEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN LOWER(NULL) THEN vt1.c0 WHEN ((((((((vt1.c0)OR(t0.c0)))OR(x'')))AND(t0.c0)))AND(vt1.c0)) THEN ((t0.c0)*(vt1.c0)) WHEN MAX(t0.c0, t0.c0) THEN CAST(vt1.c0 AS INTEGER) WHEN (vt1.c0 IN ()) THEN (~ (t0.c0)) END) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (json_insert(t0.c0, t0.c0, t0.c0))), LIKELIHOOD(DISTINCT t0.c0, 0.853760017571073) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE RTRIM THEN t0.c0 COLLATE BINARY WHEN ((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((0.4833358404688728)OR(vt1.c0)) WHEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN LOWER(NULL) THEN vt1.c0 WHEN ((((((((vt1.c0)OR(t0.c0)))OR(x'')))AND(t0.c0)))AND(vt1.c0)) THEN ((t0.c0)*(vt1.c0)) WHEN MAX(t0.c0, t0.c0) THEN CAST(vt1.c0 AS INTEGER) WHEN (vt1.c0 IN ()) THEN (~ (t0.c0)) END) IS TRUE)  as count FROM vt1, t0 ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (json_insert(t0.c0, t0.c0, t0.c0))), LIKELIHOOD(DISTINCT t0.c0, 0.853760017571073) COLLATE NOCASE);
SELECT ALL * FROM vt1, t0 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN t0.c0 COLLATE BINARY WHEN ((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((0.4833358404688728)OR(vt1.c0)) WHEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN LOWER(NULL) THEN vt1.c0 WHEN ((((((((vt1.c0)OR(t0.c0)))OR(x'')))AND(t0.c0)))AND(vt1.c0)) THEN ((t0.c0)*(vt1.c0)) WHEN MAX(t0.c0, t0.c0) THEN CAST(vt1.c0 AS INTEGER) WHEN (vt1.c0 IN ()) THEN (~ (t0.c0)) END) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (json_insert(t0.c0, t0.c0, t0.c0))), LIKELIHOOD(DISTINCT t0.c0, 0.853760017571073) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0, vt1 WHERE ((+ (t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0, vt1 WHERE ((+ (t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0, vt1 WHERE ((+ (t0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((vt1.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((vt1.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((vt1.c0) NOTNULL) COLLATE BINARY);
SELECT * FROM vt1 WHERE (CASE (NOT (NULL))  WHEN x'' COLLATE BINARY THEN ABS(vt1.c0) WHEN (+ (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) END) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (NULL))  WHEN x'' COLLATE BINARY THEN ABS(vt1.c0) WHEN (+ (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY x'' DESC);
SELECT * FROM vt1 WHERE (CASE (NOT (NULL))  WHEN x'' COLLATE BINARY THEN ABS(vt1.c0) WHEN (+ (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) END) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (NULL))  WHEN x'' COLLATE BINARY THEN ABS(vt1.c0) WHEN (+ (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY x'' DESC);
SELECT * FROM vt1 WHERE (CASE (NOT (NULL))  WHEN x'' COLLATE BINARY THEN ABS(vt1.c0) WHEN (+ (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) END) ORDER BY x'' DESC;
SELECT * FROM vt1, t0 WHERE (NULLIF(DISTINCT json(vt1.c0), t0.c0 COLLATE RTRIM)) ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))OR(((((((((vt1.c0)AND(t0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR(((((t0.c0)AND(t0.c0)))AND(x'')))))AND(((vt1.c0)<(t0.c0)))))OR(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT json(vt1.c0), t0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))OR(((((((((vt1.c0)AND(t0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR(((((t0.c0)AND(t0.c0)))AND(x'')))))AND(((vt1.c0)<(t0.c0)))))OR(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM vt1, t0 WHERE (NULLIF(DISTINCT json(vt1.c0), t0.c0 COLLATE RTRIM)) ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))OR(((((((((vt1.c0)AND(t0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR(((((t0.c0)AND(t0.c0)))AND(x'')))))AND(((vt1.c0)<(t0.c0)))))OR(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT json(vt1.c0), t0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))OR(((((((((vt1.c0)AND(t0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR(((((t0.c0)AND(t0.c0)))AND(x'')))))AND(((vt1.c0)<(t0.c0)))))OR(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM vt1, t0 WHERE (NULLIF(DISTINCT json(vt1.c0), t0.c0 COLLATE RTRIM)) ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))OR(((((((((vt1.c0)AND(t0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR(((((t0.c0)AND(t0.c0)))AND(x'')))))AND(((vt1.c0)<(t0.c0)))))OR(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT * FROM t0 CROSS JOIN vt1 ON (- ((NOT (NULL)))) FULL OUTER JOIN vt0 ON CAST((vt0.c0 IN ()) AS NUMERIC) WHERE (vt0.c0) ORDER BY (~ (t0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (- ((NOT (NULL)))) FULL OUTER JOIN vt0 ON CAST((vt0.c0 IN ()) AS NUMERIC) ORDER BY (~ (t0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN vt1 ON (- ((NOT (NULL)))) FULL OUTER JOIN vt0 ON CAST((vt0.c0 IN ()) AS NUMERIC) WHERE (vt0.c0) ORDER BY (~ (t0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (- ((NOT (NULL)))) FULL OUTER JOIN vt0 ON CAST((vt0.c0 IN ()) AS NUMERIC) ORDER BY (~ (t0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN vt1 ON (- ((NOT (NULL)))) FULL OUTER JOIN vt0 ON CAST((vt0.c0 IN ()) AS NUMERIC) WHERE (vt0.c0) ORDER BY (~ (t0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT * FROM vt1, t0, vt0 WHERE ((((CAST(t0.c0 AS TEXT)))>=((((vt1.c0)<(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c0 AS TEXT)))>=((((vt1.c0)<(vt0.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((((CAST(t0.c0 AS TEXT)))>=((((vt1.c0)<(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c0 AS TEXT)))>=((((vt1.c0)<(vt0.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((((CAST(t0.c0 AS TEXT)))>=((((vt1.c0)<(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE UPPER(DISTINCT t0.c0)  WHEN ((vt1.c0)-(t0.c0)) THEN ((vt0.c0) NOT NULL) ELSE (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((-1630007813, t0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE UPPER(DISTINCT t0.c0)  WHEN ((vt1.c0)-(t0.c0)) THEN ((vt0.c0) NOT NULL) ELSE (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((-1630007813, t0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE UPPER(DISTINCT t0.c0)  WHEN ((vt1.c0)-(t0.c0)) THEN ((vt0.c0) NOT NULL) ELSE (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((-1630007813, t0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE UPPER(DISTINCT t0.c0)  WHEN ((vt1.c0)-(t0.c0)) THEN ((vt0.c0) NOT NULL) ELSE (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((-1630007813, t0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE UPPER(DISTINCT t0.c0)  WHEN ((vt1.c0)-(t0.c0)) THEN ((vt0.c0) NOT NULL) ELSE (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((-1630007813, t0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))) END);
SELECT * FROM vt1, t0 WHERE ((((((vt1.c0, t0.c0, vt1.c0))<=((vt1.c0, vt1.c0, t0.c0))))!=(0.0804647605873341 COLLATE NOCASE))) ORDER BY ((((vt1.c0)/(t0.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, t0.c0, vt1.c0))<=((vt1.c0, vt1.c0, t0.c0))))!=(0.0804647605873341 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((vt1.c0)/(t0.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (t0.c0))  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ((((((vt1.c0, t0.c0, vt1.c0))<=((vt1.c0, vt1.c0, t0.c0))))!=(0.0804647605873341 COLLATE NOCASE))) ORDER BY ((((vt1.c0)/(t0.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, t0.c0, vt1.c0))<=((vt1.c0, vt1.c0, t0.c0))))!=(0.0804647605873341 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((vt1.c0)/(t0.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (t0.c0))  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ((((((vt1.c0, t0.c0, vt1.c0))<=((vt1.c0, vt1.c0, t0.c0))))!=(0.0804647605873341 COLLATE NOCASE))) ORDER BY ((((vt1.c0)/(t0.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (t0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CAST(t0.c0 AS REAL)) BETWEEN (0.8051844599960537) AND ((x'' IN (t0.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL)) BETWEEN (0.8051844599960537) AND ((x'' IN (t0.c0, vt1.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CAST(t0.c0 AS REAL)) BETWEEN (0.8051844599960537) AND ((x'' IN (t0.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL)) BETWEEN (0.8051844599960537) AND ((x'' IN (t0.c0, vt1.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CAST(t0.c0 AS REAL)) BETWEEN (0.8051844599960537) AND ((x'' IN (t0.c0, vt1.c0)))));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON CAST(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(t0.c0)))OR(vt0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt0 ON NULL COLLATE BINARY WHERE (((((((((vt0.c0)AND('h')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND('h')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CAST(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(t0.c0)))OR(vt0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt0 ON NULL COLLATE BINARY);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON CAST(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(t0.c0)))OR(vt0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt0 ON NULL COLLATE BINARY WHERE (((((((((vt0.c0)AND('h')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND('h')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CAST(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(t0.c0)))OR(vt0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt0 ON NULL COLLATE BINARY);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON vt0.c0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt0.c0);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON vt0.c0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt0.c0);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON vt0.c0 WHERE (x'');
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON CAST(CAST(vt1.c0 AS INTEGER) AS BLOB) WHERE (t0.c0 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON CAST(CAST(vt1.c0 AS INTEGER) AS BLOB));
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON CAST(CAST(vt1.c0 AS INTEGER) AS BLOB) WHERE (t0.c0 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON CAST(CAST(vt1.c0 AS INTEGER) AS BLOB));
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON CAST(CAST(vt1.c0 AS INTEGER) AS BLOB) WHERE (t0.c0 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM);
SELECT * FROM vt1 INNER JOIN vt0 ON CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt1.c0)IS(vt0.c0)) THEN -690031930 WHEN NULLIF(vt1.c0, vt1.c0) THEN ((vt0.c0)-(vt1.c0)) ELSE '' END WHERE ((((((vt0.c0)>(vt0.c0))))=((CAST(NULL AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)>(vt0.c0))))=((CAST(NULL AS BLOB))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt1.c0)IS(vt0.c0)) THEN -690031930 WHEN NULLIF(vt1.c0, vt1.c0) THEN ((vt0.c0)-(vt1.c0)) ELSE '' END);
SELECT * FROM vt1 INNER JOIN vt0 ON CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt1.c0)IS(vt0.c0)) THEN -690031930 WHEN NULLIF(vt1.c0, vt1.c0) THEN ((vt0.c0)-(vt1.c0)) ELSE '' END WHERE ((((((vt0.c0)>(vt0.c0))))=((CAST(NULL AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)>(vt0.c0))))=((CAST(NULL AS BLOB))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt1.c0)IS(vt0.c0)) THEN -690031930 WHEN NULLIF(vt1.c0, vt1.c0) THEN ((vt0.c0)-(vt1.c0)) ELSE '' END);
SELECT * FROM vt1 INNER JOIN vt0 ON CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt1.c0)IS(vt0.c0)) THEN -690031930 WHEN NULLIF(vt1.c0, vt1.c0) THEN ((vt0.c0)-(vt1.c0)) ELSE '' END WHERE ((((((vt0.c0)>(vt0.c0))))=((CAST(NULL AS BLOB)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (-1.532285404E9) ORDER BY ((((((vt0.c0) NOTNULL))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR((+ (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1.532285404E9) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0) NOTNULL))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR((+ (vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (-1.532285404E9) ORDER BY ((((((vt0.c0) NOTNULL))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR((+ (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1.532285404E9) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0) NOTNULL))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR((+ (vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (-1.532285404E9) ORDER BY ((((((vt0.c0) NOTNULL))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR((+ (vt1.c0))))  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (vt0.c0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(((t0.c0)||(-5.31751272E8)))))OR(((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(((t0.c0)||(-5.31751272E8)))))OR(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(((t0.c0)||(-5.31751272E8)))))OR(((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(((t0.c0)||(-5.31751272E8)))))OR(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(((t0.c0)||(-5.31751272E8)))))OR(((t0.c0) IS FALSE))));
SELECT * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (x'');
SELECT ALL * FROM t0 WHERE (((((((((((t0.c0)<(t0.c0)))OR(((t0.c0)<(t0.c0)))))AND((t0.c0 IN (t0.c0)))))OR(CAST(t0.c0 AS BLOB))))AND(CAST(t0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)<(t0.c0)))OR(((t0.c0)<(t0.c0)))))AND((t0.c0 IN (t0.c0)))))OR(CAST(t0.c0 AS BLOB))))AND(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((t0.c0)<(t0.c0)))OR(((t0.c0)<(t0.c0)))))AND((t0.c0 IN (t0.c0)))))OR(CAST(t0.c0 AS BLOB))))AND(CAST(t0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)<(t0.c0)))OR(((t0.c0)<(t0.c0)))))AND((t0.c0 IN (t0.c0)))))OR(CAST(t0.c0 AS BLOB))))AND(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((t0.c0)<(t0.c0)))OR(((t0.c0)<(t0.c0)))))AND((t0.c0 IN (t0.c0)))))OR(CAST(t0.c0 AS BLOB))))AND(CAST(t0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM t0, vt1 WHERE (((0X5770cab3) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((0X5770cab3) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (NULL COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((0X5770cab3) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((0X5770cab3) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (NULL COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((0X5770cab3) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (NULL COLLATE BINARY)));
SELECT ALL * FROM vt1 WHERE (json_insert(json_insert(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0), ((vt1.c0)-(vt1.c0)), vt1.c0 COLLATE RTRIM)) ORDER BY CASE WHEN CAST(0Xffffffff8eac20ca AS INTEGER) THEN (vt1.c0 IN ()) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN HEX(vt1.c0) WHEN NULL THEN CAST(vt1.c0 AS INTEGER) ELSE vt1.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_insert(json_insert(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0), ((vt1.c0)-(vt1.c0)), vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CAST(0Xffffffff8eac20ca AS INTEGER) THEN (vt1.c0 IN ()) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN HEX(vt1.c0) WHEN NULL THEN CAST(vt1.c0 AS INTEGER) ELSE vt1.c0 COLLATE BINARY END  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (json_insert(json_insert(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0), ((vt1.c0)-(vt1.c0)), vt1.c0 COLLATE RTRIM)) ORDER BY CASE WHEN CAST(0Xffffffff8eac20ca AS INTEGER) THEN (vt1.c0 IN ()) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN HEX(vt1.c0) WHEN NULL THEN CAST(vt1.c0 AS INTEGER) ELSE vt1.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_insert(json_insert(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0), ((vt1.c0)-(vt1.c0)), vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CAST(0Xffffffff8eac20ca AS INTEGER) THEN (vt1.c0 IN ()) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN HEX(vt1.c0) WHEN NULL THEN CAST(vt1.c0 AS INTEGER) ELSE vt1.c0 COLLATE BINARY END  NULLS LAST);
SELECT * FROM vt0 INNER JOIN t0 ON CAST(0.9002682553309466 AS INTEGER) INNER JOIN vt1 ON (x'722d979a' IN ()) WHERE ((((~ (t0.c0)))||(CASE vt0.c0  WHEN t0.c0 THEN 0X1d86d068 ELSE vt0.c0 END))) ORDER BY (vt0.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0)))||(CASE vt0.c0  WHEN t0.c0 THEN 0X1d86d068 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST(0.9002682553309466 AS INTEGER) INNER JOIN vt1 ON (x'722d979a' IN ()) ORDER BY (vt0.c0 COLLATE NOCASE IN ()));
SELECT * FROM vt0 INNER JOIN t0 ON CAST(0.9002682553309466 AS INTEGER) INNER JOIN vt1 ON (x'722d979a' IN ()) WHERE ((((~ (t0.c0)))||(CASE vt0.c0  WHEN t0.c0 THEN 0X1d86d068 ELSE vt0.c0 END))) ORDER BY (vt0.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0)))||(CASE vt0.c0  WHEN t0.c0 THEN 0X1d86d068 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST(0.9002682553309466 AS INTEGER) INNER JOIN vt1 ON (x'722d979a' IN ()) ORDER BY (vt0.c0 COLLATE NOCASE IN ()));
SELECT * FROM vt0 INNER JOIN t0 ON CAST(0.9002682553309466 AS INTEGER) INNER JOIN vt1 ON (x'722d979a' IN ()) WHERE ((((~ (t0.c0)))||(CASE vt0.c0  WHEN t0.c0 THEN 0X1d86d068 ELSE vt0.c0 END))) ORDER BY (vt0.c0 COLLATE NOCASE IN ());
SELECT COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0)IS NOT(0.6791598766675943)))<>(((('0.5117441193749448')) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))))) ORDER BY NULL, CASE WHEN SQLITE_VERSION() THEN t0.c0 COLLATE RTRIM ELSE ((t0.c0) NOTNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS NOT(0.6791598766675943)))<>(((('0.5117441193749448')) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY NULL, CASE WHEN SQLITE_VERSION() THEN t0.c0 COLLATE RTRIM ELSE ((t0.c0) NOTNULL) END  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0)IS NOT(0.6791598766675943)))<>(((('0.5117441193749448')) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))))) ORDER BY NULL, CASE WHEN SQLITE_VERSION() THEN t0.c0 COLLATE RTRIM ELSE ((t0.c0) NOTNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS NOT(0.6791598766675943)))<>(((('0.5117441193749448')) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY NULL, CASE WHEN SQLITE_VERSION() THEN t0.c0 COLLATE RTRIM ELSE ((t0.c0) NOTNULL) END  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0)IS NOT(0.6791598766675943)))<>(((('0.5117441193749448')) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))))) ORDER BY NULL, CASE WHEN SQLITE_VERSION() THEN t0.c0 COLLATE RTRIM ELSE ((t0.c0) NOTNULL) END  NULLS FIRST;
SELECT * FROM vt1, vt0, t0 WHERE ((((t0.c0 IN ())) IS FALSE)) ORDER BY vt1.c0  NULLS FIRST, ((CAST(vt0.c0 AS REAL))<>(vt1.c0));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY vt1.c0  NULLS FIRST, ((CAST(vt0.c0 AS REAL))!=(vt1.c0)));
SELECT * FROM vt1, vt0, t0 WHERE ((((t0.c0 IN ())) IS FALSE)) ORDER BY vt1.c0  NULLS FIRST, ((CAST(vt0.c0 AS REAL))<>(vt1.c0));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY vt1.c0  NULLS FIRST, ((CAST(vt0.c0 AS REAL))!=(vt1.c0)));
SELECT * FROM vt1, vt0, t0 WHERE ((((t0.c0 IN ())) IS FALSE)) ORDER BY vt1.c0  NULLS FIRST, ((CAST(vt0.c0 AS REAL))<>(vt1.c0));
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt0.c0) ISNULL))>=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY ((vt1.c0)>(vt0.c0)) DESC, (NOT (((vt0.c0)<(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))>=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((vt1.c0)>(vt0.c0)) DESC, (NOT (((vt0.c0)<(vt0.c0)))) DESC);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt0.c0) ISNULL))>=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY ((vt1.c0)>(vt0.c0)) DESC, (NOT (((vt0.c0)<(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))>=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((vt1.c0)>(vt0.c0)) DESC, (NOT (((vt0.c0)<(vt0.c0)))) DESC);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt0.c0) ISNULL))>=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY ((vt1.c0)>(vt0.c0)) DESC, (NOT (((vt0.c0)<(vt0.c0)))) DESC;
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c0);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((~ ((0.5152291776210967 IN (vt1.c0))))) ORDER BY (((- (vt1.c0)))-((vt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((0.5152291776210967 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((- (vt1.c0)))-((vt1.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((~ ((0.5152291776210967 IN (vt1.c0))))) ORDER BY (((- (vt1.c0)))-((vt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((0.5152291776210967 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((- (vt1.c0)))-((vt1.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((~ ((0.5152291776210967 IN (vt1.c0))))) ORDER BY (((- (vt1.c0)))-((vt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON NULL WHERE ((- (LIKELIHOOD(t0.c0, 0.7029399711825003))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(t0.c0, 0.7029399711825003)))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON NULL);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON NULL WHERE ((- (LIKELIHOOD(t0.c0, 0.7029399711825003))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(t0.c0, 0.7029399711825003)))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON NULL);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON NULL WHERE ((- (LIKELIHOOD(t0.c0, 0.7029399711825003))));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt1.c0)!=(vt0.c0)))>>(CAST(x'5525' AS BLOB)))) ORDER BY CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)!=(vt0.c0)))>>(CAST(x'5525' AS BLOB)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt1.c0)!=(vt0.c0)))>>(CAST(x'5525' AS BLOB)))) ORDER BY CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)!=(vt0.c0)))>>(CAST(x'5525' AS BLOB)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt1.c0)!=(vt0.c0)))>>(CAST(x'5525' AS BLOB)))) ORDER BY CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM;
SELECT ALL * FROM vt0, t0, vt1 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((~ (NULL)));
SELECT * FROM vt0 WHERE ((~ ('195656663'))) ORDER BY vt0.c0 ASC  NULLS LAST, LIKELIHOOD(DISTINCT LIKELIHOOD(vt0.c0, 0.6882130366433286), 0.13660907766488672), x'f62c' DESC;
SELECT SUM(count) FROM (SELECT (((~ ('195656663'))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST, LIKELIHOOD(DISTINCT LIKELIHOOD(vt0.c0, 0.6882130366433286), 0.13660907766488672), x'f62c' DESC);
SELECT * FROM vt0 WHERE ((~ ('195656663'))) ORDER BY vt0.c0 ASC  NULLS LAST, LIKELIHOOD(DISTINCT LIKELIHOOD(vt0.c0, 0.6882130366433286), 0.13660907766488672), x'f62c' DESC;
SELECT SUM(count) FROM (SELECT (((~ ('195656663'))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST, LIKELIHOOD(DISTINCT LIKELIHOOD(vt0.c0, 0.6882130366433286), 0.13660907766488672), x'f62c' DESC);
SELECT * FROM vt0 WHERE ((~ ('195656663'))) ORDER BY vt0.c0 ASC  NULLS LAST, LIKELIHOOD(DISTINCT LIKELIHOOD(vt0.c0, 0.6882130366433286), 0.13660907766488672), x'f62c' DESC;
SELECT * FROM vt1, t0, vt0 WHERE ((((UPPER(DISTINCT t0.c0)))<=((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.20655008816612164 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((UPPER(DISTINCT t0.c0)))<=((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.20655008816612164 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((((UPPER(DISTINCT t0.c0)))<=((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.20655008816612164 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((UPPER(DISTINCT t0.c0)))<=((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.20655008816612164 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((((UPPER(DISTINCT t0.c0)))<=((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.20655008816612164 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (1961369948);
SELECT SUM(count) FROM (SELECT ((1961369948) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (1961369948);
SELECT SUM(count) FROM (SELECT ((1961369948) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (1961369948);
SELECT ALL * FROM vt0 WHERE ((NOT (json_patch(vt0.c0, vt0.c0)))) ORDER BY ((vt0.c0)==(4.24734904E8)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_patch(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)=(4.24734904E8)) COLLATE BINARY DESC);
SELECT ALL * FROM vt0 WHERE ((NOT (json_patch(vt0.c0, vt0.c0)))) ORDER BY ((vt0.c0)==(4.24734904E8)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_patch(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)=(4.24734904E8)) COLLATE BINARY DESC);
SELECT ALL * FROM vt0 WHERE ((NOT (json_patch(vt0.c0, vt0.c0)))) ORDER BY ((vt0.c0)==(4.24734904E8)) COLLATE BINARY DESC;
SELECT COUNT(*) FROM vt0 WHERE (HEX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((HEX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (HEX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((HEX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (HEX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT * FROM vt0, t0, vt1 WHERE (CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (((t0.c0, vt1.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c0, vt0.c0))) END) ORDER BY ((load_extension(vt1.c0)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (((t0.c0, vt1.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((load_extension(vt1.c0)) NOT NULL) DESC);
SELECT * FROM vt0, t0, vt1 WHERE (CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (((t0.c0, vt1.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c0, vt0.c0))) END) ORDER BY ((load_extension(vt1.c0)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (((t0.c0, vt1.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((load_extension(vt1.c0)) NOT NULL) DESC);
SELECT * FROM vt0, t0, vt1 WHERE (CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (((t0.c0, vt1.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c0, vt0.c0))) END) ORDER BY ((load_extension(vt1.c0)) NOT NULL) DESC;
SELECT COUNT(*) FROM t0, vt1 WHERE (((x'3b0615dc')+(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((x'3b0615dc')+(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((x'3b0615dc')+(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((x'3b0615dc')+(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((x'3b0615dc')+(t0.c0)) COLLATE RTRIM);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0)) AS TEXT)) ORDER BY (+ (x'')) DESC, ((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (+ (x'')) DESC, ((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL) ASC);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0)) AS TEXT)) ORDER BY (+ (x'')) DESC, ((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (+ (x'')) DESC, ((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL) ASC);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0)) AS TEXT)) ORDER BY (+ (x'')) DESC, ((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL) ASC;
SELECT COUNT(*) FROM t0, vt1 WHERE (NULL) ORDER BY (((vt1.c0 COLLATE BINARY, ((vt1.c0) IS FALSE), vt1.c0))<>((CASE t0.c0  WHEN t0.c0 THEN vt1.c0 END, ((vt1.c0)<=(vt1.c0)), 3.2119893E7)))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN t0.c0 THEN t0.c0 END)) AND (((((t0.c0, t0.c0, t0.c0))<>((vt1.c0, NULL, t0.c0)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1 ORDER BY (((vt1.c0 COLLATE BINARY, ((vt1.c0) IS FALSE), vt1.c0))!=((CASE t0.c0  WHEN t0.c0 THEN vt1.c0 END, ((vt1.c0)<=(vt1.c0)), 3.2119893E7)))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN t0.c0 THEN t0.c0 END)) AND (((((t0.c0, t0.c0, t0.c0))!=((vt1.c0, NULL, t0.c0)))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE (NULL) ORDER BY (((vt1.c0 COLLATE BINARY, ((vt1.c0) IS FALSE), vt1.c0))<>((CASE t0.c0  WHEN t0.c0 THEN vt1.c0 END, ((vt1.c0)<=(vt1.c0)), 3.2119893E7)))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN t0.c0 THEN t0.c0 END)) AND (((((t0.c0, t0.c0, t0.c0))<>((vt1.c0, NULL, t0.c0)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1 ORDER BY (((vt1.c0 COLLATE BINARY, ((vt1.c0) IS FALSE), vt1.c0))!=((CASE t0.c0  WHEN t0.c0 THEN vt1.c0 END, ((vt1.c0)<=(vt1.c0)), 3.2119893E7)))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN t0.c0 THEN t0.c0 END)) AND (((((t0.c0, t0.c0, t0.c0))!=((vt1.c0, NULL, t0.c0)))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE (NULL) ORDER BY (((vt1.c0 COLLATE BINARY, ((vt1.c0) IS FALSE), vt1.c0))<>((CASE t0.c0  WHEN t0.c0 THEN vt1.c0 END, ((vt1.c0)<=(vt1.c0)), 3.2119893E7)))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN t0.c0 THEN t0.c0 END)) AND (((((t0.c0, t0.c0, t0.c0))<>((vt1.c0, NULL, t0.c0)))))) ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)IS NOT('1141433408')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)IS NOT('1141433408')) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)IS NOT('1141433408')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)IS NOT('1141433408')) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)IS NOT('1141433408')) IN ()));
SELECT ALL * FROM t0, vt0, vt1 WHERE (((CAST(t0.c0 AS REAL))IS(vt0.c0))) ORDER BY CASE WHEN NULL THEN LENGTH(vt1.c0) ELSE ((vt1.c0) NOT NULL) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL))IS(vt0.c0))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE WHEN NULL THEN LENGTH(vt1.c0) ELSE ((vt1.c0) NOT NULL) END ASC);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((CAST(t0.c0 AS REAL))IS(vt0.c0))) ORDER BY CASE WHEN NULL THEN LENGTH(vt1.c0) ELSE ((vt1.c0) NOT NULL) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL))IS(vt0.c0))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE WHEN NULL THEN LENGTH(vt1.c0) ELSE ((vt1.c0) NOT NULL) END ASC);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((CAST(t0.c0 AS REAL))IS(vt0.c0))) ORDER BY CASE WHEN NULL THEN LENGTH(vt1.c0) ELSE ((vt1.c0) NOT NULL) END ASC;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (+ (vt0.c0)), 0.2436213378322981) RIGHT OUTER JOIN vt1 ON ((((t0.c0)OR(vt0.c0))) IS TRUE) WHERE (((((0.35792180857523004) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((0.35792180857523004) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (+ (vt0.c0)), 0.2436213378322981) RIGHT OUTER JOIN vt1 ON ((((t0.c0)OR(vt0.c0))) IS TRUE));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (+ (vt0.c0)), 0.2436213378322981) RIGHT OUTER JOIN vt1 ON ((((t0.c0)OR(vt0.c0))) IS TRUE) WHERE (((((0.35792180857523004) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((0.35792180857523004) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (+ (vt0.c0)), 0.2436213378322981) RIGHT OUTER JOIN vt1 ON ((((t0.c0)OR(vt0.c0))) IS TRUE));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (+ (vt0.c0)), 0.2436213378322981) RIGHT OUTER JOIN vt1 ON ((((t0.c0)OR(vt0.c0))) IS TRUE) WHERE (((((0.35792180857523004) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt1 WHERE (UNLIKELY(DISTINCT NULL)) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-p' ELSE vt1.c0 END IN ())  NULLS FIRST, (NOT (NULL COLLATE RTRIM)), (((- (vt1.c0)))>(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(x'c0a6')))AND(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT NULL)) IS TRUE)  as count FROM vt1 ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-p' ELSE vt1.c0 END IN ())  NULLS FIRST, (NOT (NULL COLLATE RTRIM)), (((- (vt1.c0)))>(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(x'c0a6')))AND(vt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (UNLIKELY(DISTINCT NULL)) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-p' ELSE vt1.c0 END IN ())  NULLS FIRST, (NOT (NULL COLLATE RTRIM)), (((- (vt1.c0)))>(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(x'c0a6')))AND(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT NULL)) IS TRUE)  as count FROM vt1 ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-p' ELSE vt1.c0 END IN ())  NULLS FIRST, (NOT (NULL COLLATE RTRIM)), (((- (vt1.c0)))>(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(x'c0a6')))AND(vt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (UNLIKELY(DISTINCT NULL)) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-p' ELSE vt1.c0 END IN ())  NULLS FIRST, (NOT (NULL COLLATE RTRIM)), (((- (vt1.c0)))>(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(x'c0a6')))AND(vt1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE ((NOT ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((NOT ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((NOT ((~ (vt0.c0)))));
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (((((((t0.c0)AND(vt1.c0)))OR(x''))) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(vt1.c0)))OR(x''))) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (((((((t0.c0)AND(vt1.c0)))OR(x''))) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(vt1.c0)))OR(x''))) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (((((((t0.c0)AND(vt1.c0)))OR(x''))) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))) AND (vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((COALESCE('1111449475', 0.3523896599899602, vt1.c0, vt0.c0) IN ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((COALESCE('1111449475', 0.3523896599899602, vt1.c0, vt0.c0) IN ((~ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((COALESCE('1111449475', 0.3523896599899602, vt1.c0, vt0.c0) IN ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((COALESCE('1111449475', 0.3523896599899602, vt1.c0, vt0.c0) IN ((~ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((COALESCE('1111449475', 0.3523896599899602, vt1.c0, vt0.c0) IN ((~ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('649624281')) END) ORDER BY (CASE x''  WHEN vt0.c0 THEN t0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('649624281')) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (CASE x''  WHEN vt0.c0 THEN t0.c0 END IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('649624281')) END) ORDER BY (CASE x''  WHEN vt0.c0 THEN t0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('649624281')) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (CASE x''  WHEN vt0.c0 THEN t0.c0 END IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('649624281')) END) ORDER BY (CASE x''  WHEN vt0.c0 THEN t0.c0 END IN ());
SELECT * FROM t0 NOT INDEXED, vt1 WHERE ('1577901802');
SELECT SUM(count) FROM (SELECT ALL (('1577901802') IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0 NOT INDEXED, vt1 WHERE ('1577901802');
SELECT SUM(count) FROM (SELECT ALL (('1577901802') IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0 NOT INDEXED, vt1 WHERE ('1577901802');
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((('-1227798717')GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))))) ORDER BY (((t0.c0) IS TRUE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('-1227798717')GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((t0.c0) IS TRUE) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((('-1227798717')GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))))) ORDER BY (((t0.c0) IS TRUE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('-1227798717')GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((t0.c0) IS TRUE) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((('-1227798717')GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))))) ORDER BY (((t0.c0) IS TRUE) IN ()) ASC;
SELECT * FROM t0, vt1, vt0 WHERE (CASE WHEN (t0.c0 IN ()) THEN (x'6166' IN ()) END) ORDER BY (((vt0.c0 IN ())) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt0.c0)), ((CAST(t0.c0 AS INTEGER)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN ()) THEN (x'6166' IN ()) END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt0.c0)), ((CAST(t0.c0 AS INTEGER)) IS FALSE)  NULLS FIRST);
SELECT * FROM t0, vt1, vt0 WHERE (CASE WHEN (t0.c0 IN ()) THEN (x'6166' IN ()) END) ORDER BY (((vt0.c0 IN ())) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt0.c0)), ((CAST(t0.c0 AS INTEGER)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN ()) THEN (x'6166' IN ()) END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt0.c0)), ((CAST(t0.c0 AS INTEGER)) IS FALSE)  NULLS FIRST);
SELECT * FROM t0, vt1, vt0 WHERE (CASE WHEN (t0.c0 IN ()) THEN (x'6166' IN ()) END) ORDER BY (((vt0.c0 IN ())) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt0.c0)), ((CAST(t0.c0 AS INTEGER)) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST((- (t0.c0)) AS TEXT)) ORDER BY 0x2be19095, CHANGES() ASC, ((((UNLIKELY(DISTINCT t0.c0))OR(HEX(t0.c0))))AND((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY 0x2be19095, CHANGES() ASC, ((((UNLIKELY(DISTINCT t0.c0))OR(HEX(t0.c0))))AND((t0.c0 IN ()))) ASC);
SELECT ALL * FROM t0 WHERE (CAST((- (t0.c0)) AS TEXT)) ORDER BY 0x2be19095, CHANGES() ASC, ((((UNLIKELY(DISTINCT t0.c0))OR(HEX(t0.c0))))AND((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY 0x2be19095, CHANGES() ASC, ((((UNLIKELY(DISTINCT t0.c0))OR(HEX(t0.c0))))AND((t0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))GLOB(((vt1.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))GLOB(((vt1.c0)!=(vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))GLOB(((vt1.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))GLOB(((vt1.c0)!=(vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))GLOB(((vt1.c0)<>(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c0)|(t0.c0)) IN (DATETIME(vt0.c0, vt0.c0, vt0.c0, 0X7db68008, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)|(t0.c0)) IN (DATETIME(vt0.c0, vt0.c0, vt0.c0, 0X7db68008, t0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c0)|(t0.c0)) IN (DATETIME(vt0.c0, vt0.c0, vt0.c0, 0X7db68008, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)|(t0.c0)) IN (DATETIME(vt0.c0, vt0.c0, vt0.c0, 0X7db68008, t0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c0)|(t0.c0)) IN (DATETIME(vt0.c0, vt0.c0, vt0.c0, 0X7db68008, t0.c0))));
SELECT * FROM t0, vt0, vt1 WHERE ((((((t0.c0, t0.c0, vt1.c0))!=((vt0.c0, vt0.c0, vt1.c0))))<>(((0.9902870927940809) NOT BETWEEN (vt1.c0) AND (t0.c0))))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN (((vt1.c0)>=(vt1.c0))) AND ((- (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0, t0.c0, vt1.c0))!=((vt0.c0, vt0.c0, vt1.c0))))<>(((0.9902870927940809) NOT BETWEEN (vt1.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((+ (vt0.c0))) NOT BETWEEN (((vt1.c0)>=(vt1.c0))) AND ((- (vt1.c0)))) DESC);
SELECT * FROM t0, vt0, vt1 WHERE ((((((t0.c0, t0.c0, vt1.c0))!=((vt0.c0, vt0.c0, vt1.c0))))<>(((0.9902870927940809) NOT BETWEEN (vt1.c0) AND (t0.c0))))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN (((vt1.c0)>=(vt1.c0))) AND ((- (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0, t0.c0, vt1.c0))!=((vt0.c0, vt0.c0, vt1.c0))))<>(((0.9902870927940809) NOT BETWEEN (vt1.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((+ (vt0.c0))) NOT BETWEEN (((vt1.c0)>=(vt1.c0))) AND ((- (vt1.c0)))) DESC);
SELECT * FROM t0, vt0, vt1 WHERE ((((((t0.c0, t0.c0, vt1.c0))!=((vt0.c0, vt0.c0, vt1.c0))))<>(((0.9902870927940809) NOT BETWEEN (vt1.c0) AND (t0.c0))))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN (((vt1.c0)>=(vt1.c0))) AND ((- (vt1.c0)))) DESC;
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((((t0.c0)>>(vt1.c0)))!=('-1918317641')) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((((t0.c0)>>(vt1.c0)))!=('-1918317641')));
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((((t0.c0)>>(vt1.c0)))!=('-1918317641')) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((((t0.c0)>>(vt1.c0)))!=('-1918317641')));
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((((t0.c0)>>(vt1.c0)))!=('-1918317641')) WHERE (t0.c0);
SELECT ALL * FROM t0, vt1 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((x'')+((-0.0 IN (vt0.c0)))) LEFT OUTER JOIN t0 ON vt1.c0 WHERE (vt1.c0 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((x'')+((-0.0 IN (vt0.c0)))) LEFT OUTER JOIN t0 ON vt1.c0 ORDER BY vt1.c0);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((x'')+((-0.0 IN (vt0.c0)))) LEFT OUTER JOIN t0 ON vt1.c0 WHERE (vt1.c0 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((x'')+((-0.0 IN (vt0.c0)))) LEFT OUTER JOIN t0 ON vt1.c0 ORDER BY vt1.c0);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((x'')+((-0.0 IN (vt0.c0)))) LEFT OUTER JOIN t0 ON vt1.c0 WHERE (vt1.c0 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM) ORDER BY vt1.c0;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ('') ORDER BY ((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))*(((((vt1.c0)OR(t0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))*(((((vt1.c0)OR(t0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ('') ORDER BY ((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))*(((((vt1.c0)OR(t0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))*(((((vt1.c0)OR(t0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ('') ORDER BY ((((((t0.c0)OR(t0.c0)))OR(vt0.c0)))*(((((vt1.c0)OR(t0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)LIKE(0.35427601151219235)))AND(x'')))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)LIKE(0.35427601151219235)))AND(x'')))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)LIKE(0.35427601151219235)))AND(x'')))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)LIKE(0.35427601151219235)))AND(x'')))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)LIKE(0.35427601151219235)))AND(x'')))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((t0.c0 COLLATE BINARY) BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (UNLIKELY(DISTINCT t0.c0)))) ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN '' WHEN IFNULL(vt1.c0, t0.c0) THEN (t0.c0 IN ()) WHEN CAST(vt1.c0 AS INTEGER) THEN (- (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY) BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (UNLIKELY(DISTINCT t0.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN '' WHEN IFNULL(vt1.c0, t0.c0) THEN (t0.c0 IN ()) WHEN CAST(vt1.c0 AS INTEGER) THEN (- (vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((t0.c0 COLLATE BINARY) BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (UNLIKELY(DISTINCT t0.c0)))) ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN '' WHEN IFNULL(vt1.c0, t0.c0) THEN (t0.c0 IN ()) WHEN CAST(vt1.c0 AS INTEGER) THEN (- (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY) BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (UNLIKELY(DISTINCT t0.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN '' WHEN IFNULL(vt1.c0, t0.c0) THEN (t0.c0 IN ()) WHEN CAST(vt1.c0 AS INTEGER) THEN (- (vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((t0.c0 COLLATE BINARY) BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (UNLIKELY(DISTINCT t0.c0)))) ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN '' WHEN IFNULL(vt1.c0, t0.c0) THEN (t0.c0 IN ()) WHEN CAST(vt1.c0 AS INTEGER) THEN (- (vt1.c0)) END;
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY TYPEOF((t0.c0 IN ())) DESC  NULLS FIRST, (NOT (t0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY TYPEOF((t0.c0 IN ())) DESC  NULLS FIRST, (NOT (t0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY TYPEOF((t0.c0 IN ())) DESC  NULLS FIRST, (NOT (t0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY TYPEOF((t0.c0 IN ())) DESC  NULLS FIRST, (NOT (t0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY TYPEOF((t0.c0 IN ())) DESC  NULLS FIRST, (NOT (t0.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c0 COLLATE RTRIM))<((ABS(t0.c0))))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT NULL)  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND ((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE RTRIM))<((ABS(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT NULL)  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND ((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c0 COLLATE RTRIM))<((ABS(t0.c0))))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT NULL)  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND ((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE RTRIM))<((ABS(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT NULL)  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND ((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c0 COLLATE RTRIM))<((ABS(t0.c0))))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT NULL)  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND ((- (vt0.c0))));
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT ALL * FROM vt1 WHERE ((((0.28257396196537643) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) DESC, ((vt1.c0 COLLATE RTRIM)/(((vt1.c0)AND(vt1.c0)))) DESC  NULLS FIRST, ((((vt1.c0) NOTNULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.28257396196537643) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) DESC, ((vt1.c0 COLLATE RTRIM)/(((vt1.c0)AND(vt1.c0)))) DESC  NULLS FIRST, ((((vt1.c0) NOTNULL)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((0.28257396196537643) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) DESC, ((vt1.c0 COLLATE RTRIM)/(((vt1.c0)AND(vt1.c0)))) DESC  NULLS FIRST, ((((vt1.c0) NOTNULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.28257396196537643) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) DESC, ((vt1.c0 COLLATE RTRIM)/(((vt1.c0)AND(vt1.c0)))) DESC  NULLS FIRST, ((((vt1.c0) NOTNULL)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((0.28257396196537643) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) DESC, ((vt1.c0 COLLATE RTRIM)/(((vt1.c0)AND(vt1.c0)))) DESC  NULLS FIRST, ((((vt1.c0) NOTNULL)) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0) IS TRUE), ((x'fbbd')IS(t0.c0)), t0.c0 COLLATE RTRIM))<=((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END, CAST(t0.c0 AS NUMERIC), (t0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0) IS TRUE), ((x'fbbd')IS(t0.c0)), t0.c0 COLLATE RTRIM))<=((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END, CAST(t0.c0 AS NUMERIC), (t0.c0 IN ()))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0) IS TRUE), ((x'fbbd')IS(t0.c0)), t0.c0 COLLATE RTRIM))<=((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END, CAST(t0.c0 AS NUMERIC), (t0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0) IS TRUE), ((x'fbbd')IS(t0.c0)), t0.c0 COLLATE RTRIM))<=((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END, CAST(t0.c0 AS NUMERIC), (t0.c0 IN ()))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0) IS TRUE), ((x'fbbd')IS(t0.c0)), t0.c0 COLLATE RTRIM))<=((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t0.c0 END, CAST(t0.c0 AS NUMERIC), (t0.c0 IN ())))));
SELECT COUNT(*) FROM t0 WHERE (0.8723958357509803) ORDER BY (((t0.c0)>=(t0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8723958357509803) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)>=(t0.c0)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (0.8723958357509803) ORDER BY (((t0.c0)>=(t0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8723958357509803) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)>=(t0.c0)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (0.8723958357509803) ORDER BY (((t0.c0)>=(t0.c0)) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0, t0 WHERE ((((vt1.c0 COLLATE RTRIM, (vt1.c0 IN ()), CAST(vt1.c0 AS TEXT)))==((vt0.c0, ((((x'')OR(vt0.c0)))OR(vt1.c0)), ((vt1.c0)>(1040357865)))))) ORDER BY (- (((NULL) BETWEEN (vt1.c0) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 COLLATE RTRIM, (vt1.c0 IN ()), CAST(vt1.c0 AS TEXT)))==((vt0.c0, ((((x'')OR(vt0.c0)))OR(vt1.c0)), ((vt1.c0)>(1040357865)))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (- (((NULL) BETWEEN (vt1.c0) AND (t0.c0)))) ASC);
SELECT * FROM vt1, vt0, t0 WHERE ((((vt1.c0 COLLATE RTRIM, (vt1.c0 IN ()), CAST(vt1.c0 AS TEXT)))==((vt0.c0, ((((x'')OR(vt0.c0)))OR(vt1.c0)), ((vt1.c0)>(1040357865)))))) ORDER BY (- (((NULL) BETWEEN (vt1.c0) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 COLLATE RTRIM, (vt1.c0 IN ()), CAST(vt1.c0 AS TEXT)))==((vt0.c0, ((((x'')OR(vt0.c0)))OR(vt1.c0)), ((vt1.c0)>(1040357865)))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (- (((NULL) BETWEEN (vt1.c0) AND (t0.c0)))) ASC);
SELECT * FROM vt1, vt0, t0 WHERE ((((vt1.c0 COLLATE RTRIM, (vt1.c0 IN ()), CAST(vt1.c0 AS TEXT)))==((vt0.c0, ((((x'')OR(vt0.c0)))OR(vt1.c0)), ((vt1.c0)>(1040357865)))))) ORDER BY (- (((NULL) BETWEEN (vt1.c0) AND (t0.c0)))) ASC;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (CASE json_array_length(vt0.c0, vt1.c0)  WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN ROUND('', vt1.c0) WHEN ((vt0.c0)>>(vt1.c0)) THEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((vt0.c0)AND(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'Eo(&s{ꖄ' WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE json_array_length(vt0.c0, vt1.c0)  WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN ROUND('', vt1.c0) WHEN ((vt0.c0)>>(vt1.c0)) THEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((vt0.c0)AND(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'Eo(&s{ꖄ' WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (CASE json_array_length(vt0.c0, vt1.c0)  WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN ROUND('', vt1.c0) WHEN ((vt0.c0)>>(vt1.c0)) THEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((vt0.c0)AND(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'Eo(&s{ꖄ' WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE json_array_length(vt0.c0, vt1.c0)  WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN ROUND('', vt1.c0) WHEN ((vt0.c0)>>(vt1.c0)) THEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((vt0.c0)AND(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'Eo(&s{ꖄ' WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM t0, vt1 WHERE (((((t0.c0) ISNULL)) NOT BETWEEN (0.7835674056372565) AND (((vt1.c0) BETWEEN ('-14601371') AND (0.1203551928149853)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL)) NOT BETWEEN (0.7835674056372565) AND (((vt1.c0) BETWEEN ('-14601371') AND (0.1203551928149853))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((((t0.c0) ISNULL)) NOT BETWEEN (0.7835674056372565) AND (((vt1.c0) BETWEEN ('-14601371') AND (0.1203551928149853)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL)) NOT BETWEEN (0.7835674056372565) AND (((vt1.c0) BETWEEN ('-14601371') AND (0.1203551928149853))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((((t0.c0) ISNULL)) NOT BETWEEN (0.7835674056372565) AND (((vt1.c0) BETWEEN ('-14601371') AND (0.1203551928149853)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE (- (vt0.c0))  WHEN ((vt0.c0)/(t0.c0)) THEN t0.c0 WHEN ((t0.c0) ISNULL) THEN CAST(t0.c0 AS INTEGER) WHEN CASE WHEN ',WO' THEN '71631217' END THEN (t0.c0 IN ()) ELSE (vt0.c0 IN ()) END WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE (- (vt0.c0))  WHEN ((vt0.c0)/(t0.c0)) THEN t0.c0 WHEN ((t0.c0) ISNULL) THEN CAST(t0.c0 AS INTEGER) WHEN CASE WHEN ',WO' THEN '71631217' END THEN (t0.c0 IN ()) ELSE (vt0.c0 IN ()) END);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE (- (vt0.c0))  WHEN ((vt0.c0)/(t0.c0)) THEN t0.c0 WHEN ((t0.c0) ISNULL) THEN CAST(t0.c0 AS INTEGER) WHEN CASE WHEN ',WO' THEN '71631217' END THEN (t0.c0 IN ()) ELSE (vt0.c0 IN ()) END WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE (- (vt0.c0))  WHEN ((vt0.c0)/(t0.c0)) THEN t0.c0 WHEN ((t0.c0) ISNULL) THEN CAST(t0.c0 AS INTEGER) WHEN CASE WHEN ',WO' THEN '71631217' END THEN (t0.c0 IN ()) ELSE (vt0.c0 IN ()) END);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE (- (vt0.c0))  WHEN ((vt0.c0)/(t0.c0)) THEN t0.c0 WHEN ((t0.c0) ISNULL) THEN CAST(t0.c0 AS INTEGER) WHEN CASE WHEN ',WO' THEN '71631217' END THEN (t0.c0 IN ()) ELSE (vt0.c0 IN ()) END WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (x'5fb0');
SELECT SUM(count) FROM (SELECT ALL ((x'5fb0') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (x'5fb0');
SELECT SUM(count) FROM (SELECT ALL ((x'5fb0') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (x'5fb0');
SELECT * FROM vt1, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (t0.c0);
SELECT * FROM vt1, vt0 WHERE (CAST(((((vt1.c0)AND(vt1.c0)))AND(NULL)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(vt1.c0)))AND(NULL)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(((((vt1.c0)AND(vt1.c0)))AND(NULL)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(vt1.c0)))AND(NULL)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(((((vt1.c0)AND(vt1.c0)))AND(NULL)) AS TEXT));
SELECT ALL * FROM t0, vt1, vt0 WHERE (((vt1.c0)GLOB(COALESCE(t0.c0, t0.c0)))) ORDER BY (((+ (vt0.c0)))<>((('D') NOT NULL))), 706000718 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)GLOB(COALESCE(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((+ (vt0.c0)))!=((('D') NOT NULL))), 706000718 ASC  NULLS LAST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((vt1.c0)GLOB(COALESCE(t0.c0, t0.c0)))) ORDER BY (((+ (vt0.c0)))<>((('D') NOT NULL))), 706000718 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)GLOB(COALESCE(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((+ (vt0.c0)))!=((('D') NOT NULL))), 706000718 ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON CAST(((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) AS TEXT) WHERE (((0.9096836020955459) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((0.9096836020955459) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON CAST(((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON CAST(((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) AS TEXT) WHERE (((0.9096836020955459) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((0.9096836020955459) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON CAST(((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON CAST(((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) AS TEXT) WHERE (((0.9096836020955459) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS REAL)) IS TRUE)  as count FROM t0 ORDER BY NULL DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS REAL)) IS TRUE)  as count FROM t0 ORDER BY NULL DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY NULL DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT NULL)) BETWEEN ('-1722844440' COLLATE RTRIM) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '821594032' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (('-2107810363') BETWEEN (json_type('')) AND (CASE 0.6515198411827042  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) BETWEEN ('-1722844440' COLLATE RTRIM) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '821594032' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (('-2107810363') BETWEEN (json_type('')) AND (CASE 0.6515198411827042  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT NULL)) BETWEEN ('-1722844440' COLLATE RTRIM) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '821594032' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (('-2107810363') BETWEEN (json_type('')) AND (CASE 0.6515198411827042  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) BETWEEN ('-1722844440' COLLATE RTRIM) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '821594032' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (('-2107810363') BETWEEN (json_type('')) AND (CASE 0.6515198411827042  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((((vt1.c0) BETWEEN ('0.35792180857523004') AND (t0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)+(t0.c0))))) ORDER BY ((x'' COLLATE RTRIM)/(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) BETWEEN ('0.35792180857523004') AND (t0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)+(t0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((x'' COLLATE RTRIM)/(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((((vt1.c0) BETWEEN ('0.35792180857523004') AND (t0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)+(t0.c0))))) ORDER BY ((x'' COLLATE RTRIM)/(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) BETWEEN ('0.35792180857523004') AND (t0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)+(t0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((x'' COLLATE RTRIM)/(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((((vt1.c0) BETWEEN ('0.35792180857523004') AND (t0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)+(t0.c0))))) ORDER BY ((x'' COLLATE RTRIM)/(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END)) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST('x<' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST('x<' AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST('x<' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST('x<' AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST('x<' AS INTEGER));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN (+ (t0.c0)) THEN vt1.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (t0.c0)) THEN vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN (+ (t0.c0)) THEN vt1.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (t0.c0)) THEN vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN (+ (t0.c0)) THEN vt1.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (TYPEOF(((vt0.c0)>>(vt1.c0)))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0)>>(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (TYPEOF(((vt0.c0)>>(vt1.c0)))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0)>>(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (TYPEOF(((vt0.c0)>>(vt1.c0)))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN (((vt0.c0)<=(vt0.c0))))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN (((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) DESC);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN (((vt0.c0)<=(vt0.c0))))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN (((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) DESC);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN (((vt0.c0)<=(vt0.c0))))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) DESC;
SELECT * FROM t0 CROSS JOIN vt0 ON IFNULL((~ (t0.c0)), 0.3338750933533863) WHERE (TRIM((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM((+ (vt0.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON IFNULL((~ (t0.c0)), 0.3338750933533863));
SELECT * FROM t0 CROSS JOIN vt0 ON IFNULL((~ (t0.c0)), 0.3338750933533863) WHERE (TRIM((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM((+ (vt0.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON IFNULL((~ (t0.c0)), 0.3338750933533863));
SELECT * FROM t0 CROSS JOIN vt0 ON IFNULL((~ (t0.c0)), 0.3338750933533863) WHERE (TRIM((+ (vt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(('590785178' IN ()) AS REAL)) ORDER BY ((vt1.c0)>=(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(('590785178' IN ()) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)>=(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(('590785178' IN ()) AS REAL)) ORDER BY ((vt1.c0)>=(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(('590785178' IN ()) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)>=(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(('590785178' IN ()) AS REAL)) ORDER BY ((vt1.c0)>=(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((~ (t0.c0)))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND((t0.c0 IN ())))) ORDER BY ((UNLIKELY(DISTINCT t0.c0)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c0)))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((UNLIKELY(DISTINCT t0.c0)) NOT NULL) DESC);
SELECT ALL * FROM t0 WHERE ((((((~ (t0.c0)))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND((t0.c0 IN ())))) ORDER BY ((UNLIKELY(DISTINCT t0.c0)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c0)))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((UNLIKELY(DISTINCT t0.c0)) NOT NULL) DESC);
SELECT ALL * FROM t0 WHERE ((((((~ (t0.c0)))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND((t0.c0 IN ())))) ORDER BY ((UNLIKELY(DISTINCT t0.c0)) NOT NULL) DESC;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE TOTAL_CHANGES()  WHEN CAST(t0.c0 AS NUMERIC) THEN (~ (vt0.c0)) END) ORDER BY '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE TOTAL_CHANGES()  WHEN CAST(t0.c0 AS NUMERIC) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY '' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE TOTAL_CHANGES()  WHEN CAST(t0.c0 AS NUMERIC) THEN (~ (vt0.c0)) END) ORDER BY '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE TOTAL_CHANGES()  WHEN CAST(t0.c0 AS NUMERIC) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY '' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE TOTAL_CHANGES()  WHEN CAST(t0.c0 AS NUMERIC) THEN (~ (vt0.c0)) END) ORDER BY '' ASC  NULLS FIRST;
SELECT * FROM t0, vt0, vt1 WHERE (x'ac22') ORDER BY CAST(t0.c0 AS BLOB) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'ac22') IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(t0.c0 AS BLOB) COLLATE NOCASE ASC);
SELECT * FROM t0, vt0, vt1 WHERE (x'ac22') ORDER BY CAST(t0.c0 AS BLOB) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'ac22') IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(t0.c0 AS BLOB) COLLATE NOCASE ASC);
SELECT * FROM t0, vt0, vt1 WHERE (x'ac22') ORDER BY CAST(t0.c0 AS BLOB) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN ((((vt1.c0))==((vt1.c0)))) AND ((- (vt1.c0))))) ORDER BY ((-2.99231661E8) BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND (((vt1.c0)+(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN ((((vt1.c0))=((vt1.c0)))) AND ((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((-2.99231661E8) BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND (((vt1.c0)+(vt1.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN ((((vt1.c0))==((vt1.c0)))) AND ((- (vt1.c0))))) ORDER BY ((-2.99231661E8) BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND (((vt1.c0)+(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN ((((vt1.c0))=((vt1.c0)))) AND ((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((-2.99231661E8) BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND (((vt1.c0)+(vt1.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN ((((vt1.c0))==((vt1.c0)))) AND ((- (vt1.c0))))) ORDER BY ((-2.99231661E8) BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND (((vt1.c0)+(vt1.c0)))) DESC  NULLS LAST;
SELECT * FROM vt1, vt0, t0 WHERE (UPPER((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((vt0.c0 IN ()))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (UPPER((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((vt0.c0 IN ()))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (UPPER((vt0.c0 IN ())));
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)<=(vt0.c0))) BETWEEN ((+ (t0.c0))) AND ('rx')));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<=(vt0.c0))) BETWEEN ((+ (t0.c0))) AND ('rx'))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)<=(vt0.c0))) BETWEEN ((+ (t0.c0))) AND ('rx')));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<=(vt0.c0))) BETWEEN ((+ (t0.c0))) AND ('rx'))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)<=(vt0.c0))) BETWEEN ((+ (t0.c0))) AND ('rx')));
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((((((((((vt1.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt0.c0) IS FALSE)))) ORDER BY json_array(vt0.c0, (((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY json_array(vt0.c0, (((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((((((((((vt1.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt0.c0) IS FALSE)))) ORDER BY json_array(vt0.c0, (((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY json_array(vt0.c0, (((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((((((((((vt1.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt0.c0) IS FALSE)))) ORDER BY json_array(vt0.c0, (((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)||(t0.c0))) BETWEEN (x'' COLLATE BINARY) AND (IFNULL(t0.c0, t0.c0)))) ORDER BY CAST((t0.c0 IN ()) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)||(t0.c0))) BETWEEN (x'' COLLATE BINARY) AND (IFNULL(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c0 IN ()) AS TEXT));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)||(t0.c0))) BETWEEN (x'' COLLATE BINARY) AND (IFNULL(t0.c0, t0.c0)))) ORDER BY CAST((t0.c0 IN ()) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)||(t0.c0))) BETWEEN (x'' COLLATE BINARY) AND (IFNULL(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c0 IN ()) AS TEXT));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)||(t0.c0))) BETWEEN (x'' COLLATE BINARY) AND (IFNULL(t0.c0, t0.c0)))) ORDER BY CAST((t0.c0 IN ()) AS TEXT);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON IFNULL(DISTINCT ((vt0.c0) NOTNULL), ((((vt0.c0)OR(t0.c0)))AND(vt0.c0))) CROSS JOIN t0 ON vt1.c0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON IFNULL(DISTINCT ((vt0.c0) NOTNULL), ((((vt0.c0)OR(t0.c0)))AND(vt0.c0))) CROSS JOIN t0 ON vt1.c0);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON IFNULL(DISTINCT ((vt0.c0) NOTNULL), ((((vt0.c0)OR(t0.c0)))AND(vt0.c0))) CROSS JOIN t0 ON vt1.c0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON IFNULL(DISTINCT ((vt0.c0) NOTNULL), ((((vt0.c0)OR(t0.c0)))AND(vt0.c0))) CROSS JOIN t0 ON vt1.c0);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON IFNULL(DISTINCT ((vt0.c0) NOTNULL), ((((vt0.c0)OR(t0.c0)))AND(vt0.c0))) CROSS JOIN t0 ON vt1.c0 WHERE (CHANGES());
SELECT * FROM vt0, t0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (TRIM(vt0.c0)) AND (((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (TRIM(vt0.c0)) AND (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (TRIM(vt0.c0)) AND (((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (TRIM(vt0.c0)) AND (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (TRIM(vt0.c0)) AND (((vt0.c0)IS(vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((LIKELIHOOD(vt1.c0, 0.2212426908606001) IN (vt1.c0))) ORDER BY '1178991138' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(vt1.c0, 0.2212426908606001) IN (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY '1178991138' COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt1 WHERE ((LIKELIHOOD(vt1.c0, 0.2212426908606001) IN (vt1.c0))) ORDER BY '1178991138' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(vt1.c0, 0.2212426908606001) IN (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY '1178991138' COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt1 WHERE ((LIKELIHOOD(vt1.c0, 0.2212426908606001) IN (vt1.c0))) ORDER BY '1178991138' COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), CAST(vt1.c0 AS REAL))) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(x'1279')))OR(vt1.c0)))OR(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 END, ((NULL)>>(vt1.c0)))))) ORDER BY CAST((- ('')) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), CAST(vt1.c0 AS REAL))) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(x'1279')))OR(vt1.c0)))OR(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 END, ((NULL)>>(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST((- ('')) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), CAST(vt1.c0 AS REAL))) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(x'1279')))OR(vt1.c0)))OR(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 END, ((NULL)>>(vt1.c0)))))) ORDER BY CAST((- ('')) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), CAST(vt1.c0 AS REAL))) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(x'1279')))OR(vt1.c0)))OR(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 END, ((NULL)>>(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST((- ('')) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), CAST(vt1.c0 AS REAL))) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(x'1279')))OR(vt1.c0)))OR(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 END, ((NULL)>>(vt1.c0)))))) ORDER BY CAST((- ('')) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((0Xffffffffa479d22e))) WHEN ((0.258538543091148) IS FALSE) THEN 'ᙓS2nB3Hq' WHEN TRIM(vt1.c0, vt0.c0) THEN NULL END INNER JOIN t0 ON vt1.c0 COLLATE BINARY WHERE (0.7321237498861349) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (json_remove(vt0.c0, t0.c0)) AND ((+ (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)&(t0.c0)))/((- (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.7321237498861349) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((0xffffffffa479d22e))) WHEN ((0.258538543091148) IS FALSE) THEN 'ᙓS2nB3Hq' WHEN TRIM(vt1.c0, vt0.c0) THEN NULL END INNER JOIN t0 ON vt1.c0 COLLATE BINARY ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (json_remove(vt0.c0, t0.c0)) AND ((+ (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)&(t0.c0)))/((- (vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((0Xffffffffa479d22e))) WHEN ((0.258538543091148) IS FALSE) THEN 'ᙓS2nB3Hq' WHEN TRIM(vt1.c0, vt0.c0) THEN NULL END INNER JOIN t0 ON vt1.c0 COLLATE BINARY WHERE (0.7321237498861349) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (json_remove(vt0.c0, t0.c0)) AND ((+ (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)&(t0.c0)))/((- (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.7321237498861349) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((0xffffffffa479d22e))) WHEN ((0.258538543091148) IS FALSE) THEN 'ᙓS2nB3Hq' WHEN TRIM(vt1.c0, vt0.c0) THEN NULL END INNER JOIN t0 ON vt1.c0 COLLATE BINARY ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (json_remove(vt0.c0, t0.c0)) AND ((+ (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)&(t0.c0)))/((- (vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((0Xffffffffa479d22e))) WHEN ((0.258538543091148) IS FALSE) THEN 'ᙓS2nB3Hq' WHEN TRIM(vt1.c0, vt0.c0) THEN NULL END INNER JOIN t0 ON vt1.c0 COLLATE BINARY WHERE (0.7321237498861349) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (json_remove(vt0.c0, t0.c0)) AND ((+ (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)&(t0.c0)))/((- (vt1.c0)))) DESC;
SELECT * FROM t0 INNER JOIN vt1 ON ((((((0.26449139349633)AND(vt1.c0)))AND(vt1.c0)))%((+ (vt1.c0)))) WHERE ((((t0.c0))>((((vt1.c0) ISNULL))))) ORDER BY ((((vt1.c0) NOTNULL)) NOT BETWEEN (((vt1.c0)+(t0.c0))) AND (((t0.c0)||(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))>((((vt1.c0) ISNULL))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((((((0.26449139349633)AND(vt1.c0)))AND(vt1.c0)))%((+ (vt1.c0)))) ORDER BY ((((vt1.c0) NOTNULL)) NOT BETWEEN (((vt1.c0)+(t0.c0))) AND (((t0.c0)||(vt1.c0)))) ASC);
SELECT * FROM t0 INNER JOIN vt1 ON ((((((0.26449139349633)AND(vt1.c0)))AND(vt1.c0)))%((+ (vt1.c0)))) WHERE ((((t0.c0))>((((vt1.c0) ISNULL))))) ORDER BY ((((vt1.c0) NOTNULL)) NOT BETWEEN (((vt1.c0)+(t0.c0))) AND (((t0.c0)||(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))>((((vt1.c0) ISNULL))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((((((0.26449139349633)AND(vt1.c0)))AND(vt1.c0)))%((+ (vt1.c0)))) ORDER BY ((((vt1.c0) NOTNULL)) NOT BETWEEN (((vt1.c0)+(t0.c0))) AND (((t0.c0)||(vt1.c0)))) ASC);
SELECT * FROM t0 INNER JOIN vt1 ON ((((((0.26449139349633)AND(vt1.c0)))AND(vt1.c0)))%((+ (vt1.c0)))) WHERE ((((t0.c0))>((((vt1.c0) ISNULL))))) ORDER BY ((((vt1.c0) NOTNULL)) NOT BETWEEN (((vt1.c0)+(t0.c0))) AND (((t0.c0)||(vt1.c0)))) ASC;
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN (((x'') NOTNULL), vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN (((x'') NOTNULL), vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN (((x'') NOTNULL), vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN (((x'') NOTNULL), vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN (((x'') NOTNULL), vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM t0, vt0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)) COLLATE BINARY);
SELECT * FROM t0, vt0, vt1 WHERE ('-1611851259' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('-1611851259' COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE ('-1611851259' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('-1611851259' COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE ('-1611851259' COLLATE NOCASE);
SELECT * FROM t0 WHERE (((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE) ORDER BY t0.c0  NULLS FIRST, CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS FIRST, CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE) ORDER BY t0.c0  NULLS FIRST, CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS FIRST, CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE) ORDER BY t0.c0  NULLS FIRST, CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((0.6125507875056069)IS(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY HEX(DISTINCT vt1.c0 COLLATE RTRIM) ASC  NULLS LAST, CASE WHEN 0X23e475bd THEN ((vt1.c0) IS TRUE) WHEN '0.20719638426800802' THEN UPPER(DISTINCT t0.c0) WHEN ((vt1.c0) NOTNULL) THEN CAST(t0.c0 AS REAL) ELSE ((((vt1.c0)AND(-1.4347448E8)))OR(vt1.c0)) END  NULLS LAST, (~ (((vt1.c0)<<(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((0.6125507875056069)IS(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY HEX(DISTINCT vt1.c0 COLLATE RTRIM) ASC  NULLS LAST, CASE WHEN 0x23e475bd THEN ((vt1.c0) IS TRUE) WHEN '0.20719638426800802' THEN UPPER(DISTINCT t0.c0) WHEN ((vt1.c0) NOTNULL) THEN CAST(t0.c0 AS REAL) ELSE ((((vt1.c0)AND(-1.4347448E8)))OR(vt1.c0)) END  NULLS LAST, (~ (((vt1.c0)<<(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((0.6125507875056069)IS(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY HEX(DISTINCT vt1.c0 COLLATE RTRIM) ASC  NULLS LAST, CASE WHEN 0X23e475bd THEN ((vt1.c0) IS TRUE) WHEN '0.20719638426800802' THEN UPPER(DISTINCT t0.c0) WHEN ((vt1.c0) NOTNULL) THEN CAST(t0.c0 AS REAL) ELSE ((((vt1.c0)AND(-1.4347448E8)))OR(vt1.c0)) END  NULLS LAST, (~ (((vt1.c0)<<(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((0.6125507875056069)IS(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY HEX(DISTINCT vt1.c0 COLLATE RTRIM) ASC  NULLS LAST, CASE WHEN 0x23e475bd THEN ((vt1.c0) IS TRUE) WHEN '0.20719638426800802' THEN UPPER(DISTINCT t0.c0) WHEN ((vt1.c0) NOTNULL) THEN CAST(t0.c0 AS REAL) ELSE ((((vt1.c0)AND(-1.4347448E8)))OR(vt1.c0)) END  NULLS LAST, (~ (((vt1.c0)<<(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((0.6125507875056069)IS(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY HEX(DISTINCT vt1.c0 COLLATE RTRIM) ASC  NULLS LAST, CASE WHEN 0X23e475bd THEN ((vt1.c0) IS TRUE) WHEN '0.20719638426800802' THEN UPPER(DISTINCT t0.c0) WHEN ((vt1.c0) NOTNULL) THEN CAST(t0.c0 AS REAL) ELSE ((((vt1.c0)AND(-1.4347448E8)))OR(vt1.c0)) END  NULLS LAST, (~ (((vt1.c0)<<(t0.c0))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOTNULL)) ORDER BY ((UNLIKELY(DISTINCT vt1.c0))&(vt1.c0));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((UNLIKELY(DISTINCT vt1.c0))&(vt1.c0)));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOTNULL)) ORDER BY ((UNLIKELY(DISTINCT vt1.c0))&(vt1.c0));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((UNLIKELY(DISTINCT vt1.c0))&(vt1.c0)));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOTNULL)) ORDER BY ((UNLIKELY(DISTINCT vt1.c0))&(vt1.c0));
SELECT COUNT(*) FROM vt0, t0 WHERE (((x'') NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((x'') NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((x'') NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((((vt1.c0) ISNULL))OR(CASE WHEN vt1.c0 THEN vt0.c0 END)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) ISNULL))OR(CASE WHEN vt1.c0 THEN vt0.c0 END)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((((vt1.c0) ISNULL))OR(CASE WHEN vt1.c0 THEN vt0.c0 END)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) ISNULL))OR(CASE WHEN vt1.c0 THEN vt0.c0 END)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((((vt1.c0) ISNULL))OR(CASE WHEN vt1.c0 THEN vt0.c0 END)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CASE HEX(vt1.c0)  WHEN NULL THEN t0.c0 WHEN (~ (vt1.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0)LIKE(t0.c0)) THEN x'' ELSE ((t0.c0)|(vt1.c0)) END WHERE (0.6573169583806711);
SELECT SUM(count) FROM (SELECT ALL ((0.6573169583806711) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CASE HEX(vt1.c0)  WHEN NULL THEN t0.c0 WHEN (~ (vt1.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0)LIKE(t0.c0)) THEN x'' ELSE ((t0.c0)|(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CASE HEX(vt1.c0)  WHEN NULL THEN t0.c0 WHEN (~ (vt1.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0)LIKE(t0.c0)) THEN x'' ELSE ((t0.c0)|(vt1.c0)) END WHERE (0.6573169583806711);
SELECT SUM(count) FROM (SELECT ALL ((0.6573169583806711) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CASE HEX(vt1.c0)  WHEN NULL THEN t0.c0 WHEN (~ (vt1.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0)LIKE(t0.c0)) THEN x'' ELSE ((t0.c0)|(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CASE HEX(vt1.c0)  WHEN NULL THEN t0.c0 WHEN (~ (vt1.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0)LIKE(t0.c0)) THEN x'' ELSE ((t0.c0)|(vt1.c0)) END WHERE (0.6573169583806711);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (- (vt1.c0)) COLLATE NOCASE, CAST(vt1.c0 AS BLOB) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)) COLLATE NOCASE, CAST(vt1.c0 AS BLOB) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (- (vt1.c0)) COLLATE NOCASE, CAST(vt1.c0 AS BLOB) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)) COLLATE NOCASE, CAST(vt1.c0 AS BLOB) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (- (vt1.c0)) COLLATE NOCASE, CAST(vt1.c0 AS BLOB) COLLATE BINARY DESC;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c0)-(vt0.c0)))*((- ('')))) CROSS JOIN vt1 ON x'' WHERE (((((((t0.c0)OR(t0.c0)))OR('1602875514')))IS NOT(((((((((t0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(0.21758232376546804)))AND(vt0.c0))))) ORDER BY (((vt1.c0)) BETWEEN ((NULL)) AND ((0xffffffff9c203674))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c0)))OR('1602875514')))IS NOT(((((((((t0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(0.21758232376546804)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c0)-(vt0.c0)))*((- ('')))) CROSS JOIN vt1 ON x'' ORDER BY (((vt1.c0)) BETWEEN ((NULL)) AND ((0Xffffffff9c203674))) DESC);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c0)-(vt0.c0)))*((- ('')))) CROSS JOIN vt1 ON x'' WHERE (((((((t0.c0)OR(t0.c0)))OR('1602875514')))IS NOT(((((((((t0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(0.21758232376546804)))AND(vt0.c0))))) ORDER BY (((vt1.c0)) BETWEEN ((NULL)) AND ((0xffffffff9c203674))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c0)))OR('1602875514')))IS NOT(((((((((t0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(0.21758232376546804)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c0)-(vt0.c0)))*((- ('')))) CROSS JOIN vt1 ON x'' ORDER BY (((vt1.c0)) BETWEEN ((NULL)) AND ((0Xffffffff9c203674))) DESC);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c0)-(vt0.c0)))*((- ('')))) CROSS JOIN vt1 ON x'' WHERE (((((((t0.c0)OR(t0.c0)))OR('1602875514')))IS NOT(((((((((t0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(0.21758232376546804)))AND(vt0.c0))))) ORDER BY (((vt1.c0)) BETWEEN ((NULL)) AND ((0xffffffff9c203674))) DESC;
SELECT COUNT(*) FROM t0, vt1 WHERE ((((CASE WHEN -5.771332E7 THEN vt1.c0 END, t0.c0, ((x'')AND(vt1.c0))))>(((vt1.c0 IN (vt1.c0)), MIN(vt1.c0, vt1.c0), ((vt1.c0) IS FALSE))))) ORDER BY (((t0.c0, vt1.c0, x'')) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), ((('-1884669064')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), vt1.c0 COLLATE BINARY)) AND ((CAST(t0.c0 AS NUMERIC), vt1.c0 COLLATE BINARY, x''))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN -5.771332E7 THEN vt1.c0 END, t0.c0, ((x'')AND(vt1.c0))))>(((vt1.c0 IN (vt1.c0)), MIN(vt1.c0, vt1.c0), ((vt1.c0) IS FALSE))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c0, vt1.c0, x'')) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), ((('-1884669064')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), vt1.c0 COLLATE BINARY)) AND ((CAST(t0.c0 AS NUMERIC), vt1.c0 COLLATE BINARY, x''))) DESC);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((CASE WHEN -5.771332E7 THEN vt1.c0 END, t0.c0, ((x'')AND(vt1.c0))))>(((vt1.c0 IN (vt1.c0)), MIN(vt1.c0, vt1.c0), ((vt1.c0) IS FALSE))))) ORDER BY (((t0.c0, vt1.c0, x'')) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), ((('-1884669064')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), vt1.c0 COLLATE BINARY)) AND ((CAST(t0.c0 AS NUMERIC), vt1.c0 COLLATE BINARY, x''))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN -5.771332E7 THEN vt1.c0 END, t0.c0, ((x'')AND(vt1.c0))))>(((vt1.c0 IN (vt1.c0)), MIN(vt1.c0, vt1.c0), ((vt1.c0) IS FALSE))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c0, vt1.c0, x'')) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), ((('-1884669064')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), vt1.c0 COLLATE BINARY)) AND ((CAST(t0.c0 AS NUMERIC), vt1.c0 COLLATE BINARY, x''))) DESC);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((CASE WHEN -5.771332E7 THEN vt1.c0 END, t0.c0, ((x'')AND(vt1.c0))))>(((vt1.c0 IN (vt1.c0)), MIN(vt1.c0, vt1.c0), ((vt1.c0) IS FALSE))))) ORDER BY (((t0.c0, vt1.c0, x'')) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), ((('-1884669064')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), vt1.c0 COLLATE BINARY)) AND ((CAST(t0.c0 AS NUMERIC), vt1.c0 COLLATE BINARY, x''))) DESC;
SELECT ALL * FROM vt1, vt0 INNER JOIN t0 ON CASE TYPEOF(vt1.c0)  WHEN ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE vt1.c0 END WHERE ((((- (t0.c0)))GLOB(0.4114850845685748)));
SELECT SUM(count) FROM (SELECT (((((- (t0.c0)))GLOB(0.4114850845685748))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON CASE TYPEOF(vt1.c0)  WHEN ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE vt1.c0 END);
SELECT ALL * FROM vt1, vt0 INNER JOIN t0 ON CASE TYPEOF(vt1.c0)  WHEN ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE vt1.c0 END WHERE ((((- (t0.c0)))GLOB(0.4114850845685748)));
SELECT SUM(count) FROM (SELECT (((((- (t0.c0)))GLOB(0.4114850845685748))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON CASE TYPEOF(vt1.c0)  WHEN ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE vt1.c0 END);
SELECT ALL * FROM vt1, vt0 INNER JOIN t0 ON CASE TYPEOF(vt1.c0)  WHEN ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE vt1.c0 END WHERE ((((- (t0.c0)))GLOB(0.4114850845685748)));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0 IN (vt1.c0))))!=(((vt1.c0 IN ()))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 IN (vt1.c0))))!=(((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0 IN (vt1.c0))))!=(((vt1.c0 IN ()))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 IN (vt1.c0))))!=(((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0 IN (vt1.c0))))!=(((vt1.c0 IN ()))))) ORDER BY vt1.c0;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))  WHEN ((NULL) NOTNULL) THEN ((t0.c0) ISNULL) WHEN (t0.c0 IN ()) THEN (t0.c0 IN ()) WHEN ((t0.c0)<=(t0.c0)) THEN ((((((((x'47ac')OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)) ELSE (vt0.c0 IN ()) END WHERE ((((~ (vt0.c0))) IS TRUE)) ORDER BY ABS(((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))  WHEN ((NULL) NOTNULL) THEN ((t0.c0) ISNULL) WHEN (t0.c0 IN ()) THEN (t0.c0 IN ()) WHEN ((t0.c0)<=(t0.c0)) THEN ((((((((x'47ac')OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)) ELSE (vt0.c0 IN ()) END ORDER BY ABS(((vt0.c0) IS FALSE)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))  WHEN ((NULL) NOTNULL) THEN ((t0.c0) ISNULL) WHEN (t0.c0 IN ()) THEN (t0.c0 IN ()) WHEN ((t0.c0)<=(t0.c0)) THEN ((((((((x'47ac')OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)) ELSE (vt0.c0 IN ()) END WHERE ((((~ (vt0.c0))) IS TRUE)) ORDER BY ABS(((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))  WHEN ((NULL) NOTNULL) THEN ((t0.c0) ISNULL) WHEN (t0.c0 IN ()) THEN (t0.c0 IN ()) WHEN ((t0.c0)<=(t0.c0)) THEN ((((((((x'47ac')OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)) ELSE (vt0.c0 IN ()) END ORDER BY ABS(((vt0.c0) IS FALSE)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))  WHEN ((NULL) NOTNULL) THEN ((t0.c0) ISNULL) WHEN (t0.c0 IN ()) THEN (t0.c0 IN ()) WHEN ((t0.c0)<=(t0.c0)) THEN ((((((((x'47ac')OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)) ELSE (vt0.c0 IN ()) END WHERE ((((~ (vt0.c0))) IS TRUE)) ORDER BY ABS(((vt0.c0) IS FALSE));
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT (t0.c0 IN ()), ((((t0.c0)AND(t0.c0)))AND(t0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (t0.c0 IN ()), ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT (t0.c0 IN ()), ((((t0.c0)AND(t0.c0)))AND(t0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (t0.c0 IN ()), ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT (t0.c0 IN ()), ((((t0.c0)AND(t0.c0)))AND(t0.c0))));
SELECT ALL * FROM vt0 WHERE ((- ((vt0.c0 IN ())))) ORDER BY (((((((vt0.c0))!=((vt0.c0))))AND(vt0.c0)))AND((- (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0))<>((vt0.c0))))AND(vt0.c0)))AND((- (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- ((vt0.c0 IN ())))) ORDER BY (((((((vt0.c0))!=((vt0.c0))))AND(vt0.c0)))AND((- (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0))<>((vt0.c0))))AND(vt0.c0)))AND((- (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- ((vt0.c0 IN ())))) ORDER BY (((((((vt0.c0))!=((vt0.c0))))AND(vt0.c0)))AND((- (vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 WHERE (((((CAST(t0.c0 AS TEXT))AND((- (x'')))))OR(((t0.c0)<=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS TEXT))AND((- (x'')))))OR(((t0.c0)<=(t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((CAST(t0.c0 AS TEXT))AND((- (x'')))))OR(((t0.c0)<=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS TEXT))AND((- (x'')))))OR(((t0.c0)<=(t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((CAST(t0.c0 AS TEXT))AND((- (x'')))))OR(((t0.c0)<=(t0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (('ZqE0!V㬈ᠽS' IN (vt1.c0, vt1.c0)), ((vt1.c0)>(vt1.c0))))) ORDER BY ((((((((((vt1.c0) BETWEEN ('}d[~0}') AND (vt1.c0)))AND('1004578370')))AND(CAST(vt1.c0 AS BLOB))))AND(vt1.c0)))OR(((vt1.c0)>>(vt1.c0))))  NULLS LAST, ((((((((0Xffffffffd030adbb)AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(((vt1.c0) NOT NULL))))OR((NOT (NULL)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (('ZqE0!V㬈ᠽS' IN (vt1.c0, vt1.c0)), ((vt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0) BETWEEN ('}d[~0}') AND (vt1.c0)))AND('1004578370')))AND(CAST(vt1.c0 AS BLOB))))AND(vt1.c0)))OR(((vt1.c0)>>(vt1.c0))))  NULLS LAST, ((((((((0xffffffffd030adbb)AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(((vt1.c0) NOT NULL))))OR((NOT (NULL)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (('ZqE0!V㬈ᠽS' IN (vt1.c0, vt1.c0)), ((vt1.c0)>(vt1.c0))))) ORDER BY ((((((((((vt1.c0) BETWEEN ('}d[~0}') AND (vt1.c0)))AND('1004578370')))AND(CAST(vt1.c0 AS BLOB))))AND(vt1.c0)))OR(((vt1.c0)>>(vt1.c0))))  NULLS LAST, ((((((((0Xffffffffd030adbb)AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(((vt1.c0) NOT NULL))))OR((NOT (NULL)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (('ZqE0!V㬈ᠽS' IN (vt1.c0, vt1.c0)), ((vt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0) BETWEEN ('}d[~0}') AND (vt1.c0)))AND('1004578370')))AND(CAST(vt1.c0 AS BLOB))))AND(vt1.c0)))OR(((vt1.c0)>>(vt1.c0))))  NULLS LAST, ((((((((0xffffffffd030adbb)AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(((vt1.c0) NOT NULL))))OR((NOT (NULL)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (('ZqE0!V㬈ᠽS' IN (vt1.c0, vt1.c0)), ((vt1.c0)>(vt1.c0))))) ORDER BY ((((((((((vt1.c0) BETWEEN ('}d[~0}') AND (vt1.c0)))AND('1004578370')))AND(CAST(vt1.c0 AS BLOB))))AND(vt1.c0)))OR(((vt1.c0)>>(vt1.c0))))  NULLS LAST, ((((((((0Xffffffffd030adbb)AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(((vt1.c0) NOT NULL))))OR((NOT (NULL)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((vt0.c0)IS NOT(vt0.c0)) COLLATE NOCASE  NULLS FIRST, CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS BLOB) THEN NULL END;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS NOT(vt0.c0)) COLLATE NOCASE  NULLS FIRST, CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS BLOB) THEN NULL END);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((vt0.c0)IS NOT(vt0.c0)) COLLATE NOCASE  NULLS FIRST, CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS BLOB) THEN NULL END;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS NOT(vt0.c0)) COLLATE NOCASE  NULLS FIRST, CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS BLOB) THEN NULL END);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((vt0.c0)IS NOT(vt0.c0)) COLLATE NOCASE  NULLS FIRST, CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS BLOB) THEN NULL END;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((0.527322903587826))>((t0.c0)))) IS TRUE)) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((0.527322903587826))>((t0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((0.527322903587826))>((t0.c0)))) IS TRUE)) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((0.527322903587826))>((t0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((0.527322903587826))>((t0.c0)))) IS TRUE)) ORDER BY NULL DESC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE ((((((~ (t0.c0)))AND((('2a>Bh') ISNULL))))OR(vt0.c0))) ORDER BY CAST(((t0.c0)-(vt0.c0)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (t0.c0)))AND((('2a>Bh') ISNULL))))OR(vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((t0.c0)-(vt0.c0)) AS BLOB) DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((((~ (t0.c0)))AND((('2a>Bh') ISNULL))))OR(vt0.c0))) ORDER BY CAST(((t0.c0)-(vt0.c0)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (t0.c0)))AND((('2a>Bh') ISNULL))))OR(vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((t0.c0)-(vt0.c0)) AS BLOB) DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((((~ (t0.c0)))AND((('2a>Bh') ISNULL))))OR(vt0.c0))) ORDER BY CAST(((t0.c0)-(vt0.c0)) AS BLOB) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (CASE WHEN CAST(t0.c0 AS REAL) THEN (t0.c0 IN (t0.c0)) ELSE ((((t0.c0)OR(t0.c0)))OR('')) END) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.9051368299815248 ELSE t0.c0 END) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (t0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c0 AS REAL) THEN (t0.c0 IN (t0.c0)) ELSE ((((t0.c0)OR(t0.c0)))OR('')) END) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.9051368299815248 ELSE t0.c0 END) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (t0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (CASE WHEN CAST(t0.c0 AS REAL) THEN (t0.c0 IN (t0.c0)) ELSE ((((t0.c0)OR(t0.c0)))OR('')) END) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.9051368299815248 ELSE t0.c0 END) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (t0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c0 AS REAL) THEN (t0.c0 IN (t0.c0)) ELSE ((((t0.c0)OR(t0.c0)))OR('')) END) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.9051368299815248 ELSE t0.c0 END) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (t0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (CASE WHEN CAST(t0.c0 AS REAL) THEN (t0.c0 IN (t0.c0)) ELSE ((((t0.c0)OR(t0.c0)))OR('')) END) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.9051368299815248 ELSE t0.c0 END) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (t0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN vt1 ON (+ ((- (vt1.c0)))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON (+ ((- (vt1.c0)))));
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN vt1 ON (+ ((- (vt1.c0)))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON (+ ((- (vt1.c0)))));
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN vt1 ON (+ ((- (vt1.c0)))) WHERE (t0.c0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((vt1.c0) IS TRUE)) ORDER BY ((TYPEOF(vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (0.5171673986486983 COLLATE BINARY)), (~ ((vt0.c0 IN (0x4a454de9))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((TYPEOF(vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (0.5171673986486983 COLLATE BINARY)), (~ ((vt0.c0 IN (0X4a454de9))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((vt1.c0) IS TRUE)) ORDER BY ((TYPEOF(vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (0.5171673986486983 COLLATE BINARY)), (~ ((vt0.c0 IN (0x4a454de9))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((TYPEOF(vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (0.5171673986486983 COLLATE BINARY)), (~ ((vt0.c0 IN (0X4a454de9))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((vt1.c0) IS TRUE)) ORDER BY ((TYPEOF(vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (0.5171673986486983 COLLATE BINARY)), (~ ((vt0.c0 IN (0x4a454de9))))  NULLS FIRST;
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (+ ((((t0.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((vt0.c0, t0.c0, t0.c0))))) WHERE (highlight(vt0.c0, ((vt0.c0)*(vt0.c0)), -697051103, ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) ORDER BY (NOT ((((t0.c0, t0.c0, t0.c0))=((NULL, t0.c0, vt0.c0)))))  NULLS FIRST, ((vt0.c0)OR(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)), CAST(vt0.c0 AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((highlight(vt0.c0, ((vt0.c0)*(vt0.c0)), -697051103, ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (+ ((((t0.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((vt0.c0, t0.c0, t0.c0))))) ORDER BY (NOT ((((t0.c0, t0.c0, t0.c0))==((NULL, t0.c0, vt0.c0)))))  NULLS FIRST, ((vt0.c0)OR(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)), CAST(vt0.c0 AS REAL) DESC);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (+ ((((t0.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((vt0.c0, t0.c0, t0.c0))))) WHERE (highlight(vt0.c0, ((vt0.c0)*(vt0.c0)), -697051103, ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) ORDER BY (NOT ((((t0.c0, t0.c0, t0.c0))=((NULL, t0.c0, vt0.c0)))))  NULLS FIRST, ((vt0.c0)OR(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)), CAST(vt0.c0 AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((highlight(vt0.c0, ((vt0.c0)*(vt0.c0)), -697051103, ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (+ ((((t0.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((vt0.c0, t0.c0, t0.c0))))) ORDER BY (NOT ((((t0.c0, t0.c0, t0.c0))==((NULL, t0.c0, vt0.c0)))))  NULLS FIRST, ((vt0.c0)OR(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)), CAST(vt0.c0 AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ('1826177146'))) ORDER BY ((CHAR(vt0.c0)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ('1826177146'))) IS TRUE)  as count FROM vt0 ORDER BY ((CHAR(vt0.c0)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ('1826177146'))) ORDER BY ((CHAR(vt0.c0)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ('1826177146'))) IS TRUE)  as count FROM vt0 ORDER BY ((CHAR(vt0.c0)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ('1826177146'))) ORDER BY ((CHAR(vt0.c0)) IS TRUE)  NULLS LAST;
SELECT * FROM vt0, t0, vt1 WHERE (CASE LTRIM(vt0.c0)  WHEN (NOT (vt0.c0)) THEN 0.8717553167630314 ELSE (NOT (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LTRIM(vt0.c0)  WHEN (NOT (vt0.c0)) THEN 0.8717553167630314 ELSE (NOT (vt1.c0)) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (CASE LTRIM(vt0.c0)  WHEN (NOT (vt0.c0)) THEN 0.8717553167630314 ELSE (NOT (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LTRIM(vt0.c0)  WHEN (NOT (vt0.c0)) THEN 0.8717553167630314 ELSE (NOT (vt1.c0)) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (CASE LTRIM(vt0.c0)  WHEN (NOT (vt0.c0)) THEN 0.8717553167630314 ELSE (NOT (vt1.c0)) END);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON NULL WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON NULL);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON NULL WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON NULL);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON NULL WHERE (x'');
SELECT ALL COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOTNULL)) ORDER BY ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CAST(vt1.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CAST(vt1.c0 AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOTNULL)) ORDER BY ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CAST(vt1.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CAST(vt1.c0 AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOTNULL)) ORDER BY ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CAST(vt1.c0 AS NUMERIC)))  NULLS LAST;
SELECT * FROM vt1, t0 WHERE (((((t0.c0)||(t0.c0)))%((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)||(t0.c0)))%((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((((t0.c0)||(t0.c0)))%((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)||(t0.c0)))%((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((((t0.c0)||(t0.c0)))%((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON t0.c0 WHERE (((vt1.c0 IN (t0.c0)) IN ((((t0.c0))==((t0.c0)))))) ORDER BY ((t0.c0) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN (t0.c0)) IN ((((t0.c0))=((t0.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON t0.c0 ORDER BY ((t0.c0) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN vt1 ON t0.c0 WHERE (((vt1.c0 IN (t0.c0)) IN ((((t0.c0))==((t0.c0)))))) ORDER BY ((t0.c0) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN (t0.c0)) IN ((((t0.c0))=((t0.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON t0.c0 ORDER BY ((t0.c0) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN vt1 ON t0.c0 WHERE (((vt1.c0 IN (t0.c0)) IN ((((t0.c0))==((t0.c0)))))) ORDER BY ((t0.c0) NOTNULL)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((+ (((t0.c0)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)+(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((+ (((t0.c0)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)+(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((+ (((t0.c0)+(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END) IS TRUE));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((((NULL)OR(vt0.c0)))OR(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(vt0.c0)))OR(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((((NULL)OR(vt0.c0)))OR(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(vt0.c0)))OR(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((((NULL)OR(vt0.c0)))OR(t0.c0))) IS TRUE));
SELECT * FROM vt1, t0 WHERE ((NOT (((((-743406891)OR(t0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((-743406891)OR(t0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((NOT (((((-743406891)OR(t0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((-743406891)OR(t0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((NOT (((((-743406891)OR(t0.c0)))AND(vt1.c0)))));
SELECT ALL * FROM vt0, t0, vt1 WHERE (CHANGES() COLLATE BINARY COLLATE RTRIM) ORDER BY CASE WHEN (NOT (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) WHEN (NOT (vt0.c0)) THEN CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 END WHEN ((t0.c0)/(vt1.c0)) THEN ((t0.c0)<(vt0.c0)) END  NULLS LAST, (((t0.c0) NOT NULL) IN ()) ASC, CAST(((vt0.c0) NOT NULL) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES() COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CASE WHEN (NOT (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) WHEN (NOT (vt0.c0)) THEN CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 END WHEN ((t0.c0)/(vt1.c0)) THEN ((t0.c0)<(vt0.c0)) END  NULLS LAST, (((t0.c0) NOT NULL) IN ()) ASC, CAST(((vt0.c0) NOT NULL) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CHANGES() COLLATE BINARY COLLATE RTRIM) ORDER BY CASE WHEN (NOT (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) WHEN (NOT (vt0.c0)) THEN CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 END WHEN ((t0.c0)/(vt1.c0)) THEN ((t0.c0)<(vt0.c0)) END  NULLS LAST, (((t0.c0) NOT NULL) IN ()) ASC, CAST(((vt0.c0) NOT NULL) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES() COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CASE WHEN (NOT (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) WHEN (NOT (vt0.c0)) THEN CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 END WHEN ((t0.c0)/(vt1.c0)) THEN ((t0.c0)<(vt0.c0)) END  NULLS LAST, (((t0.c0) NOT NULL) IN ()) ASC, CAST(((vt0.c0) NOT NULL) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CHANGES() COLLATE BINARY COLLATE RTRIM) ORDER BY CASE WHEN (NOT (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) WHEN (NOT (vt0.c0)) THEN CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 END WHEN ((t0.c0)/(vt1.c0)) THEN ((t0.c0)<(vt0.c0)) END  NULLS LAST, (((t0.c0) NOT NULL) IN ()) ASC, CAST(((vt0.c0) NOT NULL) AS NUMERIC) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)!=(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)!=(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)!=(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ())) ORDER BY ((((vt1.c0))>=((vt1.c0))) IN (((vt1.c0)%(vt1.c0))))  NULLS LAST, ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CAST(vt1.c0 AS INTEGER)))  NULLS FIRST, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR('kp')) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0))>=((vt1.c0))) IN (((vt1.c0)%(vt1.c0))))  NULLS LAST, ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CAST(vt1.c0 AS INTEGER)))  NULLS FIRST, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR('kp')) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ())) ORDER BY ((((vt1.c0))>=((vt1.c0))) IN (((vt1.c0)%(vt1.c0))))  NULLS LAST, ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CAST(vt1.c0 AS INTEGER)))  NULLS FIRST, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR('kp')) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0))>=((vt1.c0))) IN (((vt1.c0)%(vt1.c0))))  NULLS LAST, ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CAST(vt1.c0 AS INTEGER)))  NULLS FIRST, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR('kp')) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ())) ORDER BY ((((vt1.c0))>=((vt1.c0))) IN (((vt1.c0)%(vt1.c0))))  NULLS LAST, ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CAST(vt1.c0 AS INTEGER)))  NULLS FIRST, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR('kp')) COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt0 WHERE (LIKELIHOOD(IFNULL(DISTINCT vt0.c0, vt0.c0), 0.821156813249226));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(IFNULL(DISTINCT vt0.c0, vt0.c0), 0.821156813249226)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELIHOOD(IFNULL(DISTINCT vt0.c0, vt0.c0), 0.821156813249226));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(IFNULL(DISTINCT vt0.c0, vt0.c0), 0.821156813249226)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELIHOOD(IFNULL(DISTINCT vt0.c0, vt0.c0), 0.821156813249226));
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS NUMERIC)) ORDER BY ((CAST(t0.c0 AS REAL)) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0)<(t0.c0)))) DESC, ((((((x'5747') BETWEEN (t0.c0) AND (t0.c0)))AND((((t0.c0))<((0.3541397523193107))))))OR(((t0.c0)<(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS REAL)) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0)<(t0.c0)))) DESC, ((((((x'5747') BETWEEN (t0.c0) AND (t0.c0)))AND((((t0.c0))<((0.3541397523193107))))))OR(((t0.c0)<(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS NUMERIC)) ORDER BY ((CAST(t0.c0 AS REAL)) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0)<(t0.c0)))) DESC, ((((((x'5747') BETWEEN (t0.c0) AND (t0.c0)))AND((((t0.c0))<((0.3541397523193107))))))OR(((t0.c0)<(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS REAL)) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0)<(t0.c0)))) DESC, ((((((x'5747') BETWEEN (t0.c0) AND (t0.c0)))AND((((t0.c0))<((0.3541397523193107))))))OR(((t0.c0)<(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS NUMERIC)) ORDER BY ((CAST(t0.c0 AS REAL)) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0)<(t0.c0)))) DESC, ((((((x'5747') BETWEEN (t0.c0) AND (t0.c0)))AND((((t0.c0))<((0.3541397523193107))))))OR(((t0.c0)<(t0.c0))));
SELECT * FROM vt1, t0, vt0 WHERE ((((NULL))>=(((t0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((NULL))>=(((t0.c0 IN ()))))) IS TRUE)  as count FROM vt1, t0 NOT INDEXED, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((((NULL))>=(((t0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((NULL))>=(((t0.c0 IN ()))))) IS TRUE)  as count FROM vt1, t0 NOT INDEXED, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((((NULL))>=(((t0.c0 IN ())))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((NOT (vt1.c0)))<((((vt0.c0))<=((0.32282832051778754))))) WHERE ((NOT (((vt1.c0)*(vt1.c0))))) ORDER BY ((vt1.c0)<<(vt0.c0)) COLLATE NOCASE, UPPER(vt1.c0);
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((NOT (vt1.c0)))<((((vt0.c0))<=((0.32282832051778754))))) ORDER BY ((vt1.c0)<<(vt0.c0)) COLLATE NOCASE, UPPER(vt1.c0));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((NOT (vt1.c0)))<((((vt0.c0))<=((0.32282832051778754))))) WHERE ((NOT (((vt1.c0)*(vt1.c0))))) ORDER BY ((vt1.c0)<<(vt0.c0)) COLLATE NOCASE, UPPER(vt1.c0);
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((NOT (vt1.c0)))<((((vt0.c0))<=((0.32282832051778754))))) ORDER BY ((vt1.c0)<<(vt0.c0)) COLLATE NOCASE, UPPER(vt1.c0));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((NOT (vt1.c0)))<((((vt0.c0))<=((0.32282832051778754))))) WHERE ((NOT (((vt1.c0)*(vt1.c0))))) ORDER BY ((vt1.c0)<<(vt0.c0)) COLLATE NOCASE, UPPER(vt1.c0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((HEX(DISTINCT 0x3c5bb042) IN ())) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(vt0.c0)))AND(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))), (vt0.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((HEX(DISTINCT 0x3c5bb042) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(vt0.c0)))AND(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))), (vt0.c0 IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((HEX(DISTINCT 0x3c5bb042) IN ())) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(vt0.c0)))AND(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))), (vt0.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((HEX(DISTINCT 0x3c5bb042) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(vt0.c0)))AND(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))), (vt0.c0 IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((HEX(DISTINCT 0x3c5bb042) IN ())) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(vt0.c0)))AND(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))), (vt0.c0 IN ()) DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND ((((vt0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND ((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND ((((vt0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND ((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND ((((vt0.c0) IS FALSE)))));
SELECT * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (((vt1.c0)/(vt1.c0))) AND (CAST(2.57858702E8 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (((vt1.c0)/(vt1.c0))) AND (CAST(2.57858702E8 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (((vt1.c0)/(vt1.c0))) AND (CAST(2.57858702E8 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (((vt1.c0)/(vt1.c0))) AND (CAST(2.57858702E8 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (((vt1.c0)/(vt1.c0))) AND (CAST(2.57858702E8 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) COLLATE NOCASE COLLATE BINARY, ((((vt0.c0) IS FALSE)) BETWEEN (((t0.c0)IS NOT(t0.c0))) AND (' fPH'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) COLLATE NOCASE COLLATE BINARY, ((((vt0.c0) IS FALSE)) BETWEEN (((t0.c0)IS NOT(t0.c0))) AND (' fPH'))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) COLLATE NOCASE COLLATE BINARY, ((((vt0.c0) IS FALSE)) BETWEEN (((t0.c0)IS NOT(t0.c0))) AND (' fPH'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) COLLATE NOCASE COLLATE BINARY, ((((vt0.c0) IS FALSE)) BETWEEN (((t0.c0)IS NOT(t0.c0))) AND (' fPH'))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) COLLATE NOCASE COLLATE BINARY, ((((vt0.c0) IS FALSE)) BETWEEN (((t0.c0)IS NOT(t0.c0))) AND (' fPH'))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((NULL)||(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)||(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((NULL)||(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)||(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((NULL)||(vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)OR(vt1.c0)) COLLATE BINARY COLLATE NOCASE) ORDER BY (((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(NULL)))AND('rZj+A'))))<=((UPPER(vt1.c0))))  NULLS LAST, vt0.c0 COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)OR(vt1.c0)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(NULL)))AND('rZj+A'))))<=((UPPER(vt1.c0))))  NULLS LAST, vt0.c0 COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)OR(vt1.c0)) COLLATE BINARY COLLATE NOCASE) ORDER BY (((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(NULL)))AND('rZj+A'))))<=((UPPER(vt1.c0))))  NULLS LAST, vt0.c0 COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)OR(vt1.c0)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(NULL)))AND('rZj+A'))))<=((UPPER(vt1.c0))))  NULLS LAST, vt0.c0 COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)OR(vt1.c0)) COLLATE BINARY COLLATE NOCASE) ORDER BY (((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(NULL)))AND('rZj+A'))))<=((UPPER(vt1.c0))))  NULLS LAST, vt0.c0 COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((((((vt1.c0)AND(-4.48283216E8)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(-4.48283216E8)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0)AND(-4.48283216E8)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(-4.48283216E8)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0)AND(-4.48283216E8)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))) AND (vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((-64316454)/((+ (vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, PRINTF(vt1.c0), ((0.029720079782591724) ISNULL), x'93e0', ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0)<<('-1873030474')), ((vt1.c0)IS(vt1.c0)), x'1f45', ((vt1.c0)>=(vt1.c0)), ((((vt1.c0)OR(0.21449057889945)))AND(vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-64316454)/((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, PRINTF(vt1.c0), ((0.029720079782591724) ISNULL), x'93e0', ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0)<<('-1873030474')), ((vt1.c0)IS(vt1.c0)), x'1f45', ((vt1.c0)>=(vt1.c0)), ((((vt1.c0)OR(0.21449057889945)))AND(vt1.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((-64316454)/((+ (vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, PRINTF(vt1.c0), ((0.029720079782591724) ISNULL), x'93e0', ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0)<<('-1873030474')), ((vt1.c0)IS(vt1.c0)), x'1f45', ((vt1.c0)>=(vt1.c0)), ((((vt1.c0)OR(0.21449057889945)))AND(vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-64316454)/((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, PRINTF(vt1.c0), ((0.029720079782591724) ISNULL), x'93e0', ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0)<<('-1873030474')), ((vt1.c0)IS(vt1.c0)), x'1f45', ((vt1.c0)>=(vt1.c0)), ((((vt1.c0)OR(0.21449057889945)))AND(vt1.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((-64316454)/((+ (vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, PRINTF(vt1.c0), ((0.029720079782591724) ISNULL), x'93e0', ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0)<<('-1873030474')), ((vt1.c0)IS(vt1.c0)), x'1f45', ((vt1.c0)>=(vt1.c0)), ((((vt1.c0)OR(0.21449057889945)))AND(vt1.c0))))) ASC  NULLS LAST;
SELECT * FROM vt0, vt1, t0 WHERE (((((t0.c0)OR((- (t0.c0)))))AND((((t0.c0))<>((vt1.c0)))))) ORDER BY SQLITE_COMPILEOPTION_USED('');
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR((- (t0.c0)))))AND((((t0.c0))!=((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY SQLITE_COMPILEOPTION_USED(''));
SELECT * FROM vt0, vt1, t0 WHERE (((((t0.c0)OR((- (t0.c0)))))AND((((t0.c0))<>((vt1.c0)))))) ORDER BY SQLITE_COMPILEOPTION_USED('');
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR((- (t0.c0)))))AND((((t0.c0))!=((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY SQLITE_COMPILEOPTION_USED(''));
SELECT * FROM vt0, vt1, t0 WHERE (((((t0.c0)OR((- (t0.c0)))))AND((((t0.c0))<>((vt1.c0)))))) ORDER BY SQLITE_COMPILEOPTION_USED('');
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((vt0.c0)-(t0.c0)) THEN (NOT (t0.c0)) END) ORDER BY (((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((json_array(t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)-(t0.c0)) THEN (NOT (t0.c0)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((json_array(t0.c0, t0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((vt0.c0)-(t0.c0)) THEN (NOT (t0.c0)) END) ORDER BY (((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((json_array(t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)-(t0.c0)) THEN (NOT (t0.c0)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((json_array(t0.c0, t0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((vt0.c0)-(t0.c0)) THEN (NOT (t0.c0)) END) ORDER BY (((CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((json_array(t0.c0, t0.c0))));
SELECT ALL * FROM vt1, t0 WHERE (-1072158262);
SELECT SUM(count) FROM (SELECT ALL ((-1072158262) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (-1072158262);
SELECT SUM(count) FROM (SELECT ALL ((-1072158262) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (-1072158262);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (TYPEOF(DISTINCT x''));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT x'')) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (TYPEOF(DISTINCT x''));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT x'')) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (TYPEOF(DISTINCT x''));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON vt0.c0 WHERE ((((((vt1.c0)|(vt1.c0))))=(((- (vt1.c0)))))) ORDER BY ((((vt0.c0))<=((vt0.c0))) IN (((((((((NULL)AND(vt1.c0)))OR(0Xba7baef)))OR(NULL)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)|(vt1.c0))))=(((- (vt1.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON vt0.c0 ORDER BY ((((vt0.c0))<=((vt0.c0))) IN (((((((((NULL)AND(vt1.c0)))OR(0xba7baef)))OR(NULL)))AND(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON vt0.c0 WHERE ((((((vt1.c0)|(vt1.c0))))=(((- (vt1.c0)))))) ORDER BY ((((vt0.c0))<=((vt0.c0))) IN (((((((((NULL)AND(vt1.c0)))OR(0Xba7baef)))OR(NULL)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)|(vt1.c0))))=(((- (vt1.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON vt0.c0 ORDER BY ((((vt0.c0))<=((vt0.c0))) IN (((((((((NULL)AND(vt1.c0)))OR(0xba7baef)))OR(NULL)))AND(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON vt0.c0 WHERE ((((((vt1.c0)|(vt1.c0))))=(((- (vt1.c0)))))) ORDER BY ((((vt0.c0))<=((vt0.c0))) IN (((((((((NULL)AND(vt1.c0)))OR(0Xba7baef)))OR(NULL)))AND(vt0.c0)))) ASC;
SELECT ALL * FROM t0, vt0 INNER JOIN vt1 ON (((+ (vt0.c0)))/(PRINTF(vt1.c0, t0.c0, vt1.c0))) WHERE ((((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))>=(((vt1.c0)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))>=(((vt1.c0)&(vt1.c0))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON (((+ (vt0.c0)))/(PRINTF(vt1.c0, t0.c0, vt1.c0))));
SELECT ALL * FROM t0, vt0 INNER JOIN vt1 ON (((+ (vt0.c0)))/(PRINTF(vt1.c0, t0.c0, vt1.c0))) WHERE ((((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))>=(((vt1.c0)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))>=(((vt1.c0)&(vt1.c0))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON (((+ (vt0.c0)))/(PRINTF(vt1.c0, t0.c0, vt1.c0))));
SELECT ALL * FROM t0, vt0 INNER JOIN vt1 ON (((+ (vt0.c0)))/(PRINTF(vt1.c0, t0.c0, vt1.c0))) WHERE ((((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))>=(((vt1.c0)&(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0) IS FALSE))>>(-1873030474)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE))>>(-1873030474))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0) IS FALSE))>>(-1873030474)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE))>>(-1873030474))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0) IS FALSE))>>(-1873030474)));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ('} ') ORDER BY (((vt0.c0 IN ()))>>(((vt0.c0) BETWEEN ('-748273693') AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('} ') IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((vt0.c0 IN ()))>>(((vt0.c0) BETWEEN ('-748273693') AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ('} ') ORDER BY (((vt0.c0 IN ()))>>(((vt0.c0) BETWEEN ('-748273693') AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('} ') IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((vt0.c0 IN ()))>>(((vt0.c0) BETWEEN ('-748273693') AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ('} ') ORDER BY (((vt0.c0 IN ()))>>(((vt0.c0) BETWEEN ('-748273693') AND (vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)/(vt1.c0)), TYPEOF(0Xffffffffe4ef0614), 'somELH'))<((vt1.c0, CASE vt1.c0  WHEN 0.28375538263880584 THEN vt1.c0 ELSE vt1.c0 END, COALESCE(vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)/(vt1.c0)), TYPEOF(0Xffffffffe4ef0614), 'somELH'))<((vt1.c0, CASE vt1.c0  WHEN 0.28375538263880584 THEN vt1.c0 ELSE vt1.c0 END, COALESCE(vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)/(vt1.c0)), TYPEOF(0Xffffffffe4ef0614), 'somELH'))<((vt1.c0, CASE vt1.c0  WHEN 0.28375538263880584 THEN vt1.c0 ELSE vt1.c0 END, COALESCE(vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)/(vt1.c0)), TYPEOF(0Xffffffffe4ef0614), 'somELH'))<((vt1.c0, CASE vt1.c0  WHEN 0.28375538263880584 THEN vt1.c0 ELSE vt1.c0 END, COALESCE(vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)/(vt1.c0)), TYPEOF(0Xffffffffe4ef0614), 'somELH'))<((vt1.c0, CASE vt1.c0  WHEN 0.28375538263880584 THEN vt1.c0 ELSE vt1.c0 END, COALESCE(vt1.c0, vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (CAST((((vt1.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, x'', vt0.c0)) AND ((vt0.c0, '517146584', t0.c0))) AS REAL)) ORDER BY vt1.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, x'', vt0.c0)) AND ((vt0.c0, '517146584', t0.c0))) AS REAL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY vt1.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (CAST((((vt1.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, x'', vt0.c0)) AND ((vt0.c0, '517146584', t0.c0))) AS REAL)) ORDER BY vt1.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, x'', vt0.c0)) AND ((vt0.c0, '517146584', t0.c0))) AS REAL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY vt1.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (CAST((((vt1.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, x'', vt0.c0)) AND ((vt0.c0, '517146584', t0.c0))) AS REAL)) ORDER BY vt1.c0 COLLATE RTRIM;
SELECT COUNT(*) FROM vt1 WHERE ('') ORDER BY ((((vt1.c0)||(vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)/(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)||(vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)/(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ('') ORDER BY ((((vt1.c0)||(vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)/(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)||(vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)/(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ('') ORDER BY ((((vt1.c0)||(vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)/(vt1.c0))))  NULLS LAST;
SELECT * FROM vt1, t0, vt0 WHERE ((~ (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((~ (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((~ (t0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 WHERE (0x377f398c) ORDER BY (((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((vt1.c0 IN (vt1.c0))))) ASC, ((((vt1.c0)*(vt1.c0)))LIKE(CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0x377f398c) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((vt1.c0 IN (vt1.c0))))) ASC, ((((vt1.c0)*(vt1.c0)))LIKE(CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (0x377f398c) ORDER BY (((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((vt1.c0 IN (vt1.c0))))) ASC, ((((vt1.c0)*(vt1.c0)))LIKE(CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0x377f398c) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((vt1.c0 IN (vt1.c0))))) ASC, ((((vt1.c0)*(vt1.c0)))LIKE(CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (0x377f398c) ORDER BY (((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((vt1.c0 IN (vt1.c0))))) ASC, ((((vt1.c0)*(vt1.c0)))LIKE(CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN x'ebfc' THEN vt1.c0 END) NOT BETWEEN ('535653934') AND ((~ (t0.c0)))) WHERE (CASE WHEN CASE WHEN x'aa9d41ba' THEN vt1.c0 END THEN CHAR(t0.c0) WHEN (((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0))>=((vt1.c0, t0.c0, '䑜h', t0.c0, t0.c0))) THEN ((('1990741850'))==((vt1.c0))) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY END) ORDER BY CASE (vt0.c0 IN ())  WHEN CAST(vt1.c0 AS BLOB) THEN ((((1610203904)AND(vt1.c0)))OR(vt1.c0)) WHEN ((NULL) IS FALSE) THEN CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN vt0.c0 THEN ((vt1.c0)-(vt0.c0)) ELSE (((t0.c0))<((t0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN x'aa9d41ba' THEN vt1.c0 END THEN CHAR(t0.c0) WHEN (((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0))>=((vt1.c0, t0.c0, '䑜h', t0.c0, t0.c0))) THEN ((('1990741850'))=((vt1.c0))) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN x'ebfc' THEN vt1.c0 END) NOT BETWEEN ('535653934') AND ((~ (t0.c0)))) ORDER BY CASE (vt0.c0 IN ())  WHEN CAST(vt1.c0 AS BLOB) THEN ((((1610203904)AND(vt1.c0)))OR(vt1.c0)) WHEN ((NULL) IS FALSE) THEN CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN vt0.c0 THEN ((vt1.c0)-(vt0.c0)) ELSE (((t0.c0))<((t0.c0))) END  NULLS FIRST);
SELECT * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN x'ebfc' THEN vt1.c0 END) NOT BETWEEN ('535653934') AND ((~ (t0.c0)))) WHERE (CASE WHEN CASE WHEN x'aa9d41ba' THEN vt1.c0 END THEN CHAR(t0.c0) WHEN (((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0))>=((vt1.c0, t0.c0, '䑜h', t0.c0, t0.c0))) THEN ((('1990741850'))==((vt1.c0))) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY END) ORDER BY CASE (vt0.c0 IN ())  WHEN CAST(vt1.c0 AS BLOB) THEN ((((1610203904)AND(vt1.c0)))OR(vt1.c0)) WHEN ((NULL) IS FALSE) THEN CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN vt0.c0 THEN ((vt1.c0)-(vt0.c0)) ELSE (((t0.c0))<((t0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN x'aa9d41ba' THEN vt1.c0 END THEN CHAR(t0.c0) WHEN (((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0))>=((vt1.c0, t0.c0, '䑜h', t0.c0, t0.c0))) THEN ((('1990741850'))=((vt1.c0))) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN x'ebfc' THEN vt1.c0 END) NOT BETWEEN ('535653934') AND ((~ (t0.c0)))) ORDER BY CASE (vt0.c0 IN ())  WHEN CAST(vt1.c0 AS BLOB) THEN ((((1610203904)AND(vt1.c0)))OR(vt1.c0)) WHEN ((NULL) IS FALSE) THEN CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN vt0.c0 THEN ((vt1.c0)-(vt0.c0)) ELSE (((t0.c0))<((t0.c0))) END  NULLS FIRST);
SELECT * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN x'ebfc' THEN vt1.c0 END) NOT BETWEEN ('535653934') AND ((~ (t0.c0)))) WHERE (CASE WHEN CASE WHEN x'aa9d41ba' THEN vt1.c0 END THEN CHAR(t0.c0) WHEN (((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0))>=((vt1.c0, t0.c0, '䑜h', t0.c0, t0.c0))) THEN ((('1990741850'))==((vt1.c0))) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY END) ORDER BY CASE (vt0.c0 IN ())  WHEN CAST(vt1.c0 AS BLOB) THEN ((((1610203904)AND(vt1.c0)))OR(vt1.c0)) WHEN ((NULL) IS FALSE) THEN CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN vt0.c0 THEN ((vt1.c0)-(vt0.c0)) ELSE (((t0.c0))<((t0.c0))) END  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (QUOTE(((vt1.c0) NOT BETWEEN ('u^ZN>}\r') AND (vt1.c0)))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND ('0.31166087467147696')) COLLATE NOCASE, ((((((((((vt0.c0)>=(vt1.c0)))AND(((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0)+(vt0.c0)))))AND((((vt1.c0, vt0.c0, vt1.c0))>=((vt1.c0, vt0.c0, vt0.c0))))))AND(((vt0.c0)+(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((vt1.c0) NOT BETWEEN ('u^ZN>}\r') AND (vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND ('0.31166087467147696')) COLLATE NOCASE, ((((((((((vt0.c0)>=(vt1.c0)))AND(((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0)+(vt0.c0)))))AND((((vt1.c0, vt0.c0, vt1.c0))>=((vt1.c0, vt0.c0, vt0.c0))))))AND(((vt0.c0)+(vt1.c0)))) DESC);
SELECT * FROM vt1, vt0 WHERE (QUOTE(((vt1.c0) NOT BETWEEN ('u^ZN>}\r') AND (vt1.c0)))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND ('0.31166087467147696')) COLLATE NOCASE, ((((((((((vt0.c0)>=(vt1.c0)))AND(((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0)+(vt0.c0)))))AND((((vt1.c0, vt0.c0, vt1.c0))>=((vt1.c0, vt0.c0, vt0.c0))))))AND(((vt0.c0)+(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((vt1.c0) NOT BETWEEN ('u^ZN>}\r') AND (vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND ('0.31166087467147696')) COLLATE NOCASE, ((((((((((vt0.c0)>=(vt1.c0)))AND(((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0)+(vt0.c0)))))AND((((vt1.c0, vt0.c0, vt1.c0))>=((vt1.c0, vt0.c0, vt0.c0))))))AND(((vt0.c0)+(vt1.c0)))) DESC);
SELECT * FROM vt1, vt0 WHERE (QUOTE(((vt1.c0) NOT BETWEEN ('u^ZN>}\r') AND (vt1.c0)))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND ('0.31166087467147696')) COLLATE NOCASE, ((((((((((vt0.c0)>=(vt1.c0)))AND(((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0)+(vt0.c0)))))AND((((vt1.c0, vt0.c0, vt1.c0))>=((vt1.c0, vt0.c0, vt0.c0))))))AND(((vt0.c0)+(vt1.c0)))) DESC;
SELECT * FROM vt0, t0, vt1 WHERE ((((((vt0.c0, vt1.c0, t0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))AND(((((t0.c0)OR(vt1.c0)))AND(vt0.c0))))) ORDER BY ((((((vt0.c0)|(0.8738691954110923)))AND(((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(t0.c0)))))AND(vt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt1.c0, t0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))AND(((((t0.c0)OR(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((((vt0.c0)|(0.8738691954110923)))AND(((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(t0.c0)))))AND(vt1.c0)) ASC  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE ((((((vt0.c0, vt1.c0, t0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))AND(((((t0.c0)OR(vt1.c0)))AND(vt0.c0))))) ORDER BY ((((((vt0.c0)|(0.8738691954110923)))AND(((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(t0.c0)))))AND(vt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt1.c0, t0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))AND(((((t0.c0)OR(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((((vt0.c0)|(0.8738691954110923)))AND(((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(t0.c0)))))AND(vt1.c0)) ASC  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE ((((((vt0.c0, vt1.c0, t0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))AND(((((t0.c0)OR(vt1.c0)))AND(vt0.c0))))) ORDER BY ((((((vt0.c0)|(0.8738691954110923)))AND(((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(t0.c0)))))AND(vt1.c0)) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0 IN (t0.c0)))OR((~ (t0.c0)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN (t0.c0)))OR((~ (t0.c0)))))OR(NULL))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0 IN (t0.c0)))OR((~ (t0.c0)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN (t0.c0)))OR((~ (t0.c0)))))OR(NULL))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0 IN (t0.c0)))OR((~ (t0.c0)))))OR(NULL)));
SELECT COUNT(*) FROM vt1, t0 WHERE ((QUOTE(t0.c0) IN (((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), CHAR(t0.c0, vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((QUOTE(t0.c0) IN (((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), CHAR(t0.c0, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((QUOTE(t0.c0) IN (((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), CHAR(t0.c0, vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((QUOTE(t0.c0) IN (((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), CHAR(t0.c0, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((QUOTE(t0.c0) IN (((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), CHAR(t0.c0, vt1.c0, vt1.c0))));
SELECT * FROM t0 CROSS JOIN vt0 ON (((t0.c0 IN ()))>((+ (t0.c0)))) FULL OUTER JOIN vt1 ON (((vt1.c0 IN (vt1.c0, vt0.c0))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (0xffffffffdb1efeba)) WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))>=((t0.c0)));
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((t0.c0 IN ()))>((+ (t0.c0)))) FULL OUTER JOIN vt1 ON (((vt1.c0 IN (vt1.c0, vt0.c0))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (0xffffffffdb1efeba)) ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))>=((t0.c0))));
SELECT * FROM t0 CROSS JOIN vt0 ON (((t0.c0 IN ()))>((+ (t0.c0)))) FULL OUTER JOIN vt1 ON (((vt1.c0 IN (vt1.c0, vt0.c0))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (0xffffffffdb1efeba)) WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))>=((t0.c0)));
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((t0.c0 IN ()))>((+ (t0.c0)))) FULL OUTER JOIN vt1 ON (((vt1.c0 IN (vt1.c0, vt0.c0))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (0xffffffffdb1efeba)) ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))>=((t0.c0))));
SELECT * FROM t0 CROSS JOIN vt0 ON (((t0.c0 IN ()))>((+ (t0.c0)))) FULL OUTER JOIN vt1 ON (((vt1.c0 IN (vt1.c0, vt0.c0))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (0xffffffffdb1efeba)) WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))>=((t0.c0)));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((t0.c0 IN ()))GLOB('195541743')));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))GLOB('195541743'))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((t0.c0 IN ()))GLOB('195541743')));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))GLOB('195541743'))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((t0.c0 IN ()))GLOB('195541743')));
SELECT ALL * FROM t0, vt0, vt1 WHERE (CASE CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 END  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN (vt0.c0 IN ()) WHEN vt1.c0 THEN ((vt1.c0) NOTNULL) WHEN (((vt1.c0, 0.2173813402111483, '?㨢'))>((vt1.c0, vt0.c0, t0.c0))) THEN ((vt1.c0)>>(vt1.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) END) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 END  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN (vt0.c0 IN ()) WHEN vt1.c0 THEN ((vt1.c0) NOTNULL) WHEN (((vt1.c0, 0.2173813402111483, '?㨢'))>((vt1.c0, vt0.c0, t0.c0))) THEN ((vt1.c0)>>(vt1.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) END) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CASE CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 END  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN (vt0.c0 IN ()) WHEN vt1.c0 THEN ((vt1.c0) NOTNULL) WHEN (((vt1.c0, 0.2173813402111483, '?㨢'))>((vt1.c0, vt0.c0, t0.c0))) THEN ((vt1.c0)>>(vt1.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) END) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 END  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN (vt0.c0 IN ()) WHEN vt1.c0 THEN ((vt1.c0) NOTNULL) WHEN (((vt1.c0, 0.2173813402111483, '?㨢'))>((vt1.c0, vt0.c0, t0.c0))) THEN ((vt1.c0)>>(vt1.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) END) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CASE CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 END  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN (vt0.c0 IN ()) WHEN vt1.c0 THEN ((vt1.c0) NOTNULL) WHEN (((vt1.c0, 0.2173813402111483, '?㨢'))>((vt1.c0, vt0.c0, t0.c0))) THEN ((vt1.c0)>>(vt1.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) END) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (UNLIKELY((~ (t0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((~ (t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (UNLIKELY((~ (t0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((~ (t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (UNLIKELY((~ (t0.c0))));
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON ((((1012641858) IS FALSE))<>(((t0.c0)>=(NULL)))) FULL OUTER JOIN vt0 ON ((LIKELIHOOD(t0.c0, 0.6425760419487411))>=(LIKELY(DISTINCT '0.33147292417784513'))) WHERE ((((vt0.c0, t0.c0, 0xffffffffa0942b2e)) BETWEEN ((((vt1.c0)*(vt0.c0)), x'', ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt1.c0))<((vt1.c0))), ((vt0.c0)<<(vt0.c0)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, t0.c0, 0Xffffffffa0942b2e)) BETWEEN ((((vt1.c0)*(vt0.c0)), x'', ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt1.c0))<((vt1.c0))), ((vt0.c0)<<(vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((((1012641858) IS FALSE))!=(((t0.c0)>=(NULL)))) FULL OUTER JOIN vt0 ON ((LIKELIHOOD(t0.c0, 0.6425760419487411))>=(LIKELY(DISTINCT '0.33147292417784513'))));
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON ((((1012641858) IS FALSE))<>(((t0.c0)>=(NULL)))) FULL OUTER JOIN vt0 ON ((LIKELIHOOD(t0.c0, 0.6425760419487411))>=(LIKELY(DISTINCT '0.33147292417784513'))) WHERE ((((vt0.c0, t0.c0, 0xffffffffa0942b2e)) BETWEEN ((((vt1.c0)*(vt0.c0)), x'', ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt1.c0))<((vt1.c0))), ((vt0.c0)<<(vt0.c0)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, t0.c0, 0Xffffffffa0942b2e)) BETWEEN ((((vt1.c0)*(vt0.c0)), x'', ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt1.c0))<((vt1.c0))), ((vt0.c0)<<(vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((((1012641858) IS FALSE))!=(((t0.c0)>=(NULL)))) FULL OUTER JOIN vt0 ON ((LIKELIHOOD(t0.c0, 0.6425760419487411))>=(LIKELY(DISTINCT '0.33147292417784513'))));
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON ((((1012641858) IS FALSE))<>(((t0.c0)>=(NULL)))) FULL OUTER JOIN vt0 ON ((LIKELIHOOD(t0.c0, 0.6425760419487411))>=(LIKELY(DISTINCT '0.33147292417784513'))) WHERE ((((vt0.c0, t0.c0, 0xffffffffa0942b2e)) BETWEEN ((((vt1.c0)*(vt0.c0)), x'', ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt1.c0))<((vt1.c0))), ((vt0.c0)<<(vt0.c0)), vt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE (('-1894173271' IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM)<(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('-1894173271' IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)<(x''))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (('-1894173271' IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM)<(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('-1894173271' IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)<(x''))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (('-1894173271' IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM)<(x''))  NULLS FIRST;
SELECT * FROM t0, vt0, vt1 WHERE (CASE ((t0.c0)<>(vt1.c0))  WHEN '-569184602' THEN ((t0.c0) IS TRUE) WHEN ((vt1.c0)*(1673654039)) THEN (((t0.c0, vt1.c0, '99820115'))>((t0.c0, vt0.c0, t0.c0))) WHEN 0.6234767794593336 THEN ((vt1.c0) IS FALSE) ELSE CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN 0.42539207953304226 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL END END) ORDER BY (((((vt0.c0, vt1.c0, t0.c0))<=((vt1.c0, vt0.c0, t0.c0)))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)<>(vt1.c0))  WHEN '-569184602' THEN ((t0.c0) IS TRUE) WHEN ((vt1.c0)*(1673654039)) THEN (((t0.c0, vt1.c0, '99820115'))>((t0.c0, vt0.c0, t0.c0))) WHEN 0.6234767794593336 THEN ((vt1.c0) IS FALSE) ELSE CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN 0.42539207953304226 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL END END) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((((vt0.c0, vt1.c0, t0.c0))<=((vt1.c0, vt0.c0, t0.c0)))) NOT NULL) DESC  NULLS LAST);
SELECT * FROM t0, vt0, vt1 WHERE (CASE ((t0.c0)<>(vt1.c0))  WHEN '-569184602' THEN ((t0.c0) IS TRUE) WHEN ((vt1.c0)*(1673654039)) THEN (((t0.c0, vt1.c0, '99820115'))>((t0.c0, vt0.c0, t0.c0))) WHEN 0.6234767794593336 THEN ((vt1.c0) IS FALSE) ELSE CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN 0.42539207953304226 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL END END) ORDER BY (((((vt0.c0, vt1.c0, t0.c0))<=((vt1.c0, vt0.c0, t0.c0)))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)<>(vt1.c0))  WHEN '-569184602' THEN ((t0.c0) IS TRUE) WHEN ((vt1.c0)*(1673654039)) THEN (((t0.c0, vt1.c0, '99820115'))>((t0.c0, vt0.c0, t0.c0))) WHEN 0.6234767794593336 THEN ((vt1.c0) IS FALSE) ELSE CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN 0.42539207953304226 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL END END) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((((vt0.c0, vt1.c0, t0.c0))<=((vt1.c0, vt0.c0, t0.c0)))) NOT NULL) DESC  NULLS LAST);
SELECT * FROM t0, vt0, vt1 WHERE (CASE ((t0.c0)<>(vt1.c0))  WHEN '-569184602' THEN ((t0.c0) IS TRUE) WHEN ((vt1.c0)*(1673654039)) THEN (((t0.c0, vt1.c0, '99820115'))>((t0.c0, vt0.c0, t0.c0))) WHEN 0.6234767794593336 THEN ((vt1.c0) IS FALSE) ELSE CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN 0.42539207953304226 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL END END) ORDER BY (((((vt0.c0, vt1.c0, t0.c0))<=((vt1.c0, vt0.c0, t0.c0)))) NOT NULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL)) BETWEEN ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))) AND (UPPER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) BETWEEN ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))) AND (UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL)) BETWEEN ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))) AND (UPPER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) BETWEEN ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))) AND (UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL)) BETWEEN ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))) AND (UPPER(vt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN x'' THEN ((x'')-(vt1.c0)) WHEN ((vt1.c0)OR(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c0 END) ORDER BY vt1.c0 DESC  NULLS FIRST, vt1.c0, (+ (vt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN ((x'')-(vt1.c0)) WHEN ((vt1.c0)OR(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c0 END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST, vt1.c0, (+ (vt1.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN x'' THEN ((x'')-(vt1.c0)) WHEN ((vt1.c0)OR(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c0 END) ORDER BY vt1.c0 DESC  NULLS FIRST, vt1.c0, (+ (vt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN ((x'')-(vt1.c0)) WHEN ((vt1.c0)OR(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c0 END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST, vt1.c0, (+ (vt1.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN x'' THEN ((x'')-(vt1.c0)) WHEN ((vt1.c0)OR(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c0 END) ORDER BY vt1.c0 DESC  NULLS FIRST, vt1.c0, (+ (vt1.c0 COLLATE BINARY)) ASC;
SELECT ALL * FROM vt0, t0 WHERE ((t0.c0 IN ())) ORDER BY ((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))IS((((t0.c0))<=((0.6728342382013343)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))IS((((t0.c0))<=((0.6728342382013343)))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((t0.c0 IN ())) ORDER BY ((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))IS((((t0.c0))<=((0.6728342382013343)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))IS((((t0.c0))<=((0.6728342382013343)))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((t0.c0 IN ())) ORDER BY ((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)))IS((((t0.c0))<=((0.6728342382013343)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE t0.c0  WHEN ABS(DISTINCT t0.c0) THEN 0.38559028556848385 WHEN (~ (t0.c0)) THEN CAST('2139168295' AS BLOB) WHEN ((t0.c0)|(t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) ELSE ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0  WHEN ABS(DISTINCT t0.c0) THEN 0.38559028556848385 WHEN (~ (t0.c0)) THEN CAST('2139168295' AS BLOB) WHEN ((t0.c0)|(t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) ELSE ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE t0.c0  WHEN ABS(DISTINCT t0.c0) THEN 0.38559028556848385 WHEN (~ (t0.c0)) THEN CAST('2139168295' AS BLOB) WHEN ((t0.c0)|(t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) ELSE ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0  WHEN ABS(DISTINCT t0.c0) THEN 0.38559028556848385 WHEN (~ (t0.c0)) THEN CAST('2139168295' AS BLOB) WHEN ((t0.c0)|(t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) ELSE ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE t0.c0  WHEN ABS(DISTINCT t0.c0) THEN 0.38559028556848385 WHEN (~ (t0.c0)) THEN CAST('2139168295' AS BLOB) WHEN ((t0.c0)|(t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) ELSE ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) END);
SELECT COUNT(*) FROM vt1 WHERE (COALESCE('()', ((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), 0.30257398194644447, HEX(vt1.c0))) ORDER BY (NOT (vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE('()', ((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), 0.30257398194644447, HEX(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (NOT (vt1.c0)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (COALESCE('()', ((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), 0.30257398194644447, HEX(vt1.c0))) ORDER BY (NOT (vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE('()', ((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), 0.30257398194644447, HEX(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (NOT (vt1.c0)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (COALESCE('()', ((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), 0.30257398194644447, HEX(vt1.c0))) ORDER BY (NOT (vt1.c0)) DESC;
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) BETWEEN ('7lq') AND (vt0.c0))))) ORDER BY (~ (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) BETWEEN ('7lq') AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) BETWEEN ('7lq') AND (vt0.c0))))) ORDER BY (~ (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) BETWEEN ('7lq') AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) BETWEEN ('7lq') AND (vt0.c0))))) ORDER BY (~ (vt0.c0));
SELECT * FROM vt1, t0 WHERE (CASE ABS(DISTINCT vt1.c0)  WHEN ((vt1.c0) ISNULL) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 END ELSE SQLITE_COMPILEOPTION_USED(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(DISTINCT vt1.c0)  WHEN ((vt1.c0) ISNULL) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 END ELSE SQLITE_COMPILEOPTION_USED(vt1.c0) END) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CASE ABS(DISTINCT vt1.c0)  WHEN ((vt1.c0) ISNULL) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 END ELSE SQLITE_COMPILEOPTION_USED(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(DISTINCT vt1.c0)  WHEN ((vt1.c0) ISNULL) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 END ELSE SQLITE_COMPILEOPTION_USED(vt1.c0) END) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CASE ABS(DISTINCT vt1.c0)  WHEN ((vt1.c0) ISNULL) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 END ELSE SQLITE_COMPILEOPTION_USED(vt1.c0) END);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (IFNULL(DISTINCT ((((t0.c0)AND(vt0.c0)))AND(x'657e')), LENGTH(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((((t0.c0)AND(vt0.c0)))AND(x'657e')), LENGTH(t0.c0))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (IFNULL(DISTINCT ((((t0.c0)AND(vt0.c0)))AND(x'657e')), LENGTH(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((((t0.c0)AND(vt0.c0)))AND(x'657e')), LENGTH(t0.c0))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (IFNULL(DISTINCT ((((t0.c0)AND(vt0.c0)))AND(x'657e')), LENGTH(t0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0) NOT NULL)) NOTNULL) WHERE ((((((((NULL)AND(vt0.c0)))AND(vt0.c0))))>((((((vt0.c0)AND(NULL)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((NULL)AND(vt0.c0)))AND(vt0.c0))))>((((((vt0.c0)AND(NULL)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0) NOT NULL)) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0) NOT NULL)) NOTNULL) WHERE ((((((((NULL)AND(vt0.c0)))AND(vt0.c0))))>((((((vt0.c0)AND(NULL)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((NULL)AND(vt0.c0)))AND(vt0.c0))))>((((((vt0.c0)AND(NULL)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0) NOT NULL)) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0) NOT NULL)) NOTNULL) WHERE ((((((((NULL)AND(vt0.c0)))AND(vt0.c0))))>((((((vt0.c0)AND(NULL)))AND(vt0.c0))))));
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (CASE ((t0.c0) NOTNULL)  WHEN ((-1811573679) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) NOTNULL)  WHEN ((-1811573679) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (CASE ((t0.c0) NOTNULL)  WHEN ((-1811573679) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) NOTNULL)  WHEN ((-1811573679) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (CASE ((t0.c0) NOTNULL)  WHEN ((-1811573679) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END);
SELECT ALL * FROM t0, vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ()));
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE WHEN SQLITE_SOURCE_ID() THEN ((vt1.c0)OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN SQLITE_SOURCE_ID() THEN ((vt1.c0)OR(vt1.c0)) END) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE WHEN SQLITE_SOURCE_ID() THEN ((vt1.c0)OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN SQLITE_SOURCE_ID() THEN ((vt1.c0)OR(vt1.c0)) END) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE WHEN SQLITE_SOURCE_ID() THEN ((vt1.c0)OR(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (CAST((((vt1.c0))<((vt1.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0))<((vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (CAST((((vt1.c0))<((vt1.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0))<((vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (CAST((((vt1.c0))<((vt1.c0))) AS NUMERIC));
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((t0.c0 IN ())) BETWEEN (((t0.c0) ISNULL)) AND (((vt0.c0)IS NOT(1.467009715E9))))) ORDER BY ((NULLIF(vt0.c0, vt1.c0)) ISNULL), (((vt1.c0, ((t0.c0)/(vt0.c0)), vt1.c0, ((vt0.c0)LIKE(vt0.c0)), COALESCE(vt0.c0, vt0.c0)))>=((((vt1.c0)OR(x'e848')), CAST(t0.c0 AS INTEGER), vt0.c0, ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)), CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) BETWEEN (((t0.c0) ISNULL)) AND (((vt0.c0)IS NOT(1.467009715E9))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((NULLIF(vt0.c0, vt1.c0)) ISNULL), (((vt1.c0, ((t0.c0)/(vt0.c0)), vt1.c0, ((vt0.c0)LIKE(vt0.c0)), COALESCE(vt0.c0, vt0.c0)))>=((((vt1.c0)OR(x'e848')), CAST(t0.c0 AS INTEGER), vt0.c0, ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)), CAST(vt1.c0 AS BLOB)))));
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((t0.c0 IN ())) BETWEEN (((t0.c0) ISNULL)) AND (((vt0.c0)IS NOT(1.467009715E9))))) ORDER BY ((NULLIF(vt0.c0, vt1.c0)) ISNULL), (((vt1.c0, ((t0.c0)/(vt0.c0)), vt1.c0, ((vt0.c0)LIKE(vt0.c0)), COALESCE(vt0.c0, vt0.c0)))>=((((vt1.c0)OR(x'e848')), CAST(t0.c0 AS INTEGER), vt0.c0, ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)), CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) BETWEEN (((t0.c0) ISNULL)) AND (((vt0.c0)IS NOT(1.467009715E9))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((NULLIF(vt0.c0, vt1.c0)) ISNULL), (((vt1.c0, ((t0.c0)/(vt0.c0)), vt1.c0, ((vt0.c0)LIKE(vt0.c0)), COALESCE(vt0.c0, vt0.c0)))>=((((vt1.c0)OR(x'e848')), CAST(t0.c0 AS INTEGER), vt0.c0, ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)), CAST(vt1.c0 AS BLOB)))));
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((t0.c0 IN ())) BETWEEN (((t0.c0) ISNULL)) AND (((vt0.c0)IS NOT(1.467009715E9))))) ORDER BY ((NULLIF(vt0.c0, vt1.c0)) ISNULL), (((vt1.c0, ((t0.c0)/(vt0.c0)), vt1.c0, ((vt0.c0)LIKE(vt0.c0)), COALESCE(vt0.c0, vt0.c0)))>=((((vt1.c0)OR(x'e848')), CAST(t0.c0 AS INTEGER), vt0.c0, ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)), CAST(vt1.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON (((vt0.c0, 'l9j4', vt0.c0)) BETWEEN ((((t0.c0) NOT NULL), ((((((((((((vt0.c0)AND(t0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR('')))OR(vt1.c0)))OR(vt1.c0)), ((vt0.c0) NOTNULL))) AND ((((vt0.c0) IS FALSE), ((vt1.c0) NOT BETWEEN ('uLh9T](|') AND (vt1.c0)), (((vt1.c0))>((t0.c0)))))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON (((vt0.c0, 'l9j4', vt0.c0)) BETWEEN ((((t0.c0) NOT NULL), ((((((((((((vt0.c0)AND(t0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR('')))OR(vt1.c0)))OR(vt1.c0)), ((vt0.c0) NOTNULL))) AND ((((vt0.c0) IS FALSE), ((vt1.c0) NOT BETWEEN ('uLh9T](|') AND (vt1.c0)), (((vt1.c0))>((t0.c0)))))));
SELECT ALL COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON (((vt0.c0, 'l9j4', vt0.c0)) BETWEEN ((((t0.c0) NOT NULL), ((((((((((((vt0.c0)AND(t0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR('')))OR(vt1.c0)))OR(vt1.c0)), ((vt0.c0) NOTNULL))) AND ((((vt0.c0) IS FALSE), ((vt1.c0) NOT BETWEEN ('uLh9T](|') AND (vt1.c0)), (((vt1.c0))>((t0.c0)))))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON (((vt0.c0, 'l9j4', vt0.c0)) BETWEEN ((((t0.c0) NOT NULL), ((((((((((((vt0.c0)AND(t0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR('')))OR(vt1.c0)))OR(vt1.c0)), ((vt0.c0) NOTNULL))) AND ((((vt0.c0) IS FALSE), ((vt1.c0) NOT BETWEEN ('uLh9T](|') AND (vt1.c0)), (((vt1.c0))>((t0.c0)))))));
SELECT ALL COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON (((vt0.c0, 'l9j4', vt0.c0)) BETWEEN ((((t0.c0) NOT NULL), ((((((((((((vt0.c0)AND(t0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR('')))OR(vt1.c0)))OR(vt1.c0)), ((vt0.c0) NOTNULL))) AND ((((vt0.c0) IS FALSE), ((vt1.c0) NOT BETWEEN ('uLh9T](|') AND (vt1.c0)), (((vt1.c0))>((t0.c0)))))) WHERE (t0.c0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) ISNULL))OR(0xffffffffa900564d)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL))OR(0Xffffffffa900564d))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) ISNULL))OR(0xffffffffa900564d)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL))OR(0Xffffffffa900564d))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) ISNULL))OR(0xffffffffa900564d)));
SELECT * FROM vt0, vt1, t0 WHERE (json_object(vt0.c0, vt1.c0) COLLATE NOCASE) ORDER BY ((((((((((vt0.c0)<>(t0.c0)))OR((vt0.c0 IN ()))))AND((- (vt1.c0)))))OR((- (vt1.c0)))))OR(((((vt0.c0)OR(t0.c0)))AND(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_object(vt0.c0, vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((((((((vt0.c0)<>(t0.c0)))OR((vt0.c0 IN ()))))AND((- (vt1.c0)))))OR((- (vt1.c0)))))OR(((((vt0.c0)OR(t0.c0)))AND(t0.c0)))) ASC);
SELECT * FROM vt0, vt1, t0 WHERE (json_object(vt0.c0, vt1.c0) COLLATE NOCASE) ORDER BY ((((((((((vt0.c0)<>(t0.c0)))OR((vt0.c0 IN ()))))AND((- (vt1.c0)))))OR((- (vt1.c0)))))OR(((((vt0.c0)OR(t0.c0)))AND(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_object(vt0.c0, vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((((((((vt0.c0)<>(t0.c0)))OR((vt0.c0 IN ()))))AND((- (vt1.c0)))))OR((- (vt1.c0)))))OR(((((vt0.c0)OR(t0.c0)))AND(t0.c0)))) ASC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END IN ()) FULL OUTER JOIN vt1 ON CAST((- (t0.c0)) AS TEXT) WHERE ('-663547150');
SELECT SUM(count) FROM (SELECT (('-663547150') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END IN ()) FULL OUTER JOIN vt1 ON CAST((- (t0.c0)) AS TEXT));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END IN ()) FULL OUTER JOIN vt1 ON CAST((- (t0.c0)) AS TEXT) WHERE ('-663547150');
SELECT SUM(count) FROM (SELECT (('-663547150') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END IN ()) FULL OUTER JOIN vt1 ON CAST((- (t0.c0)) AS TEXT));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END IN ()) FULL OUTER JOIN vt1 ON CAST((- (t0.c0)) AS TEXT) WHERE ('-663547150');
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN ((LIKELY(DISTINCT t0.c0))) AND ((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) WHERE (CASE ((vt0.c0)<=('1533839843'))  WHEN '1796579932' THEN vt0.c0 COLLATE BINARY WHEN LIKELY(DISTINCT x'') THEN ((t0.c0)|(t0.c0)) WHEN NULL THEN (((vt0.c0))<=((t0.c0))) ELSE (NOT (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<=('1533839843'))  WHEN '1796579932' THEN vt0.c0 COLLATE BINARY WHEN LIKELY(DISTINCT x'') THEN ((t0.c0)|(t0.c0)) WHEN NULL THEN (((vt0.c0))<=((t0.c0))) ELSE (NOT (t0.c0)) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN ((LIKELY(DISTINCT t0.c0))) AND ((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN ((LIKELY(DISTINCT t0.c0))) AND ((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) WHERE (CASE ((vt0.c0)<=('1533839843'))  WHEN '1796579932' THEN vt0.c0 COLLATE BINARY WHEN LIKELY(DISTINCT x'') THEN ((t0.c0)|(t0.c0)) WHEN NULL THEN (((vt0.c0))<=((t0.c0))) ELSE (NOT (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<=('1533839843'))  WHEN '1796579932' THEN vt0.c0 COLLATE BINARY WHEN LIKELY(DISTINCT x'') THEN ((t0.c0)|(t0.c0)) WHEN NULL THEN (((vt0.c0))<=((t0.c0))) ELSE (NOT (t0.c0)) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN ((LIKELY(DISTINCT t0.c0))) AND ((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN ((LIKELY(DISTINCT t0.c0))) AND ((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) WHERE (CASE ((vt0.c0)<=('1533839843'))  WHEN '1796579932' THEN vt0.c0 COLLATE BINARY WHEN LIKELY(DISTINCT x'') THEN ((t0.c0)|(t0.c0)) WHEN NULL THEN (((vt0.c0))<=((t0.c0))) ELSE (NOT (t0.c0)) END);
SELECT * FROM vt1 WHERE (UNLIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) ORDER BY (~ (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOTNULL) ASC  NULLS FIRST, (vt1.c0 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOTNULL) ASC  NULLS FIRST, (vt1.c0 COLLATE RTRIM IN ()));
SELECT * FROM vt1 WHERE (UNLIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) ORDER BY (~ (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOTNULL) ASC  NULLS FIRST, (vt1.c0 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOTNULL) ASC  NULLS FIRST, (vt1.c0 COLLATE RTRIM IN ()));
SELECT * FROM vt1 WHERE (UNLIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) ORDER BY (~ (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOTNULL) ASC  NULLS FIRST, (vt1.c0 COLLATE RTRIM IN ());
SELECT * FROM vt0, t0 WHERE ('avuGsuO') ORDER BY ((((((t0.c0) NOTNULL))AND(CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)))OR(highlight(vt0.c0, t0.c0, vt0.c0, t0.c0))) DESC  NULLS LAST, ((t0.c0 COLLATE BINARY)>>(((t0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (('avuGsuO') IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((t0.c0) NOTNULL))AND(CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)))OR(highlight(vt0.c0, t0.c0, vt0.c0, t0.c0))) DESC  NULLS LAST, ((t0.c0 COLLATE BINARY)>>(((t0.c0) NOT NULL))) ASC);
SELECT * FROM vt0, t0 WHERE ('avuGsuO') ORDER BY ((((((t0.c0) NOTNULL))AND(CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)))OR(highlight(vt0.c0, t0.c0, vt0.c0, t0.c0))) DESC  NULLS LAST, ((t0.c0 COLLATE BINARY)>>(((t0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (('avuGsuO') IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((t0.c0) NOTNULL))AND(CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)))OR(highlight(vt0.c0, t0.c0, vt0.c0, t0.c0))) DESC  NULLS LAST, ((t0.c0 COLLATE BINARY)>>(((t0.c0) NOT NULL))) ASC);
SELECT * FROM vt0, t0 WHERE ('avuGsuO') ORDER BY ((((((t0.c0) NOTNULL))AND(CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)))OR(highlight(vt0.c0, t0.c0, vt0.c0, t0.c0))) DESC  NULLS LAST, ((t0.c0 COLLATE BINARY)>>(((t0.c0) NOT NULL))) ASC;
SELECT ALL * FROM vt0, vt1 CROSS JOIN t0 ON CASE ((((((((vt0.c0)OR(vt1.c0)))AND('?|')))OR(t0.c0)))OR(vt0.c0))  WHEN ((((x'')AND(t0.c0)))AND(t0.c0)) THEN vt0.c0 COLLATE NOCASE END WHERE (json_object(t0.c0, vt0.c0, x'', t0.c0, t0.c0, vt1.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((json_object(t0.c0, vt0.c0, x'', t0.c0, t0.c0, vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON CASE ((((((((vt0.c0)OR(vt1.c0)))AND('?|')))OR(t0.c0)))OR(vt0.c0))  WHEN ((((x'')AND(t0.c0)))AND(t0.c0)) THEN vt0.c0 COLLATE NOCASE END);
SELECT ALL * FROM vt0, vt1 CROSS JOIN t0 ON CASE ((((((((vt0.c0)OR(vt1.c0)))AND('?|')))OR(t0.c0)))OR(vt0.c0))  WHEN ((((x'')AND(t0.c0)))AND(t0.c0)) THEN vt0.c0 COLLATE NOCASE END WHERE (json_object(t0.c0, vt0.c0, x'', t0.c0, t0.c0, vt1.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((json_object(t0.c0, vt0.c0, x'', t0.c0, t0.c0, vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON CASE ((((((((vt0.c0)OR(vt1.c0)))AND('?|')))OR(t0.c0)))OR(vt0.c0))  WHEN ((((x'')AND(t0.c0)))AND(t0.c0)) THEN vt0.c0 COLLATE NOCASE END);
SELECT ALL * FROM vt0, vt1 CROSS JOIN t0 ON CASE ((((((((vt0.c0)OR(vt1.c0)))AND('?|')))OR(t0.c0)))OR(vt0.c0))  WHEN ((((x'')AND(t0.c0)))AND(t0.c0)) THEN vt0.c0 COLLATE NOCASE END WHERE (json_object(t0.c0, vt0.c0, x'', t0.c0, t0.c0, vt1.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('0.0');
SELECT SUM(count) FROM (SELECT ALL (('0.0') IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('0.0');
SELECT SUM(count) FROM (SELECT ALL (('0.0') IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('0.0');
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM) ORDER BY CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) IS TRUE) ELSE NULL END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) IS TRUE) ELSE NULL END ASC);
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM) ORDER BY CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) IS TRUE) ELSE NULL END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) IS TRUE) ELSE NULL END ASC);
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM) ORDER BY CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) IS TRUE) ELSE NULL END ASC;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN t0.c0 ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN t0.c0 ELSE vt1.c0 END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN t0.c0 ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN t0.c0 ELSE vt1.c0 END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN t0.c0 ELSE vt1.c0 END);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt1.c0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY ((('-880495299'))<=((''))) DESC  NULLS FIRST, ((((((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, 345394036)) AND ((NULL, vt0.c0, vt0.c0)))))<((GLOB(vt0.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt1.c0 ORDER BY ((('-880495299'))<=((''))) DESC  NULLS FIRST, ((((((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, 345394036)) AND ((NULL, vt0.c0, vt0.c0)))))<((GLOB(vt0.c0, vt1.c0)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt1.c0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY ((('-880495299'))<=((''))) DESC  NULLS FIRST, ((((((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, 345394036)) AND ((NULL, vt0.c0, vt0.c0)))))<((GLOB(vt0.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt1.c0 ORDER BY ((('-880495299'))<=((''))) DESC  NULLS FIRST, ((((((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, 345394036)) AND ((NULL, vt0.c0, vt0.c0)))))<((GLOB(vt0.c0, vt1.c0)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt1.c0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY ((('-880495299'))<=((''))) DESC  NULLS FIRST, ((((((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, 345394036)) AND ((NULL, vt0.c0, vt0.c0)))))<((GLOB(vt0.c0, vt1.c0))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (((vt0.c0)LIKE(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((~ (vt0.c0)) IN ())) ORDER BY ((COALESCE(x'', vt0.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, t0.c0))<=((t0.c0, vt1.c0, vt0.c0)))) AND ('1612309651')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((COALESCE(x'', vt0.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, t0.c0))<=((t0.c0, vt1.c0, vt0.c0)))) AND ('1612309651')) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((~ (vt0.c0)) IN ())) ORDER BY ((COALESCE(x'', vt0.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, t0.c0))<=((t0.c0, vt1.c0, vt0.c0)))) AND ('1612309651')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((COALESCE(x'', vt0.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, t0.c0))<=((t0.c0, vt1.c0, vt0.c0)))) AND ('1612309651')) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((~ (vt0.c0)) IN ())) ORDER BY ((COALESCE(x'', vt0.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, t0.c0))<=((t0.c0, vt1.c0, vt0.c0)))) AND ('1612309651')) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY vt1.c0 DESC;
SELECT ALL * FROM t0, vt1, vt0 WHERE ((vt1.c0 IN ()) COLLATE BINARY) ORDER BY (((t0.c0, '-1817923255', vt0.c0)) BETWEEN ((((vt0.c0) ISNULL), ((t0.c0) NOT NULL), CAST(vt1.c0 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS NUMERIC), rtreenode(vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((t0.c0, '-1817923255', vt0.c0)) BETWEEN ((((vt0.c0) ISNULL), ((t0.c0) NOT NULL), CAST(vt1.c0 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS NUMERIC), rtreenode(vt1.c0, vt1.c0)))));
SELECT ALL * FROM t0, vt1, vt0 WHERE ((vt1.c0 IN ()) COLLATE BINARY) ORDER BY (((t0.c0, '-1817923255', vt0.c0)) BETWEEN ((((vt0.c0) ISNULL), ((t0.c0) NOT NULL), CAST(vt1.c0 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS NUMERIC), rtreenode(vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((t0.c0, '-1817923255', vt0.c0)) BETWEEN ((((vt0.c0) ISNULL), ((t0.c0) NOT NULL), CAST(vt1.c0 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS NUMERIC), rtreenode(vt1.c0, vt1.c0)))));
SELECT ALL * FROM t0, vt1, vt0 WHERE ((vt1.c0 IN ()) COLLATE BINARY) ORDER BY (((t0.c0, '-1817923255', vt0.c0)) BETWEEN ((((vt0.c0) ISNULL), ((t0.c0) NOT NULL), CAST(vt1.c0 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS NUMERIC), rtreenode(vt1.c0, vt1.c0))));
SELECT * FROM vt0, t0 WHERE (((((((((((((((0.43503668491975467)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(0.2972371303262461))) NOT BETWEEN (t0.c0) AND ((((t0.c0, -1.288385651E9, vt0.c0))==((t0.c0, t0.c0, NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((0.43503668491975467)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(0.2972371303262461))) NOT BETWEEN (t0.c0) AND ((((t0.c0, -1.288385651E9, vt0.c0))=((t0.c0, t0.c0, NULL)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((((((((((0.43503668491975467)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(0.2972371303262461))) NOT BETWEEN (t0.c0) AND ((((t0.c0, -1.288385651E9, vt0.c0))==((t0.c0, t0.c0, NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((0.43503668491975467)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(0.2972371303262461))) NOT BETWEEN (t0.c0) AND ((((t0.c0, -1.288385651E9, vt0.c0))=((t0.c0, t0.c0, NULL)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((((((((((0.43503668491975467)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(0.2972371303262461))) NOT BETWEEN (t0.c0) AND ((((t0.c0, -1.288385651E9, vt0.c0))==((t0.c0, t0.c0, NULL))))));
SELECT COUNT(*) FROM vt1, t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN '.ce.' THEN t0.c0 ELSE NULL END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN '.ce.' THEN t0.c0 ELSE NULL END IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN '.ce.' THEN t0.c0 ELSE NULL END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN '.ce.' THEN t0.c0 ELSE NULL END IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN '.ce.' THEN t0.c0 ELSE NULL END IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((-1.505035196E9)!=(((vt0.c0)>=(t0.c0))))) ORDER BY (((t0.c0 COLLATE NOCASE, (((vt0.c0))<=((t0.c0))), ((t0.c0)/(vt0.c0))))>((vt0.c0, t0.c0, (~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((-1.505035196E9)<>(((vt0.c0)>=(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0 COLLATE NOCASE, (((vt0.c0))<=((t0.c0))), ((t0.c0)/(vt0.c0))))>((vt0.c0, t0.c0, (~ (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((-1.505035196E9)!=(((vt0.c0)>=(t0.c0))))) ORDER BY (((t0.c0 COLLATE NOCASE, (((vt0.c0))<=((t0.c0))), ((t0.c0)/(vt0.c0))))>((vt0.c0, t0.c0, (~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((-1.505035196E9)<>(((vt0.c0)>=(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0 COLLATE NOCASE, (((vt0.c0))<=((t0.c0))), ((t0.c0)/(vt0.c0))))>((vt0.c0, t0.c0, (~ (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((-1.505035196E9)!=(((vt0.c0)>=(t0.c0))))) ORDER BY (((t0.c0 COLLATE NOCASE, (((vt0.c0))<=((t0.c0))), ((t0.c0)/(vt0.c0))))>((vt0.c0, t0.c0, (~ (vt0.c0)))));
SELECT ALL * FROM vt1, t0 WHERE (CASE x''  WHEN LIKE(vt1.c0, vt1.c0, 'c') THEN (((t0.c0))!=((vt1.c0))) ELSE CAST(vt1.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN LIKE(vt1.c0, vt1.c0, 'c') THEN (((t0.c0))<>((vt1.c0))) ELSE CAST(vt1.c0 AS BLOB) END) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CASE x''  WHEN LIKE(vt1.c0, vt1.c0, 'c') THEN (((t0.c0))!=((vt1.c0))) ELSE CAST(vt1.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN LIKE(vt1.c0, vt1.c0, 'c') THEN (((t0.c0))<>((vt1.c0))) ELSE CAST(vt1.c0 AS BLOB) END) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CASE x''  WHEN LIKE(vt1.c0, vt1.c0, 'c') THEN (((t0.c0))!=((vt1.c0))) ELSE CAST(vt1.c0 AS BLOB) END);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))+((vt0.c0 IN (0.9909425213706192, vt1.c0)))) WHERE (((vt1.c0 COLLATE NOCASE)IS(NULLIF(NULL, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)IS(NULLIF(NULL, vt1.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))+((vt0.c0 IN (0.9909425213706192, vt1.c0)))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))+((vt0.c0 IN (0.9909425213706192, vt1.c0)))) WHERE (((vt1.c0 COLLATE NOCASE)IS(NULLIF(NULL, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)IS(NULLIF(NULL, vt1.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))+((vt0.c0 IN (0.9909425213706192, vt1.c0)))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))+((vt0.c0 IN (0.9909425213706192, vt1.c0)))) WHERE (((vt1.c0 COLLATE NOCASE)IS(NULLIF(NULL, vt1.c0))));
SELECT * FROM vt1, t0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CAST(t0.c0 AS REAL), ((((x'')AND(t0.c0)))AND(t0.c0)), ((((t0.c0)OR(x'')))AND(vt1.c0)))) AND ((x'2c76', CAST(vt1.c0 AS BLOB), CAST(vt1.c0 AS NUMERIC))))) ORDER BY ABS(DISTINCT t0.c0) COLLATE RTRIM ASC  NULLS FIRST, (((vt1.c0)|(vt1.c0)) IN (((t0.c0) NOT NULL))), CAST(((((vt1.c0)AND(t0.c0)))OR(vt1.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CAST(t0.c0 AS REAL), ((((x'')AND(t0.c0)))AND(t0.c0)), ((((t0.c0)OR(x'')))AND(vt1.c0)))) AND ((x'2c76', CAST(vt1.c0 AS BLOB), CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ABS(DISTINCT t0.c0) COLLATE RTRIM ASC  NULLS FIRST, (((vt1.c0)|(vt1.c0)) IN (((t0.c0) NOT NULL))), CAST(((((vt1.c0)AND(t0.c0)))OR(vt1.c0)) AS BLOB) ASC);
SELECT * FROM vt1, t0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CAST(t0.c0 AS REAL), ((((x'')AND(t0.c0)))AND(t0.c0)), ((((t0.c0)OR(x'')))AND(vt1.c0)))) AND ((x'2c76', CAST(vt1.c0 AS BLOB), CAST(vt1.c0 AS NUMERIC))))) ORDER BY ABS(DISTINCT t0.c0) COLLATE RTRIM ASC  NULLS FIRST, (((vt1.c0)|(vt1.c0)) IN (((t0.c0) NOT NULL))), CAST(((((vt1.c0)AND(t0.c0)))OR(vt1.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CAST(t0.c0 AS REAL), ((((x'')AND(t0.c0)))AND(t0.c0)), ((((t0.c0)OR(x'')))AND(vt1.c0)))) AND ((x'2c76', CAST(vt1.c0 AS BLOB), CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ABS(DISTINCT t0.c0) COLLATE RTRIM ASC  NULLS FIRST, (((vt1.c0)|(vt1.c0)) IN (((t0.c0) NOT NULL))), CAST(((((vt1.c0)AND(t0.c0)))OR(vt1.c0)) AS BLOB) ASC);
SELECT * FROM vt1, t0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CAST(t0.c0 AS REAL), ((((x'')AND(t0.c0)))AND(t0.c0)), ((((t0.c0)OR(x'')))AND(vt1.c0)))) AND ((x'2c76', CAST(vt1.c0 AS BLOB), CAST(vt1.c0 AS NUMERIC))))) ORDER BY ABS(DISTINCT t0.c0) COLLATE RTRIM ASC  NULLS FIRST, (((vt1.c0)|(vt1.c0)) IN (((t0.c0) NOT NULL))), CAST(((((vt1.c0)AND(t0.c0)))OR(vt1.c0)) AS BLOB) ASC;
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((t0.c0) IS FALSE))+(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE))+(vt0.c0))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((t0.c0) IS FALSE))+(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE))+(vt0.c0))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((t0.c0) IS FALSE))+(vt0.c0)));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt0.c0 AS REAL) AS NUMERIC) INNER JOIN vt0 ON ((((((((CASE WHEN 0.3806411342155528 THEN vt1.c0 ELSE vt1.c0 END)AND(NULL COLLATE NOCASE)))AND(CAST(t0.c0 AS BLOB))))OR(((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))OR('F+Z哺<V*~G')))OR(vt1.c0)))))OR(vt0.c0 COLLATE RTRIM)) WHERE ((NOT (((t0.c0)*(vt1.c0))))) ORDER BY (~ ((((vt0.c0, 1534601156, t0.c0))<>((t0.c0, vt1.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0)*(vt1.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt0.c0 AS REAL) AS NUMERIC) INNER JOIN vt0 ON ((((((((CASE WHEN 0.3806411342155528 THEN vt1.c0 ELSE vt1.c0 END)AND(NULL COLLATE NOCASE)))AND(CAST(t0.c0 AS BLOB))))OR(((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))OR('F+Z哺<V*~G')))OR(vt1.c0)))))OR(vt0.c0 COLLATE RTRIM)) ORDER BY (~ ((((vt0.c0, 1534601156, t0.c0))!=((t0.c0, vt1.c0, vt0.c0))))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt0.c0 AS REAL) AS NUMERIC) INNER JOIN vt0 ON ((((((((CASE WHEN 0.3806411342155528 THEN vt1.c0 ELSE vt1.c0 END)AND(NULL COLLATE NOCASE)))AND(CAST(t0.c0 AS BLOB))))OR(((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))OR('F+Z哺<V*~G')))OR(vt1.c0)))))OR(vt0.c0 COLLATE RTRIM)) WHERE ((NOT (((t0.c0)*(vt1.c0))))) ORDER BY (~ ((((vt0.c0, 1534601156, t0.c0))<>((t0.c0, vt1.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0)*(vt1.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt0.c0 AS REAL) AS NUMERIC) INNER JOIN vt0 ON ((((((((CASE WHEN 0.3806411342155528 THEN vt1.c0 ELSE vt1.c0 END)AND(NULL COLLATE NOCASE)))AND(CAST(t0.c0 AS BLOB))))OR(((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))OR('F+Z哺<V*~G')))OR(vt1.c0)))))OR(vt0.c0 COLLATE RTRIM)) ORDER BY (~ ((((vt0.c0, 1534601156, t0.c0))!=((t0.c0, vt1.c0, vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)&(vt0.c0))) ORDER BY (NOT (((vt0.c0) IS FALSE))), (((+ (vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)&(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) IS FALSE))), (((+ (vt0.c0))) NOT NULL));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)&(vt0.c0))) ORDER BY (NOT (((vt0.c0) IS FALSE))), (((+ (vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)&(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) IS FALSE))), (((+ (vt0.c0))) NOT NULL));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)&(vt0.c0))) ORDER BY (NOT (((vt0.c0) IS FALSE))), (((+ (vt0.c0))) NOT NULL);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)OR(t0.c0)))OR(vt1.c0)))==(CAST(NULL AS INTEGER))) WHERE (CASE CAST(t0.c0 AS REAL)  WHEN CAST(t0.c0 AS REAL) THEN (vt1.c0 IN ()) ELSE ((vt1.c0)==(vt1.c0)) END) ORDER BY '408612997';
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c0 AS REAL)  WHEN CAST(t0.c0 AS REAL) THEN (vt1.c0 IN ()) ELSE ((vt1.c0)==(vt1.c0)) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)OR(t0.c0)))OR(vt1.c0)))=(CAST(NULL AS INTEGER))) ORDER BY '408612997');
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)OR(t0.c0)))OR(vt1.c0)))==(CAST(NULL AS INTEGER))) WHERE (CASE CAST(t0.c0 AS REAL)  WHEN CAST(t0.c0 AS REAL) THEN (vt1.c0 IN ()) ELSE ((vt1.c0)==(vt1.c0)) END) ORDER BY '408612997';
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c0 AS REAL)  WHEN CAST(t0.c0 AS REAL) THEN (vt1.c0 IN ()) ELSE ((vt1.c0)==(vt1.c0)) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)OR(t0.c0)))OR(vt1.c0)))=(CAST(NULL AS INTEGER))) ORDER BY '408612997');
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)OR(t0.c0)))OR(vt1.c0)))==(CAST(NULL AS INTEGER))) WHERE (CASE CAST(t0.c0 AS REAL)  WHEN CAST(t0.c0 AS REAL) THEN (vt1.c0 IN ()) ELSE ((vt1.c0)==(vt1.c0)) END) ORDER BY '408612997';
SELECT COUNT(*) FROM vt0, t0 WHERE (((UNLIKELY(vt0.c0)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (vt0.c0))) ORDER BY ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE 0.800330616332234 END) IS FALSE), UPPER(CAST(t0.c0 AS BLOB)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt0.c0)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE 0.800330616332234 END) IS FALSE), UPPER(CAST(t0.c0 AS BLOB)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((UNLIKELY(vt0.c0)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (vt0.c0))) ORDER BY ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE 0.800330616332234 END) IS FALSE), UPPER(CAST(t0.c0 AS BLOB)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt0.c0)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE 0.800330616332234 END) IS FALSE), UPPER(CAST(t0.c0 AS BLOB)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((UNLIKELY(vt0.c0)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (vt0.c0))) ORDER BY ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE 0.800330616332234 END) IS FALSE), UPPER(CAST(t0.c0 AS BLOB)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (json_valid(((vt0.c0)%(vt0.c0)))) ORDER BY ((((((vt0.c0) IS FALSE))OR(vt0.c0 COLLATE NOCASE)))AND((+ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) IS FALSE))OR(vt0.c0 COLLATE NOCASE)))AND((+ (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (json_valid(((vt0.c0)%(vt0.c0)))) ORDER BY ((((((vt0.c0) IS FALSE))OR(vt0.c0 COLLATE NOCASE)))AND((+ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) IS FALSE))OR(vt0.c0 COLLATE NOCASE)))AND((+ (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (json_valid(((vt0.c0)%(vt0.c0)))) ORDER BY ((((((vt0.c0) IS FALSE))OR(vt0.c0 COLLATE NOCASE)))AND((+ (vt0.c0))))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)OR(vt1.c0)))OR(NULL)) COLLATE NOCASE) ORDER BY CAST(LOWER(vt0.c0) AS TEXT) ASC, NULLIF(DISTINCT (vt0.c0 IN ()), ((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))) ASC  NULLS LAST, (NOT (CASE WHEN vt0.c0 THEN vt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt1.c0)))OR(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(LOWER(vt0.c0) AS TEXT) ASC, NULLIF(DISTINCT (vt0.c0 IN ()), ((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))) ASC  NULLS LAST, (NOT (CASE WHEN vt0.c0 THEN vt1.c0 END)) ASC);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)OR(vt1.c0)))OR(NULL)) COLLATE NOCASE) ORDER BY CAST(LOWER(vt0.c0) AS TEXT) ASC, NULLIF(DISTINCT (vt0.c0 IN ()), ((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))) ASC  NULLS LAST, (NOT (CASE WHEN vt0.c0 THEN vt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt1.c0)))OR(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(LOWER(vt0.c0) AS TEXT) ASC, NULLIF(DISTINCT (vt0.c0 IN ()), ((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))) ASC  NULLS LAST, (NOT (CASE WHEN vt0.c0 THEN vt1.c0 END)) ASC);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)OR(vt1.c0)))OR(NULL)) COLLATE NOCASE) ORDER BY CAST(LOWER(vt0.c0) AS TEXT) ASC, NULLIF(DISTINCT (vt0.c0 IN ()), ((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))) ASC  NULLS LAST, (NOT (CASE WHEN vt0.c0 THEN vt1.c0 END)) ASC;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) AS NUMERIC));
SELECT * FROM t0, vt0 WHERE (((0X3f7bf7c0)>('Udhus(*QP'))) ORDER BY ((((0.8473282864092274)OR((~ (vt0.c0)))))OR(t0.c0)), ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((0x3f7bf7c0)>('Udhus(*QP'))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((0.8473282864092274)OR((~ (vt0.c0)))))OR(t0.c0)), ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT NULL));
SELECT * FROM t0, vt0 WHERE (((0X3f7bf7c0)>('Udhus(*QP'))) ORDER BY ((((0.8473282864092274)OR((~ (vt0.c0)))))OR(t0.c0)), ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((0x3f7bf7c0)>('Udhus(*QP'))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((0.8473282864092274)OR((~ (vt0.c0)))))OR(t0.c0)), ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT NULL));
SELECT * FROM t0, vt0 WHERE (((0X3f7bf7c0)>('Udhus(*QP'))) ORDER BY ((((0.8473282864092274)OR((~ (vt0.c0)))))OR(t0.c0)), ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT NULL);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (((- (t0.c0)))+(x'97df')) WHERE (CAST(t0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS BLOB)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (((- (t0.c0)))+(x'97df')));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (((- (t0.c0)))+(x'97df')) WHERE (CAST(t0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS BLOB)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (((- (t0.c0)))+(x'97df')));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (((- (t0.c0)))+(x'97df')) WHERE (CAST(t0.c0 AS BLOB));
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT CAST(x'' AS BLOB))) ORDER BY CAST(('' IN (vt0.c0, vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CAST(x'' AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY CAST(('' IN (vt0.c0, vt0.c0)) AS TEXT));
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT CAST(x'' AS BLOB))) ORDER BY CAST(('' IN (vt0.c0, vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CAST(x'' AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY CAST(('' IN (vt0.c0, vt0.c0)) AS TEXT));
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT CAST(x'' AS BLOB))) ORDER BY CAST(('' IN (vt0.c0, vt0.c0)) AS TEXT);
SELECT * FROM vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (x'');
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CASE WHEN (((vt0.c0))>((t0.c0))) THEN ((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) END FULL OUTER JOIN vt1 ON (((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))))AND((((vt1.c0))<=((''))))))OR(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN NULL END)) WHERE (((((((vt0.c0)!=(x'')))AND(((t0.c0)GLOB(t0.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<>(x'')))AND(((t0.c0)GLOB(t0.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE WHEN (((vt0.c0))>((t0.c0))) THEN ((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) END FULL OUTER JOIN vt1 ON (((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))))AND((((vt1.c0))<=((''))))))OR(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN NULL END)));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CASE WHEN (((vt0.c0))>((t0.c0))) THEN ((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) END FULL OUTER JOIN vt1 ON (((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))))AND((((vt1.c0))<=((''))))))OR(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN NULL END)) WHERE (((((((vt0.c0)!=(x'')))AND(((t0.c0)GLOB(t0.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<>(x'')))AND(((t0.c0)GLOB(t0.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE WHEN (((vt0.c0))>((t0.c0))) THEN ((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) END FULL OUTER JOIN vt1 ON (((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))))AND((((vt1.c0))<=((''))))))OR(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN NULL END)));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CASE WHEN vt1.c0 THEN t0.c0 END)/(CASE WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN x'4cfc' ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN t0.c0 END)/(CASE WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN x'4cfc' ELSE t0.c0 END))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CASE WHEN vt1.c0 THEN t0.c0 END)/(CASE WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN x'4cfc' ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN t0.c0 END)/(CASE WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN x'4cfc' ELSE t0.c0 END))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CASE WHEN vt1.c0 THEN t0.c0 END)/(CASE WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN x'4cfc' ELSE t0.c0 END)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) ORDER BY t0.c0 DESC  NULLS LAST, CASE ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS BLOB) END DESC  NULLS FIRST, t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c0 DESC  NULLS LAST, CASE ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS BLOB) END DESC  NULLS FIRST, t0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) ORDER BY t0.c0 DESC  NULLS LAST, CASE ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS BLOB) END DESC  NULLS FIRST, t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c0 DESC  NULLS LAST, CASE ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS BLOB) END DESC  NULLS FIRST, t0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) ORDER BY t0.c0 DESC  NULLS LAST, CASE ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS BLOB) END DESC  NULLS FIRST, t0.c0  NULLS FIRST;
SELECT ALL * FROM t0, vt1, vt0 WHERE ((0.5753118238993943 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.5753118238993943 IN ())) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((0.5753118238993943 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.5753118238993943 IN ())) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((0.5753118238993943 IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((x'', (- (vt1.c0)), ((vt1.c0)>(vt1.c0))))>((LIKELY(vt0.c0), ABS(t0.c0), ((vt1.c0)AND(t0.c0)))))) ORDER BY '㓗#';
SELECT SUM(count) FROM (SELECT ALL (((((x'', (- (vt1.c0)), ((vt1.c0)>(vt1.c0))))>((LIKELY(vt0.c0), ABS(t0.c0), ((vt1.c0)AND(t0.c0)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY '㓗#');
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((x'', (- (vt1.c0)), ((vt1.c0)>(vt1.c0))))>((LIKELY(vt0.c0), ABS(t0.c0), ((vt1.c0)AND(t0.c0)))))) ORDER BY '㓗#';
SELECT SUM(count) FROM (SELECT ALL (((((x'', (- (vt1.c0)), ((vt1.c0)>(vt1.c0))))>((LIKELY(vt0.c0), ABS(t0.c0), ((vt1.c0)AND(t0.c0)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY '㓗#');
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((x'', (- (vt1.c0)), ((vt1.c0)>(vt1.c0))))>((LIKELY(vt0.c0), ABS(t0.c0), ((vt1.c0)AND(t0.c0)))))) ORDER BY '㓗#';
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((NOT (0.5933174775430591)))*(vt1.c0))) ORDER BY 0.7528350562995695 DESC  NULLS LAST, (~ (CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (0.5933174775430591)))*(vt1.c0))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY 0.7528350562995695 DESC  NULLS LAST, (~ (CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 END)) DESC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((NOT (0.5933174775430591)))*(vt1.c0))) ORDER BY 0.7528350562995695 DESC  NULLS LAST, (~ (CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (0.5933174775430591)))*(vt1.c0))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY 0.7528350562995695 DESC  NULLS LAST, (~ (CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 END)) DESC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((NOT (0.5933174775430591)))*(vt1.c0))) ORDER BY 0.7528350562995695 DESC  NULLS LAST, (~ (CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 END)) DESC;
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CASE '-8'  WHEN ((vt0.c0) IS FALSE) THEN CAST(vt0.c0 AS REAL) END WHERE (HEX(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE '-8'  WHEN ((vt0.c0) IS FALSE) THEN CAST(vt0.c0 AS REAL) END);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CASE '-8'  WHEN ((vt0.c0) IS FALSE) THEN CAST(vt0.c0 AS REAL) END WHERE (HEX(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE '-8'  WHEN ((vt0.c0) IS FALSE) THEN CAST(vt0.c0 AS REAL) END);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CASE '-8'  WHEN ((vt0.c0) IS FALSE) THEN CAST(vt0.c0 AS REAL) END WHERE (HEX(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))));
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) ISNULL)) ORDER BY (((t0.c0)) BETWEEN (((NOT (0Xffffffffc72a4b34)))) AND ((((((t0.c0)OR(t0.c0)))AND(vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c0)) BETWEEN (((NOT (0Xffffffffc72a4b34)))) AND ((((((t0.c0)OR(t0.c0)))AND(vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) ISNULL)) ORDER BY (((t0.c0)) BETWEEN (((NOT (0Xffffffffc72a4b34)))) AND ((((((t0.c0)OR(t0.c0)))AND(vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c0)) BETWEEN (((NOT (0Xffffffffc72a4b34)))) AND ((((((t0.c0)OR(t0.c0)))AND(vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) ISNULL)) ORDER BY (((t0.c0)) BETWEEN (((NOT (0Xffffffffc72a4b34)))) AND ((((((t0.c0)OR(t0.c0)))AND(vt0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND ((vt1.c0))));
SELECT * FROM vt0, vt1 WHERE (UPPER(DISTINCT ((vt0.c0)=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt0.c0)=(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (UPPER(DISTINCT ((vt0.c0)=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt0.c0)=(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (UPPER(DISTINCT ((vt0.c0)=(vt1.c0))));
SELECT ALL * FROM t0 WHERE (((t0.c0)LIKE(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)LIKE(NULL))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0)LIKE(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)LIKE(NULL))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0)LIKE(NULL)));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 THEN 0.9805615489836473 END COLLATE NOCASE) ORDER BY ((LOWER(DISTINCT t0.c0)) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 THEN 0.9805615489836473 END COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((LOWER(DISTINCT t0.c0)) IS FALSE) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 THEN 0.9805615489836473 END COLLATE NOCASE) ORDER BY ((LOWER(DISTINCT t0.c0)) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 THEN 0.9805615489836473 END COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((LOWER(DISTINCT t0.c0)) IS FALSE) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 THEN 0.9805615489836473 END COLLATE NOCASE) ORDER BY ((LOWER(DISTINCT t0.c0)) IS FALSE) DESC  NULLS LAST;
SELECT * FROM t0, vt0, vt1 WHERE (ABS(CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffff96602c3c ELSE vt1.c0 END)) ORDER BY x'' ASC, (+ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffff96602c3c ELSE vt1.c0 END)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY x'' ASC, (+ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) ASC);
SELECT * FROM t0, vt0, vt1 WHERE (ABS(CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffff96602c3c ELSE vt1.c0 END)) ORDER BY x'' ASC, (+ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffff96602c3c ELSE vt1.c0 END)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY x'' ASC, (+ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) ASC);
SELECT * FROM t0, vt0, vt1 WHERE (ABS(CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffff96602c3c ELSE vt1.c0 END)) ORDER BY x'' ASC, (+ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) ASC;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((t0.c0 COLLATE RTRIM) BETWEEN ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('-1788188698', t0.c0, t0.c0)) AND ((NULL, vt1.c0, 0.23561268809523261)))) AND (CAST(t0.c0 AS TEXT)))) ORDER BY (((((((t0.c0))<((t0.c0))))AND('-541408765')))AND(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))), UNLIKELY(DISTINCT (t0.c0 IN ())), CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) ISNULL) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM) BETWEEN ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('-1788188698', t0.c0, t0.c0)) AND ((NULL, vt1.c0, 0.23561268809523261)))) AND (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((((t0.c0))<((t0.c0))))AND('-541408765')))AND(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))), UNLIKELY(DISTINCT (t0.c0 IN ())), CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) ISNULL) END ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((t0.c0 COLLATE RTRIM) BETWEEN ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('-1788188698', t0.c0, t0.c0)) AND ((NULL, vt1.c0, 0.23561268809523261)))) AND (CAST(t0.c0 AS TEXT)))) ORDER BY (((((((t0.c0))<((t0.c0))))AND('-541408765')))AND(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))), UNLIKELY(DISTINCT (t0.c0 IN ())), CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) ISNULL) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM) BETWEEN ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('-1788188698', t0.c0, t0.c0)) AND ((NULL, vt1.c0, 0.23561268809523261)))) AND (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((((t0.c0))<((t0.c0))))AND('-541408765')))AND(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))), UNLIKELY(DISTINCT (t0.c0 IN ())), CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) ISNULL) END ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((t0.c0 COLLATE RTRIM) BETWEEN ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('-1788188698', t0.c0, t0.c0)) AND ((NULL, vt1.c0, 0.23561268809523261)))) AND (CAST(t0.c0 AS TEXT)))) ORDER BY (((((((t0.c0))<((t0.c0))))AND('-541408765')))AND(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))), UNLIKELY(DISTINCT (t0.c0 IN ())), CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) ISNULL) END ASC;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (+ (('+똿' IN ()))) WHERE (TRIM(DISTINCT vt1.c0 COLLATE NOCASE, (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt1.c0 COLLATE NOCASE, (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (+ (('+똿' IN ()))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (+ (('+똿' IN ()))) WHERE (TRIM(DISTINCT vt1.c0 COLLATE NOCASE, (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt1.c0 COLLATE NOCASE, (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (+ (('+똿' IN ()))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (+ (('+똿' IN ()))) WHERE (TRIM(DISTINCT vt1.c0 COLLATE NOCASE, (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))));
SELECT * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)IS NOT('}'))) ORDER BY vt1.c0 ASC  NULLS LAST, (((((x''))>((vt1.c0))))>=('931727221'));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)IS NOT('}'))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC  NULLS LAST, (((((x''))>((vt1.c0))))>=('931727221')));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)IS NOT('}'))) ORDER BY vt1.c0 ASC  NULLS LAST, (((((x''))>((vt1.c0))))>=('931727221'));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)IS NOT('}'))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC  NULLS LAST, (((((x''))>((vt1.c0))))>=('931727221')));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)IS NOT('}'))) ORDER BY vt1.c0 ASC  NULLS LAST, (((((x''))>((vt1.c0))))>=('931727221'));
SELECT * FROM vt1, t0, vt0 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (('-1788188698') IS TRUE) COLLATE NOCASE FULL OUTER JOIN vt1 ON CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) THEN ((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE vt0.c0 COLLATE BINARY END WHERE (CASE ABS(DISTINCT vt0.c0)  WHEN vt1.c0 THEN ((vt0.c0)IS(vt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN ((vt1.c0)>(vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (t0.c0 IN ()) ELSE (('0.0')<=(vt1.c0)) END) ORDER BY (((((t0.c0, t0.c0, vt1.c0)) BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, t0.c0, vt1.c0))))<((((vt0.c0))<=((t0.c0))))), (((t0.c0)) BETWEEN ((x'' COLLATE RTRIM)) AND ((((vt0.c0)<=(vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(DISTINCT vt0.c0)  WHEN vt1.c0 THEN ((vt0.c0)IS(vt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN ((vt1.c0)>(vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (t0.c0 IN ()) ELSE (('0.0')<=(vt1.c0)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (('-1788188698') IS TRUE) COLLATE NOCASE FULL OUTER JOIN vt1 ON CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) THEN ((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE vt0.c0 COLLATE BINARY END ORDER BY (((((t0.c0, t0.c0, vt1.c0)) BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, t0.c0, vt1.c0))))<((((vt0.c0))<=((t0.c0))))), (((t0.c0)) BETWEEN ((x'' COLLATE RTRIM)) AND ((((vt0.c0)<=(vt1.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (('-1788188698') IS TRUE) COLLATE NOCASE FULL OUTER JOIN vt1 ON CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) THEN ((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE vt0.c0 COLLATE BINARY END WHERE (CASE ABS(DISTINCT vt0.c0)  WHEN vt1.c0 THEN ((vt0.c0)IS(vt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN ((vt1.c0)>(vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (t0.c0 IN ()) ELSE (('0.0')<=(vt1.c0)) END) ORDER BY (((((t0.c0, t0.c0, vt1.c0)) BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, t0.c0, vt1.c0))))<((((vt0.c0))<=((t0.c0))))), (((t0.c0)) BETWEEN ((x'' COLLATE RTRIM)) AND ((((vt0.c0)<=(vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(DISTINCT vt0.c0)  WHEN vt1.c0 THEN ((vt0.c0)IS(vt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN ((vt1.c0)>(vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (t0.c0 IN ()) ELSE (('0.0')<=(vt1.c0)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (('-1788188698') IS TRUE) COLLATE NOCASE FULL OUTER JOIN vt1 ON CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) THEN ((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE vt0.c0 COLLATE BINARY END ORDER BY (((((t0.c0, t0.c0, vt1.c0)) BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, t0.c0, vt1.c0))))<((((vt0.c0))<=((t0.c0))))), (((t0.c0)) BETWEEN ((x'' COLLATE RTRIM)) AND ((((vt0.c0)<=(vt1.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (('-1788188698') IS TRUE) COLLATE NOCASE FULL OUTER JOIN vt1 ON CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) THEN ((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE vt0.c0 COLLATE BINARY END WHERE (CASE ABS(DISTINCT vt0.c0)  WHEN vt1.c0 THEN ((vt0.c0)IS(vt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN ((vt1.c0)>(vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (t0.c0 IN ()) ELSE (('0.0')<=(vt1.c0)) END) ORDER BY (((((t0.c0, t0.c0, vt1.c0)) BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, t0.c0, vt1.c0))))<((((vt0.c0))<=((t0.c0))))), (((t0.c0)) BETWEEN ((x'' COLLATE RTRIM)) AND ((((vt0.c0)<=(vt1.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE 0x14a7b0d0 END COLLATE NOCASE) ORDER BY ((vt1.c0 COLLATE NOCASE)=(((-1483922092) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE 0x14a7b0d0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)=(((-1483922092) IS FALSE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE 0x14a7b0d0 END COLLATE NOCASE) ORDER BY ((vt1.c0 COLLATE NOCASE)=(((-1483922092) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE 0x14a7b0d0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)=(((-1483922092) IS FALSE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE 0x14a7b0d0 END COLLATE NOCASE) ORDER BY ((vt1.c0 COLLATE NOCASE)=(((-1483922092) IS FALSE))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)OR(t0.c0))) BETWEEN (t0.c0 COLLATE NOCASE) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c0))) BETWEEN (t0.c0 COLLATE NOCASE) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)OR(t0.c0))) BETWEEN (t0.c0 COLLATE NOCASE) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c0))) BETWEEN (t0.c0 COLLATE NOCASE) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)OR(t0.c0))) BETWEEN (t0.c0 COLLATE NOCASE) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT * FROM t0, vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))*((vt1.c0 IN ())))) ORDER BY (((((vt1.c0, t0.c0, t0.c0))!=((vt0.c0, t0.c0, t0.c0))))>(CAST(vt0.c0 AS TEXT)))  NULLS LAST, '0.588196820513822' DESC, CASE x'07cf2076'  WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))*((vt1.c0 IN ())))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((((vt1.c0, t0.c0, t0.c0))!=((vt0.c0, t0.c0, t0.c0))))>(CAST(vt0.c0 AS TEXT)))  NULLS LAST, '0.588196820513822' DESC, CASE x'07cf2076'  WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))*((vt1.c0 IN ())))) ORDER BY (((((vt1.c0, t0.c0, t0.c0))!=((vt0.c0, t0.c0, t0.c0))))>(CAST(vt0.c0 AS TEXT)))  NULLS LAST, '0.588196820513822' DESC, CASE x'07cf2076'  WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))*((vt1.c0 IN ())))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((((vt1.c0, t0.c0, t0.c0))!=((vt0.c0, t0.c0, t0.c0))))>(CAST(vt0.c0 AS TEXT)))  NULLS LAST, '0.588196820513822' DESC, CASE x'07cf2076'  WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))*((vt1.c0 IN ())))) ORDER BY (((((vt1.c0, t0.c0, t0.c0))!=((vt0.c0, t0.c0, t0.c0))))>(CAST(vt0.c0 AS TEXT)))  NULLS LAST, '0.588196820513822' DESC, CASE x'07cf2076'  WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()));
SELECT ALL * FROM t0 WHERE (((((t0.c0)&(t0.c0)))|(((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)&(t0.c0)))|(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)&(t0.c0)))|(((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)&(t0.c0)))|(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)&(t0.c0)))|(((t0.c0) IS TRUE))));
SELECT ALL * FROM vt1, vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '0.17262437149830312' THEN vt0.c0 ELSE vt1.c0 END IN ())) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 ELSE vt1.c0 END ASC, NULLIF(((vt1.c0)%(vt0.c0)), vt0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '0.17262437149830312' THEN vt0.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 ELSE vt1.c0 END ASC, NULLIF(((vt1.c0)%(vt0.c0)), vt0.c0)  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '0.17262437149830312' THEN vt0.c0 ELSE vt1.c0 END IN ())) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 ELSE vt1.c0 END ASC, NULLIF(((vt1.c0)%(vt0.c0)), vt0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '0.17262437149830312' THEN vt0.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 ELSE vt1.c0 END ASC, NULLIF(((vt1.c0)%(vt0.c0)), vt0.c0)  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '0.17262437149830312' THEN vt0.c0 ELSE vt1.c0 END IN ())) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 ELSE vt1.c0 END ASC, NULLIF(((vt1.c0)%(vt0.c0)), vt0.c0)  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0) NOT BETWEEN ('-880495299') AND (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0) NOT BETWEEN ('-880495299') AND (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0) NOT BETWEEN ('-880495299') AND (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0) NOT BETWEEN ('-880495299') AND (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0) NOT BETWEEN ('-880495299') AND (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY x'';
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((MIN(vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AND ((CAST(vt1.c0 AS REAL))))) ORDER BY CAST((- (vt1.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((MIN(vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AND ((CAST(vt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1 ORDER BY CAST((- (vt1.c0)) AS BLOB) DESC);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((MIN(vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AND ((CAST(vt1.c0 AS REAL))))) ORDER BY CAST((- (vt1.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((MIN(vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AND ((CAST(vt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1 ORDER BY CAST((- (vt1.c0)) AS BLOB) DESC);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((MIN(vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AND ((CAST(vt1.c0 AS REAL))))) ORDER BY CAST((- (vt1.c0)) AS BLOB) DESC;
SELECT * FROM vt1 WHERE ((+ (((vt1.c0) BETWEEN ('268302664') AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) BETWEEN ('268302664') AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (((vt1.c0) BETWEEN ('268302664') AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) BETWEEN ('268302664') AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (((vt1.c0) BETWEEN ('268302664') AND (vt1.c0)))));
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN ()))<=((NOT ('[]'))))) ORDER BY ((((vt0.c0)>=(vt0.c0))) ISNULL)  NULLS LAST, (NULL IN ()) ASC  NULLS LAST, x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<=((NOT ('[]'))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)>=(vt0.c0))) ISNULL)  NULLS LAST, (NULL IN ()) ASC  NULLS LAST, x''  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN ()))<=((NOT ('[]'))))) ORDER BY ((((vt0.c0)>=(vt0.c0))) ISNULL)  NULLS LAST, (NULL IN ()) ASC  NULLS LAST, x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<=((NOT ('[]'))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)>=(vt0.c0))) ISNULL)  NULLS LAST, (NULL IN ()) ASC  NULLS LAST, x''  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN ()))<=((NOT ('[]'))))) ORDER BY ((((vt0.c0)>=(vt0.c0))) ISNULL)  NULLS LAST, (NULL IN ()) ASC  NULLS LAST, x''  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS REAL)) ORDER BY ((((vt1.c0) IS TRUE))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS TRUE))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS REAL)) ORDER BY ((((vt1.c0) IS TRUE))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS TRUE))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS REAL)) ORDER BY ((((vt1.c0) IS TRUE))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE (((((((((0.06850754802566583)OR(t0.c0)))OR(t0.c0)))OR((+ (vt1.c0)))))AND(((t0.c0)*(t0.c0))))) ORDER BY CASE PRINTF(vt1.c0)  WHEN (vt1.c0 IN ()) THEN CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE ABS(DISTINCT '-712107971') END ASC  NULLS FIRST, ((0X3a009d2b) NOT BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.06850754802566583)OR(t0.c0)))OR(t0.c0)))OR((+ (vt1.c0)))))AND(((t0.c0)*(t0.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY CASE PRINTF(vt1.c0)  WHEN (vt1.c0 IN ()) THEN CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE ABS(DISTINCT '-712107971') END ASC  NULLS FIRST, ((0X3a009d2b) NOT BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE (((((((((0.06850754802566583)OR(t0.c0)))OR(t0.c0)))OR((+ (vt1.c0)))))AND(((t0.c0)*(t0.c0))))) ORDER BY CASE PRINTF(vt1.c0)  WHEN (vt1.c0 IN ()) THEN CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE ABS(DISTINCT '-712107971') END ASC  NULLS FIRST, ((0X3a009d2b) NOT BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.06850754802566583)OR(t0.c0)))OR(t0.c0)))OR((+ (vt1.c0)))))AND(((t0.c0)*(t0.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY CASE PRINTF(vt1.c0)  WHEN (vt1.c0 IN ()) THEN CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE ABS(DISTINCT '-712107971') END ASC  NULLS FIRST, ((0X3a009d2b) NOT BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE (((((((((0.06850754802566583)OR(t0.c0)))OR(t0.c0)))OR((+ (vt1.c0)))))AND(((t0.c0)*(t0.c0))))) ORDER BY CASE PRINTF(vt1.c0)  WHEN (vt1.c0 IN ()) THEN CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE ABS(DISTINCT '-712107971') END ASC  NULLS FIRST, ((0X3a009d2b) NOT BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (SUBSTR(CHAR(vt0.c0), ((vt0.c0)<(vt0.c0)))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SUBSTR(CHAR(vt0.c0), ((vt0.c0)<(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (SUBSTR(CHAR(vt0.c0), ((vt0.c0)<(vt0.c0)))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SUBSTR(CHAR(vt0.c0), ((vt0.c0)<(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (SUBSTR(CHAR(vt0.c0), ((vt0.c0)<(vt0.c0)))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) ASC  NULLS LAST;
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON ((vt0.c0 COLLATE BINARY) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (t0.c0 COLLATE BINARY)) FULL OUTER JOIN vt0 ON ((x'' COLLATE BINARY)<<(t0.c0 COLLATE BINARY)) WHERE ((((vt0.c0, t0.c0, t0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), ((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)), '400405073')) AND (((t0.c0 IN ()), ((vt0.c0)*(0X4fef3fe7)), ('' IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, t0.c0, t0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), ((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)), '400405073')) AND (((t0.c0 IN ()), ((vt0.c0)*(0X4fef3fe7)), ('' IN ()))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((vt0.c0 COLLATE BINARY) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (t0.c0 COLLATE BINARY)) FULL OUTER JOIN vt0 ON ((x'' COLLATE BINARY)<<(t0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON ((vt0.c0 COLLATE BINARY) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (t0.c0 COLLATE BINARY)) FULL OUTER JOIN vt0 ON ((x'' COLLATE BINARY)<<(t0.c0 COLLATE BINARY)) WHERE ((((vt0.c0, t0.c0, t0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), ((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)), '400405073')) AND (((t0.c0 IN ()), ((vt0.c0)*(0X4fef3fe7)), ('' IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, t0.c0, t0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), ((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)), '400405073')) AND (((t0.c0 IN ()), ((vt0.c0)*(0X4fef3fe7)), ('' IN ()))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((vt0.c0 COLLATE BINARY) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (t0.c0 COLLATE BINARY)) FULL OUTER JOIN vt0 ON ((x'' COLLATE BINARY)<<(t0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON CASE vt0.c0 COLLATE RTRIM  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN (NOT (vt0.c0)) END WHERE (((SUBSTR(vt1.c0, x'')) NOT NULL)) ORDER BY ((((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)AND((+ (vt1.c0)))))AND(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(vt1.c0, x'')) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE vt0.c0 COLLATE RTRIM  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN (NOT (vt0.c0)) END ORDER BY ((((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)AND((+ (vt1.c0)))))AND(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))) ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON CASE vt0.c0 COLLATE RTRIM  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN (NOT (vt0.c0)) END WHERE (((SUBSTR(vt1.c0, x'')) NOT NULL)) ORDER BY ((((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)AND((+ (vt1.c0)))))AND(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(vt1.c0, x'')) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE vt0.c0 COLLATE RTRIM  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN (NOT (vt0.c0)) END ORDER BY ((((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)AND((+ (vt1.c0)))))AND(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))) ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON CASE vt0.c0 COLLATE RTRIM  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN (NOT (vt0.c0)) END WHERE (((SUBSTR(vt1.c0, x'')) NOT NULL)) ORDER BY ((((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)AND((+ (vt1.c0)))))AND(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))) ASC;
SELECT * FROM t0 WHERE (((((t0.c0) NOTNULL)) BETWEEN ((t0.c0 IN ())) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (x''))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL)) BETWEEN ((t0.c0 IN ())) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (x''))))) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c0) NOTNULL)) BETWEEN ((t0.c0 IN ())) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (x''))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL)) BETWEEN ((t0.c0 IN ())) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (x''))))) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c0) NOTNULL)) BETWEEN ((t0.c0 IN ())) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (x''))))) ORDER BY NULL  NULLS LAST;
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN (t0.c0)) AS REAL) WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN (t0.c0)) AS REAL));
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN (t0.c0)) AS REAL) WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN (t0.c0)) AS REAL));
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON CAST((t0.c0 IN (t0.c0)) AS REAL) WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)) ORDER BY CAST(((vt1.c0)||(vt1.c0)) AS BLOB) DESC  NULLS FIRST, (((IFNULL(vt1.c0, vt1.c0)))<>((vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)||(vt1.c0)) AS BLOB) DESC  NULLS FIRST, (((IFNULL(vt1.c0, vt1.c0)))!=((vt1.c0))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)) ORDER BY CAST(((vt1.c0)||(vt1.c0)) AS BLOB) DESC  NULLS FIRST, (((IFNULL(vt1.c0, vt1.c0)))<>((vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)||(vt1.c0)) AS BLOB) DESC  NULLS FIRST, (((IFNULL(vt1.c0, vt1.c0)))!=((vt1.c0))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)) ORDER BY CAST(((vt1.c0)||(vt1.c0)) AS BLOB) DESC  NULLS FIRST, (((IFNULL(vt1.c0, vt1.c0)))<>((vt1.c0))) DESC;
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (vt0.c0) AND (((x'4230') BETWEEN (vt1.c0) AND ('ѻ껮	WM')))) INNER JOIN t0 ON ((((((((((NULL) NOT NULL))OR(t0.c0)))AND(((t0.c0)>=(vt1.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)))AND(((((((((((((vt1.c0)AND(NULL)))OR(NULL)))AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))) WHERE (CAST(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (vt0.c0) AND (((x'4230') BETWEEN (vt1.c0) AND ('ѻ껮	WM')))) INNER JOIN t0 ON ((((((((((NULL) NOT NULL))OR(t0.c0)))AND(((t0.c0)>=(vt1.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)))AND(((((((((((((vt1.c0)AND(NULL)))OR(NULL)))AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (vt0.c0) AND (((x'4230') BETWEEN (vt1.c0) AND ('ѻ껮	WM')))) INNER JOIN t0 ON ((((((((((NULL) NOT NULL))OR(t0.c0)))AND(((t0.c0)>=(vt1.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)))AND(((((((((((((vt1.c0)AND(NULL)))OR(NULL)))AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))) WHERE (CAST(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (vt0.c0) AND (((x'4230') BETWEEN (vt1.c0) AND ('ѻ껮	WM')))) INNER JOIN t0 ON ((((((((((NULL) NOT NULL))OR(t0.c0)))AND(((t0.c0)>=(vt1.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)))AND(((((((((((((vt1.c0)AND(NULL)))OR(NULL)))AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (vt0.c0) AND (((x'4230') BETWEEN (vt1.c0) AND ('ѻ껮	WM')))) INNER JOIN t0 ON ((((((((((NULL) NOT NULL))OR(t0.c0)))AND(((t0.c0)>=(vt1.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)))AND(((((((((((((vt1.c0)AND(NULL)))OR(NULL)))AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))) WHERE (CAST(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt0.c0)))OR(LENGTH(vt1.c0))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt0.c0)))OR(LENGTH(vt1.c0))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY '' DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt0.c0)))OR(LENGTH(vt1.c0))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt0.c0)))OR(LENGTH(vt1.c0))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY '' DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt0.c0)))OR(LENGTH(vt1.c0))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY '' DESC;
