-- Time: 2024/06/09 19:02:55
-- Database: database16
-- Database version: 3.40.0
-- seed value: 2676619416
PRAGMA case_sensitive_like=ON; -- 3ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INT ); -- 17ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 21ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '55899'); -- 20ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL); -- 17ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0X4510cd7b); -- 16ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '10258'); -- 22ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 33ms;
INSERT OR IGNORE INTO t0(c0) VALUES (1158729083); -- 32ms;
ANALYZE; -- 29ms;
INSERT OR REPLACE INTO t0 VALUES ('Rk'); -- 14ms;
ANALYZE; -- 22ms;
PRAGMA temp.mmap_size; -- 0ms;
REINDEX BINARY; -- 23ms;
DELETE FROM sqlite_stat1; -- 26ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1717584300); -- 22ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 26ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES ('-1754803256'), (x''), (NULL); -- 20ms;
PRAGMA main.mmap_size = 6434696993155889500; -- 0ms;
PRAGMA cache_size = 7216667473329216924; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 806425798); -- 41ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i54 ON t0((~ (CAST(c0 AS NUMERIC)))); -- 0ms;
CREATE INDEX IF NOT EXISTS i59 ON t0(((((c0)>=(c0))) BETWEEN (((c0)*(c0))) AND (((((c0)OR(c0)))AND(c0)))) ASC); -- 0ms;
PRAGMA locking_mode; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''); -- 24ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (-2111422660), (0.33101058941100925), (x''); -- 13ms;
REINDEX  t0; -- 13ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA incremental_vacuum(2074318717); -- 0ms;
UPDATE t0 SET (c0)=(x'eaaa') WHERE NULL; -- 0ms;
PRAGMA mmap_size = -3242353389237762731; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
COMMIT TRANSACTION; -- 43ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '53537'); -- 37ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 23ms;
REINDEX i59; -- 33ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 11); -- 25ms;
INSERT OR FAIL INTO vt1 VALUES (0.560387346644991); -- 49ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x'116a'), (NULL), (NULL); -- 20ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('?'), ('-2111422660'), (x'f7a5'); -- 39ms;
END; -- 0ms;
DELETE FROM sqlite_stat1; -- 19ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 28ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('cQ(\rS.{'), (0.33101058941100925), (0.560387346644991); -- 27ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '19428'); -- 33ms;
CREATE UNIQUE INDEX IF NOT EXISTS i0 ON t0((((((c0)) NOT BETWEEN ((c0)) AND ((c0)))) IS FALSE)) WHERE ((((c0)||('-2115410811')))LIKE(((((c0)OR(c0)))OR(c0)))); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i28 ON t0((LIKELY(DISTINCT c0) IN ((('-135063961')>=(c0)), ((c0) NOT NULL))) COLLATE BINARY); -- 15ms;
CREATE INDEX IF NOT EXISTS i91 ON t0(((((c0)OR((- (c0)))))OR(c0)) COLLATE NOCASE DESC); -- 31ms;
DELETE FROM sqlite_stat1 WHERE (((0.33101058941100925)/(2074318717)) IN (0xffffffff83c7a7a9 COLLATE RTRIM)); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 25ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 13); -- 35ms;
INSERT INTO vt1(vt1) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 25ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE; -- 49ms;
PRAGMA stats; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (0.8913870069358415), (55200214), (1499206479); -- 37ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('?'); -- 22ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA wal_autocheckpoint = 9048980786236043671; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 32ms;
PRAGMA temp.legacy_file_format; -- 0ms;
CREATE INDEX i34 ON t0(CASE WHEN (c0 IN ()) THEN ((c0) NOT BETWEEN (c0) AND (c0)) WHEN (c0 IN ()) THEN (NOT (x'21b4aaf2')) WHEN CASE WHEN 0.5178001224621358 THEN x'' END THEN c0 END) WHERE CASE WHEN (- (c0)) THEN ((((((((((((c0)AND(c0)))OR(c0)))AND(c0)))AND(c0)))AND(x'')))OR(c0)) END; -- 24ms;
ANALYZE i59; -- 20ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 68ms;
PRAGMA automatic_index = false; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 34ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '48691'); -- 13ms;
COMMIT; -- 0ms;
END; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (333430416); -- 12ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 25ms;
INSERT OR ROLLBACK INTO t0 VALUES (-2.084067415E9); -- 12ms;
INSERT OR IGNORE INTO vt1 VALUES ('2006680363'), ('-2115410811'), (''); -- 24ms;
REINDEX  vt0; -- 0ms;
REINDEX  t0; -- 24ms;
PRAGMA temp.cache_size = -3413797813692120829; -- 0ms;
PRAGMA busy_timeout; -- 0ms;
PRAGMA journal_mode; -- 0ms;
END; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'', c0=0.9851266591669754; -- 22ms;
UPDATE OR IGNORE vt1 SET c0=' N', c0='333430416' WHERE NULL; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i94 ON t0(((c0 COLLATE BINARY)&((((c0, c0, c0)) BETWEEN ((c0, c0, c0)) AND ((c0, c0, c0))))) COLLATE NOCASE); -- 11ms;
CREATE INDEX i80 ON t0((+ (((c0)>(c0))))); -- 17ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0x595c134f), ('2074318717'), ('0.33101058941100925'); -- 11ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29991'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1754803256);\n; -- 0ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -395560752);\n; -- 0ms;
CREATE VIEW v0(c0, c1, c2) AS SELECT DISTINCT t0.c0, (((((+ (vt1.c0)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))))AND(((NULL)*(vt0.c0)))), ((vt1.c0 COLLATE BINARY)AND(CAST(t0.c0 AS REAL))) FROM t0, vt0, vt1 WHERE ((- (json_array_length('', NULL)))) ORDER BY TRIM(((vt0.c0)OR(t0.c0))) ASC; -- 0ms;
ANALYZE; -- 14ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('4l'); -- 11ms;
INSERT OR ABORT INTO vt1(c0) VALUES (x''), (0.560387346644991), (''), (0.19379003776156878), (x'93e3'); -- 15ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('f['); -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (''), (NULL), (NULL); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=('314733024') WHERE (NOT (CAST(vt0.c0 AS BLOB))); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 13); -- 10ms;
PRAGMA main.application_id; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1649313359); -- 10ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 338210606); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1088636416); -- 11ms;
INSERT OR ABORT INTO vt0(c0) VALUES (''), ('272293250'), ('-0.0'); -- 10ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 10ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('756857268'); -- 11ms;
VACUUM; -- 12ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '2830'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 11ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '31072'); -- 10ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 481924648); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -197291194);\n; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM temp; -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''), (NULL), (NULL); -- 10ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((0.19379003776156878) NOT BETWEEN (t0.c0) AND (t0.c0)))>=(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((0.19379003776156878) NOT BETWEEN (t0.c0) AND (t0.c0)))>=(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((0.19379003776156878) NOT BETWEEN (t0.c0) AND (t0.c0)))>=(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((0.19379003776156878) NOT BETWEEN (t0.c0) AND (t0.c0)))>=(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((0.19379003776156878) NOT BETWEEN (t0.c0) AND (t0.c0)))>=(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)));
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON ((CHAR(vt1.c0))LIKE(vt1.c0 COLLATE BINARY)) WHERE ((((t0.c0, vt1.c0, t0.c0)) BETWEEN ((((vt0.c0)<(t0.c0)), ((((vt0.c0)AND(t0.c0)))OR(t0.c0)), vt1.c0 COLLATE BINARY)) AND ((((vt1.c0)!=(0.03872473457944858)), vt0.c0 COLLATE RTRIM, TIME(vt1.c0, vt1.c0, t0.c0, t0.c0, vt0.c0))))) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, vt1.c0, t0.c0)) BETWEEN ((((vt0.c0)<(t0.c0)), ((((vt0.c0)AND(t0.c0)))OR(t0.c0)), vt1.c0 COLLATE BINARY)) AND ((((vt1.c0)<>(0.03872473457944858)), vt0.c0 COLLATE RTRIM, TIME(vt1.c0, vt1.c0, t0.c0, t0.c0, vt0.c0))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON ((CHAR(vt1.c0))LIKE(vt1.c0 COLLATE BINARY)) ORDER BY t0.c0 DESC  NULLS LAST);
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON ((CHAR(vt1.c0))LIKE(vt1.c0 COLLATE BINARY)) WHERE ((((t0.c0, vt1.c0, t0.c0)) BETWEEN ((((vt0.c0)<(t0.c0)), ((((vt0.c0)AND(t0.c0)))OR(t0.c0)), vt1.c0 COLLATE BINARY)) AND ((((vt1.c0)!=(0.03872473457944858)), vt0.c0 COLLATE RTRIM, TIME(vt1.c0, vt1.c0, t0.c0, t0.c0, vt0.c0))))) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, vt1.c0, t0.c0)) BETWEEN ((((vt0.c0)<(t0.c0)), ((((vt0.c0)AND(t0.c0)))OR(t0.c0)), vt1.c0 COLLATE BINARY)) AND ((((vt1.c0)<>(0.03872473457944858)), vt0.c0 COLLATE RTRIM, TIME(vt1.c0, vt1.c0, t0.c0, t0.c0, vt0.c0))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON ((CHAR(vt1.c0))LIKE(vt1.c0 COLLATE BINARY)) ORDER BY t0.c0 DESC  NULLS LAST);
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON ((CHAR(vt1.c0))LIKE(vt1.c0 COLLATE BINARY)) WHERE ((((t0.c0, vt1.c0, t0.c0)) BETWEEN ((((vt0.c0)<(t0.c0)), ((((vt0.c0)AND(t0.c0)))OR(t0.c0)), vt1.c0 COLLATE BINARY)) AND ((((vt1.c0)!=(0.03872473457944858)), vt0.c0 COLLATE RTRIM, TIME(vt1.c0, vt1.c0, t0.c0, t0.c0, vt0.c0))))) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ('-197291194');
SELECT SUM(count) FROM (SELECT ALL (('-197291194') IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ('-197291194');
SELECT SUM(count) FROM (SELECT ALL (('-197291194') IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ('-197291194');
SELECT * FROM vt1, t0 WHERE (((((vt1.c0 COLLATE BINARY)OR(json_array_length(t0.c0, vt1.c0))))AND(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE BINARY)OR(json_array_length(t0.c0, vt1.c0))))AND(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((((vt1.c0 COLLATE BINARY)OR(json_array_length(t0.c0, vt1.c0))))AND(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE BINARY)OR(json_array_length(t0.c0, vt1.c0))))AND(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM t0 WHERE (SUBSTR(TYPEOF(DISTINCT x''), LTRIM(t0.c0, t0.c0))) ORDER BY ((((((((LIKELIHOOD(DISTINCT t0.c0, 0.14035127548782678))AND((~ (t0.c0)))))AND('wu')))OR(x'8206')))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((SUBSTR(TYPEOF(DISTINCT x''), LTRIM(t0.c0, t0.c0))) IS TRUE)  as count FROM t0 ORDER BY ((((((((LIKELIHOOD(DISTINCT t0.c0, 0.14035127548782678))AND((~ (t0.c0)))))AND('wu')))OR(x'8206')))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT * FROM t0 WHERE (SUBSTR(TYPEOF(DISTINCT x''), LTRIM(t0.c0, t0.c0))) ORDER BY ((((((((LIKELIHOOD(DISTINCT t0.c0, 0.14035127548782678))AND((~ (t0.c0)))))AND('wu')))OR(x'8206')))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((SUBSTR(TYPEOF(DISTINCT x''), LTRIM(t0.c0, t0.c0))) IS TRUE)  as count FROM t0 ORDER BY ((((((((LIKELIHOOD(DISTINCT t0.c0, 0.14035127548782678))AND((~ (t0.c0)))))AND('wu')))OR(x'8206')))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT * FROM t0 WHERE (SUBSTR(TYPEOF(DISTINCT x''), LTRIM(t0.c0, t0.c0))) ORDER BY ((((((((LIKELIHOOD(DISTINCT t0.c0, 0.14035127548782678))AND((~ (t0.c0)))))AND('wu')))OR(x'8206')))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((CAST(vt1.c0 AS TEXT) IN ())) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)OR(((2.7229325E8)IS NOT(t0.c0)))))AND(CAST(t0.c0 AS BLOB))))AND((vt1.c0 IN ()))))AND(CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST, '756857268' COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((((((vt0.c0 COLLATE RTRIM)OR(((2.7229325E8)IS NOT(t0.c0)))))AND(CAST(t0.c0 AS BLOB))))AND((vt1.c0 IN ()))))AND(CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST, '756857268' COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((CAST(vt1.c0 AS TEXT) IN ())) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)OR(((2.7229325E8)IS NOT(t0.c0)))))AND(CAST(t0.c0 AS BLOB))))AND((vt1.c0 IN ()))))AND(CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST, '756857268' COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((((((vt0.c0 COLLATE RTRIM)OR(((2.7229325E8)IS NOT(t0.c0)))))AND(CAST(t0.c0 AS BLOB))))AND((vt1.c0 IN ()))))AND(CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST, '756857268' COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN 0.3441859707275582 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN 0.3441859707275582 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN 0.3441859707275582 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN 0.3441859707275582 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN 0.3441859707275582 END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))<((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE))<((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))<((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE))<((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))<((vt0.c0))));
SELECT * FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0)))+(TRIM(vt1.c0)))) ORDER BY ((((vt1.c0) NOT NULL))*(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(vt1.c0)))+(TRIM(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT NULL))*(CAST(vt1.c0 AS TEXT))));
SELECT * FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0)))+(TRIM(vt1.c0)))) ORDER BY ((((vt1.c0) NOT NULL))*(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(vt1.c0)))+(TRIM(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT NULL))*(CAST(vt1.c0 AS TEXT))));
SELECT * FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0)))+(TRIM(vt1.c0)))) ORDER BY ((((vt1.c0) NOT NULL))*(CAST(vt1.c0 AS TEXT)));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c0))) IS FALSE) WHERE (json_type(CASE WHEN vt0.c0 THEN vt0.c0 END)) ORDER BY '<nc#D?'  NULLS LAST, ((CAST(vt0.c0 AS NUMERIC))GLOB(x''));
SELECT SUM(count) FROM (SELECT ALL ((json_type(CASE WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c0))) IS FALSE) ORDER BY '<nc#D?'  NULLS LAST, ((CAST(vt0.c0 AS NUMERIC))GLOB(x'')));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c0))) IS FALSE) WHERE (json_type(CASE WHEN vt0.c0 THEN vt0.c0 END)) ORDER BY '<nc#D?'  NULLS LAST, ((CAST(vt0.c0 AS NUMERIC))GLOB(x''));
SELECT SUM(count) FROM (SELECT ALL ((json_type(CASE WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c0))) IS FALSE) ORDER BY '<nc#D?'  NULLS LAST, ((CAST(vt0.c0 AS NUMERIC))GLOB(x'')));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c0))) IS FALSE) WHERE (json_type(CASE WHEN vt0.c0 THEN vt0.c0 END)) ORDER BY '<nc#D?'  NULLS LAST, ((CAST(vt0.c0 AS NUMERIC))GLOB(x''));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 END))>=((((((vt0.c0)AND(NULL)))AND(vt1.c0)))))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)<>((((vt0.c0))>=((vt0.c0))))) DESC, ((vt0.c0) NOT BETWEEN (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) IS TRUE))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (x'1656') AND (vt1.c0))) BETWEEN (((vt0.c0)=(vt1.c0))) AND (vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 END))>=((((((vt0.c0)AND(NULL)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)!=((((vt0.c0))>=((vt0.c0))))) DESC, ((vt0.c0) NOT BETWEEN (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) IS TRUE))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (x'1656') AND (vt1.c0))) BETWEEN (((vt0.c0)=(vt1.c0))) AND (vt0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 END))>=((((((vt0.c0)AND(NULL)))AND(vt1.c0)))))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)<>((((vt0.c0))>=((vt0.c0))))) DESC, ((vt0.c0) NOT BETWEEN (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) IS TRUE))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (x'1656') AND (vt1.c0))) BETWEEN (((vt0.c0)=(vt1.c0))) AND (vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 END))>=((((((vt0.c0)AND(NULL)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)!=((((vt0.c0))>=((vt0.c0))))) DESC, ((vt0.c0) NOT BETWEEN (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) IS TRUE))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (x'1656') AND (vt1.c0))) BETWEEN (((vt0.c0)=(vt1.c0))) AND (vt0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 END))>=((((((vt0.c0)AND(NULL)))AND(vt1.c0)))))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)<>((((vt0.c0))>=((vt0.c0))))) DESC, ((vt0.c0) NOT BETWEEN (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) IS TRUE))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (x'1656') AND (vt1.c0))) BETWEEN (((vt0.c0)=(vt1.c0))) AND (vt0.c0)) ASC  NULLS FIRST;
SELECT * FROM t0 NOT INDEXED, vt1 WHERE ((((t0.c0) NOT BETWEEN ('T{Ty3_') AND (t0.c0)) IN (vt1.c0 COLLATE BINARY))) ORDER BY (((+ (vt1.c0)))<(''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) NOT BETWEEN ('T{Ty3_') AND (t0.c0)) IN (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((+ (vt1.c0)))<(''))  NULLS LAST);
SELECT * FROM t0 NOT INDEXED, vt1 WHERE ((((t0.c0) NOT BETWEEN ('T{Ty3_') AND (t0.c0)) IN (vt1.c0 COLLATE BINARY))) ORDER BY (((+ (vt1.c0)))<(''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) NOT BETWEEN ('T{Ty3_') AND (t0.c0)) IN (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((+ (vt1.c0)))<(''))  NULLS LAST);
SELECT * FROM t0 NOT INDEXED, vt1 WHERE ((((t0.c0) NOT BETWEEN ('T{Ty3_') AND (t0.c0)) IN (vt1.c0 COLLATE BINARY))) ORDER BY (((+ (vt1.c0)))<(''))  NULLS LAST;
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((((((((((vt1.c0))=((x''))))AND(((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND(x'')))AND(GLOB(vt1.c0, vt1.c0))))AND((NULL IN ())))) ORDER BY ((((t0.c0)*(vt1.c0))) ISNULL), (vt0.c0 IN (((t0.c0)/(vt0.c0)), x'503d'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt1.c0))=((x''))))AND(((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND(x'')))AND(GLOB(vt1.c0, vt1.c0))))AND((NULL IN ())))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((t0.c0)*(vt1.c0))) ISNULL), (vt0.c0 IN (((t0.c0)/(vt0.c0)), x'503d'))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((((((((((vt1.c0))=((x''))))AND(((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND(x'')))AND(GLOB(vt1.c0, vt1.c0))))AND((NULL IN ())))) ORDER BY ((((t0.c0)*(vt1.c0))) ISNULL), (vt0.c0 IN (((t0.c0)/(vt0.c0)), x'503d'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt1.c0))=((x''))))AND(((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND(x'')))AND(GLOB(vt1.c0, vt1.c0))))AND((NULL IN ())))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((t0.c0)*(vt1.c0))) ISNULL), (vt0.c0 IN (((t0.c0)/(vt0.c0)), x'503d'))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((((((((((vt1.c0))=((x''))))AND(((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND(x'')))AND(GLOB(vt1.c0, vt1.c0))))AND((NULL IN ())))) ORDER BY ((((t0.c0)*(vt1.c0))) ISNULL), (vt0.c0 IN (((t0.c0)/(vt0.c0)), x'503d'))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))<<(((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))<<(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))<<(((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))<<(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))<<(((vt0.c0)||(vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt1.c0)-(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)-(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt1.c0)-(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)-(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt1.c0)-(vt0.c0)) AS NUMERIC));
SELECT ALL * FROM vt1, t0 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END IN (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), x'', ((t0.c0)IS NOT(vt1.c0))))) ORDER BY (CAST(vt1.c0 AS TEXT) IN (((vt1.c0) IS TRUE))) ASC, (NOT (CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END IN (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), x'', ((t0.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (CAST(vt1.c0 AS TEXT) IN (((vt1.c0) IS TRUE))) ASC, (NOT (CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT ALL * FROM vt1, t0 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END IN (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), x'', ((t0.c0)IS NOT(vt1.c0))))) ORDER BY (CAST(vt1.c0 AS TEXT) IN (((vt1.c0) IS TRUE))) ASC, (NOT (CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END IN (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), x'', ((t0.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (CAST(vt1.c0 AS TEXT) IN (((vt1.c0) IS TRUE))) ASC, (NOT (CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT ALL * FROM vt1, t0 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END IN (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), x'', ((t0.c0)IS NOT(vt1.c0))))) ORDER BY (CAST(vt1.c0 AS TEXT) IN (((vt1.c0) IS TRUE))) ASC, (NOT (CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0)==(vt0.c0)))/(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(vt0.c0)))/(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0)==(vt0.c0)))/(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(vt0.c0)))/(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0)==(vt0.c0)))/(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM t0 WHERE (((NULL IN (t0.c0)) IN ())) ORDER BY ((((t0.c0 COLLATE RTRIM)AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(t0.c0 COLLATE NOCASE)) DESC  NULLS LAST, (((((t0.c0, t0.c0, t0.c0))>=((x'', t0.c0, t0.c0))))==(((t0.c0)==(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL IN (t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0 COLLATE RTRIM)AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(t0.c0 COLLATE NOCASE)) DESC  NULLS LAST, (((((t0.c0, t0.c0, t0.c0))>=((x'', t0.c0, t0.c0))))==(((t0.c0)=(t0.c0)))));
SELECT * FROM t0 WHERE (((NULL IN (t0.c0)) IN ())) ORDER BY ((((t0.c0 COLLATE RTRIM)AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(t0.c0 COLLATE NOCASE)) DESC  NULLS LAST, (((((t0.c0, t0.c0, t0.c0))>=((x'', t0.c0, t0.c0))))==(((t0.c0)==(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL IN (t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0 COLLATE RTRIM)AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(t0.c0 COLLATE NOCASE)) DESC  NULLS LAST, (((((t0.c0, t0.c0, t0.c0))>=((x'', t0.c0, t0.c0))))==(((t0.c0)=(t0.c0)))));
SELECT * FROM t0 WHERE (((NULL IN (t0.c0)) IN ())) ORDER BY ((((t0.c0 COLLATE RTRIM)AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(t0.c0 COLLATE NOCASE)) DESC  NULLS LAST, (((((t0.c0, t0.c0, t0.c0))>=((x'', t0.c0, t0.c0))))==(((t0.c0)==(t0.c0))));
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON (('') NOTNULL) WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), vt1.c0, CAST(vt1.c0 AS INTEGER))) AND ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)), CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), vt1.c0, CAST(vt1.c0 AS INTEGER))) AND ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)), CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON (('') NOTNULL));
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON (('') NOTNULL) WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), vt1.c0, CAST(vt1.c0 AS INTEGER))) AND ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)), CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), vt1.c0, CAST(vt1.c0 AS INTEGER))) AND ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)), CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON (('') NOTNULL));
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON (('') NOTNULL) WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), vt1.c0, CAST(vt1.c0 AS INTEGER))) AND ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)), CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 END))));
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN vt1 ON NULL WHERE (((t0.c0)%(0.7898034360351253))) ORDER BY t0.c0  NULLS LAST, CASE ((((t0.c0)AND(x'')))OR(vt0.c0))  WHEN ((vt1.c0) ISNULL) THEN CAST(t0.c0 AS NUMERIC) WHEN QUOTE(vt1.c0) THEN ((t0.c0)/(vt0.c0)) WHEN vt1.c0 THEN CAST(vt1.c0 AS REAL) END  NULLS LAST, 0Xffffffffc7ee47a7 ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c0)%(0.7898034360351253))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON NULL ORDER BY t0.c0  NULLS LAST, CASE ((((t0.c0)AND(x'')))OR(vt0.c0))  WHEN ((vt1.c0) ISNULL) THEN CAST(t0.c0 AS NUMERIC) WHEN QUOTE(vt1.c0) THEN ((t0.c0)/(vt0.c0)) WHEN vt1.c0 THEN CAST(vt1.c0 AS REAL) END  NULLS LAST, 0xffffffffc7ee47a7 ASC);
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN vt1 ON NULL WHERE (((t0.c0)%(0.7898034360351253))) ORDER BY t0.c0  NULLS LAST, CASE ((((t0.c0)AND(x'')))OR(vt0.c0))  WHEN ((vt1.c0) ISNULL) THEN CAST(t0.c0 AS NUMERIC) WHEN QUOTE(vt1.c0) THEN ((t0.c0)/(vt0.c0)) WHEN vt1.c0 THEN CAST(vt1.c0 AS REAL) END  NULLS LAST, 0Xffffffffc7ee47a7 ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c0)%(0.7898034360351253))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON NULL ORDER BY t0.c0  NULLS LAST, CASE ((((t0.c0)AND(x'')))OR(vt0.c0))  WHEN ((vt1.c0) ISNULL) THEN CAST(t0.c0 AS NUMERIC) WHEN QUOTE(vt1.c0) THEN ((t0.c0)/(vt0.c0)) WHEN vt1.c0 THEN CAST(vt1.c0 AS REAL) END  NULLS LAST, 0xffffffffc7ee47a7 ASC);
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN vt1 ON NULL WHERE (((t0.c0)%(0.7898034360351253))) ORDER BY t0.c0  NULLS LAST, CASE ((((t0.c0)AND(x'')))OR(vt0.c0))  WHEN ((vt1.c0) ISNULL) THEN CAST(t0.c0 AS NUMERIC) WHEN QUOTE(vt1.c0) THEN ((t0.c0)/(vt0.c0)) WHEN vt1.c0 THEN CAST(vt1.c0 AS REAL) END  NULLS LAST, 0Xffffffffc7ee47a7 ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '2006680363' THEN t0.c0 ELSE t0.c0 END THEN (((t0.c0))<=((NULL))) ELSE ((t0.c0)<<(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '2006680363' THEN t0.c0 ELSE t0.c0 END THEN (((t0.c0))<=((NULL))) ELSE ((t0.c0)<<(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '2006680363' THEN t0.c0 ELSE t0.c0 END THEN (((t0.c0))<=((NULL))) ELSE ((t0.c0)<<(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '2006680363' THEN t0.c0 ELSE t0.c0 END THEN (((t0.c0))<=((NULL))) ELSE ((t0.c0)<<(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '2006680363' THEN t0.c0 ELSE t0.c0 END THEN (((t0.c0))<=((NULL))) ELSE ((t0.c0)<<(t0.c0)) END);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CASE ((vt0.c0)%(vt1.c0))  WHEN (t0.c0 IN ()) THEN 0.5513382518742008 END) ORDER BY CASE WHEN ((((vt1.c0)AND(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN vt1.c0 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)%(vt1.c0))  WHEN (t0.c0 IN ()) THEN 0.5513382518742008 END) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CASE WHEN ((((vt1.c0)AND(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN vt1.c0 END END DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CASE ((vt0.c0)%(vt1.c0))  WHEN (t0.c0 IN ()) THEN 0.5513382518742008 END) ORDER BY CASE WHEN ((((vt1.c0)AND(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN vt1.c0 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)%(vt1.c0))  WHEN (t0.c0 IN ()) THEN 0.5513382518742008 END) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CASE WHEN ((((vt1.c0)AND(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN vt1.c0 END END DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CASE ((vt0.c0)%(vt1.c0))  WHEN (t0.c0 IN ()) THEN 0.5513382518742008 END) ORDER BY CASE WHEN ((((vt1.c0)AND(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN vt1.c0 END END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((x'' IN ())) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL) ASC  NULLS LAST, vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL) ASC  NULLS LAST, vt1.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((x'' IN ())) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL) ASC  NULLS LAST, vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL) ASC  NULLS LAST, vt1.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((x'' IN ())) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL) ASC  NULLS LAST, vt1.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT * FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) AS TEXT));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((((HEX(DISTINCT vt1.c0))OR((+ (vt1.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))) CROSS JOIN vt0 ON (((vt1.c0)) BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((((vt1.c0) IS TRUE)))) WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END)&(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END)&(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((((HEX(DISTINCT vt1.c0))OR((+ (vt1.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))) CROSS JOIN vt0 ON (((vt1.c0)) BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((((vt1.c0) IS TRUE)))) ORDER BY CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((((HEX(DISTINCT vt1.c0))OR((+ (vt1.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))) CROSS JOIN vt0 ON (((vt1.c0)) BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((((vt1.c0) IS TRUE)))) WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END)&(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END)&(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((((HEX(DISTINCT vt1.c0))OR((+ (vt1.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))) CROSS JOIN vt0 ON (((vt1.c0)) BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((((vt1.c0) IS TRUE)))) ORDER BY CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (CAST(vt1.c0 AS TEXT) IN (((vt1.c0)LIKE(NULL)), (('-395560752')>(vt1.c0)))) ASC, vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS TEXT) IN (((vt1.c0)LIKE(NULL)), (('-395560752')>(vt1.c0)))) ASC, vt1.c0 ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (CAST(vt1.c0 AS TEXT) IN (((vt1.c0)LIKE(NULL)), (('-395560752')>(vt1.c0)))) ASC, vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS TEXT) IN (((vt1.c0)LIKE(NULL)), (('-395560752')>(vt1.c0)))) ASC, vt1.c0 ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (CAST(vt1.c0 AS TEXT) IN (((vt1.c0)LIKE(NULL)), (('-395560752')>(vt1.c0)))) ASC, vt1.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (load_extension(CAST(vt1.c0 AS INTEGER))) ORDER BY ABS(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(CAST(vt1.c0 AS INTEGER))) IS TRUE)  as count FROM vt1 ORDER BY ABS(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (load_extension(CAST(vt1.c0 AS INTEGER))) ORDER BY ABS(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(CAST(vt1.c0 AS INTEGER))) IS TRUE)  as count FROM vt1 ORDER BY ABS(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))  NULLS FIRST);
SELECT * FROM vt0, t0, vt1 WHERE (CASE WHEN ((vt0.c0)%(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS TEXT) WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) THEN ((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) ELSE ((1499206479)GLOB(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)%(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS TEXT) WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) THEN ((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) ELSE ((1499206479)GLOB(t0.c0)) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (CASE WHEN ((vt0.c0)%(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS TEXT) WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) THEN ((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) ELSE ((1499206479)GLOB(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)%(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS TEXT) WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) THEN ((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) ELSE ((1499206479)GLOB(t0.c0)) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (CASE WHEN ((vt0.c0)%(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS TEXT) WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) THEN ((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) ELSE ((1499206479)GLOB(t0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY vt0.c0 DESC;
SELECT * FROM t0, vt0, vt1 WHERE (STRFTIME(((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), 0.33101058941100925, vt1.c0, ((NULL)>>(t0.c0)), LIKELIHOOD(x'', 0.8486137925774083))) ORDER BY SUBSTR(UNLIKELY(DISTINCT vt0.c0), ((vt1.c0)<<(vt0.c0)))  NULLS FIRST, ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c0 END)%((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), 0.33101058941100925, vt1.c0, ((NULL)>>(t0.c0)), LIKELIHOOD(x'', 0.8486137925774083))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY SUBSTR(UNLIKELY(DISTINCT vt0.c0), ((vt1.c0)<<(vt0.c0)))  NULLS FIRST, ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c0 END)%((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM t0, vt0, vt1 WHERE (STRFTIME(((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), 0.33101058941100925, vt1.c0, ((NULL)>>(t0.c0)), LIKELIHOOD(x'', 0.8486137925774083))) ORDER BY SUBSTR(UNLIKELY(DISTINCT vt0.c0), ((vt1.c0)<<(vt0.c0)))  NULLS FIRST, ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c0 END)%((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), 0.33101058941100925, vt1.c0, ((NULL)>>(t0.c0)), LIKELIHOOD(x'', 0.8486137925774083))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY SUBSTR(UNLIKELY(DISTINCT vt0.c0), ((vt1.c0)<<(vt0.c0)))  NULLS FIRST, ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c0 END)%((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM t0, vt0, vt1 WHERE (STRFTIME(((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), 0.33101058941100925, vt1.c0, ((NULL)>>(t0.c0)), LIKELIHOOD(x'', 0.8486137925774083))) ORDER BY SUBSTR(UNLIKELY(DISTINCT vt0.c0), ((vt1.c0)<<(vt0.c0)))  NULLS FIRST, ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c0 END)%((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((((vt0.c0) ISNULL)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) ISNULL)) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((((vt0.c0) ISNULL)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) ISNULL)) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((((vt0.c0) ISNULL)) ISNULL)  NULLS FIRST;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)) FULL OUTER JOIN vt0 ON ((NOT (vt1.c0)) IN ()) WHERE (((CASE t0.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt0.c0 END)&(((t0.c0) IS TRUE)))) ORDER BY (((vt1.c0)) BETWEEN ((x'6cb8')) AND ((((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt0.c0 END)&(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)) FULL OUTER JOIN vt0 ON ((NOT (vt1.c0)) IN ()) ORDER BY (((vt1.c0)) BETWEEN ((x'6cb8')) AND ((((vt1.c0) ISNULL)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)) FULL OUTER JOIN vt0 ON ((NOT (vt1.c0)) IN ()) WHERE (((CASE t0.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt0.c0 END)&(((t0.c0) IS TRUE)))) ORDER BY (((vt1.c0)) BETWEEN ((x'6cb8')) AND ((((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt0.c0 END)&(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)) FULL OUTER JOIN vt0 ON ((NOT (vt1.c0)) IN ()) ORDER BY (((vt1.c0)) BETWEEN ((x'6cb8')) AND ((((vt1.c0) ISNULL)))));
SELECT * FROM t0, vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOT BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOT BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((vt0.c0))<>((vt0.c0))))AND((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))!=((vt0.c0))))AND((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((vt0.c0))<>((vt0.c0))))AND((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))!=((vt0.c0))))AND((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((vt0.c0))<>((vt0.c0))))AND((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)&(t0.c0)) THEN (t0.c0 IN ()) ELSE (- (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)&(t0.c0)) THEN (t0.c0 IN ()) ELSE (- (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)&(t0.c0)) THEN (t0.c0 IN ()) ELSE (- (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)&(t0.c0)) THEN (t0.c0 IN ()) ELSE (- (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)&(t0.c0)) THEN (t0.c0 IN ()) ELSE (- (t0.c0)) END);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CASE ((t0.c0)/(t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN ((vt0.c0) IS TRUE) END) ORDER BY CASE WHEN 0.03099523957628647 THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC, COALESCE(DISTINCT CASE WHEN vt0.c0 THEN vt1.c0 END, (vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)/(t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CASE WHEN 0.03099523957628647 THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC, COALESCE(DISTINCT CASE WHEN vt0.c0 THEN vt1.c0 END, (vt0.c0 IN ())));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CASE ((t0.c0)/(t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN ((vt0.c0) IS TRUE) END) ORDER BY CASE WHEN 0.03099523957628647 THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC, COALESCE(DISTINCT CASE WHEN vt0.c0 THEN vt1.c0 END, (vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)/(t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CASE WHEN 0.03099523957628647 THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC, COALESCE(DISTINCT CASE WHEN vt0.c0 THEN vt1.c0 END, (vt0.c0 IN ())));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CASE ((t0.c0)/(t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN ((vt0.c0) IS TRUE) END) ORDER BY CASE WHEN 0.03099523957628647 THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC, COALESCE(DISTINCT CASE WHEN vt0.c0 THEN vt1.c0 END, (vt0.c0 IN ()));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((t0.c0)IS NOT(x'')) AS NUMERIC)) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)IS NOT(x'')) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY vt1.c0 ASC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((t0.c0)IS NOT(x'')) AS NUMERIC)) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)IS NOT(x'')) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY vt1.c0 ASC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((t0.c0)IS NOT(x'')) AS NUMERIC)) ORDER BY vt1.c0 ASC;
SELECT * FROM t0, vt0 WHERE ((((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, t0.c0, t0.c0))))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, t0.c0, t0.c0))))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, t0.c0, t0.c0))))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, t0.c0, t0.c0))))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, t0.c0, t0.c0))))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(t0.c0)))OR(vt1.c0)))AND(vt0.c0)))LIKE(((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt1.c0)))OR(t0.c0)))OR(vt1.c0)))AND(vt0.c0)))LIKE(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(t0.c0)))OR(vt1.c0)))AND(vt0.c0)))LIKE(((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt1.c0)))OR(t0.c0)))OR(vt1.c0)))AND(vt0.c0)))LIKE(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(t0.c0)))OR(vt1.c0)))AND(vt0.c0)))LIKE(((t0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CAST(t0.c0 AS TEXT) WHERE (LIKELY(DISTINCT t0.c0) COLLATE RTRIM) ORDER BY CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT t0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST(t0.c0 AS TEXT) ORDER BY CHANGES() DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CAST(t0.c0 AS TEXT) WHERE (LIKELY(DISTINCT t0.c0) COLLATE RTRIM) ORDER BY CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT t0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST(t0.c0 AS TEXT) ORDER BY CHANGES() DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CAST(t0.c0 AS TEXT) WHERE (LIKELY(DISTINCT t0.c0) COLLATE RTRIM) ORDER BY CHANGES() DESC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (TOTAL_CHANGES() IN (-1754803256)) WHERE ((((t0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((CAST(3.14733024E8 AS NUMERIC), (vt0.c0 IN (t0.c0)), ((x'')GLOB(t0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((t0.c0) NOTNULL), ((vt0.c0)<=(t0.c0)))))) ORDER BY (NOT ((vt0.c0 IN (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((CAST(3.14733024E8 AS NUMERIC), (vt0.c0 IN (t0.c0)), ((x'')GLOB(t0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((t0.c0) NOTNULL), ((vt0.c0)<=(t0.c0)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (TOTAL_CHANGES() IN (-1754803256)) ORDER BY (NOT ((vt0.c0 IN (t0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (TOTAL_CHANGES() IN (-1754803256)) WHERE ((((t0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((CAST(3.14733024E8 AS NUMERIC), (vt0.c0 IN (t0.c0)), ((x'')GLOB(t0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((t0.c0) NOTNULL), ((vt0.c0)<=(t0.c0)))))) ORDER BY (NOT ((vt0.c0 IN (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((CAST(3.14733024E8 AS NUMERIC), (vt0.c0 IN (t0.c0)), ((x'')GLOB(t0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((t0.c0) NOTNULL), ((vt0.c0)<=(t0.c0)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (TOTAL_CHANGES() IN (-1754803256)) ORDER BY (NOT ((vt0.c0 IN (t0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (TOTAL_CHANGES() IN (-1754803256)) WHERE ((((t0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((CAST(3.14733024E8 AS NUMERIC), (vt0.c0 IN (t0.c0)), ((x'')GLOB(t0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((t0.c0) NOTNULL), ((vt0.c0)<=(t0.c0)))))) ORDER BY (NOT ((vt0.c0 IN (t0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CAST((vt1.c0 IN ()) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS TEXT));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CAST((vt1.c0 IN ()) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS TEXT));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CAST((vt1.c0 IN ()) AS TEXT);
SELECT * FROM vt0, t0, vt1 WHERE (((((((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))OR((~ (vt0.c0)))))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(((t0.c0) ISNULL))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))OR((~ (vt0.c0)))))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(((t0.c0) ISNULL))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (((((((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))OR((~ (vt0.c0)))))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(((t0.c0) ISNULL))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))OR((~ (vt0.c0)))))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(((t0.c0) ISNULL))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (((((((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))OR((~ (vt0.c0)))))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(((t0.c0) ISNULL))))AND((vt0.c0 IN ()))));
SELECT * FROM vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE RTRIM) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE RTRIM) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE RTRIM) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS INTEGER) WHERE (LIKELY(DISTINCT (vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (vt1.c0 IN ()))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS INTEGER));
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS INTEGER) WHERE (LIKELY(DISTINCT (vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (vt1.c0 IN ()))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS INTEGER));
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS INTEGER) WHERE (LIKELY(DISTINCT (vt1.c0 IN ())));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (vt1.c0);
SELECT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0, ((vt1.c0) NOT NULL), vt1.c0 COLLATE RTRIM))!=((((vt0.c0)<=(vt1.c0)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) ISNULL)))) WHERE (CASE WHEN '!*쎺c%7' THEN (((0xffffffffa7991cb4)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN ((vt1.c0)+(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '!*쎺c%7' THEN (((0xffffffffa7991cb4)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN ((vt1.c0)+(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt1.c0, ((vt1.c0) NOT NULL), vt1.c0 COLLATE RTRIM))!=((((vt0.c0)<=(vt1.c0)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) ISNULL)))));
SELECT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0, ((vt1.c0) NOT NULL), vt1.c0 COLLATE RTRIM))!=((((vt0.c0)<=(vt1.c0)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) ISNULL)))) WHERE (CASE WHEN '!*쎺c%7' THEN (((0xffffffffa7991cb4)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN ((vt1.c0)+(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '!*쎺c%7' THEN (((0xffffffffa7991cb4)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN ((vt1.c0)+(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt1.c0, ((vt1.c0) NOT NULL), vt1.c0 COLLATE RTRIM))!=((((vt0.c0)<=(vt1.c0)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) ISNULL)))));
SELECT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0, ((vt1.c0) NOT NULL), vt1.c0 COLLATE RTRIM))!=((((vt0.c0)<=(vt1.c0)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) ISNULL)))) WHERE (CASE WHEN '!*쎺c%7' THEN (((0xffffffffa7991cb4)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN ((vt1.c0)+(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((vt0.c0)OR(vt1.c0)) COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((((((t0.c0)OR(vt0.c0)))OR(vt1.c0))) NOT BETWEEN (((t0.c0) NOT NULL)) AND (vt1.c0 COLLATE BINARY)) WHERE (((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))IS(((vt1.c0)<(7.56857268E8)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))IS(((vt1.c0)<(7.56857268E8))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((vt0.c0)OR(vt1.c0)) COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((((((t0.c0)OR(vt0.c0)))OR(vt1.c0))) NOT BETWEEN (((t0.c0) NOT NULL)) AND (vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((vt0.c0)OR(vt1.c0)) COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((((((t0.c0)OR(vt0.c0)))OR(vt1.c0))) NOT BETWEEN (((t0.c0) NOT NULL)) AND (vt1.c0 COLLATE BINARY)) WHERE (((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))IS(((vt1.c0)<(7.56857268E8)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))IS(((vt1.c0)<(7.56857268E8))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((vt0.c0)OR(vt1.c0)) COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((((((t0.c0)OR(vt0.c0)))OR(vt1.c0))) NOT BETWEEN (((t0.c0) NOT NULL)) AND (vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((vt0.c0)OR(vt1.c0)) COLLATE RTRIM RIGHT OUTER JOIN t0 ON ((((((t0.c0)OR(vt0.c0)))OR(vt1.c0))) NOT BETWEEN (((t0.c0) NOT NULL)) AND (vt1.c0 COLLATE BINARY)) WHERE (((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))IS(((vt1.c0)<(7.56857268E8)))));
SELECT * FROM vt0 WHERE (TYPEOF('f'));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF('f')) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TYPEOF('f'));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF('f')) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TYPEOF('f'));
SELECT COUNT(*) FROM t0, vt1 WHERE (((t0.c0) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((x'')OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((x'')OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((t0.c0) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((x'')OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((x'')OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((t0.c0) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((x'')OR(vt1.c0)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0) ORDER BY ((((vt0.c0)!=(t0.c0)))+(CAST(x'' AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)<>(t0.c0)))+(CAST(x'' AS TEXT))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0) ORDER BY ((((vt0.c0)!=(t0.c0)))+(CAST(x'' AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)<>(t0.c0)))+(CAST(x'' AS TEXT))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0) ORDER BY ((((vt0.c0)!=(t0.c0)))+(CAST(x'' AS TEXT))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((NULL)|(t0.c0)) IN ())) ORDER BY HEX(t0.c0) DESC;
SELECT SUM(count) FROM (SELECT (((((NULL)|(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY HEX(t0.c0) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NULL)|(t0.c0)) IN ())) ORDER BY HEX(t0.c0) DESC;
SELECT SUM(count) FROM (SELECT (((((NULL)|(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY HEX(t0.c0) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NULL)|(t0.c0)) IN ())) ORDER BY HEX(t0.c0) DESC;
SELECT ALL * FROM vt0, t0 WHERE ('Z(') ORDER BY 2006680363 DESC, CAST('-2084067415' AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (('Z(') IS TRUE)  as count FROM vt0, t0 ORDER BY 2006680363 DESC, CAST('-2084067415' AS INTEGER) ASC);
SELECT ALL * FROM vt0, t0 WHERE ('Z(') ORDER BY 2006680363 DESC, CAST('-2084067415' AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (('Z(') IS TRUE)  as count FROM vt0, t0 ORDER BY 2006680363 DESC, CAST('-2084067415' AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL));
SELECT ALL * FROM t0 WHERE (((COALESCE(t0.c0, t0.c0))IS((((-1754803256, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ORDER BY '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(t0.c0, t0.c0))IS((((-1754803256, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY '' DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((COALESCE(t0.c0, t0.c0))IS((((-1754803256, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ORDER BY '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(t0.c0, t0.c0))IS((((-1754803256, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY '' DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((COALESCE(t0.c0, t0.c0))IS((((-1754803256, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ORDER BY '' DESC  NULLS LAST;
SELECT * FROM vt1, t0 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ((vt1.c0 IN ()), ((vt1.c0)>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.c0 END IN ((vt1.c0 IN ()), ((vt1.c0)>(t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ((vt1.c0 IN ()), ((vt1.c0)>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.c0 END IN ((vt1.c0 IN ()), ((vt1.c0)>(t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ((vt1.c0 IN ()), ((vt1.c0)>(t0.c0)))));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE) ISNULL) WHERE ((((t0.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((((t0.c0)) NOT BETWEEN ((NULL)) AND ((t0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((((t0.c0)) NOT BETWEEN ((NULL)) AND ((t0.c0))))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE) ISNULL) WHERE ((((t0.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((((t0.c0)) NOT BETWEEN ((NULL)) AND ((t0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((((t0.c0)) NOT BETWEEN ((NULL)) AND ((t0.c0))))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE) ISNULL) WHERE ((((t0.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((((t0.c0)) NOT BETWEEN ((NULL)) AND ((t0.c0)))))));
SELECT * FROM t0, vt0 WHERE ((+ (((t0.c0)IS NOT(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0)IS NOT(NULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((+ (((t0.c0)IS NOT(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0)IS NOT(NULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((+ (((t0.c0)IS NOT(NULL)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (x'9c2f3214cb89') ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN t0.c0 COLLATE BINARY THEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) WHEN t0.c0 THEN (t0.c0 IN (t0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) ISNULL) ELSE vt0.c0 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL ((x'9c2f3214cb89') IS TRUE)  as count FROM vt0, t0 ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN t0.c0 COLLATE BINARY THEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) WHEN t0.c0 THEN (t0.c0 IN (t0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) ISNULL) ELSE vt0.c0 COLLATE BINARY END);
SELECT COUNT(*) FROM vt0, t0 WHERE (x'9c2f3214cb89') ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN t0.c0 COLLATE BINARY THEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) WHEN t0.c0 THEN (t0.c0 IN (t0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) ISNULL) ELSE vt0.c0 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL ((x'9c2f3214cb89') IS TRUE)  as count FROM vt0, t0 ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN t0.c0 COLLATE BINARY THEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) WHEN t0.c0 THEN (t0.c0 IN (t0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) ISNULL) ELSE vt0.c0 COLLATE BINARY END);
SELECT COUNT(*) FROM vt0, t0 WHERE (x'9c2f3214cb89') ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN t0.c0 COLLATE BINARY THEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) WHEN t0.c0 THEN (t0.c0 IN (t0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) ISNULL) ELSE vt0.c0 COLLATE BINARY END;
SELECT * FROM t0 WHERE ((((((t0.c0))>=((t0.c0)))) BETWEEN (t0.c0 COLLATE RTRIM) AND ((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))>=((t0.c0)))) BETWEEN (t0.c0 COLLATE RTRIM) AND ((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c0))>=((t0.c0)))) BETWEEN (t0.c0 COLLATE RTRIM) AND ((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0))>=((t0.c0)))) BETWEEN (t0.c0 COLLATE RTRIM) AND ((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c0))>=((t0.c0)))) BETWEEN (t0.c0 COLLATE RTRIM) AND ((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)OR(vt0.c0))) ISNULL) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('1603091036', vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('1603091036', vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)OR(vt0.c0))) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)OR(vt0.c0))) ISNULL) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('1603091036', vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('1603091036', vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)OR(vt0.c0))) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)OR(vt0.c0))) ISNULL) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('1603091036', vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))));
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0)))AND(t0.c0)) IN (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0)))AND(t0.c0)) IN (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0)))AND(t0.c0)) IN (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0)))AND(t0.c0)) IN (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0)))AND(t0.c0)) IN (((vt0.c0) NOT NULL))));
SELECT ALL * FROM t0 WHERE (SQLITE_COMPILEOPTION_GET(t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(t0.c0)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (SQLITE_COMPILEOPTION_GET(t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(t0.c0)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (SQLITE_COMPILEOPTION_GET(t0.c0));
SELECT * FROM vt0, t0 INNER JOIN vt1 ON (((CAST(t0.c0 AS REAL), vt0.c0, ((vt1.c0) NOT NULL)))>((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), ((vt0.c0) IS FALSE), NULLIF(DISTINCT vt1.c0, vt0.c0)))) WHERE (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON (((CAST(t0.c0 AS REAL), vt0.c0, ((vt1.c0) NOT NULL)))>((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), ((vt0.c0) IS FALSE), NULLIF(DISTINCT vt1.c0, vt0.c0)))));
SELECT * FROM vt0, t0 INNER JOIN vt1 ON (((CAST(t0.c0 AS REAL), vt0.c0, ((vt1.c0) NOT NULL)))>((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), ((vt0.c0) IS FALSE), NULLIF(DISTINCT vt1.c0, vt0.c0)))) WHERE (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON (((CAST(t0.c0 AS REAL), vt0.c0, ((vt1.c0) NOT NULL)))>((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), ((vt0.c0) IS FALSE), NULLIF(DISTINCT vt1.c0, vt0.c0)))));
SELECT * FROM vt0, t0 INNER JOIN vt1 ON (((CAST(t0.c0 AS REAL), vt0.c0, ((vt1.c0) NOT NULL)))>((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)), ((vt0.c0) IS FALSE), NULLIF(DISTINCT vt1.c0, vt0.c0)))) WHERE (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()));
SELECT ALL * FROM vt1 WHERE (RTRIM((- (vt1.c0)))) ORDER BY ((vt1.c0)&(vt1.c0)) COLLATE RTRIM COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((RTRIM((- (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)&(vt1.c0)) COLLATE RTRIM COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (RTRIM((- (vt1.c0)))) ORDER BY ((vt1.c0)&(vt1.c0)) COLLATE RTRIM COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((RTRIM((- (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)&(vt1.c0)) COLLATE RTRIM COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (RTRIM((- (vt1.c0)))) ORDER BY ((vt1.c0)&(vt1.c0)) COLLATE RTRIM COLLATE NOCASE  NULLS LAST;
SELECT * FROM t0, vt1 WHERE (((NULL)<<(t0.c0))) ORDER BY (((vt1.c0 IN ()))GLOB(CAST(t0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((NULL)<<(t0.c0))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((vt1.c0 IN ()))GLOB(CAST(t0.c0 AS REAL))));
SELECT * FROM t0, vt1 WHERE (((NULL)<<(t0.c0))) ORDER BY (((vt1.c0 IN ()))GLOB(CAST(t0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((NULL)<<(t0.c0))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((vt1.c0 IN ()))GLOB(CAST(t0.c0 AS REAL))));
SELECT * FROM t0, vt1 WHERE (((NULL)<<(t0.c0))) ORDER BY (((vt1.c0 IN ()))GLOB(CAST(t0.c0 AS REAL)));
SELECT * FROM vt1, vt0, t0 WHERE (CAST(0.16090764594865314 AS BLOB)) ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN (((vt0.c0) ISNULL)) AND (NULL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.16090764594865314 AS BLOB)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN (((vt0.c0) ISNULL)) AND (NULL)));
SELECT * FROM vt1, vt0, t0 WHERE (CAST(0.16090764594865314 AS BLOB)) ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN (((vt0.c0) ISNULL)) AND (NULL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.16090764594865314 AS BLOB)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN (((vt0.c0) ISNULL)) AND (NULL)));
SELECT * FROM vt1, vt0, t0 WHERE (CAST(0.16090764594865314 AS BLOB)) ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN (((vt0.c0) ISNULL)) AND (NULL));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)/(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ORDER BY (NOT ((t0.c0 IN ()))) DESC  NULLS LAST, ((((((t0.c0)>(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(load_extension(t0.c0, t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM)/(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (NOT ((t0.c0 IN ()))) DESC  NULLS LAST, ((((((t0.c0)>(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(load_extension(t0.c0, t0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)/(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ORDER BY (NOT ((t0.c0 IN ()))) DESC  NULLS LAST, ((((((t0.c0)>(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(load_extension(t0.c0, t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM)/(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (NOT ((t0.c0 IN ()))) DESC  NULLS LAST, ((((((t0.c0)>(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(load_extension(t0.c0, t0.c0))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((((((t0.c0)&(vt0.c0)), vt0.c0, x'', (vt0.c0 IN ()), t0.c0 COLLATE RTRIM))<=((t0.c0 COLLATE BINARY, ((x'741f')-(vt0.c0)), CASE t0.c0  WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END, ((t0.c0) IS TRUE), (NOT (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)&(vt0.c0)), vt0.c0, x'', (vt0.c0 IN ()), t0.c0 COLLATE RTRIM))<=((t0.c0 COLLATE BINARY, ((x'741f')-(vt0.c0)), CASE t0.c0  WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END, ((t0.c0) IS TRUE), (NOT (t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((t0.c0)&(vt0.c0)), vt0.c0, x'', (vt0.c0 IN ()), t0.c0 COLLATE RTRIM))<=((t0.c0 COLLATE BINARY, ((x'741f')-(vt0.c0)), CASE t0.c0  WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END, ((t0.c0) IS TRUE), (NOT (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)&(vt0.c0)), vt0.c0, x'', (vt0.c0 IN ()), t0.c0 COLLATE RTRIM))<=((t0.c0 COLLATE BINARY, ((x'741f')-(vt0.c0)), CASE t0.c0  WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END, ((t0.c0) IS TRUE), (NOT (t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((t0.c0)&(vt0.c0)), vt0.c0, x'', (vt0.c0 IN ()), t0.c0 COLLATE RTRIM))<=((t0.c0 COLLATE BINARY, ((x'741f')-(vt0.c0)), CASE t0.c0  WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END, ((t0.c0) IS TRUE), (NOT (t0.c0))))));
SELECT * FROM vt0, t0, vt1 INDEXED BY i34 WHERE (((((((((t0.c0 COLLATE NOCASE)OR(CASE WHEN t0.c0 THEN t0.c0 END)))AND(vt1.c0 COLLATE BINARY)))OR(((((t0.c0)AND(vt1.c0)))OR(t0.c0)))))AND(-1500968879 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0 COLLATE NOCASE)OR(CASE WHEN t0.c0 THEN t0.c0 END)))AND(vt1.c0 COLLATE BINARY)))OR(((((t0.c0)AND(vt1.c0)))OR(t0.c0)))))AND(-1500968879 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0, vt1 INDEXED BY i34);
SELECT * FROM vt0, t0, vt1 INDEXED BY i34 WHERE (((((((((t0.c0 COLLATE NOCASE)OR(CASE WHEN t0.c0 THEN t0.c0 END)))AND(vt1.c0 COLLATE BINARY)))OR(((((t0.c0)AND(vt1.c0)))OR(t0.c0)))))AND(-1500968879 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0 COLLATE NOCASE)OR(CASE WHEN t0.c0 THEN t0.c0 END)))AND(vt1.c0 COLLATE BINARY)))OR(((((t0.c0)AND(vt1.c0)))OR(t0.c0)))))AND(-1500968879 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0, vt1 INDEXED BY i34);
SELECT * FROM vt0, vt1, t0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) ORDER BY ((((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))) NOT BETWEEN ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))) NOT BETWEEN ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (t0.c0)) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) ORDER BY ((((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))) NOT BETWEEN ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))) NOT BETWEEN ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (t0.c0)) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) ORDER BY ((((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))) NOT BETWEEN ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (t0.c0)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (RTRIM(((vt0.c0) NOT BETWEEN (-2.115410811E9) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((vt0.c0) NOT BETWEEN (-2.115410811E9) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (RTRIM(((vt0.c0) NOT BETWEEN (-2.115410811E9) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((vt0.c0) NOT BETWEEN (-2.115410811E9) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (RTRIM(((vt0.c0) NOT BETWEEN (-2.115410811E9) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((vt1.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((vt1.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((vt1.c0 COLLATE RTRIM IN ()));
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE (x'a4955d1f') ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((x'a4955d1f') IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0);
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE (x'a4955d1f') ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((x'a4955d1f') IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0);
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE (x'a4955d1f') ORDER BY t0.c0;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)<=(t0.c0)) THEN NULL WHEN ((t0.c0) NOT NULL) THEN CASE '2074318717'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'FALSE' ELSE t0.c0 END WHEN '' THEN (NOT (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)<=(t0.c0)) THEN NULL WHEN ((t0.c0) NOT NULL) THEN CASE '2074318717'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'FALSE' ELSE t0.c0 END WHEN '' THEN (NOT (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)<=(t0.c0)) THEN NULL WHEN ((t0.c0) NOT NULL) THEN CASE '2074318717'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'FALSE' ELSE t0.c0 END WHEN '' THEN (NOT (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)<=(t0.c0)) THEN NULL WHEN ((t0.c0) NOT NULL) THEN CASE '2074318717'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'FALSE' ELSE t0.c0 END WHEN '' THEN (NOT (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)<=(t0.c0)) THEN NULL WHEN ((t0.c0) NOT NULL) THEN CASE '2074318717'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'FALSE' ELSE t0.c0 END WHEN '' THEN (NOT (t0.c0)) END);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (x'e72a') ORDER BY t0.c0 COLLATE BINARY ASC, (((SQLITE_COMPILEOPTION_GET(vt1.c0)))=((CASE WHEN 'w' THEN 0.4279258639454694 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((x'e72a') IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY t0.c0 COLLATE BINARY ASC, (((SQLITE_COMPILEOPTION_GET(vt1.c0)))=((CASE WHEN 'w' THEN 0.4279258639454694 ELSE vt0.c0 END))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (x'e72a') ORDER BY t0.c0 COLLATE BINARY ASC, (((SQLITE_COMPILEOPTION_GET(vt1.c0)))=((CASE WHEN 'w' THEN 0.4279258639454694 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((x'e72a') IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY t0.c0 COLLATE BINARY ASC, (((SQLITE_COMPILEOPTION_GET(vt1.c0)))=((CASE WHEN 'w' THEN 0.4279258639454694 ELSE vt0.c0 END))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (x'e72a') ORDER BY t0.c0 COLLATE BINARY ASC, (((SQLITE_COMPILEOPTION_GET(vt1.c0)))=((CASE WHEN 'w' THEN 0.4279258639454694 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END) ISNULL));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0)<=(vt0.c0)))) WHERE (PRINTF((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((PRINTF((+ (vt0.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0)<=(vt0.c0)))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0)<=(vt0.c0)))) WHERE (PRINTF((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((PRINTF((+ (vt0.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0)<=(vt0.c0)))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((vt1.c0) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c0)<=(vt0.c0)))) WHERE (PRINTF((+ (vt0.c0))));
SELECT * FROM vt0, t0, vt1 WHERE (CAST(((0.6615209237381551)/(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.6615209237381551)/(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (CAST(((0.6615209237381551)/(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.6615209237381551)/(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (CAST(((0.6615209237381551)/(t0.c0)) AS INTEGER));
SELECT ALL * FROM vt1, t0 INDEXED BY i80, vt0 WHERE (CASE WHEN CAST(t0.c0 AS INTEGER) THEN vt1.c0 WHEN TRIM(DISTINCT vt0.c0, vt1.c0) THEN CAST(t0.c0 AS BLOB) WHEN (((vt0.c0, vt1.c0, vt0.c0))>=((vt0.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0) IS FALSE) WHEN ((vt0.c0) NOTNULL) THEN ((((t0.c0)AND(vt1.c0)))AND(t0.c0)) WHEN ((t0.c0) NOT NULL) THEN CASE WHEN t0.c0 THEN vt0.c0 END ELSE ((vt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c0 AS INTEGER) THEN vt1.c0 WHEN TRIM(DISTINCT vt0.c0, vt1.c0) THEN CAST(t0.c0 AS BLOB) WHEN (((vt0.c0, vt1.c0, vt0.c0))>=((vt0.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0) IS FALSE) WHEN ((vt0.c0) NOTNULL) THEN ((((t0.c0)AND(vt1.c0)))AND(t0.c0)) WHEN ((t0.c0) NOT NULL) THEN CASE WHEN t0.c0 THEN vt0.c0 END ELSE ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt1, t0 INDEXED BY i80, vt0);
SELECT ALL * FROM vt1, t0 INDEXED BY i80, vt0 WHERE (CASE WHEN CAST(t0.c0 AS INTEGER) THEN vt1.c0 WHEN TRIM(DISTINCT vt0.c0, vt1.c0) THEN CAST(t0.c0 AS BLOB) WHEN (((vt0.c0, vt1.c0, vt0.c0))>=((vt0.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0) IS FALSE) WHEN ((vt0.c0) NOTNULL) THEN ((((t0.c0)AND(vt1.c0)))AND(t0.c0)) WHEN ((t0.c0) NOT NULL) THEN CASE WHEN t0.c0 THEN vt0.c0 END ELSE ((vt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c0 AS INTEGER) THEN vt1.c0 WHEN TRIM(DISTINCT vt0.c0, vt1.c0) THEN CAST(t0.c0 AS BLOB) WHEN (((vt0.c0, vt1.c0, vt0.c0))>=((vt0.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0) IS FALSE) WHEN ((vt0.c0) NOTNULL) THEN ((((t0.c0)AND(vt1.c0)))AND(t0.c0)) WHEN ((t0.c0) NOT NULL) THEN CASE WHEN t0.c0 THEN vt0.c0 END ELSE ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt1, t0 INDEXED BY i80, vt0);
SELECT ALL * FROM vt1, t0 INDEXED BY i80, vt0 WHERE (CASE WHEN CAST(t0.c0 AS INTEGER) THEN vt1.c0 WHEN TRIM(DISTINCT vt0.c0, vt1.c0) THEN CAST(t0.c0 AS BLOB) WHEN (((vt0.c0, vt1.c0, vt0.c0))>=((vt0.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0) IS FALSE) WHEN ((vt0.c0) NOTNULL) THEN ((((t0.c0)AND(vt1.c0)))AND(t0.c0)) WHEN ((t0.c0) NOT NULL) THEN CASE WHEN t0.c0 THEN vt0.c0 END ELSE ((vt1.c0) IS TRUE) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c0) ISNULL));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((- (vt1.c0 COLLATE NOCASE))) ORDER BY (- (json_array_length(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (json_array_length(vt0.c0))) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((- (vt1.c0 COLLATE NOCASE))) ORDER BY (- (json_array_length(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (json_array_length(vt0.c0))) ASC);
SELECT ALL * FROM vt1 WHERE ((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT * FROM t0, vt1 WHERE ('猭7~c3{V~');
SELECT SUM(count) FROM (SELECT ALL (('猭7~c3{V~') IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ('猭7~c3{V~');
SELECT SUM(count) FROM (SELECT ALL (('猭7~c3{V~') IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ('猭7~c3{V~');
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))+((((vt0.c0))<=((vt0.c0)))))) ORDER BY 0.8904892755484193;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))+((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY 0.8904892755484193);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))+((((vt0.c0))<=((vt0.c0)))))) ORDER BY 0.8904892755484193;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))+((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY 0.8904892755484193);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))+((((vt0.c0))<=((vt0.c0)))))) ORDER BY 0.8904892755484193;
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (272293250)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (272293250))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (272293250)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (272293250))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (272293250)));
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c0) NOTNULL))));
SELECT * FROM vt1, t0 WHERE (((vt1.c0) NOT NULL) COLLATE RTRIM) ORDER BY (((((t0.c0, t0.c0, t0.c0, vt1.c0, -1517216892))>=((t0.c0, t0.c0, vt1.c0, t0.c0, t0.c0))))<=((((vt1.c0))>((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 NOT INDEXED, t0 ORDER BY (((((t0.c0, t0.c0, t0.c0, vt1.c0, -1517216892))>=((t0.c0, t0.c0, vt1.c0, t0.c0, t0.c0))))<=((((vt1.c0))>((t0.c0))))));
SELECT * FROM vt1, t0 WHERE (((vt1.c0) NOT NULL) COLLATE RTRIM) ORDER BY (((((t0.c0, t0.c0, t0.c0, vt1.c0, -1517216892))>=((t0.c0, t0.c0, vt1.c0, t0.c0, t0.c0))))<=((((vt1.c0))>((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 NOT INDEXED, t0 ORDER BY (((((t0.c0, t0.c0, t0.c0, vt1.c0, -1517216892))>=((t0.c0, t0.c0, vt1.c0, t0.c0, t0.c0))))<=((((vt1.c0))>((t0.c0))))));
SELECT * FROM vt1, t0 WHERE (((vt1.c0) NOT NULL) COLLATE RTRIM) ORDER BY (((((t0.c0, t0.c0, t0.c0, vt1.c0, -1517216892))>=((t0.c0, t0.c0, vt1.c0, t0.c0, t0.c0))))<=((((vt1.c0))>((t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((-9.40685401E8, CASE x''  WHEN '333430416' THEN t0.c0 ELSE t0.c0 END, CAST('뿻' AS NUMERIC)))>((((t0.c0)-(t0.c0)), t0.c0, ((t0.c0) IS FALSE))))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE 0X2961cee2 END)IS NOT(t0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((-9.40685401E8, CASE x''  WHEN '333430416' THEN t0.c0 ELSE t0.c0 END, CAST('뿻' AS NUMERIC)))>((((t0.c0)-(t0.c0)), t0.c0, ((t0.c0) IS FALSE))))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE 0x2961cee2 END)IS NOT(t0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((-9.40685401E8, CASE x''  WHEN '333430416' THEN t0.c0 ELSE t0.c0 END, CAST('뿻' AS NUMERIC)))>((((t0.c0)-(t0.c0)), t0.c0, ((t0.c0) IS FALSE))))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE 0X2961cee2 END)IS NOT(t0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((-9.40685401E8, CASE x''  WHEN '333430416' THEN t0.c0 ELSE t0.c0 END, CAST('뿻' AS NUMERIC)))>((((t0.c0)-(t0.c0)), t0.c0, ((t0.c0) IS FALSE))))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE 0x2961cee2 END)IS NOT(t0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((-9.40685401E8, CASE x''  WHEN '333430416' THEN t0.c0 ELSE t0.c0 END, CAST('뿻' AS NUMERIC)))>((((t0.c0)-(t0.c0)), t0.c0, ((t0.c0) IS FALSE))))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE 0X2961cee2 END)IS NOT(t0.c0));
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-940685401' WHEN t0.c0 THEN t0.c0 END))) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((((NULL)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), (~ (t0.c0)))) AND ((CAST(t0.c0 AS REAL), 0.08233165264857345, t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-940685401' WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((((NULL)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), (~ (t0.c0)))) AND ((CAST(t0.c0 AS REAL), 0.08233165264857345, t0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-940685401' WHEN t0.c0 THEN t0.c0 END))) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((((NULL)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), (~ (t0.c0)))) AND ((CAST(t0.c0 AS REAL), 0.08233165264857345, t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-940685401' WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((((NULL)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), (~ (t0.c0)))) AND ((CAST(t0.c0 AS REAL), 0.08233165264857345, t0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-940685401' WHEN t0.c0 THEN t0.c0 END))) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((((NULL)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), (~ (t0.c0)))) AND ((CAST(t0.c0 AS REAL), 0.08233165264857345, t0.c0))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 INDEXED BY i59, t0 WHERE (((((vt1.c0) IS TRUE))<=(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE))<=(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i59, t0);
SELECT ALL COUNT(*) FROM vt0, vt1 INDEXED BY i59, t0 WHERE (((((vt1.c0) IS TRUE))<=(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE))<=(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i59, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))<=(vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))<=(vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))<=(vt0.c0)));
SELECT ALL * FROM t0, vt1, vt0 WHERE (CASE (vt1.c0 IN ())  WHEN NULLIF(DISTINCT t0.c0, t0.c0) THEN CAST(vt1.c0 AS TEXT) ELSE ((t0.c0)<=(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt1.c0 IN ())  WHEN NULLIF(DISTINCT t0.c0, t0.c0) THEN CAST(vt1.c0 AS TEXT) ELSE ((t0.c0)<=(t0.c0)) END) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (CASE (vt1.c0 IN ())  WHEN NULLIF(DISTINCT t0.c0, t0.c0) THEN CAST(vt1.c0 AS TEXT) ELSE ((t0.c0)<=(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt1.c0 IN ())  WHEN NULLIF(DISTINCT t0.c0, t0.c0) THEN CAST(vt1.c0 AS TEXT) ELSE ((t0.c0)<=(t0.c0)) END) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (CASE (vt1.c0 IN ())  WHEN NULLIF(DISTINCT t0.c0, t0.c0) THEN CAST(vt1.c0 AS TEXT) ELSE ((t0.c0)<=(t0.c0)) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))>(((((vt0.c0))!=((x'')))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>(((((vt0.c0))<>((x''))))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))>(((((vt0.c0))!=((x'')))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>(((((vt0.c0))<>((x''))))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))>(((((vt0.c0))!=((x'')))))));
SELECT ALL * FROM vt1 WHERE (((x'')<>(((vt1.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<>(((vt1.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((x'')<>(((vt1.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<>(((vt1.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((x'')<>(((vt1.c0)>=(vt1.c0)))));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON LIKE((~ (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN '-2084067415' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) WHERE (CASE WHEN vt1.c0 THEN ((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) ELSE x'' COLLATE BINARY END) ORDER BY CAST(CAST(-1604794112 AS TEXT) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN ((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) ELSE x'' COLLATE BINARY END) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON LIKE((~ (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN '-2084067415' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) ORDER BY CAST(CAST(-1604794112 AS TEXT) AS REAL));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON LIKE((~ (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN '-2084067415' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) WHERE (CASE WHEN vt1.c0 THEN ((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) ELSE x'' COLLATE BINARY END) ORDER BY CAST(CAST(-1604794112 AS TEXT) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN ((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) ELSE x'' COLLATE BINARY END) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON LIKE((~ (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN '-2084067415' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) ORDER BY CAST(CAST(-1604794112 AS TEXT) AS REAL));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON LIKE((~ (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN '-2084067415' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) WHERE (CASE WHEN vt1.c0 THEN ((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) ELSE x'' COLLATE BINARY END) ORDER BY CAST(CAST(-1604794112 AS TEXT) AS REAL);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY UNICODE(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) DESC, NULL, ((((vt0.c0)IS(NULL)))*(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY UNICODE(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) DESC, NULL, ((((vt0.c0)IS(NULL)))*(vt1.c0)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY UNICODE(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) DESC, NULL, ((((vt0.c0)IS(NULL)))*(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY UNICODE(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) DESC, NULL, ((((vt0.c0)IS(NULL)))*(vt1.c0)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY UNICODE(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) DESC, NULL, ((((vt0.c0)IS(NULL)))*(vt1.c0)) DESC;
SELECT * FROM t0 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY (((((t0.c0, t0.c0, t0.c0))>((t0.c0, NULL, t0.c0))))>(((((t0.c0)OR(t0.c0)))OR(-1.97291194E8))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0, t0.c0, t0.c0))>((t0.c0, NULL, t0.c0))))>(((((t0.c0)OR(t0.c0)))OR(-1.97291194E8))))  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY (((((t0.c0, t0.c0, t0.c0))>((t0.c0, NULL, t0.c0))))>(((((t0.c0)OR(t0.c0)))OR(-1.97291194E8))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0, t0.c0, t0.c0))>((t0.c0, NULL, t0.c0))))>(((((t0.c0)OR(t0.c0)))OR(-1.97291194E8))))  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY (((((t0.c0, t0.c0, t0.c0))>((t0.c0, NULL, t0.c0))))>(((((t0.c0)OR(t0.c0)))OR(-1.97291194E8))))  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))OR(t0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END THEN vt0.c0 COLLATE NOCASE WHEN ((((vt0.c0)OR('-1423325914')))OR(t0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) WHEN ((vt0.c0) NOT NULL) THEN '0.4279258639454694' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)OR(vt0.c0)))OR(t0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END THEN vt0.c0 COLLATE NOCASE WHEN ((((vt0.c0)OR('-1423325914')))OR(t0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) WHEN ((vt0.c0) NOT NULL) THEN '0.4279258639454694' END) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))OR(t0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END THEN vt0.c0 COLLATE NOCASE WHEN ((((vt0.c0)OR('-1423325914')))OR(t0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) WHEN ((vt0.c0) NOT NULL) THEN '0.4279258639454694' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)OR(vt0.c0)))OR(t0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END THEN vt0.c0 COLLATE NOCASE WHEN ((((vt0.c0)OR('-1423325914')))OR(t0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) WHEN ((vt0.c0) NOT NULL) THEN '0.4279258639454694' END) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))OR(t0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END THEN vt0.c0 COLLATE NOCASE WHEN ((((vt0.c0)OR('-1423325914')))OR(t0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) WHEN ((vt0.c0) NOT NULL) THEN '0.4279258639454694' END);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(JULIANDAY(vt0.c0, vt0.c0, t0.c0, t0.c0, vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(JULIANDAY(vt0.c0, vt0.c0, t0.c0, t0.c0, vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(JULIANDAY(vt0.c0, vt0.c0, t0.c0, t0.c0, vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(JULIANDAY(vt0.c0, vt0.c0, t0.c0, t0.c0, vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(JULIANDAY(vt0.c0, vt0.c0, t0.c0, t0.c0, vt0.c0) AS NUMERIC));
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CASE vt1.c0  WHEN NULL THEN vt1.c0 END) AND (0.5360624080469408)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CASE vt1.c0  WHEN NULL THEN vt1.c0 END) AND (0.5360624080469408))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CASE vt1.c0  WHEN NULL THEN vt1.c0 END) AND (0.5360624080469408)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CASE vt1.c0  WHEN NULL THEN vt1.c0 END) AND (0.5360624080469408))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CASE vt1.c0  WHEN NULL THEN vt1.c0 END) AND (0.5360624080469408)));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (LIKELIHOOD(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)), 0.2223818748494112));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)), 0.2223818748494112)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (LIKELIHOOD(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)), 0.2223818748494112));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)), 0.2223818748494112)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (LIKELIHOOD(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)), 0.2223818748494112));
SELECT ALL * FROM vt1 CROSS JOIN t0 ON vt1.c0 WHERE ('') ORDER BY (('wu') BETWEEN (((((t0.c0)OR(vt1.c0)))AND(vt1.c0))) AND (((t0.c0)<(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1 NOT INDEXED CROSS JOIN t0 ON vt1.c0 ORDER BY (('wu') BETWEEN (((((t0.c0)OR(vt1.c0)))AND(vt1.c0))) AND (((t0.c0)<(t0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 CROSS JOIN t0 ON vt1.c0 WHERE ('') ORDER BY (('wu') BETWEEN (((((t0.c0)OR(vt1.c0)))AND(vt1.c0))) AND (((t0.c0)<(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1 NOT INDEXED CROSS JOIN t0 ON vt1.c0 ORDER BY (('wu') BETWEEN (((((t0.c0)OR(vt1.c0)))AND(vt1.c0))) AND (((t0.c0)<(t0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 CROSS JOIN t0 ON vt1.c0 WHERE ('') ORDER BY (('wu') BETWEEN (((((t0.c0)OR(vt1.c0)))AND(vt1.c0))) AND (((t0.c0)<(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((json_remove(x'', 0Xffffffff8dd1473a))AND(UPPER(DISTINCT vt1.c0))))OR(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((json_remove(x'', 0xffffffff8dd1473a))AND(UPPER(DISTINCT vt1.c0))))OR(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((json_remove(x'', 0Xffffffff8dd1473a))AND(UPPER(DISTINCT vt1.c0))))OR(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((json_remove(x'', 0xffffffff8dd1473a))AND(UPPER(DISTINCT vt1.c0))))OR(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1, t0, vt0 NOT INDEXED WHERE (NULLIF(vt0.c0, vt1.c0 COLLATE NOCASE)) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((NULLIF(vt0.c0, vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY vt1.c0);
SELECT ALL * FROM vt1, t0, vt0 NOT INDEXED WHERE (NULLIF(vt0.c0, vt1.c0 COLLATE NOCASE)) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((NULLIF(vt0.c0, vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY vt1.c0);
SELECT ALL * FROM vt1, t0, vt0 NOT INDEXED WHERE (NULLIF(vt0.c0, vt1.c0 COLLATE NOCASE)) ORDER BY vt1.c0;
SELECT * FROM vt0, vt1, t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT NULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON vt0.c0 WHERE ((((((NULL) BETWEEN (t0.c0) AND (t0.c0))))<(((- (t0.c0)))))) ORDER BY t0.c0  NULLS FIRST, CAST((t0.c0 IN (t0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((((NULL) BETWEEN (t0.c0) AND (t0.c0))))<(((- (t0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON vt0.c0 ORDER BY t0.c0  NULLS FIRST, CAST((t0.c0 IN (t0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON vt0.c0 WHERE ((((((NULL) BETWEEN (t0.c0) AND (t0.c0))))<(((- (t0.c0)))))) ORDER BY t0.c0  NULLS FIRST, CAST((t0.c0 IN (t0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((((NULL) BETWEEN (t0.c0) AND (t0.c0))))<(((- (t0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON vt0.c0 ORDER BY t0.c0  NULLS FIRST, CAST((t0.c0 IN (t0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON vt0.c0 WHERE ((((((NULL) BETWEEN (t0.c0) AND (t0.c0))))<(((- (t0.c0)))))) ORDER BY t0.c0  NULLS FIRST, CAST((t0.c0 IN (t0.c0)) AS BLOB);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)|(vt0.c0)))GLOB(((vt0.c0)|(vt0.c0))))) ORDER BY (((vt0.c0 IN ()))>>((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c0)))GLOB(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))>>((vt0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)|(vt0.c0)))GLOB(((vt0.c0)|(vt0.c0))))) ORDER BY (((vt0.c0 IN ()))>>((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c0)))GLOB(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))>>((vt0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)|(vt0.c0)))GLOB(((vt0.c0)|(vt0.c0))))) ORDER BY (((vt0.c0 IN ()))>>((vt0.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((- (t0.c0)))<=(CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c0)))<=(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((- (t0.c0)))<=(CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c0)))<=(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((- (t0.c0)))<=(CAST(t0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((x'')AND(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)))AND(COALESCE(DISTINCT t0.c0, t0.c0))))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))))OR(TRIM(DISTINCT vt0.c0)))) ORDER BY (NOT (vt0.c0)) ASC, ((((((t0.c0)||(vt0.c0)))OR(CAST(t0.c0 AS TEXT))))AND(((t0.c0) IS TRUE))), ((((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))OR(((t0.c0) NOTNULL))))AND(((t0.c0)<<(t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')AND(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)))AND(COALESCE(DISTINCT t0.c0, t0.c0))))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))))OR(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 ORDER BY (NOT (vt0.c0)) ASC, ((((((t0.c0)||(vt0.c0)))OR(CAST(t0.c0 AS TEXT))))AND(((t0.c0) IS TRUE))), ((((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))OR(((t0.c0) NOTNULL))))AND(((t0.c0)<<(t0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((x'')AND(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)))AND(COALESCE(DISTINCT t0.c0, t0.c0))))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))))OR(TRIM(DISTINCT vt0.c0)))) ORDER BY (NOT (vt0.c0)) ASC, ((((((t0.c0)||(vt0.c0)))OR(CAST(t0.c0 AS TEXT))))AND(((t0.c0) IS TRUE))), ((((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))OR(((t0.c0) NOTNULL))))AND(((t0.c0)<<(t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')AND(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)))AND(COALESCE(DISTINCT t0.c0, t0.c0))))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))))OR(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 ORDER BY (NOT (vt0.c0)) ASC, ((((((t0.c0)||(vt0.c0)))OR(CAST(t0.c0 AS TEXT))))AND(((t0.c0) IS TRUE))), ((((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))OR(((t0.c0) NOTNULL))))AND(((t0.c0)<<(t0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((x'')AND(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)))AND(COALESCE(DISTINCT t0.c0, t0.c0))))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))))OR(TRIM(DISTINCT vt0.c0)))) ORDER BY (NOT (vt0.c0)) ASC, ((((((t0.c0)||(vt0.c0)))OR(CAST(t0.c0 AS TEXT))))AND(((t0.c0) IS TRUE))), ((((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))OR(((t0.c0) NOTNULL))))AND(((t0.c0)<<(t0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'cd5c' WHEN vt0.c0 THEN vt0.c0 END IN (CASE vt0.c0  WHEN x'5cb7' THEN '1999552507' WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 ELSE x'cd33' END)));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'cd5c' WHEN vt0.c0 THEN vt0.c0 END IN (CASE vt0.c0  WHEN x'5cb7' THEN '1999552507' WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 ELSE x'cd33' END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'cd5c' WHEN vt0.c0 THEN vt0.c0 END IN (CASE vt0.c0  WHEN x'5cb7' THEN '1999552507' WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 ELSE x'cd33' END)));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'cd5c' WHEN vt0.c0 THEN vt0.c0 END IN (CASE vt0.c0  WHEN x'5cb7' THEN '1999552507' WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 ELSE x'cd33' END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'cd5c' WHEN vt0.c0 THEN vt0.c0 END IN (CASE vt0.c0  WHEN x'5cb7' THEN '1999552507' WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 ELSE x'cd33' END)));
SELECT * FROM t0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), LIKE(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((SUBSTR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), LIKE(vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), LIKE(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((SUBSTR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), LIKE(vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), LIKE(vt0.c0, vt0.c0)));
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt1, vt0 INDEXED BY i59 WHERE (CASE WHEN t0.c0 THEN ((vt1.c0)IS(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN ((vt1.c0)IS(t0.c0)) END) IS TRUE)  as count FROM t0, vt1, vt0 INDEXED BY i59);
SELECT COUNT(*) FROM t0, vt1, vt0 INDEXED BY i59 WHERE (CASE WHEN t0.c0 THEN ((vt1.c0)IS(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN ((vt1.c0)IS(t0.c0)) END) IS TRUE)  as count FROM t0, vt1, vt0 INDEXED BY i59);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM t0, vt1 NATURAL JOIN vt0 WHERE (((CASE t0.c0  WHEN x'' THEN vt1.c0 END)LIKE(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN x'' THEN vt1.c0 END)LIKE(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0);
SELECT ALL * FROM t0, vt1 NATURAL JOIN vt0 WHERE (((CASE t0.c0  WHEN x'' THEN vt1.c0 END)LIKE(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN x'' THEN vt1.c0 END)LIKE(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0);
SELECT ALL * FROM t0, vt1 NATURAL JOIN vt0 WHERE (((CASE t0.c0  WHEN x'' THEN vt1.c0 END)LIKE(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt1.c0)>(t0.c0)))/(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(t0.c0)))/(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt1.c0)>(t0.c0)))/(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(t0.c0)))/(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt1.c0)>(t0.c0)))/(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(NULL AS NUMERIC) CROSS JOIN t0 ON vt0.c0 WHERE (((((t0.c0)=(vt1.c0))) IS TRUE)) ORDER BY CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)) THEN t0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)=(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(NULL AS NUMERIC) CROSS JOIN t0 ON vt0.c0 ORDER BY CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)) THEN t0.c0 END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(NULL AS NUMERIC) CROSS JOIN t0 ON vt0.c0 WHERE (((((t0.c0)=(vt1.c0))) IS TRUE)) ORDER BY CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)) THEN t0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)=(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(NULL AS NUMERIC) CROSS JOIN t0 ON vt0.c0 ORDER BY CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)) THEN t0.c0 END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(NULL AS NUMERIC) CROSS JOIN t0 ON vt0.c0 WHERE (((((t0.c0)=(vt1.c0))) IS TRUE)) ORDER BY CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)) THEN t0.c0 END  NULLS LAST;
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((t0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((CAST(vt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((t0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((CAST(vt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((t0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((CAST(vt0.c0 AS REAL)))));
SELECT * FROM vt1, t0 WHERE (ROUND(((vt1.c0)OR(t0.c0)), ((t0.c0) NOTNULL))) ORDER BY ((((((((((vt1.c0) BETWEEN (0x340fb0ab) AND (vt1.c0)))AND(t0.c0 COLLATE BINARY)))OR(UNLIKELY(DISTINCT vt1.c0))))AND((((722421419))<=((t0.c0))))))OR((((vt1.c0, vt1.c0, t0.c0, 0.0, vt1.c0))<=((873443499, t0.c0, t0.c0, t0.c0, t0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ROUND(((vt1.c0)OR(t0.c0)), ((t0.c0) NOTNULL))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((((((vt1.c0) BETWEEN (0X340fb0ab) AND (vt1.c0)))AND(t0.c0 COLLATE BINARY)))OR(UNLIKELY(DISTINCT vt1.c0))))AND((((722421419))<=((t0.c0))))))OR((((vt1.c0, vt1.c0, t0.c0, 0.0, vt1.c0))<=((873443499, t0.c0, t0.c0, t0.c0, t0.c0))))) DESC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (ROUND(((vt1.c0)OR(t0.c0)), ((t0.c0) NOTNULL))) ORDER BY ((((((((((vt1.c0) BETWEEN (0x340fb0ab) AND (vt1.c0)))AND(t0.c0 COLLATE BINARY)))OR(UNLIKELY(DISTINCT vt1.c0))))AND((((722421419))<=((t0.c0))))))OR((((vt1.c0, vt1.c0, t0.c0, 0.0, vt1.c0))<=((873443499, t0.c0, t0.c0, t0.c0, t0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ROUND(((vt1.c0)OR(t0.c0)), ((t0.c0) NOTNULL))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((((((vt1.c0) BETWEEN (0X340fb0ab) AND (vt1.c0)))AND(t0.c0 COLLATE BINARY)))OR(UNLIKELY(DISTINCT vt1.c0))))AND((((722421419))<=((t0.c0))))))OR((((vt1.c0, vt1.c0, t0.c0, 0.0, vt1.c0))<=((873443499, t0.c0, t0.c0, t0.c0, t0.c0))))) DESC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (ROUND(((vt1.c0)OR(t0.c0)), ((t0.c0) NOTNULL))) ORDER BY ((((((((((vt1.c0) BETWEEN (0x340fb0ab) AND (vt1.c0)))AND(t0.c0 COLLATE BINARY)))OR(UNLIKELY(DISTINCT vt1.c0))))AND((((722421419))<=((t0.c0))))))OR((((vt1.c0, vt1.c0, t0.c0, 0.0, vt1.c0))<=((873443499, t0.c0, t0.c0, t0.c0, t0.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST((NULL IN (vt0.c0, vt0.c0)) AS INTEGER) WHERE ((CAST(vt0.c0 AS TEXT) IN ())) ORDER BY (LOWER(DISTINCT vt0.c0) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CAST((NULL IN (vt0.c0, vt0.c0)) AS INTEGER) ORDER BY (LOWER(DISTINCT vt0.c0) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST((NULL IN (vt0.c0, vt0.c0)) AS INTEGER) WHERE ((CAST(vt0.c0 AS TEXT) IN ())) ORDER BY (LOWER(DISTINCT vt0.c0) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CAST((NULL IN (vt0.c0, vt0.c0)) AS INTEGER) ORDER BY (LOWER(DISTINCT vt0.c0) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST((NULL IN (vt0.c0, vt0.c0)) AS INTEGER) WHERE ((CAST(vt0.c0 AS TEXT) IN ())) ORDER BY (LOWER(DISTINCT vt0.c0) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt1, vt0, t0 WHERE (t0.c0) ORDER BY (vt0.c0 IN (t0.c0)) COLLATE RTRIM DESC, (((vt1.c0))<((((vt0.c0) NOT NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (vt0.c0 IN (t0.c0)) COLLATE RTRIM DESC, (((vt1.c0))<((((vt0.c0) NOT NULL)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (t0.c0) ORDER BY (vt0.c0 IN (t0.c0)) COLLATE RTRIM DESC, (((vt1.c0))<((((vt0.c0) NOT NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (vt0.c0 IN (t0.c0)) COLLATE RTRIM DESC, (((vt1.c0))<((((vt0.c0) NOT NULL)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (t0.c0) ORDER BY (vt0.c0 IN (t0.c0)) COLLATE RTRIM DESC, (((vt1.c0))<((((vt0.c0) NOT NULL)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((0.9871405461867481)-(vt1.c0)) COLLATE NOCASE FULL OUTER JOIN t0 ON NULL WHERE ((- ((+ (vt0.c0))))) ORDER BY ((CASE x'57e4'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((0.9871405461867481)-(vt1.c0)) COLLATE NOCASE FULL OUTER JOIN t0 ON NULL ORDER BY ((CASE x'57e4'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((0.9871405461867481)-(vt1.c0)) COLLATE NOCASE FULL OUTER JOIN t0 ON NULL WHERE ((- ((+ (vt0.c0))))) ORDER BY ((CASE x'57e4'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((0.9871405461867481)-(vt1.c0)) COLLATE NOCASE FULL OUTER JOIN t0 ON NULL ORDER BY ((CASE x'57e4'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((0.9871405461867481)-(vt1.c0)) COLLATE NOCASE FULL OUTER JOIN t0 ON NULL WHERE ((- ((+ (vt0.c0))))) ORDER BY ((CASE x'57e4'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((((NULL)AND(t0.c0)))OR(t0.c0)) WHEN t0.c0 COLLATE NOCASE THEN (((t0.c0, vt0.c0, vt0.c0, t0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, t0.c0))) WHEN (- (t0.c0)) THEN (NOT (t0.c0)) WHEN ((t0.c0)AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN (((vt0.c0))>((vt0.c0))) THEN IFNULL(t0.c0, vt0.c0) END) ORDER BY (NOT ((((vt0.c0)) NOT BETWEEN (('%꺂䞧P')) AND ((t0.c0))))), ((CASE t0.c0  WHEN t0.c0 THEN '-1922352455' END) BETWEEN (0.9056722693103442) AND ((((t0.c0, vt0.c0, vt0.c0))<=((vt0.c0, t0.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN ((((NULL)AND(t0.c0)))OR(t0.c0)) WHEN t0.c0 COLLATE NOCASE THEN (((t0.c0, vt0.c0, vt0.c0, t0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, t0.c0))) WHEN (- (t0.c0)) THEN (NOT (t0.c0)) WHEN ((t0.c0)AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN (((vt0.c0))>((vt0.c0))) THEN IFNULL(t0.c0, vt0.c0) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT ((((vt0.c0)) NOT BETWEEN (('%꺂䞧P')) AND ((t0.c0))))), ((CASE t0.c0  WHEN t0.c0 THEN '-1922352455' END) BETWEEN (0.9056722693103442) AND ((((t0.c0, vt0.c0, vt0.c0))<=((vt0.c0, t0.c0, vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((((NULL)AND(t0.c0)))OR(t0.c0)) WHEN t0.c0 COLLATE NOCASE THEN (((t0.c0, vt0.c0, vt0.c0, t0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, t0.c0))) WHEN (- (t0.c0)) THEN (NOT (t0.c0)) WHEN ((t0.c0)AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN (((vt0.c0))>((vt0.c0))) THEN IFNULL(t0.c0, vt0.c0) END) ORDER BY (NOT ((((vt0.c0)) NOT BETWEEN (('%꺂䞧P')) AND ((t0.c0))))), ((CASE t0.c0  WHEN t0.c0 THEN '-1922352455' END) BETWEEN (0.9056722693103442) AND ((((t0.c0, vt0.c0, vt0.c0))<=((vt0.c0, t0.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN ((((NULL)AND(t0.c0)))OR(t0.c0)) WHEN t0.c0 COLLATE NOCASE THEN (((t0.c0, vt0.c0, vt0.c0, t0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, t0.c0))) WHEN (- (t0.c0)) THEN (NOT (t0.c0)) WHEN ((t0.c0)AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN (((vt0.c0))>((vt0.c0))) THEN IFNULL(t0.c0, vt0.c0) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT ((((vt0.c0)) NOT BETWEEN (('%꺂䞧P')) AND ((t0.c0))))), ((CASE t0.c0  WHEN t0.c0 THEN '-1922352455' END) BETWEEN (0.9056722693103442) AND ((((t0.c0, vt0.c0, vt0.c0))<=((vt0.c0, t0.c0, vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((((NULL)AND(t0.c0)))OR(t0.c0)) WHEN t0.c0 COLLATE NOCASE THEN (((t0.c0, vt0.c0, vt0.c0, t0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, t0.c0))) WHEN (- (t0.c0)) THEN (NOT (t0.c0)) WHEN ((t0.c0)AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN (((vt0.c0))>((vt0.c0))) THEN IFNULL(t0.c0, vt0.c0) END) ORDER BY (NOT ((((vt0.c0)) NOT BETWEEN (('%꺂䞧P')) AND ((t0.c0))))), ((CASE t0.c0  WHEN t0.c0 THEN '-1922352455' END) BETWEEN (0.9056722693103442) AND ((((t0.c0, vt0.c0, vt0.c0))<=((vt0.c0, t0.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT * FROM t0, vt0, vt1 WHERE (vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (vt0.c0 COLLATE BINARY);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON NULLIF(CASE NULL  WHEN vt0.c0 THEN '718874000' ELSE vt0.c0 END, ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON NULLIF(CASE NULL  WHEN vt0.c0 THEN '718874000' ELSE vt0.c0 END, ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON NULLIF(CASE NULL  WHEN vt0.c0 THEN '718874000' ELSE vt0.c0 END, ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON NULLIF(CASE NULL  WHEN vt0.c0 THEN '718874000' ELSE vt0.c0 END, ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON NULLIF(CASE NULL  WHEN vt0.c0 THEN '718874000' ELSE vt0.c0 END, ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))) WHERE (NULL);
SELECT * FROM vt0 WHERE (0.4247454661765633);
SELECT SUM(count) FROM (SELECT ((0.4247454661765633) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.4247454661765633);
SELECT SUM(count) FROM (SELECT ((0.4247454661765633) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.4247454661765633);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON 0.560387346644991 CROSS JOIN vt1 ON ((t0.c0 COLLATE RTRIM) ISNULL) WHERE (((((')c')GLOB(vt1.c0)))!=(((((vt0.c0)AND(t0.c0)))OR(vt0.c0))))) ORDER BY ((((vt0.c0 IN ('-1305463644'))))<>(((vt0.c0 IN (vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((')c')GLOB(vt1.c0)))<>(((((vt0.c0)AND(t0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON 0.560387346644991 CROSS JOIN vt1 ON ((t0.c0 COLLATE RTRIM) ISNULL) ORDER BY ((((vt0.c0 IN ('-1305463644'))))<>(((vt0.c0 IN (vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON 0.560387346644991 CROSS JOIN vt1 ON ((t0.c0 COLLATE RTRIM) ISNULL) WHERE (((((')c')GLOB(vt1.c0)))!=(((((vt0.c0)AND(t0.c0)))OR(vt0.c0))))) ORDER BY ((((vt0.c0 IN ('-1305463644'))))<>(((vt0.c0 IN (vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((')c')GLOB(vt1.c0)))<>(((((vt0.c0)AND(t0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON 0.560387346644991 CROSS JOIN vt1 ON ((t0.c0 COLLATE RTRIM) ISNULL) ORDER BY ((((vt0.c0 IN ('-1305463644'))))<>(((vt0.c0 IN (vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON 0.560387346644991 CROSS JOIN vt1 ON ((t0.c0 COLLATE RTRIM) ISNULL) WHERE (((((')c')GLOB(vt1.c0)))!=(((((vt0.c0)AND(t0.c0)))OR(vt0.c0))))) ORDER BY ((((vt0.c0 IN ('-1305463644'))))<>(((vt0.c0 IN (vt1.c0))))) DESC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE ((((t0.c0, t0.c0, vt0.c0)) BETWEEN (((((t0.c0)) BETWEEN ((1.499206479E9)) AND ((t0.c0))), ((vt0.c0)<<(t0.c0)), ((t0.c0)|(t0.c0)))) AND ((((vt0.c0)/(vt0.c0)), (vt0.c0 IN ()), (((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))))))) ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN ((((vt0.c0)OR(t0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN LOWER(DISTINCT t0.c0) THEN t0.c0 COLLATE NOCASE ELSE ((t0.c0) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, vt0.c0)) BETWEEN (((((t0.c0)) BETWEEN ((1.499206479E9)) AND ((t0.c0))), ((vt0.c0)<<(t0.c0)), ((t0.c0)|(t0.c0)))) AND ((((vt0.c0)/(vt0.c0)), (vt0.c0 IN ()), (((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN ((((vt0.c0)OR(t0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN LOWER(DISTINCT t0.c0) THEN t0.c0 COLLATE NOCASE ELSE ((t0.c0) IS TRUE) END ASC);
SELECT * FROM t0, vt0 WHERE ((((t0.c0, t0.c0, vt0.c0)) BETWEEN (((((t0.c0)) BETWEEN ((1.499206479E9)) AND ((t0.c0))), ((vt0.c0)<<(t0.c0)), ((t0.c0)|(t0.c0)))) AND ((((vt0.c0)/(vt0.c0)), (vt0.c0 IN ()), (((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))))))) ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN ((((vt0.c0)OR(t0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN LOWER(DISTINCT t0.c0) THEN t0.c0 COLLATE NOCASE ELSE ((t0.c0) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, vt0.c0)) BETWEEN (((((t0.c0)) BETWEEN ((1.499206479E9)) AND ((t0.c0))), ((vt0.c0)<<(t0.c0)), ((t0.c0)|(t0.c0)))) AND ((((vt0.c0)/(vt0.c0)), (vt0.c0 IN ()), (((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN ((((vt0.c0)OR(t0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN LOWER(DISTINCT t0.c0) THEN t0.c0 COLLATE NOCASE ELSE ((t0.c0) IS TRUE) END ASC);
SELECT * FROM t0, vt0 WHERE ((((t0.c0, t0.c0, vt0.c0)) BETWEEN (((((t0.c0)) BETWEEN ((1.499206479E9)) AND ((t0.c0))), ((vt0.c0)<<(t0.c0)), ((t0.c0)|(t0.c0)))) AND ((((vt0.c0)/(vt0.c0)), (vt0.c0 IN ()), (((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))))))) ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN ((((vt0.c0)OR(t0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN LOWER(DISTINCT t0.c0) THEN t0.c0 COLLATE NOCASE ELSE ((t0.c0) IS TRUE) END ASC;
SELECT * FROM vt1, vt0 NOT INDEXED WHERE (TOTAL_CHANGES()) ORDER BY (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 NOT INDEXED WHERE (TOTAL_CHANGES()) ORDER BY (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 NOT INDEXED WHERE (TOTAL_CHANGES()) ORDER BY (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1, t0 WHERE ('c(VT');
SELECT SUM(count) FROM (SELECT ALL (('c(VT') IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ('c(VT');
SELECT SUM(count) FROM (SELECT ALL (('c(VT') IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ('c(VT');
SELECT COUNT(*) FROM t0 WHERE (ABS('(ᙼ')) ORDER BY CAST(t0.c0 AS NUMERIC)  NULLS FIRST, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS('(ᙼ')) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 AS NUMERIC)  NULLS FIRST, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (ABS('(ᙼ')) ORDER BY CAST(t0.c0 AS NUMERIC)  NULLS FIRST, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS('(ᙼ')) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 AS NUMERIC)  NULLS FIRST, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (ABS('(ᙼ')) ORDER BY CAST(t0.c0 AS NUMERIC)  NULLS FIRST, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 INDEXED BY i91 WHERE ((((vt1.c0)<(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)<(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, t0 INDEXED BY i91);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 INDEXED BY i91 WHERE ((((vt1.c0)<(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)<(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, t0 INDEXED BY i91);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 INDEXED BY i91 WHERE ((((vt1.c0)<(vt1.c0)) IN ()));
SELECT ALL * FROM vt1 WHERE (0.2972956169277974) ORDER BY 1158729083;
SELECT SUM(count) FROM (SELECT ((0.2972956169277974) IS TRUE)  as count FROM vt1 ORDER BY 1158729083);
SELECT ALL * FROM vt1 WHERE (0.2972956169277974) ORDER BY 1158729083;
SELECT SUM(count) FROM (SELECT ((0.2972956169277974) IS TRUE)  as count FROM vt1 ORDER BY 1158729083);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE (NOT (vt0.c0))  WHEN CAST(NULL AS BLOB) THEN (+ (vt1.c0)) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN NULLIF(DISTINCT vt1.c0, vt0.c0) WHEN ((vt1.c0) ISNULL) THEN CASE WHEN vt0.c0 THEN vt1.c0 END END WHERE (vt0.c0) ORDER BY ((NULL)>(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE (NOT (vt0.c0))  WHEN CAST(NULL AS BLOB) THEN (+ (vt1.c0)) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN NULLIF(DISTINCT vt1.c0, vt0.c0) WHEN ((vt1.c0) ISNULL) THEN CASE WHEN vt0.c0 THEN vt1.c0 END END ORDER BY ((NULL)>(vt0.c0)) ASC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE (NOT (vt0.c0))  WHEN CAST(NULL AS BLOB) THEN (+ (vt1.c0)) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN NULLIF(DISTINCT vt1.c0, vt0.c0) WHEN ((vt1.c0) ISNULL) THEN CASE WHEN vt0.c0 THEN vt1.c0 END END WHERE (vt0.c0) ORDER BY ((NULL)>(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE (NOT (vt0.c0))  WHEN CAST(NULL AS BLOB) THEN (+ (vt1.c0)) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN NULLIF(DISTINCT vt1.c0, vt0.c0) WHEN ((vt1.c0) ISNULL) THEN CASE WHEN vt0.c0 THEN vt1.c0 END END ORDER BY ((NULL)>(vt0.c0)) ASC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE (NOT (vt0.c0))  WHEN CAST(NULL AS BLOB) THEN (+ (vt1.c0)) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN NULLIF(DISTINCT vt1.c0, vt0.c0) WHEN ((vt1.c0) ISNULL) THEN CASE WHEN vt0.c0 THEN vt1.c0 END END WHERE (vt0.c0) ORDER BY ((NULL)>(vt0.c0)) ASC;
SELECT * FROM vt0 WHERE (((((x'')AND(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((+ (vt0.c0))))) ORDER BY 0.7200728804222933 COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')AND(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 0.7200728804222933 COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((x'')AND(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((+ (vt0.c0))))) ORDER BY 0.7200728804222933 COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')AND(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 0.7200728804222933 COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((x'')AND(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((+ (vt0.c0))))) ORDER BY 0.7200728804222933 COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0)&(t0.c0)))) AND ((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((((t0.c0)&(t0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0)&(t0.c0)))) AND ((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((((t0.c0)&(t0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0)&(t0.c0)))) AND ((vt0.c0 COLLATE BINARY))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY LTRIM((~ (vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY LTRIM((~ (vt1.c0)))  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY LTRIM((~ (vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY LTRIM((~ (vt1.c0)))  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY LTRIM((~ (vt1.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((((((vt1.c0, t0.c0, vt1.c0)) BETWEEN ((NULL, vt0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, t0.c0))))AND(((t0.c0) NOTNULL))))OR('-2111422660'))) ORDER BY (((vt1.c0)) NOT BETWEEN (((((vt1.c0, vt1.c0, vt0.c0))<>((vt0.c0, vt1.c0, vt0.c0))))) AND ((((t0.c0)<(t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0, t0.c0, vt1.c0)) BETWEEN ((NULL, vt0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, t0.c0))))AND(((t0.c0) NOTNULL))))OR('-2111422660'))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((vt1.c0)) NOT BETWEEN (((((vt1.c0, vt1.c0, vt0.c0))<>((vt0.c0, vt1.c0, vt0.c0))))) AND ((((t0.c0)<(t0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((((((vt1.c0, t0.c0, vt1.c0)) BETWEEN ((NULL, vt0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, t0.c0))))AND(((t0.c0) NOTNULL))))OR('-2111422660'))) ORDER BY (((vt1.c0)) NOT BETWEEN (((((vt1.c0, vt1.c0, vt0.c0))<>((vt0.c0, vt1.c0, vt0.c0))))) AND ((((t0.c0)<(t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0, t0.c0, vt1.c0)) BETWEEN ((NULL, vt0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, t0.c0))))AND(((t0.c0) NOTNULL))))OR('-2111422660'))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((vt1.c0)) NOT BETWEEN (((((vt1.c0, vt1.c0, vt0.c0))<>((vt0.c0, vt1.c0, vt0.c0))))) AND ((((t0.c0)<(t0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((((((vt1.c0, t0.c0, vt1.c0)) BETWEEN ((NULL, vt0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, t0.c0))))AND(((t0.c0) NOTNULL))))OR('-2111422660'))) ORDER BY (((vt1.c0)) NOT BETWEEN (((((vt1.c0, vt1.c0, vt0.c0))<>((vt0.c0, vt1.c0, vt0.c0))))) AND ((((t0.c0)<(t0.c0)))))  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON t0.c0 INNER JOIN t0 ON CASE WHEN ((vt0.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN t0.c0 WHEN (NULL IN ()) THEN vt0.c0 WHEN 0.3480736309922655 THEN (vt1.c0 IN ()) ELSE ((((t0.c0)OR(t0.c0)))AND(vt1.c0)) END WHERE (CASE (((vt1.c0))=((vt1.c0)))  WHEN (NOT ('')) THEN ((((vt1.c0)OR(vt0.c0)))OR(0X595c134f)) ELSE CASE WHEN t0.c0 THEN vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c0))=((vt1.c0)))  WHEN (NOT ('')) THEN ((((vt1.c0)OR(vt0.c0)))OR(0X595c134f)) ELSE CASE WHEN t0.c0 THEN vt1.c0 END END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON t0.c0 INNER JOIN t0 ON CASE WHEN ((vt0.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN t0.c0 WHEN (NULL IN ()) THEN vt0.c0 WHEN 0.3480736309922655 THEN (vt1.c0 IN ()) ELSE ((((t0.c0)OR(t0.c0)))AND(vt1.c0)) END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON t0.c0 INNER JOIN t0 ON CASE WHEN ((vt0.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN t0.c0 WHEN (NULL IN ()) THEN vt0.c0 WHEN 0.3480736309922655 THEN (vt1.c0 IN ()) ELSE ((((t0.c0)OR(t0.c0)))AND(vt1.c0)) END WHERE (CASE (((vt1.c0))=((vt1.c0)))  WHEN (NOT ('')) THEN ((((vt1.c0)OR(vt0.c0)))OR(0X595c134f)) ELSE CASE WHEN t0.c0 THEN vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c0))=((vt1.c0)))  WHEN (NOT ('')) THEN ((((vt1.c0)OR(vt0.c0)))OR(0X595c134f)) ELSE CASE WHEN t0.c0 THEN vt1.c0 END END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON t0.c0 INNER JOIN t0 ON CASE WHEN ((vt0.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN t0.c0 WHEN (NULL IN ()) THEN vt0.c0 WHEN 0.3480736309922655 THEN (vt1.c0 IN ()) ELSE ((((t0.c0)OR(t0.c0)))AND(vt1.c0)) END);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0)>(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))) ORDER BY (((t0.c0 COLLATE RTRIM, COALESCE(DISTINCT t0.c0, NULL, t0.c0, t0.c0), CASE x''  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))<((CASE WHEN '-1305463644' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (t0.c0 IN (t0.c0)), ((t0.c0)>>(t0.c0))))) ASC  NULLS LAST, ((CAST(t0.c0 AS BLOB)) BETWEEN ((((t0.c0))<>((t0.c0)))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((((t0.c0)>(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 COLLATE RTRIM, COALESCE(DISTINCT t0.c0, NULL, t0.c0, t0.c0), CASE x''  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))<((CASE WHEN '-1305463644' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (t0.c0 IN (t0.c0)), ((t0.c0)>>(t0.c0))))) ASC  NULLS LAST, ((CAST(t0.c0 AS BLOB)) BETWEEN ((((t0.c0))!=((t0.c0)))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0)>(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))) ORDER BY (((t0.c0 COLLATE RTRIM, COALESCE(DISTINCT t0.c0, NULL, t0.c0, t0.c0), CASE x''  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))<((CASE WHEN '-1305463644' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (t0.c0 IN (t0.c0)), ((t0.c0)>>(t0.c0))))) ASC  NULLS LAST, ((CAST(t0.c0 AS BLOB)) BETWEEN ((((t0.c0))<>((t0.c0)))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((((t0.c0)>(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 COLLATE RTRIM, COALESCE(DISTINCT t0.c0, NULL, t0.c0, t0.c0), CASE x''  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))<((CASE WHEN '-1305463644' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (t0.c0 IN (t0.c0)), ((t0.c0)>>(t0.c0))))) ASC  NULLS LAST, ((CAST(t0.c0 AS BLOB)) BETWEEN ((((t0.c0))!=((t0.c0)))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0)>(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))) ORDER BY (((t0.c0 COLLATE RTRIM, COALESCE(DISTINCT t0.c0, NULL, t0.c0, t0.c0), CASE x''  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))<((CASE WHEN '-1305463644' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (t0.c0 IN (t0.c0)), ((t0.c0)>>(t0.c0))))) ASC  NULLS LAST, ((CAST(t0.c0 AS BLOB)) BETWEEN ((((t0.c0))<>((t0.c0)))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((((t0.c0))==((vt1.c0)))) NOT BETWEEN ((t0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))==((vt1.c0)))) NOT BETWEEN ((t0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((((t0.c0))==((vt1.c0)))) NOT BETWEEN ((t0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))==((vt1.c0)))) NOT BETWEEN ((t0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((((t0.c0))==((vt1.c0)))) NOT BETWEEN ((t0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CAST(((t0.c0)GLOB(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)GLOB(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CAST(((t0.c0)GLOB(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)GLOB(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CAST(((t0.c0)GLOB(vt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS TEXT) WHERE (CAST((vt1.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS TEXT) WHERE (CAST((vt1.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS TEXT) WHERE (CAST((vt1.c0 IN ()) AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN ()) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN ()) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN ()) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN ()) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN ()) IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM vt0, vt1, t0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS NUMERIC));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0)||(0Xffffffffe4898e05)) AS INTEGER) RIGHT OUTER JOIN t0 ON ((t0.c0)|(LIKE(vt0.c0, vt0.c0, 'P'))) WHERE (((((((((x'')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)) COLLATE RTRIM) ORDER BY (((t0.c0 IN ()))<=(CASE WHEN t0.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0)||(0Xffffffffe4898e05)) AS INTEGER) RIGHT OUTER JOIN t0 ON ((t0.c0)|(LIKE(vt0.c0, vt0.c0, 'P'))) ORDER BY (((t0.c0 IN ()))<=(CASE WHEN t0.c0 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0)||(0Xffffffffe4898e05)) AS INTEGER) RIGHT OUTER JOIN t0 ON ((t0.c0)|(LIKE(vt0.c0, vt0.c0, 'P'))) WHERE (((((((((x'')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)) COLLATE RTRIM) ORDER BY (((t0.c0 IN ()))<=(CASE WHEN t0.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0)||(0Xffffffffe4898e05)) AS INTEGER) RIGHT OUTER JOIN t0 ON ((t0.c0)|(LIKE(vt0.c0, vt0.c0, 'P'))) ORDER BY (((t0.c0 IN ()))<=(CASE WHEN t0.c0 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0)||(0Xffffffffe4898e05)) AS INTEGER) RIGHT OUTER JOIN t0 ON ((t0.c0)|(LIKE(vt0.c0, vt0.c0, 'P'))) WHERE (((((((((x'')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)) COLLATE RTRIM) ORDER BY (((t0.c0 IN ()))<=(CASE WHEN t0.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0, vt1 WHERE (vt1.c0) ORDER BY (((((vt0.c0)OR(t0.c0)))OR(vt1.c0)) IN (((vt0.c0)>(t0.c0)), (vt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((((vt0.c0)OR(t0.c0)))OR(vt1.c0)) IN (((vt0.c0)>(t0.c0)), (vt1.c0 IN ()))) DESC);
SELECT ALL * FROM t0, vt0, vt1 WHERE (vt1.c0) ORDER BY (((((vt0.c0)OR(t0.c0)))OR(vt1.c0)) IN (((vt0.c0)>(t0.c0)), (vt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((((vt0.c0)OR(t0.c0)))OR(vt1.c0)) IN (((vt0.c0)>(t0.c0)), (vt1.c0 IN ()))) DESC);
SELECT ALL * FROM t0, vt0, vt1 WHERE (vt1.c0) ORDER BY (((((vt0.c0)OR(t0.c0)))OR(vt1.c0)) IN (((vt0.c0)>(t0.c0)), (vt1.c0 IN ()))) DESC;
SELECT * FROM vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT * FROM vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT * FROM vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN vt1 ON TYPEOF(((t0.c0) NOT NULL)) WHERE ((+ (QUOTE(t0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (QUOTE(t0.c0)))) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON TYPEOF(((t0.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN vt1 ON TYPEOF(((t0.c0) NOT NULL)) WHERE ((+ (QUOTE(t0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (QUOTE(t0.c0)))) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON TYPEOF(((t0.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN vt1 ON TYPEOF(((t0.c0) NOT NULL)) WHERE ((+ (QUOTE(t0.c0))));
SELECT ALL * FROM vt0 INDEXED BY i91 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 THEN ((vt0.c0)>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 THEN ((vt0.c0)>(vt0.c0)) END) IS TRUE)  as count FROM vt0 INDEXED BY i91);
SELECT ALL * FROM vt0 INDEXED BY i91 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 THEN ((vt0.c0)>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 THEN ((vt0.c0)>(vt0.c0)) END) IS TRUE)  as count FROM vt0 INDEXED BY i91);
SELECT * FROM vt0, t0, vt1 WHERE ((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))AND(NULL)))AND(t0.c0)), (((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((t0.c0, t0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, t0.c0))), ((t0.c0) NOT NULL))) AND (((((vt0.c0))<=(('-819959584'))), ((vt1.c0)IS(vt0.c0)), (NOT (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))AND(NULL)))AND(t0.c0)), (((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((t0.c0, t0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, t0.c0))), ((t0.c0) NOT NULL))) AND (((((vt0.c0))<=(('-819959584'))), ((vt1.c0)IS(vt0.c0)), (NOT (t0.c0)))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE ((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))AND(NULL)))AND(t0.c0)), (((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((t0.c0, t0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, t0.c0))), ((t0.c0) NOT NULL))) AND (((((vt0.c0))<=(('-819959584'))), ((vt1.c0)IS(vt0.c0)), (NOT (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))AND(NULL)))AND(t0.c0)), (((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((t0.c0, t0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, t0.c0))), ((t0.c0) NOT NULL))) AND (((((vt0.c0))<=(('-819959584'))), ((vt1.c0)IS(vt0.c0)), (NOT (t0.c0)))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE ((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))AND(NULL)))AND(t0.c0)), (((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((t0.c0, t0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, t0.c0))), ((t0.c0) NOT NULL))) AND (((((vt0.c0))<=(('-819959584'))), ((vt1.c0)IS(vt0.c0)), (NOT (t0.c0))))));
SELECT COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((UNICODE(vt0.c0))<=(SQLITE_VERSION())) WHERE ((- (((vt0.c0)/(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)/(t0.c0))))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((UNICODE(vt0.c0))<=(SQLITE_VERSION())));
SELECT COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((UNICODE(vt0.c0))<=(SQLITE_VERSION())) WHERE ((- (((vt0.c0)/(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)/(t0.c0))))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((UNICODE(vt0.c0))<=(SQLITE_VERSION())));
SELECT COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((UNICODE(vt0.c0))<=(SQLITE_VERSION())) WHERE ((- (((vt0.c0)/(t0.c0)))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((x'c026')>(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'c026')>(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((x'c026')>(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'c026')>(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((x'c026')>(((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((JULIANDAY(vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))GLOB(CAST(vt0.c0 AS NUMERIC))) WHERE ((((((vt1.c0 IN ()))OR(((vt0.c0)/(vt1.c0)))))OR((NOT (vt1.c0))))) ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN HEX(vt1.c0) THEN ((((vt0.c0)OR('-71699994')))AND(vt1.c0)) ELSE COALESCE(vt1.c0, 0.26682051031689225) END;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN ()))OR(((vt0.c0)/(vt1.c0)))))OR((NOT (vt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((JULIANDAY(vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))GLOB(CAST(vt0.c0 AS NUMERIC))) ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN HEX(vt1.c0) THEN ((((vt0.c0)OR('-71699994')))AND(vt1.c0)) ELSE COALESCE(vt1.c0, 0.26682051031689225) END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((JULIANDAY(vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))GLOB(CAST(vt0.c0 AS NUMERIC))) WHERE ((((((vt1.c0 IN ()))OR(((vt0.c0)/(vt1.c0)))))OR((NOT (vt1.c0))))) ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN HEX(vt1.c0) THEN ((((vt0.c0)OR('-71699994')))AND(vt1.c0)) ELSE COALESCE(vt1.c0, 0.26682051031689225) END;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN ()))OR(((vt0.c0)/(vt1.c0)))))OR((NOT (vt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((JULIANDAY(vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))GLOB(CAST(vt0.c0 AS NUMERIC))) ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN HEX(vt1.c0) THEN ((((vt0.c0)OR('-71699994')))AND(vt1.c0)) ELSE COALESCE(vt1.c0, 0.26682051031689225) END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((JULIANDAY(vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))GLOB(CAST(vt0.c0 AS NUMERIC))) WHERE ((((((vt1.c0 IN ()))OR(((vt0.c0)/(vt1.c0)))))OR((NOT (vt1.c0))))) ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN HEX(vt1.c0) THEN ((((vt0.c0)OR('-71699994')))AND(vt1.c0)) ELSE COALESCE(vt1.c0, 0.26682051031689225) END;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt0.c0)/(vt1.c0)))) AND ((vt1.c0)))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (NULL) AND (((vt0.c0)|(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((vt0.c0)/(vt1.c0)))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (NULL) AND (((vt0.c0)|(vt1.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt0.c0)/(vt1.c0)))) AND ((vt1.c0)))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (NULL) AND (((vt0.c0)|(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((vt0.c0)/(vt1.c0)))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (NULL) AND (((vt0.c0)|(vt1.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt0.c0)/(vt1.c0)))) AND ((vt1.c0)))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (NULL) AND (((vt0.c0)|(vt1.c0))));
SELECT * FROM t0, vt1 WHERE ((NOT (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c0))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((NOT (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c0))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((NOT (t0.c0)));
SELECT * FROM vt1, t0 WHERE ((((((- (vt1.c0)))AND(((vt1.c0) NOT NULL))))OR(json_remove(t0.c0, vt1.c0)))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt1.c0)))AND(((vt1.c0) NOT NULL))))OR(json_remove(t0.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c0);
SELECT * FROM vt1, t0 WHERE ((((((- (vt1.c0)))AND(((vt1.c0) NOT NULL))))OR(json_remove(t0.c0, vt1.c0)))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt1.c0)))AND(((vt1.c0) NOT NULL))))OR(json_remove(t0.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c0);
SELECT * FROM vt0, t0 WHERE (UNLIKELY(vt0.c0 COLLATE BINARY)) ORDER BY ((((0.9056722693103442)AND(((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))))OR(QUOTE(t0.c0))) ASC, x'' DESC, CASE vt0.c0  WHEN JULIANDAY(t0.c0, '', vt0.c0) THEN NULL END ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((0.9056722693103442)AND(((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))))OR(QUOTE(t0.c0))) ASC, x'' DESC, CASE vt0.c0  WHEN JULIANDAY(t0.c0, '', vt0.c0) THEN NULL END ASC);
SELECT * FROM vt0, t0 WHERE (UNLIKELY(vt0.c0 COLLATE BINARY)) ORDER BY ((((0.9056722693103442)AND(((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))))OR(QUOTE(t0.c0))) ASC, x'' DESC, CASE vt0.c0  WHEN JULIANDAY(t0.c0, '', vt0.c0) THEN NULL END ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((0.9056722693103442)AND(((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))))OR(QUOTE(t0.c0))) ASC, x'' DESC, CASE vt0.c0  WHEN JULIANDAY(t0.c0, '', vt0.c0) THEN NULL END ASC);
SELECT * FROM vt0, t0 WHERE (UNLIKELY(vt0.c0 COLLATE BINARY)) ORDER BY ((((0.9056722693103442)AND(((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))))OR(QUOTE(t0.c0))) ASC, x'' DESC, CASE vt0.c0  WHEN JULIANDAY(t0.c0, '', vt0.c0) THEN NULL END ASC;
SELECT ALL * FROM vt0, t0 INDEXED BY i59, vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CAST(x'921c' AS TEXT)) AND ((+ (vt1.c0))))) ORDER BY (((((vt0.c0, t0.c0, vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, t0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c0, vt1.c0, vt1.c0, x'f976')))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN (CAST(x'921c' AS TEXT)) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i59, vt1 ORDER BY (((((vt0.c0, t0.c0, vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, t0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c0, vt1.c0, vt1.c0, x'f976')))) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 INDEXED BY i59, vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CAST(x'921c' AS TEXT)) AND ((+ (vt1.c0))))) ORDER BY (((((vt0.c0, t0.c0, vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, t0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c0, vt1.c0, vt1.c0, x'f976')))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN (CAST(x'921c' AS TEXT)) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i59, vt1 ORDER BY (((((vt0.c0, t0.c0, vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, t0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c0, vt1.c0, vt1.c0, x'f976')))) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 INDEXED BY i59, vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CAST(x'921c' AS TEXT)) AND ((+ (vt1.c0))))) ORDER BY (((((vt0.c0, t0.c0, vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, t0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c0, vt1.c0, vt1.c0, x'f976')))) IS FALSE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0)IS(vt0.c0))))>(('314733024')))) ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN ((vt1.c0)!=(vt1.c0)) THEN vt1.c0 COLLATE RTRIM END DESC, (((-99676247))<>(((vt1.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)IS(vt0.c0))))>(('314733024')))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN ((vt1.c0)!=(vt1.c0)) THEN vt1.c0 COLLATE RTRIM END DESC, (((-99676247))!=(((vt1.c0 IN ()))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0)IS(vt0.c0))))>(('314733024')))) ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN ((vt1.c0)!=(vt1.c0)) THEN vt1.c0 COLLATE RTRIM END DESC, (((-99676247))<>(((vt1.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)IS(vt0.c0))))>(('314733024')))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN ((vt1.c0)!=(vt1.c0)) THEN vt1.c0 COLLATE RTRIM END DESC, (((-99676247))!=(((vt1.c0 IN ()))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0)IS(vt0.c0))))>(('314733024')))) ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN ((vt1.c0)!=(vt1.c0)) THEN vt1.c0 COLLATE RTRIM END DESC, (((-99676247))<>(((vt1.c0 IN ()))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY)<(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))) WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (CASE WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (CASE WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY)<(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY)<(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))) WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (CASE WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (CASE WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY)<(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY)<(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))) WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (CASE WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END)));
SELECT * FROM t0 INNER JOIN vt0 ON ((t0.c0)AND(vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON json_insert(t0.c0, t0.c0, vt1.c0) WHERE (((CAST(t0.c0 AS REAL))AND((((NULL))>((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL))AND((((NULL))>((t0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((t0.c0)AND(vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON json_insert(t0.c0, t0.c0, vt1.c0));
SELECT * FROM t0 INNER JOIN vt0 ON ((t0.c0)AND(vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON json_insert(t0.c0, t0.c0, vt1.c0) WHERE (((CAST(t0.c0 AS REAL))AND((((NULL))>((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL))AND((((NULL))>((t0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((t0.c0)AND(vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON json_insert(t0.c0, t0.c0, vt1.c0));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((t0.c0)>(t0.c0))) BETWEEN (((vt0.c0)>(t0.c0))) AND (json_patch(vt1.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t0.c0))) BETWEEN (((vt0.c0)>(t0.c0))) AND (json_patch(vt1.c0, t0.c0)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((t0.c0)>(t0.c0))) BETWEEN (((vt0.c0)>(t0.c0))) AND (json_patch(vt1.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t0.c0))) BETWEEN (((vt0.c0)>(t0.c0))) AND (json_patch(vt1.c0, t0.c0)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN ((t0.c0) IS TRUE) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) ORDER BY ((t0.c0)=(t0.c0)) COLLATE RTRIM ASC  NULLS LAST, STRFTIME((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0)>(t0.c0)), (((t0.c0))>=((t0.c0)))) DESC  NULLS LAST, (((-538047574)) BETWEEN ((t0.c0)) AND (((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE t0.c0 COLLATE BINARY  WHEN ((t0.c0) IS TRUE) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)=(t0.c0)) COLLATE RTRIM ASC  NULLS LAST, STRFTIME((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0)>(t0.c0)), (((t0.c0))>=((t0.c0)))) DESC  NULLS LAST, (((-538047574)) BETWEEN ((t0.c0)) AND (((NOT (t0.c0))))));
SELECT ALL * FROM t0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN ((t0.c0) IS TRUE) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) ORDER BY ((t0.c0)=(t0.c0)) COLLATE RTRIM ASC  NULLS LAST, STRFTIME((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0)>(t0.c0)), (((t0.c0))>=((t0.c0)))) DESC  NULLS LAST, (((-538047574)) BETWEEN ((t0.c0)) AND (((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE t0.c0 COLLATE BINARY  WHEN ((t0.c0) IS TRUE) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)=(t0.c0)) COLLATE RTRIM ASC  NULLS LAST, STRFTIME((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0)>(t0.c0)), (((t0.c0))>=((t0.c0)))) DESC  NULLS LAST, (((-538047574)) BETWEEN ((t0.c0)) AND (((NOT (t0.c0))))));
SELECT ALL * FROM t0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN ((t0.c0) IS TRUE) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) ORDER BY ((t0.c0)=(t0.c0)) COLLATE RTRIM ASC  NULLS LAST, STRFTIME((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0)>(t0.c0)), (((t0.c0))>=((t0.c0)))) DESC  NULLS LAST, (((-538047574)) BETWEEN ((t0.c0)) AND (((NOT (t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE BINARY) ORDER BY ((((NULL) NOT NULL)) BETWEEN ((t0.c0 IN ())) AND (CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST, CAST(t0.c0 COLLATE RTRIM AS REAL), ((((t0.c0) BETWEEN (t0.c0) AND (0.6913861944737634)))/(COALESCE(t0.c0, t0.c0, t0.c0, t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((NULL) NOT NULL)) BETWEEN ((t0.c0 IN ())) AND (CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST, CAST(t0.c0 COLLATE RTRIM AS REAL), ((((t0.c0) BETWEEN (t0.c0) AND (0.6913861944737634)))/(COALESCE(t0.c0, t0.c0, t0.c0, t0.c0))) ASC);
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE BINARY) ORDER BY ((((NULL) NOT NULL)) BETWEEN ((t0.c0 IN ())) AND (CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST, CAST(t0.c0 COLLATE RTRIM AS REAL), ((((t0.c0) BETWEEN (t0.c0) AND (0.6913861944737634)))/(COALESCE(t0.c0, t0.c0, t0.c0, t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((NULL) NOT NULL)) BETWEEN ((t0.c0 IN ())) AND (CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST, CAST(t0.c0 COLLATE RTRIM AS REAL), ((((t0.c0) BETWEEN (t0.c0) AND (0.6913861944737634)))/(COALESCE(t0.c0, t0.c0, t0.c0, t0.c0))) ASC);
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE BINARY) ORDER BY ((((NULL) NOT NULL)) BETWEEN ((t0.c0 IN ())) AND (CASE WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST, CAST(t0.c0 COLLATE RTRIM AS REAL), ((((t0.c0) BETWEEN (t0.c0) AND (0.6913861944737634)))/(COALESCE(t0.c0, t0.c0, t0.c0, t0.c0))) ASC;
SELECT * FROM vt1, vt0 WHERE ((~ (''))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (''))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((~ (''))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (''))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((~ (''))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE ((((~ (t0.c0)))>(0.39791740959781674)));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))>(0.39791740959781674))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE ((((~ (t0.c0)))>(0.39791740959781674)));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))>(0.39791740959781674))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE ((((~ (t0.c0)))>(0.39791740959781674)));
SELECT ALL * FROM vt1 WHERE ((+ (((x'') BETWEEN (NULL) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((x'') BETWEEN (NULL) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (((x'') BETWEEN (NULL) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((x'') BETWEEN (NULL) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (((x'') BETWEEN (NULL) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON t0.c0 WHERE ((+ (((vt0.c0)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c0);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON t0.c0 WHERE ((+ (((vt0.c0)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c0);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON t0.c0 WHERE ((+ (((vt0.c0)IS NOT(t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) ORDER BY (~ (t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) ORDER BY (~ (t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) ORDER BY (~ (t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0)*(vt0.c0)))));
SELECT * FROM vt1 INNER JOIN t0 ON HEX(DISTINCT ((vt1.c0)!=(t0.c0))) RIGHT OUTER JOIN vt0 ON ((((((((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((t0.c0)/(vt1.c0)))))AND(((vt0.c0)/(t0.c0)))))OR(TYPEOF(vt1.c0))) WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY ((json(vt0.c0))>=(t0.c0 COLLATE NOCASE)), CASE (((vt1.c0))=((x'')))  WHEN vt1.c0 THEN x'' WHEN json_array_length(0xffffffffb23034a4) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN t0.c0 THEN 7.56857268E8 END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON HEX(DISTINCT ((vt1.c0)<>(t0.c0))) RIGHT OUTER JOIN vt0 ON ((((((((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((t0.c0)/(vt1.c0)))))AND(((vt0.c0)/(t0.c0)))))OR(TYPEOF(vt1.c0))) ORDER BY ((json(vt0.c0))>=(t0.c0 COLLATE NOCASE)), CASE (((vt1.c0))=((x'')))  WHEN vt1.c0 THEN x'' WHEN json_array_length(0xffffffffb23034a4) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN t0.c0 THEN 7.56857268E8 END ASC);
SELECT * FROM vt1 INNER JOIN t0 ON HEX(DISTINCT ((vt1.c0)!=(t0.c0))) RIGHT OUTER JOIN vt0 ON ((((((((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((t0.c0)/(vt1.c0)))))AND(((vt0.c0)/(t0.c0)))))OR(TYPEOF(vt1.c0))) WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY ((json(vt0.c0))>=(t0.c0 COLLATE NOCASE)), CASE (((vt1.c0))=((x'')))  WHEN vt1.c0 THEN x'' WHEN json_array_length(0xffffffffb23034a4) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN t0.c0 THEN 7.56857268E8 END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON HEX(DISTINCT ((vt1.c0)<>(t0.c0))) RIGHT OUTER JOIN vt0 ON ((((((((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((t0.c0)/(vt1.c0)))))AND(((vt0.c0)/(t0.c0)))))OR(TYPEOF(vt1.c0))) ORDER BY ((json(vt0.c0))>=(t0.c0 COLLATE NOCASE)), CASE (((vt1.c0))=((x'')))  WHEN vt1.c0 THEN x'' WHEN json_array_length(0xffffffffb23034a4) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN t0.c0 THEN 7.56857268E8 END ASC);
SELECT ALL * FROM vt1 WHERE ((((('' COLLATE NOCASE)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('' COLLATE NOCASE)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((('' COLLATE NOCASE)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('' COLLATE NOCASE)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((('' COLLATE NOCASE)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)  NULLS LAST;
SELECT * FROM t0, vt1 NATURAL JOIN vt0 WHERE (load_extension(vt0.c0 COLLATE BINARY, LOWER(DISTINCT vt1.c0))) ORDER BY (- (UNLIKELY(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(vt0.c0 COLLATE BINARY, LOWER(DISTINCT vt1.c0))) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0 ORDER BY (- (UNLIKELY(DISTINCT vt0.c0))) ASC);
SELECT * FROM t0, vt1 NATURAL JOIN vt0 WHERE (load_extension(vt0.c0 COLLATE BINARY, LOWER(DISTINCT vt1.c0))) ORDER BY (- (UNLIKELY(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(vt0.c0 COLLATE BINARY, LOWER(DISTINCT vt1.c0))) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0 ORDER BY (- (UNLIKELY(DISTINCT vt0.c0))) ASC);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((~ (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((~ (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((~ (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CAST(0.9337367156756836 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(0.9337367156756836 AS REAL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CAST(0.9337367156756836 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(0.9337367156756836 AS REAL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CAST(0.9337367156756836 AS REAL));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (t0.c0);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (x'') ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND (((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND (((~ (vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (x'') ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND (((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND (((~ (vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (x'') ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND (((~ (vt1.c0)))));
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER)) ORDER BY ((((((vt1.c0)<('')))OR((- (vt1.c0)))))AND(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)<('')))OR((- (vt1.c0)))))AND(vt1.c0)) DESC);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER)) ORDER BY ((((((vt1.c0)<('')))OR((- (vt1.c0)))))AND(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)<('')))OR((- (vt1.c0)))))AND(vt1.c0)) DESC);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER)) ORDER BY ((((((vt1.c0)<('')))OR((- (vt1.c0)))))AND(vt1.c0)) DESC;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL))=(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))==(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL))=(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))==(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL))=(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT * FROM vt1, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))/(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))))) ORDER BY ((NULL) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))/(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((NULL) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))/(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))))) ORDER BY ((NULL) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))/(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((NULL) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))/(((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))))) ORDER BY ((NULL) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (STRFTIME(CAST(vt0.c0 AS REAL), (((vt1.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0))), CASE WHEN vt1.c0 THEN vt0.c0 END)) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0xffffffffc648c3ba THEN vt1.c0 WHEN vt1.c0 THEN 0.16090764594865314 ELSE vt1.c0 END AS REAL)  NULLS FIRST, TRIM(DISTINCT (vt0.c0 IN ()), CAST(vt1.c0 AS TEXT)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(CAST(vt0.c0 AS REAL), (((vt1.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0))), CASE WHEN vt1.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0Xffffffffc648c3ba THEN vt1.c0 WHEN vt1.c0 THEN 0.16090764594865314 ELSE vt1.c0 END AS REAL)  NULLS FIRST, TRIM(DISTINCT (vt0.c0 IN ()), CAST(vt1.c0 AS TEXT)) ASC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (STRFTIME(CAST(vt0.c0 AS REAL), (((vt1.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0))), CASE WHEN vt1.c0 THEN vt0.c0 END)) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0xffffffffc648c3ba THEN vt1.c0 WHEN vt1.c0 THEN 0.16090764594865314 ELSE vt1.c0 END AS REAL)  NULLS FIRST, TRIM(DISTINCT (vt0.c0 IN ()), CAST(vt1.c0 AS TEXT)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(CAST(vt0.c0 AS REAL), (((vt1.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0))), CASE WHEN vt1.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0Xffffffffc648c3ba THEN vt1.c0 WHEN vt1.c0 THEN 0.16090764594865314 ELSE vt1.c0 END AS REAL)  NULLS FIRST, TRIM(DISTINCT (vt0.c0 IN ()), CAST(vt1.c0 AS TEXT)) ASC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (STRFTIME(CAST(vt0.c0 AS REAL), (((vt1.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0))), CASE WHEN vt1.c0 THEN vt0.c0 END)) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0xffffffffc648c3ba THEN vt1.c0 WHEN vt1.c0 THEN 0.16090764594865314 ELSE vt1.c0 END AS REAL)  NULLS FIRST, TRIM(DISTINCT (vt0.c0 IN ()), CAST(vt1.c0 AS TEXT)) ASC;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((~ (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((~ (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((~ (vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=((CAST(0.5693131679539387 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=((CAST(0.5693131679539387 AS NUMERIC))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=((CAST(0.5693131679539387 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=((CAST(0.5693131679539387 AS NUMERIC))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=((CAST(0.5693131679539387 AS NUMERIC)))));
SELECT * FROM vt0 WHERE (COALESCE(vt0.c0, '-1305463644' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((COALESCE(vt0.c0, '-1305463644' COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (COALESCE(vt0.c0, '-1305463644' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((COALESCE(vt0.c0, '-1305463644' COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (COALESCE(vt0.c0, '-1305463644' COLLATE RTRIM));
SELECT COUNT(*) FROM t0 WHERE (((((((((0.3423123572290009)AND((t0.c0 IN ()))))AND(TYPEOF(DISTINCT ''))))AND(IFNULL(DISTINCT t0.c0, t0.c0))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ABS((t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.3423123572290009)AND((t0.c0 IN ()))))AND(TYPEOF(DISTINCT ''))))AND(IFNULL(DISTINCT t0.c0, t0.c0))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ABS((t0.c0 IN ())));
SELECT COUNT(*) FROM t0 WHERE (((((((((0.3423123572290009)AND((t0.c0 IN ()))))AND(TYPEOF(DISTINCT ''))))AND(IFNULL(DISTINCT t0.c0, t0.c0))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ABS((t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.3423123572290009)AND((t0.c0 IN ()))))AND(TYPEOF(DISTINCT ''))))AND(IFNULL(DISTINCT t0.c0, t0.c0))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ABS((t0.c0 IN ())));
SELECT COUNT(*) FROM t0 WHERE (((((((((0.3423123572290009)AND((t0.c0 IN ()))))AND(TYPEOF(DISTINCT ''))))AND(IFNULL(DISTINCT t0.c0, t0.c0))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ABS((t0.c0 IN ()));
SELECT * FROM t0, vt0 WHERE (((CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)GLOB(((t0.c0)*(vt0.c0))))) ORDER BY '756857268' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)GLOB(((t0.c0)*(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY '756857268' ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)GLOB(((t0.c0)*(vt0.c0))))) ORDER BY '756857268' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)GLOB(((t0.c0)*(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY '756857268' ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)GLOB(((t0.c0)*(vt0.c0))))) ORDER BY '756857268' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((CASE WHEN vt0.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END)=(vt1.c0))) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END)=(vt1.c0))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((CASE WHEN vt0.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END)=(vt1.c0))) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END)=(vt1.c0))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((CASE WHEN vt0.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END)=(vt1.c0))) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ((0.4200238906716911 IN ()))) LEFT OUTER JOIN vt0 ON CASE ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))  WHEN (- (t0.c0)) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN CAST(0.8904892755484193 AS REAL) WHEN ((x'd93c') BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(0.5263491237755709 AS NUMERIC) END WHERE (((CASE WHEN vt1.c0 THEN t0.c0 END) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) AND ((((t0.c0, vt1.c0, t0.c0))!=((vt1.c0, t0.c0, vt1.c0)))))) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN t0.c0 END) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) AND ((((t0.c0, vt1.c0, t0.c0))<>((vt1.c0, t0.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ((0.4200238906716911 IN ()))) LEFT OUTER JOIN vt0 ON CASE ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))  WHEN (- (t0.c0)) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN CAST(0.8904892755484193 AS REAL) WHEN ((x'd93c') BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(0.5263491237755709 AS NUMERIC) END ORDER BY CAST(CAST(vt0.c0 AS REAL) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ((0.4200238906716911 IN ()))) LEFT OUTER JOIN vt0 ON CASE ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))  WHEN (- (t0.c0)) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN CAST(0.8904892755484193 AS REAL) WHEN ((x'd93c') BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(0.5263491237755709 AS NUMERIC) END WHERE (((CASE WHEN vt1.c0 THEN t0.c0 END) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) AND ((((t0.c0, vt1.c0, t0.c0))!=((vt1.c0, t0.c0, vt1.c0)))))) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN t0.c0 END) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) AND ((((t0.c0, vt1.c0, t0.c0))<>((vt1.c0, t0.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ((0.4200238906716911 IN ()))) LEFT OUTER JOIN vt0 ON CASE ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))  WHEN (- (t0.c0)) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN CAST(0.8904892755484193 AS REAL) WHEN ((x'd93c') BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(0.5263491237755709 AS NUMERIC) END ORDER BY CAST(CAST(vt0.c0 AS REAL) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((NULL) IS TRUE));
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE));
SELECT * FROM t0 WHERE (((t0.c0)LIKE(((t0.c0)>>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)LIKE(((t0.c0)>>(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)LIKE(((t0.c0)>>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)LIKE(((t0.c0)>>(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)LIKE(((t0.c0)>>(t0.c0)))));
SELECT * FROM vt1, vt0 WHERE ((((- (vt1.c0)))<=(((x'e503')<(vt1.c0))))) ORDER BY ((((vt0.c0)>=(vt0.c0)))|((((vt1.c0))>=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))<=(((x'e503')<(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)>=(vt0.c0)))|((((vt1.c0))>=((vt0.c0))))));
SELECT * FROM vt1, vt0 WHERE ((((- (vt1.c0)))<=(((x'e503')<(vt1.c0))))) ORDER BY ((((vt0.c0)>=(vt0.c0)))|((((vt1.c0))>=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))<=(((x'e503')<(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)>=(vt0.c0)))|((((vt1.c0))>=((vt0.c0))))));
SELECT * FROM vt1, vt0 WHERE ((((- (vt1.c0)))<=(((x'e503')<(vt1.c0))))) ORDER BY ((((vt0.c0)>=(vt0.c0)))|((((vt1.c0))>=((vt0.c0)))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON 0.5653981658798779 WHERE (((((vt1.c0)+(t0.c0)))-(CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY CAST((t0.c0 IN (t0.c0)) AS INTEGER), (((((vt1.c0))<>((t0.c0)))) NOT BETWEEN ((~ (t0.c0))) AND (vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)+(t0.c0)))-(CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON 0.5653981658798779 ORDER BY CAST((t0.c0 IN (t0.c0)) AS INTEGER), (((((vt1.c0))<>((t0.c0)))) NOT BETWEEN ((~ (t0.c0))) AND (vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON 0.5653981658798779 WHERE (((((vt1.c0)+(t0.c0)))-(CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY CAST((t0.c0 IN (t0.c0)) AS INTEGER), (((((vt1.c0))<>((t0.c0)))) NOT BETWEEN ((~ (t0.c0))) AND (vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)+(t0.c0)))-(CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON 0.5653981658798779 ORDER BY CAST((t0.c0 IN (t0.c0)) AS INTEGER), (((((vt1.c0))<>((t0.c0)))) NOT BETWEEN ((~ (t0.c0))) AND (vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON 0.5653981658798779 WHERE (((((vt1.c0)+(t0.c0)))-(CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY CAST((t0.c0 IN (t0.c0)) AS INTEGER), (((((vt1.c0))<>((t0.c0)))) NOT BETWEEN ((~ (t0.c0))) AND (vt1.c0))  NULLS FIRST;
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)IS(vt0.c0))))) ORDER BY (((- (vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)IS(vt0.c0))))) ORDER BY (((- (vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)IS(vt0.c0))))) ORDER BY (((- (vt0.c0))) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((0.06083743952340581) BETWEEN (vt1.c0) AND (vt0.c0))) IS TRUE)) ORDER BY LIKELY(vt0.c0) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.06083743952340581) BETWEEN (vt1.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY LIKELY(vt0.c0) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((0.06083743952340581) BETWEEN (vt1.c0) AND (vt0.c0))) IS TRUE)) ORDER BY LIKELY(vt0.c0) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.06083743952340581) BETWEEN (vt1.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY LIKELY(vt0.c0) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((0.06083743952340581) BETWEEN (vt1.c0) AND (vt0.c0))) IS TRUE)) ORDER BY LIKELY(vt0.c0) COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM t0 INNER JOIN vt1 ON ((vt1.c0) IS FALSE) WHERE ((((((t0.c0) NOT BETWEEN (t0.c0) AND (0.23341973355118872))))>((((((0xffffffffb148aaca)OR(t0.c0)))OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOT BETWEEN (t0.c0) AND (0.23341973355118872))))>((((((0Xffffffffb148aaca)OR(t0.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((vt1.c0) IS FALSE));
SELECT * FROM t0 INNER JOIN vt1 ON ((vt1.c0) IS FALSE) WHERE ((((((t0.c0) NOT BETWEEN (t0.c0) AND (0.23341973355118872))))>((((((0xffffffffb148aaca)OR(t0.c0)))OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOT BETWEEN (t0.c0) AND (0.23341973355118872))))>((((((0Xffffffffb148aaca)OR(t0.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((vt1.c0) IS FALSE));
SELECT * FROM t0 INNER JOIN vt1 ON ((vt1.c0) IS FALSE) WHERE ((((((t0.c0) NOT BETWEEN (t0.c0) AND (0.23341973355118872))))>((((((0xffffffffb148aaca)OR(t0.c0)))OR(vt1.c0))))));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST, (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('|4Xy1%r')) IN (vt0.c0, ((vt0.c0)/(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('|4Xy1%r')) IN (vt0.c0, ((vt0.c0)/(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST, (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('|4Xy1%r')) IN (vt0.c0, ((vt0.c0)/(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('|4Xy1%r')) IN (vt0.c0, ((vt0.c0)/(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST, (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('|4Xy1%r')) IN (vt0.c0, ((vt0.c0)/(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON CASE ((vt0.c0) IS TRUE)  WHEN (+ (vt1.c0)) THEN ((vt1.c0)=(t0.c0)) WHEN UPPER(vt0.c0) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN t0.c0 THEN t0.c0 END WHEN (vt1.c0 IN ()) THEN (((vt1.c0, NULL, vt1.c0))==((vt1.c0, t0.c0, vt0.c0))) WHEN ABS(vt1.c0) THEN ((vt0.c0)AND(t0.c0)) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (('-1922352455')<(vt1.c0)) ELSE CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END END INNER JOIN vt0 ON CAST(NULL AS TEXT) WHERE ((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'8877', ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)), (vt1.c0 IN ()))) AND ((vt0.c0, 0.5322249226922038, CASE WHEN vt1.c0 THEN t0.c0 END)))) ORDER BY (CAST(vt1.c0 AS BLOB) IN ()) ASC, (((NOT (vt0.c0))) NOT BETWEEN (IFNULL(t0.c0, t0.c0)) AND (vt0.c0))  NULLS FIRST, IFNULL(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt1.c0)/(t0.c0))) DESC  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'8877', ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)), (vt1.c0 IN ()))) AND ((vt0.c0, 0.5322249226922038, CASE WHEN vt1.c0 THEN t0.c0 END)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON CASE ((vt0.c0) IS TRUE)  WHEN (+ (vt1.c0)) THEN ((vt1.c0)==(t0.c0)) WHEN UPPER(vt0.c0) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN t0.c0 THEN t0.c0 END WHEN (vt1.c0 IN ()) THEN (((vt1.c0, NULL, vt1.c0))=((vt1.c0, t0.c0, vt0.c0))) WHEN ABS(vt1.c0) THEN ((vt0.c0)AND(t0.c0)) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (('-1922352455')<(vt1.c0)) ELSE CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END END INNER JOIN vt0 ON CAST(NULL AS TEXT) ORDER BY (CAST(vt1.c0 AS BLOB) IN ()) ASC, (((NOT (vt0.c0))) NOT BETWEEN (IFNULL(t0.c0, t0.c0)) AND (vt0.c0))  NULLS FIRST, IFNULL(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt1.c0)/(t0.c0))) DESC  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON CASE ((vt0.c0) IS TRUE)  WHEN (+ (vt1.c0)) THEN ((vt1.c0)=(t0.c0)) WHEN UPPER(vt0.c0) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN t0.c0 THEN t0.c0 END WHEN (vt1.c0 IN ()) THEN (((vt1.c0, NULL, vt1.c0))==((vt1.c0, t0.c0, vt0.c0))) WHEN ABS(vt1.c0) THEN ((vt0.c0)AND(t0.c0)) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (('-1922352455')<(vt1.c0)) ELSE CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END END INNER JOIN vt0 ON CAST(NULL AS TEXT) WHERE ((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'8877', ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)), (vt1.c0 IN ()))) AND ((vt0.c0, 0.5322249226922038, CASE WHEN vt1.c0 THEN t0.c0 END)))) ORDER BY (CAST(vt1.c0 AS BLOB) IN ()) ASC, (((NOT (vt0.c0))) NOT BETWEEN (IFNULL(t0.c0, t0.c0)) AND (vt0.c0))  NULLS FIRST, IFNULL(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt1.c0)/(t0.c0))) DESC  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'8877', ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)), (vt1.c0 IN ()))) AND ((vt0.c0, 0.5322249226922038, CASE WHEN vt1.c0 THEN t0.c0 END)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON CASE ((vt0.c0) IS TRUE)  WHEN (+ (vt1.c0)) THEN ((vt1.c0)==(t0.c0)) WHEN UPPER(vt0.c0) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN t0.c0 THEN t0.c0 END WHEN (vt1.c0 IN ()) THEN (((vt1.c0, NULL, vt1.c0))=((vt1.c0, t0.c0, vt0.c0))) WHEN ABS(vt1.c0) THEN ((vt0.c0)AND(t0.c0)) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (('-1922352455')<(vt1.c0)) ELSE CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END END INNER JOIN vt0 ON CAST(NULL AS TEXT) ORDER BY (CAST(vt1.c0 AS BLOB) IN ()) ASC, (((NOT (vt0.c0))) NOT BETWEEN (IFNULL(t0.c0, t0.c0)) AND (vt0.c0))  NULLS FIRST, IFNULL(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt1.c0)/(t0.c0))) DESC  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT NULL) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON '-824174980' WHERE (((vt0.c0)==('-9223372036854775808'))) ORDER BY 'LB\n.w', ((x'') BETWEEN ((~ (t0.c0))) AND (NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)=('-9223372036854775808'))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON '-824174980' ORDER BY 'LB\n.w', ((x'') BETWEEN ((~ (t0.c0))) AND (NULL)) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON '-824174980' WHERE (((vt0.c0)==('-9223372036854775808'))) ORDER BY 'LB\n.w', ((x'') BETWEEN ((~ (t0.c0))) AND (NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)=('-9223372036854775808'))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON '-824174980' ORDER BY 'LB\n.w', ((x'') BETWEEN ((~ (t0.c0))) AND (NULL)) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON '-824174980' WHERE (((vt0.c0)==('-9223372036854775808'))) ORDER BY 'LB\n.w', ((x'') BETWEEN ((~ (t0.c0))) AND (NULL)) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)==(NULL)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)=(NULL)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)==(NULL)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)=(NULL)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)==(NULL)) AS TEXT));
SELECT ALL * FROM t0, vt0 WHERE ((((((((t0.c0))!=((t0.c0))))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE RTRIM))) ORDER BY TYPEOF(DISTINCT t0.c0) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c0))<>((t0.c0))))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 ORDER BY TYPEOF(DISTINCT t0.c0) COLLATE NOCASE);
SELECT ALL * FROM t0, vt0 WHERE ((((((((t0.c0))!=((t0.c0))))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE RTRIM))) ORDER BY TYPEOF(DISTINCT t0.c0) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c0))<>((t0.c0))))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 ORDER BY TYPEOF(DISTINCT t0.c0) COLLATE NOCASE);
SELECT ALL * FROM t0, vt0 WHERE ((((((((t0.c0))!=((t0.c0))))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE RTRIM))) ORDER BY TYPEOF(DISTINCT t0.c0) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((((((((vt1.c0 IN (t0.c0)))AND((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (t0.c0) AND (vt1.c0)))))OR(CAST(vt0.c0 AS REAL))))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0 IN (t0.c0)))AND((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (t0.c0) AND (vt1.c0)))))OR(CAST(vt0.c0 AS REAL))))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((((((((vt1.c0 IN (t0.c0)))AND((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (t0.c0) AND (vt1.c0)))))OR(CAST(vt0.c0 AS REAL))))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0 IN (t0.c0)))AND((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (t0.c0) AND (vt1.c0)))))OR(CAST(vt0.c0 AS REAL))))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((((((((vt1.c0 IN (t0.c0)))AND((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (t0.c0) AND (vt1.c0)))))OR(CAST(vt0.c0 AS REAL))))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (json_array(((t0.c0)IS(vt0.c0)), ((vt0.c0)<=(vt0.c0)), vt0.c0, CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((json_array(((t0.c0)IS(vt0.c0)), ((vt0.c0)<=(vt0.c0)), vt0.c0, CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (json_array(((t0.c0)IS(vt0.c0)), ((vt0.c0)<=(vt0.c0)), vt0.c0, CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((json_array(((t0.c0)IS(vt0.c0)), ((vt0.c0)<=(vt0.c0)), vt0.c0, CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (json_array(((t0.c0)IS(vt0.c0)), ((vt0.c0)<=(vt0.c0)), vt0.c0, CAST(vt0.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CAST(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) AS NUMERIC) LEFT OUTER JOIN vt1 ON CAST(t0.c0 AS INTEGER) COLLATE RTRIM WHERE (IFNULL((NOT (t0.c0)), t0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((NOT (t0.c0)), t0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) AS NUMERIC) LEFT OUTER JOIN vt1 ON CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CAST(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) AS NUMERIC) LEFT OUTER JOIN vt1 ON CAST(t0.c0 AS INTEGER) COLLATE RTRIM WHERE (IFNULL((NOT (t0.c0)), t0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((NOT (t0.c0)), t0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) AS NUMERIC) LEFT OUTER JOIN vt1 ON CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT * FROM t0, vt1 WHERE ((('-14191827') IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((('-14191827') IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((('-14191827') IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((('-14191827') IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((('-14191827') IS TRUE) COLLATE NOCASE);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((0.39791740959781674)&(((vt0.c0)-(vt0.c0)))) WHERE ((('-590231446' COLLATE NOCASE)LIKE((((t0.c0))>((-968309830))))));
SELECT SUM(count) FROM (SELECT (((('-590231446' COLLATE NOCASE)LIKE((((t0.c0))>((-968309830)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((0.39791740959781674)&(((vt0.c0)-(vt0.c0)))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((0.39791740959781674)&(((vt0.c0)-(vt0.c0)))) WHERE ((('-590231446' COLLATE NOCASE)LIKE((((t0.c0))>((-968309830))))));
SELECT SUM(count) FROM (SELECT (((('-590231446' COLLATE NOCASE)LIKE((((t0.c0))>((-968309830)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((0.39791740959781674)&(((vt0.c0)-(vt0.c0)))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((0.39791740959781674)&(((vt0.c0)-(vt0.c0)))) WHERE ((('-590231446' COLLATE NOCASE)LIKE((((t0.c0))>((-968309830))))));
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((vt0.c0) BETWEEN (NULL) AND (vt1.c0)))>>(995988574))) ORDER BY (NOT (((vt1.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (NULL) AND (vt1.c0)))>>(995988574))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (NOT (((vt1.c0) IS TRUE)))  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((vt0.c0) BETWEEN (NULL) AND (vt1.c0)))>>(995988574))) ORDER BY (NOT (((vt1.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (NULL) AND (vt1.c0)))>>(995988574))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (NOT (((vt1.c0) IS TRUE)))  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((vt0.c0) BETWEEN (NULL) AND (vt1.c0)))>>(995988574))) ORDER BY (NOT (((vt1.c0) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON LIKELY(DISTINCT vt1.c0) COLLATE NOCASE CROSS JOIN vt0 ON ((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE WHERE (json_valid((((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_valid((((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON LIKELY(DISTINCT vt1.c0) COLLATE NOCASE CROSS JOIN vt0 ON ((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE);
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON LIKELY(DISTINCT vt1.c0) COLLATE NOCASE CROSS JOIN vt0 ON ((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE WHERE (json_valid((((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_valid((((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON LIKELY(DISTINCT vt1.c0) COLLATE NOCASE CROSS JOIN vt0 ON ((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE);
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON LIKELY(DISTINCT vt1.c0) COLLATE NOCASE CROSS JOIN vt0 ON ((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE WHERE (json_valid((((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (LIKELIHOOD(((vt1.c0)&(vt0.c0)), 0.29448557636727457)) ORDER BY (((vt0.c0)/(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt1.c0)&(vt0.c0)), 0.29448557636727457)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((vt0.c0)/(t0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (LIKELIHOOD(((vt1.c0)&(vt0.c0)), 0.29448557636727457)) ORDER BY (((vt0.c0)/(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt1.c0)&(vt0.c0)), 0.29448557636727457)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((vt0.c0)/(t0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (LIKELIHOOD(((vt1.c0)&(vt0.c0)), 0.29448557636727457)) ORDER BY (((vt0.c0)/(t0.c0)) IN ());
SELECT * FROM vt0, t0 WHERE (LIKE(COALESCE(t0.c0, vt0.c0), ((t0.c0)>=(t0.c0)))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((LIKE(COALESCE(t0.c0, vt0.c0), ((t0.c0)>=(t0.c0)))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED ORDER BY t0.c0);
SELECT * FROM vt0, t0 WHERE (LIKE(COALESCE(t0.c0, vt0.c0), ((t0.c0)>=(t0.c0)))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((LIKE(COALESCE(t0.c0, vt0.c0), ((t0.c0)>=(t0.c0)))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED ORDER BY t0.c0);
SELECT * FROM vt0, t0 WHERE (LIKE(COALESCE(t0.c0, vt0.c0), ((t0.c0)>=(t0.c0)))) ORDER BY t0.c0;
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0) BETWEEN ('0.06083743952340581') AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN ('0.06083743952340581') AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0) BETWEEN ('0.06083743952340581') AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN ('0.06083743952340581') AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0) BETWEEN ('0.06083743952340581') AND (vt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((((vt1.c0)-(t0.c0)) IN ())) ORDER BY ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)-(t0.c0)) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((((vt1.c0)-(t0.c0)) IN ())) ORDER BY ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)-(t0.c0)) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((((vt1.c0)-(t0.c0)) IN ())) ORDER BY ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(vt1.c0)) ASC;
SELECT * FROM t0, vt0, vt1 WHERE (((((t0.c0)*('-553777491'))) NOT BETWEEN ((~ (vt1.c0))) AND (CASE WHEN 'yADGi43N' THEN t0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)*('-553777491'))) NOT BETWEEN ((~ (vt1.c0))) AND (CASE WHEN 'yADGi43N' THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (((((t0.c0)*('-553777491'))) NOT BETWEEN ((~ (vt1.c0))) AND (CASE WHEN 'yADGi43N' THEN t0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)*('-553777491'))) NOT BETWEEN ((~ (vt1.c0))) AND (CASE WHEN 'yADGi43N' THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (((((t0.c0)*('-553777491'))) NOT BETWEEN ((~ (vt1.c0))) AND (CASE WHEN 'yADGi43N' THEN t0.c0 ELSE t0.c0 END)));
SELECT COUNT(*) FROM t0 WHERE ('-1998815524') ORDER BY CAST(((NULL)&('722421419')) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1998815524') IS TRUE)  as count FROM t0 ORDER BY CAST(((NULL)&('722421419')) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ('-1998815524') ORDER BY CAST(((NULL)&('722421419')) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1998815524') IS TRUE)  as count FROM t0 ORDER BY CAST(((NULL)&('722421419')) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ('-1998815524') ORDER BY CAST(((NULL)&('722421419')) AS BLOB)  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((vt1.c0)=(vt1.c0)))<<(CAST(vt1.c0 AS NUMERIC)))) ORDER BY CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)=(vt1.c0)))<<(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS INTEGER) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0)=(vt1.c0)))<<(CAST(vt1.c0 AS NUMERIC)))) ORDER BY CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)=(vt1.c0)))<<(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS INTEGER) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0)=(vt1.c0)))<<(CAST(vt1.c0 AS NUMERIC)))) ORDER BY CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ ((+ (vt0.c0))))  NULLS LAST, CASE WHEN vt0.c0 THEN '1e500' WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ ((+ (vt0.c0))))  NULLS LAST, CASE WHEN vt0.c0 THEN '1e500' WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ ((+ (vt0.c0))))  NULLS LAST, CASE WHEN vt0.c0 THEN '1e500' WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ ((+ (vt0.c0))))  NULLS LAST, CASE WHEN vt0.c0 THEN '1e500' WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ ((+ (vt0.c0))))  NULLS LAST, CASE WHEN vt0.c0 THEN '1e500' WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt1 WHERE ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) IN (HEX(DISTINCT vt1.c0), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))))) ORDER BY (((t0.c0 IN (t0.c0)))%(CASE WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) IN (HEX(DISTINCT vt1.c0), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c0 IN (t0.c0)))%(CASE WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC);
SELECT ALL * FROM t0, vt1 WHERE ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) IN (HEX(DISTINCT vt1.c0), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))))) ORDER BY (((t0.c0 IN (t0.c0)))%(CASE WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) IN (HEX(DISTINCT vt1.c0), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c0 IN (t0.c0)))%(CASE WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC);
SELECT ALL * FROM t0, vt1 WHERE ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) IN (HEX(DISTINCT vt1.c0), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))))) ORDER BY (((t0.c0 IN (t0.c0)))%(CASE WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC;
SELECT ALL * FROM vt0, t0 INNER JOIN vt1 ON CASE WHEN (((vt0.c0, vt1.c0, vt0.c0))<>((vt0.c0, vt1.c0, vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END END WHERE (((UNLIKELY(vt0.c0)) IS TRUE)) ORDER BY CAST((vt1.c0 IN ()) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON CASE WHEN (((vt0.c0, vt1.c0, vt0.c0))!=((vt0.c0, vt1.c0, vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END END ORDER BY CAST((vt1.c0 IN ()) AS NUMERIC));
SELECT ALL * FROM vt0, t0 INNER JOIN vt1 ON CASE WHEN (((vt0.c0, vt1.c0, vt0.c0))<>((vt0.c0, vt1.c0, vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END END WHERE (((UNLIKELY(vt0.c0)) IS TRUE)) ORDER BY CAST((vt1.c0 IN ()) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON CASE WHEN (((vt0.c0, vt1.c0, vt0.c0))!=((vt0.c0, vt1.c0, vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END END ORDER BY CAST((vt1.c0 IN ()) AS NUMERIC));
SELECT ALL * FROM vt0, t0 INNER JOIN vt1 ON CASE WHEN (((vt0.c0, vt1.c0, vt0.c0))<>((vt0.c0, vt1.c0, vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END END WHERE (((UNLIKELY(vt0.c0)) IS TRUE)) ORDER BY CAST((vt1.c0 IN ()) AS NUMERIC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN (CASE WHEN -22166798 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY vt0.c0, TRIM(DISTINCT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN (CASE WHEN -22166798 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, TRIM(DISTINCT NULL) ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN (CASE WHEN -22166798 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY vt0.c0, TRIM(DISTINCT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN (CASE WHEN -22166798 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, TRIM(DISTINCT NULL) ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN (CASE WHEN -22166798 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY vt0.c0, TRIM(DISTINCT NULL) ASC;
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((t0.c0)-(vt0.c0)) WHERE (CASE WHEN CASE t0.c0  WHEN vt0.c0 THEN 0.9851266591669754 WHEN x'' THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END THEN t0.c0 WHEN x'' THEN (('') IS FALSE) WHEN t0.c0 THEN ((((t0.c0)AND(x'e64a')))AND(t0.c0)) ELSE ((vt0.c0) NOT NULL) END) ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE t0.c0  WHEN vt0.c0 THEN 0.9851266591669754 WHEN x'' THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END THEN t0.c0 WHEN x'' THEN (('') IS FALSE) WHEN t0.c0 THEN ((((t0.c0)AND(x'e64a')))AND(t0.c0)) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((t0.c0)-(vt0.c0)) ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((t0.c0)-(vt0.c0)) WHERE (CASE WHEN CASE t0.c0  WHEN vt0.c0 THEN 0.9851266591669754 WHEN x'' THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END THEN t0.c0 WHEN x'' THEN (('') IS FALSE) WHEN t0.c0 THEN ((((t0.c0)AND(x'e64a')))AND(t0.c0)) ELSE ((vt0.c0) NOT NULL) END) ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE t0.c0  WHEN vt0.c0 THEN 0.9851266591669754 WHEN x'' THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END THEN t0.c0 WHEN x'' THEN (('') IS FALSE) WHEN t0.c0 THEN ((((t0.c0)AND(x'e64a')))AND(t0.c0)) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((t0.c0)-(vt0.c0)) ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((t0.c0)-(vt0.c0)) WHERE (CASE WHEN CASE t0.c0  WHEN vt0.c0 THEN 0.9851266591669754 WHEN x'' THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END THEN t0.c0 WHEN x'' THEN (('') IS FALSE) WHEN t0.c0 THEN ((((t0.c0)AND(x'e64a')))AND(t0.c0)) ELSE ((vt0.c0) NOT NULL) END) ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM vt1, t0 WHERE ((((+ (t0.c0))) BETWEEN (vt1.c0) AND ((~ (vt1.c0))))) ORDER BY (((((t0.c0, vt1.c0, vt1.c0, t0.c0, t0.c0))<>((t0.c0, vt1.c0, vt1.c0, 0x599d80f3, t0.c0))))GLOB(t0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, CASE ((t0.c0)||(t0.c0))  WHEN (vt1.c0 IN ()) THEN (+ (t0.c0)) ELSE json_remove(vt1.c0, vt1.c0, vt1.c0, vt1.c0) END ASC;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c0))) BETWEEN (vt1.c0) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED, t0 ORDER BY (((((t0.c0, vt1.c0, vt1.c0, t0.c0, t0.c0))!=((t0.c0, vt1.c0, vt1.c0, 0X599d80f3, t0.c0))))GLOB(t0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, CASE ((t0.c0)||(t0.c0))  WHEN (vt1.c0 IN ()) THEN (+ (t0.c0)) ELSE json_remove(vt1.c0, vt1.c0, vt1.c0, vt1.c0) END ASC);
SELECT * FROM vt1, t0 WHERE ((((+ (t0.c0))) BETWEEN (vt1.c0) AND ((~ (vt1.c0))))) ORDER BY (((((t0.c0, vt1.c0, vt1.c0, t0.c0, t0.c0))<>((t0.c0, vt1.c0, vt1.c0, 0x599d80f3, t0.c0))))GLOB(t0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, CASE ((t0.c0)||(t0.c0))  WHEN (vt1.c0 IN ()) THEN (+ (t0.c0)) ELSE json_remove(vt1.c0, vt1.c0, vt1.c0, vt1.c0) END ASC;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c0))) BETWEEN (vt1.c0) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED, t0 ORDER BY (((((t0.c0, vt1.c0, vt1.c0, t0.c0, t0.c0))!=((t0.c0, vt1.c0, vt1.c0, 0X599d80f3, t0.c0))))GLOB(t0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, CASE ((t0.c0)||(t0.c0))  WHEN (vt1.c0 IN ()) THEN (+ (t0.c0)) ELSE json_remove(vt1.c0, vt1.c0, vt1.c0, vt1.c0) END ASC);
SELECT * FROM vt1, t0 NOT INDEXED WHERE (CASE WHEN ((((((((((((t0.c0)OR(t0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN CAST(t0.c0 AS INTEGER) END) ORDER BY (((NULL, vt1.c0, ((t0.c0) NOTNULL)))<=((((t0.c0) NOTNULL), ((((t0.c0)AND('3_䧖a')))OR(vt1.c0)), ((t0.c0)|(vt1.c0)))))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((x'')==(vt1.c0)))) AND ((((((t0.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((((((t0.c0)OR(t0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt1, t0 ORDER BY (((NULL, vt1.c0, ((t0.c0) NOTNULL)))<=((((t0.c0) NOTNULL), ((((t0.c0)AND('3_䧖a')))OR(vt1.c0)), ((t0.c0)|(vt1.c0)))))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((x'')==(vt1.c0)))) AND ((((((t0.c0)AND(vt1.c0)))AND(vt1.c0))))));
SELECT * FROM vt1, t0 NOT INDEXED WHERE (CASE WHEN ((((((((((((t0.c0)OR(t0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN CAST(t0.c0 AS INTEGER) END) ORDER BY (((NULL, vt1.c0, ((t0.c0) NOTNULL)))<=((((t0.c0) NOTNULL), ((((t0.c0)AND('3_䧖a')))OR(vt1.c0)), ((t0.c0)|(vt1.c0)))))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((x'')==(vt1.c0)))) AND ((((((t0.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((((((t0.c0)OR(t0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt1, t0 ORDER BY (((NULL, vt1.c0, ((t0.c0) NOTNULL)))<=((((t0.c0) NOTNULL), ((((t0.c0)AND('3_䧖a')))OR(vt1.c0)), ((t0.c0)|(vt1.c0)))))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((x'')==(vt1.c0)))) AND ((((((t0.c0)AND(vt1.c0)))AND(vt1.c0))))));
SELECT * FROM vt1, t0 NOT INDEXED WHERE (CASE WHEN ((((((((((((t0.c0)OR(t0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN CAST(t0.c0 AS INTEGER) END) ORDER BY (((NULL, vt1.c0, ((t0.c0) NOTNULL)))<=((((t0.c0) NOTNULL), ((((t0.c0)AND('3_䧖a')))OR(vt1.c0)), ((t0.c0)|(vt1.c0)))))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((((x'')==(vt1.c0)))) AND ((((((t0.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT * FROM t0 NOT INDEXED, vt1, vt0 INDEXED BY i80 WHERE (((vt1.c0)>(((vt1.c0) NOT NULL)))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (HEX(t0.c0)) AND (load_extension(vt1.c0, vt1.c0)))  NULLS FIRST, ((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))IS(ABS(DISTINCT t0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt1, vt0 INDEXED BY i80 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (HEX(t0.c0)) AND (load_extension(vt1.c0, vt1.c0)))  NULLS FIRST, ((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))IS(ABS(DISTINCT t0.c0))) ASC  NULLS LAST);
SELECT * FROM t0 NOT INDEXED, vt1, vt0 INDEXED BY i80 WHERE (((vt1.c0)>(((vt1.c0) NOT NULL)))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (HEX(t0.c0)) AND (load_extension(vt1.c0, vt1.c0)))  NULLS FIRST, ((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))IS(ABS(DISTINCT t0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt1, vt0 INDEXED BY i80 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (HEX(t0.c0)) AND (load_extension(vt1.c0, vt1.c0)))  NULLS FIRST, ((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))IS(ABS(DISTINCT t0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CAST(NULL AS BLOB));
SELECT ALL * FROM t0, vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS BLOB));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON '873443499' WHERE ((x'3a7b' IN ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((x'3a7b' IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON '873443499');
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON '873443499' WHERE ((x'3a7b' IN ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((x'3a7b' IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON '873443499');
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON '873443499' WHERE ((x'3a7b' IN ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON x'' WHERE (((CAST(vt0.c0 AS NUMERIC))*(CAST(x'' AS TEXT)))) ORDER BY LOWER(((t0.c0)|(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))*(CAST(x'' AS TEXT)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON x'' ORDER BY LOWER(((t0.c0)|(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON x'' WHERE (((CAST(vt0.c0 AS NUMERIC))*(CAST(x'' AS TEXT)))) ORDER BY LOWER(((t0.c0)|(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))*(CAST(x'' AS TEXT)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON x'' ORDER BY LOWER(((t0.c0)|(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON x'' WHERE (((CAST(vt0.c0 AS NUMERIC))*(CAST(x'' AS TEXT)))) ORDER BY LOWER(((t0.c0)|(vt0.c0))) DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0))<((t0.c0))) COLLATE BINARY) ORDER BY LOWER(((t0.c0) ISNULL)) DESC, ((((vt0.c0) NOT BETWEEN (x'') AND (t0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<((t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY LOWER(((t0.c0) ISNULL)) DESC, ((((vt0.c0) NOT BETWEEN (x'') AND (t0.c0))) IS TRUE));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0))<((t0.c0))) COLLATE BINARY) ORDER BY LOWER(((t0.c0) ISNULL)) DESC, ((((vt0.c0) NOT BETWEEN (x'') AND (t0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<((t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY LOWER(((t0.c0) ISNULL)) DESC, ((((vt0.c0) NOT BETWEEN (x'') AND (t0.c0))) IS TRUE));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0))<((t0.c0))) COLLATE BINARY) ORDER BY LOWER(((t0.c0) ISNULL)) DESC, ((((vt0.c0) NOT BETWEEN (x'') AND (t0.c0))) IS TRUE);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (~ ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) DESC, TRIM(DISTINCT (x'' IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (~ ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) DESC, TRIM(DISTINCT (x'' IN ())) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (~ ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) DESC, TRIM(DISTINCT (x'' IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (~ ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) DESC, TRIM(DISTINCT (x'' IN ())) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (~ ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) DESC, TRIM(DISTINCT (x'' IN ())) DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt1 WHERE (((((vt1.c0)|(t0.c0)))=((t0.c0 IN (t0.c0, vt1.c0))))) ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((t0.c0)>=(t0.c0)) ELSE t0.c0 COLLATE RTRIM END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(t0.c0)))==((t0.c0 IN (t0.c0, vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((t0.c0)>=(t0.c0)) ELSE t0.c0 COLLATE RTRIM END  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (((((vt1.c0)|(t0.c0)))=((t0.c0 IN (t0.c0, vt1.c0))))) ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((t0.c0)>=(t0.c0)) ELSE t0.c0 COLLATE RTRIM END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(t0.c0)))==((t0.c0 IN (t0.c0, vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((t0.c0)>=(t0.c0)) ELSE t0.c0 COLLATE RTRIM END  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (((((vt1.c0)|(t0.c0)))=((t0.c0 IN (t0.c0, vt1.c0))))) ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((t0.c0)>=(t0.c0)) ELSE t0.c0 COLLATE RTRIM END  NULLS LAST;
SELECT * FROM vt1, vt0, t0 WHERE ((CAST(t0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE ((CAST(t0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE ((CAST(t0.c0 AS TEXT) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((536705)>(NULL)))AND((~ (vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST, (((NULL)&(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((536705)>(NULL)))AND((~ (vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST, (((NULL)&(vt0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((536705)>(NULL)))AND((~ (vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST, (((NULL)&(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((536705)>(NULL)))AND((~ (vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST, (((NULL)&(vt0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((536705)>(NULL)))AND((~ (vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST, (((NULL)&(vt0.c0)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT * FROM t0 WHERE (((t0.c0)AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)AND(((((t0.c0)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)AND(((((t0.c0)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c0 IN ()))>=((~ (vt1.c0))))) ORDER BY (((((((((vt1.c0 IN ()))AND((NOT (t0.c0)))))OR(t0.c0)))OR(vt1.c0)))AND(CAST(t0.c0 AS INTEGER))), CAST(((t0.c0)IS NOT(vt1.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))>=((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((((((vt1.c0 IN ()))AND((NOT (t0.c0)))))OR(t0.c0)))OR(vt1.c0)))AND(CAST(t0.c0 AS INTEGER))), CAST(((t0.c0)IS NOT(vt1.c0)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c0 IN ()))>=((~ (vt1.c0))))) ORDER BY (((((((((vt1.c0 IN ()))AND((NOT (t0.c0)))))OR(t0.c0)))OR(vt1.c0)))AND(CAST(t0.c0 AS INTEGER))), CAST(((t0.c0)IS NOT(vt1.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))>=((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((((((vt1.c0 IN ()))AND((NOT (t0.c0)))))OR(t0.c0)))OR(vt1.c0)))AND(CAST(t0.c0 AS INTEGER))), CAST(((t0.c0)IS NOT(vt1.c0)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c0 IN ()))>=((~ (vt1.c0))))) ORDER BY (((((((((vt1.c0 IN ()))AND((NOT (t0.c0)))))OR(t0.c0)))OR(vt1.c0)))AND(CAST(t0.c0 AS INTEGER))), CAST(((t0.c0)IS NOT(vt1.c0)) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT NULL) WHERE (((vt1.c0)LIKE(((x'f397') BETWEEN (t0.c0) AND (vt1.c0))))) ORDER BY ((((CAST(t0.c0 AS BLOB))OR(((t0.c0)LIKE(t0.c0)))))OR(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)LIKE(((x'f397') BETWEEN (t0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT NULL) ORDER BY ((((CAST(t0.c0 AS BLOB))OR(((t0.c0)LIKE(t0.c0)))))OR(vt1.c0)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT NULL) WHERE (((vt1.c0)LIKE(((x'f397') BETWEEN (t0.c0) AND (vt1.c0))))) ORDER BY ((((CAST(t0.c0 AS BLOB))OR(((t0.c0)LIKE(t0.c0)))))OR(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)LIKE(((x'f397') BETWEEN (t0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT NULL) ORDER BY ((((CAST(t0.c0 AS BLOB))OR(((t0.c0)LIKE(t0.c0)))))OR(vt1.c0)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT NULL) WHERE (((vt1.c0)LIKE(((x'f397') BETWEEN (t0.c0) AND (vt1.c0))))) ORDER BY ((((CAST(t0.c0 AS BLOB))OR(((t0.c0)LIKE(t0.c0)))))OR(vt1.c0));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) NOTNULL));
SELECT * FROM vt0, t0, vt1 WHERE ((((('\r?')AND(((t0.c0)<=(t0.c0)))))AND((vt1.c0 IN ())))) ORDER BY (((~ (vt0.c0)))AND((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((('\r?')AND(((t0.c0)<=(t0.c0)))))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((~ (vt0.c0)))AND((vt0.c0 IN ()))));
SELECT * FROM vt0, t0, vt1 WHERE ((((('\r?')AND(((t0.c0)<=(t0.c0)))))AND((vt1.c0 IN ())))) ORDER BY (((~ (vt0.c0)))AND((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((('\r?')AND(((t0.c0)<=(t0.c0)))))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((~ (vt0.c0)))AND((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt1, t0 WHERE ('') ORDER BY ((CAST(vt1.c0 AS TEXT)) BETWEEN (((((t0.c0)OR(vt1.c0)))OR(NULL))) AND (0.20197790852848618 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, t0 ORDER BY ((CAST(vt1.c0 AS TEXT)) BETWEEN (((((t0.c0)OR(vt1.c0)))OR(NULL))) AND (0.20197790852848618 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1, t0 WHERE ('') ORDER BY ((CAST(vt1.c0 AS TEXT)) BETWEEN (((((t0.c0)OR(vt1.c0)))OR(NULL))) AND (0.20197790852848618 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, t0 ORDER BY ((CAST(vt1.c0 AS TEXT)) BETWEEN (((((t0.c0)OR(vt1.c0)))OR(NULL))) AND (0.20197790852848618 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1, t0 WHERE ('') ORDER BY ((CAST(vt1.c0 AS TEXT)) BETWEEN (((((t0.c0)OR(vt1.c0)))OR(NULL))) AND (0.20197790852848618 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(CAST(vt1.c0 AS REAL))))AND(vt1.c0)))OR(((vt1.c0)AND(vt1.c0)))))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))))AND(((vt1.c0)<=(vt1.c0)))))OR('-1340077331'))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS TEXT) ASC, CASE ((((((((x'f86c')OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))  WHEN ((vt1.c0)OR(vt1.c0)) THEN (('-1309792533')AND(vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(CAST(vt1.c0 AS REAL))))AND(vt1.c0)))OR(((vt1.c0)AND(vt1.c0)))))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))))AND(((vt1.c0)<=(vt1.c0)))))OR('-1340077331'))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 COLLATE RTRIM AS TEXT) ASC, CASE ((((((((x'f86c')OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))  WHEN ((vt1.c0)OR(vt1.c0)) THEN (('-1309792533')AND(vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(CAST(vt1.c0 AS REAL))))AND(vt1.c0)))OR(((vt1.c0)AND(vt1.c0)))))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))))AND(((vt1.c0)<=(vt1.c0)))))OR('-1340077331'))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS TEXT) ASC, CASE ((((((((x'f86c')OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))  WHEN ((vt1.c0)OR(vt1.c0)) THEN (('-1309792533')AND(vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(CAST(vt1.c0 AS REAL))))AND(vt1.c0)))OR(((vt1.c0)AND(vt1.c0)))))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))))AND(((vt1.c0)<=(vt1.c0)))))OR('-1340077331'))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 COLLATE RTRIM AS TEXT) ASC, CASE ((((((((x'f86c')OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))  WHEN ((vt1.c0)OR(vt1.c0)) THEN (('-1309792533')AND(vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(CAST(vt1.c0 AS REAL))))AND(vt1.c0)))OR(((vt1.c0)AND(vt1.c0)))))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))))AND(((vt1.c0)<=(vt1.c0)))))OR('-1340077331'))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS TEXT) ASC, CASE ((((((((x'f86c')OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))  WHEN ((vt1.c0)OR(vt1.c0)) THEN (('-1309792533')AND(vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END ASC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))IS NOT(SUBSTR(0.2506339140474648, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))IS NOT(SUBSTR(0.2506339140474648, vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))IS NOT(SUBSTR(0.2506339140474648, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))IS NOT(SUBSTR(0.2506339140474648, vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))IS NOT(SUBSTR(0.2506339140474648, vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((RTRIM(vt0.c0))IS(NULLIF(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((RTRIM(vt0.c0))IS(NULLIF(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((RTRIM(vt0.c0))IS(NULLIF(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((RTRIM(vt0.c0))IS(NULLIF(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((RTRIM(vt0.c0))IS(NULLIF(vt0.c0, vt0.c0))));
SELECT ALL * FROM vt1, t0 WHERE (((vt1.c0 COLLATE NOCASE) NOT NULL)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY NULL ASC);
SELECT ALL * FROM vt1, t0 WHERE (((vt1.c0 COLLATE NOCASE) NOT NULL)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY NULL ASC);
SELECT ALL * FROM vt1, t0 WHERE (((vt1.c0 COLLATE NOCASE) NOT NULL)) ORDER BY NULL ASC;
SELECT * FROM vt1, vt0, t0 WHERE (0.38317173654941106) ORDER BY ((((t0.c0) IS FALSE)) BETWEEN (((t0.c0)<=(t0.c0))) AND (((t0.c0)GLOB(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.38317173654941106) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((t0.c0) IS FALSE)) BETWEEN (((t0.c0)<=(t0.c0))) AND (((t0.c0)GLOB(vt1.c0)))));
SELECT * FROM vt1, vt0, t0 WHERE (0.38317173654941106) ORDER BY ((((t0.c0) IS FALSE)) BETWEEN (((t0.c0)<=(t0.c0))) AND (((t0.c0)GLOB(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.38317173654941106) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((t0.c0) IS FALSE)) BETWEEN (((t0.c0)<=(t0.c0))) AND (((t0.c0)GLOB(vt1.c0)))));
SELECT * FROM vt1, vt0, t0 WHERE (0.38317173654941106) ORDER BY ((((t0.c0) IS FALSE)) BETWEEN (((t0.c0)<=(t0.c0))) AND (((t0.c0)GLOB(vt1.c0))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)||(vt0.c0)))));
SELECT * FROM vt0 WHERE (NULL COLLATE RTRIM) ORDER BY UPPER(((vt0.c0)||(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY UPPER(((vt0.c0)||(vt0.c0))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (NULL COLLATE RTRIM) ORDER BY UPPER(((vt0.c0)||(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY UPPER(((vt0.c0)||(vt0.c0))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (NULL COLLATE RTRIM) ORDER BY UPPER(((vt0.c0)||(vt0.c0))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (json_object(-3.95560752E8, ((vt0.c0)AND(vt0.c0)))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_object(-3.95560752E8, ((vt0.c0)AND(vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (json_object(-3.95560752E8, ((vt0.c0)AND(vt0.c0)))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_object(-3.95560752E8, ((vt0.c0)AND(vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt1 WHERE ((NULLIF(DISTINCT vt1.c0, vt1.c0) IN (((x'')+(vt1.c0))))) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER) ASC  NULLS FIRST, ((((((((CAST(vt1.c0 AS INTEGER))OR(vt1.c0)))OR((vt1.c0 IN (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND('0.39791740959781674')) ASC  NULLS LAST, CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) THEN '-1423325914' ELSE ((vt1.c0)IS(vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(DISTINCT vt1.c0, vt1.c0) IN (((x'')+(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER) ASC  NULLS FIRST, ((((((((CAST(vt1.c0 AS INTEGER))OR(vt1.c0)))OR((vt1.c0 IN (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND('0.39791740959781674')) ASC  NULLS LAST, CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) THEN '-1423325914' ELSE ((vt1.c0)IS(vt1.c0)) END  NULLS FIRST);
SELECT * FROM vt1 WHERE ((NULLIF(DISTINCT vt1.c0, vt1.c0) IN (((x'')+(vt1.c0))))) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER) ASC  NULLS FIRST, ((((((((CAST(vt1.c0 AS INTEGER))OR(vt1.c0)))OR((vt1.c0 IN (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND('0.39791740959781674')) ASC  NULLS LAST, CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) THEN '-1423325914' ELSE ((vt1.c0)IS(vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(DISTINCT vt1.c0, vt1.c0) IN (((x'')+(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER) ASC  NULLS FIRST, ((((((((CAST(vt1.c0 AS INTEGER))OR(vt1.c0)))OR((vt1.c0 IN (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND('0.39791740959781674')) ASC  NULLS LAST, CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) THEN '-1423325914' ELSE ((vt1.c0)IS(vt1.c0)) END  NULLS FIRST);
SELECT * FROM vt1 WHERE ((NULLIF(DISTINCT vt1.c0, vt1.c0) IN (((x'')+(vt1.c0))))) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER) ASC  NULLS FIRST, ((((((((CAST(vt1.c0 AS INTEGER))OR(vt1.c0)))OR((vt1.c0 IN (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND('0.39791740959781674')) ASC  NULLS LAST, CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) THEN '-1423325914' ELSE ((vt1.c0)IS(vt1.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NULL)-(vt1.c0))) BETWEEN (vt1.c0) AND (((vt1.c0)%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)-(vt1.c0))) BETWEEN (vt1.c0) AND (((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NULL)-(vt1.c0))) BETWEEN (vt1.c0) AND (((vt1.c0)%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)-(vt1.c0))) BETWEEN (vt1.c0) AND (((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NULL)-(vt1.c0))) BETWEEN (vt1.c0) AND (((vt1.c0)%(vt1.c0)))));
SELECT COUNT(*) FROM t0, vt1 WHERE ((((-5.38047574E8 IN ())) NOT BETWEEN (((-1447353752)<<(t0.c0))) AND (TRIM(vt1.c0)))) ORDER BY ((((((((1295661651)OR(load_extension(t0.c0))))OR(((0.20197790852848618)=(t0.c0)))))OR((t0.c0 IN ()))))OR(vt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((-5.38047574E8 IN ())) NOT BETWEEN (((-1447353752)<<(t0.c0))) AND (TRIM(vt1.c0)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((((1295661651)OR(load_extension(t0.c0))))OR(((0.20197790852848618)=(t0.c0)))))OR((t0.c0 IN ()))))OR(vt1.c0 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((-5.38047574E8 IN ())) NOT BETWEEN (((-1447353752)<<(t0.c0))) AND (TRIM(vt1.c0)))) ORDER BY ((((((((1295661651)OR(load_extension(t0.c0))))OR(((0.20197790852848618)=(t0.c0)))))OR((t0.c0 IN ()))))OR(vt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((-5.38047574E8 IN ())) NOT BETWEEN (((-1447353752)<<(t0.c0))) AND (TRIM(vt1.c0)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((((1295661651)OR(load_extension(t0.c0))))OR(((0.20197790852848618)=(t0.c0)))))OR((t0.c0 IN ()))))OR(vt1.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END);
SELECT ALL * FROM t0, vt1 WHERE (0.4772841068372975);
SELECT SUM(count) FROM (SELECT ALL ((0.4772841068372975) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (0.4772841068372975);
SELECT SUM(count) FROM (SELECT ALL ((0.4772841068372975) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (0.4772841068372975);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (vt1.c0) ORDER BY ((((t0.c0) NOTNULL)) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((vt0.c0, vt0.c0, t0.c0, t0.c0, vt1.c0))=((t0.c0, t0.c0, vt1.c0, vt0.c0, vt1.c0))))), (((((vt1.c0))!=((vt0.c0))))%((+ (t0.c0))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((t0.c0) NOTNULL)) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((vt0.c0, vt0.c0, t0.c0, t0.c0, vt1.c0))==((t0.c0, t0.c0, vt1.c0, vt0.c0, vt1.c0))))), (((((vt1.c0))<>((vt0.c0))))%((+ (t0.c0)))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (vt1.c0) ORDER BY ((((t0.c0) NOTNULL)) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((vt0.c0, vt0.c0, t0.c0, t0.c0, vt1.c0))=((t0.c0, t0.c0, vt1.c0, vt0.c0, vt1.c0))))), (((((vt1.c0))!=((vt0.c0))))%((+ (t0.c0))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((t0.c0) NOTNULL)) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((vt0.c0, vt0.c0, t0.c0, t0.c0, vt1.c0))==((t0.c0, t0.c0, vt1.c0, vt0.c0, vt1.c0))))), (((((vt1.c0))<>((vt0.c0))))%((+ (t0.c0)))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (vt1.c0) ORDER BY ((((t0.c0) NOTNULL)) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((vt0.c0, vt0.c0, t0.c0, t0.c0, vt1.c0))=((t0.c0, t0.c0, vt1.c0, vt0.c0, vt1.c0))))), (((((vt1.c0))!=((vt0.c0))))%((+ (t0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((- (t0.c0))))) ORDER BY (~ ((((('0.2972956169277974')OR(NULL)))AND(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (~ ((((('0.2972956169277974')OR(NULL)))AND(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((- (t0.c0))))) ORDER BY (~ ((((('0.2972956169277974')OR(NULL)))AND(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (~ ((((('0.2972956169277974')OR(NULL)))AND(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((- (t0.c0))))) ORDER BY (~ ((((('0.2972956169277974')OR(NULL)))AND(t0.c0))))  NULLS LAST;
SELECT * FROM vt1 WHERE (load_extension(CAST(vt1.c0 AS TEXT), ((vt1.c0)||(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CAST(vt1.c0 AS TEXT), ((vt1.c0)||(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (load_extension(CAST(vt1.c0 AS TEXT), ((vt1.c0)||(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CAST(vt1.c0 AS TEXT), ((vt1.c0)||(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 INNER JOIN t0 ON UNLIKELY(DISTINCT MAX(vt1.c0, t0.c0, vt1.c0, vt1.c0)) WHERE (((vt1.c0)!=(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<>(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON UNLIKELY(DISTINCT MAX(vt1.c0, t0.c0, vt1.c0, vt1.c0)));
SELECT ALL * FROM vt1 INNER JOIN t0 ON UNLIKELY(DISTINCT MAX(vt1.c0, t0.c0, vt1.c0, vt1.c0)) WHERE (((vt1.c0)!=(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<>(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON UNLIKELY(DISTINCT MAX(vt1.c0, t0.c0, vt1.c0, vt1.c0)));
SELECT ALL * FROM vt1 INNER JOIN t0 ON UNLIKELY(DISTINCT MAX(vt1.c0, t0.c0, vt1.c0, vt1.c0)) WHERE (((vt1.c0)!=(t0.c0)) COLLATE BINARY);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END WHEN ((x'')>(x'0d407c81')) THEN TYPEOF(t0.c0) WHEN ('' IN (NULL)) THEN CAST(t0.c0 AS TEXT) ELSE t0.c0 COLLATE RTRIM END) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END WHEN ((x'')>(x'0d407c81')) THEN TYPEOF(t0.c0) WHEN ('' IN (NULL)) THEN CAST(t0.c0 AS TEXT) ELSE t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END WHEN ((x'')>(x'0d407c81')) THEN TYPEOF(t0.c0) WHEN ('' IN (NULL)) THEN CAST(t0.c0 AS TEXT) ELSE t0.c0 COLLATE RTRIM END) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END WHEN ((x'')>(x'0d407c81')) THEN TYPEOF(t0.c0) WHEN ('' IN (NULL)) THEN CAST(t0.c0 AS TEXT) ELSE t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END WHEN ((x'')>(x'0d407c81')) THEN TYPEOF(t0.c0) WHEN ('' IN (NULL)) THEN CAST(t0.c0 AS TEXT) ELSE t0.c0 COLLATE RTRIM END) ORDER BY vt0.c0 ASC;
SELECT ALL * FROM vt1 WHERE ((((NULL, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('1394459668', vt1.c0, vt1.c0))), vt1.c0 COLLATE RTRIM))<((((vt1.c0)IS(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), vt1.c0)))) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('1394459668', vt1.c0, vt1.c0))), vt1.c0 COLLATE RTRIM))<((((vt1.c0)IS(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((NULL, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('1394459668', vt1.c0, vt1.c0))), vt1.c0 COLLATE RTRIM))<((((vt1.c0)IS(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), vt1.c0)))) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('1394459668', vt1.c0, vt1.c0))), vt1.c0 COLLATE RTRIM))<((((vt1.c0)IS(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((NULL, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('1394459668', vt1.c0, vt1.c0))), vt1.c0 COLLATE RTRIM))<((((vt1.c0)IS(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), vt1.c0)))) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) IS TRUE) ASC  NULLS LAST;
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON TRIM(CAST(t0.c0 AS BLOB)) WHERE ((((NOT (vt0.c0)))>((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON TRIM(CAST(t0.c0 AS BLOB)));
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON TRIM(CAST(t0.c0 AS BLOB)) WHERE ((((NOT (vt0.c0)))>((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON TRIM(CAST(t0.c0 AS BLOB)));
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON TRIM(CAST(t0.c0 AS BLOB)) WHERE ((((NOT (vt0.c0)))>((vt0.c0 IN ()))));
SELECT * FROM t0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED, vt0);
SELECT * FROM t0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED, vt0);
SELECT * FROM t0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) IN ()));
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt0.c0 IN ()), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN ')&Ubr	ڗq' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END))<((NULL, vt0.c0 COLLATE BINARY, (+ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt0.c0 IN ()), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN ')&Ubr	ڗq' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END))<((NULL, vt0.c0 COLLATE BINARY, (+ (vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt0.c0 IN ()), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN ')&Ubr	ڗq' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END))<((NULL, vt0.c0 COLLATE BINARY, (+ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt0.c0 IN ()), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN ')&Ubr	ڗq' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END))<((NULL, vt0.c0 COLLATE BINARY, (+ (vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt0.c0 IN ()), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN ')&Ubr	ڗq' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END))<((NULL, vt0.c0 COLLATE BINARY, (+ (vt1.c0))))));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0, vt1 WHERE (CASE WHEN (((vt1.c0)) BETWEEN (('')) AND ((vt0.c0))) THEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) ELSE (NOT (vt0.c0)) END) ORDER BY (NOT ((+ (vt0.c0)))) DESC  NULLS LAST, (CAST(vt1.c0 AS NUMERIC) IN ()), ((((((((((((((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))AND(t0.c0 COLLATE NOCASE)))AND((- (vt1.c0)))))AND(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))))OR(t0.c0)))AND(((vt1.c0)-(t0.c0)))))OR(((NULL) IS TRUE))), ((((((t0.c0)-(vt0.c0)))OR((~ (vt1.c0)))))AND(UNLIKELY(DISTINCT vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0)) BETWEEN (('')) AND ((vt0.c0))) THEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM t0, vt0, vt1 NOT INDEXED ORDER BY (NOT ((+ (vt0.c0)))) DESC  NULLS LAST, (CAST(vt1.c0 AS NUMERIC) IN ()), ((((((((((((((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))AND(t0.c0 COLLATE NOCASE)))AND((- (vt1.c0)))))AND(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))))OR(t0.c0)))AND(((vt1.c0)-(t0.c0)))))OR(((NULL) IS TRUE))), ((((((t0.c0)-(vt0.c0)))OR((~ (vt1.c0)))))AND(UNLIKELY(DISTINCT vt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0, vt1 WHERE (CASE WHEN (((vt1.c0)) BETWEEN (('')) AND ((vt0.c0))) THEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) ELSE (NOT (vt0.c0)) END) ORDER BY (NOT ((+ (vt0.c0)))) DESC  NULLS LAST, (CAST(vt1.c0 AS NUMERIC) IN ()), ((((((((((((((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))AND(t0.c0 COLLATE NOCASE)))AND((- (vt1.c0)))))AND(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))))OR(t0.c0)))AND(((vt1.c0)-(t0.c0)))))OR(((NULL) IS TRUE))), ((((((t0.c0)-(vt0.c0)))OR((~ (vt1.c0)))))AND(UNLIKELY(DISTINCT vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0)) BETWEEN (('')) AND ((vt0.c0))) THEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM t0, vt0, vt1 NOT INDEXED ORDER BY (NOT ((+ (vt0.c0)))) DESC  NULLS LAST, (CAST(vt1.c0 AS NUMERIC) IN ()), ((((((((((((((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))AND(t0.c0 COLLATE NOCASE)))AND((- (vt1.c0)))))AND(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))))OR(t0.c0)))AND(((vt1.c0)-(t0.c0)))))OR(((NULL) IS TRUE))), ((((((t0.c0)-(vt0.c0)))OR((~ (vt1.c0)))))AND(UNLIKELY(DISTINCT vt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0, vt1 WHERE (CASE WHEN (((vt1.c0)) BETWEEN (('')) AND ((vt0.c0))) THEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) ELSE (NOT (vt0.c0)) END) ORDER BY (NOT ((+ (vt0.c0)))) DESC  NULLS LAST, (CAST(vt1.c0 AS NUMERIC) IN ()), ((((((((((((((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))AND(t0.c0 COLLATE NOCASE)))AND((- (vt1.c0)))))AND(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))))OR(t0.c0)))AND(((vt1.c0)-(t0.c0)))))OR(((NULL) IS TRUE))), ((((((t0.c0)-(vt0.c0)))OR((~ (vt1.c0)))))AND(UNLIKELY(DISTINCT vt0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((CAST(t0.c0 AS BLOB), ((t0.c0) ISNULL), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((((t0.c0) NOT BETWEEN (0.09998077166928176) AND (t0.c0)), (t0.c0 IN (t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((CAST(t0.c0 AS BLOB), ((t0.c0) ISNULL), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((((t0.c0) NOT BETWEEN (0.09998077166928176) AND (t0.c0)), (t0.c0 IN (t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) ISNULL));
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((CAST(t0.c0 AS BLOB), ((t0.c0) ISNULL), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((((t0.c0) NOT BETWEEN (0.09998077166928176) AND (t0.c0)), (t0.c0 IN (t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((CAST(t0.c0 AS BLOB), ((t0.c0) ISNULL), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((((t0.c0) NOT BETWEEN (0.09998077166928176) AND (t0.c0)), (t0.c0 IN (t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) ISNULL));
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((CAST(t0.c0 AS BLOB), ((t0.c0) ISNULL), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((((t0.c0) NOT BETWEEN (0.09998077166928176) AND (t0.c0)), (t0.c0 IN (t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) ISNULL);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE (- (vt0.c0))  WHEN (((t0.c0, x'', vt1.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))) THEN (t0.c0 IN ()) END) ORDER BY 'Ok' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (vt0.c0))  WHEN (((t0.c0, x'', vt1.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))) THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY 'Ok' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE (- (vt0.c0))  WHEN (((t0.c0, x'', vt1.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))) THEN (t0.c0 IN ()) END) ORDER BY 'Ok' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (vt0.c0))  WHEN (((t0.c0, x'', vt1.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))) THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY 'Ok' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE (- (vt0.c0))  WHEN (((t0.c0, x'', vt1.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))) THEN (t0.c0 IN ()) END) ORDER BY 'Ok' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) IS TRUE) WHERE ((((vt0.c0 IN ())) NOT BETWEEN ((+ (vt0.c0))) AND (LTRIM(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN ((+ (vt0.c0))) AND (LTRIM(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) IS TRUE));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) IS TRUE) WHERE ((((vt0.c0 IN ())) NOT BETWEEN ((+ (vt0.c0))) AND (LTRIM(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN ((+ (vt0.c0))) AND (LTRIM(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) IS TRUE));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) IS TRUE) WHERE ((((vt0.c0 IN ())) NOT BETWEEN ((+ (vt0.c0))) AND (LTRIM(vt0.c0, vt0.c0))));
SELECT * FROM t0, vt1 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (TYPEOF(DISTINCT vt1.c0)) AND (t0.c0))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (TYPEOF(DISTINCT vt1.c0)) AND (t0.c0))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS TEXT)  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (TYPEOF(DISTINCT vt1.c0)) AND (t0.c0))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (TYPEOF(DISTINCT vt1.c0)) AND (t0.c0))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS TEXT)  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (TYPEOF(DISTINCT vt1.c0)) AND (t0.c0))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS TEXT)  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)|(vt0.c0)))));
SELECT * FROM t0 WHERE ((('	') BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((x'f943')OR(t0.c0))))) ORDER BY ((((((((CAST(t0.c0 AS BLOB))OR(CAST(t0.c0 AS TEXT))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(t0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('	') BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((x'f943')OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((((((CAST(t0.c0 AS BLOB))OR(CAST(t0.c0 AS TEXT))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(t0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM t0 WHERE ((('	') BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((x'f943')OR(t0.c0))))) ORDER BY ((((((((CAST(t0.c0 AS BLOB))OR(CAST(t0.c0 AS TEXT))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(t0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('	') BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((x'f943')OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((((((CAST(t0.c0 AS BLOB))OR(CAST(t0.c0 AS TEXT))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(t0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM t0 WHERE ((('	') BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) AND (((x'f943')OR(t0.c0))))) ORDER BY ((((((((CAST(t0.c0 AS BLOB))OR(CAST(t0.c0 AS TEXT))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(t0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((t0.c0)|(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)|(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((t0.c0)|(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)|(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((t0.c0)|(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) END);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(CASE vt0.c0  WHEN '-950372616' THEN NULL END AS INTEGER)) ORDER BY (((((~ (t0.c0)))AND((((t0.c0))!=((vt0.c0))))))OR(((t0.c0) ISNULL)))  NULLS FIRST, (vt0.c0 IN ()) COLLATE NOCASE, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN '-950372616' THEN NULL END AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((((~ (t0.c0)))AND((((t0.c0))<>((vt0.c0))))))OR(((t0.c0) ISNULL)))  NULLS FIRST, (vt0.c0 IN ()) COLLATE NOCASE, vt0.c0 ASC);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(CASE vt0.c0  WHEN '-950372616' THEN NULL END AS INTEGER)) ORDER BY (((((~ (t0.c0)))AND((((t0.c0))!=((vt0.c0))))))OR(((t0.c0) ISNULL)))  NULLS FIRST, (vt0.c0 IN ()) COLLATE NOCASE, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN '-950372616' THEN NULL END AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((((~ (t0.c0)))AND((((t0.c0))<>((vt0.c0))))))OR(((t0.c0) ISNULL)))  NULLS FIRST, (vt0.c0 IN ()) COLLATE NOCASE, vt0.c0 ASC);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(CASE vt0.c0  WHEN '-950372616' THEN NULL END AS INTEGER)) ORDER BY (((((~ (t0.c0)))AND((((t0.c0))!=((vt0.c0))))))OR(((t0.c0) ISNULL)))  NULLS FIRST, (vt0.c0 IN ()) COLLATE NOCASE, vt0.c0 ASC;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN UNLIKELY(x'50c7') ELSE ('ꞷ,]#nd棠' IN ()) END) ORDER BY ((HEX(DISTINCT vt1.c0))&((vt0.c0 IN (vt0.c0)))) DESC, SQLITE_VERSION()  NULLS FIRST, x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN UNLIKELY(x'50c7') ELSE ('ꞷ,]#nd棠' IN ()) END) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((HEX(DISTINCT vt1.c0))&((vt0.c0 IN (vt0.c0)))) DESC, SQLITE_VERSION()  NULLS FIRST, x''  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN UNLIKELY(x'50c7') ELSE ('ꞷ,]#nd棠' IN ()) END) ORDER BY ((HEX(DISTINCT vt1.c0))&((vt0.c0 IN (vt0.c0)))) DESC, SQLITE_VERSION()  NULLS FIRST, x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN UNLIKELY(x'50c7') ELSE ('ꞷ,]#nd棠' IN ()) END) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((HEX(DISTINCT vt1.c0))&((vt0.c0 IN (vt0.c0)))) DESC, SQLITE_VERSION()  NULLS FIRST, x''  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN UNLIKELY(x'50c7') ELSE ('ꞷ,]#nd棠' IN ()) END) ORDER BY ((HEX(DISTINCT vt1.c0))&((vt0.c0 IN (vt0.c0)))) DESC, SQLITE_VERSION()  NULLS FIRST, x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((x'')<=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'3a6a0d75' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0) IS TRUE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'3a6a0d75' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0) IS TRUE) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((x'')<=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'3a6a0d75' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0) IS TRUE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'3a6a0d75' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0) IS TRUE) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((x'')<=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'3a6a0d75' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0) IS TRUE) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((0.09998077166928176) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (JULIANDAY(vt0.c0, vt0.c0, vt0.c0)))) ORDER BY -1.423325914E9, (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((0.09998077166928176) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (JULIANDAY(vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY -1.423325914E9, (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(x''))))));
SELECT COUNT(*) FROM vt0 WHERE (((0.09998077166928176) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (JULIANDAY(vt0.c0, vt0.c0, vt0.c0)))) ORDER BY -1.423325914E9, (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((0.09998077166928176) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (JULIANDAY(vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY -1.423325914E9, (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(x''))))));
SELECT COUNT(*) FROM vt0 WHERE (((0.09998077166928176) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (JULIANDAY(vt0.c0, vt0.c0, vt0.c0)))) ORDER BY -1.423325914E9, (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(x'')))));
SELECT ALL * FROM t0, vt1 WHERE (TYPEOF(DISTINCT ((vt1.c0) ISNULL))) ORDER BY (((((vt1.c0 IN ()))OR((NOT (t0.c0)))))AND(vt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt1.c0) ISNULL))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((vt1.c0 IN ()))OR((NOT (t0.c0)))))AND(vt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE (TYPEOF(DISTINCT ((vt1.c0) ISNULL))) ORDER BY (((((vt1.c0 IN ()))OR((NOT (t0.c0)))))AND(vt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt1.c0) ISNULL))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((vt1.c0 IN ()))OR((NOT (t0.c0)))))AND(vt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE (TYPEOF(DISTINCT ((vt1.c0) ISNULL))) ORDER BY (((((vt1.c0 IN ()))OR((NOT (t0.c0)))))AND(vt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (x'c293') ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'c293') IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'c293') ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'c293') IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'c293') ORDER BY vt1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((vt1.c0)<(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((vt1.c0)<(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((vt1.c0)<(t0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((0.6687302187326486)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (((((vt0.c0)AND(NULL)))OR(vt0.c0))) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.6687302187326486)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (((((vt0.c0)AND(NULL)))OR(vt0.c0))) AND (t0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((0.6687302187326486)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (((((vt0.c0)AND(NULL)))OR(vt0.c0))) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.6687302187326486)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (((((vt0.c0)AND(NULL)))OR(vt0.c0))) AND (t0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((0.6687302187326486)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (((((vt0.c0)AND(NULL)))OR(vt0.c0))) AND (t0.c0)));
SELECT * FROM vt1, t0, vt0 WHERE (((((vt1.c0 IN (vt0.c0)), t0.c0 COLLATE BINARY, ((((vt1.c0)AND(t0.c0)))AND(vt1.c0))))==((((((vt0.c0)AND(0.2041684958418215)))AND(vt1.c0)), ((vt0.c0) IS FALSE), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))) ORDER BY CAST(vt0.c0 AS REAL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN (vt0.c0)), t0.c0 COLLATE BINARY, ((((vt1.c0)AND(t0.c0)))AND(vt1.c0))))==((((((vt0.c0)AND(0.2041684958418215)))AND(vt1.c0)), ((vt0.c0) IS FALSE), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST(vt0.c0 AS REAL) COLLATE BINARY ASC);
SELECT * FROM vt1, t0, vt0 WHERE (((((vt1.c0 IN (vt0.c0)), t0.c0 COLLATE BINARY, ((((vt1.c0)AND(t0.c0)))AND(vt1.c0))))==((((((vt0.c0)AND(0.2041684958418215)))AND(vt1.c0)), ((vt0.c0) IS FALSE), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))) ORDER BY CAST(vt0.c0 AS REAL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN (vt0.c0)), t0.c0 COLLATE BINARY, ((((vt1.c0)AND(t0.c0)))AND(vt1.c0))))==((((((vt0.c0)AND(0.2041684958418215)))AND(vt1.c0)), ((vt0.c0) IS FALSE), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST(vt0.c0 AS REAL) COLLATE BINARY ASC);
SELECT * FROM vt1, t0, vt0 WHERE (((((vt1.c0 IN (vt0.c0)), t0.c0 COLLATE BINARY, ((((vt1.c0)AND(t0.c0)))AND(vt1.c0))))==((((((vt0.c0)AND(0.2041684958418215)))AND(vt1.c0)), ((vt0.c0) IS FALSE), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))) ORDER BY CAST(vt0.c0 AS REAL) COLLATE BINARY ASC;
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON (- ((vt1.c0 IN ()))) WHERE ((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)))) ORDER BY ((vt0.c0)%(((((((((vt1.c0)AND(vt1.c0)))AND(x'')))AND(vt1.c0)))OR(vt1.c0)))) DESC, CASE (((((((('%꺂䞧P')AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt1.c0)<(t0.c0)) THEN (+ (vt1.c0)) ELSE (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) END  NULLS FIRST, '<nc#d?'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON (- ((vt1.c0 IN ()))) ORDER BY ((vt0.c0)%(((((((((vt1.c0)AND(vt1.c0)))AND(x'')))AND(vt1.c0)))OR(vt1.c0)))) DESC, CASE (((((((('%꺂䞧P')AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt1.c0)<(t0.c0)) THEN (+ (vt1.c0)) ELSE (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) END  NULLS FIRST, '<nc#d?'  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON (- ((vt1.c0 IN ()))) WHERE ((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)))) ORDER BY ((vt0.c0)%(((((((((vt1.c0)AND(vt1.c0)))AND(x'')))AND(vt1.c0)))OR(vt1.c0)))) DESC, CASE (((((((('%꺂䞧P')AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt1.c0)<(t0.c0)) THEN (+ (vt1.c0)) ELSE (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) END  NULLS FIRST, '<nc#d?'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON (- ((vt1.c0 IN ()))) ORDER BY ((vt0.c0)%(((((((((vt1.c0)AND(vt1.c0)))AND(x'')))AND(vt1.c0)))OR(vt1.c0)))) DESC, CASE (((((((('%꺂䞧P')AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt1.c0)<(t0.c0)) THEN (+ (vt1.c0)) ELSE (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) END  NULLS FIRST, '<nc#d?'  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON (- ((vt1.c0 IN ()))) WHERE ((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)))) ORDER BY ((vt0.c0)%(((((((((vt1.c0)AND(vt1.c0)))AND(x'')))AND(vt1.c0)))OR(vt1.c0)))) DESC, CASE (((((((('%꺂䞧P')AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt1.c0)<(t0.c0)) THEN (+ (vt1.c0)) ELSE (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) END  NULLS FIRST, '<nc#d?'  NULLS LAST;
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((x'daff3d39') BETWEEN (NULL) AND (t0.c0)))) AND ((((vt1.c0) NOTNULL)))) INNER JOIN vt0 ON ((t0.c0)LIKE(vt1.c0)) COLLATE BINARY WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((x'daff3d39') BETWEEN (NULL) AND (t0.c0)))) AND ((((vt1.c0) NOTNULL)))) INNER JOIN vt0 ON ((t0.c0)LIKE(vt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((x'daff3d39') BETWEEN (NULL) AND (t0.c0)))) AND ((((vt1.c0) NOTNULL)))) INNER JOIN vt0 ON ((t0.c0)LIKE(vt1.c0)) COLLATE BINARY WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((x'daff3d39') BETWEEN (NULL) AND (t0.c0)))) AND ((((vt1.c0) NOTNULL)))) INNER JOIN vt0 ON ((t0.c0)LIKE(vt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((x'daff3d39') BETWEEN (NULL) AND (t0.c0)))) AND ((((vt1.c0) NOTNULL)))) INNER JOIN vt0 ON ((t0.c0)LIKE(vt1.c0)) COLLATE BINARY WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LIKELY(NULLIF(DISTINCT vt0.c0, vt0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE)||((+ (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(NULLIF(DISTINCT vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)||((+ (vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LIKELY(NULLIF(DISTINCT vt0.c0, vt0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE)||((+ (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(NULLIF(DISTINCT vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)||((+ (vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LIKELY(NULLIF(DISTINCT vt0.c0, vt0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE)||((+ (vt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '995988574')) AND ((NULL, vt0.c0, vt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '995988574')) AND ((NULL, vt0.c0, vt0.c0))) AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '995988574')) AND ((NULL, vt0.c0, vt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '995988574')) AND ((NULL, vt0.c0, vt0.c0))) AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '995988574')) AND ((NULL, vt0.c0, vt0.c0))) AS TEXT));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY t0.c0;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS INTEGER));
SELECT * FROM vt0, t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(vt0.c0))) BETWEEN (((((t0.c0)AND(t0.c0)))OR(vt0.c0))) AND (vt0.c0))) ORDER BY CASE CAST(vt0.c0 AS INTEGER)  WHEN t0.c0 COLLATE RTRIM THEN 0.5542526830698972 ELSE ((t0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(vt0.c0))) BETWEEN (((((t0.c0)AND(t0.c0)))OR(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE CAST(vt0.c0 AS INTEGER)  WHEN t0.c0 COLLATE RTRIM THEN 0.5542526830698972 ELSE ((t0.c0) NOT NULL) END);
SELECT * FROM vt0, t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(vt0.c0))) BETWEEN (((((t0.c0)AND(t0.c0)))OR(vt0.c0))) AND (vt0.c0))) ORDER BY CASE CAST(vt0.c0 AS INTEGER)  WHEN t0.c0 COLLATE RTRIM THEN 0.5542526830698972 ELSE ((t0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(vt0.c0))) BETWEEN (((((t0.c0)AND(t0.c0)))OR(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE CAST(vt0.c0 AS INTEGER)  WHEN t0.c0 COLLATE RTRIM THEN 0.5542526830698972 ELSE ((t0.c0) NOT NULL) END);
SELECT * FROM vt0, t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(vt0.c0))) BETWEEN (((((t0.c0)AND(t0.c0)))OR(vt0.c0))) AND (vt0.c0))) ORDER BY CASE CAST(vt0.c0 AS INTEGER)  WHEN t0.c0 COLLATE RTRIM THEN 0.5542526830698972 ELSE ((t0.c0) NOT NULL) END;
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON t0.c0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END AS NUMERIC)) ORDER BY 'tY5{}t' COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON t0.c0 ORDER BY 'tY5{}t' COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON t0.c0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END AS NUMERIC)) ORDER BY 'tY5{}t' COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON t0.c0 ORDER BY 'tY5{}t' COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON t0.c0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END AS NUMERIC)) ORDER BY 'tY5{}t' COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE RTRIM LEFT OUTER JOIN vt1 ON (NOT (((vt0.c0)>=(t0.c0)))) WHERE (UPPER((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((UPPER((t0.c0 IN ()))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE RTRIM LEFT OUTER JOIN vt1 ON (NOT (((vt0.c0)>=(t0.c0)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE RTRIM LEFT OUTER JOIN vt1 ON (NOT (((vt0.c0)>=(t0.c0)))) WHERE (UPPER((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((UPPER((t0.c0 IN ()))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE RTRIM LEFT OUTER JOIN vt1 ON (NOT (((vt0.c0)>=(t0.c0)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE RTRIM LEFT OUTER JOIN vt1 ON (NOT (((vt0.c0)>=(t0.c0)))) WHERE (UPPER((t0.c0 IN ())));
SELECT ALL * FROM t0, vt0, vt1 WHERE ((+ (((vt1.c0)&(t0.c0))))) ORDER BY LIKELIHOOD(DISTINCT NULLIF(DISTINCT vt0.c0, vt1.c0), 0.5221393043458465) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)&(t0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY LIKELIHOOD(DISTINCT NULLIF(DISTINCT vt0.c0, vt1.c0), 0.5221393043458465) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((+ (((vt1.c0)&(t0.c0))))) ORDER BY LIKELIHOOD(DISTINCT NULLIF(DISTINCT vt0.c0, vt1.c0), 0.5221393043458465) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)&(t0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY LIKELIHOOD(DISTINCT NULLIF(DISTINCT vt0.c0, vt1.c0), 0.5221393043458465) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((+ (((vt1.c0)&(t0.c0))))) ORDER BY LIKELIHOOD(DISTINCT NULLIF(DISTINCT vt0.c0, vt1.c0), 0.5221393043458465) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN vt1 ON CAST(((vt1.c0)&(t0.c0)) AS REAL) WHERE (((ABS(DISTINCT t0.c0))*(t0.c0 COLLATE BINARY))) ORDER BY ((t0.c0)<=(t0.c0)) COLLATE BINARY, vt1.c0 COLLATE BINARY  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT t0.c0))*(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON CAST(((vt1.c0)&(t0.c0)) AS REAL) ORDER BY ((t0.c0)<=(t0.c0)) COLLATE BINARY, vt1.c0 COLLATE BINARY  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE));
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN vt1 ON CAST(((vt1.c0)&(t0.c0)) AS REAL) WHERE (((ABS(DISTINCT t0.c0))*(t0.c0 COLLATE BINARY))) ORDER BY ((t0.c0)<=(t0.c0)) COLLATE BINARY, vt1.c0 COLLATE BINARY  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT t0.c0))*(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON CAST(((vt1.c0)&(t0.c0)) AS REAL) ORDER BY ((t0.c0)<=(t0.c0)) COLLATE BINARY, vt1.c0 COLLATE BINARY  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE));
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN vt1 ON CAST(((vt1.c0)&(t0.c0)) AS REAL) WHERE (((ABS(DISTINCT t0.c0))*(t0.c0 COLLATE BINARY))) ORDER BY ((t0.c0)<=(t0.c0)) COLLATE BINARY, vt1.c0 COLLATE BINARY  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE);
SELECT ALL * FROM vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (x'');
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON (- ((((vt0.c0))!=((t0.c0))))) LEFT OUTER JOIN vt0 ON ((CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN (((t0.c0) IS FALSE)) AND (vt1.c0)) WHERE (((t0.c0) BETWEEN ((- (vt0.c0))) AND (((((((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('%~mqHBꐢ''')))OR(t0.c0)))AND(t0.c0))))) ORDER BY (('') NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN ((- (vt0.c0))) AND (((((((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('%~mqHBꐢ''')))OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (- ((((vt0.c0))!=((t0.c0))))) LEFT OUTER JOIN vt0 ON ((CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN (((t0.c0) IS FALSE)) AND (vt1.c0)) ORDER BY (('') NOTNULL));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON (- ((((vt0.c0))!=((t0.c0))))) LEFT OUTER JOIN vt0 ON ((CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN (((t0.c0) IS FALSE)) AND (vt1.c0)) WHERE (((t0.c0) BETWEEN ((- (vt0.c0))) AND (((((((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('%~mqHBꐢ''')))OR(t0.c0)))AND(t0.c0))))) ORDER BY (('') NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN ((- (vt0.c0))) AND (((((((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('%~mqHBꐢ''')))OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (- ((((vt0.c0))!=((t0.c0))))) LEFT OUTER JOIN vt0 ON ((CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN (((t0.c0) IS FALSE)) AND (vt1.c0)) ORDER BY (('') NOTNULL));
SELECT COUNT(*) FROM t0, vt1, vt0 INDEXED BY i80 WHERE (((((((((((vt0.c0) ISNULL))AND(t0.c0)))AND((((vt0.c0, x'7ea3', -3.95560752E8, vt0.c0, vt0.c0))<((vt1.c0, t0.c0, NULL, vt0.c0, vt1.c0))))))AND((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))))))AND(CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) ISNULL))AND(t0.c0)))AND((((vt0.c0, x'7ea3', -3.95560752E8, vt0.c0, vt0.c0))<((vt1.c0, t0.c0, NULL, vt0.c0, vt1.c0))))))AND((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))))))AND(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt1, vt0 INDEXED BY i80);
SELECT COUNT(*) FROM t0, vt1, vt0 INDEXED BY i80 WHERE (((((((((((vt0.c0) ISNULL))AND(t0.c0)))AND((((vt0.c0, x'7ea3', -3.95560752E8, vt0.c0, vt0.c0))<((vt1.c0, t0.c0, NULL, vt0.c0, vt1.c0))))))AND((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))))))AND(CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) ISNULL))AND(t0.c0)))AND((((vt0.c0, x'7ea3', -3.95560752E8, vt0.c0, vt0.c0))<((vt1.c0, t0.c0, NULL, vt0.c0, vt1.c0))))))AND((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))))))AND(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt1, vt0 INDEXED BY i80);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END) IS TRUE));
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((((((+ (t0.c0)))OR(t0.c0)))OR(((vt1.c0)IS NOT(t0.c0)))))AND(NULL)))OR(NULLIF(DISTINCT vt1.c0, t0.c0)))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((+ (t0.c0)))OR(t0.c0)))OR(((vt1.c0)IS NOT(t0.c0)))))AND(NULL)))OR(NULLIF(DISTINCT vt1.c0, t0.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((((((+ (t0.c0)))OR(t0.c0)))OR(((vt1.c0)IS NOT(t0.c0)))))AND(NULL)))OR(NULLIF(DISTINCT vt1.c0, t0.c0)))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((+ (t0.c0)))OR(t0.c0)))OR(((vt1.c0)IS NOT(t0.c0)))))AND(NULL)))OR(NULLIF(DISTINCT vt1.c0, t0.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((((((+ (t0.c0)))OR(t0.c0)))OR(((vt1.c0)IS NOT(t0.c0)))))AND(NULL)))OR(NULLIF(DISTINCT vt1.c0, t0.c0)))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END) IS TRUE)) ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)>>(vt1.c0))))  NULLS LAST, vt0.c0, (((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)>>(vt1.c0))))  NULLS LAST, vt0.c0, (((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END) IS TRUE)) ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)>>(vt1.c0))))  NULLS LAST, vt0.c0, (((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)>>(vt1.c0))))  NULLS LAST, vt0.c0, (((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END) IS TRUE)) ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)>>(vt1.c0))))  NULLS LAST, vt0.c0, (((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(vt0.c0))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c0)GLOB(t0.c0))))) ORDER BY (((- (t0.c0)))<(((t0.c0)OR(t0.c0))))  NULLS FIRST, ((CAST(t0.c0 AS NUMERIC))+(CAST(t0.c0 AS NUMERIC))), (((t0.c0)!=(x'4d66')) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)GLOB(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((- (t0.c0)))<(((t0.c0)OR(t0.c0))))  NULLS FIRST, ((CAST(t0.c0 AS NUMERIC))+(CAST(t0.c0 AS NUMERIC))), (((t0.c0)!=(x'4d66')) IN ())  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c0)GLOB(t0.c0))))) ORDER BY (((- (t0.c0)))<(((t0.c0)OR(t0.c0))))  NULLS FIRST, ((CAST(t0.c0 AS NUMERIC))+(CAST(t0.c0 AS NUMERIC))), (((t0.c0)!=(x'4d66')) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)GLOB(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((- (t0.c0)))<(((t0.c0)OR(t0.c0))))  NULLS FIRST, ((CAST(t0.c0 AS NUMERIC))+(CAST(t0.c0 AS NUMERIC))), (((t0.c0)!=(x'4d66')) IN ())  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c0)GLOB(t0.c0))))) ORDER BY (((- (t0.c0)))<(((t0.c0)OR(t0.c0))))  NULLS FIRST, ((CAST(t0.c0 AS NUMERIC))+(CAST(t0.c0 AS NUMERIC))), (((t0.c0)!=(x'4d66')) IN ())  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt0 WHERE ('-292716691');
SELECT SUM(count) FROM (SELECT ALL (('-292716691') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('-292716691');
SELECT SUM(count) FROM (SELECT ALL (('-292716691') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('-292716691');
SELECT ALL * FROM t0 WHERE (((t0.c0)<=(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)<=(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0)<=(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)<=(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0)<=(t0.c0)) COLLATE RTRIM);
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) IN ()) WHERE (((((NULL) NOT BETWEEN (t0.c0) AND (vt1.c0)))==((t0.c0 IN ('P', vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (t0.c0) AND (vt1.c0)))=((t0.c0 IN ('P', vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) IN ()));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) IN ()) WHERE (((((NULL) NOT BETWEEN (t0.c0) AND (vt1.c0)))==((t0.c0 IN ('P', vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (t0.c0) AND (vt1.c0)))=((t0.c0 IN ('P', vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) IN ()));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) IN ()) WHERE (((((NULL) NOT BETWEEN (t0.c0) AND (vt1.c0)))==((t0.c0 IN ('P', vt1.c0)))));
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((- (t0.c0)))) AND ((-1e500)))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)==(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC, ((((t0.c0)GLOB(t0.c0)))>=(((t0.c0) IS TRUE))) ASC  NULLS LAST, (((((t0.c0)/(t0.c0)), t0.c0 COLLATE BINARY, ((t0.c0)<<(t0.c0))))<=(((('0.4247454661765633') BETWEEN (t0.c0) AND ('-571829152')), ((((t0.c0)AND(t0.c0)))AND(t0.c0)), LIKELY(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN (((- (t0.c0)))) AND ((-1e500)))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)==(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC, ((((t0.c0)GLOB(t0.c0)))>=(((t0.c0) IS TRUE))) ASC  NULLS LAST, (((((t0.c0)/(t0.c0)), t0.c0 COLLATE BINARY, ((t0.c0)<<(t0.c0))))<=(((('0.4247454661765633') BETWEEN (t0.c0) AND ('-571829152')), ((((t0.c0)AND(t0.c0)))AND(t0.c0)), LIKELY(t0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((- (t0.c0)))) AND ((-1e500)))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)==(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC, ((((t0.c0)GLOB(t0.c0)))>=(((t0.c0) IS TRUE))) ASC  NULLS LAST, (((((t0.c0)/(t0.c0)), t0.c0 COLLATE BINARY, ((t0.c0)<<(t0.c0))))<=(((('0.4247454661765633') BETWEEN (t0.c0) AND ('-571829152')), ((((t0.c0)AND(t0.c0)))AND(t0.c0)), LIKELY(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN (((- (t0.c0)))) AND ((-1e500)))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)==(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC, ((((t0.c0)GLOB(t0.c0)))>=(((t0.c0) IS TRUE))) ASC  NULLS LAST, (((((t0.c0)/(t0.c0)), t0.c0 COLLATE BINARY, ((t0.c0)<<(t0.c0))))<=(((('0.4247454661765633') BETWEEN (t0.c0) AND ('-571829152')), ((((t0.c0)AND(t0.c0)))AND(t0.c0)), LIKELY(t0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((- (t0.c0)))) AND ((-1e500)))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)==(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC, ((((t0.c0)GLOB(t0.c0)))>=(((t0.c0) IS TRUE))) ASC  NULLS LAST, (((((t0.c0)/(t0.c0)), t0.c0 COLLATE BINARY, ((t0.c0)<<(t0.c0))))<=(((('0.4247454661765633') BETWEEN (t0.c0) AND ('-571829152')), ((((t0.c0)AND(t0.c0)))AND(t0.c0)), LIKELY(t0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) WHERE (((((+ (t0.c0)), ((vt1.c0)!=(vt1.c0)), ((vt0.c0)>(t0.c0))))<=(((vt0.c0 IN ()), (+ (vt1.c0)), ((vt0.c0)>(t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((+ (t0.c0)), ((vt1.c0)<>(vt1.c0)), ((vt0.c0)>(t0.c0))))<=(((vt0.c0 IN ()), (+ (vt1.c0)), ((vt0.c0)>(t0.c0)))))) IS TRUE)  as count FROM t0, vt1 NOT INDEXED FULL OUTER JOIN vt0 ON (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) WHERE (((((+ (t0.c0)), ((vt1.c0)!=(vt1.c0)), ((vt0.c0)>(t0.c0))))<=(((vt0.c0 IN ()), (+ (vt1.c0)), ((vt0.c0)>(t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((+ (t0.c0)), ((vt1.c0)<>(vt1.c0)), ((vt0.c0)>(t0.c0))))<=(((vt0.c0 IN ()), (+ (vt1.c0)), ((vt0.c0)>(t0.c0)))))) IS TRUE)  as count FROM t0, vt1 NOT INDEXED FULL OUTER JOIN vt0 ON (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) WHERE (((((+ (t0.c0)), ((vt1.c0)!=(vt1.c0)), ((vt0.c0)>(t0.c0))))<=(((vt0.c0 IN ()), (+ (vt1.c0)), ((vt0.c0)>(t0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))|(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0)))|(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))|(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0)))|(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))|(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM t0, vt1 WHERE ((~ (vt1.c0 COLLATE RTRIM))) ORDER BY ((LTRIM(t0.c0, t0.c0))>(((0.040751682937536504) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((LTRIM(t0.c0, t0.c0))>(((0.040751682937536504) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC);
SELECT ALL * FROM t0, vt1 WHERE ((~ (vt1.c0 COLLATE RTRIM))) ORDER BY ((LTRIM(t0.c0, t0.c0))>(((0.040751682937536504) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((LTRIM(t0.c0, t0.c0))>(((0.040751682937536504) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC);
SELECT ALL * FROM t0, vt1 WHERE ((~ (vt1.c0 COLLATE RTRIM))) ORDER BY ((LTRIM(t0.c0, t0.c0))>(((0.040751682937536504) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC;
SELECT * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (((vt1.c0)*(vt1.c0))) AND ((((vt1.c0))>=((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (((vt1.c0)*(vt1.c0))) AND ((((vt1.c0))>=((NULL)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (((vt1.c0)*(vt1.c0))) AND ((((vt1.c0))>=((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (((vt1.c0)*(vt1.c0))) AND ((((vt1.c0))>=((NULL)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (((vt1.c0)*(vt1.c0))) AND ((((vt1.c0))>=((NULL))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((0.10359097681993912) NOTNULL))/(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.10359097681993912) NOTNULL))/(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((0.10359097681993912) NOTNULL))/(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.10359097681993912) NOTNULL))/(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((0.10359097681993912) NOTNULL))/(CAST(vt1.c0 AS INTEGER))));
SELECT * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(((x'')<(vt1.c0)))))OR(((vt1.c0)>>(vt1.c0))))) ORDER BY ((TRIM(vt1.c0))|(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(((x'')<(vt1.c0)))))OR(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((TRIM(vt1.c0))|(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(((x'')<(vt1.c0)))))OR(((vt1.c0)>>(vt1.c0))))) ORDER BY ((TRIM(vt1.c0))|(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(((x'')<(vt1.c0)))))OR(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((TRIM(vt1.c0))|(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(((x'')<(vt1.c0)))))OR(((vt1.c0)>>(vt1.c0))))) ORDER BY ((TRIM(vt1.c0))|(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))/((vt1.c0 IN ('1143504015'))))) ORDER BY json(vt1.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))/((vt1.c0 IN ('1143504015'))))) IS TRUE)  as count FROM vt1 ORDER BY json(vt1.c0) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))/((vt1.c0 IN ('1143504015'))))) ORDER BY json(vt1.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))/((vt1.c0 IN ('1143504015'))))) IS TRUE)  as count FROM vt1 ORDER BY json(vt1.c0) COLLATE NOCASE DESC);
SELECT * FROM vt0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE (CAST((x'7c39' IN ()) AS TEXT)) ORDER BY (vt1.c0 IN ((('2q') BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(0.11546120198043508)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((x'7c39' IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ORDER BY (vt1.c0 IN ((('2q') BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(0.11546120198043508)))AND(vt0.c0)) IN ()));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE (CAST((x'7c39' IN ()) AS TEXT)) ORDER BY (vt1.c0 IN ((('2q') BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(0.11546120198043508)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((x'7c39' IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ORDER BY (vt1.c0 IN ((('2q') BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(0.11546120198043508)))AND(vt0.c0)) IN ()));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE (CAST((x'7c39' IN ()) AS TEXT)) ORDER BY (vt1.c0 IN ((('2q') BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(0.11546120198043508)))AND(vt0.c0)) IN ());
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (+ (NULL)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (+ (NULL)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (+ (NULL)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (+ (NULL)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (+ (NULL)) WHERE (NULL);
SELECT COUNT(*) FROM vt1 WHERE (((x'7739b6da')GLOB(vt1.c0)) COLLATE NOCASE) ORDER BY ((vt1.c0)=(vt1.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'7739b6da')GLOB(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)=(vt1.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt1 WHERE (((x'7739b6da')GLOB(vt1.c0)) COLLATE NOCASE) ORDER BY ((vt1.c0)=(vt1.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'7739b6da')GLOB(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)=(vt1.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt1 WHERE (((x'7739b6da')GLOB(vt1.c0)) COLLATE NOCASE) ORDER BY ((vt1.c0)=(vt1.c0)) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE (~ (t0.c0))  WHEN vt0.c0 THEN ((t0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (t0.c0))  WHEN vt0.c0 THEN ((t0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE (~ (t0.c0))  WHEN vt0.c0 THEN ((t0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (t0.c0))  WHEN vt0.c0 THEN ((t0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE (~ (t0.c0))  WHEN vt0.c0 THEN ((t0.c0) NOT NULL) END);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c0) ISNULL))|((t0.c0 IN (vt0.c0))))) ORDER BY (((((vt0.c0)<(vt0.c0))))=((((vt0.c0)&(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL))|((t0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (((((vt0.c0)<(vt0.c0))))==((((vt0.c0)&(t0.c0))))));
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c0) ISNULL))|((t0.c0 IN (vt0.c0))))) ORDER BY (((((vt0.c0)<(vt0.c0))))=((((vt0.c0)&(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL))|((t0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (((((vt0.c0)<(vt0.c0))))==((((vt0.c0)&(t0.c0))))));
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c0) ISNULL))|((t0.c0 IN (vt0.c0))))) ORDER BY (((((vt0.c0)<(vt0.c0))))=((((vt0.c0)&(t0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (HEX(DISTINCT vt1.c0)) ORDER BY ((vt1.c0)>=(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC, (((('-1715019246') NOTNULL)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)>=(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC, (((('-1715019246') NOTNULL)) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (HEX(DISTINCT vt1.c0)) ORDER BY ((vt1.c0)>=(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC, (((('-1715019246') NOTNULL)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)>=(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC, (((('-1715019246') NOTNULL)) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (HEX(DISTINCT vt1.c0)) ORDER BY ((vt1.c0)>=(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC, (((('-1715019246') NOTNULL)) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c0)))OR(t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)OR(t0.c0)))OR(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c0)))OR(t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)OR(t0.c0)))OR(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c0)))OR(t0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))LIKE(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))LIKE(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))LIKE(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))LIKE(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))LIKE(vt0.c0)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (~ (vt0.c0)) FULL OUTER JOIN t0 ON ((TRIM(DISTINCT 0X2ad92590, vt0.c0))=(vt0.c0 COLLATE BINARY)) WHERE (0.20190196767787494);
SELECT SUM(count) FROM (SELECT ((0.20190196767787494) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (~ (vt0.c0)) FULL OUTER JOIN t0 ON ((TRIM(DISTINCT 0X2ad92590, vt0.c0))==(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (~ (vt0.c0)) FULL OUTER JOIN t0 ON ((TRIM(DISTINCT 0X2ad92590, vt0.c0))=(vt0.c0 COLLATE BINARY)) WHERE (0.20190196767787494);
SELECT SUM(count) FROM (SELECT ((0.20190196767787494) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (~ (vt0.c0)) FULL OUTER JOIN t0 ON ((TRIM(DISTINCT 0X2ad92590, vt0.c0))==(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (~ (vt0.c0)) FULL OUTER JOIN t0 ON ((TRIM(DISTINCT 0X2ad92590, vt0.c0))=(vt0.c0 COLLATE BINARY)) WHERE (0.20190196767787494);
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0)>=(NULL)))) AND ((((t0.c0)AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((((t0.c0)>=(NULL)))) AND ((((t0.c0)AND(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0)>=(NULL)))) AND ((((t0.c0)AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((((t0.c0)>=(NULL)))) AND ((((t0.c0)AND(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0)>=(NULL)))) AND ((((t0.c0)AND(t0.c0))))));
SELECT ALL * FROM vt0, vt1 WHERE (((NULL) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((x'bbf5'))))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((x'bbf5')))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((NULL) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((x'bbf5'))))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((x'bbf5')))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((NULL) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((x'bbf5'))))));
SELECT * FROM vt1, t0 WHERE ((((((((((vt1.c0 IN ()))AND(t0.c0 COLLATE RTRIM)))OR((vt1.c0 IN ()))))AND(vt1.c0 COLLATE NOCASE)))AND(CAST(vt1.c0 AS INTEGER)))) ORDER BY ((((((vt1.c0) BETWEEN (t0.c0) AND ('0.2972956169277974')))AND((vt1.c0 IN ()))))AND(UNLIKELY(DISTINCT vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0 IN ()))AND(t0.c0 COLLATE RTRIM)))OR((vt1.c0 IN ()))))AND(vt1.c0 COLLATE NOCASE)))AND(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((vt1.c0) BETWEEN (t0.c0) AND ('0.2972956169277974')))AND((vt1.c0 IN ()))))AND(UNLIKELY(DISTINCT vt1.c0)))  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ((((((((((vt1.c0 IN ()))AND(t0.c0 COLLATE RTRIM)))OR((vt1.c0 IN ()))))AND(vt1.c0 COLLATE NOCASE)))AND(CAST(vt1.c0 AS INTEGER)))) ORDER BY ((((((vt1.c0) BETWEEN (t0.c0) AND ('0.2972956169277974')))AND((vt1.c0 IN ()))))AND(UNLIKELY(DISTINCT vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0 IN ()))AND(t0.c0 COLLATE RTRIM)))OR((vt1.c0 IN ()))))AND(vt1.c0 COLLATE NOCASE)))AND(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((vt1.c0) BETWEEN (t0.c0) AND ('0.2972956169277974')))AND((vt1.c0 IN ()))))AND(UNLIKELY(DISTINCT vt1.c0)))  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (json_quote(TYPEOF(DISTINCT t0.c0))) ORDER BY LIKELY(((vt1.c0) NOT NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(TYPEOF(DISTINCT t0.c0))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY LIKELY(((vt1.c0) NOT NULL)) ASC);
SELECT ALL * FROM t0, vt0, vt1 WHERE (json_quote(TYPEOF(DISTINCT t0.c0))) ORDER BY LIKELY(((vt1.c0) NOT NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(TYPEOF(DISTINCT t0.c0))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY LIKELY(((vt1.c0) NOT NULL)) ASC);
SELECT ALL * FROM t0, vt0, vt1 WHERE (json_quote(TYPEOF(DISTINCT t0.c0))) ORDER BY LIKELY(((vt1.c0) NOT NULL)) ASC;
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('', t0.c0, t0.c0)) AND ((t0.c0, vt0.c0, t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('', t0.c0, t0.c0)) AND ((t0.c0, vt0.c0, t0.c0))) IN ())) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('', t0.c0, t0.c0)) AND ((t0.c0, vt0.c0, t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('', t0.c0, t0.c0)) AND ((t0.c0, vt0.c0, t0.c0))) IN ())) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('', t0.c0, t0.c0)) AND ((t0.c0, vt0.c0, t0.c0))) IN ()));
SELECT * FROM t0, vt0, vt1 WHERE (CASE vt0.c0  WHEN CASE WHEN t0.c0 THEN 0xffffffff9f54222b WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN CASE WHEN t0.c0 THEN 0xffffffff9f54222b WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (CASE vt0.c0  WHEN CASE WHEN t0.c0 THEN 0xffffffff9f54222b WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN CASE WHEN t0.c0 THEN 0xffffffff9f54222b WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (CASE vt0.c0  WHEN CASE WHEN t0.c0 THEN 0xffffffff9f54222b WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (~ (vt1.c0)) END);
SELECT * FROM vt1, vt0 WHERE (((((((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)AND((((vt0.c0))<=((vt1.c0))))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1934765543' THEN vt0.c0 END)))OR('')))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)AND((((vt0.c0))<=((vt1.c0))))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1934765543' THEN vt0.c0 END)))OR('')))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)AND((((vt0.c0))<=((vt1.c0))))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1934765543' THEN vt0.c0 END)))OR('')))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)AND((((vt0.c0))<=((vt1.c0))))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1934765543' THEN vt0.c0 END)))OR('')))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)AND((((vt0.c0))<=((vt1.c0))))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1934765543' THEN vt0.c0 END)))OR('')))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT * FROM t0, vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 END)<<('1934765543'))) ORDER BY ((((vt1.c0) IS TRUE)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt1.c0 END)<<('1934765543'))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((vt1.c0) IS TRUE)) IS TRUE) DESC  NULLS LAST);
SELECT * FROM t0, vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 END)<<('1934765543'))) ORDER BY ((((vt1.c0) IS TRUE)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt1.c0 END)<<('1934765543'))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((vt1.c0) IS TRUE)) IS TRUE) DESC  NULLS LAST);
SELECT * FROM t0, vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 END)<<('1934765543'))) ORDER BY ((((vt1.c0) IS TRUE)) IS TRUE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON x'401d' COLLATE RTRIM WHERE ((((((vt1.c0 IN ()))OR((NULL IN (vt0.c0)))))AND((NOT (vt0.c0))))) ORDER BY ((((vt0.c0)IS(vt1.c0))) NOT BETWEEN ((vt1.c0 IN (vt0.c0))) AND (vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))OR((NULL IN (vt0.c0)))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON x'401d' COLLATE RTRIM ORDER BY ((((vt0.c0)IS(vt1.c0))) NOT BETWEEN ((vt1.c0 IN (vt0.c0))) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON x'401d' COLLATE RTRIM WHERE ((((((vt1.c0 IN ()))OR((NULL IN (vt0.c0)))))AND((NOT (vt0.c0))))) ORDER BY ((((vt0.c0)IS(vt1.c0))) NOT BETWEEN ((vt1.c0 IN (vt0.c0))) AND (vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))OR((NULL IN (vt0.c0)))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON x'401d' COLLATE RTRIM ORDER BY ((((vt0.c0)IS(vt1.c0))) NOT BETWEEN ((vt1.c0 IN (vt0.c0))) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON x'401d' COLLATE RTRIM WHERE ((((((vt1.c0 IN ()))OR((NULL IN (vt0.c0)))))AND((NOT (vt0.c0))))) ORDER BY ((((vt0.c0)IS(vt1.c0))) NOT BETWEEN ((vt1.c0 IN (vt0.c0))) AND (vt0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((NOT (((t0.c0)LIKE(vt1.c0))))) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY t0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((NOT (((t0.c0)LIKE(vt1.c0))))) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY t0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((NOT (((t0.c0)LIKE(vt1.c0))))) ORDER BY t0.c0  NULLS LAST;
SELECT * FROM vt1 WHERE ((+ (CAST(vt1.c0 AS BLOB)))) ORDER BY ((((vt1.c0)=(vt1.c0)))IS(vt1.c0))  NULLS LAST, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((((((vt1.c0)AND(NULL)))OR(vt1.c0)))))  NULLS LAST, CASE WHEN (~ (vt1.c0)) THEN ((((vt1.c0)OR('>0\nR	')))AND(vt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)==(vt1.c0)))IS(vt1.c0))  NULLS LAST, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((((((vt1.c0)AND(NULL)))OR(vt1.c0)))))  NULLS LAST, CASE WHEN (~ (vt1.c0)) THEN ((((vt1.c0)OR('>0\nR	')))AND(vt1.c0)) END DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((+ (CAST(vt1.c0 AS BLOB)))) ORDER BY ((((vt1.c0)=(vt1.c0)))IS(vt1.c0))  NULLS LAST, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((((((vt1.c0)AND(NULL)))OR(vt1.c0)))))  NULLS LAST, CASE WHEN (~ (vt1.c0)) THEN ((((vt1.c0)OR('>0\nR	')))AND(vt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)==(vt1.c0)))IS(vt1.c0))  NULLS LAST, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((((((vt1.c0)AND(NULL)))OR(vt1.c0)))))  NULLS LAST, CASE WHEN (~ (vt1.c0)) THEN ((((vt1.c0)OR('>0\nR	')))AND(vt1.c0)) END DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((+ (CAST(vt1.c0 AS BLOB)))) ORDER BY ((((vt1.c0)=(vt1.c0)))IS(vt1.c0))  NULLS LAST, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((((((vt1.c0)AND(NULL)))OR(vt1.c0)))))  NULLS LAST, CASE WHEN (~ (vt1.c0)) THEN ((((vt1.c0)OR('>0\nR	')))AND(vt1.c0)) END DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((((((+ (vt0.c0)))AND(vt0.c0)))OR(NULL COLLATE NOCASE)))OR(CAST(x'a559' AS TEXT))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((+ (vt0.c0)))AND(vt0.c0)))OR(NULL COLLATE NOCASE)))OR(CAST(x'a559' AS TEXT))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((((((+ (vt0.c0)))AND(vt0.c0)))OR(NULL COLLATE NOCASE)))OR(CAST(x'a559' AS TEXT))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((+ (vt0.c0)))AND(vt0.c0)))OR(NULL COLLATE NOCASE)))OR(CAST(x'a559' AS TEXT))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((((((+ (vt0.c0)))AND(vt0.c0)))OR(NULL COLLATE NOCASE)))OR(CAST(x'a559' AS TEXT))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY NULL  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt0.c0, vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt0.c0, vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0)) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CASE ((vt1.c0) BETWEEN (NULL) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY (((t0.c0 IN ()))+(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) BETWEEN (NULL) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((t0.c0 IN ()))+(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CASE ((vt1.c0) BETWEEN (NULL) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY (((t0.c0 IN ()))+(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) BETWEEN (NULL) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((t0.c0 IN ()))+(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CASE ((vt1.c0) BETWEEN (NULL) AND (t0.c0))  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY (((t0.c0 IN ()))+(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON CAST((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS NUMERIC) WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c0) NOTNULL)))) ORDER BY (((((((((- (vt0.c0)))AND(((vt1.c0)-(NULL)))))OR(vt0.c0 COLLATE BINARY)))OR(x'')))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC  NULLS FIRST, ((TYPEOF(NULL))<(LIKELIHOOD(DISTINCT vt0.c0, 0.2569490532491906))) ASC  NULLS LAST, TRIM(((vt1.c0) IS TRUE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS NUMERIC) ORDER BY (((((((((- (vt0.c0)))AND(((vt1.c0)-(NULL)))))OR(vt0.c0 COLLATE BINARY)))OR(x'')))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC  NULLS FIRST, ((TYPEOF(NULL))<(LIKELIHOOD(DISTINCT vt0.c0, 0.2569490532491906))) ASC  NULLS LAST, TRIM(((vt1.c0) IS TRUE)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON CAST((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS NUMERIC) WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c0) NOTNULL)))) ORDER BY (((((((((- (vt0.c0)))AND(((vt1.c0)-(NULL)))))OR(vt0.c0 COLLATE BINARY)))OR(x'')))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC  NULLS FIRST, ((TYPEOF(NULL))<(LIKELIHOOD(DISTINCT vt0.c0, 0.2569490532491906))) ASC  NULLS LAST, TRIM(((vt1.c0) IS TRUE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS NUMERIC) ORDER BY (((((((((- (vt0.c0)))AND(((vt1.c0)-(NULL)))))OR(vt0.c0 COLLATE BINARY)))OR(x'')))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC  NULLS FIRST, ((TYPEOF(NULL))<(LIKELIHOOD(DISTINCT vt0.c0, 0.2569490532491906))) ASC  NULLS LAST, TRIM(((vt1.c0) IS TRUE)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON CAST((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS NUMERIC) WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c0) NOTNULL)))) ORDER BY (((((((((- (vt0.c0)))AND(((vt1.c0)-(NULL)))))OR(vt0.c0 COLLATE BINARY)))OR(x'')))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC  NULLS FIRST, ((TYPEOF(NULL))<(LIKELIHOOD(DISTINCT vt0.c0, 0.2569490532491906))) ASC  NULLS LAST, TRIM(((vt1.c0) IS TRUE)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((vt0.c0)=(vt1.c0))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(vt1.c0))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((vt0.c0)=(vt1.c0))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(vt1.c0))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((vt0.c0)=(vt1.c0))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0) ISNULL))));
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON ((CASE vt0.c0  WHEN 0.09474916716333992 THEN vt0.c0 END)OR(((t0.c0) BETWEEN (0.4279258639454694) AND (t0.c0)))) WHERE (((x'') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT NULL)) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON ((CASE vt0.c0  WHEN 0.09474916716333992 THEN vt0.c0 END)OR(((t0.c0) BETWEEN (0.4279258639454694) AND (t0.c0)))));
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON ((CASE vt0.c0  WHEN 0.09474916716333992 THEN vt0.c0 END)OR(((t0.c0) BETWEEN (0.4279258639454694) AND (t0.c0)))) WHERE (((x'') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT NULL)) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON ((CASE vt0.c0  WHEN 0.09474916716333992 THEN vt0.c0 END)OR(((t0.c0) BETWEEN (0.4279258639454694) AND (t0.c0)))));
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON ((CASE vt0.c0  WHEN 0.09474916716333992 THEN vt0.c0 END)OR(((t0.c0) BETWEEN (0.4279258639454694) AND (t0.c0)))) WHERE (((x'') NOT NULL));
SELECT * FROM vt0 CROSS JOIN t0 ON ((json_object(vt1.c0, t0.c0)) BETWEEN (((t0.c0)>(vt1.c0))) AND (((vt1.c0)*(vt0.c0)))) FULL OUTER JOIN vt1 ON (((vt1.c0, t0.c0, vt0.c0, x'', vt1.c0)) BETWEEN ((t0.c0, t0.c0, vt1.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, vt1.c0, t0.c0, vt0.c0))) COLLATE RTRIM WHERE (0.7898034360351253) ORDER BY CAST(((vt0.c0) ISNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((0.7898034360351253) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((json_object(vt1.c0, t0.c0)) BETWEEN (((t0.c0)>(vt1.c0))) AND (((vt1.c0)*(vt0.c0)))) FULL OUTER JOIN vt1 ON (((vt1.c0, t0.c0, vt0.c0, x'', vt1.c0)) BETWEEN ((t0.c0, t0.c0, vt1.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, vt1.c0, t0.c0, vt0.c0))) COLLATE RTRIM ORDER BY CAST(((vt0.c0) ISNULL) AS INTEGER));
SELECT * FROM vt0 CROSS JOIN t0 ON ((json_object(vt1.c0, t0.c0)) BETWEEN (((t0.c0)>(vt1.c0))) AND (((vt1.c0)*(vt0.c0)))) FULL OUTER JOIN vt1 ON (((vt1.c0, t0.c0, vt0.c0, x'', vt1.c0)) BETWEEN ((t0.c0, t0.c0, vt1.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, vt1.c0, t0.c0, vt0.c0))) COLLATE RTRIM WHERE (0.7898034360351253) ORDER BY CAST(((vt0.c0) ISNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((0.7898034360351253) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((json_object(vt1.c0, t0.c0)) BETWEEN (((t0.c0)>(vt1.c0))) AND (((vt1.c0)*(vt0.c0)))) FULL OUTER JOIN vt1 ON (((vt1.c0, t0.c0, vt0.c0, x'', vt1.c0)) BETWEEN ((t0.c0, t0.c0, vt1.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, vt1.c0, t0.c0, vt0.c0))) COLLATE RTRIM ORDER BY CAST(((vt0.c0) ISNULL) AS INTEGER));
SELECT * FROM vt0, vt1, t0 WHERE (((((CAST(vt0.c0 AS REAL))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((((CAST(vt0.c0 AS REAL))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((((CAST(vt0.c0 AS REAL))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON (0.11546120198043508 IN ()) WHERE (((((t0.c0) NOTNULL)) NOTNULL)) ORDER BY ((((t0.c0)OR(vt0.c0)))OR(vt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON (0.11546120198043508 IN ()) ORDER BY ((((t0.c0)OR(vt0.c0)))OR(vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON (0.11546120198043508 IN ()) WHERE (((((t0.c0) NOTNULL)) NOTNULL)) ORDER BY ((((t0.c0)OR(vt0.c0)))OR(vt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON (0.11546120198043508 IN ()) ORDER BY ((((t0.c0)OR(vt0.c0)))OR(vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON (0.11546120198043508 IN ()) WHERE (((((t0.c0) NOTNULL)) NOTNULL)) ORDER BY ((((t0.c0)OR(vt0.c0)))OR(vt1.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)<=(vt1.c0)))AND(TRIM(vt1.c0))))AND(((0.39791740959781674)/(vt1.c0)))))AND((vt1.c0 IN ()))))AND(vt1.c0 COLLATE BINARY))) ORDER BY CAST((~ (vt1.c0)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)<=(vt1.c0)))AND(TRIM(vt1.c0))))AND(((0.39791740959781674)/(vt1.c0)))))AND((vt1.c0 IN ()))))AND(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY CAST((~ (vt1.c0)) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)<=(vt1.c0)))AND(TRIM(vt1.c0))))AND(((0.39791740959781674)/(vt1.c0)))))AND((vt1.c0 IN ()))))AND(vt1.c0 COLLATE BINARY))) ORDER BY CAST((~ (vt1.c0)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)<=(vt1.c0)))AND(TRIM(vt1.c0))))AND(((0.39791740959781674)/(vt1.c0)))))AND((vt1.c0 IN ()))))AND(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY CAST((~ (vt1.c0)) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)<=(vt1.c0)))AND(TRIM(vt1.c0))))AND(((0.39791740959781674)/(vt1.c0)))))AND((vt1.c0 IN ()))))AND(vt1.c0 COLLATE BINARY))) ORDER BY CAST((~ (vt1.c0)) AS TEXT) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((- (vt0.c0))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((- (vt0.c0))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((- (vt0.c0))) ORDER BY vt1.c0 DESC;
SELECT ALL * FROM vt0, vt1, t0 WHERE (CASE ((618677107) ISNULL)  WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((vt0.c0) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((618677107) ISNULL)  WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((vt0.c0) ISNULL)  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CASE ((618677107) ISNULL)  WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((vt0.c0) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((618677107) ISNULL)  WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((vt0.c0) ISNULL)  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CASE ((618677107) ISNULL)  WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((vt0.c0) ISNULL)  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((NULL)IS NOT(((((-1.500968879E9)OR(vt1.c0)))OR(vt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT(((((-1.500968879E9)OR(vt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0, vt1 WHERE (((NULL)IS NOT(((((-1.500968879E9)OR(vt1.c0)))OR(vt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT(((((-1.500968879E9)OR(vt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0, vt1 WHERE (((NULL)IS NOT(((((-1.500968879E9)OR(vt1.c0)))OR(vt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT ALL * FROM vt0, vt1, t0 WHERE ((+ (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((+ (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((+ (((t0.c0) NOTNULL))));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ('-14191827');
SELECT SUM(count) FROM (SELECT ALL (('-14191827') IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ('-14191827');
SELECT SUM(count) FROM (SELECT ALL (('-14191827') IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ('-14191827');
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0 COLLATE BINARY)))) ORDER BY IFNULL(((t0.c0)OR('2102615691')), CAST(t0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0 ORDER BY IFNULL(((t0.c0)OR('2102615691')), CAST(t0.c0 AS INTEGER)));
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0 COLLATE BINARY)))) ORDER BY IFNULL(((t0.c0)OR('2102615691')), CAST(t0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0 ORDER BY IFNULL(((t0.c0)OR('2102615691')), CAST(t0.c0 AS INTEGER)));
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0 COLLATE BINARY)))) ORDER BY IFNULL(((t0.c0)OR('2102615691')), CAST(t0.c0 AS INTEGER));
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((NULL IN (vt1.c0))) ISNULL)) ORDER BY '536705', CASE ((vt0.c0) IS TRUE)  WHEN (- (vt1.c0)) THEN vt0.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY '536705', CASE ((vt0.c0) IS TRUE)  WHEN (- (vt1.c0)) THEN vt0.c0 COLLATE RTRIM END ASC);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((NULL IN (vt1.c0))) ISNULL)) ORDER BY '536705', CASE ((vt0.c0) IS TRUE)  WHEN (- (vt1.c0)) THEN vt0.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY '536705', CASE ((vt0.c0) IS TRUE)  WHEN (- (vt1.c0)) THEN vt0.c0 COLLATE RTRIM END ASC);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((NULL IN (vt1.c0))) ISNULL)) ORDER BY '536705', CASE ((vt0.c0) IS TRUE)  WHEN (- (vt1.c0)) THEN vt0.c0 COLLATE RTRIM END ASC;
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON '1999552507' WHERE (((vt0.c0)>>(((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>>(((((vt0.c0)AND(t0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON '1999552507');
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON '1999552507' WHERE (((vt0.c0)>>(((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>>(((((vt0.c0)AND(t0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON '1999552507');
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON '1999552507' WHERE (((vt0.c0)>>(((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ ((- (vt0.c0)))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (('<52')&(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) CROSS JOIN t0 ON NULL WHERE (((t0.c0)||(vt1.c0)) COLLATE NOCASE) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ('')) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c0)||(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (('<52')&(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) CROSS JOIN t0 ON NULL ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ('')) ASC);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (('<52')&(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) CROSS JOIN t0 ON NULL WHERE (((t0.c0)||(vt1.c0)) COLLATE NOCASE) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ('')) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c0)||(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (('<52')&(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) CROSS JOIN t0 ON NULL ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ('')) ASC);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (('<52')&(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) CROSS JOIN t0 ON NULL WHERE (((t0.c0)||(vt1.c0)) COLLATE NOCASE) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ('')) ASC;
SELECT ALL * FROM t0, vt0 WHERE ((NOT (((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((NOT (((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((NOT (((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE ((((('-1517216892')*(vt0.c0)))<=(t0.c0 COLLATE RTRIM))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-1517216892')*(vt0.c0)))<=(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE ((((('-1517216892')*(vt0.c0)))<=(t0.c0 COLLATE RTRIM))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-1517216892')*(vt0.c0)))<=(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE ((((('-1517216892')*(vt0.c0)))<=(t0.c0 COLLATE RTRIM))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT * FROM vt0, t0, vt1 WHERE (CAST(((vt1.c0) NOTNULL) AS BLOB)) ORDER BY ((t0.c0)/((((t0.c0, vt0.c0, vt1.c0))=((vt1.c0, vt1.c0, vt0.c0)))))  NULLS LAST, ((vt0.c0)+(t0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, vt1 ORDER BY ((t0.c0)/((((t0.c0, vt0.c0, vt1.c0))=((vt1.c0, vt1.c0, vt0.c0)))))  NULLS LAST, ((vt0.c0)+(t0.c0)) COLLATE RTRIM);
SELECT * FROM vt0, t0, vt1 WHERE (CAST(((vt1.c0) NOTNULL) AS BLOB)) ORDER BY ((t0.c0)/((((t0.c0, vt0.c0, vt1.c0))=((vt1.c0, vt1.c0, vt0.c0)))))  NULLS LAST, ((vt0.c0)+(t0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, vt1 ORDER BY ((t0.c0)/((((t0.c0, vt0.c0, vt1.c0))=((vt1.c0, vt1.c0, vt0.c0)))))  NULLS LAST, ((vt0.c0)+(t0.c0)) COLLATE RTRIM);
SELECT * FROM vt0, t0, vt1 WHERE (CAST(((vt1.c0) NOTNULL) AS BLOB)) ORDER BY ((t0.c0)/((((t0.c0, vt0.c0, vt1.c0))=((vt1.c0, vt1.c0, vt0.c0)))))  NULLS LAST, ((vt0.c0)+(t0.c0)) COLLATE RTRIM;
SELECT ALL * FROM vt1, t0, vt0 WHERE (CASE WHEN (- (t0.c0)) THEN SQLITE_COMPILEOPTION_USED(t0.c0) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t0.c0)) THEN SQLITE_COMPILEOPTION_USED(t0.c0) ELSE CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (CASE WHEN (- (t0.c0)) THEN SQLITE_COMPILEOPTION_USED(t0.c0) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t0.c0)) THEN SQLITE_COMPILEOPTION_USED(t0.c0) ELSE CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (CASE WHEN (- (t0.c0)) THEN SQLITE_COMPILEOPTION_USED(t0.c0) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((t0.c0)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((t0.c0)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((t0.c0))));
SELECT * FROM vt1, vt0 WHERE ((0.24567828221654608 IN ())) ORDER BY (('ԻFe|') NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((0.24567828221654608 IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (('ԻFe|') NOT NULL) ASC);
SELECT * FROM vt1, vt0 WHERE ((0.24567828221654608 IN ())) ORDER BY (('ԻFe|') NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((0.24567828221654608 IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (('ԻFe|') NOT NULL) ASC);
SELECT * FROM vt1, vt0 WHERE ((0.24567828221654608 IN ())) ORDER BY (('ԻFe|') NOT NULL) ASC;
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0))) NOT NULL)) ORDER BY CAST((NOT (t0.c0)) AS TEXT), CAST((t0.c0 IN (t0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))OR(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY CAST((NOT (t0.c0)) AS TEXT), CAST((t0.c0 IN (t0.c0)) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0))) NOT NULL)) ORDER BY CAST((NOT (t0.c0)) AS TEXT), CAST((t0.c0 IN (t0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))OR(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY CAST((NOT (t0.c0)) AS TEXT), CAST((t0.c0 IN (t0.c0)) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0))) NOT NULL)) ORDER BY CAST((NOT (t0.c0)) AS TEXT), CAST((t0.c0 IN (t0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) IS TRUE))>(NULLIF(vt0.c0, vt0.c0))) WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL)) ORDER BY ((((vt0.c0) NOTNULL))GLOB(json_patch(vt1.c0, vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) IS TRUE))>(NULLIF(vt0.c0, vt0.c0))) ORDER BY ((((vt0.c0) NOTNULL))GLOB(json_patch(vt1.c0, vt1.c0))) ASC);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) IS TRUE))>(NULLIF(vt0.c0, vt0.c0))) WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL)) ORDER BY ((((vt0.c0) NOTNULL))GLOB(json_patch(vt1.c0, vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) IS TRUE))>(NULLIF(vt0.c0, vt0.c0))) ORDER BY ((((vt0.c0) NOTNULL))GLOB(json_patch(vt1.c0, vt1.c0))) ASC);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM t0 NOT INDEXED, vt0 WHERE (CAST((vt0.c0 IN (t0.c0)) AS BLOB)) ORDER BY CAST(((t0.c0) IS TRUE) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((t0.c0) IS TRUE) AS NUMERIC) DESC);
SELECT ALL * FROM t0 NOT INDEXED, vt0 WHERE (CAST((vt0.c0 IN (t0.c0)) AS BLOB)) ORDER BY CAST(((t0.c0) IS TRUE) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((t0.c0) IS TRUE) AS NUMERIC) DESC);
SELECT ALL * FROM t0 NOT INDEXED, vt0 WHERE (CAST((vt0.c0 IN (t0.c0)) AS BLOB)) ORDER BY CAST(((t0.c0) IS TRUE) AS NUMERIC) DESC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON HEX(((vt0.c0) IS FALSE)) WHERE (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) ORDER BY (NOT (CASE WHEN vt1.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON HEX(((vt0.c0) IS FALSE)) ORDER BY (NOT (CASE WHEN vt1.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON HEX(((vt0.c0) IS FALSE)) WHERE (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) ORDER BY (NOT (CASE WHEN vt1.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON HEX(((vt0.c0) IS FALSE)) ORDER BY (NOT (CASE WHEN vt1.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON HEX(((vt0.c0) IS FALSE)) WHERE (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) ORDER BY (NOT (CASE WHEN vt1.c0 THEN vt0.c0 END));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE NOCASE)<<((vt0.c0 IN (vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((vt0.c0 COLLATE NOCASE)<<((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE NOCASE)<<((vt0.c0 IN (vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((vt0.c0 COLLATE NOCASE)<<((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE NOCASE)<<((vt0.c0 IN (vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 END)*(((((vt0.c0)AND(vt1.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt1.c0 END)*(((((vt0.c0)AND(vt1.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 END)*(((((vt0.c0)AND(vt1.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt1.c0 END)*(((((vt0.c0)AND(vt1.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 END)*(((((vt0.c0)AND(vt1.c0)))AND(t0.c0)))));
SELECT ALL * FROM t0, vt1, vt0 WHERE (CAST(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END AS BLOB)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (CAST(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END AS BLOB)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (CAST(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0))<((vt0.c0)))  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN (~ (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))<((vt0.c0)))  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN (~ (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0))<((vt0.c0)))  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN (~ (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))<((vt0.c0)))  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN (~ (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0))<((vt0.c0)))  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN (~ (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE -2.084067415E9 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE -2.084067415E9 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE -2.084067415E9 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE -2.084067415E9 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE -2.084067415E9 END COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN t0 WHERE (((((t0.c0)>>('-1442690079')))IS(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>>('-1442690079')))IS(vt1.c0))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN t0 WHERE (((((t0.c0)>>('-1442690079')))IS(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>>('-1442690079')))IS(vt1.c0))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN t0 WHERE (((((t0.c0)>>('-1442690079')))IS(vt1.c0)));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(x'')))OR((vt1.c0 IN ())))) ORDER BY ((((vt1.c0) ISNULL))<=(((vt1.c0)AND(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(x'')))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL))<=(((vt1.c0)AND(vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(x'')))OR((vt1.c0 IN ())))) ORDER BY ((((vt1.c0) ISNULL))<=(((vt1.c0)AND(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(x'')))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL))<=(((vt1.c0)AND(vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(x'')))OR((vt1.c0 IN ())))) ORDER BY ((((vt1.c0) ISNULL))<=(((vt1.c0)AND(vt1.c0)))) ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((HEX(DISTINCT vt0.c0), ((vt0.c0)<(vt0.c0)), CAST(vt1.c0 AS REAL), vt0.c0, (((vt1.c0))<((vt0.c0))), CAST(vt1.c0 AS TEXT), ((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0))))<(((- (vt0.c0)), ((vt1.c0) NOT NULL), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)%(vt1.c0)), vt1.c0 COLLATE BINARY, ((vt1.c0)IS(vt1.c0)), json_insert(vt1.c0, vt1.c0, vt1.c0))))) ORDER BY 0.3038836273725223  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((HEX(DISTINCT vt0.c0), ((vt0.c0)<(vt0.c0)), CAST(vt1.c0 AS REAL), vt0.c0, (((vt1.c0))<((vt0.c0))), CAST(vt1.c0 AS TEXT), ((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0))))<(((- (vt0.c0)), ((vt1.c0) NOT NULL), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)%(vt1.c0)), vt1.c0 COLLATE BINARY, ((vt1.c0)IS(vt1.c0)), json_insert(vt1.c0, vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.3038836273725223  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((HEX(DISTINCT vt0.c0), ((vt0.c0)<(vt0.c0)), CAST(vt1.c0 AS REAL), vt0.c0, (((vt1.c0))<((vt0.c0))), CAST(vt1.c0 AS TEXT), ((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0))))<(((- (vt0.c0)), ((vt1.c0) NOT NULL), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)%(vt1.c0)), vt1.c0 COLLATE BINARY, ((vt1.c0)IS(vt1.c0)), json_insert(vt1.c0, vt1.c0, vt1.c0))))) ORDER BY 0.3038836273725223  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((HEX(DISTINCT vt0.c0), ((vt0.c0)<(vt0.c0)), CAST(vt1.c0 AS REAL), vt0.c0, (((vt1.c0))<((vt0.c0))), CAST(vt1.c0 AS TEXT), ((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0))))<(((- (vt0.c0)), ((vt1.c0) NOT NULL), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)%(vt1.c0)), vt1.c0 COLLATE BINARY, ((vt1.c0)IS(vt1.c0)), json_insert(vt1.c0, vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.3038836273725223  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((HEX(DISTINCT vt0.c0), ((vt0.c0)<(vt0.c0)), CAST(vt1.c0 AS REAL), vt0.c0, (((vt1.c0))<((vt0.c0))), CAST(vt1.c0 AS TEXT), ((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0))))<(((- (vt0.c0)), ((vt1.c0) NOT NULL), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)%(vt1.c0)), vt1.c0 COLLATE BINARY, ((vt1.c0)IS(vt1.c0)), json_insert(vt1.c0, vt1.c0, vt1.c0))))) ORDER BY 0.3038836273725223  NULLS FIRST;
SELECT * FROM vt1, vt0, t0 WHERE (((((((vt1.c0)OR(vt0.c0)))OR('now'))) IS TRUE)) ORDER BY (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt0.c0)))OR('now'))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) COLLATE BINARY ASC);
SELECT * FROM vt1, vt0, t0 WHERE (((((((vt1.c0)OR(vt0.c0)))OR('now'))) IS TRUE)) ORDER BY (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt0.c0)))OR('now'))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) COLLATE BINARY ASC);
SELECT * FROM vt1, vt0, t0 WHERE (((((((vt1.c0)OR(vt0.c0)))OR('now'))) IS TRUE)) ORDER BY (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0))) NOT BETWEEN (ROUND(vt1.c0, vt1.c0)) AND (((NULL) NOTNULL)))) ORDER BY CASE WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0))) NOT BETWEEN (ROUND(vt1.c0, vt1.c0)) AND (((NULL) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0))) NOT BETWEEN (ROUND(vt1.c0, vt1.c0)) AND (((NULL) NOTNULL)))) ORDER BY CASE WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0))) NOT BETWEEN (ROUND(vt1.c0, vt1.c0)) AND (((NULL) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0))) NOT BETWEEN (ROUND(vt1.c0, vt1.c0)) AND (((NULL) NOTNULL)))) ORDER BY CASE WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((TYPEOF(DISTINCT '-71699994')) BETWEEN (vt0.c0) AND (0.9830009067680541 COLLATE BINARY)) WHERE (((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))!=(CASE WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY NULL DESC, ((vt0.c0)=(vt1.c0)) COLLATE RTRIM DESC  NULLS LAST, (~ ((((vt1.c0))>((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))<>(CASE WHEN vt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((TYPEOF(DISTINCT '-71699994')) BETWEEN (vt0.c0) AND (0.9830009067680541 COLLATE BINARY)) ORDER BY NULL DESC, ((vt0.c0)==(vt1.c0)) COLLATE RTRIM DESC  NULLS LAST, (~ ((((vt1.c0))>((vt1.c0))))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((TYPEOF(DISTINCT '-71699994')) BETWEEN (vt0.c0) AND (0.9830009067680541 COLLATE BINARY)) WHERE (((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))!=(CASE WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY NULL DESC, ((vt0.c0)=(vt1.c0)) COLLATE RTRIM DESC  NULLS LAST, (~ ((((vt1.c0))>((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))<>(CASE WHEN vt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((TYPEOF(DISTINCT '-71699994')) BETWEEN (vt0.c0) AND (0.9830009067680541 COLLATE BINARY)) ORDER BY NULL DESC, ((vt0.c0)==(vt1.c0)) COLLATE RTRIM DESC  NULLS LAST, (~ ((((vt1.c0))>((vt1.c0))))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((TYPEOF(DISTINCT '-71699994')) BETWEEN (vt0.c0) AND (0.9830009067680541 COLLATE BINARY)) WHERE (((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))!=(CASE WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY NULL DESC, ((vt0.c0)=(vt1.c0)) COLLATE RTRIM DESC  NULLS LAST, (~ ((((vt1.c0))>((vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY '-1447353752', (((json_patch(vt1.c0, vt1.c0)))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY '-1447353752', (((json_patch(vt1.c0, vt1.c0)))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY '-1447353752', (((json_patch(vt1.c0, vt1.c0)))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY '-1447353752', (((json_patch(vt1.c0, vt1.c0)))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT ALL * FROM t0, vt1, vt0 WHERE (LOWER(DISTINCT (vt1.c0 IN (vt0.c0, t0.c0)))) ORDER BY CAST(t0.c0 AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (vt1.c0 IN (vt0.c0, t0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST(t0.c0 AS TEXT) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (LOWER(DISTINCT (vt1.c0 IN (vt0.c0, t0.c0)))) ORDER BY CAST(t0.c0 AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (vt1.c0 IN (vt0.c0, t0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST(t0.c0 AS TEXT) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (LOWER(DISTINCT (vt1.c0 IN (vt0.c0, t0.c0)))) ORDER BY CAST(t0.c0 AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt0, t0, vt1 WHERE ((+ (CAST(vt1.c0 AS NUMERIC)))) ORDER BY NULL COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY NULL COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE ((+ (CAST(vt1.c0 AS NUMERIC)))) ORDER BY NULL COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY NULL COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE ((+ (CAST(vt1.c0 AS NUMERIC)))) ORDER BY NULL COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY CAST(vt1.c0 AS REAL) COLLATE NOCASE  NULLS FIRST, ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)AND('1699259313')))OR(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt1.c0 AS REAL) COLLATE NOCASE  NULLS FIRST, ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)AND('1699259313')))OR(vt1.c0))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY CAST(vt1.c0 AS REAL) COLLATE NOCASE  NULLS FIRST, ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)AND('1699259313')))OR(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt1.c0 AS REAL) COLLATE NOCASE  NULLS FIRST, ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)AND('1699259313')))OR(vt1.c0))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY CAST(vt1.c0 AS REAL) COLLATE NOCASE  NULLS FIRST, ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)AND('1699259313')))OR(vt1.c0))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL));
SELECT * FROM t0 WHERE (((STRFTIME(t0.c0, t0.c0, t0.c0))||(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ORDER BY ((UNICODE(t0.c0)) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((((t0.c0))>=((t0.c0)))))  NULLS FIRST, CAST(CAST(t0.c0 AS BLOB) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(t0.c0, t0.c0, t0.c0))||(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((UNICODE(t0.c0)) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((((t0.c0))>=((t0.c0)))))  NULLS FIRST, CAST(CAST(t0.c0 AS BLOB) AS INTEGER));
SELECT * FROM t0 WHERE (((STRFTIME(t0.c0, t0.c0, t0.c0))||(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ORDER BY ((UNICODE(t0.c0)) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((((t0.c0))>=((t0.c0)))))  NULLS FIRST, CAST(CAST(t0.c0 AS BLOB) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(t0.c0, t0.c0, t0.c0))||(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((UNICODE(t0.c0)) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((((t0.c0))>=((t0.c0)))))  NULLS FIRST, CAST(CAST(t0.c0 AS BLOB) AS INTEGER));
SELECT * FROM t0 WHERE (((STRFTIME(t0.c0, t0.c0, t0.c0))||(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ORDER BY ((UNICODE(t0.c0)) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((((t0.c0))>=((t0.c0)))))  NULLS FIRST, CAST(CAST(t0.c0 AS BLOB) AS INTEGER);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((vt1.c0) NOTNULL) IN (vt1.c0)) WHERE ((((((('996051069')OR('''?')))AND(vt1.c0)))<<(CAST(vt1.c0 AS TEXT)))) ORDER BY (((0.6246584910329872)) NOT BETWEEN (((NOT (t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((('996051069')OR('''?')))AND(vt1.c0)))<<(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((vt1.c0) NOTNULL) IN (vt1.c0)) ORDER BY (((0.6246584910329872)) NOT BETWEEN (((NOT (t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((vt1.c0) NOTNULL) IN (vt1.c0)) WHERE ((((((('996051069')OR('''?')))AND(vt1.c0)))<<(CAST(vt1.c0 AS TEXT)))) ORDER BY (((0.6246584910329872)) NOT BETWEEN (((NOT (t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((('996051069')OR('''?')))AND(vt1.c0)))<<(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((vt1.c0) NOTNULL) IN (vt1.c0)) ORDER BY (((0.6246584910329872)) NOT BETWEEN (((NOT (t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((vt1.c0) NOTNULL) IN (vt1.c0)) WHERE ((((((('996051069')OR('''?')))AND(vt1.c0)))<<(CAST(vt1.c0 AS TEXT)))) ORDER BY (((0.6246584910329872)) NOT BETWEEN (((NOT (t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))  NULLS LAST;
SELECT ALL * FROM vt1, t0 WHERE ((((vt1.c0)) BETWEEN ((((NULL) NOTNULL))) AND ((((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((NULL) NOTNULL))) AND ((((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((vt1.c0)) BETWEEN ((((NULL) NOTNULL))) AND ((((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((NULL) NOTNULL))) AND ((((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((vt1.c0)) BETWEEN ((((NULL) NOTNULL))) AND ((((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT ALL * FROM t0 WHERE (CASE WHEN NULLIF(t0.c0, x'43cc8105') THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULLIF(t0.c0, x'43cc8105') THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN NULLIF(t0.c0, x'43cc8105') THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULLIF(t0.c0, x'43cc8105') THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN NULLIF(t0.c0, x'43cc8105') THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((NULL IN ())) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((NULL IN ())) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((NULL IN ())) ORDER BY vt1.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((t0.c0 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, (((t0.c0, t0.c0, t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c0, vt0.c0, vt1.c0, vt0.c0)))))<>((CAST(vt1.c0 AS NUMERIC), vt0.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, (((t0.c0, t0.c0, t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c0, vt0.c0, vt1.c0, vt0.c0)))))<>((CAST(vt1.c0 AS NUMERIC), vt0.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((t0.c0 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, (((t0.c0, t0.c0, t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c0, vt0.c0, vt1.c0, vt0.c0)))))<>((CAST(vt1.c0 AS NUMERIC), vt0.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, (((t0.c0, t0.c0, t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c0, vt0.c0, vt1.c0, vt0.c0)))))<>((CAST(vt1.c0 AS NUMERIC), vt0.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((t0.c0 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, (((t0.c0, t0.c0, t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, t0.c0, vt0.c0, vt1.c0, vt0.c0)))))<>((CAST(vt1.c0 AS NUMERIC), vt0.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY 0.22089765587043508 ASC, (((((vt0.c0) IS FALSE)))>((x'')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 0.22089765587043508 ASC, (((((vt0.c0) IS FALSE)))>((x''))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY 0.22089765587043508 ASC, (((((vt0.c0) IS FALSE)))>((x'')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 0.22089765587043508 ASC, (((((vt0.c0) IS FALSE)))>((x''))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY 0.22089765587043508 ASC, (((((vt0.c0) IS FALSE)))>((x'')));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (HEX(((t0.c0) IS FALSE))) ORDER BY ((vt1.c0 COLLATE RTRIM)IS NOT((('-1e500') IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((t0.c0) IS FALSE))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)IS NOT((('-1e500') IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (HEX(((t0.c0) IS FALSE))) ORDER BY ((vt1.c0 COLLATE RTRIM)IS NOT((('-1e500') IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((t0.c0) IS FALSE))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)IS NOT((('-1e500') IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (HEX(((t0.c0) IS FALSE))) ORDER BY ((vt1.c0 COLLATE RTRIM)IS NOT((('-1e500') IS TRUE)))  NULLS FIRST;
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))<(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)) AND ((((vt0.c0)OR(vt0.c0)))))) ORDER BY ((((0xffffffffddad2e7e)OR(t0.c0 COLLATE BINARY)))AND(((vt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)) AND ((((vt0.c0)OR(vt0.c0)))))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))<(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) ORDER BY ((((0Xffffffffddad2e7e)OR(t0.c0 COLLATE BINARY)))AND(((vt0.c0) IS TRUE))) DESC);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))<(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)) AND ((((vt0.c0)OR(vt0.c0)))))) ORDER BY ((((0xffffffffddad2e7e)OR(t0.c0 COLLATE BINARY)))AND(((vt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)) AND ((((vt0.c0)OR(vt0.c0)))))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))<(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) ORDER BY ((((0Xffffffffddad2e7e)OR(t0.c0 COLLATE BINARY)))AND(((vt0.c0) IS TRUE))) DESC);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))<(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)) AND ((((vt0.c0)OR(vt0.c0)))))) ORDER BY ((((0xffffffffddad2e7e)OR(t0.c0 COLLATE BINARY)))AND(((vt0.c0) IS TRUE))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((~ (vt0.c0))))<=((NULL)))) ORDER BY (~ (CASE WHEN vt0.c0 THEN 'k郫' ELSE 1.143504015E9 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))<=((NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE WHEN vt0.c0 THEN 'k郫' ELSE 1.143504015E9 END)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((~ (vt0.c0))))<=((NULL)))) ORDER BY (~ (CASE WHEN vt0.c0 THEN 'k郫' ELSE 1.143504015E9 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))<=((NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE WHEN vt0.c0 THEN 'k郫' ELSE 1.143504015E9 END)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((~ (vt0.c0))))<=((NULL)))) ORDER BY (~ (CASE WHEN vt0.c0 THEN 'k郫' ELSE 1.143504015E9 END)) DESC;
SELECT * FROM vt1 WHERE ((+ (((((vt1.c0)OR(vt1.c0)))AND(1.7976931348623157E308)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c0)OR(vt1.c0)))AND(1.7976931348623157E308))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (((((vt1.c0)OR(vt1.c0)))AND(1.7976931348623157E308)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c0)OR(vt1.c0)))AND(1.7976931348623157E308))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (((((vt1.c0)OR(vt1.c0)))AND(1.7976931348623157E308)))));
SELECT * FROM vt0, vt1 WHERE (UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0) IS TRUE) WHERE (((((vt0.c0)/(t0.c0))) NOT NULL)) ORDER BY UPPER(t0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0) IS TRUE) ORDER BY UPPER(t0.c0)  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0) IS TRUE) WHERE (((((vt0.c0)/(t0.c0))) NOT NULL)) ORDER BY UPPER(t0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0) IS TRUE) ORDER BY UPPER(t0.c0)  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0) IS TRUE) WHERE (((((vt0.c0)/(t0.c0))) NOT NULL)) ORDER BY UPPER(t0.c0)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE));
SELECT * FROM t0, vt0 WHERE (CAST(t0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(t0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(t0.c0 AS BLOB));
SELECT ALL * FROM vt1 WHERE (INSTR((- (vt1.c0)), vt1.c0 COLLATE BINARY)) ORDER BY ((((vt1.c0) IS FALSE))OR(((vt1.c0)/(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((INSTR((- (vt1.c0)), vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS FALSE))OR(((vt1.c0)/(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (INSTR((- (vt1.c0)), vt1.c0 COLLATE BINARY)) ORDER BY ((((vt1.c0) IS FALSE))OR(((vt1.c0)/(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((INSTR((- (vt1.c0)), vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS FALSE))OR(((vt1.c0)/(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (INSTR((- (vt1.c0)), vt1.c0 COLLATE BINARY)) ORDER BY ((((vt1.c0) IS FALSE))OR(((vt1.c0)/(vt1.c0))));
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY CASE WHEN t0.c0 THEN LIKELIHOOD(t0.c0, 0.4434652343839808) WHEN json_extract(t0.c0, t0.c0) THEN '-89832942' WHEN ((t0.c0) NOTNULL) THEN CAST(t0.c0 AS REAL) ELSE '-0.0' END DESC  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<<(((((t0.c0)AND(t0.c0)))OR(t0.c0)))) ASC, SQLITE_COMPILEOPTION_USED(((0X4ebffbbb)<<(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c0 THEN LIKELIHOOD(t0.c0, 0.4434652343839808) WHEN json_extract(t0.c0, t0.c0) THEN '-89832942' WHEN ((t0.c0) NOTNULL) THEN CAST(t0.c0 AS REAL) ELSE '-0.0' END DESC  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<<(((((t0.c0)AND(t0.c0)))OR(t0.c0)))) ASC, SQLITE_COMPILEOPTION_USED(((0x4ebffbbb)<<(t0.c0))));
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY CASE WHEN t0.c0 THEN LIKELIHOOD(t0.c0, 0.4434652343839808) WHEN json_extract(t0.c0, t0.c0) THEN '-89832942' WHEN ((t0.c0) NOTNULL) THEN CAST(t0.c0 AS REAL) ELSE '-0.0' END DESC  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<<(((((t0.c0)AND(t0.c0)))OR(t0.c0)))) ASC, SQLITE_COMPILEOPTION_USED(((0X4ebffbbb)<<(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c0 THEN LIKELIHOOD(t0.c0, 0.4434652343839808) WHEN json_extract(t0.c0, t0.c0) THEN '-89832942' WHEN ((t0.c0) NOTNULL) THEN CAST(t0.c0 AS REAL) ELSE '-0.0' END DESC  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<<(((((t0.c0)AND(t0.c0)))OR(t0.c0)))) ASC, SQLITE_COMPILEOPTION_USED(((0x4ebffbbb)<<(t0.c0))));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (vt1.c0);
SELECT * FROM t0, vt1 WHERE (((CAST(vt1.c0 AS TEXT))/(((t0.c0)OR(vt1.c0))))) ORDER BY CAST(UPPER(t0.c0) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))/(((t0.c0)OR(vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(UPPER(t0.c0) AS TEXT));
SELECT * FROM t0, vt1 WHERE (((CAST(vt1.c0 AS TEXT))/(((t0.c0)OR(vt1.c0))))) ORDER BY CAST(UPPER(t0.c0) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))/(((t0.c0)OR(vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(UPPER(t0.c0) AS TEXT));
SELECT * FROM t0, vt1 WHERE (((CAST(vt1.c0 AS TEXT))/(((t0.c0)OR(vt1.c0))))) ORDER BY CAST(UPPER(t0.c0) AS TEXT);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((0.9302763191038934) IS TRUE))>=((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((0.9302763191038934) IS TRUE))>=((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((0.9302763191038934) IS TRUE))>=((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((0.9302763191038934) IS TRUE))>=((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((0.9302763191038934) IS TRUE))>=((vt0.c0 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (json_extract(0x4f7dc2bd, (~ ('K_q8')), ((vt1.c0) IS TRUE), vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(0x4f7dc2bd, (~ ('K_q8')), ((vt1.c0) IS TRUE), vt1.c0)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (json_extract(0x4f7dc2bd, (~ ('K_q8')), ((vt1.c0) IS TRUE), vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(0x4f7dc2bd, (~ ('K_q8')), ((vt1.c0) IS TRUE), vt1.c0)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt0, vt1, t0 WHERE (((LOWER(vt1.c0)) NOTNULL)) ORDER BY t0.c0 COLLATE BINARY COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((LOWER(vt1.c0)) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY t0.c0 COLLATE BINARY COLLATE BINARY);
SELECT * FROM vt0, vt1, t0 WHERE (((LOWER(vt1.c0)) NOTNULL)) ORDER BY t0.c0 COLLATE BINARY COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((LOWER(vt1.c0)) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY t0.c0 COLLATE BINARY COLLATE BINARY);
SELECT * FROM vt0, vt1, t0 WHERE (((LOWER(vt1.c0)) NOTNULL)) ORDER BY t0.c0 COLLATE BINARY COLLATE BINARY;
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED WHERE ((NOT (t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED WHERE ((NOT (t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED WHERE ((NOT (t0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))<(((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((1669908966, vt0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, t0.c0)))))) WHERE (COALESCE((((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE RTRIM, ((((t0.c0)AND(t0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS INTEGER))) ORDER BY CASE WHEN x'aa6e' THEN ((vt0.c0)AND(-1604794112)) END ASC, CAST((+ ('-1305463644')) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((COALESCE((((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE RTRIM, ((((t0.c0)AND(t0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))<(((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((1669908966, vt0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, t0.c0)))))) ORDER BY CASE WHEN x'aa6e' THEN ((vt0.c0)AND(-1604794112)) END ASC, CAST((+ ('-1305463644')) AS BLOB) DESC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))<(((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((1669908966, vt0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, t0.c0)))))) WHERE (COALESCE((((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE RTRIM, ((((t0.c0)AND(t0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS INTEGER))) ORDER BY CASE WHEN x'aa6e' THEN ((vt0.c0)AND(-1604794112)) END ASC, CAST((+ ('-1305463644')) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((COALESCE((((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE RTRIM, ((((t0.c0)AND(t0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))<(((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((1669908966, vt0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, t0.c0)))))) ORDER BY CASE WHEN x'aa6e' THEN ((vt0.c0)AND(-1604794112)) END ASC, CAST((+ ('-1305463644')) AS BLOB) DESC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))<(((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((1669908966, vt0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, t0.c0)))))) WHERE (COALESCE((((vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE RTRIM, ((((t0.c0)AND(t0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS INTEGER))) ORDER BY CASE WHEN x'aa6e' THEN ((vt0.c0)AND(-1604794112)) END ASC, CAST((+ ('-1305463644')) AS BLOB) DESC;
SELECT * FROM vt0, vt1 WHERE (((rtreenode(vt1.c0, vt1.c0)) IS FALSE)) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 END)) AND (((+ (vt0.c0))))) ASC, (NOT (json_valid(vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(vt1.c0, vt1.c0)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 END)) AND (((+ (vt0.c0))))) ASC, (NOT (json_valid(vt1.c0))) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((rtreenode(vt1.c0, vt1.c0)) IS FALSE)) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 END)) AND (((+ (vt0.c0))))) ASC, (NOT (json_valid(vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(vt1.c0, vt1.c0)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 END)) AND (((+ (vt0.c0))))) ASC, (NOT (json_valid(vt1.c0))) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((rtreenode(vt1.c0, vt1.c0)) IS FALSE)) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 END)) AND (((+ (vt0.c0))))) ASC, (NOT (json_valid(vt1.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON ((('722421419'))==((vt1.c0))) WHERE (((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))>(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))>(t0.c0))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((('722421419'))==((vt1.c0))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON ((('722421419'))==((vt1.c0))) WHERE (((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))>(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))>(t0.c0))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((('722421419'))==((vt1.c0))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON ((('722421419'))==((vt1.c0))) WHERE (((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))>(t0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND ((~ (vt0.c0))))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER) DESC  NULLS LAST, ((((vt0.c0)>=(vt0.c0)))-(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST, (~ (CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER) DESC  NULLS LAST, ((((vt0.c0)>=(vt0.c0)))-(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST, (~ (CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND ((~ (vt0.c0))))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER) DESC  NULLS LAST, ((((vt0.c0)>=(vt0.c0)))-(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST, (~ (CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER) DESC  NULLS LAST, ((((vt0.c0)>=(vt0.c0)))-(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST, (~ (CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND ((~ (vt0.c0))))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER) DESC  NULLS LAST, ((((vt0.c0)>=(vt0.c0)))-(vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST, (~ (CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(x'')))OR(vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(x'')))OR(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(x'')))OR(vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(x'')))OR(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(x'')))OR(vt1.c0)) AS BLOB));
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((LIKELY(vt0.c0))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((LIKELY(vt0.c0))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((LIKELY(vt0.c0))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((LIKELY(vt0.c0))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((LIKELY(vt0.c0))) AND ((vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON 0Xffffffffc893e306 FULL OUTER JOIN vt1 ON json_remove((vt1.c0 IN ()), t0.c0) WHERE (((((((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))OR(((((vt0.c0)OR(vt1.c0)))OR(t0.c0)))))OR((- (vt0.c0))))) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT NULL) DESC  NULLS LAST, (+ (((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))OR(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))OR(((((vt0.c0)OR(vt1.c0)))OR(t0.c0)))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON 0xffffffffc893e306 FULL OUTER JOIN vt1 ON json_remove((vt1.c0 IN ()), t0.c0) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT NULL) DESC  NULLS LAST, (+ (((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))OR(vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON 0Xffffffffc893e306 FULL OUTER JOIN vt1 ON json_remove((vt1.c0 IN ()), t0.c0) WHERE (((((((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))OR(((((vt0.c0)OR(vt1.c0)))OR(t0.c0)))))OR((- (vt0.c0))))) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT NULL) DESC  NULLS LAST, (+ (((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))OR(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))OR(((((vt0.c0)OR(vt1.c0)))OR(t0.c0)))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON 0xffffffffc893e306 FULL OUTER JOIN vt1 ON json_remove((vt1.c0 IN ()), t0.c0) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT NULL) DESC  NULLS LAST, (+ (((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))OR(vt1.c0)))) DESC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON json_array((+ (t0.c0)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0, ((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0))) CROSS JOIN t0 ON (((NOT (vt1.c0)))&(NULLIF(vt1.c0, t0.c0))) WHERE (CASE IFNULL(vt0.c0, vt1.c0)  WHEN vt0.c0 THEN (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE IFNULL(vt0.c0, vt1.c0)  WHEN vt0.c0 THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON json_array((+ (t0.c0)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0, ((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0))) CROSS JOIN t0 ON (((NOT (vt1.c0)))&(NULLIF(vt1.c0, t0.c0))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON json_array((+ (t0.c0)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0, ((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0))) CROSS JOIN t0 ON (((NOT (vt1.c0)))&(NULLIF(vt1.c0, t0.c0))) WHERE (CASE IFNULL(vt0.c0, vt1.c0)  WHEN vt0.c0 THEN (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE IFNULL(vt0.c0, vt1.c0)  WHEN vt0.c0 THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON json_array((+ (t0.c0)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0, ((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0))) CROSS JOIN t0 ON (((NOT (vt1.c0)))&(NULLIF(vt1.c0, t0.c0))));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS INTEGER)) ORDER BY (CAST(vt0.c0 AS TEXT) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS TEXT) IN ()));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS INTEGER)) ORDER BY (CAST(vt0.c0 AS TEXT) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS TEXT) IN ()));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS INTEGER)) ORDER BY (CAST(vt0.c0 AS TEXT) IN ());
SELECT ALL * FROM t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (x'');
SELECT * FROM vt1, t0 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) ORDER BY CASE WHEN ((t0.c0) NOT NULL) THEN (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END ASC, (((t0.c0)) NOT BETWEEN ((((((t0.c0)OR(x'1a69')))AND(t0.c0)))) AND ((0.22776835215942548)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN ((t0.c0) NOT NULL) THEN (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END ASC, (((t0.c0)) NOT BETWEEN ((((((t0.c0)OR(x'1a69')))AND(t0.c0)))) AND ((0.22776835215942548)))  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) ORDER BY CASE WHEN ((t0.c0) NOT NULL) THEN (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END ASC, (((t0.c0)) NOT BETWEEN ((((((t0.c0)OR(x'1a69')))AND(t0.c0)))) AND ((0.22776835215942548)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN ((t0.c0) NOT NULL) THEN (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END ASC, (((t0.c0)) NOT BETWEEN ((((((t0.c0)OR(x'1a69')))AND(t0.c0)))) AND ((0.22776835215942548)))  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) ORDER BY CASE WHEN ((t0.c0) NOT NULL) THEN (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END ASC, (((t0.c0)) NOT BETWEEN ((((((t0.c0)OR(x'1a69')))AND(t0.c0)))) AND ((0.22776835215942548)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0)>(x'85e8')) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN (~ (0.877470806602488)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CAST(vt0.c0 AS INTEGER) END) ORDER BY SQLITE_COMPILEOPTION_GET(CAST(vt0.c0 AS INTEGER)) ASC  NULLS LAST, CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0)>(x'85e8')) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN (~ (0.877470806602488)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_COMPILEOPTION_GET(CAST(vt0.c0 AS INTEGER)) ASC  NULLS LAST, CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0)>(x'85e8')) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN (~ (0.877470806602488)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CAST(vt0.c0 AS INTEGER) END) ORDER BY SQLITE_COMPILEOPTION_GET(CAST(vt0.c0 AS INTEGER)) ASC  NULLS LAST, CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0)>(x'85e8')) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN (~ (0.877470806602488)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_COMPILEOPTION_GET(CAST(vt0.c0 AS INTEGER)) ASC  NULLS LAST, CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0)>(x'85e8')) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN (~ (0.877470806602488)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CAST(vt0.c0 AS INTEGER) END) ORDER BY SQLITE_COMPILEOPTION_GET(CAST(vt0.c0 AS INTEGER)) ASC  NULLS LAST, CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) ASC;
SELECT ALL * FROM vt1, t0 WHERE (CASE ((t0.c0)IS(t0.c0))  WHEN ((NULL) NOT NULL) THEN ((((t0.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((NULL) BETWEEN (vt1.c0) AND ('-1262719880')) THEN ((vt1.c0)!=(vt1.c0)) WHEN (t0.c0 IN ()) THEN t0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)IS(t0.c0))  WHEN ((NULL) NOT NULL) THEN ((((t0.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((NULL) BETWEEN (vt1.c0) AND ('-1262719880')) THEN ((vt1.c0)<>(vt1.c0)) WHEN (t0.c0 IN ()) THEN t0.c0 END) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CASE ((t0.c0)IS(t0.c0))  WHEN ((NULL) NOT NULL) THEN ((((t0.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((NULL) BETWEEN (vt1.c0) AND ('-1262719880')) THEN ((vt1.c0)!=(vt1.c0)) WHEN (t0.c0 IN ()) THEN t0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)IS(t0.c0))  WHEN ((NULL) NOT NULL) THEN ((((t0.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((NULL) BETWEEN (vt1.c0) AND ('-1262719880')) THEN ((vt1.c0)<>(vt1.c0)) WHEN (t0.c0 IN ()) THEN t0.c0 END) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CASE ((t0.c0)IS(t0.c0))  WHEN ((NULL) NOT NULL) THEN ((((t0.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((NULL) BETWEEN (vt1.c0) AND ('-1262719880')) THEN ((vt1.c0)!=(vt1.c0)) WHEN (t0.c0 IN ()) THEN t0.c0 END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (((NULL))>=((vt0.c0))) THEN 'CQ(\rS.{' END) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((NULL))>=((vt0.c0))) THEN 'CQ(\rS.{' END) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (((NULL))>=((vt0.c0))) THEN 'CQ(\rS.{' END) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((NULL))>=((vt0.c0))) THEN 'CQ(\rS.{' END) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (((NULL))>=((vt0.c0))) THEN 'CQ(\rS.{' END) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)IS(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE LIKELY(vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)IS(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE LIKELY(vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)IS(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE LIKELY(vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)IS(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE LIKELY(vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)IS(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE LIKELY(vt0.c0) END);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt0.c0)LIKE(vt0.c0)))AND((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.c0)))AND((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt0.c0)LIKE(vt0.c0)))AND((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.c0)))AND((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt0.c0)LIKE(vt0.c0)))AND((vt1.c0 IN (vt1.c0)))));
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))OR(t0.c0))) IS TRUE)) ORDER BY (CAST(t0.c0 AS REAL) IN (((t0.c0) BETWEEN ('621352206') AND (t0.c0)))), CASE WHEN ((t0.c0) IS FALSE) THEN IFNULL(t0.c0, t0.c0) WHEN GLOB(t0.c0, t0.c0) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN CAST('1999552507' AS INTEGER) THEN t0.c0 COLLATE NOCASE ELSE TRIM(DISTINCT t0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(t0.c0)))OR(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c0 AS REAL) IN (((t0.c0) BETWEEN ('621352206') AND (t0.c0)))), CASE WHEN ((t0.c0) IS FALSE) THEN IFNULL(t0.c0, t0.c0) WHEN GLOB(t0.c0, t0.c0) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN CAST('1999552507' AS INTEGER) THEN t0.c0 COLLATE NOCASE ELSE TRIM(DISTINCT t0.c0) END DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))OR(t0.c0))) IS TRUE)) ORDER BY (CAST(t0.c0 AS REAL) IN (((t0.c0) BETWEEN ('621352206') AND (t0.c0)))), CASE WHEN ((t0.c0) IS FALSE) THEN IFNULL(t0.c0, t0.c0) WHEN GLOB(t0.c0, t0.c0) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN CAST('1999552507' AS INTEGER) THEN t0.c0 COLLATE NOCASE ELSE TRIM(DISTINCT t0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(t0.c0)))OR(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c0 AS REAL) IN (((t0.c0) BETWEEN ('621352206') AND (t0.c0)))), CASE WHEN ((t0.c0) IS FALSE) THEN IFNULL(t0.c0, t0.c0) WHEN GLOB(t0.c0, t0.c0) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN CAST('1999552507' AS INTEGER) THEN t0.c0 COLLATE NOCASE ELSE TRIM(DISTINCT t0.c0) END DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))OR(t0.c0))) IS TRUE)) ORDER BY (CAST(t0.c0 AS REAL) IN (((t0.c0) BETWEEN ('621352206') AND (t0.c0)))), CASE WHEN ((t0.c0) IS FALSE) THEN IFNULL(t0.c0, t0.c0) WHEN GLOB(t0.c0, t0.c0) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN CAST('1999552507' AS INTEGER) THEN t0.c0 COLLATE NOCASE ELSE TRIM(DISTINCT t0.c0) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ABS(t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ABS(t0.c0) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ABS(t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ABS(t0.c0) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ABS(t0.c0) END);
SELECT * FROM t0, vt0 INNER JOIN vt1 ON ((UNLIKELY(vt1.c0)) NOT BETWEEN ((((vt1.c0))<=((vt0.c0)))) AND (((NULL) NOTNULL))) WHERE (((UPPER(t0.c0))*(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(t0.c0))*(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON ((UNLIKELY(vt1.c0)) NOT BETWEEN ((((vt1.c0))<=((vt0.c0)))) AND (((NULL) NOTNULL))));
SELECT * FROM t0, vt0 INNER JOIN vt1 ON ((UNLIKELY(vt1.c0)) NOT BETWEEN ((((vt1.c0))<=((vt0.c0)))) AND (((NULL) NOTNULL))) WHERE (((UPPER(t0.c0))*(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(t0.c0))*(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON ((UNLIKELY(vt1.c0)) NOT BETWEEN ((((vt1.c0))<=((vt0.c0)))) AND (((NULL) NOTNULL))));
SELECT * FROM t0, vt0 INNER JOIN vt1 ON ((UNLIKELY(vt1.c0)) NOT BETWEEN ((((vt1.c0))<=((vt0.c0)))) AND (((NULL) NOTNULL))) WHERE (((UPPER(t0.c0))*(vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0 IN (t0.c0)))<=(CASE WHEN NULL THEN vt0.c0 END)) WHERE (((((t0.c0)||(t0.c0)))OR(CASE WHEN vt0.c0 THEN NULL WHEN 0.646289414932952 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.4772841068372975 END))) ORDER BY CASE TRIM(t0.c0)  WHEN t0.c0 THEN t0.c0 ELSE ((vt0.c0)>>(t0.c0)) END DESC, (- (((((t0.c0)AND(t0.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)||(t0.c0)))OR(CASE WHEN vt0.c0 THEN NULL WHEN 0.646289414932952 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.4772841068372975 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0 IN (t0.c0)))<=(CASE WHEN NULL THEN vt0.c0 END)) ORDER BY CASE TRIM(t0.c0)  WHEN t0.c0 THEN t0.c0 ELSE ((vt0.c0)>>(t0.c0)) END DESC, (- (((((t0.c0)AND(t0.c0)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0 IN (t0.c0)))<=(CASE WHEN NULL THEN vt0.c0 END)) WHERE (((((t0.c0)||(t0.c0)))OR(CASE WHEN vt0.c0 THEN NULL WHEN 0.646289414932952 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.4772841068372975 END))) ORDER BY CASE TRIM(t0.c0)  WHEN t0.c0 THEN t0.c0 ELSE ((vt0.c0)>>(t0.c0)) END DESC, (- (((((t0.c0)AND(t0.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)||(t0.c0)))OR(CASE WHEN vt0.c0 THEN NULL WHEN 0.646289414932952 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.4772841068372975 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0 IN (t0.c0)))<=(CASE WHEN NULL THEN vt0.c0 END)) ORDER BY CASE TRIM(t0.c0)  WHEN t0.c0 THEN t0.c0 ELSE ((vt0.c0)>>(t0.c0)) END DESC, (- (((((t0.c0)AND(t0.c0)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0 IN (t0.c0)))<=(CASE WHEN NULL THEN vt0.c0 END)) WHERE (((((t0.c0)||(t0.c0)))OR(CASE WHEN vt0.c0 THEN NULL WHEN 0.646289414932952 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.4772841068372975 END))) ORDER BY CASE TRIM(t0.c0)  WHEN t0.c0 THEN t0.c0 ELSE ((vt0.c0)>>(t0.c0)) END DESC, (- (((((t0.c0)AND(t0.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN vt1 ON (vt0.c0 COLLATE BINARY IN ((vt0.c0 IN ()))) WHERE (0.23758711262968302 COLLATE BINARY COLLATE RTRIM) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (x'')), CAST(LIKELY(vt0.c0) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.23758711262968302 COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (vt0.c0 COLLATE BINARY IN ((vt0.c0 IN ()))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (x'')), CAST(LIKELY(vt0.c0) AS REAL) ASC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN vt1 ON (vt0.c0 COLLATE BINARY IN ((vt0.c0 IN ()))) WHERE (0.23758711262968302 COLLATE BINARY COLLATE RTRIM) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (x'')), CAST(LIKELY(vt0.c0) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.23758711262968302 COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (vt0.c0 COLLATE BINARY IN ((vt0.c0 IN ()))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (x'')), CAST(LIKELY(vt0.c0) AS REAL) ASC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN vt1 ON (vt0.c0 COLLATE BINARY IN ((vt0.c0 IN ()))) WHERE (0.23758711262968302 COLLATE BINARY COLLATE RTRIM) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (x'')), CAST(LIKELY(vt0.c0) AS REAL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS((NOT (vt0.c0)))) ORDER BY CAST(((vt0.c0)&(vt0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS((NOT (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)&(vt0.c0)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS((NOT (vt0.c0)))) ORDER BY CAST(((vt0.c0)&(vt0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS((NOT (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)&(vt0.c0)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS((NOT (vt0.c0)))) ORDER BY CAST(((vt0.c0)&(vt0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON (((t0.c0)) BETWEEN ((((vt0.c0)/(vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END))) WHERE ((((t0.c0 IN ()))||('')));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))||(''))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON (((t0.c0)) BETWEEN ((((vt0.c0)/(vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END))));
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON (((t0.c0)) BETWEEN ((((vt0.c0)/(vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END))) WHERE ((((t0.c0 IN ()))||('')));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))||(''))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON (((t0.c0)) BETWEEN ((((vt0.c0)/(vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END))));
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON (((t0.c0)) BETWEEN ((((vt0.c0)/(vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END))) WHERE ((((t0.c0 IN ()))||('')));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((('1')) NOT BETWEEN ((((t0.c0)<=(vt0.c0)))) AND ((((vt0.c0) IS TRUE)))) RIGHT OUTER JOIN vt1 ON t0.c0 WHERE (((((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((('1')) NOT BETWEEN ((((t0.c0)<=(vt0.c0)))) AND ((((vt0.c0) IS TRUE)))) RIGHT OUTER JOIN vt1 ON t0.c0);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((('1')) NOT BETWEEN ((((t0.c0)<=(vt0.c0)))) AND ((((vt0.c0) IS TRUE)))) RIGHT OUTER JOIN vt1 ON t0.c0 WHERE (((((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((('1')) NOT BETWEEN ((((t0.c0)<=(vt0.c0)))) AND ((((vt0.c0) IS TRUE)))) RIGHT OUTER JOIN vt1 ON t0.c0);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((('1')) NOT BETWEEN ((((t0.c0)<=(vt0.c0)))) AND ((((vt0.c0) IS TRUE)))) RIGHT OUTER JOIN vt1 ON t0.c0 WHERE (((((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT NULL));
SELECT * FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c0) NOT BETWEEN (0.287327332038502) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) NOT BETWEEN (0.287327332038502) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c0) NOT BETWEEN (0.287327332038502) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) NOT BETWEEN (0.287327332038502) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c0) NOT BETWEEN (0.287327332038502) AND (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) AND ((0.7717937984869291))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) AND ((0.7717937984869291)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) AND ((0.7717937984869291))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) AND ((0.7717937984869291)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) AND ((0.7717937984869291))));
SELECT ALL COUNT(*) FROM vt1, t0 FULL OUTER JOIN vt0 ON (+ (CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)) WHERE ((((((((((('97396742')AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('97396742')AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON (+ (CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt1, t0 FULL OUTER JOIN vt0 ON (+ (CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)) WHERE ((((((((((('97396742')AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('97396742')AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON (+ (CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt1, t0 FULL OUTER JOIN vt0 ON (+ (CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)) WHERE ((((((((((('97396742')AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0))) IS TRUE));
SELECT ALL * FROM t0, vt1, vt0 WHERE (((vt0.c0) BETWEEN ('') AND (t0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN ('') AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((vt0.c0) BETWEEN ('') AND (t0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN ('') AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((vt0.c0) BETWEEN ('') AND (t0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (HEX(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS TEXT)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (HEX(t0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (HEX(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS TEXT)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (HEX(t0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (HEX(t0.c0))));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>=(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>=(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS NUMERIC));
SELECT * FROM vt1 WHERE (((((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0 COLLATE RTRIM)))AND((vt1.c0 IN ()))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0, vt1.c0, 0.40739029540572247)) NOT BETWEEN ((((vt1.c0) NOTNULL), ((vt1.c0) IS TRUE), ((vt1.c0) NOTNULL))) AND ((((vt1.c0)>=(vt1.c0)), (((vt1.c0, vt1.c0, NULL)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))), vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0 COLLATE RTRIM)))AND((vt1.c0 IN ()))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, 0.40739029540572247)) NOT BETWEEN ((((vt1.c0) NOTNULL), ((vt1.c0) IS TRUE), ((vt1.c0) NOTNULL))) AND ((((vt1.c0)>=(vt1.c0)), (((vt1.c0, vt1.c0, NULL)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))), vt1.c0 COLLATE BINARY))));
SELECT * FROM vt1 WHERE (((((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0 COLLATE RTRIM)))AND((vt1.c0 IN ()))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0, vt1.c0, 0.40739029540572247)) NOT BETWEEN ((((vt1.c0) NOTNULL), ((vt1.c0) IS TRUE), ((vt1.c0) NOTNULL))) AND ((((vt1.c0)>=(vt1.c0)), (((vt1.c0, vt1.c0, NULL)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))), vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0 COLLATE RTRIM)))AND((vt1.c0 IN ()))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, 0.40739029540572247)) NOT BETWEEN ((((vt1.c0) NOTNULL), ((vt1.c0) IS TRUE), ((vt1.c0) NOTNULL))) AND ((((vt1.c0)>=(vt1.c0)), (((vt1.c0, vt1.c0, NULL)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))), vt1.c0 COLLATE BINARY))));
SELECT * FROM vt1 WHERE (((((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0 COLLATE RTRIM)))AND((vt1.c0 IN ()))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0, vt1.c0, 0.40739029540572247)) NOT BETWEEN ((((vt1.c0) NOTNULL), ((vt1.c0) IS TRUE), ((vt1.c0) NOTNULL))) AND ((((vt1.c0)>=(vt1.c0)), (((vt1.c0, vt1.c0, NULL)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))), vt1.c0 COLLATE BINARY)));
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((t0.c0)>(vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (t0.c0))) AND (((vt0.c0)IS(t0.c0)))) WHERE ((((vt0.c0 IN ())) BETWEEN (NULL) AND (0.793321033445606))) ORDER BY (SQLITE_VERSION() IN ());
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (NULL) AND (0.793321033445606))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((t0.c0)>(vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (t0.c0))) AND (((vt0.c0)IS(t0.c0)))) ORDER BY (SQLITE_VERSION() IN ()));
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((t0.c0)>(vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (t0.c0))) AND (((vt0.c0)IS(t0.c0)))) WHERE ((((vt0.c0 IN ())) BETWEEN (NULL) AND (0.793321033445606))) ORDER BY (SQLITE_VERSION() IN ());
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (NULL) AND (0.793321033445606))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((t0.c0)>(vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (t0.c0))) AND (((vt0.c0)IS(t0.c0)))) ORDER BY (SQLITE_VERSION() IN ()));
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((t0.c0)>(vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (t0.c0))) AND (((vt0.c0)IS(t0.c0)))) WHERE ((((vt0.c0 IN ())) BETWEEN (NULL) AND (0.793321033445606))) ORDER BY (SQLITE_VERSION() IN ());
SELECT ALL * FROM vt0, vt1 WHERE ((((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, 0.5922518965380675, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))OR((vt1.c0 IN ()))))OR(json_valid(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, 0.5922518965380675, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))OR((vt1.c0 IN ()))))OR(json_valid(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, 0.5922518965380675, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))OR((vt1.c0 IN ()))))OR(json_valid(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, 0.5922518965380675, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))OR((vt1.c0 IN ()))))OR(json_valid(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, 0.5922518965380675, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))OR((vt1.c0 IN ()))))OR(json_valid(vt0.c0))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((CAST(vt0.c0 AS INTEGER))AND(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS INTEGER))AND(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(t0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((CAST(vt0.c0 AS INTEGER))AND(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS INTEGER))AND(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(t0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((CAST(vt0.c0 AS INTEGER))AND(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(t0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)/(t0.c0)))<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '' END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)/(t0.c0)))<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '' END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)/(t0.c0)))<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '' END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)/(t0.c0)))<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '' END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)/(t0.c0)))<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '' END)));
SELECT ALL * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0)))IS((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))IS((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0)))IS((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))IS((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0)))IS((t0.c0 IN ()))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)-(vt1.c0)))||(''))) ORDER BY (((vt1.c0 IN (vt1.c0))) NOT BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (LTRIM(NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)-(vt1.c0)))||(''))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0))) NOT BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (LTRIM(NULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)-(vt1.c0)))||(''))) ORDER BY (((vt1.c0 IN (vt1.c0))) NOT BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (LTRIM(NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)-(vt1.c0)))||(''))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0))) NOT BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (LTRIM(NULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)-(vt1.c0)))||(''))) ORDER BY (((vt1.c0 IN (vt1.c0))) NOT BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (LTRIM(NULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (x'') ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (x'') ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (x'') ORDER BY vt0.c0;
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) NOT NULL));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((~ (((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))AND(t0.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))AND(t0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((~ (((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))AND(t0.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))AND(t0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((~ (((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))AND(t0.c0)))OR(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0))) BETWEEN (((vt1.c0)OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (((vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) BETWEEN (((vt1.c0)OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c0)>=(vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0))) BETWEEN (((vt1.c0)OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (((vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) BETWEEN (((vt1.c0)OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c0)>=(vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0))) BETWEEN (((vt1.c0)OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (((vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c0)>=(vt1.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0 COLLATE NOCASE);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((- (vt1.c0))))=((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((((t0.c0))<=((t0.c0)))) AND ((- (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (vt1.c0))))==((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((((t0.c0))<=((t0.c0)))) AND ((- (t0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((- (vt1.c0))))=((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((((t0.c0))<=((t0.c0)))) AND ((- (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (vt1.c0))))==((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((((t0.c0))<=((t0.c0)))) AND ((- (t0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((- (vt1.c0))))=((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((((t0.c0))<=((t0.c0)))) AND ((- (t0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY CAST(t0.c0 AS NUMERIC), ((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))AND(((t0.c0)>(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(t0.c0 AS NUMERIC), ((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))AND(((t0.c0)>(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY CAST(t0.c0 AS NUMERIC), ((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))AND(((t0.c0)>(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(t0.c0 AS NUMERIC), ((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))AND(((t0.c0)>(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY CAST(t0.c0 AS NUMERIC), ((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))AND(((t0.c0)>(t0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (0.5714869149965098)));
SELECT SUM(count) FROM (SELECT (((+ (0.5714869149965098))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (0.5714869149965098)));
SELECT SUM(count) FROM (SELECT (((+ (0.5714869149965098))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (0.5714869149965098)));
SELECT COUNT(*) FROM t0 WHERE ((~ (json_patch(t0.c0, t0.c0)))) ORDER BY CAST((t0.c0 IN ()) AS REAL)  NULLS LAST, t0.c0  NULLS FIRST, ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (json_patch(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c0 IN ()) AS REAL)  NULLS LAST, t0.c0  NULLS FIRST, ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((~ (json_patch(t0.c0, t0.c0)))) ORDER BY CAST((t0.c0 IN ()) AS REAL)  NULLS LAST, t0.c0  NULLS FIRST, ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (json_patch(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c0 IN ()) AS REAL)  NULLS LAST, t0.c0  NULLS FIRST, ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((- (((t0.c0)>=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0)>=(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (((t0.c0)>=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0)>=(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (((t0.c0)>=(t0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE ((+ (CAST(t0.c0 AS INTEGER)))) ORDER BY ((t0.c0)<>((+ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c0)<>((+ (vt0.c0)))) ASC);
SELECT ALL * FROM vt0, t0 WHERE ((+ (CAST(t0.c0 AS INTEGER)))) ORDER BY ((t0.c0)<>((+ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c0)<>((+ (vt0.c0)))) ASC);
SELECT ALL * FROM vt0, t0 WHERE ((+ (CAST(t0.c0 AS INTEGER)))) ORDER BY ((t0.c0)<>((+ (vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)+(t0.c0))) NOT BETWEEN (CASE 0.06728244770163616  WHEN vt1.c0 THEN NULL ELSE t0.c0 END) AND (CASE t0.c0  WHEN vt0.c0 THEN '' WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 0.7712929998872224 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) FULL OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE NOCASE AS INTEGER) WHERE (((((((vt0.c0)AND(vt0.c0)))OR(755253847))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(755253847))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)+(t0.c0))) NOT BETWEEN (CASE 0.06728244770163616  WHEN vt1.c0 THEN NULL ELSE t0.c0 END) AND (CASE t0.c0  WHEN vt0.c0 THEN '' WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 0.7712929998872224 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) FULL OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE NOCASE AS INTEGER));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)+(t0.c0))) NOT BETWEEN (CASE 0.06728244770163616  WHEN vt1.c0 THEN NULL ELSE t0.c0 END) AND (CASE t0.c0  WHEN vt0.c0 THEN '' WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 0.7712929998872224 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) FULL OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE NOCASE AS INTEGER) WHERE (((((((vt0.c0)AND(vt0.c0)))OR(755253847))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(755253847))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)+(t0.c0))) NOT BETWEEN (CASE 0.06728244770163616  WHEN vt1.c0 THEN NULL ELSE t0.c0 END) AND (CASE t0.c0  WHEN vt0.c0 THEN '' WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 0.7712929998872224 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) FULL OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE NOCASE AS INTEGER));
SELECT ALL * FROM vt1, t0 WHERE (((((t0.c0) NOT NULL))<<(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL))<<(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((((t0.c0) NOT NULL))<<(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL))<<(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((((t0.c0) NOT NULL))<<(t0.c0 COLLATE RTRIM)));
SELECT ALL * FROM t0, vt0, vt1 WHERE (TYPEOF((~ (0.1270775490599192)))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((~ (0.1270775490599192)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (TYPEOF((~ (0.1270775490599192)))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((~ (0.1270775490599192)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (TYPEOF((~ (0.1270775490599192)))) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)!=(vt1.c0))) IS TRUE) WHERE ((vt1.c0 IN ((vt1.c0 IN ()), (('!J{/R}')+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ((vt1.c0 IN ()), (('!J{/R}')+(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)<>(vt1.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)!=(vt1.c0))) IS TRUE) WHERE ((vt1.c0 IN ((vt1.c0 IN ()), (('!J{/R}')+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ((vt1.c0 IN ()), (('!J{/R}')+(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)<>(vt1.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)!=(vt1.c0))) IS TRUE) WHERE ((vt1.c0 IN ((vt1.c0 IN ()), (('!J{/R}')+(vt0.c0)))));
SELECT COUNT(*) FROM vt1 INDEXED BY i59 WHERE (((vt1.c0 COLLATE RTRIM)<=((~ (vt1.c0))))) ORDER BY vt1.c0  NULLS FIRST, (((vt1.c0)<(vt1.c0)) IN (CAST(vt1.c0 AS REAL))) ASC  NULLS LAST, (- (vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)<=((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 INDEXED BY i59 ORDER BY vt1.c0  NULLS FIRST, (((vt1.c0)<(vt1.c0)) IN (CAST(vt1.c0 AS REAL))) ASC  NULLS LAST, (- (vt1.c0)) ASC);
SELECT COUNT(*) FROM vt1 INDEXED BY i59 WHERE (((vt1.c0 COLLATE RTRIM)<=((~ (vt1.c0))))) ORDER BY vt1.c0  NULLS FIRST, (((vt1.c0)<(vt1.c0)) IN (CAST(vt1.c0 AS REAL))) ASC  NULLS LAST, (- (vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)<=((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 INDEXED BY i59 ORDER BY vt1.c0  NULLS FIRST, (((vt1.c0)<(vt1.c0)) IN (CAST(vt1.c0 AS REAL))) ASC  NULLS LAST, (- (vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((- (vt0.c0))) BETWEEN (CASE WHEN t0.c0 THEN vt0.c0 END) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) BETWEEN (CASE WHEN t0.c0 THEN vt0.c0 END) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((- (vt0.c0))) BETWEEN (CASE WHEN t0.c0 THEN vt0.c0 END) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) BETWEEN (CASE WHEN t0.c0 THEN vt0.c0 END) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((- (vt0.c0))) BETWEEN (CASE WHEN t0.c0 THEN vt0.c0 END) AND (((vt0.c0) IS FALSE))));
SELECT * FROM vt0, vt1 WHERE (((0.7315415380318556 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.7315415380318556 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((0.7315415380318556 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.7315415380318556 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((0.7315415380318556 COLLATE NOCASE) NOTNULL));
SELECT COUNT(*) FROM vt1 WHERE ('1107635616') ORDER BY CAST(((vt1.c0)>(vt1.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (('1107635616') IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)>(vt1.c0)) AS INTEGER) ASC);
SELECT COUNT(*) FROM vt1 WHERE ('1107635616') ORDER BY CAST(((vt1.c0)>(vt1.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (('1107635616') IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)>(vt1.c0)) AS INTEGER) ASC);
SELECT COUNT(*) FROM vt1 WHERE ('1107635616') ORDER BY CAST(((vt1.c0)>(vt1.c0)) AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN t0.c0 THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE LIKELIHOOD(t0.c0, 0.8632798138306742) END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0 COLLATE NOCASE  WHEN t0.c0 THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE LIKELIHOOD(t0.c0, 0.8632798138306742) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN t0.c0 THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE LIKELIHOOD(t0.c0, 0.8632798138306742) END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0 COLLATE NOCASE  WHEN t0.c0 THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE LIKELIHOOD(t0.c0, 0.8632798138306742) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN t0.c0 THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE LIKELIHOOD(t0.c0, 0.8632798138306742) END);
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON ((((t0.c0) IS FALSE))LIKE(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(vt1.c0)))AND(vt0.c0)))) WHERE ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON ((((t0.c0) IS FALSE))LIKE(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(vt1.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON ((((t0.c0) IS FALSE))LIKE(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(vt1.c0)))AND(vt0.c0)))) WHERE ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON ((((t0.c0) IS FALSE))LIKE(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(vt1.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON ((((t0.c0) IS FALSE))LIKE(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(vt1.c0)))AND(vt0.c0)))) WHERE ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ ((((vt1.c0))<((0X1c68970))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt1.c0))<((0X1c68970)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ ((((vt1.c0))<((0X1c68970))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt1.c0))<((0X1c68970)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ ((((vt1.c0))<((0X1c68970))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) NOTNULL))OR(-1.483137868E9)))AND('' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOTNULL))OR(-1.483137868E9)))AND('' COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) NOTNULL))OR(-1.483137868E9)))AND('' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOTNULL))OR(-1.483137868E9)))AND('' COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) NOTNULL))OR(-1.483137868E9)))AND('' COLLATE RTRIM)));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((t0.c0)OR(t0.c0)))AND(vt0.c0)) COLLATE NOCASE FULL OUTER JOIN t0 ON COALESCE(DISTINCT ((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), IFNULL(DISTINCT vt1.c0, vt1.c0)) WHERE ((CASE WHEN vt1.c0 THEN vt0.c0 END IN (vt1.c0 COLLATE BINARY, CAST(t0.c0 AS INTEGER)))) ORDER BY CAST(x'' AS INTEGER) COLLATE BINARY  NULLS LAST, ((((((vt0.c0)AND(vt1.c0)))OR(t0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt0.c0 END IN (vt1.c0 COLLATE BINARY, CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((t0.c0)OR(t0.c0)))AND(vt0.c0)) COLLATE NOCASE FULL OUTER JOIN t0 ON COALESCE(DISTINCT ((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), IFNULL(DISTINCT vt1.c0, vt1.c0)) ORDER BY CAST(x'' AS INTEGER) COLLATE BINARY  NULLS LAST, ((((((vt0.c0)AND(vt1.c0)))OR(t0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE BINARY)) DESC);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((t0.c0)OR(t0.c0)))AND(vt0.c0)) COLLATE NOCASE FULL OUTER JOIN t0 ON COALESCE(DISTINCT ((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), IFNULL(DISTINCT vt1.c0, vt1.c0)) WHERE ((CASE WHEN vt1.c0 THEN vt0.c0 END IN (vt1.c0 COLLATE BINARY, CAST(t0.c0 AS INTEGER)))) ORDER BY CAST(x'' AS INTEGER) COLLATE BINARY  NULLS LAST, ((((((vt0.c0)AND(vt1.c0)))OR(t0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt0.c0 END IN (vt1.c0 COLLATE BINARY, CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((t0.c0)OR(t0.c0)))AND(vt0.c0)) COLLATE NOCASE FULL OUTER JOIN t0 ON COALESCE(DISTINCT ((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), IFNULL(DISTINCT vt1.c0, vt1.c0)) ORDER BY CAST(x'' AS INTEGER) COLLATE BINARY  NULLS LAST, ((((((vt0.c0)AND(vt1.c0)))OR(t0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE BINARY)) DESC);
SELECT ALL * FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c0)))AND('-1917449334')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c0)OR(t0.c0)))AND('-1917449334')) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c0)))AND('-1917449334')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c0)OR(t0.c0)))AND('-1917449334')) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c0)))AND('-1917449334')) AS INTEGER));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CAST(CAST(t0.c0 AS REAL) AS REAL)) ORDER BY ((CASE WHEN vt0.c0 THEN '1603091036' WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 END) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN '1603091036' WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 END) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CAST(CAST(t0.c0 AS REAL) AS REAL)) ORDER BY ((CASE WHEN vt0.c0 THEN '1603091036' WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 END) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN '1603091036' WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 END) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CAST(CAST(t0.c0 AS REAL) AS REAL)) ORDER BY ((CASE WHEN vt0.c0 THEN '1603091036' WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 END) IS TRUE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))>=(CASE WHEN t0.c0 THEN '' ELSE t0.c0 END))) ORDER BY ((((t0.c0) ISNULL)) BETWEEN (((t0.c0) NOT NULL)) AND (t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE))>=(CASE WHEN t0.c0 THEN '' ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) ISNULL)) BETWEEN (((t0.c0) NOT NULL)) AND (t0.c0))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))>=(CASE WHEN t0.c0 THEN '' ELSE t0.c0 END))) ORDER BY ((((t0.c0) ISNULL)) BETWEEN (((t0.c0) NOT NULL)) AND (t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE))>=(CASE WHEN t0.c0 THEN '' ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) ISNULL)) BETWEEN (((t0.c0) NOT NULL)) AND (t0.c0))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))>=(CASE WHEN t0.c0 THEN '' ELSE t0.c0 END))) ORDER BY ((((t0.c0) ISNULL)) BETWEEN (((t0.c0) NOT NULL)) AND (t0.c0))  NULLS LAST;
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((vt1.c0)IS NOT(t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0)<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS NOT(t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0)<(t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((vt1.c0)IS NOT(t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0)<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS NOT(t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0)<(t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((vt1.c0)IS NOT(t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0)<(t0.c0)))));
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ())))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (CASE vt0.c0  WHEN 0.5566956796669129 THEN 0.3743588255277479 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (CASE vt0.c0  WHEN 0.5566956796669129 THEN 0.3743588255277479 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ())))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (CASE vt0.c0  WHEN 0.5566956796669129 THEN 0.3743588255277479 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (CASE vt0.c0  WHEN 0.5566956796669129 THEN 0.3743588255277479 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ())))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (CASE vt0.c0  WHEN 0.5566956796669129 THEN 0.3743588255277479 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND('-1120426057'))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND('-1120426057'))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND('-1120426057'))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND('-1120426057'))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND('-1120426057'))) IS FALSE));
SELECT * FROM t0 WHERE ((((NOT (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((NOT (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((NOT (t0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (NOT (0.058648534669203056)) WHERE ((((t0.c0 IN (vt1.c0)))<((x'' IN ()))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (vt1.c0)))<((x'' IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (NOT (0.058648534669203056)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (NOT (0.058648534669203056)) WHERE ((((t0.c0 IN (vt1.c0)))<((x'' IN ()))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (vt1.c0)))<((x'' IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (NOT (0.058648534669203056)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (NOT (0.058648534669203056)) WHERE ((((t0.c0 IN (vt1.c0)))<((x'' IN ()))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) BETWEEN (UPPER(vt0.c0)) AND (LIKELIHOOD(t0.c0, 0.3833464296523478))) CROSS JOIN vt1 ON UPPER(t0.c0 COLLATE NOCASE) WHERE (CASE WHEN (NOT (vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END END) ORDER BY ((vt1.c0) BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((((t0.c0)OR(vt1.c0)))OR(t0.c0)))) DESC, CAST('755253847' AS INTEGER)  NULLS FIRST, (((vt0.c0) BETWEEN (0Xffffffffe86c38d0) AND (t0.c0)) IN (NULLIF(t0.c0, t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) BETWEEN (UPPER(vt0.c0)) AND (LIKELIHOOD(t0.c0, 0.3833464296523478))) CROSS JOIN vt1 ON UPPER(t0.c0 COLLATE NOCASE) ORDER BY ((vt1.c0) BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((((t0.c0)OR(vt1.c0)))OR(t0.c0)))) DESC, CAST('755253847' AS INTEGER)  NULLS FIRST, (((vt0.c0) BETWEEN (0xffffffffe86c38d0) AND (t0.c0)) IN (NULLIF(t0.c0, t0.c0))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) BETWEEN (UPPER(vt0.c0)) AND (LIKELIHOOD(t0.c0, 0.3833464296523478))) CROSS JOIN vt1 ON UPPER(t0.c0 COLLATE NOCASE) WHERE (CASE WHEN (NOT (vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END END) ORDER BY ((vt1.c0) BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((((t0.c0)OR(vt1.c0)))OR(t0.c0)))) DESC, CAST('755253847' AS INTEGER)  NULLS FIRST, (((vt0.c0) BETWEEN (0Xffffffffe86c38d0) AND (t0.c0)) IN (NULLIF(t0.c0, t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) BETWEEN (UPPER(vt0.c0)) AND (LIKELIHOOD(t0.c0, 0.3833464296523478))) CROSS JOIN vt1 ON UPPER(t0.c0 COLLATE NOCASE) ORDER BY ((vt1.c0) BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((((t0.c0)OR(vt1.c0)))OR(t0.c0)))) DESC, CAST('755253847' AS INTEGER)  NULLS FIRST, (((vt0.c0) BETWEEN (0xffffffffe86c38d0) AND (t0.c0)) IN (NULLIF(t0.c0, t0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((x'2bf5')&(vt0.c0))) BETWEEN (vt0.c0) AND (((0.11546120198043508)+(vt0.c0))))) ORDER BY ((vt0.c0)*(vt0.c0))  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN 0.2766324929079089 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)<=(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((x'2bf5')&(vt0.c0))) BETWEEN (vt0.c0) AND (((0.11546120198043508)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)*(vt0.c0))  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN 0.2766324929079089 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)<=(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((((x'2bf5')&(vt0.c0))) BETWEEN (vt0.c0) AND (((0.11546120198043508)+(vt0.c0))))) ORDER BY ((vt0.c0)*(vt0.c0))  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN 0.2766324929079089 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)<=(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((x'2bf5')&(vt0.c0))) BETWEEN (vt0.c0) AND (((0.11546120198043508)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)*(vt0.c0))  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN 0.2766324929079089 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)<=(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((((x'2bf5')&(vt0.c0))) BETWEEN (vt0.c0) AND (((0.11546120198043508)+(vt0.c0))))) ORDER BY ((vt0.c0)*(vt0.c0))  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN 0.2766324929079089 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)<=(vt0.c0));
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE RTRIM) ORDER BY ((((0.9894306352561694)<<(vt0.c0)))IS(vt0.c0)) DESC  NULLS FIRST, CAST(t0.c0 AS NUMERIC) COLLATE BINARY ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((t0.c0) IS TRUE)))) DESC, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((0.9894306352561694)<<(vt0.c0)))IS(vt0.c0)) DESC  NULLS FIRST, CAST(t0.c0 AS NUMERIC) COLLATE BINARY ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((t0.c0) IS TRUE)))) DESC, x''  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE RTRIM) ORDER BY ((((0.9894306352561694)<<(vt0.c0)))IS(vt0.c0)) DESC  NULLS FIRST, CAST(t0.c0 AS NUMERIC) COLLATE BINARY ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((t0.c0) IS TRUE)))) DESC, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((0.9894306352561694)<<(vt0.c0)))IS(vt0.c0)) DESC  NULLS FIRST, CAST(t0.c0 AS NUMERIC) COLLATE BINARY ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((t0.c0) IS TRUE)))) DESC, x''  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE RTRIM) ORDER BY ((((0.9894306352561694)<<(vt0.c0)))IS(vt0.c0)) DESC  NULLS FIRST, CAST(t0.c0 AS NUMERIC) COLLATE BINARY ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((t0.c0) IS TRUE)))) DESC, x''  NULLS LAST;
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON t0.c0 WHERE (1762032464);
SELECT SUM(count) FROM (SELECT ((1762032464) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON t0.c0);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON t0.c0 WHERE (1762032464);
SELECT SUM(count) FROM (SELECT ((1762032464) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON t0.c0);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON t0.c0 WHERE (1762032464);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(0.6777373307673439 AS TEXT)) ORDER BY (((t0.c0 IN (t0.c0)))>(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.6777373307673439 AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c0 IN (t0.c0)))>(NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(0.6777373307673439 AS TEXT)) ORDER BY (((t0.c0 IN (t0.c0)))>(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.6777373307673439 AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c0 IN (t0.c0)))>(NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(0.6777373307673439 AS TEXT)) ORDER BY (((t0.c0 IN (t0.c0)))>(NULL))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN vt1 ON ((vt1.c0)GLOB(t0.c0 COLLATE NOCASE)) WHERE ((((('')AND((vt1.c0 IN ()))))OR((0.5435753618266476 IN ())))) ORDER BY ((((((vt0.c0))<>((t0.c0)))))>=((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))))) DESC  NULLS FIRST, (((NOT ('1799479332')))>(vt1.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('')AND((vt1.c0 IN ()))))OR((0.5435753618266476 IN ())))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON ((vt1.c0)GLOB(t0.c0 COLLATE NOCASE)) ORDER BY ((((((vt0.c0))!=((t0.c0)))))>=((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))))) DESC  NULLS FIRST, (((NOT ('1799479332')))>(vt1.c0 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN vt1 ON ((vt1.c0)GLOB(t0.c0 COLLATE NOCASE)) WHERE ((((('')AND((vt1.c0 IN ()))))OR((0.5435753618266476 IN ())))) ORDER BY ((((((vt0.c0))<>((t0.c0)))))>=((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))))) DESC  NULLS FIRST, (((NOT ('1799479332')))>(vt1.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('')AND((vt1.c0 IN ()))))OR((0.5435753618266476 IN ())))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON ((vt1.c0)GLOB(t0.c0 COLLATE NOCASE)) ORDER BY ((((((vt0.c0))!=((t0.c0)))))>=((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))))) DESC  NULLS FIRST, (((NOT ('1799479332')))>(vt1.c0 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN vt1 ON ((vt1.c0)GLOB(t0.c0 COLLATE NOCASE)) WHERE ((((('')AND((vt1.c0 IN ()))))OR((0.5435753618266476 IN ())))) ORDER BY ((((((vt0.c0))<>((t0.c0)))))>=((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))))) DESC  NULLS FIRST, (((NOT ('1799479332')))>(vt1.c0 COLLATE RTRIM)) DESC;
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c0 IN ())) IS TRUE));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((vt1.c0)>=(vt0.c0)) IN ())) ORDER BY 0.3423123572290009  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)>=(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0, vt1 NOT INDEXED ORDER BY 0.3423123572290009  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((vt1.c0)>=(vt0.c0)) IN ())) ORDER BY 0.3423123572290009  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)>=(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0, vt1 NOT INDEXED ORDER BY 0.3423123572290009  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((vt1.c0)>=(vt0.c0)) IN ())) ORDER BY 0.3423123572290009  NULLS LAST;
SELECT ALL * FROM t0 INDEXED BY i80, vt1 WHERE (((CASE WHEN vt1.c0 THEN t0.c0 END) NOT BETWEEN ((~ (t0.c0))) AND (vt1.c0 COLLATE BINARY))) ORDER BY ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))+((((t0.c0))>=((t0.c0))))) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))||(vt1.c0)), CAST((NOT (vt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN t0.c0 END) NOT BETWEEN ((~ (t0.c0))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 INDEXED BY i80, vt1 ORDER BY ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))+((((t0.c0))>=((t0.c0))))) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))||(vt1.c0)), CAST((NOT (vt1.c0)) AS TEXT));
SELECT ALL * FROM t0 INDEXED BY i80, vt1 WHERE (((CASE WHEN vt1.c0 THEN t0.c0 END) NOT BETWEEN ((~ (t0.c0))) AND (vt1.c0 COLLATE BINARY))) ORDER BY ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))+((((t0.c0))>=((t0.c0))))) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))||(vt1.c0)), CAST((NOT (vt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN t0.c0 END) NOT BETWEEN ((~ (t0.c0))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 INDEXED BY i80, vt1 ORDER BY ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))+((((t0.c0))>=((t0.c0))))) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))||(vt1.c0)), CAST((NOT (vt1.c0)) AS TEXT));
SELECT ALL * FROM t0 INDEXED BY i80, vt1 WHERE (((CASE WHEN vt1.c0 THEN t0.c0 END) NOT BETWEEN ((~ (t0.c0))) AND (vt1.c0 COLLATE BINARY))) ORDER BY ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))+((((t0.c0))>=((t0.c0))))) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))||(vt1.c0)), CAST((NOT (vt1.c0)) AS TEXT);
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN vt0 ON ((t0.c0)IS NOT(((((t0.c0)AND(vt1.c0)))AND(t0.c0)))) WHERE ((((~ (vt1.c0)))GLOB(0Xfffffffffef3805f))) ORDER BY (CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))GLOB(0Xfffffffffef3805f))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON ((t0.c0)IS NOT(((((t0.c0)AND(vt1.c0)))AND(t0.c0)))) ORDER BY (CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 END IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN vt0 ON ((t0.c0)IS NOT(((((t0.c0)AND(vt1.c0)))AND(t0.c0)))) WHERE ((((~ (vt1.c0)))GLOB(0Xfffffffffef3805f))) ORDER BY (CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))GLOB(0Xfffffffffef3805f))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON ((t0.c0)IS NOT(((((t0.c0)AND(vt1.c0)))AND(t0.c0)))) ORDER BY (CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 END IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN vt0 ON ((t0.c0)IS NOT(((((t0.c0)AND(vt1.c0)))AND(t0.c0)))) WHERE ((((~ (vt1.c0)))GLOB(0Xfffffffffef3805f))) ORDER BY (CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 END IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (LTRIM(0X56e4d5a6, (~ (vt0.c0)))) ORDER BY ((((LENGTH(vt0.c0))OR((((vt0.c0))>((vt0.c0))))))AND(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(0X56e4d5a6, (~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((LENGTH(vt0.c0))OR((((vt0.c0))>((vt0.c0))))))AND(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (LTRIM(0X56e4d5a6, (~ (vt0.c0)))) ORDER BY ((((LENGTH(vt0.c0))OR((((vt0.c0))>((vt0.c0))))))AND(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(0X56e4d5a6, (~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((LENGTH(vt0.c0))OR((((vt0.c0))>((vt0.c0))))))AND(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (LTRIM(0X56e4d5a6, (~ (vt0.c0)))) ORDER BY ((((LENGTH(vt0.c0))OR((((vt0.c0))>((vt0.c0))))))AND(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)<<(t0.c0)))>=((((((((('1499206479')AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) ORDER BY (+ (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<<(t0.c0)))>=((((((((('1499206479')AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (+ (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)<<(t0.c0)))>=((((((((('1499206479')AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) ORDER BY (+ (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<<(t0.c0)))>=((((((((('1499206479')AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (+ (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)<<(t0.c0)))>=((((((((('1499206479')AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) ORDER BY (+ (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT * FROM vt0, vt1, t0 WHERE ((- (CASE WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ((- (CASE WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ((- (CASE WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM vt1, t0, vt0 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (x'');
SELECT * FROM vt0, t0 CROSS JOIN vt1 ON ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE RTRIM WHERE (((t0.c0 COLLATE BINARY)<=(((vt1.c0) NOT NULL)))) ORDER BY (((((vt1.c0))>=((vt0.c0)))) BETWEEN (((vt1.c0)<=(t0.c0))) AND (IFNULL(t0.c0, t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY)<=(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE RTRIM ORDER BY (((((vt1.c0))>=((vt0.c0)))) BETWEEN (((vt1.c0)<=(t0.c0))) AND (IFNULL(t0.c0, t0.c0))) ASC);
SELECT * FROM vt0, t0 CROSS JOIN vt1 ON ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE RTRIM WHERE (((t0.c0 COLLATE BINARY)<=(((vt1.c0) NOT NULL)))) ORDER BY (((((vt1.c0))>=((vt0.c0)))) BETWEEN (((vt1.c0)<=(t0.c0))) AND (IFNULL(t0.c0, t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY)<=(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE RTRIM ORDER BY (((((vt1.c0))>=((vt0.c0)))) BETWEEN (((vt1.c0)<=(t0.c0))) AND (IFNULL(t0.c0, t0.c0))) ASC);
SELECT * FROM vt0, t0 CROSS JOIN vt1 ON ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE RTRIM WHERE (((t0.c0 COLLATE BINARY)<=(((vt1.c0) NOT NULL)))) ORDER BY (((((vt1.c0))>=((vt0.c0)))) BETWEEN (((vt1.c0)<=(t0.c0))) AND (IFNULL(t0.c0, t0.c0))) ASC;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0) ISNULL))>=(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))>=(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0) ISNULL))>=(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))>=(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0) ISNULL))>=(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0)<<(vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<<(vt0.c0)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0)<<(vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<<(vt0.c0)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0)<<(vt0.c0)) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0, vt1 WHERE (CASE CASE vt1.c0  WHEN NULL THEN x'' ELSE '0.03872473457944858' END  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0) BETWEEN (NULL) AND (vt1.c0)) WHEN ((vt1.c0)>>(vt1.c0)) THEN '^*	S' END) ORDER BY JULIANDAY(vt1.c0, t0.c0, vt0.c0) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN NULL THEN x'' ELSE '0.03872473457944858' END  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0) BETWEEN (NULL) AND (vt1.c0)) WHEN ((vt1.c0)>>(vt1.c0)) THEN '^*	S' END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY JULIANDAY(vt1.c0, t0.c0, vt0.c0) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0, vt1 WHERE (CASE CASE vt1.c0  WHEN NULL THEN x'' ELSE '0.03872473457944858' END  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0) BETWEEN (NULL) AND (vt1.c0)) WHEN ((vt1.c0)>>(vt1.c0)) THEN '^*	S' END) ORDER BY JULIANDAY(vt1.c0, t0.c0, vt0.c0) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN NULL THEN x'' ELSE '0.03872473457944858' END  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0) BETWEEN (NULL) AND (vt1.c0)) WHEN ((vt1.c0)>>(vt1.c0)) THEN '^*	S' END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY JULIANDAY(vt1.c0, t0.c0, vt0.c0) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0, vt1 WHERE (CASE CASE vt1.c0  WHEN NULL THEN x'' ELSE '0.03872473457944858' END  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0) BETWEEN (NULL) AND (vt1.c0)) WHEN ((vt1.c0)>>(vt1.c0)) THEN '^*	S' END) ORDER BY JULIANDAY(vt1.c0, t0.c0, vt0.c0) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((vt1.c0)<(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN ()) THEN ((vt1.c0)<(t0.c0)) END) IS TRUE)  as count FROM t0, vt1 NOT INDEXED);
SELECT * FROM t0, vt1 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((vt1.c0)<(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN ()) THEN ((vt1.c0)<(t0.c0)) END) IS TRUE)  as count FROM t0, vt1 NOT INDEXED);
SELECT * FROM t0, vt1 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((vt1.c0)<(t0.c0)) END);
SELECT COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE (((vt1.c0 COLLATE BINARY)GLOB(x'')));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)GLOB(x''))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE (((vt1.c0 COLLATE BINARY)GLOB(x'')));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)GLOB(x''))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE (((vt1.c0 COLLATE BINARY)GLOB(x'')));
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0 IN ()))%((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))%((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0 IN ()))%((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))%((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0 IN ()))%((vt1.c0 IN ()))));
SELECT ALL * FROM t0, vt1 WHERE (CAST((((vt1.c0))<>((t0.c0))) AS NUMERIC)) ORDER BY (t0.c0 IN (vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST, (NOT (((vt1.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0))!=((t0.c0))) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1 ORDER BY (t0.c0 IN (vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST, (NOT (((vt1.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE (CAST((((vt1.c0))<>((t0.c0))) AS NUMERIC)) ORDER BY (t0.c0 IN (vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST, (NOT (((vt1.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0))!=((t0.c0))) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1 ORDER BY (t0.c0 IN (vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST, (NOT (((vt1.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE (CAST((((vt1.c0))<>((t0.c0))) AS NUMERIC)) ORDER BY (t0.c0 IN (vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST, (NOT (((vt1.c0) NOTNULL)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(0.9186926373500485 AS TEXT)) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((x'f1f3') ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.9186926373500485 AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((x'f1f3') ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(0.9186926373500485 AS TEXT)) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((x'f1f3') ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.9186926373500485 AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((x'f1f3') ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(0.9186926373500485 AS TEXT)) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((x'f1f3') ISNULL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)&(x'')))<<(vt0.c0))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(x'')))<<(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)&(x'')))<<(vt0.c0))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(x'')))<<(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)&(x'')))<<(vt0.c0))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE NOCASE)/((~ (1.934765543E9)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)/((~ (1.934765543E9))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE NOCASE)/((~ (1.934765543E9)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)/((~ (1.934765543E9))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE NOCASE)/((~ (1.934765543E9)))));
SELECT ALL * FROM t0 WHERE (((0.6246584910329872) ISNULL));
SELECT SUM(count) FROM (SELECT ((((0.6246584910329872) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((0.6246584910329872) ISNULL));
SELECT SUM(count) FROM (SELECT ((((0.6246584910329872) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((0.6246584910329872) ISNULL));
SELECT ALL * FROM t0, vt0 NATURAL JOIN vt1 WHERE (CAST(((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT ALL * FROM t0, vt0 NATURAL JOIN vt1 WHERE (CAST(((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT ALL * FROM t0, vt0 NATURAL JOIN vt1 WHERE (CAST(((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CAST(vt1.c0 AS NUMERIC)  WHEN ('ᮄu' IN ()) THEN (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN (vt1.c0 IN (vt1.c0)) THEN vt1.c0 END) ORDER BY ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND((~ (vt1.c0)))))OR(CASE vt1.c0  WHEN 215681424 THEN vt1.c0 WHEN '0.7898034360351253' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS NUMERIC)  WHEN ('ᮄu' IN ()) THEN (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN (vt1.c0 IN (vt1.c0)) THEN vt1.c0 END) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND((~ (vt1.c0)))))OR(CASE vt1.c0  WHEN 215681424 THEN vt1.c0 WHEN '0.7898034360351253' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CAST(vt1.c0 AS NUMERIC)  WHEN ('ᮄu' IN ()) THEN (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN (vt1.c0 IN (vt1.c0)) THEN vt1.c0 END) ORDER BY ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND((~ (vt1.c0)))))OR(CASE vt1.c0  WHEN 215681424 THEN vt1.c0 WHEN '0.7898034360351253' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS NUMERIC)  WHEN ('ᮄu' IN ()) THEN (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN (vt1.c0 IN (vt1.c0)) THEN vt1.c0 END) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND((~ (vt1.c0)))))OR(CASE vt1.c0  WHEN 215681424 THEN vt1.c0 WHEN '0.7898034360351253' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CAST(vt1.c0 AS NUMERIC)  WHEN ('ᮄu' IN ()) THEN (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN (vt1.c0 IN (vt1.c0)) THEN vt1.c0 END) ORDER BY ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND((~ (vt1.c0)))))OR(CASE vt1.c0  WHEN 215681424 THEN vt1.c0 WHEN '0.7898034360351253' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0)AND((vt1.c0 IN ()))))AND(0.08021132052248159)))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(((vt1.c0)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND((vt1.c0 IN ()))))AND(0.08021132052248159)))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0)AND((vt1.c0 IN ()))))AND(0.08021132052248159)))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(((vt1.c0)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND((vt1.c0 IN ()))))AND(0.08021132052248159)))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0)AND((vt1.c0 IN ()))))AND(0.08021132052248159)))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(((vt1.c0)>>(vt1.c0)))));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (((((vt1.c0))<=((t0.c0))))AND(LOWER(t0.c0))) WHERE (vt0.c0 COLLATE RTRIM) ORDER BY CAST((vt1.c0 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (((((vt1.c0))<=((t0.c0))))AND(LOWER(t0.c0))) ORDER BY CAST((vt1.c0 IN ()) AS REAL));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (((((vt1.c0))<=((t0.c0))))AND(LOWER(t0.c0))) WHERE (vt0.c0 COLLATE RTRIM) ORDER BY CAST((vt1.c0 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (((((vt1.c0))<=((t0.c0))))AND(LOWER(t0.c0))) ORDER BY CAST((vt1.c0 IN ()) AS REAL));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (((((vt1.c0))<=((t0.c0))))AND(LOWER(t0.c0))) WHERE (vt0.c0 COLLATE RTRIM) ORDER BY CAST((vt1.c0 IN ()) AS REAL);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND('1107635616' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND('1107635616' COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND('1107635616' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND('1107635616' COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND('1107635616' COLLATE NOCASE)));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON NULL WHERE ((+ ((0.3893592029252573 IN (vt1.c0))))) ORDER BY ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))) BETWEEN (((vt1.c0)*(vt1.c0))) AND (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((0.3893592029252573 IN (vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON NULL ORDER BY ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))) BETWEEN (((vt1.c0)*(vt1.c0))) AND (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON NULL WHERE ((+ ((0.3893592029252573 IN (vt1.c0))))) ORDER BY ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))) BETWEEN (((vt1.c0)*(vt1.c0))) AND (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((0.3893592029252573 IN (vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON NULL ORDER BY ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))) BETWEEN (((vt1.c0)*(vt1.c0))) AND (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON NULL WHERE ((+ ((0.3893592029252573 IN (vt1.c0))))) ORDER BY ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))) BETWEEN (((vt1.c0)*(vt1.c0))) AND (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON SQLITE_VERSION() WHERE (CAST((((t0.c0))<=((vt0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0))<=((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON SQLITE_VERSION());
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON SQLITE_VERSION() WHERE (CAST((((t0.c0))<=((vt0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0))<=((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON SQLITE_VERSION());
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON SQLITE_VERSION() WHERE (CAST((((t0.c0))<=((vt0.c0))) AS REAL));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((vt1.c0 COLLATE RTRIM)>(LIKELIHOOD(t0.c0, 0.5405203868959987)))) ORDER BY (((vt1.c0 IN (vt1.c0, vt0.c0))) NOT BETWEEN (GLOB(t0.c0, t0.c0)) AND ((((vt1.c0, vt1.c0, vt0.c0))>=((t0.c0, NULL, vt1.c0)))))  NULLS LAST, (((CAST(vt0.c0 AS TEXT)))<=((((((vt1.c0)AND(t0.c0)))OR(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)>(LIKELIHOOD(t0.c0, 0.5405203868959987)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((vt1.c0 IN (vt1.c0, vt0.c0))) NOT BETWEEN (GLOB(t0.c0, t0.c0)) AND ((((vt1.c0, vt1.c0, vt0.c0))>=((t0.c0, NULL, vt1.c0)))))  NULLS LAST, (((CAST(vt0.c0 AS TEXT)))<=((((((vt1.c0)AND(t0.c0)))OR(vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((vt1.c0 COLLATE RTRIM)>(LIKELIHOOD(t0.c0, 0.5405203868959987)))) ORDER BY (((vt1.c0 IN (vt1.c0, vt0.c0))) NOT BETWEEN (GLOB(t0.c0, t0.c0)) AND ((((vt1.c0, vt1.c0, vt0.c0))>=((t0.c0, NULL, vt1.c0)))))  NULLS LAST, (((CAST(vt0.c0 AS TEXT)))<=((((((vt1.c0)AND(t0.c0)))OR(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)>(LIKELIHOOD(t0.c0, 0.5405203868959987)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((vt1.c0 IN (vt1.c0, vt0.c0))) NOT BETWEEN (GLOB(t0.c0, t0.c0)) AND ((((vt1.c0, vt1.c0, vt0.c0))>=((t0.c0, NULL, vt1.c0)))))  NULLS LAST, (((CAST(vt0.c0 AS TEXT)))<=((((((vt1.c0)AND(t0.c0)))OR(vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((vt1.c0 COLLATE RTRIM)>(LIKELIHOOD(t0.c0, 0.5405203868959987)))) ORDER BY (((vt1.c0 IN (vt1.c0, vt0.c0))) NOT BETWEEN (GLOB(t0.c0, t0.c0)) AND ((((vt1.c0, vt1.c0, vt0.c0))>=((t0.c0, NULL, vt1.c0)))))  NULLS LAST, (((CAST(vt0.c0 AS TEXT)))<=((((((vt1.c0)AND(t0.c0)))OR(vt0.c0)))))  NULLS LAST;
SELECT ALL * FROM vt1, t0 WHERE ((((((vt1.c0, t0.c0, t0.c0, t0.c0, t0.c0))<=((vt1.c0, t0.c0, vt1.c0, vt1.c0, vt1.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, t0.c0, t0.c0, t0.c0, t0.c0))<=((vt1.c0, t0.c0, vt1.c0, vt1.c0, vt1.c0)))) NOT NULL)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((((vt1.c0, t0.c0, t0.c0, t0.c0, t0.c0))<=((vt1.c0, t0.c0, vt1.c0, vt1.c0, vt1.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, t0.c0, t0.c0, t0.c0, t0.c0))<=((vt1.c0, t0.c0, vt1.c0, vt1.c0, vt1.c0)))) NOT NULL)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((((vt1.c0, t0.c0, t0.c0, t0.c0, t0.c0))<=((vt1.c0, t0.c0, vt1.c0, vt1.c0, vt1.c0)))) NOT NULL));
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS TEXT))))AND((((vt1.c0))<>((vt1.c0))))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) ORDER BY CAST(((0.8957777262505835) ISNULL) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS TEXT))))AND((((vt1.c0))<>((vt1.c0))))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((0.8957777262505835) ISNULL) AS BLOB) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS TEXT))))AND((((vt1.c0))<>((vt1.c0))))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) ORDER BY CAST(((0.8957777262505835) ISNULL) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS TEXT))))AND((((vt1.c0))<>((vt1.c0))))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((0.8957777262505835) ISNULL) AS BLOB) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS TEXT))))AND((((vt1.c0))<>((vt1.c0))))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) ORDER BY CAST(((0.8957777262505835) ISNULL) AS BLOB) DESC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (NOT (t0.c0)) FULL OUTER JOIN t0 ON (((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((TRIM(vt0.c0, vt0.c0), ((0xffffffffeb9471d5) BETWEEN (vt0.c0) AND (vt1.c0)), ((vt1.c0) BETWEEN (t0.c0) AND (vt0.c0)))) AND ((vt0.c0, t0.c0, t0.c0))) WHERE (CAST(LIKELY(DISTINCT vt1.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(DISTINCT vt1.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (NOT (t0.c0)) FULL OUTER JOIN t0 ON (((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((TRIM(vt0.c0, vt0.c0), ((0xffffffffeb9471d5) BETWEEN (vt0.c0) AND (vt1.c0)), ((vt1.c0) BETWEEN (t0.c0) AND (vt0.c0)))) AND ((vt0.c0, t0.c0, t0.c0))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (NOT (t0.c0)) FULL OUTER JOIN t0 ON (((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((TRIM(vt0.c0, vt0.c0), ((0xffffffffeb9471d5) BETWEEN (vt0.c0) AND (vt1.c0)), ((vt1.c0) BETWEEN (t0.c0) AND (vt0.c0)))) AND ((vt0.c0, t0.c0, t0.c0))) WHERE (CAST(LIKELY(DISTINCT vt1.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(DISTINCT vt1.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (NOT (t0.c0)) FULL OUTER JOIN t0 ON (((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((TRIM(vt0.c0, vt0.c0), ((0xffffffffeb9471d5) BETWEEN (vt0.c0) AND (vt1.c0)), ((vt1.c0) BETWEEN (t0.c0) AND (vt0.c0)))) AND ((vt0.c0, t0.c0, t0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE COALESCE(DISTINCT vt1.c0, vt1.c0)  WHEN ((NULL) NOT NULL) THEN vt1.c0 COLLATE BINARY WHEN (vt1.c0 IN (vt1.c0)) THEN (~ (vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 ELSE (vt1.c0 IN ()) END) ORDER BY ((CAST(vt1.c0 AS BLOB))AND(((vt1.c0) IS FALSE))), CAST((vt1.c0 IN (vt1.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT vt1.c0, vt1.c0)  WHEN ((NULL) NOT NULL) THEN vt1.c0 COLLATE BINARY WHEN (vt1.c0 IN (vt1.c0)) THEN (~ (vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB))AND(((vt1.c0) IS FALSE))), CAST((vt1.c0 IN (vt1.c0)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE COALESCE(DISTINCT vt1.c0, vt1.c0)  WHEN ((NULL) NOT NULL) THEN vt1.c0 COLLATE BINARY WHEN (vt1.c0 IN (vt1.c0)) THEN (~ (vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 ELSE (vt1.c0 IN ()) END) ORDER BY ((CAST(vt1.c0 AS BLOB))AND(((vt1.c0) IS FALSE))), CAST((vt1.c0 IN (vt1.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT vt1.c0, vt1.c0)  WHEN ((NULL) NOT NULL) THEN vt1.c0 COLLATE BINARY WHEN (vt1.c0 IN (vt1.c0)) THEN (~ (vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB))AND(((vt1.c0) IS FALSE))), CAST((vt1.c0 IN (vt1.c0)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE COALESCE(DISTINCT vt1.c0, vt1.c0)  WHEN ((NULL) NOT NULL) THEN vt1.c0 COLLATE BINARY WHEN (vt1.c0 IN (vt1.c0)) THEN (~ (vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 ELSE (vt1.c0 IN ()) END) ORDER BY ((CAST(vt1.c0 AS BLOB))AND(((vt1.c0) IS FALSE))), CAST((vt1.c0 IN (vt1.c0)) AS REAL) DESC;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) IS TRUE));
SELECT * FROM t0 WHERE (CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS NUMERIC)) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS NUMERIC)) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS NUMERIC)) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT * FROM t0, vt1, vt0 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((vt1.c0 IN ()));
SELECT * FROM vt1, t0 WHERE ((+ (TYPEOF(vt1.c0)))) ORDER BY CASE (- (vt1.c0))  WHEN vt1.c0 THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE ((vt1.c0)>(t0.c0)) END;
SELECT SUM(count) FROM (SELECT (((+ (TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE (- (vt1.c0))  WHEN vt1.c0 THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE ((vt1.c0)>(t0.c0)) END);
SELECT * FROM vt1, t0 WHERE ((+ (TYPEOF(vt1.c0)))) ORDER BY CASE (- (vt1.c0))  WHEN vt1.c0 THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE ((vt1.c0)>(t0.c0)) END;
SELECT SUM(count) FROM (SELECT (((+ (TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE (- (vt1.c0))  WHEN vt1.c0 THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE ((vt1.c0)>(t0.c0)) END);
SELECT * FROM vt1, t0 WHERE ((+ (TYPEOF(vt1.c0)))) ORDER BY CASE (- (vt1.c0))  WHEN vt1.c0 THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE ((vt1.c0)>(t0.c0)) END;
SELECT * FROM vt1, t0 NATURAL JOIN vt0 WHERE (((('536705') ISNULL) IN ('-1759385593' COLLATE BINARY, ((vt0.c0) NOT BETWEEN (x'') AND (''))))) ORDER BY ((vt0.c0)AND(NULL)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('536705') ISNULL) IN ('-1759385593' COLLATE BINARY, ((vt0.c0) NOT BETWEEN (x'') AND (''))))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0 ORDER BY ((vt0.c0)AND(NULL)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt1, t0 NATURAL JOIN vt0 WHERE (((('536705') ISNULL) IN ('-1759385593' COLLATE BINARY, ((vt0.c0) NOT BETWEEN (x'') AND (''))))) ORDER BY ((vt0.c0)AND(NULL)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('536705') ISNULL) IN ('-1759385593' COLLATE BINARY, ((vt0.c0) NOT BETWEEN (x'') AND (''))))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0 ORDER BY ((vt0.c0)AND(NULL)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt1, t0 NATURAL JOIN vt0 WHERE (((('536705') ISNULL) IN ('-1759385593' COLLATE BINARY, ((vt0.c0) NOT BETWEEN (x'') AND (''))))) ORDER BY ((vt0.c0)AND(NULL)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((t0.c0))>((t0.c0))))AND(CAST(vt0.c0 AS NUMERIC))))OR('0.4247454661765633'))) ORDER BY ((((((vt0.c0) IS FALSE))AND((NULL IN ()))))OR(((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND('..FZmU')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c0))>((t0.c0))))AND(CAST(vt0.c0 AS NUMERIC))))OR('0.4247454661765633'))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c0) IS FALSE))AND((NULL IN ()))))OR(((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND('..FZmU')))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((t0.c0))>((t0.c0))))AND(CAST(vt0.c0 AS NUMERIC))))OR('0.4247454661765633'))) ORDER BY ((((((vt0.c0) IS FALSE))AND((NULL IN ()))))OR(((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND('..FZmU')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c0))>((t0.c0))))AND(CAST(vt0.c0 AS NUMERIC))))OR('0.4247454661765633'))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c0) IS FALSE))AND((NULL IN ()))))OR(((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND('..FZmU')))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((t0.c0))>((t0.c0))))AND(CAST(vt0.c0 AS NUMERIC))))OR('0.4247454661765633'))) ORDER BY ((((((vt0.c0) IS FALSE))AND((NULL IN ()))))OR(((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND('..FZmU')))) ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((-1561292908)<>(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN 'kCgD{u' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (- ((((vt0.c0))<>((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((-1561292908)<>(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN 'kCgD{u' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((((vt0.c0))<>((vt1.c0))))) ASC);
SELECT * FROM vt1, vt0 WHERE (((((-1561292908)<>(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN 'kCgD{u' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (- ((((vt0.c0))<>((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((-1561292908)<>(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN 'kCgD{u' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((((vt0.c0))<>((vt1.c0))))) ASC);
SELECT * FROM vt1, vt0 WHERE (((((-1561292908)<>(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN 'kCgD{u' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (- ((((vt0.c0))<>((vt1.c0))))) ASC;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (((CAST(NULL AS BLOB))==(((t0.c0)||(''))))) ORDER BY ((((t0.c0)OR(t0.c0)))OR((((t0.c0))<((t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS BLOB))==(((t0.c0)||(''))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)OR(t0.c0)))OR((((t0.c0))<((t0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (((CAST(NULL AS BLOB))==(((t0.c0)||(''))))) ORDER BY ((((t0.c0)OR(t0.c0)))OR((((t0.c0))<((t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS BLOB))==(((t0.c0)||(''))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)OR(t0.c0)))OR((((t0.c0))<((t0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (((CAST(NULL AS BLOB))==(((t0.c0)||(''))))) ORDER BY ((((t0.c0)OR(t0.c0)))OR((((t0.c0))<((t0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0, vt0.c0, t0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (~ (vt0.c0)), t0.c0 COLLATE NOCASE, (((0.9056722693103442)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN (('1158729083')) AND ((vt0.c0))), TRIM(t0.c0), ((t0.c0) NOT NULL))))) ORDER BY ((t0.c0) IS TRUE) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, t0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (~ (vt0.c0)), t0.c0 COLLATE NOCASE, (((0.9056722693103442)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN (('1158729083')) AND ((vt0.c0))), TRIM(t0.c0), ((t0.c0) NOT NULL))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c0) IS TRUE) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0, vt0.c0, t0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (~ (vt0.c0)), t0.c0 COLLATE NOCASE, (((0.9056722693103442)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN (('1158729083')) AND ((vt0.c0))), TRIM(t0.c0), ((t0.c0) NOT NULL))))) ORDER BY ((t0.c0) IS TRUE) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, t0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (~ (vt0.c0)), t0.c0 COLLATE NOCASE, (((0.9056722693103442)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN (('1158729083')) AND ((vt0.c0))), TRIM(t0.c0), ((t0.c0) NOT NULL))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c0) IS TRUE) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0, vt0.c0, t0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (~ (vt0.c0)), t0.c0 COLLATE NOCASE, (((0.9056722693103442)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN (('1158729083')) AND ((vt0.c0))), TRIM(t0.c0), ((t0.c0) NOT NULL))))) ORDER BY ((t0.c0) IS TRUE) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (x'1695859f') ORDER BY ((vt1.c0 COLLATE BINARY)-((((vt1.c0, '522060337', vt1.c0)) NOT BETWEEN ((vt1.c0, x'', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((x'1695859f') IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)-((((vt1.c0, '522060337', vt1.c0)) NOT BETWEEN ((vt1.c0, x'', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (x'1695859f') ORDER BY ((vt1.c0 COLLATE BINARY)-((((vt1.c0, '522060337', vt1.c0)) NOT BETWEEN ((vt1.c0, x'', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((x'1695859f') IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)-((((vt1.c0, '522060337', vt1.c0)) NOT BETWEEN ((vt1.c0, x'', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (x'1695859f') ORDER BY ((vt1.c0 COLLATE BINARY)-((((vt1.c0, '522060337', vt1.c0)) NOT BETWEEN ((vt1.c0, x'', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS TRUE))OR(((vt0.c0) NOT BETWEEN ('꺺-') AND (NULL)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY CAST(((vt0.c0)OR(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))OR(((vt0.c0) NOT BETWEEN ('꺺-') AND (NULL)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)OR(vt0.c0)) AS REAL));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS TRUE))OR(((vt0.c0) NOT BETWEEN ('꺺-') AND (NULL)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY CAST(((vt0.c0)OR(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))OR(((vt0.c0) NOT BETWEEN ('꺺-') AND (NULL)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)OR(vt0.c0)) AS REAL));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS TRUE))OR(((vt0.c0) NOT BETWEEN ('꺺-') AND (NULL)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY CAST(((vt0.c0)OR(vt0.c0)) AS REAL);
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON IFNULL(CAST(vt1.c0 AS TEXT), CAST(0x1637aeba AS NUMERIC)) WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('g|Ug?KD')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('g|Ug?KD')) IN ())) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON IFNULL(CAST(vt1.c0 AS TEXT), CAST(0x1637aeba AS NUMERIC)));
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON IFNULL(CAST(vt1.c0 AS TEXT), CAST(0x1637aeba AS NUMERIC)) WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('g|Ug?KD')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('g|Ug?KD')) IN ())) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON IFNULL(CAST(vt1.c0 AS TEXT), CAST(0x1637aeba AS NUMERIC)));
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON IFNULL(CAST(vt1.c0 AS TEXT), CAST(0x1637aeba AS NUMERIC)) WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('g|Ug?KD')) IN ()));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (((vt1.c0)%(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.6198190642196814))) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.6198190642196814))) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (((vt1.c0)%(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.6198190642196814))) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.6198190642196814))) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (((vt1.c0)%(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.6198190642196814))) COLLATE BINARY DESC;
SELECT COUNT(*) FROM vt1, t0 WHERE (((t0.c0)+(TYPEOF(DISTINCT vt1.c0)))) ORDER BY (NOT (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)+(TYPEOF(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (NOT (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE (((t0.c0)+(TYPEOF(DISTINCT vt1.c0)))) ORDER BY (NOT (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)+(TYPEOF(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (NOT (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE (((t0.c0)+(TYPEOF(DISTINCT vt1.c0)))) ORDER BY (NOT (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON ((((x'' COLLATE BINARY)AND((vt1.c0 IN ()))))AND(vt1.c0 COLLATE BINARY)) LEFT OUTER JOIN vt1 ON CASE WHEN CASE t0.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END THEN CASE WHEN '{x' THEN vt0.c0 END WHEN ((vt0.c0) NOT NULL) THEN (NOT (vt1.c0)) WHEN ((t0.c0)+(vt0.c0)) THEN vt1.c0 ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END WHERE (((vt1.c0)>=(((vt0.c0)==(t0.c0))))) ORDER BY CAST(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=(((vt0.c0)=(t0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((x'' COLLATE BINARY)AND((vt1.c0 IN ()))))AND(vt1.c0 COLLATE BINARY)) LEFT OUTER JOIN vt1 ON CASE WHEN CASE t0.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END THEN CASE WHEN '{x' THEN vt0.c0 END WHEN ((vt0.c0) NOT NULL) THEN (NOT (vt1.c0)) WHEN ((t0.c0)+(vt0.c0)) THEN vt1.c0 ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END ORDER BY CAST(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON ((((x'' COLLATE BINARY)AND((vt1.c0 IN ()))))AND(vt1.c0 COLLATE BINARY)) LEFT OUTER JOIN vt1 ON CASE WHEN CASE t0.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END THEN CASE WHEN '{x' THEN vt0.c0 END WHEN ((vt0.c0) NOT NULL) THEN (NOT (vt1.c0)) WHEN ((t0.c0)+(vt0.c0)) THEN vt1.c0 ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END WHERE (((vt1.c0)>=(((vt0.c0)==(t0.c0))))) ORDER BY CAST(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=(((vt0.c0)=(t0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((x'' COLLATE BINARY)AND((vt1.c0 IN ()))))AND(vt1.c0 COLLATE BINARY)) LEFT OUTER JOIN vt1 ON CASE WHEN CASE t0.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END THEN CASE WHEN '{x' THEN vt0.c0 END WHEN ((vt0.c0) NOT NULL) THEN (NOT (vt1.c0)) WHEN ((t0.c0)+(vt0.c0)) THEN vt1.c0 ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END ORDER BY CAST(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON ((((x'' COLLATE BINARY)AND((vt1.c0 IN ()))))AND(vt1.c0 COLLATE BINARY)) LEFT OUTER JOIN vt1 ON CASE WHEN CASE t0.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END THEN CASE WHEN '{x' THEN vt0.c0 END WHEN ((vt0.c0) NOT NULL) THEN (NOT (vt1.c0)) WHEN ((t0.c0)+(vt0.c0)) THEN vt1.c0 ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END WHERE (((vt1.c0)>=(((vt0.c0)==(t0.c0))))) ORDER BY CAST(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((vt1.c0)/(LOWER(DISTINCT vt0.c0))) FULL OUTER JOIN vt1 ON vt0.c0 WHERE (0.06145422851555904) ORDER BY (((t0.c0)) NOT BETWEEN ((((x'') NOTNULL))) AND ((((vt1.c0)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((0.06145422851555904) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((vt1.c0)/(LOWER(DISTINCT vt0.c0))) FULL OUTER JOIN vt1 ON vt0.c0 ORDER BY (((t0.c0)) NOT BETWEEN ((((x'') NOTNULL))) AND ((((vt1.c0)IS NOT(vt1.c0))))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((vt1.c0)/(LOWER(DISTINCT vt0.c0))) FULL OUTER JOIN vt1 ON vt0.c0 WHERE (0.06145422851555904) ORDER BY (((t0.c0)) NOT BETWEEN ((((x'') NOTNULL))) AND ((((vt1.c0)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((0.06145422851555904) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((vt1.c0)/(LOWER(DISTINCT vt0.c0))) FULL OUTER JOIN vt1 ON vt0.c0 ORDER BY (((t0.c0)) NOT BETWEEN ((((x'') NOTNULL))) AND ((((vt1.c0)IS NOT(vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0) ISNULL)) IS FALSE) ASC, ((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0)>(vt1.c0))) AND (((vt1.c0)AND(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL)) IS FALSE) ASC, ((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0)>(vt1.c0))) AND (((vt1.c0)AND(vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0) ISNULL)) IS FALSE) ASC, ((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0)>(vt1.c0))) AND (((vt1.c0)AND(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL)) IS FALSE) ASC, ((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0)>(vt1.c0))) AND (((vt1.c0)AND(vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0) ISNULL)) IS FALSE) ASC, ((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0)>(vt1.c0))) AND (((vt1.c0)AND(vt1.c0)))) DESC;
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((vt0.c0 IN (0.09332639033207701)))||(((((vt0.c0)OR(t0.c0)))OR('-1309792533')))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (0.09332639033207701)))||(((((vt0.c0)OR(t0.c0)))OR('-1309792533'))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((vt0.c0 IN (0.09332639033207701)))||(((((vt0.c0)OR(t0.c0)))OR('-1309792533')))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (0.09332639033207701)))||(((((vt0.c0)OR(t0.c0)))OR('-1309792533'))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((vt0.c0 IN (0.09332639033207701)))||(((((vt0.c0)OR(t0.c0)))OR('-1309792533')))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((vt1.c0)>(vt0.c0)))!=(CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt0.c0)))!=(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((vt1.c0)>(vt0.c0)))!=(CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt0.c0)))!=(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((vt1.c0)>(vt0.c0)))!=(CAST(t0.c0 AS REAL))));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON TRIM(((NULL)|(vt0.c0)), t0.c0 COLLATE NOCASE) INNER JOIN vt0 ON ((((t0.c0) ISNULL)) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (((((vt1.c0) IS TRUE)) NOTNULL)) ORDER BY (- (x'')) COLLATE BINARY DESC  NULLS FIRST, ((((vt0.c0)<<(t0.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND ((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt1 NOT INDEXED RIGHT OUTER JOIN t0 ON TRIM(((NULL)|(vt0.c0)), t0.c0 COLLATE NOCASE) INNER JOIN vt0 ON ((((t0.c0) ISNULL)) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY (- (x'')) COLLATE BINARY DESC  NULLS FIRST, ((((vt0.c0)<<(t0.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND ((~ (vt0.c0)))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON TRIM(((NULL)|(vt0.c0)), t0.c0 COLLATE NOCASE) INNER JOIN vt0 ON ((((t0.c0) ISNULL)) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (((((vt1.c0) IS TRUE)) NOTNULL)) ORDER BY (- (x'')) COLLATE BINARY DESC  NULLS FIRST, ((((vt0.c0)<<(t0.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND ((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt1 NOT INDEXED RIGHT OUTER JOIN t0 ON TRIM(((NULL)|(vt0.c0)), t0.c0 COLLATE NOCASE) INNER JOIN vt0 ON ((((t0.c0) ISNULL)) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY (- (x'')) COLLATE BINARY DESC  NULLS FIRST, ((((vt0.c0)<<(t0.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND ((~ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(((0.7097966719222605) ISNULL))))AND(JULIANDAY(vt0.c0, '', vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE BINARY)AND(((0.7097966719222605) ISNULL))))AND(JULIANDAY(vt0.c0, '', vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(((0.7097966719222605) ISNULL))))AND(JULIANDAY(vt0.c0, '', vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE BINARY)AND(((0.7097966719222605) ISNULL))))AND(JULIANDAY(vt0.c0, '', vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(((0.7097966719222605) ISNULL))))AND(JULIANDAY(vt0.c0, '', vt0.c0, vt0.c0, vt0.c0))));
SELECT * FROM t0 WHERE ((((('3')LIKE(t0.c0)))>>(CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((('3')LIKE(t0.c0)))>>(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((('3')LIKE(t0.c0)))>>(CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((('3')LIKE(t0.c0)))>>(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((('3')LIKE(t0.c0)))>>(CAST(t0.c0 AS BLOB))));
SELECT ALL * FROM t0, vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (((vt1.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt0.c0, t0.c0))) THEN (t0.c0 IN (vt0.c0)) WHEN CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END THEN (~ (vt1.c0)) WHEN (+ (vt0.c0)) THEN ((vt1.c0)&(vt0.c0)) END) ORDER BY CAST(CASE WHEN vt0.c0 THEN t0.c0 END AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt0.c0, t0.c0))) THEN (t0.c0 IN (vt0.c0)) WHEN CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END THEN (~ (vt1.c0)) WHEN (+ (vt0.c0)) THEN ((vt1.c0)&(vt0.c0)) END) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN t0.c0 END AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (((vt1.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt0.c0, t0.c0))) THEN (t0.c0 IN (vt0.c0)) WHEN CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END THEN (~ (vt1.c0)) WHEN (+ (vt0.c0)) THEN ((vt1.c0)&(vt0.c0)) END) ORDER BY CAST(CASE WHEN vt0.c0 THEN t0.c0 END AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt0.c0, t0.c0))) THEN (t0.c0 IN (vt0.c0)) WHEN CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END THEN (~ (vt1.c0)) WHEN (+ (vt0.c0)) THEN ((vt1.c0)&(vt0.c0)) END) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN t0.c0 END AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (((vt1.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt0.c0, t0.c0))) THEN (t0.c0 IN (vt0.c0)) WHEN CASE t0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END THEN (~ (vt1.c0)) WHEN (+ (vt0.c0)) THEN ((vt1.c0)&(vt0.c0)) END) ORDER BY CAST(CASE WHEN vt0.c0 THEN t0.c0 END AS NUMERIC) ASC  NULLS LAST;
