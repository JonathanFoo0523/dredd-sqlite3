-- Time: 2024/06/09 14:56:13
-- Database: database10
-- Database version: 3.40.0
-- seed value: 1668647410
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TEMP TABLE t0 (c0 INT ); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, compress=likely, uncompress=likely); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((0x30af8090) ISNULL))AND((- (x'')))))OR(CASE 0.10802324180175438  WHEN '816808080' THEN 'j{KLR%' ELSE 'fr肐' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-46569307'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1329573836 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)||('Re')))AND(LIKELY(0.10802324180175438))))OR(((((0X4f3fafcc)AND(x'5cc9')))OR('j{KLR%')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '696182786 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0xffffffffc3a0c60f)AND(NULL)))OR(NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=703277891 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' COLLATE BINARY AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND((((('0.10802324180175438')OR(x'1c11')))OR(0.9674677847800173)), (+ (''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=646595389'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-136653621 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.27402497657584746)AND(x'')))AND(x'4862')))OR(0xffffffffb953285e)))AND(NULL)))/(((('\휬\rMy')) NOT BETWEEN (('-284104324')) AND (('1329573836'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-253723314' AS BLOB)) NOT BETWEEN (((NULL)-(0.10802324180175438))) AND (((0.9100251075499133)<<('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(8.1680808E8 COLLATE BINARY AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1912603401 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('-1072441556')-('-284104324')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-253723314 sz=66823414'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7607168995445154; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1233103545 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '835114300 -728968168 sz=-827133755'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('226591087')AND(0.13382208218350244)) THEN (NOT (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '555988340 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1185732514 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=646595389'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2117167673'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((CASE -2041078414  WHEN -730294314 THEN 1620613497 ELSE 0.5477705645175814 END)) AND ((((NULL) BETWEEN (NULL) AND (0.9674677847800173))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-927378248' THEN NULL END) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('')))&(((-1e500)==(0X3afd50ed)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-80687722 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=767361772 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-417779007 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1912603401 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.725267368064455)IS NOT(0.4847169263692229)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0Xffffffffc3a0c60f)AND(0.9100251075499133)) AS BLOB); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')|(''))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1365537451'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.2302912655178445  WHEN '' THEN x'' END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '165275428 sz=835114300 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1233103545 sz=66823414 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-1742018596 2 sz=-1233103545 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-417779007 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6069362447576169)) NOT BETWEEN (((0xffffffff982ae7dc IN (NULL)))) AND ((((x'ab6d')|(0.7832487776640832))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (((((((((((((0Xffffffffca581604)OR('793958630')))OR('')))OR(0.48130052159987735)))OR(x'')))AND(NULL)))OR('-1012873713')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(CAST(x'' AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('0.2302912655178445')=((((NULL))>=((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '300821991 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=1568654574 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)+(0.43406419488238457)))>=(((x'')/(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(((0.2463366155027863)|('')), 0.10843471067390953); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE NULL  WHEN 0.6911679546443147 THEN x'53be' ELSE '-1714621992' END)AND((((('-1882780585')OR(x'')))AND(NULL)))))OR(json_type(''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x''))>=(((('1491038006')<('1964773135'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('2117167673', NULL, '0.725267368064455'))>((NULL, x'', '.	2~EX>s츁'))))!=(x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('fr肐') BETWEEN ('I''.a1s&') AND (x''))  WHEN (((x''))<((x''))) THEN 0.3332364489299535 COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5753627745544965) BETWEEN ('-247174972') AND ('')) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2144235229 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.09984971062178305 COLLATE BINARY  WHEN (- ('-46569307')) THEN ((-2.53723314E8)AND(NULL)) WHEN CAST(x'' AS INTEGER) THEN (~ (0xffffffffb616212a)) WHEN (('-728968168') NOT BETWEEN (x'9ecb') AND (NULL)) THEN ((x'c53f')|(-1726312182)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '66823414 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (-827133755) AND (x'eedd')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 -730294314 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1075178867')) BETWEEN ((NULL)) AND (('0.48130052159987735'))))IS NOT((('1329573836')||('-1714621992')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)*(CAST(x'66f4b3b5' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=532316589 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')&(-1012873713)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1726312182') NOT BETWEEN ('-62846517') AND (NULL))) NOT BETWEEN (((((((((0xffffffff991a910a)OR(-1138922324)))AND('4k')))AND(NULL)))AND(NULL))) AND (CAST(NULL AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1299688634'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-2016702277 sz=1274027596 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR('<Z _ᖓxu')))IS(CASE WHEN '' THEN 0X344640f0 ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1878101694'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((NULL) NOT BETWEEN ('555988340') AND ('-1226760793')), '<Z _ᖓxu'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8767546611713709, 0.3602479090186592, x''))<=((0.26201403978547433, 0.7832487776640832, x'8ae4')))) NOT BETWEEN (((0.9811292553257046) BETWEEN ('452712834') AND (0x4f3fafcc))) AND (0.4924291779113099 COLLATE RTRIM)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1656284816 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(1477284620 AS INTEGER))AND(((0.9610818203302549) NOT NULL))))AND(CASE WHEN NULL THEN x'' END)))OR(CASE WHEN x'' THEN '-1119288537' WHEN NULL THEN '-1058066587' WHEN x'74d7' THEN 1.568654574E9 END)))AND(x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) NOT BETWEEN ((('1931144655') IS TRUE)) AND (((((((((3.00821991E8)AND('UA*5	L66')))AND('1274027596')))OR('Qk.vW3')))AND('HlEN퐘*2')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((4.52712834E8)AND(x'0f43')))OR('1964773135'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0')||(0.9257507418569909)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1509963701 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('')||(0.08327663998693713)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-1838263849 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (x'')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(1620613497 AS BLOB))<=(((x'') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(CASE 0.4627951131503647  WHEN '1931144655' THEN NULL ELSE 0.316836483377132 END, ((NULL)&(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-239578937 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1204708050 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))GLOB((('278368125') BETWEEN (x'') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL('', NULL)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '2 sz=2051739247 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-6.2846517E7)>(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'4bdb')>=(0.16349312099409496))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-417779007 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((~ (NULL)))OR(CASE x''  WHEN x'' THEN NULL WHEN -1093464915 THEN '0.3602479090186592' WHEN 0.3332364489299535 THEN 1131747027 END)))OR('Wq*\rDyJ!')))AND(((0.8037930902551245)&(x'')))))OR('1984782008')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '1155501424 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1747609360 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1075178867 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-46569307 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (HEX(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.29355343780387144)) BETWEEN ((0.7077146604478716)) AND ((NULL))) COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-藄\n}w\覕0' IN ()))>>(((NULL)<('0.09984971062178305')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '2 sz=793958630'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-288970709'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=483432620'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=300821991'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2016902895 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-2116923029 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=1509963701 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('')>(-1226760793)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1656284816 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=779047945 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1719041729 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=877019376'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '1134992940 0 sz=1644709819 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-945829354 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-51034418 -1670298258 sz=189010502 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-813387859 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((-412914631))<=((0.18451063696605052))))IS('')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1208889050 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1999687563'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-204834949 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-891376826 sz=-827133755 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'FALSE' COLLATE BINARY THEN (((x'', '-891376826', 'Qk.vW3')) NOT BETWEEN (('(nṌx?cz', '-46569307', 0.13382208218350244)) AND ((NULL, x'', 1252093898))) ELSE (((NULL))<((x''))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1080773545') BETWEEN (0.499297293453285) AND ('1080773545'))) NOT BETWEEN (((0x62c79221) NOT NULL)) AND ((NOT ('1719041729')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=670326844 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CHANGES())LIKE(((NULL) BETWEEN (x'f2b3b3d4') AND ('.H')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2028044955 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 -775771149'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1119442813 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-927378248 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2028044955 2 sz=1117038920'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')%(CAST(0.18451063696605052 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '445305828 490013960 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=137723468 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-10736139 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-391721339 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'2363')OR('1639983243')))AND('a')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1138922324 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=779047945 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (('j') NOT BETWEEN ('0.29355343780387144') AND ('0.26201403978547433'))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.059678973818014014)AND('1719041729')))AND('HlEN퐘*2')))AND(0.6043838048459408)))AND('-1670298258')))||('0.08327663998693713')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=2052631722 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('') NOT BETWEEN (x'e684') AND ('MRii\rI')))OR((0.46709357735727597 IN ()))))OR(((0Xffffffff926e51d7) IS TRUE))))AND(((('1491038006')) NOT BETWEEN ((NULL)) AND ((1.080773545E9))))))OR((- (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.46709357735727597')>('')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-1805960454')IS('|?+vK⊦]n'))  WHEN x'e042' COLLATE NOCASE THEN (('1252093898') NOTNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 sz=300821991 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (NULL)) IN (((NULL) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1796210711'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS NUMERIC)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((0X55e8beb5)AND(NULL)))AND(0.5019648717042294))  WHEN TYPEOF(DISTINCT NULL) THEN ((0.3530938008881951)LIKE(x'5230542a')) ELSE (~ (0.8399894896981616)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((-4.12914631E8))>(('eC[[9D츁')))  WHEN (((('[')OR('-1051994968')))OR(0.7077146604478716)) THEN (((NULL)) BETWEEN ((8.77019376E8)) AND ((x''))) WHEN CAST(x'' AS BLOB) THEN CASE x''  WHEN 0.798336710114055 THEN 0.48130052159987735 END WHEN ((0.6985167087789922) BETWEEN (NULL) AND (x'64a18149')) THEN NULL COLLATE NOCASE WHEN ((0Xffffffffb616212a) NOT NULL) THEN x'' COLLATE BINARY WHEN ((1236503944)IS(NULL)) THEN CASE 0.725267368064455  WHEN '-1208889050' THEN '-239578937' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE json_array_length(NULL, 0.1194684945228599)  WHEN ((0xffffffff926e51d7) NOTNULL) THEN 'j{KLR%' COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-藄\n}w\覕0'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-808698476'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('	\cbSn')AND(((((((((NULL)OR(1456798958)))AND(0.4764676794030027)))AND('X1玢*')))OR(NULL)))))OR((- (NULL)))))OR(((x'') IS FALSE))))OR((0.7580770570642119 IN ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(0xffffffffd9b22668 AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')<(x'3c9d')) COLLATE RTRIM COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1365537451 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN '-715533280' THEN x'3d1f' ELSE NULL END)OR('MGalT八')))AND(IFNULL(DISTINCT x'', 'iPeJ'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(x'7a0d' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.050720498459122854))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (NULL) AND (0.5667337813475355)))>>(0.050720498459122854 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1208889050 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-745726547 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (0.8376959455620775)) IN (((((x'b4d0')OR(-293402985)))OR(x'5f348cf6')), CAST(NULL AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '}Z'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1685216884 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ',u(Q\n'; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=887007959 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=398002222'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=-152261498'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1093464915 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1941879827'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'' AS TEXT)  WHEN CASE NULL  WHEN 1.620613497E9 THEN 'mJ' ELSE '2127749144' END THEN '1981179370' COLLATE BINARY ELSE ((((0.5518694368813829)OR('')))OR(0.593633520582588)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-900196860'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '1441469418 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 -728000722 sz=-247174972 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1565668704 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1881668742 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1466395381 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=-803293225 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-239578937')IS(NULL))) BETWEEN ((((0.5676944514814175))<((x'f65c')))) AND (((1555736093)IS NOT(0.6066951016972626)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1748148104 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))>((''))))+('-1888263007' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1868572387 sz=-2116923029 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))<(((0.050720498459122854) ISNULL))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('')GLOB(NULL))) BETWEEN (((814304572)!=('0g'))) AND (NULLIF('밮', x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 0 sz=1540035813'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=310585734 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((0.03988905767707662)AND('-1413328138')))OR(0.6162515008672138)))OR('989679853')))OR(x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=121635564'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('0.7607168995445154')AND('-1233103545')))AND(0.9663886197902366)) IN ((x'0d96' IN (8.1680808E8)), LIKE(0.3053559251867114, 2051739247))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=793958630 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1726312182 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-2016702277'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1292850858 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1574278627 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((0.7205614986798188)-('-1154656470')))) AND ((''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1860585711 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1240063702 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (0.4627951131503647)) AS BLOB); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '671210708 0 sz=-2016702277 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1902890658'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8353290403931181)<=('Ƴn'))) NOT BETWEEN (((-1233103545)LIKE(x'4a4b'))) AND (((((x'')OR('')))AND('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>('-1226760793')))/(((((NULL)OR(-5.53577069E8)))OR('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1226891400'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('I''.a1s&')>=('-1631980589')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '462826270 2 sz=-1240063702 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-139985236 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')+(0X620847bb))) BETWEEN ((((1.568654574E9))>((165275428)))) AND ((NOT ('Or')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=315388838 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-646153869'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN NULL THEN 0X628159ed END)*('0.5518694368813829')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_valid(CASE x'fca5'  WHEN 0x4015ed73 THEN NULL WHEN NULL THEN x'' WHEN NULL THEN 0.5667337813475355 WHEN 0.3031407583266338 THEN NULL WHEN -4.12914631E8 THEN NULL END); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1471493266 sz=779047945 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1706519601 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1204708050 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '696182786 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS TEXT)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-1072441556'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=257947555 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('wAu>Cz') NOT BETWEEN (NULL) AND (((0.6298307788464008)>(')ᓷwW')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=21716682 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY('760260920'))%(('1781427846' IN (0Xffffffffb94dc44a, x'fe64')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-927378248 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=77261882 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((0.38716445899313323 COLLATE NOCASE)) AND ((((9.89679853E8) BETWEEN (x'') AND ('-1846922387'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-288970709 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('TRGY9(h'))<((x''))))>=(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-829108651 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2092621059 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(NULL AS NUMERIC)))<>(((NOT (x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1329573836'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-2091836555 0 sz=1564852152'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)AND(NULL))))==((((((x'24a5e98c')OR('-1882780585')))AND(0x798e435f))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=66823414'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CHANGES() IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-2016702277 sz=-1365537451 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'f2ea' IN ()))IS NOT((((x''))<=(('Vd'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=793958630 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1365537451'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1670298258 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.2958982820388041 IN (NULL)))<=((((('-730294314')OR('1119442813')))OR(0xffffffffcf84afad)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1824162260 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-797330044 sz=646595389 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1119442813 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-362318318 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1138922324 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'2f368984') NOT BETWEEN ('') AND ('-1266918043')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)IS NOT(2028044955)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-613938654 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN 0.6146896163158246 ELSE NULL END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-1989248454 -1138922324'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1329573836 532316589 sz=1740234083 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-870776746'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('}Z' COLLATE RTRIM AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '0.8767546611713709'  WHEN x'db4c' THEN 0x2f52d8e6 ELSE 0Xffffffffbe5a9dee END) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-578376022 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '826148995'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=844207943'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY('-775771149') COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0Xffffffffccce9317, NULL, NULL))<=((0Xfffffffffb30cd96, NULL, NULL))))*(TRIM(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-167056750'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-568973389 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-2116923029'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.006383209414276281) IS FALSE)  WHEN 1.47728462E9 COLLATE BINARY THEN 0.3869530723586101 COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=393231959'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '793958630 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '1597646764'  WHEN x'' THEN ']E' WHEN NULL THEN 0Xffffffffc8b954b8 WHEN 0.8376959455620775 THEN 'O/' ELSE NULL END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6617318967208807; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object('1957235236', 'ꋱF9''') COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '1155501424 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1567214539 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1299723081 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1450807684'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1119442813 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-939369142'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1939815800 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'c63a' THEN -1303597085 ELSE x'e4b3' END IN ((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1575081689'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=2144235229 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1221540153 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1208889050'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '2 sz=238251370 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-1687582992 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('jMd3'))<((0.7290513476812936))) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=2028044955'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('2\n廒#o>Q]' COLLATE NOCASE AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(0.4364955594141132 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1932546534 sz=2053597040'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-1056441127'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1502955663') ISNULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '1477284620 sz=-1862695650'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))%(((-1516532090) NOT BETWEEN ('989679853') AND ('532316589')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0X555700d7 IN (NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)AND(0.42439186386411054)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1516561543'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_valid((((('1900429880')OR('-1954432783')))AND(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')<<(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 555988340 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.2839070180689168) BETWEEN (788719077) AND (1878101694)))OR(CASE 0.9671906388246759  WHEN '-247174972' THEN '' WHEN 0.9610818203302549 THEN x'' WHEN '-2044117697' THEN NULL END)))AND(-1554740549)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=766053784'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(CAST('sx\n氹ie' AS BLOB), ((NULL)>>('Z''Fm㛠K')), CASE WHEN '-1670298258' THEN 'J' ELSE 0xfffffffffbf932be END, (((0.43682669984746914, '', x'')) BETWEEN (('0b1', '%J', NULL)) AND ((x'', '-2116923029', x''))), CAST(NULL AS NUMERIC), CASE WHEN x'3d13' THEN '1984782008' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 sz=835114300'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=608164101'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL)AND(x'')))AND(x'')))AND(x'4484')))OR(NULL)) IN (((x'ecb0') NOT BETWEEN ('0.499297293453285') AND (x'')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-53334759 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1072441556'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1734311122'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'bd47' COLLATE RTRIM)-(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL)) NOT BETWEEN ((NULL)) AND (('I[]'))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1791257670 85550319 sz=-1208889050 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((881294300)|(0X65313e58))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1863211357 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-891376826 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE NULL  WHEN 0.27794079689473083 THEN NULL END  WHEN (('189010502') IS FALSE) THEN (NOT ('	㷫|n{/p')) ELSE LENGTH(x'') END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.8549556097530815, NULL, '<d', 0.8407436520821351, NULL))>(('1848345556', NULL, '2076037805', NULL, NULL))) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'IPEJ' COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 sz=-214941784 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1365537451 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT (((('')AND(x'')))OR(0.40930299088776056))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1964773135 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-116462533'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '1584649712 2 sz=-1332002928'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1067670654; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE x'a148'  WHEN 1783570602 THEN NULL END)AND((NULL IN ()))))OR((((0.23902179105826193))==((0.059678973818014014))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1204708050 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=165275428 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1204708050'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-739108779 4 sz=141573868'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '538964768 sz=-1322569068'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1119288537'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-263113842 sz=-284104324 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'')OR(0.4242528754995314)))AND(NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-200228076 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(0.4364955594141132, '') COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((GLOB(x'', '1657246241'))%(0.27794079689473083)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=-1981874880 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1172670025 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_type(NULL))=(((('-17414086'))=((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=-400257593 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-1599231788 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=2144235229 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT UNLIKELY(1e500)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1670298258') NOT BETWEEN (x'') AND (0.7329127527264404)))OR(HEX('RW옧o+োh'))))OR(CAST('966501043' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '4 sz=337038849 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '793958630 1175819797 sz=1931144655 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'78d6')))>>(TRIM(DISTINCT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-538661379 sz=196648695 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1.838263849E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-614059695 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('113853527')LIKE(337038849)))LIKE(0.7832487776640832)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '2048424728 2 sz=-1204708050 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1626545090 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1372343083 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1656284816 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('sx\n氹ie') NOTNULL))AND((((0.5492110257473788, '3nmc>e/(\r', x'8036'))<((x'b6ef566e', 0xffffffff90e5d26a, 0.9082639800158281))))))OR(((NULL) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-909160704'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN NULL THEN x'7e67' ELSE x'969b' END))<((CASE WHEN 0.8407436520821351 THEN '' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '1134992940 sz=-1817668477'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR(NULL)))OR(x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('-2009952022') BETWEEN (0.4366512907986895) AND ('-0.0')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=816808080 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2028044955 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN NULL THEN '(' WHEN 'tjώ踶' THEN 0.544144072263209 WHEN -489017232 THEN 0.8991189564337533 ELSE 0.499297293453285 END)<(load_extension('-949542649'))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((772588062, NULL, 0.6536021420830749)) BETWEEN ((NULL, -204834949, 0x66767ec1)) AND ((x'', NULL, 0x2602135d))))!=(((0.3083014606299218) BETWEEN ('') AND (0Xffffffffd434dd1e)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=309594229'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('494555428' IN (0.2572694775464529))  WHEN ABS(0.544144072263209) THEN (NULL IN ('-553577069')) ELSE (((('{Z\KH쮼')AND(NULL)))OR(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.287569956735082; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '165275428 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '1329573836 sz=-730294314 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND(x'')))OR(''))) BETWEEN (CASE WHEN 0.4847169263692229 THEN '' ELSE x'' END) AND (TRIM(-2.84104324E8))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1249499419 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS((((x'')) BETWEEN (('')) AND ((-2116923029)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '' COLLATE NOCASE  WHEN (((('')AND(NULL)))OR(-1065557326)) THEN ((1.89010502E8)<<(NULL)) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-775771149 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '165275428 0 sz=-1012873713 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-213636474 sz=-87044319 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('ͼ!')==(NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(UPPER(x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN (x'') AND (-586375584)))-((x'd1e1' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN ('') AND (NULL)))<((('7') NOT BETWEEN ('r芛XCIJ 7e') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=-1858922661 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-249802595 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('mPDno''c~')AND(x'')))OR(NULL))) BETWEEN (CASE '30230881'  WHEN '-2116923029' THEN x'' ELSE 0Xffffffffe71932c1 END) AND (((x'') BETWEEN (0.8932800235829531) AND (x'f27c')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(LOWER('-1912603401')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ''  WHEN load_extension(-869858303) THEN ('E6<i' IN (NULL)) ELSE 452712834 END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1959064579 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-134269128 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-1.726312182E9 COLLATE NOCASE AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('A|z')OR('')))OR('R-x2k'))) NOT BETWEEN ((x'' IN ())) AND ('3nmc>e/(\r')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-130300898 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-253723314' AS NUMERIC) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('' COLLATE NOCASE)OR((((x'')) NOT BETWEEN ((x'')) AND (('1657246241'))))))OR(CAST(x'' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 0 sz=2124757087 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1474319768 0 sz=263480673 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('VD')))<(DATE(0.8051077886021459, 0.38038095323859034, 0x643a2e2a))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-963079047 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8351398877447014)AND(x''))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1727944530 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.177322948E9) NOT BETWEEN (x'') AND (1.509963701E9)))||(HEX(DISTINCT 0.423473406613483))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-46402519'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1669236844'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1298370151 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '989679853 sz=283574405'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('696182786' IN ()) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')AND('-469647573')))AND(x'')))AND(0.13911645543133133)))AND(x'f6bc')))&((('鸬i') BETWEEN (0.03770366333600039) AND ('-601217508')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT CASE WHEN 0.7290513476812936 THEN 0.2808135590829076 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (x'') AND (x''))) BETWEEN (((('1999687563'))<=((NULL)))) AND ('1080773545' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('uR4窩~{\r+㠿' IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1568654574 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1615231854 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('UA*5	L66', x'', -1579290411))<=(('', -9.45829354E8, -9.27378248E8)))) NOT BETWEEN ((x'' IN ())) AND ((+ ('0b1')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1134992940'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-1613603464 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1557888629 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('~5')OR(x'')))IS NOT(CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.8549556097530815')AND(x''))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=793958630 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.06235729799349221) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1555474070 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(x'') COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 -1012873713 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=748518905'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1878101694') NOT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('䑻hpZ!qH9g' IN (x'')))>(((NULL) NOT BETWEEN (x'fdd5') AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((CASE 'wAu>Cz'  WHEN 0x4ba4ae51 THEN '0.08327663998693713' ELSE '-2063628847' END)) AND ((CAST(x'5f5f7694' AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1763616154'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove(NULL, (((NULL))<>(('-2116923029')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-46569307' COLLATE NOCASE AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY('휬z吋' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1398064248'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-1134825766'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((0.6405417900035099)) BETWEEN ((NULL)) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-555448208 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('<')%(0.13931011052661602)) THEN (0.28096344807866014 IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1150965989'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=611974562 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'ec46')<>('-814109635'))) NOT BETWEEN (0.07076354336222745) AND (((x'')-(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1631928679'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY('-80687722'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((MIN(NULL, NULL))<=(((((0.8450693644883344)OR('G5')))AND('106970767')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=364420544 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=696182786 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=681769571 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=2120440241 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1712139741'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1919825940 sz=1040805130 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2120789279 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL))<=(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULLIF(DISTINCT '919881344', NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1627370374') IS TRUE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '1806331321 1639080502'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('(DJjDKN[!')) NOT BETWEEN ((rtreenode(0.6966321184389678, NULL))) AND ((NULLIF('-1233103545', NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '1418909929 1770557689 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=452712834'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=835279759 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=2047825321'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT x'0b45') COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5468197178161214 COLLATE BINARY, ((-1891423567)=(0.7110285077483993)), CAST('Ee' AS REAL)))!=((CASE x''  WHEN x'' THEN 0xffffffff958bbe75 ELSE 0.6515659278564022 END, (('1358669761')>>(NULL)), (('') BETWEEN (NULL) AND (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=189010502 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '2072676589 sz=-1882780585 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (-945829354))) NOT BETWEEN (CAST(0.6405417900035099 AS BLOB)) AND (CASE x''  WHEN 'daysV*f' THEN x'1430' ELSE 1.252093898E9 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=189010502'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1039835539 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-618433472 sz=-602877552 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1742018596'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN ('') AND (NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('-1670298258') NOT BETWEEN ('1685214703') AND ('-1361444382')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-900196860'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'733c')) BETWEEN ((0.27907011766323675)) AND (('a該')))) NOT BETWEEN ((NOT (x'6cc2b83c'))) AND (((((NULL)AND(NULL)))OR('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('0.9811292553257046' AS BLOB)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('oqSic')OR(1.274027596E9))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'7835' IN (0xffffffffbd167277)))AND(CAST('711535717' AS BLOB))))OR(CASE WHEN '' THEN x'6f9a' WHEN 0X10978f7d THEN NULL WHEN '' THEN NULL ELSE 0.3619824302643302 END)))OR(CAST('k' AS NUMERIC))))AND(NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.059678973818014014) BETWEEN (NULL) AND (1534440227)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1607687913 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1738149574 sz=-1596944579 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1999687563 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)LIKE(0.11248667692950975)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-284104324'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=845922422 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (1477284620 IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (x'1393')))IS NOT((~ (x'5bae')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST('1986223723' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'2748' AS NUMERIC) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1584742428 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.6391817616551587)AND(x'')) THEN ((x'ff02') BETWEEN (0.9449144092260993) AND (0x733a451b)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-408358276')AND(-1572058981)))AND(NULL)))AND('242133857')))OR(0.4924291779113099)))GLOB(0.4362280760196805 COLLATE RTRIM)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.836601498946706) IS FALSE))AND(((6.70326844E8)<(NULL)))))OR(CASE WHEN NULL THEN 0.6792783334036587 ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('D5') IS TRUE))OR(CASE WHEN -1.233103545E9 THEN NULL ELSE -1208889050 END)))OR((((NULL)) NOT BETWEEN ((x'')) AND ((-1240063702))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(CASE NULL  WHEN '' THEN x'' ELSE '1040235039' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=2016902895 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 1.644709819E9  WHEN 0Xffffffffd1c2abf3 THEN 0x991f0a1 WHEN 0.8549556097530815 THEN -974762888 WHEN NULL THEN '' ELSE NULL END IN ((('1999687563')&('2117167673')), (~ (1.119442813E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1440558582 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=66823414 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1834210291 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '555988340 sz=-412914631'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-45966490 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-927378248')) BETWEEN ((CAST(NULL AS REAL))) AND ((((x'')IS NOT(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1550200442 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) NOT BETWEEN (NULL) AND (0)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '284782435 sz=322014742'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-480032463 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-668981196 sz=38289690'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-687662026 567566484 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))>>((((('1878101694')AND(0.31605629767529164)))OR(0.2278131079480067)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x''  WHEN '185183385' THEN 1307792805 ELSE x'' END IN ()); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('-963968363', x'2689', 'TRGY9(h')) NOT BETWEEN (('L9afi2~u', NULL, 0X462c85c4)) AND ((x'77ca', 0.6174643468690522, x''))))>>(((432426520)>>(0Xffffffffc0d16128)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x5d7fc4ee)==(x''))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=834595652'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((-2114592383)IS('!')) IN ('J', ((((((((-900196860)OR('-242863181')))AND(x'')))OR(0xffffffffd97af81c)))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 1477284620 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1782698957 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS TRUE)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1417741699'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('0.9257507418569909')OR('')))OR('z''fm㛠k'))) BETWEEN ((('541786424') NOT BETWEEN (NULL) AND (0.20301040230925316))) AND (CASE WHEN '-1727488146' THEN x'6162' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=943862423 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
ANALYZE; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c71; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x''); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA legacy_file_format = false; -- 0ms;
PRAGMA temp.cache_size = 3929488057365553892; -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('1509963701'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1139718822 unordered'); -- 1ms;
INSERT OR IGNORE INTO t0(c71) VALUES ('牢PO'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4, +c5 REAL ); -- 0ms;
INSERT OR IGNORE INTO t0(c71) VALUES ('U娻KygV5'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, matchinfo=fts3, notindexed=c0); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c26 REAL; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), (x''), (x''); -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR ROLLBACK INTO t0(c26) VALUES (NULL); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i29 ON t0((-974985298 IN ()) ASC,((c26)/(((c71) NOT BETWEEN (c71) AND (c71)))) ASC); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('-745586006'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (''); -- 0ms;
ANALYZE; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA temp.stats; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.cell_size_check; -- 0ms;
ANALYZE; -- 0ms;
REINDEX BINARY; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c71) VALUES (0.1850583754585432), (''), (0.07190242849968609); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (9.89679853E8), (NULL), (0.4393191765246206); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
CREATE TEMPORARY TRIGGER IF NOT EXISTS tr0 AFTER DELETE ON t0 FOR EACH ROW  WHEN ABS(((t0.c71) ISNULL)) BEGIN DELETE FROM t0 WHERE '-442790064';END; -- 0ms;
INSERT OR IGNORE INTO t0(c71) VALUES (NULL), (x'd9ba'), (''); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO rt0(c5, c4) VALUES (0.4501236653063452, 's'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c71 TO c95; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c71 TO c65; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c71 TO c52; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c71 TO c33; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c71 TO c58; -- 0ms;
ALTER TABLE t0 ADD COLUMN c35 INT; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0x3d3ee91, c0=NULL WHERE ((x'') IS FALSE); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('824042615'); -- 1ms;
INSERT OR ABORT INTO vt0 VALUES (')ᓷwW'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('sx\n氹ie'); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c71 TO c99; -- 0ms;
ALTER TABLE t0 ADD COLUMN c8 INT; -- 1ms;
PRAGMA main.recursive_triggers = true; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 sz=-62846517 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-9223372036854775808 unordered noskipscan'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('', 0.2463366155027863, 0xcfc8d86) ON CONFLICT(c35, c8, c71) DO UPDATE SET c71=excluded.c8, c35=0Xffffffffbac75f8b, c8=c35 WHERE CAST(((((t0.c35)OR(t0.c71)))AND(t0.c71)) AS NUMERIC); -- 0ms;
INSERT OR ABORT INTO t0(c35, c71, c8) VALUES (x'', NULL, -4.17779007E8); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA main.mmap_size = -722001761439024164; -- 0ms;
DROP TABLE t0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t0(c35) VALUES (x'23dc'), ('368224673'), ('0.6298307788464008'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c5, c1, c2, c3) VALUES (0x6240ead5, NULL, '1119442813', 0.7514070456801011, x'045a'); -- 0ms;
PRAGMA cache_spill; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('779047945'), (NULL), ('741244261'); -- 0ms;
CREATE UNIQUE INDEX i90 ON t0(NULL COLLATE RTRIM,(NOT ((- (c35)))) COLLATE RTRIM DESC) WHERE CAST((c35 IN ()) AS INTEGER); -- 0ms;
PRAGMA main.stats; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=981530102,9');\n; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR REPLACE INTO rt0(c3, c2, c1, c5) VALUES (NULL, NULL, NULL, -284104324); -- 1ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES ('Y'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (0.877426720258207) ORDER BY ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (t0.c71) AND ((((rt0.c3))<((t0.c71)))))  NULLS FIRST, ((CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c0 END)&(((rt0.c0)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((0.877426720258207) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (t0.c71) AND ((((rt0.c3))<((t0.c71)))))  NULLS FIRST, ((CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c0 END)&(((rt0.c0)>(vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (0.877426720258207) ORDER BY ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (t0.c71) AND ((((rt0.c3))<((t0.c71)))))  NULLS FIRST, ((CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c0 END)&(((rt0.c0)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((0.877426720258207) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (t0.c71) AND ((((rt0.c3))<((t0.c71)))))  NULLS FIRST, ((CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c0 END)&(((rt0.c0)>(vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (0.877426720258207) ORDER BY ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (t0.c71) AND ((((rt0.c3))<((t0.c71)))))  NULLS FIRST, ((CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c0 END)&(((rt0.c0)>(vt0.c0))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0)<>(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0)<>(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0)<>(vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 WHERE ('{');
SELECT SUM(count) FROM (SELECT (('{') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 WHERE ('{');
SELECT SUM(count) FROM (SELECT (('{') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 WHERE ('{');
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON (rt0.c5 IN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((NULL) NOT NULL))) RIGHT OUTER JOIN rt0 ON ((((rt0.c4) NOTNULL))OR(((('0.3083014606299218'))>((t0.c35))))) WHERE (CAST(CAST(rt0.c4 AS BLOB) AS BLOB)) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)||(rt0.c3))) AND ((((rt0.c0, rt0.c1, NULL))<((rt0.c1, rt0.c2, rt0.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c4 AS BLOB) AS BLOB)) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON (rt0.c5 IN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((NULL) NOT NULL))) RIGHT OUTER JOIN rt0 ON ((((rt0.c4) NOTNULL))OR(((('0.3083014606299218'))>((t0.c35))))) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)||(rt0.c3))) AND ((((rt0.c0, rt0.c1, NULL))<((rt0.c1, rt0.c2, rt0.c3))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON (rt0.c5 IN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((NULL) NOT NULL))) RIGHT OUTER JOIN rt0 ON ((((rt0.c4) NOTNULL))OR(((('0.3083014606299218'))>((t0.c35))))) WHERE (CAST(CAST(rt0.c4 AS BLOB) AS BLOB)) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)||(rt0.c3))) AND ((((rt0.c0, rt0.c1, NULL))<((rt0.c1, rt0.c2, rt0.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c4 AS BLOB) AS BLOB)) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON (rt0.c5 IN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((NULL) NOT NULL))) RIGHT OUTER JOIN rt0 ON ((((rt0.c4) NOTNULL))OR(((('0.3083014606299218'))>((t0.c35))))) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)||(rt0.c3))) AND ((((rt0.c0, rt0.c1, NULL))<((rt0.c1, rt0.c2, rt0.c3))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (((0.4797478426342552)&((((t0.c35)) BETWEEN ((rt0.c2)) AND ((rt0.c5)))))) ORDER BY (((CASE WHEN t0.c35 THEN rt0.c2 ELSE rt0.c1 END, (vt1.c0 IN ()), ((((vt1.c0)OR(rt0.c1)))OR(rt0.c4))))<((rt0.c0 COLLATE RTRIM, ((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c5)), ((((((((rt0.c2)OR(rt0.c1)))OR(vt1.c0)))AND(t0.c35)))OR(t0.c35))))) DESC;
SELECT SUM(count) FROM (SELECT ((((0.4797478426342552)&((((t0.c35)) BETWEEN ((rt0.c2)) AND ((rt0.c5)))))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (((CASE WHEN t0.c35 THEN rt0.c2 ELSE rt0.c1 END, (vt1.c0 IN ()), ((((vt1.c0)OR(rt0.c1)))OR(rt0.c4))))<((rt0.c0 COLLATE RTRIM, ((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c5)), ((((((((rt0.c2)OR(rt0.c1)))OR(vt1.c0)))AND(t0.c35)))OR(t0.c35))))) DESC);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (((0.4797478426342552)&((((t0.c35)) BETWEEN ((rt0.c2)) AND ((rt0.c5)))))) ORDER BY (((CASE WHEN t0.c35 THEN rt0.c2 ELSE rt0.c1 END, (vt1.c0 IN ()), ((((vt1.c0)OR(rt0.c1)))OR(rt0.c4))))<((rt0.c0 COLLATE RTRIM, ((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c5)), ((((((((rt0.c2)OR(rt0.c1)))OR(vt1.c0)))AND(t0.c35)))OR(t0.c35))))) DESC;
SELECT SUM(count) FROM (SELECT ((((0.4797478426342552)&((((t0.c35)) BETWEEN ((rt0.c2)) AND ((rt0.c5)))))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (((CASE WHEN t0.c35 THEN rt0.c2 ELSE rt0.c1 END, (vt1.c0 IN ()), ((((vt1.c0)OR(rt0.c1)))OR(rt0.c4))))<((rt0.c0 COLLATE RTRIM, ((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c5)), ((((((((rt0.c2)OR(rt0.c1)))OR(vt1.c0)))AND(t0.c35)))OR(t0.c35))))) DESC);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (((0.4797478426342552)&((((t0.c35)) BETWEEN ((rt0.c2)) AND ((rt0.c5)))))) ORDER BY (((CASE WHEN t0.c35 THEN rt0.c2 ELSE rt0.c1 END, (vt1.c0 IN ()), ((((vt1.c0)OR(rt0.c1)))OR(rt0.c4))))<((rt0.c0 COLLATE RTRIM, ((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c5)), ((((((((rt0.c2)OR(rt0.c1)))OR(vt1.c0)))AND(t0.c35)))OR(t0.c35))))) DESC;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c71, t0.c71, t0.c71, t0.c35, t0.c71))>((t0.c71, t0.c71, t0.c35, t0.c71, t0.c35))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t0.c71, t0.c71, t0.c71, t0.c35, t0.c71))>((t0.c71, t0.c71, t0.c35, t0.c71, t0.c35))) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c71, t0.c71, t0.c71, t0.c35, t0.c71))>((t0.c71, t0.c71, t0.c35, t0.c71, t0.c35))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t0.c71, t0.c71, t0.c71, t0.c35, t0.c71))>((t0.c71, t0.c71, t0.c35, t0.c71, t0.c35))) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c71, t0.c71, t0.c71, t0.c35, t0.c71))>((t0.c71, t0.c71, t0.c35, t0.c71, t0.c35))) IN ()));
SELECT ALL * FROM vt1 CROSS JOIN t0 ON '#o' WHERE (CAST((vt1.c0 IN ()) AS REAL)) ORDER BY ((CASE WHEN vt1.c0 THEN t0.c71 ELSE t0.c71 END)>>(t0.c35 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON '#o' ORDER BY ((CASE WHEN vt1.c0 THEN t0.c71 ELSE t0.c71 END)>>(t0.c35 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN t0 ON '#o' WHERE (CAST((vt1.c0 IN ()) AS REAL)) ORDER BY ((CASE WHEN vt1.c0 THEN t0.c71 ELSE t0.c71 END)>>(t0.c35 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON '#o' ORDER BY ((CASE WHEN vt1.c0 THEN t0.c71 ELSE t0.c71 END)>>(t0.c35 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN t0 ON '#o' WHERE (CAST((vt1.c0 IN ()) AS REAL)) ORDER BY ((CASE WHEN vt1.c0 THEN t0.c71 ELSE t0.c71 END)>>(t0.c35 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (NULL) ORDER BY HEX((+ (rt0.c2))) ASC, ((((rt0.c4) BETWEEN (t0.c71) AND (rt0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0 ORDER BY HEX((+ (rt0.c2))) ASC, ((((rt0.c4) BETWEEN (t0.c71) AND (rt0.c0))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (NULL) ORDER BY HEX((+ (rt0.c2))) ASC, ((((rt0.c4) BETWEEN (t0.c71) AND (rt0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0 ORDER BY HEX((+ (rt0.c2))) ASC, ((((rt0.c4) BETWEEN (t0.c71) AND (rt0.c0))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (NULL) ORDER BY HEX((+ (rt0.c2))) ASC, ((((rt0.c4) BETWEEN (t0.c71) AND (rt0.c0))) IS TRUE) DESC;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END);
SELECT * FROM rt0 WHERE (ABS(rt0.c4 COLLATE NOCASE)) ORDER BY UNLIKELY(DISTINCT CAST(0.5317720765330697 AS NUMERIC)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(rt0.c4 COLLATE NOCASE)) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(DISTINCT CAST(0.5317720765330697 AS NUMERIC)) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (ABS(rt0.c4 COLLATE NOCASE)) ORDER BY UNLIKELY(DISTINCT CAST(0.5317720765330697 AS NUMERIC)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(rt0.c4 COLLATE NOCASE)) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(DISTINCT CAST(0.5317720765330697 AS NUMERIC)) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (ABS(rt0.c4 COLLATE NOCASE)) ORDER BY UNLIKELY(DISTINCT CAST(0.5317720765330697 AS NUMERIC)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON (((rt0.c4)) BETWEEN ((rt0.c5 COLLATE NOCASE)) AND (((((rt0.c5, vt0.c0, rt0.c1))<((rt0.c1, rt0.c3, rt0.c1)))))) WHERE ((((((((((((((('킺E')OR(rt0.c3)))OR(rt0.c5)))OR(vt0.c0)))AND(rt0.c2)))AND(t0.c35)))AND(t0.c71)))<((t0.c35 IN (t0.c71)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((('킺E')OR(rt0.c3)))OR(rt0.c5)))OR(vt0.c0)))AND(rt0.c2)))AND(t0.c35)))AND(t0.c71)))<((t0.c35 IN (t0.c71))))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON (((rt0.c4)) BETWEEN ((rt0.c5 COLLATE NOCASE)) AND (((((rt0.c5, vt0.c0, rt0.c1))<((rt0.c1, rt0.c3, rt0.c1)))))));
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON (((rt0.c4)) BETWEEN ((rt0.c5 COLLATE NOCASE)) AND (((((rt0.c5, vt0.c0, rt0.c1))<((rt0.c1, rt0.c3, rt0.c1)))))) WHERE ((((((((((((((('킺E')OR(rt0.c3)))OR(rt0.c5)))OR(vt0.c0)))AND(rt0.c2)))AND(t0.c35)))AND(t0.c71)))<((t0.c35 IN (t0.c71)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((('킺E')OR(rt0.c3)))OR(rt0.c5)))OR(vt0.c0)))AND(rt0.c2)))AND(t0.c35)))AND(t0.c71)))<((t0.c35 IN (t0.c71))))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON (((rt0.c4)) BETWEEN ((rt0.c5 COLLATE NOCASE)) AND (((((rt0.c5, vt0.c0, rt0.c1))<((rt0.c1, rt0.c3, rt0.c1)))))));
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON (((rt0.c4)) BETWEEN ((rt0.c5 COLLATE NOCASE)) AND (((((rt0.c5, vt0.c0, rt0.c1))<((rt0.c1, rt0.c3, rt0.c1)))))) WHERE ((((((((((((((('킺E')OR(rt0.c3)))OR(rt0.c5)))OR(vt0.c0)))AND(rt0.c2)))AND(t0.c35)))AND(t0.c71)))<((t0.c35 IN (t0.c71)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((vt1.c0)!=(vt0.c0)) IN ()) WHERE (((((vt1.c0) IS FALSE))<<(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE))<<(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt1.c0)<>(vt0.c0)) IN ()) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((vt1.c0)!=(vt0.c0)) IN ()) WHERE (((((vt1.c0) IS FALSE))<<(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE))<<(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt1.c0)<>(vt0.c0)) IN ()) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((vt1.c0)!=(vt0.c0)) IN ()) WHERE (((((vt1.c0) IS FALSE))<<(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM rt0, vt1, vt0 WHERE (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c5))) BETWEEN (((0.1804742949108844) BETWEEN (rt0.c0) AND (rt0.c4))) AND (((rt0.c1)AND(x''))))) ORDER BY CASE WHEN ((rt0.c4) ISNULL) THEN rt0.c3 COLLATE NOCASE WHEN (((NULL, rt0.c3, rt0.c5))<((vt0.c0, rt0.c4, rt0.c5))) THEN ((((rt0.c1)AND(x'')))AND(rt0.c3)) WHEN (- (rt0.c2)) THEN ((vt1.c0) NOTNULL) WHEN TRIM(vt1.c0) THEN ((rt0.c4)IS NOT(vt1.c0)) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) ELSE ((((vt1.c0)AND(rt0.c3)))OR(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c5))) BETWEEN (((0.1804742949108844) BETWEEN (rt0.c0) AND (rt0.c4))) AND (((rt0.c1)AND(x''))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE WHEN ((rt0.c4) ISNULL) THEN rt0.c3 COLLATE NOCASE WHEN (((NULL, rt0.c3, rt0.c5))<((vt0.c0, rt0.c4, rt0.c5))) THEN ((((rt0.c1)AND(x'')))AND(rt0.c3)) WHEN (- (rt0.c2)) THEN ((vt1.c0) NOTNULL) WHEN TRIM(vt1.c0) THEN ((rt0.c4)IS NOT(vt1.c0)) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) ELSE ((((vt1.c0)AND(rt0.c3)))OR(vt0.c0)) END);
SELECT * FROM rt0, vt1, vt0 WHERE (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c5))) BETWEEN (((0.1804742949108844) BETWEEN (rt0.c0) AND (rt0.c4))) AND (((rt0.c1)AND(x''))))) ORDER BY CASE WHEN ((rt0.c4) ISNULL) THEN rt0.c3 COLLATE NOCASE WHEN (((NULL, rt0.c3, rt0.c5))<((vt0.c0, rt0.c4, rt0.c5))) THEN ((((rt0.c1)AND(x'')))AND(rt0.c3)) WHEN (- (rt0.c2)) THEN ((vt1.c0) NOTNULL) WHEN TRIM(vt1.c0) THEN ((rt0.c4)IS NOT(vt1.c0)) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) ELSE ((((vt1.c0)AND(rt0.c3)))OR(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c5))) BETWEEN (((0.1804742949108844) BETWEEN (rt0.c0) AND (rt0.c4))) AND (((rt0.c1)AND(x''))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE WHEN ((rt0.c4) ISNULL) THEN rt0.c3 COLLATE NOCASE WHEN (((NULL, rt0.c3, rt0.c5))<((vt0.c0, rt0.c4, rt0.c5))) THEN ((((rt0.c1)AND(x'')))AND(rt0.c3)) WHEN (- (rt0.c2)) THEN ((vt1.c0) NOTNULL) WHEN TRIM(vt1.c0) THEN ((rt0.c4)IS NOT(vt1.c0)) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) ELSE ((((vt1.c0)AND(rt0.c3)))OR(vt0.c0)) END);
SELECT * FROM rt0, vt1, vt0 WHERE (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c5))) BETWEEN (((0.1804742949108844) BETWEEN (rt0.c0) AND (rt0.c4))) AND (((rt0.c1)AND(x''))))) ORDER BY CASE WHEN ((rt0.c4) ISNULL) THEN rt0.c3 COLLATE NOCASE WHEN (((NULL, rt0.c3, rt0.c5))<((vt0.c0, rt0.c4, rt0.c5))) THEN ((((rt0.c1)AND(x'')))AND(rt0.c3)) WHEN (- (rt0.c2)) THEN ((vt1.c0) NOTNULL) WHEN TRIM(vt1.c0) THEN ((rt0.c4)IS NOT(vt1.c0)) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) ELSE ((((vt1.c0)AND(rt0.c3)))OR(vt0.c0)) END;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 LEFT OUTER JOIN vt1 ON (((((rt0.c1))>=((rt0.c5))))OR('')) WHERE ((((~ (t0.c71))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c71))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0 LEFT OUTER JOIN vt1 ON (((((rt0.c1))>=((rt0.c5))))OR('')));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 LEFT OUTER JOIN vt1 ON (((((rt0.c1))>=((rt0.c5))))OR('')) WHERE ((((~ (t0.c71))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c71))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0 LEFT OUTER JOIN vt1 ON (((((rt0.c1))>=((rt0.c5))))OR('')));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 LEFT OUTER JOIN vt1 ON (((((rt0.c1))>=((rt0.c5))))OR('')) WHERE ((((~ (t0.c71))) NOTNULL));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((0.016841495174732657)))) NOT BETWEEN (((((vt0.c0)AND('')))OR(vt0.c0))) AND (((rt0.c2) ISNULL))) RIGHT OUTER JOIN vt0 ON (((t0.c71) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((((t0.c71, rt0.c3, vt1.c0)) NOT BETWEEN ((rt0.c0, t0.c71, 1738106403)) AND ((rt0.c2, rt0.c3, rt0.c4))))) LEFT OUTER JOIN t0 ON CAST((NULL IN (vt0.c0)) AS TEXT) WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((0.016841495174732657)))) NOT BETWEEN (((((vt0.c0)AND('')))OR(vt0.c0))) AND (((rt0.c2) ISNULL))) RIGHT OUTER JOIN vt0 ON (((t0.c71) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((((t0.c71, rt0.c3, vt1.c0)) NOT BETWEEN ((rt0.c0, t0.c71, 1738106403)) AND ((rt0.c2, rt0.c3, rt0.c4))))) LEFT OUTER JOIN t0 ON CAST((NULL IN (vt0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((0.016841495174732657)))) NOT BETWEEN (((((vt0.c0)AND('')))OR(vt0.c0))) AND (((rt0.c2) ISNULL))) RIGHT OUTER JOIN vt0 ON (((t0.c71) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((((t0.c71, rt0.c3, vt1.c0)) NOT BETWEEN ((rt0.c0, t0.c71, 1738106403)) AND ((rt0.c2, rt0.c3, rt0.c4))))) LEFT OUTER JOIN t0 ON CAST((NULL IN (vt0.c0)) AS TEXT) WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((0.016841495174732657)))) NOT BETWEEN (((((vt0.c0)AND('')))OR(vt0.c0))) AND (((rt0.c2) ISNULL))) RIGHT OUTER JOIN vt0 ON (((t0.c71) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((((t0.c71, rt0.c3, vt1.c0)) NOT BETWEEN ((rt0.c0, t0.c71, 1738106403)) AND ((rt0.c2, rt0.c3, rt0.c4))))) LEFT OUTER JOIN t0 ON CAST((NULL IN (vt0.c0)) AS TEXT));
SELECT * FROM t0, rt0, vt1 FULL OUTER JOIN vt0 ON (- (((rt0.c4)&(rt0.c4)))) WHERE (((((rt0.c3) BETWEEN (t0.c71) AND (13912790)))>>((((rt0.c5, rt0.c2, rt0.c5))>=((t0.c35, rt0.c3, t0.c35))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (t0.c71) AND (13912790)))>>((((rt0.c5, rt0.c2, rt0.c5))>=((t0.c35, rt0.c3, t0.c35)))))) IS TRUE)  as count FROM t0, rt0, vt1 FULL OUTER JOIN vt0 ON (- (((rt0.c4)&(rt0.c4)))));
SELECT * FROM t0, rt0, vt1 FULL OUTER JOIN vt0 ON (- (((rt0.c4)&(rt0.c4)))) WHERE (((((rt0.c3) BETWEEN (t0.c71) AND (13912790)))>>((((rt0.c5, rt0.c2, rt0.c5))>=((t0.c35, rt0.c3, t0.c35))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (t0.c71) AND (13912790)))>>((((rt0.c5, rt0.c2, rt0.c5))>=((t0.c35, rt0.c3, t0.c35)))))) IS TRUE)  as count FROM t0, rt0, vt1 FULL OUTER JOIN vt0 ON (- (((rt0.c4)&(rt0.c4)))));
SELECT * FROM t0, rt0, vt1 FULL OUTER JOIN vt0 ON (- (((rt0.c4)&(rt0.c4)))) WHERE (((((rt0.c3) BETWEEN (t0.c71) AND (13912790)))>>((((rt0.c5, rt0.c2, rt0.c5))>=((t0.c35, rt0.c3, t0.c35))))));
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c1)IS NOT(0.588962095287086))))<=((((((rt0.c4)AND(rt0.c2)))OR(rt0.c2)))))) ORDER BY 1.984782008E9  NULLS FIRST, ((CAST(rt0.c4 AS INTEGER))AND(((rt0.c2)GLOB(rt0.c5)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)IS NOT(0.588962095287086))))<=((((((rt0.c4)AND(rt0.c2)))OR(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 1.984782008E9  NULLS FIRST, ((CAST(rt0.c4 AS INTEGER))AND(((rt0.c2)GLOB(rt0.c5)))) ASC);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c1)IS NOT(0.588962095287086))))<=((((((rt0.c4)AND(rt0.c2)))OR(rt0.c2)))))) ORDER BY 1.984782008E9  NULLS FIRST, ((CAST(rt0.c4 AS INTEGER))AND(((rt0.c2)GLOB(rt0.c5)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)IS NOT(0.588962095287086))))<=((((((rt0.c4)AND(rt0.c2)))OR(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 1.984782008E9  NULLS FIRST, ((CAST(rt0.c4 AS INTEGER))AND(((rt0.c2)GLOB(rt0.c5)))) ASC);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c1)IS NOT(0.588962095287086))))<=((((((rt0.c4)AND(rt0.c2)))OR(rt0.c2)))))) ORDER BY 1.984782008E9  NULLS FIRST, ((CAST(rt0.c4 AS INTEGER))AND(((rt0.c2)GLOB(rt0.c5)))) ASC;
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST((+ (t0.c35)) AS BLOB) WHERE ((((((((vt0.c0))<=((NULL))))OR(((((t0.c71)OR(vt1.c0)))AND(vt0.c0)))))AND(((t0.c35)LIKE(0.2717081704026677)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0))<=((NULL))))OR(((((t0.c71)OR(vt1.c0)))AND(vt0.c0)))))AND(((t0.c35)LIKE(0.2717081704026677))))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST((+ (t0.c35)) AS BLOB));
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST((+ (t0.c35)) AS BLOB) WHERE ((((((((vt0.c0))<=((NULL))))OR(((((t0.c71)OR(vt1.c0)))AND(vt0.c0)))))AND(((t0.c35)LIKE(0.2717081704026677)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0))<=((NULL))))OR(((((t0.c71)OR(vt1.c0)))AND(vt0.c0)))))AND(((t0.c35)LIKE(0.2717081704026677))))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST((+ (t0.c35)) AS BLOB));
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST((+ (t0.c35)) AS BLOB) WHERE ((((((((vt0.c0))<=((NULL))))OR(((((t0.c71)OR(vt1.c0)))AND(vt0.c0)))))AND(((t0.c35)LIKE(0.2717081704026677)))));
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((+ ('o4c僭?Bf'))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (vt1.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((+ ('o4c僭?Bf'))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (vt1.c0)) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((+ ('o4c僭?Bf'))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (vt1.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((+ ('o4c僭?Bf'))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (vt1.c0)) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((+ ('o4c僭?Bf'))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (vt1.c0)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c0 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c0 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c0 AS REAL)) IS TRUE));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((((((rt0.c1)AND(rt0.c3)))AND(vt0.c0))) NOTNULL) RIGHT OUTER JOIN vt0 ON 0.6535216987626221 FULL OUTER JOIN vt1 ON CAST(rt0.c3 AS REAL) WHERE ((((((t0.c35)/(t0.c35))))>((rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c35)/(t0.c35))))>((rt0.c3)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((((rt0.c1)AND(rt0.c3)))AND(vt0.c0))) NOTNULL) RIGHT OUTER JOIN vt0 ON 0.6535216987626221 FULL OUTER JOIN vt1 ON CAST(rt0.c3 AS REAL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((((((rt0.c1)AND(rt0.c3)))AND(vt0.c0))) NOTNULL) RIGHT OUTER JOIN vt0 ON 0.6535216987626221 FULL OUTER JOIN vt1 ON CAST(rt0.c3 AS REAL) WHERE ((((((t0.c35)/(t0.c35))))>((rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c35)/(t0.c35))))>((rt0.c3)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((((rt0.c1)AND(rt0.c3)))AND(vt0.c0))) NOTNULL) RIGHT OUTER JOIN vt0 ON 0.6535216987626221 FULL OUTER JOIN vt1 ON CAST(rt0.c3 AS REAL));
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN t0.c35 WHEN t0.c35 THEN rt0.c3 WHEN rt0.c1 THEN t0.c35 END THEN ((rt0.c4)<>(rt0.c4)) END) ORDER BY CAST(NULL AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN t0.c35 WHEN t0.c35 THEN rt0.c3 WHEN rt0.c1 THEN t0.c35 END THEN ((rt0.c4)<>(rt0.c4)) END) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(NULL AS NUMERIC) DESC);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN t0.c35 WHEN t0.c35 THEN rt0.c3 WHEN rt0.c1 THEN t0.c35 END THEN ((rt0.c4)<>(rt0.c4)) END) ORDER BY CAST(NULL AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN t0.c35 WHEN t0.c35 THEN rt0.c3 WHEN rt0.c1 THEN t0.c35 END THEN ((rt0.c4)<>(rt0.c4)) END) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(NULL AS NUMERIC) DESC);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN t0.c35 WHEN t0.c35 THEN rt0.c3 WHEN rt0.c1 THEN t0.c35 END THEN ((rt0.c4)<>(rt0.c4)) END) ORDER BY CAST(NULL AS NUMERIC) DESC;
SELECT * FROM t0, rt0 WHERE (((rt0.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT NULL)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((rt0.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT NULL)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((rt0.c2) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))<(rt0.c0 COLLATE RTRIM))) ORDER BY (NOT (x'3ff1b6f9'));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))<(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (x'3ff1b6f9')));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))<(rt0.c0 COLLATE RTRIM))) ORDER BY (NOT (x'3ff1b6f9'));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))<(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (x'3ff1b6f9')));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))<(rt0.c0 COLLATE RTRIM))) ORDER BY (NOT (x'3ff1b6f9'));
SELECT COUNT(*) FROM t0, vt1 WHERE (((((t0.c71) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c71) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((t0.c71) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c71) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((t0.c71) NOT NULL)) IS FALSE));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((((rt0.c5, rt0.c1, rt0.c5))>=((rt0.c3, rt0.c4, rt0.c0))))OR(rt0.c1)))OR(CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c5, rt0.c1, rt0.c5))>=((rt0.c3, rt0.c4, rt0.c0))))OR(rt0.c1)))OR(CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((((rt0.c5, rt0.c1, rt0.c5))>=((rt0.c3, rt0.c4, rt0.c0))))OR(rt0.c1)))OR(CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c5, rt0.c1, rt0.c5))>=((rt0.c3, rt0.c4, rt0.c0))))OR(rt0.c1)))OR(CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((((rt0.c5, rt0.c1, rt0.c5))>=((rt0.c3, rt0.c4, rt0.c0))))OR(rt0.c1)))OR(CAST(rt0.c3 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt1 WHERE (HEX(DISTINCT ((vt1.c0)*(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt1.c0)*(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (HEX(DISTINCT ((vt1.c0)*(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt1.c0)*(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (HEX(DISTINCT ((vt1.c0)*(vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (json_insert(x'', ((vt0.c0)<=(vt0.c0)), ((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(x'', ((vt0.c0)<=(vt0.c0)), ((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_insert(x'', ((vt0.c0)<=(vt0.c0)), ((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(x'', ((vt0.c0)<=(vt0.c0)), ((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE ((((((t0.c71)>(vt1.c0))))<((TRIM(rt0.c2, t0.c35))))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c71)>(vt1.c0))))<((TRIM(rt0.c2, t0.c35))))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4))) IS FALSE) ASC);
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE ((((((t0.c71)>(vt1.c0))))<((TRIM(rt0.c2, t0.c35))))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c71)>(vt1.c0))))<((TRIM(rt0.c2, t0.c35))))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4))) IS FALSE) ASC);
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE ((((((t0.c71)>(vt1.c0))))<((TRIM(rt0.c2, t0.c35))))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4))) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt0 ON ((CAST(t0.c35 AS REAL))<=(((t0.c35)>>(vt1.c0)))) FULL OUTER JOIN vt1 ON (CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END IN ()) WHERE (HEX(CAST(vt0.c0 AS BLOB))) ORDER BY ((json_quote(t0.c71))*(((rt0.c1)||(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN vt0 ON ((CAST(t0.c35 AS REAL))<=(((t0.c35)>>(vt1.c0)))) FULL OUTER JOIN vt1 ON (CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END IN ()) ORDER BY ((json_quote(t0.c71))*(((rt0.c1)||(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt0 ON ((CAST(t0.c35 AS REAL))<=(((t0.c35)>>(vt1.c0)))) FULL OUTER JOIN vt1 ON (CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END IN ()) WHERE (HEX(CAST(vt0.c0 AS BLOB))) ORDER BY ((json_quote(t0.c71))*(((rt0.c1)||(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN vt0 ON ((CAST(t0.c35 AS REAL))<=(((t0.c35)>>(vt1.c0)))) FULL OUTER JOIN vt1 ON (CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END IN ()) ORDER BY ((json_quote(t0.c71))*(((rt0.c1)||(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((rt0.c3)AND(rt0.c2)))AND(rt0.c5)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c3)AND(rt0.c2)))AND(rt0.c5)) AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((rt0.c3)AND(rt0.c2)))AND(rt0.c5)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c3)AND(rt0.c2)))AND(rt0.c5)) AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((rt0.c3)AND(rt0.c2)))AND(rt0.c5)) AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (t0.c35 IN (x''))  WHEN ((t0.c35) NOT BETWEEN (t0.c71) AND (t0.c35)) THEN CASE t0.c71  WHEN t0.c35 THEN t0.c35 WHEN t0.c71 THEN t0.c71 WHEN t0.c71 THEN t0.c71 END WHEN CAST('1075178867' AS NUMERIC) THEN (t0.c35 IN ()) WHEN t0.c71 COLLATE NOCASE THEN ((t0.c71)&(t0.c71)) END) ORDER BY CASE ((t0.c71) NOT NULL)  WHEN ((t0.c71) NOT NULL) THEN ((t0.c71)IS NOT(t0.c35)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c35 IN (x''))  WHEN ((t0.c35) NOT BETWEEN (t0.c71) AND (t0.c35)) THEN CASE t0.c71  WHEN t0.c35 THEN t0.c35 WHEN t0.c71 THEN t0.c71 WHEN t0.c71 THEN t0.c71 END WHEN CAST('1075178867' AS NUMERIC) THEN (t0.c35 IN ()) WHEN t0.c71 COLLATE NOCASE THEN ((t0.c71)&(t0.c71)) END) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c71) NOT NULL)  WHEN ((t0.c71) NOT NULL) THEN ((t0.c71)IS NOT(t0.c35)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (t0.c35 IN (x''))  WHEN ((t0.c35) NOT BETWEEN (t0.c71) AND (t0.c35)) THEN CASE t0.c71  WHEN t0.c35 THEN t0.c35 WHEN t0.c71 THEN t0.c71 WHEN t0.c71 THEN t0.c71 END WHEN CAST('1075178867' AS NUMERIC) THEN (t0.c35 IN ()) WHEN t0.c71 COLLATE NOCASE THEN ((t0.c71)&(t0.c71)) END) ORDER BY CASE ((t0.c71) NOT NULL)  WHEN ((t0.c71) NOT NULL) THEN ((t0.c71)IS NOT(t0.c35)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c35 IN (x''))  WHEN ((t0.c35) NOT BETWEEN (t0.c71) AND (t0.c35)) THEN CASE t0.c71  WHEN t0.c35 THEN t0.c35 WHEN t0.c71 THEN t0.c71 WHEN t0.c71 THEN t0.c71 END WHEN CAST('1075178867' AS NUMERIC) THEN (t0.c35 IN ()) WHEN t0.c71 COLLATE NOCASE THEN ((t0.c71)&(t0.c71)) END) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c71) NOT NULL)  WHEN ((t0.c71) NOT NULL) THEN ((t0.c71)IS NOT(t0.c35)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (t0.c35 IN (x''))  WHEN ((t0.c35) NOT BETWEEN (t0.c71) AND (t0.c35)) THEN CASE t0.c71  WHEN t0.c35 THEN t0.c35 WHEN t0.c71 THEN t0.c71 WHEN t0.c71 THEN t0.c71 END WHEN CAST('1075178867' AS NUMERIC) THEN (t0.c35 IN ()) WHEN t0.c71 COLLATE NOCASE THEN ((t0.c71)&(t0.c71)) END) ORDER BY CASE ((t0.c71) NOT NULL)  WHEN ((t0.c71) NOT NULL) THEN ((t0.c71)IS NOT(t0.c35)) END  NULLS FIRST;
SELECT * FROM vt0, t0, rt0, vt1 WHERE (((0.8302068534882445)&(t0.c35 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((0.8302068534882445)&(t0.c35 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT * FROM vt0, t0, rt0, vt1 WHERE (((0.8302068534882445)&(t0.c35 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((0.8302068534882445)&(t0.c35 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT * FROM vt0, t0, rt0, vt1 WHERE (((0.8302068534882445)&(t0.c35 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1 WHERE (DATE(CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS BLOB), '', INSTR(vt1.c0, vt1.c0), (vt1.c0 IN ()))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (CASE vt1.c0  WHEN 0x7d0da20c THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((NOT (x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATE(CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS BLOB), '', INSTR(vt1.c0, vt1.c0), (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (CASE vt1.c0  WHEN 0x7d0da20c THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((NOT (x''))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (DATE(CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS BLOB), '', INSTR(vt1.c0, vt1.c0), (vt1.c0 IN ()))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (CASE vt1.c0  WHEN 0x7d0da20c THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((NOT (x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATE(CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS BLOB), '', INSTR(vt1.c0, vt1.c0), (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (CASE vt1.c0  WHEN 0x7d0da20c THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((NOT (x''))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (DATE(CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS BLOB), '', INSTR(vt1.c0, vt1.c0), (vt1.c0 IN ()))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (CASE vt1.c0  WHEN 0x7d0da20c THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((NOT (x''))))  NULLS FIRST;
SELECT * FROM t0, vt0, rt0 WHERE (CASE WHEN ((t0.c35)>(rt0.c5)) THEN ((rt0.c4)GLOB(vt0.c0)) END) ORDER BY ((((NULL)OR((NOT (rt0.c2)))))AND(((NULL) NOT BETWEEN (t0.c71) AND (rt0.c5)))) ASC, (- (rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c35)>(rt0.c5)) THEN ((rt0.c4)GLOB(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((NULL)OR((NOT (rt0.c2)))))AND(((NULL) NOT BETWEEN (t0.c71) AND (rt0.c5)))) ASC, (- (rt0.c1 COLLATE NOCASE)));
SELECT * FROM t0, vt0, rt0 WHERE (CASE WHEN ((t0.c35)>(rt0.c5)) THEN ((rt0.c4)GLOB(vt0.c0)) END) ORDER BY ((((NULL)OR((NOT (rt0.c2)))))AND(((NULL) NOT BETWEEN (t0.c71) AND (rt0.c5)))) ASC, (- (rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c35)>(rt0.c5)) THEN ((rt0.c4)GLOB(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((NULL)OR((NOT (rt0.c2)))))AND(((NULL) NOT BETWEEN (t0.c71) AND (rt0.c5)))) ASC, (- (rt0.c1 COLLATE NOCASE)));
SELECT * FROM t0, vt0, rt0 WHERE (CASE WHEN ((t0.c35)>(rt0.c5)) THEN ((rt0.c4)GLOB(vt0.c0)) END) ORDER BY ((((NULL)OR((NOT (rt0.c2)))))AND(((NULL) NOT BETWEEN (t0.c71) AND (rt0.c5)))) ASC, (- (rt0.c1 COLLATE NOCASE));
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE (CASE WHEN rt0.c5 THEN rt0.c4 ELSE x'' END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c5 THEN rt0.c4 ELSE x'' END COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE (CASE WHEN rt0.c5 THEN rt0.c4 ELSE x'' END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c5 THEN rt0.c4 ELSE x'' END COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE (CASE WHEN rt0.c5 THEN rt0.c4 ELSE x'' END COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((-1714621992)>(vt1.c0)) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((-1714621992)>(vt1.c0)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((-1714621992)>(vt1.c0)) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((-1714621992)>(vt1.c0)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((-1714621992)>(vt1.c0)) THEN (vt0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((((x'') BETWEEN (NULL) AND (rt0.c1))) NOT BETWEEN (0x406b4ba9) AND (NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (NULL) AND (rt0.c1))) NOT BETWEEN (0x406b4ba9) AND (NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((((x'') BETWEEN (NULL) AND (rt0.c1))) NOT BETWEEN (0x406b4ba9) AND (NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (NULL) AND (rt0.c1))) NOT BETWEEN (0x406b4ba9) AND (NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((((x'') BETWEEN (NULL) AND (rt0.c1))) NOT BETWEEN (0x406b4ba9) AND (NULL COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((CASE t0.c71  WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c5 THEN 0.47427271171878616 ELSE rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE t0.c71  WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c5 THEN 0.47427271171878616 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((CASE t0.c71  WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c5 THEN 0.47427271171878616 ELSE rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE t0.c71  WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c5 THEN 0.47427271171878616 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((CASE t0.c71  WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c5 THEN 0.47427271171878616 ELSE rt0.c0 END IN ()));
SELECT * FROM t0 WHERE ((((t0.c71 IN ()))/(((t0.c71) BETWEEN (t0.c35) AND (t0.c35)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c71 IN ()))/(((t0.c71) BETWEEN (t0.c35) AND (t0.c35))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c71 IN ()))/(((t0.c71) BETWEEN (t0.c35) AND (t0.c35)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c71 IN ()))/(((t0.c71) BETWEEN (t0.c35) AND (t0.c35))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c71 IN ()))/(((t0.c71) BETWEEN (t0.c35) AND (t0.c35)))));
SELECT * FROM t0, rt0 WHERE (CASE rt0.c3  WHEN t0.c71 THEN t0.c71 ELSE rt0.c4 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN t0.c71 THEN t0.c71 ELSE rt0.c4 END COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CASE rt0.c3  WHEN t0.c71 THEN t0.c71 ELSE rt0.c4 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN t0.c71 THEN t0.c71 ELSE rt0.c4 END COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CASE rt0.c3  WHEN t0.c71 THEN t0.c71 ELSE rt0.c4 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((rt0.c3, '', '909795715')) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)), x'', (rt0.c1 IN ()))) AND ((COALESCE(DISTINCT 0X25c04fde, rt0.c2), ((vt0.c0) NOT NULL), ((((rt0.c3)AND(rt0.c0)))OR(rt0.c0))))) CROSS JOIN rt0 ON (((rt0.c3, vt1.c0, rt0.c4)) BETWEEN (((rt0.c1 IN ()), ((((rt0.c2)OR(vt1.c0)))AND(rt0.c3)), 1858590473)) AND (((+ (rt0.c5)), 0.9674677847800173, (((rt0.c1))==((rt0.c4)))))) WHERE ((((((((('-891376826')OR(vt0.c0)))AND(((rt0.c5)<(rt0.c3)))))AND('1252093898')))AND(((rt0.c4)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((('-891376826')OR(vt0.c0)))AND(((rt0.c5)<(rt0.c3)))))AND('1252093898')))AND(((rt0.c4)IS(rt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((rt0.c3, '', '909795715')) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)), x'', (rt0.c1 IN ()))) AND ((COALESCE(DISTINCT 0X25c04fde, rt0.c2), ((vt0.c0) NOT NULL), ((((rt0.c3)AND(rt0.c0)))OR(rt0.c0))))) CROSS JOIN rt0 ON (((rt0.c3, vt1.c0, rt0.c4)) BETWEEN (((rt0.c1 IN ()), ((((rt0.c2)OR(vt1.c0)))AND(rt0.c3)), 1858590473)) AND (((+ (rt0.c5)), 0.9674677847800173, (((rt0.c1))=((rt0.c4)))))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((rt0.c3, '', '909795715')) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)), x'', (rt0.c1 IN ()))) AND ((COALESCE(DISTINCT 0X25c04fde, rt0.c2), ((vt0.c0) NOT NULL), ((((rt0.c3)AND(rt0.c0)))OR(rt0.c0))))) CROSS JOIN rt0 ON (((rt0.c3, vt1.c0, rt0.c4)) BETWEEN (((rt0.c1 IN ()), ((((rt0.c2)OR(vt1.c0)))AND(rt0.c3)), 1858590473)) AND (((+ (rt0.c5)), 0.9674677847800173, (((rt0.c1))==((rt0.c4)))))) WHERE ((((((((('-891376826')OR(vt0.c0)))AND(((rt0.c5)<(rt0.c3)))))AND('1252093898')))AND(((rt0.c4)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((('-891376826')OR(vt0.c0)))AND(((rt0.c5)<(rt0.c3)))))AND('1252093898')))AND(((rt0.c4)IS(rt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((rt0.c3, '', '909795715')) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)), x'', (rt0.c1 IN ()))) AND ((COALESCE(DISTINCT 0X25c04fde, rt0.c2), ((vt0.c0) NOT NULL), ((((rt0.c3)AND(rt0.c0)))OR(rt0.c0))))) CROSS JOIN rt0 ON (((rt0.c3, vt1.c0, rt0.c4)) BETWEEN (((rt0.c1 IN ()), ((((rt0.c2)OR(vt1.c0)))AND(rt0.c3)), 1858590473)) AND (((+ (rt0.c5)), 0.9674677847800173, (((rt0.c1))=((rt0.c4)))))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c5) BETWEEN (vt1.c0) AND (rt0.c0))) AND (((rt0.c2)*(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (((rt0.c5) BETWEEN (vt1.c0) AND (rt0.c0))) AND (((rt0.c2)*(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c5) BETWEEN (vt1.c0) AND (rt0.c0))) AND (((rt0.c2)*(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (((rt0.c5) BETWEEN (vt1.c0) AND (rt0.c0))) AND (((rt0.c2)*(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c5) BETWEEN (vt1.c0) AND (rt0.c0))) AND (((rt0.c2)*(rt0.c1)))));
SELECT * FROM vt0 WHERE ((NOT (CASE WHEN x'a484' THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN x'a484' THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE DESC);
SELECT * FROM vt0 WHERE ((NOT (CASE WHEN x'a484' THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN x'a484' THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE DESC);
SELECT * FROM vt0 WHERE ((NOT (CASE WHEN x'a484' THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE DESC;
SELECT ALL * FROM vt0, rt0 WHERE (LIKELY(rt0.c1)) ORDER BY CAST(((((((((rt0.c1)AND(rt0.c4)))OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c4)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c1)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((((((((rt0.c1)AND(rt0.c4)))OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c4)) AS BLOB) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (LIKELY(rt0.c1)) ORDER BY CAST(((((((((rt0.c1)AND(rt0.c4)))OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c4)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c1)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((((((((rt0.c1)AND(rt0.c4)))OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c4)) AS BLOB) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (LIKELY(rt0.c1)) ORDER BY CAST(((((((((rt0.c1)AND(rt0.c4)))OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c4)) AS BLOB) DESC;
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE)) BETWEEN ((~ (vt1.c0))) AND (vt1.c0))) ORDER BY (((((((((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))OR(((((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(1.509963701E9)))OR(((vt1.c0) ISNULL))))OR(CAST(x'' AS NUMERIC))))AND(((vt1.c0) NOTNULL))))OR(((vt0.c0) IS TRUE))))OR((vt1.c0 IN ()))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '1123376558' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN ((~ (vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))OR(((((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(1.509963701E9)))OR(((vt1.c0) ISNULL))))OR(CAST(x'' AS NUMERIC))))AND(((vt1.c0) NOTNULL))))OR(((vt0.c0) IS TRUE))))OR((vt1.c0 IN ()))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '1123376558' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE)) BETWEEN ((~ (vt1.c0))) AND (vt1.c0))) ORDER BY (((((((((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))OR(((((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(1.509963701E9)))OR(((vt1.c0) ISNULL))))OR(CAST(x'' AS NUMERIC))))AND(((vt1.c0) NOTNULL))))OR(((vt0.c0) IS TRUE))))OR((vt1.c0 IN ()))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '1123376558' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN ((~ (vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))OR(((((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(1.509963701E9)))OR(((vt1.c0) ISNULL))))OR(CAST(x'' AS NUMERIC))))AND(((vt1.c0) NOTNULL))))OR(((vt0.c0) IS TRUE))))OR((vt1.c0 IN ()))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '1123376558' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE)) BETWEEN ((~ (vt1.c0))) AND (vt1.c0))) ORDER BY (((((((((((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))OR(((((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(1.509963701E9)))OR(((vt1.c0) ISNULL))))OR(CAST(x'' AS NUMERIC))))AND(((vt1.c0) NOTNULL))))OR(((vt0.c0) IS TRUE))))OR((vt1.c0 IN ()))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '1123376558' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(LOWER('鴮rt{98') AS NUMERIC)) ORDER BY ((CASE WHEN rt0.c5 THEN '-1093464915' WHEN 0.540576037868676 THEN rt0.c3 WHEN rt0.c5 THEN NULL ELSE rt0.c1 END) BETWEEN (((((rt0.c1)OR(rt0.c4)))AND('-2044847399'))) AND ((NOT (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER('鴮rt{98') AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c5 THEN '-1093464915' WHEN 0.540576037868676 THEN rt0.c3 WHEN rt0.c5 THEN NULL ELSE rt0.c1 END) BETWEEN (((((rt0.c1)OR(rt0.c4)))AND('-2044847399'))) AND ((NOT (rt0.c1))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(LOWER('鴮rt{98') AS NUMERIC)) ORDER BY ((CASE WHEN rt0.c5 THEN '-1093464915' WHEN 0.540576037868676 THEN rt0.c3 WHEN rt0.c5 THEN NULL ELSE rt0.c1 END) BETWEEN (((((rt0.c1)OR(rt0.c4)))AND('-2044847399'))) AND ((NOT (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER('鴮rt{98') AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c5 THEN '-1093464915' WHEN 0.540576037868676 THEN rt0.c3 WHEN rt0.c5 THEN NULL ELSE rt0.c1 END) BETWEEN (((((rt0.c1)OR(rt0.c4)))AND('-2044847399'))) AND ((NOT (rt0.c1))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(LOWER('鴮rt{98') AS NUMERIC)) ORDER BY ((CASE WHEN rt0.c5 THEN '-1093464915' WHEN 0.540576037868676 THEN rt0.c3 WHEN rt0.c5 THEN NULL ELSE rt0.c1 END) BETWEEN (((((rt0.c1)OR(rt0.c4)))AND('-2044847399'))) AND ((NOT (rt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0 COLLATE BINARY) ORDER BY CASE WHEN vt0.c0 THEN NULL WHEN ((vt0.c0)<(vt0.c0)) THEN (- (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) THEN (+ (vt1.c0)) END  NULLS FIRST, vt1.c0;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt0.c0 THEN NULL WHEN ((vt0.c0)<(vt0.c0)) THEN (- (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) THEN (+ (vt1.c0)) END  NULLS FIRST, vt1.c0);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0 COLLATE BINARY) ORDER BY CASE WHEN vt0.c0 THEN NULL WHEN ((vt0.c0)<(vt0.c0)) THEN (- (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) THEN (+ (vt1.c0)) END  NULLS FIRST, vt1.c0;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt0.c0 THEN NULL WHEN ((vt0.c0)<(vt0.c0)) THEN (- (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) THEN (+ (vt1.c0)) END  NULLS FIRST, vt1.c0);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0 COLLATE BINARY) ORDER BY CASE WHEN vt0.c0 THEN NULL WHEN ((vt0.c0)<(vt0.c0)) THEN (- (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) THEN (+ (vt1.c0)) END  NULLS FIRST, vt1.c0;
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0))==((vt1.c0))) IN ())  NULLS FIRST, (((vt1.c0 IN ()))/(((vt1.c0)<(vt1.c0)))), (((vt1.c0)OR(vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0))=((vt1.c0))) IN ())  NULLS FIRST, (((vt1.c0 IN ()))/(((vt1.c0)<(vt1.c0)))), (((vt1.c0)OR(vt1.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0))==((vt1.c0))) IN ())  NULLS FIRST, (((vt1.c0 IN ()))/(((vt1.c0)<(vt1.c0)))), (((vt1.c0)OR(vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0))=((vt1.c0))) IN ())  NULLS FIRST, (((vt1.c0 IN ()))/(((vt1.c0)<(vt1.c0)))), (((vt1.c0)OR(vt1.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0))==((vt1.c0))) IN ())  NULLS FIRST, (((vt1.c0 IN ()))/(((vt1.c0)<(vt1.c0)))), (((vt1.c0)OR(vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON (+ (CASE t0.c35  WHEN t0.c35 THEN t0.c35 ELSE t0.c71 END)) WHERE ('' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('' COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (+ (CASE t0.c35  WHEN t0.c35 THEN t0.c35 ELSE t0.c71 END)));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON (+ (CASE t0.c35  WHEN t0.c35 THEN t0.c35 ELSE t0.c71 END)) WHERE ('' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('' COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (+ (CASE t0.c35  WHEN t0.c35 THEN t0.c35 ELSE t0.c71 END)));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON (+ (CASE t0.c35  WHEN t0.c35 THEN t0.c35 ELSE t0.c71 END)) WHERE ('' COLLATE RTRIM);
SELECT * FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((((((rt0.c3)AND('0.08327663998693713')))OR(rt0.c5)))AND(((rt0.c2)==(rt0.c5)))))AND(vt0.c0 COLLATE RTRIM)) WHERE ((((((vt0.c0))<((rt0.c0))))&((rt0.c3 IN ())))) ORDER BY (((rt0.c0)) BETWEEN ((0.9100251075499133)) AND ((((vt1.c0)|(rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((rt0.c0))))&((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((((((rt0.c3)AND('0.08327663998693713')))OR(rt0.c5)))AND(((rt0.c2)=(rt0.c5)))))AND(vt0.c0 COLLATE RTRIM)) ORDER BY (((rt0.c0)) BETWEEN ((0.9100251075499133)) AND ((((vt1.c0)|(rt0.c1))))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((((((rt0.c3)AND('0.08327663998693713')))OR(rt0.c5)))AND(((rt0.c2)==(rt0.c5)))))AND(vt0.c0 COLLATE RTRIM)) WHERE ((((((vt0.c0))<((rt0.c0))))&((rt0.c3 IN ())))) ORDER BY (((rt0.c0)) BETWEEN ((0.9100251075499133)) AND ((((vt1.c0)|(rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((rt0.c0))))&((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((((((rt0.c3)AND('0.08327663998693713')))OR(rt0.c5)))AND(((rt0.c2)=(rt0.c5)))))AND(vt0.c0 COLLATE RTRIM)) ORDER BY (((rt0.c0)) BETWEEN ((0.9100251075499133)) AND ((((vt1.c0)|(rt0.c1))))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((((((rt0.c3)AND('0.08327663998693713')))OR(rt0.c5)))AND(((rt0.c2)==(rt0.c5)))))AND(vt0.c0 COLLATE RTRIM)) WHERE ((((((vt0.c0))<((rt0.c0))))&((rt0.c3 IN ())))) ORDER BY (((rt0.c0)) BETWEEN ((0.9100251075499133)) AND ((((vt1.c0)|(rt0.c1))))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 NOT INDEXED, vt0 NOT INDEXED, rt0 WHERE (0.6716086182112883) ORDER BY ((((- (vt0.c0))))==((((0.7541120155994666) IS TRUE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.6716086182112883) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((- (vt0.c0))))==((((0.7541120155994666) IS TRUE))))  NULLS LAST);
SELECT ALL * FROM vt1 NOT INDEXED, vt0 NOT INDEXED, rt0 WHERE (0.6716086182112883) ORDER BY ((((- (vt0.c0))))==((((0.7541120155994666) IS TRUE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.6716086182112883) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((- (vt0.c0))))==((((0.7541120155994666) IS TRUE))))  NULLS LAST);
SELECT ALL * FROM vt1 NOT INDEXED, vt0 NOT INDEXED, rt0 WHERE (0.6716086182112883) ORDER BY ((((- (vt0.c0))))==((((0.7541120155994666) IS TRUE))))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((((CAST(vt0.c0 AS REAL), ((vt1.c0)|(vt0.c0)), (- (vt0.c0))))<((vt0.c0, ((vt1.c0) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS REAL), ((vt1.c0)|(vt0.c0)), (- (vt0.c0))))<((vt0.c0, ((vt1.c0) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (NULL))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((((CAST(vt0.c0 AS REAL), ((vt1.c0)|(vt0.c0)), (- (vt0.c0))))<((vt0.c0, ((vt1.c0) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS REAL), ((vt1.c0)|(vt0.c0)), (- (vt0.c0))))<((vt0.c0, ((vt1.c0) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (NULL))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((((CAST(vt0.c0 AS REAL), ((vt1.c0)|(vt0.c0)), (- (vt0.c0))))<((vt0.c0, ((vt1.c0) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (NULL))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c71)OR(t0.c71)))AND(t0.c35)) COLLATE RTRIM) ORDER BY (NOT (LIKELIHOOD(t0.c71, 0.15820403311947584))), t0.c71 DESC, (((((('-1586922963')OR(t0.c71)))AND(t0.c71))) BETWEEN (LOWER(t0.c35)) AND (CASE t0.c35  WHEN t0.c71 THEN 0.4831343829523669 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c71)OR(t0.c71)))AND(t0.c35)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (NOT (LIKELIHOOD(t0.c71, 0.15820403311947584))), t0.c71 DESC, (((((('-1586922963')OR(t0.c71)))AND(t0.c71))) BETWEEN (LOWER(t0.c35)) AND (CASE t0.c35  WHEN t0.c71 THEN 0.4831343829523669 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c71)OR(t0.c71)))AND(t0.c35)) COLLATE RTRIM) ORDER BY (NOT (LIKELIHOOD(t0.c71, 0.15820403311947584))), t0.c71 DESC, (((((('-1586922963')OR(t0.c71)))AND(t0.c71))) BETWEEN (LOWER(t0.c35)) AND (CASE t0.c35  WHEN t0.c71 THEN 0.4831343829523669 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c71)OR(t0.c71)))AND(t0.c35)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (NOT (LIKELIHOOD(t0.c71, 0.15820403311947584))), t0.c71 DESC, (((((('-1586922963')OR(t0.c71)))AND(t0.c71))) BETWEEN (LOWER(t0.c35)) AND (CASE t0.c35  WHEN t0.c71 THEN 0.4831343829523669 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c71)OR(t0.c71)))AND(t0.c35)) COLLATE RTRIM) ORDER BY (NOT (LIKELIHOOD(t0.c71, 0.15820403311947584))), t0.c71 DESC, (((((('-1586922963')OR(t0.c71)))AND(t0.c71))) BETWEEN (LOWER(t0.c35)) AND (CASE t0.c35  WHEN t0.c71 THEN 0.4831343829523669 END)) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM) ORDER BY ' _''塔m5yzE' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ' _''塔m5yzE' ASC);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM) ORDER BY ' _''塔m5yzE' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ' _''塔m5yzE' ASC);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM) ORDER BY ' _''塔m5yzE' ASC;
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE (((TYPEOF(rt0.c4))>(TOTAL_CHANGES()))) ORDER BY ((('1303093176')) BETWEEN ((((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))) AND ((((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c4))>(TOTAL_CHANGES()))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY ((('1303093176')) BETWEEN ((((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))) AND ((((vt1.c0) IS TRUE)))));
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE (((TYPEOF(rt0.c4))>(TOTAL_CHANGES()))) ORDER BY ((('1303093176')) BETWEEN ((((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))) AND ((((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c4))>(TOTAL_CHANGES()))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY ((('1303093176')) BETWEEN ((((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))) AND ((((vt1.c0) IS TRUE)))));
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE (((TYPEOF(rt0.c4))>(TOTAL_CHANGES()))) ORDER BY ((('1303093176')) BETWEEN ((((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))) AND ((((vt1.c0) IS TRUE))));
SELECT ALL * FROM t0 WHERE (CASE CAST(t0.c71 AS BLOB)  WHEN (~ (t0.c71)) THEN ((t0.c71)GLOB(t0.c35)) END) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c71 AS BLOB)  WHEN (~ (t0.c71)) THEN ((t0.c71)GLOB(t0.c35)) END) IS TRUE)  as count FROM t0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE CAST(t0.c71 AS BLOB)  WHEN (~ (t0.c71)) THEN ((t0.c71)GLOB(t0.c35)) END) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c71 AS BLOB)  WHEN (~ (t0.c71)) THEN ((t0.c71)GLOB(t0.c35)) END) IS TRUE)  as count FROM t0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE CAST(t0.c71 AS BLOB)  WHEN (~ (t0.c71)) THEN ((t0.c71)GLOB(t0.c35)) END) ORDER BY NULL ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((((vt0.c0)GLOB(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((((vt0.c0)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((((vt0.c0)GLOB(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((((vt0.c0)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((((vt0.c0)GLOB(vt0.c0))))));
SELECT * FROM t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c71 THEN t0.c35 ELSE rt0.c1 END)==((((('189010502')AND(rt0.c0)))OR(vt0.c0)))) WHERE (((((rt0.c5)IS NOT(t0.c71)))IS(((rt0.c2)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)IS NOT(t0.c71)))IS(((rt0.c2)&(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c71 THEN t0.c35 ELSE rt0.c1 END)==((((('189010502')AND(rt0.c0)))OR(vt0.c0)))));
SELECT * FROM t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c71 THEN t0.c35 ELSE rt0.c1 END)==((((('189010502')AND(rt0.c0)))OR(vt0.c0)))) WHERE (((((rt0.c5)IS NOT(t0.c71)))IS(((rt0.c2)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)IS NOT(t0.c71)))IS(((rt0.c2)&(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c71 THEN t0.c35 ELSE rt0.c1 END)==((((('189010502')AND(rt0.c0)))OR(vt0.c0)))));
SELECT * FROM t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c71 THEN t0.c35 ELSE rt0.c1 END)==((((('189010502')AND(rt0.c0)))OR(vt0.c0)))) WHERE (((((rt0.c5)IS NOT(t0.c71)))IS(((rt0.c2)&(rt0.c1)))));
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE ((NULL IN (((t0.c71) ISNULL)))) ORDER BY (113673568 IN ());
SELECT SUM(count) FROM (SELECT (((NULL IN (((t0.c71) ISNULL)))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY (113673568 IN ()));
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE ((NULL IN (((t0.c71) ISNULL)))) ORDER BY (113673568 IN ());
SELECT SUM(count) FROM (SELECT (((NULL IN (((t0.c71) ISNULL)))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY (113673568 IN ()));
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE ((NULL IN (((t0.c71) ISNULL)))) ORDER BY (113673568 IN ());
SELECT ALL * FROM rt0, vt1, t0, vt0 NOT INDEXED WHERE (CASE WHEN t0.c71 THEN ((t0.c71) NOT BETWEEN (rt0.c2) AND ('1131747027')) ELSE (rt0.c0 IN ()) END) ORDER BY ((rt0.c5) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c71 THEN ((t0.c71) NOT BETWEEN (rt0.c2) AND ('1131747027')) ELSE (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY ((rt0.c5) NOT NULL) ASC);
SELECT ALL * FROM rt0, vt1, t0, vt0 NOT INDEXED WHERE (CASE WHEN t0.c71 THEN ((t0.c71) NOT BETWEEN (rt0.c2) AND ('1131747027')) ELSE (rt0.c0 IN ()) END) ORDER BY ((rt0.c5) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c71 THEN ((t0.c71) NOT BETWEEN (rt0.c2) AND ('1131747027')) ELSE (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY ((rt0.c5) NOT NULL) ASC);
SELECT ALL * FROM rt0, vt1, t0, vt0 NOT INDEXED WHERE (CASE WHEN t0.c71 THEN ((t0.c71) NOT BETWEEN (rt0.c2) AND ('1131747027')) ELSE (rt0.c0 IN ()) END) ORDER BY ((rt0.c5) NOT NULL) ASC;
SELECT * FROM rt0 WHERE (((rt0.c4) NOT BETWEEN ('1509963701') AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) NOT BETWEEN ('1509963701') AND (NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c4) NOT BETWEEN ('1509963701') AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) NOT BETWEEN ('1509963701') AND (NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c4) NOT BETWEEN ('1509963701') AND (NULL)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((json_array_length(rt0.c5)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((json_array_length(rt0.c5))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((json_array_length(rt0.c5)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((json_array_length(rt0.c5))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((json_array_length(rt0.c5)))));
SELECT COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (((((((rt0.c2)>('1134992940')))AND('-1068648253')))AND(rt0.c0))) ORDER BY (((((rt0.c4, rt0.c4, rt0.c2))==((rt0.c3, '-775771149', t0.c71))))GLOB((t0.c71 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)>('1134992940')))AND('-1068648253')))AND(rt0.c0))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY (((((rt0.c4, rt0.c4, rt0.c2))==((rt0.c3, '-775771149', t0.c71))))GLOB((t0.c71 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (((((((rt0.c2)>('1134992940')))AND('-1068648253')))AND(rt0.c0))) ORDER BY (((((rt0.c4, rt0.c4, rt0.c2))==((rt0.c3, '-775771149', t0.c71))))GLOB((t0.c71 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)>('1134992940')))AND('-1068648253')))AND(rt0.c0))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY (((((rt0.c4, rt0.c4, rt0.c2))==((rt0.c3, '-775771149', t0.c71))))GLOB((t0.c71 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (((((((rt0.c2)>('1134992940')))AND('-1068648253')))AND(rt0.c0))) ORDER BY (((((rt0.c4, rt0.c4, rt0.c2))==((rt0.c3, '-775771149', t0.c71))))GLOB((t0.c71 IN ()))) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (x'020a'))) ORDER BY ((CAST(t0.c71 AS BLOB)) BETWEEN (CAST(vt1.c0 AS REAL)) AND ((NOT (t0.c71)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC)) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (x'020a'))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CAST(t0.c71 AS BLOB)) BETWEEN (CAST(vt1.c0 AS REAL)) AND ((NOT (t0.c71)))) ASC);
SELECT ALL * FROM t0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (x'020a'))) ORDER BY ((CAST(t0.c71 AS BLOB)) BETWEEN (CAST(vt1.c0 AS REAL)) AND ((NOT (t0.c71)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC)) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (x'020a'))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CAST(t0.c71 AS BLOB)) BETWEEN (CAST(vt1.c0 AS REAL)) AND ((NOT (t0.c71)))) ASC);
SELECT ALL * FROM t0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (x'020a'))) ORDER BY ((CAST(t0.c71 AS BLOB)) BETWEEN (CAST(vt1.c0 AS REAL)) AND ((NOT (t0.c71)))) ASC;
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE ((((((rt0.c2, rt0.c5, NULL))<>((vt0.c0, rt0.c3, NULL)))) NOT BETWEEN ((vt1.c0 IN ())) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c5, NULL))<>((vt0.c0, rt0.c3, NULL)))) NOT BETWEEN ((vt1.c0 IN ())) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE ((((((rt0.c2, rt0.c5, NULL))<>((vt0.c0, rt0.c3, NULL)))) NOT BETWEEN ((vt1.c0 IN ())) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c5, NULL))<>((vt0.c0, rt0.c3, NULL)))) NOT BETWEEN ((vt1.c0 IN ())) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE ((((((rt0.c2, rt0.c5, NULL))<>((vt0.c0, rt0.c3, NULL)))) NOT BETWEEN ((vt1.c0 IN ())) AND (vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE ('');
SELECT * FROM rt0, vt1, vt0 WHERE (rt0.c2) ORDER BY CASE CAST(rt0.c1 AS NUMERIC)  WHEN CAST(vt0.c0 AS INTEGER) THEN ((rt0.c2)||(rt0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE CAST(rt0.c1 AS NUMERIC)  WHEN CAST(vt0.c0 AS INTEGER) THEN ((rt0.c2)||(rt0.c2)) END DESC  NULLS LAST);
SELECT * FROM rt0, vt1, vt0 WHERE (rt0.c2) ORDER BY CASE CAST(rt0.c1 AS NUMERIC)  WHEN CAST(vt0.c0 AS INTEGER) THEN ((rt0.c2)||(rt0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE CAST(rt0.c1 AS NUMERIC)  WHEN CAST(vt0.c0 AS INTEGER) THEN ((rt0.c2)||(rt0.c2)) END DESC  NULLS LAST);
SELECT * FROM rt0, vt1, vt0 WHERE (rt0.c2) ORDER BY CASE CAST(rt0.c1 AS NUMERIC)  WHEN CAST(vt0.c0 AS INTEGER) THEN ((rt0.c2)||(rt0.c2)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 NOT INDEXED, vt0 WHERE (0.8399894896981616);
SELECT SUM(count) FROM (SELECT ALL ((0.8399894896981616) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0 NOT INDEXED, vt0 WHERE (0.8399894896981616);
SELECT SUM(count) FROM (SELECT ALL ((0.8399894896981616) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0 NOT INDEXED, vt0 WHERE (0.8399894896981616);
SELECT * FROM t0, vt1, rt0 WHERE ((NOT (((t0.c35) NOT BETWEEN (t0.c35) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c35) NOT BETWEEN (t0.c35) AND (rt0.c3))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE ((NOT (((t0.c35) NOT BETWEEN (t0.c35) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c35) NOT BETWEEN (t0.c35) AND (rt0.c3))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE ((NOT (((t0.c35) NOT BETWEEN (t0.c35) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY HEX(DISTINCT vt0.c0), ((((t0.c71) NOT NULL)) BETWEEN (((((((((t0.c35)AND(t0.c35)))OR(t0.c71)))OR(t0.c35)))AND(t0.c71))) AND (((t0.c71) BETWEEN (vt0.c0) AND (vt0.c0)))), (((t0.c71)<=(t0.c35)) IN ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY HEX(DISTINCT vt0.c0), ((((t0.c71) NOT NULL)) BETWEEN (((((((((t0.c35)AND(t0.c35)))OR(t0.c71)))OR(t0.c35)))AND(t0.c71))) AND (((t0.c71) BETWEEN (vt0.c0) AND (vt0.c0)))), (((t0.c71)<=(t0.c35)) IN ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY HEX(DISTINCT vt0.c0), ((((t0.c71) NOT NULL)) BETWEEN (((((((((t0.c35)AND(t0.c35)))OR(t0.c71)))OR(t0.c35)))AND(t0.c71))) AND (((t0.c71) BETWEEN (vt0.c0) AND (vt0.c0)))), (((t0.c71)<=(t0.c35)) IN ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY HEX(DISTINCT vt0.c0), ((((t0.c71) NOT NULL)) BETWEEN (((((((((t0.c35)AND(t0.c35)))OR(t0.c71)))OR(t0.c35)))AND(t0.c71))) AND (((t0.c71) BETWEEN (vt0.c0) AND (vt0.c0)))), (((t0.c71)<=(t0.c35)) IN ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY HEX(DISTINCT vt0.c0), ((((t0.c71) NOT NULL)) BETWEEN (((((((((t0.c35)AND(t0.c35)))OR(t0.c71)))OR(t0.c35)))AND(t0.c71))) AND (((t0.c71) BETWEEN (vt0.c0) AND (vt0.c0)))), (((t0.c71)<=(t0.c35)) IN ((vt0.c0 IN ())));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (+ (rt0.c1)) INNER JOIN vt1 ON (CAST(rt0.c4 AS INTEGER) IN ()) INNER JOIN rt0 ON ((((t0.c35)>>(rt0.c5)))LIKE('706304454')) WHERE (NULLIF(CASE WHEN NULL THEN rt0.c1 END, ((NULL) BETWEEN (rt0.c3) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((NULLIF(CASE WHEN NULL THEN rt0.c1 END, ((NULL) BETWEEN (rt0.c3) AND (rt0.c2)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (+ (rt0.c1)) INNER JOIN vt1 ON (CAST(rt0.c4 AS INTEGER) IN ()) INNER JOIN rt0 ON ((((t0.c35)>>(rt0.c5)))LIKE('706304454')));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (+ (rt0.c1)) INNER JOIN vt1 ON (CAST(rt0.c4 AS INTEGER) IN ()) INNER JOIN rt0 ON ((((t0.c35)>>(rt0.c5)))LIKE('706304454')) WHERE (NULLIF(CASE WHEN NULL THEN rt0.c1 END, ((NULL) BETWEEN (rt0.c3) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((NULLIF(CASE WHEN NULL THEN rt0.c1 END, ((NULL) BETWEEN (rt0.c3) AND (rt0.c2)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (+ (rt0.c1)) INNER JOIN vt1 ON (CAST(rt0.c4 AS INTEGER) IN ()) INNER JOIN rt0 ON ((((t0.c35)>>(rt0.c5)))LIKE('706304454')));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (+ (rt0.c1)) INNER JOIN vt1 ON (CAST(rt0.c4 AS INTEGER) IN ()) INNER JOIN rt0 ON ((((t0.c35)>>(rt0.c5)))LIKE('706304454')) WHERE (NULLIF(CASE WHEN NULL THEN rt0.c1 END, ((NULL) BETWEEN (rt0.c3) AND (rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE (((0.34383747300297995) BETWEEN ((~ (rt0.c1))) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.34383747300297995) BETWEEN ((~ (rt0.c1))) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((0.34383747300297995) BETWEEN ((~ (rt0.c1))) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.34383747300297995) BETWEEN ((~ (rt0.c1))) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((0.34383747300297995) BETWEEN ((~ (rt0.c1))) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c3)<>(rt0.c1))))) ORDER BY ((((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))OR(((rt0.c3) ISNULL))))AND(NULL));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c3)<>(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))OR(((rt0.c3) ISNULL))))AND(NULL)));
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c3)<>(rt0.c1))))) ORDER BY ((((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))OR(((rt0.c3) ISNULL))))AND(NULL));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c3)<>(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))OR(((rt0.c3) ISNULL))))AND(NULL)));
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c3)<>(rt0.c1))))) ORDER BY ((((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))OR(((rt0.c3) ISNULL))))AND(NULL));
SELECT * FROM t0 INNER JOIN vt0 ON ((vt0.c0)%(vt0.c0)) COLLATE NOCASE WHERE ((- (((t0.c35)-(t0.c35))))) ORDER BY ((((vt0.c0)<<(0x344dfaf3)))%((NOT (t0.c71)))), (+ (t0.c35)), ((CASE vt0.c0  WHEN t0.c35 THEN vt0.c0 WHEN vt0.c0 THEN t0.c71 WHEN t0.c35 THEN vt0.c0 ELSE t0.c71 END) BETWEEN (0.7077146604478716) AND (((t0.c35)IS(t0.c35))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c35)-(t0.c35))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((vt0.c0)%(vt0.c0)) COLLATE NOCASE ORDER BY ((((vt0.c0)<<(0X344dfaf3)))%((NOT (t0.c71)))), (+ (t0.c35)), ((CASE vt0.c0  WHEN t0.c35 THEN vt0.c0 WHEN vt0.c0 THEN t0.c71 WHEN t0.c35 THEN vt0.c0 ELSE t0.c71 END) BETWEEN (0.7077146604478716) AND (((t0.c35)IS(t0.c35)))));
SELECT * FROM t0 INNER JOIN vt0 ON ((vt0.c0)%(vt0.c0)) COLLATE NOCASE WHERE ((- (((t0.c35)-(t0.c35))))) ORDER BY ((((vt0.c0)<<(0x344dfaf3)))%((NOT (t0.c71)))), (+ (t0.c35)), ((CASE vt0.c0  WHEN t0.c35 THEN vt0.c0 WHEN vt0.c0 THEN t0.c71 WHEN t0.c35 THEN vt0.c0 ELSE t0.c71 END) BETWEEN (0.7077146604478716) AND (((t0.c35)IS(t0.c35))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c35)-(t0.c35))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((vt0.c0)%(vt0.c0)) COLLATE NOCASE ORDER BY ((((vt0.c0)<<(0X344dfaf3)))%((NOT (t0.c71)))), (+ (t0.c35)), ((CASE vt0.c0  WHEN t0.c35 THEN vt0.c0 WHEN vt0.c0 THEN t0.c71 WHEN t0.c35 THEN vt0.c0 ELSE t0.c71 END) BETWEEN (0.7077146604478716) AND (((t0.c35)IS(t0.c35)))));
SELECT * FROM t0 INNER JOIN vt0 ON ((vt0.c0)%(vt0.c0)) COLLATE NOCASE WHERE ((- (((t0.c35)-(t0.c35))))) ORDER BY ((((vt0.c0)<<(0x344dfaf3)))%((NOT (t0.c71)))), (+ (t0.c35)), ((CASE vt0.c0  WHEN t0.c35 THEN vt0.c0 WHEN vt0.c0 THEN t0.c71 WHEN t0.c35 THEN vt0.c0 ELSE t0.c71 END) BETWEEN (0.7077146604478716) AND (((t0.c35)IS(t0.c35))));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((x'8d24') NOT BETWEEN ((rt0.c5 IN ())) AND (CHANGES())));
SELECT SUM(count) FROM (SELECT ((((x'8d24') NOT BETWEEN ((rt0.c5 IN ())) AND (CHANGES()))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((x'8d24') NOT BETWEEN ((rt0.c5 IN ())) AND (CHANGES())));
SELECT SUM(count) FROM (SELECT ((((x'8d24') NOT BETWEEN ((rt0.c5 IN ())) AND (CHANGES()))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((x'8d24') NOT BETWEEN ((rt0.c5 IN ())) AND (CHANGES())));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (~ (((rt0.c3)||(0.3530938008881951)))) LEFT OUTER JOIN vt1 ON (('gyA%象')>=(((rt0.c0)&(x'')))) WHERE (UNLIKELY(((t0.c35) BETWEEN (x'ebf2') AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t0.c35) BETWEEN (x'ebf2') AND (rt0.c2)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (~ (((rt0.c3)||(0.3530938008881951)))) LEFT OUTER JOIN vt1 ON (('gyA%象')>=(((rt0.c0)&(x'')))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (~ (((rt0.c3)||(0.3530938008881951)))) LEFT OUTER JOIN vt1 ON (('gyA%象')>=(((rt0.c0)&(x'')))) WHERE (UNLIKELY(((t0.c35) BETWEEN (x'ebf2') AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t0.c35) BETWEEN (x'ebf2') AND (rt0.c2)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (~ (((rt0.c3)||(0.3530938008881951)))) LEFT OUTER JOIN vt1 ON (('gyA%象')>=(((rt0.c0)&(x'')))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (~ (((rt0.c3)||(0.3530938008881951)))) LEFT OUTER JOIN vt1 ON (('gyA%象')>=(((rt0.c0)&(x'')))) WHERE (UNLIKELY(((t0.c35) BETWEEN (x'ebf2') AND (rt0.c2))));
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN rt0.c5 ELSE rt0.c1 END THEN ((rt0.c2)IS(rt0.c4)) END) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN ((NOT (rt0.c2))) AND (((rt0.c4) ISNULL)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN rt0.c5 ELSE rt0.c1 END THEN ((rt0.c2)IS(rt0.c4)) END) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN ((NOT (rt0.c2))) AND (((rt0.c4) ISNULL))));
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN rt0.c5 ELSE rt0.c1 END THEN ((rt0.c2)IS(rt0.c4)) END) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN ((NOT (rt0.c2))) AND (((rt0.c4) ISNULL)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN rt0.c5 ELSE rt0.c1 END THEN ((rt0.c2)IS(rt0.c4)) END) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN ((NOT (rt0.c2))) AND (((rt0.c4) ISNULL))));
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN rt0.c5 ELSE rt0.c1 END THEN ((rt0.c2)IS(rt0.c4)) END) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN ((NOT (rt0.c2))) AND (((rt0.c4) ISNULL)));
SELECT * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY (((rt0.c4 IN (rt0.c1)))!=(CASE WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c4 IN (rt0.c1)))!=(CASE WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c2 END)) DESC);
SELECT * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY (((rt0.c4 IN (rt0.c1)))!=(CASE WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c4 IN (rt0.c1)))!=(CASE WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c2 END)) DESC);
SELECT * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY (((rt0.c4 IN (rt0.c1)))!=(CASE WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c2 END)) DESC;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((TYPEOF(t0.c71))IS NOT((((rt0.c4))=((rt0.c0)))))) ORDER BY CASE (rt0.c1 IN (rt0.c4))  WHEN HEX(DISTINCT vt0.c0) THEN rt0.c0 WHEN ((rt0.c4)-('2051739247')) THEN t0.c71 WHEN ((t0.c71)||(rt0.c0)) THEN ((NULL)IS(t0.c35)) END ASC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(t0.c71))IS NOT((((rt0.c4))=((rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CASE (rt0.c1 IN (rt0.c4))  WHEN HEX(DISTINCT vt0.c0) THEN rt0.c0 WHEN ((rt0.c4)-('2051739247')) THEN t0.c71 WHEN ((t0.c71)||(rt0.c0)) THEN ((NULL)IS(t0.c35)) END ASC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((TYPEOF(t0.c71))IS NOT((((rt0.c4))=((rt0.c0)))))) ORDER BY CASE (rt0.c1 IN (rt0.c4))  WHEN HEX(DISTINCT vt0.c0) THEN rt0.c0 WHEN ((rt0.c4)-('2051739247')) THEN t0.c71 WHEN ((t0.c71)||(rt0.c0)) THEN ((NULL)IS(t0.c35)) END ASC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(t0.c71))IS NOT((((rt0.c4))=((rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CASE (rt0.c1 IN (rt0.c4))  WHEN HEX(DISTINCT vt0.c0) THEN rt0.c0 WHEN ((rt0.c4)-('2051739247')) THEN t0.c71 WHEN ((t0.c71)||(rt0.c0)) THEN ((NULL)IS(t0.c35)) END ASC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((TYPEOF(t0.c71))IS NOT((((rt0.c4))=((rt0.c0)))))) ORDER BY CASE (rt0.c1 IN (rt0.c4))  WHEN HEX(DISTINCT vt0.c0) THEN rt0.c0 WHEN ((rt0.c4)-('2051739247')) THEN t0.c71 WHEN ((t0.c71)||(rt0.c0)) THEN ((NULL)IS(t0.c35)) END ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c71)*(t0.c71)) THEN t0.c71 ELSE TRIM(DISTINCT t0.c71) END) ORDER BY ((((t0.c35)OR(x'ad9e')))OR((+ (t0.c35)))), (((t0.c71)) BETWEEN ((((t0.c35) NOT NULL))) AND ((NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c71)*(t0.c71)) THEN t0.c71 ELSE TRIM(DISTINCT t0.c71) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c35)OR(x'ad9e')))OR((+ (t0.c35)))), (((t0.c71)) BETWEEN ((((t0.c35) NOT NULL))) AND ((NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c71)*(t0.c71)) THEN t0.c71 ELSE TRIM(DISTINCT t0.c71) END) ORDER BY ((((t0.c35)OR(x'ad9e')))OR((+ (t0.c35)))), (((t0.c71)) BETWEEN ((((t0.c35) NOT NULL))) AND ((NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c71)*(t0.c71)) THEN t0.c71 ELSE TRIM(DISTINCT t0.c71) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c35)OR(x'ad9e')))OR((+ (t0.c35)))), (((t0.c71)) BETWEEN ((((t0.c35) NOT NULL))) AND ((NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c71)*(t0.c71)) THEN t0.c71 ELSE TRIM(DISTINCT t0.c71) END) ORDER BY ((((t0.c35)OR(x'ad9e')))OR((+ (t0.c35)))), (((t0.c71)) BETWEEN ((((t0.c35) NOT NULL))) AND ((NULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 INNER JOIN vt1 ON ((((vt1.c0 COLLATE NOCASE)AND(CAST(rt0.c0 AS INTEGER))))AND((rt0.c2 IN ()))) WHERE ((((vt1.c0)) NOT BETWEEN (('-1714621992')) AND ((((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (('-1714621992')) AND ((((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0 INNER JOIN vt1 ON ((((vt1.c0 COLLATE NOCASE)AND(CAST(rt0.c0 AS INTEGER))))AND((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 INNER JOIN vt1 ON ((((vt1.c0 COLLATE NOCASE)AND(CAST(rt0.c0 AS INTEGER))))AND((rt0.c2 IN ()))) WHERE ((((vt1.c0)) NOT BETWEEN (('-1714621992')) AND ((((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (('-1714621992')) AND ((((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0 INNER JOIN vt1 ON ((((vt1.c0 COLLATE NOCASE)AND(CAST(rt0.c0 AS INTEGER))))AND((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 INNER JOIN vt1 ON ((((vt1.c0 COLLATE NOCASE)AND(CAST(rt0.c0 AS INTEGER))))AND((rt0.c2 IN ()))) WHERE ((((vt1.c0)) NOT BETWEEN (('-1714621992')) AND ((((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c0))))));
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((COALESCE(DISTINCT '', t0.c35, rt0.c5, vt1.c0)) BETWEEN (ROUND(t0.c71, t0.c35)) AND (CAST(rt0.c2 AS NUMERIC))) CROSS JOIN rt0 ON CAST(((rt0.c5)*(vt1.c0)) AS INTEGER) WHERE (LOWER(((rt0.c0)<<(t0.c71))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c0)<<(t0.c71)))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((COALESCE(DISTINCT '', t0.c35, rt0.c5, vt1.c0)) BETWEEN (ROUND(t0.c71, t0.c35)) AND (CAST(rt0.c2 AS NUMERIC))) CROSS JOIN rt0 ON CAST(((rt0.c5)*(vt1.c0)) AS INTEGER));
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((COALESCE(DISTINCT '', t0.c35, rt0.c5, vt1.c0)) BETWEEN (ROUND(t0.c71, t0.c35)) AND (CAST(rt0.c2 AS NUMERIC))) CROSS JOIN rt0 ON CAST(((rt0.c5)*(vt1.c0)) AS INTEGER) WHERE (LOWER(((rt0.c0)<<(t0.c71))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c0)<<(t0.c71)))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((COALESCE(DISTINCT '', t0.c35, rt0.c5, vt1.c0)) BETWEEN (ROUND(t0.c71, t0.c35)) AND (CAST(rt0.c2 AS NUMERIC))) CROSS JOIN rt0 ON CAST(((rt0.c5)*(vt1.c0)) AS INTEGER));
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((rt0.c5)) BETWEEN (('^')) AND ((((rt0.c5)LIKE(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) BETWEEN (('^')) AND ((((rt0.c5)LIKE(rt0.c3)))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((rt0.c5)) BETWEEN (('^')) AND ((((rt0.c5)LIKE(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) BETWEEN (('^')) AND ((((rt0.c5)LIKE(rt0.c3)))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((rt0.c5)) BETWEEN (('^')) AND ((((rt0.c5)LIKE(rt0.c3))))));
SELECT ALL * FROM t0, rt0 WHERE (rt0.c5) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c0 ELSE t0.c35 END) IS TRUE), (NOT (0.6000854448702186)) DESC, (((rt0.c4)) NOT BETWEEN (((('2078717937') ISNULL))) AND (((rt0.c2 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c0 ELSE t0.c35 END) IS TRUE), (NOT (0.6000854448702186)) DESC, (((rt0.c4)) NOT BETWEEN (((('2078717937') ISNULL))) AND (((rt0.c2 IN ()))))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c5) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c0 ELSE t0.c35 END) IS TRUE), (NOT (0.6000854448702186)) DESC, (((rt0.c4)) NOT BETWEEN (((('2078717937') ISNULL))) AND (((rt0.c2 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c0 ELSE t0.c35 END) IS TRUE), (NOT (0.6000854448702186)) DESC, (((rt0.c4)) NOT BETWEEN (((('2078717937') ISNULL))) AND (((rt0.c2 IN ()))))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c5) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c0 ELSE t0.c35 END) IS TRUE), (NOT (0.6000854448702186)) DESC, (((rt0.c4)) NOT BETWEEN (((('2078717937') ISNULL))) AND (((rt0.c2 IN ()))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)<=(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)<=(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)<=(vt1.c0))) ISNULL));
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST((rt0.c4 IN (rt0.c3, rt0.c0)) AS NUMERIC)) ORDER BY ((rt0.c4 IN (rt0.c3)) IN ((((x''))<((rt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c4 IN (rt0.c3, rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c4 IN (rt0.c3)) IN ((((x''))<((rt0.c2))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST((rt0.c4 IN (rt0.c3, rt0.c0)) AS NUMERIC)) ORDER BY ((rt0.c4 IN (rt0.c3)) IN ((((x''))<((rt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c4 IN (rt0.c3, rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c4 IN (rt0.c3)) IN ((((x''))<((rt0.c2))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST((rt0.c4 IN (rt0.c3, rt0.c0)) AS NUMERIC)) ORDER BY ((rt0.c4 IN (rt0.c3)) IN ((((x''))<((rt0.c2))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((HEX(DISTINCT rt0.c1))IS NOT(CASE WHEN rt0.c2 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT rt0.c1))IS NOT(CASE WHEN rt0.c2 THEN NULL END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((HEX(DISTINCT rt0.c1))IS NOT(CASE WHEN rt0.c2 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT rt0.c1))IS NOT(CASE WHEN rt0.c2 THEN NULL END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((HEX(DISTINCT rt0.c1))IS NOT(CASE WHEN rt0.c2 THEN NULL END)));
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON ((t0.c71)OR(((rt0.c4) BETWEEN (rt0.c2) AND ('''\rKBU*k')))) FULL OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<<(((vt0.c0)GLOB(rt0.c0)))) WHERE (CAST(((rt0.c1)<(rt0.c2)) AS BLOB)) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)<(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON ((t0.c71)OR(((rt0.c4) BETWEEN (rt0.c2) AND ('''\rKBU*k')))) FULL OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<<(((vt0.c0)GLOB(rt0.c0)))) ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON ((t0.c71)OR(((rt0.c4) BETWEEN (rt0.c2) AND ('''\rKBU*k')))) FULL OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<<(((vt0.c0)GLOB(rt0.c0)))) WHERE (CAST(((rt0.c1)<(rt0.c2)) AS BLOB)) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)<(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON ((t0.c71)OR(((rt0.c4) BETWEEN (rt0.c2) AND ('''\rKBU*k')))) FULL OUTER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<<(((vt0.c0)GLOB(rt0.c0)))) ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))==((vt0.c0)))) IS FALSE)) ORDER BY (((((NULL, vt0.c0, '-1838263849', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0x62c79221, NULL, vt0.c0)) AND ((vt0.c0, 0.8855206136585874, vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))==((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((((NULL, vt0.c0, '-1838263849', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0X62c79221, NULL, vt0.c0)) AND ((vt0.c0, 0.8855206136585874, vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))==((vt0.c0)))) IS FALSE)) ORDER BY (((((NULL, vt0.c0, '-1838263849', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0x62c79221, NULL, vt0.c0)) AND ((vt0.c0, 0.8855206136585874, vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))==((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((((NULL, vt0.c0, '-1838263849', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0X62c79221, NULL, vt0.c0)) AND ((vt0.c0, 0.8855206136585874, vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))==((vt0.c0)))) IS FALSE)) ORDER BY (((((NULL, vt0.c0, '-1838263849', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0x62c79221, NULL, vt0.c0)) AND ((vt0.c0, 0.8855206136585874, vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((((rt0.c4)==(t0.c35)))%((rt0.c4 IN (rt0.c1))))) ORDER BY (((rt0.c5) NOT BETWEEN (rt0.c3) AND (NULL)) IN ((((rt0.c0))<=((rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)=(t0.c35)))%((rt0.c4 IN (rt0.c1))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY (((rt0.c5) NOT BETWEEN (rt0.c3) AND (NULL)) IN ((((rt0.c0))<=((rt0.c3))))));
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((((rt0.c4)==(t0.c35)))%((rt0.c4 IN (rt0.c1))))) ORDER BY (((rt0.c5) NOT BETWEEN (rt0.c3) AND (NULL)) IN ((((rt0.c0))<=((rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)=(t0.c35)))%((rt0.c4 IN (rt0.c1))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY (((rt0.c5) NOT BETWEEN (rt0.c3) AND (NULL)) IN ((((rt0.c0))<=((rt0.c3))))));
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((((rt0.c4)==(t0.c35)))%((rt0.c4 IN (rt0.c1))))) ORDER BY (((rt0.c5) NOT BETWEEN (rt0.c3) AND (NULL)) IN ((((rt0.c0))<=((rt0.c3)))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON CAST(highlight(rt0.c5, vt1.c0, rt0.c0, x'') AS BLOB) WHERE ((+ ((rt0.c3 IN (rt0.c3))))) ORDER BY (~ (((rt0.c4)/(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c3 IN (rt0.c3))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST(highlight(rt0.c5, vt1.c0, rt0.c0, x'') AS BLOB) ORDER BY (~ (((rt0.c4)/(rt0.c2)))) ASC);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON CAST(highlight(rt0.c5, vt1.c0, rt0.c0, x'') AS BLOB) WHERE ((+ ((rt0.c3 IN (rt0.c3))))) ORDER BY (~ (((rt0.c4)/(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c3 IN (rt0.c3))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST(highlight(rt0.c5, vt1.c0, rt0.c0, x'') AS BLOB) ORDER BY (~ (((rt0.c4)/(rt0.c2)))) ASC);
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt0 WHERE (COALESCE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (((vt0.c0))<=((vt0.c0))))) ORDER BY (~ ((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (((vt0.c0))<=((vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (COALESCE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (((vt0.c0))<=((vt0.c0))))) ORDER BY (~ ((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (((vt0.c0))<=((vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (COALESCE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (((vt0.c0))<=((vt0.c0))))) ORDER BY (~ ((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT * FROM rt0, vt1, t0 WHERE ('2131404119');
SELECT SUM(count) FROM (SELECT ALL (('2131404119') IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE ('2131404119');
SELECT SUM(count) FROM (SELECT ALL (('2131404119') IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE ('2131404119');
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (CAST(t0.c35 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c35 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (CAST(t0.c35 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c35 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (CAST(t0.c35 AS BLOB) COLLATE NOCASE);
SELECT * FROM rt0, t0, vt1, vt0 WHERE ((((('a&')<(t0.c71))) ISNULL)) ORDER BY (((rt0.c5))=((x'6648')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('a&')<(t0.c71))) ISNULL)) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY (((rt0.c5))=((x'6648')))  NULLS LAST);
SELECT * FROM rt0, t0, vt1, vt0 WHERE ((((('a&')<(t0.c71))) ISNULL)) ORDER BY (((rt0.c5))=((x'6648')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('a&')<(t0.c71))) ISNULL)) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY (((rt0.c5))=((x'6648')))  NULLS LAST);
SELECT * FROM rt0, t0, vt1, vt0 WHERE ((((('a&')<(t0.c71))) ISNULL)) ORDER BY (((rt0.c5))=((x'6648')))  NULLS LAST;
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON json_array_length(((((rt0.c4)OR(NULL)))OR(vt0.c0)), (((rt0.c0))<=((t0.c71)))) RIGHT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN t0.c71 THEN vt0.c0 END) BETWEEN (((rt0.c2)%(rt0.c1))) AND ((x'5dd1' IN ()))) WHERE (((((rt0.c5) NOTNULL)) BETWEEN (rt0.c4 COLLATE NOCASE) AND (t0.c71)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5) NOTNULL)) BETWEEN (rt0.c4 COLLATE NOCASE) AND (t0.c71))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON json_array_length(((((rt0.c4)OR(NULL)))OR(vt0.c0)), (((rt0.c0))<=((t0.c71)))) RIGHT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN t0.c71 THEN vt0.c0 END) BETWEEN (((rt0.c2)%(rt0.c1))) AND ((x'5dd1' IN ()))));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON json_array_length(((((rt0.c4)OR(NULL)))OR(vt0.c0)), (((rt0.c0))<=((t0.c71)))) RIGHT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN t0.c71 THEN vt0.c0 END) BETWEEN (((rt0.c2)%(rt0.c1))) AND ((x'5dd1' IN ()))) WHERE (((((rt0.c5) NOTNULL)) BETWEEN (rt0.c4 COLLATE NOCASE) AND (t0.c71)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5) NOTNULL)) BETWEEN (rt0.c4 COLLATE NOCASE) AND (t0.c71))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON json_array_length(((((rt0.c4)OR(NULL)))OR(vt0.c0)), (((rt0.c0))<=((t0.c71)))) RIGHT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN t0.c71 THEN vt0.c0 END) BETWEEN (((rt0.c2)%(rt0.c1))) AND ((x'5dd1' IN ()))));
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CASE NULL  WHEN UPPER(DISTINCT rt0.c1) THEN CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c2 END END) ORDER BY CASE rt0.c1  WHEN LIKELY(vt1.c0) THEN rt0.c2 COLLATE RTRIM WHEN (+ (0.8454317240443902)) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c5)) AND ((vt1.c0))) WHEN ((rt0.c2)+(rt0.c0)) THEN ((rt0.c2)<=(rt0.c5)) ELSE ((((vt1.c0)AND(rt0.c5)))AND(rt0.c5)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN UPPER(DISTINCT rt0.c1) THEN CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE rt0.c1  WHEN LIKELY(vt1.c0) THEN rt0.c2 COLLATE RTRIM WHEN (+ (0.8454317240443902)) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c5)) AND ((vt1.c0))) WHEN ((rt0.c2)+(rt0.c0)) THEN ((rt0.c2)<=(rt0.c5)) ELSE ((((vt1.c0)AND(rt0.c5)))AND(rt0.c5)) END DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CASE NULL  WHEN UPPER(DISTINCT rt0.c1) THEN CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c2 END END) ORDER BY CASE rt0.c1  WHEN LIKELY(vt1.c0) THEN rt0.c2 COLLATE RTRIM WHEN (+ (0.8454317240443902)) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c5)) AND ((vt1.c0))) WHEN ((rt0.c2)+(rt0.c0)) THEN ((rt0.c2)<=(rt0.c5)) ELSE ((((vt1.c0)AND(rt0.c5)))AND(rt0.c5)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN UPPER(DISTINCT rt0.c1) THEN CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE rt0.c1  WHEN LIKELY(vt1.c0) THEN rt0.c2 COLLATE RTRIM WHEN (+ (0.8454317240443902)) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c5)) AND ((vt1.c0))) WHEN ((rt0.c2)+(rt0.c0)) THEN ((rt0.c2)<=(rt0.c5)) ELSE ((((vt1.c0)AND(rt0.c5)))AND(rt0.c5)) END DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CASE NULL  WHEN UPPER(DISTINCT rt0.c1) THEN CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c2 END END) ORDER BY CASE rt0.c1  WHEN LIKELY(vt1.c0) THEN rt0.c2 COLLATE RTRIM WHEN (+ (0.8454317240443902)) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c5)) AND ((vt1.c0))) WHEN ((rt0.c2)+(rt0.c0)) THEN ((rt0.c2)<=(rt0.c5)) ELSE ((((vt1.c0)AND(rt0.c5)))AND(rt0.c5)) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c5)AND(rt0.c3)))OR(rt0.c4))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)AND(rt0.c3)))OR(rt0.c4))) ISNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c5)AND(rt0.c3)))OR(rt0.c4))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)AND(rt0.c3)))OR(rt0.c4))) ISNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c5)AND(rt0.c3)))OR(rt0.c4))) ISNULL));
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((rt0.c5) NOT BETWEEN (LOWER(rt0.c4)) AND ((((vt0.c0, t0.c71, t0.c35)) NOT BETWEEN ((rt0.c1, t0.c71, rt0.c3)) AND ((t0.c71, rt0.c1, rt0.c4))))) WHERE (CAST((vt0.c0 IN (rt0.c4)) AS NUMERIC)) ORDER BY (((t0.c35)IS(rt0.c2)) IN ())  NULLS FIRST, t0.c71 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (rt0.c4)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((rt0.c5) NOT BETWEEN (LOWER(rt0.c4)) AND ((((vt0.c0, t0.c71, t0.c35)) NOT BETWEEN ((rt0.c1, t0.c71, rt0.c3)) AND ((t0.c71, rt0.c1, rt0.c4))))) ORDER BY (((t0.c35)IS(rt0.c2)) IN ())  NULLS FIRST, t0.c71 ASC);
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((rt0.c5) NOT BETWEEN (LOWER(rt0.c4)) AND ((((vt0.c0, t0.c71, t0.c35)) NOT BETWEEN ((rt0.c1, t0.c71, rt0.c3)) AND ((t0.c71, rt0.c1, rt0.c4))))) WHERE (CAST((vt0.c0 IN (rt0.c4)) AS NUMERIC)) ORDER BY (((t0.c35)IS(rt0.c2)) IN ())  NULLS FIRST, t0.c71 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (rt0.c4)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((rt0.c5) NOT BETWEEN (LOWER(rt0.c4)) AND ((((vt0.c0, t0.c71, t0.c35)) NOT BETWEEN ((rt0.c1, t0.c71, rt0.c3)) AND ((t0.c71, rt0.c1, rt0.c4))))) ORDER BY (((t0.c35)IS(rt0.c2)) IN ())  NULLS FIRST, t0.c71 ASC);
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((rt0.c5) NOT BETWEEN (LOWER(rt0.c4)) AND ((((vt0.c0, t0.c71, t0.c35)) NOT BETWEEN ((rt0.c1, t0.c71, rt0.c3)) AND ((t0.c71, rt0.c1, rt0.c4))))) WHERE (CAST((vt0.c0 IN (rt0.c4)) AS NUMERIC)) ORDER BY (((t0.c35)IS(rt0.c2)) IN ())  NULLS FIRST, t0.c71 ASC;
SELECT ALL * FROM vt1 NOT INDEXED FULL OUTER JOIN t0 ON ((((0Xd985590)AND(CAST(t0.c35 AS INTEGER))))OR(CAST(t0.c35 AS REAL))) WHERE (t0.c71) ORDER BY ((((t0.c71 COLLATE RTRIM)AND((((vt1.c0))=((t0.c35))))))OR(TRIM(DISTINCT t0.c71, vt1.c0))), (- (NULL COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((t0.c71) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((((0xd985590)AND(CAST(t0.c35 AS INTEGER))))OR(CAST(t0.c35 AS REAL))) ORDER BY ((((t0.c71 COLLATE RTRIM)AND((((vt1.c0))==((t0.c35))))))OR(TRIM(DISTINCT t0.c71, vt1.c0))), (- (NULL COLLATE RTRIM)));
SELECT ALL * FROM vt1 NOT INDEXED FULL OUTER JOIN t0 ON ((((0Xd985590)AND(CAST(t0.c35 AS INTEGER))))OR(CAST(t0.c35 AS REAL))) WHERE (t0.c71) ORDER BY ((((t0.c71 COLLATE RTRIM)AND((((vt1.c0))=((t0.c35))))))OR(TRIM(DISTINCT t0.c71, vt1.c0))), (- (NULL COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((t0.c71) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((((0xd985590)AND(CAST(t0.c35 AS INTEGER))))OR(CAST(t0.c35 AS REAL))) ORDER BY ((((t0.c71 COLLATE RTRIM)AND((((vt1.c0))==((t0.c35))))))OR(TRIM(DISTINCT t0.c71, vt1.c0))), (- (NULL COLLATE RTRIM)));
SELECT ALL * FROM vt1 NOT INDEXED FULL OUTER JOIN t0 ON ((((0Xd985590)AND(CAST(t0.c35 AS INTEGER))))OR(CAST(t0.c35 AS REAL))) WHERE (t0.c71) ORDER BY ((((t0.c71 COLLATE RTRIM)AND((((vt1.c0))=((t0.c35))))))OR(TRIM(DISTINCT t0.c71, vt1.c0))), (- (NULL COLLATE RTRIM));
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(((t0.c71)||(t0.c35)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c71)||(t0.c35)) AS BLOB)) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(((t0.c71)||(t0.c35)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c71)||(t0.c35)) AS BLOB)) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(((t0.c71)||(t0.c35)) AS BLOB));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON 0.5206368210794323 RIGHT OUTER JOIN rt0 ON ((((t0.c71)==(t0.c71))) ISNULL) WHERE ((((((rt0.c2) NOT NULL)))>=((((t0.c35)>>(rt0.c3)))))) ORDER BY ((rt0.c3) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((((rt0.c0, rt0.c5, t0.c71, rt0.c0, t0.c71))<((rt0.c5, rt0.c3, vt0.c0, 0Xffffffff8c1b6b8a, -1.058066587E9))))) DESC  NULLS LAST, '';
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT NULL)))>=((((t0.c35)>>(rt0.c3)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON 0.5206368210794323 RIGHT OUTER JOIN rt0 ON ((((t0.c71)==(t0.c71))) ISNULL) ORDER BY ((rt0.c3) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((((rt0.c0, rt0.c5, t0.c71, rt0.c0, t0.c71))<((rt0.c5, rt0.c3, vt0.c0, 0Xffffffff8c1b6b8a, -1.058066587E9))))) DESC  NULLS LAST, '');
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON 0.5206368210794323 RIGHT OUTER JOIN rt0 ON ((((t0.c71)==(t0.c71))) ISNULL) WHERE ((((((rt0.c2) NOT NULL)))>=((((t0.c35)>>(rt0.c3)))))) ORDER BY ((rt0.c3) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((((rt0.c0, rt0.c5, t0.c71, rt0.c0, t0.c71))<((rt0.c5, rt0.c3, vt0.c0, 0Xffffffff8c1b6b8a, -1.058066587E9))))) DESC  NULLS LAST, '';
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT NULL)))>=((((t0.c35)>>(rt0.c3)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON 0.5206368210794323 RIGHT OUTER JOIN rt0 ON ((((t0.c71)==(t0.c71))) ISNULL) ORDER BY ((rt0.c3) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((((rt0.c0, rt0.c5, t0.c71, rt0.c0, t0.c71))<((rt0.c5, rt0.c3, vt0.c0, 0Xffffffff8c1b6b8a, -1.058066587E9))))) DESC  NULLS LAST, '');
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON 0.5206368210794323 RIGHT OUTER JOIN rt0 ON ((((t0.c71)==(t0.c71))) ISNULL) WHERE ((((((rt0.c2) NOT NULL)))>=((((t0.c35)>>(rt0.c3)))))) ORDER BY ((rt0.c3) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((((rt0.c0, rt0.c5, t0.c71, rt0.c0, t0.c71))<((rt0.c5, rt0.c3, vt0.c0, 0Xffffffff8c1b6b8a, -1.058066587E9))))) DESC  NULLS LAST, '';
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (NULL) ORDER BY (rt0.c4 IN ()) COLLATE BINARY DESC, CASE t0.c71  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c3 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY (rt0.c4 IN ()) COLLATE BINARY DESC, CASE t0.c71  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c3 END COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (NULL) ORDER BY (rt0.c4 IN ()) COLLATE BINARY DESC, CASE t0.c71  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c3 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY (rt0.c4 IN ()) COLLATE BINARY DESC, CASE t0.c71  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c3 END COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (NULL) ORDER BY (rt0.c4 IN ()) COLLATE BINARY DESC, CASE t0.c71  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c3 END COLLATE RTRIM DESC;
SELECT * FROM rt0, t0, vt1 WHERE (((((CASE 'WPl'  WHEN t0.c71 THEN rt0.c5 END)AND(CAST(rt0.c0 AS REAL))))AND(0xffffffffb8319d2e))) ORDER BY ((((((((CAST(rt0.c1 AS INTEGER))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c0) IS FALSE))))OR((rt0.c4 IN (rt0.c2, 779047945, rt0.c5)))))OR(CASE rt0.c3  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE 'WPl'  WHEN t0.c71 THEN rt0.c5 END)AND(CAST(rt0.c0 AS REAL))))AND(0Xffffffffb8319d2e))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((((((CAST(rt0.c1 AS INTEGER))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c0) IS FALSE))))OR((rt0.c4 IN (rt0.c2, 779047945, rt0.c5)))))OR(CASE rt0.c3  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c0 END)) ASC);
SELECT * FROM rt0, t0, vt1 WHERE (((((CASE 'WPl'  WHEN t0.c71 THEN rt0.c5 END)AND(CAST(rt0.c0 AS REAL))))AND(0xffffffffb8319d2e))) ORDER BY ((((((((CAST(rt0.c1 AS INTEGER))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c0) IS FALSE))))OR((rt0.c4 IN (rt0.c2, 779047945, rt0.c5)))))OR(CASE rt0.c3  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE 'WPl'  WHEN t0.c71 THEN rt0.c5 END)AND(CAST(rt0.c0 AS REAL))))AND(0Xffffffffb8319d2e))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((((((CAST(rt0.c1 AS INTEGER))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c0) IS FALSE))))OR((rt0.c4 IN (rt0.c2, 779047945, rt0.c5)))))OR(CASE rt0.c3  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c0 END)) ASC);
SELECT * FROM rt0, t0, vt1 WHERE (((((CASE 'WPl'  WHEN t0.c71 THEN rt0.c5 END)AND(CAST(rt0.c0 AS REAL))))AND(0xffffffffb8319d2e))) ORDER BY ((((((((CAST(rt0.c1 AS INTEGER))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c0) IS FALSE))))OR((rt0.c4 IN (rt0.c2, 779047945, rt0.c5)))))OR(CASE rt0.c3  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c0 END)) ASC;
SELECT * FROM t0, vt1, vt0, rt0 WHERE ('') ORDER BY (NOT (CAST(x'' AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, vt1, vt0 NOT INDEXED, rt0 ORDER BY (NOT (CAST(x'' AS REAL))) ASC);
SELECT * FROM t0, vt1, vt0, rt0 WHERE ('') ORDER BY (NOT (CAST(x'' AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, vt1, vt0 NOT INDEXED, rt0 ORDER BY (NOT (CAST(x'' AS REAL))) ASC);
SELECT * FROM t0, vt1, vt0, rt0 WHERE ('') ORDER BY (NOT (CAST(x'' AS REAL))) ASC;
SELECT * FROM t0 WHERE (CAST(((t0.c35)>>(t0.c35)) AS REAL)) ORDER BY (((((t0.c71)) NOT BETWEEN ((t0.c35)) AND ((t0.c35)))) BETWEEN ((~ (t0.c71))) AND (((t0.c71) NOT BETWEEN (t0.c35) AND (NULL)))), ((CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END)|((((t0.c71)) NOT BETWEEN ((t0.c71)) AND (('o/'))))) DESC  NULLS LAST, (-1.912603401E9 IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c35)>>(t0.c35)) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c71)) NOT BETWEEN ((t0.c35)) AND ((t0.c35)))) BETWEEN ((~ (t0.c71))) AND (((t0.c71) NOT BETWEEN (t0.c35) AND (NULL)))), ((CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END)|((((t0.c71)) NOT BETWEEN ((t0.c71)) AND (('o/'))))) DESC  NULLS LAST, (-1.912603401E9 IN ()));
SELECT * FROM t0 WHERE (CAST(((t0.c35)>>(t0.c35)) AS REAL)) ORDER BY (((((t0.c71)) NOT BETWEEN ((t0.c35)) AND ((t0.c35)))) BETWEEN ((~ (t0.c71))) AND (((t0.c71) NOT BETWEEN (t0.c35) AND (NULL)))), ((CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END)|((((t0.c71)) NOT BETWEEN ((t0.c71)) AND (('o/'))))) DESC  NULLS LAST, (-1.912603401E9 IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c35)>>(t0.c35)) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c71)) NOT BETWEEN ((t0.c35)) AND ((t0.c35)))) BETWEEN ((~ (t0.c71))) AND (((t0.c71) NOT BETWEEN (t0.c35) AND (NULL)))), ((CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END)|((((t0.c71)) NOT BETWEEN ((t0.c71)) AND (('o/'))))) DESC  NULLS LAST, (-1.912603401E9 IN ()));
SELECT * FROM t0 WHERE (CAST(((t0.c35)>>(t0.c35)) AS REAL)) ORDER BY (((((t0.c71)) NOT BETWEEN ((t0.c35)) AND ((t0.c35)))) BETWEEN ((~ (t0.c71))) AND (((t0.c71) NOT BETWEEN (t0.c35) AND (NULL)))), ((CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END)|((((t0.c71)) NOT BETWEEN ((t0.c71)) AND (('o/'))))) DESC  NULLS LAST, (-1.912603401E9 IN ());
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c71 THEN t0.c71 END AS BLOB)) ORDER BY -1e500;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c71 THEN t0.c71 END AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY -1e500);
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c71 THEN t0.c71 END AS BLOB)) ORDER BY -1e500;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c71 THEN t0.c71 END AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY -1e500);
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c71 THEN t0.c71 END AS BLOB)) ORDER BY -1e500;
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((((((SQLITE_VERSION())OR((rt0.c3 IN ()))))OR(IFNULL(DISTINCT rt0.c0, vt0.c0))))OR(((t0.c71) NOTNULL))))AND(((vt0.c0)>(rt0.c0)))) INNER JOIN rt0 ON UPPER(rt0.c2 COLLATE BINARY) WHERE ((+ (((vt1.c0)<(rt0.c5))))) ORDER BY (((rt0.c4 COLLATE RTRIM))=((((t0.c35)<<(rt0.c2))))), ((rt0.c4)|(((rt0.c3)>(t0.c71)))), (((rt0.c2, rt0.c1, rt0.c0, rt0.c0, vt0.c0, rt0.c5, rt0.c1)) NOT BETWEEN ((CASE t0.c71  WHEN vt0.c0 THEN vt1.c0 END, (((t0.c71, rt0.c3, rt0.c5)) BETWEEN ((NULL, rt0.c1, t0.c35)) AND ((vt1.c0, rt0.c1, rt0.c1))), ((vt1.c0)*(vt1.c0)), (((x'a0e3a0ca')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), ((rt0.c4)IS NOT(rt0.c2)), 0.4847169263692229, (+ (t0.c35)))) AND ((((rt0.c1)<<(rt0.c2)), ((rt0.c3) BETWEEN (vt1.c0) AND (t0.c71)), ((t0.c35) NOT BETWEEN (t0.c71) AND (vt1.c0)), STRFTIME(rt0.c1, rt0.c1, rt0.c1), ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)), (rt0.c4 IN (0.4764676794030027)), ((t0.c71)<<(0xffffffffa6429284))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)<(rt0.c5))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((((((SQLITE_VERSION())OR((rt0.c3 IN ()))))OR(IFNULL(DISTINCT rt0.c0, vt0.c0))))OR(((t0.c71) NOTNULL))))AND(((vt0.c0)>(rt0.c0)))) INNER JOIN rt0 ON UPPER(rt0.c2 COLLATE BINARY) ORDER BY (((rt0.c4 COLLATE RTRIM))=((((t0.c35)<<(rt0.c2))))), ((rt0.c4)|(((rt0.c3)>(t0.c71)))), (((rt0.c2, rt0.c1, rt0.c0, rt0.c0, vt0.c0, rt0.c5, rt0.c1)) NOT BETWEEN ((CASE t0.c71  WHEN vt0.c0 THEN vt1.c0 END, (((t0.c71, rt0.c3, rt0.c5)) BETWEEN ((NULL, rt0.c1, t0.c35)) AND ((vt1.c0, rt0.c1, rt0.c1))), ((vt1.c0)*(vt1.c0)), (((x'a0e3a0ca')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), ((rt0.c4)IS NOT(rt0.c2)), 0.4847169263692229, (+ (t0.c35)))) AND ((((rt0.c1)<<(rt0.c2)), ((rt0.c3) BETWEEN (vt1.c0) AND (t0.c71)), ((t0.c35) NOT BETWEEN (t0.c71) AND (vt1.c0)), STRFTIME(rt0.c1, rt0.c1, rt0.c1), ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)), (rt0.c4 IN (0.4764676794030027)), ((t0.c71)<<(0xffffffffa6429284))))) DESC  NULLS LAST);
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((((((SQLITE_VERSION())OR((rt0.c3 IN ()))))OR(IFNULL(DISTINCT rt0.c0, vt0.c0))))OR(((t0.c71) NOTNULL))))AND(((vt0.c0)>(rt0.c0)))) INNER JOIN rt0 ON UPPER(rt0.c2 COLLATE BINARY) WHERE ((+ (((vt1.c0)<(rt0.c5))))) ORDER BY (((rt0.c4 COLLATE RTRIM))=((((t0.c35)<<(rt0.c2))))), ((rt0.c4)|(((rt0.c3)>(t0.c71)))), (((rt0.c2, rt0.c1, rt0.c0, rt0.c0, vt0.c0, rt0.c5, rt0.c1)) NOT BETWEEN ((CASE t0.c71  WHEN vt0.c0 THEN vt1.c0 END, (((t0.c71, rt0.c3, rt0.c5)) BETWEEN ((NULL, rt0.c1, t0.c35)) AND ((vt1.c0, rt0.c1, rt0.c1))), ((vt1.c0)*(vt1.c0)), (((x'a0e3a0ca')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), ((rt0.c4)IS NOT(rt0.c2)), 0.4847169263692229, (+ (t0.c35)))) AND ((((rt0.c1)<<(rt0.c2)), ((rt0.c3) BETWEEN (vt1.c0) AND (t0.c71)), ((t0.c35) NOT BETWEEN (t0.c71) AND (vt1.c0)), STRFTIME(rt0.c1, rt0.c1, rt0.c1), ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)), (rt0.c4 IN (0.4764676794030027)), ((t0.c71)<<(0xffffffffa6429284))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)<(rt0.c5))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((((((SQLITE_VERSION())OR((rt0.c3 IN ()))))OR(IFNULL(DISTINCT rt0.c0, vt0.c0))))OR(((t0.c71) NOTNULL))))AND(((vt0.c0)>(rt0.c0)))) INNER JOIN rt0 ON UPPER(rt0.c2 COLLATE BINARY) ORDER BY (((rt0.c4 COLLATE RTRIM))=((((t0.c35)<<(rt0.c2))))), ((rt0.c4)|(((rt0.c3)>(t0.c71)))), (((rt0.c2, rt0.c1, rt0.c0, rt0.c0, vt0.c0, rt0.c5, rt0.c1)) NOT BETWEEN ((CASE t0.c71  WHEN vt0.c0 THEN vt1.c0 END, (((t0.c71, rt0.c3, rt0.c5)) BETWEEN ((NULL, rt0.c1, t0.c35)) AND ((vt1.c0, rt0.c1, rt0.c1))), ((vt1.c0)*(vt1.c0)), (((x'a0e3a0ca')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), ((rt0.c4)IS NOT(rt0.c2)), 0.4847169263692229, (+ (t0.c35)))) AND ((((rt0.c1)<<(rt0.c2)), ((rt0.c3) BETWEEN (vt1.c0) AND (t0.c71)), ((t0.c35) NOT BETWEEN (t0.c71) AND (vt1.c0)), STRFTIME(rt0.c1, rt0.c1, rt0.c1), ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)), (rt0.c4 IN (0.4764676794030027)), ((t0.c71)<<(0xffffffffa6429284))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE ((~ (CASE rt0.c3  WHEN rt0.c3 THEN t0.c35 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN vt1.c0 WHEN 0.16248124925312013 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c3  WHEN rt0.c3 THEN t0.c35 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN vt1.c0 WHEN 0.16248124925312013 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt1, vt0, t0);
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE ((~ (CASE rt0.c3  WHEN rt0.c3 THEN t0.c35 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN vt1.c0 WHEN 0.16248124925312013 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c3  WHEN rt0.c3 THEN t0.c35 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN vt1.c0 WHEN 0.16248124925312013 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt1, vt0, t0);
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE ((~ (CASE rt0.c3  WHEN rt0.c3 THEN t0.c35 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN vt1.c0 WHEN 0.16248124925312013 THEN rt0.c0 END)));
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (t0.c71);
SELECT SUM(count) FROM (SELECT ALL ((t0.c71) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (t0.c71);
SELECT SUM(count) FROM (SELECT ALL ((t0.c71) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (t0.c71);
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (CASE ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))  WHEN CASE WHEN rt0.c4 THEN t0.c71 END THEN ((rt0.c1) NOTNULL) ELSE NULL END) ORDER BY ((((rt0.c4) IS TRUE))*(rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))  WHEN CASE WHEN rt0.c4 THEN t0.c71 END THEN ((rt0.c1) NOTNULL) ELSE NULL END) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((((rt0.c4) IS TRUE))*(rt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (CASE ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))  WHEN CASE WHEN rt0.c4 THEN t0.c71 END THEN ((rt0.c1) NOTNULL) ELSE NULL END) ORDER BY ((((rt0.c4) IS TRUE))*(rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))  WHEN CASE WHEN rt0.c4 THEN t0.c71 END THEN ((rt0.c1) NOTNULL) ELSE NULL END) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((((rt0.c4) IS TRUE))*(rt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (CASE ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))  WHEN CASE WHEN rt0.c4 THEN t0.c71 END THEN ((rt0.c1) NOTNULL) ELSE NULL END) ORDER BY ((((rt0.c4) IS TRUE))*(rt0.c2 COLLATE NOCASE));
SELECT * FROM rt0 WHERE (CAST(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)) AS BLOB)) ORDER BY ((((rt0.c5) ISNULL)) ISNULL) DESC, ((((rt0.c1 COLLATE BINARY)AND(((((rt0.c4)AND(rt0.c2)))OR(rt0.c1)))))AND(-2016702277)) ASC  NULLS FIRST, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5) ISNULL)) ISNULL) DESC, ((((rt0.c1 COLLATE BINARY)AND(((((rt0.c4)AND(rt0.c2)))OR(rt0.c1)))))AND(-2016702277)) ASC  NULLS FIRST, rt0.c0 DESC);
SELECT * FROM rt0 WHERE (CAST(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)) AS BLOB)) ORDER BY ((((rt0.c5) ISNULL)) ISNULL) DESC, ((((rt0.c1 COLLATE BINARY)AND(((((rt0.c4)AND(rt0.c2)))OR(rt0.c1)))))AND(-2016702277)) ASC  NULLS FIRST, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5) ISNULL)) ISNULL) DESC, ((((rt0.c1 COLLATE BINARY)AND(((((rt0.c4)AND(rt0.c2)))OR(rt0.c1)))))AND(-2016702277)) ASC  NULLS FIRST, rt0.c0 DESC);
SELECT * FROM rt0 WHERE (CAST(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)) AS BLOB)) ORDER BY ((((rt0.c5) ISNULL)) ISNULL) DESC, ((((rt0.c1 COLLATE BINARY)AND(((((rt0.c4)AND(rt0.c2)))OR(rt0.c1)))))AND(-2016702277)) ASC  NULLS FIRST, rt0.c0 DESC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c5)) BETWEEN ((((NULL) BETWEEN (rt0.c3) AND (rt0.c1)))) AND ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) BETWEEN ((((NULL) BETWEEN (rt0.c3) AND (rt0.c1)))) AND ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c5)) BETWEEN ((((NULL) BETWEEN (rt0.c3) AND (rt0.c1)))) AND ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) BETWEEN ((((NULL) BETWEEN (rt0.c3) AND (rt0.c1)))) AND ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c5)) BETWEEN ((((NULL) BETWEEN (rt0.c3) AND (rt0.c1)))) AND ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)/(vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)/(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)/(vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)/(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)/(vt1.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (NULL) ORDER BY IFNULL(((rt0.c4)OR(vt1.c0)), ((rt0.c5) IS TRUE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY IFNULL(((rt0.c4)OR(vt1.c0)), ((rt0.c5) IS TRUE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (NULL) ORDER BY IFNULL(((rt0.c4)OR(vt1.c0)), ((rt0.c5) IS TRUE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY IFNULL(((rt0.c4)OR(vt1.c0)), ((rt0.c5) IS TRUE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (NULL) ORDER BY IFNULL(((rt0.c4)OR(vt1.c0)), ((rt0.c5) IS TRUE))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (t0.c71);
SELECT SUM(count) FROM (SELECT ALL ((t0.c71) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (t0.c71);
SELECT SUM(count) FROM (SELECT ALL ((t0.c71) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (t0.c71);
SELECT * FROM t0 WHERE (CAST(483432620 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(483432620 AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(483432620 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(483432620 AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(483432620 AS INTEGER));
SELECT COUNT(*) FROM t0 WHERE (((t0.c71) NOT BETWEEN (t0.c35) AND ('-1e500'))) ORDER BY ((1.13499294E9) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c71) NOT BETWEEN (t0.c35) AND ('-1e500'))) IS TRUE)  as count FROM t0 ORDER BY ((1.13499294E9) IS TRUE));
SELECT COUNT(*) FROM t0 WHERE (((t0.c71) NOT BETWEEN (t0.c35) AND ('-1e500'))) ORDER BY ((1.13499294E9) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c71) NOT BETWEEN (t0.c35) AND ('-1e500'))) IS TRUE)  as count FROM t0 ORDER BY ((1.13499294E9) IS TRUE));
SELECT COUNT(*) FROM t0 WHERE (((t0.c71) NOT BETWEEN (t0.c35) AND ('-1e500'))) ORDER BY ((1.13499294E9) IS TRUE);
SELECT ALL * FROM vt1, rt0 WHERE (NULL) ORDER BY ((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c5))), (vt1.c0 IN ()), CASE rt0.c1  WHEN '{z\kh쮼' THEN rt0.c4 ELSE rt0.c4 END, ((rt0.c4)|(rt0.c0)), CAST(rt0.c3 AS REAL)))<((0.40885957013772833, (('am%#Yp')&(rt0.c4)), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND ('0.46709357735727597')), (- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c5))), (vt1.c0 IN ()), CASE rt0.c1  WHEN '{z\kh쮼' THEN rt0.c4 ELSE rt0.c4 END, ((rt0.c4)|(rt0.c0)), CAST(rt0.c3 AS REAL)))<((0.40885957013772833, (('am%#Yp')&(rt0.c4)), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND ('0.46709357735727597')), (- (rt0.c0))))));
SELECT ALL * FROM vt1, rt0 WHERE (NULL) ORDER BY ((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c5))), (vt1.c0 IN ()), CASE rt0.c1  WHEN '{z\kh쮼' THEN rt0.c4 ELSE rt0.c4 END, ((rt0.c4)|(rt0.c0)), CAST(rt0.c3 AS REAL)))<((0.40885957013772833, (('am%#Yp')&(rt0.c4)), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND ('0.46709357735727597')), (- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c5))), (vt1.c0 IN ()), CASE rt0.c1  WHEN '{z\kh쮼' THEN rt0.c4 ELSE rt0.c4 END, ((rt0.c4)|(rt0.c0)), CAST(rt0.c3 AS REAL)))<((0.40885957013772833, (('am%#Yp')&(rt0.c4)), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND ('0.46709357735727597')), (- (rt0.c0))))));
SELECT ALL * FROM vt1, rt0 WHERE (NULL) ORDER BY ((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c5))), (vt1.c0 IN ()), CASE rt0.c1  WHEN '{z\kh쮼' THEN rt0.c4 ELSE rt0.c4 END, ((rt0.c4)|(rt0.c0)), CAST(rt0.c3 AS REAL)))<((0.40885957013772833, (('am%#Yp')&(rt0.c4)), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND ('0.46709357735727597')), (- (rt0.c0)))));
SELECT * FROM vt1 WHERE ((~ (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (vt1.c0)));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c5)))+(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)) WHERE ((((rt0.c1)>>(rt0.c1)) IN ())) ORDER BY (- (NULL)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)>>(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c5)))+(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)) ORDER BY (- (NULL)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c5)))+(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)) WHERE ((((rt0.c1)>>(rt0.c1)) IN ())) ORDER BY (- (NULL)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)>>(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c5)))+(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)) ORDER BY (- (NULL)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c5)))+(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END)) WHERE ((((rt0.c1)>>(rt0.c1)) IN ())) ORDER BY (- (NULL)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c5 THEN rt0.c3 WHEN x'5c86' THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END)==((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c5 THEN rt0.c3 WHEN x'5c86' THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END)==((- (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c5 THEN rt0.c3 WHEN x'5c86' THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END)==((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c5 THEN rt0.c3 WHEN x'5c86' THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END)==((- (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c5 THEN rt0.c3 WHEN x'5c86' THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END)==((- (rt0.c3)))));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON (((vt1.c0))<>((((t0.c35)AND(vt1.c0))))) WHERE ((((t0.c71, vt1.c0, x'a2d6')) NOT BETWEEN ((t0.c35, (((vt1.c0, t0.c71, vt1.c0, t0.c71, vt1.c0))!=((vt1.c0, t0.c71, t0.c35, vt1.c0, t0.c71))), ((vt1.c0) IS TRUE))) AND ((((t0.c71) BETWEEN (vt1.c0) AND (vt1.c0)), CASE t0.c35  WHEN t0.c71 THEN vt1.c0 END, (((vt1.c0)) BETWEEN ((t0.c71)) AND ((t0.c35)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c71, vt1.c0, x'a2d6')) NOT BETWEEN ((t0.c35, (((vt1.c0, t0.c71, vt1.c0, t0.c71, vt1.c0))!=((vt1.c0, t0.c71, t0.c35, vt1.c0, t0.c71))), ((vt1.c0) IS TRUE))) AND ((((t0.c71) BETWEEN (vt1.c0) AND (vt1.c0)), CASE t0.c35  WHEN t0.c71 THEN vt1.c0 END, (((vt1.c0)) BETWEEN ((t0.c71)) AND ((t0.c35))))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (((vt1.c0))<>((((t0.c35)AND(vt1.c0))))));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON (((vt1.c0))<>((((t0.c35)AND(vt1.c0))))) WHERE ((((t0.c71, vt1.c0, x'a2d6')) NOT BETWEEN ((t0.c35, (((vt1.c0, t0.c71, vt1.c0, t0.c71, vt1.c0))!=((vt1.c0, t0.c71, t0.c35, vt1.c0, t0.c71))), ((vt1.c0) IS TRUE))) AND ((((t0.c71) BETWEEN (vt1.c0) AND (vt1.c0)), CASE t0.c35  WHEN t0.c71 THEN vt1.c0 END, (((vt1.c0)) BETWEEN ((t0.c71)) AND ((t0.c35)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c71, vt1.c0, x'a2d6')) NOT BETWEEN ((t0.c35, (((vt1.c0, t0.c71, vt1.c0, t0.c71, vt1.c0))!=((vt1.c0, t0.c71, t0.c35, vt1.c0, t0.c71))), ((vt1.c0) IS TRUE))) AND ((((t0.c71) BETWEEN (vt1.c0) AND (vt1.c0)), CASE t0.c35  WHEN t0.c71 THEN vt1.c0 END, (((vt1.c0)) BETWEEN ((t0.c71)) AND ((t0.c35))))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (((vt1.c0))<>((((t0.c35)AND(vt1.c0))))));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON (((vt1.c0))<>((((t0.c35)AND(vt1.c0))))) WHERE ((((t0.c71, vt1.c0, x'a2d6')) NOT BETWEEN ((t0.c35, (((vt1.c0, t0.c71, vt1.c0, t0.c71, vt1.c0))!=((vt1.c0, t0.c71, t0.c35, vt1.c0, t0.c71))), ((vt1.c0) IS TRUE))) AND ((((t0.c71) BETWEEN (vt1.c0) AND (vt1.c0)), CASE t0.c35  WHEN t0.c71 THEN vt1.c0 END, (((vt1.c0)) BETWEEN ((t0.c71)) AND ((t0.c35)))))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c4)))AND(json(vt0.c0))))OR((NOT (rt0.c3)))) CROSS JOIN rt0 ON CASE WHEN rt0.c1 COLLATE NOCASE THEN rt0.c3 COLLATE BINARY END WHERE (CASE rt0.c3 COLLATE RTRIM  WHEN TRIM(DISTINCT rt0.c3) THEN (+ (vt0.c0)) ELSE x'' END) ORDER BY (((x'', rt0.c4 COLLATE NOCASE, (vt0.c0 IN ())))<((vt1.c0 COLLATE RTRIM, rt0.c5, ((rt0.c3)||(rt0.c3)))))  NULLS FIRST, rt0.c1 ASC, '}Z' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c3 COLLATE RTRIM  WHEN TRIM(DISTINCT rt0.c3) THEN (+ (vt0.c0)) ELSE x'' END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c4)))AND(json(vt0.c0))))OR((NOT (rt0.c3)))) CROSS JOIN rt0 ON CASE WHEN rt0.c1 COLLATE NOCASE THEN rt0.c3 COLLATE BINARY END ORDER BY (((x'', rt0.c4 COLLATE NOCASE, (vt0.c0 IN ())))<((vt1.c0 COLLATE RTRIM, rt0.c5, ((rt0.c3)||(rt0.c3)))))  NULLS FIRST, rt0.c1 ASC, '}Z' DESC);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c4)))AND(json(vt0.c0))))OR((NOT (rt0.c3)))) CROSS JOIN rt0 ON CASE WHEN rt0.c1 COLLATE NOCASE THEN rt0.c3 COLLATE BINARY END WHERE (CASE rt0.c3 COLLATE RTRIM  WHEN TRIM(DISTINCT rt0.c3) THEN (+ (vt0.c0)) ELSE x'' END) ORDER BY (((x'', rt0.c4 COLLATE NOCASE, (vt0.c0 IN ())))<((vt1.c0 COLLATE RTRIM, rt0.c5, ((rt0.c3)||(rt0.c3)))))  NULLS FIRST, rt0.c1 ASC, '}Z' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c3 COLLATE RTRIM  WHEN TRIM(DISTINCT rt0.c3) THEN (+ (vt0.c0)) ELSE x'' END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c4)))AND(json(vt0.c0))))OR((NOT (rt0.c3)))) CROSS JOIN rt0 ON CASE WHEN rt0.c1 COLLATE NOCASE THEN rt0.c3 COLLATE BINARY END ORDER BY (((x'', rt0.c4 COLLATE NOCASE, (vt0.c0 IN ())))<((vt1.c0 COLLATE RTRIM, rt0.c5, ((rt0.c3)||(rt0.c3)))))  NULLS FIRST, rt0.c1 ASC, '}Z' DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))>=(TRIM(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c0)))>=(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))>=(TRIM(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c0)))>=(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))>=(TRIM(DISTINCT vt0.c0))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(((((t0.c71)AND(rt0.c2)))AND(rt0.c3)) AS TEXT)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c71)AND(rt0.c2)))AND(rt0.c3)) AS TEXT)) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(((((t0.c71)AND(rt0.c2)))AND(rt0.c3)) AS TEXT)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c71)AND(rt0.c2)))AND(rt0.c3)) AS TEXT)) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(((((t0.c71)AND(rt0.c2)))AND(rt0.c3)) AS TEXT)) ORDER BY NULL DESC;
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((((((((CHAR(rt0.c3))OR('-775771149')))OR((t0.c71 IN ()))))AND(((('-1754673784', t0.c35, t0.c71))<>((t0.c35, t0.c71, vt0.c0))))))AND(vt0.c0)) RIGHT OUTER JOIN t0 ON CAST((((rt0.c1))<((rt0.c2))) AS TEXT) WHERE ((((((rt0.c0))>((t0.c35)))) IS TRUE)) ORDER BY (((CASE '297730640'  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c71 END, ((rt0.c1) IS FALSE), '2117167673'))>((((vt1.c0)>=(rt0.c3)), ((vt1.c0) NOT NULL), 'R(C')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>((t0.c35)))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((((((((CHAR(rt0.c3))OR('-775771149')))OR((t0.c71 IN ()))))AND(((('-1754673784', t0.c35, t0.c71))!=((t0.c35, t0.c71, vt0.c0))))))AND(vt0.c0)) RIGHT OUTER JOIN t0 ON CAST((((rt0.c1))<((rt0.c2))) AS TEXT) ORDER BY (((CASE '297730640'  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c71 END, ((rt0.c1) IS FALSE), '2117167673'))>((((vt1.c0)>=(rt0.c3)), ((vt1.c0) NOT NULL), 'R(C'))));
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((((((((CHAR(rt0.c3))OR('-775771149')))OR((t0.c71 IN ()))))AND(((('-1754673784', t0.c35, t0.c71))<>((t0.c35, t0.c71, vt0.c0))))))AND(vt0.c0)) RIGHT OUTER JOIN t0 ON CAST((((rt0.c1))<((rt0.c2))) AS TEXT) WHERE ((((((rt0.c0))>((t0.c35)))) IS TRUE)) ORDER BY (((CASE '297730640'  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c71 END, ((rt0.c1) IS FALSE), '2117167673'))>((((vt1.c0)>=(rt0.c3)), ((vt1.c0) NOT NULL), 'R(C')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>((t0.c35)))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((((((((CHAR(rt0.c3))OR('-775771149')))OR((t0.c71 IN ()))))AND(((('-1754673784', t0.c35, t0.c71))!=((t0.c35, t0.c71, vt0.c0))))))AND(vt0.c0)) RIGHT OUTER JOIN t0 ON CAST((((rt0.c1))<((rt0.c2))) AS TEXT) ORDER BY (((CASE '297730640'  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c71 END, ((rt0.c1) IS FALSE), '2117167673'))>((((vt1.c0)>=(rt0.c3)), ((vt1.c0) NOT NULL), 'R(C'))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c35);
SELECT SUM(count) FROM (SELECT ALL ((t0.c35) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c35);
SELECT SUM(count) FROM (SELECT ALL ((t0.c35) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c35);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS BLOB)) BETWEEN (((((((((NULL)OR(t0.c71)))AND(t0.c71)))OR(rt0.c1)))AND(rt0.c0))) AND ((- (rt0.c2)))) CROSS JOIN vt0 ON CASE WHEN ABS(rt0.c1) THEN ((vt1.c0) IS FALSE) ELSE ((rt0.c2) BETWEEN (t0.c35) AND (rt0.c5)) END FULL OUTER JOIN rt0 ON (- (rt0.c1)) WHERE (((((rt0.c5)&(0.24138218907207143))) BETWEEN (((rt0.c1) NOT NULL)) AND (vt1.c0))) ORDER BY (- (NULL)) ASC, rt0.c5;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)&(0.24138218907207143))) BETWEEN (((rt0.c1) NOT NULL)) AND (vt1.c0))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS BLOB)) BETWEEN (((((((((NULL)OR(t0.c71)))AND(t0.c71)))OR(rt0.c1)))AND(rt0.c0))) AND ((- (rt0.c2)))) CROSS JOIN vt0 ON CASE WHEN ABS(rt0.c1) THEN ((vt1.c0) IS FALSE) ELSE ((rt0.c2) BETWEEN (t0.c35) AND (rt0.c5)) END FULL OUTER JOIN rt0 ON (- (rt0.c1)) ORDER BY (- (NULL)) ASC, rt0.c5);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS BLOB)) BETWEEN (((((((((NULL)OR(t0.c71)))AND(t0.c71)))OR(rt0.c1)))AND(rt0.c0))) AND ((- (rt0.c2)))) CROSS JOIN vt0 ON CASE WHEN ABS(rt0.c1) THEN ((vt1.c0) IS FALSE) ELSE ((rt0.c2) BETWEEN (t0.c35) AND (rt0.c5)) END FULL OUTER JOIN rt0 ON (- (rt0.c1)) WHERE (((((rt0.c5)&(0.24138218907207143))) BETWEEN (((rt0.c1) NOT NULL)) AND (vt1.c0))) ORDER BY (- (NULL)) ASC, rt0.c5;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)&(0.24138218907207143))) BETWEEN (((rt0.c1) NOT NULL)) AND (vt1.c0))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((CAST(vt0.c0 AS BLOB)) BETWEEN (((((((((NULL)OR(t0.c71)))AND(t0.c71)))OR(rt0.c1)))AND(rt0.c0))) AND ((- (rt0.c2)))) CROSS JOIN vt0 ON CASE WHEN ABS(rt0.c1) THEN ((vt1.c0) IS FALSE) ELSE ((rt0.c2) BETWEEN (t0.c35) AND (rt0.c5)) END FULL OUTER JOIN rt0 ON (- (rt0.c1)) ORDER BY (- (NULL)) ASC, rt0.c5);
SELECT ALL * FROM t0 WHERE (json_remove((+ (t0.c71)), CASE t0.c71  WHEN t0.c35 THEN t0.c71 ELSE t0.c35 END));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((+ (t0.c71)), CASE t0.c71  WHEN t0.c35 THEN t0.c71 ELSE t0.c35 END)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (json_remove((+ (t0.c71)), CASE t0.c71  WHEN t0.c35 THEN t0.c71 ELSE t0.c35 END));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((+ (t0.c71)), CASE t0.c71  WHEN t0.c35 THEN t0.c71 ELSE t0.c35 END)) IS TRUE)  as count FROM t0);
SELECT * FROM vt0, rt0 WHERE (SQLITE_COMPILEOPTION_USED(rt0.c2) COLLATE RTRIM) ORDER BY ((((rt0.c2))==((rt0.c4))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(rt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2))=((rt0.c4))) IN ()));
SELECT * FROM vt0, rt0 WHERE (SQLITE_COMPILEOPTION_USED(rt0.c2) COLLATE RTRIM) ORDER BY ((((rt0.c2))==((rt0.c4))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(rt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2))=((rt0.c4))) IN ()));
SELECT * FROM vt0, rt0 WHERE (SQLITE_COMPILEOPTION_USED(rt0.c2) COLLATE RTRIM) ORDER BY ((((rt0.c2))==((rt0.c4))) IN ());
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (UNLIKELY(CAST(rt0.c5 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CAST(rt0.c5 AS INTEGER))) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (UNLIKELY(CAST(rt0.c5 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CAST(rt0.c5 AS INTEGER))) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (UNLIKELY(CAST(rt0.c5 AS INTEGER)));
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE (NULL) ORDER BY ((1.329573836E9) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY ((1.329573836E9) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE (NULL) ORDER BY ((1.329573836E9) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY ((1.329573836E9) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE (NULL) ORDER BY ((1.329573836E9) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (CASE ((t0.c71) NOT BETWEEN (rt0.c1) AND (t0.c71))  WHEN (((rt0.c0)) NOT BETWEEN ((t0.c71)) AND ((vt1.c0))) THEN rt0.c5 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c71) NOT BETWEEN (rt0.c1) AND (t0.c71))  WHEN (((rt0.c0)) NOT BETWEEN ((t0.c71)) AND ((vt1.c0))) THEN rt0.c5 COLLATE BINARY END) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (CASE ((t0.c71) NOT BETWEEN (rt0.c1) AND (t0.c71))  WHEN (((rt0.c0)) NOT BETWEEN ((t0.c71)) AND ((vt1.c0))) THEN rt0.c5 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c71) NOT BETWEEN (rt0.c1) AND (t0.c71))  WHEN (((rt0.c0)) NOT BETWEEN ((t0.c71)) AND ((vt1.c0))) THEN rt0.c5 COLLATE BINARY END) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (CASE ((t0.c71) NOT BETWEEN (rt0.c1) AND (t0.c71))  WHEN (((rt0.c0)) NOT BETWEEN ((t0.c71)) AND ((vt1.c0))) THEN rt0.c5 COLLATE BINARY END);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE x''  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c71)) THEN CAST(t0.c35 AS NUMERIC) ELSE (((t0.c71))=((t0.c35))) END) ORDER BY ((((vt0.c0)OR(t0.c71)))+(((NULL)LIKE(t0.c35))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c71)) THEN CAST(t0.c35 AS NUMERIC) ELSE (((t0.c71))==((t0.c35))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)OR(t0.c71)))+(((NULL)LIKE(t0.c35))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE x''  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c71)) THEN CAST(t0.c35 AS NUMERIC) ELSE (((t0.c71))=((t0.c35))) END) ORDER BY ((((vt0.c0)OR(t0.c71)))+(((NULL)LIKE(t0.c35))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c71)) THEN CAST(t0.c35 AS NUMERIC) ELSE (((t0.c71))==((t0.c35))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)OR(t0.c71)))+(((NULL)LIKE(t0.c35))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE x''  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c71)) THEN CAST(t0.c35 AS NUMERIC) ELSE (((t0.c71))=((t0.c35))) END) ORDER BY ((((vt0.c0)OR(t0.c71)))+(((NULL)LIKE(t0.c35))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY (((('1966551941')|(vt1.c0)))*((x'' IN (vt1.c0, vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 ORDER BY (((('1966551941')|(vt1.c0)))*((x'' IN (vt1.c0, vt1.c0)))) DESC);
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY (((('1966551941')|(vt1.c0)))*((x'' IN (vt1.c0, vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 ORDER BY (((('1966551941')|(vt1.c0)))*((x'' IN (vt1.c0, vt1.c0)))) DESC);
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY (((('1966551941')|(vt1.c0)))*((x'' IN (vt1.c0, vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (((vt1.c0)!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (((vt1.c0)!=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (((vt1.c0)!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (((vt1.c0)!=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (((vt1.c0)!=(vt1.c0)))));
SELECT * FROM t0, rt0, vt1 WHERE (((('1555816586')) BETWEEN ((vt1.c0)) AND ((rt0.c0))) COLLATE RTRIM) ORDER BY ((CAST(t0.c71 AS BLOB)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((('1555816586')) BETWEEN ((vt1.c0)) AND ((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((CAST(t0.c71 AS BLOB)) NOT NULL) DESC);
SELECT * FROM t0, rt0, vt1 WHERE (((('1555816586')) BETWEEN ((vt1.c0)) AND ((rt0.c0))) COLLATE RTRIM) ORDER BY ((CAST(t0.c71 AS BLOB)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((('1555816586')) BETWEEN ((vt1.c0)) AND ((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((CAST(t0.c71 AS BLOB)) NOT NULL) DESC);
SELECT * FROM t0, rt0, vt1 WHERE (((('1555816586')) BETWEEN ((vt1.c0)) AND ((rt0.c0))) COLLATE RTRIM) ORDER BY ((CAST(t0.c71 AS BLOB)) NOT NULL) DESC;
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE ((NOT (((x'') ISNULL)))) ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (rt0.c1) AND (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((x'') ISNULL)))) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (rt0.c1) AND (rt0.c1))  NULLS FIRST);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE ((NOT (((x'') ISNULL)))) ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (rt0.c1) AND (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((x'') ISNULL)))) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (rt0.c1) AND (rt0.c1))  NULLS FIRST);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE ((NOT (((x'') ISNULL)))) ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (rt0.c1) AND (rt0.c1))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((t0.c35)) BETWEEN ((((t0.c35)AND(vt1.c0)))) AND ((((vt1.c0)GLOB(vt1.c0))))) WHERE (CAST(((((t0.c35)OR(vt1.c0)))AND(t0.c71)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c35)OR(vt1.c0)))AND(t0.c71)) AS NUMERIC)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((t0.c35)) BETWEEN ((((t0.c35)AND(vt1.c0)))) AND ((((vt1.c0)GLOB(vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((t0.c35)) BETWEEN ((((t0.c35)AND(vt1.c0)))) AND ((((vt1.c0)GLOB(vt1.c0))))) WHERE (CAST(((((t0.c35)OR(vt1.c0)))AND(t0.c71)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c35)OR(vt1.c0)))AND(t0.c71)) AS NUMERIC)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((t0.c35)) BETWEEN ((((t0.c35)AND(vt1.c0)))) AND ((((vt1.c0)GLOB(vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((t0.c35)) BETWEEN ((((t0.c35)AND(vt1.c0)))) AND ((((vt1.c0)GLOB(vt1.c0))))) WHERE (CAST(((((t0.c35)OR(vt1.c0)))AND(t0.c71)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT));
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE ((((((((t0.c35)OR(vt0.c0)))OR(t0.c71))))>((((t0.c35) BETWEEN ('~') AND (t0.c71)))))) ORDER BY ((((CAST(vt0.c0 AS TEXT))AND(CAST(vt1.c0 AS TEXT))))AND((vt0.c0 IN (t0.c35)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c35)OR(vt0.c0)))OR(t0.c71))))>((((t0.c35) BETWEEN ('~') AND (t0.c71)))))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1 ORDER BY ((((CAST(vt0.c0 AS TEXT))AND(CAST(vt1.c0 AS TEXT))))AND((vt0.c0 IN (t0.c35)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE ((((((((t0.c35)OR(vt0.c0)))OR(t0.c71))))>((((t0.c35) BETWEEN ('~') AND (t0.c71)))))) ORDER BY ((((CAST(vt0.c0 AS TEXT))AND(CAST(vt1.c0 AS TEXT))))AND((vt0.c0 IN (t0.c35)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c35)OR(vt0.c0)))OR(t0.c71))))>((((t0.c35) BETWEEN ('~') AND (t0.c71)))))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1 ORDER BY ((((CAST(vt0.c0 AS TEXT))AND(CAST(vt1.c0 AS TEXT))))AND((vt0.c0 IN (t0.c35)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE ((((((((t0.c35)OR(vt0.c0)))OR(t0.c71))))>((((t0.c35) BETWEEN ('~') AND (t0.c71)))))) ORDER BY ((((CAST(vt0.c0 AS TEXT))AND(CAST(vt1.c0 AS TEXT))))AND((vt0.c0 IN (t0.c35)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 CROSS JOIN t0 ON ((x'') ISNULL) WHERE (CAST(((rt0.c0)%(vt1.c0)) AS TEXT)) ORDER BY CASE WHEN ((rt0.c3)LIKE(t0.c35)) THEN t0.c35 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)%(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, rt0, vt0 CROSS JOIN t0 ON ((x'') ISNULL) ORDER BY CASE WHEN ((rt0.c3)LIKE(t0.c35)) THEN t0.c35 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 CROSS JOIN t0 ON ((x'') ISNULL) WHERE (CAST(((rt0.c0)%(vt1.c0)) AS TEXT)) ORDER BY CASE WHEN ((rt0.c3)LIKE(t0.c35)) THEN t0.c35 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)%(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, rt0, vt0 CROSS JOIN t0 ON ((x'') ISNULL) ORDER BY CASE WHEN ((rt0.c3)LIKE(t0.c35)) THEN t0.c35 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 CROSS JOIN t0 ON ((x'') ISNULL) WHERE (CAST(((rt0.c0)%(vt1.c0)) AS TEXT)) ORDER BY CASE WHEN ((rt0.c3)LIKE(t0.c35)) THEN t0.c35 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON NULL WHERE (((((((vt0.c0)||(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((NOT (vt1.c0))))) ORDER BY x'' ASC, vt1.c0;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)||(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON NULL ORDER BY x'' ASC, vt1.c0);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON NULL WHERE (((((((vt0.c0)||(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((NOT (vt1.c0))))) ORDER BY x'' ASC, vt1.c0;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)||(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON NULL ORDER BY x'' ASC, vt1.c0);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON NULL WHERE (((((((vt0.c0)||(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND((NOT (vt1.c0))))) ORDER BY x'' ASC, vt1.c0;
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN ((('-62846517'))<>((vt0.c0))) THEN t0.c35 COLLATE BINARY ELSE CHAR(t0.c71) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((('-62846517'))<>((vt0.c0))) THEN t0.c35 COLLATE BINARY ELSE CHAR(t0.c71) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN ((('-62846517'))<>((vt0.c0))) THEN t0.c35 COLLATE BINARY ELSE CHAR(t0.c71) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((('-62846517'))<>((vt0.c0))) THEN t0.c35 COLLATE BINARY ELSE CHAR(t0.c71) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN ((('-62846517'))<>((vt0.c0))) THEN t0.c35 COLLATE BINARY ELSE CHAR(t0.c71) END);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON vt1.c0 CROSS JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (CAST(0.2302912655178445 AS BLOB)) AND ((~ (x'a982')))) WHERE ((((((vt1.c0)) NOT BETWEEN (('-444630953')) AND ((rt0.c3)))) NOT BETWEEN (t0.c71) AND ((~ (t0.c35))))) ORDER BY ((NOT (t0.c71)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN (('-444630953')) AND ((rt0.c3)))) NOT BETWEEN (t0.c71) AND ((~ (t0.c35))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON vt1.c0 CROSS JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (CAST(0.2302912655178445 AS BLOB)) AND ((~ (x'a982')))) ORDER BY ((NOT (t0.c71)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON vt1.c0 CROSS JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (CAST(0.2302912655178445 AS BLOB)) AND ((~ (x'a982')))) WHERE ((((((vt1.c0)) NOT BETWEEN (('-444630953')) AND ((rt0.c3)))) NOT BETWEEN (t0.c71) AND ((~ (t0.c35))))) ORDER BY ((NOT (t0.c71)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN (('-444630953')) AND ((rt0.c3)))) NOT BETWEEN (t0.c71) AND ((~ (t0.c35))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON vt1.c0 CROSS JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (CAST(0.2302912655178445 AS BLOB)) AND ((~ (x'a982')))) ORDER BY ((NOT (t0.c71)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON vt1.c0 CROSS JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (CAST(0.2302912655178445 AS BLOB)) AND ((~ (x'a982')))) WHERE ((((((vt1.c0)) NOT BETWEEN (('-444630953')) AND ((rt0.c3)))) NOT BETWEEN (t0.c71) AND ((~ (t0.c35))))) ORDER BY ((NOT (t0.c71)) IN ()) ASC;
SELECT * FROM rt0, t0 WHERE (((((((((((rt0.c5)IS NOT('0.7077146604478716')))OR('1657246241')))OR((('1230030119')|(t0.c35)))))AND(((rt0.c4)-(rt0.c5)))))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c5)IS NOT('0.7077146604478716')))OR('1657246241')))OR((('1230030119')|(t0.c35)))))AND(((rt0.c4)-(rt0.c5)))))AND(rt0.c2))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((((((((rt0.c5)IS NOT('0.7077146604478716')))OR('1657246241')))OR((('1230030119')|(t0.c35)))))AND(((rt0.c4)-(rt0.c5)))))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c5)IS NOT('0.7077146604478716')))OR('1657246241')))OR((('1230030119')|(t0.c35)))))AND(((rt0.c4)-(rt0.c5)))))AND(rt0.c2))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((((((((rt0.c5)IS NOT('0.7077146604478716')))OR('1657246241')))OR((('1230030119')|(t0.c35)))))AND(((rt0.c4)-(rt0.c5)))))AND(rt0.c2)));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c4)<>(0X7e9c55ba)))<((((rt0.c4))<((rt0.c4)))))) ORDER BY -136653621, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR('')))OR(rt0.c5)), rt0.c1, (NOT (rt0.c5)))) AND ((((rt0.c1)||(rt0.c0)), rt0.c0, ((rt0.c2)%(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)<>(0x7e9c55ba)))<((((rt0.c4))<((rt0.c4)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY -136653621, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR('')))OR(rt0.c5)), rt0.c1, (NOT (rt0.c5)))) AND ((((rt0.c1)||(rt0.c0)), rt0.c0, ((rt0.c2)%(rt0.c1))))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c4)<>(0X7e9c55ba)))<((((rt0.c4))<((rt0.c4)))))) ORDER BY -136653621, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR('')))OR(rt0.c5)), rt0.c1, (NOT (rt0.c5)))) AND ((((rt0.c1)||(rt0.c0)), rt0.c0, ((rt0.c2)%(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)<>(0x7e9c55ba)))<((((rt0.c4))<((rt0.c4)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY -136653621, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR('')))OR(rt0.c5)), rt0.c1, (NOT (rt0.c5)))) AND ((((rt0.c1)||(rt0.c0)), rt0.c0, ((rt0.c2)%(rt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c5 COLLATE BINARY)AND((rt0.c5 IN ()))))AND(((rt0.c2)||(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5 COLLATE BINARY)AND((rt0.c5 IN ()))))AND(((rt0.c2)||(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c5 COLLATE BINARY)AND((rt0.c5 IN ()))))AND(((rt0.c2)||(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5 COLLATE BINARY)AND((rt0.c5 IN ()))))AND(((rt0.c2)||(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c5 COLLATE BINARY)AND((rt0.c5 IN ()))))AND(((rt0.c2)||(rt0.c0)))));
SELECT ALL * FROM vt0 WHERE (CAST(1172906160 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(1172906160 AS INTEGER)) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE (CAST(1172906160 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(1172906160 AS INTEGER)) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE (CAST(1172906160 AS INTEGER));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c35);
SELECT SUM(count) FROM (SELECT ALL ((t0.c35) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c35);
SELECT SUM(count) FROM (SELECT ALL ((t0.c35) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c35);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (x'181b' COLLATE RTRIM COLLATE BINARY) ORDER BY ((((t0.c35)&(t0.c35)))/(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((x'181b' COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((t0.c35)&(t0.c35)))/(CAST(vt1.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (x'181b' COLLATE RTRIM COLLATE BINARY) ORDER BY ((((t0.c35)&(t0.c35)))/(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((x'181b' COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((t0.c35)&(t0.c35)))/(CAST(vt1.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (x'181b' COLLATE RTRIM COLLATE BINARY) ORDER BY ((((t0.c35)&(t0.c35)))/(CAST(vt1.c0 AS TEXT)));
SELECT ALL * FROM rt0, vt1 WHERE ((rt0.c5 IN ())) ORDER BY (((rt0.c3)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((UPPER(vt1.c0))))  NULLS FIRST, ((((vt1.c0)AND(rt0.c0)))OR(rt0.c4)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c5 IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((UPPER(vt1.c0))))  NULLS FIRST, ((((vt1.c0)AND(rt0.c0)))OR(rt0.c4)) COLLATE BINARY ASC);
SELECT ALL * FROM rt0, vt1 WHERE ((rt0.c5 IN ())) ORDER BY (((rt0.c3)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((UPPER(vt1.c0))))  NULLS FIRST, ((((vt1.c0)AND(rt0.c0)))OR(rt0.c4)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c5 IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((UPPER(vt1.c0))))  NULLS FIRST, ((((vt1.c0)AND(rt0.c0)))OR(rt0.c4)) COLLATE BINARY ASC);
SELECT ALL * FROM rt0, vt1 WHERE ((rt0.c5 IN ())) ORDER BY (((rt0.c3)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((UPPER(vt1.c0))))  NULLS FIRST, ((((vt1.c0)AND(rt0.c0)))OR(rt0.c4)) COLLATE BINARY ASC;
SELECT COUNT(*) FROM t0, vt1 WHERE (((HEX(vt1.c0))==(CAST(t0.c71 AS NUMERIC)))) ORDER BY x'' ASC, CAST(vt1.c0 AS BLOB) COLLATE BINARY DESC, HEX(DISTINCT t0.c71 COLLATE RTRIM) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(vt1.c0))=(CAST(t0.c71 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1 ORDER BY x'' ASC, CAST(vt1.c0 AS BLOB) COLLATE BINARY DESC, HEX(DISTINCT t0.c71 COLLATE RTRIM) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((HEX(vt1.c0))==(CAST(t0.c71 AS NUMERIC)))) ORDER BY x'' ASC, CAST(vt1.c0 AS BLOB) COLLATE BINARY DESC, HEX(DISTINCT t0.c71 COLLATE RTRIM) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(vt1.c0))=(CAST(t0.c71 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1 ORDER BY x'' ASC, CAST(vt1.c0 AS BLOB) COLLATE BINARY DESC, HEX(DISTINCT t0.c71 COLLATE RTRIM) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((HEX(vt1.c0))==(CAST(t0.c71 AS NUMERIC)))) ORDER BY x'' ASC, CAST(vt1.c0 AS BLOB) COLLATE BINARY DESC, HEX(DISTINCT t0.c71 COLLATE RTRIM) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((0xffffffffd57daac0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((0Xffffffffd57daac0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((0xffffffffd57daac0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((0Xffffffffd57daac0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((0xffffffffd57daac0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))*(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY ((((((((CASE 0.3464449459940757  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.6049968237519305 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(NULL)))AND('|n.Infinity-qk')))OR(CAST(vt1.c0 AS BLOB))))OR('}Z'));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))*(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((CASE 0.3464449459940757  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.6049968237519305 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(NULL)))AND('|n.Infinity-qk')))OR(CAST(vt1.c0 AS BLOB))))OR('}Z')));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))*(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY ((((((((CASE 0.3464449459940757  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.6049968237519305 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(NULL)))AND('|n.Infinity-qk')))OR(CAST(vt1.c0 AS BLOB))))OR('}Z'));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))*(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((CASE 0.3464449459940757  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.6049968237519305 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(NULL)))AND('|n.Infinity-qk')))OR(CAST(vt1.c0 AS BLOB))))OR('}Z')));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))*(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY ((((((((CASE 0.3464449459940757  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.6049968237519305 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(NULL)))AND('|n.Infinity-qk')))OR(CAST(vt1.c0 AS BLOB))))OR('}Z'));
SELECT ALL * FROM t0, vt0 WHERE (RTRIM((NOT (t0.c35)))) ORDER BY ((CAST(t0.c35 AS NUMERIC)) BETWEEN (CASE WHEN 1916387455 THEN t0.c35 ELSE t0.c71 END) AND (CAST(t0.c35 AS REAL)));
SELECT SUM(count) FROM (SELECT ((RTRIM((NOT (t0.c35)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c35 AS NUMERIC)) BETWEEN (CASE WHEN 1916387455 THEN t0.c35 ELSE t0.c71 END) AND (CAST(t0.c35 AS REAL))));
SELECT ALL * FROM t0, vt0 WHERE (RTRIM((NOT (t0.c35)))) ORDER BY ((CAST(t0.c35 AS NUMERIC)) BETWEEN (CASE WHEN 1916387455 THEN t0.c35 ELSE t0.c71 END) AND (CAST(t0.c35 AS REAL)));
SELECT SUM(count) FROM (SELECT ((RTRIM((NOT (t0.c35)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c35 AS NUMERIC)) BETWEEN (CASE WHEN 1916387455 THEN t0.c35 ELSE t0.c71 END) AND (CAST(t0.c35 AS REAL))));
SELECT ALL * FROM t0, vt0 WHERE (RTRIM((NOT (t0.c35)))) ORDER BY ((CAST(t0.c35 AS NUMERIC)) BETWEEN (CASE WHEN 1916387455 THEN t0.c35 ELSE t0.c71 END) AND (CAST(t0.c35 AS REAL)));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((((((t0.c35) NOTNULL))AND(rt0.c4)))OR(CAST(rt0.c1 AS TEXT)))) ORDER BY ((rt0.c0)/(t0.c35)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c35) NOTNULL))AND(rt0.c4)))OR(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((rt0.c0)/(t0.c35)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((((((t0.c35) NOTNULL))AND(rt0.c4)))OR(CAST(rt0.c1 AS TEXT)))) ORDER BY ((rt0.c0)/(t0.c35)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c35) NOTNULL))AND(rt0.c4)))OR(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((rt0.c0)/(t0.c35)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((((((t0.c35) NOTNULL))AND(rt0.c4)))OR(CAST(rt0.c1 AS TEXT)))) ORDER BY ((rt0.c0)/(t0.c35)) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (LIKELIHOOD((x'855e8b01' IN ()), 0.2090935726420996)) ORDER BY ABS(DISTINCT '-2044704438') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((x'855e8b01' IN ()), 0.2090935726420996)) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ABS(DISTINCT '-2044704438') ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (LIKELIHOOD((x'855e8b01' IN ()), 0.2090935726420996)) ORDER BY ABS(DISTINCT '-2044704438') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((x'855e8b01' IN ()), 0.2090935726420996)) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ABS(DISTINCT '-2044704438') ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (LIKELIHOOD((x'855e8b01' IN ()), 0.2090935726420996)) ORDER BY ABS(DISTINCT '-2044704438') ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0)) BETWEEN (((((rt0.c0, rt0.c3, rt0.c3))<((rt0.c5, rt0.c2, rt0.c2))))) AND ((TYPEOF(DISTINCT rt0.c2))))) ORDER BY (((CAST(rt0.c0 AS INTEGER)))<>((((rt0.c5) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((((rt0.c0, rt0.c3, rt0.c3))<((rt0.c5, rt0.c2, rt0.c2))))) AND ((TYPEOF(DISTINCT rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((CAST(rt0.c0 AS INTEGER)))!=((((rt0.c5) ISNULL)))) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0)) BETWEEN (((((rt0.c0, rt0.c3, rt0.c3))<((rt0.c5, rt0.c2, rt0.c2))))) AND ((TYPEOF(DISTINCT rt0.c2))))) ORDER BY (((CAST(rt0.c0 AS INTEGER)))<>((((rt0.c5) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((((rt0.c0, rt0.c3, rt0.c3))<((rt0.c5, rt0.c2, rt0.c2))))) AND ((TYPEOF(DISTINCT rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((CAST(rt0.c0 AS INTEGER)))!=((((rt0.c5) ISNULL)))) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0)) BETWEEN (((((rt0.c0, rt0.c3, rt0.c3))<((rt0.c5, rt0.c2, rt0.c2))))) AND ((TYPEOF(DISTINCT rt0.c2))))) ORDER BY (((CAST(rt0.c0 AS INTEGER)))<>((((rt0.c5) ISNULL)))) ASC;
SELECT * FROM vt1 INNER JOIN t0 ON (('Qk.vW3') IS TRUE) WHERE ((('-181276561')LIKE(((-1.20888905E9) IS FALSE)))) ORDER BY CASE ((t0.c35) IS FALSE)  WHEN (NOT (t0.c71)) THEN CASE WHEN vt1.c0 THEN t0.c71 WHEN t0.c35 THEN t0.c71 WHEN t0.c35 THEN '-59565346' WHEN t0.c71 THEN t0.c35 WHEN vt1.c0 THEN vt1.c0 END END;
SELECT SUM(count) FROM (SELECT ALL (((('-181276561')LIKE(((-1.20888905E9) IS FALSE)))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (('Qk.vW3') IS TRUE) ORDER BY CASE ((t0.c35) IS FALSE)  WHEN (NOT (t0.c71)) THEN CASE WHEN vt1.c0 THEN t0.c71 WHEN t0.c35 THEN t0.c71 WHEN t0.c35 THEN '-59565346' WHEN t0.c71 THEN t0.c35 WHEN vt1.c0 THEN vt1.c0 END END);
SELECT * FROM vt1 INNER JOIN t0 ON (('Qk.vW3') IS TRUE) WHERE ((('-181276561')LIKE(((-1.20888905E9) IS FALSE)))) ORDER BY CASE ((t0.c35) IS FALSE)  WHEN (NOT (t0.c71)) THEN CASE WHEN vt1.c0 THEN t0.c71 WHEN t0.c35 THEN t0.c71 WHEN t0.c35 THEN '-59565346' WHEN t0.c71 THEN t0.c35 WHEN vt1.c0 THEN vt1.c0 END END;
SELECT SUM(count) FROM (SELECT ALL (((('-181276561')LIKE(((-1.20888905E9) IS FALSE)))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (('Qk.vW3') IS TRUE) ORDER BY CASE ((t0.c35) IS FALSE)  WHEN (NOT (t0.c71)) THEN CASE WHEN vt1.c0 THEN t0.c71 WHEN t0.c35 THEN t0.c71 WHEN t0.c35 THEN '-59565346' WHEN t0.c71 THEN t0.c35 WHEN vt1.c0 THEN vt1.c0 END END);
SELECT * FROM vt1 INNER JOIN t0 ON (('Qk.vW3') IS TRUE) WHERE ((('-181276561')LIKE(((-1.20888905E9) IS FALSE)))) ORDER BY CASE ((t0.c35) IS FALSE)  WHEN (NOT (t0.c71)) THEN CASE WHEN vt1.c0 THEN t0.c71 WHEN t0.c35 THEN t0.c71 WHEN t0.c35 THEN '-59565346' WHEN t0.c71 THEN t0.c35 WHEN vt1.c0 THEN vt1.c0 END END;
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0, '1477284620', '-1138922324')) NOT BETWEEN ((rt0.c4, rt0.c2, t0.c35)) AND ((rt0.c0, vt0.c0, vt1.c0))) IN ((rt0.c0 IN ()))) INNER JOIN vt0 ON ((rt0.c5)<=(t0.c71)) COLLATE RTRIM COLLATE RTRIM WHERE (((rt0.c3 COLLATE NOCASE)<<(((rt0.c5) NOT BETWEEN (t0.c71) AND (t0.c71)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE)<<(((rt0.c5) NOT BETWEEN (t0.c71) AND (t0.c71))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0, '1477284620', '-1138922324')) NOT BETWEEN ((rt0.c4, rt0.c2, t0.c35)) AND ((rt0.c0, vt0.c0, vt1.c0))) IN ((rt0.c0 IN ()))) INNER JOIN vt0 ON ((rt0.c5)<=(t0.c71)) COLLATE RTRIM COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0, '1477284620', '-1138922324')) NOT BETWEEN ((rt0.c4, rt0.c2, t0.c35)) AND ((rt0.c0, vt0.c0, vt1.c0))) IN ((rt0.c0 IN ()))) INNER JOIN vt0 ON ((rt0.c5)<=(t0.c71)) COLLATE RTRIM COLLATE RTRIM WHERE (((rt0.c3 COLLATE NOCASE)<<(((rt0.c5) NOT BETWEEN (t0.c71) AND (t0.c71)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE)<<(((rt0.c5) NOT BETWEEN (t0.c71) AND (t0.c71))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0, '1477284620', '-1138922324')) NOT BETWEEN ((rt0.c4, rt0.c2, t0.c35)) AND ((rt0.c0, vt0.c0, vt1.c0))) IN ((rt0.c0 IN ()))) INNER JOIN vt0 ON ((rt0.c5)<=(t0.c71)) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((NOT (rt0.c4)))>=(ABS(rt0.c4)))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c4)))>=(ABS(rt0.c4)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((NOT (rt0.c4)))>=(ABS(rt0.c4)))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c4)))>=(ABS(rt0.c4)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((NOT (rt0.c4)))>=(ABS(rt0.c4)))) ORDER BY rt0.c1;
SELECT * FROM vt0, rt0 WHERE ((JULIANDAY(-1048766481, rt0.c0, rt0.c1) IN ())) ORDER BY (NOT (vt0.c0)) ASC  NULLS FIRST, (NOT (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c5)))) ASC;
SELECT SUM(count) FROM (SELECT (((JULIANDAY(-1048766481, rt0.c0, rt0.c1) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (vt0.c0)) ASC  NULLS FIRST, (NOT (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c5)))) ASC);
SELECT * FROM vt0, rt0 WHERE ((JULIANDAY(-1048766481, rt0.c0, rt0.c1) IN ())) ORDER BY (NOT (vt0.c0)) ASC  NULLS FIRST, (NOT (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c5)))) ASC;
SELECT SUM(count) FROM (SELECT (((JULIANDAY(-1048766481, rt0.c0, rt0.c1) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (vt0.c0)) ASC  NULLS FIRST, (NOT (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c5)))) ASC);
SELECT * FROM vt0, rt0 WHERE ((JULIANDAY(-1048766481, rt0.c0, rt0.c1) IN ())) ORDER BY (NOT (vt0.c0)) ASC  NULLS FIRST, (NOT (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c5)))) ASC;
SELECT * FROM vt0, t0 WHERE (CAST((('i v?%6燸}e') BETWEEN (vt0.c0) AND (t0.c35)) AS INTEGER)) ORDER BY CASE ((vt0.c0)&(t0.c71))  WHEN ((vt0.c0)=(t0.c71)) THEN ((t0.c71) NOTNULL) WHEN ((vt0.c0) NOTNULL) THEN (+ (vt0.c0)) WHEN ((t0.c35) NOTNULL) THEN ((t0.c35)||(t0.c35)) ELSE ((t0.c71)%(t0.c35)) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST((('i v?%6燸}e') BETWEEN (vt0.c0) AND (t0.c35)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE ((vt0.c0)&(t0.c71))  WHEN ((vt0.c0)=(t0.c71)) THEN ((t0.c71) NOTNULL) WHEN ((vt0.c0) NOTNULL) THEN (+ (vt0.c0)) WHEN ((t0.c35) NOTNULL) THEN ((t0.c35)||(t0.c35)) ELSE ((t0.c71)%(t0.c35)) END ASC);
SELECT * FROM vt0, t0 WHERE (CAST((('i v?%6燸}e') BETWEEN (vt0.c0) AND (t0.c35)) AS INTEGER)) ORDER BY CASE ((vt0.c0)&(t0.c71))  WHEN ((vt0.c0)=(t0.c71)) THEN ((t0.c71) NOTNULL) WHEN ((vt0.c0) NOTNULL) THEN (+ (vt0.c0)) WHEN ((t0.c35) NOTNULL) THEN ((t0.c35)||(t0.c35)) ELSE ((t0.c71)%(t0.c35)) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST((('i v?%6燸}e') BETWEEN (vt0.c0) AND (t0.c35)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE ((vt0.c0)&(t0.c71))  WHEN ((vt0.c0)=(t0.c71)) THEN ((t0.c71) NOTNULL) WHEN ((vt0.c0) NOTNULL) THEN (+ (vt0.c0)) WHEN ((t0.c35) NOTNULL) THEN ((t0.c35)||(t0.c35)) ELSE ((t0.c71)%(t0.c35)) END ASC);
SELECT * FROM vt0, t0 WHERE (CAST((('i v?%6燸}e') BETWEEN (vt0.c0) AND (t0.c35)) AS INTEGER)) ORDER BY CASE ((vt0.c0)&(t0.c71))  WHEN ((vt0.c0)=(t0.c71)) THEN ((t0.c71) NOTNULL) WHEN ((vt0.c0) NOTNULL) THEN (+ (vt0.c0)) WHEN ((t0.c35) NOTNULL) THEN ((t0.c35)||(t0.c35)) ELSE ((t0.c71)%(t0.c35)) END ASC;
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((- (vt0.c0))))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN ((vt0.c0)/(vt0.c0)) WHEN json_array_length('x䴇') THEN LOWER(vt0.c0) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0))<((vt0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN ((vt0.c0)/(vt0.c0)) WHEN json_array_length('x䴇') THEN LOWER(vt0.c0) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0))<((vt0.c0))) END  NULLS LAST);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((- (vt0.c0))))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN ((vt0.c0)/(vt0.c0)) WHEN json_array_length('x䴇') THEN LOWER(vt0.c0) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0))<((vt0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN ((vt0.c0)/(vt0.c0)) WHEN json_array_length('x䴇') THEN LOWER(vt0.c0) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0))<((vt0.c0))) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c35, x'', vt1.c0)) NOT BETWEEN ((CASE t0.c35  WHEN t0.c71 THEN 0.8932800235829531 ELSE vt0.c0 END, ((t0.c71)<=(t0.c35)), vt0.c0)) AND (((~ (vt1.c0)), CAST(t0.c71 AS BLOB), (vt0.c0 IN ()))))) ORDER BY (~ (((vt0.c0) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35, x'', vt1.c0)) NOT BETWEEN ((CASE t0.c35  WHEN t0.c71 THEN 0.8932800235829531 ELSE vt0.c0 END, ((t0.c71)<=(t0.c35)), vt0.c0)) AND (((~ (vt1.c0)), CAST(t0.c71 AS BLOB), (vt0.c0 IN ()))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (~ (((vt0.c0) IS FALSE))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c35, x'', vt1.c0)) NOT BETWEEN ((CASE t0.c35  WHEN t0.c71 THEN 0.8932800235829531 ELSE vt0.c0 END, ((t0.c71)<=(t0.c35)), vt0.c0)) AND (((~ (vt1.c0)), CAST(t0.c71 AS BLOB), (vt0.c0 IN ()))))) ORDER BY (~ (((vt0.c0) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35, x'', vt1.c0)) NOT BETWEEN ((CASE t0.c35  WHEN t0.c71 THEN 0.8932800235829531 ELSE vt0.c0 END, ((t0.c71)<=(t0.c35)), vt0.c0)) AND (((~ (vt1.c0)), CAST(t0.c71 AS BLOB), (vt0.c0 IN ()))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (~ (((vt0.c0) IS FALSE))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c35, x'', vt1.c0)) NOT BETWEEN ((CASE t0.c35  WHEN t0.c71 THEN 0.8932800235829531 ELSE vt0.c0 END, ((t0.c71)<=(t0.c35)), vt0.c0)) AND (((~ (vt1.c0)), CAST(t0.c71 AS BLOB), (vt0.c0 IN ()))))) ORDER BY (~ (((vt0.c0) IS FALSE))) ASC  NULLS LAST;
SELECT * FROM t0, rt0, vt1, vt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c4) AND (t0.c71)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (t0.c71)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT * FROM t0, rt0, vt1, vt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c4) AND (t0.c71)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (t0.c71)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT * FROM t0, rt0, vt1, vt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c4) AND (t0.c71)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON ((((((((((((((((rt0.c1)AND(rt0.c2)))OR(t0.c71)))OR((+ (rt0.c3)))))OR(((t0.c71)||(rt0.c5)))))OR(((((rt0.c2)AND(rt0.c5)))OR(t0.c35)))))OR((t0.c71 IN (vt1.c0, vt0.c0)))))OR((- (rt0.c5)))))OR((vt0.c0 IN (rt0.c2, t0.c71)))) INNER JOIN rt0 ON (t0.c35 COLLATE NOCASE IN (rt0.c4)) WHERE (rt0.c4) ORDER BY CASE WHEN ((rt0.c0)OR(rt0.c5)) THEN (((rt0.c5, rt0.c3, rt0.c3)) BETWEEN ((vt1.c0, rt0.c1, vt1.c0)) AND ((vt0.c0, vt0.c0, rt0.c3))) ELSE (rt0.c5 IN ()) END;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON ((((((((((((((((rt0.c1)AND(rt0.c2)))OR(t0.c71)))OR((+ (rt0.c3)))))OR(((t0.c71)||(rt0.c5)))))OR(((((rt0.c2)AND(rt0.c5)))OR(t0.c35)))))OR((t0.c71 IN (vt1.c0, vt0.c0)))))OR((- (rt0.c5)))))OR((vt0.c0 IN (rt0.c2, t0.c71)))) INNER JOIN rt0 ON (t0.c35 COLLATE NOCASE IN (rt0.c4)) ORDER BY CASE WHEN ((rt0.c0)OR(rt0.c5)) THEN (((rt0.c5, rt0.c3, rt0.c3)) BETWEEN ((vt1.c0, rt0.c1, vt1.c0)) AND ((vt0.c0, vt0.c0, rt0.c3))) ELSE (rt0.c5 IN ()) END);
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON ((((((((((((((((rt0.c1)AND(rt0.c2)))OR(t0.c71)))OR((+ (rt0.c3)))))OR(((t0.c71)||(rt0.c5)))))OR(((((rt0.c2)AND(rt0.c5)))OR(t0.c35)))))OR((t0.c71 IN (vt1.c0, vt0.c0)))))OR((- (rt0.c5)))))OR((vt0.c0 IN (rt0.c2, t0.c71)))) INNER JOIN rt0 ON (t0.c35 COLLATE NOCASE IN (rt0.c4)) WHERE (rt0.c4) ORDER BY CASE WHEN ((rt0.c0)OR(rt0.c5)) THEN (((rt0.c5, rt0.c3, rt0.c3)) BETWEEN ((vt1.c0, rt0.c1, vt1.c0)) AND ((vt0.c0, vt0.c0, rt0.c3))) ELSE (rt0.c5 IN ()) END;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON ((((((((((((((((rt0.c1)AND(rt0.c2)))OR(t0.c71)))OR((+ (rt0.c3)))))OR(((t0.c71)||(rt0.c5)))))OR(((((rt0.c2)AND(rt0.c5)))OR(t0.c35)))))OR((t0.c71 IN (vt1.c0, vt0.c0)))))OR((- (rt0.c5)))))OR((vt0.c0 IN (rt0.c2, t0.c71)))) INNER JOIN rt0 ON (t0.c35 COLLATE NOCASE IN (rt0.c4)) ORDER BY CASE WHEN ((rt0.c0)OR(rt0.c5)) THEN (((rt0.c5, rt0.c3, rt0.c3)) BETWEEN ((vt1.c0, rt0.c1, vt1.c0)) AND ((vt0.c0, vt0.c0, rt0.c3))) ELSE (rt0.c5 IN ()) END);
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON ((((((((((((((((rt0.c1)AND(rt0.c2)))OR(t0.c71)))OR((+ (rt0.c3)))))OR(((t0.c71)||(rt0.c5)))))OR(((((rt0.c2)AND(rt0.c5)))OR(t0.c35)))))OR((t0.c71 IN (vt1.c0, vt0.c0)))))OR((- (rt0.c5)))))OR((vt0.c0 IN (rt0.c2, t0.c71)))) INNER JOIN rt0 ON (t0.c35 COLLATE NOCASE IN (rt0.c4)) WHERE (rt0.c4) ORDER BY CASE WHEN ((rt0.c0)OR(rt0.c5)) THEN (((rt0.c5, rt0.c3, rt0.c3)) BETWEEN ((vt1.c0, rt0.c1, vt1.c0)) AND ((vt0.c0, vt0.c0, rt0.c3))) ELSE (rt0.c5 IN ()) END;
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT ALL * FROM rt0, vt0 WHERE ((+ (((rt0.c0)<(rt0.c4))))) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) NOTNULL) END;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)<(rt0.c4))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) NOTNULL) END);
SELECT ALL * FROM rt0, vt0 WHERE ((+ (((rt0.c0)<(rt0.c4))))) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) NOTNULL) END;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)<(rt0.c4))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) NOTNULL) END);
SELECT ALL * FROM rt0, vt0 WHERE ((+ (((rt0.c0)<(rt0.c4))))) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) NOTNULL) END;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((~ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((~ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((~ (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((rt0.c5) BETWEEN (rt0.c2) AND (vt0.c0)))>=(((rt0.c5)IS(rt0.c5))))) ORDER BY ((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c3)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c5) BETWEEN (rt0.c2) AND (vt0.c0)))>=(((rt0.c5)IS(rt0.c5))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c3)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((rt0.c5) BETWEEN (rt0.c2) AND (vt0.c0)))>=(((rt0.c5)IS(rt0.c5))))) ORDER BY ((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c3)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c5) BETWEEN (rt0.c2) AND (vt0.c0)))>=(((rt0.c5)IS(rt0.c5))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c3)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((rt0.c5) BETWEEN (rt0.c2) AND (vt0.c0)))>=(((rt0.c5)IS(rt0.c5))))) ORDER BY ((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c3)) COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM t0, rt0, vt0, vt1 WHERE ((~ (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT * FROM t0, rt0, vt0, vt1 WHERE ((~ (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT * FROM t0, rt0, vt0, vt1 WHERE ((~ (((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (-1058052021) ORDER BY ((SQLITE_SOURCE_ID())>>((((rt0.c4))>=((rt0.c5)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1058052021) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY ((SQLITE_SOURCE_ID())>>((((rt0.c4))>=((rt0.c5)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (-1058052021) ORDER BY ((SQLITE_SOURCE_ID())>>((((rt0.c4))>=((rt0.c5)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1058052021) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY ((SQLITE_SOURCE_ID())>>((((rt0.c4))>=((rt0.c5)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (-1058052021) ORDER BY ((SQLITE_SOURCE_ID())>>((((rt0.c4))>=((rt0.c5)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((vt1.c0)<('yz)k9l')) COLLATE RTRIM) ORDER BY ((CAST(rt0.c0 AS REAL)) BETWEEN (((rt0.c3)<>(rt0.c1))) AND ((rt0.c5 IN ()))) DESC  NULLS FIRST, ((rt0.c0)LIKE(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<('yz)k9l')) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((CAST(rt0.c0 AS REAL)) BETWEEN (((rt0.c3)!=(rt0.c1))) AND ((rt0.c5 IN ()))) DESC  NULLS FIRST, ((rt0.c0)LIKE(vt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((vt1.c0)<('yz)k9l')) COLLATE RTRIM) ORDER BY ((CAST(rt0.c0 AS REAL)) BETWEEN (((rt0.c3)<>(rt0.c1))) AND ((rt0.c5 IN ()))) DESC  NULLS FIRST, ((rt0.c0)LIKE(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<('yz)k9l')) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((CAST(rt0.c0 AS REAL)) BETWEEN (((rt0.c3)!=(rt0.c1))) AND ((rt0.c5 IN ()))) DESC  NULLS FIRST, ((rt0.c0)LIKE(vt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((vt1.c0)<('yz)k9l')) COLLATE RTRIM) ORDER BY ((CAST(rt0.c0 AS REAL)) BETWEEN (((rt0.c3)<>(rt0.c1))) AND ((rt0.c5 IN ()))) DESC  NULLS FIRST, ((rt0.c0)LIKE(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((t0.c71)>(rt0.c2))) NOT BETWEEN (CAST('1899355953' AS TEXT)) AND ((((rt0.c0))=((rt0.c3)))))) ORDER BY CAST((rt0.c1 IN ()) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c71)>(rt0.c2))) NOT BETWEEN (CAST('1899355953' AS TEXT)) AND ((((rt0.c0))==((rt0.c3)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CAST((rt0.c1 IN ()) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((t0.c71)>(rt0.c2))) NOT BETWEEN (CAST('1899355953' AS TEXT)) AND ((((rt0.c0))=((rt0.c3)))))) ORDER BY CAST((rt0.c1 IN ()) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c71)>(rt0.c2))) NOT BETWEEN (CAST('1899355953' AS TEXT)) AND ((((rt0.c0))==((rt0.c3)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CAST((rt0.c1 IN ()) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((t0.c71)>(rt0.c2))) NOT BETWEEN (CAST('1899355953' AS TEXT)) AND ((((rt0.c0))=((rt0.c3)))))) ORDER BY CAST((rt0.c1 IN ()) AS BLOB) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt1, vt0 WHERE (NULL) ORDER BY '' COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY '' COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (NULL) ORDER BY '' COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY '' COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (NULL) ORDER BY '' COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c3) NOT NULL) COLLATE RTRIM COLLATE BINARY) ORDER BY CASE rt0.c3  WHEN ((rt0.c4) NOT BETWEEN ('蚩BqP4s') AND (rt0.c3)) THEN ((((rt0.c5)AND(rt0.c0)))AND(rt0.c1)) WHEN ((rt0.c0)-(rt0.c3)) THEN (~ (rt0.c0)) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((((rt0.c1)AND('')))AND(0.31990827752643003)) END DESC  NULLS FIRST, rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOT NULL) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c3  WHEN ((rt0.c4) NOT BETWEEN ('蚩BqP4s') AND (rt0.c3)) THEN ((((rt0.c5)AND(rt0.c0)))AND(rt0.c1)) WHEN ((rt0.c0)-(rt0.c3)) THEN (~ (rt0.c0)) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((((rt0.c1)AND('')))AND(0.31990827752643003)) END DESC  NULLS FIRST, rt0.c3  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c3) NOT NULL) COLLATE RTRIM COLLATE BINARY) ORDER BY CASE rt0.c3  WHEN ((rt0.c4) NOT BETWEEN ('蚩BqP4s') AND (rt0.c3)) THEN ((((rt0.c5)AND(rt0.c0)))AND(rt0.c1)) WHEN ((rt0.c0)-(rt0.c3)) THEN (~ (rt0.c0)) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((((rt0.c1)AND('')))AND(0.31990827752643003)) END DESC  NULLS FIRST, rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOT NULL) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c3  WHEN ((rt0.c4) NOT BETWEEN ('蚩BqP4s') AND (rt0.c3)) THEN ((((rt0.c5)AND(rt0.c0)))AND(rt0.c1)) WHEN ((rt0.c0)-(rt0.c3)) THEN (~ (rt0.c0)) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((((rt0.c1)AND('')))AND(0.31990827752643003)) END DESC  NULLS FIRST, rt0.c3  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c3) NOT NULL) COLLATE RTRIM COLLATE BINARY) ORDER BY CASE rt0.c3  WHEN ((rt0.c4) NOT BETWEEN ('蚩BqP4s') AND (rt0.c3)) THEN ((((rt0.c5)AND(rt0.c0)))AND(rt0.c1)) WHEN ((rt0.c0)-(rt0.c3)) THEN (~ (rt0.c0)) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((((rt0.c1)AND('')))AND(0.31990827752643003)) END DESC  NULLS FIRST, rt0.c3  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c71 AS REAL)) ISNULL)) ORDER BY 1840161453 DESC  NULLS LAST, CAST(CAST(t0.c35 AS BLOB) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c71 AS REAL)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY 1840161453 DESC  NULLS LAST, CAST(CAST(t0.c35 AS BLOB) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c71 AS REAL)) ISNULL)) ORDER BY 1840161453 DESC  NULLS LAST, CAST(CAST(t0.c35 AS BLOB) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c71 AS REAL)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY 1840161453 DESC  NULLS LAST, CAST(CAST(t0.c35 AS BLOB) AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))%((((vt0.c0))==((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))%((((vt0.c0))==((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))%((((vt0.c0))==((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))%((((vt0.c0))==((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))%((((vt0.c0))==((vt0.c0))))));
SELECT * FROM t0, vt1, vt0 WHERE ((- (((t0.c35) NOT BETWEEN (t0.c35) AND (vt0.c0))))) ORDER BY ((vt1.c0 COLLATE NOCASE)<(CASE t0.c35  WHEN t0.c35 THEN t0.c35 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c71 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((- (((t0.c35) NOT BETWEEN (t0.c35) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((vt1.c0 COLLATE NOCASE)<(CASE t0.c35  WHEN t0.c35 THEN t0.c35 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c71 THEN vt1.c0 END)) DESC);
SELECT * FROM t0, vt1, vt0 WHERE ((- (((t0.c35) NOT BETWEEN (t0.c35) AND (vt0.c0))))) ORDER BY ((vt1.c0 COLLATE NOCASE)<(CASE t0.c35  WHEN t0.c35 THEN t0.c35 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c71 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((- (((t0.c35) NOT BETWEEN (t0.c35) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((vt1.c0 COLLATE NOCASE)<(CASE t0.c35  WHEN t0.c35 THEN t0.c35 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c71 THEN vt1.c0 END)) DESC);
SELECT * FROM t0, vt1, vt0 WHERE ((- (((t0.c35) NOT BETWEEN (t0.c35) AND (vt0.c0))))) ORDER BY ((vt1.c0 COLLATE NOCASE)<(CASE t0.c35  WHEN t0.c35 THEN t0.c35 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c71 THEN vt1.c0 END)) DESC;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN (- (rt0.c4)) THEN rt0.c4 COLLATE NOCASE END WHERE (((((((rt0.c5)OR(t0.c35)))OR(rt0.c0))) NOT BETWEEN (((t0.c35) IS TRUE)) AND (((rt0.c1)LIKE(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)OR(t0.c35)))OR(rt0.c0))) NOT BETWEEN (((t0.c35) IS TRUE)) AND (((rt0.c1)LIKE(rt0.c3))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN (- (rt0.c4)) THEN rt0.c4 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN (- (rt0.c4)) THEN rt0.c4 COLLATE NOCASE END WHERE (((((((rt0.c5)OR(t0.c35)))OR(rt0.c0))) NOT BETWEEN (((t0.c35) IS TRUE)) AND (((rt0.c1)LIKE(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)OR(t0.c35)))OR(rt0.c0))) NOT BETWEEN (((t0.c35) IS TRUE)) AND (((rt0.c1)LIKE(rt0.c3))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN (- (rt0.c4)) THEN rt0.c4 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN (- (rt0.c4)) THEN rt0.c4 COLLATE NOCASE END WHERE (((((((rt0.c5)OR(t0.c35)))OR(rt0.c0))) NOT BETWEEN (((t0.c35) IS TRUE)) AND (((rt0.c1)LIKE(rt0.c3)))));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)>=(vt1.c0))))==((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)>=(vt1.c0))))=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)>=(vt1.c0))))==((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)>=(vt1.c0))))=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)>=(vt1.c0))))==((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT COUNT(*) FROM vt1 WHERE (0.04248804253238436) ORDER BY TYPEOF(DISTINCT (+ (vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.04248804253238436) IS TRUE)  as count FROM vt1 ORDER BY TYPEOF(DISTINCT (+ (vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (0.04248804253238436) ORDER BY TYPEOF(DISTINCT (+ (vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.04248804253238436) IS TRUE)  as count FROM vt1 ORDER BY TYPEOF(DISTINCT (+ (vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (0.04248804253238436) ORDER BY TYPEOF(DISTINCT (+ (vt1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0, rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0)))<>(((x'') ISNULL))) WHERE (RTRIM(CASE vt1.c0  WHEN t0.c71 THEN rt0.c5 WHEN rt0.c3 THEN t0.c71 WHEN rt0.c5 THEN rt0.c4 ELSE vt0.c0 END)) ORDER BY '-1365537451' COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(CASE vt1.c0  WHEN t0.c71 THEN rt0.c5 WHEN rt0.c3 THEN t0.c71 WHEN rt0.c5 THEN rt0.c4 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt1, t0, rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0)))!=(((x'') ISNULL))) ORDER BY '-1365537451' COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0)))<>(((x'') ISNULL))) WHERE (RTRIM(CASE vt1.c0  WHEN t0.c71 THEN rt0.c5 WHEN rt0.c3 THEN t0.c71 WHEN rt0.c5 THEN rt0.c4 ELSE vt0.c0 END)) ORDER BY '-1365537451' COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(CASE vt1.c0  WHEN t0.c71 THEN rt0.c5 WHEN rt0.c3 THEN t0.c71 WHEN rt0.c5 THEN rt0.c4 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt1, t0, rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0)))!=(((x'') ISNULL))) ORDER BY '-1365537451' COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0)))<>(((x'') ISNULL))) WHERE (RTRIM(CASE vt1.c0  WHEN t0.c71 THEN rt0.c5 WHEN rt0.c3 THEN t0.c71 WHEN rt0.c5 THEN rt0.c4 ELSE vt0.c0 END)) ORDER BY '-1365537451' COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0))<>((vt0.c0))) AS TEXT)) ORDER BY (NOT ((((vt0.c0))>((x'')))));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<>((vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((((vt0.c0))>((x''))))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0))<>((vt0.c0))) AS TEXT)) ORDER BY (NOT ((((vt0.c0))>((x'')))));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<>((vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((((vt0.c0))>((x''))))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0))<>((vt0.c0))) AS TEXT)) ORDER BY (NOT ((((vt0.c0))>((x'')))));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt1.c0 COLLATE RTRIM)AND(t0.c71 COLLATE NOCASE)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY x''  NULLS LAST, (+ (0.3770171483785514))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE RTRIM)AND(t0.c71 COLLATE NOCASE)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY x''  NULLS LAST, (+ (0.3770171483785514))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt1.c0 COLLATE RTRIM)AND(t0.c71 COLLATE NOCASE)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY x''  NULLS LAST, (+ (0.3770171483785514))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE RTRIM)AND(t0.c71 COLLATE NOCASE)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY x''  NULLS LAST, (+ (0.3770171483785514))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt1.c0 COLLATE RTRIM)AND(t0.c71 COLLATE NOCASE)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY x''  NULLS LAST, (+ (0.3770171483785514))  NULLS FIRST;
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY '1296584021', ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY '1296584021', ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY '1296584021', ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY '1296584021', ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY '1296584021', ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT * FROM vt1 WHERE ((~ (((vt1.c0)>(0.13167312490755823))))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))!=((vt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)>(0.13167312490755823))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<>((vt1.c0 IN ()))) DESC);
SELECT * FROM vt1 WHERE ((~ (((vt1.c0)>(0.13167312490755823))))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))!=((vt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)>(0.13167312490755823))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<>((vt1.c0 IN ()))) DESC);
SELECT * FROM vt1 WHERE ((~ (((vt1.c0)>(0.13167312490755823))))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))!=((vt1.c0 IN ()))) DESC;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CASE LIKELIHOOD(DISTINCT rt0.c1, 0.6537527455717667)  WHEN ((rt0.c5)|(t0.c71)) THEN ABS(rt0.c3) END);
SELECT SUM(count) FROM (SELECT ((CASE LIKELIHOOD(DISTINCT rt0.c1, 0.6537527455717667)  WHEN ((rt0.c5)|(t0.c71)) THEN ABS(rt0.c3) END) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CASE LIKELIHOOD(DISTINCT rt0.c1, 0.6537527455717667)  WHEN ((rt0.c5)|(t0.c71)) THEN ABS(rt0.c3) END);
SELECT SUM(count) FROM (SELECT ((CASE LIKELIHOOD(DISTINCT rt0.c1, 0.6537527455717667)  WHEN ((rt0.c5)|(t0.c71)) THEN ABS(rt0.c3) END) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CASE LIKELIHOOD(DISTINCT rt0.c1, 0.6537527455717667)  WHEN ((rt0.c5)|(t0.c71)) THEN ABS(rt0.c3) END);
SELECT ALL * FROM rt0, t0, vt1 WHERE (((CASE t0.c71  WHEN t0.c71 THEN t0.c35 ELSE t0.c35 END) IS TRUE)) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE x''  WHEN rt0.c3 THEN t0.c71 ELSE rt0.c0 END)) AND ((((rt0.c5)<=(rt0.c5)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c71  WHEN t0.c71 THEN t0.c35 ELSE t0.c35 END) IS TRUE)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE x''  WHEN rt0.c3 THEN t0.c71 ELSE rt0.c0 END)) AND ((((rt0.c5)<=(rt0.c5)))))  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt1 WHERE (((CASE t0.c71  WHEN t0.c71 THEN t0.c35 ELSE t0.c35 END) IS TRUE)) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE x''  WHEN rt0.c3 THEN t0.c71 ELSE rt0.c0 END)) AND ((((rt0.c5)<=(rt0.c5)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c71  WHEN t0.c71 THEN t0.c35 ELSE t0.c35 END) IS TRUE)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE x''  WHEN rt0.c3 THEN t0.c71 ELSE rt0.c0 END)) AND ((((rt0.c5)<=(rt0.c5)))))  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt1 WHERE (((CASE t0.c71  WHEN t0.c71 THEN t0.c35 ELSE t0.c35 END) IS TRUE)) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE x''  WHEN rt0.c3 THEN t0.c71 ELSE rt0.c0 END)) AND ((((rt0.c5)<=(rt0.c5)))))  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c4) NOT BETWEEN (t0.c71) AND (rt0.c5)))=('1991371043')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT BETWEEN (t0.c71) AND (rt0.c5)))=('1991371043'))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c4) NOT BETWEEN (t0.c71) AND (rt0.c5)))=('1991371043')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT BETWEEN (t0.c71) AND (rt0.c5)))=('1991371043'))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c4) NOT BETWEEN (t0.c71) AND (rt0.c5)))=('1991371043')));
SELECT ALL COUNT(*) FROM vt1 WHERE ('0.3083014606299218');
SELECT SUM(count) FROM (SELECT ALL (('0.3083014606299218') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('0.3083014606299218');
SELECT SUM(count) FROM (SELECT ALL (('0.3083014606299218') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('0.3083014606299218');
SELECT COUNT(*) FROM rt0, t0 NOT INDEXED, vt0 NOT INDEXED FULL OUTER JOIN vt1 ON IFNULL(rt0.c0, rt0.c4) COLLATE BINARY WHERE (((rt0.c1)IS NOT(t0.c71)) COLLATE NOCASE) ORDER BY (((rt0.c3, rt0.c3, rt0.c3, vt1.c0, rt0.c3)) BETWEEN ((((rt0.c5)IS NOT(vt1.c0)), ((rt0.c4) NOT BETWEEN (t0.c71) AND (rt0.c4)), CAST(rt0.c1 AS NUMERIC), CASE rt0.c3  WHEN t0.c35 THEN t0.c71 END, ((rt0.c4) NOT NULL))) AND ((((t0.c35)-(rt0.c4)), (~ (rt0.c1)), (t0.c35 IN ()), ((rt0.c3)!=(t0.c35)), ((t0.c71)>(vt0.c0))))) ASC, ((rt0.c2) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS NOT(t0.c71)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt0 FULL OUTER JOIN vt1 ON IFNULL(rt0.c0, rt0.c4) COLLATE BINARY ORDER BY (((rt0.c3, rt0.c3, rt0.c3, vt1.c0, rt0.c3)) BETWEEN ((((rt0.c5)IS NOT(vt1.c0)), ((rt0.c4) NOT BETWEEN (t0.c71) AND (rt0.c4)), CAST(rt0.c1 AS NUMERIC), CASE rt0.c3  WHEN t0.c35 THEN t0.c71 END, ((rt0.c4) NOT NULL))) AND ((((t0.c35)-(rt0.c4)), (~ (rt0.c1)), (t0.c35 IN ()), ((rt0.c3)<>(t0.c35)), ((t0.c71)>(vt0.c0))))) ASC, ((rt0.c2) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 NOT INDEXED, vt0 NOT INDEXED FULL OUTER JOIN vt1 ON IFNULL(rt0.c0, rt0.c4) COLLATE BINARY WHERE (((rt0.c1)IS NOT(t0.c71)) COLLATE NOCASE) ORDER BY (((rt0.c3, rt0.c3, rt0.c3, vt1.c0, rt0.c3)) BETWEEN ((((rt0.c5)IS NOT(vt1.c0)), ((rt0.c4) NOT BETWEEN (t0.c71) AND (rt0.c4)), CAST(rt0.c1 AS NUMERIC), CASE rt0.c3  WHEN t0.c35 THEN t0.c71 END, ((rt0.c4) NOT NULL))) AND ((((t0.c35)-(rt0.c4)), (~ (rt0.c1)), (t0.c35 IN ()), ((rt0.c3)!=(t0.c35)), ((t0.c71)>(vt0.c0))))) ASC, ((rt0.c2) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS NOT(t0.c71)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt0 FULL OUTER JOIN vt1 ON IFNULL(rt0.c0, rt0.c4) COLLATE BINARY ORDER BY (((rt0.c3, rt0.c3, rt0.c3, vt1.c0, rt0.c3)) BETWEEN ((((rt0.c5)IS NOT(vt1.c0)), ((rt0.c4) NOT BETWEEN (t0.c71) AND (rt0.c4)), CAST(rt0.c1 AS NUMERIC), CASE rt0.c3  WHEN t0.c35 THEN t0.c71 END, ((rt0.c4) NOT NULL))) AND ((((t0.c35)-(rt0.c4)), (~ (rt0.c1)), (t0.c35 IN ()), ((rt0.c3)<>(t0.c35)), ((t0.c71)>(vt0.c0))))) ASC, ((rt0.c2) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 NOT INDEXED, vt0 NOT INDEXED FULL OUTER JOIN vt1 ON IFNULL(rt0.c0, rt0.c4) COLLATE BINARY WHERE (((rt0.c1)IS NOT(t0.c71)) COLLATE NOCASE) ORDER BY (((rt0.c3, rt0.c3, rt0.c3, vt1.c0, rt0.c3)) BETWEEN ((((rt0.c5)IS NOT(vt1.c0)), ((rt0.c4) NOT BETWEEN (t0.c71) AND (rt0.c4)), CAST(rt0.c1 AS NUMERIC), CASE rt0.c3  WHEN t0.c35 THEN t0.c71 END, ((rt0.c4) NOT NULL))) AND ((((t0.c35)-(rt0.c4)), (~ (rt0.c1)), (t0.c35 IN ()), ((rt0.c3)!=(t0.c35)), ((t0.c71)>(vt0.c0))))) ASC, ((rt0.c2) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (((((rt0.c1)!=(vt1.c0))) NOT NULL)) ORDER BY (((vt1.c0))>=((t0.c71))) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)!=(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY (((vt1.c0))>=((t0.c71))) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (((((rt0.c1)!=(vt1.c0))) NOT NULL)) ORDER BY (((vt1.c0))>=((t0.c71))) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)!=(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY (((vt1.c0))>=((t0.c71))) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (((((rt0.c1)!=(vt1.c0))) NOT NULL)) ORDER BY (((vt1.c0))>=((t0.c71))) COLLATE NOCASE DESC;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CASE (t0.c35 IN ())  WHEN '-794002961' THEN ((vt1.c0)%(rt0.c1)) WHEN NULL THEN (- (rt0.c5)) WHEN CASE WHEN rt0.c4 THEN rt0.c5 END THEN ((rt0.c5)<(rt0.c1)) ELSE t0.c71 COLLATE BINARY END INNER JOIN t0 ON CASE WHEN ''' Wm3쓮毤' THEN ((rt0.c4) NOT NULL) ELSE 1.878101694E9 END WHERE ((+ (((rt0.c3)%('1526796923'))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c3)%('1526796923'))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CASE (t0.c35 IN ())  WHEN '-794002961' THEN ((vt1.c0)%(rt0.c1)) WHEN NULL THEN (- (rt0.c5)) WHEN CASE WHEN rt0.c4 THEN rt0.c5 END THEN ((rt0.c5)<(rt0.c1)) ELSE t0.c71 COLLATE BINARY END INNER JOIN t0 ON CASE WHEN ''' Wm3쓮毤' THEN ((rt0.c4) NOT NULL) ELSE 1.878101694E9 END ORDER BY vt1.c0  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CASE (t0.c35 IN ())  WHEN '-794002961' THEN ((vt1.c0)%(rt0.c1)) WHEN NULL THEN (- (rt0.c5)) WHEN CASE WHEN rt0.c4 THEN rt0.c5 END THEN ((rt0.c5)<(rt0.c1)) ELSE t0.c71 COLLATE BINARY END INNER JOIN t0 ON CASE WHEN ''' Wm3쓮毤' THEN ((rt0.c4) NOT NULL) ELSE 1.878101694E9 END WHERE ((+ (((rt0.c3)%('1526796923'))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c3)%('1526796923'))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CASE (t0.c35 IN ())  WHEN '-794002961' THEN ((vt1.c0)%(rt0.c1)) WHEN NULL THEN (- (rt0.c5)) WHEN CASE WHEN rt0.c4 THEN rt0.c5 END THEN ((rt0.c5)<(rt0.c1)) ELSE t0.c71 COLLATE BINARY END INNER JOIN t0 ON CASE WHEN ''' Wm3쓮毤' THEN ((rt0.c4) NOT NULL) ELSE 1.878101694E9 END ORDER BY vt1.c0  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (NULL) AND (rt0.c2))) NOT BETWEEN (((rt0.c3)<(rt0.c2))) AND (1177322948)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (NULL) AND (rt0.c2))) NOT BETWEEN (((rt0.c3)<(rt0.c2))) AND (1177322948))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (NULL) AND (rt0.c2))) NOT BETWEEN (((rt0.c3)<(rt0.c2))) AND (1177322948)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (NULL) AND (rt0.c2))) NOT BETWEEN (((rt0.c3)<(rt0.c2))) AND (1177322948))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (NULL) AND (rt0.c2))) NOT BETWEEN (((rt0.c3)<(rt0.c2))) AND (1177322948)));
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)&(LIKELIHOOD(DISTINCT 0.36571981820084776, 0.09436817935199515))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)&(LIKELIHOOD(DISTINCT 0.36571981820084776, 0.09436817935199515)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)&(LIKELIHOOD(DISTINCT 0.36571981820084776, 0.09436817935199515))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)&(LIKELIHOOD(DISTINCT 0.36571981820084776, 0.09436817935199515)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)&(LIKELIHOOD(DISTINCT 0.36571981820084776, 0.09436817935199515))));
SELECT ALL * FROM vt0, t0, rt0 WHERE ((NOT (((t0.c35)%(rt0.c1))))) ORDER BY CASE WHEN CAST(t0.c71 AS NUMERIC) THEN ((rt0.c0) BETWEEN (0.8517978976777503) AND (rt0.c2)) END  NULLS LAST, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM ASC  NULLS LAST, LTRIM(((t0.c35)==(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c35)%(rt0.c1))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CASE WHEN CAST(t0.c71 AS NUMERIC) THEN ((rt0.c0) BETWEEN (0.8517978976777503) AND (rt0.c2)) END  NULLS LAST, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM ASC  NULLS LAST, LTRIM(((t0.c35)==(vt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((NOT (((t0.c35)%(rt0.c1))))) ORDER BY CASE WHEN CAST(t0.c71 AS NUMERIC) THEN ((rt0.c0) BETWEEN (0.8517978976777503) AND (rt0.c2)) END  NULLS LAST, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM ASC  NULLS LAST, LTRIM(((t0.c35)==(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c35)%(rt0.c1))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CASE WHEN CAST(t0.c71 AS NUMERIC) THEN ((rt0.c0) BETWEEN (0.8517978976777503) AND (rt0.c2)) END  NULLS LAST, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM ASC  NULLS LAST, LTRIM(((t0.c35)==(vt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((NOT (((t0.c35)%(rt0.c1))))) ORDER BY CASE WHEN CAST(t0.c71 AS NUMERIC) THEN ((rt0.c0) BETWEEN (0.8517978976777503) AND (rt0.c2)) END  NULLS LAST, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM ASC  NULLS LAST, LTRIM(((t0.c35)==(vt0.c0))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (IFNULL(rt0.c3 COLLATE BINARY, CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(rt0.c3 COLLATE BINARY, CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (IFNULL(rt0.c3 COLLATE BINARY, CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(rt0.c3 COLLATE BINARY, CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (IFNULL(rt0.c3 COLLATE BINARY, CAST(vt0.c0 AS REAL)));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ('641751766') ORDER BY ((((rt0.c3)OR(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('641751766') IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((rt0.c3)OR(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ('641751766') ORDER BY ((((rt0.c3)OR(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('641751766') IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((rt0.c3)OR(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ('641751766') ORDER BY ((((rt0.c3)OR(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE ((rt0.c3 IN ((((vt0.c0))<((rt0.c5))), rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ((((vt0.c0))<((rt0.c5))), rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((rt0.c3 IN ((((vt0.c0))<((rt0.c5))), rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ((((vt0.c0))<((rt0.c5))), rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((rt0.c3 IN ((((vt0.c0))<((rt0.c5))), rt0.c3 COLLATE BINARY)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c4, rt0.c4, rt0.c3)) BETWEEN (((NULL IN ()), ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1)), rt0.c2 COLLATE BINARY)) AND (((NOT (rt0.c2)), rt0.c5 COLLATE RTRIM, CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4, rt0.c4, rt0.c3)) BETWEEN (((NULL IN ()), ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1)), rt0.c2 COLLATE BINARY)) AND (((NOT (rt0.c2)), rt0.c5 COLLATE RTRIM, CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c4, rt0.c4, rt0.c3)) BETWEEN (((NULL IN ()), ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1)), rt0.c2 COLLATE BINARY)) AND (((NOT (rt0.c2)), rt0.c5 COLLATE RTRIM, CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4, rt0.c4, rt0.c3)) BETWEEN (((NULL IN ()), ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1)), rt0.c2 COLLATE BINARY)) AND (((NOT (rt0.c2)), rt0.c5 COLLATE RTRIM, CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c4, rt0.c4, rt0.c3)) BETWEEN (((NULL IN ()), ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1)), rt0.c2 COLLATE BINARY)) AND (((NOT (rt0.c2)), rt0.c5 COLLATE RTRIM, CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))) FULL OUTER JOIN t0 ON rt0.c0 CROSS JOIN rt0 ON ((rt0.c0)=(CASE WHEN rt0.c4 THEN x'' WHEN rt0.c5 THEN rt0.c2 WHEN NULL THEN vt0.c0 END)) WHERE (SQLITE_COMPILEOPTION_GET(((t0.c71)IS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((t0.c71)IS(rt0.c2)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))) FULL OUTER JOIN t0 ON rt0.c0 CROSS JOIN rt0 ON ((rt0.c0)=(CASE WHEN rt0.c4 THEN x'' WHEN rt0.c5 THEN rt0.c2 WHEN NULL THEN vt0.c0 END)));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))) FULL OUTER JOIN t0 ON rt0.c0 CROSS JOIN rt0 ON ((rt0.c0)=(CASE WHEN rt0.c4 THEN x'' WHEN rt0.c5 THEN rt0.c2 WHEN NULL THEN vt0.c0 END)) WHERE (SQLITE_COMPILEOPTION_GET(((t0.c71)IS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((t0.c71)IS(rt0.c2)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))) FULL OUTER JOIN t0 ON rt0.c0 CROSS JOIN rt0 ON ((rt0.c0)=(CASE WHEN rt0.c4 THEN x'' WHEN rt0.c5 THEN rt0.c2 WHEN NULL THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON TIME(x'c509', CASE WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c5)<('')), (~ (rt0.c2)), ((t0.c71)>(vt1.c0)), vt0.c0 COLLATE RTRIM, ((rt0.c0) NOTNULL)) RIGHT OUTER JOIN rt0 ON (((+ (x'48ed')))GLOB((~ (rt0.c0)))) WHERE ((((((rt0.c2))<((rt0.c3))))%(((((((((t0.c71)OR(t0.c71)))OR(rt0.c5)))OR(rt0.c4)))AND(vt0.c0))))) ORDER BY ((CASE t0.c71  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c35 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<((rt0.c3))))%(((((((((t0.c71)OR(t0.c71)))OR(rt0.c5)))OR(rt0.c4)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON TIME(x'c509', CASE WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c5)<('')), (~ (rt0.c2)), ((t0.c71)>(vt1.c0)), vt0.c0 COLLATE RTRIM, ((rt0.c0) NOTNULL)) RIGHT OUTER JOIN rt0 ON (((+ (x'48ed')))GLOB((~ (rt0.c0)))) ORDER BY ((CASE t0.c71  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c35 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) NOT NULL));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON TIME(x'c509', CASE WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c5)<('')), (~ (rt0.c2)), ((t0.c71)>(vt1.c0)), vt0.c0 COLLATE RTRIM, ((rt0.c0) NOTNULL)) RIGHT OUTER JOIN rt0 ON (((+ (x'48ed')))GLOB((~ (rt0.c0)))) WHERE ((((((rt0.c2))<((rt0.c3))))%(((((((((t0.c71)OR(t0.c71)))OR(rt0.c5)))OR(rt0.c4)))AND(vt0.c0))))) ORDER BY ((CASE t0.c71  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c35 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<((rt0.c3))))%(((((((((t0.c71)OR(t0.c71)))OR(rt0.c5)))OR(rt0.c4)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON TIME(x'c509', CASE WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c5)<('')), (~ (rt0.c2)), ((t0.c71)>(vt1.c0)), vt0.c0 COLLATE RTRIM, ((rt0.c0) NOTNULL)) RIGHT OUTER JOIN rt0 ON (((+ (x'48ed')))GLOB((~ (rt0.c0)))) ORDER BY ((CASE t0.c71  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c35 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) NOT NULL));
SELECT * FROM vt1 WHERE (((CAST(0.2808135590829076 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(0.2808135590829076 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(0.2808135590829076 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(0.2808135590829076 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(0.2808135590829076 AS TEXT)) ISNULL));
SELECT ALL * FROM rt0, t0, vt0 WHERE ((- (t0.c71 COLLATE BINARY))) ORDER BY ((rt0.c1 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c71 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((rt0.c1 IN ()) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((- (t0.c71 COLLATE BINARY))) ORDER BY ((rt0.c1 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c71 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((rt0.c1 IN ()) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((- (t0.c71 COLLATE BINARY))) ORDER BY ((rt0.c1 IN ()) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) IS FALSE)) ORDER BY (- (vt1.c0)) DESC  NULLS LAST, ((NULL)<>('xC'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)) DESC  NULLS LAST, ((NULL)!=('xC'))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) IS FALSE)) ORDER BY (- (vt1.c0)) DESC  NULLS LAST, ((NULL)<>('xC'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)) DESC  NULLS LAST, ((NULL)!=('xC'))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) IS FALSE)) ORDER BY (- (vt1.c0)) DESC  NULLS LAST, ((NULL)<>('xC'))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c0)<(((rt0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0)<(((rt0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0)<(((rt0.c3) IS TRUE))));
SELECT COUNT(*) FROM vt0, t0 NOT INDEXED LEFT OUTER JOIN rt0 ON '' WHERE (LIKELIHOOD(DISTINCT rt0.c5, 0.2165518431686111)) ORDER BY ((CAST(rt0.c2 AS REAL))-(CASE WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c1 THEN NULL WHEN t0.c35 THEN rt0.c2 END))  NULLS FIRST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt0.c5, 0.2165518431686111)) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON '' ORDER BY ((CAST(rt0.c2 AS REAL))-(CASE WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c1 THEN NULL WHEN t0.c35 THEN rt0.c2 END))  NULLS FIRST, rt0.c1 ASC);
SELECT COUNT(*) FROM vt0, t0 NOT INDEXED LEFT OUTER JOIN rt0 ON '' WHERE (LIKELIHOOD(DISTINCT rt0.c5, 0.2165518431686111)) ORDER BY ((CAST(rt0.c2 AS REAL))-(CASE WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c1 THEN NULL WHEN t0.c35 THEN rt0.c2 END))  NULLS FIRST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt0.c5, 0.2165518431686111)) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON '' ORDER BY ((CAST(rt0.c2 AS REAL))-(CASE WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c1 THEN NULL WHEN t0.c35 THEN rt0.c2 END))  NULLS FIRST, rt0.c1 ASC);
SELECT COUNT(*) FROM vt0, t0 NOT INDEXED LEFT OUTER JOIN rt0 ON '' WHERE (LIKELIHOOD(DISTINCT rt0.c5, 0.2165518431686111)) ORDER BY ((CAST(rt0.c2 AS REAL))-(CASE WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c1 THEN NULL WHEN t0.c35 THEN rt0.c2 END))  NULLS FIRST, rt0.c1 ASC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (0x648a4d99) ORDER BY CAST((- (rt0.c2)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((0X648a4d99) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST((- (rt0.c2)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (0x648a4d99) ORDER BY CAST((- (rt0.c2)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((0X648a4d99) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST((- (rt0.c2)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (0x648a4d99) ORDER BY CAST((- (rt0.c2)) AS REAL) DESC;
SELECT COUNT(*) FROM t0, rt0, vt0 NOT INDEXED WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 NOT INDEXED WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 NOT INDEXED WHERE (rt0.c1);
SELECT * FROM t0, vt1, vt0 LEFT OUTER JOIN rt0 ON CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c2)=(rt0.c0)) END WHERE (CAST(NULLIF(DISTINCT 0.4924291779113099, vt1.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULLIF(DISTINCT 0.4924291779113099, vt1.c0) AS TEXT)) IS TRUE)  as count FROM t0, vt1, vt0 LEFT OUTER JOIN rt0 ON CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c2)==(rt0.c0)) END);
SELECT * FROM t0, vt1, vt0 LEFT OUTER JOIN rt0 ON CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c2)=(rt0.c0)) END WHERE (CAST(NULLIF(DISTINCT 0.4924291779113099, vt1.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULLIF(DISTINCT 0.4924291779113099, vt1.c0) AS TEXT)) IS TRUE)  as count FROM t0, vt1, vt0 LEFT OUTER JOIN rt0 ON CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c2)==(rt0.c0)) END);
SELECT * FROM t0, vt1, vt0 LEFT OUTER JOIN rt0 ON CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c2)=(rt0.c0)) END WHERE (CAST(NULLIF(DISTINCT 0.4924291779113099, vt1.c0) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (NULLIF(vt0.c0, rt0.c5)))) ORDER BY CAST(((((x'')AND(rt0.c3)))AND(rt0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((+ (NULLIF(vt0.c0, rt0.c5)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((((x'')AND(rt0.c3)))AND(rt0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (NULLIF(vt0.c0, rt0.c5)))) ORDER BY CAST(((((x'')AND(rt0.c3)))AND(rt0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((+ (NULLIF(vt0.c0, rt0.c5)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((((x'')AND(rt0.c3)))AND(rt0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (NULLIF(vt0.c0, rt0.c5)))) ORDER BY CAST(((((x'')AND(rt0.c3)))AND(rt0.c1)) AS INTEGER);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN CAST(vt1.c0 AS BLOB) THEN vt1.c0 WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 WHEN (('1131747027') BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE NOCASE ELSE ABS(vt1.c0) END) ORDER BY ((0.46709357735727597) IS TRUE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN CAST(vt1.c0 AS BLOB) THEN vt1.c0 WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 WHEN (('1131747027') BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE NOCASE ELSE ABS(vt1.c0) END) IS TRUE)  as count FROM vt1 ORDER BY ((0.46709357735727597) IS TRUE) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN CAST(vt1.c0 AS BLOB) THEN vt1.c0 WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 WHEN (('1131747027') BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE NOCASE ELSE ABS(vt1.c0) END) ORDER BY ((0.46709357735727597) IS TRUE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN CAST(vt1.c0 AS BLOB) THEN vt1.c0 WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 WHEN (('1131747027') BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE NOCASE ELSE ABS(vt1.c0) END) IS TRUE)  as count FROM vt1 ORDER BY ((0.46709357735727597) IS TRUE) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN CAST(vt1.c0 AS BLOB) THEN vt1.c0 WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 WHEN (('1131747027') BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE NOCASE ELSE ABS(vt1.c0) END) ORDER BY ((0.46709357735727597) IS TRUE) COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt0, vt1 NATURAL JOIN vt0 WHERE ('-827133755');
SELECT SUM(count) FROM (SELECT ALL (('-827133755') IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0, vt1 NATURAL JOIN vt0 WHERE ('-827133755');
SELECT SUM(count) FROM (SELECT ALL (('-827133755') IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0, vt1 NATURAL JOIN vt0 WHERE ('-827133755');
SELECT ALL * FROM rt0, t0, vt1 WHERE (((0xffffffffd4a77385) NOTNULL)) ORDER BY ((((vt1.c0)||(rt0.c0)))LIKE(((rt0.c4)<(vt1.c0))))  NULLS FIRST, (- (rt0.c5 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffd4a77385) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((vt1.c0)||(rt0.c0)))LIKE(((rt0.c4)<(vt1.c0))))  NULLS FIRST, (- (rt0.c5 COLLATE NOCASE)));
SELECT ALL * FROM rt0, t0, vt1 WHERE (((0xffffffffd4a77385) NOTNULL)) ORDER BY ((((vt1.c0)||(rt0.c0)))LIKE(((rt0.c4)<(vt1.c0))))  NULLS FIRST, (- (rt0.c5 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffd4a77385) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((vt1.c0)||(rt0.c0)))LIKE(((rt0.c4)<(vt1.c0))))  NULLS FIRST, (- (rt0.c5 COLLATE NOCASE)));
SELECT ALL * FROM rt0, t0, vt1 WHERE (((0xffffffffd4a77385) NOTNULL)) ORDER BY ((((vt1.c0)||(rt0.c0)))LIKE(((rt0.c4)<(vt1.c0))))  NULLS FIRST, (- (rt0.c5 COLLATE NOCASE));
SELECT ALL * FROM t0, vt0 WHERE (((((((vt0.c0)>=(t0.c71)))AND(NULL)))OR(0.6589490287778045))) ORDER BY ((NULL) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>=(t0.c71)))AND(NULL)))OR(0.6589490287778045))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((NULL) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((((((vt0.c0)>=(t0.c71)))AND(NULL)))OR(0.6589490287778045))) ORDER BY ((NULL) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>=(t0.c71)))AND(NULL)))OR(0.6589490287778045))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((NULL) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((((((vt0.c0)>=(t0.c71)))AND(NULL)))OR(0.6589490287778045))) ORDER BY ((NULL) IS TRUE) ASC  NULLS FIRST;
SELECT * FROM vt1, rt0, vt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (rt0.c4);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((+ (0.021913715496568287))) NOT NULL) CROSS JOIN vt1 ON rt0.c3 WHERE ((~ ((((vt1.c0, -1882780585, rt0.c0)) NOT BETWEEN ((0.8070962810409171, vt0.c0, rt0.c0)) AND ((rt0.c5, NULL, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt1.c0, -1882780585, rt0.c0)) NOT BETWEEN ((0.8070962810409171, vt0.c0, rt0.c0)) AND ((rt0.c5, NULL, vt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((+ (0.021913715496568287))) NOT NULL) CROSS JOIN vt1 ON rt0.c3);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((+ (0.021913715496568287))) NOT NULL) CROSS JOIN vt1 ON rt0.c3 WHERE ((~ ((((vt1.c0, -1882780585, rt0.c0)) NOT BETWEEN ((0.8070962810409171, vt0.c0, rt0.c0)) AND ((rt0.c5, NULL, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt1.c0, -1882780585, rt0.c0)) NOT BETWEEN ((0.8070962810409171, vt0.c0, rt0.c0)) AND ((rt0.c5, NULL, vt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((+ (0.021913715496568287))) NOT NULL) CROSS JOIN vt1 ON rt0.c3);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((+ (0.021913715496568287))) NOT NULL) CROSS JOIN vt1 ON rt0.c3 WHERE ((~ ((((vt1.c0, -1882780585, rt0.c0)) NOT BETWEEN ((0.8070962810409171, vt0.c0, rt0.c0)) AND ((rt0.c5, NULL, vt0.c0))))));
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS TEXT))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS TEXT))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(NULL COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS TEXT))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS TEXT))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(NULL COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS TEXT))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(NULL COLLATE RTRIM)));
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (CAST(((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (CAST(((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (CAST(((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)) AS TEXT));
SELECT COUNT(*) FROM rt0, t0, vt0, vt1 WHERE ((~ (t0.c35)) COLLATE RTRIM) ORDER BY ((((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c5)))AND(((rt0.c4)>=(vt0.c0)))))OR(t0.c71));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c35)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY ((((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c5)))AND(((rt0.c4)>=(vt0.c0)))))OR(t0.c71)));
SELECT COUNT(*) FROM rt0, t0, vt0, vt1 WHERE ((~ (t0.c35)) COLLATE RTRIM) ORDER BY ((((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c5)))AND(((rt0.c4)>=(vt0.c0)))))OR(t0.c71));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c35)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY ((((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c5)))AND(((rt0.c4)>=(vt0.c0)))))OR(t0.c71)));
SELECT COUNT(*) FROM rt0, t0, vt0, vt1 WHERE ((~ (t0.c35)) COLLATE RTRIM) ORDER BY ((((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c5)))AND(((rt0.c4)>=(vt0.c0)))))OR(t0.c71));
SELECT * FROM rt0, t0, vt1 NATURAL JOIN vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((x'ed66' COLLATE RTRIM)) AND ((rt0.c2)))) ORDER BY (- ((NULL IN (rt0.c5, rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((x'ed66' COLLATE RTRIM)) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0, t0, vt1 NATURAL JOIN vt0 ORDER BY (- ((NULL IN (rt0.c5, rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0, t0, vt1 NATURAL JOIN vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((x'ed66' COLLATE RTRIM)) AND ((rt0.c2)))) ORDER BY (- ((NULL IN (rt0.c5, rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((x'ed66' COLLATE RTRIM)) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0, t0, vt1 NATURAL JOIN vt0 ORDER BY (- ((NULL IN (rt0.c5, rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0, t0, vt1 NATURAL JOIN vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((x'ed66' COLLATE RTRIM)) AND ((rt0.c2)))) ORDER BY (- ((NULL IN (rt0.c5, rt0.c2))))  NULLS FIRST;
SELECT * FROM rt0, vt1, t0, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT * FROM rt0, vt1, t0, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT * FROM rt0, vt1, t0, vt0 WHERE (vt1.c0);
SELECT * FROM vt1, t0, rt0, vt0 WHERE ((((vt1.c0 IN (rt0.c2))) NOT BETWEEN (vt1.c0) AND (((((((((rt0.c4)AND(t0.c35)))AND(rt0.c4)))AND(t0.c35)))AND(rt0.c3))))) ORDER BY '1601846467' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (rt0.c2))) NOT BETWEEN (vt1.c0) AND (((((((((rt0.c4)AND(t0.c35)))AND(rt0.c4)))AND(t0.c35)))AND(rt0.c3))))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY '1601846467' ASC  NULLS FIRST);
SELECT * FROM vt1, t0, rt0, vt0 WHERE ((((vt1.c0 IN (rt0.c2))) NOT BETWEEN (vt1.c0) AND (((((((((rt0.c4)AND(t0.c35)))AND(rt0.c4)))AND(t0.c35)))AND(rt0.c3))))) ORDER BY '1601846467' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (rt0.c2))) NOT BETWEEN (vt1.c0) AND (((((((((rt0.c4)AND(t0.c35)))AND(rt0.c4)))AND(t0.c35)))AND(rt0.c3))))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY '1601846467' ASC  NULLS FIRST);
SELECT * FROM vt1, t0, rt0, vt0 WHERE ((((vt1.c0 IN (rt0.c2))) NOT BETWEEN (vt1.c0) AND (((((((((rt0.c4)AND(t0.c35)))AND(rt0.c4)))AND(t0.c35)))AND(rt0.c3))))) ORDER BY '1601846467' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (+ (CAST(vt1.c0 AS NUMERIC))) WHERE ((('2R9>#G')IS NOT(MIN(vt1.c0, vt1.c0)))) ORDER BY vt1.c0 COLLATE NOCASE DESC, (- (((((vt1.c0)OR('-1492181648')))OR(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('2R9>#G')IS NOT(MIN(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (+ (CAST(vt1.c0 AS NUMERIC))) ORDER BY vt1.c0 COLLATE NOCASE DESC, (- (((((vt1.c0)OR('-1492181648')))OR(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (+ (CAST(vt1.c0 AS NUMERIC))) WHERE ((('2R9>#G')IS NOT(MIN(vt1.c0, vt1.c0)))) ORDER BY vt1.c0 COLLATE NOCASE DESC, (- (((((vt1.c0)OR('-1492181648')))OR(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('2R9>#G')IS NOT(MIN(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (+ (CAST(vt1.c0 AS NUMERIC))) ORDER BY vt1.c0 COLLATE NOCASE DESC, (- (((((vt1.c0)OR('-1492181648')))OR(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (+ (CAST(vt1.c0 AS NUMERIC))) WHERE ((('2R9>#G')IS NOT(MIN(vt1.c0, vt1.c0)))) ORDER BY vt1.c0 COLLATE NOCASE DESC, (- (((((vt1.c0)OR('-1492181648')))OR(vt1.c0)))) ASC;
SELECT * FROM vt1 INNER JOIN t0 ON ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(x'')))OR(((((vt1.c0)OR(t0.c71)))AND(vt0.c0)))) CROSS JOIN vt0 ON CASE (vt0.c0 IN ())  WHEN CASE WHEN t0.c71 THEN vt1.c0 WHEN vt0.c0 THEN t0.c35 WHEN t0.c71 THEN -1.185732514E9 ELSE t0.c71 END THEN CAST(t0.c35 AS BLOB) END WHERE (CASE ((x'')>>(t0.c35))  WHEN '-410466348' THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c71)) ELSE CAST(t0.c71 AS TEXT) END) ORDER BY (- (((((t0.c35)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((x'')>>(t0.c35))  WHEN '-410466348' THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c71)) ELSE CAST(t0.c71 AS TEXT) END) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(x'')))OR(((((vt1.c0)OR(t0.c71)))AND(vt0.c0)))) CROSS JOIN vt0 ON CASE (vt0.c0 IN ())  WHEN CASE WHEN t0.c71 THEN vt1.c0 WHEN vt0.c0 THEN t0.c35 WHEN t0.c71 THEN -1.185732514E9 ELSE t0.c71 END THEN CAST(t0.c35 AS BLOB) END ORDER BY (- (((((t0.c35)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt1 INNER JOIN t0 ON ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(x'')))OR(((((vt1.c0)OR(t0.c71)))AND(vt0.c0)))) CROSS JOIN vt0 ON CASE (vt0.c0 IN ())  WHEN CASE WHEN t0.c71 THEN vt1.c0 WHEN vt0.c0 THEN t0.c35 WHEN t0.c71 THEN -1.185732514E9 ELSE t0.c71 END THEN CAST(t0.c35 AS BLOB) END WHERE (CASE ((x'')>>(t0.c35))  WHEN '-410466348' THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c71)) ELSE CAST(t0.c71 AS TEXT) END) ORDER BY (- (((((t0.c35)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((x'')>>(t0.c35))  WHEN '-410466348' THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c71)) ELSE CAST(t0.c71 AS TEXT) END) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(x'')))OR(((((vt1.c0)OR(t0.c71)))AND(vt0.c0)))) CROSS JOIN vt0 ON CASE (vt0.c0 IN ())  WHEN CASE WHEN t0.c71 THEN vt1.c0 WHEN vt0.c0 THEN t0.c35 WHEN t0.c71 THEN -1.185732514E9 ELSE t0.c71 END THEN CAST(t0.c35 AS BLOB) END ORDER BY (- (((((t0.c35)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt1 INNER JOIN t0 ON ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(x'')))OR(((((vt1.c0)OR(t0.c71)))AND(vt0.c0)))) CROSS JOIN vt0 ON CASE (vt0.c0 IN ())  WHEN CASE WHEN t0.c71 THEN vt1.c0 WHEN vt0.c0 THEN t0.c35 WHEN t0.c71 THEN -1.185732514E9 ELSE t0.c71 END THEN CAST(t0.c35 AS BLOB) END WHERE (CASE ((x'')>>(t0.c35))  WHEN '-410466348' THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c71)) ELSE CAST(t0.c71 AS TEXT) END) ORDER BY (- (((((t0.c35)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0, vt1.c0))/((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c0, vt1.c0))/((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0, vt1.c0))/((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c0, vt1.c0))/((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0, vt1.c0))/((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE ((((rt0.c1 IN (rt0.c2, rt0.c5))) IS FALSE)) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST, 'A''%L' COLLATE RTRIM DESC  NULLS FIRST, CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c2, rt0.c5))) IS FALSE)) IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST, 'A''%L' COLLATE RTRIM DESC  NULLS FIRST, CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE ((((rt0.c1 IN (rt0.c2, rt0.c5))) IS FALSE)) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST, 'A''%L' COLLATE RTRIM DESC  NULLS FIRST, CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c2, rt0.c5))) IS FALSE)) IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST, 'A''%L' COLLATE RTRIM DESC  NULLS FIRST, CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE ((((rt0.c1 IN (rt0.c2, rt0.c5))) IS FALSE)) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE BINARY  NULLS FIRST, 'A''%L' COLLATE RTRIM DESC  NULLS FIRST, CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (1.119442813E9) ORDER BY ((((((vt1.c0)IS(vt0.c0)))AND(t0.c35 COLLATE BINARY)))AND(((vt1.c0)IS(t0.c71))))  NULLS LAST, CAST(t0.c35 AS TEXT) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((1.119442813E9) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((((vt1.c0)IS(vt0.c0)))AND(t0.c35 COLLATE BINARY)))AND(((vt1.c0)IS(t0.c71))))  NULLS LAST, CAST(t0.c35 AS TEXT) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (1.119442813E9) ORDER BY ((((((vt1.c0)IS(vt0.c0)))AND(t0.c35 COLLATE BINARY)))AND(((vt1.c0)IS(t0.c71))))  NULLS LAST, CAST(t0.c35 AS TEXT) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((1.119442813E9) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((((vt1.c0)IS(vt0.c0)))AND(t0.c35 COLLATE BINARY)))AND(((vt1.c0)IS(t0.c71))))  NULLS LAST, CAST(t0.c35 AS TEXT) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (1.119442813E9) ORDER BY ((((((vt1.c0)IS(vt0.c0)))AND(t0.c35 COLLATE BINARY)))AND(((vt1.c0)IS(t0.c71))))  NULLS LAST, CAST(t0.c35 AS TEXT) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM rt0, vt1, t0, vt0 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT * FROM rt0, vt1, t0, vt0 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT * FROM rt0, vt1, t0, vt0 WHERE ((- (NULL)));
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE (CAST((~ (rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE (CAST((~ (rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE (CAST((~ (rt0.c2)) AS NUMERIC));
SELECT COUNT(*) FROM vt1 WHERE ((- ((~ (vt1.c0))))) ORDER BY ((((vt1.c0)||(vt1.c0))) BETWEEN (((vt1.c0)-(NULL))) AND ((((vt1.c0))<=((vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)||(vt1.c0))) BETWEEN (((vt1.c0)-(NULL))) AND ((((vt1.c0))<=((vt1.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((- ((~ (vt1.c0))))) ORDER BY ((((vt1.c0)||(vt1.c0))) BETWEEN (((vt1.c0)-(NULL))) AND ((((vt1.c0))<=((vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)||(vt1.c0))) BETWEEN (((vt1.c0)-(NULL))) AND ((((vt1.c0))<=((vt1.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((- ((~ (vt1.c0))))) ORDER BY ((((vt1.c0)||(vt1.c0))) BETWEEN (((vt1.c0)-(NULL))) AND ((((vt1.c0))<=((vt1.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 NOT INDEXED, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0 NOT INDEXED, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0 NOT INDEXED, vt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(rt0.c5 COLLATE BINARY AS INTEGER)) ORDER BY ((((((((((vt1.c0) BETWEEN (x'40d0') AND (rt0.c3)))AND(((rt0.c3)IS NOT(vt1.c0)))))OR(((((((((rt0.c5)AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c1)))OR('')))))AND(((rt0.c4)&('pK%Lle?q')))))OR(((rt0.c1)%(vt1.c0))))  NULLS LAST, (+ ((((rt0.c3, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c5)) AND ((rt0.c3, vt1.c0, rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c5 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((((vt1.c0) BETWEEN (x'40d0') AND (rt0.c3)))AND(((rt0.c3)IS NOT(vt1.c0)))))OR(((((((((rt0.c5)AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c1)))OR('')))))AND(((rt0.c4)&('pK%Lle?q')))))OR(((rt0.c1)%(vt1.c0))))  NULLS LAST, (+ ((((rt0.c3, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c5)) AND ((rt0.c3, vt1.c0, rt0.c0))))) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(rt0.c5 COLLATE BINARY AS INTEGER)) ORDER BY ((((((((((vt1.c0) BETWEEN (x'40d0') AND (rt0.c3)))AND(((rt0.c3)IS NOT(vt1.c0)))))OR(((((((((rt0.c5)AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c1)))OR('')))))AND(((rt0.c4)&('pK%Lle?q')))))OR(((rt0.c1)%(vt1.c0))))  NULLS LAST, (+ ((((rt0.c3, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c5)) AND ((rt0.c3, vt1.c0, rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c5 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((((vt1.c0) BETWEEN (x'40d0') AND (rt0.c3)))AND(((rt0.c3)IS NOT(vt1.c0)))))OR(((((((((rt0.c5)AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c1)))OR('')))))AND(((rt0.c4)&('pK%Lle?q')))))OR(((rt0.c1)%(vt1.c0))))  NULLS LAST, (+ ((((rt0.c3, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c5)) AND ((rt0.c3, vt1.c0, rt0.c0))))) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(rt0.c5 COLLATE BINARY AS INTEGER)) ORDER BY ((((((((((vt1.c0) BETWEEN (x'40d0') AND (rt0.c3)))AND(((rt0.c3)IS NOT(vt1.c0)))))OR(((((((((rt0.c5)AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c1)))OR('')))))AND(((rt0.c4)&('pK%Lle?q')))))OR(((rt0.c1)%(vt1.c0))))  NULLS LAST, (+ ((((rt0.c3, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c5)) AND ((rt0.c3, vt1.c0, rt0.c0))))) DESC;
SELECT * FROM vt0, t0, rt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM)>=(((t0.c71) BETWEEN (rt0.c2) AND (x'a38c'))))) ORDER BY ((CAST(rt0.c0 AS TEXT))GLOB(t0.c71));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>=(((t0.c71) BETWEEN (rt0.c2) AND (x'a38c'))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY ((CAST(rt0.c0 AS TEXT))GLOB(t0.c71)));
SELECT * FROM vt0, t0, rt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM)>=(((t0.c71) BETWEEN (rt0.c2) AND (x'a38c'))))) ORDER BY ((CAST(rt0.c0 AS TEXT))GLOB(t0.c71));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>=(((t0.c71) BETWEEN (rt0.c2) AND (x'a38c'))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY ((CAST(rt0.c0 AS TEXT))GLOB(t0.c71)));
SELECT * FROM vt0, t0, rt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM)>=(((t0.c71) BETWEEN (rt0.c2) AND (x'a38c'))))) ORDER BY ((CAST(rt0.c0 AS TEXT))GLOB(t0.c71));
SELECT * FROM vt0 WHERE (((vt0.c0)&(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)&(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)&(vt0.c0)));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST(((rt0.c2)>>(vt1.c0)) AS TEXT)) ORDER BY ((STRFTIME(rt0.c1, rt0.c0, '-1233103545'))<=(CASE rt0.c5  WHEN '' THEN '-177675653' WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN ',](Uf\m' END));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)>>(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((STRFTIME(rt0.c1, rt0.c0, '-1233103545'))<=(CASE rt0.c5  WHEN '' THEN '-177675653' WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN ',](Uf\m' END)));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST(((rt0.c2)>>(vt1.c0)) AS TEXT)) ORDER BY ((STRFTIME(rt0.c1, rt0.c0, '-1233103545'))<=(CASE rt0.c5  WHEN '' THEN '-177675653' WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN ',](Uf\m' END));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)>>(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((STRFTIME(rt0.c1, rt0.c0, '-1233103545'))<=(CASE rt0.c5  WHEN '' THEN '-177675653' WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN ',](Uf\m' END)));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST(((rt0.c2)>>(vt1.c0)) AS TEXT)) ORDER BY ((STRFTIME(rt0.c1, rt0.c0, '-1233103545'))<=(CASE rt0.c5  WHEN '' THEN '-177675653' WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN ',](Uf\m' END));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0, vt1 WHERE ((((((t0.c71) IS FALSE), ((vt1.c0)>=(t0.c71)), (((NULL, vt0.c0, t0.c35)) NOT BETWEEN ((vt0.c0, t0.c71, vt1.c0)) AND ((vt0.c0, vt0.c0, t0.c71))), ((t0.c71) BETWEEN (vt0.c0) AND (t0.c71)), ((t0.c35) BETWEEN (vt1.c0) AND (t0.c35))))<>((x'', ((vt1.c0) BETWEEN (t0.c35) AND (0.7091194650764996)), CAST(t0.c35 AS INTEGER), SUBSTR(t0.c71, t0.c35), ((t0.c35) BETWEEN (vt1.c0) AND (NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c71) IS FALSE), ((vt1.c0)>=(t0.c71)), (((NULL, vt0.c0, t0.c35)) NOT BETWEEN ((vt0.c0, t0.c71, vt1.c0)) AND ((vt0.c0, vt0.c0, t0.c71))), ((t0.c71) BETWEEN (vt0.c0) AND (t0.c71)), ((t0.c35) BETWEEN (vt1.c0) AND (t0.c35))))<>((x'', ((vt1.c0) BETWEEN (t0.c35) AND (0.7091194650764996)), CAST(t0.c35 AS INTEGER), SUBSTR(t0.c71, t0.c35), ((t0.c35) BETWEEN (vt1.c0) AND (NULL)))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0, vt1 WHERE ((((((t0.c71) IS FALSE), ((vt1.c0)>=(t0.c71)), (((NULL, vt0.c0, t0.c35)) NOT BETWEEN ((vt0.c0, t0.c71, vt1.c0)) AND ((vt0.c0, vt0.c0, t0.c71))), ((t0.c71) BETWEEN (vt0.c0) AND (t0.c71)), ((t0.c35) BETWEEN (vt1.c0) AND (t0.c35))))<>((x'', ((vt1.c0) BETWEEN (t0.c35) AND (0.7091194650764996)), CAST(t0.c35 AS INTEGER), SUBSTR(t0.c71, t0.c35), ((t0.c35) BETWEEN (vt1.c0) AND (NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c71) IS FALSE), ((vt1.c0)>=(t0.c71)), (((NULL, vt0.c0, t0.c35)) NOT BETWEEN ((vt0.c0, t0.c71, vt1.c0)) AND ((vt0.c0, vt0.c0, t0.c71))), ((t0.c71) BETWEEN (vt0.c0) AND (t0.c71)), ((t0.c35) BETWEEN (vt1.c0) AND (t0.c35))))<>((x'', ((vt1.c0) BETWEEN (t0.c35) AND (0.7091194650764996)), CAST(t0.c35 AS INTEGER), SUBSTR(t0.c71, t0.c35), ((t0.c35) BETWEEN (vt1.c0) AND (NULL)))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0, vt1 WHERE ((((((t0.c71) IS FALSE), ((vt1.c0)>=(t0.c71)), (((NULL, vt0.c0, t0.c35)) NOT BETWEEN ((vt0.c0, t0.c71, vt1.c0)) AND ((vt0.c0, vt0.c0, t0.c71))), ((t0.c71) BETWEEN (vt0.c0) AND (t0.c71)), ((t0.c35) BETWEEN (vt1.c0) AND (t0.c35))))<>((x'', ((vt1.c0) BETWEEN (t0.c35) AND (0.7091194650764996)), CAST(t0.c35 AS INTEGER), SUBSTR(t0.c71, t0.c35), ((t0.c35) BETWEEN (vt1.c0) AND (NULL))))));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((~ ('1656150164')))%((((rt0.c5)) NOT BETWEEN ((rt0.c4)) AND ((vt1.c0)))))) ORDER BY ((CASE rt0.c1  WHEN vt0.c0 THEN 1931261180 WHEN vt1.c0 THEN 0.7042341268812768 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c5 END)-(((((x'a689')OR(vt0.c0)))AND(rt0.c2)))) ASC  NULLS LAST, ((((vt0.c0)||(rt0.c3))) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((+ (rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ ('1656150164')))%((((rt0.c5)) NOT BETWEEN ((rt0.c4)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((CASE rt0.c1  WHEN vt0.c0 THEN 1931261180 WHEN vt1.c0 THEN 0.7042341268812768 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c5 END)-(((((x'a689')OR(vt0.c0)))AND(rt0.c2)))) ASC  NULLS LAST, ((((vt0.c0)||(rt0.c3))) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((+ (rt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((~ ('1656150164')))%((((rt0.c5)) NOT BETWEEN ((rt0.c4)) AND ((vt1.c0)))))) ORDER BY ((CASE rt0.c1  WHEN vt0.c0 THEN 1931261180 WHEN vt1.c0 THEN 0.7042341268812768 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c5 END)-(((((x'a689')OR(vt0.c0)))AND(rt0.c2)))) ASC  NULLS LAST, ((((vt0.c0)||(rt0.c3))) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((+ (rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ ('1656150164')))%((((rt0.c5)) NOT BETWEEN ((rt0.c4)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((CASE rt0.c1  WHEN vt0.c0 THEN 1931261180 WHEN vt1.c0 THEN 0.7042341268812768 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c5 END)-(((((x'a689')OR(vt0.c0)))AND(rt0.c2)))) ASC  NULLS LAST, ((((vt0.c0)||(rt0.c3))) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((+ (rt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((~ ('1656150164')))%((((rt0.c5)) NOT BETWEEN ((rt0.c4)) AND ((vt1.c0)))))) ORDER BY ((CASE rt0.c1  WHEN vt0.c0 THEN 1931261180 WHEN vt1.c0 THEN 0.7042341268812768 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c5 END)-(((((x'a689')OR(vt0.c0)))AND(rt0.c2)))) ASC  NULLS LAST, ((((vt0.c0)||(rt0.c3))) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((+ (rt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ('q');
SELECT SUM(count) FROM (SELECT (('q') IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('q');
SELECT SUM(count) FROM (SELECT (('q') IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('q');
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c3))>((rt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c3))>((rt0.c1))) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c3))>((rt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c3))>((rt0.c1))) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c3))>((rt0.c1))) AS INTEGER));
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c5) ORDER BY (NOT (rt0.c4 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NOT (rt0.c4 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c5) ORDER BY (NOT (rt0.c4 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NOT (rt0.c4 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c5) ORDER BY (NOT (rt0.c4 COLLATE NOCASE)) DESC;
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE (CAST(rt0.c3 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE (CAST(rt0.c3 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE (CAST(rt0.c3 COLLATE RTRIM AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY (~ (NULL)) ASC, ((rt0.c4) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (~ (NULL)) ASC, ((rt0.c4) NOTNULL) DESC);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY (~ (NULL)) ASC, ((rt0.c4) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (~ (NULL)) ASC, ((rt0.c4) NOTNULL) DESC);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY (~ (NULL)) ASC, ((rt0.c4) NOTNULL) DESC;
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))LIKE((vt1.c0 IN (t0.c35, t0.c71)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))LIKE((vt1.c0 IN (t0.c35, t0.c71))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))LIKE((vt1.c0 IN (t0.c35, t0.c71)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))LIKE((vt1.c0 IN (t0.c35, t0.c71))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))LIKE((vt1.c0 IN (t0.c35, t0.c71)))));
SELECT COUNT(*) FROM t0, vt1 WHERE (0Xffffffffbc49d9c1) ORDER BY ((((t0.c71)<>(t0.c35)))!=(HEX(DISTINCT vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0xffffffffbc49d9c1) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c71)<>(t0.c35)))<>(HEX(DISTINCT vt1.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE (0Xffffffffbc49d9c1) ORDER BY ((((t0.c71)<>(t0.c35)))!=(HEX(DISTINCT vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0xffffffffbc49d9c1) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c71)<>(t0.c35)))<>(HEX(DISTINCT vt1.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE (0Xffffffffbc49d9c1) ORDER BY ((((t0.c71)<>(t0.c35)))!=(HEX(DISTINCT vt1.c0))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt1 ON (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c1) NOT BETWEEN (t0.c35) AND (vt1.c0))) AND (((NULL)<<(rt0.c3)))) WHERE ((((((t0.c35) NOT NULL), NULL, -773817603))=(((NOT (vt1.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c5)), ((rt0.c5)>>(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c35) NOT NULL), NULL, -773817603))==(((NOT (vt1.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c5)), ((rt0.c5)>>(rt0.c2)))))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt1 ON (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c1) NOT BETWEEN (t0.c35) AND (vt1.c0))) AND (((NULL)<<(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt1 ON (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c1) NOT BETWEEN (t0.c35) AND (vt1.c0))) AND (((NULL)<<(rt0.c3)))) WHERE ((((((t0.c35) NOT NULL), NULL, -773817603))=(((NOT (vt1.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c5)), ((rt0.c5)>>(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c35) NOT NULL), NULL, -773817603))==(((NOT (vt1.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c5)), ((rt0.c5)>>(rt0.c2)))))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt1 ON (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c1) NOT BETWEEN (t0.c35) AND (vt1.c0))) AND (((NULL)<<(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt1 ON (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c1) NOT BETWEEN (t0.c35) AND (vt1.c0))) AND (((NULL)<<(rt0.c3)))) WHERE ((((((t0.c35) NOT NULL), NULL, -773817603))=(((NOT (vt1.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c5)), ((rt0.c5)>>(rt0.c2))))));
SELECT ALL * FROM rt0, t0 WHERE (((t0.c35)LIKE(rt0.c1 COLLATE RTRIM))) ORDER BY CASE ((rt0.c1)%(t0.c35))  WHEN CAST(rt0.c3 AS BLOB) THEN CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END WHEN rt0.c0 THEN ((rt0.c2)>=(t0.c35)) WHEN ((rt0.c1) IS TRUE) THEN (t0.c35 IN (rt0.c4)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c35)) THEN t0.c71 WHEN (((t0.c71, rt0.c0, rt0.c5)) BETWEEN ((t0.c35, rt0.c5, x'')) AND ((rt0.c2, rt0.c2, rt0.c0))) THEN (rt0.c4 IN ()) END, rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35)LIKE(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE ((rt0.c1)%(t0.c35))  WHEN CAST(rt0.c3 AS BLOB) THEN CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END WHEN rt0.c0 THEN ((rt0.c2)>=(t0.c35)) WHEN ((rt0.c1) IS TRUE) THEN (t0.c35 IN (rt0.c4)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c35)) THEN t0.c71 WHEN (((t0.c71, rt0.c0, rt0.c5)) BETWEEN ((t0.c35, rt0.c5, x'')) AND ((rt0.c2, rt0.c2, rt0.c0))) THEN (rt0.c4 IN ()) END, rt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((t0.c35)LIKE(rt0.c1 COLLATE RTRIM))) ORDER BY CASE ((rt0.c1)%(t0.c35))  WHEN CAST(rt0.c3 AS BLOB) THEN CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END WHEN rt0.c0 THEN ((rt0.c2)>=(t0.c35)) WHEN ((rt0.c1) IS TRUE) THEN (t0.c35 IN (rt0.c4)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c35)) THEN t0.c71 WHEN (((t0.c71, rt0.c0, rt0.c5)) BETWEEN ((t0.c35, rt0.c5, x'')) AND ((rt0.c2, rt0.c2, rt0.c0))) THEN (rt0.c4 IN ()) END, rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35)LIKE(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE ((rt0.c1)%(t0.c35))  WHEN CAST(rt0.c3 AS BLOB) THEN CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END WHEN rt0.c0 THEN ((rt0.c2)>=(t0.c35)) WHEN ((rt0.c1) IS TRUE) THEN (t0.c35 IN (rt0.c4)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c35)) THEN t0.c71 WHEN (((t0.c71, rt0.c0, rt0.c5)) BETWEEN ((t0.c35, rt0.c5, x'')) AND ((rt0.c2, rt0.c2, rt0.c0))) THEN (rt0.c4 IN ()) END, rt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((t0.c35)LIKE(rt0.c1 COLLATE RTRIM))) ORDER BY CASE ((rt0.c1)%(t0.c35))  WHEN CAST(rt0.c3 AS BLOB) THEN CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END WHEN rt0.c0 THEN ((rt0.c2)>=(t0.c35)) WHEN ((rt0.c1) IS TRUE) THEN (t0.c35 IN (rt0.c4)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c35)) THEN t0.c71 WHEN (((t0.c71, rt0.c0, rt0.c5)) BETWEEN ((t0.c35, rt0.c5, x'')) AND ((rt0.c2, rt0.c2, rt0.c0))) THEN (rt0.c4 IN ()) END, rt0.c1 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ('嬇D');
SELECT SUM(count) FROM (SELECT (('嬇D') IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ('嬇D');
SELECT SUM(count) FROM (SELECT (('嬇D') IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ('嬇D');
SELECT COUNT(*) FROM rt0 WHERE ((- ((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((- ((- (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- ((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((- ((- (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- ((- (rt0.c3)))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((NOT (t0.c35))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c35))) IS TRUE)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((NOT (t0.c35))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c35))) IS TRUE)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((NOT (t0.c35))) IS TRUE));
SELECT * FROM vt1, rt0 WHERE (((CASE rt0.c5  WHEN rt0.c4 THEN rt0.c1 ELSE vt1.c0 END)IS(CASE vt1.c0  WHEN rt0.c0 THEN rt0.c4 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c5  WHEN rt0.c4 THEN rt0.c1 ELSE vt1.c0 END)IS(CASE vt1.c0  WHEN rt0.c0 THEN rt0.c4 ELSE NULL END))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((CASE rt0.c5  WHEN rt0.c4 THEN rt0.c1 ELSE vt1.c0 END)IS(CASE vt1.c0  WHEN rt0.c0 THEN rt0.c4 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c5  WHEN rt0.c4 THEN rt0.c1 ELSE vt1.c0 END)IS(CASE vt1.c0  WHEN rt0.c0 THEN rt0.c4 ELSE NULL END))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((CASE rt0.c5  WHEN rt0.c4 THEN rt0.c1 ELSE vt1.c0 END)IS(CASE vt1.c0  WHEN rt0.c0 THEN rt0.c4 ELSE NULL END)));
SELECT * FROM t0 WHERE (((((((((t0.c35)AND(t0.c35)))AND(t0.c35)))OR(((t0.c71) BETWEEN (t0.c71) AND (t0.c35)))))AND(0.496294778395867))) ORDER BY ((((t0.c71)|(t0.c71))) BETWEEN ((((t0.c35))<(('1651314179')))) AND ((((t0.c35)) NOT BETWEEN ((t0.c71)) AND ((t0.c71)))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c35)AND(t0.c35)))AND(t0.c35)))OR(((t0.c71) BETWEEN (t0.c71) AND (t0.c35)))))AND(0.496294778395867))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c71)|(t0.c71))) BETWEEN ((((t0.c35))<(('1651314179')))) AND ((((t0.c35)) NOT BETWEEN ((t0.c71)) AND ((t0.c71))))));
SELECT * FROM t0 WHERE (((((((((t0.c35)AND(t0.c35)))AND(t0.c35)))OR(((t0.c71) BETWEEN (t0.c71) AND (t0.c35)))))AND(0.496294778395867))) ORDER BY ((((t0.c71)|(t0.c71))) BETWEEN ((((t0.c35))<(('1651314179')))) AND ((((t0.c35)) NOT BETWEEN ((t0.c71)) AND ((t0.c71)))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c35)AND(t0.c35)))AND(t0.c35)))OR(((t0.c71) BETWEEN (t0.c71) AND (t0.c35)))))AND(0.496294778395867))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c71)|(t0.c71))) BETWEEN ((((t0.c35))<(('1651314179')))) AND ((((t0.c35)) NOT BETWEEN ((t0.c71)) AND ((t0.c71))))));
SELECT * FROM t0 WHERE (((((((((t0.c35)AND(t0.c35)))AND(t0.c35)))OR(((t0.c71) BETWEEN (t0.c71) AND (t0.c35)))))AND(0.496294778395867))) ORDER BY ((((t0.c71)|(t0.c71))) BETWEEN ((((t0.c35))<(('1651314179')))) AND ((((t0.c35)) NOT BETWEEN ((t0.c71)) AND ((t0.c71)))));
SELECT * FROM rt0, vt1 CROSS JOIN t0 ON NULLIF(DISTINCT 0Xffffffff9391a46f, ((t0.c35)OR(rt0.c5))) LEFT OUTER JOIN vt0 ON CASE WHEN rt0.c3 THEN ((0.4834156349802027)>(rt0.c1)) END WHERE (((((rt0.c5)LIKE(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)LIKE(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN t0 ON NULLIF(DISTINCT 0Xffffffff9391a46f, ((t0.c35)OR(rt0.c5))) LEFT OUTER JOIN vt0 ON CASE WHEN rt0.c3 THEN ((0.4834156349802027)>(rt0.c1)) END);
SELECT * FROM rt0, vt1 CROSS JOIN t0 ON NULLIF(DISTINCT 0Xffffffff9391a46f, ((t0.c35)OR(rt0.c5))) LEFT OUTER JOIN vt0 ON CASE WHEN rt0.c3 THEN ((0.4834156349802027)>(rt0.c1)) END WHERE (((((rt0.c5)LIKE(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)LIKE(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN t0 ON NULLIF(DISTINCT 0Xffffffff9391a46f, ((t0.c35)OR(rt0.c5))) LEFT OUTER JOIN vt0 ON CASE WHEN rt0.c3 THEN ((0.4834156349802027)>(rt0.c1)) END);
SELECT * FROM rt0, vt1 CROSS JOIN t0 ON NULLIF(DISTINCT 0Xffffffff9391a46f, ((t0.c35)OR(rt0.c5))) LEFT OUTER JOIN vt0 ON CASE WHEN rt0.c3 THEN ((0.4834156349802027)>(rt0.c1)) END WHERE (((((rt0.c5)LIKE(rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((+ (CASE x''  WHEN 0.2577910820478547 THEN vt1.c0 END))) ORDER BY ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)))OR(rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE x''  WHEN 0.2577910820478547 THEN vt1.c0 END))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)))OR(rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((+ (CASE x''  WHEN 0.2577910820478547 THEN vt1.c0 END))) ORDER BY ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)))OR(rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE x''  WHEN 0.2577910820478547 THEN vt1.c0 END))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)))OR(rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((+ (CASE x''  WHEN 0.2577910820478547 THEN vt1.c0 END))) ORDER BY ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)))OR(rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (0.48130052159987735) ORDER BY ((((t0.c35) BETWEEN (t0.c71) AND (t0.c71)))*(((t0.c71)<=(t0.c35))));
SELECT SUM(count) FROM (SELECT ((0.48130052159987735) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c35) BETWEEN (t0.c71) AND (t0.c71)))*(((t0.c71)<=(t0.c35)))));
SELECT * FROM t0 WHERE (0.48130052159987735) ORDER BY ((((t0.c35) BETWEEN (t0.c71) AND (t0.c71)))*(((t0.c71)<=(t0.c35))));
SELECT SUM(count) FROM (SELECT ((0.48130052159987735) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c35) BETWEEN (t0.c71) AND (t0.c71)))*(((t0.c71)<=(t0.c35)))));
SELECT * FROM t0 WHERE (0.48130052159987735) ORDER BY ((((t0.c35) BETWEEN (t0.c71) AND (t0.c71)))*(((t0.c71)<=(t0.c35))));
SELECT * FROM rt0 CROSS JOIN t0 ON IFNULL(DISTINCT ((rt0.c1)<<(rt0.c0)), ((t0.c35) NOT BETWEEN ('') AND (rt0.c4))) WHERE (((t0.c35) NOT BETWEEN ((+ (rt0.c4))) AND (((t0.c35)*(rt0.c5))))) ORDER BY (((~ (rt0.c1))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35) NOT BETWEEN ((+ (rt0.c4))) AND (((t0.c35)*(rt0.c5))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON IFNULL(DISTINCT ((rt0.c1)<<(rt0.c0)), ((t0.c35) NOT BETWEEN ('') AND (rt0.c4))) ORDER BY (((~ (rt0.c1))) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN t0 ON IFNULL(DISTINCT ((rt0.c1)<<(rt0.c0)), ((t0.c35) NOT BETWEEN ('') AND (rt0.c4))) WHERE (((t0.c35) NOT BETWEEN ((+ (rt0.c4))) AND (((t0.c35)*(rt0.c5))))) ORDER BY (((~ (rt0.c1))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35) NOT BETWEEN ((+ (rt0.c4))) AND (((t0.c35)*(rt0.c5))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON IFNULL(DISTINCT ((rt0.c1)<<(rt0.c0)), ((t0.c35) NOT BETWEEN ('') AND (rt0.c4))) ORDER BY (((~ (rt0.c1))) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN t0 ON IFNULL(DISTINCT ((rt0.c1)<<(rt0.c0)), ((t0.c35) NOT BETWEEN ('') AND (rt0.c4))) WHERE (((t0.c35) NOT BETWEEN ((+ (rt0.c4))) AND (((t0.c35)*(rt0.c5))))) ORDER BY (((~ (rt0.c1))) NOTNULL) ASC  NULLS FIRST;
SELECT * FROM vt0, rt0, t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (NULL);
SELECT ALL * FROM vt1 WHERE ('1329573836' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('1329573836' COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('1329573836' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('1329573836' COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('1329573836' COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE NOCASE) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE NOCASE) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE NOCASE) ORDER BY x'' DESC;
SELECT ALL * FROM t0, vt0 WHERE (UNLIKELY(DISTINCT CAST(t0.c35 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CAST(t0.c35 AS TEXT))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (UNLIKELY(DISTINCT CAST(t0.c35 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CAST(t0.c35 AS TEXT))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (UNLIKELY(DISTINCT CAST(t0.c35 AS TEXT)));
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE (((((- (x''))))<=(((- (rt0.c0)))))) ORDER BY 0.7290513476812936 ASC;
SELECT SUM(count) FROM (SELECT ((((((- (x''))))<=(((- (rt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY 0.7290513476812936 ASC);
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE (((((- (x''))))<=(((- (rt0.c0)))))) ORDER BY 0.7290513476812936 ASC;
SELECT SUM(count) FROM (SELECT ((((((- (x''))))<=(((- (rt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY 0.7290513476812936 ASC);
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE (((((- (x''))))<=(((- (rt0.c0)))))) ORDER BY 0.7290513476812936 ASC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)OR(vt0.c0)), (~ (vt0.c0)), ((vt0.c0) ISNULL))) AND ((((x'')*(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '1813334393', vt0.c0, '-553577069')) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)OR(vt0.c0)), (~ (vt0.c0)), ((vt0.c0) ISNULL))) AND ((((x'')*(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '1813334393', vt0.c0, '-553577069')) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)OR(vt0.c0)), (~ (vt0.c0)), ((vt0.c0) ISNULL))) AND ((((x'')*(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '1813334393', vt0.c0, '-553577069')) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)OR(vt0.c0)), (~ (vt0.c0)), ((vt0.c0) ISNULL))) AND ((((x'')*(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '1813334393', vt0.c0, '-553577069')) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)OR(vt0.c0)), (~ (vt0.c0)), ((vt0.c0) ISNULL))) AND ((((x'')*(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '1813334393', vt0.c0, '-553577069')) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))));
SELECT COUNT(*) FROM t0, vt0 WHERE (0.3371175859441079) ORDER BY ((0.45092478564752025)GLOB((((t0.c35, vt0.c0, t0.c35)) NOT BETWEEN ((t0.c35, vt0.c0, t0.c35)) AND ((t0.c71, vt0.c0, t0.c35))))) ASC;
SELECT SUM(count) FROM (SELECT ((0.3371175859441079) IS TRUE)  as count FROM t0, vt0 ORDER BY ((0.45092478564752025)GLOB((((t0.c35, vt0.c0, t0.c35)) NOT BETWEEN ((t0.c35, vt0.c0, t0.c35)) AND ((t0.c71, vt0.c0, t0.c35))))) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (0.3371175859441079) ORDER BY ((0.45092478564752025)GLOB((((t0.c35, vt0.c0, t0.c35)) NOT BETWEEN ((t0.c35, vt0.c0, t0.c35)) AND ((t0.c71, vt0.c0, t0.c35))))) ASC;
SELECT SUM(count) FROM (SELECT ((0.3371175859441079) IS TRUE)  as count FROM t0, vt0 ORDER BY ((0.45092478564752025)GLOB((((t0.c35, vt0.c0, t0.c35)) NOT BETWEEN ((t0.c35, vt0.c0, t0.c35)) AND ((t0.c71, vt0.c0, t0.c35))))) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (0.3371175859441079) ORDER BY ((0.45092478564752025)GLOB((((t0.c35, vt0.c0, t0.c35)) NOT BETWEEN ((t0.c35, vt0.c0, t0.c35)) AND ((t0.c71, vt0.c0, t0.c35))))) ASC;
SELECT ALL * FROM vt1, vt0, t0 RIGHT OUTER JOIN rt0 ON (((((('w\') BETWEEN (rt0.c5) AND (rt0.c3)))AND((((vt1.c0, t0.c71, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c4)) AND ((vt1.c0, rt0.c0, rt0.c3))))))AND(((((rt0.c3)AND(NULL)))AND(x'')))) WHERE (CASE ((((rt0.c3)OR(NULL)))OR(rt0.c5))  WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN CASE rt0.c2  WHEN t0.c71 THEN t0.c35 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c3)OR(NULL)))OR(rt0.c5))  WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN CASE rt0.c2  WHEN t0.c71 THEN t0.c35 END END) IS TRUE)  as count FROM vt1, vt0, t0 RIGHT OUTER JOIN rt0 ON (((((('w\') BETWEEN (rt0.c5) AND (rt0.c3)))AND((((vt1.c0, t0.c71, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c4)) AND ((vt1.c0, rt0.c0, rt0.c3))))))AND(((((rt0.c3)AND(NULL)))AND(x'')))));
SELECT ALL * FROM vt1, vt0, t0 RIGHT OUTER JOIN rt0 ON (((((('w\') BETWEEN (rt0.c5) AND (rt0.c3)))AND((((vt1.c0, t0.c71, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c4)) AND ((vt1.c0, rt0.c0, rt0.c3))))))AND(((((rt0.c3)AND(NULL)))AND(x'')))) WHERE (CASE ((((rt0.c3)OR(NULL)))OR(rt0.c5))  WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN CASE rt0.c2  WHEN t0.c71 THEN t0.c35 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c3)OR(NULL)))OR(rt0.c5))  WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN CASE rt0.c2  WHEN t0.c71 THEN t0.c35 END END) IS TRUE)  as count FROM vt1, vt0, t0 RIGHT OUTER JOIN rt0 ON (((((('w\') BETWEEN (rt0.c5) AND (rt0.c3)))AND((((vt1.c0, t0.c71, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c4)) AND ((vt1.c0, rt0.c0, rt0.c3))))))AND(((((rt0.c3)AND(NULL)))AND(x'')))));
SELECT ALL * FROM vt1, vt0, t0 RIGHT OUTER JOIN rt0 ON (((((('w\') BETWEEN (rt0.c5) AND (rt0.c3)))AND((((vt1.c0, t0.c71, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c4)) AND ((vt1.c0, rt0.c0, rt0.c3))))))AND(((((rt0.c3)AND(NULL)))AND(x'')))) WHERE (CASE ((((rt0.c3)OR(NULL)))OR(rt0.c5))  WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN CASE rt0.c2  WHEN t0.c71 THEN t0.c35 END END);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c2)&(vt1.c0))) BETWEEN ((('1106742364') NOT BETWEEN (rt0.c5) AND (vt1.c0))) AND (rt0.c4 COLLATE RTRIM))) ORDER BY NULL DESC  NULLS LAST, (+ (vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)&(vt1.c0))) BETWEEN ((('1106742364') NOT BETWEEN (rt0.c5) AND (vt1.c0))) AND (rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0 ORDER BY NULL DESC  NULLS LAST, (+ (vt1.c0)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c2)&(vt1.c0))) BETWEEN ((('1106742364') NOT BETWEEN (rt0.c5) AND (vt1.c0))) AND (rt0.c4 COLLATE RTRIM))) ORDER BY NULL DESC  NULLS LAST, (+ (vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)&(vt1.c0))) BETWEEN ((('1106742364') NOT BETWEEN (rt0.c5) AND (vt1.c0))) AND (rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0 ORDER BY NULL DESC  NULLS LAST, (+ (vt1.c0)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c2)&(vt1.c0))) BETWEEN ((('1106742364') NOT BETWEEN (rt0.c5) AND (vt1.c0))) AND (rt0.c4 COLLATE RTRIM))) ORDER BY NULL DESC  NULLS LAST, (+ (vt1.c0)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)OR(NULL)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY ((((vt1.c0)+(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(NULL)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)+(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)OR(NULL)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY ((((vt1.c0)+(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(NULL)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)+(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)OR(NULL)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY ((((vt1.c0)+(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((vt0.c0)AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))))AND((~ (vt1.c0)))))OR(vt0.c0 COLLATE BINARY))) ORDER BY CAST(((((((((0.059678973818014014)OR(vt0.c0)))AND('䑻hpZ!qH9g')))OR(vt1.c0)))AND(vt0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))))AND((~ (vt1.c0)))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((((((((0.059678973818014014)OR(vt0.c0)))AND('䑻hpZ!qH9g')))OR(vt1.c0)))AND(vt0.c0)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((vt0.c0)AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))))AND((~ (vt1.c0)))))OR(vt0.c0 COLLATE BINARY))) ORDER BY CAST(((((((((0.059678973818014014)OR(vt0.c0)))AND('䑻hpZ!qH9g')))OR(vt1.c0)))AND(vt0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))))AND((~ (vt1.c0)))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((((((((0.059678973818014014)OR(vt0.c0)))AND('䑻hpZ!qH9g')))OR(vt1.c0)))AND(vt0.c0)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((vt0.c0)AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))))AND((~ (vt1.c0)))))OR(vt0.c0 COLLATE BINARY))) ORDER BY CAST(((((((((0.059678973818014014)OR(vt0.c0)))AND('䑻hpZ!qH9g')))OR(vt1.c0)))AND(vt0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND((((rt0.c3)) BETWEEN (('<Z Yᖓau')) AND ((rt0.c2))))))AND((((t0.c71))>=((t0.c35))))) INNER JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)) COLLATE BINARY WHERE (((((((rt0.c2) BETWEEN (t0.c35) AND (t0.c71)))OR(((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c0)))AND(t0.c71)))AND(rt0.c2)))))AND((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) BETWEEN (t0.c35) AND (t0.c71)))OR(((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c0)))AND(t0.c71)))AND(rt0.c2)))))AND((rt0.c3 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND((((rt0.c3)) BETWEEN (('<Z Yᖓau')) AND ((rt0.c2))))))AND((((t0.c71))>=((t0.c35))))) INNER JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)) COLLATE BINARY);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND((((rt0.c3)) BETWEEN (('<Z Yᖓau')) AND ((rt0.c2))))))AND((((t0.c71))>=((t0.c35))))) INNER JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)) COLLATE BINARY WHERE (((((((rt0.c2) BETWEEN (t0.c35) AND (t0.c71)))OR(((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c0)))AND(t0.c71)))AND(rt0.c2)))))AND((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) BETWEEN (t0.c35) AND (t0.c71)))OR(((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c0)))AND(t0.c71)))AND(rt0.c2)))))AND((rt0.c3 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND((((rt0.c3)) BETWEEN (('<Z Yᖓau')) AND ((rt0.c2))))))AND((((t0.c71))>=((t0.c35))))) INNER JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)) COLLATE BINARY);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND((((rt0.c3)) BETWEEN (('<Z Yᖓau')) AND ((rt0.c2))))))AND((((t0.c71))>=((t0.c35))))) INNER JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)) COLLATE BINARY WHERE (((((((rt0.c2) BETWEEN (t0.c35) AND (t0.c71)))OR(((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c0)))AND(t0.c71)))AND(rt0.c2)))))AND((rt0.c3 IN ()))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE ((vt1.c0)*(rt0.c1))  WHEN (rt0.c2 IN (rt0.c0)) THEN rt0.c4 WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c3, rt0.c5, rt0.c3, vt1.c0, rt0.c3))>((rt0.c3, rt0.c3, rt0.c4, rt0.c3, rt0.c0))) WHEN ((rt0.c3)||(rt0.c4)) THEN (rt0.c5 IN ()) ELSE rt0.c3 END) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)*(rt0.c1))  WHEN (rt0.c2 IN (rt0.c0)) THEN rt0.c4 WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c3, rt0.c5, rt0.c3, vt1.c0, rt0.c3))>((rt0.c3, rt0.c3, rt0.c4, rt0.c3, rt0.c0))) WHEN ((rt0.c3)||(rt0.c4)) THEN (rt0.c5 IN ()) ELSE rt0.c3 END) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE ((vt1.c0)*(rt0.c1))  WHEN (rt0.c2 IN (rt0.c0)) THEN rt0.c4 WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c3, rt0.c5, rt0.c3, vt1.c0, rt0.c3))>((rt0.c3, rt0.c3, rt0.c4, rt0.c3, rt0.c0))) WHEN ((rt0.c3)||(rt0.c4)) THEN (rt0.c5 IN ()) ELSE rt0.c3 END) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)*(rt0.c1))  WHEN (rt0.c2 IN (rt0.c0)) THEN rt0.c4 WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c3, rt0.c5, rt0.c3, vt1.c0, rt0.c3))>((rt0.c3, rt0.c3, rt0.c4, rt0.c3, rt0.c0))) WHEN ((rt0.c3)||(rt0.c4)) THEN (rt0.c5 IN ()) ELSE rt0.c3 END) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE ((vt1.c0)*(rt0.c1))  WHEN (rt0.c2 IN (rt0.c0)) THEN rt0.c4 WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c3, rt0.c5, rt0.c3, vt1.c0, rt0.c3))>((rt0.c3, rt0.c3, rt0.c4, rt0.c3, rt0.c0))) WHEN ((rt0.c3)||(rt0.c4)) THEN (rt0.c5 IN ()) ELSE rt0.c3 END) ORDER BY NULL  NULLS FIRST;
SELECT * FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0, 0.9181487526830877));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT vt0.c0, 0.9181487526830877)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0, 0.9181487526830877));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT vt0.c0, 0.9181487526830877)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0, 0.9181487526830877));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT)) ORDER BY (((LIKELIHOOD(rt0.c1, 0.13716852169085292), (- (x'')), ((rt0.c3) IS TRUE)))<((((rt0.c2) IS FALSE), CAST(vt1.c0 AS NUMERIC), 0Xffffffffcc0c5be2)));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((LIKELIHOOD(rt0.c1, 0.13716852169085292), (- (x'')), ((rt0.c3) IS TRUE)))<((((rt0.c2) IS FALSE), CAST(vt1.c0 AS NUMERIC), 0Xffffffffcc0c5be2))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT)) ORDER BY (((LIKELIHOOD(rt0.c1, 0.13716852169085292), (- (x'')), ((rt0.c3) IS TRUE)))<((((rt0.c2) IS FALSE), CAST(vt1.c0 AS NUMERIC), 0Xffffffffcc0c5be2)));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((LIKELIHOOD(rt0.c1, 0.13716852169085292), (- (x'')), ((rt0.c3) IS TRUE)))<((((rt0.c2) IS FALSE), CAST(vt1.c0 AS NUMERIC), 0Xffffffffcc0c5be2))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT)) ORDER BY (((LIKELIHOOD(rt0.c1, 0.13716852169085292), (- (x'')), ((rt0.c3) IS TRUE)))<((((rt0.c2) IS FALSE), CAST(vt1.c0 AS NUMERIC), 0Xffffffffcc0c5be2)));
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN '869814587' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN '869814587' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN '869814587' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN '869814587' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN '869814587' ELSE vt0.c0 END)));
SELECT * FROM vt0, t0, rt0 WHERE (CASE ((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c3))  WHEN 831523570 THEN x'6a6325aa113e' ELSE ((rt0.c5)+(rt0.c3)) END) ORDER BY ((((rt0.c3)||('1177322948'))) BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0)))) AND ((((NULL, rt0.c5, rt0.c4))<>((x'', t0.c35, t0.c71))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c3))  WHEN 831523570 THEN x'6a6325aa113e' ELSE ((rt0.c5)+(rt0.c3)) END) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((rt0.c3)||('1177322948'))) BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0)))) AND ((((NULL, rt0.c5, rt0.c4))<>((x'', t0.c35, t0.c71))))) ASC);
SELECT * FROM vt0, t0, rt0 WHERE (CASE ((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c3))  WHEN 831523570 THEN x'6a6325aa113e' ELSE ((rt0.c5)+(rt0.c3)) END) ORDER BY ((((rt0.c3)||('1177322948'))) BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0)))) AND ((((NULL, rt0.c5, rt0.c4))<>((x'', t0.c35, t0.c71))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c3))  WHEN 831523570 THEN x'6a6325aa113e' ELSE ((rt0.c5)+(rt0.c3)) END) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((rt0.c3)||('1177322948'))) BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0)))) AND ((((NULL, rt0.c5, rt0.c4))<>((x'', t0.c35, t0.c71))))) ASC);
SELECT * FROM vt0, t0, rt0 WHERE (CASE ((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c3))  WHEN 831523570 THEN x'6a6325aa113e' ELSE ((rt0.c5)+(rt0.c3)) END) ORDER BY ((((rt0.c3)||('1177322948'))) BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0)))) AND ((((NULL, rt0.c5, rt0.c4))<>((x'', t0.c35, t0.c71))))) ASC;
SELECT ALL * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c5)) COLLATE BINARY) ORDER BY (((((((((((((- (rt0.c5)))OR((~ (NULL)))))AND((+ (rt0.c1)))))OR(((0.629667411025667)<>(rt0.c4)))))AND((+ (rt0.c3)))))OR(((0xfffffffface72544)<(rt0.c1)))))OR(0.40183932531030264)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c5)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((((- (rt0.c5)))OR((~ (NULL)))))AND((+ (rt0.c1)))))OR(((0.629667411025667)<>(rt0.c4)))))AND((+ (rt0.c3)))))OR(((0Xfffffffface72544)<(rt0.c1)))))OR(0.40183932531030264)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c5)) COLLATE BINARY) ORDER BY (((((((((((((- (rt0.c5)))OR((~ (NULL)))))AND((+ (rt0.c1)))))OR(((0.629667411025667)<>(rt0.c4)))))AND((+ (rt0.c3)))))OR(((0xfffffffface72544)<(rt0.c1)))))OR(0.40183932531030264)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c5)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((((- (rt0.c5)))OR((~ (NULL)))))AND((+ (rt0.c1)))))OR(((0.629667411025667)<>(rt0.c4)))))AND((+ (rt0.c3)))))OR(((0Xfffffffface72544)<(rt0.c1)))))OR(0.40183932531030264)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c5)) COLLATE BINARY) ORDER BY (((((((((((((- (rt0.c5)))OR((~ (NULL)))))AND((+ (rt0.c1)))))OR(((0.629667411025667)<>(rt0.c4)))))AND((+ (rt0.c3)))))OR(((0xfffffffface72544)<(rt0.c1)))))OR(0.40183932531030264)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0, vt1 INNER JOIN vt0 ON TRIM(((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)), ((((vt0.c0)OR(rt0.c0)))OR(t0.c71))) WHERE ((((rt0.c1)) NOT BETWEEN ((CASE t0.c35  WHEN t0.c71 THEN t0.c71 ELSE rt0.c3 END)) AND (((rt0.c3 IN (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((CASE t0.c35  WHEN t0.c71 THEN t0.c71 ELSE rt0.c3 END)) AND (((rt0.c3 IN (rt0.c2)))))) IS TRUE)  as count FROM t0, rt0, vt1 INNER JOIN vt0 ON TRIM(((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)), ((((vt0.c0)OR(rt0.c0)))OR(t0.c71))));
SELECT COUNT(*) FROM t0, rt0, vt1 INNER JOIN vt0 ON TRIM(((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)), ((((vt0.c0)OR(rt0.c0)))OR(t0.c71))) WHERE ((((rt0.c1)) NOT BETWEEN ((CASE t0.c35  WHEN t0.c71 THEN t0.c71 ELSE rt0.c3 END)) AND (((rt0.c3 IN (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((CASE t0.c35  WHEN t0.c71 THEN t0.c71 ELSE rt0.c3 END)) AND (((rt0.c3 IN (rt0.c2)))))) IS TRUE)  as count FROM t0, rt0, vt1 INNER JOIN vt0 ON TRIM(((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)), ((((vt0.c0)OR(rt0.c0)))OR(t0.c71))));
SELECT COUNT(*) FROM t0, rt0, vt1 INNER JOIN vt0 ON TRIM(((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)), ((((vt0.c0)OR(rt0.c0)))OR(t0.c71))) WHERE ((((rt0.c1)) NOT BETWEEN ((CASE t0.c35  WHEN t0.c71 THEN t0.c71 ELSE rt0.c3 END)) AND (((rt0.c3 IN (rt0.c2))))));
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN (((vt1.c0)AND(vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) BETWEEN (((vt1.c0)AND(vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN (((vt1.c0)AND(vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) BETWEEN (((vt1.c0)AND(vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN (((vt1.c0)AND(vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT ALL * FROM vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON CASE (rt0.c2 IN (rt0.c2))  WHEN ((rt0.c1) BETWEEN (t0.c35) AND (rt0.c3)) THEN ((0.5767753504908866)IS NOT(t0.c35)) END WHERE ((((('-412914631')<<(rt0.c4))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((('-412914631')<<(rt0.c4))) NOT NULL)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON CASE (rt0.c2 IN (rt0.c2))  WHEN ((rt0.c1) BETWEEN (t0.c35) AND (rt0.c3)) THEN ((0.5767753504908866)IS NOT(t0.c35)) END);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON CASE (rt0.c2 IN (rt0.c2))  WHEN ((rt0.c1) BETWEEN (t0.c35) AND (rt0.c3)) THEN ((0.5767753504908866)IS NOT(t0.c35)) END WHERE ((((('-412914631')<<(rt0.c4))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((('-412914631')<<(rt0.c4))) NOT NULL)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON CASE (rt0.c2 IN (rt0.c2))  WHEN ((rt0.c1) BETWEEN (t0.c35) AND (rt0.c3)) THEN ((0.5767753504908866)IS NOT(t0.c35)) END);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON CASE (rt0.c2 IN (rt0.c2))  WHEN ((rt0.c1) BETWEEN (t0.c35) AND (rt0.c3)) THEN ((0.5767753504908866)IS NOT(t0.c35)) END WHERE ((((('-412914631')<<(rt0.c4))) NOT NULL));
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON CASE WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN (('')/(vt1.c0)) WHEN (((-464813526))>((t0.c35))) THEN CAST(x'' AS TEXT) WHEN (t0.c71 IN ()) THEN ((t0.c71)LIKE(t0.c35)) WHEN t0.c35 THEN 0.7512018734933875 WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)|(t0.c71)) ELSE ((t0.c71) BETWEEN ('') AND (vt1.c0)) END WHERE (CASE CASE WHEN x'3eea' THEN t0.c71 ELSE vt1.c0 END  WHEN vt1.c0 THEN t0.c35 COLLATE NOCASE WHEN ROUND(t0.c71, t0.c71) THEN vt1.c0 COLLATE RTRIM WHEN vt1.c0 COLLATE BINARY THEN '0.7580770570642119' END) ORDER BY ((t0.c71 COLLATE BINARY)<=(CAST(t0.c35 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN x'3eea' THEN t0.c71 ELSE vt1.c0 END  WHEN vt1.c0 THEN t0.c35 COLLATE NOCASE WHEN ROUND(t0.c71, t0.c71) THEN vt1.c0 COLLATE RTRIM WHEN vt1.c0 COLLATE BINARY THEN '0.7580770570642119' END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CASE WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN (('')/(vt1.c0)) WHEN (((-464813526))>((t0.c35))) THEN CAST(x'' AS TEXT) WHEN (t0.c71 IN ()) THEN ((t0.c71)LIKE(t0.c35)) WHEN t0.c35 THEN 0.7512018734933875 WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)|(t0.c71)) ELSE ((t0.c71) BETWEEN ('') AND (vt1.c0)) END ORDER BY ((t0.c71 COLLATE BINARY)<=(CAST(t0.c35 AS BLOB))) ASC);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON CASE WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN (('')/(vt1.c0)) WHEN (((-464813526))>((t0.c35))) THEN CAST(x'' AS TEXT) WHEN (t0.c71 IN ()) THEN ((t0.c71)LIKE(t0.c35)) WHEN t0.c35 THEN 0.7512018734933875 WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)|(t0.c71)) ELSE ((t0.c71) BETWEEN ('') AND (vt1.c0)) END WHERE (CASE CASE WHEN x'3eea' THEN t0.c71 ELSE vt1.c0 END  WHEN vt1.c0 THEN t0.c35 COLLATE NOCASE WHEN ROUND(t0.c71, t0.c71) THEN vt1.c0 COLLATE RTRIM WHEN vt1.c0 COLLATE BINARY THEN '0.7580770570642119' END) ORDER BY ((t0.c71 COLLATE BINARY)<=(CAST(t0.c35 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN x'3eea' THEN t0.c71 ELSE vt1.c0 END  WHEN vt1.c0 THEN t0.c35 COLLATE NOCASE WHEN ROUND(t0.c71, t0.c71) THEN vt1.c0 COLLATE RTRIM WHEN vt1.c0 COLLATE BINARY THEN '0.7580770570642119' END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CASE WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN (('')/(vt1.c0)) WHEN (((-464813526))>((t0.c35))) THEN CAST(x'' AS TEXT) WHEN (t0.c71 IN ()) THEN ((t0.c71)LIKE(t0.c35)) WHEN t0.c35 THEN 0.7512018734933875 WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)|(t0.c71)) ELSE ((t0.c71) BETWEEN ('') AND (vt1.c0)) END ORDER BY ((t0.c71 COLLATE BINARY)<=(CAST(t0.c35 AS BLOB))) ASC);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON CASE WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN (('')/(vt1.c0)) WHEN (((-464813526))>((t0.c35))) THEN CAST(x'' AS TEXT) WHEN (t0.c71 IN ()) THEN ((t0.c71)LIKE(t0.c35)) WHEN t0.c35 THEN 0.7512018734933875 WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)|(t0.c71)) ELSE ((t0.c71) BETWEEN ('') AND (vt1.c0)) END WHERE (CASE CASE WHEN x'3eea' THEN t0.c71 ELSE vt1.c0 END  WHEN vt1.c0 THEN t0.c35 COLLATE NOCASE WHEN ROUND(t0.c71, t0.c71) THEN vt1.c0 COLLATE RTRIM WHEN vt1.c0 COLLATE BINARY THEN '0.7580770570642119' END) ORDER BY ((t0.c71 COLLATE BINARY)<=(CAST(t0.c35 AS BLOB))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE '-284104324'  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END)OR(((((rt0.c5)AND(rt0.c0)))AND(rt0.c0)))))OR(rt0.c0)))OR(((rt0.c1)<=(rt0.c3)))))OR(TRIM(DISTINCT rt0.c5, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE '-284104324'  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END)OR(((((rt0.c5)AND(rt0.c0)))AND(rt0.c0)))))OR(rt0.c0)))OR(((rt0.c1)<=(rt0.c3)))))OR(TRIM(DISTINCT rt0.c5, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE '-284104324'  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END)OR(((((rt0.c5)AND(rt0.c0)))AND(rt0.c0)))))OR(rt0.c0)))OR(((rt0.c1)<=(rt0.c3)))))OR(TRIM(DISTINCT rt0.c5, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE '-284104324'  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END)OR(((((rt0.c5)AND(rt0.c0)))AND(rt0.c0)))))OR(rt0.c0)))OR(((rt0.c1)<=(rt0.c3)))))OR(TRIM(DISTINCT rt0.c5, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE '-284104324'  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END)OR(((((rt0.c5)AND(rt0.c0)))AND(rt0.c0)))))OR(rt0.c0)))OR(((rt0.c1)<=(rt0.c3)))))OR(TRIM(DISTINCT rt0.c5, rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt1 INNER JOIN vt0 ON (rt0.c4 COLLATE NOCASE IN ()) WHERE ((+ (rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c4))) IS TRUE)  as count FROM rt0, vt1 INNER JOIN vt0 ON (rt0.c4 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM rt0, vt1 INNER JOIN vt0 ON (rt0.c4 COLLATE NOCASE IN ()) WHERE ((+ (rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c4))) IS TRUE)  as count FROM rt0, vt1 INNER JOIN vt0 ON (rt0.c4 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM rt0, vt1 INNER JOIN vt0 ON (rt0.c4 COLLATE NOCASE IN ()) WHERE ((+ (rt0.c4)));
SELECT ALL * FROM t0, rt0, vt0 LEFT OUTER JOIN vt1 ON (('1509963701')-(((((t0.c71)AND(x'')))OR(rt0.c3)))) WHERE (((((((rt0.c1)AND(vt0.c0)))AND(x'38df')))AND(((rt0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(vt0.c0)))AND(x'38df')))AND(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM t0, rt0, vt0 LEFT OUTER JOIN vt1 ON (('1509963701')-(((((t0.c71)AND(x'')))OR(rt0.c3)))));
SELECT ALL * FROM t0, rt0, vt0 LEFT OUTER JOIN vt1 ON (('1509963701')-(((((t0.c71)AND(x'')))OR(rt0.c3)))) WHERE (((((((rt0.c1)AND(vt0.c0)))AND(x'38df')))AND(((rt0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(vt0.c0)))AND(x'38df')))AND(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM t0, rt0, vt0 LEFT OUTER JOIN vt1 ON (('1509963701')-(((((t0.c71)AND(x'')))OR(rt0.c3)))));
SELECT ALL * FROM t0, rt0, vt0 LEFT OUTER JOIN vt1 ON (('1509963701')-(((((t0.c71)AND(x'')))OR(rt0.c3)))) WHERE (((((((rt0.c1)AND(vt0.c0)))AND(x'38df')))AND(((rt0.c3) IS TRUE))));
SELECT * FROM rt0 WHERE (LIKELIHOOD(DISTINCT LOWER(rt0.c0), 0.9789904750194821));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT LOWER(rt0.c0), 0.9789904750194821)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LIKELIHOOD(DISTINCT LOWER(rt0.c0), 0.9789904750194821));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT LOWER(rt0.c0), 0.9789904750194821)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LIKELIHOOD(DISTINCT LOWER(rt0.c0), 0.9789904750194821));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (HEX((('2144235229') ISNULL)));
SELECT SUM(count) FROM (SELECT ((HEX((('2144235229') ISNULL))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (HEX((('2144235229') ISNULL)));
SELECT SUM(count) FROM (SELECT ((HEX((('2144235229') ISNULL))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (HEX((('2144235229') ISNULL)));
SELECT * FROM vt0, vt1 FULL OUTER JOIN t0 ON TRIM(((((((((NULL)OR(vt1.c0)))AND(0.6066951016972626)))AND(vt1.c0)))AND(rt0.c1)), x'') INNER JOIN rt0 ON '-119897707' COLLATE RTRIM WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY ((rt0.c2) NOT BETWEEN (CASE t0.c35  WHEN rt0.c2 THEN rt0.c4 ELSE t0.c35 END) AND (((rt0.c5)IS(t0.c35)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON TRIM(((((((((NULL)OR(vt1.c0)))AND(0.6066951016972626)))AND(vt1.c0)))AND(rt0.c1)), x'') INNER JOIN rt0 ON '-119897707' COLLATE RTRIM ORDER BY ((rt0.c2) NOT BETWEEN (CASE t0.c35  WHEN rt0.c2 THEN rt0.c4 ELSE t0.c35 END) AND (((rt0.c5)IS(t0.c35)))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 FULL OUTER JOIN t0 ON TRIM(((((((((NULL)OR(vt1.c0)))AND(0.6066951016972626)))AND(vt1.c0)))AND(rt0.c1)), x'') INNER JOIN rt0 ON '-119897707' COLLATE RTRIM WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY ((rt0.c2) NOT BETWEEN (CASE t0.c35  WHEN rt0.c2 THEN rt0.c4 ELSE t0.c35 END) AND (((rt0.c5)IS(t0.c35)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON TRIM(((((((((NULL)OR(vt1.c0)))AND(0.6066951016972626)))AND(vt1.c0)))AND(rt0.c1)), x'') INNER JOIN rt0 ON '-119897707' COLLATE RTRIM ORDER BY ((rt0.c2) NOT BETWEEN (CASE t0.c35  WHEN rt0.c2 THEN rt0.c4 ELSE t0.c35 END) AND (((rt0.c5)IS(t0.c35)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, rt0 RIGHT OUTER JOIN vt0 ON (((CASE rt0.c3  WHEN rt0.c5 THEN vt0.c0 WHEN vt1.c0 THEN t0.c71 WHEN rt0.c4 THEN rt0.c2 ELSE t0.c71 END))>((((rt0.c5) NOT NULL)))) WHERE (((((t0.c35)==(rt0.c0)))&((((rt0.c0, rt0.c3, t0.c35)) NOT BETWEEN ((NULL, rt0.c5, vt1.c0)) AND ((rt0.c3, rt0.c2, rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35)=(rt0.c0)))&((((rt0.c0, rt0.c3, t0.c35)) NOT BETWEEN ((NULL, rt0.c5, vt1.c0)) AND ((rt0.c3, rt0.c2, rt0.c4)))))) IS TRUE)  as count FROM t0, vt1, rt0 RIGHT OUTER JOIN vt0 ON (((CASE rt0.c3  WHEN rt0.c5 THEN vt0.c0 WHEN vt1.c0 THEN t0.c71 WHEN rt0.c4 THEN rt0.c2 ELSE t0.c71 END))>((((rt0.c5) NOT NULL)))));
SELECT COUNT(*) FROM t0, vt1, rt0 RIGHT OUTER JOIN vt0 ON (((CASE rt0.c3  WHEN rt0.c5 THEN vt0.c0 WHEN vt1.c0 THEN t0.c71 WHEN rt0.c4 THEN rt0.c2 ELSE t0.c71 END))>((((rt0.c5) NOT NULL)))) WHERE (((((t0.c35)==(rt0.c0)))&((((rt0.c0, rt0.c3, t0.c35)) NOT BETWEEN ((NULL, rt0.c5, vt1.c0)) AND ((rt0.c3, rt0.c2, rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c35)=(rt0.c0)))&((((rt0.c0, rt0.c3, t0.c35)) NOT BETWEEN ((NULL, rt0.c5, vt1.c0)) AND ((rt0.c3, rt0.c2, rt0.c4)))))) IS TRUE)  as count FROM t0, vt1, rt0 RIGHT OUTER JOIN vt0 ON (((CASE rt0.c3  WHEN rt0.c5 THEN vt0.c0 WHEN vt1.c0 THEN t0.c71 WHEN rt0.c4 THEN rt0.c2 ELSE t0.c71 END))>((((rt0.c5) NOT NULL)))));
SELECT COUNT(*) FROM t0, vt1, rt0 RIGHT OUTER JOIN vt0 ON (((CASE rt0.c3  WHEN rt0.c5 THEN vt0.c0 WHEN vt1.c0 THEN t0.c71 WHEN rt0.c4 THEN rt0.c2 ELSE t0.c71 END))>((((rt0.c5) NOT NULL)))) WHERE (((((t0.c35)==(rt0.c0)))&((((rt0.c0, rt0.c3, t0.c35)) NOT BETWEEN ((NULL, rt0.c5, vt1.c0)) AND ((rt0.c3, rt0.c2, rt0.c4))))));
SELECT ALL * FROM t0, rt0 WHERE (json_insert('錏U', ((rt0.c2)==(rt0.c3)), (t0.c35 IN (t0.c35))));
SELECT SUM(count) FROM (SELECT ALL ((json_insert('錏U', ((rt0.c2)=(rt0.c3)), (t0.c35 IN (t0.c35)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (json_insert('錏U', ((rt0.c2)==(rt0.c3)), (t0.c35 IN (t0.c35))));
SELECT SUM(count) FROM (SELECT ALL ((json_insert('錏U', ((rt0.c2)=(rt0.c3)), (t0.c35 IN (t0.c35)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM vt0 WHERE (LIKE((vt0.c0 IN ()), CAST(vt0.c0 AS BLOB))) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))==((CAST(vt0.c0 AS INTEGER)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE((vt0.c0 IN ()), CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))=((CAST(vt0.c0 AS INTEGER)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (LIKE((vt0.c0 IN ()), CAST(vt0.c0 AS BLOB))) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))==((CAST(vt0.c0 AS INTEGER)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE((vt0.c0 IN ()), CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))=((CAST(vt0.c0 AS INTEGER)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (LIKE((vt0.c0 IN ()), CAST(vt0.c0 AS BLOB))) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))==((CAST(vt0.c0 AS INTEGER)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 WHERE ((((rt0.c5 IN (rt0.c4)))>>((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5 IN (rt0.c4)))>>((~ (rt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 WHERE ((((rt0.c5 IN (rt0.c4)))>>((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5 IN (rt0.c4)))>>((~ (rt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 WHERE ((((rt0.c5 IN (rt0.c4)))>>((~ (rt0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR((((rt0.c2))==((rt0.c5))))))AND(TRIM(rt0.c1))) WHERE (((NULL)>>((((rt0.c2))<((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((NULL)>>((((rt0.c2))<((rt0.c3)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR((((rt0.c2))=((rt0.c5))))))AND(TRIM(rt0.c1))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR((((rt0.c2))==((rt0.c5))))))AND(TRIM(rt0.c1))) WHERE (((NULL)>>((((rt0.c2))<((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((NULL)>>((((rt0.c2))<((rt0.c3)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR((((rt0.c2))=((rt0.c5))))))AND(TRIM(rt0.c1))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR((((rt0.c2))==((rt0.c5))))))AND(TRIM(rt0.c1))) WHERE (((NULL)>>((((rt0.c2))<((rt0.c3))))));
SELECT * FROM vt1, rt0 WHERE (((rt0.c4)IS(((rt0.c5) BETWEEN (rt0.c0) AND (rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)IS(((rt0.c5) BETWEEN (rt0.c0) AND (rt0.c5))))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0);
SELECT * FROM vt1, rt0 WHERE (((rt0.c4)IS(((rt0.c5) BETWEEN (rt0.c0) AND (rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)IS(((rt0.c5) BETWEEN (rt0.c0) AND (rt0.c5))))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0);
SELECT * FROM vt1, rt0 WHERE (((rt0.c4)IS(((rt0.c5) BETWEEN (rt0.c0) AND (rt0.c5)))));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2) IS FALSE) AS NUMERIC)) ORDER BY (((((rt0.c2))<((rt0.c5))))=(((x'a1cc')+(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2))<((rt0.c5))))==(((x'a1cc')+(rt0.c1)))) ASC);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2) IS FALSE) AS NUMERIC)) ORDER BY (((((rt0.c2))<((rt0.c5))))=(((x'a1cc')+(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2))<((rt0.c5))))==(((x'a1cc')+(rt0.c1)))) ASC);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2) IS FALSE) AS NUMERIC)) ORDER BY (((((rt0.c2))<((rt0.c5))))=(((x'a1cc')+(rt0.c1)))) ASC;
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt1 ON ((((((((((NULL) NOTNULL))AND((NOT (rt0.c4)))))AND((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c5))))))AND(UNLIKELY(vt1.c0))))OR(((((rt0.c2)AND(rt0.c5)))AND(t0.c35)))) CROSS JOIN vt0 ON (((((rt0.c2 IN (t0.c71)))OR(UNLIKELY(DISTINCT vt1.c0))))OR(((rt0.c0) NOT NULL))) WHERE (((((((t0.c35)OR(t0.c71)))AND(vt0.c0)))IS NOT(((vt0.c0) IS FALSE)))) ORDER BY CASE rt0.c0  WHEN t0.c71 THEN t0.c35 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((t0.c35)OR(t0.c71)))AND(vt0.c0)))IS NOT(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt1 ON ((((((((((NULL) NOTNULL))AND((NOT (rt0.c4)))))AND((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c5))))))AND(UNLIKELY(vt1.c0))))OR(((((rt0.c2)AND(rt0.c5)))AND(t0.c35)))) CROSS JOIN vt0 ON (((((rt0.c2 IN (t0.c71)))OR(UNLIKELY(DISTINCT vt1.c0))))OR(((rt0.c0) NOT NULL))) ORDER BY CASE rt0.c0  WHEN t0.c71 THEN t0.c35 END COLLATE BINARY);
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt1 ON ((((((((((NULL) NOTNULL))AND((NOT (rt0.c4)))))AND((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c5))))))AND(UNLIKELY(vt1.c0))))OR(((((rt0.c2)AND(rt0.c5)))AND(t0.c35)))) CROSS JOIN vt0 ON (((((rt0.c2 IN (t0.c71)))OR(UNLIKELY(DISTINCT vt1.c0))))OR(((rt0.c0) NOT NULL))) WHERE (((((((t0.c35)OR(t0.c71)))AND(vt0.c0)))IS NOT(((vt0.c0) IS FALSE)))) ORDER BY CASE rt0.c0  WHEN t0.c71 THEN t0.c35 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((t0.c35)OR(t0.c71)))AND(vt0.c0)))IS NOT(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt1 ON ((((((((((NULL) NOTNULL))AND((NOT (rt0.c4)))))AND((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c5))))))AND(UNLIKELY(vt1.c0))))OR(((((rt0.c2)AND(rt0.c5)))AND(t0.c35)))) CROSS JOIN vt0 ON (((((rt0.c2 IN (t0.c71)))OR(UNLIKELY(DISTINCT vt1.c0))))OR(((rt0.c0) NOT NULL))) ORDER BY CASE rt0.c0  WHEN t0.c71 THEN t0.c35 END COLLATE BINARY);
SELECT COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt1 ON ((((((((((NULL) NOTNULL))AND((NOT (rt0.c4)))))AND((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c5))))))AND(UNLIKELY(vt1.c0))))OR(((((rt0.c2)AND(rt0.c5)))AND(t0.c35)))) CROSS JOIN vt0 ON (((((rt0.c2 IN (t0.c71)))OR(UNLIKELY(DISTINCT vt1.c0))))OR(((rt0.c0) NOT NULL))) WHERE (((((((t0.c35)OR(t0.c71)))AND(vt0.c0)))IS NOT(((vt0.c0) IS FALSE)))) ORDER BY CASE rt0.c0  WHEN t0.c71 THEN t0.c35 END COLLATE BINARY;
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0) NOT NULL))==((+ (rt0.c3))))) ORDER BY ((((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))!=((0.611124966935646))), ((rt0.c5)OR(((((1.656284816E9)AND(rt0.c5)))OR(x'87dd'))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))=((+ (rt0.c3))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))<>((0.611124966935646))), ((rt0.c5)OR(((((1.656284816E9)AND(rt0.c5)))OR(x'87dd')))));
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0) NOT NULL))==((+ (rt0.c3))))) ORDER BY ((((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))!=((0.611124966935646))), ((rt0.c5)OR(((((1.656284816E9)AND(rt0.c5)))OR(x'87dd'))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))=((+ (rt0.c3))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))<>((0.611124966935646))), ((rt0.c5)OR(((((1.656284816E9)AND(rt0.c5)))OR(x'87dd')))));
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0) NOT NULL))==((+ (rt0.c3))))) ORDER BY ((((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))!=((0.611124966935646))), ((rt0.c5)OR(((((1.656284816E9)AND(rt0.c5)))OR(x'87dd'))));
SELECT ALL * FROM vt1, rt0 WHERE ((((((vt1.c0) BETWEEN (rt0.c5) AND (vt1.c0)), ABS(rt0.c4), CASE WHEN vt1.c0 THEN rt0.c5 END))>((((((vt1.c0)AND(rt0.c1)))OR(rt0.c0)), rt0.c4 COLLATE NOCASE, CAST(rt0.c3 AS TEXT))))) ORDER BY '-253723314'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) BETWEEN (rt0.c5) AND (vt1.c0)), ABS(rt0.c4), CASE WHEN vt1.c0 THEN rt0.c5 END))>((((((vt1.c0)AND(rt0.c1)))OR(rt0.c0)), rt0.c4 COLLATE NOCASE, CAST(rt0.c3 AS TEXT))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY '-253723314'  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE ((((((vt1.c0) BETWEEN (rt0.c5) AND (vt1.c0)), ABS(rt0.c4), CASE WHEN vt1.c0 THEN rt0.c5 END))>((((((vt1.c0)AND(rt0.c1)))OR(rt0.c0)), rt0.c4 COLLATE NOCASE, CAST(rt0.c3 AS TEXT))))) ORDER BY '-253723314'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) BETWEEN (rt0.c5) AND (vt1.c0)), ABS(rt0.c4), CASE WHEN vt1.c0 THEN rt0.c5 END))>((((((vt1.c0)AND(rt0.c1)))OR(rt0.c0)), rt0.c4 COLLATE NOCASE, CAST(rt0.c3 AS TEXT))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY '-253723314'  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE ((((((vt1.c0) BETWEEN (rt0.c5) AND (vt1.c0)), ABS(rt0.c4), CASE WHEN vt1.c0 THEN rt0.c5 END))>((((((vt1.c0)AND(rt0.c1)))OR(rt0.c0)), rt0.c4 COLLATE NOCASE, CAST(rt0.c3 AS TEXT))))) ORDER BY '-253723314'  NULLS FIRST;
SELECT ALL * FROM vt0, t0, vt1 LEFT OUTER JOIN rt0 ON rt0.c4 WHERE (((((((((((rt0.c0) NOT NULL))OR(HEX(t0.c35))))AND((rt0.c1 IN ()))))OR(TRIM(t0.c71, rt0.c3))))AND(((vt1.c0)>(t0.c71)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) NOT NULL))OR(HEX(t0.c35))))AND((rt0.c1 IN ()))))OR(TRIM(t0.c71, rt0.c3))))AND(((vt1.c0)>(t0.c71))))) IS TRUE)  as count FROM vt0, t0, vt1 LEFT OUTER JOIN rt0 ON rt0.c4);
SELECT ALL * FROM vt0, t0, vt1 LEFT OUTER JOIN rt0 ON rt0.c4 WHERE (((((((((((rt0.c0) NOT NULL))OR(HEX(t0.c35))))AND((rt0.c1 IN ()))))OR(TRIM(t0.c71, rt0.c3))))AND(((vt1.c0)>(t0.c71)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) NOT NULL))OR(HEX(t0.c35))))AND((rt0.c1 IN ()))))OR(TRIM(t0.c71, rt0.c3))))AND(((vt1.c0)>(t0.c71))))) IS TRUE)  as count FROM vt0, t0, vt1 LEFT OUTER JOIN rt0 ON rt0.c4);
SELECT ALL * FROM vt0, t0, vt1 LEFT OUTER JOIN rt0 ON rt0.c4 WHERE (((((((((((rt0.c0) NOT NULL))OR(HEX(t0.c35))))AND((rt0.c1 IN ()))))OR(TRIM(t0.c71, rt0.c3))))AND(((vt1.c0)>(t0.c71)))));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c71 AS INTEGER)) BETWEEN ((t0.c35 IN ())) AND ((t0.c35 IN ())))) ORDER BY ((((((t0.c71)AND(NULL)))AND(t0.c71)))>((NOT (t0.c35))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c71 AS INTEGER)) BETWEEN ((t0.c35 IN ())) AND ((t0.c35 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c71)AND(NULL)))AND(t0.c71)))>((NOT (t0.c35))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c71 AS INTEGER)) BETWEEN ((t0.c35 IN ())) AND ((t0.c35 IN ())))) ORDER BY ((((((t0.c71)AND(NULL)))AND(t0.c71)))>((NOT (t0.c35))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c71 AS INTEGER)) BETWEEN ((t0.c35 IN ())) AND ((t0.c35 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c71)AND(NULL)))AND(t0.c71)))>((NOT (t0.c35))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c71 AS INTEGER)) BETWEEN ((t0.c35 IN ())) AND ((t0.c35 IN ())))) ORDER BY ((((((t0.c71)AND(NULL)))AND(t0.c71)))>((NOT (t0.c35))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c3)>>(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>>(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c3)>>(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>>(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c3)>>(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON -1.119288537E9 WHERE (((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))>=((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))) ORDER BY CASE (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((NULL)))  WHEN CAST(vt1.c0 AS NUMERIC) THEN vt1.c0 ELSE ((vt1.c0) ISNULL) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))>=((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON -1.119288537E9 ORDER BY CASE (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((NULL)))  WHEN CAST(vt1.c0 AS NUMERIC) THEN vt1.c0 ELSE ((vt1.c0) ISNULL) END);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON -1.119288537E9 WHERE (((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))>=((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))) ORDER BY CASE (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((NULL)))  WHEN CAST(vt1.c0 AS NUMERIC) THEN vt1.c0 ELSE ((vt1.c0) ISNULL) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))>=((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON -1.119288537E9 ORDER BY CASE (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((NULL)))  WHEN CAST(vt1.c0 AS NUMERIC) THEN vt1.c0 ELSE ((vt1.c0) ISNULL) END);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON -1.119288537E9 WHERE (((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))>=((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))) ORDER BY CASE (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((NULL)))  WHEN CAST(vt1.c0 AS NUMERIC) THEN vt1.c0 ELSE ((vt1.c0) ISNULL) END;
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE ((- (vt1.c0)) COLLATE RTRIM) ORDER BY (CASE WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c0 END IN ()), CASE ((rt0.c5) BETWEEN (rt0.c0) AND (t0.c35))  WHEN NULL THEN TRIM(rt0.c5) WHEN rt0.c5 COLLATE NOCASE THEN CAST(vt0.c0 AS BLOB) WHEN ((vt1.c0)<(t0.c71)) THEN ((rt0.c0)IS NOT(t0.c35)) WHEN ((rt0.c4)IS(rt0.c4)) THEN vt1.c0 COLLATE RTRIM WHEN CAST(rt0.c4 AS REAL) THEN ((((rt0.c0)AND(t0.c71)))OR(t0.c71)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY (CASE WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c0 END IN ()), CASE ((rt0.c5) BETWEEN (rt0.c0) AND (t0.c35))  WHEN NULL THEN TRIM(rt0.c5) WHEN rt0.c5 COLLATE NOCASE THEN CAST(vt0.c0 AS BLOB) WHEN ((vt1.c0)<(t0.c71)) THEN ((rt0.c0)IS NOT(t0.c35)) WHEN ((rt0.c4)IS(rt0.c4)) THEN vt1.c0 COLLATE RTRIM WHEN CAST(rt0.c4 AS REAL) THEN ((((rt0.c0)AND(t0.c71)))OR(t0.c71)) END DESC);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE ((- (vt1.c0)) COLLATE RTRIM) ORDER BY (CASE WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c0 END IN ()), CASE ((rt0.c5) BETWEEN (rt0.c0) AND (t0.c35))  WHEN NULL THEN TRIM(rt0.c5) WHEN rt0.c5 COLLATE NOCASE THEN CAST(vt0.c0 AS BLOB) WHEN ((vt1.c0)<(t0.c71)) THEN ((rt0.c0)IS NOT(t0.c35)) WHEN ((rt0.c4)IS(rt0.c4)) THEN vt1.c0 COLLATE RTRIM WHEN CAST(rt0.c4 AS REAL) THEN ((((rt0.c0)AND(t0.c71)))OR(t0.c71)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY (CASE WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c0 END IN ()), CASE ((rt0.c5) BETWEEN (rt0.c0) AND (t0.c35))  WHEN NULL THEN TRIM(rt0.c5) WHEN rt0.c5 COLLATE NOCASE THEN CAST(vt0.c0 AS BLOB) WHEN ((vt1.c0)<(t0.c71)) THEN ((rt0.c0)IS NOT(t0.c35)) WHEN ((rt0.c4)IS(rt0.c4)) THEN vt1.c0 COLLATE RTRIM WHEN CAST(rt0.c4 AS REAL) THEN ((((rt0.c0)AND(t0.c71)))OR(t0.c71)) END DESC);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE ((- (vt1.c0)) COLLATE RTRIM) ORDER BY (CASE WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c0 END IN ()), CASE ((rt0.c5) BETWEEN (rt0.c0) AND (t0.c35))  WHEN NULL THEN TRIM(rt0.c5) WHEN rt0.c5 COLLATE NOCASE THEN CAST(vt0.c0 AS BLOB) WHEN ((vt1.c0)<(t0.c71)) THEN ((rt0.c0)IS NOT(t0.c35)) WHEN ((rt0.c4)IS(rt0.c4)) THEN vt1.c0 COLLATE RTRIM WHEN CAST(rt0.c4 AS REAL) THEN ((((rt0.c0)AND(t0.c71)))OR(t0.c71)) END DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE ('-253723314');
SELECT SUM(count) FROM (SELECT (('-253723314') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ('-253723314');
SELECT SUM(count) FROM (SELECT (('-253723314') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ('-253723314');
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c5)<=(0.46667671596008653)))LIKE(((((rt0.c4)AND(rt0.c1)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)<=(0.46667671596008653)))LIKE(((((rt0.c4)AND(rt0.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c5)<=(0.46667671596008653)))LIKE(((((rt0.c4)AND(rt0.c1)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)<=(0.46667671596008653)))LIKE(((((rt0.c4)AND(rt0.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c5)<=(0.46667671596008653)))LIKE(((((rt0.c4)AND(rt0.c1)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CAST(rt0.c0 AS TEXT) CROSS JOIN t0 ON CASE WHEN JULIANDAY(rt0.c3, t0.c71, rt0.c4, rt0.c1, rt0.c0) THEN ((rt0.c2)==(rt0.c4)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt1.c0))) THEN (((t0.c35, rt0.c2, 9.89679853E8))<((rt0.c1, vt1.c0, rt0.c4))) WHEN CAST('' AS BLOB) THEN 0.27853904383031647 END WHERE (x'') ORDER BY ((((((((((-8.27133755E8) BETWEEN ('-1012873713') AND (t0.c71)))OR(load_extension(vt1.c0, 0X66767ec1))))AND(NULL COLLATE RTRIM)))AND((((rt0.c5, rt0.c2, vt0.c0)) BETWEEN ((rt0.c3, vt0.c0, rt0.c1)) AND ((vt1.c0, rt0.c4, vt1.c0))))))OR((((t0.c35))>((rt0.c5))))), vt1.c0 ASC  NULLS FIRST, (((((rt0.c3))!=((vt1.c0))))IS NOT(rt0.c5));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CAST(rt0.c0 AS TEXT) CROSS JOIN t0 ON CASE WHEN JULIANDAY(rt0.c3, t0.c71, rt0.c4, rt0.c1, rt0.c0) THEN ((rt0.c2)=(rt0.c4)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt1.c0))) THEN (((t0.c35, rt0.c2, 9.89679853E8))<((rt0.c1, vt1.c0, rt0.c4))) WHEN CAST('' AS BLOB) THEN 0.27853904383031647 END ORDER BY ((((((((((-8.27133755E8) BETWEEN ('-1012873713') AND (t0.c71)))OR(load_extension(vt1.c0, 0X66767ec1))))AND(NULL COLLATE RTRIM)))AND((((rt0.c5, rt0.c2, vt0.c0)) BETWEEN ((rt0.c3, vt0.c0, rt0.c1)) AND ((vt1.c0, rt0.c4, vt1.c0))))))OR((((t0.c35))>((rt0.c5))))), vt1.c0 ASC  NULLS FIRST, (((((rt0.c3))!=((vt1.c0))))IS NOT(rt0.c5)));
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CAST(rt0.c0 AS TEXT) CROSS JOIN t0 ON CASE WHEN JULIANDAY(rt0.c3, t0.c71, rt0.c4, rt0.c1, rt0.c0) THEN ((rt0.c2)==(rt0.c4)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt1.c0))) THEN (((t0.c35, rt0.c2, 9.89679853E8))<((rt0.c1, vt1.c0, rt0.c4))) WHEN CAST('' AS BLOB) THEN 0.27853904383031647 END WHERE (x'') ORDER BY ((((((((((-8.27133755E8) BETWEEN ('-1012873713') AND (t0.c71)))OR(load_extension(vt1.c0, 0X66767ec1))))AND(NULL COLLATE RTRIM)))AND((((rt0.c5, rt0.c2, vt0.c0)) BETWEEN ((rt0.c3, vt0.c0, rt0.c1)) AND ((vt1.c0, rt0.c4, vt1.c0))))))OR((((t0.c35))>((rt0.c5))))), vt1.c0 ASC  NULLS FIRST, (((((rt0.c3))!=((vt1.c0))))IS NOT(rt0.c5));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CAST(rt0.c0 AS TEXT) CROSS JOIN t0 ON CASE WHEN JULIANDAY(rt0.c3, t0.c71, rt0.c4, rt0.c1, rt0.c0) THEN ((rt0.c2)=(rt0.c4)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt1.c0))) THEN (((t0.c35, rt0.c2, 9.89679853E8))<((rt0.c1, vt1.c0, rt0.c4))) WHEN CAST('' AS BLOB) THEN 0.27853904383031647 END ORDER BY ((((((((((-8.27133755E8) BETWEEN ('-1012873713') AND (t0.c71)))OR(load_extension(vt1.c0, 0X66767ec1))))AND(NULL COLLATE RTRIM)))AND((((rt0.c5, rt0.c2, vt0.c0)) BETWEEN ((rt0.c3, vt0.c0, rt0.c1)) AND ((vt1.c0, rt0.c4, vt1.c0))))))OR((((t0.c35))>((rt0.c5))))), vt1.c0 ASC  NULLS FIRST, (((((rt0.c3))!=((vt1.c0))))IS NOT(rt0.c5)));
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CAST(rt0.c0 AS TEXT) CROSS JOIN t0 ON CASE WHEN JULIANDAY(rt0.c3, t0.c71, rt0.c4, rt0.c1, rt0.c0) THEN ((rt0.c2)==(rt0.c4)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt1.c0))) THEN (((t0.c35, rt0.c2, 9.89679853E8))<((rt0.c1, vt1.c0, rt0.c4))) WHEN CAST('' AS BLOB) THEN 0.27853904383031647 END WHERE (x'') ORDER BY ((((((((((-8.27133755E8) BETWEEN ('-1012873713') AND (t0.c71)))OR(load_extension(vt1.c0, 0X66767ec1))))AND(NULL COLLATE RTRIM)))AND((((rt0.c5, rt0.c2, vt0.c0)) BETWEEN ((rt0.c3, vt0.c0, rt0.c1)) AND ((vt1.c0, rt0.c4, vt1.c0))))))OR((((t0.c35))>((rt0.c5))))), vt1.c0 ASC  NULLS FIRST, (((((rt0.c3))!=((vt1.c0))))IS NOT(rt0.c5));
SELECT * FROM vt1 WHERE ((+ (((NULL)*(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((NULL)*(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (((NULL)*(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((NULL)*(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (((NULL)*(vt1.c0)))));
SELECT * FROM vt0, vt1 WHERE (UNICODE(((vt0.c0)AND(NULL))));
SELECT SUM(count) FROM (SELECT ((UNICODE(((vt0.c0)AND(NULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (UNICODE(((vt0.c0)AND(NULL))));
SELECT SUM(count) FROM (SELECT ((UNICODE(((vt0.c0)AND(NULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (UNICODE(((vt0.c0)AND(NULL))));
SELECT * FROM rt0, vt0, t0 WHERE (((UPPER(DISTINCT rt0.c1)) NOT BETWEEN (((rt0.c2) BETWEEN ('+~k') AND (rt0.c2))) AND ((0.47130300655035384 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT rt0.c1)) NOT BETWEEN (((rt0.c2) BETWEEN ('+~k') AND (rt0.c2))) AND ((0.47130300655035384 IN ())))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((UPPER(DISTINCT rt0.c1)) NOT BETWEEN (((rt0.c2) BETWEEN ('+~k') AND (rt0.c2))) AND ((0.47130300655035384 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT rt0.c1)) NOT BETWEEN (((rt0.c2) BETWEEN ('+~k') AND (rt0.c2))) AND ((0.47130300655035384 IN ())))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((UPPER(DISTINCT rt0.c1)) NOT BETWEEN (((rt0.c2) BETWEEN ('+~k') AND (rt0.c2))) AND ((0.47130300655035384 IN ()))));
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE ((t0.c35)IS(t0.c35))  WHEN CASE WHEN t0.c71 THEN t0.c71 ELSE t0.c71 END THEN ((vt1.c0) IS FALSE) ELSE (t0.c71 IN (t0.c35)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c35)IS(t0.c35))  WHEN CASE WHEN t0.c71 THEN t0.c71 ELSE t0.c71 END THEN ((vt1.c0) IS FALSE) ELSE (t0.c71 IN (t0.c35)) END) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE ((t0.c35)IS(t0.c35))  WHEN CASE WHEN t0.c71 THEN t0.c71 ELSE t0.c71 END THEN ((vt1.c0) IS FALSE) ELSE (t0.c71 IN (t0.c35)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c35)IS(t0.c35))  WHEN CASE WHEN t0.c71 THEN t0.c71 ELSE t0.c71 END THEN ((vt1.c0) IS FALSE) ELSE (t0.c71 IN (t0.c35)) END) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE ((t0.c35)IS(t0.c35))  WHEN CASE WHEN t0.c71 THEN t0.c71 ELSE t0.c71 END THEN ((vt1.c0) IS FALSE) ELSE (t0.c71 IN (t0.c35)) END);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (~ (CAST(rt0.c1 AS REAL))) WHERE (rt0.c5) ORDER BY CAST((rt0.c4 IN ()) AS BLOB) ASC, ((0x58df6f36) ISNULL);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (~ (CAST(rt0.c1 AS REAL))) ORDER BY CAST((rt0.c4 IN ()) AS BLOB) ASC, ((0x58df6f36) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (~ (CAST(rt0.c1 AS REAL))) WHERE (rt0.c5) ORDER BY CAST((rt0.c4 IN ()) AS BLOB) ASC, ((0x58df6f36) ISNULL);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (~ (CAST(rt0.c1 AS REAL))) ORDER BY CAST((rt0.c4 IN ()) AS BLOB) ASC, ((0x58df6f36) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (~ (CAST(rt0.c1 AS REAL))) WHERE (rt0.c5) ORDER BY CAST((rt0.c4 IN ()) AS BLOB) ASC, ((0x58df6f36) ISNULL);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, t0, rt0 WHERE (CAST(json_patch(rt0.c2, t0.c71) AS BLOB)) ORDER BY 0.3213171626727501 COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_patch(rt0.c2, t0.c71) AS BLOB)) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY 0.3213171626727501 COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, t0, rt0 WHERE (CAST(json_patch(rt0.c2, t0.c71) AS BLOB)) ORDER BY 0.3213171626727501 COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_patch(rt0.c2, t0.c71) AS BLOB)) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY 0.3213171626727501 COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 LEFT OUTER JOIN rt0 ON (((((rt0.c5 IN ()))AND(NULL)))OR(CAST(NULL AS NUMERIC))) WHERE (((((((((rt0.c5)OR(rt0.c1)))AND(rt0.c0)))OR(((((((((rt0.c1)OR(rt0.c5)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c4)))))AND(0.8756165677416515)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c5)OR(rt0.c1)))AND(rt0.c0)))OR(((((((((rt0.c1)OR(rt0.c5)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c4)))))AND(0.8756165677416515))) IS TRUE)  as count FROM vt1, t0 NOT INDEXED LEFT OUTER JOIN rt0 ON (((((rt0.c5 IN ()))AND(NULL)))OR(CAST(NULL AS NUMERIC))));
SELECT ALL * FROM vt1, t0 LEFT OUTER JOIN rt0 ON (((((rt0.c5 IN ()))AND(NULL)))OR(CAST(NULL AS NUMERIC))) WHERE (((((((((rt0.c5)OR(rt0.c1)))AND(rt0.c0)))OR(((((((((rt0.c1)OR(rt0.c5)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c4)))))AND(0.8756165677416515)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c5)OR(rt0.c1)))AND(rt0.c0)))OR(((((((((rt0.c1)OR(rt0.c5)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c4)))))AND(0.8756165677416515))) IS TRUE)  as count FROM vt1, t0 NOT INDEXED LEFT OUTER JOIN rt0 ON (((((rt0.c5 IN ()))AND(NULL)))OR(CAST(NULL AS NUMERIC))));
SELECT ALL * FROM vt1, t0 LEFT OUTER JOIN rt0 ON (((((rt0.c5 IN ()))AND(NULL)))OR(CAST(NULL AS NUMERIC))) WHERE (((((((((rt0.c5)OR(rt0.c1)))AND(rt0.c0)))OR(((((((((rt0.c1)OR(rt0.c5)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c4)))))AND(0.8756165677416515)));
SELECT * FROM t0 WHERE ((((((x'')) NOT BETWEEN ((t0.c35)) AND ((t0.c35)))) NOT BETWEEN (((t0.c35) NOTNULL)) AND (((t0.c71)*(t0.c71)))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'')) NOT BETWEEN ((t0.c35)) AND ((t0.c35)))) NOT BETWEEN (((t0.c35) NOTNULL)) AND (((t0.c71)*(t0.c71))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((x'')) NOT BETWEEN ((t0.c35)) AND ((t0.c35)))) NOT BETWEEN (((t0.c35) NOTNULL)) AND (((t0.c71)*(t0.c71)))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'')) NOT BETWEEN ((t0.c35)) AND ((t0.c35)))) NOT BETWEEN (((t0.c35) NOTNULL)) AND (((t0.c71)*(t0.c71))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((x'')) NOT BETWEEN ((t0.c35)) AND ((t0.c35)))) NOT BETWEEN (((t0.c35) NOTNULL)) AND (((t0.c71)*(t0.c71)))));
SELECT * FROM t0 WHERE (((((t0.c71)IS NOT(t0.c71)))>(CAST(t0.c35 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((t0.c71)IS NOT(t0.c71)))>(CAST(t0.c35 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c71)IS NOT(t0.c71)))>(CAST(t0.c35 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((t0.c71)IS NOT(t0.c71)))>(CAST(t0.c35 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c71)IS NOT(t0.c71)))>(CAST(t0.c35 AS BLOB))));
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0, vt1, rt0 WHERE ('m6w');
SELECT SUM(count) FROM (SELECT (('m6w') IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0, vt1, rt0 WHERE ('m6w');
SELECT SUM(count) FROM (SELECT (('m6w') IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0, vt1, rt0 WHERE ('m6w');
SELECT COUNT(*) FROM vt0 WHERE ('1703681103');
SELECT SUM(count) FROM (SELECT ALL (('1703681103') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('1703681103');
SELECT SUM(count) FROM (SELECT ALL (('1703681103') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('1703681103');
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c0 COLLATE RTRIM, ((((((((1.155501424E9)AND(vt1.c0)))OR(vt1.c0)))OR(t0.c35)))AND(t0.c35)), LTRIM(t0.c71, vt1.c0)))!=((CASE WHEN t0.c35 THEN vt1.c0 ELSE vt1.c0 END, CAST(t0.c71 AS NUMERIC), 'rJIA|'))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE RTRIM, ((((((((1.155501424E9)AND(vt1.c0)))OR(vt1.c0)))OR(t0.c35)))AND(t0.c35)), LTRIM(t0.c71, vt1.c0)))!=((CASE WHEN t0.c35 THEN vt1.c0 ELSE vt1.c0 END, CAST(t0.c71 AS NUMERIC), 'rJIA|')))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c0 COLLATE RTRIM, ((((((((1.155501424E9)AND(vt1.c0)))OR(vt1.c0)))OR(t0.c35)))AND(t0.c35)), LTRIM(t0.c71, vt1.c0)))!=((CASE WHEN t0.c35 THEN vt1.c0 ELSE vt1.c0 END, CAST(t0.c71 AS NUMERIC), 'rJIA|'))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE RTRIM, ((((((((1.155501424E9)AND(vt1.c0)))OR(vt1.c0)))OR(t0.c35)))AND(t0.c35)), LTRIM(t0.c71, vt1.c0)))!=((CASE WHEN t0.c35 THEN vt1.c0 ELSE vt1.c0 END, CAST(t0.c71 AS NUMERIC), 'rJIA|')))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c0 COLLATE RTRIM, ((((((((1.155501424E9)AND(vt1.c0)))OR(vt1.c0)))OR(t0.c35)))AND(t0.c35)), LTRIM(t0.c71, vt1.c0)))!=((CASE WHEN t0.c35 THEN vt1.c0 ELSE vt1.c0 END, CAST(t0.c71 AS NUMERIC), 'rJIA|'))));
SELECT ALL * FROM t0 WHERE (((NULL)OR((((t0.c35, t0.c71, t0.c35)) BETWEEN ((t0.c71, t0.c35, t0.c35)) AND (('4V	GHgLAz', '', t0.c71)))))) ORDER BY LENGTH(t0.c35 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)OR((((t0.c35, t0.c71, t0.c35)) BETWEEN ((t0.c71, t0.c35, t0.c35)) AND (('4V	GHgLAz', '', t0.c71)))))) IS TRUE)  as count FROM t0 ORDER BY LENGTH(t0.c35 COLLATE BINARY)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((NULL)OR((((t0.c35, t0.c71, t0.c35)) BETWEEN ((t0.c71, t0.c35, t0.c35)) AND (('4V	GHgLAz', '', t0.c71)))))) ORDER BY LENGTH(t0.c35 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)OR((((t0.c35, t0.c71, t0.c35)) BETWEEN ((t0.c71, t0.c35, t0.c35)) AND (('4V	GHgLAz', '', t0.c71)))))) IS TRUE)  as count FROM t0 ORDER BY LENGTH(t0.c35 COLLATE BINARY)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((NULL)OR((((t0.c35, t0.c71, t0.c35)) BETWEEN ((t0.c71, t0.c35, t0.c35)) AND (('4V	GHgLAz', '', t0.c71)))))) ORDER BY LENGTH(t0.c35 COLLATE BINARY)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE ('-1227894754');
SELECT SUM(count) FROM (SELECT (('-1227894754') IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ('-1227894754');
SELECT SUM(count) FROM (SELECT (('-1227894754') IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ('-1227894754');
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (((((t0.c35) BETWEEN (rt0.c1) AND (vt0.c0))) NOT BETWEEN ((rt0.c4 IN ())) AND ((('-1185732514') NOTNULL)))) ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))IS NOT((((rt0.c2, rt0.c1, rt0.c4))=((vt0.c0, rt0.c4, vt1.c0))))) DESC  NULLS FIRST, rt0.c0 COLLATE BINARY DESC  NULLS LAST, (((((((((+ (rt0.c2)))OR(((((((((vt1.c0)AND(t0.c35)))OR(rt0.c4)))AND(rt0.c1)))OR(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c5 END)))OR((vt1.c0 IN ()))))AND((rt0.c5 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((t0.c35) BETWEEN (rt0.c1) AND (vt0.c0))) NOT BETWEEN ((rt0.c4 IN ())) AND ((('-1185732514') NOTNULL)))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))IS NOT((((rt0.c2, rt0.c1, rt0.c4))=((vt0.c0, rt0.c4, vt1.c0))))) DESC  NULLS FIRST, rt0.c0 COLLATE BINARY DESC  NULLS LAST, (((((((((+ (rt0.c2)))OR(((((((((vt1.c0)AND(t0.c35)))OR(rt0.c4)))AND(rt0.c1)))OR(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c5 END)))OR((vt1.c0 IN ()))))AND((rt0.c5 IN (rt0.c2)))));
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (((((t0.c35) BETWEEN (rt0.c1) AND (vt0.c0))) NOT BETWEEN ((rt0.c4 IN ())) AND ((('-1185732514') NOTNULL)))) ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))IS NOT((((rt0.c2, rt0.c1, rt0.c4))=((vt0.c0, rt0.c4, vt1.c0))))) DESC  NULLS FIRST, rt0.c0 COLLATE BINARY DESC  NULLS LAST, (((((((((+ (rt0.c2)))OR(((((((((vt1.c0)AND(t0.c35)))OR(rt0.c4)))AND(rt0.c1)))OR(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c5 END)))OR((vt1.c0 IN ()))))AND((rt0.c5 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((t0.c35) BETWEEN (rt0.c1) AND (vt0.c0))) NOT BETWEEN ((rt0.c4 IN ())) AND ((('-1185732514') NOTNULL)))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))IS NOT((((rt0.c2, rt0.c1, rt0.c4))=((vt0.c0, rt0.c4, vt1.c0))))) DESC  NULLS FIRST, rt0.c0 COLLATE BINARY DESC  NULLS LAST, (((((((((+ (rt0.c2)))OR(((((((((vt1.c0)AND(t0.c35)))OR(rt0.c4)))AND(rt0.c1)))OR(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c5 END)))OR((vt1.c0 IN ()))))AND((rt0.c5 IN (rt0.c2)))));
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (((((t0.c35) BETWEEN (rt0.c1) AND (vt0.c0))) NOT BETWEEN ((rt0.c4 IN ())) AND ((('-1185732514') NOTNULL)))) ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))IS NOT((((rt0.c2, rt0.c1, rt0.c4))=((vt0.c0, rt0.c4, vt1.c0))))) DESC  NULLS FIRST, rt0.c0 COLLATE BINARY DESC  NULLS LAST, (((((((((+ (rt0.c2)))OR(((((((((vt1.c0)AND(t0.c35)))OR(rt0.c4)))AND(rt0.c1)))OR(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c5 END)))OR((vt1.c0 IN ()))))AND((rt0.c5 IN (rt0.c2))));
SELECT * FROM t0, vt1, vt0 WHERE (((TRIM(t0.c35))IS NOT(CAST(t0.c71 AS NUMERIC)))) ORDER BY CAST(t0.c71 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t0.c35))IS NOT(CAST(t0.c71 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST(t0.c71 AS NUMERIC) ASC);
SELECT * FROM t0, vt1, vt0 WHERE (((TRIM(t0.c35))IS NOT(CAST(t0.c71 AS NUMERIC)))) ORDER BY CAST(t0.c71 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t0.c35))IS NOT(CAST(t0.c71 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST(t0.c71 AS NUMERIC) ASC);
SELECT * FROM t0, vt1, vt0 WHERE (((TRIM(t0.c35))IS NOT(CAST(t0.c71 AS NUMERIC)))) ORDER BY CAST(t0.c71 AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.c0, vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.c0, vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c4, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c2, NULL)) AND ((rt0.c0, rt0.c0, x''))))OR((((rt0.c1, rt0.c4, rt0.c0, rt0.c5, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c4, rt0.c3, rt0.c0)) AND ((rt0.c5, rt0.c5, rt0.c2, rt0.c0, rt0.c5))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c2, NULL)) AND ((rt0.c0, rt0.c0, x''))))OR((((rt0.c1, rt0.c4, rt0.c0, rt0.c5, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c4, rt0.c3, rt0.c0)) AND ((rt0.c5, rt0.c5, rt0.c2, rt0.c0, rt0.c5)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c4, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c2, NULL)) AND ((rt0.c0, rt0.c0, x''))))OR((((rt0.c1, rt0.c4, rt0.c0, rt0.c5, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c4, rt0.c3, rt0.c0)) AND ((rt0.c5, rt0.c5, rt0.c2, rt0.c0, rt0.c5))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c2, NULL)) AND ((rt0.c0, rt0.c0, x''))))OR((((rt0.c1, rt0.c4, rt0.c0, rt0.c5, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c4, rt0.c3, rt0.c0)) AND ((rt0.c5, rt0.c5, rt0.c2, rt0.c0, rt0.c5)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c4, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c2, NULL)) AND ((rt0.c0, rt0.c0, x''))))OR((((rt0.c1, rt0.c4, rt0.c0, rt0.c5, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c4, rt0.c3, rt0.c0)) AND ((rt0.c5, rt0.c5, rt0.c2, rt0.c0, rt0.c5))))));
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE ((((t0.c35 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE ((((t0.c35 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE ((((t0.c35 IN ())) ISNULL));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CAST(UNLIKELY(t0.c71) AS TEXT) WHERE (RTRIM((~ (t0.c71)))) ORDER BY CASE WHEN (+ (vt0.c0)) THEN (((vt0.c0))>((t0.c71))) END;
SELECT SUM(count) FROM (SELECT ((RTRIM((~ (t0.c71)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CAST(UNLIKELY(t0.c71) AS TEXT) ORDER BY CASE WHEN (+ (vt0.c0)) THEN (((vt0.c0))>((t0.c71))) END);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CAST(UNLIKELY(t0.c71) AS TEXT) WHERE (RTRIM((~ (t0.c71)))) ORDER BY CASE WHEN (+ (vt0.c0)) THEN (((vt0.c0))>((t0.c71))) END;
SELECT SUM(count) FROM (SELECT ((RTRIM((~ (t0.c71)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CAST(UNLIKELY(t0.c71) AS TEXT) ORDER BY CASE WHEN (+ (vt0.c0)) THEN (((vt0.c0))>((t0.c71))) END);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CAST(UNLIKELY(t0.c71) AS TEXT) WHERE (RTRIM((~ (t0.c71)))) ORDER BY CASE WHEN (+ (vt0.c0)) THEN (((vt0.c0))>((t0.c71))) END;
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c0) BETWEEN (vt0.c0) AND (NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (vt0.c0) AND (NULL)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c0) BETWEEN (vt0.c0) AND (NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (vt0.c0) AND (NULL)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c0) BETWEEN (vt0.c0) AND (NULL)) COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT ALL * FROM t0 WHERE (((CAST(570231453 AS TEXT))/(((t0.c35)%(t0.c71))))) ORDER BY t0.c35 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(570231453 AS TEXT))/(((t0.c35)%(t0.c71))))) IS TRUE)  as count FROM t0 ORDER BY t0.c35 DESC);
SELECT ALL * FROM t0 WHERE (((CAST(570231453 AS TEXT))/(((t0.c35)%(t0.c71))))) ORDER BY t0.c35 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(570231453 AS TEXT))/(((t0.c35)%(t0.c71))))) IS TRUE)  as count FROM t0 ORDER BY t0.c35 DESC);
SELECT ALL * FROM t0 WHERE (((CAST(570231453 AS TEXT))/(((t0.c35)%(t0.c71))))) ORDER BY t0.c35 DESC;
SELECT * FROM t0 WHERE (((t0.c35)+(t0.c71)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35)+(t0.c71)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c35)+(t0.c71)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35)+(t0.c71)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c35)+(t0.c71)) COLLATE RTRIM);
SELECT * FROM vt1 WHERE ((((((NOT ('휬z吋')))AND((vt1.c0 IN ()))))AND('-604619064'))) ORDER BY (- (((vt1.c0)&('')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT ('휬z吋')))AND((vt1.c0 IN ()))))AND('-604619064'))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c0)&('')))) ASC);
SELECT * FROM vt1 WHERE ((((((NOT ('휬z吋')))AND((vt1.c0 IN ()))))AND('-604619064'))) ORDER BY (- (((vt1.c0)&('')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT ('휬z吋')))AND((vt1.c0 IN ()))))AND('-604619064'))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c0)&('')))) ASC);
SELECT * FROM vt1 WHERE ((((((NOT ('휬z吋')))AND((vt1.c0 IN ()))))AND('-604619064'))) ORDER BY (- (((vt1.c0)&('')))) ASC;
SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c0)/(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)/(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c0)/(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)/(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c0)/(rt0.c2))) IS FALSE));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (- (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)|(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (- (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)|(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (- (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE (+ (rt0.c0))  WHEN TIME(0.11037039787720504, t0.c35, rt0.c5) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (rt0.c0))  WHEN TIME(0.11037039787720504, t0.c35, rt0.c5) THEN NULL END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE (+ (rt0.c0))  WHEN TIME(0.11037039787720504, t0.c35, rt0.c5) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (rt0.c0))  WHEN TIME(0.11037039787720504, t0.c35, rt0.c5) THEN NULL END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE (+ (rt0.c0))  WHEN TIME(0.11037039787720504, t0.c35, rt0.c5) THEN NULL END);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))<=((CASE WHEN rt0.c4 THEN rt0.c1 END)))) ORDER BY CAST(t0.c35 AS REAL) COLLATE NOCASE ASC  NULLS LAST, ((rt0.c3 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))<=((CASE WHEN rt0.c4 THEN rt0.c1 END)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(t0.c35 AS REAL) COLLATE NOCASE ASC  NULLS LAST, ((rt0.c3 IN ()) IN ()) ASC);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))<=((CASE WHEN rt0.c4 THEN rt0.c1 END)))) ORDER BY CAST(t0.c35 AS REAL) COLLATE NOCASE ASC  NULLS LAST, ((rt0.c3 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))<=((CASE WHEN rt0.c4 THEN rt0.c1 END)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(t0.c35 AS REAL) COLLATE NOCASE ASC  NULLS LAST, ((rt0.c3 IN ()) IN ()) ASC);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))<=((CASE WHEN rt0.c4 THEN rt0.c1 END)))) ORDER BY CAST(t0.c35 AS REAL) COLLATE NOCASE ASC  NULLS LAST, ((rt0.c3 IN ()) IN ()) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((- (ABS(t0.c35))));
SELECT SUM(count) FROM (SELECT (((- (ABS(t0.c35)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (ABS(t0.c35))));
SELECT SUM(count) FROM (SELECT (((- (ABS(t0.c35)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (ABS(t0.c35))));
SELECT ALL * FROM vt0, vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))) AND (((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))) AND (((vt1.c0) ISNULL))));
SELECT ALL * FROM vt0, vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))) AND (((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))) AND (((vt1.c0) ISNULL))));
SELECT ALL * FROM vt0, vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))) AND (((vt1.c0) ISNULL)));
SELECT * FROM vt0, rt0, t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (TRIM(rt0.c3, vt0.c0) COLLATE RTRIM) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c0)) AS REAL) DESC, ((rt0.c2) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c3, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c0)) AS REAL) DESC, ((rt0.c2) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (TRIM(rt0.c3, vt0.c0) COLLATE RTRIM) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c0)) AS REAL) DESC, ((rt0.c2) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c3, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c0)) AS REAL) DESC, ((rt0.c2) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (TRIM(rt0.c3, vt0.c0) COLLATE RTRIM) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c0)) AS REAL) DESC, ((rt0.c2) IS FALSE) DESC;
SELECT * FROM t0, vt0 WHERE ((((((((((- (t0.c71)))AND(((t0.c35)>=(t0.c71)))))AND(-961735788)))AND(((t0.c71) NOT BETWEEN (t0.c71) AND (vt0.c0)))))AND(((t0.c35) BETWEEN (t0.c35) AND (t0.c71))))) ORDER BY ((((((((((vt0.c0)OR(t0.c35)))OR(t0.c71)))OR('-')))OR(t0.c71))) NOTNULL), CASE ((t0.c71) NOT BETWEEN (t0.c35) AND (t0.c35))  WHEN (NOT (vt0.c0)) THEN ((t0.c35) BETWEEN (t0.c71) AND (vt0.c0)) ELSE CAST(t0.c71 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (t0.c71)))AND(((t0.c35)>=(t0.c71)))))AND(-961735788)))AND(((t0.c71) NOT BETWEEN (t0.c71) AND (vt0.c0)))))AND(((t0.c35) BETWEEN (t0.c35) AND (t0.c71))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((vt0.c0)OR(t0.c35)))OR(t0.c71)))OR('-')))OR(t0.c71))) NOTNULL), CASE ((t0.c71) NOT BETWEEN (t0.c35) AND (t0.c35))  WHEN (NOT (vt0.c0)) THEN ((t0.c35) BETWEEN (t0.c71) AND (vt0.c0)) ELSE CAST(t0.c71 AS NUMERIC) END);
SELECT * FROM t0, vt0 WHERE ((((((((((- (t0.c71)))AND(((t0.c35)>=(t0.c71)))))AND(-961735788)))AND(((t0.c71) NOT BETWEEN (t0.c71) AND (vt0.c0)))))AND(((t0.c35) BETWEEN (t0.c35) AND (t0.c71))))) ORDER BY ((((((((((vt0.c0)OR(t0.c35)))OR(t0.c71)))OR('-')))OR(t0.c71))) NOTNULL), CASE ((t0.c71) NOT BETWEEN (t0.c35) AND (t0.c35))  WHEN (NOT (vt0.c0)) THEN ((t0.c35) BETWEEN (t0.c71) AND (vt0.c0)) ELSE CAST(t0.c71 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (t0.c71)))AND(((t0.c35)>=(t0.c71)))))AND(-961735788)))AND(((t0.c71) NOT BETWEEN (t0.c71) AND (vt0.c0)))))AND(((t0.c35) BETWEEN (t0.c35) AND (t0.c71))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((vt0.c0)OR(t0.c35)))OR(t0.c71)))OR('-')))OR(t0.c71))) NOTNULL), CASE ((t0.c71) NOT BETWEEN (t0.c35) AND (t0.c35))  WHEN (NOT (vt0.c0)) THEN ((t0.c35) BETWEEN (t0.c71) AND (vt0.c0)) ELSE CAST(t0.c71 AS NUMERIC) END);
SELECT * FROM t0, vt0 WHERE ((((((((((- (t0.c71)))AND(((t0.c35)>=(t0.c71)))))AND(-961735788)))AND(((t0.c71) NOT BETWEEN (t0.c71) AND (vt0.c0)))))AND(((t0.c35) BETWEEN (t0.c35) AND (t0.c71))))) ORDER BY ((((((((((vt0.c0)OR(t0.c35)))OR(t0.c71)))OR('-')))OR(t0.c71))) NOTNULL), CASE ((t0.c71) NOT BETWEEN (t0.c35) AND (t0.c35))  WHEN (NOT (vt0.c0)) THEN ((t0.c35) BETWEEN (t0.c71) AND (vt0.c0)) ELSE CAST(t0.c71 AS NUMERIC) END;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)!=(vt1.c0)))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((NULL)LIKE(((vt1.c0) IS TRUE))) ASC, ((CAST(0.4420528594733746 AS BLOB)) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((vt1.c0 IN (vt1.c0)))), ((vt1.c0 COLLATE BINARY) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)!=(vt1.c0)))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((NULL)LIKE(((vt1.c0) IS TRUE))) ASC, ((CAST(0.4420528594733746 AS BLOB)) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((vt1.c0 IN (vt1.c0)))), ((vt1.c0 COLLATE BINARY) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)!=(vt1.c0)))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((NULL)LIKE(((vt1.c0) IS TRUE))) ASC, ((CAST(0.4420528594733746 AS BLOB)) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((vt1.c0 IN (vt1.c0)))), ((vt1.c0 COLLATE BINARY) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)!=(vt1.c0)))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((NULL)LIKE(((vt1.c0) IS TRUE))) ASC, ((CAST(0.4420528594733746 AS BLOB)) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((vt1.c0 IN (vt1.c0)))), ((vt1.c0 COLLATE BINARY) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)!=(vt1.c0)))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((NULL)LIKE(((vt1.c0) IS TRUE))) ASC, ((CAST(0.4420528594733746 AS BLOB)) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((vt1.c0 IN (vt1.c0)))), ((vt1.c0 COLLATE BINARY) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 NOT INDEXED WHERE (((((t0.c35) NOT BETWEEN (rt0.c5) AND (t0.c35))) BETWEEN (rt0.c1 COLLATE BINARY) AND (((((((((rt0.c0)AND(rt0.c2)))OR(t0.c71)))OR('1591111442')))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c35) NOT BETWEEN (rt0.c5) AND (t0.c35))) BETWEEN (rt0.c1 COLLATE BINARY) AND (((((((((rt0.c0)AND(rt0.c2)))OR(t0.c71)))OR('1591111442')))AND(rt0.c3))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 NOT INDEXED WHERE (((((t0.c35) NOT BETWEEN (rt0.c5) AND (t0.c35))) BETWEEN (rt0.c1 COLLATE BINARY) AND (((((((((rt0.c0)AND(rt0.c2)))OR(t0.c71)))OR('1591111442')))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c35) NOT BETWEEN (rt0.c5) AND (t0.c35))) BETWEEN (rt0.c1 COLLATE BINARY) AND (((((((((rt0.c0)AND(rt0.c2)))OR(t0.c71)))OR('1591111442')))AND(rt0.c3))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 NOT INDEXED WHERE (((((t0.c35) NOT BETWEEN (rt0.c5) AND (t0.c35))) BETWEEN (rt0.c1 COLLATE BINARY) AND (((((((((rt0.c0)AND(rt0.c2)))OR(t0.c71)))OR('1591111442')))AND(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c5) BETWEEN (rt0.c2) AND ('1440870206')))AND(((rt0.c1)||(rt0.c0)))))OR((((rt0.c5))<=((rt0.c5)))))) ORDER BY (((rt0.c5)|(vt1.c0)) IN ()) DESC  NULLS FIRST, ((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c3 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c5) BETWEEN (rt0.c2) AND ('1440870206')))AND(((rt0.c1)||(rt0.c0)))))OR((((rt0.c5))<=((rt0.c5)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c5)|(vt1.c0)) IN ()) DESC  NULLS FIRST, ((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c3 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c5) BETWEEN (rt0.c2) AND ('1440870206')))AND(((rt0.c1)||(rt0.c0)))))OR((((rt0.c5))<=((rt0.c5)))))) ORDER BY (((rt0.c5)|(vt1.c0)) IN ()) DESC  NULLS FIRST, ((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c3 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c5) BETWEEN (rt0.c2) AND ('1440870206')))AND(((rt0.c1)||(rt0.c0)))))OR((((rt0.c5))<=((rt0.c5)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c5)|(vt1.c0)) IN ()) DESC  NULLS FIRST, ((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c3 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c5) BETWEEN (rt0.c2) AND ('1440870206')))AND(((rt0.c1)||(rt0.c0)))))OR((((rt0.c5))<=((rt0.c5)))))) ORDER BY (((rt0.c5)|(vt1.c0)) IN ()) DESC  NULLS FIRST, ((((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c3 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM t0 WHERE (t0.c35);
SELECT SUM(count) FROM (SELECT ALL ((t0.c35) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c35);
SELECT SUM(count) FROM (SELECT ALL ((t0.c35) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c35);
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 WHERE ((t0.c71 IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c71 IN ())) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 WHERE ((t0.c71 IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c71 IN ())) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 WHERE ((t0.c71 IN ()));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (CASE (('')>=(rt0.c1))  WHEN MAX(vt1.c0, rt0.c0) THEN (0Xffffffff9738e5ae IN ()) WHEN ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1)) THEN ((rt0.c5) BETWEEN (vt1.c0) AND (rt0.c0)) WHEN CASE WHEN rt0.c3 THEN rt0.c5 ELSE vt0.c0 END THEN ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.c0)) WHEN ((rt0.c2)>>(rt0.c5)) THEN UNLIKELY(DISTINCT vt1.c0) WHEN (vt1.c0 IN ()) THEN ((vt0.c0)==(rt0.c4)) ELSE ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (('')>=(rt0.c1))  WHEN MAX(vt1.c0, rt0.c0) THEN (0Xffffffff9738e5ae IN ()) WHEN ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1)) THEN ((rt0.c5) BETWEEN (vt1.c0) AND (rt0.c0)) WHEN CASE WHEN rt0.c3 THEN rt0.c5 ELSE vt0.c0 END THEN ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.c0)) WHEN ((rt0.c2)>>(rt0.c5)) THEN UNLIKELY(DISTINCT vt1.c0) WHEN (vt1.c0 IN ()) THEN ((vt0.c0)==(rt0.c4)) ELSE ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (CASE (('')>=(rt0.c1))  WHEN MAX(vt1.c0, rt0.c0) THEN (0Xffffffff9738e5ae IN ()) WHEN ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1)) THEN ((rt0.c5) BETWEEN (vt1.c0) AND (rt0.c0)) WHEN CASE WHEN rt0.c3 THEN rt0.c5 ELSE vt0.c0 END THEN ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.c0)) WHEN ((rt0.c2)>>(rt0.c5)) THEN UNLIKELY(DISTINCT vt1.c0) WHEN (vt1.c0 IN ()) THEN ((vt0.c0)==(rt0.c4)) ELSE ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (('')>=(rt0.c1))  WHEN MAX(vt1.c0, rt0.c0) THEN (0Xffffffff9738e5ae IN ()) WHEN ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1)) THEN ((rt0.c5) BETWEEN (vt1.c0) AND (rt0.c0)) WHEN CASE WHEN rt0.c3 THEN rt0.c5 ELSE vt0.c0 END THEN ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.c0)) WHEN ((rt0.c2)>>(rt0.c5)) THEN UNLIKELY(DISTINCT vt1.c0) WHEN (vt1.c0 IN ()) THEN ((vt0.c0)==(rt0.c4)) ELSE ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (CASE (('')>=(rt0.c1))  WHEN MAX(vt1.c0, rt0.c0) THEN (0Xffffffff9738e5ae IN ()) WHEN ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1)) THEN ((rt0.c5) BETWEEN (vt1.c0) AND (rt0.c0)) WHEN CASE WHEN rt0.c3 THEN rt0.c5 ELSE vt0.c0 END THEN ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.c0)) WHEN ((rt0.c2)>>(rt0.c5)) THEN UNLIKELY(DISTINCT vt1.c0) WHEN (vt1.c0 IN ()) THEN ((vt0.c0)==(rt0.c4)) ELSE ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (((rt0.c0 IN (rt0.c2))) IS TRUE) LEFT OUTER JOIN vt1 ON x'' WHERE ((((0.7819816074541085 IN (rt0.c3)))+(((rt0.c1) IS FALSE)))) ORDER BY ((((rt0.c5)GLOB(')Q'))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.7819816074541085 IN (rt0.c3)))+(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((rt0.c0 IN (rt0.c2))) IS TRUE) LEFT OUTER JOIN vt1 ON x'' ORDER BY ((((rt0.c5)GLOB(')Q'))) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (((rt0.c0 IN (rt0.c2))) IS TRUE) LEFT OUTER JOIN vt1 ON x'' WHERE ((((0.7819816074541085 IN (rt0.c3)))+(((rt0.c1) IS FALSE)))) ORDER BY ((((rt0.c5)GLOB(')Q'))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.7819816074541085 IN (rt0.c3)))+(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((rt0.c0 IN (rt0.c2))) IS TRUE) LEFT OUTER JOIN vt1 ON x'' ORDER BY ((((rt0.c5)GLOB(')Q'))) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (((rt0.c0 IN (rt0.c2))) IS TRUE) LEFT OUTER JOIN vt1 ON x'' WHERE ((((0.7819816074541085 IN (rt0.c3)))+(((rt0.c1) IS FALSE)))) ORDER BY ((((rt0.c5)GLOB(')Q'))) ISNULL) ASC  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((rt0.c4) NOT BETWEEN (vt0.c0) AND (x'')) COLLATE BINARY INNER JOIN vt0 ON (((rt0.c5)IS NOT(t0.c71)) IN ()) WHERE ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((CAST(t0.c71 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((CAST(t0.c71 AS INTEGER))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((rt0.c4) NOT BETWEEN (vt0.c0) AND (x'')) COLLATE BINARY INNER JOIN vt0 ON (((rt0.c5)IS NOT(t0.c71)) IN ()));
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((rt0.c4) NOT BETWEEN (vt0.c0) AND (x'')) COLLATE BINARY INNER JOIN vt0 ON (((rt0.c5)IS NOT(t0.c71)) IN ()) WHERE ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((CAST(t0.c71 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((CAST(t0.c71 AS INTEGER))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((rt0.c4) NOT BETWEEN (vt0.c0) AND (x'')) COLLATE BINARY INNER JOIN vt0 ON (((rt0.c5)IS NOT(t0.c71)) IN ()));
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((rt0.c4) NOT BETWEEN (vt0.c0) AND (x'')) COLLATE BINARY INNER JOIN vt0 ON (((rt0.c5)IS NOT(t0.c71)) IN ()) WHERE ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((CAST(t0.c71 AS INTEGER)))));
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((t0.c71)) AND ((rt0.c4)))) NOT BETWEEN (((NULL) NOT BETWEEN (rt0.c4) AND (vt1.c0))) AND (CAST(rt0.c4 AS REAL)))) ORDER BY ((rt0.c0) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)) NOT BETWEEN ((t0.c71)) AND ((rt0.c4)))) NOT BETWEEN (((NULL) NOT BETWEEN (rt0.c4) AND (vt1.c0))) AND (CAST(rt0.c4 AS REAL)))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY ((rt0.c0) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((t0.c71)) AND ((rt0.c4)))) NOT BETWEEN (((NULL) NOT BETWEEN (rt0.c4) AND (vt1.c0))) AND (CAST(rt0.c4 AS REAL)))) ORDER BY ((rt0.c0) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)) NOT BETWEEN ((t0.c71)) AND ((rt0.c4)))) NOT BETWEEN (((NULL) NOT BETWEEN (rt0.c4) AND (vt1.c0))) AND (CAST(rt0.c4 AS REAL)))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY ((rt0.c0) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((t0.c71)) AND ((rt0.c4)))) NOT BETWEEN (((NULL) NOT BETWEEN (rt0.c4) AND (vt1.c0))) AND (CAST(rt0.c4 AS REAL)))) ORDER BY ((rt0.c0) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (t0.c35) AND (t0.c71))) AND (x'')));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (t0.c35) AND (t0.c71))) AND (x''))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (t0.c35) AND (t0.c71))) AND (x'')));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (t0.c35) AND (t0.c71))) AND (x''))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (t0.c35) AND (t0.c71))) AND (x'')));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ (CAST(0.5190016678922736 AS TEXT)))) ORDER BY CAST((rt0.c5 IN ()) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(0.5190016678922736 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((rt0.c5 IN ()) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ (CAST(0.5190016678922736 AS TEXT)))) ORDER BY CAST((rt0.c5 IN ()) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(0.5190016678922736 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((rt0.c5 IN ()) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ (CAST(0.5190016678922736 AS TEXT)))) ORDER BY CAST((rt0.c5 IN ()) AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 INNER JOIN rt0 ON CASE ((((rt0.c2)OR(rt0.c3)))OR(t0.c35))  WHEN CASE 'O!Fy(&a	'  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c1 END THEN rt0.c1 COLLATE RTRIM ELSE ((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)))OR(t0.c35)))AND(t0.c71)) END WHERE (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c4)))OR(0X88ac7b1)))AND(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN t0.c71 THEN 0.637391654231682 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN t0.c71 END)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c4)))OR(0X88ac7b1)))AND(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN t0.c71 THEN 0.637391654231682 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN t0.c71 END))) IS TRUE)  as count FROM vt1, t0 INNER JOIN rt0 ON CASE ((((rt0.c2)OR(rt0.c3)))OR(t0.c35))  WHEN CASE 'O!Fy(&a	'  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c1 END THEN rt0.c1 COLLATE RTRIM ELSE ((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)))OR(t0.c35)))AND(t0.c71)) END);
SELECT COUNT(*) FROM vt1, t0 INNER JOIN rt0 ON CASE ((((rt0.c2)OR(rt0.c3)))OR(t0.c35))  WHEN CASE 'O!Fy(&a	'  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c1 END THEN rt0.c1 COLLATE RTRIM ELSE ((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)))OR(t0.c35)))AND(t0.c71)) END WHERE (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c4)))OR(0X88ac7b1)))AND(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN t0.c71 THEN 0.637391654231682 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN t0.c71 END)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c4)))OR(0X88ac7b1)))AND(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN t0.c71 THEN 0.637391654231682 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN t0.c71 END))) IS TRUE)  as count FROM vt1, t0 INNER JOIN rt0 ON CASE ((((rt0.c2)OR(rt0.c3)))OR(t0.c35))  WHEN CASE 'O!Fy(&a	'  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c1 END THEN rt0.c1 COLLATE RTRIM ELSE ((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)))OR(t0.c35)))AND(t0.c71)) END);
SELECT COUNT(*) FROM vt1, t0 INNER JOIN rt0 ON CASE ((((rt0.c2)OR(rt0.c3)))OR(t0.c35))  WHEN CASE 'O!Fy(&a	'  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c1 END THEN rt0.c1 COLLATE RTRIM ELSE ((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)))OR(t0.c35)))AND(t0.c71)) END WHERE (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c4)))OR(0X88ac7b1)))AND(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN t0.c71 THEN 0.637391654231682 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN t0.c71 END)));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (NULL) ORDER BY -1733862884;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY -1733862884);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (NULL) ORDER BY -1733862884;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY -1733862884);
SELECT ALL * FROM vt0, t0 WHERE (((((-405670232)AND(CAST(vt0.c0 AS TEXT))))AND((~ (t0.c35)))));
SELECT SUM(count) FROM (SELECT ((((((-405670232)AND(CAST(vt0.c0 AS TEXT))))AND((~ (t0.c35))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((-405670232)AND(CAST(vt0.c0 AS TEXT))))AND((~ (t0.c35)))));
SELECT SUM(count) FROM (SELECT ((((((-405670232)AND(CAST(vt0.c0 AS TEXT))))AND((~ (t0.c35))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((-405670232)AND(CAST(vt0.c0 AS TEXT))))AND((~ (t0.c35)))));
SELECT COUNT(*) FROM vt1 WHERE ((NOT (0Xffffffffef49c40b))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT NULL), ((vt1.c0)||(vt1.c0)), (vt1.c0 IN ()))) AND ((vt1.c0, vt1.c0 COLLATE BINARY, LIKELIHOOD(DISTINCT vt1.c0, 0.4617223778864552))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0xffffffffef49c40b))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT NULL), ((vt1.c0)||(vt1.c0)), (vt1.c0 IN ()))) AND ((vt1.c0, vt1.c0 COLLATE BINARY, LIKELIHOOD(DISTINCT vt1.c0, 0.4617223778864552))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (0Xffffffffef49c40b))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT NULL), ((vt1.c0)||(vt1.c0)), (vt1.c0 IN ()))) AND ((vt1.c0, vt1.c0 COLLATE BINARY, LIKELIHOOD(DISTINCT vt1.c0, 0.4617223778864552))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0xffffffffef49c40b))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT NULL), ((vt1.c0)||(vt1.c0)), (vt1.c0 IN ()))) AND ((vt1.c0, vt1.c0 COLLATE BINARY, LIKELIHOOD(DISTINCT vt1.c0, 0.4617223778864552))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (0Xffffffffef49c40b))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT NULL), ((vt1.c0)||(vt1.c0)), (vt1.c0 IN ()))) AND ((vt1.c0, vt1.c0 COLLATE BINARY, LIKELIHOOD(DISTINCT vt1.c0, 0.4617223778864552))))  NULLS LAST;
SELECT * FROM vt1, t0, vt0, rt0 WHERE (CASE (vt1.c0 IN ())  WHEN (+ (rt0.c0)) THEN rt0.c2 WHEN t0.c35 COLLATE RTRIM THEN ((rt0.c1)&(0.7546994184792332)) WHEN rt0.c5 COLLATE BINARY THEN (((t0.c71)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) ELSE (- (t0.c71)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt1.c0 IN ())  WHEN (+ (rt0.c0)) THEN rt0.c2 WHEN t0.c35 COLLATE RTRIM THEN ((rt0.c1)&(0.7546994184792332)) WHEN rt0.c5 COLLATE BINARY THEN (((t0.c71)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) ELSE (- (t0.c71)) END) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT * FROM vt1, t0, vt0, rt0 WHERE (CASE (vt1.c0 IN ())  WHEN (+ (rt0.c0)) THEN rt0.c2 WHEN t0.c35 COLLATE RTRIM THEN ((rt0.c1)&(0.7546994184792332)) WHEN rt0.c5 COLLATE BINARY THEN (((t0.c71)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) ELSE (- (t0.c71)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt1.c0 IN ())  WHEN (+ (rt0.c0)) THEN rt0.c2 WHEN t0.c35 COLLATE RTRIM THEN ((rt0.c1)&(0.7546994184792332)) WHEN rt0.c5 COLLATE BINARY THEN (((t0.c71)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) ELSE (- (t0.c71)) END) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT * FROM vt1, t0, vt0, rt0 WHERE (CASE (vt1.c0 IN ())  WHEN (+ (rt0.c0)) THEN rt0.c2 WHEN t0.c35 COLLATE RTRIM THEN ((rt0.c1)&(0.7546994184792332)) WHEN rt0.c5 COLLATE BINARY THEN (((t0.c71)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) ELSE (- (t0.c71)) END);
SELECT * FROM rt0 WHERE (((rt0.c2)IS NOT(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS NOT(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2)IS NOT(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS NOT(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2)IS NOT(rt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE (CAST(((x'')<('-k载R')) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((x'')<('-k载R')) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((x'')<('-k载R')) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((x'')<('-k载R')) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((x'')<('-k载R')) AS TEXT));
SELECT * FROM t0 WHERE (((t0.c35)||(json_array_length(t0.c35))));
SELECT SUM(count) FROM (SELECT ((((t0.c35)||(json_array_length(t0.c35)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c35)||(json_array_length(t0.c35))));
SELECT SUM(count) FROM (SELECT ((((t0.c35)||(json_array_length(t0.c35)))) IS TRUE)  as count FROM t0);
SELECT * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) NOTNULL) END);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) BETWEEN (CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END) AND (vt1.c0))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) BETWEEN (CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END) AND (vt1.c0))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c35 END) AND (vt1.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))) AND (NULL))  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) ASC  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))) AND (NULL))  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) ASC  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))) AND (NULL))  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) ASC  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))) AND (NULL))  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) ASC  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))) AND (NULL))  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) ASC  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE));
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE ((CASE WHEN t0.c71 THEN rt0.c1 ELSE t0.c71 END IN (json_insert(rt0.c4, rt0.c5, t0.c71))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c71 THEN rt0.c1 ELSE t0.c71 END IN (json_insert(rt0.c4, rt0.c5, t0.c71)))) IS TRUE)  as count FROM vt1, vt0, rt0, t0);
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE ((CASE WHEN t0.c71 THEN rt0.c1 ELSE t0.c71 END IN (json_insert(rt0.c4, rt0.c5, t0.c71))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c71 THEN rt0.c1 ELSE t0.c71 END IN (json_insert(rt0.c4, rt0.c5, t0.c71)))) IS TRUE)  as count FROM vt1, vt0, rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN CASE WHEN t0.c71 THEN rt0.c1 END THEN CAST(rt0.c4 AS REAL) WHEN ((((rt0.c1)AND(t0.c71)))OR(rt0.c4)) THEN ((t0.c71)IS NOT(rt0.c2)) WHEN (- (rt0.c5)) THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c2) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c71 THEN rt0.c1 END THEN CAST(rt0.c4 AS REAL) WHEN ((((rt0.c1)AND(t0.c71)))OR(rt0.c4)) THEN ((t0.c71)IS NOT(rt0.c2)) WHEN (- (rt0.c5)) THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN CASE WHEN t0.c71 THEN rt0.c1 END THEN CAST(rt0.c4 AS REAL) WHEN ((((rt0.c1)AND(t0.c71)))OR(rt0.c4)) THEN ((t0.c71)IS NOT(rt0.c2)) WHEN (- (rt0.c5)) THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c2) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c71 THEN rt0.c1 END THEN CAST(rt0.c4 AS REAL) WHEN ((((rt0.c1)AND(t0.c71)))OR(rt0.c4)) THEN ((t0.c71)IS NOT(rt0.c2)) WHEN (- (rt0.c5)) THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN CASE WHEN t0.c71 THEN rt0.c1 END THEN CAST(rt0.c4 AS REAL) WHEN ((((rt0.c1)AND(t0.c71)))OR(rt0.c4)) THEN ((t0.c71)IS NOT(rt0.c2)) WHEN (- (rt0.c5)) THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c2) ISNULL) END);
SELECT COUNT(*) FROM vt1, rt0, t0 INNER JOIN vt0 ON SQLITE_VERSION() WHERE (json_extract(((vt1.c0) NOTNULL), CASE vt1.c0  WHEN vt1.c0 THEN t0.c71 END));
SELECT SUM(count) FROM (SELECT ((json_extract(((vt1.c0) NOTNULL), CASE vt1.c0  WHEN vt1.c0 THEN t0.c71 END)) IS TRUE)  as count FROM vt1, rt0, t0 INNER JOIN vt0 ON SQLITE_VERSION());
SELECT COUNT(*) FROM vt1, rt0, t0 INNER JOIN vt0 ON SQLITE_VERSION() WHERE (json_extract(((vt1.c0) NOTNULL), CASE vt1.c0  WHEN vt1.c0 THEN t0.c71 END));
SELECT SUM(count) FROM (SELECT ((json_extract(((vt1.c0) NOTNULL), CASE vt1.c0  WHEN vt1.c0 THEN t0.c71 END)) IS TRUE)  as count FROM vt1, rt0, t0 INNER JOIN vt0 ON SQLITE_VERSION());
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(0.3115116675670988 AS NUMERIC)  WHEN ((rt0.c4) ISNULL) THEN ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE ((((((((rt0.c0)AND(0xffffffffedaedfdd)))OR(rt0.c0)))AND(rt0.c5)))AND(rt0.c5)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(0.3115116675670988 AS NUMERIC)  WHEN ((rt0.c4) ISNULL) THEN ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE ((((((((rt0.c0)AND(0xffffffffedaedfdd)))OR(rt0.c0)))AND(rt0.c5)))AND(rt0.c5)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(0.3115116675670988 AS NUMERIC)  WHEN ((rt0.c4) ISNULL) THEN ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE ((((((((rt0.c0)AND(0xffffffffedaedfdd)))OR(rt0.c0)))AND(rt0.c5)))AND(rt0.c5)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(0.3115116675670988 AS NUMERIC)  WHEN ((rt0.c4) ISNULL) THEN ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE ((((((((rt0.c0)AND(0xffffffffedaedfdd)))OR(rt0.c0)))AND(rt0.c5)))AND(rt0.c5)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(0.3115116675670988 AS NUMERIC)  WHEN ((rt0.c4) ISNULL) THEN ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE ((((((((rt0.c0)AND(0xffffffffedaedfdd)))OR(rt0.c0)))AND(rt0.c5)))AND(rt0.c5)) END);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c5))) AND ((rt0.c1 IN (rt0.c4))))) ORDER BY (((rt0.c0)!=(0.05320483813547172)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c5))) AND ((rt0.c1 IN (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)<>(0.05320483813547172)) IN ()) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c5))) AND ((rt0.c1 IN (rt0.c4))))) ORDER BY (((rt0.c0)!=(0.05320483813547172)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c5))) AND ((rt0.c1 IN (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)<>(0.05320483813547172)) IN ()) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c5))) AND ((rt0.c1 IN (rt0.c4))))) ORDER BY (((rt0.c0)!=(0.05320483813547172)) IN ()) ASC;
SELECT * FROM t0, vt1 WHERE (CAST((((t0.c71))==((x''))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c71))==((x''))) AS REAL)) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (CAST((((t0.c71))==((x''))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c71))==((x''))) AS REAL)) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (CAST((((t0.c71))==((x''))) AS REAL));
SELECT ALL * FROM vt0 WHERE (((((LIKELIHOOD(DISTINCT vt0.c0, 0.32150567938760066))OR(NULL)))AND(json_quote(vt0.c0)))) ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELIHOOD(DISTINCT vt0.c0, 0.32150567938760066))OR(NULL)))AND(json_quote(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0 WHERE (((((LIKELIHOOD(DISTINCT vt0.c0, 0.32150567938760066))OR(NULL)))AND(json_quote(vt0.c0)))) ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELIHOOD(DISTINCT vt0.c0, 0.32150567938760066))OR(NULL)))AND(json_quote(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0 WHERE (((((LIKELIHOOD(DISTINCT vt0.c0, 0.32150567938760066))OR(NULL)))AND(json_quote(vt0.c0)))) ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE NOCASE DESC;
SELECT * FROM t0, vt0 RIGHT OUTER JOIN vt1 ON (((t0.c71 IN (t0.c71, t0.c35))) NOT BETWEEN (((vt1.c0)||(vt1.c0))) AND (((vt1.c0) IS FALSE))) WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN vt1 ON (((t0.c71 IN (t0.c71, t0.c35))) NOT BETWEEN (((vt1.c0)||(vt1.c0))) AND (((vt1.c0) IS FALSE))));
SELECT * FROM t0, vt0 RIGHT OUTER JOIN vt1 ON (((t0.c71 IN (t0.c71, t0.c35))) NOT BETWEEN (((vt1.c0)||(vt1.c0))) AND (((vt1.c0) IS FALSE))) WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN vt1 ON (((t0.c71 IN (t0.c71, t0.c35))) NOT BETWEEN (((vt1.c0)||(vt1.c0))) AND (((vt1.c0) IS FALSE))));
SELECT * FROM t0, vt0 RIGHT OUTER JOIN vt1 ON (((t0.c71 IN (t0.c71, t0.c35))) NOT BETWEEN (((vt1.c0)||(vt1.c0))) AND (((vt1.c0) IS FALSE))) WHERE (CAST(NULL AS REAL));
SELECT * FROM vt1 WHERE (x'd900') ORDER BY CASE WHEN ((vt1.c0)+(vt1.c0)) THEN ABS(1756985891) END ASC;
SELECT SUM(count) FROM (SELECT ((x'd900') IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)+(vt1.c0)) THEN ABS(1756985891) END ASC);
SELECT * FROM vt1 WHERE (x'd900') ORDER BY CASE WHEN ((vt1.c0)+(vt1.c0)) THEN ABS(1756985891) END ASC;
SELECT SUM(count) FROM (SELECT ((x'd900') IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)+(vt1.c0)) THEN ABS(1756985891) END ASC);
SELECT * FROM vt1 WHERE (x'd900') ORDER BY CASE WHEN ((vt1.c0)+(vt1.c0)) THEN ABS(1756985891) END ASC;
SELECT * FROM vt1, rt0, t0 WHERE (((((t0.c71) NOTNULL))-(LTRIM(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((t0.c71) NOTNULL))-(LTRIM(rt0.c3)))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (((((t0.c71) NOTNULL))-(LTRIM(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((t0.c71) NOTNULL))-(LTRIM(rt0.c3)))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (((((t0.c71) NOTNULL))-(LTRIM(rt0.c3))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((NOT (((((0.398305453573639)AND(t0.c35)))OR(vt0.c0))))) ORDER BY (((t0.c35)) BETWEEN (((NOT (vt0.c0)))) AND (((((t0.c71)) BETWEEN ((t0.c71)) AND ((vt0.c0)))))) DESC, (- (((vt1.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((((0.398305453573639)AND(t0.c35)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((t0.c35)) BETWEEN (((NOT (vt0.c0)))) AND (((((t0.c71)) BETWEEN ((t0.c71)) AND ((vt0.c0)))))) DESC, (- (((vt1.c0) IS FALSE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((NOT (((((0.398305453573639)AND(t0.c35)))OR(vt0.c0))))) ORDER BY (((t0.c35)) BETWEEN (((NOT (vt0.c0)))) AND (((((t0.c71)) BETWEEN ((t0.c71)) AND ((vt0.c0)))))) DESC, (- (((vt1.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((((0.398305453573639)AND(t0.c35)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((t0.c35)) BETWEEN (((NOT (vt0.c0)))) AND (((((t0.c71)) BETWEEN ((t0.c71)) AND ((vt0.c0)))))) DESC, (- (((vt1.c0) IS FALSE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((NOT (((((0.398305453573639)AND(t0.c35)))OR(vt0.c0))))) ORDER BY (((t0.c35)) BETWEEN (((NOT (vt0.c0)))) AND (((((t0.c71)) BETWEEN ((t0.c71)) AND ((vt0.c0)))))) DESC, (- (((vt1.c0) IS FALSE))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))OR(t0.c35))))) ORDER BY (((t0.c71) NOT BETWEEN (t0.c71) AND (t0.c35)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((((vt1.c0)OR(vt1.c0)))OR(t0.c35))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((t0.c71) NOT BETWEEN (t0.c71) AND (t0.c35)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))OR(t0.c35))))) ORDER BY (((t0.c71) NOT BETWEEN (t0.c71) AND (t0.c35)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((((vt1.c0)OR(vt1.c0)))OR(t0.c35))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((t0.c71) NOT BETWEEN (t0.c71) AND (t0.c35)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))OR(t0.c35))))) ORDER BY (((t0.c71) NOT BETWEEN (t0.c71) AND (t0.c35)) IN ()) ASC;
SELECT ALL * FROM vt0, t0, vt1 WHERE (x'4065');
SELECT SUM(count) FROM (SELECT ((x'4065') IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (x'4065');
SELECT SUM(count) FROM (SELECT ((x'4065') IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (x'4065');
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (CAST(LOWER(rt0.c5) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(rt0.c5) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, t0 NOT INDEXED, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (CAST(LOWER(rt0.c5) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(rt0.c5) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, t0 NOT INDEXED, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (CAST(LOWER(rt0.c5) AS INTEGER));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)%(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)%(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)%(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)%(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)%(rt0.c0)) IN ()));
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((LIKELY(rt0.c5))+(CASE WHEN vt1.c0 THEN rt0.c5 END))) ORDER BY ((((rt0.c4) ISNULL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c5))+(CASE WHEN vt1.c0 THEN rt0.c5 END))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((rt0.c4) ISNULL)) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((LIKELY(rt0.c5))+(CASE WHEN vt1.c0 THEN rt0.c5 END))) ORDER BY ((((rt0.c4) ISNULL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c5))+(CASE WHEN vt1.c0 THEN rt0.c5 END))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((rt0.c4) ISNULL)) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((LIKELY(rt0.c5))+(CASE WHEN vt1.c0 THEN rt0.c5 END))) ORDER BY ((((rt0.c4) ISNULL)) NOT NULL)  NULLS FIRST;
SELECT * FROM rt0, vt1, vt0 WHERE (((2041751119 COLLATE RTRIM)>=((((rt0.c2))>(('.ᛓ'))))));
SELECT SUM(count) FROM (SELECT ALL ((((2041751119 COLLATE RTRIM)>=((((rt0.c2))>(('.ᛓ')))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (((2041751119 COLLATE RTRIM)>=((((rt0.c2))>(('.ᛓ'))))));
SELECT SUM(count) FROM (SELECT ALL ((((2041751119 COLLATE RTRIM)>=((((rt0.c2))>(('.ᛓ')))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (((2041751119 COLLATE RTRIM)>=((((rt0.c2))>(('.ᛓ'))))));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)&((vt1.c0 IN ())))) ORDER BY ((DATE('', vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, CASE IFNULL(DISTINCT vt1.c0, vt1.c0)  WHEN ((vt1.c0)<>(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)&((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((DATE('', vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, CASE IFNULL(DISTINCT vt1.c0, vt1.c0)  WHEN ((vt1.c0)!=(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END  NULLS FIRST);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)&((vt1.c0 IN ())))) ORDER BY ((DATE('', vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, CASE IFNULL(DISTINCT vt1.c0, vt1.c0)  WHEN ((vt1.c0)<>(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)&((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((DATE('', vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, CASE IFNULL(DISTINCT vt1.c0, vt1.c0)  WHEN ((vt1.c0)!=(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END  NULLS FIRST);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)&((vt1.c0 IN ())))) ORDER BY ((DATE('', vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, CASE IFNULL(DISTINCT vt1.c0, vt1.c0)  WHEN ((vt1.c0)<>(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)>=(t0.c35))) IS TRUE) FULL OUTER JOIN rt0 ON TYPEOF(((t0.c71) IS FALSE)) WHERE (t0.c71) ORDER BY CAST(((-8.0687722E7)=(t0.c71)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((t0.c71) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)>=(t0.c35))) IS TRUE) FULL OUTER JOIN rt0 ON TYPEOF(((t0.c71) IS FALSE)) ORDER BY CAST(((-8.0687722E7)==(t0.c71)) AS TEXT));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)>=(t0.c35))) IS TRUE) FULL OUTER JOIN rt0 ON TYPEOF(((t0.c71) IS FALSE)) WHERE (t0.c71) ORDER BY CAST(((-8.0687722E7)=(t0.c71)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((t0.c71) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)>=(t0.c35))) IS TRUE) FULL OUTER JOIN rt0 ON TYPEOF(((t0.c71) IS FALSE)) ORDER BY CAST(((-8.0687722E7)==(t0.c71)) AS TEXT));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)>=(t0.c35))) IS TRUE) FULL OUTER JOIN rt0 ON TYPEOF(((t0.c71) IS FALSE)) WHERE (t0.c71) ORDER BY CAST(((-8.0687722E7)=(t0.c71)) AS TEXT);
SELECT ALL * FROM t0 WHERE ((((t0.c71)) NOT BETWEEN ((x'')) AND (((- (t0.c35))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c71)) NOT BETWEEN ((x'')) AND (((- (t0.c35)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c71)) NOT BETWEEN ((x'')) AND (((- (t0.c35))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c71)) NOT BETWEEN ((x'')) AND (((- (t0.c35)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c71)) NOT BETWEEN ((x'')) AND (((- (t0.c35))))));
SELECT ALL * FROM vt0, vt1 CROSS JOIN t0 ON (~ (CASE WHEN vt1.c0 THEN vt0.c0 ELSE 'L''N' END)) WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c35)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c35)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON (~ (CASE WHEN vt1.c0 THEN vt0.c0 ELSE 'L''N' END)));
SELECT ALL * FROM vt0, vt1 CROSS JOIN t0 ON (~ (CASE WHEN vt1.c0 THEN vt0.c0 ELSE 'L''N' END)) WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c35)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c35)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON (~ (CASE WHEN vt1.c0 THEN vt0.c0 ELSE 'L''N' END)));
SELECT ALL * FROM vt0, vt1 CROSS JOIN t0 ON (~ (CASE WHEN vt1.c0 THEN vt0.c0 ELSE 'L''N' END)) WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c35)) AS BLOB));
SELECT * FROM t0, vt1, rt0 WHERE (CAST(0.1803620214774071 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.1803620214774071 AS TEXT)) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE (CAST(0.1803620214774071 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.1803620214774071 AS TEXT)) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE (CAST(0.1803620214774071 AS TEXT));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)>(vt1.c0)), vt1.c0 COLLATE BINARY, vt1.c0 COLLATE BINARY))>=(((NOT (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0) IS FALSE))))) ORDER BY ((((('483432620'))<=((vt1.c0)))) NOT NULL) DESC  NULLS FIRST, (NOT (((vt1.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)>(vt1.c0)), vt1.c0 COLLATE BINARY, vt1.c0 COLLATE BINARY))>=(((NOT (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0) IS FALSE))))) IS TRUE)  as count FROM vt1 ORDER BY ((((('483432620'))<=((vt1.c0)))) NOT NULL) DESC  NULLS FIRST, (NOT (((vt1.c0) NOTNULL))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)>(vt1.c0)), vt1.c0 COLLATE BINARY, vt1.c0 COLLATE BINARY))>=(((NOT (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0) IS FALSE))))) ORDER BY ((((('483432620'))<=((vt1.c0)))) NOT NULL) DESC  NULLS FIRST, (NOT (((vt1.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)>(vt1.c0)), vt1.c0 COLLATE BINARY, vt1.c0 COLLATE BINARY))>=(((NOT (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0) IS FALSE))))) IS TRUE)  as count FROM vt1 ORDER BY ((((('483432620'))<=((vt1.c0)))) NOT NULL) DESC  NULLS FIRST, (NOT (((vt1.c0) NOTNULL))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)>(vt1.c0)), vt1.c0 COLLATE BINARY, vt1.c0 COLLATE BINARY))>=(((NOT (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0) IS FALSE))))) ORDER BY ((((('483432620'))<=((vt1.c0)))) NOT NULL) DESC  NULLS FIRST, (NOT (((vt1.c0) NOTNULL))) ASC;
SELECT COUNT(*) FROM t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON CASE UPPER(DISTINCT NULL)  WHEN rt0.c4 THEN CASE rt0.c2  WHEN rt0.c2 THEN t0.c71 WHEN '6朐' THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 END WHEN ((('z5jh')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4))) THEN SUBSTR(t0.c71, t0.c35) WHEN rt0.c1 THEN ((rt0.c3) IS TRUE) ELSE STRFTIME(rt0.c4, vt1.c0, rt0.c5) END WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((NOT (vt1.c0))) AND (COALESCE(DISTINCT rt0.c3, t0.c71))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((NOT (vt1.c0))) AND (COALESCE(DISTINCT rt0.c3, t0.c71)))) IS TRUE)  as count FROM t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON CASE UPPER(DISTINCT NULL)  WHEN rt0.c4 THEN CASE rt0.c2  WHEN rt0.c2 THEN t0.c71 WHEN '6朐' THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 END WHEN ((('z5jh')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4))) THEN SUBSTR(t0.c71, t0.c35) WHEN rt0.c1 THEN ((rt0.c3) IS TRUE) ELSE STRFTIME(rt0.c4, vt1.c0, rt0.c5) END);
SELECT COUNT(*) FROM t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON CASE UPPER(DISTINCT NULL)  WHEN rt0.c4 THEN CASE rt0.c2  WHEN rt0.c2 THEN t0.c71 WHEN '6朐' THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 END WHEN ((('z5jh')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4))) THEN SUBSTR(t0.c71, t0.c35) WHEN rt0.c1 THEN ((rt0.c3) IS TRUE) ELSE STRFTIME(rt0.c4, vt1.c0, rt0.c5) END WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((NOT (vt1.c0))) AND (COALESCE(DISTINCT rt0.c3, t0.c71))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((NOT (vt1.c0))) AND (COALESCE(DISTINCT rt0.c3, t0.c71)))) IS TRUE)  as count FROM t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON CASE UPPER(DISTINCT NULL)  WHEN rt0.c4 THEN CASE rt0.c2  WHEN rt0.c2 THEN t0.c71 WHEN '6朐' THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 END WHEN ((('z5jh')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4))) THEN SUBSTR(t0.c71, t0.c35) WHEN rt0.c1 THEN ((rt0.c3) IS TRUE) ELSE STRFTIME(rt0.c4, vt1.c0, rt0.c5) END);
SELECT COUNT(*) FROM t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON CASE UPPER(DISTINCT NULL)  WHEN rt0.c4 THEN CASE rt0.c2  WHEN rt0.c2 THEN t0.c71 WHEN '6朐' THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 END WHEN ((('z5jh')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4))) THEN SUBSTR(t0.c71, t0.c35) WHEN rt0.c1 THEN ((rt0.c3) IS TRUE) ELSE STRFTIME(rt0.c4, vt1.c0, rt0.c5) END WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((NOT (vt1.c0))) AND (COALESCE(DISTINCT rt0.c3, t0.c71))));
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT NULL));
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(NULL))) NOT BETWEEN (((vt1.c0)==(0.30076340314606))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(NULL))) NOT BETWEEN (((vt1.c0)==(0.30076340314606))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(NULL))) NOT BETWEEN (((vt1.c0)==(0.30076340314606))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(NULL))) NOT BETWEEN (((vt1.c0)==(0.30076340314606))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(NULL))) NOT BETWEEN (((vt1.c0)==(0.30076340314606))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((((vt1.c0 COLLATE NOCASE)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND((((vt1.c0, vt0.c0, x'dc0a'))>=((vt1.c0, vt1.c0, vt1.c0))))))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt0.c0) IS TRUE))))AND(CAST(vt0.c0 AS BLOB))))OR(vt0.c0 COLLATE BINARY))) ORDER BY ((LOWER(DISTINCT vt0.c0)) NOT BETWEEN (((vt1.c0)|(vt0.c0))) AND (-417779007))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c0 COLLATE NOCASE)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND((((vt1.c0, vt0.c0, x'dc0a'))>=((vt1.c0, vt1.c0, vt1.c0))))))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt0.c0) IS TRUE))))AND(CAST(vt0.c0 AS BLOB))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((LOWER(DISTINCT vt0.c0)) NOT BETWEEN (((vt1.c0)|(vt0.c0))) AND (-417779007))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((((vt1.c0 COLLATE NOCASE)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND((((vt1.c0, vt0.c0, x'dc0a'))>=((vt1.c0, vt1.c0, vt1.c0))))))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt0.c0) IS TRUE))))AND(CAST(vt0.c0 AS BLOB))))OR(vt0.c0 COLLATE BINARY))) ORDER BY ((LOWER(DISTINCT vt0.c0)) NOT BETWEEN (((vt1.c0)|(vt0.c0))) AND (-417779007))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c0 COLLATE NOCASE)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND((((vt1.c0, vt0.c0, x'dc0a'))>=((vt1.c0, vt1.c0, vt1.c0))))))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt0.c0) IS TRUE))))AND(CAST(vt0.c0 AS BLOB))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((LOWER(DISTINCT vt0.c0)) NOT BETWEEN (((vt1.c0)|(vt0.c0))) AND (-417779007))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((((vt1.c0 COLLATE NOCASE)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND((((vt1.c0, vt0.c0, x'dc0a'))>=((vt1.c0, vt1.c0, vt1.c0))))))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt0.c0) IS TRUE))))AND(CAST(vt0.c0 AS BLOB))))OR(vt0.c0 COLLATE BINARY))) ORDER BY ((LOWER(DISTINCT vt0.c0)) NOT BETWEEN (((vt1.c0)|(vt0.c0))) AND (-417779007))  NULLS FIRST;
SELECT * FROM t0 INNER JOIN vt0 ON ((((((((((vt0.c0)<>(rt0.c2)))AND((~ (rt0.c5)))))AND(PRINTF(rt0.c2))))AND(((rt0.c0) ISNULL))))OR((t0.c71 IN ()))) FULL OUTER JOIN rt0 ON (NOT ((NOT (t0.c71)))) CROSS JOIN vt1 ON ((((rt0.c5)>>(t0.c71)))GLOB(1887092407)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((((((((vt0.c0)<>(rt0.c2)))AND((~ (rt0.c5)))))AND(PRINTF(rt0.c2))))AND(((rt0.c0) ISNULL))))OR((t0.c71 IN ()))) FULL OUTER JOIN rt0 ON (NOT ((NOT (t0.c71)))) CROSS JOIN vt1 ON ((((rt0.c5)>>(t0.c71)))GLOB(1887092407)));
SELECT * FROM t0 INNER JOIN vt0 ON ((((((((((vt0.c0)<>(rt0.c2)))AND((~ (rt0.c5)))))AND(PRINTF(rt0.c2))))AND(((rt0.c0) ISNULL))))OR((t0.c71 IN ()))) FULL OUTER JOIN rt0 ON (NOT ((NOT (t0.c71)))) CROSS JOIN vt1 ON ((((rt0.c5)>>(t0.c71)))GLOB(1887092407)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((((((((vt0.c0)<>(rt0.c2)))AND((~ (rt0.c5)))))AND(PRINTF(rt0.c2))))AND(((rt0.c0) ISNULL))))OR((t0.c71 IN ()))) FULL OUTER JOIN rt0 ON (NOT ((NOT (t0.c71)))) CROSS JOIN vt1 ON ((((rt0.c5)>>(t0.c71)))GLOB(1887092407)));
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c4 COLLATE BINARY)AND(rt0.c1 COLLATE BINARY)))OR(rt0.c4)))OR(((rt0.c0)OR('0.544144072263209')))))AND((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c4 COLLATE BINARY)AND(rt0.c1 COLLATE BINARY)))OR(rt0.c4)))OR(((rt0.c0)OR('0.544144072263209')))))AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c4 COLLATE BINARY)AND(rt0.c1 COLLATE BINARY)))OR(rt0.c4)))OR(((rt0.c0)OR('0.544144072263209')))))AND((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c4 COLLATE BINARY)AND(rt0.c1 COLLATE BINARY)))OR(rt0.c4)))OR(((rt0.c0)OR('0.544144072263209')))))AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c4 COLLATE BINARY)AND(rt0.c1 COLLATE BINARY)))OR(rt0.c4)))OR(((rt0.c0)OR('0.544144072263209')))))AND((~ (rt0.c2)))));
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt1.c0)))AND((+ (rt0.c5))))) ORDER BY ((((((((((t0.c71)AND(vt0.c0)))OR(t0.c71)))OR(t0.c35)))AND(rt0.c3)))<<((t0.c35 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt1.c0)))AND((+ (rt0.c5))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY ((((((((((t0.c71)AND(vt0.c0)))OR(t0.c71)))OR(t0.c35)))AND(rt0.c3)))<<((t0.c35 IN ()))) DESC);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt1.c0)))AND((+ (rt0.c5))))) ORDER BY ((((((((((t0.c71)AND(vt0.c0)))OR(t0.c71)))OR(t0.c35)))AND(rt0.c3)))<<((t0.c35 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt1.c0)))AND((+ (rt0.c5))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY ((((((((((t0.c71)AND(vt0.c0)))OR(t0.c71)))OR(t0.c35)))AND(rt0.c3)))<<((t0.c35 IN ()))) DESC);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt1.c0)))AND((+ (rt0.c5))))) ORDER BY ((((((((((t0.c71)AND(vt0.c0)))OR(t0.c71)))OR(t0.c35)))AND(rt0.c3)))<<((t0.c35 IN ()))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)>(vt0.c0)) IN ())) ORDER BY json_valid((((vt0.c0))<=((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY json_valid((((vt0.c0))<=((vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)>(vt0.c0)) IN ())) ORDER BY json_valid((((vt0.c0))<=((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY json_valid((((vt0.c0))<=((vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)>(vt0.c0)) IN ())) ORDER BY json_valid((((vt0.c0))<=((vt0.c0))));
SELECT * FROM t0, vt0 WHERE ((((((t0.c35)) BETWEEN ((517393249)) AND ((t0.c71)))) ISNULL)) ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c35)) BETWEEN ((517393249)) AND ((t0.c71)))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((((((t0.c35)) BETWEEN ((517393249)) AND ((t0.c71)))) ISNULL)) ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c35)) BETWEEN ((517393249)) AND ((t0.c71)))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((((((t0.c35)) BETWEEN ((517393249)) AND ((t0.c71)))) ISNULL)) ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (rt0.c3) ORDER BY (((~ (rt0.c3)))<<(((rt0.c5)<<(NULL)))) DESC  NULLS FIRST, '*Z'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0, t0 NOT INDEXED, vt1 ORDER BY (((~ (rt0.c3)))<<(((rt0.c5)<<(NULL)))) DESC  NULLS FIRST, '*Z'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (rt0.c3) ORDER BY (((~ (rt0.c3)))<<(((rt0.c5)<<(NULL)))) DESC  NULLS FIRST, '*Z'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0, t0 NOT INDEXED, vt1 ORDER BY (((~ (rt0.c3)))<<(((rt0.c5)<<(NULL)))) DESC  NULLS FIRST, '*Z'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (rt0.c3) ORDER BY (((~ (rt0.c3)))<<(((rt0.c5)<<(NULL)))) DESC  NULLS FIRST, '*Z'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((t0.c71, vt1.c0, vt1.c0)) BETWEEN ((((t0.c35) ISNULL), CAST(t0.c71 AS NUMERIC), CAST(t0.c71 AS TEXT))) AND ((((t0.c71)AND(t0.c71)), ((vt1.c0)IS NOT(t0.c71)), TRIM(DISTINCT t0.c35, t0.c71)))));
SELECT SUM(count) FROM (SELECT (((((t0.c71, vt1.c0, vt1.c0)) BETWEEN ((((t0.c35) ISNULL), CAST(t0.c71 AS NUMERIC), CAST(t0.c71 AS TEXT))) AND ((((t0.c71)AND(t0.c71)), ((vt1.c0)IS NOT(t0.c71)), TRIM(DISTINCT t0.c35, t0.c71))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((t0.c71, vt1.c0, vt1.c0)) BETWEEN ((((t0.c35) ISNULL), CAST(t0.c71 AS NUMERIC), CAST(t0.c71 AS TEXT))) AND ((((t0.c71)AND(t0.c71)), ((vt1.c0)IS NOT(t0.c71)), TRIM(DISTINCT t0.c35, t0.c71)))));
SELECT SUM(count) FROM (SELECT (((((t0.c71, vt1.c0, vt1.c0)) BETWEEN ((((t0.c35) ISNULL), CAST(t0.c71 AS NUMERIC), CAST(t0.c71 AS TEXT))) AND ((((t0.c71)AND(t0.c71)), ((vt1.c0)IS NOT(t0.c71)), TRIM(DISTINCT t0.c35, t0.c71))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((t0.c71, vt1.c0, vt1.c0)) BETWEEN ((((t0.c35) ISNULL), CAST(t0.c71 AS NUMERIC), CAST(t0.c71 AS TEXT))) AND ((((t0.c71)AND(t0.c71)), ((vt1.c0)IS NOT(t0.c71)), TRIM(DISTINCT t0.c35, t0.c71)))));
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE (CAST(((rt0.c3) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE (CAST(((rt0.c3) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE (CAST(((rt0.c3) IS TRUE) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0.09984971062178305 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((0.09984971062178305 COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0.09984971062178305 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((0.09984971062178305 COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0.09984971062178305 COLLATE NOCASE);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((rt0.c3) NOTNULL) INNER JOIN rt0 ON TYPEOF((- ('-836269675'))) LEFT OUTER JOIN t0 ON (+ (x'f409')) WHERE (LIKELIHOOD(DISTINCT ((rt0.c0)=(rt0.c1)), 0.9356418562897002)) ORDER BY CAST((- (rt0.c3)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt0.c0)=(rt0.c1)), 0.9356418562897002)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((rt0.c3) NOTNULL) INNER JOIN rt0 ON TYPEOF((- ('-836269675'))) LEFT OUTER JOIN t0 ON (+ (x'f409')) ORDER BY CAST((- (rt0.c3)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((rt0.c3) NOTNULL) INNER JOIN rt0 ON TYPEOF((- ('-836269675'))) LEFT OUTER JOIN t0 ON (+ (x'f409')) WHERE (LIKELIHOOD(DISTINCT ((rt0.c0)=(rt0.c1)), 0.9356418562897002)) ORDER BY CAST((- (rt0.c3)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt0.c0)=(rt0.c1)), 0.9356418562897002)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((rt0.c3) NOTNULL) INNER JOIN rt0 ON TYPEOF((- ('-836269675'))) LEFT OUTER JOIN t0 ON (+ (x'f409')) ORDER BY CAST((- (rt0.c3)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0) NOT BETWEEN ('wAu>Cz') AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((((NULL)OR(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0) NOT BETWEEN ('wAu>Cz') AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((((NULL)OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0) NOT BETWEEN ('wAu>Cz') AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((((NULL)OR(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0) NOT BETWEEN ('wAu>Cz') AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((((NULL)OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0) NOT BETWEEN ('wAu>Cz') AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((((NULL)OR(vt0.c0)))OR(vt0.c0)) END);
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE (((CAST(rt0.c3 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, vt0, t0);
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE (((CAST(rt0.c3 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, vt0, t0);
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE (((CAST(rt0.c3 AS NUMERIC)) IS TRUE));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('0.2572694775464529');
SELECT SUM(count) FROM (SELECT (('0.2572694775464529') IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('0.2572694775464529');
SELECT SUM(count) FROM (SELECT (('0.2572694775464529') IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('0.2572694775464529');
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (TRIM(rt0.c5, t0.c71) IN ()) INNER JOIN vt1 ON LIKELY(((((rt0.c0)OR(rt0.c1)))AND(vt0.c0))) RIGHT OUTER JOIN rt0 ON x'' WHERE (((((rt0.c2 IN ())))==((((((rt0.c2)AND(rt0.c4)))OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 IN ())))=((((((rt0.c2)AND(rt0.c4)))OR(rt0.c2)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (TRIM(rt0.c5, t0.c71) IN ()) INNER JOIN vt1 ON LIKELY(((((rt0.c0)OR(rt0.c1)))AND(vt0.c0))) RIGHT OUTER JOIN rt0 ON x'');
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (TRIM(rt0.c5, t0.c71) IN ()) INNER JOIN vt1 ON LIKELY(((((rt0.c0)OR(rt0.c1)))AND(vt0.c0))) RIGHT OUTER JOIN rt0 ON x'' WHERE (((((rt0.c2 IN ())))==((((((rt0.c2)AND(rt0.c4)))OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 IN ())))=((((((rt0.c2)AND(rt0.c4)))OR(rt0.c2)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (TRIM(rt0.c5, t0.c71) IN ()) INNER JOIN vt1 ON LIKELY(((((rt0.c0)OR(rt0.c1)))AND(vt0.c0))) RIGHT OUTER JOIN rt0 ON x'');
SELECT COUNT(*) FROM t0, rt0 WHERE ((t0.c71 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((t0.c71 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((t0.c71 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((t0.c71 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((t0.c71 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((((rt0.c1)<(rt0.c4))) NOT BETWEEN (((vt1.c0)<(rt0.c4))) AND (t0.c35)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<(rt0.c4))) NOT BETWEEN (((vt1.c0)<(rt0.c4))) AND (t0.c35))) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((((rt0.c1)<(rt0.c4))) NOT BETWEEN (((vt1.c0)<(rt0.c4))) AND (t0.c35)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<(rt0.c4))) NOT BETWEEN (((vt1.c0)<(rt0.c4))) AND (t0.c35))) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((((rt0.c1)<(rt0.c4))) NOT BETWEEN (((vt1.c0)<(rt0.c4))) AND (t0.c35)));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((COALESCE(rt0.c4, rt0.c5, x'', vt1.c0) IN (((((rt0.c3)AND(rt0.c4)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((COALESCE(rt0.c4, rt0.c5, x'', vt1.c0) IN (((((rt0.c3)AND(rt0.c4)))AND(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((COALESCE(rt0.c4, rt0.c5, x'', vt1.c0) IN (((((rt0.c3)AND(rt0.c4)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((COALESCE(rt0.c4, rt0.c5, x'', vt1.c0) IN (((((rt0.c3)AND(rt0.c4)))AND(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((COALESCE(rt0.c4, rt0.c5, x'', vt1.c0) IN (((((rt0.c3)AND(rt0.c4)))AND(rt0.c3)))));
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) NOT NULL)) ORDER BY TRIM(((vt0.c0) NOTNULL), ((vt0.c0) NOT NULL))  NULLS FIRST, TYPEOF(DISTINCT ((vt0.c0)/(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY TRIM(((vt0.c0) NOTNULL), ((vt0.c0) NOT NULL))  NULLS FIRST, TYPEOF(DISTINCT ((vt0.c0)/(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) NOT NULL)) ORDER BY TRIM(((vt0.c0) NOTNULL), ((vt0.c0) NOT NULL))  NULLS FIRST, TYPEOF(DISTINCT ((vt0.c0)/(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY TRIM(((vt0.c0) NOTNULL), ((vt0.c0) NOT NULL))  NULLS FIRST, TYPEOF(DISTINCT ((vt0.c0)/(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) NOT NULL)) ORDER BY TRIM(((vt0.c0) NOTNULL), ((vt0.c0) NOT NULL))  NULLS FIRST, TYPEOF(DISTINCT ((vt0.c0)/(vt0.c0)));
SELECT * FROM rt0, vt0, vt1, t0 WHERE (rt0.c5) ORDER BY (((t0.c35)) NOT BETWEEN (((NOT (t0.c71)))) AND ((NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY (((t0.c35)) NOT BETWEEN (((NOT (t0.c71)))) AND ((NULL)))  NULLS LAST);
SELECT * FROM rt0, vt0, vt1, t0 WHERE (rt0.c5) ORDER BY (((t0.c35)) NOT BETWEEN (((NOT (t0.c71)))) AND ((NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY (((t0.c35)) NOT BETWEEN (((NOT (t0.c71)))) AND ((NULL)))  NULLS LAST);
SELECT * FROM rt0, vt0, vt1, t0 WHERE (rt0.c5) ORDER BY (((t0.c35)) NOT BETWEEN (((NOT (t0.c71)))) AND ((NULL)))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ('5CB[]') ORDER BY (((vt1.c0 IN ()))GLOB(((vt1.c0)|(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('5CB[]') IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ()))GLOB(((vt1.c0)|(NULL))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ('5CB[]') ORDER BY (((vt1.c0 IN ()))GLOB(((vt1.c0)|(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('5CB[]') IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ()))GLOB(((vt1.c0)|(NULL))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ('5CB[]') ORDER BY (((vt1.c0 IN ()))GLOB(((vt1.c0)|(NULL))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 CROSS JOIN vt0 ON (((NULL)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c1)IS(rt0.c3))))) CROSS JOIN t0 ON (vt0.c0 IN (rt0.c0)) COLLATE RTRIM WHERE ((+ (0.7077146604478716)));
SELECT SUM(count) FROM (SELECT ALL (((+ (0.7077146604478716))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt0 ON (((NULL)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c1)IS(rt0.c3))))) CROSS JOIN t0 ON (vt0.c0 IN (rt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, rt0 CROSS JOIN vt0 ON (((NULL)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c1)IS(rt0.c3))))) CROSS JOIN t0 ON (vt0.c0 IN (rt0.c0)) COLLATE RTRIM WHERE ((+ (0.7077146604478716)));
SELECT SUM(count) FROM (SELECT ALL (((+ (0.7077146604478716))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt0 ON (((NULL)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c1)IS(rt0.c3))))) CROSS JOIN t0 ON (vt0.c0 IN (rt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, rt0 CROSS JOIN vt0 ON (((NULL)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c1)IS(rt0.c3))))) CROSS JOIN t0 ON (vt0.c0 IN (rt0.c0)) COLLATE RTRIM WHERE ((+ (0.7077146604478716)));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c35 IN ()))-(t0.c35))) ORDER BY -412914631;
SELECT SUM(count) FROM (SELECT (((((t0.c35 IN ()))-(t0.c35))) IS TRUE)  as count FROM t0 ORDER BY -412914631);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c35 IN ()))-(t0.c35))) ORDER BY -412914631;
SELECT SUM(count) FROM (SELECT (((((t0.c35 IN ()))-(t0.c35))) IS TRUE)  as count FROM t0 ORDER BY -412914631);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((CAST(x'' AS REAL))AND(((rt0.c5)-('zK')))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))) LEFT OUTER JOIN vt1 ON ((((((vt1.c0)OR(rt0.c0)))OR(vt0.c0))) IS TRUE) WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((CAST(x'' AS REAL))AND(((rt0.c5)-('zK')))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))) LEFT OUTER JOIN vt1 ON ((((((vt1.c0)OR(rt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((CAST(x'' AS REAL))AND(((rt0.c5)-('zK')))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))) LEFT OUTER JOIN vt1 ON ((((((vt1.c0)OR(rt0.c0)))OR(vt0.c0))) IS TRUE) WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((CAST(x'' AS REAL))AND(((rt0.c5)-('zK')))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))) LEFT OUTER JOIN vt1 ON ((((((vt1.c0)OR(rt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((CAST(x'' AS REAL))AND(((rt0.c5)-('zK')))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))) LEFT OUTER JOIN vt1 ON ((((((vt1.c0)OR(rt0.c0)))OR(vt0.c0))) IS TRUE) WHERE (rt0.c5);
SELECT * FROM rt0 WHERE (json_valid(rt0.c0));
SELECT SUM(count) FROM (SELECT ((json_valid(rt0.c0)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_valid(rt0.c0));
SELECT SUM(count) FROM (SELECT ((json_valid(rt0.c0)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_valid(rt0.c0));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c71)+(t0.c35)) COLLATE BINARY) ORDER BY ((((t0.c71) NOT BETWEEN (t0.c35) AND (NULL)))&('-992279380'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c71)+(t0.c35)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c71) NOT BETWEEN (t0.c35) AND (NULL)))&('-992279380'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c71)+(t0.c35)) COLLATE BINARY) ORDER BY ((((t0.c71) NOT BETWEEN (t0.c35) AND (NULL)))&('-992279380'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c71)+(t0.c35)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c71) NOT BETWEEN (t0.c35) AND (NULL)))&('-992279380'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c71)+(t0.c35)) COLLATE BINARY) ORDER BY ((((t0.c71) NOT BETWEEN (t0.c35) AND (NULL)))&('-992279380'))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c35 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c35 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c35 COLLATE NOCASE) ISNULL));
SELECT * FROM rt0, vt1 WHERE (CAST(COALESCE(vt1.c0, rt0.c0) AS NUMERIC)) ORDER BY ((rt0.c1)LIKE(CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c4 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(vt1.c0, rt0.c0) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c1)LIKE(CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c4 END)) ASC);
SELECT * FROM rt0, vt1 WHERE (CAST(COALESCE(vt1.c0, rt0.c0) AS NUMERIC)) ORDER BY ((rt0.c1)LIKE(CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c4 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(vt1.c0, rt0.c0) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c1)LIKE(CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c4 END)) ASC);
SELECT * FROM rt0, vt1 WHERE (CAST(COALESCE(vt1.c0, rt0.c0) AS NUMERIC)) ORDER BY ((rt0.c1)LIKE(CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c4 END)) ASC;
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((rt0.c2)||(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)||(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((rt0.c2)||(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)||(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((rt0.c2)||(rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (CASE LIKELIHOOD(DISTINCT t0.c35, 0.49041966988697117)  WHEN (t0.c71 IN (t0.c35, t0.c35)) THEN (t0.c71 IN ()) ELSE '703277891' COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE LIKELIHOOD(DISTINCT t0.c35, 0.49041966988697117)  WHEN (t0.c71 IN (t0.c35, t0.c35)) THEN (t0.c71 IN ()) ELSE '703277891' COLLATE NOCASE END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE LIKELIHOOD(DISTINCT t0.c35, 0.49041966988697117)  WHEN (t0.c71 IN (t0.c35, t0.c35)) THEN (t0.c71 IN ()) ELSE '703277891' COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE LIKELIHOOD(DISTINCT t0.c35, 0.49041966988697117)  WHEN (t0.c71 IN (t0.c35, t0.c35)) THEN (t0.c71 IN ()) ELSE '703277891' COLLATE NOCASE END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE LIKELIHOOD(DISTINCT t0.c35, 0.49041966988697117)  WHEN (t0.c71 IN (t0.c35, t0.c35)) THEN (t0.c71 IN ()) ELSE '703277891' COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE) NOT NULL));
SELECT ALL * FROM t0, vt0 WHERE (((t0.c35)<(t0.c35)) COLLATE BINARY) ORDER BY (json_array_length(t0.c71, t0.c71) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35)<(t0.c35)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY (json_array_length(t0.c71, t0.c71) IN ()));
SELECT ALL * FROM t0, vt0 WHERE (((t0.c35)<(t0.c35)) COLLATE BINARY) ORDER BY (json_array_length(t0.c71, t0.c71) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t0.c35)<(t0.c35)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY (json_array_length(t0.c71, t0.c71) IN ()));
SELECT ALL * FROM t0, vt0 WHERE (((t0.c35)<(t0.c35)) COLLATE BINARY) ORDER BY (json_array_length(t0.c71, t0.c71) IN ());
SELECT * FROM t0 NOT INDEXED WHERE (((CAST(t0.c35 AS NUMERIC))OR(((t0.c71)>(t0.c35)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c35 AS NUMERIC))OR(((t0.c71)>(t0.c35))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 NOT INDEXED WHERE (((CAST(t0.c35 AS NUMERIC))OR(((t0.c71)>(t0.c35)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c35 AS NUMERIC))OR(((t0.c71)>(t0.c35))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 NOT INDEXED WHERE (((CAST(t0.c35 AS NUMERIC))OR(((t0.c71)>(t0.c35)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END)AND(7.03277891E8)))OR(((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))) RIGHT OUTER JOIN vt0 ON rt0.c4 WHERE ((((rt0.c0)<<(vt0.c0)) IN (rt0.c4, rt0.c5 COLLATE RTRIM))) ORDER BY TRIM(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))  NULLS FIRST, CAST(x'8549' AS BLOB), (((((rt0.c3, rt0.c0, rt0.c1)) BETWEEN ((vt0.c0, rt0.c2, x'')) AND ((rt0.c3, rt0.c2, rt0.c2)))) NOT BETWEEN (rt0.c1) AND (((rt0.c1)IS NOT(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<<(vt0.c0)) IN (rt0.c4, rt0.c5 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END)AND(7.03277891E8)))OR(((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))) RIGHT OUTER JOIN vt0 ON rt0.c4 ORDER BY TRIM(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))  NULLS FIRST, CAST(x'8549' AS BLOB), (((((rt0.c3, rt0.c0, rt0.c1)) BETWEEN ((vt0.c0, rt0.c2, x'')) AND ((rt0.c3, rt0.c2, rt0.c2)))) NOT BETWEEN (rt0.c1) AND (((rt0.c1)IS NOT(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END)AND(7.03277891E8)))OR(((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))) RIGHT OUTER JOIN vt0 ON rt0.c4 WHERE ((((rt0.c0)<<(vt0.c0)) IN (rt0.c4, rt0.c5 COLLATE RTRIM))) ORDER BY TRIM(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))  NULLS FIRST, CAST(x'8549' AS BLOB), (((((rt0.c3, rt0.c0, rt0.c1)) BETWEEN ((vt0.c0, rt0.c2, x'')) AND ((rt0.c3, rt0.c2, rt0.c2)))) NOT BETWEEN (rt0.c1) AND (((rt0.c1)IS NOT(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<<(vt0.c0)) IN (rt0.c4, rt0.c5 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END)AND(7.03277891E8)))OR(((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))) RIGHT OUTER JOIN vt0 ON rt0.c4 ORDER BY TRIM(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))  NULLS FIRST, CAST(x'8549' AS BLOB), (((((rt0.c3, rt0.c0, rt0.c1)) BETWEEN ((vt0.c0, rt0.c2, x'')) AND ((rt0.c3, rt0.c2, rt0.c2)))) NOT BETWEEN (rt0.c1) AND (((rt0.c1)IS NOT(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END)AND(7.03277891E8)))OR(((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))) RIGHT OUTER JOIN vt0 ON rt0.c4 WHERE ((((rt0.c0)<<(vt0.c0)) IN (rt0.c4, rt0.c5 COLLATE RTRIM))) ORDER BY TRIM(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))  NULLS FIRST, CAST(x'8549' AS BLOB), (((((rt0.c3, rt0.c0, rt0.c1)) BETWEEN ((vt0.c0, rt0.c2, x'')) AND ((rt0.c3, rt0.c2, rt0.c2)))) NOT BETWEEN (rt0.c1) AND (((rt0.c1)IS NOT(vt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1 WHERE (((((((((CASE WHEN vt1.c0 THEN t0.c35 END)AND(NULLIF(t0.c71, t0.c71))))AND(CASE 'GS(fB6'  WHEN vt1.c0 THEN x'' ELSE t0.c71 END)))AND((vt1.c0 IN ()))))OR((((t0.c35))=((vt1.c0)))))) ORDER BY (((t0.c35)) NOT BETWEEN ((((t0.c71) BETWEEN (t0.c35) AND (NULL)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND ('T嘏Q'))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt1.c0 THEN t0.c35 END)AND(NULLIF(t0.c71, t0.c71))))AND(CASE 'GS(fB6'  WHEN vt1.c0 THEN x'' ELSE t0.c71 END)))AND((vt1.c0 IN ()))))OR((((t0.c35))=((vt1.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c35)) NOT BETWEEN ((((t0.c71) BETWEEN (t0.c35) AND (NULL)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND ('T嘏Q'))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((((((CASE WHEN vt1.c0 THEN t0.c35 END)AND(NULLIF(t0.c71, t0.c71))))AND(CASE 'GS(fB6'  WHEN vt1.c0 THEN x'' ELSE t0.c71 END)))AND((vt1.c0 IN ()))))OR((((t0.c35))=((vt1.c0)))))) ORDER BY (((t0.c35)) NOT BETWEEN ((((t0.c71) BETWEEN (t0.c35) AND (NULL)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND ('T嘏Q'))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt1.c0 THEN t0.c35 END)AND(NULLIF(t0.c71, t0.c71))))AND(CASE 'GS(fB6'  WHEN vt1.c0 THEN x'' ELSE t0.c71 END)))AND((vt1.c0 IN ()))))OR((((t0.c35))=((vt1.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c35)) NOT BETWEEN ((((t0.c71) BETWEEN (t0.c35) AND (NULL)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND ('T嘏Q'))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((((((CASE WHEN vt1.c0 THEN t0.c35 END)AND(NULLIF(t0.c71, t0.c71))))AND(CASE 'GS(fB6'  WHEN vt1.c0 THEN x'' ELSE t0.c71 END)))AND((vt1.c0 IN ()))))OR((((t0.c35))=((vt1.c0)))))) ORDER BY (((t0.c35)) NOT BETWEEN ((((t0.c71) BETWEEN (t0.c35) AND (NULL)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND ('T嘏Q'))))) ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (CAST((- (vt1.c0)) AS INTEGER)) ORDER BY ((((vt0.c0 COLLATE RTRIM)OR(LIKELY(vt1.c0))))OR((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0 COLLATE RTRIM)OR(LIKELY(vt1.c0))))OR((vt0.c0 IN ()))) ASC);
SELECT * FROM vt0, vt1 WHERE (CAST((- (vt1.c0)) AS INTEGER)) ORDER BY ((((vt0.c0 COLLATE RTRIM)OR(LIKELY(vt1.c0))))OR((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0 COLLATE RTRIM)OR(LIKELY(vt1.c0))))OR((vt0.c0 IN ()))) ASC);
SELECT * FROM vt0, vt1 WHERE (CAST((- (vt1.c0)) AS INTEGER)) ORDER BY ((((vt0.c0 COLLATE RTRIM)OR(LIKELY(vt1.c0))))OR((vt0.c0 IN ()))) ASC;
SELECT ALL * FROM t0 WHERE (((((t0.c71) NOT BETWEEN (t0.c35) AND (t0.c35))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c71) NOT BETWEEN (t0.c35) AND (t0.c35))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c71) NOT BETWEEN (t0.c35) AND (t0.c35))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c71) NOT BETWEEN (t0.c35) AND (t0.c35))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c71) NOT BETWEEN (t0.c35) AND (t0.c35))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (CASE WHEN COALESCE(rt0.c1, t0.c35) THEN (rt0.c5 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN COALESCE(rt0.c1, t0.c35) THEN (rt0.c5 IN ()) END) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (CASE WHEN COALESCE(rt0.c1, t0.c35) THEN (rt0.c5 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN COALESCE(rt0.c1, t0.c35) THEN (rt0.c5 IN ()) END) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (CASE WHEN COALESCE(rt0.c1, t0.c35) THEN (rt0.c5 IN ()) END);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(((0.7928488321818078)+(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS NUMERIC))OR(((0.7928488321818078)+(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(((0.7928488321818078)+(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS NUMERIC))OR(((0.7928488321818078)+(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(((0.7928488321818078)+(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (rt0.c0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((NULL) ISNULL))) ASC  NULLS FIRST, TYPEOF(TRIM(vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((NULL) ISNULL))) ASC  NULLS FIRST, TYPEOF(TRIM(vt0.c0)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((NULL) ISNULL))) ASC  NULLS FIRST, TYPEOF(TRIM(vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((NULL) ISNULL))) ASC  NULLS FIRST, TYPEOF(TRIM(vt0.c0)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((NULL) ISNULL))) ASC  NULLS FIRST, TYPEOF(TRIM(vt0.c0)) DESC  NULLS LAST;
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (((ABS(vt1.c0)))<(((NULL IN ())))) WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((ABS(vt1.c0)))<(((NULL IN ())))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (((ABS(vt1.c0)))<(((NULL IN ())))) WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((ABS(vt1.c0)))<(((NULL IN ())))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (((ABS(vt1.c0)))<(((NULL IN ())))) WHERE (vt1.c0 COLLATE NOCASE);
SELECT ALL * FROM vt0, vt1 CROSS JOIN rt0 ON CASE CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 ELSE 0.8280236586052856 END  WHEN ((vt1.c0) BETWEEN (t0.c71) AND ('1509963701')) THEN vt0.c0 COLLATE NOCASE ELSE ((((((((rt0.c1)OR(t0.c71)))AND(rt0.c2)))OR(rt0.c3)))OR(vt0.c0)) END RIGHT OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) COLLATE NOCASE WHERE (((((((t0.c71)IS NOT(vt0.c0)))OR(CASE WHEN 0Xffffffffbddf09ee THEN 0.40544613693580644 ELSE rt0.c1 END)))AND(CASE rt0.c4  WHEN vt1.c0 THEN rt0.c0 WHEN x'' THEN rt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c3 END))) ORDER BY (((((rt0.c4) NOT NULL), (rt0.c0 IN ()), CAST(rt0.c3 AS TEXT)))>((((t0.c71)>=(rt0.c1)), ((((rt0.c2)AND(x'')))OR(rt0.c0)), ((rt0.c3) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c71)IS NOT(vt0.c0)))OR(CASE WHEN 0xffffffffbddf09ee THEN 0.40544613693580644 ELSE rt0.c1 END)))AND(CASE rt0.c4  WHEN vt1.c0 THEN rt0.c0 WHEN x'' THEN rt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c3 END))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON CASE CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 ELSE 0.8280236586052856 END  WHEN ((vt1.c0) BETWEEN (t0.c71) AND ('1509963701')) THEN vt0.c0 COLLATE NOCASE ELSE ((((((((rt0.c1)OR(t0.c71)))AND(rt0.c2)))OR(rt0.c3)))OR(vt0.c0)) END RIGHT OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) COLLATE NOCASE ORDER BY (((((rt0.c4) NOT NULL), (rt0.c0 IN ()), CAST(rt0.c3 AS TEXT)))>((((t0.c71)>=(rt0.c1)), ((((rt0.c2)AND(x'')))OR(rt0.c0)), ((rt0.c3) IS FALSE)))) ASC);
SELECT ALL * FROM vt0, vt1 CROSS JOIN rt0 ON CASE CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 ELSE 0.8280236586052856 END  WHEN ((vt1.c0) BETWEEN (t0.c71) AND ('1509963701')) THEN vt0.c0 COLLATE NOCASE ELSE ((((((((rt0.c1)OR(t0.c71)))AND(rt0.c2)))OR(rt0.c3)))OR(vt0.c0)) END RIGHT OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) COLLATE NOCASE WHERE (((((((t0.c71)IS NOT(vt0.c0)))OR(CASE WHEN 0Xffffffffbddf09ee THEN 0.40544613693580644 ELSE rt0.c1 END)))AND(CASE rt0.c4  WHEN vt1.c0 THEN rt0.c0 WHEN x'' THEN rt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c3 END))) ORDER BY (((((rt0.c4) NOT NULL), (rt0.c0 IN ()), CAST(rt0.c3 AS TEXT)))>((((t0.c71)>=(rt0.c1)), ((((rt0.c2)AND(x'')))OR(rt0.c0)), ((rt0.c3) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c71)IS NOT(vt0.c0)))OR(CASE WHEN 0xffffffffbddf09ee THEN 0.40544613693580644 ELSE rt0.c1 END)))AND(CASE rt0.c4  WHEN vt1.c0 THEN rt0.c0 WHEN x'' THEN rt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c3 END))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON CASE CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 ELSE 0.8280236586052856 END  WHEN ((vt1.c0) BETWEEN (t0.c71) AND ('1509963701')) THEN vt0.c0 COLLATE NOCASE ELSE ((((((((rt0.c1)OR(t0.c71)))AND(rt0.c2)))OR(rt0.c3)))OR(vt0.c0)) END RIGHT OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) COLLATE NOCASE ORDER BY (((((rt0.c4) NOT NULL), (rt0.c0 IN ()), CAST(rt0.c3 AS TEXT)))>((((t0.c71)>=(rt0.c1)), ((((rt0.c2)AND(x'')))OR(rt0.c0)), ((rt0.c3) IS FALSE)))) ASC);
SELECT * FROM vt0, vt1, rt0, t0 WHERE (((rt0.c2)=(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)=(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY NULL ASC);
SELECT * FROM vt0, vt1, rt0, t0 WHERE (((rt0.c2)=(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)=(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY NULL ASC);
SELECT * FROM vt0, vt1, rt0, t0 WHERE (((rt0.c2)=(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END))) ORDER BY NULL ASC;
SELECT ALL * FROM vt0, vt1, t0, rt0 NOT INDEXED WHERE (((((t0.c71) NOT BETWEEN (t0.c71) AND (t0.c35)))OR(((rt0.c0)IS NOT(rt0.c4))))) ORDER BY -2016702277  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c71) NOT BETWEEN (t0.c71) AND (t0.c35)))OR(((rt0.c0)IS NOT(rt0.c4))))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY -2016702277  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0, rt0 NOT INDEXED WHERE (((((t0.c71) NOT BETWEEN (t0.c71) AND (t0.c35)))OR(((rt0.c0)IS NOT(rt0.c4))))) ORDER BY -2016702277  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c71) NOT BETWEEN (t0.c71) AND (t0.c35)))OR(((rt0.c0)IS NOT(rt0.c4))))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY -2016702277  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)<=(((rt0.c2) NOTNULL)))) ORDER BY (NOT (((rt0.c1)||('89'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)<=(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c1)||('89'))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)<=(((rt0.c2) NOTNULL)))) ORDER BY (NOT (((rt0.c1)||('89'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)<=(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c1)||('89'))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)<=(((rt0.c2) NOTNULL)))) ORDER BY (NOT (((rt0.c1)||('89'))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((((((((rt0.c3)AND(6.6823414E7)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))IS(((rt0.c5) NOTNULL))) FULL OUTER JOIN vt1 ON ((((rt0.c0)&(rt0.c1)))>=(t0.c71 COLLATE BINARY)) INNER JOIN vt0 ON (((vt0.c0 IN (rt0.c0))) ISNULL) WHERE ((x'' IN ())) ORDER BY json_object(((vt1.c0) BETWEEN (rt0.c5) AND (t0.c35)), CAST(rt0.c4 AS BLOB)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((((((((rt0.c3)AND(6.6823414E7)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))IS(((rt0.c5) NOTNULL))) FULL OUTER JOIN vt1 ON ((((rt0.c0)&(rt0.c1)))>=(t0.c71 COLLATE BINARY)) INNER JOIN vt0 ON (((vt0.c0 IN (rt0.c0))) ISNULL) ORDER BY json_object(((vt1.c0) BETWEEN (rt0.c5) AND (t0.c35)), CAST(rt0.c4 AS BLOB)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((((((((rt0.c3)AND(6.6823414E7)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))IS(((rt0.c5) NOTNULL))) FULL OUTER JOIN vt1 ON ((((rt0.c0)&(rt0.c1)))>=(t0.c71 COLLATE BINARY)) INNER JOIN vt0 ON (((vt0.c0 IN (rt0.c0))) ISNULL) WHERE ((x'' IN ())) ORDER BY json_object(((vt1.c0) BETWEEN (rt0.c5) AND (t0.c35)), CAST(rt0.c4 AS BLOB)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((((((((rt0.c3)AND(6.6823414E7)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c0)))IS(((rt0.c5) NOTNULL))) FULL OUTER JOIN vt1 ON ((((rt0.c0)&(rt0.c1)))>=(t0.c71 COLLATE BINARY)) INNER JOIN vt0 ON (((vt0.c0 IN (rt0.c0))) ISNULL) ORDER BY json_object(((vt1.c0) BETWEEN (rt0.c5) AND (t0.c35)), CAST(rt0.c4 AS BLOB)) DESC  NULLS LAST);
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((+ (vt0.c0))) ORDER BY CAST((t0.c35 IN (rt0.c4)) AS BLOB) ASC, ((((((rt0.c0)OR(t0.c35)))OR(rt0.c1)))<=((((rt0.c0))<((vt0.c0))))) DESC  NULLS FIRST, ((((t0.c71)GLOB(t0.c71))) BETWEEN (rt0.c0) AND ((('L~Z8')&(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY CAST((t0.c35 IN (rt0.c4)) AS BLOB) ASC, ((((((rt0.c0)OR(t0.c35)))OR(rt0.c1)))<=((((rt0.c0))<((vt0.c0))))) DESC  NULLS FIRST, ((((t0.c71)GLOB(t0.c71))) BETWEEN (rt0.c0) AND ((('L~Z8')&(vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((+ (vt0.c0))) ORDER BY CAST((t0.c35 IN (rt0.c4)) AS BLOB) ASC, ((((((rt0.c0)OR(t0.c35)))OR(rt0.c1)))<=((((rt0.c0))<((vt0.c0))))) DESC  NULLS FIRST, ((((t0.c71)GLOB(t0.c71))) BETWEEN (rt0.c0) AND ((('L~Z8')&(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY CAST((t0.c35 IN (rt0.c4)) AS BLOB) ASC, ((((((rt0.c0)OR(t0.c35)))OR(rt0.c1)))<=((((rt0.c0))<((vt0.c0))))) DESC  NULLS FIRST, ((((t0.c71)GLOB(t0.c71))) BETWEEN (rt0.c0) AND ((('L~Z8')&(vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((+ (vt0.c0))) ORDER BY CAST((t0.c35 IN (rt0.c4)) AS BLOB) ASC, ((((((rt0.c0)OR(t0.c35)))OR(rt0.c1)))<=((((rt0.c0))<((vt0.c0))))) DESC  NULLS FIRST, ((((t0.c71)GLOB(t0.c71))) BETWEEN (rt0.c0) AND ((('L~Z8')&(vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c4 END)OR((((rt0.c3, rt0.c1, '-2109974554')) BETWEEN ((rt0.c2, rt0.c2, rt0.c5)) AND ((rt0.c0, rt0.c3, rt0.c2))))))AND((+ (rt0.c3)))))AND(((rt0.c5)GLOB(rt0.c3)))))AND((((rt0.c2))=((rt0.c1))))))AND(CAST(rt0.c0 AS REAL))))AND(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c4 END)OR((((rt0.c3, rt0.c1, '-2109974554')) BETWEEN ((rt0.c2, rt0.c2, rt0.c5)) AND ((rt0.c0, rt0.c3, rt0.c2))))))AND((+ (rt0.c3)))))AND(((rt0.c5)GLOB(rt0.c3)))))AND((((rt0.c2))=((rt0.c1))))))AND(CAST(rt0.c0 AS REAL))))AND(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c4 END)OR((((rt0.c3, rt0.c1, '-2109974554')) BETWEEN ((rt0.c2, rt0.c2, rt0.c5)) AND ((rt0.c0, rt0.c3, rt0.c2))))))AND((+ (rt0.c3)))))AND(((rt0.c5)GLOB(rt0.c3)))))AND((((rt0.c2))=((rt0.c1))))))AND(CAST(rt0.c0 AS REAL))))AND(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c4 END)OR((((rt0.c3, rt0.c1, '-2109974554')) BETWEEN ((rt0.c2, rt0.c2, rt0.c5)) AND ((rt0.c0, rt0.c3, rt0.c2))))))AND((+ (rt0.c3)))))AND(((rt0.c5)GLOB(rt0.c3)))))AND((((rt0.c2))=((rt0.c1))))))AND(CAST(rt0.c0 AS REAL))))AND(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c4 END)OR((((rt0.c3, rt0.c1, '-2109974554')) BETWEEN ((rt0.c2, rt0.c2, rt0.c5)) AND ((rt0.c0, rt0.c3, rt0.c2))))))AND((+ (rt0.c3)))))AND(((rt0.c5)GLOB(rt0.c3)))))AND((((rt0.c2))=((rt0.c1))))))AND(CAST(rt0.c0 AS REAL))))AND(CAST(rt0.c1 AS BLOB))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((vt1.c0) ISNULL)) AND (((0.3685215495110654) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((vt1.c0) ISNULL)) AND (((0.3685215495110654) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((vt1.c0) ISNULL)) AND (((0.3685215495110654) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((vt1.c0) ISNULL)) AND (((0.3685215495110654) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((vt1.c0) ISNULL)) AND (((0.3685215495110654) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((~ (((((((((((((rt0.c1)OR(t0.c71)))OR(rt0.c5)))AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(t0.c35))))) ORDER BY (NOT (rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((((((((((((rt0.c1)OR(t0.c71)))OR(rt0.c5)))AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(t0.c35))))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY (NOT (rt0.c0)) ASC);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((~ (((((((((((((rt0.c1)OR(t0.c71)))OR(rt0.c5)))AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(t0.c35))))) ORDER BY (NOT (rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((((((((((((rt0.c1)OR(t0.c71)))OR(rt0.c5)))AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(t0.c35))))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY (NOT (rt0.c0)) ASC);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((~ (((((((((((((rt0.c1)OR(t0.c71)))OR(rt0.c5)))AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(t0.c35))))) ORDER BY (NOT (rt0.c0)) ASC;
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((('-900196860'))<((((rt0.c2) ISNULL))))) ORDER BY (NOT (rt0.c3 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((('-900196860'))<((((rt0.c2) ISNULL))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (NOT (rt0.c3 COLLATE BINARY)) DESC);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((('-900196860'))<((((rt0.c2) ISNULL))))) ORDER BY (NOT (rt0.c3 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((('-900196860'))<((((rt0.c2) ISNULL))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (NOT (rt0.c3 COLLATE BINARY)) DESC);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((('-900196860'))<((((rt0.c2) ISNULL))))) ORDER BY (NOT (rt0.c3 COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((0.30028566600883655)OR(t0.c35 COLLATE NOCASE)))OR(((((t0.c35)OR(vt1.c0)))OR(t0.c35))))) ORDER BY CASE (t0.c35 IN (t0.c35))  WHEN NULLIF(t0.c35, t0.c35) THEN t0.c35 WHEN (+ (t0.c71)) THEN ((t0.c71)||(t0.c71)) WHEN ((((((((NULL)OR(t0.c35)))OR(vt1.c0)))OR(vt1.c0)))OR(t0.c35)) THEN (((x'')) NOT BETWEEN ((vt1.c0)) AND ((t0.c35))) END ASC, (~ (CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c71 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.30028566600883655)OR(t0.c35 COLLATE NOCASE)))OR(((((t0.c35)OR(vt1.c0)))OR(t0.c35))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE (t0.c35 IN (t0.c35))  WHEN NULLIF(t0.c35, t0.c35) THEN t0.c35 WHEN (+ (t0.c71)) THEN ((t0.c71)||(t0.c71)) WHEN ((((((((NULL)OR(t0.c35)))OR(vt1.c0)))OR(vt1.c0)))OR(t0.c35)) THEN (((x'')) NOT BETWEEN ((vt1.c0)) AND ((t0.c35))) END ASC, (~ (CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c71 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((0.30028566600883655)OR(t0.c35 COLLATE NOCASE)))OR(((((t0.c35)OR(vt1.c0)))OR(t0.c35))))) ORDER BY CASE (t0.c35 IN (t0.c35))  WHEN NULLIF(t0.c35, t0.c35) THEN t0.c35 WHEN (+ (t0.c71)) THEN ((t0.c71)||(t0.c71)) WHEN ((((((((NULL)OR(t0.c35)))OR(vt1.c0)))OR(vt1.c0)))OR(t0.c35)) THEN (((x'')) NOT BETWEEN ((vt1.c0)) AND ((t0.c35))) END ASC, (~ (CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c71 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.30028566600883655)OR(t0.c35 COLLATE NOCASE)))OR(((((t0.c35)OR(vt1.c0)))OR(t0.c35))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE (t0.c35 IN (t0.c35))  WHEN NULLIF(t0.c35, t0.c35) THEN t0.c35 WHEN (+ (t0.c71)) THEN ((t0.c71)||(t0.c71)) WHEN ((((((((NULL)OR(t0.c35)))OR(vt1.c0)))OR(vt1.c0)))OR(t0.c35)) THEN (((x'')) NOT BETWEEN ((vt1.c0)) AND ((t0.c35))) END ASC, (~ (CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c71 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((0.30028566600883655)OR(t0.c35 COLLATE NOCASE)))OR(((((t0.c35)OR(vt1.c0)))OR(t0.c35))))) ORDER BY CASE (t0.c35 IN (t0.c35))  WHEN NULLIF(t0.c35, t0.c35) THEN t0.c35 WHEN (+ (t0.c71)) THEN ((t0.c71)||(t0.c71)) WHEN ((((((((NULL)OR(t0.c35)))OR(vt1.c0)))OR(vt1.c0)))OR(t0.c35)) THEN (((x'')) NOT BETWEEN ((vt1.c0)) AND ((t0.c35))) END ASC, (~ (CASE WHEN t0.c35 THEN t0.c35 ELSE t0.c71 END))  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (CAST((~ (0.9671906388246759)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((~ (0.9671906388246759)) AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST((~ (0.9671906388246759)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((~ (0.9671906388246759)) AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST((~ (0.9671906388246759)) AS REAL));
SELECT ALL * FROM vt1, vt0, t0 INNER JOIN rt0 ON ((((rt0.c5)OR(rt0.c0)))OR(x'')) COLLATE NOCASE WHERE ((0.1107191228297697 IN (vt0.c0, vt0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY CAST(((rt0.c5)IS NOT(rt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((0.1107191228297697 IN (vt0.c0, vt0.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0 NOT INDEXED INNER JOIN rt0 ON ((((rt0.c5)OR(rt0.c0)))OR(x'')) COLLATE NOCASE ORDER BY CAST(((rt0.c5)IS NOT(rt0.c0)) AS BLOB) DESC);
SELECT ALL * FROM vt1, vt0, t0 INNER JOIN rt0 ON ((((rt0.c5)OR(rt0.c0)))OR(x'')) COLLATE NOCASE WHERE ((0.1107191228297697 IN (vt0.c0, vt0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY CAST(((rt0.c5)IS NOT(rt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((0.1107191228297697 IN (vt0.c0, vt0.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0 NOT INDEXED INNER JOIN rt0 ON ((((rt0.c5)OR(rt0.c0)))OR(x'')) COLLATE NOCASE ORDER BY CAST(((rt0.c5)IS NOT(rt0.c0)) AS BLOB) DESC);
SELECT ALL * FROM vt1, vt0, t0 INNER JOIN rt0 ON ((((rt0.c5)OR(rt0.c0)))OR(x'')) COLLATE NOCASE WHERE ((0.1107191228297697 IN (vt0.c0, vt0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY CAST(((rt0.c5)IS NOT(rt0.c0)) AS BLOB) DESC;
SELECT * FROM vt1 WHERE ('-247174972') ORDER BY (+ ((+ (vt1.c0)))), (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.8964348894514148))))OR((~ (vt1.c0)))) DESC, (((vt1.c0) NOTNULL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-247174972') IS TRUE)  as count FROM vt1 ORDER BY (+ ((+ (vt1.c0)))), (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.8964348894514148))))OR((~ (vt1.c0)))) DESC, (((vt1.c0) NOTNULL) IN ()) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE ('-247174972') ORDER BY (+ ((+ (vt1.c0)))), (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.8964348894514148))))OR((~ (vt1.c0)))) DESC, (((vt1.c0) NOTNULL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-247174972') IS TRUE)  as count FROM vt1 ORDER BY (+ ((+ (vt1.c0)))), (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.8964348894514148))))OR((~ (vt1.c0)))) DESC, (((vt1.c0) NOTNULL) IN ()) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE ('-247174972') ORDER BY (+ ((+ (vt1.c0)))), (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.8964348894514148))))OR((~ (vt1.c0)))) DESC, (((vt1.c0) NOTNULL) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(NULL AS INTEGER) WHERE (((NOT (vt0.c0)) IN ())) ORDER BY (+ (CAST(vt1.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST(NULL AS INTEGER) ORDER BY (+ (CAST(vt1.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(NULL AS INTEGER) WHERE (((NOT (vt0.c0)) IN ())) ORDER BY (+ (CAST(vt1.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST(NULL AS INTEGER) ORDER BY (+ (CAST(vt1.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(NULL AS INTEGER) WHERE (((NOT (vt0.c0)) IN ())) ORDER BY (+ (CAST(vt1.c0 AS TEXT)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (t0.c71) ORDER BY ((((((vt1.c0)) NOT BETWEEN ((t0.c35)) AND ((vt1.c0)))))<>((UPPER(DISTINCT t0.c71))))  NULLS FIRST, ((((((((((vt1.c0)OR(t0.c35)))OR(t0.c35)))AND(vt1.c0)))OR(NULL)))+((t0.c71 IN ()))), ((((t0.c35) NOT BETWEEN (NULL) AND ('xT')))<((((t0.c71)) NOT BETWEEN ((t0.c35)) AND (('-1397425978')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c71) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((vt1.c0)) NOT BETWEEN ((t0.c35)) AND ((vt1.c0)))))!=((UPPER(DISTINCT t0.c71))))  NULLS FIRST, ((((((((((vt1.c0)OR(t0.c35)))OR(t0.c35)))AND(vt1.c0)))OR(NULL)))+((t0.c71 IN ()))), ((((t0.c35) NOT BETWEEN (NULL) AND ('xT')))<((((t0.c71)) NOT BETWEEN ((t0.c35)) AND (('-1397425978')))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (t0.c71) ORDER BY ((((((vt1.c0)) NOT BETWEEN ((t0.c35)) AND ((vt1.c0)))))<>((UPPER(DISTINCT t0.c71))))  NULLS FIRST, ((((((((((vt1.c0)OR(t0.c35)))OR(t0.c35)))AND(vt1.c0)))OR(NULL)))+((t0.c71 IN ()))), ((((t0.c35) NOT BETWEEN (NULL) AND ('xT')))<((((t0.c71)) NOT BETWEEN ((t0.c35)) AND (('-1397425978')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c71) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((vt1.c0)) NOT BETWEEN ((t0.c35)) AND ((vt1.c0)))))!=((UPPER(DISTINCT t0.c71))))  NULLS FIRST, ((((((((((vt1.c0)OR(t0.c35)))OR(t0.c35)))AND(vt1.c0)))OR(NULL)))+((t0.c71 IN ()))), ((((t0.c35) NOT BETWEEN (NULL) AND ('xT')))<((((t0.c71)) NOT BETWEEN ((t0.c35)) AND (('-1397425978')))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (t0.c71) ORDER BY ((((((vt1.c0)) NOT BETWEEN ((t0.c35)) AND ((vt1.c0)))))<>((UPPER(DISTINCT t0.c71))))  NULLS FIRST, ((((((((((vt1.c0)OR(t0.c35)))OR(t0.c35)))AND(vt1.c0)))OR(NULL)))+((t0.c71 IN ()))), ((((t0.c35) NOT BETWEEN (NULL) AND ('xT')))<((((t0.c71)) NOT BETWEEN ((t0.c35)) AND (('-1397425978')))))  NULLS FIRST;
SELECT * FROM vt1 NOT INDEXED, t0 WHERE (((((((((((t0.c71) IS TRUE))AND(LOWER(vt1.c0))))AND((t0.c71 IN ()))))AND((x'' IN (vt1.c0)))))OR((((t0.c71))>((t0.c35))))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c71) IS TRUE))AND(LOWER(vt1.c0))))AND((t0.c71 IN ()))))AND((x'' IN (vt1.c0)))))OR((((t0.c71))>((t0.c35)))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1 NOT INDEXED, t0 WHERE (((((((((((t0.c71) IS TRUE))AND(LOWER(vt1.c0))))AND((t0.c71 IN ()))))AND((x'' IN (vt1.c0)))))OR((((t0.c71))>((t0.c35))))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c71) IS TRUE))AND(LOWER(vt1.c0))))AND((t0.c71 IN ()))))AND((x'' IN (vt1.c0)))))OR((((t0.c71))>((t0.c35)))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1 NOT INDEXED, t0 WHERE (((((((((((t0.c71) IS TRUE))AND(LOWER(vt1.c0))))AND((t0.c71 IN ()))))AND((x'' IN (vt1.c0)))))OR((((t0.c71))>((t0.c35))))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c71 AS BLOB) COLLATE NOCASE) ORDER BY ((t0.c35 COLLATE BINARY)%(CASE WHEN t0.c35 THEN t0.c71 END)) ASC, ((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c35)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c71 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((t0.c35 COLLATE BINARY)%(CASE WHEN t0.c35 THEN t0.c71 END)) ASC, ((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c35)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c71 AS BLOB) COLLATE NOCASE) ORDER BY ((t0.c35 COLLATE BINARY)%(CASE WHEN t0.c35 THEN t0.c71 END)) ASC, ((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c35)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c71 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((t0.c35 COLLATE BINARY)%(CASE WHEN t0.c35 THEN t0.c71 END)) ASC, ((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c35)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c71 AS BLOB) COLLATE NOCASE) ORDER BY ((t0.c35 COLLATE BINARY)%(CASE WHEN t0.c35 THEN t0.c71 END)) ASC, ((t0.c35) NOT BETWEEN (t0.c35) AND (t0.c35)) COLLATE RTRIM;
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY LIKELY((vt0.c0 IN ())) DESC, ((vt0.c0 COLLATE RTRIM) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST, (+ (UNICODE(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY LIKELY((vt0.c0 IN ())) DESC, ((vt0.c0 COLLATE RTRIM) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST, (+ (UNICODE(vt0.c0))) ASC);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY LIKELY((vt0.c0 IN ())) DESC, ((vt0.c0 COLLATE RTRIM) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST, (+ (UNICODE(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY LIKELY((vt0.c0 IN ())) DESC, ((vt0.c0 COLLATE RTRIM) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST, (+ (UNICODE(vt0.c0))) ASC);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY LIKELY((vt0.c0 IN ())) DESC, ((vt0.c0 COLLATE RTRIM) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST, (+ (UNICODE(vt0.c0))) ASC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (CAST(t0.c71 AS REAL)))) ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(t0.c35)), ((((((((t0.c71)AND(t0.c35)))AND(t0.c71)))OR(t0.c35)))OR(t0.c71)), (((t0.c71))>((t0.c71)))))>((0x682a6710, load_extension(t0.c35, t0.c71), (t0.c71 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t0.c71 AS REAL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(t0.c35)), ((((((((t0.c71)AND(t0.c35)))AND(t0.c71)))OR(t0.c35)))OR(t0.c71)), (((t0.c71))>((t0.c71)))))>((0x682a6710, load_extension(t0.c35, t0.c71), (t0.c71 IN ())))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (CAST(t0.c71 AS REAL)))) ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(t0.c35)), ((((((((t0.c71)AND(t0.c35)))AND(t0.c71)))OR(t0.c35)))OR(t0.c71)), (((t0.c71))>((t0.c71)))))>((0x682a6710, load_extension(t0.c35, t0.c71), (t0.c71 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t0.c71 AS REAL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(t0.c35)), ((((((((t0.c71)AND(t0.c35)))AND(t0.c71)))OR(t0.c35)))OR(t0.c71)), (((t0.c71))>((t0.c71)))))>((0x682a6710, load_extension(t0.c35, t0.c71), (t0.c71 IN ())))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (CAST(t0.c71 AS REAL)))) ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(t0.c35)), ((((((((t0.c71)AND(t0.c35)))AND(t0.c71)))OR(t0.c35)))OR(t0.c71)), (((t0.c71))>((t0.c71)))))>((0x682a6710, load_extension(t0.c35, t0.c71), (t0.c71 IN ())))) DESC;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)LIKE((- (vt1.c0))))) ORDER BY ((TOTAL_CHANGES())%(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)LIKE((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((TOTAL_CHANGES())%(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)LIKE((- (vt1.c0))))) ORDER BY ((TOTAL_CHANGES())%(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)LIKE((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((TOTAL_CHANGES())%(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)LIKE((- (vt1.c0))))) ORDER BY ((TOTAL_CHANGES())%(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 INNER JOIN rt0 ON t0.c71 WHERE (((TYPEOF(DISTINCT rt0.c1))<(LTRIM(rt0.c1, -1208889050))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt0.c1))<(LTRIM(rt0.c1, -1208889050)))) IS TRUE)  as count FROM vt0, t0, vt1 INNER JOIN rt0 ON t0.c71);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 INNER JOIN rt0 ON t0.c71 WHERE (((TYPEOF(DISTINCT rt0.c1))<(LTRIM(rt0.c1, -1208889050))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt0.c1))<(LTRIM(rt0.c1, -1208889050)))) IS TRUE)  as count FROM vt0, t0, vt1 INNER JOIN rt0 ON t0.c71);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 INNER JOIN rt0 ON t0.c71 WHERE (((TYPEOF(DISTINCT rt0.c1))<(LTRIM(rt0.c1, -1208889050))));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.14318430245455638);
SELECT SUM(count) FROM (SELECT ((0.14318430245455638) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.14318430245455638);
SELECT SUM(count) FROM (SELECT ((0.14318430245455638) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.14318430245455638);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c71 COLLATE BINARY)>>(((((t0.c35)OR(t0.c35)))OR(t0.c35)))));
SELECT SUM(count) FROM (SELECT ((((t0.c71 COLLATE BINARY)>>(((((t0.c35)OR(t0.c35)))OR(t0.c35))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c71 COLLATE BINARY)>>(((((t0.c35)OR(t0.c35)))OR(t0.c35)))));
SELECT SUM(count) FROM (SELECT ((((t0.c71 COLLATE BINARY)>>(((((t0.c35)OR(t0.c35)))OR(t0.c35))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c71 COLLATE BINARY)>>(((((t0.c35)OR(t0.c35)))OR(t0.c35)))));
SELECT ALL * FROM vt0, rt0 CROSS JOIN t0 ON '1309240958' LEFT OUTER JOIN vt1 ON ((0.4366512907986895) IS FALSE) COLLATE BINARY WHERE (((json_type(rt0.c1))GLOB(''))) ORDER BY (((('%J')OR(rt0.c1)))AND(rt0.c3)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((json_type(rt0.c1))GLOB(''))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON '1309240958' LEFT OUTER JOIN vt1 ON ((0.4366512907986895) IS FALSE) COLLATE BINARY ORDER BY (((('%J')OR(rt0.c1)))AND(rt0.c3)) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0 CROSS JOIN t0 ON '1309240958' LEFT OUTER JOIN vt1 ON ((0.4366512907986895) IS FALSE) COLLATE BINARY WHERE (((json_type(rt0.c1))GLOB(''))) ORDER BY (((('%J')OR(rt0.c1)))AND(rt0.c3)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((json_type(rt0.c1))GLOB(''))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON '1309240958' LEFT OUTER JOIN vt1 ON ((0.4366512907986895) IS FALSE) COLLATE BINARY ORDER BY (((('%J')OR(rt0.c1)))AND(rt0.c3)) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0 CROSS JOIN t0 ON '1309240958' LEFT OUTER JOIN vt1 ON ((0.4366512907986895) IS FALSE) COLLATE BINARY WHERE (((json_type(rt0.c1))GLOB(''))) ORDER BY (((('%J')OR(rt0.c1)))AND(rt0.c3)) COLLATE RTRIM;
SELECT COUNT(*) FROM vt1 WHERE (CAST(((1.155501424E9)!=(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((1.155501424E9)<>(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((1.155501424E9)!=(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((1.155501424E9)<>(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((1.155501424E9)!=(vt1.c0)) AS REAL));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c5) NOT BETWEEN (rt0.c2) AND (x'9ea3')) IN ()) LEFT OUTER JOIN t0 ON CAST(CAST(t0.c35 AS REAL) AS TEXT) LEFT OUTER JOIN vt1 ON rt0.c4 WHERE (rt0.c3) ORDER BY t0.c35  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c5) NOT BETWEEN (rt0.c2) AND (x'9ea3')) IN ()) LEFT OUTER JOIN t0 ON CAST(CAST(t0.c35 AS REAL) AS TEXT) LEFT OUTER JOIN vt1 ON rt0.c4 ORDER BY t0.c35  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c5) NOT BETWEEN (rt0.c2) AND (x'9ea3')) IN ()) LEFT OUTER JOIN t0 ON CAST(CAST(t0.c35 AS REAL) AS TEXT) LEFT OUTER JOIN vt1 ON rt0.c4 WHERE (rt0.c3) ORDER BY t0.c35  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c5) NOT BETWEEN (rt0.c2) AND (x'9ea3')) IN ()) LEFT OUTER JOIN t0 ON CAST(CAST(t0.c35 AS REAL) AS TEXT) LEFT OUTER JOIN vt1 ON rt0.c4 ORDER BY t0.c35  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c5) NOT BETWEEN (rt0.c2) AND (x'9ea3')) IN ()) LEFT OUTER JOIN t0 ON CAST(CAST(t0.c35 AS REAL) AS TEXT) LEFT OUTER JOIN vt1 ON rt0.c4 WHERE (rt0.c3) ORDER BY t0.c35  NULLS LAST;
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE ((+ (((rt0.c2)LIKE(vt0.c0))))) ORDER BY 1252093898  NULLS LAST, CAST(t0.c35 AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)LIKE(vt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY 1252093898  NULLS LAST, CAST(t0.c35 AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE ((+ (((rt0.c2)LIKE(vt0.c0))))) ORDER BY 1252093898  NULLS LAST, CAST(t0.c35 AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)LIKE(vt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY 1252093898  NULLS LAST, CAST(t0.c35 AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST((((rt0.c1))>((vt0.c0))) AS REAL)) ORDER BY (- (CAST(vt1.c0 AS TEXT))) DESC  NULLS LAST, (~ (((vt1.c0) IS FALSE))), 0.15375162272480036 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1))>((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (- (CAST(vt1.c0 AS TEXT))) DESC  NULLS LAST, (~ (((vt1.c0) IS FALSE))), 0.15375162272480036 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST((((rt0.c1))>((vt0.c0))) AS REAL)) ORDER BY (- (CAST(vt1.c0 AS TEXT))) DESC  NULLS LAST, (~ (((vt1.c0) IS FALSE))), 0.15375162272480036 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1))>((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (- (CAST(vt1.c0 AS TEXT))) DESC  NULLS LAST, (~ (((vt1.c0) IS FALSE))), 0.15375162272480036 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST((((rt0.c1))>((vt0.c0))) AS REAL)) ORDER BY (- (CAST(vt1.c0 AS TEXT))) DESC  NULLS LAST, (~ (((vt1.c0) IS FALSE))), 0.15375162272480036 COLLATE NOCASE;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY (((+ (vt1.c0))) NOT BETWEEN (NULL) AND (CAST(vt1.c0 AS REAL))) DESC, CAST((x'' IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((+ (vt1.c0))) NOT BETWEEN (NULL) AND (CAST(vt1.c0 AS REAL))) DESC, CAST((x'' IN ()) AS BLOB));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY (((+ (vt1.c0))) NOT BETWEEN (NULL) AND (CAST(vt1.c0 AS REAL))) DESC, CAST((x'' IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((+ (vt1.c0))) NOT BETWEEN (NULL) AND (CAST(vt1.c0 AS REAL))) DESC, CAST((x'' IN ()) AS BLOB));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) ORDER BY (((+ (vt1.c0))) NOT BETWEEN (NULL) AND (CAST(vt1.c0 AS REAL))) DESC, CAST((x'' IN ()) AS BLOB);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY x'' ASC;
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (TYPEOF(DISTINCT CAST('993392529' AS TEXT)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CAST('993392529' AS TEXT))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (TYPEOF(DISTINCT CAST('993392529' AS TEXT)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CAST('993392529' AS TEXT))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (TYPEOF(DISTINCT CAST('993392529' AS TEXT)));
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((SQLITE_COMPILEOPTION_GET(0.9961736079000235)) NOT BETWEEN ((((vt0.c0, rt0.c4, rt0.c4))>=((t0.c71, rt0.c5, rt0.c3)))) AND (CAST(vt1.c0 AS INTEGER)))) ORDER BY ((0xfffffffffb30cd96) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(0.9961736079000235)) NOT BETWEEN ((((vt0.c0, rt0.c4, rt0.c4))>=((t0.c71, rt0.c5, rt0.c3)))) AND (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY ((0Xfffffffffb30cd96) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((SQLITE_COMPILEOPTION_GET(0.9961736079000235)) NOT BETWEEN ((((vt0.c0, rt0.c4, rt0.c4))>=((t0.c71, rt0.c5, rt0.c3)))) AND (CAST(vt1.c0 AS INTEGER)))) ORDER BY ((0xfffffffffb30cd96) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(0.9961736079000235)) NOT BETWEEN ((((vt0.c0, rt0.c4, rt0.c4))>=((t0.c71, rt0.c5, rt0.c3)))) AND (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY ((0Xfffffffffb30cd96) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((SQLITE_COMPILEOPTION_GET(0.9961736079000235)) NOT BETWEEN ((((vt0.c0, rt0.c4, rt0.c4))>=((t0.c71, rt0.c5, rt0.c3)))) AND (CAST(vt1.c0 AS INTEGER)))) ORDER BY ((0xfffffffffb30cd96) IS TRUE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((ROUND(rt0.c5, rt0.c5)) BETWEEN ((((t0.c35))<=((rt0.c0)))) AND (CASE t0.c71  WHEN rt0.c4 THEN '' END)));
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(rt0.c5, rt0.c5)) BETWEEN ((((t0.c35))<=((rt0.c0)))) AND (CASE t0.c71  WHEN rt0.c4 THEN '' END))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((ROUND(rt0.c5, rt0.c5)) BETWEEN ((((t0.c35))<=((rt0.c0)))) AND (CASE t0.c71  WHEN rt0.c4 THEN '' END)));
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(rt0.c5, rt0.c5)) BETWEEN ((((t0.c35))<=((rt0.c0)))) AND (CASE t0.c71  WHEN rt0.c4 THEN '' END))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((ROUND(rt0.c5, rt0.c5)) BETWEEN ((((t0.c35))<=((rt0.c0)))) AND (CASE t0.c71  WHEN rt0.c4 THEN '' END)));
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0))) IS TRUE));
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (((((((rt0.c5)AND(t0.c35)))AND(rt0.c4)))==(CAST(rt0.c5 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c5)AND(t0.c35)))AND(rt0.c4)))=(CAST(rt0.c5 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (((((((rt0.c5)AND(t0.c35)))AND(rt0.c4)))==(CAST(rt0.c5 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c5)AND(t0.c35)))AND(rt0.c4)))=(CAST(rt0.c5 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (((((((rt0.c5)AND(t0.c35)))AND(rt0.c4)))==(CAST(rt0.c5 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c5)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c5)))OR(rt0.c3))) NOT BETWEEN (rt0.c1) AND ((- (rt0.c4))))) ORDER BY (- ((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))) ASC  NULLS LAST, CASE WHEN ((rt0.c5)OR(rt0.c3)) THEN (+ (x'')) ELSE rt0.c2 END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c5)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c5)))OR(rt0.c3))) NOT BETWEEN (rt0.c1) AND ((- (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY (- ((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))) ASC  NULLS LAST, CASE WHEN ((rt0.c5)OR(rt0.c3)) THEN (+ (x'')) ELSE rt0.c2 END ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c5)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c5)))OR(rt0.c3))) NOT BETWEEN (rt0.c1) AND ((- (rt0.c4))))) ORDER BY (- ((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))) ASC  NULLS LAST, CASE WHEN ((rt0.c5)OR(rt0.c3)) THEN (+ (x'')) ELSE rt0.c2 END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c5)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c5)))OR(rt0.c3))) NOT BETWEEN (rt0.c1) AND ((- (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY (- ((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))) ASC  NULLS LAST, CASE WHEN ((rt0.c5)OR(rt0.c3)) THEN (+ (x'')) ELSE rt0.c2 END ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c5)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c5)))OR(rt0.c3))) NOT BETWEEN (rt0.c1) AND ((- (rt0.c4))))) ORDER BY (- ((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))) ASC  NULLS LAST, CASE WHEN ((rt0.c5)OR(rt0.c3)) THEN (+ (x'')) ELSE rt0.c2 END ASC;
SELECT COUNT(*) FROM rt0 WHERE (NULLIF((rt0.c0 IN (rt0.c5, x'c9b9e65f')), (rt0.c4 IN (rt0.c3, rt0.c0)))) ORDER BY ((((rt0.c2)GLOB(rt0.c3)))*(((((rt0.c1)AND(rt0.c5)))OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((rt0.c0 IN (rt0.c5, x'c9b9e65f')), (rt0.c4 IN (rt0.c3, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)GLOB(rt0.c3)))*(((((rt0.c1)AND(rt0.c5)))OR(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF((rt0.c0 IN (rt0.c5, x'c9b9e65f')), (rt0.c4 IN (rt0.c3, rt0.c0)))) ORDER BY ((((rt0.c2)GLOB(rt0.c3)))*(((((rt0.c1)AND(rt0.c5)))OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((rt0.c0 IN (rt0.c5, x'c9b9e65f')), (rt0.c4 IN (rt0.c3, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)GLOB(rt0.c3)))*(((((rt0.c1)AND(rt0.c5)))OR(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF((rt0.c0 IN (rt0.c5, x'c9b9e65f')), (rt0.c4 IN (rt0.c3, rt0.c0)))) ORDER BY ((((rt0.c2)GLOB(rt0.c3)))*(((((rt0.c1)AND(rt0.c5)))OR(rt0.c2))))  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (((((0.5858083053586007) NOTNULL))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c71 THEN t0.c35 WHEN t0.c35 THEN t0.c71 END))) ORDER BY (((t0.c35)) NOT BETWEEN ((((vt0.c0) BETWEEN (t0.c71) AND (vt0.c0)))) AND ((vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((0.5858083053586007) NOTNULL))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c71 THEN t0.c35 WHEN t0.c35 THEN t0.c71 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c35)) NOT BETWEEN ((((vt0.c0) BETWEEN (t0.c71) AND (vt0.c0)))) AND ((vt0.c0))) ASC);
SELECT * FROM vt0, t0 WHERE (((((0.5858083053586007) NOTNULL))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c71 THEN t0.c35 WHEN t0.c35 THEN t0.c71 END))) ORDER BY (((t0.c35)) NOT BETWEEN ((((vt0.c0) BETWEEN (t0.c71) AND (vt0.c0)))) AND ((vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((0.5858083053586007) NOTNULL))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c71 THEN t0.c35 WHEN t0.c35 THEN t0.c71 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c35)) NOT BETWEEN ((((vt0.c0) BETWEEN (t0.c71) AND (vt0.c0)))) AND ((vt0.c0))) ASC);
SELECT * FROM vt0, t0 WHERE (((((0.5858083053586007) NOTNULL))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c71 THEN t0.c35 WHEN t0.c35 THEN t0.c71 END))) ORDER BY (((t0.c35)) NOT BETWEEN ((((vt0.c0) BETWEEN (t0.c71) AND (vt0.c0)))) AND ((vt0.c0))) ASC;
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((t0.c35 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35 IN ())) ISNULL)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((t0.c35 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35 IN ())) ISNULL)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((t0.c35 IN ())) ISNULL));
SELECT ALL * FROM t0, vt0 WHERE ((- ((t0.c35 IN ())))) ORDER BY ((((t0.c71) IS FALSE))&(((0xd81816f) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((t0.c35 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c71) IS FALSE))&(((0xd81816f) NOTNULL))) ASC);
SELECT ALL * FROM t0, vt0 WHERE ((- ((t0.c35 IN ())))) ORDER BY ((((t0.c71) IS FALSE))&(((0xd81816f) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((t0.c35 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c71) IS FALSE))&(((0xd81816f) NOTNULL))) ASC);
SELECT ALL * FROM t0, vt0 WHERE ((- ((t0.c35 IN ())))) ORDER BY ((((t0.c71) IS FALSE))&(((0xd81816f) NOTNULL))) ASC;
SELECT ALL * FROM rt0 WHERE (CAST((+ (rt0.c3)) AS TEXT)) ORDER BY ((((rt0.c0)IS(rt0.c5)))IS NOT(x'')), 'IHKayL' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c3)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)IS(rt0.c5)))IS NOT(x'')), 'IHKayL' ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST((+ (rt0.c3)) AS TEXT)) ORDER BY ((((rt0.c0)IS(rt0.c5)))IS NOT(x'')), 'IHKayL' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c3)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)IS(rt0.c5)))IS NOT(x'')), 'IHKayL' ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST((+ (rt0.c3)) AS TEXT)) ORDER BY ((((rt0.c0)IS(rt0.c5)))IS NOT(x'')), 'IHKayL' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c35 AS NUMERIC))LIKE(t0.c35))) ORDER BY ((CASE t0.c71  WHEN t0.c35 THEN t0.c35 END)<<(t0.c71))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c35 AS NUMERIC))LIKE(t0.c35))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c71  WHEN t0.c35 THEN t0.c35 END)<<(t0.c71))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c35 AS NUMERIC))LIKE(t0.c35))) ORDER BY ((CASE t0.c71  WHEN t0.c35 THEN t0.c35 END)<<(t0.c71))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c35 AS NUMERIC))LIKE(t0.c35))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c71  WHEN t0.c35 THEN t0.c35 END)<<(t0.c71))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c35 AS NUMERIC))LIKE(t0.c35))) ORDER BY ((CASE t0.c71  WHEN t0.c35 THEN t0.c35 END)<<(t0.c71))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c71) ORDER BY ((((-1.882780585E9)AND('189010502')))AND(TRIM(0Xffffffffddf21cc0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c71) IS TRUE)  as count FROM t0 ORDER BY ((((-1.882780585E9)AND('189010502')))AND(TRIM(0Xffffffffddf21cc0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c71) ORDER BY ((((-1.882780585E9)AND('189010502')))AND(TRIM(0Xffffffffddf21cc0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c71) IS TRUE)  as count FROM t0 ORDER BY ((((-1.882780585E9)AND('189010502')))AND(TRIM(0Xffffffffddf21cc0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c71) ORDER BY ((((-1.882780585E9)AND('189010502')))AND(TRIM(0Xffffffffddf21cc0))) ASC  NULLS LAST;
SELECT * FROM rt0 CROSS JOIN vt0 ON (CAST(rt0.c5 AS BLOB) IN ()) WHERE (((rt0.c5 COLLATE BINARY)*(((((((((rt0.c5)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c5)))OR(rt0.c2))))) ORDER BY LIKELY(DISTINCT (rt0.c0 IN ()))  NULLS FIRST, CAST((rt0.c1 IN ()) AS BLOB) DESC  NULLS LAST, ((((vt0.c0)OR(rt0.c3)))&((0Xffffffffed7c05f9 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c5 COLLATE BINARY)*(((((((((rt0.c5)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c5)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (CAST(rt0.c5 AS BLOB) IN ()) ORDER BY LIKELY(DISTINCT (rt0.c0 IN ()))  NULLS FIRST, CAST((rt0.c1 IN ()) AS BLOB) DESC  NULLS LAST, ((((vt0.c0)OR(rt0.c3)))&((0xffffffffed7c05f9 IN ()))) ASC  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN vt0 ON (CAST(rt0.c5 AS BLOB) IN ()) WHERE (((rt0.c5 COLLATE BINARY)*(((((((((rt0.c5)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c5)))OR(rt0.c2))))) ORDER BY LIKELY(DISTINCT (rt0.c0 IN ()))  NULLS FIRST, CAST((rt0.c1 IN ()) AS BLOB) DESC  NULLS LAST, ((((vt0.c0)OR(rt0.c3)))&((0Xffffffffed7c05f9 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c5 COLLATE BINARY)*(((((((((rt0.c5)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c5)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (CAST(rt0.c5 AS BLOB) IN ()) ORDER BY LIKELY(DISTINCT (rt0.c0 IN ()))  NULLS FIRST, CAST((rt0.c1 IN ()) AS BLOB) DESC  NULLS LAST, ((((vt0.c0)OR(rt0.c3)))&((0xffffffffed7c05f9 IN ()))) ASC  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN vt0 ON (CAST(rt0.c5 AS BLOB) IN ()) WHERE (((rt0.c5 COLLATE BINARY)*(((((((((rt0.c5)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c5)))OR(rt0.c2))))) ORDER BY LIKELY(DISTINCT (rt0.c0 IN ()))  NULLS FIRST, CAST((rt0.c1 IN ()) AS BLOB) DESC  NULLS LAST, ((((vt0.c0)OR(rt0.c3)))&((0Xffffffffed7c05f9 IN ()))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON CAST((- (vt0.c0)) AS BLOB) WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST(((vt1.c0)>=(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST((- (vt0.c0)) AS BLOB) ORDER BY CAST(((vt1.c0)>=(vt0.c0)) AS REAL) DESC);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON CAST((- (vt0.c0)) AS BLOB) WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST(((vt1.c0)>=(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST((- (vt0.c0)) AS BLOB) ORDER BY CAST(((vt1.c0)>=(vt0.c0)) AS REAL) DESC);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON CAST((- (vt0.c0)) AS BLOB) WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST(((vt1.c0)>=(vt0.c0)) AS REAL) DESC;
SELECT ALL * FROM t0 WHERE ((((x'')*(t0.c71)) IN ())) ORDER BY (((t0.c35 IN ()))>=((0x73f80b53 IN (t0.c35))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')*(t0.c71)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c35 IN ()))>=((0x73f80b53 IN (t0.c35))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((x'')*(t0.c71)) IN ())) ORDER BY (((t0.c35 IN ()))>=((0x73f80b53 IN (t0.c35))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')*(t0.c71)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c35 IN ()))>=((0x73f80b53 IN (t0.c35))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((x'')*(t0.c71)) IN ())) ORDER BY (((t0.c35 IN ()))>=((0x73f80b53 IN (t0.c35))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON highlight(('-1838263849' IN ()), (NOT (t0.c35)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), (~ (rt0.c3))) FULL OUTER JOIN vt0 ON 0.5118084087517061 INNER JOIN rt0 ON ((((((vt1.c0) NOT BETWEEN ('kYシMgd') AND (rt0.c1)))AND((vt0.c0 IN (rt0.c0, rt0.c1)))))OR(rt0.c1 COLLATE BINARY)) WHERE (t0.c71) ORDER BY (((((vt1.c0, rt0.c4, rt0.c0))<=(('-891376826', rt0.c1, rt0.c1))))*((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((t0.c71)))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c71) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON highlight(('-1838263849' IN ()), (NOT (t0.c35)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), (~ (rt0.c3))) FULL OUTER JOIN vt0 ON 0.5118084087517061 INNER JOIN rt0 ON ((((((vt1.c0) NOT BETWEEN ('kYシMgd') AND (rt0.c1)))AND((vt0.c0 IN (rt0.c0, rt0.c1)))))OR(rt0.c1 COLLATE BINARY)) ORDER BY (((((vt1.c0, rt0.c4, rt0.c0))<=(('-891376826', rt0.c1, rt0.c1))))*((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((t0.c71))))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON highlight(('-1838263849' IN ()), (NOT (t0.c35)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), (~ (rt0.c3))) FULL OUTER JOIN vt0 ON 0.5118084087517061 INNER JOIN rt0 ON ((((((vt1.c0) NOT BETWEEN ('kYシMgd') AND (rt0.c1)))AND((vt0.c0 IN (rt0.c0, rt0.c1)))))OR(rt0.c1 COLLATE BINARY)) WHERE (t0.c71) ORDER BY (((((vt1.c0, rt0.c4, rt0.c0))<=(('-891376826', rt0.c1, rt0.c1))))*((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((t0.c71)))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c71) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON highlight(('-1838263849' IN ()), (NOT (t0.c35)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), (~ (rt0.c3))) FULL OUTER JOIN vt0 ON 0.5118084087517061 INNER JOIN rt0 ON ((((((vt1.c0) NOT BETWEEN ('kYシMgd') AND (rt0.c1)))AND((vt0.c0 IN (rt0.c0, rt0.c1)))))OR(rt0.c1 COLLATE BINARY)) ORDER BY (((((vt1.c0, rt0.c4, rt0.c0))<=(('-891376826', rt0.c1, rt0.c1))))*((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((t0.c71))))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))-(((t0.c35)OR(t0.c71)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))-(((t0.c35)OR(t0.c71))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))-(((t0.c35)OR(t0.c71)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))-(((t0.c35)OR(t0.c71))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))-(((t0.c35)OR(t0.c71)))));
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (((((rt0.c1) ISNULL))IS NOT(TRIM(DISTINCT rt0.c1)))) ORDER BY (((CASE vt0.c0  WHEN rt0.c1 THEN t0.c71 END))>=((LOWER(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL))IS NOT(TRIM(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY (((CASE vt0.c0  WHEN rt0.c1 THEN t0.c71 END))>=((LOWER(DISTINCT rt0.c0)))));
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (((((rt0.c1) ISNULL))IS NOT(TRIM(DISTINCT rt0.c1)))) ORDER BY (((CASE vt0.c0  WHEN rt0.c1 THEN t0.c71 END))>=((LOWER(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL))IS NOT(TRIM(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY (((CASE vt0.c0  WHEN rt0.c1 THEN t0.c71 END))>=((LOWER(DISTINCT rt0.c0)))));
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (((((rt0.c1) ISNULL))IS NOT(TRIM(DISTINCT rt0.c1)))) ORDER BY (((CASE vt0.c0  WHEN rt0.c1 THEN t0.c71 END))>=((LOWER(DISTINCT rt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((x'48ef')) AND ((vt0.c0))))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(x'')))AND(((vt0.c0)+(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((x'48ef')) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(x'')))AND(((vt0.c0)+(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((x'48ef')) AND ((vt0.c0))))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(x'')))AND(((vt0.c0)+(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((x'48ef')) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(x'')))AND(((vt0.c0)+(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((x'48ef')) AND ((vt0.c0))))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(x'')))AND(((vt0.c0)+(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (IFNULL(x'' COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(x'' COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (IFNULL(x'' COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(x'' COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (IFNULL(x'' COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (TRIM(DISTINCT (t0.c35 IN ()))) ORDER BY (NOT (((vt1.c0)+(vt1.c0)))) DESC  NULLS LAST, ((((t0.c71)LIKE('mh'))) BETWEEN (((vt1.c0)>>(t0.c35))) AND (NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (t0.c35 IN ()))) IS TRUE)  as count FROM vt1, t0 ORDER BY (NOT (((vt1.c0)+(vt1.c0)))) DESC  NULLS LAST, ((((t0.c71)LIKE('mh'))) BETWEEN (((vt1.c0)>>(t0.c35))) AND (NULL)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (TRIM(DISTINCT (t0.c35 IN ()))) ORDER BY (NOT (((vt1.c0)+(vt1.c0)))) DESC  NULLS LAST, ((((t0.c71)LIKE('mh'))) BETWEEN (((vt1.c0)>>(t0.c35))) AND (NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (t0.c35 IN ()))) IS TRUE)  as count FROM vt1, t0 ORDER BY (NOT (((vt1.c0)+(vt1.c0)))) DESC  NULLS LAST, ((((t0.c71)LIKE('mh'))) BETWEEN (((vt1.c0)>>(t0.c35))) AND (NULL)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (TRIM(DISTINCT (t0.c35 IN ()))) ORDER BY (NOT (((vt1.c0)+(vt1.c0)))) DESC  NULLS LAST, ((((t0.c71)LIKE('mh'))) BETWEEN (((vt1.c0)>>(t0.c35))) AND (NULL)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((((rt0.c3)=(rt0.c3)))>=(rt0.c5))) ORDER BY (CAST(x'' AS NUMERIC) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)=(rt0.c3)))>=(rt0.c5))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (CAST(x'' AS NUMERIC) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((((rt0.c3)=(rt0.c3)))>=(rt0.c5))) ORDER BY (CAST(x'' AS NUMERIC) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)=(rt0.c3)))>=(rt0.c5))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (CAST(x'' AS NUMERIC) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((((rt0.c3)=(rt0.c3)))>=(rt0.c5))) ORDER BY (CAST(x'' AS NUMERIC) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c71) IS TRUE))OR((((t0.c71)) BETWEEN (('|')) AND ((vt0.c0))))))AND((- (vt0.c0)))))AND((t0.c35 IN ()))))OR((((t0.c71, t0.c71, t0.c71))=((t0.c71, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c71) IS TRUE))OR((((t0.c71)) BETWEEN (('|')) AND ((vt0.c0))))))AND((- (vt0.c0)))))AND((t0.c35 IN ()))))OR((((t0.c71, t0.c71, t0.c71))==((t0.c71, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c71) IS TRUE))OR((((t0.c71)) BETWEEN (('|')) AND ((vt0.c0))))))AND((- (vt0.c0)))))AND((t0.c35 IN ()))))OR((((t0.c71, t0.c71, t0.c71))=((t0.c71, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c71) IS TRUE))OR((((t0.c71)) BETWEEN (('|')) AND ((vt0.c0))))))AND((- (vt0.c0)))))AND((t0.c35 IN ()))))OR((((t0.c71, t0.c71, t0.c71))==((t0.c71, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c71) IS TRUE))OR((((t0.c71)) BETWEEN (('|')) AND ((vt0.c0))))))AND((- (vt0.c0)))))AND((t0.c35 IN ()))))OR((((t0.c71, t0.c71, t0.c71))=((t0.c71, vt0.c0, vt0.c0))))));
SELECT * FROM vt1, t0, rt0 WHERE ((((rt0.c0)|(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)|(rt0.c2)) IN ())) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE ((((rt0.c0)|(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)|(rt0.c2)) IN ())) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE ((((rt0.c0)|(rt0.c2)) IN ()));
SELECT * FROM rt0, vt0, t0 WHERE ((~ (t0.c35)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c35))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((~ (t0.c35)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c35))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((~ (t0.c35)));
SELECT * FROM rt0, t0 WHERE (((rt0.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((rt0.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((rt0.c0) IS TRUE) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (((((rt0.c3)>>(rt0.c1)))==(((t0.c35)+(t0.c71))))) ORDER BY ((((t0.c71) IS TRUE))!=(CAST(rt0.c5 AS NUMERIC))), x'';
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>>(rt0.c1)))==(((t0.c35)+(t0.c71))))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY ((((t0.c71) IS TRUE))!=(CAST(rt0.c5 AS NUMERIC))), x'');
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (((((rt0.c3)>>(rt0.c1)))==(((t0.c35)+(t0.c71))))) ORDER BY ((((t0.c71) IS TRUE))!=(CAST(rt0.c5 AS NUMERIC))), x'';
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>>(rt0.c1)))==(((t0.c35)+(t0.c71))))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY ((((t0.c71) IS TRUE))!=(CAST(rt0.c5 AS NUMERIC))), x'');
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (((((rt0.c3)>>(rt0.c1)))==(((t0.c35)+(t0.c71))))) ORDER BY ((((t0.c71) IS TRUE))!=(CAST(rt0.c5 AS NUMERIC))), x'';
SELECT ALL * FROM t0, vt0, vt1 WHERE (x'') ORDER BY vt0.c0 DESC, (((CAST(vt0.c0 AS TEXT), t0.c35 COLLATE NOCASE, ((vt0.c0)>>('-755900729'))))<(((t0.c71 IN (vt1.c0)), CAST(t0.c71 AS REAL), vt1.c0 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY vt0.c0 DESC, (((CAST(vt0.c0 AS TEXT), t0.c35 COLLATE NOCASE, ((vt0.c0)>>('-755900729'))))<(((t0.c71 IN (vt1.c0)), CAST(t0.c71 AS REAL), vt1.c0 COLLATE BINARY))) DESC);
SELECT ALL * FROM t0, vt0, vt1 WHERE (x'') ORDER BY vt0.c0 DESC, (((CAST(vt0.c0 AS TEXT), t0.c35 COLLATE NOCASE, ((vt0.c0)>>('-755900729'))))<(((t0.c71 IN (vt1.c0)), CAST(t0.c71 AS REAL), vt1.c0 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY vt0.c0 DESC, (((CAST(vt0.c0 AS TEXT), t0.c35 COLLATE NOCASE, ((vt0.c0)>>('-755900729'))))<(((t0.c71 IN (vt1.c0)), CAST(t0.c71 AS REAL), vt1.c0 COLLATE BINARY))) DESC);
SELECT ALL * FROM t0, vt0, vt1 WHERE (x'') ORDER BY vt0.c0 DESC, (((CAST(vt0.c0 AS TEXT), t0.c35 COLLATE NOCASE, ((vt0.c0)>>('-755900729'))))<(((t0.c71 IN (vt1.c0)), CAST(t0.c71 AS REAL), vt1.c0 COLLATE BINARY))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(DISTINCT ((t0.c35)!=(t0.c71)), (t0.c35 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((t0.c35)!=(t0.c71)), (t0.c35 IN ()))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(DISTINCT ((t0.c35)!=(t0.c71)), (t0.c35 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((t0.c35)!=(t0.c71)), (t0.c35 IN ()))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(DISTINCT ((t0.c35)!=(t0.c71)), (t0.c35 IN ())));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN vt0.c0 THEN t0.c35 END)=(((((((((t0.c35)AND(vt0.c0)))AND(t0.c35)))AND(vt0.c0)))OR(t0.c71)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN t0.c35 END)==(((((((((t0.c35)AND(vt0.c0)))AND(t0.c35)))AND(vt0.c0)))OR(t0.c71))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN vt0.c0 THEN t0.c35 END)=(((((((((t0.c35)AND(vt0.c0)))AND(t0.c35)))AND(vt0.c0)))OR(t0.c71)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN t0.c35 END)==(((((((((t0.c35)AND(vt0.c0)))AND(t0.c35)))AND(vt0.c0)))OR(t0.c71))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN vt0.c0 THEN t0.c35 END)=(((((((((t0.c35)AND(vt0.c0)))AND(t0.c35)))AND(vt0.c0)))OR(t0.c71)))));
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (((((NULL)+(t0.c71)))GLOB(rt0.c1))) ORDER BY ((((t0.c71) IS FALSE)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)+(t0.c71)))GLOB(rt0.c1))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY ((((t0.c71) IS FALSE)) NOT NULL));
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (((((NULL)+(t0.c71)))GLOB(rt0.c1))) ORDER BY ((((t0.c71) IS FALSE)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)+(t0.c71)))GLOB(rt0.c1))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY ((((t0.c71) IS FALSE)) NOT NULL));
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (((((NULL)+(t0.c71)))GLOB(rt0.c1))) ORDER BY ((((t0.c71) IS FALSE)) NOT NULL);
SELECT * FROM vt1, vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (rt0.c2);
SELECT ALL * FROM t0, vt0 WHERE (HEX(((t0.c35)IS NOT(t0.c71))));
SELECT SUM(count) FROM (SELECT ((HEX(((t0.c35)IS NOT(t0.c71)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (HEX(((t0.c35)IS NOT(t0.c71))));
SELECT SUM(count) FROM (SELECT ((HEX(((t0.c35)IS NOT(t0.c71)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (HEX(((t0.c35)IS NOT(t0.c71))));
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((+ (rt0.c5)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c5))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((+ (rt0.c5)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c5))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((+ (rt0.c5)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS FALSE)) NOT NULL));
SELECT * FROM rt0, vt0, t0, vt1 WHERE ((~ ((((rt0.c5)) NOT BETWEEN ((t0.c35)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c5)) NOT BETWEEN ((t0.c35)) AND ((vt1.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT * FROM rt0, vt0, t0, vt1 WHERE ((~ ((((rt0.c5)) NOT BETWEEN ((t0.c35)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c5)) NOT BETWEEN ((t0.c35)) AND ((vt1.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT * FROM rt0, vt0, t0, vt1 WHERE ((~ ((((rt0.c5)) NOT BETWEEN ((t0.c35)) AND ((vt1.c0))))));
SELECT ALL * FROM rt0 WHERE (((((((((CASE rt0.c5  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END)OR(((rt0.c0)%(rt0.c4)))))OR(((rt0.c4) ISNULL))))OR(((((NULL)AND(rt0.c4)))OR(rt0.c1)))))OR((rt0.c5 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c5  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END)OR(((rt0.c0)%(rt0.c4)))))OR(((rt0.c4) ISNULL))))OR(((((NULL)AND(rt0.c4)))OR(rt0.c1)))))OR((rt0.c5 IN (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((CASE rt0.c5  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END)OR(((rt0.c0)%(rt0.c4)))))OR(((rt0.c4) ISNULL))))OR(((((NULL)AND(rt0.c4)))OR(rt0.c1)))))OR((rt0.c5 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c5  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END)OR(((rt0.c0)%(rt0.c4)))))OR(((rt0.c4) ISNULL))))OR(((((NULL)AND(rt0.c4)))OR(rt0.c1)))))OR((rt0.c5 IN (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((CASE rt0.c5  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END)OR(((rt0.c0)%(rt0.c4)))))OR(((rt0.c4) ISNULL))))OR(((((NULL)AND(rt0.c4)))OR(rt0.c1)))))OR((rt0.c5 IN (rt0.c2)))));
SELECT * FROM t0, rt0, vt0, vt1 WHERE ((+ ((((rt0.c3))>=((t0.c35))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c3))>=((t0.c35)))))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT * FROM t0, rt0, vt0, vt1 WHERE ((+ ((((rt0.c3))>=((t0.c35))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c3))>=((t0.c35)))))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT * FROM t0, rt0, vt0, vt1 WHERE ((+ ((((rt0.c3))>=((t0.c35))))));
SELECT COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((((((vt1.c0, t0.c35, x''))>((vt1.c0, t0.c35, vt1.c0)))) BETWEEN ((((t0.c35))<((t0.c35)))) AND (CAST(t0.c71 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, t0.c35, x''))>((vt1.c0, t0.c35, vt1.c0)))) BETWEEN ((((t0.c35))<((t0.c35)))) AND (CAST(t0.c71 AS NUMERIC)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((((((vt1.c0, t0.c35, x''))>((vt1.c0, t0.c35, vt1.c0)))) BETWEEN ((((t0.c35))<((t0.c35)))) AND (CAST(t0.c71 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, t0.c35, x''))>((vt1.c0, t0.c35, vt1.c0)))) BETWEEN ((((t0.c35))<((t0.c35)))) AND (CAST(t0.c71 AS NUMERIC)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((((((vt1.c0, t0.c35, x''))>((vt1.c0, t0.c35, vt1.c0)))) BETWEEN ((((t0.c35))<((t0.c35)))) AND (CAST(t0.c71 AS NUMERIC))));
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((((t0.c35, vt0.c0, t0.c71)) BETWEEN ((t0.c71, vt0.c0, t0.c71)) AND ((t0.c71, vt0.c0, 0.07280146025249079)))) BETWEEN (t0.c71) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((t0.c35, vt0.c0, t0.c71)) BETWEEN ((t0.c71, vt0.c0, t0.c71)) AND ((t0.c71, vt0.c0, 0.07280146025249079)))) BETWEEN (t0.c71) AND (vt1.c0))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((((t0.c35, vt0.c0, t0.c71)) BETWEEN ((t0.c71, vt0.c0, t0.c71)) AND ((t0.c71, vt0.c0, 0.07280146025249079)))) BETWEEN (t0.c71) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((t0.c35, vt0.c0, t0.c71)) BETWEEN ((t0.c71, vt0.c0, t0.c71)) AND ((t0.c71, vt0.c0, 0.07280146025249079)))) BETWEEN (t0.c71) AND (vt1.c0))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((((t0.c35, vt0.c0, t0.c71)) BETWEEN ((t0.c71, vt0.c0, t0.c71)) AND ((t0.c71, vt0.c0, 0.07280146025249079)))) BETWEEN (t0.c71) AND (vt1.c0)));
SELECT * FROM vt0, rt0 WHERE (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c4)) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c4)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c4)) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c4)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c4)) COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((((((((vt0.c0)|(1768783163)))OR(vt0.c0)))AND((((rt0.c3, rt0.c5, rt0.c1))>((1.329573836E9, rt0.c1, rt0.c5))))))OR((((vt1.c0, rt0.c0, rt0.c5)) BETWEEN ((vt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c2, rt0.c5, rt0.c0))))))AND(rt0.c3 COLLATE BINARY))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c5)))) AND ((('-204834949' IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)|(1768783163)))OR(vt0.c0)))AND((((rt0.c3, rt0.c5, rt0.c1))>((1.329573836E9, rt0.c1, rt0.c5))))))OR((((vt1.c0, rt0.c0, rt0.c5)) BETWEEN ((vt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c2, rt0.c5, rt0.c0))))))AND(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c5)))) AND ((('-204834949' IN ()))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((((((((vt0.c0)|(1768783163)))OR(vt0.c0)))AND((((rt0.c3, rt0.c5, rt0.c1))>((1.329573836E9, rt0.c1, rt0.c5))))))OR((((vt1.c0, rt0.c0, rt0.c5)) BETWEEN ((vt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c2, rt0.c5, rt0.c0))))))AND(rt0.c3 COLLATE BINARY))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c5)))) AND ((('-204834949' IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)|(1768783163)))OR(vt0.c0)))AND((((rt0.c3, rt0.c5, rt0.c1))>((1.329573836E9, rt0.c1, rt0.c5))))))OR((((vt1.c0, rt0.c0, rt0.c5)) BETWEEN ((vt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c2, rt0.c5, rt0.c0))))))AND(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c5)))) AND ((('-204834949' IN ()))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((((((((vt0.c0)|(1768783163)))OR(vt0.c0)))AND((((rt0.c3, rt0.c5, rt0.c1))>((1.329573836E9, rt0.c1, rt0.c5))))))OR((((vt1.c0, rt0.c0, rt0.c5)) BETWEEN ((vt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c2, rt0.c5, rt0.c0))))))AND(rt0.c3 COLLATE BINARY))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c5)))) AND ((('-204834949' IN ()))))  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (((((t0.c35) BETWEEN (t0.c35) AND (vt0.c0)))IS NOT((((vt0.c0))=((t0.c71)))))) ORDER BY (((NOT (vt0.c0))) BETWEEN (((t0.c71)<<(t0.c35))) AND (0.6560409622470097));
SELECT SUM(count) FROM (SELECT ((((((t0.c35) BETWEEN (t0.c35) AND (vt0.c0)))IS NOT((((vt0.c0))==((t0.c71)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((NOT (vt0.c0))) BETWEEN (((t0.c71)<<(t0.c35))) AND (0.6560409622470097)));
SELECT * FROM t0, vt0 WHERE (((((t0.c35) BETWEEN (t0.c35) AND (vt0.c0)))IS NOT((((vt0.c0))=((t0.c71)))))) ORDER BY (((NOT (vt0.c0))) BETWEEN (((t0.c71)<<(t0.c35))) AND (0.6560409622470097));
SELECT SUM(count) FROM (SELECT ((((((t0.c35) BETWEEN (t0.c35) AND (vt0.c0)))IS NOT((((vt0.c0))==((t0.c71)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((NOT (vt0.c0))) BETWEEN (((t0.c71)<<(t0.c35))) AND (0.6560409622470097)));
SELECT * FROM t0, vt0 WHERE (((((t0.c35) BETWEEN (t0.c35) AND (vt0.c0)))IS NOT((((vt0.c0))=((t0.c71)))))) ORDER BY (((NOT (vt0.c0))) BETWEEN (((t0.c71)<<(t0.c35))) AND (0.6560409622470097));
SELECT ALL COUNT(*) FROM t0, vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2))!=((rt0.c1))) IN (CASE rt0.c1  WHEN t0.c71 THEN t0.c35 ELSE rt0.c2 END)) RIGHT OUTER JOIN vt0 ON (((t0.c71)) NOT BETWEEN (((((t0.c71, t0.c35, rt0.c5))=((vt0.c0, t0.c35, t0.c35))))) AND ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0))))) WHERE (((((((t0.c71)AND(rt0.c5)))AND(rt0.c0))) BETWEEN (((t0.c71)IS(rt0.c0))) AND (((x'') IS FALSE)))) ORDER BY (((x'')<<(t0.c71)) IN ())  NULLS FIRST, t0.c71 DESC  NULLS FIRST, ((rt0.c5)%(((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c71)AND(rt0.c5)))AND(rt0.c0))) BETWEEN (((t0.c71)IS(rt0.c0))) AND (((x'') IS FALSE)))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2))<>((rt0.c1))) IN (CASE rt0.c1  WHEN t0.c71 THEN t0.c35 ELSE rt0.c2 END)) RIGHT OUTER JOIN vt0 ON (((t0.c71)) NOT BETWEEN (((((t0.c71, t0.c35, rt0.c5))==((vt0.c0, t0.c35, t0.c35))))) AND ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY (((x'')<<(t0.c71)) IN ())  NULLS FIRST, t0.c71 DESC  NULLS FIRST, ((rt0.c5)%(((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2))!=((rt0.c1))) IN (CASE rt0.c1  WHEN t0.c71 THEN t0.c35 ELSE rt0.c2 END)) RIGHT OUTER JOIN vt0 ON (((t0.c71)) NOT BETWEEN (((((t0.c71, t0.c35, rt0.c5))=((vt0.c0, t0.c35, t0.c35))))) AND ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0))))) WHERE (((((((t0.c71)AND(rt0.c5)))AND(rt0.c0))) BETWEEN (((t0.c71)IS(rt0.c0))) AND (((x'') IS FALSE)))) ORDER BY (((x'')<<(t0.c71)) IN ())  NULLS FIRST, t0.c71 DESC  NULLS FIRST, ((rt0.c5)%(((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c71)AND(rt0.c5)))AND(rt0.c0))) BETWEEN (((t0.c71)IS(rt0.c0))) AND (((x'') IS FALSE)))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2))<>((rt0.c1))) IN (CASE rt0.c1  WHEN t0.c71 THEN t0.c35 ELSE rt0.c2 END)) RIGHT OUTER JOIN vt0 ON (((t0.c71)) NOT BETWEEN (((((t0.c71, t0.c35, rt0.c5))==((vt0.c0, t0.c35, t0.c35))))) AND ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY (((x'')<<(t0.c71)) IN ())  NULLS FIRST, t0.c71 DESC  NULLS FIRST, ((rt0.c5)%(((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2))!=((rt0.c1))) IN (CASE rt0.c1  WHEN t0.c71 THEN t0.c35 ELSE rt0.c2 END)) RIGHT OUTER JOIN vt0 ON (((t0.c71)) NOT BETWEEN (((((t0.c71, t0.c35, rt0.c5))=((vt0.c0, t0.c35, t0.c35))))) AND ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0))))) WHERE (((((((t0.c71)AND(rt0.c5)))AND(rt0.c0))) BETWEEN (((t0.c71)IS(rt0.c0))) AND (((x'') IS FALSE)))) ORDER BY (((x'')<<(t0.c71)) IN ())  NULLS FIRST, t0.c71 DESC  NULLS FIRST, ((rt0.c5)%(((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC;
SELECT ALL * FROM t0, rt0 WHERE (CAST((~ (rt0.c0)) AS BLOB)) ORDER BY (((((rt0.c2) IS TRUE)))!=((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3))))), (((rt0.c4 IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c2) IS TRUE)))!=((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3))))), (((rt0.c4 IN ())) ISNULL));
SELECT ALL * FROM t0, rt0 WHERE (CAST((~ (rt0.c0)) AS BLOB)) ORDER BY (((((rt0.c2) IS TRUE)))!=((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3))))), (((rt0.c4 IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c2) IS TRUE)))!=((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3))))), (((rt0.c4 IN ())) ISNULL));
SELECT ALL * FROM t0, rt0 WHERE (CAST((~ (rt0.c0)) AS BLOB)) ORDER BY (((((rt0.c2) IS TRUE)))!=((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3))))), (((rt0.c4 IN ())) ISNULL);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(t0.c71 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c71 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(t0.c71 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c71 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(t0.c71 COLLATE BINARY AS REAL));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt0, t0 NATURAL JOIN rt0 WHERE ((((t0.c35)AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35)AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, t0 NATURAL JOIN rt0 WHERE ((((t0.c35)AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c35)AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, t0 NATURAL JOIN rt0 WHERE ((((t0.c35)AND(vt0.c0)) IN ()));
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END) ISNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END) ISNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END) ISNULL));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c35))<>(('>')))) NOTNULL)) ORDER BY ((t0.c35 COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c35))!=(('>')))) NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c35 COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c35))<>(('>')))) NOTNULL)) ORDER BY ((t0.c35 COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c35))!=(('>')))) NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c35 COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c35))<>(('>')))) NOTNULL)) ORDER BY ((t0.c35 COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST;
SELECT * FROM t0, vt0, rt0 WHERE (rt0.c4) ORDER BY ((((rt0.c2 COLLATE NOCASE)OR(CASE WHEN rt0.c3 THEN '1656284816' ELSE rt0.c5 END)))OR(CAST(t0.c35 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((rt0.c2 COLLATE NOCASE)OR(CASE WHEN rt0.c3 THEN '1656284816' ELSE rt0.c5 END)))OR(CAST(t0.c35 AS REAL))) DESC);
SELECT * FROM t0, vt0, rt0 WHERE (rt0.c4) ORDER BY ((((rt0.c2 COLLATE NOCASE)OR(CASE WHEN rt0.c3 THEN '1656284816' ELSE rt0.c5 END)))OR(CAST(t0.c35 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((rt0.c2 COLLATE NOCASE)OR(CASE WHEN rt0.c3 THEN '1656284816' ELSE rt0.c5 END)))OR(CAST(t0.c35 AS REAL))) DESC);
SELECT * FROM t0, vt0, rt0 WHERE (rt0.c4) ORDER BY ((((rt0.c2 COLLATE NOCASE)OR(CASE WHEN rt0.c3 THEN '1656284816' ELSE rt0.c5 END)))OR(CAST(t0.c35 AS REAL))) DESC;
SELECT ALL * FROM t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (vt1.c0);
SELECT ALL * FROM t0 WHERE (((((t0.c71)GLOB(t0.c71)))&(t0.c35)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c71)GLOB(t0.c71)))&(t0.c35))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c71)GLOB(t0.c71)))&(t0.c35)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c71)GLOB(t0.c71)))&(t0.c35))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c71)GLOB(t0.c71)))&(t0.c35)));
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE ((rt0.c4 COLLATE RTRIM IN ())) ORDER BY ((((vt0.c0)OR(rt0.c0))) BETWEEN (((((rt0.c4)AND(t0.c35)))OR(rt0.c0))) AND (rt0.c2)) DESC, (rt0.c2 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c4 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY ((((vt0.c0)OR(rt0.c0))) BETWEEN (((((rt0.c4)AND(t0.c35)))OR(rt0.c0))) AND (rt0.c2)) DESC, (rt0.c2 COLLATE BINARY IN ()) ASC);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE ((rt0.c4 COLLATE RTRIM IN ())) ORDER BY ((((vt0.c0)OR(rt0.c0))) BETWEEN (((((rt0.c4)AND(t0.c35)))OR(rt0.c0))) AND (rt0.c2)) DESC, (rt0.c2 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c4 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY ((((vt0.c0)OR(rt0.c0))) BETWEEN (((((rt0.c4)AND(t0.c35)))OR(rt0.c0))) AND (rt0.c2)) DESC, (rt0.c2 COLLATE BINARY IN ()) ASC);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE ((rt0.c4 COLLATE RTRIM IN ())) ORDER BY ((((vt0.c0)OR(rt0.c0))) BETWEEN (((((rt0.c4)AND(t0.c35)))OR(rt0.c0))) AND (rt0.c2)) DESC, (rt0.c2 COLLATE BINARY IN ()) ASC;
SELECT ALL * FROM vt1, rt0, vt0 CROSS JOIN t0 ON ((UPPER(DISTINCT rt0.c1))<(NULL)) WHERE (CASE WHEN ((rt0.c5)+(t0.c35)) THEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c4))) ELSE ((t0.c35)IS NOT(rt0.c1)) END) ORDER BY INSTR((((rt0.c1, 0.2984919101567698, vt0.c0)) BETWEEN ((rt0.c3, rt0.c4, vt1.c0)) AND ((vt1.c0, rt0.c0, rt0.c3))), MIN(rt0.c4, t0.c35)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c5)+(t0.c35)) THEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c4))) ELSE ((t0.c35)IS NOT(rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0, vt0 CROSS JOIN t0 ON ((UPPER(DISTINCT rt0.c1))<(NULL)) ORDER BY INSTR((((rt0.c1, 0.2984919101567698, vt0.c0)) BETWEEN ((rt0.c3, rt0.c4, vt1.c0)) AND ((vt1.c0, rt0.c0, rt0.c3))), MIN(rt0.c4, t0.c35)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 CROSS JOIN t0 ON ((UPPER(DISTINCT rt0.c1))<(NULL)) WHERE (CASE WHEN ((rt0.c5)+(t0.c35)) THEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c4))) ELSE ((t0.c35)IS NOT(rt0.c1)) END) ORDER BY INSTR((((rt0.c1, 0.2984919101567698, vt0.c0)) BETWEEN ((rt0.c3, rt0.c4, vt1.c0)) AND ((vt1.c0, rt0.c0, rt0.c3))), MIN(rt0.c4, t0.c35)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c5)+(t0.c35)) THEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c4))) ELSE ((t0.c35)IS NOT(rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0, vt0 CROSS JOIN t0 ON ((UPPER(DISTINCT rt0.c1))<(NULL)) ORDER BY INSTR((((rt0.c1, 0.2984919101567698, vt0.c0)) BETWEEN ((rt0.c3, rt0.c4, vt1.c0)) AND ((vt1.c0, rt0.c0, rt0.c3))), MIN(rt0.c4, t0.c35)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 CROSS JOIN t0 ON ((UPPER(DISTINCT rt0.c1))<(NULL)) WHERE (CASE WHEN ((rt0.c5)+(t0.c35)) THEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c4))) ELSE ((t0.c35)IS NOT(rt0.c1)) END) ORDER BY INSTR((((rt0.c1, 0.2984919101567698, vt0.c0)) BETWEEN ((rt0.c3, rt0.c4, vt1.c0)) AND ((vt1.c0, rt0.c0, rt0.c3))), MIN(rt0.c4, t0.c35)) ASC  NULLS FIRST;
SELECT * FROM t0, vt1 FULL OUTER JOIN rt0 ON PRINTF(rt0.c2) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON CAST(((rt0.c4)GLOB(0.7108916353500886)) AS REAL) WHERE ((((((rt0.c1))>((t0.c35))))>=((((t0.c35, rt0.c3, rt0.c0))<>((rt0.c0, '-1353731625', rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))>((t0.c35))))>=((((t0.c35, rt0.c3, rt0.c0))<>((rt0.c0, '-1353731625', rt0.c0)))))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN rt0 ON PRINTF(rt0.c2) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON CAST(((rt0.c4)GLOB(0.7108916353500886)) AS REAL));
SELECT * FROM t0, vt1 FULL OUTER JOIN rt0 ON PRINTF(rt0.c2) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON CAST(((rt0.c4)GLOB(0.7108916353500886)) AS REAL) WHERE ((((((rt0.c1))>((t0.c35))))>=((((t0.c35, rt0.c3, rt0.c0))<>((rt0.c0, '-1353731625', rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))>((t0.c35))))>=((((t0.c35, rt0.c3, rt0.c0))<>((rt0.c0, '-1353731625', rt0.c0)))))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN rt0 ON PRINTF(rt0.c2) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON CAST(((rt0.c4)GLOB(0.7108916353500886)) AS REAL));
SELECT * FROM t0, vt1 FULL OUTER JOIN rt0 ON PRINTF(rt0.c2) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON CAST(((rt0.c4)GLOB(0.7108916353500886)) AS REAL) WHERE ((((((rt0.c1))>((t0.c35))))>=((((t0.c35, rt0.c3, rt0.c0))<>((rt0.c0, '-1353731625', rt0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('^') ORDER BY ((((0.3732224291698927)LIKE(vt0.c0)))OR(t0.c71)) ASC  NULLS LAST, ((((((t0.c35)AND(t0.c71)))OR(vt0.c0)))|(((((((((NULL)OR(t0.c35)))OR(t0.c71)))AND(t0.c35)))AND('D5'))));
SELECT SUM(count) FROM (SELECT ALL (('^') IS TRUE)  as count FROM t0, vt0 ORDER BY ((((0.3732224291698927)LIKE(vt0.c0)))OR(t0.c71)) ASC  NULLS LAST, ((((((t0.c35)AND(t0.c71)))OR(vt0.c0)))|(((((((((NULL)OR(t0.c35)))OR(t0.c71)))AND(t0.c35)))AND('D5')))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('^') ORDER BY ((((0.3732224291698927)LIKE(vt0.c0)))OR(t0.c71)) ASC  NULLS LAST, ((((((t0.c35)AND(t0.c71)))OR(vt0.c0)))|(((((((((NULL)OR(t0.c35)))OR(t0.c71)))AND(t0.c35)))AND('D5'))));
SELECT SUM(count) FROM (SELECT ALL (('^') IS TRUE)  as count FROM t0, vt0 ORDER BY ((((0.3732224291698927)LIKE(vt0.c0)))OR(t0.c71)) ASC  NULLS LAST, ((((((t0.c35)AND(t0.c71)))OR(vt0.c0)))|(((((((((NULL)OR(t0.c35)))OR(t0.c71)))AND(t0.c35)))AND('D5')))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('^') ORDER BY ((((0.3732224291698927)LIKE(vt0.c0)))OR(t0.c71)) ASC  NULLS LAST, ((((((t0.c35)AND(t0.c71)))OR(vt0.c0)))|(((((((((NULL)OR(t0.c35)))OR(t0.c71)))AND(t0.c35)))AND('D5'))));
SELECT * FROM vt1, t0, rt0, vt0 WHERE (ABS(DISTINCT (NOT (vt1.c0)))) ORDER BY (0.3807731640988463 IN ()) COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (NOT (vt1.c0)))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY (0.3807731640988463 IN ()) COLLATE NOCASE COLLATE RTRIM);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (ABS(DISTINCT (NOT (vt1.c0)))) ORDER BY (0.3807731640988463 IN ()) COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (NOT (vt1.c0)))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY (0.3807731640988463 IN ()) COLLATE NOCASE COLLATE RTRIM);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (ABS(DISTINCT (NOT (vt1.c0)))) ORDER BY (0.3807731640988463 IN ()) COLLATE NOCASE COLLATE RTRIM;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((vt0.c0 COLLATE NOCASE) ISNULL) CROSS JOIN t0 ON (((CAST(vt1.c0 AS REAL)))=(((vt0.c0 IN ())))) WHERE ((((x'')) NOT BETWEEN ((((t0.c35) ISNULL))) AND (((vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((x'')) NOT BETWEEN ((((t0.c35) ISNULL))) AND (((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((vt0.c0 COLLATE NOCASE) ISNULL) CROSS JOIN t0 ON (((CAST(vt1.c0 AS REAL)))=(((vt0.c0 IN ())))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((vt0.c0 COLLATE NOCASE) ISNULL) CROSS JOIN t0 ON (((CAST(vt1.c0 AS REAL)))=(((vt0.c0 IN ())))) WHERE ((((x'')) NOT BETWEEN ((((t0.c35) ISNULL))) AND (((vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((x'')) NOT BETWEEN ((((t0.c35) ISNULL))) AND (((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((vt0.c0 COLLATE NOCASE) ISNULL) CROSS JOIN t0 ON (((CAST(vt1.c0 AS REAL)))=(((vt0.c0 IN ())))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((vt0.c0 COLLATE NOCASE) ISNULL) CROSS JOIN t0 ON (((CAST(vt1.c0 AS REAL)))=(((vt0.c0 IN ())))) WHERE ((((x'')) NOT BETWEEN ((((t0.c35) ISNULL))) AND (((vt1.c0 IN ())))));
SELECT * FROM vt1, vt0, rt0, t0 WHERE (((rt0.c1)*(x'c2f9')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)*(x'c2f9')) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, rt0, t0);
SELECT * FROM vt1, vt0, rt0, t0 WHERE (((rt0.c1)*(x'c2f9')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)*(x'c2f9')) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, rt0, t0);
SELECT * FROM vt1, vt0, rt0, t0 WHERE (((rt0.c1)*(x'c2f9')) COLLATE RTRIM);
