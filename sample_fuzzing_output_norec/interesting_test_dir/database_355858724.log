-- Time: 2024/06/10 15:40:36
-- Database: database24
-- Database version: 3.40.0
-- seed value: 355858724
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1, matchinfo=fts3, tokenize=unicode61); -- 1ms;
PRAGMA threads; -- 0ms;
ANALYZE; -- 1ms;
PRAGMA integrity_check; -- 1ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (x'd6a0'); -- 3ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 2ms;
UPDATE rt0 SET c2='Y^⬦S~'; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL ((CASE WHEN '692752213' THEN vt1.c0 ELSE NULL END) NOT NULL) FROM vt1 WHERE (CASE 0.16197673916318844  WHEN NULL THEN '' ELSE NULL END COLLATE NOCASE); -- 0ms;
UPDATE OR IGNORE vt1 SET c1='', c0='Q赣ຘ'; -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL, NULL); -- 4ms;
INSERT OR ABORT INTO rt0(c0) VALUES (''); -- 1ms;
UPDATE OR FAIL rt0 SET (c2)=(''); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0) VALUES (x'2302', NULL), (0.16197673916318844, '2050175360'), (2050175360, 1e500); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0='Gຘp-}{a*' WHERE UPPER(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -919875647);\n; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '1828'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 4); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1176363772);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '49748'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 7); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA main.recursive_triggers; -- 0ms;
UPDATE OR REPLACE rt0 SET c2=0Xffffffffd9fb8d63; -- 0ms;
UPDATE OR IGNORE vt1 SET c1=''; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.6675267399284585 WHERE 0.11452772058498317; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1956256248,5');\n; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.journal_mode = MEMORY; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x'', x''); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, '-502648156', x''); -- 1ms;
UPDATE OR IGNORE rt0 SET (c1)=(-2080396140) WHERE ((rt0.c2) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT INTO vt1(vt1) VALUES('merge=1956256248,5');\n; -- 2ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 4ms;
INSERT OR IGNORE INTO vt1 VALUES (0.5791294590987218, NULL), ('ZK+o', 0.7657948628748141), (0.11509666879919667, x''); -- 1ms;
UPDATE OR IGNORE vt1 SET c1=NULL, c1=x'' WHERE CHANGES(); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (0.049162870142100856, ''), (0.30271042846922225, x'ec44'), ('Q赣ຘ', 1996373126); -- 0ms;
REINDEX BINARY; -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
REINDEX; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.integrity_check; -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ANALYZE main; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=563358502,9');\n; -- 0ms;
INSERT OR ABORT INTO vt1(c0, c1) VALUES (NULL, '0.049162870142100856'), (0.30271042846922225, x''), (NULL, (((('563358502') BETWEEN (',Pd') AND (x'2b3c3495'))) BETWEEN (((NULL) NOT BETWEEN ('j# ') AND (0.3257111769798603))) AND (((x'') NOT BETWEEN (991676072) AND ('883330604'))))); -- 1ms;
INSERT OR ROLLBACK INTO vt1(c1, c0) VALUES (0xffffffff83485e60, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (5.63358502E8), (NULL), (''); -- 0ms;
PRAGMA stats; -- 0ms;
CREATE TEMP TABLE t0 (c0 REAL , c1 INTEGER , c2 REAL ); -- 1ms;
UPDATE OR IGNORE vt1 SET c0=-919875647, c0=NULL WHERE CAST('-919875647' AS BLOB); -- 1ms;
PRAGMA foreign_keys; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1) VALUES (NULL, 'A%'); -- 0ms;
UPDATE OR IGNORE t0 SET c1='Q赣ຘ'; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.39057992413402476), (NULL), (0.010024744361641913); -- 0ms;
DELETE FROM rt0 WHERE ((((rt0.c2) NOTNULL)) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (((rt0.c2)&(rt0.c0)))); -- 0ms;
PRAGMA temp.application_id; -- 0ms;
INSERT OR ABORT INTO rt0(c0, c2) VALUES (NULL, '563358502'); -- 0ms;
REINDEX  vt1; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
PRAGMA temp.ignore_check_constraints = true; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-502648156,4');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1345806387);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -638335814);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0, c1, c1)=('[q', NULL, '-1070608631') WHERE vt1.c1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.optimize; -- 0ms;
INSERT OR ROLLBACK INTO t0(c2, c1) VALUES ('405469202', 465773055); -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.30271042846922225; -- 1ms;
UPDATE OR IGNORE rt0 SET c0=0.4010950201693705; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (x''), (NULL), (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'a357', NULL, x''); -- 0ms;
PRAGMA temp.reverse_unordered_selects = true; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 4ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=9'); -- 0ms;
REINDEX NOCASE; -- 1ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=('', x'f6ad') WHERE ((NULL)<=(vt1.c0 COLLATE RTRIM)); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA journal_size_limit = -7285944685861733900; -- 0ms;
UPDATE OR IGNORE vt1 SET (c1, c1, c0)=('', NULL, 0.959612845687624) WHERE (((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN (((((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((NULL, 0.8933602201585632, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0))), CAST(vt1.c0 AS BLOB), ((vt1.c0)LIKE(vt1.c1)))) AND ((((-5.02648156E8)-(vt1.c1)), ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)), GLOB(vt1.c0, '190970843')))); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES (x''), (NULL), (0.41727990721687236); -- 0ms;
INSERT OR ABORT INTO t0(c2) VALUES (0xffffffff96ece623); -- 0ms;
PRAGMA temp.cache_spill = true; -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
UPDATE t0 SET (c1)=(0.5796315767574574) WHERE x''; -- 0ms;
UPDATE OR REPLACE rt0 SET c0=x'', c0=0.18369471919331093 WHERE (((rt0.c2 IN ())) NOTNULL); -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
CREATE UNIQUE INDEX i47 ON t0(((x'c46a')IS(((((c0)AND(x'')))OR(c2)))) COLLATE RTRIM DESC,(((c1 IN (0.4213909625609621, c1)))OR(x'a234')) COLLATE BINARY,c1 DESC); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.39057992413402476) WHERE CASE WHEN CAST(t0.c1 AS BLOB) THEN t0.c1 ELSE t0.c2 END; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
PRAGMA incremental_vacuum(650807357); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2037082186); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 4ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE NULL; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO t0(c0, c1) VALUES (NULL, x''); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c11; -- 0ms;
REINDEX; -- 1ms;
END; -- 0ms;
ANALYZE; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE vt1 SET c0=NULL; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
INSERT OR REPLACE INTO t1(c1, c11, c2) VALUES ('', NULL, NULL); -- 0ms;
UPDATE OR IGNORE vt1 SET (c1)=(2026705608) WHERE '2050175360'; -- 1ms;
ALTER TABLE t1 RENAME COLUMN c2 TO c45; -- 0ms;
DROP TABLE IF EXISTS t1; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 212965044); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1867833611);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''), (''), ('-1602652972'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c2) ISNULL)))) ORDER BY CASE WHEN (((rt0.c2, rt0.c2, 'Gt2}赣X<3', rt0.c2, rt0.c1, rt0.c1, rt0.c0))<=((x'cda9', rt0.c2, rt0.c2, rt0.c2, rt0.c2, rt0.c1, rt0.c1))) THEN (((rt0.c1))==((rt0.c1))) WHEN (- (rt0.c2)) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(0.9965828340036059)))OR(rt0.c0)))OR(rt0.c2)) THEN '-1542315860' ELSE ((rt0.c1) NOTNULL) END DESC, ((- (NULL)) IN ()), (+ (((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c2, rt0.c2, 'Gt2}赣X<3', rt0.c2, rt0.c1, rt0.c1, rt0.c0))<=((x'cda9', rt0.c2, rt0.c2, rt0.c2, rt0.c2, rt0.c1, rt0.c1))) THEN (((rt0.c1))=((rt0.c1))) WHEN (- (rt0.c2)) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(0.9965828340036059)))OR(rt0.c0)))OR(rt0.c2)) THEN '-1542315860' ELSE ((rt0.c1) NOTNULL) END DESC, ((- (NULL)) IN ()), (+ (((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c2) ISNULL)))) ORDER BY CASE WHEN (((rt0.c2, rt0.c2, 'Gt2}赣X<3', rt0.c2, rt0.c1, rt0.c1, rt0.c0))<=((x'cda9', rt0.c2, rt0.c2, rt0.c2, rt0.c2, rt0.c1, rt0.c1))) THEN (((rt0.c1))==((rt0.c1))) WHEN (- (rt0.c2)) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(0.9965828340036059)))OR(rt0.c0)))OR(rt0.c2)) THEN '-1542315860' ELSE ((rt0.c1) NOTNULL) END DESC, ((- (NULL)) IN ()), (+ (((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c2, rt0.c2, 'Gt2}赣X<3', rt0.c2, rt0.c1, rt0.c1, rt0.c0))<=((x'cda9', rt0.c2, rt0.c2, rt0.c2, rt0.c2, rt0.c1, rt0.c1))) THEN (((rt0.c1))=((rt0.c1))) WHEN (- (rt0.c2)) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(0.9965828340036059)))OR(rt0.c0)))OR(rt0.c2)) THEN '-1542315860' ELSE ((rt0.c1) NOTNULL) END DESC, ((- (NULL)) IN ()), (+ (((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c2) ISNULL)))) ORDER BY CASE WHEN (((rt0.c2, rt0.c2, 'Gt2}赣X<3', rt0.c2, rt0.c1, rt0.c1, rt0.c0))<=((x'cda9', rt0.c2, rt0.c2, rt0.c2, rt0.c2, rt0.c1, rt0.c1))) THEN (((rt0.c1))==((rt0.c1))) WHEN (- (rt0.c2)) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(0.9965828340036059)))OR(rt0.c0)))OR(rt0.c2)) THEN '-1542315860' ELSE ((rt0.c1) NOTNULL) END DESC, ((- (NULL)) IN ()), (+ (((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))) ASC;
SELECT ALL * FROM vt1, v0, rt0 WHERE (((((x'4d57') NOT BETWEEN (vt1.c0) AND (rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((x'4d57') NOT BETWEEN (vt1.c0) AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL * FROM vt1, v0, rt0 WHERE (((((x'4d57') NOT BETWEEN (vt1.c0) AND (rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((x'4d57') NOT BETWEEN (vt1.c0) AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL * FROM vt1, v0, rt0 WHERE (((((x'4d57') NOT BETWEEN (vt1.c0) AND (rt0.c1))) ISNULL));
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE ((~ (json_valid(rt0.c2)))) ORDER BY ((CASE WHEN '-919875647' THEN vt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 END) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (json_valid(rt0.c2)))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((CASE WHEN '-919875647' THEN vt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 END) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE ((~ (json_valid(rt0.c2)))) ORDER BY ((CASE WHEN '-919875647' THEN vt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 END) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (json_valid(rt0.c2)))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((CASE WHEN '-919875647' THEN vt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 END) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE ((~ (json_valid(rt0.c2)))) ORDER BY ((CASE WHEN '-919875647' THEN vt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 END) NOTNULL) ASC  NULLS LAST;
SELECT ALL * FROM v0, rt0, vt1 WHERE (((((rt0.c0)-(rt0.c2))) BETWEEN (rt0.c1 COLLATE BINARY) AND ((vt1.c1 IN (rt0.c2))))) ORDER BY ((CASE vt1.c1  WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END) NOT BETWEEN ((((('991676072')OR(rt0.c2)))AND(vt1.c0))) AND (((v0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)-(rt0.c2))) BETWEEN (rt0.c1 COLLATE BINARY) AND ((vt1.c1 IN (rt0.c2))))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((CASE vt1.c1  WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END) NOT BETWEEN ((((('991676072')OR(rt0.c2)))AND(vt1.c0))) AND (((v0.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt1 WHERE (((((rt0.c0)-(rt0.c2))) BETWEEN (rt0.c1 COLLATE BINARY) AND ((vt1.c1 IN (rt0.c2))))) ORDER BY ((CASE vt1.c1  WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END) NOT BETWEEN ((((('991676072')OR(rt0.c2)))AND(vt1.c0))) AND (((v0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)-(rt0.c2))) BETWEEN (rt0.c1 COLLATE BINARY) AND ((vt1.c1 IN (rt0.c2))))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((CASE vt1.c1  WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END) NOT BETWEEN ((((('991676072')OR(rt0.c2)))AND(vt1.c0))) AND (((v0.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt1 WHERE (((((rt0.c0)-(rt0.c2))) BETWEEN (rt0.c1 COLLATE BINARY) AND ((vt1.c1 IN (rt0.c2))))) ORDER BY ((CASE vt1.c1  WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END) NOT BETWEEN ((((('991676072')OR(rt0.c2)))AND(vt1.c0))) AND (((v0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (CASE WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) THEN json_array_length(rt0.c0) ELSE '-2092409248' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) THEN json_array_length(rt0.c0) ELSE '-2092409248' END) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) THEN json_array_length(rt0.c0) ELSE '-2092409248' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) THEN json_array_length(rt0.c0) ELSE '-2092409248' END) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) THEN json_array_length(rt0.c0) ELSE '-2092409248' END);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (((((((((((((((vt1.c0)GLOB(vt1.c0)))AND(vt1.c1 COLLATE BINARY)))AND(CASE rt0.c1  WHEN NULL THEN vt1.c0 ELSE v0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))))AND((~ (-1.762859485E9)))))AND(((rt0.c1) IS FALSE))))AND(((rt0.c1)!=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt1.c0)GLOB(vt1.c0)))AND(vt1.c1 COLLATE BINARY)))AND(CASE rt0.c1  WHEN NULL THEN vt1.c0 ELSE v0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))))AND((~ (-1.762859485E9)))))AND(((rt0.c1) IS FALSE))))AND(((rt0.c1)<>(vt1.c1))))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (((((((((((((((vt1.c0)GLOB(vt1.c0)))AND(vt1.c1 COLLATE BINARY)))AND(CASE rt0.c1  WHEN NULL THEN vt1.c0 ELSE v0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))))AND((~ (-1.762859485E9)))))AND(((rt0.c1) IS FALSE))))AND(((rt0.c1)!=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt1.c0)GLOB(vt1.c0)))AND(vt1.c1 COLLATE BINARY)))AND(CASE rt0.c1  WHEN NULL THEN vt1.c0 ELSE v0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))))AND((~ (-1.762859485E9)))))AND(((rt0.c1) IS FALSE))))AND(((rt0.c1)<>(vt1.c1))))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (((((((((((((((vt1.c0)GLOB(vt1.c0)))AND(vt1.c1 COLLATE BINARY)))AND(CASE rt0.c1  WHEN NULL THEN vt1.c0 ELSE v0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))))AND((~ (-1.762859485E9)))))AND(((rt0.c1) IS FALSE))))AND(((rt0.c1)!=(vt1.c1)))));
SELECT ALL * FROM vt1 WHERE (x'a410');
SELECT SUM(count) FROM (SELECT ALL ((x'a410') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'a410');
SELECT SUM(count) FROM (SELECT ALL ((x'a410') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'a410');
SELECT * FROM v0, rt0 WHERE (691610166);
SELECT SUM(count) FROM (SELECT ((691610166) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (691610166);
SELECT SUM(count) FROM (SELECT ((691610166) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (691610166);
SELECT * FROM rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT));
SELECT COUNT(*) FROM rt0, v0 WHERE (((CAST(v0.c0 AS BLOB))OR(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB))OR(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CAST(v0.c0 AS BLOB))OR(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB))OR(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CAST(v0.c0 AS BLOB))OR(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)*(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)*(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)*(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)*(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)*(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL * FROM rt0, vt1, v0 WHERE (((((x'')LIKE(rt0.c2)))GLOB(TRIM(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')LIKE(rt0.c2)))GLOB(TRIM(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL * FROM rt0, vt1, v0 WHERE (((((x'')LIKE(rt0.c2)))GLOB(TRIM(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')LIKE(rt0.c2)))GLOB(TRIM(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL * FROM rt0, vt1, v0 WHERE (((((x'')LIKE(rt0.c2)))GLOB(TRIM(rt0.c1))));
SELECT COUNT(*) FROM v0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN (('f.kvO/GG')) AND ((CASE vt1.c1  WHEN '-637825693' THEN v0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 END)))) ORDER BY (((CASE WHEN vt1.c1 THEN vt1.c0 END, 0X434faa81, ((('0.8933602201585632')) BETWEEN ((vt1.c1)) AND ((vt1.c1)))))<(((((vt1.c0, v0.c0, v0.c0))>=((vt1.c0, vt1.c0, v0.c0))), (vt1.c0 IN ()), vt1.c1 COLLATE NOCASE))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (('f.kvO/GG')) AND ((CASE vt1.c1  WHEN '-637825693' THEN v0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((CASE WHEN vt1.c1 THEN vt1.c0 END, 0x434faa81, ((('0.8933602201585632')) BETWEEN ((vt1.c1)) AND ((vt1.c1)))))<(((((vt1.c0, v0.c0, v0.c0))>=((vt1.c0, vt1.c0, v0.c0))), (vt1.c0 IN ()), vt1.c1 COLLATE NOCASE))) DESC);
SELECT COUNT(*) FROM v0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN (('f.kvO/GG')) AND ((CASE vt1.c1  WHEN '-637825693' THEN v0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 END)))) ORDER BY (((CASE WHEN vt1.c1 THEN vt1.c0 END, 0X434faa81, ((('0.8933602201585632')) BETWEEN ((vt1.c1)) AND ((vt1.c1)))))<(((((vt1.c0, v0.c0, v0.c0))>=((vt1.c0, vt1.c0, v0.c0))), (vt1.c0 IN ()), vt1.c1 COLLATE NOCASE))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (('f.kvO/GG')) AND ((CASE vt1.c1  WHEN '-637825693' THEN v0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((CASE WHEN vt1.c1 THEN vt1.c0 END, 0x434faa81, ((('0.8933602201585632')) BETWEEN ((vt1.c1)) AND ((vt1.c1)))))<(((((vt1.c0, v0.c0, v0.c0))>=((vt1.c0, vt1.c0, v0.c0))), (vt1.c0 IN ()), vt1.c1 COLLATE NOCASE))) DESC);
SELECT COUNT(*) FROM v0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN (('f.kvO/GG')) AND ((CASE vt1.c1  WHEN '-637825693' THEN v0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 END)))) ORDER BY (((CASE WHEN vt1.c1 THEN vt1.c0 END, 0X434faa81, ((('0.8933602201585632')) BETWEEN ((vt1.c1)) AND ((vt1.c1)))))<(((((vt1.c0, v0.c0, v0.c0))>=((vt1.c0, vt1.c0, v0.c0))), (vt1.c0 IN ()), vt1.c1 COLLATE NOCASE))) DESC;
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE (GLOB((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), '0.4010950201693705'));
SELECT SUM(count) FROM (SELECT ALL ((GLOB((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), '0.4010950201693705')) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (GLOB((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), '0.4010950201693705'));
SELECT SUM(count) FROM (SELECT ALL ((GLOB((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), '0.4010950201693705')) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (GLOB((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), '0.4010950201693705'));
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt1 ON (((('iZV&NH')+(rt0.c1))) IS TRUE) WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt1 ON (((('iZV&NH')+(rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt1 ON (((('iZV&NH')+(rt0.c1))) IS TRUE) WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt1 ON (((('iZV&NH')+(rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt1 ON (((('iZV&NH')+(rt0.c1))) IS TRUE) WHERE (NULL COLLATE BINARY);
SELECT ALL * FROM rt0, vt1, v0 WHERE (((TRIM(DISTINCT rt0.c0))*((vt1.c1 IN ())))) ORDER BY ((((((((rt0.c2)OR(vt1.c0)))AND(vt1.c0)))AND(rt0.c1)))AND(vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT rt0.c0))*((vt1.c1 IN ())))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY ((((((((rt0.c2)OR(vt1.c0)))AND(vt1.c0)))AND(rt0.c1)))AND(vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0, vt1, v0 WHERE (((TRIM(DISTINCT rt0.c0))*((vt1.c1 IN ())))) ORDER BY ((((((((rt0.c2)OR(vt1.c0)))AND(vt1.c0)))AND(rt0.c1)))AND(vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT rt0.c0))*((vt1.c1 IN ())))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY ((((((((rt0.c2)OR(vt1.c0)))AND(vt1.c0)))AND(rt0.c1)))AND(vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0, vt1, v0 WHERE (((TRIM(DISTINCT rt0.c0))*((vt1.c1 IN ())))) ORDER BY ((((((((rt0.c2)OR(vt1.c0)))AND(vt1.c0)))AND(rt0.c1)))AND(vt1.c0)) COLLATE BINARY;
SELECT ALL * FROM rt0, v0, vt1 WHERE (CASE WHEN (((vt1.c1))<=((rt0.c1))) THEN ((((rt0.c1)OR(rt0.c2)))AND(1663528271)) ELSE ((((692752213)AND(vt1.c0)))AND(rt0.c1)) END) ORDER BY UPPER(((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c1))<=((rt0.c1))) THEN ((((rt0.c1)OR(rt0.c2)))AND(1663528271)) ELSE ((((692752213)AND(vt1.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY UPPER(((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c1)))  NULLS LAST);
SELECT ALL * FROM rt0, v0, vt1 WHERE (CASE WHEN (((vt1.c1))<=((rt0.c1))) THEN ((((rt0.c1)OR(rt0.c2)))AND(1663528271)) ELSE ((((692752213)AND(vt1.c0)))AND(rt0.c1)) END) ORDER BY UPPER(((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c1))<=((rt0.c1))) THEN ((((rt0.c1)OR(rt0.c2)))AND(1663528271)) ELSE ((((692752213)AND(vt1.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY UPPER(((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c1)))  NULLS LAST);
SELECT ALL * FROM rt0, v0, vt1 WHERE (CASE WHEN (((vt1.c1))<=((rt0.c1))) THEN ((((rt0.c1)OR(rt0.c2)))AND(1663528271)) ELSE ((((692752213)AND(vt1.c0)))AND(rt0.c1)) END) ORDER BY UPPER(((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c1)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((+ (((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt1.c1)OR(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((+ (((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt1.c1)OR(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((+ (((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))));
SELECT * FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0)))!=(((v0.c0)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT(v0.c0)))<>(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0)))!=(((v0.c0)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT(v0.c0)))<>(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0)))!=(((v0.c0)OR(v0.c0)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON QUOTE(((rt0.c0) ISNULL)) FULL OUTER JOIN vt1 ON CASE rt0.c1  WHEN rt0.c0 THEN x'a355' END COLLATE NOCASE WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(rt0.c1)))AND(x'')))OR(vt1.c0)))OR(((vt1.c1)%(v0.c0)))))OR(vt1.c0))) ORDER BY CAST(((vt1.c1)|(rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)AND(v0.c0)))OR(rt0.c1)))AND(x'')))OR(vt1.c0)))OR(((vt1.c1)%(v0.c0)))))OR(vt1.c0))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON QUOTE(((rt0.c0) ISNULL)) FULL OUTER JOIN vt1 ON CASE rt0.c1  WHEN rt0.c0 THEN x'a355' END COLLATE NOCASE ORDER BY CAST(((vt1.c1)|(rt0.c2)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON QUOTE(((rt0.c0) ISNULL)) FULL OUTER JOIN vt1 ON CASE rt0.c1  WHEN rt0.c0 THEN x'a355' END COLLATE NOCASE WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(rt0.c1)))AND(x'')))OR(vt1.c0)))OR(((vt1.c1)%(v0.c0)))))OR(vt1.c0))) ORDER BY CAST(((vt1.c1)|(rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)AND(v0.c0)))OR(rt0.c1)))AND(x'')))OR(vt1.c0)))OR(((vt1.c1)%(v0.c0)))))OR(vt1.c0))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON QUOTE(((rt0.c0) ISNULL)) FULL OUTER JOIN vt1 ON CASE rt0.c1  WHEN rt0.c0 THEN x'a355' END COLLATE NOCASE ORDER BY CAST(((vt1.c1)|(rt0.c2)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON QUOTE(((rt0.c0) ISNULL)) FULL OUTER JOIN vt1 ON CASE rt0.c1  WHEN rt0.c0 THEN x'a355' END COLLATE NOCASE WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(rt0.c1)))AND(x'')))OR(vt1.c0)))OR(((vt1.c1)%(v0.c0)))))OR(vt1.c0))) ORDER BY CAST(((vt1.c1)|(rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c1) ISNULL))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(x''))) ORDER BY vt1.c1 DESC, ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) NOT BETWEEN ((NOT (vt1.c1))) AND (((vt1.c0)%(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) ISNULL))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(x''))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC, ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) NOT BETWEEN ((NOT (vt1.c1))) AND (((vt1.c0)%(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c1) ISNULL))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(x''))) ORDER BY vt1.c1 DESC, ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) NOT BETWEEN ((NOT (vt1.c1))) AND (((vt1.c0)%(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) ISNULL))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(x''))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC, ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) NOT BETWEEN ((NOT (vt1.c1))) AND (((vt1.c0)%(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c1) ISNULL))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(x''))) ORDER BY vt1.c1 DESC, ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) NOT BETWEEN ((NOT (vt1.c1))) AND (((vt1.c0)%(vt1.c0))));
SELECT ALL * FROM vt1, v0 WHERE ((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY) ORDER BY ((v0.c0)<=(CAST(vt1.c0 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0 ORDER BY ((v0.c0)<=(CAST(vt1.c0 AS REAL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, v0 WHERE ((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY) ORDER BY ((v0.c0)<=(CAST(vt1.c0 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0 ORDER BY ((v0.c0)<=(CAST(vt1.c0 AS REAL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, v0 WHERE ((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY) ORDER BY ((v0.c0)<=(CAST(vt1.c0 AS REAL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c0)IS(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c0)IS(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c0)IS(rt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)GLOB((((rt0.c2))>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)GLOB((((rt0.c2))>((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)GLOB((((rt0.c2))>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)GLOB((((rt0.c2))>((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)GLOB((((rt0.c2))>((rt0.c2))))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON ((((((((((vt1.c0)>('')))AND(CAST(0.7657948628748141 AS INTEGER))))AND(((vt1.c1)&(vt1.c1)))))AND((((vt1.c1, vt1.c0, rt0.c1))<=((v0.c0, rt0.c0, v0.c0))))))OR(rt0.c1 COLLATE RTRIM)) RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)-(((rt0.c2) NOT NULL))) WHERE (UNICODE(highlight(-1614426732, -550362642, vt1.c0, rt0.c1))) ORDER BY rt0.c1 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(highlight(-1614426732, -550362642, vt1.c0, rt0.c1))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((((((((((vt1.c0)>('')))AND(CAST(0.7657948628748141 AS INTEGER))))AND(((vt1.c1)&(vt1.c1)))))AND((((vt1.c1, vt1.c0, rt0.c1))<=((v0.c0, rt0.c0, v0.c0))))))OR(rt0.c1 COLLATE RTRIM)) RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)-(((rt0.c2) NOT NULL))) ORDER BY rt0.c1 COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON ((((((((((vt1.c0)>('')))AND(CAST(0.7657948628748141 AS INTEGER))))AND(((vt1.c1)&(vt1.c1)))))AND((((vt1.c1, vt1.c0, rt0.c1))<=((v0.c0, rt0.c0, v0.c0))))))OR(rt0.c1 COLLATE RTRIM)) RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)-(((rt0.c2) NOT NULL))) WHERE (UNICODE(highlight(-1614426732, -550362642, vt1.c0, rt0.c1))) ORDER BY rt0.c1 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(highlight(-1614426732, -550362642, vt1.c0, rt0.c1))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((((((((((vt1.c0)>('')))AND(CAST(0.7657948628748141 AS INTEGER))))AND(((vt1.c1)&(vt1.c1)))))AND((((vt1.c1, vt1.c0, rt0.c1))<=((v0.c0, rt0.c0, v0.c0))))))OR(rt0.c1 COLLATE RTRIM)) RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)-(((rt0.c2) NOT NULL))) ORDER BY rt0.c1 COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (' XqeZb,')))=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN ((NOT (v0.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((-1938126958))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (' XqeZb,')))=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN ((NOT (v0.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((-1938126958))))) DESC);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (' XqeZb,')))=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN ((NOT (v0.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((-1938126958))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (' XqeZb,')))=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN ((NOT (v0.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((-1938126958))))) DESC);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (' XqeZb,')))=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN ((NOT (v0.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((-1938126958))))) DESC;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, 0.5722336810683607, vt1.c1))<>((vt1.c0, vt1.c1, vt1.c0))) COLLATE NOCASE COLLATE NOCASE) ORDER BY 0.20583389145982178;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, 0.5722336810683607, vt1.c1))!=((vt1.c0, vt1.c1, vt1.c0))) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY 0.20583389145982178);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, 0.5722336810683607, vt1.c1))<>((vt1.c0, vt1.c1, vt1.c0))) COLLATE NOCASE COLLATE NOCASE) ORDER BY 0.20583389145982178;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, 0.5722336810683607, vt1.c1))!=((vt1.c0, vt1.c1, vt1.c0))) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY 0.20583389145982178);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, 0.5722336810683607, vt1.c1))<>((vt1.c0, vt1.c1, vt1.c0))) COLLATE NOCASE COLLATE NOCASE) ORDER BY 0.20583389145982178;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))OR(v0.c0 COLLATE NOCASE))) ORDER BY (((x'')=(NULL)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE))OR(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY (((x'')==(NULL)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))OR(v0.c0 COLLATE NOCASE))) ORDER BY (((x'')=(NULL)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE))OR(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY (((x'')==(NULL)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))OR(v0.c0 COLLATE NOCASE))) ORDER BY (((x'')=(NULL)) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt1, v0 WHERE ((((x'', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((((0.13402749546943982)AND(rt0.c1)))AND(-1070630875)), x'')) AND ((vt1.c1, vt1.c1, CAST(0.7071320502858566 AS NUMERIC))))) ORDER BY ((((rt0.c2) ISNULL))==(563358502)) ASC;
SELECT SUM(count) FROM (SELECT (((((x'', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((((0.13402749546943982)AND(rt0.c1)))AND(-1070630875)), x'')) AND ((vt1.c1, vt1.c1, CAST(0.7071320502858566 AS NUMERIC))))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY ((((rt0.c2) ISNULL))==(563358502)) ASC);
SELECT ALL * FROM rt0, vt1, v0 WHERE ((((x'', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((((0.13402749546943982)AND(rt0.c1)))AND(-1070630875)), x'')) AND ((vt1.c1, vt1.c1, CAST(0.7071320502858566 AS NUMERIC))))) ORDER BY ((((rt0.c2) ISNULL))==(563358502)) ASC;
SELECT SUM(count) FROM (SELECT (((((x'', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((((0.13402749546943982)AND(rt0.c1)))AND(-1070630875)), x'')) AND ((vt1.c1, vt1.c1, CAST(0.7071320502858566 AS NUMERIC))))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY ((((rt0.c2) ISNULL))==(563358502)) ASC);
SELECT ALL * FROM rt0, vt1, v0 WHERE ((((x'', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((((0.13402749546943982)AND(rt0.c1)))AND(-1070630875)), x'')) AND ((vt1.c1, vt1.c1, CAST(0.7071320502858566 AS NUMERIC))))) ORDER BY ((((rt0.c2) ISNULL))==(563358502)) ASC;
SELECT ALL * FROM rt0, vt1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL * FROM rt0, vt1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL * FROM rt0, vt1, v0 WHERE (NULL);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN x'' WHEN vt1.c1 THEN x'1844' WHEN vt1.c0 THEN vt1.c1 END)==(((((x'31c5')OR(vt1.c1)))AND(vt1.c1))))) ORDER BY ((x'8dff')<<(CAST(vt1.c0 AS NUMERIC))), ((vt1.c1 COLLATE NOCASE)&((NOT (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN x'' WHEN vt1.c1 THEN x'1844' WHEN vt1.c0 THEN vt1.c1 END)=(((((x'31c5')OR(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((x'8dff')<<(CAST(vt1.c0 AS NUMERIC))), ((vt1.c1 COLLATE NOCASE)&((NOT (vt1.c1)))));
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN x'' WHEN vt1.c1 THEN x'1844' WHEN vt1.c0 THEN vt1.c1 END)==(((((x'31c5')OR(vt1.c1)))AND(vt1.c1))))) ORDER BY ((x'8dff')<<(CAST(vt1.c0 AS NUMERIC))), ((vt1.c1 COLLATE NOCASE)&((NOT (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN x'' WHEN vt1.c1 THEN x'1844' WHEN vt1.c0 THEN vt1.c1 END)=(((((x'31c5')OR(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((x'8dff')<<(CAST(vt1.c0 AS NUMERIC))), ((vt1.c1 COLLATE NOCASE)&((NOT (vt1.c1)))));
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN x'' WHEN vt1.c1 THEN x'1844' WHEN vt1.c0 THEN vt1.c1 END)==(((((x'31c5')OR(vt1.c1)))AND(vt1.c1))))) ORDER BY ((x'8dff')<<(CAST(vt1.c0 AS NUMERIC))), ((vt1.c1 COLLATE NOCASE)&((NOT (vt1.c1))));
SELECT COUNT(*) FROM rt0 WHERE (CAST('0.4213909625609621' AS REAL)) ORDER BY (~ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)), (((((rt0.c2))!=((rt0.c0)))) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c1)IS(rt0.c0)))) ASC, CASE WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)) THEN ((('-521705540', rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c2, ''))) WHEN ABS(rt0.c1) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN ((rt0.c0)<<(rt0.c2)) THEN ((rt0.c2)LIKE(rt0.c0)) ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('0.4213909625609621' AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (~ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)), (((((rt0.c2))<>((rt0.c0)))) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c1)IS(rt0.c0)))) ASC, CASE WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)) THEN ((('-521705540', rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c2, ''))) WHEN ABS(rt0.c1) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN ((rt0.c0)<<(rt0.c2)) THEN ((rt0.c2)LIKE(rt0.c0)) ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST('0.4213909625609621' AS REAL)) ORDER BY (~ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)), (((((rt0.c2))!=((rt0.c0)))) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c1)IS(rt0.c0)))) ASC, CASE WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)) THEN ((('-521705540', rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c2, ''))) WHEN ABS(rt0.c1) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN ((rt0.c0)<<(rt0.c2)) THEN ((rt0.c2)LIKE(rt0.c0)) ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('0.4213909625609621' AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (~ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)), (((((rt0.c2))<>((rt0.c0)))) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c1)IS(rt0.c0)))) ASC, CASE WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)) THEN ((('-521705540', rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c2, ''))) WHEN ABS(rt0.c1) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN ((rt0.c0)<<(rt0.c2)) THEN ((rt0.c2)LIKE(rt0.c0)) ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST('0.4213909625609621' AS REAL)) ORDER BY (~ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)), (((((rt0.c2))!=((rt0.c0)))) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c1)IS(rt0.c0)))) ASC, CASE WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)) THEN ((('-521705540', rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c2, ''))) WHEN ABS(rt0.c1) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN ((rt0.c0)<<(rt0.c2)) THEN ((rt0.c2)LIKE(rt0.c0)) ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) END DESC  NULLS FIRST;
SELECT * FROM v0, vt1 WHERE (CASE WHEN ((vt1.c0)AND(vt1.c1)) THEN (- ('uXꪌ/!j')) END) ORDER BY LIKELIHOOD(DISTINCT TRIM(vt1.c0), 0.5061464006088195);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)AND(vt1.c1)) THEN (- ('uXꪌ/!j')) END) IS TRUE)  as count FROM v0, vt1 ORDER BY LIKELIHOOD(DISTINCT TRIM(vt1.c0), 0.5061464006088195));
SELECT * FROM v0, vt1 WHERE (CASE WHEN ((vt1.c0)AND(vt1.c1)) THEN (- ('uXꪌ/!j')) END) ORDER BY LIKELIHOOD(DISTINCT TRIM(vt1.c0), 0.5061464006088195);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)AND(vt1.c1)) THEN (- ('uXꪌ/!j')) END) IS TRUE)  as count FROM v0, vt1 ORDER BY LIKELIHOOD(DISTINCT TRIM(vt1.c0), 0.5061464006088195));
SELECT * FROM v0, vt1 WHERE (CASE WHEN ((vt1.c0)AND(vt1.c1)) THEN (- ('uXꪌ/!j')) END) ORDER BY LIKELIHOOD(DISTINCT TRIM(vt1.c0), 0.5061464006088195);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY CAST(((vt1.c1) BETWEEN (-1762859485) AND ('30663318')) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(((vt1.c1) BETWEEN (-1762859485) AND ('30663318')) AS INTEGER));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY CAST(((vt1.c1) BETWEEN (-1762859485) AND ('30663318')) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(((vt1.c1) BETWEEN (-1762859485) AND ('30663318')) AS INTEGER));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY CAST(((vt1.c1) BETWEEN (-1762859485) AND ('30663318')) AS INTEGER);
SELECT * FROM v0, rt0 WHERE (((x'') BETWEEN (((rt0.c1)-(rt0.c2))) AND (rt0.c1 COLLATE BINARY))) ORDER BY (((((((v0.c0))<=((rt0.c2))))OR(((rt0.c2)&(v0.c0)))))OR(((((((((((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (((rt0.c1)-(rt0.c2))) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((v0.c0))<=((rt0.c2))))OR(((rt0.c2)&(v0.c0)))))OR(((((((((((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))) DESC);
SELECT * FROM v0, rt0 WHERE (((x'') BETWEEN (((rt0.c1)-(rt0.c2))) AND (rt0.c1 COLLATE BINARY))) ORDER BY (((((((v0.c0))<=((rt0.c2))))OR(((rt0.c2)&(v0.c0)))))OR(((((((((((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (((rt0.c1)-(rt0.c2))) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((v0.c0))<=((rt0.c2))))OR(((rt0.c2)&(v0.c0)))))OR(((((((((((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))) DESC);
SELECT * FROM v0, rt0 WHERE (((x'') BETWEEN (((rt0.c1)-(rt0.c2))) AND (rt0.c1 COLLATE BINARY))) ORDER BY (((((((v0.c0))<=((rt0.c2))))OR(((rt0.c2)&(v0.c0)))))OR(((((((((((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))) DESC;
SELECT * FROM vt1, rt0 WHERE (rt0.c2) ORDER BY (((((((((NOT (rt0.c1)))OR((+ (vt1.c1)))))AND((rt0.c1 IN ()))))AND((((rt0.c2, vt1.c0, NULL, rt0.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c1, rt0.c1, vt1.c0))))))AND(((rt0.c2)=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((((NOT (rt0.c1)))OR((+ (vt1.c1)))))AND((rt0.c1 IN ()))))AND((((rt0.c2, vt1.c0, NULL, rt0.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c1, rt0.c1, vt1.c0))))))AND(((rt0.c2)==(rt0.c0)))));
SELECT * FROM vt1, rt0 WHERE (rt0.c2) ORDER BY (((((((((NOT (rt0.c1)))OR((+ (vt1.c1)))))AND((rt0.c1 IN ()))))AND((((rt0.c2, vt1.c0, NULL, rt0.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c1, rt0.c1, vt1.c0))))))AND(((rt0.c2)=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((((NOT (rt0.c1)))OR((+ (vt1.c1)))))AND((rt0.c1 IN ()))))AND((((rt0.c2, vt1.c0, NULL, rt0.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c1, rt0.c1, vt1.c0))))))AND(((rt0.c2)==(rt0.c0)))));
SELECT ALL * FROM v0, rt0 WHERE (rt0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c2 COLLATE RTRIM);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (((CASE WHEN vt1.c1 THEN x'' WHEN 'YMh' THEN v0.c0 WHEN vt1.c0 THEN rt0.c0 END)IS NOT(vt1.c1 COLLATE NOCASE))) ORDER BY '' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c1 THEN x'' WHEN 'YMh' THEN v0.c0 WHEN vt1.c0 THEN rt0.c0 END)IS NOT(vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY '' ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (((CASE WHEN vt1.c1 THEN x'' WHEN 'YMh' THEN v0.c0 WHEN vt1.c0 THEN rt0.c0 END)IS NOT(vt1.c1 COLLATE NOCASE))) ORDER BY '' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c1 THEN x'' WHEN 'YMh' THEN v0.c0 WHEN vt1.c0 THEN rt0.c0 END)IS NOT(vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY '' ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (((CASE WHEN vt1.c1 THEN x'' WHEN 'YMh' THEN v0.c0 WHEN vt1.c0 THEN rt0.c0 END)IS NOT(vt1.c1 COLLATE NOCASE))) ORDER BY '' ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0, vt1 NOT INDEXED WHERE (((((vt1.c1) NOTNULL))-(TYPEOF(rt0.c1)))) ORDER BY ((((v0.c0) IS TRUE))>=(((rt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOTNULL))-(TYPEOF(rt0.c1)))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((((v0.c0) IS TRUE))>=(((rt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT COUNT(*) FROM rt0, v0, vt1 NOT INDEXED WHERE (((((vt1.c1) NOTNULL))-(TYPEOF(rt0.c1)))) ORDER BY ((((v0.c0) IS TRUE))>=(((rt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOTNULL))-(TYPEOF(rt0.c1)))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((((v0.c0) IS TRUE))>=(((rt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT COUNT(*) FROM rt0, v0, vt1 NOT INDEXED WHERE (((((vt1.c1) NOTNULL))-(TYPEOF(rt0.c1)))) ORDER BY ((((v0.c0) IS TRUE))>=(((rt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))));
SELECT * FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c2)|(rt0.c1)))))OR('J1')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c2)|(rt0.c1)))))OR('J1'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c2)|(rt0.c1)))))OR('J1')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c2)|(rt0.c1)))))OR('J1'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c2)|(rt0.c1)))))OR('J1')));
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) IN ()));
SELECT ALL * FROM rt0 WHERE (CASE ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1))  WHEN (rt0.c1 IN (rt0.c2)) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1))  WHEN (rt0.c1 IN (rt0.c2)) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1))  WHEN (rt0.c1 IN (rt0.c2)) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1))  WHEN (rt0.c1 IN (rt0.c2)) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1))  WHEN (rt0.c1 IN (rt0.c2)) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) END);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(TRIM(DISTINCT vt1.c1, 6.91610166E8) AS BLOB)) ORDER BY (((rt0.c2)|(rt0.c1)) IN (CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT vt1.c1, 6.91610166E8) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2)|(rt0.c1)) IN (CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(TRIM(DISTINCT vt1.c1, 6.91610166E8) AS BLOB)) ORDER BY (((rt0.c2)|(rt0.c1)) IN (CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT vt1.c1, 6.91610166E8) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2)|(rt0.c1)) IN (CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(TRIM(DISTINCT vt1.c1, 6.91610166E8) AS BLOB)) ORDER BY (((rt0.c2)|(rt0.c1)) IN (CAST(rt0.c1 AS INTEGER)));
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (((UPPER(vt1.c0))OR(((((((((rt0.c0)AND(0Xffffffffa573be2f)))OR(rt0.c2)))OR(rt0.c0)))OR(vt1.c1))))) ORDER BY (NOT (((('4Eꪁ')) BETWEEN ((vt1.c1)) AND ((rt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UPPER(vt1.c0))OR(((((((((rt0.c0)AND(0xffffffffa573be2f)))OR(rt0.c2)))OR(rt0.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (NOT (((('4Eꪁ')) BETWEEN ((vt1.c1)) AND ((rt0.c2))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (((UPPER(vt1.c0))OR(((((((((rt0.c0)AND(0Xffffffffa573be2f)))OR(rt0.c2)))OR(rt0.c0)))OR(vt1.c1))))) ORDER BY (NOT (((('4Eꪁ')) BETWEEN ((vt1.c1)) AND ((rt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UPPER(vt1.c0))OR(((((((((rt0.c0)AND(0xffffffffa573be2f)))OR(rt0.c2)))OR(rt0.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (NOT (((('4Eꪁ')) BETWEEN ((vt1.c1)) AND ((rt0.c2))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (((UPPER(vt1.c0))OR(((((((((rt0.c0)AND(0Xffffffffa573be2f)))OR(rt0.c2)))OR(rt0.c0)))OR(vt1.c1))))) ORDER BY (NOT (((('4Eꪁ')) BETWEEN ((vt1.c1)) AND ((rt0.c2))))) DESC  NULLS FIRST;
SELECT * FROM rt0, vt1, v0 WHERE ((((rt0.c2 IN (rt0.c2, rt0.c0))) IS FALSE)) ORDER BY ((CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 END)GLOB((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c2, rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY ((CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 END)GLOB((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))))) ASC  NULLS LAST);
SELECT * FROM rt0, vt1, v0 WHERE ((((rt0.c2 IN (rt0.c2, rt0.c0))) IS FALSE)) ORDER BY ((CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 END)GLOB((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c2, rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY ((CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 END)GLOB((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))))) ASC  NULLS LAST);
SELECT * FROM rt0, vt1, v0 WHERE ((((rt0.c2 IN (rt0.c2, rt0.c0))) IS FALSE)) ORDER BY ((CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 END)GLOB((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((((v0.c0 IN ()))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))AND(NULLIF(DISTINCT v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))AND(NULLIF(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0 IN ()))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))AND(NULLIF(DISTINCT v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))AND(NULLIF(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0 IN ()))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))AND(NULLIF(DISTINCT v0.c0, v0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN ((rt0.c1 IN ())) AND (((((((((rt0.c1)OR(rt0.c1)))AND('391117087')))AND(rt0.c1)))OR(rt0.c0))))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN ((rt0.c1 IN ())) AND (((((((((rt0.c1)OR(rt0.c1)))AND('391117087')))AND(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN ((rt0.c1 IN ())) AND (((((((((rt0.c1)OR(rt0.c1)))AND('391117087')))AND(rt0.c1)))OR(rt0.c0))))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN ((rt0.c1 IN ())) AND (((((((((rt0.c1)OR(rt0.c1)))AND('391117087')))AND(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN ((rt0.c1 IN ())) AND (((((((((rt0.c1)OR(rt0.c1)))AND('391117087')))AND(rt0.c1)))OR(rt0.c0))))) ORDER BY rt0.c0 DESC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((CAST(rt0.c2 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((CAST(rt0.c2 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((CAST(rt0.c2 AS BLOB)) NOTNULL));
SELECT * FROM v0, rt0 WHERE (CASE WHEN (+ (rt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c2 END END) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE WHEN (+ (rt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c2 END END) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE WHEN (+ (rt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c2 END END);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON '' WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON '');
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON '' WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON '');
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON '' WHERE (rt0.c2);
SELECT ALL * FROM rt0, v0, vt1 WHERE ((- (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY ((((((vt1.c1)AND(x'')))AND(rt0.c0))) BETWEEN ('T') AND (((((rt0.c0)OR(v0.c0)))OR(vt1.c0))))  NULLS FIRST, CAST(rt0.c1 AS TEXT) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((((((vt1.c1)AND(x'')))AND(rt0.c0))) BETWEEN ('T') AND (((((rt0.c0)OR(v0.c0)))OR(vt1.c0))))  NULLS FIRST, CAST(rt0.c1 AS TEXT) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0, v0, vt1 WHERE ((- (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY ((((((vt1.c1)AND(x'')))AND(rt0.c0))) BETWEEN ('T') AND (((((rt0.c0)OR(v0.c0)))OR(vt1.c0))))  NULLS FIRST, CAST(rt0.c1 AS TEXT) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((((((vt1.c1)AND(x'')))AND(rt0.c0))) BETWEEN ('T') AND (((((rt0.c0)OR(v0.c0)))OR(vt1.c0))))  NULLS FIRST, CAST(rt0.c1 AS TEXT) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0, v0, vt1 WHERE ((- (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY ((((((vt1.c1)AND(x'')))AND(rt0.c0))) BETWEEN ('T') AND (((((rt0.c0)OR(v0.c0)))OR(vt1.c0))))  NULLS FIRST, CAST(rt0.c1 AS TEXT) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON '-626674238' WHERE ((('1144403711')<(((vt1.c1)>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((('1144403711')<(((vt1.c1)>(rt0.c2))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON '-626674238');
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON '-626674238' WHERE ((('1144403711')<(((vt1.c1)>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((('1144403711')<(((vt1.c1)>(rt0.c2))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON '-626674238');
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON '-626674238' WHERE ((('1144403711')<(((vt1.c1)>(rt0.c2)))));
SELECT ALL * FROM v0, vt1, rt0 WHERE (CAST((NOT (rt0.c0)) AS TEXT)) ORDER BY ((rt0.c2 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((rt0.c2 IN ()) IN ())  NULLS FIRST);
SELECT ALL * FROM v0, vt1, rt0 WHERE (CAST((NOT (rt0.c0)) AS TEXT)) ORDER BY ((rt0.c2 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((rt0.c2 IN ()) IN ())  NULLS FIRST);
SELECT ALL * FROM v0, vt1, rt0 WHERE (CAST((NOT (rt0.c0)) AS TEXT)) ORDER BY ((rt0.c2 IN ()) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((((rt0.c1, vt1.c0, rt0.c2))==((rt0.c0, vt1.c1, rt0.c2))))>=(((rt0.c0) IS TRUE))) RIGHT OUTER JOIN v0 ON ((CAST(rt0.c2 AS REAL))IS(NULL COLLATE BINARY)) WHERE ((((NOT (rt0.c2))) IS FALSE)) ORDER BY NULLIF(0.9965828340036059, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((((rt0.c1, vt1.c0, rt0.c2))=((rt0.c0, vt1.c1, rt0.c2))))>=(((rt0.c0) IS TRUE))) RIGHT OUTER JOIN v0 ON ((CAST(rt0.c2 AS REAL))IS(NULL COLLATE BINARY)) ORDER BY NULLIF(0.9965828340036059, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((((rt0.c1, vt1.c0, rt0.c2))==((rt0.c0, vt1.c1, rt0.c2))))>=(((rt0.c0) IS TRUE))) RIGHT OUTER JOIN v0 ON ((CAST(rt0.c2 AS REAL))IS(NULL COLLATE BINARY)) WHERE ((((NOT (rt0.c2))) IS FALSE)) ORDER BY NULLIF(0.9965828340036059, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((((rt0.c1, vt1.c0, rt0.c2))=((rt0.c0, vt1.c1, rt0.c2))))>=(((rt0.c0) IS TRUE))) RIGHT OUTER JOIN v0 ON ((CAST(rt0.c2 AS REAL))IS(NULL COLLATE BINARY)) ORDER BY NULLIF(0.9965828340036059, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((((rt0.c1, vt1.c0, rt0.c2))==((rt0.c0, vt1.c1, rt0.c2))))>=(((rt0.c0) IS TRUE))) RIGHT OUTER JOIN v0 ON ((CAST(rt0.c2 AS REAL))IS(NULL COLLATE BINARY)) WHERE ((((NOT (rt0.c2))) IS FALSE)) ORDER BY NULLIF(0.9965828340036059, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END);
SELECT COUNT(*) FROM vt1, rt0 NATURAL JOIN v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt1, rt0 NATURAL JOIN v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt1, rt0 NATURAL JOIN v0 WHERE (rt0.c0);
SELECT ALL * FROM vt1, rt0, v0 WHERE ((((((rt0.c2))==((rt0.c1))))<=((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))=((rt0.c1))))<=((- (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL * FROM vt1, rt0, v0 WHERE ((((((rt0.c2))==((rt0.c1))))<=((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))=((rt0.c1))))<=((- (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL * FROM vt1, rt0, v0 WHERE ((((((rt0.c2))==((rt0.c1))))<=((- (rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0)))LIKE(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))LIKE(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0)))LIKE(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))LIKE(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0)))LIKE(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (((LIKELY(v0.c0)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((LIKELY(v0.c0)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (vt1.c0))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (((LIKELY(v0.c0)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((LIKELY(v0.c0)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (vt1.c0))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (((LIKELY(v0.c0)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (vt1.c0)));
SELECT ALL COUNT(*) FROM v0 WHERE (((x'' COLLATE NOCASE)LIKE((v0.c0 IN (v0.c0))))) ORDER BY ((((v0.c0)+(v0.c0)))&(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE NOCASE)LIKE((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)+(v0.c0)))&(v0.c0)) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((x'' COLLATE NOCASE)LIKE((v0.c0 IN (v0.c0))))) ORDER BY ((((v0.c0)+(v0.c0)))&(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE NOCASE)LIKE((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)+(v0.c0)))&(v0.c0)) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((x'' COLLATE NOCASE)LIKE((v0.c0 IN (v0.c0))))) ORDER BY ((((v0.c0)+(v0.c0)))&(v0.c0)) DESC;
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((((((x'')OR(((rt0.c1) ISNULL))))AND(rt0.c0)))AND(x'f472')))OR((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR(((rt0.c1) ISNULL))))AND(rt0.c0)))AND(x'f472')))OR((NOT (rt0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((((((x'')OR(((rt0.c1) ISNULL))))AND(rt0.c0)))AND(x'f472')))OR((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR(((rt0.c1) ISNULL))))AND(rt0.c0)))AND(x'f472')))OR((NOT (rt0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((((((x'')OR(((rt0.c1) ISNULL))))AND(rt0.c0)))AND(x'f472')))OR((NOT (rt0.c0)))));
SELECT * FROM vt1, v0 WHERE (((((vt1.c1) BETWEEN (NULL) AND (vt1.c1)))<=(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) BETWEEN (NULL) AND (vt1.c1)))<=(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((((vt1.c1) BETWEEN (NULL) AND (vt1.c1)))<=(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) BETWEEN (NULL) AND (vt1.c1)))<=(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((((vt1.c1) BETWEEN (NULL) AND (vt1.c1)))<=(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (TRIM(DISTINCT v0.c0, v0.c0) IN ())  NULLS FIRST, ((((((v0.c0)>=(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(CAST(v0.c0 AS BLOB))), (((v0.c0)==(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (TRIM(DISTINCT v0.c0, v0.c0) IN ())  NULLS FIRST, ((((((v0.c0)>=(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(CAST(v0.c0 AS BLOB))), (((v0.c0)==(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (TRIM(DISTINCT v0.c0, v0.c0) IN ())  NULLS FIRST, ((((((v0.c0)>=(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(CAST(v0.c0 AS BLOB))), (((v0.c0)==(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (TRIM(DISTINCT v0.c0, v0.c0) IN ())  NULLS FIRST, ((((((v0.c0)>=(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(CAST(v0.c0 AS BLOB))), (((v0.c0)==(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (TRIM(DISTINCT v0.c0, v0.c0) IN ())  NULLS FIRST, ((((((v0.c0)>=(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(CAST(v0.c0 AS BLOB))), (((v0.c0)==(v0.c0)) IN ());
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL));
SELECT * FROM vt1, rt0, v0 WHERE ((rt0.c1 COLLATE BINARY IN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))) ORDER BY (((~ (rt0.c0)))>=(((x'')<>(vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE BINARY IN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0, v0 ORDER BY (((~ (rt0.c0)))>=(((x'')!=(vt1.c1))))  NULLS LAST);
SELECT * FROM vt1, rt0, v0 WHERE ((rt0.c1 COLLATE BINARY IN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))) ORDER BY (((~ (rt0.c0)))>=(((x'')<>(vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE BINARY IN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0, v0 ORDER BY (((~ (rt0.c0)))>=(((x'')!=(vt1.c1))))  NULLS LAST);
SELECT * FROM vt1, rt0, v0 WHERE ((rt0.c1 COLLATE BINARY IN (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))) ORDER BY (((~ (rt0.c0)))>=(((x'')<>(vt1.c1))))  NULLS LAST;
SELECT * FROM v0, vt1 WHERE ((- (((vt1.c0)GLOB(v0.c0))))) ORDER BY ((vt1.c1 COLLATE BINARY) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((vt1.c1 COLLATE BINARY) ISNULL)  NULLS FIRST);
SELECT * FROM v0, vt1 WHERE ((- (((vt1.c0)GLOB(v0.c0))))) ORDER BY ((vt1.c1 COLLATE BINARY) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((vt1.c1 COLLATE BINARY) ISNULL)  NULLS FIRST);
SELECT * FROM v0, vt1 WHERE ((- (((vt1.c0)GLOB(v0.c0))))) ORDER BY ((vt1.c1 COLLATE BINARY) ISNULL)  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (0xffffffffc02f7825);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffc02f7825) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (0xffffffffc02f7825);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffc02f7825) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (0xffffffffc02f7825);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CAST(rt0.c1 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CAST(rt0.c1 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CAST(rt0.c1 COLLATE BINARY AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (CASE WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (CASE WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (CASE WHEN rt0.c0 THEN rt0.c0 END)));
SELECT ALL * FROM v0, vt1 NOT INDEXED WHERE (CAST((NOT (vt1.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 NOT INDEXED WHERE (CAST((NOT (vt1.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 NOT INDEXED WHERE (CAST((NOT (vt1.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('T') ORDER BY vt1.c1;
SELECT SUM(count) FROM (SELECT ALL (('T') IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c1);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('T') ORDER BY vt1.c1;
SELECT SUM(count) FROM (SELECT ALL (('T') IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c1);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('T') ORDER BY vt1.c1;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0)) BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((((((((((0.10733423736421388)OR(0.5552577824738408)))AND(rt0.c0)))OR(rt0.c2)))OR(v0.c0))))) WHERE (CAST((((0Xffffffffcbf5529d))<=((rt0.c2))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((0Xffffffffcbf5529d))<=((rt0.c2))) AS BLOB)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0)) BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((((((((((0.10733423736421388)OR(0.5552577824738408)))AND(rt0.c0)))OR(rt0.c2)))OR(v0.c0))))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0)) BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((((((((((0.10733423736421388)OR(0.5552577824738408)))AND(rt0.c0)))OR(rt0.c2)))OR(v0.c0))))) WHERE (CAST((((0Xffffffffcbf5529d))<=((rt0.c2))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((0Xffffffffcbf5529d))<=((rt0.c2))) AS BLOB)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0)) BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((((((((((0.10733423736421388)OR(0.5552577824738408)))AND(rt0.c0)))OR(rt0.c2)))OR(v0.c0))))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0)) BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((((((((((0.10733423736421388)OR(0.5552577824738408)))AND(rt0.c0)))OR(rt0.c2)))OR(v0.c0))))) WHERE (CAST((((0Xffffffffcbf5529d))<=((rt0.c2))) AS BLOB));
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (NULL) ORDER BY 0.11509666879919667  NULLS FIRST, LIKELY(DISTINCT (NOT (vt1.c1)))  NULLS FIRST, (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY 0.11509666879919667  NULLS FIRST, LIKELY(DISTINCT (NOT (vt1.c1)))  NULLS FIRST, (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (NULL) ORDER BY 0.11509666879919667  NULLS FIRST, LIKELY(DISTINCT (NOT (vt1.c1)))  NULLS FIRST, (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY 0.11509666879919667  NULLS FIRST, LIKELY(DISTINCT (NOT (vt1.c1)))  NULLS FIRST, (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (NULL) ORDER BY 0.11509666879919667  NULLS FIRST, LIKELY(DISTINCT (NOT (vt1.c1)))  NULLS FIRST, (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) IS FALSE))>>(((rt0.c0)>>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))>>(((rt0.c0)>>(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) IS FALSE))>>(((rt0.c0)>>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))>>(((rt0.c0)>>(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) IS FALSE))>>(((rt0.c0)>>(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((((((((rt0.c2)*(rt0.c2)))OR((rt0.c1 IN ()))))AND(x'')))AND(rt0.c1)))OR(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY ((((rt0.c1)AND(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN 0.1785844632635354 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)*(rt0.c2)))OR((rt0.c1 IN ()))))AND(x'')))AND(rt0.c1)))OR(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((((rt0.c1)AND(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN 0.1785844632635354 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((((((((rt0.c2)*(rt0.c2)))OR((rt0.c1 IN ()))))AND(x'')))AND(rt0.c1)))OR(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY ((((rt0.c1)AND(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN 0.1785844632635354 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)*(rt0.c2)))OR((rt0.c1 IN ()))))AND(x'')))AND(rt0.c1)))OR(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((((rt0.c1)AND(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN 0.1785844632635354 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((((((((rt0.c2)*(rt0.c2)))OR((rt0.c1 IN ()))))AND(x'')))AND(rt0.c1)))OR(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY ((((rt0.c1)AND(rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN 0.1785844632635354 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 END)) DESC;
SELECT ALL * FROM v0, rt0 NATURAL JOIN vt1 WHERE (vt1.c1) ORDER BY CASE 0.2635164811826173  WHEN CAST(vt1.c1 AS REAL) THEN ((vt1.c1) BETWEEN (v0.c0) AND (vt1.c1)) END DESC, v0.c0 DESC  NULLS FIRST, x'65ed' DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt1 ORDER BY CASE 0.2635164811826173  WHEN CAST(vt1.c1 AS REAL) THEN ((vt1.c1) BETWEEN (v0.c0) AND (vt1.c1)) END DESC, v0.c0 DESC  NULLS FIRST, x'65ed' DESC);
SELECT ALL * FROM v0, rt0 NATURAL JOIN vt1 WHERE (vt1.c1) ORDER BY CASE 0.2635164811826173  WHEN CAST(vt1.c1 AS REAL) THEN ((vt1.c1) BETWEEN (v0.c0) AND (vt1.c1)) END DESC, v0.c0 DESC  NULLS FIRST, x'65ed' DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt1 ORDER BY CASE 0.2635164811826173  WHEN CAST(vt1.c1 AS REAL) THEN ((vt1.c1) BETWEEN (v0.c0) AND (vt1.c1)) END DESC, v0.c0 DESC  NULLS FIRST, x'65ed' DESC);
SELECT ALL * FROM v0, rt0 NATURAL JOIN vt1 WHERE (vt1.c1) ORDER BY CASE 0.2635164811826173  WHEN CAST(vt1.c1 AS REAL) THEN ((vt1.c1) BETWEEN (v0.c0) AND (vt1.c1)) END DESC, v0.c0 DESC  NULLS FIRST, x'65ed' DESC;
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END IN ('c', (rt0.c1 IN ())))) ORDER BY CASE ''  WHEN ((rt0.c0)%(v0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.0919816250679798) WHEN -1248394800 THEN ((vt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((vt1.c1) BETWEEN (v0.c0) AND (vt1.c1)) THEN CAST(x'1a09' AS INTEGER) ELSE (vt1.c0 IN (rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END IN ('c', (rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY CASE ''  WHEN ((rt0.c0)%(v0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.0919816250679798) WHEN -1248394800 THEN ((vt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((vt1.c1) BETWEEN (v0.c0) AND (vt1.c1)) THEN CAST(x'1a09' AS INTEGER) ELSE (vt1.c0 IN (rt0.c0)) END DESC);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END IN ('c', (rt0.c1 IN ())))) ORDER BY CASE ''  WHEN ((rt0.c0)%(v0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.0919816250679798) WHEN -1248394800 THEN ((vt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((vt1.c1) BETWEEN (v0.c0) AND (vt1.c1)) THEN CAST(x'1a09' AS INTEGER) ELSE (vt1.c0 IN (rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END IN ('c', (rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY CASE ''  WHEN ((rt0.c0)%(v0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.0919816250679798) WHEN -1248394800 THEN ((vt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((vt1.c1) BETWEEN (v0.c0) AND (vt1.c1)) THEN CAST(x'1a09' AS INTEGER) ELSE (vt1.c0 IN (rt0.c0)) END DESC);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END IN ('c', (rt0.c1 IN ())))) ORDER BY CASE ''  WHEN ((rt0.c0)%(v0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.0919816250679798) WHEN -1248394800 THEN ((vt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((vt1.c1) BETWEEN (v0.c0) AND (vt1.c1)) THEN CAST(x'1a09' AS INTEGER) ELSE (vt1.c0 IN (rt0.c0)) END DESC;
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (CASE WHEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)) THEN CASE vt1.c0  WHEN vt1.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 END ELSE CAST(rt0.c2 AS NUMERIC) END) ORDER BY (NOT ((vt1.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)) THEN CASE vt1.c0  WHEN vt1.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 END ELSE CAST(rt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (NOT ((vt1.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (CASE WHEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)) THEN CASE vt1.c0  WHEN vt1.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 END ELSE CAST(rt0.c2 AS NUMERIC) END) ORDER BY (NOT ((vt1.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)) THEN CASE vt1.c0  WHEN vt1.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 END ELSE CAST(rt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (NOT ((vt1.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (CASE WHEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)) THEN CASE vt1.c0  WHEN vt1.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 END ELSE CAST(rt0.c2 AS NUMERIC) END) ORDER BY (NOT ((vt1.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((0.7682445791718779))>((((1.345806387E9) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((0.7682445791718779))>((((1.345806387E9) NOTNULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((0.7682445791718779))>((((1.345806387E9) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((0.7682445791718779))>((((1.345806387E9) NOTNULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((0.7682445791718779))>((((1.345806387E9) NOTNULL)))));
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2)IS(rt0.c2))) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS(rt0.c2))) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (rt0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2)IS(rt0.c2))) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS(rt0.c2))) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (rt0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2)IS(rt0.c2))) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (rt0.c0)));
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN vt1 ON CASE 0.7192247241581318 COLLATE NOCASE  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((vt1.c1)>(vt1.c0)) END WHERE ((- ((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt1 ON CASE 0.7192247241581318 COLLATE NOCASE  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((vt1.c1)>(vt1.c0)) END);
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN vt1 ON CASE 0.7192247241581318 COLLATE NOCASE  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((vt1.c1)>(vt1.c0)) END WHERE ((- ((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt1 ON CASE 0.7192247241581318 COLLATE NOCASE  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((vt1.c1)>(vt1.c0)) END);
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN vt1 ON CASE 0.7192247241581318 COLLATE NOCASE  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((vt1.c1)>(vt1.c0)) END WHERE ((- ((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c2 COLLATE NOCASE END) ORDER BY ((((rt0.c1) IS TRUE)) BETWEEN (((v0.c0)>=(rt0.c0))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1) IS TRUE)) BETWEEN (((v0.c0)>=(rt0.c0))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c2 COLLATE NOCASE END) ORDER BY ((((rt0.c1) IS TRUE)) BETWEEN (((v0.c0)>=(rt0.c0))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1) IS TRUE)) BETWEEN (((v0.c0)>=(rt0.c0))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c2 COLLATE NOCASE END) ORDER BY ((((rt0.c1) IS TRUE)) BETWEEN (((v0.c0)>=(rt0.c0))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE ((((rt0.c2 COLLATE RTRIM, ((rt0.c2)/(rt0.c0)), ((vt1.c0) NOT NULL)))>=((((vt1.c1) NOTNULL), CAST(rt0.c0 AS TEXT), ((rt0.c2)OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE RTRIM, ((rt0.c2)/(rt0.c0)), ((vt1.c0) NOT NULL)))>=((((vt1.c1) NOTNULL), CAST(rt0.c0 AS TEXT), ((rt0.c2)OR(vt1.c0)))))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE ((((rt0.c2 COLLATE RTRIM, ((rt0.c2)/(rt0.c0)), ((vt1.c0) NOT NULL)))>=((((vt1.c1) NOTNULL), CAST(rt0.c0 AS TEXT), ((rt0.c2)OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE RTRIM, ((rt0.c2)/(rt0.c0)), ((vt1.c0) NOT NULL)))>=((((vt1.c1) NOTNULL), CAST(rt0.c0 AS TEXT), ((rt0.c2)OR(vt1.c0)))))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE ((((rt0.c2 COLLATE RTRIM, ((rt0.c2)/(rt0.c0)), ((vt1.c0) NOT NULL)))>=((((vt1.c1) NOTNULL), CAST(rt0.c0 AS TEXT), ((rt0.c2)OR(vt1.c0))))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON (((vt1.c1)) NOT BETWEEN ((((rt0.c0)>=(v0.c0)))) AND ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))) INNER JOIN rt0 ON (((NULL) BETWEEN (rt0.c1) AND (vt1.c0)) IN (((rt0.c2) IS FALSE), '', (v0.c0 IN (v0.c0)))) WHERE ((((IFNULL(DISTINCT vt1.c1, vt1.c0)))!=(((NOT (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((IFNULL(DISTINCT vt1.c1, vt1.c0)))!=(((NOT (v0.c0)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (((vt1.c1)) NOT BETWEEN ((((rt0.c0)>=(v0.c0)))) AND ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))) INNER JOIN rt0 ON (((NULL) BETWEEN (rt0.c1) AND (vt1.c0)) IN (((rt0.c2) IS FALSE), '', (v0.c0 IN (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON (((vt1.c1)) NOT BETWEEN ((((rt0.c0)>=(v0.c0)))) AND ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))) INNER JOIN rt0 ON (((NULL) BETWEEN (rt0.c1) AND (vt1.c0)) IN (((rt0.c2) IS FALSE), '', (v0.c0 IN (v0.c0)))) WHERE ((((IFNULL(DISTINCT vt1.c1, vt1.c0)))!=(((NOT (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((IFNULL(DISTINCT vt1.c1, vt1.c0)))!=(((NOT (v0.c0)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (((vt1.c1)) NOT BETWEEN ((((rt0.c0)>=(v0.c0)))) AND ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))) INNER JOIN rt0 ON (((NULL) BETWEEN (rt0.c1) AND (vt1.c0)) IN (((rt0.c2) IS FALSE), '', (v0.c0 IN (v0.c0)))));
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN ((((((((rt0.c0)OR(vt1.c1)))AND(v0.c0)))AND('-1614426732')))OR(v0.c0)) WHEN CHANGES() THEN TYPEOF(DISTINCT vt1.c1) WHEN NULL THEN (((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c0)) AND ((vt1.c1, rt0.c1, 0.6206198261991518))) ELSE ((v0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c0 IN ()) THEN ((((((((rt0.c0)OR(vt1.c1)))AND(v0.c0)))AND('-1614426732')))OR(v0.c0)) WHEN CHANGES() THEN TYPEOF(DISTINCT vt1.c1) WHEN NULL THEN (((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c0)) AND ((vt1.c1, rt0.c1, 0.6206198261991518))) ELSE ((v0.c0) ISNULL) END) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN ((((((((rt0.c0)OR(vt1.c1)))AND(v0.c0)))AND('-1614426732')))OR(v0.c0)) WHEN CHANGES() THEN TYPEOF(DISTINCT vt1.c1) WHEN NULL THEN (((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c0)) AND ((vt1.c1, rt0.c1, 0.6206198261991518))) ELSE ((v0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c0 IN ()) THEN ((((((((rt0.c0)OR(vt1.c1)))AND(v0.c0)))AND('-1614426732')))OR(v0.c0)) WHEN CHANGES() THEN TYPEOF(DISTINCT vt1.c1) WHEN NULL THEN (((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c0)) AND ((vt1.c1, rt0.c1, 0.6206198261991518))) ELSE ((v0.c0) ISNULL) END) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN ((((((((rt0.c0)OR(vt1.c1)))AND(v0.c0)))AND('-1614426732')))OR(v0.c0)) WHEN CHANGES() THEN TYPEOF(DISTINCT vt1.c1) WHEN NULL THEN (((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c0)) AND ((vt1.c1, rt0.c1, 0.6206198261991518))) ELSE ((v0.c0) ISNULL) END);
SELECT * FROM rt0, vt1, v0 WHERE ((((((- (vt1.c1)))AND((vt1.c0 IN (vt1.c1)))))AND(rt0.c0 COLLATE BINARY))) ORDER BY NULL COLLATE BINARY, ((CAST(rt0.c0 AS TEXT))%(CAST(rt0.c1 AS TEXT))), (((rt0.c0, vt1.c0, v0.c0, vt1.c1, rt0.c1)) NOT BETWEEN ((ABS(vt1.c0), '320635800', v0.c0 COLLATE RTRIM, ((vt1.c1) BETWEEN (vt1.c1) AND (v0.c0)), (v0.c0 IN ()))) AND ((((((rt0.c2)OR(-873114979)))AND(vt1.c1)), 0.7071320502858566, ((rt0.c2) NOTNULL), ((vt1.c1)==(vt1.c0)), CAST(vt1.c1 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt1.c1)))AND((vt1.c0 IN (vt1.c1)))))AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY NULL COLLATE BINARY, ((CAST(rt0.c0 AS TEXT))%(CAST(rt0.c1 AS TEXT))), (((rt0.c0, vt1.c0, v0.c0, vt1.c1, rt0.c1)) NOT BETWEEN ((ABS(vt1.c0), '320635800', v0.c0 COLLATE RTRIM, ((vt1.c1) BETWEEN (vt1.c1) AND (v0.c0)), (v0.c0 IN ()))) AND ((((((rt0.c2)OR(-873114979)))AND(vt1.c1)), 0.7071320502858566, ((rt0.c2) NOTNULL), ((vt1.c1)==(vt1.c0)), CAST(vt1.c1 AS REAL))))  NULLS LAST);
SELECT * FROM rt0, vt1, v0 WHERE ((((((- (vt1.c1)))AND((vt1.c0 IN (vt1.c1)))))AND(rt0.c0 COLLATE BINARY))) ORDER BY NULL COLLATE BINARY, ((CAST(rt0.c0 AS TEXT))%(CAST(rt0.c1 AS TEXT))), (((rt0.c0, vt1.c0, v0.c0, vt1.c1, rt0.c1)) NOT BETWEEN ((ABS(vt1.c0), '320635800', v0.c0 COLLATE RTRIM, ((vt1.c1) BETWEEN (vt1.c1) AND (v0.c0)), (v0.c0 IN ()))) AND ((((((rt0.c2)OR(-873114979)))AND(vt1.c1)), 0.7071320502858566, ((rt0.c2) NOTNULL), ((vt1.c1)==(vt1.c0)), CAST(vt1.c1 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt1.c1)))AND((vt1.c0 IN (vt1.c1)))))AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY NULL COLLATE BINARY, ((CAST(rt0.c0 AS TEXT))%(CAST(rt0.c1 AS TEXT))), (((rt0.c0, vt1.c0, v0.c0, vt1.c1, rt0.c1)) NOT BETWEEN ((ABS(vt1.c0), '320635800', v0.c0 COLLATE RTRIM, ((vt1.c1) BETWEEN (vt1.c1) AND (v0.c0)), (v0.c0 IN ()))) AND ((((((rt0.c2)OR(-873114979)))AND(vt1.c1)), 0.7071320502858566, ((rt0.c2) NOTNULL), ((vt1.c1)==(vt1.c0)), CAST(vt1.c1 AS REAL))))  NULLS LAST);
SELECT * FROM rt0, vt1, v0 WHERE ((((((- (vt1.c1)))AND((vt1.c0 IN (vt1.c1)))))AND(rt0.c0 COLLATE BINARY))) ORDER BY NULL COLLATE BINARY, ((CAST(rt0.c0 AS TEXT))%(CAST(rt0.c1 AS TEXT))), (((rt0.c0, vt1.c0, v0.c0, vt1.c1, rt0.c1)) NOT BETWEEN ((ABS(vt1.c0), '320635800', v0.c0 COLLATE RTRIM, ((vt1.c1) BETWEEN (vt1.c1) AND (v0.c0)), (v0.c0 IN ()))) AND ((((((rt0.c2)OR(-873114979)))AND(vt1.c1)), 0.7071320502858566, ((rt0.c2) NOTNULL), ((vt1.c1)==(vt1.c0)), CAST(vt1.c1 AS REAL))))  NULLS LAST;
SELECT * FROM v0 WHERE (CAST(((v0.c0)<=(v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)<=(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((v0.c0)<=(v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)<=(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((v0.c0)<=(v0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((IFNULL(DISTINCT rt0.c1, rt0.c2)) NOT BETWEEN (rt0.c0) AND (IFNULL(DISTINCT rt0.c0, vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt0.c1, rt0.c2)) NOT BETWEEN (rt0.c0) AND (IFNULL(DISTINCT rt0.c0, vt1.c1)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((IFNULL(DISTINCT rt0.c1, rt0.c2)) NOT BETWEEN (rt0.c0) AND (IFNULL(DISTINCT rt0.c0, vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt0.c1, rt0.c2)) NOT BETWEEN (rt0.c0) AND (IFNULL(DISTINCT rt0.c0, vt1.c1)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((IFNULL(DISTINCT rt0.c1, rt0.c2)) NOT BETWEEN (rt0.c0) AND (IFNULL(DISTINCT rt0.c0, vt1.c1))));
SELECT ALL COUNT(*) FROM v0, vt1 FULL OUTER JOIN rt0 ON (vt1.c1 COLLATE BINARY IN (((rt0.c2) NOT NULL))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN rt0 ON (vt1.c1 COLLATE BINARY IN (((rt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM v0, vt1 FULL OUTER JOIN rt0 ON (vt1.c1 COLLATE BINARY IN (((rt0.c2) NOT NULL))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN rt0 ON (vt1.c1 COLLATE BINARY IN (((rt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM v0, vt1 FULL OUTER JOIN rt0 ON (vt1.c1 COLLATE BINARY IN (((rt0.c2) NOT NULL))) WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN 'V}' WHEN vt1.c1 THEN ' XqeZb,' END IN ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN 'V}' WHEN vt1.c1 THEN ' XqeZb,' END IN ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN 'V}' WHEN vt1.c1 THEN ' XqeZb,' END IN ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN 'V}' WHEN vt1.c1 THEN ' XqeZb,' END IN ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN 'V}' WHEN vt1.c1 THEN ' XqeZb,' END IN ((NOT (vt1.c0)))));
SELECT ALL * FROM vt1, rt0 WHERE (highlight(rt0.c2 COLLATE BINARY, ((((((((vt1.c0)OR(x'')))AND(vt1.c1)))OR(rt0.c2)))OR(vt1.c1)), ((vt1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)), (- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((highlight(rt0.c2 COLLATE BINARY, ((((((((vt1.c0)OR(x'')))AND(vt1.c1)))OR(rt0.c2)))OR(vt1.c1)), ((vt1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)), (- (rt0.c0)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (highlight(rt0.c2 COLLATE BINARY, ((((((((vt1.c0)OR(x'')))AND(vt1.c1)))OR(rt0.c2)))OR(vt1.c1)), ((vt1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)), (- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((highlight(rt0.c2 COLLATE BINARY, ((((((((vt1.c0)OR(x'')))AND(vt1.c1)))OR(rt0.c2)))OR(vt1.c1)), ((vt1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)), (- (rt0.c0)))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM v0, rt0 WHERE (((((v0.c0)+(rt0.c1)))+(CASE ''  WHEN '-1805742234' THEN rt0.c1 END))) ORDER BY ((((((((((((rt0.c0)AND(x'84128367' COLLATE RTRIM)))AND(rt0.c0)))AND((((rt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(rt0.c2 COLLATE NOCASE)))AND(v0.c0 COLLATE NOCASE)))OR(8.83330604E8));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(rt0.c1)))+(CASE ''  WHEN '-1805742234' THEN rt0.c1 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((((((rt0.c0)AND(x'84128367' COLLATE RTRIM)))AND(rt0.c0)))AND((((rt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(rt0.c2 COLLATE NOCASE)))AND(v0.c0 COLLATE NOCASE)))OR(8.83330604E8)));
SELECT * FROM v0, rt0 WHERE (((((v0.c0)+(rt0.c1)))+(CASE ''  WHEN '-1805742234' THEN rt0.c1 END))) ORDER BY ((((((((((((rt0.c0)AND(x'84128367' COLLATE RTRIM)))AND(rt0.c0)))AND((((rt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(rt0.c2 COLLATE NOCASE)))AND(v0.c0 COLLATE NOCASE)))OR(8.83330604E8));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(rt0.c1)))+(CASE ''  WHEN '-1805742234' THEN rt0.c1 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((((((rt0.c0)AND(x'84128367' COLLATE RTRIM)))AND(rt0.c0)))AND((((rt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(rt0.c2 COLLATE NOCASE)))AND(v0.c0 COLLATE NOCASE)))OR(8.83330604E8)));
SELECT * FROM v0, rt0 WHERE (((((v0.c0)+(rt0.c1)))+(CASE ''  WHEN '-1805742234' THEN rt0.c1 END))) ORDER BY ((((((((((((rt0.c0)AND(x'84128367' COLLATE RTRIM)))AND(rt0.c0)))AND((((rt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(rt0.c2 COLLATE NOCASE)))AND(v0.c0 COLLATE NOCASE)))OR(8.83330604E8));
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE ((((vt1.c1 IN ()))>=(IFNULL(vt1.c1, rt0.c1)))) ORDER BY 0.8142158711053912 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN ()))>=(IFNULL(vt1.c1, rt0.c1)))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY 0.8142158711053912 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE ((((vt1.c1 IN ()))>=(IFNULL(vt1.c1, rt0.c1)))) ORDER BY 0.8142158711053912 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN ()))>=(IFNULL(vt1.c1, rt0.c1)))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY 0.8142158711053912 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE ((((vt1.c1 IN ()))>=(IFNULL(vt1.c1, rt0.c1)))) ORDER BY 0.8142158711053912 DESC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((((((HEX(v0.c0))AND(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c0)))))AND(((rt0.c1) IS FALSE))))AND(((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))))OR(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((HEX(v0.c0))AND(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c0)))))AND(((rt0.c1) IS FALSE))))AND(((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))))OR(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((((((HEX(v0.c0))AND(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c0)))))AND(((rt0.c1) IS FALSE))))AND(((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))))OR(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((HEX(v0.c0))AND(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c0)))))AND(((rt0.c1) IS FALSE))))AND(((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))))OR(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((((((HEX(v0.c0))AND(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c0)))))AND(((rt0.c1) IS FALSE))))AND(((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))))OR(rt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c1) ISNULL))AND(((rt0.c0)<>(NULL)))))AND('190970843')) WHERE ((rt0.c1 COLLATE NOCASE IN ())) ORDER BY ((LOWER(rt0.c2))>=('-401613903')), SQLITE_SOURCE_ID()  NULLS LAST, CAST(rt0.c2 AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c1) ISNULL))AND(((rt0.c0)!=(NULL)))))AND('190970843')) ORDER BY ((LOWER(rt0.c2))>=('-401613903')), SQLITE_SOURCE_ID()  NULLS LAST, CAST(rt0.c2 AS BLOB)  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c1) ISNULL))AND(((rt0.c0)<>(NULL)))))AND('190970843')) WHERE ((rt0.c1 COLLATE NOCASE IN ())) ORDER BY ((LOWER(rt0.c2))>=('-401613903')), SQLITE_SOURCE_ID()  NULLS LAST, CAST(rt0.c2 AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c1) ISNULL))AND(((rt0.c0)!=(NULL)))))AND('190970843')) ORDER BY ((LOWER(rt0.c2))>=('-401613903')), SQLITE_SOURCE_ID()  NULLS LAST, CAST(rt0.c2 AS BLOB)  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c1) ISNULL))AND(((rt0.c0)<>(NULL)))))AND('190970843')) WHERE ((rt0.c1 COLLATE NOCASE IN ())) ORDER BY ((LOWER(rt0.c2))>=('-401613903')), SQLITE_SOURCE_ID()  NULLS LAST, CAST(rt0.c2 AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0, v0 NOT INDEXED WHERE ((((((rt0.c1))<>((NULL))))&(IFNULL(rt0.c0, NULL))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<>((NULL))))&(IFNULL(rt0.c0, NULL)))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 NOT INDEXED WHERE ((((((rt0.c1))<>((NULL))))&(IFNULL(rt0.c0, NULL))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<>((NULL))))&(IFNULL(rt0.c0, NULL)))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 NOT INDEXED WHERE ((((((rt0.c1))<>((NULL))))&(IFNULL(rt0.c0, NULL))));
SELECT ALL * FROM v0, vt1 NATURAL JOIN rt0 WHERE (CAST(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) AS INTEGER)) ORDER BY ((((rt0.c1)AND(((((vt1.c1)OR(vt1.c0)))AND(rt0.c0)))))AND(((rt0.c1)+(rt0.c2)))) ASC, (((((+ (v0.c0)))OR(rt0.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))))  NULLS FIRST, UPPER(vt1.c1) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt1 NATURAL JOIN rt0 ORDER BY ((((rt0.c1)AND(((((vt1.c1)OR(vt1.c0)))AND(rt0.c0)))))AND(((rt0.c1)+(rt0.c2)))) ASC, (((((+ (v0.c0)))OR(rt0.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))))  NULLS FIRST, UPPER(vt1.c1) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM v0, vt1 NATURAL JOIN rt0 WHERE (CAST(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) AS INTEGER)) ORDER BY ((((rt0.c1)AND(((((vt1.c1)OR(vt1.c0)))AND(rt0.c0)))))AND(((rt0.c1)+(rt0.c2)))) ASC, (((((+ (v0.c0)))OR(rt0.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))))  NULLS FIRST, UPPER(vt1.c1) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt1 NATURAL JOIN rt0 ORDER BY ((((rt0.c1)AND(((((vt1.c1)OR(vt1.c0)))AND(rt0.c0)))))AND(((rt0.c1)+(rt0.c2)))) ASC, (((((+ (v0.c0)))OR(rt0.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))))  NULLS FIRST, UPPER(vt1.c1) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM v0, vt1 NATURAL JOIN rt0 WHERE (CAST(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) AS INTEGER)) ORDER BY ((((rt0.c1)AND(((((vt1.c1)OR(vt1.c0)))AND(rt0.c0)))))AND(((rt0.c1)+(rt0.c2)))) ASC, (((((+ (v0.c0)))OR(rt0.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))))  NULLS FIRST, UPPER(vt1.c1) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((rt0.c1) ISNULL) AS TEXT)) ORDER BY ((x'b6d6')>=((~ (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((x'b6d6')>=((~ (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((rt0.c1) ISNULL) AS TEXT)) ORDER BY ((x'b6d6')>=((~ (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((x'b6d6')>=((~ (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((rt0.c1) ISNULL) AS TEXT)) ORDER BY ((x'b6d6')>=((~ (rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)IS NOT(rt0.c1)))AND((((rt0.c1))<((rt0.c2))))))OR(((rt0.c0) NOTNULL))))AND((((rt0.c1))<=((1.996373126E9))))))AND((~ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)IS NOT(rt0.c1)))AND((((rt0.c1))<((rt0.c2))))))OR(((rt0.c0) NOTNULL))))AND((((rt0.c1))<=((1.996373126E9))))))AND((~ (NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)IS NOT(rt0.c1)))AND((((rt0.c1))<((rt0.c2))))))OR(((rt0.c0) NOTNULL))))AND((((rt0.c1))<=((1.996373126E9))))))AND((~ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)IS NOT(rt0.c1)))AND((((rt0.c1))<((rt0.c2))))))OR(((rt0.c0) NOTNULL))))AND((((rt0.c1))<=((1.996373126E9))))))AND((~ (NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)IS NOT(rt0.c1)))AND((((rt0.c1))<((rt0.c2))))))OR(((rt0.c0) NOTNULL))))AND((((rt0.c1))<=((1.996373126E9))))))AND((~ (NULL)))));
SELECT ALL * FROM v0 WHERE (((DATE(v0.c0, v0.c0, v0.c0)) BETWEEN (NULL) AND (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((DATE(v0.c0, v0.c0, v0.c0)) BETWEEN (NULL) AND (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((DATE(v0.c0, v0.c0, v0.c0)) BETWEEN (NULL) AND (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((DATE(v0.c0, v0.c0, v0.c0)) BETWEEN (NULL) AND (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((DATE(v0.c0, v0.c0, v0.c0)) BETWEEN (NULL) AND (((v0.c0) ISNULL))));
SELECT ALL * FROM vt1, rt0, v0 WHERE (SUBSTR(((vt1.c1) NOT BETWEEN (0Xffffffffd5998051) AND (rt0.c2)), 0.4190980297837946)) ORDER BY SQLITE_COMPILEOPTION_USED(((v0.c0)+(rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SUBSTR(((vt1.c1) NOT BETWEEN (0xffffffffd5998051) AND (rt0.c2)), 0.4190980297837946)) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY SQLITE_COMPILEOPTION_USED(((v0.c0)+(rt0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, v0 WHERE (SUBSTR(((vt1.c1) NOT BETWEEN (0Xffffffffd5998051) AND (rt0.c2)), 0.4190980297837946)) ORDER BY SQLITE_COMPILEOPTION_USED(((v0.c0)+(rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SUBSTR(((vt1.c1) NOT BETWEEN (0xffffffffd5998051) AND (rt0.c2)), 0.4190980297837946)) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY SQLITE_COMPILEOPTION_USED(((v0.c0)+(rt0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, v0 WHERE (SUBSTR(((vt1.c1) NOT BETWEEN (0Xffffffffd5998051) AND (rt0.c2)), 0.4190980297837946)) ORDER BY SQLITE_COMPILEOPTION_USED(((v0.c0)+(rt0.c1))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((1.90970843E8)/(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((1.90970843E8)/(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((1.90970843E8)/(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((1.90970843E8)/(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((1.90970843E8)/(((vt1.c0) IS TRUE))));
SELECT * FROM rt0 WHERE (CAST(UPPER(DISTINCT rt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(DISTINCT rt0.c0) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(UPPER(DISTINCT rt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(DISTINCT rt0.c0) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(UPPER(DISTINCT rt0.c0) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(((vt1.c0)>=(0.4285716994550367)))))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))) ORDER BY (NOT (((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(((vt1.c0)>=(0.4285716994550367)))))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NOT (((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(((vt1.c0)>=(0.4285716994550367)))))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))) ORDER BY (NOT (((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(((vt1.c0)>=(0.4285716994550367)))))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NOT (((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(((vt1.c0)>=(0.4285716994550367)))))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))) ORDER BY (NOT (((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))) ASC;
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (((rt0.c2)<>(rt0.c1)) COLLATE BINARY) ORDER BY (NOT (((vt1.c0)LIKE(rt0.c0))))  NULLS FIRST, (((+ (x''))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<>(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (NOT (((vt1.c0)LIKE(rt0.c0))))  NULLS FIRST, (((+ (x''))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (NULL)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (((rt0.c2)<>(rt0.c1)) COLLATE BINARY) ORDER BY (NOT (((vt1.c0)LIKE(rt0.c0))))  NULLS FIRST, (((+ (x''))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<>(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (NOT (((vt1.c0)LIKE(rt0.c0))))  NULLS FIRST, (((+ (x''))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (NULL)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (((rt0.c2)<>(rt0.c1)) COLLATE BINARY) ORDER BY (NOT (((vt1.c0)LIKE(rt0.c0))))  NULLS FIRST, (((+ (x''))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (NULL)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (((NULL)*(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL)*(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (((NULL)*(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL)*(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (((NULL)*(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT ALL * FROM v0 WHERE (((x'' IN ()) IN ())) ORDER BY CASE v0.c0  WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0) NOT NULL) WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((v0.c0)GLOB(v0.c0)) WHEN COALESCE(v0.c0, v0.c0) THEN v0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((((x'' IN ()) IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0  WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0) NOT NULL) WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((v0.c0)GLOB(v0.c0)) WHEN COALESCE(v0.c0, v0.c0) THEN v0.c0 COLLATE RTRIM END);
SELECT ALL * FROM v0 WHERE (((x'' IN ()) IN ())) ORDER BY CASE v0.c0  WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0) NOT NULL) WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((v0.c0)GLOB(v0.c0)) WHEN COALESCE(v0.c0, v0.c0) THEN v0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((((x'' IN ()) IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0  WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0) NOT NULL) WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((v0.c0)GLOB(v0.c0)) WHEN COALESCE(v0.c0, v0.c0) THEN v0.c0 COLLATE RTRIM END);
SELECT ALL * FROM v0 WHERE (((x'' IN ()) IN ())) ORDER BY CASE v0.c0  WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0) NOT NULL) WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((v0.c0)GLOB(v0.c0)) WHEN COALESCE(v0.c0, v0.c0) THEN v0.c0 COLLATE RTRIM END;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)OR(((v0.c0) BETWEEN (0.28079184916369804) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)OR(((v0.c0) BETWEEN (0.28079184916369804) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)OR(((v0.c0) BETWEEN (0.28079184916369804) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)OR(((v0.c0) BETWEEN (0.28079184916369804) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)OR(((v0.c0) BETWEEN (0.28079184916369804) AND (v0.c0)))));
SELECT * FROM rt0, vt1 WHERE ((~ (((vt1.c1) IS FALSE)))) ORDER BY (((UNLIKELY(DISTINCT rt0.c2)))>((((vt1.c0)-(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((UNLIKELY(DISTINCT rt0.c2)))>((((vt1.c0)-(rt0.c1))))));
SELECT * FROM rt0, vt1 WHERE ((~ (((vt1.c1) IS FALSE)))) ORDER BY (((UNLIKELY(DISTINCT rt0.c2)))>((((vt1.c0)-(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((UNLIKELY(DISTINCT rt0.c2)))>((((vt1.c0)-(rt0.c1))))));
SELECT * FROM rt0, vt1 WHERE ((~ (((vt1.c1) IS FALSE)))) ORDER BY (((UNLIKELY(DISTINCT rt0.c2)))>((((vt1.c0)-(rt0.c1)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((~ (rt0.c2))))==((v0.c0 COLLATE NOCASE))) WHERE ((((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (v0.c0 IN (rt0.c1)), ((rt0.c1) IS FALSE)))<=((CAST(rt0.c1 AS INTEGER), rt0.c0 COLLATE RTRIM, ((rt0.c2)%(rt0.c1)))))) ORDER BY CASE CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 END  WHEN (((rt0.c0, v0.c0, v0.c0))=((rt0.c0, rt0.c0, rt0.c2))) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (0.9841961337069837)) WHEN ((rt0.c2)<=(rt0.c1)) THEN TRIM(0.7192247241581318) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((((((((rt0.c0)OR(v0.c0)))OR(571650246)))AND(rt0.c2)))AND(rt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c2) NOTNULL) END, (((rt0.c0 IN (rt0.c1, rt0.c0)))*(((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (v0.c0 IN (rt0.c1)), ((rt0.c1) IS FALSE)))<=((CAST(rt0.c1 AS INTEGER), rt0.c0 COLLATE RTRIM, ((rt0.c2)%(rt0.c1)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((~ (rt0.c2))))==((v0.c0 COLLATE NOCASE))) ORDER BY CASE CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 END  WHEN (((rt0.c0, v0.c0, v0.c0))=((rt0.c0, rt0.c0, rt0.c2))) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (0.9841961337069837)) WHEN ((rt0.c2)<=(rt0.c1)) THEN TRIM(0.7192247241581318) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((((((((rt0.c0)OR(v0.c0)))OR(571650246)))AND(rt0.c2)))AND(rt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c2) NOTNULL) END, (((rt0.c0 IN (rt0.c1, rt0.c0)))*(((rt0.c0) IS FALSE))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((~ (rt0.c2))))==((v0.c0 COLLATE NOCASE))) WHERE ((((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (v0.c0 IN (rt0.c1)), ((rt0.c1) IS FALSE)))<=((CAST(rt0.c1 AS INTEGER), rt0.c0 COLLATE RTRIM, ((rt0.c2)%(rt0.c1)))))) ORDER BY CASE CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 END  WHEN (((rt0.c0, v0.c0, v0.c0))=((rt0.c0, rt0.c0, rt0.c2))) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (0.9841961337069837)) WHEN ((rt0.c2)<=(rt0.c1)) THEN TRIM(0.7192247241581318) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((((((((rt0.c0)OR(v0.c0)))OR(571650246)))AND(rt0.c2)))AND(rt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c2) NOTNULL) END, (((rt0.c0 IN (rt0.c1, rt0.c0)))*(((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (v0.c0 IN (rt0.c1)), ((rt0.c1) IS FALSE)))<=((CAST(rt0.c1 AS INTEGER), rt0.c0 COLLATE RTRIM, ((rt0.c2)%(rt0.c1)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((~ (rt0.c2))))==((v0.c0 COLLATE NOCASE))) ORDER BY CASE CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 END  WHEN (((rt0.c0, v0.c0, v0.c0))=((rt0.c0, rt0.c0, rt0.c2))) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (0.9841961337069837)) WHEN ((rt0.c2)<=(rt0.c1)) THEN TRIM(0.7192247241581318) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((((((((rt0.c0)OR(v0.c0)))OR(571650246)))AND(rt0.c2)))AND(rt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c2) NOTNULL) END, (((rt0.c0 IN (rt0.c1, rt0.c0)))*(((rt0.c0) IS FALSE))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((~ (rt0.c2))))==((v0.c0 COLLATE NOCASE))) WHERE ((((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (v0.c0 IN (rt0.c1)), ((rt0.c1) IS FALSE)))<=((CAST(rt0.c1 AS INTEGER), rt0.c0 COLLATE RTRIM, ((rt0.c2)%(rt0.c1)))))) ORDER BY CASE CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 END  WHEN (((rt0.c0, v0.c0, v0.c0))=((rt0.c0, rt0.c0, rt0.c2))) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (0.9841961337069837)) WHEN ((rt0.c2)<=(rt0.c1)) THEN TRIM(0.7192247241581318) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((((((((rt0.c0)OR(v0.c0)))OR(571650246)))AND(rt0.c2)))AND(rt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c2) NOTNULL) END, (((rt0.c0 IN (rt0.c1, rt0.c0)))*(((rt0.c0) IS FALSE)));
SELECT * FROM vt1 CROSS JOIN rt0 ON JULIANDAY((((vt1.c0, vt1.c1, rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((vt1.c1, vt1.c0, rt0.c1, rt0.c0, NULL)) AND ((rt0.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c0))), CASE vt1.c0  WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c2 END, rt0.c2, CAST(vt1.c0 AS INTEGER), ((rt0.c0)GLOB(vt1.c1))) WHERE (CAST(((vt1.c0)<=(rt0.c2)) AS INTEGER)) ORDER BY CAST(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN NULL WHEN '0.2635164811826173' THEN '-1236295054' ELSE rt0.c1 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)<=(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON JULIANDAY((((vt1.c0, vt1.c1, rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((vt1.c1, vt1.c0, rt0.c1, rt0.c0, NULL)) AND ((rt0.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c0))), CASE vt1.c0  WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c2 END, rt0.c2, CAST(vt1.c0 AS INTEGER), ((rt0.c0)GLOB(vt1.c1))) ORDER BY CAST(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN NULL WHEN '0.2635164811826173' THEN '-1236295054' ELSE rt0.c1 END AS NUMERIC) ASC);
SELECT * FROM vt1 CROSS JOIN rt0 ON JULIANDAY((((vt1.c0, vt1.c1, rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((vt1.c1, vt1.c0, rt0.c1, rt0.c0, NULL)) AND ((rt0.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c0))), CASE vt1.c0  WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c2 END, rt0.c2, CAST(vt1.c0 AS INTEGER), ((rt0.c0)GLOB(vt1.c1))) WHERE (CAST(((vt1.c0)<=(rt0.c2)) AS INTEGER)) ORDER BY CAST(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN NULL WHEN '0.2635164811826173' THEN '-1236295054' ELSE rt0.c1 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)<=(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON JULIANDAY((((vt1.c0, vt1.c1, rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((vt1.c1, vt1.c0, rt0.c1, rt0.c0, NULL)) AND ((rt0.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c0))), CASE vt1.c0  WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c2 END, rt0.c2, CAST(vt1.c0 AS INTEGER), ((rt0.c0)GLOB(vt1.c1))) ORDER BY CAST(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN NULL WHEN '0.2635164811826173' THEN '-1236295054' ELSE rt0.c1 END AS NUMERIC) ASC);
SELECT * FROM vt1 CROSS JOIN rt0 ON JULIANDAY((((vt1.c0, vt1.c1, rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((vt1.c1, vt1.c0, rt0.c1, rt0.c0, NULL)) AND ((rt0.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c0))), CASE vt1.c0  WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c2 END, rt0.c2, CAST(vt1.c0 AS INTEGER), ((rt0.c0)GLOB(vt1.c1))) WHERE (CAST(((vt1.c0)<=(rt0.c2)) AS INTEGER)) ORDER BY CAST(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN NULL WHEN '0.2635164811826173' THEN '-1236295054' ELSE rt0.c1 END AS NUMERIC) ASC;
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((rt0.c1 COLLATE RTRIM)AND(IFNULL(vt1.c0, rt0.c2))))AND(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END)) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((rt0.c1 COLLATE RTRIM)AND(IFNULL(vt1.c0, rt0.c2))))AND(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END)));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((rt0.c1 COLLATE RTRIM)AND(IFNULL(vt1.c0, rt0.c2))))AND(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END)) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((rt0.c1 COLLATE RTRIM)AND(IFNULL(vt1.c0, rt0.c2))))AND(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END)));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((rt0.c1 COLLATE RTRIM)AND(IFNULL(vt1.c0, rt0.c2))))AND(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END)) WHERE (rt0.c2);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON CASE ((vt1.c1) ISNULL)  WHEN rt0.c0 THEN CAST(x'' AS TEXT) END WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((((((((rt0.c2)OR(vt1.c0)))AND(vt1.c1)))AND(rt0.c0)))AND(rt0.c2)) ELSE MAX(rt0.c0, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c2 IN ()) THEN ((((((((rt0.c2)OR(vt1.c0)))AND(vt1.c1)))AND(rt0.c0)))AND(rt0.c2)) ELSE MAX(rt0.c0, rt0.c2) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CASE ((vt1.c1) ISNULL)  WHEN rt0.c0 THEN CAST(x'' AS TEXT) END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON CASE ((vt1.c1) ISNULL)  WHEN rt0.c0 THEN CAST(x'' AS TEXT) END WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((((((((rt0.c2)OR(vt1.c0)))AND(vt1.c1)))AND(rt0.c0)))AND(rt0.c2)) ELSE MAX(rt0.c0, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c2 IN ()) THEN ((((((((rt0.c2)OR(vt1.c0)))AND(vt1.c1)))AND(rt0.c0)))AND(rt0.c2)) ELSE MAX(rt0.c0, rt0.c2) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CASE ((vt1.c1) ISNULL)  WHEN rt0.c0 THEN CAST(x'' AS TEXT) END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON CASE ((vt1.c1) ISNULL)  WHEN rt0.c0 THEN CAST(x'' AS TEXT) END WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((((((((rt0.c2)OR(vt1.c0)))AND(vt1.c1)))AND(rt0.c0)))AND(rt0.c2)) ELSE MAX(rt0.c0, rt0.c2) END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)) BETWEEN ((rt0.c2)) AND (('-546666713'))) IN ())) ORDER BY CASE WHEN ((rt0.c0)IS(0.7051892131700197)) THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND (('-546666713'))) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN ((rt0.c0)IS(0.7051892131700197)) THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) END ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)) BETWEEN ((rt0.c2)) AND (('-546666713'))) IN ())) ORDER BY CASE WHEN ((rt0.c0)IS(0.7051892131700197)) THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND (('-546666713'))) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN ((rt0.c0)IS(0.7051892131700197)) THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) END ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)) BETWEEN ((rt0.c2)) AND (('-546666713'))) IN ())) ORDER BY CASE WHEN ((rt0.c0)IS(0.7051892131700197)) THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) END ASC;
SELECT COUNT(*) FROM vt1, v0 LEFT OUTER JOIN rt0 ON CASE NULL  WHEN (rt0.c2 IN ()) THEN v0.c0 ELSE (- (rt0.c2)) END WHERE ((((((((((vt1.c0)AND(rt0.c2)))AND(vt1.c1)))AND(vt1.c1)))OR(rt0.c0)) IN ())) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN ((((v0.c0)AND(rt0.c1)))OR(rt0.c1)) ELSE 991676072 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)AND(rt0.c2)))AND(vt1.c1)))AND(vt1.c1)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN rt0 ON CASE NULL  WHEN (rt0.c2 IN ()) THEN v0.c0 ELSE (- (rt0.c2)) END ORDER BY CASE WHEN (vt1.c0 IN ()) THEN ((((v0.c0)AND(rt0.c1)))OR(rt0.c1)) ELSE 991676072 END  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 LEFT OUTER JOIN rt0 ON CASE NULL  WHEN (rt0.c2 IN ()) THEN v0.c0 ELSE (- (rt0.c2)) END WHERE ((((((((((vt1.c0)AND(rt0.c2)))AND(vt1.c1)))AND(vt1.c1)))OR(rt0.c0)) IN ())) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN ((((v0.c0)AND(rt0.c1)))OR(rt0.c1)) ELSE 991676072 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)AND(rt0.c2)))AND(vt1.c1)))AND(vt1.c1)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN rt0 ON CASE NULL  WHEN (rt0.c2 IN ()) THEN v0.c0 ELSE (- (rt0.c2)) END ORDER BY CASE WHEN (vt1.c0 IN ()) THEN ((((v0.c0)AND(rt0.c1)))OR(rt0.c1)) ELSE 991676072 END  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 LEFT OUTER JOIN rt0 ON CASE NULL  WHEN (rt0.c2 IN ()) THEN v0.c0 ELSE (- (rt0.c2)) END WHERE ((((((((((vt1.c0)AND(rt0.c2)))AND(vt1.c1)))AND(vt1.c1)))OR(rt0.c0)) IN ())) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN ((((v0.c0)AND(rt0.c1)))OR(rt0.c1)) ELSE 991676072 END  NULLS LAST;
SELECT * FROM v0 WHERE (((((v0.c0)AND(x'')))OR(v0.c0 COLLATE BINARY))) ORDER BY ((((v0.c0) ISNULL)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(x'')))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) ISNULL)) IS TRUE) ASC);
SELECT * FROM v0 WHERE (((((v0.c0)AND(x'')))OR(v0.c0 COLLATE BINARY))) ORDER BY ((((v0.c0) ISNULL)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(x'')))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) ISNULL)) IS TRUE) ASC);
SELECT * FROM v0 WHERE (((((v0.c0)AND(x'')))OR(v0.c0 COLLATE BINARY))) ORDER BY ((((v0.c0) ISNULL)) IS TRUE) ASC;
SELECT ALL * FROM rt0, vt1, v0 WHERE (0.7400285398498252) ORDER BY (+ (('[3H]' IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7400285398498252) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (+ (('[3H]' IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1, v0 WHERE (0.7400285398498252) ORDER BY (+ (('[3H]' IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7400285398498252) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (+ (('[3H]' IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1, v0 WHERE (0.7400285398498252) ORDER BY (+ (('[3H]' IN ()))) DESC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (('886272274' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('886272274' IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (('886272274' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('886272274' IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (('886272274' IN ()));
SELECT * FROM v0, vt1 WHERE (CAST(CAST(v0.c0 AS BLOB) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS BLOB) AS REAL)) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (CAST(CAST(v0.c0 AS BLOB) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS BLOB) AS REAL)) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (CAST(CAST(v0.c0 AS BLOB) AS REAL));
SELECT * FROM rt0, vt1, v0 WHERE (HEX(CASE rt0.c2  WHEN rt0.c0 THEN 0xffffffff96ece623 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((HEX(CASE rt0.c2  WHEN rt0.c0 THEN 0xffffffff96ece623 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT * FROM rt0, vt1, v0 WHERE (HEX(CASE rt0.c2  WHEN rt0.c0 THEN 0xffffffff96ece623 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((HEX(CASE rt0.c2  WHEN rt0.c0 THEN 0xffffffff96ece623 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT * FROM rt0, vt1, v0 WHERE (HEX(CASE rt0.c2  WHEN rt0.c0 THEN 0xffffffff96ece623 ELSE rt0.c0 END));
SELECT ALL * FROM v0, vt1, rt0 WHERE ((~ (rt0.c1)) COLLATE RTRIM) ORDER BY ((((v0.c0) BETWEEN (NULL) AND (vt1.c1)))&(vt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((((v0.c0) BETWEEN (NULL) AND (vt1.c1)))&(vt1.c1)) DESC);
SELECT ALL * FROM v0, vt1, rt0 WHERE ((~ (rt0.c1)) COLLATE RTRIM) ORDER BY ((((v0.c0) BETWEEN (NULL) AND (vt1.c1)))&(vt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((((v0.c0) BETWEEN (NULL) AND (vt1.c1)))&(vt1.c1)) DESC);
SELECT ALL * FROM v0, vt1, rt0 WHERE ((~ (rt0.c1)) COLLATE RTRIM) ORDER BY ((((v0.c0) BETWEEN (NULL) AND (vt1.c1)))&(vt1.c1)) DESC;
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE ((((((rt0.c0 IN (v0.c0)))OR(CASE WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c1 END)))OR((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN (v0.c0)))OR(CASE WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c1 END)))OR((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE ((((((rt0.c0 IN (v0.c0)))OR(CASE WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c1 END)))OR((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN (v0.c0)))OR(CASE WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c1 END)))OR((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE ((((((rt0.c0 IN (v0.c0)))OR(CASE WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c1 END)))OR((~ (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE);
SELECT ALL * FROM rt0, v0 WHERE (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) ORDER BY '1129294465' DESC  NULLS LAST, NULLIF(DISTINCT (((rt0.c0))>((rt0.c1))), v0.c0 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY '1129294465' DESC  NULLS LAST, NULLIF(DISTINCT (((rt0.c0))>((rt0.c1))), v0.c0 COLLATE BINARY)  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) ORDER BY '1129294465' DESC  NULLS LAST, NULLIF(DISTINCT (((rt0.c0))>((rt0.c1))), v0.c0 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY '1129294465' DESC  NULLS LAST, NULLIF(DISTINCT (((rt0.c0))>((rt0.c1))), v0.c0 COLLATE BINARY)  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) ORDER BY '1129294465' DESC  NULLS LAST, NULLIF(DISTINCT (((rt0.c0))>((rt0.c1))), v0.c0 COLLATE BINARY)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (CAST((v0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (CAST((v0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (CAST((v0.c0 IN ()) AS INTEGER));
SELECT * FROM rt0 WHERE (TRIM((((rt0.c0, rt0.c2, 0.4876715537616554))==((rt0.c0, rt0.c2, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((TRIM((((rt0.c0, rt0.c2, 0.4876715537616554))==((rt0.c0, rt0.c2, rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TRIM((((rt0.c0, rt0.c2, 0.4876715537616554))==((rt0.c0, rt0.c2, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((TRIM((((rt0.c0, rt0.c2, 0.4876715537616554))==((rt0.c0, rt0.c2, rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TRIM((((rt0.c0, rt0.c2, 0.4876715537616554))==((rt0.c0, rt0.c2, rt0.c1)))));
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c1) NOT NULL))+(CAST(rt0.c0 AS BLOB)))) ORDER BY '229224774' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT NULL))+(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY '229224774' ASC);
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c1) NOT NULL))+(CAST(rt0.c0 AS BLOB)))) ORDER BY '229224774' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT NULL))+(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY '229224774' ASC);
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c1) NOT NULL))+(CAST(rt0.c0 AS BLOB)))) ORDER BY '229224774' ASC;
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE ((rt0.c0 IN ()));
SELECT * FROM v0, vt1 WHERE (CASE v0.c0 COLLATE RTRIM  WHEN json_quote(vt1.c0) THEN ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) END) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) AS INTEGER)  NULLS LAST, CAST(((vt1.c0)OR(vt1.c1)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0 COLLATE RTRIM  WHEN json_quote(vt1.c0) THEN ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) AS INTEGER)  NULLS LAST, CAST(((vt1.c0)OR(vt1.c1)) AS REAL) ASC  NULLS FIRST);
SELECT * FROM v0, vt1 WHERE (CASE v0.c0 COLLATE RTRIM  WHEN json_quote(vt1.c0) THEN ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) END) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) AS INTEGER)  NULLS LAST, CAST(((vt1.c0)OR(vt1.c1)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0 COLLATE RTRIM  WHEN json_quote(vt1.c0) THEN ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) AS INTEGER)  NULLS LAST, CAST(((vt1.c0)OR(vt1.c1)) AS REAL) ASC  NULLS FIRST);
SELECT * FROM v0, vt1 WHERE (CASE v0.c0 COLLATE RTRIM  WHEN json_quote(vt1.c0) THEN ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) END) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) AS INTEGER)  NULLS LAST, CAST(((vt1.c0)OR(vt1.c1)) AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (json_insert(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1)/(rt0.c0)), ((rt0.c0) BETWEEN (v0.c0) AND (x'')))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))IS NOT(CAST(rt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1)/(rt0.c0)), ((rt0.c0) BETWEEN (v0.c0) AND (x'')))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))IS NOT(CAST(rt0.c2 AS INTEGER))));
SELECT ALL * FROM rt0, v0 WHERE (json_insert(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1)/(rt0.c0)), ((rt0.c0) BETWEEN (v0.c0) AND (x'')))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))IS NOT(CAST(rt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1)/(rt0.c0)), ((rt0.c0) BETWEEN (v0.c0) AND (x'')))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))IS NOT(CAST(rt0.c2 AS INTEGER))));
SELECT ALL * FROM rt0, v0 WHERE (json_insert(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1)/(rt0.c0)), ((rt0.c0) BETWEEN (v0.c0) AND (x'')))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))IS NOT(CAST(rt0.c2 AS INTEGER)));
SELECT COUNT(*) FROM vt1 WHERE ((NULL IN (((vt1.c1)IS(vt1.c0)), CAST(vt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (((vt1.c1)IS(vt1.c0)), CAST(vt1.c1 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NULL IN (((vt1.c1)IS(vt1.c0)), CAST(vt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (((vt1.c1)IS(vt1.c0)), CAST(vt1.c1 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NULL IN (((vt1.c1)IS(vt1.c0)), CAST(vt1.c1 AS BLOB))));
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (json(rt0.c2)) AND (((rt0.c2)/(rt0.c1)))) ASC  NULLS FIRST, CAST(v0.c0 AS REAL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (json(rt0.c2)) AND (((rt0.c2)/(rt0.c1)))) ASC  NULLS FIRST, CAST(v0.c0 AS REAL) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (json(rt0.c2)) AND (((rt0.c2)/(rt0.c1)))) ASC  NULLS FIRST, CAST(v0.c0 AS REAL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (json(rt0.c2)) AND (((rt0.c2)/(rt0.c1)))) ASC  NULLS FIRST, CAST(v0.c0 AS REAL) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (json(rt0.c2)) AND (((rt0.c2)/(rt0.c1)))) ASC  NULLS FIRST, CAST(v0.c0 AS REAL) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c1))) IN (((('&M'))<((rt0.c1))), json_quote(rt0.c1), ((rt0.c1)IS(rt0.c1))))) ORDER BY ((((rt0.c2)) BETWEEN (('cG')) AND ((rt0.c1))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c1))) IN (((('&M'))<((rt0.c1))), json_quote(rt0.c1), ((rt0.c1)IS(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)) BETWEEN (('cG')) AND ((rt0.c1))) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c1))) IN (((('&M'))<((rt0.c1))), json_quote(rt0.c1), ((rt0.c1)IS(rt0.c1))))) ORDER BY ((((rt0.c2)) BETWEEN (('cG')) AND ((rt0.c1))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c1))) IN (((('&M'))<((rt0.c1))), json_quote(rt0.c1), ((rt0.c1)IS(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)) BETWEEN (('cG')) AND ((rt0.c1))) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c1))) IN (((('&M'))<((rt0.c1))), json_quote(rt0.c1), ((rt0.c1)IS(rt0.c1))))) ORDER BY ((((rt0.c2)) BETWEEN (('cG')) AND ((rt0.c1))) IN ())  NULLS FIRST;
SELECT ALL * FROM rt0, vt1, v0 WHERE ((('-659390987')<(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((('-659390987')<(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL * FROM rt0, vt1, v0 WHERE ((('-659390987')<(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((('-659390987')<(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL * FROM rt0, vt1, v0 WHERE ((('-659390987')<(CAST(rt0.c1 AS BLOB))));
SELECT * FROM v0 WHERE (ABS(CAST(v0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (ABS(CAST(v0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (ABS(CAST(v0.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c0) ORDER BY CASE WHEN '631262050' THEN rt0.c2 END COLLATE NOCASE ASC  NULLS LAST, (+ ('0.7657948628748141')) DESC  NULLS FIRST, (NOT (x'a17e4a2f')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN '631262050' THEN rt0.c2 END COLLATE NOCASE ASC  NULLS LAST, (+ ('0.7657948628748141')) DESC  NULLS FIRST, (NOT (x'a17e4a2f')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c0) ORDER BY CASE WHEN '631262050' THEN rt0.c2 END COLLATE NOCASE ASC  NULLS LAST, (+ ('0.7657948628748141')) DESC  NULLS FIRST, (NOT (x'a17e4a2f')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN '631262050' THEN rt0.c2 END COLLATE NOCASE ASC  NULLS LAST, (+ ('0.7657948628748141')) DESC  NULLS FIRST, (NOT (x'a17e4a2f')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c0) ORDER BY CASE WHEN '631262050' THEN rt0.c2 END COLLATE NOCASE ASC  NULLS LAST, (+ ('0.7657948628748141')) DESC  NULLS FIRST, (NOT (x'a17e4a2f')) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 CROSS JOIN vt1 ON (CAST(vt1.c0 AS NUMERIC) IN (CAST(vt1.c0 AS INTEGER))) WHERE (CASE WHEN ((((vt1.c1)OR(vt1.c0)))OR('Ad')) THEN ((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)) THEN CASE 0.27572765857400794  WHEN vt1.c1 THEN vt1.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c1 END WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) THEN CAST(vt1.c1 AS REAL) ELSE ((((vt1.c1)AND(vt1.c1)))AND(v0.c0)) END) ORDER BY (((((((vt1.c1))<=((v0.c0))))OR(CASE WHEN v0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END)))AND(((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c1)OR(vt1.c0)))OR('Ad')) THEN ((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)) THEN CASE 0.27572765857400794  WHEN vt1.c1 THEN vt1.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c1 END WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) THEN CAST(vt1.c1 AS REAL) ELSE ((((vt1.c1)AND(vt1.c1)))AND(v0.c0)) END) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON (CAST(vt1.c0 AS NUMERIC) IN (CAST(vt1.c0 AS INTEGER))) ORDER BY (((((((vt1.c1))<=((v0.c0))))OR(CASE WHEN v0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END)))AND(((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 CROSS JOIN vt1 ON (CAST(vt1.c0 AS NUMERIC) IN (CAST(vt1.c0 AS INTEGER))) WHERE (CASE WHEN ((((vt1.c1)OR(vt1.c0)))OR('Ad')) THEN ((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)) THEN CASE 0.27572765857400794  WHEN vt1.c1 THEN vt1.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c1 END WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) THEN CAST(vt1.c1 AS REAL) ELSE ((((vt1.c1)AND(vt1.c1)))AND(v0.c0)) END) ORDER BY (((((((vt1.c1))<=((v0.c0))))OR(CASE WHEN v0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END)))AND(((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c1)OR(vt1.c0)))OR('Ad')) THEN ((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)) THEN CASE 0.27572765857400794  WHEN vt1.c1 THEN vt1.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c1 END WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) THEN CAST(vt1.c1 AS REAL) ELSE ((((vt1.c1)AND(vt1.c1)))AND(v0.c0)) END) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON (CAST(vt1.c0 AS NUMERIC) IN (CAST(vt1.c0 AS INTEGER))) ORDER BY (((((((vt1.c1))<=((v0.c0))))OR(CASE WHEN v0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END)))AND(((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 CROSS JOIN vt1 ON (CAST(vt1.c0 AS NUMERIC) IN (CAST(vt1.c0 AS INTEGER))) WHERE (CASE WHEN ((((vt1.c1)OR(vt1.c0)))OR('Ad')) THEN ((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)) THEN CASE 0.27572765857400794  WHEN vt1.c1 THEN vt1.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c1 END WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) THEN CAST(vt1.c1 AS REAL) ELSE ((((vt1.c1)AND(vt1.c1)))AND(v0.c0)) END) ORDER BY (((((((vt1.c1))<=((v0.c0))))OR(CASE WHEN v0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END)))AND(((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0, vt1 WHERE (CAST(DATETIME(rt0.c1, ' -h뿦e靴<', rt0.c0, '', rt0.c0) AS BLOB)) ORDER BY ((vt1.c0) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(DATETIME(rt0.c1, ' -h뿦e靴<', rt0.c0, '', rt0.c0) AS BLOB)) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((vt1.c0) IS FALSE) DESC);
SELECT ALL * FROM v0, rt0, vt1 WHERE (CAST(DATETIME(rt0.c1, ' -h뿦e靴<', rt0.c0, '', rt0.c0) AS BLOB)) ORDER BY ((vt1.c0) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(DATETIME(rt0.c1, ' -h뿦e靴<', rt0.c0, '', rt0.c0) AS BLOB)) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((vt1.c0) IS FALSE) DESC);
SELECT ALL * FROM v0, rt0, vt1 WHERE (CAST(DATETIME(rt0.c1, ' -h뿦e靴<', rt0.c0, '', rt0.c0) AS BLOB)) ORDER BY ((vt1.c0) IS FALSE) DESC;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CASE CAST(vt1.c0 AS REAL)  WHEN COALESCE(DISTINCT rt0.c0, x'') THEN (((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) ELSE (((vt1.c0, vt1.c1, vt1.c1))!=((rt0.c1, vt1.c1, rt0.c1))) END FULL OUTER JOIN vt1 ON (((rt0.c1)=(rt0.c2)) IN ((((vt1.c0))=((rt0.c0))))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CASE CAST(vt1.c0 AS REAL)  WHEN COALESCE(DISTINCT rt0.c0, x'') THEN (((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) ELSE (((vt1.c0, vt1.c1, vt1.c1))!=((rt0.c1, vt1.c1, rt0.c1))) END FULL OUTER JOIN vt1 ON (((rt0.c1)=(rt0.c2)) IN ((((vt1.c0))=((rt0.c0))))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CASE CAST(vt1.c0 AS REAL)  WHEN COALESCE(DISTINCT rt0.c0, x'') THEN (((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) ELSE (((vt1.c0, vt1.c1, vt1.c1))!=((rt0.c1, vt1.c1, rt0.c1))) END FULL OUTER JOIN vt1 ON (((rt0.c1)=(rt0.c2)) IN ((((vt1.c0))=((rt0.c0))))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CASE CAST(vt1.c0 AS REAL)  WHEN COALESCE(DISTINCT rt0.c0, x'') THEN (((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) ELSE (((vt1.c0, vt1.c1, vt1.c1))!=((rt0.c1, vt1.c1, rt0.c1))) END FULL OUTER JOIN vt1 ON (((rt0.c1)=(rt0.c2)) IN ((((vt1.c0))=((rt0.c0))))));
SELECT * FROM v0, rt0 WHERE (((rt0.c1)>=(v0.c0)) COLLATE BINARY) ORDER BY '-592778884' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>=(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY '-592778884' ASC);
SELECT * FROM v0, rt0 WHERE (((rt0.c1)>=(v0.c0)) COLLATE BINARY) ORDER BY '-592778884' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>=(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY '-592778884' ASC);
SELECT * FROM v0, rt0 WHERE (((rt0.c1)>=(v0.c0)) COLLATE BINARY) ORDER BY '-592778884' ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) ISNULL)) ORDER BY (((rt0.c0)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND ((rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND ((rt0.c1 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) ISNULL)) ORDER BY (((rt0.c0)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND ((rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND ((rt0.c1 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) ISNULL)) ORDER BY (((rt0.c0)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND ((rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((((v0.c0)OR(v0.c0)))OR(rt0.c1))))) RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c1) NOTNULL) THEN HEX(vt1.c1) ELSE ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(v0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) END WHERE ((0.5160102436196642 IN (vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((0.5160102436196642 IN (vt1.c1))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((((v0.c0)OR(v0.c0)))OR(rt0.c1))))) RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c1) NOTNULL) THEN HEX(vt1.c1) ELSE ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(v0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) END);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((((v0.c0)OR(v0.c0)))OR(rt0.c1))))) RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c1) NOTNULL) THEN HEX(vt1.c1) ELSE ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(v0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) END WHERE ((0.5160102436196642 IN (vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((0.5160102436196642 IN (vt1.c1))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((((v0.c0)OR(v0.c0)))OR(rt0.c1))))) RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c1) NOTNULL) THEN HEX(vt1.c1) ELSE ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(v0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) END);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((((v0.c0)OR(v0.c0)))OR(rt0.c1))))) RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c1) NOTNULL) THEN HEX(vt1.c1) ELSE ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(v0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) END WHERE ((0.5160102436196642 IN (vt1.c1)));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON json_extract(-1.762859485E9, rt0.c1) LEFT OUTER JOIN v0 ON (+ (((((((((rt0.c2)AND(vt1.c0)))AND(v0.c0)))OR(vt1.c1)))AND(rt0.c2)))) WHERE (((CHANGES())=(NULLIF(vt1.c1, vt1.c1)))) ORDER BY ((vt1.c1) BETWEEN ('0.13402749546943982') AND ((('') NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC, CASE CAST(vt1.c1 AS NUMERIC)  WHEN (rt0.c2 IN ()) THEN (~ (vt1.c0)) END  NULLS LAST, ((((rt0.c1)<(v0.c0))) BETWEEN ('2077154079') AND (((rt0.c2) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())==(NULLIF(vt1.c1, vt1.c1)))) IS TRUE)  as count FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON json_extract(-1.762859485E9, rt0.c1) LEFT OUTER JOIN v0 ON (+ (((((((((rt0.c2)AND(vt1.c0)))AND(v0.c0)))OR(vt1.c1)))AND(rt0.c2)))) ORDER BY ((vt1.c1) BETWEEN ('0.13402749546943982') AND ((('') NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC, CASE CAST(vt1.c1 AS NUMERIC)  WHEN (rt0.c2 IN ()) THEN (~ (vt1.c0)) END  NULLS LAST, ((((rt0.c1)<(v0.c0))) BETWEEN ('2077154079') AND (((rt0.c2) NOT NULL))) DESC);
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON json_extract(-1.762859485E9, rt0.c1) LEFT OUTER JOIN v0 ON (+ (((((((((rt0.c2)AND(vt1.c0)))AND(v0.c0)))OR(vt1.c1)))AND(rt0.c2)))) WHERE (((CHANGES())=(NULLIF(vt1.c1, vt1.c1)))) ORDER BY ((vt1.c1) BETWEEN ('0.13402749546943982') AND ((('') NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC, CASE CAST(vt1.c1 AS NUMERIC)  WHEN (rt0.c2 IN ()) THEN (~ (vt1.c0)) END  NULLS LAST, ((((rt0.c1)<(v0.c0))) BETWEEN ('2077154079') AND (((rt0.c2) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())==(NULLIF(vt1.c1, vt1.c1)))) IS TRUE)  as count FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON json_extract(-1.762859485E9, rt0.c1) LEFT OUTER JOIN v0 ON (+ (((((((((rt0.c2)AND(vt1.c0)))AND(v0.c0)))OR(vt1.c1)))AND(rt0.c2)))) ORDER BY ((vt1.c1) BETWEEN ('0.13402749546943982') AND ((('') NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC, CASE CAST(vt1.c1 AS NUMERIC)  WHEN (rt0.c2 IN ()) THEN (~ (vt1.c0)) END  NULLS LAST, ((((rt0.c1)<(v0.c0))) BETWEEN ('2077154079') AND (((rt0.c2) NOT NULL))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((rt0.c2 IN ()))));
SELECT * FROM vt1, rt0 CROSS JOIN v0 ON (((((rt0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((vt1.c0, rt0.c2, vt1.c1)) AND ((vt1.c0, rt0.c1, rt0.c0))))<=(CAST(rt0.c0 AS TEXT))) WHERE (NULL COLLATE NOCASE) ORDER BY (+ (0.07169890623650299)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN v0 ON (((((rt0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((vt1.c0, rt0.c2, vt1.c1)) AND ((vt1.c0, rt0.c1, rt0.c0))))<=(CAST(rt0.c0 AS TEXT))) ORDER BY (+ (0.07169890623650299)) ASC);
SELECT * FROM vt1, rt0 CROSS JOIN v0 ON (((((rt0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((vt1.c0, rt0.c2, vt1.c1)) AND ((vt1.c0, rt0.c1, rt0.c0))))<=(CAST(rt0.c0 AS TEXT))) WHERE (NULL COLLATE NOCASE) ORDER BY (+ (0.07169890623650299)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN v0 ON (((((rt0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((vt1.c0, rt0.c2, vt1.c1)) AND ((vt1.c0, rt0.c1, rt0.c0))))<=(CAST(rt0.c0 AS TEXT))) ORDER BY (+ (0.07169890623650299)) ASC);
SELECT * FROM vt1, rt0 CROSS JOIN v0 ON (((((rt0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((vt1.c0, rt0.c2, vt1.c1)) AND ((vt1.c0, rt0.c1, rt0.c0))))<=(CAST(rt0.c0 AS TEXT))) WHERE (NULL COLLATE NOCASE) ORDER BY (+ (0.07169890623650299)) ASC;
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN v0 ON ((x'ba9c')LIKE(((((vt1.c0)OR(rt0.c1)))AND(vt1.c1)))) WHERE (CASE ((vt1.c0)=(rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN CAST(v0.c0 AS NUMERIC) ELSE ((rt0.c2)|(rt0.c0)) END) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)=(rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN CAST(v0.c0 AS NUMERIC) ELSE ((rt0.c2)|(rt0.c0)) END) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN v0 ON ((x'ba9c')LIKE(((((vt1.c0)OR(rt0.c1)))AND(vt1.c1)))) ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN v0 ON ((x'ba9c')LIKE(((((vt1.c0)OR(rt0.c1)))AND(vt1.c1)))) WHERE (CASE ((vt1.c0)=(rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN CAST(v0.c0 AS NUMERIC) ELSE ((rt0.c2)|(rt0.c0)) END) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)=(rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN CAST(v0.c0 AS NUMERIC) ELSE ((rt0.c2)|(rt0.c0)) END) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN v0 ON ((x'ba9c')LIKE(((((vt1.c0)OR(rt0.c1)))AND(vt1.c1)))) ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN v0 ON ((x'ba9c')LIKE(((((vt1.c0)OR(rt0.c1)))AND(vt1.c1)))) WHERE (CASE ((vt1.c0)=(rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN CAST(v0.c0 AS NUMERIC) ELSE ((rt0.c2)|(rt0.c0)) END) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (rt0.c0) ORDER BY CAST((('23411624')+(rt0.c1)) AS REAL) ASC, ((('A%', rt0.c0, rt0.c0)) NOT BETWEEN (((((' XqeZb,', rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, vt1.c1, 0.6414417445414893))), rt0.c0, (rt0.c0 IN (x'')))) AND ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(vt1.c1)))AND(rt0.c1)), CASE WHEN vt1.c0 THEN vt1.c1 END, '-592778884')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST((('23411624')+(rt0.c1)) AS REAL) ASC, ((('A%', rt0.c0, rt0.c0)) NOT BETWEEN (((((' XqeZb,', rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, vt1.c1, 0.6414417445414893))), rt0.c0, (rt0.c0 IN (x'')))) AND ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(vt1.c1)))AND(rt0.c1)), CASE WHEN vt1.c0 THEN vt1.c1 END, '-592778884')))  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (rt0.c0) ORDER BY CAST((('23411624')+(rt0.c1)) AS REAL) ASC, ((('A%', rt0.c0, rt0.c0)) NOT BETWEEN (((((' XqeZb,', rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, vt1.c1, 0.6414417445414893))), rt0.c0, (rt0.c0 IN (x'')))) AND ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(vt1.c1)))AND(rt0.c1)), CASE WHEN vt1.c0 THEN vt1.c1 END, '-592778884')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST((('23411624')+(rt0.c1)) AS REAL) ASC, ((('A%', rt0.c0, rt0.c0)) NOT BETWEEN (((((' XqeZb,', rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, vt1.c1, 0.6414417445414893))), rt0.c0, (rt0.c0 IN (x'')))) AND ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(vt1.c1)))AND(rt0.c1)), CASE WHEN vt1.c0 THEN vt1.c1 END, '-592778884')))  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (rt0.c0) ORDER BY CAST((('23411624')+(rt0.c1)) AS REAL) ASC, ((('A%', rt0.c0, rt0.c0)) NOT BETWEEN (((((' XqeZb,', rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, vt1.c1, 0.6414417445414893))), rt0.c0, (rt0.c0 IN (x'')))) AND ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(vt1.c1)))AND(rt0.c1)), CASE WHEN vt1.c0 THEN vt1.c1 END, '-592778884')))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))) BETWEEN ((rt0.c0 IN (rt0.c0))) AND (((rt0.c2) BETWEEN ('') AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))) BETWEEN ((rt0.c0 IN (rt0.c0))) AND (((rt0.c2) BETWEEN ('') AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))) BETWEEN ((rt0.c0 IN (rt0.c0))) AND (((rt0.c2) BETWEEN ('') AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))) BETWEEN ((rt0.c0 IN (rt0.c0))) AND (((rt0.c2) BETWEEN ('') AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0))) BETWEEN ((rt0.c0 IN (rt0.c0))) AND (((rt0.c2) BETWEEN ('') AND (rt0.c2)))));
SELECT COUNT(*) FROM v0 WHERE ((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN (((x'')>=(v0.c0))))  NULLS LAST, (((- (v0.c0))) NOT NULL)  NULLS FIRST, (- (NULLIF(v0.c0, v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN (((x'')>=(v0.c0))))  NULLS LAST, (((- (v0.c0))) NOT NULL)  NULLS FIRST, (- (NULLIF(v0.c0, v0.c0))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN (((x'')>=(v0.c0))))  NULLS LAST, (((- (v0.c0))) NOT NULL)  NULLS FIRST, (- (NULLIF(v0.c0, v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN (((x'')>=(v0.c0))))  NULLS LAST, (((- (v0.c0))) NOT NULL)  NULLS FIRST, (- (NULLIF(v0.c0, v0.c0))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN (((x'')>=(v0.c0))))  NULLS LAST, (((- (v0.c0))) NOT NULL)  NULLS FIRST, (- (NULLIF(v0.c0, v0.c0))) ASC;
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (((((vt1.c1) NOT BETWEEN (rt0.c0) AND (NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT BETWEEN (rt0.c0) AND (NULL))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (((((vt1.c1) NOT BETWEEN (rt0.c0) AND (NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT BETWEEN (rt0.c0) AND (NULL))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (((((vt1.c1) NOT BETWEEN (rt0.c0) AND (NULL))) IS FALSE));
SELECT COUNT(*) FROM vt1, rt0 FULL OUTER JOIN v0 ON ((((((((rt0.c1 COLLATE NOCASE)OR((((0Xfffffffff59d2993))=((vt1.c1))))))AND((((rt0.c2))>=((rt0.c1))))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND ('0.6206198261991518')))))OR('' COLLATE BINARY)) WHERE (vt1.c1) ORDER BY ((((((rt0.c1)AND(vt1.c1)))OR(vt1.c1))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c1) AND (rt0.c0))) AND ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN v0 ON ((((((((rt0.c1 COLLATE NOCASE)OR((((0Xfffffffff59d2993))=((vt1.c1))))))AND((((rt0.c2))>=((rt0.c1))))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND ('0.6206198261991518')))))OR('' COLLATE BINARY)) ORDER BY ((((((rt0.c1)AND(vt1.c1)))OR(vt1.c1))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c1) AND (rt0.c0))) AND ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM vt1, rt0 FULL OUTER JOIN v0 ON ((((((((rt0.c1 COLLATE NOCASE)OR((((0Xfffffffff59d2993))=((vt1.c1))))))AND((((rt0.c2))>=((rt0.c1))))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND ('0.6206198261991518')))))OR('' COLLATE BINARY)) WHERE (vt1.c1) ORDER BY ((((((rt0.c1)AND(vt1.c1)))OR(vt1.c1))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c1) AND (rt0.c0))) AND ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN v0 ON ((((((((rt0.c1 COLLATE NOCASE)OR((((0Xfffffffff59d2993))=((vt1.c1))))))AND((((rt0.c2))>=((rt0.c1))))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND ('0.6206198261991518')))))OR('' COLLATE BINARY)) ORDER BY ((((((rt0.c1)AND(vt1.c1)))OR(vt1.c1))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c1) AND (rt0.c0))) AND ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM vt1, rt0 FULL OUTER JOIN v0 ON ((((((((rt0.c1 COLLATE NOCASE)OR((((0Xfffffffff59d2993))=((vt1.c1))))))AND((((rt0.c2))>=((rt0.c1))))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND ('0.6206198261991518')))))OR('' COLLATE BINARY)) WHERE (vt1.c1) ORDER BY ((((((rt0.c1)AND(vt1.c1)))OR(vt1.c1))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c1) AND (rt0.c0))) AND ((rt0.c1 IN ())));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(ABS(DISTINCT rt0.c1) AS INTEGER) WHERE (CASE CAST(vt1.c1 AS BLOB)  WHEN ((rt0.c2) IS FALSE) THEN CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c1 AS BLOB)  WHEN ((rt0.c2) IS FALSE) THEN CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 END END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(ABS(DISTINCT rt0.c1) AS INTEGER));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(ABS(DISTINCT rt0.c1) AS INTEGER) WHERE (CASE CAST(vt1.c1 AS BLOB)  WHEN ((rt0.c2) IS FALSE) THEN CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c1 AS BLOB)  WHEN ((rt0.c2) IS FALSE) THEN CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 END END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(ABS(DISTINCT rt0.c1) AS INTEGER));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(ABS(DISTINCT rt0.c1) AS INTEGER) WHERE (CASE CAST(vt1.c1 AS BLOB)  WHEN ((rt0.c2) IS FALSE) THEN CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 END END);
SELECT * FROM rt0, vt1, v0 WHERE ((((vt1.c0)) BETWEEN ((((rt0.c0) ISNULL))) AND ((((v0.c0) NOT NULL))))) ORDER BY ((NULL COLLATE BINARY)/(((vt1.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((rt0.c0) ISNULL))) AND ((((v0.c0) NOT NULL))))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY ((NULL COLLATE BINARY)/(((vt1.c0) NOT NULL))) DESC);
SELECT * FROM rt0, vt1, v0 WHERE ((((vt1.c0)) BETWEEN ((((rt0.c0) ISNULL))) AND ((((v0.c0) NOT NULL))))) ORDER BY ((NULL COLLATE BINARY)/(((vt1.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((rt0.c0) ISNULL))) AND ((((v0.c0) NOT NULL))))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY ((NULL COLLATE BINARY)/(((vt1.c0) NOT NULL))) DESC);
SELECT * FROM rt0, vt1, v0 WHERE ((((vt1.c0)) BETWEEN ((((rt0.c0) ISNULL))) AND ((((v0.c0) NOT NULL))))) ORDER BY ((NULL COLLATE BINARY)/(((vt1.c0) NOT NULL))) DESC;
SELECT * FROM rt0, v0, vt1 WHERE (COALESCE(CAST(NULL AS INTEGER), (((vt1.c1))<=((rt0.c1))))) ORDER BY '1374946565' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(CAST(NULL AS INTEGER), (((vt1.c1))<=((rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY '1374946565' ASC  NULLS LAST);
SELECT * FROM rt0, v0, vt1 WHERE (COALESCE(CAST(NULL AS INTEGER), (((vt1.c1))<=((rt0.c1))))) ORDER BY '1374946565' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(CAST(NULL AS INTEGER), (((vt1.c1))<=((rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY '1374946565' ASC  NULLS LAST);
SELECT * FROM rt0, v0, vt1 WHERE (COALESCE(CAST(NULL AS INTEGER), (((vt1.c1))<=((rt0.c1))))) ORDER BY '1374946565' ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((ABS(DISTINCT v0.c0))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.8939154002224946))))))OR(((rt0.c0)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((ABS(DISTINCT v0.c0))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.8939154002224946))))))OR(((rt0.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((ABS(DISTINCT v0.c0))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.8939154002224946))))))OR(((rt0.c0)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((ABS(DISTINCT v0.c0))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.8939154002224946))))))OR(((rt0.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((ABS(DISTINCT v0.c0))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.8939154002224946))))))OR(((rt0.c0)IS NOT(rt0.c1)))));
SELECT ALL * FROM vt1, rt0 WHERE ((((- (vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((- (vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((- (vt1.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt1 ON UNLIKELY(((vt1.c0) NOT NULL)) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON UNLIKELY(((vt1.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt1 ON UNLIKELY(((vt1.c0) NOT NULL)) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON UNLIKELY(((vt1.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt1 ON UNLIKELY(((vt1.c0) NOT NULL)) WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1, rt0, v0 WHERE (CAST((rt0.c1 IN ()) AS INTEGER)) ORDER BY ((rt0.c2)/(json_patch(v0.c0, rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY ((rt0.c2)/(json_patch(v0.c0, rt0.c1)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, v0 WHERE (CAST((rt0.c1 IN ()) AS INTEGER)) ORDER BY ((rt0.c2)/(json_patch(v0.c0, rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY ((rt0.c2)/(json_patch(v0.c0, rt0.c1)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, v0 WHERE (CAST((rt0.c1 IN ()) AS INTEGER)) ORDER BY ((rt0.c2)/(json_patch(v0.c0, rt0.c1)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c0);
SELECT * FROM vt1 NOT INDEXED WHERE (CASE CASE WHEN vt1.c0 THEN '' ELSE vt1.c1 END  WHEN (- (vt1.c1)) THEN (vt1.c1 IN (x'')) ELSE (((vt1.c1))<((vt1.c0))) END) ORDER BY ((vt1.c0 IN (vt1.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt1.c0 THEN '' ELSE vt1.c1 END  WHEN (- (vt1.c1)) THEN (vt1.c1 IN (x'')) ELSE (((vt1.c1))<((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 IN (vt1.c1)) IN ())  NULLS FIRST);
SELECT * FROM vt1 NOT INDEXED WHERE (CASE CASE WHEN vt1.c0 THEN '' ELSE vt1.c1 END  WHEN (- (vt1.c1)) THEN (vt1.c1 IN (x'')) ELSE (((vt1.c1))<((vt1.c0))) END) ORDER BY ((vt1.c0 IN (vt1.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt1.c0 THEN '' ELSE vt1.c1 END  WHEN (- (vt1.c1)) THEN (vt1.c1 IN (x'')) ELSE (((vt1.c1))<((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 IN (vt1.c1)) IN ())  NULLS FIRST);
SELECT * FROM vt1 NOT INDEXED WHERE (CASE CASE WHEN vt1.c0 THEN '' ELSE vt1.c1 END  WHEN (- (vt1.c1)) THEN (vt1.c1 IN (x'')) ELSE (((vt1.c1))<((vt1.c0))) END) ORDER BY ((vt1.c0 IN (vt1.c1)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL)) ORDER BY (((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))|(v0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))|(v0.c0 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL)) ORDER BY (((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))|(v0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))|(v0.c0 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL)) ORDER BY (((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))|(v0.c0 COLLATE BINARY)) ASC;
SELECT * FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (('Qa)T')*(v0.c0)) THEN (~ (0.8421913208945735)) ELSE ((v0.c0)>=(v0.c0)) END) ORDER BY CASE '-2034253468' COLLATE BINARY  WHEN ((v0.c0) NOT NULL) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN (- (v0.c0)) THEN json_quote(v0.c0) WHEN (((v0.c0))<>((v0.c0))) THEN v0.c0 ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (('Qa)T')*(v0.c0)) THEN (~ (0.8421913208945735)) ELSE ((v0.c0)>=(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY CASE '-2034253468' COLLATE BINARY  WHEN ((v0.c0) NOT NULL) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN (- (v0.c0)) THEN json_quote(v0.c0) WHEN (((v0.c0))<>((v0.c0))) THEN v0.c0 ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT * FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (('Qa)T')*(v0.c0)) THEN (~ (0.8421913208945735)) ELSE ((v0.c0)>=(v0.c0)) END) ORDER BY CASE '-2034253468' COLLATE BINARY  WHEN ((v0.c0) NOT NULL) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN (- (v0.c0)) THEN json_quote(v0.c0) WHEN (((v0.c0))<>((v0.c0))) THEN v0.c0 ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (('Qa)T')*(v0.c0)) THEN (~ (0.8421913208945735)) ELSE ((v0.c0)>=(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY CASE '-2034253468' COLLATE BINARY  WHEN ((v0.c0) NOT NULL) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN (- (v0.c0)) THEN json_quote(v0.c0) WHEN (((v0.c0))<>((v0.c0))) THEN v0.c0 ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT * FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (('Qa)T')*(v0.c0)) THEN (~ (0.8421913208945735)) ELSE ((v0.c0)>=(v0.c0)) END) ORDER BY CASE '-2034253468' COLLATE BINARY  WHEN ((v0.c0) NOT NULL) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN (- (v0.c0)) THEN json_quote(v0.c0) WHEN (((v0.c0))<>((v0.c0))) THEN v0.c0 ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END;
SELECT * FROM rt0 INNER JOIN vt1 ON ((((vt1.c0)<<(rt0.c0)))<<((((rt0.c2, '1144403711', rt0.c0))<>(('0.8933602201585632', v0.c0, vt1.c1))))) LEFT OUTER JOIN v0 ON ((TOTAL_CHANGES())<>(((rt0.c1)+(v0.c0)))) WHERE ((((((vt1.c1))<((vt1.c1)))) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1))<((vt1.c1)))) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (vt1.c1))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((vt1.c0)<<(rt0.c0)))<<((((rt0.c2, '1144403711', rt0.c0))<>(('0.8933602201585632', v0.c0, vt1.c1))))) LEFT OUTER JOIN v0 ON ((TOTAL_CHANGES())!=(((rt0.c1)+(v0.c0)))));
SELECT * FROM rt0 INNER JOIN vt1 ON ((((vt1.c0)<<(rt0.c0)))<<((((rt0.c2, '1144403711', rt0.c0))<>(('0.8933602201585632', v0.c0, vt1.c1))))) LEFT OUTER JOIN v0 ON ((TOTAL_CHANGES())<>(((rt0.c1)+(v0.c0)))) WHERE ((((((vt1.c1))<((vt1.c1)))) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1))<((vt1.c1)))) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (vt1.c1))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((vt1.c0)<<(rt0.c0)))<<((((rt0.c2, '1144403711', rt0.c0))<>(('0.8933602201585632', v0.c0, vt1.c1))))) LEFT OUTER JOIN v0 ON ((TOTAL_CHANGES())!=(((rt0.c1)+(v0.c0)))));
SELECT * FROM rt0 INNER JOIN vt1 ON ((((vt1.c0)<<(rt0.c0)))<<((((rt0.c2, '1144403711', rt0.c0))<>(('0.8933602201585632', v0.c0, vt1.c1))))) LEFT OUTER JOIN v0 ON ((TOTAL_CHANGES())<>(((rt0.c1)+(v0.c0)))) WHERE ((((((vt1.c1))<((vt1.c1)))) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (vt1.c1)));
SELECT ALL * FROM v0, vt1 WHERE ((NOT (((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE ((NOT (((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE ((NOT (((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT ALL * FROM v0 WHERE (CAST((NOT (v0.c0)) AS INTEGER)) ORDER BY CASE (0.30271042846922225 IN (x''))  WHEN HEX(DISTINCT v0.c0) THEN TYPEOF(v0.c0) WHEN ('ymh' IN (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(x'')) WHEN v0.c0 COLLATE BINARY THEN ((v0.c0) IS FALSE) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY CASE (0.30271042846922225 IN (x''))  WHEN HEX(DISTINCT v0.c0) THEN TYPEOF(v0.c0) WHEN ('ymh' IN (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(x'')) WHEN v0.c0 COLLATE BINARY THEN ((v0.c0) IS FALSE) END DESC);
SELECT ALL * FROM v0 WHERE (CAST((NOT (v0.c0)) AS INTEGER)) ORDER BY CASE (0.30271042846922225 IN (x''))  WHEN HEX(DISTINCT v0.c0) THEN TYPEOF(v0.c0) WHEN ('ymh' IN (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(x'')) WHEN v0.c0 COLLATE BINARY THEN ((v0.c0) IS FALSE) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY CASE (0.30271042846922225 IN (x''))  WHEN HEX(DISTINCT v0.c0) THEN TYPEOF(v0.c0) WHEN ('ymh' IN (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(x'')) WHEN v0.c0 COLLATE BINARY THEN ((v0.c0) IS FALSE) END DESC);
SELECT ALL * FROM v0 WHERE (CAST((NOT (v0.c0)) AS INTEGER)) ORDER BY CASE (0.30271042846922225 IN (x''))  WHEN HEX(DISTINCT v0.c0) THEN TYPEOF(v0.c0) WHEN ('ymh' IN (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(x'')) WHEN v0.c0 COLLATE BINARY THEN ((v0.c0) IS FALSE) END DESC;
SELECT * FROM rt0, v0, vt1 NOT INDEXED WHERE ((x'd057' IN (CAST(vt1.c0 AS TEXT)))) ORDER BY (((((rt0.c0))<>((vt1.c1))))GLOB((~ (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'd057' IN (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (((((rt0.c0))!=((vt1.c1))))GLOB((~ (rt0.c1)))) ASC);
SELECT * FROM rt0, v0, vt1 NOT INDEXED WHERE ((x'd057' IN (CAST(vt1.c0 AS TEXT)))) ORDER BY (((((rt0.c0))<>((vt1.c1))))GLOB((~ (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'd057' IN (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (((((rt0.c0))!=((vt1.c1))))GLOB((~ (rt0.c1)))) ASC);
SELECT * FROM rt0, v0, vt1 NOT INDEXED WHERE ((x'd057' IN (CAST(vt1.c0 AS TEXT)))) ORDER BY (((((rt0.c0))<>((vt1.c1))))GLOB((~ (rt0.c1)))) ASC;
SELECT * FROM vt1 WHERE ((+ (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (vt1.c0 COLLATE RTRIM)));
SELECT * FROM vt1, v0 WHERE (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) COLLATE RTRIM) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 NOT INDEXED, v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt1, v0 WHERE (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) COLLATE RTRIM) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 NOT INDEXED, v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt1, v0 WHERE (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) COLLATE RTRIM) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) NOT NULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt1 NATURAL JOIN rt0 WHERE ((((rt0.c1, vt1.c1, rt0.c1)) BETWEEN ((CAST(vt1.c1 AS TEXT), (NOT (rt0.c2)), (rt0.c1 IN (rt0.c0)))) AND ((((rt0.c1)AND(NULL)), ((v0.c0) NOTNULL), ((v0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, vt1.c1, rt0.c1)) BETWEEN ((CAST(vt1.c1 AS TEXT), (NOT (rt0.c2)), (rt0.c1 IN (rt0.c0)))) AND ((((rt0.c1)AND(NULL)), ((v0.c0) NOTNULL), ((v0.c0) IS FALSE))))) IS TRUE)  as count FROM v0, vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0, vt1 NATURAL JOIN rt0 WHERE ((((rt0.c1, vt1.c1, rt0.c1)) BETWEEN ((CAST(vt1.c1 AS TEXT), (NOT (rt0.c2)), (rt0.c1 IN (rt0.c0)))) AND ((((rt0.c1)AND(NULL)), ((v0.c0) NOTNULL), ((v0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, vt1.c1, rt0.c1)) BETWEEN ((CAST(vt1.c1 AS TEXT), (NOT (rt0.c2)), (rt0.c1 IN (rt0.c0)))) AND ((((rt0.c1)AND(NULL)), ((v0.c0) NOTNULL), ((v0.c0) IS FALSE))))) IS TRUE)  as count FROM v0, vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0, vt1 NATURAL JOIN rt0 WHERE ((((rt0.c1, vt1.c1, rt0.c1)) BETWEEN ((CAST(vt1.c1 AS TEXT), (NOT (rt0.c2)), (rt0.c1 IN (rt0.c0)))) AND ((((rt0.c1)AND(NULL)), ((v0.c0) NOTNULL), ((v0.c0) IS FALSE)))));
SELECT ALL COUNT(*) FROM vt1, rt0 FULL OUTER JOIN v0 ON (((v0.c0, rt0.c1, v0.c0)) BETWEEN (((vt1.c1 IN ()), CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c1) NOT NULL))) AND ((TYPEOF(DISTINCT vt1.c1), (v0.c0 IN ()), SUBSTR(rt0.c2, vt1.c0)))) WHERE (((((vt1.c0)GLOB(vt1.c0))) ISNULL)) ORDER BY ((((rt0.c2)/(vt1.c1))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c1 END) AND (((((vt1.c1)OR(rt0.c0)))OR(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN v0 ON (((v0.c0, rt0.c1, v0.c0)) BETWEEN (((vt1.c1 IN ()), CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c1) NOT NULL))) AND ((TYPEOF(DISTINCT vt1.c1), (v0.c0 IN ()), SUBSTR(rt0.c2, vt1.c0)))) ORDER BY ((((rt0.c2)/(vt1.c1))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c1 END) AND (((((vt1.c1)OR(rt0.c0)))OR(vt1.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 FULL OUTER JOIN v0 ON (((v0.c0, rt0.c1, v0.c0)) BETWEEN (((vt1.c1 IN ()), CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c1) NOT NULL))) AND ((TYPEOF(DISTINCT vt1.c1), (v0.c0 IN ()), SUBSTR(rt0.c2, vt1.c0)))) WHERE (((((vt1.c0)GLOB(vt1.c0))) ISNULL)) ORDER BY ((((rt0.c2)/(vt1.c1))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c1 END) AND (((((vt1.c1)OR(rt0.c0)))OR(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN v0 ON (((v0.c0, rt0.c1, v0.c0)) BETWEEN (((vt1.c1 IN ()), CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c1) NOT NULL))) AND ((TYPEOF(DISTINCT vt1.c1), (v0.c0 IN ()), SUBSTR(rt0.c2, vt1.c0)))) ORDER BY ((((rt0.c2)/(vt1.c1))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c1 END) AND (((((vt1.c1)OR(rt0.c0)))OR(vt1.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 FULL OUTER JOIN v0 ON (((v0.c0, rt0.c1, v0.c0)) BETWEEN (((vt1.c1 IN ()), CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c1) NOT NULL))) AND ((TYPEOF(DISTINCT vt1.c1), (v0.c0 IN ()), SUBSTR(rt0.c2, vt1.c0)))) WHERE (((((vt1.c0)GLOB(vt1.c0))) ISNULL)) ORDER BY ((((rt0.c2)/(vt1.c1))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c1 END) AND (((((vt1.c1)OR(rt0.c0)))OR(vt1.c1)))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1) NOTNULL))<>((~ (vt1.c0))))) ORDER BY (((((NULL, vt1.c1, vt1.c1))>((vt1.c0, vt1.c0, -5.02032524E8)))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOTNULL))<>((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((NULL, vt1.c1, vt1.c1))>((vt1.c0, vt1.c0, -5.02032524E8)))) IS FALSE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1) NOTNULL))<>((~ (vt1.c0))))) ORDER BY (((((NULL, vt1.c1, vt1.c1))>((vt1.c0, vt1.c0, -5.02032524E8)))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOTNULL))<>((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((NULL, vt1.c1, vt1.c1))>((vt1.c0, vt1.c0, -5.02032524E8)))) IS FALSE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1) NOTNULL))<>((~ (vt1.c0))))) ORDER BY (((((NULL, vt1.c1, vt1.c1))>((vt1.c0, vt1.c0, -5.02032524E8)))) IS FALSE) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (((vt1.c1, vt1.c1, vt1.c1))=((' XqeZb,', vt1.c0, vt1.c0)))  WHEN LIKELY(vt1.c0) THEN vt1.c1 END) ORDER BY ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c1, vt1.c1, vt1.c1))=((' XqeZb,', vt1.c0, vt1.c0)))  WHEN LIKELY(vt1.c0) THEN vt1.c1 END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (((vt1.c1, vt1.c1, vt1.c1))=((' XqeZb,', vt1.c0, vt1.c0)))  WHEN LIKELY(vt1.c0) THEN vt1.c1 END) ORDER BY ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c1, vt1.c1, vt1.c1))=((' XqeZb,', vt1.c0, vt1.c0)))  WHEN LIKELY(vt1.c0) THEN vt1.c1 END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (((vt1.c1, vt1.c1, vt1.c1))=((' XqeZb,', vt1.c0, vt1.c0)))  WHEN LIKELY(vt1.c0) THEN vt1.c1 END) ORDER BY ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c0)));
SELECT ALL * FROM rt0, v0, vt1 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END))<=((((rt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)))))) ORDER BY (((v0.c0)IS NOT(vt1.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END))<=((((rt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)))))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (((v0.c0)IS NOT(vt1.c1)) IN ()) ASC);
SELECT ALL * FROM rt0, v0, vt1 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END))<=((((rt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)))))) ORDER BY (((v0.c0)IS NOT(vt1.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END))<=((((rt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)))))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (((v0.c0)IS NOT(vt1.c1)) IN ()) ASC);
SELECT ALL * FROM rt0, v0, vt1 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END))<=((((rt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)))))) ORDER BY (((v0.c0)IS NOT(vt1.c1)) IN ()) ASC;
SELECT ALL COUNT(*) FROM rt0, vt1 INNER JOIN v0 ON (((vt1.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)) IN ()) WHERE ((NOT ('-659390987'))) ORDER BY (((rt0.c2, vt1.c0, vt1.c0)) NOT BETWEEN (((NULL IN (rt0.c2, '-1070630875')), ((vt1.c1)LIKE(v0.c0)), ((v0.c0) IS TRUE))) AND ((((rt0.c1) BETWEEN (0xffffffffb4bf3641) AND (0.4285716994550367)), ('{F&w추' IN (vt1.c1)), ('0.7682445791718779' IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ('-659390987'))) IS TRUE)  as count FROM rt0, vt1 INNER JOIN v0 ON (((vt1.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)) IN ()) ORDER BY (((rt0.c2, vt1.c0, vt1.c0)) NOT BETWEEN (((NULL IN (rt0.c2, '-1070630875')), ((vt1.c1)LIKE(v0.c0)), ((v0.c0) IS TRUE))) AND ((((rt0.c1) BETWEEN (0Xffffffffb4bf3641) AND (0.4285716994550367)), ('{F&w추' IN (vt1.c1)), ('0.7682445791718779' IN ())))));
SELECT ALL COUNT(*) FROM rt0, vt1 INNER JOIN v0 ON (((vt1.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)) IN ()) WHERE ((NOT ('-659390987'))) ORDER BY (((rt0.c2, vt1.c0, vt1.c0)) NOT BETWEEN (((NULL IN (rt0.c2, '-1070630875')), ((vt1.c1)LIKE(v0.c0)), ((v0.c0) IS TRUE))) AND ((((rt0.c1) BETWEEN (0xffffffffb4bf3641) AND (0.4285716994550367)), ('{F&w추' IN (vt1.c1)), ('0.7682445791718779' IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ('-659390987'))) IS TRUE)  as count FROM rt0, vt1 INNER JOIN v0 ON (((vt1.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)) IN ()) ORDER BY (((rt0.c2, vt1.c0, vt1.c0)) NOT BETWEEN (((NULL IN (rt0.c2, '-1070630875')), ((vt1.c1)LIKE(v0.c0)), ((v0.c0) IS TRUE))) AND ((((rt0.c1) BETWEEN (0Xffffffffb4bf3641) AND (0.4285716994550367)), ('{F&w추' IN (vt1.c1)), ('0.7682445791718779' IN ())))));
SELECT ALL COUNT(*) FROM rt0, vt1 INNER JOIN v0 ON (((vt1.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)) IN ()) WHERE ((NOT ('-659390987'))) ORDER BY (((rt0.c2, vt1.c0, vt1.c0)) NOT BETWEEN (((NULL IN (rt0.c2, '-1070630875')), ((vt1.c1)LIKE(v0.c0)), ((v0.c0) IS TRUE))) AND ((((rt0.c1) BETWEEN (0xffffffffb4bf3641) AND (0.4285716994550367)), ('{F&w추' IN (vt1.c1)), ('0.7682445791718779' IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))!=(NULLIF(rt0.c2, rt0.c0)))) ORDER BY ((((CAST(rt0.c2 AS REAL))AND(load_extension(rt0.c0))))AND(((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))<>(NULLIF(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c2 AS REAL))AND(load_extension(rt0.c0))))AND(((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))!=(NULLIF(rt0.c2, rt0.c0)))) ORDER BY ((((CAST(rt0.c2 AS REAL))AND(load_extension(rt0.c0))))AND(((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))<>(NULLIF(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c2 AS REAL))AND(load_extension(rt0.c0))))AND(((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(rt0.c0 COLLATE BINARY AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 COLLATE BINARY AS NUMERIC) DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(rt0.c0 COLLATE BINARY AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 COLLATE BINARY AS NUMERIC) DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(rt0.c0 COLLATE BINARY AS NUMERIC) DESC;
SELECT ALL * FROM v0, vt1 WHERE (((((('	rV' IN (vt1.c0)))OR(0xffffffffda3b4ea7)))AND('z_짉^D}B')));
SELECT SUM(count) FROM (SELECT ((((((('	rV' IN (vt1.c0)))OR(0xffffffffda3b4ea7)))AND('z_짉^D}B'))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((((('	rV' IN (vt1.c0)))OR(0xffffffffda3b4ea7)))AND('z_짉^D}B')));
SELECT SUM(count) FROM (SELECT ((((((('	rV' IN (vt1.c0)))OR(0xffffffffda3b4ea7)))AND('z_짉^D}B'))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((((('	rV' IN (vt1.c0)))OR(0xffffffffda3b4ea7)))AND('z_짉^D}B')));
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (CASE WHEN 0.08139372253128385 THEN ((((rt0.c2)AND(vt1.c0)))OR(rt0.c1)) ELSE 'G5L2' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.08139372253128385 THEN ((((rt0.c2)AND(vt1.c0)))OR(rt0.c1)) ELSE 'G5L2' END) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (CASE WHEN 0.08139372253128385 THEN ((((rt0.c2)AND(vt1.c0)))OR(rt0.c1)) ELSE 'G5L2' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.08139372253128385 THEN ((((rt0.c2)AND(vt1.c0)))OR(rt0.c1)) ELSE 'G5L2' END) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (CASE WHEN 0.08139372253128385 THEN ((((rt0.c2)AND(vt1.c0)))OR(rt0.c1)) ELSE 'G5L2' END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN (((v0.c0))>((rt0.c0))) WHEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN x'' WHEN (rt0.c1 IN ()) THEN CAST(rt0.c0 AS INTEGER) END) ORDER BY ((((rt0.c2)GLOB(rt0.c0)))+(((rt0.c0) ISNULL))), (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (((((((((v0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2))) AND ((+ (rt0.c1)))) DESC  NULLS LAST, ((((((((((rt0.c1) IS FALSE))OR(CAST(v0.c0 AS REAL))))AND((+ (x'')))))OR(CASE WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0Xffffffff9c52a91c ELSE v0.c0 END)))AND(LIKELY(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS TEXT) THEN (((v0.c0))>((rt0.c0))) WHEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN x'' WHEN (rt0.c1 IN ()) THEN CAST(rt0.c0 AS INTEGER) END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2)GLOB(rt0.c0)))+(((rt0.c0) ISNULL))), (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (((((((((v0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2))) AND ((+ (rt0.c1)))) DESC  NULLS LAST, ((((((((((rt0.c1) IS FALSE))OR(CAST(v0.c0 AS REAL))))AND((+ (x'')))))OR(CASE WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0Xffffffff9c52a91c ELSE v0.c0 END)))AND(LIKELY(rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN (((v0.c0))>((rt0.c0))) WHEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN x'' WHEN (rt0.c1 IN ()) THEN CAST(rt0.c0 AS INTEGER) END) ORDER BY ((((rt0.c2)GLOB(rt0.c0)))+(((rt0.c0) ISNULL))), (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (((((((((v0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2))) AND ((+ (rt0.c1)))) DESC  NULLS LAST, ((((((((((rt0.c1) IS FALSE))OR(CAST(v0.c0 AS REAL))))AND((+ (x'')))))OR(CASE WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0Xffffffff9c52a91c ELSE v0.c0 END)))AND(LIKELY(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS TEXT) THEN (((v0.c0))>((rt0.c0))) WHEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN x'' WHEN (rt0.c1 IN ()) THEN CAST(rt0.c0 AS INTEGER) END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2)GLOB(rt0.c0)))+(((rt0.c0) ISNULL))), (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (((((((((v0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2))) AND ((+ (rt0.c1)))) DESC  NULLS LAST, ((((((((((rt0.c1) IS FALSE))OR(CAST(v0.c0 AS REAL))))AND((+ (x'')))))OR(CASE WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0Xffffffff9c52a91c ELSE v0.c0 END)))AND(LIKELY(rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN (((v0.c0))>((rt0.c0))) WHEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN x'' WHEN (rt0.c1 IN ()) THEN CAST(rt0.c0 AS INTEGER) END) ORDER BY ((((rt0.c2)GLOB(rt0.c0)))+(((rt0.c0) ISNULL))), (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) BETWEEN (((((((((v0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2))) AND ((+ (rt0.c1)))) DESC  NULLS LAST, ((((((((((rt0.c1) IS FALSE))OR(CAST(v0.c0 AS REAL))))AND((+ (x'')))))OR(CASE WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0Xffffffff9c52a91c ELSE v0.c0 END)))AND(LIKELY(rt0.c1))) ASC;
SELECT * FROM vt1, rt0, v0 WHERE ((('') BETWEEN (v0.c0) AND (vt1.c1)) COLLATE BINARY) ORDER BY ((((((NULL) NOT BETWEEN (vt1.c1) AND (rt0.c2)))OR(CAST(rt0.c2 AS NUMERIC))))OR(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN (v0.c0) AND (vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY ((((((NULL) NOT BETWEEN (vt1.c1) AND (rt0.c2)))OR(CAST(rt0.c2 AS NUMERIC))))OR(rt0.c2))  NULLS FIRST);
SELECT * FROM vt1, rt0, v0 WHERE ((('') BETWEEN (v0.c0) AND (vt1.c1)) COLLATE BINARY) ORDER BY ((((((NULL) NOT BETWEEN (vt1.c1) AND (rt0.c2)))OR(CAST(rt0.c2 AS NUMERIC))))OR(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN (v0.c0) AND (vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY ((((((NULL) NOT BETWEEN (vt1.c1) AND (rt0.c2)))OR(CAST(rt0.c2 AS NUMERIC))))OR(rt0.c2))  NULLS FIRST);
SELECT * FROM vt1, rt0, v0 WHERE ((('') BETWEEN (v0.c0) AND (vt1.c1)) COLLATE BINARY) ORDER BY ((((((NULL) NOT BETWEEN (vt1.c1) AND (rt0.c2)))OR(CAST(rt0.c2 AS NUMERIC))))OR(rt0.c2))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((- ((((v0.c0))!=((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((v0.c0))<>((v0.c0)))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((- ((((v0.c0))!=((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((v0.c0))<>((v0.c0)))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((- ((((v0.c0))!=((v0.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c0))=((vt1.c1))), CAST(vt1.c0 AS NUMERIC), 0.8979694794113201, (rt0.c1 IN ()), UPPER(DISTINCT rt0.c2)))==((((rt0.c1)<=(rt0.c2)), ((rt0.c0) IS FALSE), ((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)), (rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0))=((vt1.c1))), CAST(vt1.c0 AS NUMERIC), 0.8979694794113201, (rt0.c1 IN ()), UPPER(DISTINCT rt0.c2)))==((((rt0.c1)<=(rt0.c2)), ((rt0.c0) IS FALSE), ((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)), (rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c0))=((vt1.c1))), CAST(vt1.c0 AS NUMERIC), 0.8979694794113201, (rt0.c1 IN ()), UPPER(DISTINCT rt0.c2)))==((((rt0.c1)<=(rt0.c2)), ((rt0.c0) IS FALSE), ((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)), (rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0))=((vt1.c1))), CAST(vt1.c0 AS NUMERIC), 0.8979694794113201, (rt0.c1 IN ()), UPPER(DISTINCT rt0.c2)))==((((rt0.c1)<=(rt0.c2)), ((rt0.c0) IS FALSE), ((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)), (rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c0))=((vt1.c1))), CAST(vt1.c0 AS NUMERIC), 0.8979694794113201, (rt0.c1 IN ()), UPPER(DISTINCT rt0.c2)))==((((rt0.c1)<=(rt0.c2)), ((rt0.c0) IS FALSE), ((rt0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)), (rt0.c0 IN ())))));
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (CAST((- (vt1.c1)) AS TEXT)) ORDER BY (- (((rt0.c0)||(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY (- (((rt0.c0)||(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (CAST((- (vt1.c1)) AS TEXT)) ORDER BY (- (((rt0.c0)||(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY (- (((rt0.c0)||(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (CAST((- (vt1.c1)) AS TEXT)) ORDER BY (- (((rt0.c0)||(vt1.c0)))) ASC;
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((((rt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN ())) ORDER BY ABS(DISTINCT ((rt0.c2) ISNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN ())) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ABS(DISTINCT ((rt0.c2) ISNULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((((rt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN ())) ORDER BY ABS(DISTINCT ((rt0.c2) ISNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN ())) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ABS(DISTINCT ((rt0.c2) ISNULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((((rt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN ())) ORDER BY ABS(DISTINCT ((rt0.c2) ISNULL))  NULLS FIRST;
SELECT * FROM vt1 WHERE ((- ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((NULL)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((NULL)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((NULL))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (UPPER(UNLIKELY(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(UNLIKELY(vt1.c0))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (UPPER(UNLIKELY(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(UNLIKELY(vt1.c0))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (UPPER(UNLIKELY(vt1.c0)));
SELECT ALL * FROM v0, vt1 WHERE ((~ (CAST(vt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt1.c1 AS BLOB)))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE ((~ (CAST(vt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt1.c1 AS BLOB)))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE ((~ (CAST(vt1.c1 AS BLOB))));
SELECT ALL * FROM rt0, v0 WHERE ((~ ((((rt0.c1))=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c1))=((rt0.c1)))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((~ ((((rt0.c1))=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c1))=((rt0.c1)))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((~ ((((rt0.c1))=((rt0.c1))))));
SELECT ALL * FROM v0 WHERE (0x7461ba82);
SELECT SUM(count) FROM (SELECT ALL ((0X7461ba82) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0x7461ba82);
SELECT SUM(count) FROM (SELECT ALL ((0X7461ba82) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0x7461ba82);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE ((((vt1.c0) NOTNULL) IN ())) ORDER BY UPPER(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c1 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY UPPER(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c1 END) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE ((((vt1.c0) NOTNULL) IN ())) ORDER BY UPPER(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c1 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY UPPER(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c1 END) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE ((((vt1.c0) NOTNULL) IN ())) ORDER BY UPPER(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c1 END) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(NULL)))OR('t0'))) IS TRUE)) ORDER BY ((((PRINTF(vt1.c0))OR(TYPEOF(vt1.c1))))OR((((vt1.c0))>=((0X299c943a))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(NULL)))OR('t0'))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((((PRINTF(vt1.c0))OR(TYPEOF(vt1.c1))))OR((((vt1.c0))>=((0X299c943a))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(NULL)))OR('t0'))) IS TRUE)) ORDER BY ((((PRINTF(vt1.c0))OR(TYPEOF(vt1.c1))))OR((((vt1.c0))>=((0X299c943a))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(NULL)))OR('t0'))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((((PRINTF(vt1.c0))OR(TYPEOF(vt1.c1))))OR((((vt1.c0))>=((0X299c943a))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(NULL)))OR('t0'))) IS TRUE)) ORDER BY ((((PRINTF(vt1.c0))OR(TYPEOF(vt1.c1))))OR((((vt1.c0))>=((0X299c943a))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) IS FALSE)) ORDER BY CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) IS FALSE)) ORDER BY CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) IS FALSE)) ORDER BY CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) AS REAL);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) WHERE (((((vt1.c1) NOT NULL))LIKE(CASE WHEN rt0.c1 THEN rt0.c2 ELSE 0.15720150710514846 END))) ORDER BY (- (((rt0.c1) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT NULL))LIKE(CASE WHEN rt0.c1 THEN rt0.c2 ELSE 0.15720150710514846 END))) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) ORDER BY (- (((rt0.c1) ISNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) WHERE (((((vt1.c1) NOT NULL))LIKE(CASE WHEN rt0.c1 THEN rt0.c2 ELSE 0.15720150710514846 END))) ORDER BY (- (((rt0.c1) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT NULL))LIKE(CASE WHEN rt0.c1 THEN rt0.c2 ELSE 0.15720150710514846 END))) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) ORDER BY (- (((rt0.c1) ISNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) WHERE (((((vt1.c1) NOT NULL))LIKE(CASE WHEN rt0.c1 THEN rt0.c2 ELSE 0.15720150710514846 END))) ORDER BY (- (((rt0.c1) ISNULL))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 NOT INDEXED, rt0, vt1 WHERE ((- (CASE rt0.c0  WHEN vt1.c0 THEN rt0.c2 END))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt0.c0  WHEN vt1.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL * FROM v0 NOT INDEXED, rt0, vt1 WHERE ((- (CASE rt0.c0  WHEN vt1.c0 THEN rt0.c2 END))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt0.c0  WHEN vt1.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL * FROM v0 NOT INDEXED, rt0, vt1 WHERE ((- (CASE rt0.c0  WHEN vt1.c0 THEN rt0.c2 END))) ORDER BY NULL ASC  NULLS LAST;
SELECT ALL * FROM vt1, v0 WHERE (CAST(((vt1.c0)IS NOT(v0.c0)) AS BLOB)) ORDER BY x''  NULLS LAST, CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((vt1.c1)AND(vt1.c1)))AND('1211228531')) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)IS NOT(v0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, v0 ORDER BY x''  NULLS LAST, CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((vt1.c1)AND(vt1.c1)))AND('1211228531')) END DESC);
SELECT ALL * FROM vt1, v0 WHERE (CAST(((vt1.c0)IS NOT(v0.c0)) AS BLOB)) ORDER BY x''  NULLS LAST, CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((vt1.c1)AND(vt1.c1)))AND('1211228531')) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)IS NOT(v0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, v0 ORDER BY x''  NULLS LAST, CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((vt1.c1)AND(vt1.c1)))AND('1211228531')) END DESC);
SELECT ALL * FROM vt1, v0 WHERE (CAST(((vt1.c0)IS NOT(v0.c0)) AS BLOB)) ORDER BY x''  NULLS LAST, CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((vt1.c1)AND(vt1.c1)))AND('1211228531')) END DESC;
SELECT ALL * FROM rt0 WHERE ('-2039100329') ORDER BY ((rt0.c0 IN ()) IN ()) ASC  NULLS LAST, (((rt0.c0)) BETWEEN ((((rt0.c0)+(rt0.c2)))) AND (((((rt0.c1, rt0.c1, rt0.c0))<((rt0.c2, rt0.c1, rt0.c2)))))) DESC;
SELECT SUM(count) FROM (SELECT (('-2039100329') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 IN ()) IN ()) ASC  NULLS LAST, (((rt0.c0)) BETWEEN ((((rt0.c0)+(rt0.c2)))) AND (((((rt0.c1, rt0.c1, rt0.c0))<((rt0.c2, rt0.c1, rt0.c2)))))) DESC);
SELECT ALL * FROM rt0 WHERE ('-2039100329') ORDER BY ((rt0.c0 IN ()) IN ()) ASC  NULLS LAST, (((rt0.c0)) BETWEEN ((((rt0.c0)+(rt0.c2)))) AND (((((rt0.c1, rt0.c1, rt0.c0))<((rt0.c2, rt0.c1, rt0.c2)))))) DESC;
SELECT SUM(count) FROM (SELECT (('-2039100329') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 IN ()) IN ()) ASC  NULLS LAST, (((rt0.c0)) BETWEEN ((((rt0.c0)+(rt0.c2)))) AND (((((rt0.c1, rt0.c1, rt0.c0))<((rt0.c2, rt0.c1, rt0.c2)))))) DESC);
SELECT ALL * FROM rt0 WHERE ('-2039100329') ORDER BY ((rt0.c0 IN ()) IN ()) ASC  NULLS LAST, (((rt0.c0)) BETWEEN ((((rt0.c0)+(rt0.c2)))) AND (((((rt0.c1, rt0.c1, rt0.c0))<((rt0.c2, rt0.c1, rt0.c2)))))) DESC;
SELECT * FROM rt0, v0 WHERE ((((rt0.c0 IN ())) ISNULL)) ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c1)/(NULL)))) AND ((v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c1)/(NULL)))) AND ((v0.c0))) DESC);
SELECT * FROM rt0, v0 WHERE ((((rt0.c0 IN ())) ISNULL)) ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c1)/(NULL)))) AND ((v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c1)/(NULL)))) AND ((v0.c0))) DESC);
SELECT * FROM rt0, v0 WHERE ((((rt0.c0 IN ())) ISNULL)) ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c1)/(NULL)))) AND ((v0.c0))) DESC;
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY ((((0.9876200424833049)-(0.09985666399086279))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((0.9876200424833049)-(0.09985666399086279))) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY ((((0.9876200424833049)-(0.09985666399086279))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((0.9876200424833049)-(0.09985666399086279))) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY ((((0.9876200424833049)-(0.09985666399086279))) IS TRUE) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN (v0.c0, v0.c0)) AS NUMERIC)) ORDER BY CASE WHEN CASE WHEN 0.7121201781622882 THEN v0.c0 END THEN NULL ELSE ((v0.c0)/(v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN (v0.c0, v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CASE WHEN 0.7121201781622882 THEN v0.c0 END THEN NULL ELSE ((v0.c0)/(v0.c0)) END DESC);
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN (v0.c0, v0.c0)) AS NUMERIC)) ORDER BY CASE WHEN CASE WHEN 0.7121201781622882 THEN v0.c0 END THEN NULL ELSE ((v0.c0)/(v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN (v0.c0, v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CASE WHEN 0.7121201781622882 THEN v0.c0 END THEN NULL ELSE ((v0.c0)/(v0.c0)) END DESC);
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN (v0.c0, v0.c0)) AS NUMERIC)) ORDER BY CASE WHEN CASE WHEN 0.7121201781622882 THEN v0.c0 END THEN NULL ELSE ((v0.c0)/(v0.c0)) END DESC;
SELECT ALL * FROM rt0, v0 WHERE (SUBSTR(rt0.c2, v0.c0) COLLATE RTRIM) ORDER BY CASE CAST(rt0.c0 AS REAL)  WHEN (rt0.c2 IN ()) THEN rt0.c2 ELSE CAST(rt0.c1 AS INTEGER) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SUBSTR(rt0.c2, v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE CAST(rt0.c0 AS REAL)  WHEN (rt0.c2 IN ()) THEN rt0.c2 ELSE CAST(rt0.c1 AS INTEGER) END ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (SUBSTR(rt0.c2, v0.c0) COLLATE RTRIM) ORDER BY CASE CAST(rt0.c0 AS REAL)  WHEN (rt0.c2 IN ()) THEN rt0.c2 ELSE CAST(rt0.c1 AS INTEGER) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SUBSTR(rt0.c2, v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE CAST(rt0.c0 AS REAL)  WHEN (rt0.c2 IN ()) THEN rt0.c2 ELSE CAST(rt0.c1 AS INTEGER) END ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (SUBSTR(rt0.c2, v0.c0) COLLATE RTRIM) ORDER BY CASE CAST(rt0.c0 AS REAL)  WHEN (rt0.c2 IN ()) THEN rt0.c2 ELSE CAST(rt0.c1 AS INTEGER) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(0X3f86a94b)))AND(v0.c0)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(0X3f86a94b)))AND(v0.c0)) ELSE x'' END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(0X3f86a94b)))AND(v0.c0)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(0X3f86a94b)))AND(v0.c0)) ELSE x'' END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(0X3f86a94b)))AND(v0.c0)) ELSE x'' END);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((((((vt1.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)), (((vt1.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))), ((v0.c0)>>(v0.c0))))<((CAST(rt0.c1 AS BLOB), ((rt0.c1) NOT BETWEEN (x'8910') AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (vt1.c1) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)), (((vt1.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))), ((v0.c0)>>(v0.c0))))<((CAST(rt0.c1 AS BLOB), ((rt0.c1) NOT BETWEEN (x'8910') AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (vt1.c1) AND (v0.c0)))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((((((vt1.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)), (((vt1.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))), ((v0.c0)>>(v0.c0))))<((CAST(rt0.c1 AS BLOB), ((rt0.c1) NOT BETWEEN (x'8910') AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (vt1.c1) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)), (((vt1.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))), ((v0.c0)>>(v0.c0))))<((CAST(rt0.c1 AS BLOB), ((rt0.c1) NOT BETWEEN (x'8910') AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (vt1.c1) AND (v0.c0)))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((((((vt1.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)), (((vt1.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))), ((v0.c0)>>(v0.c0))))<((CAST(rt0.c1 AS BLOB), ((rt0.c1) NOT BETWEEN (x'8910') AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (vt1.c1) AND (v0.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CASE vt1.c1  WHEN vt1.c1 THEN rt0.c2 END) IS FALSE)) ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c2)<>(vt1.c1)) WHEN ((vt1.c0)==(rt0.c1)) THEN (('X7SdT8')OR(rt0.c0)) WHEN vt1.c0 THEN ((rt0.c2)==(vt1.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c1  WHEN vt1.c1 THEN rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c2)<>(vt1.c1)) WHEN ((vt1.c0)=(rt0.c1)) THEN (('X7SdT8')OR(rt0.c0)) WHEN vt1.c0 THEN ((rt0.c2)==(vt1.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CASE vt1.c1  WHEN vt1.c1 THEN rt0.c2 END) IS FALSE)) ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c2)<>(vt1.c1)) WHEN ((vt1.c0)==(rt0.c1)) THEN (('X7SdT8')OR(rt0.c0)) WHEN vt1.c0 THEN ((rt0.c2)==(vt1.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c1  WHEN vt1.c1 THEN rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c2)<>(vt1.c1)) WHEN ((vt1.c0)=(rt0.c1)) THEN (('X7SdT8')OR(rt0.c0)) WHEN vt1.c0 THEN ((rt0.c2)==(vt1.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CASE vt1.c1  WHEN vt1.c1 THEN rt0.c2 END) IS FALSE)) ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c2)<>(vt1.c1)) WHEN ((vt1.c0)==(rt0.c1)) THEN (('X7SdT8')OR(rt0.c0)) WHEN vt1.c0 THEN ((rt0.c2)==(vt1.c1)) END  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 NATURAL JOIN v0 WHERE (TIME(rt0.c0, rt0.c2, ((0.10945397682463698) ISNULL), ((NULL) NOT BETWEEN (v0.c0) AND (rt0.c0)), CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((TIME(rt0.c0, rt0.c2, ((0.10945397682463698) ISNULL), ((NULL) NOT BETWEEN (v0.c0) AND (rt0.c0)), CAST(v0.c0 AS TEXT))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN v0);
SELECT ALL * FROM rt0, vt1 NATURAL JOIN v0 WHERE (TIME(rt0.c0, rt0.c2, ((0.10945397682463698) ISNULL), ((NULL) NOT BETWEEN (v0.c0) AND (rt0.c0)), CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((TIME(rt0.c0, rt0.c2, ((0.10945397682463698) ISNULL), ((NULL) NOT BETWEEN (v0.c0) AND (rt0.c0)), CAST(v0.c0 AS TEXT))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN v0);
SELECT ALL * FROM rt0, vt1 NATURAL JOIN v0 WHERE (TIME(rt0.c0, rt0.c2, ((0.10945397682463698) ISNULL), ((NULL) NOT BETWEEN (v0.c0) AND (rt0.c0)), CAST(v0.c0 AS TEXT)));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((vt1.c0)-(vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)-(vt1.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((vt1.c0)-(vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)-(vt1.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((vt1.c0)-(vt1.c0)) IN ()) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c1, 0Xffffffff945e8f66, v0.c0))<>((rt0.c0, '杹C?''', v0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, 0Xffffffff945e8f66, v0.c0))<>((rt0.c0, '杹C?''', v0.c0)))) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c1, 0Xffffffff945e8f66, v0.c0))<>((rt0.c0, '杹C?''', v0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, 0Xffffffff945e8f66, v0.c0))<>((rt0.c0, '杹C?''', v0.c0)))) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c1, 0Xffffffff945e8f66, v0.c0))<>((rt0.c0, '杹C?''', v0.c0)))) IS TRUE));
SELECT COUNT(*) FROM vt1, v0 WHERE (((LIKE('30663318', vt1.c0))+(v0.c0))) ORDER BY (((0.025455714093823745)/(v0.c0)) IN (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKE('30663318', vt1.c0))+(v0.c0))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((0.025455714093823745)/(v0.c0)) IN (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1, v0 WHERE (((LIKE('30663318', vt1.c0))+(v0.c0))) ORDER BY (((0.025455714093823745)/(v0.c0)) IN (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKE('30663318', vt1.c0))+(v0.c0))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((0.025455714093823745)/(v0.c0)) IN (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1, v0 WHERE (((LIKE('30663318', vt1.c0))+(v0.c0))) ORDER BY (((0.025455714093823745)/(v0.c0)) IN (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (rt0.c0);
SELECT * FROM rt0 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (UPPER(rt0.c1)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY (rt0.c2 IN ()), ((((rt0.c2)GLOB(x''))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) NOT BETWEEN (UPPER(rt0.c1)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()), ((((rt0.c2)GLOB(x''))) IS TRUE) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (UPPER(rt0.c1)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY (rt0.c2 IN ()), ((((rt0.c2)GLOB(x''))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) NOT BETWEEN (UPPER(rt0.c1)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()), ((((rt0.c2)GLOB(x''))) IS TRUE) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (UPPER(rt0.c1)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY (rt0.c2 IN ()), ((((rt0.c2)GLOB(x''))) IS TRUE) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (0.9786384037072704);
SELECT SUM(count) FROM (SELECT ((0.9786384037072704) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.9786384037072704);
SELECT SUM(count) FROM (SELECT ((0.9786384037072704) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.9786384037072704);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON HEX(LIKELIHOOD(rt0.c0, 0.47079032184516967)) WHERE (rt0.c0) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON HEX(LIKELIHOOD(rt0.c0, 0.47079032184516967)) ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON HEX(LIKELIHOOD(rt0.c0, 0.47079032184516967)) WHERE (rt0.c0) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON HEX(LIKELIHOOD(rt0.c0, 0.47079032184516967)) ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON HEX(LIKELIHOOD(rt0.c0, 0.47079032184516967)) WHERE (rt0.c0) ORDER BY rt0.c1 ASC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c1) ISNULL), rt0.c0 COLLATE BINARY, ((rt0.c0) NOTNULL))) AND ((((rt0.c1)==(rt0.c1)), x'', ((rt0.c0) IS FALSE))))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c1) ISNULL), rt0.c0 COLLATE BINARY, ((rt0.c0) NOTNULL))) AND ((((rt0.c1)==(rt0.c1)), x'', ((rt0.c0) IS FALSE))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c1) ISNULL), rt0.c0 COLLATE BINARY, ((rt0.c0) NOTNULL))) AND ((((rt0.c1)==(rt0.c1)), x'', ((rt0.c0) IS FALSE))))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c1) ISNULL), rt0.c0 COLLATE BINARY, ((rt0.c0) NOTNULL))) AND ((((rt0.c1)==(rt0.c1)), x'', ((rt0.c0) IS FALSE))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c1) ISNULL), rt0.c0 COLLATE BINARY, ((rt0.c0) NOTNULL))) AND ((((rt0.c1)==(rt0.c1)), x'', ((rt0.c0) IS FALSE))))) ORDER BY rt0.c2  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0, v0 WHERE ((((v0.c0) IS TRUE) IN ())) ORDER BY (((((vt1.c0))=((rt0.c0)))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2)%(vt1.c1))));
SELECT SUM(count) FROM (SELECT (((((v0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY (((((vt1.c0))=((rt0.c0)))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2)%(vt1.c1)))));
SELECT COUNT(*) FROM vt1, rt0, v0 WHERE ((((v0.c0) IS TRUE) IN ())) ORDER BY (((((vt1.c0))=((rt0.c0)))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2)%(vt1.c1))));
SELECT SUM(count) FROM (SELECT (((((v0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY (((((vt1.c0))=((rt0.c0)))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2)%(vt1.c1)))));
SELECT COUNT(*) FROM vt1, rt0, v0 WHERE ((((v0.c0) IS TRUE) IN ())) ORDER BY (((((vt1.c0))=((rt0.c0)))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2)%(vt1.c1))));
SELECT ALL COUNT(*) FROM v0 WHERE (((TRIM(v0.c0)) ISNULL)) ORDER BY ((((v0.c0) ISNULL))!=(((v0.c0) BETWEEN (v0.c0) AND ('-1938354536')))) ASC, (((~ (v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((v0.c0)=(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((TRIM(v0.c0)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) ISNULL))!=(((v0.c0) BETWEEN (v0.c0) AND ('-1938354536')))) ASC, (((~ (v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((v0.c0)==(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((TRIM(v0.c0)) ISNULL)) ORDER BY ((((v0.c0) ISNULL))!=(((v0.c0) BETWEEN (v0.c0) AND ('-1938354536')))) ASC, (((~ (v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((v0.c0)=(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((TRIM(v0.c0)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) ISNULL))!=(((v0.c0) BETWEEN (v0.c0) AND ('-1938354536')))) ASC, (((~ (v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((v0.c0)==(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((TRIM(v0.c0)) ISNULL)) ORDER BY ((((v0.c0) ISNULL))!=(((v0.c0) BETWEEN (v0.c0) AND ('-1938354536')))) ASC, (((~ (v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((v0.c0)=(v0.c0)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))AND(CAST(rt0.c0 AS INTEGER)))) ORDER BY (((rt0.c1 IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))AND(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ())) NOT NULL));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))AND(CAST(rt0.c0 AS INTEGER)))) ORDER BY (((rt0.c1 IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))AND(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ())) NOT NULL));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))AND(CAST(rt0.c0 AS INTEGER)))) ORDER BY (((rt0.c1 IN ())) NOT NULL);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (NULL COLLATE NOCASE) ORDER BY (+ (CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (+ (CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 END)));
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (NULL COLLATE NOCASE) ORDER BY (+ (CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (+ (CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 END)));
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (NULL COLLATE NOCASE) ORDER BY (+ (CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 END));
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<=(((NOT (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<=(((NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<=(((NOT (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<=(((NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<=(((NOT (rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 END)) AND ((((rt0.c1)*(x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 END)) AND ((((rt0.c1)*(x'')))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 END)) AND ((((rt0.c1)*(x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 END)) AND ((((rt0.c1)*(x'')))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 END)) AND ((((rt0.c1)*(x''))))));
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (((((('-1262537151')GLOB(''))))>((ABS(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((('-1262537151')GLOB(''))))>((ABS(x''))))) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (((((('-1262537151')GLOB(''))))>((ABS(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((('-1262537151')GLOB(''))))>((ABS(x''))))) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (((((('-1262537151')GLOB(''))))>((ABS(x'')))));
SELECT COUNT(*) FROM vt1 WHERE (UPPER(DISTINCT (((vt1.c0, vt1.c0, vt1.c1))<=((vt1.c1, NULL, vt1.c1))))) ORDER BY ((((((((((vt1.c0) NOT NULL))OR(((vt1.c0) IS TRUE))))OR(IFNULL(vt1.c0, vt1.c1))))AND((- (vt1.c0)))))OR(((vt1.c0) IS TRUE))), ((('&8w|o'))<=((((((((((0Xffffffffb6d0f610)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (((vt1.c0, vt1.c0, vt1.c1))<=((vt1.c1, NULL, vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0) NOT NULL))OR(((vt1.c0) IS TRUE))))OR(IFNULL(vt1.c0, vt1.c1))))AND((- (vt1.c0)))))OR(((vt1.c0) IS TRUE))), ((('&8w|o'))<=((((((((((0Xffffffffb6d0f610)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c1))))));
SELECT COUNT(*) FROM vt1 WHERE (UPPER(DISTINCT (((vt1.c0, vt1.c0, vt1.c1))<=((vt1.c1, NULL, vt1.c1))))) ORDER BY ((((((((((vt1.c0) NOT NULL))OR(((vt1.c0) IS TRUE))))OR(IFNULL(vt1.c0, vt1.c1))))AND((- (vt1.c0)))))OR(((vt1.c0) IS TRUE))), ((('&8w|o'))<=((((((((((0Xffffffffb6d0f610)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (((vt1.c0, vt1.c0, vt1.c1))<=((vt1.c1, NULL, vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0) NOT NULL))OR(((vt1.c0) IS TRUE))))OR(IFNULL(vt1.c0, vt1.c1))))AND((- (vt1.c0)))))OR(((vt1.c0) IS TRUE))), ((('&8w|o'))<=((((((((((0Xffffffffb6d0f610)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c1))))));
SELECT COUNT(*) FROM vt1 WHERE (UPPER(DISTINCT (((vt1.c0, vt1.c0, vt1.c1))<=((vt1.c1, NULL, vt1.c1))))) ORDER BY ((((((((((vt1.c0) NOT NULL))OR(((vt1.c0) IS TRUE))))OR(IFNULL(vt1.c0, vt1.c1))))AND((- (vt1.c0)))))OR(((vt1.c0) IS TRUE))), ((('&8w|o'))<=((((((((((0Xffffffffb6d0f610)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ('' IN ()) CROSS JOIN vt1 ON vt1.c1 WHERE (COALESCE(DISTINCT vt1.c1, CAST(v0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT vt1.c1, CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ('' IN ()) CROSS JOIN vt1 ON vt1.c1);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ('' IN ()) CROSS JOIN vt1 ON vt1.c1 WHERE (COALESCE(DISTINCT vt1.c1, CAST(v0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT vt1.c1, CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ('' IN ()) CROSS JOIN vt1 ON vt1.c1);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ('' IN ()) CROSS JOIN vt1 ON vt1.c1 WHERE (COALESCE(DISTINCT vt1.c1, CAST(v0.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE ((((rt0.c1)||(vt1.c0)) IN ((-592778884 IN ())))) ORDER BY (((((vt1.c1, v0.c0, vt1.c0, rt0.c2, v0.c0)) BETWEEN ((v0.c0, rt0.c0, '219260494', vt1.c0, vt1.c1)) AND ((rt0.c0, '-971182243', rt0.c0, '-1614426732', vt1.c1))))OR((((rt0.c0))<((NULL))))), ((((rt0.c0)IS NOT(rt0.c1)))IS(CAST(rt0.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)||(vt1.c0)) IN ((-592778884 IN ())))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (((((vt1.c1, v0.c0, vt1.c0, rt0.c2, v0.c0)) BETWEEN ((v0.c0, rt0.c0, '219260494', vt1.c0, vt1.c1)) AND ((rt0.c0, '-971182243', rt0.c0, '-1614426732', vt1.c1))))OR((((rt0.c0))<((NULL))))), ((((rt0.c0)IS NOT(rt0.c1)))IS(CAST(rt0.c0 AS TEXT))) ASC);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE ((((rt0.c1)||(vt1.c0)) IN ((-592778884 IN ())))) ORDER BY (((((vt1.c1, v0.c0, vt1.c0, rt0.c2, v0.c0)) BETWEEN ((v0.c0, rt0.c0, '219260494', vt1.c0, vt1.c1)) AND ((rt0.c0, '-971182243', rt0.c0, '-1614426732', vt1.c1))))OR((((rt0.c0))<((NULL))))), ((((rt0.c0)IS NOT(rt0.c1)))IS(CAST(rt0.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)||(vt1.c0)) IN ((-592778884 IN ())))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (((((vt1.c1, v0.c0, vt1.c0, rt0.c2, v0.c0)) BETWEEN ((v0.c0, rt0.c0, '219260494', vt1.c0, vt1.c1)) AND ((rt0.c0, '-971182243', rt0.c0, '-1614426732', vt1.c1))))OR((((rt0.c0))<((NULL))))), ((((rt0.c0)IS NOT(rt0.c1)))IS(CAST(rt0.c0 AS TEXT))) ASC);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE ((((rt0.c1)||(vt1.c0)) IN ((-592778884 IN ())))) ORDER BY (((((vt1.c1, v0.c0, vt1.c0, rt0.c2, v0.c0)) BETWEEN ((v0.c0, rt0.c0, '219260494', vt1.c0, vt1.c1)) AND ((rt0.c0, '-971182243', rt0.c0, '-1614426732', vt1.c1))))OR((((rt0.c0))<((NULL))))), ((((rt0.c0)IS NOT(rt0.c1)))IS(CAST(rt0.c0 AS TEXT))) ASC;
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((v0.c0)) NOT BETWEEN ((json_object(v0.c0, vt1.c1, v0.c0, vt1.c1))) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((json_object(v0.c0, vt1.c1, v0.c0, vt1.c1))) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((v0.c0)) NOT BETWEEN ((json_object(v0.c0, vt1.c1, v0.c0, vt1.c1))) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((json_object(v0.c0, vt1.c1, v0.c0, vt1.c1))) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((v0.c0)) NOT BETWEEN ((json_object(v0.c0, vt1.c1, v0.c0, vt1.c1))) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))));
SELECT ALL * FROM rt0, vt1, v0 WHERE ((((rt0.c2 IN ()))/(CAST(rt0.c1 AS NUMERIC)))) ORDER BY IFNULL(CAST(vt1.c0 AS INTEGER), ((('-1622313548', vt1.c0, rt0.c2)) BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))/(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY IFNULL(CAST(vt1.c0 AS INTEGER), ((('-1622313548', vt1.c0, rt0.c2)) BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, v0 WHERE ((((rt0.c2 IN ()))/(CAST(rt0.c1 AS NUMERIC)))) ORDER BY IFNULL(CAST(vt1.c0 AS INTEGER), ((('-1622313548', vt1.c0, rt0.c2)) BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))/(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY IFNULL(CAST(vt1.c0 AS INTEGER), ((('-1622313548', vt1.c0, rt0.c2)) BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, v0 WHERE ((((rt0.c2 IN ()))/(CAST(rt0.c1 AS NUMERIC)))) ORDER BY IFNULL(CAST(vt1.c0 AS INTEGER), ((('-1622313548', vt1.c0, rt0.c2)) BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (((CAST(0Xffffffffa35d8dfd AS REAL))<(((v0.c0)+(v0.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN ((rt0.c0 IN ())) AND (CASE rt0.c1  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0Xffffffffa35d8dfd AS REAL))<(((v0.c0)+(v0.c0))))) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN ((rt0.c0 IN ())) AND (CASE rt0.c1  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (((CAST(0Xffffffffa35d8dfd AS REAL))<(((v0.c0)+(v0.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN ((rt0.c0 IN ())) AND (CASE rt0.c1  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0Xffffffffa35d8dfd AS REAL))<(((v0.c0)+(v0.c0))))) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN ((rt0.c0 IN ())) AND (CASE rt0.c1  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (((CAST(0Xffffffffa35d8dfd AS REAL))<(((v0.c0)+(v0.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN ((rt0.c0 IN ())) AND (CASE rt0.c1  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END));
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE ((((vt1.c1, rt0.c2, rt0.c1)) BETWEEN ((((vt1.c1) IS FALSE), v0.c0, CAST(rt0.c0 AS TEXT))) AND (((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1))), CAST(v0.c0 AS NUMERIC), CAST(rt0.c1 AS BLOB))))) ORDER BY (- ((((rt0.c0, vt1.c1, v0.c0))>=((vt1.c0, rt0.c2, rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1, rt0.c2, rt0.c1)) BETWEEN ((((vt1.c1) IS FALSE), v0.c0, CAST(rt0.c0 AS TEXT))) AND (((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1))), CAST(v0.c0 AS NUMERIC), CAST(rt0.c1 AS BLOB))))) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY (- ((((rt0.c0, vt1.c1, v0.c0))>=((vt1.c0, rt0.c2, rt0.c1))))) ASC);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE ((((vt1.c1, rt0.c2, rt0.c1)) BETWEEN ((((vt1.c1) IS FALSE), v0.c0, CAST(rt0.c0 AS TEXT))) AND (((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1))), CAST(v0.c0 AS NUMERIC), CAST(rt0.c1 AS BLOB))))) ORDER BY (- ((((rt0.c0, vt1.c1, v0.c0))>=((vt1.c0, rt0.c2, rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1, rt0.c2, rt0.c1)) BETWEEN ((((vt1.c1) IS FALSE), v0.c0, CAST(rt0.c0 AS TEXT))) AND (((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1))), CAST(v0.c0 AS NUMERIC), CAST(rt0.c1 AS BLOB))))) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY (- ((((rt0.c0, vt1.c1, v0.c0))>=((vt1.c0, rt0.c2, rt0.c1))))) ASC);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE ((((vt1.c1, rt0.c2, rt0.c1)) BETWEEN ((((vt1.c1) IS FALSE), v0.c0, CAST(rt0.c0 AS TEXT))) AND (((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1))), CAST(v0.c0 AS NUMERIC), CAST(rt0.c1 AS BLOB))))) ORDER BY (- ((((rt0.c0, vt1.c1, v0.c0))>=((vt1.c0, rt0.c2, rt0.c1))))) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt1 ON (((((x'1e35')) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))) BETWEEN (('%j' IN ())) AND ((((vt1.c0))<=((rt0.c2))))) WHERE ((- (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt1 ON (((((x'1e35')) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))) BETWEEN (('%j' IN ())) AND ((((vt1.c0))<=((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt1 ON (((((x'1e35')) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))) BETWEEN (('%j' IN ())) AND ((((vt1.c0))<=((rt0.c2))))) WHERE ((- (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt1 ON (((((x'1e35')) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))) BETWEEN (('%j' IN ())) AND ((((vt1.c0))<=((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt1 ON (((((x'1e35')) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))) BETWEEN (('%j' IN ())) AND ((((vt1.c0))<=((rt0.c2))))) WHERE ((- (vt1.c0)));
SELECT COUNT(*) FROM vt1, rt0, v0 WHERE ((((- (rt0.c2)))OR((((NULL, 1048661216, -1859155102))!=((vt1.c0, vt1.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))OR((((NULL, 1048661216, -1859155102))!=((vt1.c0, vt1.c0, v0.c0)))))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT COUNT(*) FROM vt1, rt0, v0 WHERE ((((- (rt0.c2)))OR((((NULL, 1048661216, -1859155102))!=((vt1.c0, vt1.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))OR((((NULL, 1048661216, -1859155102))!=((vt1.c0, vt1.c0, v0.c0)))))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT COUNT(*) FROM vt1, rt0, v0 WHERE ((((- (rt0.c2)))OR((((NULL, 1048661216, -1859155102))!=((vt1.c0, vt1.c0, v0.c0))))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY);
SELECT * FROM vt1 WHERE ((((NOT (vt1.c0)))==(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))==(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((NOT (vt1.c0)))==(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))==(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((NOT (vt1.c0)))==(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (HEX(0Xffffffffa2b7e1c1) IN ()) RIGHT OUTER JOIN vt1 ON rt0.c1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (HEX(0Xffffffffa2b7e1c1) IN ()) RIGHT OUTER JOIN vt1 ON rt0.c1);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (HEX(0Xffffffffa2b7e1c1) IN ()) RIGHT OUTER JOIN vt1 ON rt0.c1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (HEX(0Xffffffffa2b7e1c1) IN ()) RIGHT OUTER JOIN vt1 ON rt0.c1);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (HEX(0Xffffffffa2b7e1c1) IN ()) RIGHT OUTER JOIN vt1 ON rt0.c1 WHERE (x'');
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt1 ON vt1.c1 WHERE ((((((vt1.c0, v0.c0, vt1.c1))<=((v0.c0, vt1.c0, vt1.c1))))IS NOT(vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, v0.c0, vt1.c1))<=((v0.c0, vt1.c0, vt1.c1))))IS NOT(vt1.c0))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON vt1.c1);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt1 ON vt1.c1 WHERE ((((((vt1.c0, v0.c0, vt1.c1))<=((v0.c0, vt1.c0, vt1.c1))))IS NOT(vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, v0.c0, vt1.c1))<=((v0.c0, vt1.c0, vt1.c1))))IS NOT(vt1.c0))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON vt1.c1);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt1 ON vt1.c1 WHERE ((((((vt1.c0, v0.c0, vt1.c1))<=((v0.c0, vt1.c0, vt1.c1))))IS NOT(vt1.c0)));
SELECT ALL * FROM rt0, vt1 NOT INDEXED, v0 WHERE (((((((((vt1.c1 COLLATE NOCASE)AND(CASE rt0.c2  WHEN '2084549036' THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 END)))OR(NULL)))OR((rt0.c0 IN ()))))OR(vt1.c0 COLLATE NOCASE))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c1 COLLATE NOCASE)AND(CASE rt0.c2  WHEN '2084549036' THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 END)))OR(NULL)))OR((rt0.c0 IN ()))))OR(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 END IN ())  NULLS LAST);
SELECT ALL * FROM rt0, vt1 NOT INDEXED, v0 WHERE (((((((((vt1.c1 COLLATE NOCASE)AND(CASE rt0.c2  WHEN '2084549036' THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 END)))OR(NULL)))OR((rt0.c0 IN ()))))OR(vt1.c0 COLLATE NOCASE))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c1 COLLATE NOCASE)AND(CASE rt0.c2  WHEN '2084549036' THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 END)))OR(NULL)))OR((rt0.c0 IN ()))))OR(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 END IN ())  NULLS LAST);
SELECT ALL * FROM rt0, vt1 NOT INDEXED, v0 WHERE (((((((((vt1.c1 COLLATE NOCASE)AND(CASE rt0.c2  WHEN '2084549036' THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 END)))OR(NULL)))OR((rt0.c0 IN ()))))OR(vt1.c0 COLLATE NOCASE))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 END IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL));
SELECT * FROM rt0, v0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) AND (((rt0.c0 IN (NULL, v0.c0)))))) ORDER BY ((((rt0.c1)%(rt0.c0)))AND('692752213'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) AND (((rt0.c0 IN (NULL, v0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1)%(rt0.c0)))AND('692752213'))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) AND (((rt0.c0 IN (NULL, v0.c0)))))) ORDER BY ((((rt0.c1)%(rt0.c0)))AND('692752213'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) AND (((rt0.c0 IN (NULL, v0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1)%(rt0.c0)))AND('692752213'))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) AND (((rt0.c0 IN (NULL, v0.c0)))))) ORDER BY ((((rt0.c1)%(rt0.c0)))AND('692752213'))  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))OR(((rt0.c0)&(rt0.c1)))))OR((- (rt0.c1))))) ORDER BY CASE (- (rt0.c2))  WHEN ((rt0.c0) IS FALSE) THEN LIKELIHOOD(rt0.c2, 0.19349045132409848) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt0.c1)))OR(((rt0.c0)&(rt0.c1)))))OR((- (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (- (rt0.c2))  WHEN ((rt0.c0) IS FALSE) THEN LIKELIHOOD(rt0.c2, 0.19349045132409848) END  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))OR(((rt0.c0)&(rt0.c1)))))OR((- (rt0.c1))))) ORDER BY CASE (- (rt0.c2))  WHEN ((rt0.c0) IS FALSE) THEN LIKELIHOOD(rt0.c2, 0.19349045132409848) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt0.c1)))OR(((rt0.c0)&(rt0.c1)))))OR((- (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (- (rt0.c2))  WHEN ((rt0.c0) IS FALSE) THEN LIKELIHOOD(rt0.c2, 0.19349045132409848) END  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))OR(((rt0.c0)&(rt0.c1)))))OR((- (rt0.c1))))) ORDER BY CASE (- (rt0.c2))  WHEN ((rt0.c0) IS FALSE) THEN LIKELIHOOD(rt0.c2, 0.19349045132409848) END  NULLS LAST;
SELECT * FROM v0, rt0 WHERE ((~ (CASE v0.c0  WHEN rt0.c0 THEN v0.c0 WHEN '''O{Rg5詮%)' THEN rt0.c2 WHEN 969428981 THEN 0.4213909625609621 ELSE v0.c0 END))) ORDER BY ((((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR('q''W飋')))AND(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))))AND((((rt0.c0)) NOT BETWEEN (('M5O~﵃37臛')) AND ((rt0.c2))))))AND((((rt0.c0))>=((rt0.c1))))))AND((~ (rt0.c0)))), (((((rt0.c0)+(rt0.c0)), TRIM(rt0.c2), rt0.c1 COLLATE RTRIM))==((TOTAL_CHANGES(), (+ (-1.622313548E9)), (- (rt0.c2))))) DESC, rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CASE v0.c0  WHEN rt0.c0 THEN v0.c0 WHEN '''O{Rg5詮%)' THEN rt0.c2 WHEN 969428981 THEN 0.4213909625609621 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR('q''W飋')))AND(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))))AND((((rt0.c0)) NOT BETWEEN (('M5O~﵃37臛')) AND ((rt0.c2))))))AND((((rt0.c0))>=((rt0.c1))))))AND((~ (rt0.c0)))), (((((rt0.c0)+(rt0.c0)), TRIM(rt0.c2), rt0.c1 COLLATE RTRIM))==((TOTAL_CHANGES(), (+ (-1.622313548E9)), (- (rt0.c2))))) DESC, rt0.c1  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((~ (CASE v0.c0  WHEN rt0.c0 THEN v0.c0 WHEN '''O{Rg5詮%)' THEN rt0.c2 WHEN 969428981 THEN 0.4213909625609621 ELSE v0.c0 END))) ORDER BY ((((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR('q''W飋')))AND(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))))AND((((rt0.c0)) NOT BETWEEN (('M5O~﵃37臛')) AND ((rt0.c2))))))AND((((rt0.c0))>=((rt0.c1))))))AND((~ (rt0.c0)))), (((((rt0.c0)+(rt0.c0)), TRIM(rt0.c2), rt0.c1 COLLATE RTRIM))==((TOTAL_CHANGES(), (+ (-1.622313548E9)), (- (rt0.c2))))) DESC, rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CASE v0.c0  WHEN rt0.c0 THEN v0.c0 WHEN '''O{Rg5詮%)' THEN rt0.c2 WHEN 969428981 THEN 0.4213909625609621 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR('q''W飋')))AND(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))))AND((((rt0.c0)) NOT BETWEEN (('M5O~﵃37臛')) AND ((rt0.c2))))))AND((((rt0.c0))>=((rt0.c1))))))AND((~ (rt0.c0)))), (((((rt0.c0)+(rt0.c0)), TRIM(rt0.c2), rt0.c1 COLLATE RTRIM))==((TOTAL_CHANGES(), (+ (-1.622313548E9)), (- (rt0.c2))))) DESC, rt0.c1  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((~ (CASE v0.c0  WHEN rt0.c0 THEN v0.c0 WHEN '''O{Rg5詮%)' THEN rt0.c2 WHEN 969428981 THEN 0.4213909625609621 ELSE v0.c0 END))) ORDER BY ((((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR('q''W飋')))AND(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))))AND((((rt0.c0)) NOT BETWEEN (('M5O~﵃37臛')) AND ((rt0.c2))))))AND((((rt0.c0))>=((rt0.c1))))))AND((~ (rt0.c0)))), (((((rt0.c0)+(rt0.c0)), TRIM(rt0.c2), rt0.c1 COLLATE RTRIM))==((TOTAL_CHANGES(), (+ (-1.622313548E9)), (- (rt0.c2))))) DESC, rt0.c1  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (LIKELIHOOD((rt0.c2 IN ()), 0.3547384343940986)) ORDER BY CASE ((rt0.c0)IS NOT(rt0.c1))  WHEN 0.143839705425021 THEN ((0X3b1bc6a8) NOTNULL) ELSE ((rt0.c2)!=(v0.c0)) END DESC, CAST(((vt1.c1) NOT BETWEEN (vt1.c1) AND ('-1262537151')) AS NUMERIC), (CAST(NULL AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((rt0.c2 IN ()), 0.3547384343940986)) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY CASE ((rt0.c0)IS NOT(rt0.c1))  WHEN 0.143839705425021 THEN ((0X3b1bc6a8) NOTNULL) ELSE ((rt0.c2)!=(v0.c0)) END DESC, CAST(((vt1.c1) NOT BETWEEN (vt1.c1) AND ('-1262537151')) AS NUMERIC), (CAST(NULL AS INTEGER) IN ()));
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (LIKELIHOOD((rt0.c2 IN ()), 0.3547384343940986)) ORDER BY CASE ((rt0.c0)IS NOT(rt0.c1))  WHEN 0.143839705425021 THEN ((0X3b1bc6a8) NOTNULL) ELSE ((rt0.c2)!=(v0.c0)) END DESC, CAST(((vt1.c1) NOT BETWEEN (vt1.c1) AND ('-1262537151')) AS NUMERIC), (CAST(NULL AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((rt0.c2 IN ()), 0.3547384343940986)) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY CASE ((rt0.c0)IS NOT(rt0.c1))  WHEN 0.143839705425021 THEN ((0X3b1bc6a8) NOTNULL) ELSE ((rt0.c2)!=(v0.c0)) END DESC, CAST(((vt1.c1) NOT BETWEEN (vt1.c1) AND ('-1262537151')) AS NUMERIC), (CAST(NULL AS INTEGER) IN ()));
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (LIKELIHOOD((rt0.c2 IN ()), 0.3547384343940986)) ORDER BY CASE ((rt0.c0)IS NOT(rt0.c1))  WHEN 0.143839705425021 THEN ((0X3b1bc6a8) NOTNULL) ELSE ((rt0.c2)!=(v0.c0)) END DESC, CAST(((vt1.c1) NOT BETWEEN (vt1.c1) AND ('-1262537151')) AS NUMERIC), (CAST(NULL AS INTEGER) IN ());
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0) ORDER BY ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (((rt0.c1)||(rt0.c1))) AND (rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (((rt0.c1)||(rt0.c1))) AND (rt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0) ORDER BY ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (((rt0.c1)||(rt0.c1))) AND (rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (((rt0.c1)||(rt0.c1))) AND (rt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0) ORDER BY ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (((rt0.c1)||(rt0.c1))) AND (rt0.c0))  NULLS FIRST;
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT * FROM rt0 WHERE ((((json_valid(rt0.c2), ((rt0.c1) ISNULL), rt0.c0))<((((rt0.c1)LIKE('')), (rt0.c2 IN (rt0.c1)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))) ORDER BY ((((rt0.c0) IS TRUE)) NOT BETWEEN ((rt0.c1 IN (rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS LAST, json_array_length(rt0.c2) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((json_valid(rt0.c2), ((rt0.c1) ISNULL), rt0.c0))<((((rt0.c1)LIKE('')), (rt0.c2 IN (rt0.c1)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS TRUE)) NOT BETWEEN ((rt0.c1 IN (rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS LAST, json_array_length(rt0.c2) COLLATE RTRIM);
SELECT * FROM rt0 WHERE ((((json_valid(rt0.c2), ((rt0.c1) ISNULL), rt0.c0))<((((rt0.c1)LIKE('')), (rt0.c2 IN (rt0.c1)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))) ORDER BY ((((rt0.c0) IS TRUE)) NOT BETWEEN ((rt0.c1 IN (rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS LAST, json_array_length(rt0.c2) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((json_valid(rt0.c2), ((rt0.c1) ISNULL), rt0.c0))<((((rt0.c1)LIKE('')), (rt0.c2 IN (rt0.c1)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS TRUE)) NOT BETWEEN ((rt0.c1 IN (rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS LAST, json_array_length(rt0.c2) COLLATE RTRIM);
SELECT * FROM rt0 WHERE ((((json_valid(rt0.c2), ((rt0.c1) ISNULL), rt0.c0))<((((rt0.c1)LIKE('')), (rt0.c2 IN (rt0.c1)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))) ORDER BY ((((rt0.c0) IS TRUE)) NOT BETWEEN ((rt0.c1 IN (rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS LAST, json_array_length(rt0.c2) COLLATE RTRIM;
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((rt0.c1)<>(v0.c0)) THEN ((367432031) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN ((rt0.c2)>>(rt0.c2)) THEN rt0.c0 WHEN (((v0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((v0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c2)) AND ((v0.c0, rt0.c1, v0.c0, 0.7195019519582341, v0.c0, rt0.c2, rt0.c1))) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)!=(v0.c0)) THEN ((367432031) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN ((rt0.c2)>>(rt0.c2)) THEN rt0.c0 WHEN (((v0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((v0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c2)) AND ((v0.c0, rt0.c1, v0.c0, 0.7195019519582341, v0.c0, rt0.c2, rt0.c1))) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((rt0.c1)<>(v0.c0)) THEN ((367432031) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN ((rt0.c2)>>(rt0.c2)) THEN rt0.c0 WHEN (((v0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((v0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c2)) AND ((v0.c0, rt0.c1, v0.c0, 0.7195019519582341, v0.c0, rt0.c2, rt0.c1))) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)!=(v0.c0)) THEN ((367432031) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN ((rt0.c2)>>(rt0.c2)) THEN rt0.c0 WHEN (((v0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((v0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c2)) AND ((v0.c0, rt0.c1, v0.c0, 0.7195019519582341, v0.c0, rt0.c2, rt0.c1))) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((rt0.c1)<>(v0.c0)) THEN ((367432031) NOT BETWEEN (rt0.c1) AND (v0.c0)) WHEN ((rt0.c2)>>(rt0.c2)) THEN rt0.c0 WHEN (((v0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((v0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c2)) AND ((v0.c0, rt0.c1, v0.c0, 0.7195019519582341, v0.c0, rt0.c2, rt0.c1))) THEN (rt0.c1 IN ()) END);
SELECT ALL * FROM v0, vt1, rt0 WHERE ((((+ (rt0.c1))) ISNULL)) ORDER BY ((v0.c0)==(CAST(NULL AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) ISNULL)) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((v0.c0)=(CAST(NULL AS REAL))) ASC);
SELECT ALL * FROM v0, vt1, rt0 WHERE ((((+ (rt0.c1))) ISNULL)) ORDER BY ((v0.c0)==(CAST(NULL AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) ISNULL)) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((v0.c0)=(CAST(NULL AS REAL))) ASC);
SELECT ALL * FROM v0, vt1, rt0 WHERE ((((+ (rt0.c1))) ISNULL)) ORDER BY ((v0.c0)==(CAST(NULL AS REAL))) ASC;
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE ((((CASE rt0.c2  WHEN 0x35c115e8 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END))>=((rt0.c2 COLLATE RTRIM)))) ORDER BY TRIM(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND(vt1.c0)))OR(vt1.c1)), NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c2  WHEN 0x35c115e8 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END))>=((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, v0 NOT INDEXED, vt1 ORDER BY TRIM(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND(vt1.c0)))OR(vt1.c1)), NULL) ASC);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE ((((CASE rt0.c2  WHEN 0x35c115e8 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END))>=((rt0.c2 COLLATE RTRIM)))) ORDER BY TRIM(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND(vt1.c0)))OR(vt1.c1)), NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c2  WHEN 0x35c115e8 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END))>=((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, v0 NOT INDEXED, vt1 ORDER BY TRIM(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND(vt1.c0)))OR(vt1.c1)), NULL) ASC);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE ((((CASE rt0.c2  WHEN 0x35c115e8 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 ELSE vt1.c0 END))>=((rt0.c2 COLLATE RTRIM)))) ORDER BY TRIM(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND(vt1.c0)))OR(vt1.c1)), NULL) ASC;
SELECT ALL * FROM v0 WHERE ((+ (((v0.c0)&(v0.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (v0.c0) AND (CAST(v0.c0 AS REAL))), v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0)&(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (v0.c0) AND (CAST(v0.c0 AS REAL))), v0.c0 DESC);
SELECT ALL * FROM v0 WHERE ((+ (((v0.c0)&(v0.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (v0.c0) AND (CAST(v0.c0 AS REAL))), v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0)&(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (v0.c0) AND (CAST(v0.c0 AS REAL))), v0.c0 DESC);
SELECT ALL * FROM v0 WHERE ((+ (((v0.c0)&(v0.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (v0.c0) AND (CAST(v0.c0 AS REAL))), v0.c0 DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((0.4213909625609621)-(v0.c0)))OR(((v0.c0)<=(v0.c0)))))AND(((v0.c0) NOTNULL)))) ORDER BY (((0xaf75927)>(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.4213909625609621)-(v0.c0)))OR(((v0.c0)<=(v0.c0)))))AND(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY (((0xaf75927)>(v0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((0.4213909625609621)-(v0.c0)))OR(((v0.c0)<=(v0.c0)))))AND(((v0.c0) NOTNULL)))) ORDER BY (((0xaf75927)>(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.4213909625609621)-(v0.c0)))OR(((v0.c0)<=(v0.c0)))))AND(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY (((0xaf75927)>(v0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((0.4213909625609621)-(v0.c0)))OR(((v0.c0)<=(v0.c0)))))AND(((v0.c0) NOTNULL)))) ORDER BY (((0xaf75927)>(v0.c0)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt1.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt1.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1 COLLATE NOCASE);
SELECT * FROM vt1, rt0, v0 WHERE (((LOWER(rt0.c0)) NOT NULL)) ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c0 ELSE '-~' END)) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c0 ELSE '-~' END)) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))  NULLS FIRST);
SELECT * FROM vt1, rt0, v0 WHERE (((LOWER(rt0.c0)) NOT NULL)) ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c0 ELSE '-~' END)) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c0 ELSE '-~' END)) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))  NULLS FIRST);
SELECT * FROM vt1, rt0, v0 WHERE (((LOWER(rt0.c0)) NOT NULL)) ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c0 ELSE '-~' END)) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((v0.c0)/(v0.c0))))) ORDER BY TYPEOF(((((v0.c0)OR(v0.c0)))OR(v0.c0)))  NULLS FIRST, CASE WHEN 0.8369732480610036 THEN v0.c0 WHEN ((v0.c0) NOT NULL) THEN CAST(v0.c0 AS BLOB) WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN 0.03153218832264426 THEN ((v0.c0)>=(v0.c0)) WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)%(v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0)/(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(((((v0.c0)OR(v0.c0)))OR(v0.c0)))  NULLS FIRST, CASE WHEN 0.8369732480610036 THEN v0.c0 WHEN ((v0.c0) NOT NULL) THEN CAST(v0.c0 AS BLOB) WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN 0.03153218832264426 THEN ((v0.c0)>=(v0.c0)) WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)%(v0.c0)) END DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((v0.c0)/(v0.c0))))) ORDER BY TYPEOF(((((v0.c0)OR(v0.c0)))OR(v0.c0)))  NULLS FIRST, CASE WHEN 0.8369732480610036 THEN v0.c0 WHEN ((v0.c0) NOT NULL) THEN CAST(v0.c0 AS BLOB) WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN 0.03153218832264426 THEN ((v0.c0)>=(v0.c0)) WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)%(v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0)/(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(((((v0.c0)OR(v0.c0)))OR(v0.c0)))  NULLS FIRST, CASE WHEN 0.8369732480610036 THEN v0.c0 WHEN ((v0.c0) NOT NULL) THEN CAST(v0.c0 AS BLOB) WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN 0.03153218832264426 THEN ((v0.c0)>=(v0.c0)) WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)%(v0.c0)) END DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((v0.c0)/(v0.c0))))) ORDER BY TYPEOF(((((v0.c0)OR(v0.c0)))OR(v0.c0)))  NULLS FIRST, CASE WHEN 0.8369732480610036 THEN v0.c0 WHEN ((v0.c0) NOT NULL) THEN CAST(v0.c0 AS BLOB) WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN 0.03153218832264426 THEN ((v0.c0)>=(v0.c0)) WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)%(v0.c0)) END DESC;
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0, x'', vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1, vt1.c1, vt1.c1)))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0, x'', vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1, vt1.c1, vt1.c1)))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0, x'', vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1, vt1.c1, vt1.c1)))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0, x'', vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1, vt1.c1, vt1.c1)))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0, x'', vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1, vt1.c1, vt1.c1)))) NOTNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) ISNULL)) ORDER BY (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) ASC, (~ (IFNULL(vt1.c1, vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) ASC, (~ (IFNULL(vt1.c1, vt1.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) ISNULL)) ORDER BY (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) ASC, (~ (IFNULL(vt1.c1, vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) ASC, (~ (IFNULL(vt1.c1, vt1.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) ISNULL)) ORDER BY (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) ASC, (~ (IFNULL(vt1.c1, vt1.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY CAST((vt1.c1 IN ()) AS TEXT)  NULLS FIRST, (((+ (vt1.c1)))>(vt1.c0 COLLATE NOCASE)), (~ ((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c1 IN ()) AS TEXT)  NULLS FIRST, (((+ (vt1.c1)))>(vt1.c0 COLLATE NOCASE)), (~ ((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY CAST((vt1.c1 IN ()) AS TEXT)  NULLS FIRST, (((+ (vt1.c1)))>(vt1.c0 COLLATE NOCASE)), (~ ((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c1 IN ()) AS TEXT)  NULLS FIRST, (((+ (vt1.c1)))>(vt1.c0 COLLATE NOCASE)), (~ ((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY CAST((vt1.c1 IN ()) AS TEXT)  NULLS FIRST, (((+ (vt1.c1)))>(vt1.c0 COLLATE NOCASE)), (~ ((vt1.c0 IN ())));
SELECT COUNT(*) FROM v0, vt1 WHERE (((SUBSTR(v0.c0, vt1.c0)) NOT BETWEEN ((((vt1.c1))>((v0.c0)))) AND (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(v0.c0, vt1.c0)) NOT BETWEEN ((((vt1.c1))>((v0.c0)))) AND (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (((SUBSTR(v0.c0, vt1.c0)) NOT BETWEEN ((((vt1.c1))>((v0.c0)))) AND (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(v0.c0, vt1.c0)) NOT BETWEEN ((((vt1.c1))>((v0.c0)))) AND (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (((SUBSTR(v0.c0, vt1.c0)) NOT BETWEEN ((((vt1.c1))>((v0.c0)))) AND (CAST(vt1.c0 AS BLOB))));
SELECT ALL * FROM v0, rt0, vt1 WHERE (((x'') BETWEEN ((((vt1.c0, vt1.c1, rt0.c0))<((rt0.c0, rt0.c0, rt0.c2)))) AND ((((rt0.c2))==((rt0.c1)))))) ORDER BY ((+ (rt0.c2)) IN ())  NULLS FIRST, CASE CASE vt1.c1  WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END  WHEN ((vt1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE ((vt1.c0)*(rt0.c2)) END  NULLS LAST, ((rt0.c2) NOT NULL) COLLATE RTRIM ASC  NULLS FIRST, ((((vt1.c1)*(vt1.c0)))<<(((rt0.c1)GLOB(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN ((((vt1.c0, vt1.c1, rt0.c0))<((rt0.c0, rt0.c0, rt0.c2)))) AND ((((rt0.c2))==((rt0.c1)))))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((+ (rt0.c2)) IN ())  NULLS FIRST, CASE CASE vt1.c1  WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END  WHEN ((vt1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE ((vt1.c0)*(rt0.c2)) END  NULLS LAST, ((rt0.c2) NOT NULL) COLLATE RTRIM ASC  NULLS FIRST, ((((vt1.c1)*(vt1.c0)))<<(((rt0.c1)GLOB(vt1.c1)))));
SELECT ALL * FROM v0, rt0, vt1 WHERE (((x'') BETWEEN ((((vt1.c0, vt1.c1, rt0.c0))<((rt0.c0, rt0.c0, rt0.c2)))) AND ((((rt0.c2))==((rt0.c1)))))) ORDER BY ((+ (rt0.c2)) IN ())  NULLS FIRST, CASE CASE vt1.c1  WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END  WHEN ((vt1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE ((vt1.c0)*(rt0.c2)) END  NULLS LAST, ((rt0.c2) NOT NULL) COLLATE RTRIM ASC  NULLS FIRST, ((((vt1.c1)*(vt1.c0)))<<(((rt0.c1)GLOB(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN ((((vt1.c0, vt1.c1, rt0.c0))<((rt0.c0, rt0.c0, rt0.c2)))) AND ((((rt0.c2))==((rt0.c1)))))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((+ (rt0.c2)) IN ())  NULLS FIRST, CASE CASE vt1.c1  WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END  WHEN ((vt1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE ((vt1.c0)*(rt0.c2)) END  NULLS LAST, ((rt0.c2) NOT NULL) COLLATE RTRIM ASC  NULLS FIRST, ((((vt1.c1)*(vt1.c0)))<<(((rt0.c1)GLOB(vt1.c1)))));
SELECT ALL * FROM v0, rt0, vt1 WHERE (((x'') BETWEEN ((((vt1.c0, vt1.c1, rt0.c0))<((rt0.c0, rt0.c0, rt0.c2)))) AND ((((rt0.c2))==((rt0.c1)))))) ORDER BY ((+ (rt0.c2)) IN ())  NULLS FIRST, CASE CASE vt1.c1  WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END  WHEN ((vt1.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE ((vt1.c0)*(rt0.c2)) END  NULLS LAST, ((rt0.c2) NOT NULL) COLLATE RTRIM ASC  NULLS FIRST, ((((vt1.c1)*(vt1.c0)))<<(((rt0.c1)GLOB(vt1.c1))));
SELECT ALL * FROM vt1, rt0, v0 WHERE ((((vt1.c1, rt0.c2, rt0.c0)) NOT BETWEEN (((((0xffffffffcf2594bc)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((vt1.c0)GLOB(vt1.c1)), ((vt1.c1) NOT BETWEEN (rt0.c0) AND (NULL)))) AND ((NULL, TYPEOF(DISTINCT v0.c0), (- (''))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1, rt0.c2, rt0.c0)) NOT BETWEEN (((((0xffffffffcf2594bc)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((vt1.c0)GLOB(vt1.c1)), ((vt1.c1) NOT BETWEEN (rt0.c0) AND (NULL)))) AND ((NULL, TYPEOF(DISTINCT v0.c0), (- ('')))))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0, v0);
SELECT ALL * FROM vt1, rt0, v0 WHERE ((((vt1.c1, rt0.c2, rt0.c0)) NOT BETWEEN (((((0xffffffffcf2594bc)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((vt1.c0)GLOB(vt1.c1)), ((vt1.c1) NOT BETWEEN (rt0.c0) AND (NULL)))) AND ((NULL, TYPEOF(DISTINCT v0.c0), (- (''))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1, rt0.c2, rt0.c0)) NOT BETWEEN (((((0xffffffffcf2594bc)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((vt1.c0)GLOB(vt1.c1)), ((vt1.c1) NOT BETWEEN (rt0.c0) AND (NULL)))) AND ((NULL, TYPEOF(DISTINCT v0.c0), (- ('')))))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0, v0);
SELECT ALL * FROM vt1, rt0, v0 WHERE ((((vt1.c1, rt0.c2, rt0.c0)) NOT BETWEEN (((((0xffffffffcf2594bc)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((vt1.c0)GLOB(vt1.c1)), ((vt1.c1) NOT BETWEEN (rt0.c0) AND (NULL)))) AND ((NULL, TYPEOF(DISTINCT v0.c0), (- (''))))));
SELECT COUNT(*) FROM v0 WHERE ('' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('' COLLATE BINARY);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 END) ORDER BY ((CAST('-711360431' AS BLOB))<=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0.7792375252690886 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN rt0.c2 END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST('-711360431' AS BLOB))<=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0.7792375252690886 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 END) ORDER BY ((CAST('-711360431' AS BLOB))<=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0.7792375252690886 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN rt0.c2 END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST('-711360431' AS BLOB))<=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0.7792375252690886 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 END) ORDER BY ((CAST('-711360431' AS BLOB))<=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0.7792375252690886 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (((v0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL)) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (((v0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL)) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM v0, rt0, vt1 WHERE (((((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (NULL) AND (TRIM(vt1.c0)))) ORDER BY ((((((((((((rt0.c0)OR(v0.c0)))OR(rt0.c1)))AND(vt1.c1)))OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))OR(((vt1.c0)<(vt1.c0)))))AND(highlight('691610166', vt1.c0, vt1.c0, vt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (NULL) AND (TRIM(vt1.c0)))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((((((((((((rt0.c0)OR(v0.c0)))OR(rt0.c1)))AND(vt1.c1)))OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))OR(((vt1.c0)<(vt1.c0)))))AND(highlight('691610166', vt1.c0, vt1.c0, vt1.c1)))  NULLS LAST);
SELECT ALL * FROM v0, rt0, vt1 WHERE (((((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (NULL) AND (TRIM(vt1.c0)))) ORDER BY ((((((((((((rt0.c0)OR(v0.c0)))OR(rt0.c1)))AND(vt1.c1)))OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))OR(((vt1.c0)<(vt1.c0)))))AND(highlight('691610166', vt1.c0, vt1.c0, vt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (NULL) AND (TRIM(vt1.c0)))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((((((((((((rt0.c0)OR(v0.c0)))OR(rt0.c1)))AND(vt1.c1)))OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))OR(((vt1.c0)<(vt1.c0)))))AND(highlight('691610166', vt1.c0, vt1.c0, vt1.c1)))  NULLS LAST);
SELECT ALL * FROM v0, rt0, vt1 WHERE (((((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (NULL) AND (TRIM(vt1.c0)))) ORDER BY ((((((((((((rt0.c0)OR(v0.c0)))OR(rt0.c1)))AND(vt1.c1)))OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))OR(((vt1.c0)<(vt1.c0)))))AND(highlight('691610166', vt1.c0, vt1.c0, vt1.c1)))  NULLS LAST;
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN v0 ON (((NOT (rt0.c0))) ISNULL) WHERE (LIKE(rt0.c2, rt0.c1, 'g') COLLATE NOCASE) ORDER BY CASE WHEN '-851410175' THEN rt0.c1 COLLATE NOCASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (v0.c0)) THEN (rt0.c0 IN ()) WHEN ((vt1.c1) BETWEEN (rt0.c1) AND (x'00f33f5e')) THEN ((vt1.c1)>=(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(rt0.c2, rt0.c1, 'g') COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN v0 ON (((NOT (rt0.c0))) ISNULL) ORDER BY CASE WHEN '-851410175' THEN rt0.c1 COLLATE NOCASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (v0.c0)) THEN (rt0.c0 IN ()) WHEN ((vt1.c1) BETWEEN (rt0.c1) AND (x'00f33f5e')) THEN ((vt1.c1)>=(rt0.c2)) END ASC);
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN v0 ON (((NOT (rt0.c0))) ISNULL) WHERE (LIKE(rt0.c2, rt0.c1, 'g') COLLATE NOCASE) ORDER BY CASE WHEN '-851410175' THEN rt0.c1 COLLATE NOCASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (v0.c0)) THEN (rt0.c0 IN ()) WHEN ((vt1.c1) BETWEEN (rt0.c1) AND (x'00f33f5e')) THEN ((vt1.c1)>=(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(rt0.c2, rt0.c1, 'g') COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN v0 ON (((NOT (rt0.c0))) ISNULL) ORDER BY CASE WHEN '-851410175' THEN rt0.c1 COLLATE NOCASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (v0.c0)) THEN (rt0.c0 IN ()) WHEN ((vt1.c1) BETWEEN (rt0.c1) AND (x'00f33f5e')) THEN ((vt1.c1)>=(rt0.c2)) END ASC);
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN v0 ON (((NOT (rt0.c0))) ISNULL) WHERE (LIKE(rt0.c2, rt0.c1, 'g') COLLATE NOCASE) ORDER BY CASE WHEN '-851410175' THEN rt0.c1 COLLATE NOCASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (v0.c0)) THEN (rt0.c0 IN ()) WHEN ((vt1.c1) BETWEEN (rt0.c1) AND (x'00f33f5e')) THEN ((vt1.c1)>=(rt0.c2)) END ASC;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((CAST(vt1.c1 AS BLOB))+(((v0.c0)+(vt1.c0))))) ORDER BY CASE WHEN (+ (vt1.c0)) THEN ((v0.c0)GLOB(v0.c0)) ELSE (~ (vt1.c0)) END  NULLS FIRST, ((NULL)||(((vt1.c0) NOT NULL))) DESC  NULLS LAST, ((NULL)>>((- (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS BLOB))+(((v0.c0)+(vt1.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CASE WHEN (+ (vt1.c0)) THEN ((v0.c0)GLOB(v0.c0)) ELSE (~ (vt1.c0)) END  NULLS FIRST, ((NULL)||(((vt1.c0) NOT NULL))) DESC  NULLS LAST, ((NULL)>>((- (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((CAST(vt1.c1 AS BLOB))+(((v0.c0)+(vt1.c0))))) ORDER BY CASE WHEN (+ (vt1.c0)) THEN ((v0.c0)GLOB(v0.c0)) ELSE (~ (vt1.c0)) END  NULLS FIRST, ((NULL)||(((vt1.c0) NOT NULL))) DESC  NULLS LAST, ((NULL)>>((- (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS BLOB))+(((v0.c0)+(vt1.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CASE WHEN (+ (vt1.c0)) THEN ((v0.c0)GLOB(v0.c0)) ELSE (~ (vt1.c0)) END  NULLS FIRST, ((NULL)||(((vt1.c0) NOT NULL))) DESC  NULLS LAST, ((NULL)>>((- (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((CAST(vt1.c1 AS BLOB))+(((v0.c0)+(vt1.c0))))) ORDER BY CASE WHEN (+ (vt1.c0)) THEN ((v0.c0)GLOB(v0.c0)) ELSE (~ (vt1.c0)) END  NULLS FIRST, ((NULL)||(((vt1.c0) NOT NULL))) DESC  NULLS LAST, ((NULL)>>((- (vt1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))) ISNULL));
SELECT ALL * FROM rt0, vt1, v0 WHERE (CAST(0.10733423736421388 AS BLOB)) ORDER BY ((((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c2)))AND(CAST(v0.c0 AS REAL))))AND(((((rt0.c0)OR(0.9017580237462423)))AND(NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0.10733423736421388 AS BLOB)) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY ((((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c2)))AND(CAST(v0.c0 AS REAL))))AND(((((rt0.c0)OR(0.9017580237462423)))AND(NULL)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, v0 WHERE (CAST(0.10733423736421388 AS BLOB)) ORDER BY ((((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c2)))AND(CAST(v0.c0 AS REAL))))AND(((((rt0.c0)OR(0.9017580237462423)))AND(NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0.10733423736421388 AS BLOB)) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY ((((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c2)))AND(CAST(v0.c0 AS REAL))))AND(((((rt0.c0)OR(0.9017580237462423)))AND(NULL)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, v0 WHERE (CAST(0.10733423736421388 AS BLOB)) ORDER BY ((((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c2)))AND(CAST(v0.c0 AS REAL))))AND(((((rt0.c0)OR(0.9017580237462423)))AND(NULL)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((((vt1.c1)AND(v0.c0))) BETWEEN (((v0.c0) BETWEEN (vt1.c1) AND (v0.c0))) AND (CASE WHEN vt1.c0 THEN x'' END))) ORDER BY (((((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))))=((((vt1.c0)+(vt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)AND(v0.c0))) BETWEEN (((v0.c0) BETWEEN (vt1.c1) AND (v0.c0))) AND (CASE WHEN vt1.c0 THEN x'' END))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))))=((((vt1.c0)+(vt1.c1))))) ASC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((((vt1.c1)AND(v0.c0))) BETWEEN (((v0.c0) BETWEEN (vt1.c1) AND (v0.c0))) AND (CASE WHEN vt1.c0 THEN x'' END))) ORDER BY (((((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))))=((((vt1.c0)+(vt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)AND(v0.c0))) BETWEEN (((v0.c0) BETWEEN (vt1.c1) AND (v0.c0))) AND (CASE WHEN vt1.c0 THEN x'' END))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))))=((((vt1.c0)+(vt1.c1))))) ASC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((((vt1.c1)AND(v0.c0))) BETWEEN (((v0.c0) BETWEEN (vt1.c1) AND (v0.c0))) AND (CASE WHEN vt1.c0 THEN x'' END))) ORDER BY (((((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))))=((((vt1.c0)+(vt1.c1))))) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 COLLATE NOCASE))<((rt0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE NOCASE))<((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 COLLATE NOCASE))<((rt0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE NOCASE))<((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 COLLATE NOCASE))<((rt0.c2 COLLATE RTRIM))));
SELECT COUNT(*) FROM v0 WHERE (((CASE WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN x'624d' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)-((v0.c0 IN ())))) ORDER BY ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR('SW.5|')))OR(v0.c0)))OR(v0.c0)))))AND(((v0.c0)/(v0.c0)))) DESC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN x'624d' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)-((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR('SW.5|')))OR(v0.c0)))OR(v0.c0)))))AND(((v0.c0)/(v0.c0)))) DESC, NULL  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((CASE WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN x'624d' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)-((v0.c0 IN ())))) ORDER BY ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR('SW.5|')))OR(v0.c0)))OR(v0.c0)))))AND(((v0.c0)/(v0.c0)))) DESC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN x'624d' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)-((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR('SW.5|')))OR(v0.c0)))OR(v0.c0)))))AND(((v0.c0)/(v0.c0)))) DESC, NULL  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((CASE WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN x'624d' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)-((v0.c0 IN ())))) ORDER BY ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR('SW.5|')))OR(v0.c0)))OR(v0.c0)))))AND(((v0.c0)/(v0.c0)))) DESC, NULL  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c1, vt1.c0, vt1.c0))=((x'3a1d', vt1.c0, x'03a8'))))&(((vt1.c0)>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, vt1.c0, vt1.c0))=((x'3a1d', vt1.c0, x'03a8'))))&(((vt1.c0)>(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c1, vt1.c0, vt1.c0))=((x'3a1d', vt1.c0, x'03a8'))))&(((vt1.c0)>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, vt1.c0, vt1.c0))=((x'3a1d', vt1.c0, x'03a8'))))&(((vt1.c0)>(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c1, vt1.c0, vt1.c0))=((x'3a1d', vt1.c0, x'03a8'))))&(((vt1.c0)>(rt0.c1)))));
SELECT * FROM v0, vt1, rt0 WHERE ((((vt1.c1 IN ())) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (((x'') NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN ())) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (((x'') NOTNULL)))) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT * FROM v0, vt1, rt0 WHERE ((((vt1.c1 IN ())) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (((x'') NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN ())) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (((x'') NOTNULL)))) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT * FROM v0, vt1, rt0 WHERE ((((vt1.c1 IN ())) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (((x'') NOTNULL))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)GLOB(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)GLOB(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)GLOB(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)GLOB(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)GLOB(v0.c0))) IS FALSE));
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN ((+ (v0.c0))) AND (v0.c0 COLLATE NOCASE))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>=(TIME(v0.c0, v0.c0, v0.c0))) DESC  NULLS FIRST, (((((+ (v0.c0)))OR(CAST(v0.c0 AS INTEGER))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN ((+ (v0.c0))) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>=(TIME(v0.c0, v0.c0, v0.c0))) DESC  NULLS FIRST, (((((+ (v0.c0)))OR(CAST(v0.c0 AS INTEGER))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN ((+ (v0.c0))) AND (v0.c0 COLLATE NOCASE))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>=(TIME(v0.c0, v0.c0, v0.c0))) DESC  NULLS FIRST, (((((+ (v0.c0)))OR(CAST(v0.c0 AS INTEGER))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN ((+ (v0.c0))) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>=(TIME(v0.c0, v0.c0, v0.c0))) DESC  NULLS FIRST, (((((+ (v0.c0)))OR(CAST(v0.c0 AS INTEGER))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN ((+ (v0.c0))) AND (v0.c0 COLLATE NOCASE))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>=(TIME(v0.c0, v0.c0, v0.c0))) DESC  NULLS FIRST, (((((+ (v0.c0)))OR(CAST(v0.c0 AS INTEGER))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT ALL * FROM vt1 NOT INDEXED, v0 WHERE ((~ ((((v0.c0))>((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((v0.c0))>((vt1.c1)))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1 NOT INDEXED, v0 WHERE ((~ ((((v0.c0))>((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((v0.c0))>((vt1.c1)))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1 NOT INDEXED, v0 WHERE ((~ ((((v0.c0))>((vt1.c1))))));
SELECT COUNT(*) FROM vt1, v0 WHERE ((((v0.c0)) BETWEEN ((((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))) AND ((((vt1.c0)||(vt1.c1)))))) ORDER BY (((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1))))>=((((vt1.c0) IS FALSE)))), (+ (CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))) AND ((((vt1.c0)||(vt1.c1)))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1))))>=((((vt1.c0) IS FALSE)))), (+ (CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE v0.c0 END)));
SELECT COUNT(*) FROM vt1, v0 WHERE ((((v0.c0)) BETWEEN ((((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))) AND ((((vt1.c0)||(vt1.c1)))))) ORDER BY (((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1))))>=((((vt1.c0) IS FALSE)))), (+ (CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))) AND ((((vt1.c0)||(vt1.c1)))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1))))>=((((vt1.c0) IS FALSE)))), (+ (CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE v0.c0 END)));
SELECT COUNT(*) FROM vt1, v0 WHERE ((((v0.c0)) BETWEEN ((((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))) AND ((((vt1.c0)||(vt1.c1)))))) ORDER BY (((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1))))>=((((vt1.c0) IS FALSE)))), (+ (CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE v0.c0 END));
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((((rt0.c0)AND(vt1.c0)))OR(vt1.c1)))&((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(vt1.c0)))OR(vt1.c1)))&((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((((rt0.c0)AND(vt1.c0)))OR(vt1.c1)))&((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(vt1.c0)))OR(vt1.c1)))&((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((((rt0.c0)AND(vt1.c0)))OR(vt1.c1)))&((rt0.c1 IN ()))));
SELECT * FROM vt1, rt0 WHERE ((+ ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((+ ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((+ ((~ (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT * FROM rt0, vt1, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt1, v0);
SELECT * FROM rt0, vt1, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt1, v0);
SELECT * FROM rt0, vt1, v0 WHERE ('');
SELECT * FROM rt0 WHERE (LOWER(rt0.c1)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 END)%(((rt0.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 END)%(((rt0.c2) NOT NULL))) ASC);
SELECT * FROM rt0 WHERE (LOWER(rt0.c1)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 END)%(((rt0.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 END)%(((rt0.c2) NOT NULL))) ASC);
SELECT * FROM rt0 WHERE (LOWER(rt0.c1)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 END)%(((rt0.c2) NOT NULL))) ASC;
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))OR(((v0.c0) IS TRUE)))) ORDER BY CASE CAST(v0.c0 AS TEXT)  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE BINARY ELSE NULL END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE RTRIM)AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))OR(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY CASE CAST(v0.c0 AS TEXT)  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE BINARY ELSE NULL END ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))OR(((v0.c0) IS TRUE)))) ORDER BY CASE CAST(v0.c0 AS TEXT)  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE BINARY ELSE NULL END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE RTRIM)AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))OR(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY CASE CAST(v0.c0 AS TEXT)  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE BINARY ELSE NULL END ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))OR(((v0.c0) IS TRUE)))) ORDER BY CASE CAST(v0.c0 AS TEXT)  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE BINARY ELSE NULL END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE ((((((NOT (vt1.c0)))AND(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))))OR(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt1.c0)))AND(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE ((((((NOT (vt1.c0)))AND(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))))OR(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt1.c0)))AND(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE ((((((NOT (vt1.c0)))AND(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))))OR(rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM v0, rt0 INNER JOIN vt1 ON rt0.c2 WHERE (CASE WHEN (((rt0.c2))>=((v0.c0))) THEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE (((rt0.c1)) BETWEEN ((v0.c0)) AND ((0.43740055489301743))) END) ORDER BY ((LIKELY(rt0.c2)) BETWEEN (vt1.c1) AND (((rt0.c2)GLOB(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2))>=((v0.c0))) THEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE (((rt0.c1)) BETWEEN ((v0.c0)) AND ((0.43740055489301743))) END) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt1 ON rt0.c2 ORDER BY ((LIKELY(rt0.c2)) BETWEEN (vt1.c1) AND (((rt0.c2)GLOB(vt1.c0)))) ASC);
SELECT ALL * FROM v0, rt0 INNER JOIN vt1 ON rt0.c2 WHERE (CASE WHEN (((rt0.c2))>=((v0.c0))) THEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE (((rt0.c1)) BETWEEN ((v0.c0)) AND ((0.43740055489301743))) END) ORDER BY ((LIKELY(rt0.c2)) BETWEEN (vt1.c1) AND (((rt0.c2)GLOB(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2))>=((v0.c0))) THEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE (((rt0.c1)) BETWEEN ((v0.c0)) AND ((0.43740055489301743))) END) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt1 ON rt0.c2 ORDER BY ((LIKELY(rt0.c2)) BETWEEN (vt1.c1) AND (((rt0.c2)GLOB(vt1.c0)))) ASC);
SELECT ALL * FROM v0, rt0 INNER JOIN vt1 ON rt0.c2 WHERE (CASE WHEN (((rt0.c2))>=((v0.c0))) THEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE (((rt0.c1)) BETWEEN ((v0.c0)) AND ((0.43740055489301743))) END) ORDER BY ((LIKELY(rt0.c2)) BETWEEN (vt1.c1) AND (((rt0.c2)GLOB(vt1.c0)))) ASC;
SELECT ALL * FROM v0 NOT INDEXED, vt1 CROSS JOIN rt0 ON ((((v0.c0) BETWEEN (vt1.c0) AND (rt0.c2)))<<((+ (vt1.c0)))) WHERE ((((((rt0.c2)!=(vt1.c0)), ((vt1.c1)>(vt1.c0)), (((rt0.c1))<=((vt1.c1)))))>((vt1.c0 COLLATE NOCASE, (- (vt1.c1)), (vt1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)<>(vt1.c0)), ((vt1.c1)>(vt1.c0)), (((rt0.c1))<=((vt1.c1)))))>((vt1.c0 COLLATE NOCASE, (- (vt1.c1)), (vt1.c1 IN ()))))) IS TRUE)  as count FROM v0, vt1 CROSS JOIN rt0 ON ((((v0.c0) BETWEEN (vt1.c0) AND (rt0.c2)))<<((+ (vt1.c0)))));
SELECT ALL * FROM v0 NOT INDEXED, vt1 CROSS JOIN rt0 ON ((((v0.c0) BETWEEN (vt1.c0) AND (rt0.c2)))<<((+ (vt1.c0)))) WHERE ((((((rt0.c2)!=(vt1.c0)), ((vt1.c1)>(vt1.c0)), (((rt0.c1))<=((vt1.c1)))))>((vt1.c0 COLLATE NOCASE, (- (vt1.c1)), (vt1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)<>(vt1.c0)), ((vt1.c1)>(vt1.c0)), (((rt0.c1))<=((vt1.c1)))))>((vt1.c0 COLLATE NOCASE, (- (vt1.c1)), (vt1.c1 IN ()))))) IS TRUE)  as count FROM v0, vt1 CROSS JOIN rt0 ON ((((v0.c0) BETWEEN (vt1.c0) AND (rt0.c2)))<<((+ (vt1.c0)))));
SELECT ALL * FROM v0 NOT INDEXED, vt1 CROSS JOIN rt0 ON ((((v0.c0) BETWEEN (vt1.c0) AND (rt0.c2)))<<((+ (vt1.c0)))) WHERE ((((((rt0.c2)!=(vt1.c0)), ((vt1.c1)>(vt1.c0)), (((rt0.c1))<=((vt1.c1)))))>((vt1.c0 COLLATE NOCASE, (- (vt1.c1)), (vt1.c1 IN ())))));
SELECT * FROM rt0, v0, vt1 WHERE (((vt1.c1)<<(((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1)<<(((((rt0.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT * FROM rt0, v0, vt1 WHERE (((vt1.c1)<<(((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1)<<(((((rt0.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT * FROM rt0, v0, vt1 WHERE (((vt1.c1)<<(((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)OR(((rt0.c1) IS TRUE))))AND(LIKELIHOOD(rt0.c0, 0.4457910831176829))) LEFT OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN 'Pq' WHEN rt0.c1 THEN 'z飋' ELSE v0.c0 END) IS FALSE) WHERE ((((((rt0.c2))!=((rt0.c1))))!=(((v0.c0)IS(vt1.c1))))) ORDER BY (NOT (CHAR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<>((rt0.c1))))!=(((v0.c0)IS(vt1.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)OR(((rt0.c1) IS TRUE))))AND(LIKELIHOOD(rt0.c0, 0.4457910831176829))) LEFT OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN 'Pq' WHEN rt0.c1 THEN 'z飋' ELSE v0.c0 END) IS FALSE) ORDER BY (NOT (CHAR(rt0.c1))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)OR(((rt0.c1) IS TRUE))))AND(LIKELIHOOD(rt0.c0, 0.4457910831176829))) LEFT OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN 'Pq' WHEN rt0.c1 THEN 'z飋' ELSE v0.c0 END) IS FALSE) WHERE ((((((rt0.c2))!=((rt0.c1))))!=(((v0.c0)IS(vt1.c1))))) ORDER BY (NOT (CHAR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<>((rt0.c1))))!=(((v0.c0)IS(vt1.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)OR(((rt0.c1) IS TRUE))))AND(LIKELIHOOD(rt0.c0, 0.4457910831176829))) LEFT OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN 'Pq' WHEN rt0.c1 THEN 'z飋' ELSE v0.c0 END) IS FALSE) ORDER BY (NOT (CHAR(rt0.c1))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)OR(((rt0.c1) IS TRUE))))AND(LIKELIHOOD(rt0.c0, 0.4457910831176829))) LEFT OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN 'Pq' WHEN rt0.c1 THEN 'z飋' ELSE v0.c0 END) IS FALSE) WHERE ((((((rt0.c2))!=((rt0.c1))))!=(((v0.c0)IS(vt1.c1))))) ORDER BY (NOT (CHAR(rt0.c1)));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON NULLIF(DISTINCT ((rt0.c1)<(rt0.c0)), ((((rt0.c0)OR(rt0.c2)))AND(v0.c0))) CROSS JOIN v0 ON CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END  WHEN '' THEN TYPEOF(DISTINCT 0.11078424461209724) END WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON NULLIF(DISTINCT ((rt0.c1)<(rt0.c0)), ((((rt0.c0)OR(rt0.c2)))AND(v0.c0))) CROSS JOIN v0 ON CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END  WHEN '' THEN TYPEOF(DISTINCT 0.11078424461209724) END);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON NULLIF(DISTINCT ((rt0.c1)<(rt0.c0)), ((((rt0.c0)OR(rt0.c2)))AND(v0.c0))) CROSS JOIN v0 ON CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END  WHEN '' THEN TYPEOF(DISTINCT 0.11078424461209724) END WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON NULLIF(DISTINCT ((rt0.c1)<(rt0.c0)), ((((rt0.c0)OR(rt0.c2)))AND(v0.c0))) CROSS JOIN v0 ON CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END  WHEN '' THEN TYPEOF(DISTINCT 0.11078424461209724) END);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON NULLIF(DISTINCT ((rt0.c1)<(rt0.c0)), ((((rt0.c0)OR(rt0.c2)))AND(v0.c0))) CROSS JOIN v0 ON CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END  WHEN '' THEN TYPEOF(DISTINCT 0.11078424461209724) END WHERE (vt1.c0);
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE ((- (((vt1.c0) NOT BETWEEN (x'3a86') AND (vt1.c0))))) ORDER BY (((((('\nxC')OR(1138123538)))OR(rt0.c0)))==(LIKE(v0.c0, v0.c0, '~'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) NOT BETWEEN (x'3a86') AND (vt1.c0))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY (((((('\nxC')OR(1138123538)))OR(rt0.c0)))==(LIKE(v0.c0, v0.c0, '~'))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE ((- (((vt1.c0) NOT BETWEEN (x'3a86') AND (vt1.c0))))) ORDER BY (((((('\nxC')OR(1138123538)))OR(rt0.c0)))==(LIKE(v0.c0, v0.c0, '~'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) NOT BETWEEN (x'3a86') AND (vt1.c0))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY (((((('\nxC')OR(1138123538)))OR(rt0.c0)))==(LIKE(v0.c0, v0.c0, '~'))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE ((- (((vt1.c0) NOT BETWEEN (x'3a86') AND (vt1.c0))))) ORDER BY (((((('\nxC')OR(1138123538)))OR(rt0.c0)))==(LIKE(v0.c0, v0.c0, '~'))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '0.27572765857400794' ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '0.27572765857400794' ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '0.27572765857400794' ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '0.27572765857400794' ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '0.27572765857400794' ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE ((('1172327063') IS TRUE));
SELECT SUM(count) FROM (SELECT (((('1172327063') IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((('1172327063') IS TRUE));
SELECT SUM(count) FROM (SELECT (((('1172327063') IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((('1172327063') IS TRUE));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (UPPER(v0.c0)) ORDER BY (- (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(v0.c0)) IS TRUE)  as count FROM v0, vt1 ORDER BY (- (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (UPPER(v0.c0)) ORDER BY (- (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(v0.c0)) IS TRUE)  as count FROM v0, vt1 ORDER BY (- (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (UPPER(v0.c0)) ORDER BY (- (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)))||(((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))AND(vt1.c0)))OR(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)))||(((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))AND(vt1.c0)))OR(vt1.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)))||(((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))AND(vt1.c0)))OR(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)))||(((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))AND(vt1.c0)))OR(vt1.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)))||(((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))AND(vt1.c0)))OR(vt1.c1)))) ASC  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((((vt1.c1) NOT NULL)) BETWEEN (CAST(vt1.c1 AS INTEGER)) AND (((rt0.c2)||(rt0.c0)))) WHERE (CAST(((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c1)) AS NUMERIC)) ORDER BY INSTR('-1248394800' COLLATE RTRIM, ((vt1.c0)<>(NULL))), CAST(CASE rt0.c2  WHEN vt1.c0 THEN vt1.c1 END AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((((vt1.c1) NOT NULL)) BETWEEN (CAST(vt1.c1 AS INTEGER)) AND (((rt0.c2)||(rt0.c0)))) ORDER BY INSTR('-1248394800' COLLATE RTRIM, ((vt1.c0)<>(NULL))), CAST(CASE rt0.c2  WHEN vt1.c0 THEN vt1.c1 END AS INTEGER)  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((((vt1.c1) NOT NULL)) BETWEEN (CAST(vt1.c1 AS INTEGER)) AND (((rt0.c2)||(rt0.c0)))) WHERE (CAST(((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c1)) AS NUMERIC)) ORDER BY INSTR('-1248394800' COLLATE RTRIM, ((vt1.c0)<>(NULL))), CAST(CASE rt0.c2  WHEN vt1.c0 THEN vt1.c1 END AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((((vt1.c1) NOT NULL)) BETWEEN (CAST(vt1.c1 AS INTEGER)) AND (((rt0.c2)||(rt0.c0)))) ORDER BY INSTR('-1248394800' COLLATE RTRIM, ((vt1.c0)<>(NULL))), CAST(CASE rt0.c2  WHEN vt1.c0 THEN vt1.c1 END AS INTEGER)  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((((vt1.c1) NOT NULL)) BETWEEN (CAST(vt1.c1 AS INTEGER)) AND (((rt0.c2)||(rt0.c0)))) WHERE (CAST(((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c1)) AS NUMERIC)) ORDER BY INSTR('-1248394800' COLLATE RTRIM, ((vt1.c0)<>(NULL))), CAST(CASE rt0.c2  WHEN vt1.c0 THEN vt1.c1 END AS INTEGER)  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (((CAST(rt0.c0 AS REAL)) ISNULL)) ORDER BY (- (((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)))) DESC);
SELECT * FROM v0, rt0 WHERE (((CAST(rt0.c0 AS REAL)) ISNULL)) ORDER BY (- (((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)))) DESC);
SELECT * FROM v0, rt0 WHERE (((CAST(rt0.c0 AS REAL)) ISNULL)) ORDER BY (- (((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)))) DESC;
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (((vt1.c0)+(((vt1.c0)+(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)+(((vt1.c0)+(rt0.c0))))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (((vt1.c0)+(((vt1.c0)+(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)+(((vt1.c0)+(rt0.c0))))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (((vt1.c0)+(((vt1.c0)+(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST;
SELECT * FROM v0 FULL OUTER JOIN vt1 ON ((CASE v0.c0  WHEN vt1.c1 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)/(CAST(vt1.c0 AS INTEGER))) WHERE ((+ (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON ((CASE v0.c0  WHEN vt1.c1 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)/(CAST(vt1.c0 AS INTEGER))));
SELECT * FROM v0 FULL OUTER JOIN vt1 ON ((CASE v0.c0  WHEN vt1.c1 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)/(CAST(vt1.c0 AS INTEGER))) WHERE ((+ (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON ((CASE v0.c0  WHEN vt1.c1 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)/(CAST(vt1.c0 AS INTEGER))));
SELECT * FROM v0 FULL OUTER JOIN vt1 ON ((CASE v0.c0  WHEN vt1.c1 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)/(CAST(vt1.c0 AS INTEGER))) WHERE ((+ (vt1.c0)));
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)) THEN LOWER(vt1.c1) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) THEN (((vt1.c0))!=((vt1.c1))) WHEN CAST(vt1.c1 AS INTEGER) THEN CAST(vt1.c0 AS BLOB) END) ORDER BY (((((((vt1.c0))==((vt1.c0))))AND(((vt1.c0) IS TRUE))))OR((('1211228531') NOT BETWEEN (vt1.c1) AND (vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)) THEN LOWER(vt1.c1) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) THEN (((vt1.c0))!=((vt1.c1))) WHEN CAST(vt1.c1 AS INTEGER) THEN CAST(vt1.c0 AS BLOB) END) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0))=((vt1.c0))))AND(((vt1.c0) IS TRUE))))OR((('1211228531') NOT BETWEEN (vt1.c1) AND (vt1.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)) THEN LOWER(vt1.c1) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) THEN (((vt1.c0))!=((vt1.c1))) WHEN CAST(vt1.c1 AS INTEGER) THEN CAST(vt1.c0 AS BLOB) END) ORDER BY (((((((vt1.c0))==((vt1.c0))))AND(((vt1.c0) IS TRUE))))OR((('1211228531') NOT BETWEEN (vt1.c1) AND (vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)) THEN LOWER(vt1.c1) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) THEN (((vt1.c0))!=((vt1.c1))) WHEN CAST(vt1.c1 AS INTEGER) THEN CAST(vt1.c0 AS BLOB) END) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0))=((vt1.c0))))AND(((vt1.c0) IS TRUE))))OR((('1211228531') NOT BETWEEN (vt1.c1) AND (vt1.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)) THEN LOWER(vt1.c1) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) THEN (((vt1.c0))!=((vt1.c1))) WHEN CAST(vt1.c1 AS INTEGER) THEN CAST(vt1.c0 AS BLOB) END) ORDER BY (((((((vt1.c0))==((vt1.c0))))AND(((vt1.c0) IS TRUE))))OR((('1211228531') NOT BETWEEN (vt1.c1) AND (vt1.c0)))) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)<(((v0.c0)<=(v0.c0))))) ORDER BY (+ (v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)<(((v0.c0)<=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0)) DESC);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)<(((v0.c0)<=(v0.c0))))) ORDER BY (+ (v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)<(((v0.c0)<=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0)) DESC);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)<(((v0.c0)<=(v0.c0))))) ORDER BY (+ (v0.c0)) DESC;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN v0 ON CASE CASE WHEN v0.c0 THEN x'' END  WHEN (vt1.c1 IN (0.4585799333196646)) THEN ((((vt1.c1)OR(v0.c0)))OR(vt1.c1)) WHEN CAST(v0.c0 AS TEXT) THEN CASE vt1.c1  WHEN v0.c0 THEN v0.c0 END WHEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)) THEN CAST(vt1.c1 AS NUMERIC) END WHERE (((vt1.c0 COLLATE RTRIM)OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON CASE CASE WHEN v0.c0 THEN x'' END  WHEN (vt1.c1 IN (0.4585799333196646)) THEN ((((vt1.c1)OR(v0.c0)))OR(vt1.c1)) WHEN CAST(v0.c0 AS TEXT) THEN CASE vt1.c1  WHEN v0.c0 THEN v0.c0 END WHEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)) THEN CAST(vt1.c1 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN v0 ON CASE CASE WHEN v0.c0 THEN x'' END  WHEN (vt1.c1 IN (0.4585799333196646)) THEN ((((vt1.c1)OR(v0.c0)))OR(vt1.c1)) WHEN CAST(v0.c0 AS TEXT) THEN CASE vt1.c1  WHEN v0.c0 THEN v0.c0 END WHEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)) THEN CAST(vt1.c1 AS NUMERIC) END WHERE (((vt1.c0 COLLATE RTRIM)OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON CASE CASE WHEN v0.c0 THEN x'' END  WHEN (vt1.c1 IN (0.4585799333196646)) THEN ((((vt1.c1)OR(v0.c0)))OR(vt1.c1)) WHEN CAST(v0.c0 AS TEXT) THEN CASE vt1.c1  WHEN v0.c0 THEN v0.c0 END WHEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)) THEN CAST(vt1.c1 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN v0 ON CASE CASE WHEN v0.c0 THEN x'' END  WHEN (vt1.c1 IN (0.4585799333196646)) THEN ((((vt1.c1)OR(v0.c0)))OR(vt1.c1)) WHEN CAST(v0.c0 AS TEXT) THEN CASE vt1.c1  WHEN v0.c0 THEN v0.c0 END WHEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)) THEN CAST(vt1.c1 AS NUMERIC) END WHERE (((vt1.c0 COLLATE RTRIM)OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c1)))));
SELECT COUNT(*) FROM rt0 WHERE ((((LOWER(rt0.c1)))==((MAX(rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0, 1.867833611E9)))));
SELECT SUM(count) FROM (SELECT ALL (((((LOWER(rt0.c1)))==((MAX(rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0, 1.867833611E9))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((LOWER(rt0.c1)))==((MAX(rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0, 1.867833611E9)))));
SELECT SUM(count) FROM (SELECT ALL (((((LOWER(rt0.c1)))==((MAX(rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0, 1.867833611E9))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((LOWER(rt0.c1)))==((MAX(rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0, 1.867833611E9)))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((+ (((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))) ORDER BY ((((((((((rt0.c2)OR(rt0.c1)))OR(v0.c0)))AND(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (v0.c0) AND (((v0.c0)|(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((((((((((rt0.c2)OR(rt0.c1)))OR(v0.c0)))AND(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (v0.c0) AND (((v0.c0)|(rt0.c2)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((+ (((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))) ORDER BY ((((((((((rt0.c2)OR(rt0.c1)))OR(v0.c0)))AND(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (v0.c0) AND (((v0.c0)|(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((((((((((rt0.c2)OR(rt0.c1)))OR(v0.c0)))AND(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (v0.c0) AND (((v0.c0)|(rt0.c2)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((+ (((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))) ORDER BY ((((((((((rt0.c2)OR(rt0.c1)))OR(v0.c0)))AND(rt0.c2)))OR(rt0.c1))) NOT BETWEEN (v0.c0) AND (((v0.c0)|(rt0.c2)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN TRIM(rt0.c1, rt0.c0) THEN rt0.c2 END) ORDER BY rt0.c0, (('-1124218423')IS NOT((((rt0.c2))<=((rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(rt0.c1, rt0.c0) THEN rt0.c2 END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0, (('-1124218423')IS NOT((((rt0.c2))<=((rt0.c0))))) ASC);
SELECT * FROM rt0 WHERE (CASE WHEN TRIM(rt0.c1, rt0.c0) THEN rt0.c2 END) ORDER BY rt0.c0, (('-1124218423')IS NOT((((rt0.c2))<=((rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(rt0.c1, rt0.c0) THEN rt0.c2 END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0, (('-1124218423')IS NOT((((rt0.c2))<=((rt0.c0))))) ASC);
SELECT * FROM rt0 WHERE (CASE WHEN TRIM(rt0.c1, rt0.c0) THEN rt0.c2 END) ORDER BY rt0.c0, (('-1124218423')IS NOT((((rt0.c2))<=((rt0.c0))))) ASC;
SELECT COUNT(*) FROM vt1 WHERE ((- (x''))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((- (x''))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT COUNT(*) FROM vt1 WHERE ((- (x''))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((- (x''))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT COUNT(*) FROM vt1 WHERE ((- (x''))) ORDER BY vt1.c0 ASC;
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (CASE ((((((((rt0.c2)OR(vt1.c1)))OR(rt0.c1)))AND(vt1.c0)))AND(rt0.c0))  WHEN NULL THEN ((v0.c0)-(rt0.c0)) ELSE 99065366 END) ORDER BY (((vt1.c1) IS TRUE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c2)OR(vt1.c1)))OR(rt0.c1)))AND(vt1.c0)))AND(rt0.c0))  WHEN NULL THEN ((v0.c0)-(rt0.c0)) ELSE 99065366 END) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (((vt1.c1) IS TRUE) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (CASE ((((((((rt0.c2)OR(vt1.c1)))OR(rt0.c1)))AND(vt1.c0)))AND(rt0.c0))  WHEN NULL THEN ((v0.c0)-(rt0.c0)) ELSE 99065366 END) ORDER BY (((vt1.c1) IS TRUE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c2)OR(vt1.c1)))OR(rt0.c1)))AND(vt1.c0)))AND(rt0.c0))  WHEN NULL THEN ((v0.c0)-(rt0.c0)) ELSE 99065366 END) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (((vt1.c1) IS TRUE) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (CASE ((((((((rt0.c2)OR(vt1.c1)))OR(rt0.c1)))AND(vt1.c0)))AND(rt0.c0))  WHEN NULL THEN ((v0.c0)-(rt0.c0)) ELSE 99065366 END) ORDER BY (((vt1.c1) IS TRUE) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))AND(vt1.c1 COLLATE RTRIM)))OR(((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c0) NOTNULL))))OR(vt1.c1))) ORDER BY CASE WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) END DESC  NULLS LAST, (+ (SQLITE_VERSION()))  NULLS FIRST, ((((vt1.c0)) NOT BETWEEN (('鶙7_ ')) AND ((vt1.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))AND(vt1.c1 COLLATE RTRIM)))OR(((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c0) NOTNULL))))OR(vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) END DESC  NULLS LAST, (+ (SQLITE_VERSION()))  NULLS FIRST, ((((vt1.c0)) NOT BETWEEN (('鶙7_ ')) AND ((vt1.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))AND(vt1.c1 COLLATE RTRIM)))OR(((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c0) NOTNULL))))OR(vt1.c1))) ORDER BY CASE WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) END DESC  NULLS LAST, (+ (SQLITE_VERSION()))  NULLS FIRST, ((((vt1.c0)) NOT BETWEEN (('鶙7_ ')) AND ((vt1.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))AND(vt1.c1 COLLATE RTRIM)))OR(((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c0) NOTNULL))))OR(vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) END DESC  NULLS LAST, (+ (SQLITE_VERSION()))  NULLS FIRST, ((((vt1.c0)) NOT BETWEEN (('鶙7_ ')) AND ((vt1.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))AND(vt1.c1 COLLATE RTRIM)))OR(((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c0) NOTNULL))))OR(vt1.c1))) ORDER BY CASE WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) END DESC  NULLS LAST, (+ (SQLITE_VERSION()))  NULLS FIRST, ((((vt1.c0)) NOT BETWEEN (('鶙7_ ')) AND ((vt1.c0))) IN ());
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)>(rt0.c1))) NOTNULL)) ORDER BY (((rt0.c0 IN ())) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)>(rt0.c1))) NOTNULL)) ORDER BY (((rt0.c0 IN ())) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)>(rt0.c1))) NOTNULL)) ORDER BY (((rt0.c0 IN ())) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((('1065789771'))<((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((('1065789771'))<((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((('1065789771'))<((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((('1065789771'))<((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((('1065789771'))<((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) ISNULL)) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) ISNULL)) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) ISNULL)) ORDER BY rt0.c0 ASC;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<=(((rt0.c0)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<=(((rt0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<=(((rt0.c0)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<=(((rt0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<=(((rt0.c0)AND(rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c1 END)))OR(((rt0.c1)=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c1 END)))OR(((rt0.c1)=(vt1.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c1 END)))OR(((rt0.c1)=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c1 END)))OR(((rt0.c1)=(vt1.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c1 END)))OR(((rt0.c1)=(vt1.c1)))));
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (((((((rt0.c2)>>(NULL)))OR(((('\rM'))>=((rt0.c2))))))OR((((v0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) ORDER BY (((vt1.c0))>((v0.c0))) COLLATE NOCASE  NULLS LAST, (NOT (((0Xffffffffc02fcf09)%(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)>>(NULL)))OR(((('\rM'))>=((rt0.c2))))))OR((((v0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (((vt1.c0))>((v0.c0))) COLLATE NOCASE  NULLS LAST, (NOT (((0Xffffffffc02fcf09)%(vt1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (((((((rt0.c2)>>(NULL)))OR(((('\rM'))>=((rt0.c2))))))OR((((v0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) ORDER BY (((vt1.c0))>((v0.c0))) COLLATE NOCASE  NULLS LAST, (NOT (((0Xffffffffc02fcf09)%(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)>>(NULL)))OR(((('\rM'))>=((rt0.c2))))))OR((((v0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY (((vt1.c0))>((v0.c0))) COLLATE NOCASE  NULLS LAST, (NOT (((0Xffffffffc02fcf09)%(vt1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, v0 WHERE (((((((rt0.c2)>>(NULL)))OR(((('\rM'))>=((rt0.c2))))))OR((((v0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) ORDER BY (((vt1.c0))>((v0.c0))) COLLATE NOCASE  NULLS LAST, (NOT (((0Xffffffffc02fcf09)%(vt1.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CASE WHEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) ELSE (('c') NOT BETWEEN (v0.c0) AND (x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) ELSE (('c') NOT BETWEEN (v0.c0) AND (x'')) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) ELSE (('c') NOT BETWEEN (v0.c0) AND (x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) ELSE (('c') NOT BETWEEN (v0.c0) AND (x'')) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) ELSE (('c') NOT BETWEEN (v0.c0) AND (x'')) END);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (0.9526452187329018);
SELECT SUM(count) FROM (SELECT ALL ((0.9526452187329018) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (0.9526452187329018);
SELECT SUM(count) FROM (SELECT ALL ((0.9526452187329018) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (0.9526452187329018);
SELECT ALL * FROM v0, vt1 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((x'') NOTNULL));
SELECT COUNT(*) FROM vt1, v0 WHERE (((((vt1.c1)>(NULL))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)>(NULL))) NOT NULL)) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((vt1.c1)>(NULL))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)>(NULL))) NOT NULL)) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((vt1.c1)>(NULL))) NOT NULL));
SELECT ALL COUNT(*) FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ()));
SELECT * FROM vt1, rt0 WHERE ((((((vt1.c1, vt1.c1, vt1.c1)) NOT BETWEEN ((0.3298363970488716, rt0.c1, rt0.c1)) AND ((rt0.c1, vt1.c1, vt1.c0))))<>(((rt0.c0)LIKE(vt1.c1))))) ORDER BY LTRIM((+ (rt0.c1)), (((vt1.c1, rt0.c0, vt1.c0))>=((rt0.c0, vt1.c0, rt0.c1)))) ASC, (((rt0.c0) IS FALSE) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1, vt1.c1, vt1.c1)) NOT BETWEEN ((0.3298363970488716, rt0.c1, rt0.c1)) AND ((rt0.c1, vt1.c1, vt1.c0))))<>(((rt0.c0)LIKE(vt1.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY LTRIM((+ (rt0.c1)), (((vt1.c1, rt0.c0, vt1.c0))>=((rt0.c0, vt1.c0, rt0.c1)))) ASC, (((rt0.c0) IS FALSE) IN ())  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((((((vt1.c1, vt1.c1, vt1.c1)) NOT BETWEEN ((0.3298363970488716, rt0.c1, rt0.c1)) AND ((rt0.c1, vt1.c1, vt1.c0))))<>(((rt0.c0)LIKE(vt1.c1))))) ORDER BY LTRIM((+ (rt0.c1)), (((vt1.c1, rt0.c0, vt1.c0))>=((rt0.c0, vt1.c0, rt0.c1)))) ASC, (((rt0.c0) IS FALSE) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1, vt1.c1, vt1.c1)) NOT BETWEEN ((0.3298363970488716, rt0.c1, rt0.c1)) AND ((rt0.c1, vt1.c1, vt1.c0))))<>(((rt0.c0)LIKE(vt1.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY LTRIM((+ (rt0.c1)), (((vt1.c1, rt0.c0, vt1.c0))>=((rt0.c0, vt1.c0, rt0.c1)))) ASC, (((rt0.c0) IS FALSE) IN ())  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((((((vt1.c1, vt1.c1, vt1.c1)) NOT BETWEEN ((0.3298363970488716, rt0.c1, rt0.c1)) AND ((rt0.c1, vt1.c1, vt1.c0))))<>(((rt0.c0)LIKE(vt1.c1))))) ORDER BY LTRIM((+ (rt0.c1)), (((vt1.c1, rt0.c0, vt1.c0))>=((rt0.c0, vt1.c0, rt0.c1)))) ASC, (((rt0.c0) IS FALSE) IN ())  NULLS LAST;
SELECT * FROM rt0, v0, vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN (((rt0.c1)IS(vt1.c1)), rt0.c1))) ORDER BY ((((v0.c0)OR('\')))AND(v0.c0)) COLLATE NOCASE ASC, (~ (((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c0)))AND(NULL)))OR(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS NUMERIC) IN (((rt0.c1)IS(vt1.c1)), rt0.c1))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((((v0.c0)OR('\')))AND(v0.c0)) COLLATE NOCASE ASC, (~ (((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c0)))AND(NULL)))OR(rt0.c0)))) ASC  NULLS LAST);
SELECT * FROM rt0, v0, vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN (((rt0.c1)IS(vt1.c1)), rt0.c1))) ORDER BY ((((v0.c0)OR('\')))AND(v0.c0)) COLLATE NOCASE ASC, (~ (((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c0)))AND(NULL)))OR(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS NUMERIC) IN (((rt0.c1)IS(vt1.c1)), rt0.c1))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((((v0.c0)OR('\')))AND(v0.c0)) COLLATE NOCASE ASC, (~ (((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c0)))AND(NULL)))OR(rt0.c0)))) ASC  NULLS LAST);
SELECT * FROM rt0, v0, vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN (((rt0.c1)IS(vt1.c1)), rt0.c1))) ORDER BY ((((v0.c0)OR('\')))AND(v0.c0)) COLLATE NOCASE ASC, (~ (((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c0)))AND(NULL)))OR(rt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN 0.09699661483279831 ELSE rt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN 0.09699661483279831 ELSE rt0.c1 END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN 0.09699661483279831 ELSE rt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN 0.09699661483279831 ELSE rt0.c1 END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN 0.09699661483279831 ELSE rt0.c1 END);
SELECT ALL * FROM rt0, v0, vt1 WHERE ((((v0.c0)) BETWEEN ((CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c1 ELSE NULL END)) AND (((+ (vt1.c0)))))) ORDER BY (rt0.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c1 ELSE NULL END)) AND (((+ (vt1.c0)))))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (rt0.c0 IN ()) COLLATE BINARY);
SELECT ALL * FROM rt0, v0, vt1 WHERE ((((v0.c0)) BETWEEN ((CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c1 ELSE NULL END)) AND (((+ (vt1.c0)))))) ORDER BY (rt0.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c1 ELSE NULL END)) AND (((+ (vt1.c0)))))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (rt0.c0 IN ()) COLLATE BINARY);
SELECT ALL * FROM rt0, v0, vt1 WHERE ((((v0.c0)) BETWEEN ((CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c1 ELSE NULL END)) AND (((+ (vt1.c0)))))) ORDER BY (rt0.c0 IN ()) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (CAST(((v0.c0)>=('-1070630875')) AS BLOB)) ORDER BY ((((((((((vt1.c1)AND(rt0.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(rt0.c1))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)>=('-1070630875')) AS BLOB)) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((((((((((vt1.c1)AND(rt0.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(rt0.c1))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (CAST(((v0.c0)>=('-1070630875')) AS BLOB)) ORDER BY ((((((((((vt1.c1)AND(rt0.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(rt0.c1))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)>=('-1070630875')) AS BLOB)) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((((((((((vt1.c1)AND(rt0.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(rt0.c1))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (CAST(((v0.c0)>=('-1070630875')) AS BLOB)) ORDER BY ((((((((((vt1.c1)AND(rt0.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(rt0.c1))) ISNULL) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0) NOT NULL) THEN 3.206358E8 ELSE ((v0.c0) NOTNULL) END) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.0 ELSE v0.c0 END AS TEXT)  NULLS LAST, ((((x'' COLLATE RTRIM)AND(CAST(v0.c0 AS REAL))))AND(((v0.c0)GLOB(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT NULL) THEN 3.206358E8 ELSE ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.0 ELSE v0.c0 END AS TEXT)  NULLS LAST, ((((x'' COLLATE RTRIM)AND(CAST(v0.c0 AS REAL))))AND(((v0.c0)GLOB(v0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0) NOT NULL) THEN 3.206358E8 ELSE ((v0.c0) NOTNULL) END) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.0 ELSE v0.c0 END AS TEXT)  NULLS LAST, ((((x'' COLLATE RTRIM)AND(CAST(v0.c0 AS REAL))))AND(((v0.c0)GLOB(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT NULL) THEN 3.206358E8 ELSE ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.0 ELSE v0.c0 END AS TEXT)  NULLS LAST, ((((x'' COLLATE RTRIM)AND(CAST(v0.c0 AS REAL))))AND(((v0.c0)GLOB(v0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0) NOT NULL) THEN 3.206358E8 ELSE ((v0.c0) NOTNULL) END) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.0 ELSE v0.c0 END AS TEXT)  NULLS LAST, ((((x'' COLLATE RTRIM)AND(CAST(v0.c0 AS REAL))))AND(((v0.c0)GLOB(v0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ('윴+' COLLATE RTRIM) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c1) IS TRUE))) AND ((((((rt0.c1)OR(vt1.c1)))OR(rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('윴+' COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c1) IS TRUE))) AND ((((((rt0.c1)OR(vt1.c1)))OR(rt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ('윴+' COLLATE RTRIM) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c1) IS TRUE))) AND ((((((rt0.c1)OR(vt1.c1)))OR(rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('윴+' COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c1) IS TRUE))) AND ((((((rt0.c1)OR(vt1.c1)))OR(rt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ('윴+' COLLATE RTRIM) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c1) IS TRUE))) AND ((((((rt0.c1)OR(vt1.c1)))OR(rt0.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE ((- (UNLIKELY(DISTINCT '-711360431')))) ORDER BY TRIM(DISTINCT ((((v0.c0)OR(rt0.c1)))AND(rt0.c0)), ((v0.c0) IS FALSE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (UNLIKELY(DISTINCT '-711360431')))) IS TRUE)  as count FROM v0, rt0 ORDER BY TRIM(DISTINCT ((((v0.c0)OR(rt0.c1)))AND(rt0.c0)), ((v0.c0) IS FALSE)) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((- (UNLIKELY(DISTINCT '-711360431')))) ORDER BY TRIM(DISTINCT ((((v0.c0)OR(rt0.c1)))AND(rt0.c0)), ((v0.c0) IS FALSE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (UNLIKELY(DISTINCT '-711360431')))) IS TRUE)  as count FROM v0, rt0 ORDER BY TRIM(DISTINCT ((((v0.c0)OR(rt0.c1)))AND(rt0.c0)), ((v0.c0) IS FALSE)) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((- (UNLIKELY(DISTINCT '-711360431')))) ORDER BY TRIM(DISTINCT ((((v0.c0)OR(rt0.c1)))AND(rt0.c0)), ((v0.c0) IS FALSE)) DESC;
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt1 ON (CAST(v0.c0 AS REAL) IN (rt0.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c0 ELSE -1.227819504E9 END)) WHERE ((NOT (((rt0.c1) NOTNULL)))) ORDER BY CAST((NOT (rt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt1 ON (CAST(v0.c0 AS REAL) IN (rt0.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c0 ELSE -1.227819504E9 END)) ORDER BY CAST((NOT (rt0.c0)) AS INTEGER) DESC);
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt1 ON (CAST(v0.c0 AS REAL) IN (rt0.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c0 ELSE -1.227819504E9 END)) WHERE ((NOT (((rt0.c1) NOTNULL)))) ORDER BY CAST((NOT (rt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt1 ON (CAST(v0.c0 AS REAL) IN (rt0.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c0 ELSE -1.227819504E9 END)) ORDER BY CAST((NOT (rt0.c0)) AS INTEGER) DESC);
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt1 ON (CAST(v0.c0 AS REAL) IN (rt0.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c0 ELSE -1.227819504E9 END)) WHERE ((NOT (((rt0.c1) NOTNULL)))) ORDER BY CAST((NOT (rt0.c0)) AS INTEGER) DESC;
SELECT COUNT(*) FROM vt1, v0 WHERE (((((vt1.c0 COLLATE RTRIM)AND(((v0.c0)<=(0.6126922319579892)))))OR(((vt1.c0)%(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE RTRIM)AND(((v0.c0)<=(0.6126922319579892)))))OR(((vt1.c0)%(v0.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((vt1.c0 COLLATE RTRIM)AND(((v0.c0)<=(0.6126922319579892)))))OR(((vt1.c0)%(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE RTRIM)AND(((v0.c0)<=(0.6126922319579892)))))OR(((vt1.c0)%(v0.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((vt1.c0 COLLATE RTRIM)AND(((v0.c0)<=(0.6126922319579892)))))OR(((vt1.c0)%(v0.c0)))));
SELECT ALL * FROM vt1, v0 WHERE ((- ((+ (vt1.c0))))) ORDER BY (((((vt1.c0, '1312428170', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt1.c0)) AND ((vt1.c1, vt1.c1, NULL))))<>(((v0.c0)<>(vt1.c1))));
SELECT SUM(count) FROM (SELECT (((- ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((vt1.c0, '1312428170', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt1.c0)) AND ((vt1.c1, vt1.c1, NULL))))<>(((v0.c0)<>(vt1.c1)))));
SELECT ALL * FROM vt1, v0 WHERE ((- ((+ (vt1.c0))))) ORDER BY (((((vt1.c0, '1312428170', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt1.c0)) AND ((vt1.c1, vt1.c1, NULL))))<>(((v0.c0)<>(vt1.c1))));
SELECT SUM(count) FROM (SELECT (((- ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((vt1.c0, '1312428170', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt1.c0)) AND ((vt1.c1, vt1.c1, NULL))))<>(((v0.c0)<>(vt1.c1)))));
SELECT ALL * FROM vt1, v0 WHERE ((- ((+ (vt1.c0))))) ORDER BY (((((vt1.c0, '1312428170', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt1.c0)) AND ((vt1.c1, vt1.c1, NULL))))<>(((v0.c0)<>(vt1.c1))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((v0.c0)>(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((v0.c0)>(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((v0.c0)>(rt0.c1)) COLLATE BINARY);
SELECT * FROM rt0 INNER JOIN vt1 ON ((((CASE vt1.c0  WHEN vt1.c1 THEN rt0.c2 END)OR(ABS(rt0.c2))))AND(rt0.c0)) WHERE (((((((((((rt0.c1)OR(vt1.c1)))AND(x'0a02')))OR(vt1.c1)))OR(rt0.c1))) IS FALSE)) ORDER BY (((((((rt0.c1))>=((vt1.c0))))AND((((rt0.c1))>((rt0.c1))))))AND(((vt1.c1)>(vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)OR(vt1.c1)))AND(x'0a02')))OR(vt1.c1)))OR(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((CASE vt1.c0  WHEN vt1.c1 THEN rt0.c2 END)OR(ABS(rt0.c2))))AND(rt0.c0)) ORDER BY (((((((rt0.c1))>=((vt1.c0))))AND((((rt0.c1))>((rt0.c1))))))AND(((vt1.c1)>(vt1.c1)))) DESC);
SELECT * FROM rt0 INNER JOIN vt1 ON ((((CASE vt1.c0  WHEN vt1.c1 THEN rt0.c2 END)OR(ABS(rt0.c2))))AND(rt0.c0)) WHERE (((((((((((rt0.c1)OR(vt1.c1)))AND(x'0a02')))OR(vt1.c1)))OR(rt0.c1))) IS FALSE)) ORDER BY (((((((rt0.c1))>=((vt1.c0))))AND((((rt0.c1))>((rt0.c1))))))AND(((vt1.c1)>(vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)OR(vt1.c1)))AND(x'0a02')))OR(vt1.c1)))OR(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((CASE vt1.c0  WHEN vt1.c1 THEN rt0.c2 END)OR(ABS(rt0.c2))))AND(rt0.c0)) ORDER BY (((((((rt0.c1))>=((vt1.c0))))AND((((rt0.c1))>((rt0.c1))))))AND(((vt1.c1)>(vt1.c1)))) DESC);
SELECT * FROM rt0 INNER JOIN vt1 ON ((((CASE vt1.c0  WHEN vt1.c1 THEN rt0.c2 END)OR(ABS(rt0.c2))))AND(rt0.c0)) WHERE (((((((((((rt0.c1)OR(vt1.c1)))AND(x'0a02')))OR(vt1.c1)))OR(rt0.c1))) IS FALSE)) ORDER BY (((((((rt0.c1))>=((vt1.c0))))AND((((rt0.c1))>((rt0.c1))))))AND(((vt1.c1)>(vt1.c1)))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (((((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)))/(CAST(rt0.c2 AS INTEGER)))) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END) ISNULL)  NULLS LAST, ((((rt0.c2)>>(rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ('')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)))/(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END) ISNULL)  NULLS LAST, ((((rt0.c2)>>(rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ('')) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (((((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)))/(CAST(rt0.c2 AS INTEGER)))) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END) ISNULL)  NULLS LAST, ((((rt0.c2)>>(rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ('')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)))/(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END) ISNULL)  NULLS LAST, ((((rt0.c2)>>(rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ('')) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (((((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)))/(CAST(rt0.c2 AS INTEGER)))) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END) ISNULL)  NULLS LAST, ((((rt0.c2)>>(rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ('')) DESC;
SELECT * FROM v0, vt1 WHERE (((CASE v0.c0  WHEN vt1.c1 THEN vt1.c1 END) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN vt1.c1 THEN vt1.c1 END) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((- (vt1.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (((CASE v0.c0  WHEN vt1.c1 THEN vt1.c1 END) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN vt1.c1 THEN vt1.c1 END) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((- (vt1.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (((CASE v0.c0  WHEN vt1.c1 THEN vt1.c1 END) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((- (vt1.c0)))));
SELECT * FROM v0 WHERE (((((((v0.c0)GLOB(v0.c0)))OR((v0.c0 IN (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.345882787989117 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)GLOB(v0.c0)))OR((v0.c0 IN (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.345882787989117 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)GLOB(v0.c0)))OR((v0.c0 IN (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.345882787989117 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)GLOB(v0.c0)))OR((v0.c0 IN (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.345882787989117 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)GLOB(v0.c0)))OR((v0.c0 IN (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.345882787989117 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL * FROM v0, rt0, vt1 WHERE (CAST('1439298771' AS INTEGER)) ORDER BY (((~ (vt1.c0))) NOT BETWEEN (((rt0.c1)>>(rt0.c1))) AND (((v0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('1439298771' AS INTEGER)) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (((~ (vt1.c0))) NOT BETWEEN (((rt0.c1)>>(rt0.c1))) AND (((v0.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt1 WHERE (CAST('1439298771' AS INTEGER)) ORDER BY (((~ (vt1.c0))) NOT BETWEEN (((rt0.c1)>>(rt0.c1))) AND (((v0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('1439298771' AS INTEGER)) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (((~ (vt1.c0))) NOT BETWEEN (((rt0.c1)>>(rt0.c1))) AND (((v0.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt1 WHERE (CAST('1439298771' AS INTEGER)) ORDER BY (((~ (vt1.c0))) NOT BETWEEN (((rt0.c1)>>(rt0.c1))) AND (((v0.c0) IS FALSE)))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt1 ON (((((vt1.c1 IN ()))OR(((rt0.c2)>>(vt1.c1)))))AND((('')GLOB(v0.c0)))) WHERE (((rt0.c0 COLLATE BINARY)>(v0.c0 COLLATE RTRIM))) ORDER BY CAST((('')IS NOT(v0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)>(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt1 ON (((((vt1.c1 IN ()))OR(((rt0.c2)>>(vt1.c1)))))AND((('')GLOB(v0.c0)))) ORDER BY CAST((('')IS NOT(v0.c0)) AS INTEGER) ASC);
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt1 ON (((((vt1.c1 IN ()))OR(((rt0.c2)>>(vt1.c1)))))AND((('')GLOB(v0.c0)))) WHERE (((rt0.c0 COLLATE BINARY)>(v0.c0 COLLATE RTRIM))) ORDER BY CAST((('')IS NOT(v0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)>(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt1 ON (((((vt1.c1 IN ()))OR(((rt0.c2)>>(vt1.c1)))))AND((('')GLOB(v0.c0)))) ORDER BY CAST((('')IS NOT(v0.c0)) AS INTEGER) ASC);
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt1 ON (((((vt1.c1 IN ()))OR(((rt0.c2)>>(vt1.c1)))))AND((('')GLOB(v0.c0)))) WHERE (((rt0.c0 COLLATE BINARY)>(v0.c0 COLLATE RTRIM))) ORDER BY CAST((('')IS NOT(v0.c0)) AS INTEGER) ASC;
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (((CASE rt0.c1  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) BETWEEN (CASE ''  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END) AND (0x148de7ee)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) BETWEEN (CASE ''  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END) AND (0x148de7ee))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (((CASE rt0.c1  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) BETWEEN (CASE ''  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END) AND (0x148de7ee)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) BETWEEN (CASE ''  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END) AND (0x148de7ee))) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (((CASE rt0.c1  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) BETWEEN (CASE ''  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END) AND (0x148de7ee)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)>>(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)>>(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)>>(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)>>(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)>>(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT * FROM v0, rt0 WHERE (((((rt0.c1)-(rt0.c1)))OR((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(rt0.c1)))OR((+ (v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c1)-(rt0.c1)))OR((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(rt0.c1)))OR((+ (v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c1)-(rt0.c1)))OR((+ (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0, v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0, v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0, v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0, v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0, v0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (NULL) ORDER BY CASE WHEN (v0.c0 IN ()) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END WHEN v0.c0 COLLATE RTRIM THEN CASE vt1.c1  WHEN rt0.c0 THEN vt1.c1 END WHEN ((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) THEN ((vt1.c1) NOTNULL) ELSE (- (rt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY CASE WHEN (v0.c0 IN ()) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END WHEN v0.c0 COLLATE RTRIM THEN CASE vt1.c1  WHEN rt0.c0 THEN vt1.c1 END WHEN ((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) THEN ((vt1.c1) NOTNULL) ELSE (- (rt0.c1)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (NULL) ORDER BY CASE WHEN (v0.c0 IN ()) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END WHEN v0.c0 COLLATE RTRIM THEN CASE vt1.c1  WHEN rt0.c0 THEN vt1.c1 END WHEN ((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) THEN ((vt1.c1) NOTNULL) ELSE (- (rt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1, v0 ORDER BY CASE WHEN (v0.c0 IN ()) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END WHEN v0.c0 COLLATE RTRIM THEN CASE vt1.c1  WHEN rt0.c0 THEN vt1.c1 END WHEN ((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) THEN ((vt1.c1) NOTNULL) ELSE (- (rt0.c1)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (NULL) ORDER BY CASE WHEN (v0.c0 IN ()) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END WHEN v0.c0 COLLATE RTRIM THEN CASE vt1.c1  WHEN rt0.c0 THEN vt1.c1 END WHEN ((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) THEN ((vt1.c1) NOTNULL) ELSE (- (rt0.c1)) END  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((('0x+N灤9') NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((('0x+N灤9') NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((('0x+N灤9') NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((('0x+N灤9') NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((('0x+N灤9') NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL));
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((CAST(vt1.c1 AS BLOB))))) ORDER BY ((vt1.c1) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((CAST(vt1.c1 AS BLOB))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((CAST(vt1.c1 AS BLOB))))) ORDER BY ((vt1.c1) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((CAST(vt1.c1 AS BLOB))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((CAST(vt1.c1 AS BLOB))))) ORDER BY ((vt1.c1) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ ((- (NULL))))) ORDER BY CAST(((vt1.c1)=(rt0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (NULL))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(((vt1.c1)=(rt0.c1)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ ((- (NULL))))) ORDER BY CAST(((vt1.c1)=(rt0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (NULL))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(((vt1.c1)=(rt0.c1)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ ((- (NULL))))) ORDER BY CAST(((vt1.c1)=(rt0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)%(v0.c0)))/(LOWER(v0.c0)))) ORDER BY ((((UNLIKELY(DISTINCT x''))AND(((((v0.c0)OR(0Xffffffff984920b1)))AND(v0.c0)))))AND(v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(v0.c0)))/(LOWER(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((UNLIKELY(DISTINCT x''))AND(((((v0.c0)OR(0xffffffff984920b1)))AND(v0.c0)))))AND(v0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)%(v0.c0)))/(LOWER(v0.c0)))) ORDER BY ((((UNLIKELY(DISTINCT x''))AND(((((v0.c0)OR(0Xffffffff984920b1)))AND(v0.c0)))))AND(v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(v0.c0)))/(LOWER(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((UNLIKELY(DISTINCT x''))AND(((((v0.c0)OR(0xffffffff984920b1)))AND(v0.c0)))))AND(v0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)%(v0.c0)))/(LOWER(v0.c0)))) ORDER BY ((((UNLIKELY(DISTINCT x''))AND(((((v0.c0)OR(0Xffffffff984920b1)))AND(v0.c0)))))AND(v0.c0 COLLATE NOCASE));
SELECT * FROM rt0, vt1 LEFT OUTER JOIN v0 ON -1254840952 WHERE (CAST(v0.c0 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN v0 ON -1254840952);
SELECT * FROM rt0, vt1 LEFT OUTER JOIN v0 ON -1254840952 WHERE (CAST(v0.c0 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN v0 ON -1254840952);
SELECT * FROM rt0, vt1 LEFT OUTER JOIN v0 ON -1254840952 WHERE (CAST(v0.c0 COLLATE RTRIM AS BLOB));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c1) ORDER BY (((rt0.c0 IN ()))IS(vt1.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c0 IN ()))IS(vt1.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c1) ORDER BY (((rt0.c0 IN ()))IS(vt1.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c0 IN ()))IS(vt1.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c1) ORDER BY (((rt0.c0 IN ()))IS(vt1.c1)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((- (vt1.c1)))<>(((vt1.c0)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c1)))<>(((vt1.c0)%(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((- (vt1.c1)))<>(((vt1.c0)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c1)))<>(((vt1.c0)%(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((- (vt1.c1)))<>(((vt1.c0)%(rt0.c2)))));
SELECT * FROM vt1 WHERE (((((((((vt1.c1)OR(vt1.c0)))OR(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c1 COLLATE RTRIM)))OR(((vt1.c1)/(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)OR(vt1.c0)))OR(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c1 COLLATE RTRIM)))OR(((vt1.c1)/(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((vt1.c1)OR(vt1.c0)))OR(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c1 COLLATE RTRIM)))OR(((vt1.c1)/(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)OR(vt1.c0)))OR(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c1 COLLATE RTRIM)))OR(((vt1.c1)/(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((vt1.c1)OR(vt1.c0)))OR(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c1 COLLATE RTRIM)))OR(((vt1.c1)/(vt1.c0)))));
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN v0 ON (NOT ((((vt1.c1, 0.1310436345713959, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, 0Xffffffffbbcc4d65, rt0.c1))))) WHERE ((x'7d82' IN ((0.20583389145982178 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((x'7d82' IN ((0.20583389145982178 IN ())))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN v0 ON (NOT ((((vt1.c1, 0.1310436345713959, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, 0Xffffffffbbcc4d65, rt0.c1))))));
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN v0 ON (NOT ((((vt1.c1, 0.1310436345713959, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, 0Xffffffffbbcc4d65, rt0.c1))))) WHERE ((x'7d82' IN ((0.20583389145982178 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((x'7d82' IN ((0.20583389145982178 IN ())))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN v0 ON (NOT ((((vt1.c1, 0.1310436345713959, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, 0Xffffffffbbcc4d65, rt0.c1))))));
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN v0 ON (NOT ((((vt1.c1, 0.1310436345713959, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, 0Xffffffffbbcc4d65, rt0.c1))))) WHERE ((x'7d82' IN ((0.20583389145982178 IN ()))));
SELECT * FROM vt1, rt0 WHERE ((((((+ (vt1.c0)))OR(CAST(vt1.c0 AS REAL))))AND(((vt1.c1)-(vt1.c0))))) ORDER BY (~ ((- (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt1.c0)))OR(CAST(vt1.c0 AS REAL))))AND(((vt1.c1)-(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ ((- (vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE ((((((+ (vt1.c0)))OR(CAST(vt1.c0 AS REAL))))AND(((vt1.c1)-(vt1.c0))))) ORDER BY (~ ((- (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt1.c0)))OR(CAST(vt1.c0 AS REAL))))AND(((vt1.c1)-(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ ((- (vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE ((((((+ (vt1.c0)))OR(CAST(vt1.c0 AS REAL))))AND(((vt1.c1)-(vt1.c0))))) ORDER BY (~ ((- (vt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM vt1, v0 INNER JOIN rt0 ON (((((NOT (vt1.c1)))AND(((v0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2)))))OR(-1396222148)) WHERE (((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 END)|(((v0.c0)<<(rt0.c2))))) ORDER BY ((((rt0.c0) NOT NULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c0)!=('1833019126')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 END)|(((v0.c0)<<(rt0.c2))))) IS TRUE)  as count FROM vt1, v0 INNER JOIN rt0 ON (((((NOT (vt1.c1)))AND(((v0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2)))))OR(-1396222148)) ORDER BY ((((rt0.c0) NOT NULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c0)!=('1833019126')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0 INNER JOIN rt0 ON (((((NOT (vt1.c1)))AND(((v0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2)))))OR(-1396222148)) WHERE (((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 END)|(((v0.c0)<<(rt0.c2))))) ORDER BY ((((rt0.c0) NOT NULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c0)!=('1833019126')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 END)|(((v0.c0)<<(rt0.c2))))) IS TRUE)  as count FROM vt1, v0 INNER JOIN rt0 ON (((((NOT (vt1.c1)))AND(((v0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2)))))OR(-1396222148)) ORDER BY ((((rt0.c0) NOT NULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c0)!=('1833019126')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0 INNER JOIN rt0 ON (((((NOT (vt1.c1)))AND(((v0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2)))))OR(-1396222148)) WHERE (((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 END)|(((v0.c0)<<(rt0.c2))))) ORDER BY ((((rt0.c0) NOT NULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c0)!=('1833019126')))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c0)<=(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<=(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c0)<=(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<=(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c0)<=(rt0.c1)) COLLATE BINARY);
SELECT * FROM rt0, v0, vt1 WHERE ('J疴I-?,LM') ORDER BY (- ((('DH焒d3sE*')GLOB(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (('J疴I-?,LM') IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (- ((('DH焒d3sE*')GLOB(vt1.c0)))));
SELECT * FROM rt0, v0, vt1 WHERE ('J疴I-?,LM') ORDER BY (- ((('DH焒d3sE*')GLOB(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (('J疴I-?,LM') IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (- ((('DH焒d3sE*')GLOB(vt1.c0)))));
SELECT * FROM rt0, v0, vt1 WHERE ('J疴I-?,LM') ORDER BY (- ((('DH焒d3sE*')GLOB(vt1.c0))));
SELECT ALL * FROM rt0, v0, vt1 WHERE ('Y7j.it%h');
SELECT SUM(count) FROM (SELECT (('Y7j.it%h') IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE ('Y7j.it%h');
SELECT SUM(count) FROM (SELECT (('Y7j.it%h') IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE ('Y7j.it%h');
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((CAST(vt1.c1 AS INTEGER))IS((~ (v0.c0)))) INNER JOIN v0 ON (NOT (((rt0.c1)&(rt0.c0)))) WHERE (0.5567175583868534);
SELECT SUM(count) FROM (SELECT ((0.5567175583868534) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((CAST(vt1.c1 AS INTEGER))IS((~ (v0.c0)))) INNER JOIN v0 ON (NOT (((rt0.c1)&(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((CAST(vt1.c1 AS INTEGER))IS((~ (v0.c0)))) INNER JOIN v0 ON (NOT (((rt0.c1)&(rt0.c0)))) WHERE (0.5567175583868534);
SELECT SUM(count) FROM (SELECT ((0.5567175583868534) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((CAST(vt1.c1 AS INTEGER))IS((~ (v0.c0)))) INNER JOIN v0 ON (NOT (((rt0.c1)&(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((CAST(vt1.c1 AS INTEGER))IS((~ (v0.c0)))) INNER JOIN v0 ON (NOT (((rt0.c1)&(rt0.c0)))) WHERE (0.5567175583868534);
SELECT * FROM v0, vt1, rt0 WHERE (NULL) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC) ASC);
SELECT * FROM v0, vt1, rt0 WHERE (NULL) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC) ASC);
SELECT * FROM v0, vt1, rt0 WHERE (NULL) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC) ASC;
SELECT COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN '-1262537151' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END AS INTEGER)) ORDER BY (((vt1.c0)) BETWEEN (((('JZoxm&E	') BETWEEN (vt1.c0) AND (vt1.c1)))) AND ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))))), IFNULL((vt1.c0 IN ()), (vt1.c1 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN '-1262537151' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN (((('JZoxm&E	') BETWEEN (vt1.c0) AND (vt1.c1)))) AND ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))))), IFNULL((vt1.c0 IN ()), (vt1.c1 IN ())) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN '-1262537151' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END AS INTEGER)) ORDER BY (((vt1.c0)) BETWEEN (((('JZoxm&E	') BETWEEN (vt1.c0) AND (vt1.c1)))) AND ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))))), IFNULL((vt1.c0 IN ()), (vt1.c1 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN '-1262537151' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN (((('JZoxm&E	') BETWEEN (vt1.c0) AND (vt1.c1)))) AND ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))))), IFNULL((vt1.c0 IN ()), (vt1.c1 IN ())) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN '-1262537151' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END AS INTEGER)) ORDER BY (((vt1.c0)) BETWEEN (((('JZoxm&E	') BETWEEN (vt1.c0) AND (vt1.c1)))) AND ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))))), IFNULL((vt1.c0 IN ()), (vt1.c1 IN ())) DESC;
SELECT ALL * FROM rt0, v0, vt1 WHERE (INSTR((((NULL)) NOT BETWEEN ((rt0.c1)) AND (('-930907143'))), '4Eꪁ'));
SELECT SUM(count) FROM (SELECT ALL ((INSTR((((NULL)) NOT BETWEEN ((rt0.c1)) AND (('-930907143'))), '4Eꪁ')) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE (INSTR((((NULL)) NOT BETWEEN ((rt0.c1)) AND (('-930907143'))), '4Eꪁ'));
SELECT SUM(count) FROM (SELECT ALL ((INSTR((((NULL)) NOT BETWEEN ((rt0.c1)) AND (('-930907143'))), '4Eꪁ')) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE (INSTR((((NULL)) NOT BETWEEN ((rt0.c1)) AND (('-930907143'))), '4Eꪁ'));
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c1 ASC, ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)+(CAST(vt1.c1 AS NUMERIC))), ((((NULLIF(vt1.c1, vt1.c0))AND('')))OR(((vt1.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC, ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)+(CAST(vt1.c1 AS NUMERIC))), ((((NULLIF(vt1.c1, vt1.c0))AND('')))OR(((vt1.c1) ISNULL))));
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c1 ASC, ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)+(CAST(vt1.c1 AS NUMERIC))), ((((NULLIF(vt1.c1, vt1.c0))AND('')))OR(((vt1.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC, ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)+(CAST(vt1.c1 AS NUMERIC))), ((((NULLIF(vt1.c1, vt1.c0))AND('')))OR(((vt1.c1) ISNULL))));
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c1 ASC, ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)+(CAST(vt1.c1 AS NUMERIC))), ((((NULLIF(vt1.c1, vt1.c0))AND('')))OR(((vt1.c1) ISNULL)));
SELECT COUNT(*) FROM v0, rt0 WHERE (TRIM(COALESCE(rt0.c0, rt0.c1, 0.9634904587724118, rt0.c0), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY (rt0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(COALESCE(rt0.c0, rt0.c1, 0.9634904587724118, rt0.c0), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (rt0.c0 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (TRIM(COALESCE(rt0.c0, rt0.c1, 0.9634904587724118, rt0.c0), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY (rt0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(COALESCE(rt0.c0, rt0.c1, 0.9634904587724118, rt0.c0), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (rt0.c0 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (TRIM(COALESCE(rt0.c0, rt0.c1, 0.9634904587724118, rt0.c0), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY (rt0.c0 IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS REAL));
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))<>(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS BLOB))!=(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))<>(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS BLOB))!=(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))<>(rt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0 CROSS JOIN vt1 ON '' FULL OUTER JOIN rt0 ON ((NULL) NOT NULL) WHERE (CAST(CASE WHEN rt0.c2 THEN 'VW' WHEN rt0.c2 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 END AS INTEGER)) ORDER BY CASE WHEN vt1.c1 COLLATE RTRIM THEN (rt0.c0 IN ()) WHEN ((v0.c0)==(rt0.c1)) THEN CAST(vt1.c0 AS INTEGER) WHEN '][' THEN rt0.c1 COLLATE NOCASE WHEN CAST(vt1.c1 AS REAL) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)) WHEN vt1.c0 THEN ABS(DISTINCT v0.c0) END DESC  NULLS LAST, LIKELY((((rt0.c1, rt0.c1, vt1.c0))<=((vt1.c0, rt0.c1, vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN 'VW' WHEN rt0.c2 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 END AS INTEGER)) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON '' FULL OUTER JOIN rt0 ON ((NULL) NOT NULL) ORDER BY CASE WHEN vt1.c1 COLLATE RTRIM THEN (rt0.c0 IN ()) WHEN ((v0.c0)=(rt0.c1)) THEN CAST(vt1.c0 AS INTEGER) WHEN '][' THEN rt0.c1 COLLATE NOCASE WHEN CAST(vt1.c1 AS REAL) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)) WHEN vt1.c0 THEN ABS(DISTINCT v0.c0) END DESC  NULLS LAST, LIKELY((((rt0.c1, rt0.c1, vt1.c0))<=((vt1.c0, rt0.c1, vt1.c1)))) DESC);
SELECT COUNT(*) FROM v0 CROSS JOIN vt1 ON '' FULL OUTER JOIN rt0 ON ((NULL) NOT NULL) WHERE (CAST(CASE WHEN rt0.c2 THEN 'VW' WHEN rt0.c2 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 END AS INTEGER)) ORDER BY CASE WHEN vt1.c1 COLLATE RTRIM THEN (rt0.c0 IN ()) WHEN ((v0.c0)==(rt0.c1)) THEN CAST(vt1.c0 AS INTEGER) WHEN '][' THEN rt0.c1 COLLATE NOCASE WHEN CAST(vt1.c1 AS REAL) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)) WHEN vt1.c0 THEN ABS(DISTINCT v0.c0) END DESC  NULLS LAST, LIKELY((((rt0.c1, rt0.c1, vt1.c0))<=((vt1.c0, rt0.c1, vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN 'VW' WHEN rt0.c2 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 END AS INTEGER)) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON '' FULL OUTER JOIN rt0 ON ((NULL) NOT NULL) ORDER BY CASE WHEN vt1.c1 COLLATE RTRIM THEN (rt0.c0 IN ()) WHEN ((v0.c0)=(rt0.c1)) THEN CAST(vt1.c0 AS INTEGER) WHEN '][' THEN rt0.c1 COLLATE NOCASE WHEN CAST(vt1.c1 AS REAL) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)) WHEN vt1.c0 THEN ABS(DISTINCT v0.c0) END DESC  NULLS LAST, LIKELY((((rt0.c1, rt0.c1, vt1.c0))<=((vt1.c0, rt0.c1, vt1.c1)))) DESC);
SELECT COUNT(*) FROM v0 CROSS JOIN vt1 ON '' FULL OUTER JOIN rt0 ON ((NULL) NOT NULL) WHERE (CAST(CASE WHEN rt0.c2 THEN 'VW' WHEN rt0.c2 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 END AS INTEGER)) ORDER BY CASE WHEN vt1.c1 COLLATE RTRIM THEN (rt0.c0 IN ()) WHEN ((v0.c0)==(rt0.c1)) THEN CAST(vt1.c0 AS INTEGER) WHEN '][' THEN rt0.c1 COLLATE NOCASE WHEN CAST(vt1.c1 AS REAL) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)) WHEN vt1.c0 THEN ABS(DISTINCT v0.c0) END DESC  NULLS LAST, LIKELY((((rt0.c1, rt0.c1, vt1.c0))<=((vt1.c0, rt0.c1, vt1.c1)))) DESC;
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (TYPEOF((+ (rt0.c1)))) ORDER BY (+ (CAST(rt0.c0 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((+ (rt0.c1)))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY (+ (CAST(rt0.c0 AS REAL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (TYPEOF((+ (rt0.c1)))) ORDER BY (+ (CAST(rt0.c0 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((+ (rt0.c1)))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY (+ (CAST(rt0.c0 AS REAL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE (TYPEOF((+ (rt0.c1)))) ORDER BY (+ (CAST(rt0.c0 AS REAL))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c1)LIKE(vt1.c0)))AND(SUBSTR(rt0.c0, rt0.c2))))OR(LIKE(rt0.c2, rt0.c2, '0'))) WHERE (LOWER(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CAST(vt1.c0 AS REAL))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c1)LIKE(vt1.c0)))AND(SUBSTR(rt0.c0, rt0.c2))))OR(LIKE(rt0.c2, rt0.c2, '0'))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c1)LIKE(vt1.c0)))AND(SUBSTR(rt0.c0, rt0.c2))))OR(LIKE(rt0.c2, rt0.c2, '0'))) WHERE (LOWER(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CAST(vt1.c0 AS REAL))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c1)LIKE(vt1.c0)))AND(SUBSTR(rt0.c0, rt0.c2))))OR(LIKE(rt0.c2, rt0.c2, '0'))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c1)LIKE(vt1.c0)))AND(SUBSTR(rt0.c0, rt0.c2))))OR(LIKE(rt0.c2, rt0.c2, '0'))) WHERE (LOWER(CAST(vt1.c0 AS REAL)));
SELECT * FROM rt0 WHERE (CAST(((rt0.c2)<=(rt0.c0)) AS REAL)) ORDER BY CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END AS BLOB), (NOT ((6.50807357E8 IN ()))) ASC, (((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0))))<(COALESCE(rt0.c2, rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)<=(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END AS BLOB), (NOT ((6.50807357E8 IN ()))) ASC, (((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0))))<(COALESCE(rt0.c2, rt0.c2))));
SELECT * FROM rt0 WHERE (CAST(((rt0.c2)<=(rt0.c0)) AS REAL)) ORDER BY CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END AS BLOB), (NOT ((6.50807357E8 IN ()))) ASC, (((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0))))<(COALESCE(rt0.c2, rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)<=(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END AS BLOB), (NOT ((6.50807357E8 IN ()))) ASC, (((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0))))<(COALESCE(rt0.c2, rt0.c2))));
SELECT * FROM rt0 WHERE (CAST(((rt0.c2)<=(rt0.c0)) AS REAL)) ORDER BY CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END AS BLOB), (NOT ((6.50807357E8 IN ()))) ASC, (((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0))))<(COALESCE(rt0.c2, rt0.c2)));
SELECT * FROM rt0, v0, vt1 WHERE (((((rt0.c0) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT * FROM rt0, v0, vt1 WHERE (((((rt0.c0) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT * FROM rt0, v0, vt1 WHERE (((((rt0.c0) IS FALSE)) NOT NULL));
SELECT COUNT(*) FROM vt1 WHERE ((~ (vt1.c0))) ORDER BY (((((((((((vt1.c1))<((vt1.c1))))AND(vt1.c1)))AND(((vt1.c1) ISNULL))))AND(vt1.c1)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END)) DESC, ((CASE WHEN vt1.c0 THEN vt1.c1 END) NOT BETWEEN (vt1.c0) AND (((vt1.c1)IS NOT(vt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((vt1.c1))<((vt1.c1))))AND(vt1.c1)))AND(((vt1.c1) ISNULL))))AND(vt1.c1)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END)) DESC, ((CASE WHEN vt1.c0 THEN vt1.c1 END) NOT BETWEEN (vt1.c0) AND (((vt1.c1)IS NOT(vt1.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((~ (vt1.c0))) ORDER BY (((((((((((vt1.c1))<((vt1.c1))))AND(vt1.c1)))AND(((vt1.c1) ISNULL))))AND(vt1.c1)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END)) DESC, ((CASE WHEN vt1.c0 THEN vt1.c1 END) NOT BETWEEN (vt1.c0) AND (((vt1.c1)IS NOT(vt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((vt1.c1))<((vt1.c1))))AND(vt1.c1)))AND(((vt1.c1) ISNULL))))AND(vt1.c1)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END)) DESC, ((CASE WHEN vt1.c0 THEN vt1.c1 END) NOT BETWEEN (vt1.c0) AND (((vt1.c1)IS NOT(vt1.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((~ (vt1.c0))) ORDER BY (((((((((((vt1.c1))<((vt1.c1))))AND(vt1.c1)))AND(((vt1.c1) ISNULL))))AND(vt1.c1)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END)) DESC, ((CASE WHEN vt1.c0 THEN vt1.c1 END) NOT BETWEEN (vt1.c0) AND (((vt1.c1)IS NOT(vt1.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt1, v0 WHERE (((((rt0.c1)GLOB(v0.c0)))|(CASE vt1.c0  WHEN rt0.c1 THEN v0.c0 ELSE x'8e99' END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)GLOB(v0.c0)))|(CASE vt1.c0  WHEN rt0.c1 THEN v0.c0 ELSE x'8e99' END))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL * FROM rt0, vt1, v0 WHERE (((((rt0.c1)GLOB(v0.c0)))|(CASE vt1.c0  WHEN rt0.c1 THEN v0.c0 ELSE x'8e99' END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)GLOB(v0.c0)))|(CASE vt1.c0  WHEN rt0.c1 THEN v0.c0 ELSE x'8e99' END))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL * FROM rt0, vt1, v0 WHERE (((((rt0.c1)GLOB(v0.c0)))|(CASE vt1.c0  WHEN rt0.c1 THEN v0.c0 ELSE x'8e99' END)));
SELECT COUNT(*) FROM rt0 WHERE (CAST('1211228531' AS BLOB)) ORDER BY ((CAST(rt0.c0 AS INTEGER))>(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('1211228531' AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS INTEGER))>(NULL))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST('1211228531' AS BLOB)) ORDER BY ((CAST(rt0.c0 AS INTEGER))>(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('1211228531' AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS INTEGER))>(NULL))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST('1211228531' AS BLOB)) ORDER BY ((CAST(rt0.c0 AS INTEGER))>(NULL))  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (((((2084549036, 0.6414417445414893, rt0.c0))!=((rt0.c0, rt0.c1, rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((2084549036, 0.6414417445414893, rt0.c0))<>((rt0.c0, rt0.c1, rt0.c1))) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((2084549036, 0.6414417445414893, rt0.c0))!=((rt0.c0, rt0.c1, rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((2084549036, 0.6414417445414893, rt0.c0))<>((rt0.c0, rt0.c1, rt0.c1))) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((2084549036, 0.6414417445414893, rt0.c0))!=((rt0.c0, rt0.c1, rt0.c1))) IN ()));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON v0.c0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END) AND (1.7976931348623157E308))) ORDER BY (((~ (rt0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END) AND (1.7976931348623157E308))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON v0.c0 ORDER BY (((~ (rt0.c1))) NOTNULL));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON v0.c0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END) AND (1.7976931348623157E308))) ORDER BY (((~ (rt0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END) AND (1.7976931348623157E308))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON v0.c0 ORDER BY (((~ (rt0.c1))) NOTNULL));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON v0.c0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END) AND (1.7976931348623157E308))) ORDER BY (((~ (rt0.c1))) NOTNULL);
SELECT ALL * FROM rt0, vt1, v0 WHERE (((0.44696810537883613)<>('iVE㮗	)C')));
SELECT SUM(count) FROM (SELECT ALL ((((0.44696810537883613)<>('iVE㮗	)C'))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL * FROM rt0, vt1, v0 WHERE (((0.44696810537883613)<>('iVE㮗	)C')));
SELECT SUM(count) FROM (SELECT ALL ((((0.44696810537883613)<>('iVE㮗	)C'))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL * FROM rt0, vt1, v0 WHERE (((0.44696810537883613)<>('iVE㮗	)C')));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON vt1.c1 WHERE ('-401613903');
SELECT SUM(count) FROM (SELECT ALL (('-401613903') IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON vt1.c1);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON vt1.c1 WHERE ('-401613903');
SELECT SUM(count) FROM (SELECT ALL (('-401613903') IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON vt1.c1);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON vt1.c1 WHERE ('-401613903');
SELECT ALL * FROM vt1, rt0, v0 WHERE (((NULL)>=(json_array_length(rt0.c2, v0.c0)))) ORDER BY ('' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>=(json_array_length(rt0.c2, v0.c0)))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY ('' IN ()) DESC);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((NULL)>=(json_array_length(rt0.c2, v0.c0)))) ORDER BY ('' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>=(json_array_length(rt0.c2, v0.c0)))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY ('' IN ()) DESC);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((NULL)>=(json_array_length(rt0.c2, v0.c0)))) ORDER BY ('' IN ()) DESC;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) ORDER BY (+ (LOWER(vt1.c1))), ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)<(CASE WHEN x'e5d917d9' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c1 ELSE vt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY (+ (LOWER(vt1.c1))), ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)<(CASE WHEN x'e5d917d9' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c1 ELSE vt1.c0 END))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) ORDER BY (+ (LOWER(vt1.c1))), ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)<(CASE WHEN x'e5d917d9' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c1 ELSE vt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY (+ (LOWER(vt1.c1))), ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)<(CASE WHEN x'e5d917d9' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c1 ELSE vt1.c0 END))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) ORDER BY (+ (LOWER(vt1.c1))), ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)<(CASE WHEN x'e5d917d9' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c1 ELSE vt1.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, v0 WHERE (((((~ (v0.c0))))==((vt1.c1 COLLATE RTRIM)))) ORDER BY (((((vt1.c0))>((vt1.c1)))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (v0.c0))))==((vt1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((vt1.c0))>((vt1.c1)))) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((~ (v0.c0))))==((vt1.c1 COLLATE RTRIM)))) ORDER BY (((((vt1.c0))>((vt1.c1)))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (v0.c0))))==((vt1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((vt1.c0))>((vt1.c1)))) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((~ (v0.c0))))==((vt1.c1 COLLATE RTRIM)))) ORDER BY (((((vt1.c0))>((vt1.c1)))) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON (((((((vt1.c1, vt1.c0, v0.c0))>((vt1.c1, vt1.c1, vt1.c1))))OR(((((vt1.c1)AND(v0.c0)))AND(vt1.c0)))))OR(((vt1.c1)&(vt1.c1)))) WHERE (v0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON (((((((vt1.c1, vt1.c0, v0.c0))>((vt1.c1, vt1.c1, vt1.c1))))OR(((((vt1.c1)AND(v0.c0)))AND(vt1.c0)))))OR(((vt1.c1)&(vt1.c1)))));
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON (((((((vt1.c1, vt1.c0, v0.c0))>((vt1.c1, vt1.c1, vt1.c1))))OR(((((vt1.c1)AND(v0.c0)))AND(vt1.c0)))))OR(((vt1.c1)&(vt1.c1)))) WHERE (v0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON (((((((vt1.c1, vt1.c0, v0.c0))>((vt1.c1, vt1.c1, vt1.c1))))OR(((((vt1.c1)AND(v0.c0)))AND(vt1.c0)))))OR(((vt1.c1)&(vt1.c1)))));
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON (((((((vt1.c1, vt1.c0, v0.c0))>((vt1.c1, vt1.c1, vt1.c1))))OR(((((vt1.c1)AND(v0.c0)))AND(vt1.c0)))))OR(((vt1.c1)&(vt1.c1)))) WHERE (v0.c0 COLLATE NOCASE);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((x'')OR((rt0.c0 IN (0.03652802413777767)))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((x'')OR((rt0.c0 IN (0.03652802413777767)))))AND(v0.c0))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((x'')OR((rt0.c0 IN (0.03652802413777767)))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((x'')OR((rt0.c0 IN (0.03652802413777767)))))AND(v0.c0))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((x'')OR((rt0.c0 IN (0.03652802413777767)))))AND(v0.c0)));
SELECT * FROM v0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((x'')%(v0.c0)) THEN DATETIME(rt0.c1, rt0.c0, rt0.c2) WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN ((x'1ce6')/(v0.c0)) ELSE (~ (rt0.c2)) END WHERE (IFNULL(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)), ((((rt0.c1)OR(rt0.c2)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)), ((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((x'')%(v0.c0)) THEN DATETIME(rt0.c1, rt0.c0, rt0.c2) WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN ((x'1ce6')/(v0.c0)) ELSE (~ (rt0.c2)) END);
SELECT * FROM v0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((x'')%(v0.c0)) THEN DATETIME(rt0.c1, rt0.c0, rt0.c2) WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN ((x'1ce6')/(v0.c0)) ELSE (~ (rt0.c2)) END WHERE (IFNULL(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)), ((((rt0.c1)OR(rt0.c2)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)), ((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((x'')%(v0.c0)) THEN DATETIME(rt0.c1, rt0.c0, rt0.c2) WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN ((x'1ce6')/(v0.c0)) ELSE (~ (rt0.c2)) END);
SELECT * FROM v0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((x'')%(v0.c0)) THEN DATETIME(rt0.c1, rt0.c0, rt0.c2) WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN ((x'1ce6')/(v0.c0)) ELSE (~ (rt0.c2)) END WHERE (IFNULL(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)), ((((rt0.c1)OR(rt0.c2)))AND(v0.c0))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((NULL, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt1.c0)) AND ((rt0.c2, 0.07388160108924924, rt0.c1)))) ISNULL)) ORDER BY CASE vt1.c1  WHEN CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END THEN CAST(rt0.c2 AS REAL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt1.c0)) AND ((rt0.c2, 0.07388160108924924, rt0.c1)))) ISNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE vt1.c1  WHEN CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END THEN CAST(rt0.c2 AS REAL) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((NULL, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt1.c0)) AND ((rt0.c2, 0.07388160108924924, rt0.c1)))) ISNULL)) ORDER BY CASE vt1.c1  WHEN CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END THEN CAST(rt0.c2 AS REAL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt1.c0)) AND ((rt0.c2, 0.07388160108924924, rt0.c1)))) ISNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE vt1.c1  WHEN CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END THEN CAST(rt0.c2 AS REAL) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((NULL, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt1.c0)) AND ((rt0.c2, 0.07388160108924924, rt0.c1)))) ISNULL)) ORDER BY CASE vt1.c1  WHEN CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END THEN CAST(rt0.c2 AS REAL) END DESC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN (((vt1.c0, rt0.c2, x''))>((vt1.c1, rt0.c2, vt1.c0))) THEN '785606521' WHEN (- (rt0.c2)) THEN QUOTE(vt1.c0) WHEN (rt0.c1 IN ()) THEN (rt0.c2 IN ()) WHEN ((rt0.c2)/(rt0.c2)) THEN CAST(vt1.c1 AS NUMERIC) WHEN (+ (rt0.c2)) THEN CAST(vt1.c1 AS NUMERIC) WHEN ((rt0.c2)/(vt1.c1)) THEN (- (rt0.c0)) WHEN ((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))AND(rt0.c0)))OR(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE rt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, rt0.c2, x''))>((vt1.c1, rt0.c2, vt1.c0))) THEN '785606521' WHEN (- (rt0.c2)) THEN QUOTE(vt1.c0) WHEN (rt0.c1 IN ()) THEN (rt0.c2 IN ()) WHEN ((rt0.c2)/(rt0.c2)) THEN CAST(vt1.c1 AS NUMERIC) WHEN (+ (rt0.c2)) THEN CAST(vt1.c1 AS NUMERIC) WHEN ((rt0.c2)/(vt1.c1)) THEN (- (rt0.c0)) WHEN ((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))AND(rt0.c0)))OR(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN (((vt1.c0, rt0.c2, x''))>((vt1.c1, rt0.c2, vt1.c0))) THEN '785606521' WHEN (- (rt0.c2)) THEN QUOTE(vt1.c0) WHEN (rt0.c1 IN ()) THEN (rt0.c2 IN ()) WHEN ((rt0.c2)/(rt0.c2)) THEN CAST(vt1.c1 AS NUMERIC) WHEN (+ (rt0.c2)) THEN CAST(vt1.c1 AS NUMERIC) WHEN ((rt0.c2)/(vt1.c1)) THEN (- (rt0.c0)) WHEN ((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))AND(rt0.c0)))OR(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE rt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, rt0.c2, x''))>((vt1.c1, rt0.c2, vt1.c0))) THEN '785606521' WHEN (- (rt0.c2)) THEN QUOTE(vt1.c0) WHEN (rt0.c1 IN ()) THEN (rt0.c2 IN ()) WHEN ((rt0.c2)/(rt0.c2)) THEN CAST(vt1.c1 AS NUMERIC) WHEN (+ (rt0.c2)) THEN CAST(vt1.c1 AS NUMERIC) WHEN ((rt0.c2)/(vt1.c1)) THEN (- (rt0.c0)) WHEN ((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))AND(rt0.c0)))OR(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN (((vt1.c0, rt0.c2, x''))>((vt1.c1, rt0.c2, vt1.c0))) THEN '785606521' WHEN (- (rt0.c2)) THEN QUOTE(vt1.c0) WHEN (rt0.c1 IN ()) THEN (rt0.c2 IN ()) WHEN ((rt0.c2)/(rt0.c2)) THEN CAST(vt1.c1 AS NUMERIC) WHEN (+ (rt0.c2)) THEN CAST(vt1.c1 AS NUMERIC) WHEN ((rt0.c2)/(vt1.c1)) THEN (- (rt0.c0)) WHEN ((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))AND(rt0.c0)))OR(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE rt0.c0 COLLATE BINARY END);
SELECT * FROM rt0, v0 WHERE ((((v0.c0)) BETWEEN ((((0X6acd3b8f) BETWEEN (rt0.c2) AND (rt0.c0)))) AND (((rt0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((0x6acd3b8f) BETWEEN (rt0.c2) AND (rt0.c0)))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((v0.c0)) BETWEEN ((((0X6acd3b8f) BETWEEN (rt0.c2) AND (rt0.c0)))) AND (((rt0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((0x6acd3b8f) BETWEEN (rt0.c2) AND (rt0.c0)))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((v0.c0)) BETWEEN ((((0X6acd3b8f) BETWEEN (rt0.c2) AND (rt0.c0)))) AND (((rt0.c2 IN ())))));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))) IS TRUE) WHERE (CAST(rt0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))) IS TRUE));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))) IS TRUE) WHERE (CAST(rt0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))) IS TRUE));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))) IS TRUE) WHERE (CAST(rt0.c2 AS TEXT));
SELECT ALL * FROM vt1, rt0 INNER JOIN v0 ON ((vt1.c1) NOT BETWEEN (vt1.c1) AND (rt0.c2 COLLATE BINARY)) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1, rt0 INNER JOIN v0 ON ((vt1.c1) NOT BETWEEN (vt1.c1) AND (rt0.c2 COLLATE BINARY)));
SELECT ALL * FROM vt1, rt0 INNER JOIN v0 ON ((vt1.c1) NOT BETWEEN (vt1.c1) AND (rt0.c2 COLLATE BINARY)) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1, rt0 INNER JOIN v0 ON ((vt1.c1) NOT BETWEEN (vt1.c1) AND (rt0.c2 COLLATE BINARY)));
SELECT ALL * FROM vt1, rt0 INNER JOIN v0 ON ((vt1.c1) NOT BETWEEN (vt1.c1) AND (rt0.c2 COLLATE BINARY)) WHERE (v0.c0);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)AND(rt0.c1)))AND(rt0.c2)))OR(((((((((vt1.c1)AND(rt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(rt0.c2)))))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 WHEN 0.4876715537616554 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c2 THEN 'S /ꪌ3捹' WHEN vt1.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)AND(rt0.c1)))AND(rt0.c2)))OR(((((((((vt1.c1)AND(rt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(rt0.c2)))))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 WHEN 0.4876715537616554 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c2 THEN 'S /ꪌ3捹' WHEN vt1.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)AND(rt0.c1)))AND(rt0.c2)))OR(((((((((vt1.c1)AND(rt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(rt0.c2)))))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 WHEN 0.4876715537616554 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c2 THEN 'S /ꪌ3捹' WHEN vt1.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)AND(rt0.c1)))AND(rt0.c2)))OR(((((((((vt1.c1)AND(rt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(rt0.c2)))))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 WHEN 0.4876715537616554 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c2 THEN 'S /ꪌ3捹' WHEN vt1.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)AND(rt0.c1)))AND(rt0.c2)))OR(((((((((vt1.c1)AND(rt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(rt0.c2)))))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 WHEN 0.4876715537616554 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c2 THEN 'S /ꪌ3捹' WHEN vt1.c0 THEN rt0.c1 END)));
SELECT * FROM rt0, vt1, v0 WHERE ((+ ((((rt0.c1, rt0.c2, rt0.c1))>((rt0.c1, rt0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c1, rt0.c2, rt0.c1))>((rt0.c1, rt0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT * FROM rt0, vt1, v0 WHERE ((+ ((((rt0.c1, rt0.c2, rt0.c1))>((rt0.c1, rt0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c1, rt0.c2, rt0.c1))>((rt0.c1, rt0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT * FROM rt0, vt1, v0 WHERE ((+ ((((rt0.c1, rt0.c2, rt0.c1))>((rt0.c1, rt0.c0, rt0.c0))))));
SELECT COUNT(*) FROM v0 NOT INDEXED, rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (rt0.c1) AND (((rt0.c1) NOTNULL)))) ORDER BY -1451201133 DESC  NULLS LAST, ((((rt0.c1)&(rt0.c1)))IS NOT(0.46291255230489325 COLLATE NOCASE))  NULLS FIRST, (((rt0.c2 IN ()))/((~ (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOT BETWEEN (rt0.c1) AND (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY -1451201133 DESC  NULLS LAST, ((((rt0.c1)&(rt0.c1)))IS NOT(0.46291255230489325 COLLATE NOCASE))  NULLS FIRST, (((rt0.c2 IN ()))/((~ (v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 NOT INDEXED, rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (rt0.c1) AND (((rt0.c1) NOTNULL)))) ORDER BY -1451201133 DESC  NULLS LAST, ((((rt0.c1)&(rt0.c1)))IS NOT(0.46291255230489325 COLLATE NOCASE))  NULLS FIRST, (((rt0.c2 IN ()))/((~ (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOT BETWEEN (rt0.c1) AND (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY -1451201133 DESC  NULLS LAST, ((((rt0.c1)&(rt0.c1)))IS NOT(0.46291255230489325 COLLATE NOCASE))  NULLS FIRST, (((rt0.c2 IN ()))/((~ (v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c1)IS NOT(vt1.c1)) IN ())) ORDER BY CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)IS NOT(vt1.c1)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY CHANGES() DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c1)IS NOT(vt1.c1)) IN ())) ORDER BY CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)IS NOT(vt1.c1)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY CHANGES() DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c1)IS NOT(vt1.c1)) IN ())) ORDER BY CHANGES() DESC;
SELECT ALL * FROM vt1, rt0, v0 WHERE ((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c0))) COLLATE RTRIM) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, v0 WHERE ((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c0))) COLLATE RTRIM) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, v0 WHERE ((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c0))) COLLATE RTRIM) ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((x'') BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (v0.c0))) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))/(v0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))/(v0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((x'') BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (v0.c0))) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))/(v0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))/(v0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((x'') BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (v0.c0))) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))/(v0.c0)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON (rt0.c1 IN ()) COLLATE NOCASE WHERE (((((((v0.c0)OR(v0.c0)))AND(rt0.c0)))LIKE(((rt0.c1)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))AND(rt0.c0)))LIKE(((rt0.c1)IS(rt0.c2))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (rt0.c1 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON (rt0.c1 IN ()) COLLATE NOCASE WHERE (((((((v0.c0)OR(v0.c0)))AND(rt0.c0)))LIKE(((rt0.c1)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))AND(rt0.c0)))LIKE(((rt0.c1)IS(rt0.c2))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (rt0.c1 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON (rt0.c1 IN ()) COLLATE NOCASE WHERE (((((((v0.c0)OR(v0.c0)))AND(rt0.c0)))LIKE(((rt0.c1)IS(rt0.c2)))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))) BETWEEN (((((((((vt1.c0)AND(vt1.c1)))AND('-1360705235')))OR(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0) NOT BETWEEN ('464141109') AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))) BETWEEN (((((((((vt1.c0)AND(vt1.c1)))AND('-1360705235')))OR(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0) NOT BETWEEN ('464141109') AND (vt1.c1))))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))) BETWEEN (((((((((vt1.c0)AND(vt1.c1)))AND('-1360705235')))OR(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0) NOT BETWEEN ('464141109') AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))) BETWEEN (((((((((vt1.c0)AND(vt1.c1)))AND('-1360705235')))OR(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0) NOT BETWEEN ('464141109') AND (vt1.c1))))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))) BETWEEN (((((((((vt1.c0)AND(vt1.c1)))AND('-1360705235')))OR(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0) NOT BETWEEN ('464141109') AND (vt1.c1)))));
SELECT * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL);
SELECT * FROM vt1 WHERE (CASE WHEN TYPEOF(DISTINCT vt1.c0) THEN (+ (vt1.c1)) ELSE ((((0Xfffffffffb9743c6)AND(vt1.c0)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TYPEOF(DISTINCT vt1.c0) THEN (+ (vt1.c1)) ELSE ((((0Xfffffffffb9743c6)AND(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN TYPEOF(DISTINCT vt1.c0) THEN (+ (vt1.c1)) ELSE ((((0Xfffffffffb9743c6)AND(vt1.c0)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TYPEOF(DISTINCT vt1.c0) THEN (+ (vt1.c1)) ELSE ((((0Xfffffffffb9743c6)AND(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN TYPEOF(DISTINCT vt1.c0) THEN (+ (vt1.c1)) ELSE ((((0Xfffffffffb9743c6)AND(vt1.c0)))OR(vt1.c0)) END);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE ((NOT (CASE rt0.c0  WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c0  WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c1 END))) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE ((NOT (CASE rt0.c0  WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c0  WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c1 END))) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE ((NOT (CASE rt0.c0  WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c1 END)));
SELECT * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL);
SELECT * FROM rt0, vt1 WHERE (((((vt1.c1 IN ()), ((vt1.c0) NOT NULL), (vt1.c0 IN ()), ((vt1.c0)|(rt0.c1)), rt0.c1 COLLATE NOCASE))<=((rt0.c2 COLLATE RTRIM, (((vt1.c1, vt1.c0, 0.3666087099675489)) BETWEEN ((rt0.c0, vt1.c0, 0.4605632083230008)) AND ((vt1.c1, rt0.c0, rt0.c0))), '', CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN '-1672304356' WHEN rt0.c2 THEN rt0.c2 END, CASE '-1864722289'  WHEN 0Xffffffffe8870dcd THEN -5.2170554E8 END))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1 IN ()), ((vt1.c0) NOT NULL), (vt1.c0 IN ()), ((vt1.c0)|(rt0.c1)), rt0.c1 COLLATE NOCASE))<=((rt0.c2 COLLATE RTRIM, (((vt1.c1, vt1.c0, 0.3666087099675489)) BETWEEN ((rt0.c0, vt1.c0, 0.4605632083230008)) AND ((vt1.c1, rt0.c0, rt0.c0))), '', CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN '-1672304356' WHEN rt0.c2 THEN rt0.c2 END, CASE '-1864722289'  WHEN 0xffffffffe8870dcd THEN -5.2170554E8 END)))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((vt1.c1 IN ()), ((vt1.c0) NOT NULL), (vt1.c0 IN ()), ((vt1.c0)|(rt0.c1)), rt0.c1 COLLATE NOCASE))<=((rt0.c2 COLLATE RTRIM, (((vt1.c1, vt1.c0, 0.3666087099675489)) BETWEEN ((rt0.c0, vt1.c0, 0.4605632083230008)) AND ((vt1.c1, rt0.c0, rt0.c0))), '', CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN '-1672304356' WHEN rt0.c2 THEN rt0.c2 END, CASE '-1864722289'  WHEN 0Xffffffffe8870dcd THEN -5.2170554E8 END))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1 IN ()), ((vt1.c0) NOT NULL), (vt1.c0 IN ()), ((vt1.c0)|(rt0.c1)), rt0.c1 COLLATE NOCASE))<=((rt0.c2 COLLATE RTRIM, (((vt1.c1, vt1.c0, 0.3666087099675489)) BETWEEN ((rt0.c0, vt1.c0, 0.4605632083230008)) AND ((vt1.c1, rt0.c0, rt0.c0))), '', CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN '-1672304356' WHEN rt0.c2 THEN rt0.c2 END, CASE '-1864722289'  WHEN 0xffffffffe8870dcd THEN -5.2170554E8 END)))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((vt1.c1 IN ()), ((vt1.c0) NOT NULL), (vt1.c0 IN ()), ((vt1.c0)|(rt0.c1)), rt0.c1 COLLATE NOCASE))<=((rt0.c2 COLLATE RTRIM, (((vt1.c1, vt1.c0, 0.3666087099675489)) BETWEEN ((rt0.c0, vt1.c0, 0.4605632083230008)) AND ((vt1.c1, rt0.c0, rt0.c0))), '', CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN '-1672304356' WHEN rt0.c2 THEN rt0.c2 END, CASE '-1864722289'  WHEN 0Xffffffffe8870dcd THEN -5.2170554E8 END))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((json(rt0.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((json(rt0.c1)) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((json(rt0.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((json(rt0.c1)) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((json(rt0.c1)) IS FALSE));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))>(((((rt0.c1))<>((v0.c0)))))) WHERE (CAST(((((v0.c0)AND(rt0.c2)))AND(rt0.c1)) AS REAL)) ORDER BY (NOT (x'7a19'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)AND(rt0.c2)))AND(rt0.c1)) AS REAL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))>(((((rt0.c1))<>((v0.c0)))))) ORDER BY (NOT (x'7a19'))  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))>(((((rt0.c1))<>((v0.c0)))))) WHERE (CAST(((((v0.c0)AND(rt0.c2)))AND(rt0.c1)) AS REAL)) ORDER BY (NOT (x'7a19'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)AND(rt0.c2)))AND(rt0.c1)) AS REAL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))>(((((rt0.c1))<>((v0.c0)))))) ORDER BY (NOT (x'7a19'))  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))>(((((rt0.c1))<>((v0.c0)))))) WHERE (CAST(((((v0.c0)AND(rt0.c2)))AND(rt0.c1)) AS REAL)) ORDER BY (NOT (x'7a19'))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt1 NOT INDEXED, rt0);
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt1 NOT INDEXED, rt0);
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (CASE WHEN ((rt0.c2) IS FALSE) THEN CAST(vt1.c1 AS REAL) END) ORDER BY (((vt1.c0 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) IS FALSE) THEN CAST(vt1.c1 AS REAL) END) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, v0 ORDER BY (((vt1.c0 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (CASE WHEN ((rt0.c2) IS FALSE) THEN CAST(vt1.c1 AS REAL) END) ORDER BY (((vt1.c0 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) IS FALSE) THEN CAST(vt1.c1 AS REAL) END) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, v0 ORDER BY (((vt1.c0 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE (CASE WHEN ((rt0.c2) IS FALSE) THEN CAST(vt1.c1 AS REAL) END) ORDER BY (((vt1.c0 IN ())) IS TRUE);
SELECT COUNT(*) FROM vt1, rt0 FULL OUTER JOIN v0 ON ((((rt0.c1)<=(rt0.c2))) NOT NULL) WHERE ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt1.c1 COLLATE RTRIM)))) ORDER BY ((((CASE x''  WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END)OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN v0 ON ((((rt0.c1)<=(rt0.c2))) NOT NULL) ORDER BY ((((CASE x''  WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END)OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(v0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 FULL OUTER JOIN v0 ON ((((rt0.c1)<=(rt0.c2))) NOT NULL) WHERE ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt1.c1 COLLATE RTRIM)))) ORDER BY ((((CASE x''  WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END)OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN v0 ON ((((rt0.c1)<=(rt0.c2))) NOT NULL) ORDER BY ((((CASE x''  WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END)OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(v0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 FULL OUTER JOIN v0 ON ((((rt0.c1)<=(rt0.c2))) NOT NULL) WHERE ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt1.c1 COLLATE RTRIM)))) ORDER BY ((((CASE x''  WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END)OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(v0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (630628252) ORDER BY ((TYPEOF(vt1.c1)) NOT BETWEEN ((((v0.c0, v0.c0, vt1.c1))<>((v0.c0, v0.c0, vt1.c0)))) AND (((((-6.33647449E8)OR(vt1.c0)))OR(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((630628252) IS TRUE)  as count FROM v0, vt1 ORDER BY ((TYPEOF(vt1.c1)) NOT BETWEEN ((((v0.c0, v0.c0, vt1.c1))!=((v0.c0, v0.c0, vt1.c0)))) AND (((((-6.33647449E8)OR(vt1.c0)))OR(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (630628252) ORDER BY ((TYPEOF(vt1.c1)) NOT BETWEEN ((((v0.c0, v0.c0, vt1.c1))<>((v0.c0, v0.c0, vt1.c0)))) AND (((((-6.33647449E8)OR(vt1.c0)))OR(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((630628252) IS TRUE)  as count FROM v0, vt1 ORDER BY ((TYPEOF(vt1.c1)) NOT BETWEEN ((((v0.c0, v0.c0, vt1.c1))!=((v0.c0, v0.c0, vt1.c0)))) AND (((((-6.33647449E8)OR(vt1.c0)))OR(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (630628252) ORDER BY ((TYPEOF(vt1.c1)) NOT BETWEEN ((((v0.c0, v0.c0, vt1.c1))<>((v0.c0, v0.c0, vt1.c0)))) AND (((((-6.33647449E8)OR(vt1.c0)))OR(v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((vt1.c1 IN ()) COLLATE RTRIM) ORDER BY CASE WHEN '' THEN json_extract(vt1.c0, vt1.c1, vt1.c0, vt1.c1) END;
SELECT SUM(count) FROM (SELECT (((vt1.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0 ORDER BY CASE WHEN '' THEN json_extract(vt1.c0, vt1.c1, vt1.c0, vt1.c1) END);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((vt1.c1 IN ()) COLLATE RTRIM) ORDER BY CASE WHEN '' THEN json_extract(vt1.c0, vt1.c1, vt1.c0, vt1.c1) END;
SELECT SUM(count) FROM (SELECT (((vt1.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0 ORDER BY CASE WHEN '' THEN json_extract(vt1.c0, vt1.c1, vt1.c0, vt1.c1) END);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((vt1.c1 IN ()) COLLATE RTRIM) ORDER BY CASE WHEN '' THEN json_extract(vt1.c0, vt1.c1, vt1.c0, vt1.c1) END;
SELECT ALL COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt1 ON ((((vt1.c1)IS(vt1.c1)))==(((vt1.c0) BETWEEN (0.47711807217142077) AND (rt0.c2)))) WHERE ((0.4780027134341579 IN ())) ORDER BY ((((((((((vt1.c1) BETWEEN (vt1.c1) AND (rt0.c2)))OR(((vt1.c1) ISNULL))))AND(((vt1.c0)&(rt0.c0)))))AND(((((((((((((rt0.c1)OR(vt1.c0)))OR(967545927)))OR(rt0.c0)))OR(v0.c0)))AND(v0.c0)))OR(rt0.c0)))))AND(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL (((0.4780027134341579 IN ())) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt1 ON ((((vt1.c1)IS(vt1.c1)))==(((vt1.c0) BETWEEN (0.47711807217142077) AND (rt0.c2)))) ORDER BY ((((((((((vt1.c1) BETWEEN (vt1.c1) AND (rt0.c2)))OR(((vt1.c1) ISNULL))))AND(((vt1.c0)&(rt0.c0)))))AND(((((((((((((rt0.c1)OR(vt1.c0)))OR(967545927)))OR(rt0.c0)))OR(v0.c0)))AND(v0.c0)))OR(rt0.c0)))))AND(rt0.c1)));
SELECT ALL COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt1 ON ((((vt1.c1)IS(vt1.c1)))==(((vt1.c0) BETWEEN (0.47711807217142077) AND (rt0.c2)))) WHERE ((0.4780027134341579 IN ())) ORDER BY ((((((((((vt1.c1) BETWEEN (vt1.c1) AND (rt0.c2)))OR(((vt1.c1) ISNULL))))AND(((vt1.c0)&(rt0.c0)))))AND(((((((((((((rt0.c1)OR(vt1.c0)))OR(967545927)))OR(rt0.c0)))OR(v0.c0)))AND(v0.c0)))OR(rt0.c0)))))AND(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL (((0.4780027134341579 IN ())) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt1 ON ((((vt1.c1)IS(vt1.c1)))==(((vt1.c0) BETWEEN (0.47711807217142077) AND (rt0.c2)))) ORDER BY ((((((((((vt1.c1) BETWEEN (vt1.c1) AND (rt0.c2)))OR(((vt1.c1) ISNULL))))AND(((vt1.c0)&(rt0.c0)))))AND(((((((((((((rt0.c1)OR(vt1.c0)))OR(967545927)))OR(rt0.c0)))OR(v0.c0)))AND(v0.c0)))OR(rt0.c0)))))AND(rt0.c1)));
SELECT ALL COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt1 ON ((((vt1.c1)IS(vt1.c1)))==(((vt1.c0) BETWEEN (0.47711807217142077) AND (rt0.c2)))) WHERE ((0.4780027134341579 IN ())) ORDER BY ((((((((((vt1.c1) BETWEEN (vt1.c1) AND (rt0.c2)))OR(((vt1.c1) ISNULL))))AND(((vt1.c0)&(rt0.c0)))))AND(((((((((((((rt0.c1)OR(vt1.c0)))OR(967545927)))OR(rt0.c0)))OR(v0.c0)))AND(v0.c0)))OR(rt0.c0)))))AND(rt0.c1));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (rt0.c2))) BETWEEN ((((rt0.c0, rt0.c0, rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, '-1684370561', rt0.c2, rt0.c1)) AND ((0.7663034582762945, rt0.c2, rt0.c2, rt0.c0, NULL)))) AND ((((rt0.c1))>((0.7879713568741348))))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) BETWEEN ((((rt0.c0, rt0.c0, rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, '-1684370561', rt0.c2, rt0.c1)) AND ((0.7663034582762945, rt0.c2, rt0.c2, rt0.c0, NULL)))) AND ((((rt0.c1))>((0.7879713568741348)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (rt0.c2))) BETWEEN ((((rt0.c0, rt0.c0, rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, '-1684370561', rt0.c2, rt0.c1)) AND ((0.7663034582762945, rt0.c2, rt0.c2, rt0.c0, NULL)))) AND ((((rt0.c1))>((0.7879713568741348))))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) BETWEEN ((((rt0.c0, rt0.c0, rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, '-1684370561', rt0.c2, rt0.c1)) AND ((0.7663034582762945, rt0.c2, rt0.c2, rt0.c0, NULL)))) AND ((((rt0.c1))>((0.7879713568741348)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (rt0.c2))) BETWEEN ((((rt0.c0, rt0.c0, rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, '-1684370561', rt0.c2, rt0.c1)) AND ((0.7663034582762945, rt0.c2, rt0.c2, rt0.c0, NULL)))) AND ((((rt0.c1))>((0.7879713568741348))))));
SELECT COUNT(*) FROM rt0 WHERE ('1074577382' COLLATE RTRIM) ORDER BY (+ (rt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (('1074577382' COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt0 WHERE ('1074577382' COLLATE RTRIM) ORDER BY (+ (rt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (('1074577382' COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt0 WHERE ('1074577382' COLLATE RTRIM) ORDER BY (+ (rt0.c0)) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1) IS TRUE)) ISNULL)) ORDER BY (((((rt0.c1)/(v0.c0))))==((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE)) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c1)/(v0.c0))))==((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1) IS TRUE)) ISNULL)) ORDER BY (((((rt0.c1)/(v0.c0))))==((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE)) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c1)/(v0.c0))))==((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1) IS TRUE)) ISNULL)) ORDER BY (((((rt0.c1)/(v0.c0))))==((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c1) AND (v0.c0))) AND (((vt1.c1)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c1) AND (v0.c0))) AND (((vt1.c1)>(v0.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c1) AND (v0.c0))) AND (((vt1.c1)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c1) AND (v0.c0))) AND (((vt1.c1)>(v0.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c1) AND (v0.c0))) AND (((vt1.c1)>(v0.c0)))));
SELECT * FROM vt1, rt0, v0 WHERE (COALESCE(rt0.c2 COLLATE BINARY, rt0.c2 COLLATE BINARY)) ORDER BY ((((vt1.c1)AND(x'5767858d')))AND(rt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((COALESCE(rt0.c2 COLLATE BINARY, rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY ((((vt1.c1)AND(x'5767858d')))AND(rt0.c1)) COLLATE RTRIM);
SELECT * FROM vt1, rt0, v0 WHERE (COALESCE(rt0.c2 COLLATE BINARY, rt0.c2 COLLATE BINARY)) ORDER BY ((((vt1.c1)AND(x'5767858d')))AND(rt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((COALESCE(rt0.c2 COLLATE BINARY, rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY ((((vt1.c1)AND(x'5767858d')))AND(rt0.c1)) COLLATE RTRIM);
SELECT * FROM vt1, rt0, v0 WHERE (COALESCE(rt0.c2 COLLATE BINARY, rt0.c2 COLLATE BINARY)) ORDER BY ((((vt1.c1)AND(x'5767858d')))AND(rt0.c1)) COLLATE RTRIM;
SELECT * FROM vt1, rt0, v0 WHERE ((((json_array_length(rt0.c2, rt0.c2), rt0.c0, (rt0.c1 IN ())))>=((((rt0.c2)=(v0.c0)), CASE vt1.c1  WHEN '쿁' THEN v0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END, (rt0.c0 IN (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((json_array_length(rt0.c2, rt0.c2), rt0.c0, (rt0.c1 IN ())))>=((((rt0.c2)==(v0.c0)), CASE vt1.c1  WHEN '쿁' THEN v0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END, (rt0.c0 IN (rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE ((((json_array_length(rt0.c2, rt0.c2), rt0.c0, (rt0.c1 IN ())))>=((((rt0.c2)=(v0.c0)), CASE vt1.c1  WHEN '쿁' THEN v0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END, (rt0.c0 IN (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((json_array_length(rt0.c2, rt0.c2), rt0.c0, (rt0.c1 IN ())))>=((((rt0.c2)==(v0.c0)), CASE vt1.c1  WHEN '쿁' THEN v0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END, (rt0.c0 IN (rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE ((((json_array_length(rt0.c2, rt0.c2), rt0.c0, (rt0.c1 IN ())))>=((((rt0.c2)=(v0.c0)), CASE vt1.c1  WHEN '쿁' THEN v0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END, (rt0.c0 IN (rt0.c0))))));
SELECT COUNT(*) FROM v0 WHERE ((('y') BETWEEN ((- (v0.c0))) AND (941117887)));
SELECT SUM(count) FROM (SELECT (((('y') BETWEEN ((- (v0.c0))) AND (941117887))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((('y') BETWEEN ((- (v0.c0))) AND (941117887)));
SELECT SUM(count) FROM (SELECT (((('y') BETWEEN ((- (v0.c0))) AND (941117887))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((('y') BETWEEN ((- (v0.c0))) AND (941117887)));
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN vt1 ON ((((((((NULL)AND(((vt1.c0)*(rt0.c2)))))OR((rt0.c0 IN (v0.c0)))))AND(((rt0.c1) BETWEEN (NULL) AND (x'')))))AND(rt0.c0 COLLATE RTRIM)) WHERE ((((v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN vt1.c1 ELSE vt1.c0 END)) AND ((json_type(-5.2170554E8)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN vt1.c1 ELSE vt1.c0 END)) AND ((json_type(-5.2170554E8))))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt1 ON ((((((((NULL)AND(((vt1.c0)*(rt0.c2)))))OR((rt0.c0 IN (v0.c0)))))AND(((rt0.c1) BETWEEN (NULL) AND (x'')))))AND(rt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN vt1 ON ((((((((NULL)AND(((vt1.c0)*(rt0.c2)))))OR((rt0.c0 IN (v0.c0)))))AND(((rt0.c1) BETWEEN (NULL) AND (x'')))))AND(rt0.c0 COLLATE RTRIM)) WHERE ((((v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN vt1.c1 ELSE vt1.c0 END)) AND ((json_type(-5.2170554E8)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN vt1.c1 ELSE vt1.c0 END)) AND ((json_type(-5.2170554E8))))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt1 ON ((((((((NULL)AND(((vt1.c0)*(rt0.c2)))))OR((rt0.c0 IN (v0.c0)))))AND(((rt0.c1) BETWEEN (NULL) AND (x'')))))AND(rt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN vt1 ON ((((((((NULL)AND(((vt1.c0)*(rt0.c2)))))OR((rt0.c0 IN (v0.c0)))))AND(((rt0.c1) BETWEEN (NULL) AND (x'')))))AND(rt0.c0 COLLATE RTRIM)) WHERE ((((v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN vt1.c1 ELSE vt1.c0 END)) AND ((json_type(-5.2170554E8)))));
SELECT COUNT(*) FROM v0 WHERE (json_array(v0.c0, v0.c0) COLLATE RTRIM) ORDER BY (v0.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((json_array(v0.c0, v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE (json_array(v0.c0, v0.c0) COLLATE RTRIM) ORDER BY (v0.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((json_array(v0.c0, v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE (json_array(v0.c0, v0.c0) COLLATE RTRIM) ORDER BY (v0.c0 IN ()) COLLATE BINARY;
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c2)-(CAST(rt0.c1 AS INTEGER)))) ORDER BY (~ (0.7635742936590982))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)-(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (0.7635742936590982))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c2)-(CAST(rt0.c1 AS INTEGER)))) ORDER BY (~ (0.7635742936590982))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)-(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (0.7635742936590982))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c2)-(CAST(rt0.c1 AS INTEGER)))) ORDER BY (~ (0.7635742936590982))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)<>(rt0.c2))) BETWEEN (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))) AND (((v0.c0) NOT NULL)))) ORDER BY CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c2) NOTNULL) THEN v0.c0 WHEN LAST_INSERT_ROWID() THEN (NOT (x'')) WHEN (rt0.c1 IN ()) THEN (~ (rt0.c0)) ELSE (rt0.c2 IN ()) END, ((rt0.c1)||(x'b8c6')) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<>(rt0.c2))) BETWEEN (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c2) NOTNULL) THEN v0.c0 WHEN LAST_INSERT_ROWID() THEN (NOT (x'')) WHEN (rt0.c1 IN ()) THEN (~ (rt0.c0)) ELSE (rt0.c2 IN ()) END, ((rt0.c1)||(x'b8c6')) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)<>(rt0.c2))) BETWEEN (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))) AND (((v0.c0) NOT NULL)))) ORDER BY CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c2) NOTNULL) THEN v0.c0 WHEN LAST_INSERT_ROWID() THEN (NOT (x'')) WHEN (rt0.c1 IN ()) THEN (~ (rt0.c0)) ELSE (rt0.c2 IN ()) END, ((rt0.c1)||(x'b8c6')) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<>(rt0.c2))) BETWEEN (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c2) NOTNULL) THEN v0.c0 WHEN LAST_INSERT_ROWID() THEN (NOT (x'')) WHEN (rt0.c1 IN ()) THEN (~ (rt0.c0)) ELSE (rt0.c2 IN ()) END, ((rt0.c1)||(x'b8c6')) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)<>(rt0.c2))) BETWEEN (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))) AND (((v0.c0) NOT NULL)))) ORDER BY CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c2) NOTNULL) THEN v0.c0 WHEN LAST_INSERT_ROWID() THEN (NOT (x'')) WHEN (rt0.c1 IN ()) THEN (~ (rt0.c0)) ELSE (rt0.c2 IN ()) END, ((rt0.c1)||(x'b8c6')) COLLATE NOCASE DESC;
SELECT * FROM rt0, v0, vt1 WHERE (rt0.c1) ORDER BY (((~ (''))) NOT BETWEEN ((~ (vt1.c0))) AND (LIKELY(vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (((~ (''))) NOT BETWEEN ((~ (vt1.c0))) AND (LIKELY(vt1.c0))) ASC);
SELECT * FROM rt0, v0, vt1 WHERE (rt0.c1) ORDER BY (((~ (''))) NOT BETWEEN ((~ (vt1.c0))) AND (LIKELY(vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (((~ (''))) NOT BETWEEN ((~ (vt1.c0))) AND (LIKELY(vt1.c0))) ASC);
SELECT * FROM rt0, v0, vt1 WHERE (rt0.c1) ORDER BY (((~ (''))) NOT BETWEEN ((~ (vt1.c0))) AND (LIKELY(vt1.c0))) ASC;
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT));
SELECT * FROM rt0 WHERE (x'cd2d');
SELECT SUM(count) FROM (SELECT ((x'cd2d') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'cd2d');
SELECT SUM(count) FROM (SELECT ((x'cd2d') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'cd2d');
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 END) NOTNULL));
SELECT * FROM v0, vt1 WHERE (((((vt1.c1 IN (vt1.c0)), (((v0.c0))>((vt1.c0))), vt1.c1 COLLATE RTRIM))=((vt1.c1 COLLATE NOCASE, ((vt1.c1) ISNULL), CAST(v0.c0 AS TEXT))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1 IN (vt1.c0)), (((v0.c0))>((vt1.c0))), vt1.c1 COLLATE RTRIM))==((vt1.c1 COLLATE NOCASE, ((vt1.c1) ISNULL), CAST(v0.c0 AS TEXT))))) IS TRUE)  as count FROM v0, vt1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT * FROM v0, vt1 WHERE (((((vt1.c1 IN (vt1.c0)), (((v0.c0))>((vt1.c0))), vt1.c1 COLLATE RTRIM))=((vt1.c1 COLLATE NOCASE, ((vt1.c1) ISNULL), CAST(v0.c0 AS TEXT))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1 IN (vt1.c0)), (((v0.c0))>((vt1.c0))), vt1.c1 COLLATE RTRIM))==((vt1.c1 COLLATE NOCASE, ((vt1.c1) ISNULL), CAST(v0.c0 AS TEXT))))) IS TRUE)  as count FROM v0, vt1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT * FROM v0, vt1 WHERE (((((vt1.c1 IN (vt1.c0)), (((v0.c0))>((vt1.c0))), vt1.c1 COLLATE RTRIM))=((vt1.c1 COLLATE NOCASE, ((vt1.c1) ISNULL), CAST(v0.c0 AS TEXT))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))<=((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))<=((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))<=((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))<=((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))<=((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt1 ON ((vt1.c1) ISNULL) LEFT OUTER JOIN rt0 ON (((((vt1.c0))<((vt1.c1))))>((((rt0.c1))<=((v0.c0))))) WHERE (((vt1.c0)+(v0.c0)) COLLATE NOCASE) ORDER BY CAST(LOWER(DISTINCT v0.c0) AS TEXT)  NULLS LAST, ((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c2)))AND(HEX(vt1.c0))))OR(rt0.c0)), GLOB(CAST(vt1.c1 AS BLOB), (((rt0.c1, 0.6194564630081082, rt0.c2)) NOT BETWEEN ((vt1.c0, vt1.c1, v0.c0)) AND ((vt1.c1, rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)+(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON ((vt1.c1) ISNULL) LEFT OUTER JOIN rt0 ON (((((vt1.c0))<((vt1.c1))))>((((rt0.c1))<=((v0.c0))))) ORDER BY CAST(LOWER(DISTINCT v0.c0) AS TEXT)  NULLS LAST, ((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c2)))AND(HEX(vt1.c0))))OR(rt0.c0)), GLOB(CAST(vt1.c1 AS BLOB), (((rt0.c1, 0.6194564630081082, rt0.c2)) NOT BETWEEN ((vt1.c0, vt1.c1, v0.c0)) AND ((vt1.c1, rt0.c0, rt0.c0)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt1 ON ((vt1.c1) ISNULL) LEFT OUTER JOIN rt0 ON (((((vt1.c0))<((vt1.c1))))>((((rt0.c1))<=((v0.c0))))) WHERE (((vt1.c0)+(v0.c0)) COLLATE NOCASE) ORDER BY CAST(LOWER(DISTINCT v0.c0) AS TEXT)  NULLS LAST, ((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c2)))AND(HEX(vt1.c0))))OR(rt0.c0)), GLOB(CAST(vt1.c1 AS BLOB), (((rt0.c1, 0.6194564630081082, rt0.c2)) NOT BETWEEN ((vt1.c0, vt1.c1, v0.c0)) AND ((vt1.c1, rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)+(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON ((vt1.c1) ISNULL) LEFT OUTER JOIN rt0 ON (((((vt1.c0))<((vt1.c1))))>((((rt0.c1))<=((v0.c0))))) ORDER BY CAST(LOWER(DISTINCT v0.c0) AS TEXT)  NULLS LAST, ((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c2)))AND(HEX(vt1.c0))))OR(rt0.c0)), GLOB(CAST(vt1.c1 AS BLOB), (((rt0.c1, 0.6194564630081082, rt0.c2)) NOT BETWEEN ((vt1.c0, vt1.c1, v0.c0)) AND ((vt1.c1, rt0.c0, rt0.c0)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt1 ON ((vt1.c1) ISNULL) LEFT OUTER JOIN rt0 ON (((((vt1.c0))<((vt1.c1))))>((((rt0.c1))<=((v0.c0))))) WHERE (((vt1.c0)+(v0.c0)) COLLATE NOCASE) ORDER BY CAST(LOWER(DISTINCT v0.c0) AS TEXT)  NULLS LAST, ((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c2)))AND(HEX(vt1.c0))))OR(rt0.c0)), GLOB(CAST(vt1.c1 AS BLOB), (((rt0.c1, 0.6194564630081082, rt0.c2)) NOT BETWEEN ((vt1.c0, vt1.c1, v0.c0)) AND ((vt1.c1, rt0.c0, rt0.c0))));
SELECT * FROM rt0, v0, vt1 WHERE (CAST(CAST(rt0.c2 AS REAL) AS REAL)) ORDER BY ((((rt0.c0)>(rt0.c1))) IS FALSE) DESC  NULLS FIRST, STRFTIME((rt0.c0 IN (rt0.c1)), ((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)), ((rt0.c0)GLOB(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS REAL) AS REAL)) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((((rt0.c0)>(rt0.c1))) IS FALSE) DESC  NULLS FIRST, STRFTIME((rt0.c0 IN (rt0.c1)), ((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)), ((rt0.c0)GLOB(vt1.c0))));
SELECT * FROM rt0, v0, vt1 WHERE (CAST(CAST(rt0.c2 AS REAL) AS REAL)) ORDER BY ((((rt0.c0)>(rt0.c1))) IS FALSE) DESC  NULLS FIRST, STRFTIME((rt0.c0 IN (rt0.c1)), ((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)), ((rt0.c0)GLOB(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS REAL) AS REAL)) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((((rt0.c0)>(rt0.c1))) IS FALSE) DESC  NULLS FIRST, STRFTIME((rt0.c0 IN (rt0.c1)), ((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)), ((rt0.c0)GLOB(vt1.c0))));
SELECT * FROM rt0, v0, vt1 WHERE (CAST(CAST(rt0.c2 AS REAL) AS REAL)) ORDER BY ((((rt0.c0)>(rt0.c1))) IS FALSE) DESC  NULLS FIRST, STRFTIME((rt0.c0 IN (rt0.c1)), ((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)), ((rt0.c0)GLOB(vt1.c0)));
SELECT * FROM vt1 WHERE (((- (vt1.c1)) IN (vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c1)) IN (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((- (vt1.c1)) IN (vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c1)) IN (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((- (vt1.c1)) IN (vt1.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((0x7c6f074e))>((rt0.c2))))) AND ((((rt0.c1)>(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((((0x7c6f074e))>((rt0.c2))))) AND ((((rt0.c1)>(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((0x7c6f074e))>((rt0.c2))))) AND ((((rt0.c1)>(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((((0x7c6f074e))>((rt0.c2))))) AND ((((rt0.c1)>(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((0x7c6f074e))>((rt0.c2))))) AND ((((rt0.c1)>(rt0.c1))))));
SELECT ALL * FROM vt1, rt0 WHERE ((((((NOT (rt0.c1)))AND(((vt1.c1)|(rt0.c2)))))OR(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c1)))AND(((vt1.c1)|(rt0.c2)))))OR(TOTAL_CHANGES()))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((((NOT (rt0.c1)))AND(((vt1.c1)|(rt0.c2)))))OR(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c1)))AND(((vt1.c1)|(rt0.c2)))))OR(TOTAL_CHANGES()))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((((NOT (rt0.c1)))AND(((vt1.c1)|(rt0.c2)))))OR(TOTAL_CHANGES())));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) NOT BETWEEN ('2077154079') AND (v0.c0)) IN ())) ORDER BY (- (TRIM(v0.c0, v0.c0))), (((((v0.c0))<(('茁 e&'))))!=(COALESCE(v0.c0, v0.c0, v0.c0, v0.c0)))  NULLS LAST, CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS TEXT) WHEN TRIM(DISTINCT v0.c0) THEN ((v0.c0)-(v0.c0)) WHEN ((v0.c0)>=(v0.c0)) THEN IFNULL(v0.c0, v0.c0) ELSE (v0.c0 IN (v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN ('2077154079') AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (- (TRIM(v0.c0, v0.c0))), (((((v0.c0))<(('茁 e&'))))<>(COALESCE(v0.c0, v0.c0, v0.c0, v0.c0)))  NULLS LAST, CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS TEXT) WHEN TRIM(DISTINCT v0.c0) THEN ((v0.c0)-(v0.c0)) WHEN ((v0.c0)>=(v0.c0)) THEN IFNULL(v0.c0, v0.c0) ELSE (v0.c0 IN (v0.c0)) END ASC);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) NOT BETWEEN ('2077154079') AND (v0.c0)) IN ())) ORDER BY (- (TRIM(v0.c0, v0.c0))), (((((v0.c0))<(('茁 e&'))))!=(COALESCE(v0.c0, v0.c0, v0.c0, v0.c0)))  NULLS LAST, CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS TEXT) WHEN TRIM(DISTINCT v0.c0) THEN ((v0.c0)-(v0.c0)) WHEN ((v0.c0)>=(v0.c0)) THEN IFNULL(v0.c0, v0.c0) ELSE (v0.c0 IN (v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN ('2077154079') AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (- (TRIM(v0.c0, v0.c0))), (((((v0.c0))<(('茁 e&'))))<>(COALESCE(v0.c0, v0.c0, v0.c0, v0.c0)))  NULLS LAST, CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS TEXT) WHEN TRIM(DISTINCT v0.c0) THEN ((v0.c0)-(v0.c0)) WHEN ((v0.c0)>=(v0.c0)) THEN IFNULL(v0.c0, v0.c0) ELSE (v0.c0 IN (v0.c0)) END ASC);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) NOT BETWEEN ('2077154079') AND (v0.c0)) IN ())) ORDER BY (- (TRIM(v0.c0, v0.c0))), (((((v0.c0))<(('茁 e&'))))!=(COALESCE(v0.c0, v0.c0, v0.c0, v0.c0)))  NULLS LAST, CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS TEXT) WHEN TRIM(DISTINCT v0.c0) THEN ((v0.c0)-(v0.c0)) WHEN ((v0.c0)>=(v0.c0)) THEN IFNULL(v0.c0, v0.c0) ELSE (v0.c0 IN (v0.c0)) END ASC;
SELECT * FROM rt0 WHERE ((((((rt0.c1))==((rt0.c1))))/(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))==((rt0.c1))))/(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c1))==((rt0.c1))))/(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))==((rt0.c1))))/(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c1))==((rt0.c1))))/(CAST(rt0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((vt1.c1)=(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))))) ORDER BY COALESCE((~ (vt1.c1)), NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)=(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY COALESCE((~ (vt1.c1)), NULL) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((vt1.c1)=(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))))) ORDER BY COALESCE((~ (vt1.c1)), NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)=(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY COALESCE((~ (vt1.c1)), NULL) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((vt1.c1)=(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))))) ORDER BY COALESCE((~ (vt1.c1)), NULL) DESC;
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (((((v0.c0) IS FALSE))==(vt1.c1 COLLATE BINARY))) ORDER BY v0.c0  NULLS FIRST, '2r'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))=(vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY v0.c0  NULLS FIRST, '2r'  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (((((v0.c0) IS FALSE))==(vt1.c1 COLLATE BINARY))) ORDER BY v0.c0  NULLS FIRST, '2r'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))=(vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY v0.c0  NULLS FIRST, '2r'  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (((((v0.c0) IS FALSE))==(vt1.c1 COLLATE BINARY))) ORDER BY v0.c0  NULLS FIRST, '2r'  NULLS FIRST;
SELECT ALL * FROM v0, rt0, vt1 WHERE (CASE v0.c0  WHEN vt1.c1 THEN rt0.c0 END COLLATE NOCASE) ORDER BY (((rt0.c2, vt1.c1, rt0.c2)) BETWEEN ((v0.c0, UPPER(DISTINCT rt0.c1), CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)) AND ((((rt0.c1)==(rt0.c0)), ((vt1.c1)%(vt1.c0)), NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN vt1.c1 THEN rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (((rt0.c2, vt1.c1, rt0.c2)) BETWEEN ((v0.c0, UPPER(DISTINCT rt0.c1), CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)) AND ((((rt0.c1)=(rt0.c0)), ((vt1.c1)%(vt1.c0)), NULL))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt1 WHERE (CASE v0.c0  WHEN vt1.c1 THEN rt0.c0 END COLLATE NOCASE) ORDER BY (((rt0.c2, vt1.c1, rt0.c2)) BETWEEN ((v0.c0, UPPER(DISTINCT rt0.c1), CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)) AND ((((rt0.c1)==(rt0.c0)), ((vt1.c1)%(vt1.c0)), NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN vt1.c1 THEN rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY (((rt0.c2, vt1.c1, rt0.c2)) BETWEEN ((v0.c0, UPPER(DISTINCT rt0.c1), CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)) AND ((((rt0.c1)=(rt0.c0)), ((vt1.c1)%(vt1.c0)), NULL))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt1 WHERE (CASE v0.c0  WHEN vt1.c1 THEN rt0.c0 END COLLATE NOCASE) ORDER BY (((rt0.c2, vt1.c1, rt0.c2)) BETWEEN ((v0.c0, UPPER(DISTINCT rt0.c1), CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)) AND ((((rt0.c1)==(rt0.c0)), ((vt1.c1)%(vt1.c0)), NULL))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) IN (((vt1.c1)/(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) IN (((vt1.c1)/(vt1.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) IN (((vt1.c1)/(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) IN (((vt1.c1)/(vt1.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) IN (((vt1.c1)/(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))) BETWEEN (((vt1.c1)IS NOT(vt1.c1))) AND (((vt1.c0) ISNULL)))) ORDER BY ((LIKELY(vt1.c1)) NOT BETWEEN (ABS(DISTINCT vt1.c1)) AND (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))) BETWEEN (((vt1.c1)IS NOT(vt1.c1))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((LIKELY(vt1.c1)) NOT BETWEEN (ABS(DISTINCT vt1.c1)) AND (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))) BETWEEN (((vt1.c1)IS NOT(vt1.c1))) AND (((vt1.c0) ISNULL)))) ORDER BY ((LIKELY(vt1.c1)) NOT BETWEEN (ABS(DISTINCT vt1.c1)) AND (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))) BETWEEN (((vt1.c1)IS NOT(vt1.c1))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((LIKELY(vt1.c1)) NOT BETWEEN (ABS(DISTINCT vt1.c1)) AND (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))) BETWEEN (((vt1.c1)IS NOT(vt1.c1))) AND (((vt1.c0) ISNULL)))) ORDER BY ((LIKELY(vt1.c1)) NOT BETWEEN (ABS(DISTINCT vt1.c1)) AND (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)-(rt0.c0))) ISNULL)) ORDER BY (NOT (((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c0) NOTNULL))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)-(rt0.c0))) ISNULL)) ORDER BY (NOT (((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c0) NOTNULL))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)-(rt0.c0))) ISNULL)) ORDER BY (NOT (((rt0.c0) NOTNULL)));
SELECT * FROM v0 WHERE (LENGTH(((v0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((v0.c0) ISNULL))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LENGTH(((v0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((v0.c0) ISNULL))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LENGTH(((v0.c0) ISNULL)));
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c1 ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CASE WHEN ((1.129294465E9) NOT NULL) THEN v0.c0 WHEN TRIM(v0.c0) THEN x'' WHEN ((v0.c0)*(v0.c0)) THEN ((v0.c0) BETWEEN (NULL) AND (v0.c0)) WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS BLOB) WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)<<(v0.c0)) ELSE CAST(v0.c0 AS NUMERIC) END) ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))IS(v0.c0 COLLATE RTRIM))  NULLS LAST, (~ ((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((1.129294465E9) NOT NULL) THEN v0.c0 WHEN TRIM(v0.c0) THEN x'' WHEN ((v0.c0)*(v0.c0)) THEN ((v0.c0) BETWEEN (NULL) AND (v0.c0)) WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS BLOB) WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)<<(v0.c0)) ELSE CAST(v0.c0 AS NUMERIC) END) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))IS(v0.c0 COLLATE RTRIM))  NULLS LAST, (~ ((v0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((1.129294465E9) NOT NULL) THEN v0.c0 WHEN TRIM(v0.c0) THEN x'' WHEN ((v0.c0)*(v0.c0)) THEN ((v0.c0) BETWEEN (NULL) AND (v0.c0)) WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS BLOB) WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)<<(v0.c0)) ELSE CAST(v0.c0 AS NUMERIC) END) ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))IS(v0.c0 COLLATE RTRIM))  NULLS LAST, (~ ((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((1.129294465E9) NOT NULL) THEN v0.c0 WHEN TRIM(v0.c0) THEN x'' WHEN ((v0.c0)*(v0.c0)) THEN ((v0.c0) BETWEEN (NULL) AND (v0.c0)) WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS BLOB) WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)<<(v0.c0)) ELSE CAST(v0.c0 AS NUMERIC) END) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))IS(v0.c0 COLLATE RTRIM))  NULLS LAST, (~ ((v0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((1.129294465E9) NOT NULL) THEN v0.c0 WHEN TRIM(v0.c0) THEN x'' WHEN ((v0.c0)*(v0.c0)) THEN ((v0.c0) BETWEEN (NULL) AND (v0.c0)) WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS BLOB) WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)<<(v0.c0)) ELSE CAST(v0.c0 AS NUMERIC) END) ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))IS(v0.c0 COLLATE RTRIM))  NULLS LAST, (~ ((v0.c0 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((0.07388160108924924 IN (rt0.c1 COLLATE NOCASE, 0.726908895286655))) ORDER BY (((((('2023245223') IS TRUE))AND(((rt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((rt0.c0)GLOB(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((0.07388160108924924 IN (rt0.c1 COLLATE NOCASE, 0.726908895286655))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((('2023245223') IS TRUE))AND(((rt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((rt0.c0)GLOB(vt1.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((0.07388160108924924 IN (rt0.c1 COLLATE NOCASE, 0.726908895286655))) ORDER BY (((((('2023245223') IS TRUE))AND(((rt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((rt0.c0)GLOB(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((0.07388160108924924 IN (rt0.c1 COLLATE NOCASE, 0.726908895286655))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((('2023245223') IS TRUE))AND(((rt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((rt0.c0)GLOB(vt1.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((0.07388160108924924 IN (rt0.c1 COLLATE NOCASE, 0.726908895286655))) ORDER BY (((((('2023245223') IS TRUE))AND(((rt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((rt0.c0)GLOB(vt1.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2)GLOB(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)GLOB(v0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2)GLOB(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)GLOB(v0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2)GLOB(v0.c0)) IN ()));
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN (v0.c0 IN (rt0.c2)) THEN CAST(v0.c0 AS BLOB) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) END) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt0.c2 END)))AND(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN (rt0.c2)) THEN CAST(v0.c0 AS BLOB) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt0.c2 END)))AND(rt0.c1))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN (v0.c0 IN (rt0.c2)) THEN CAST(v0.c0 AS BLOB) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) END) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt0.c2 END)))AND(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN (rt0.c2)) THEN CAST(v0.c0 AS BLOB) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt0.c2 END)))AND(rt0.c1))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN (v0.c0 IN (rt0.c2)) THEN CAST(v0.c0 AS BLOB) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) END) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt0.c2 END)))AND(rt0.c1))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ('E8');
SELECT SUM(count) FROM (SELECT ALL (('E8') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('E8');
SELECT SUM(count) FROM (SELECT ALL (('E8') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('E8');
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (CAST(CAST(rt0.c1 AS TEXT) AS TEXT)) ORDER BY NULLIF(v0.c0, CAST(rt0.c1 AS REAL)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY NULLIF(v0.c0, CAST(rt0.c1 AS REAL)) DESC);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (CAST(CAST(rt0.c1 AS TEXT) AS TEXT)) ORDER BY NULLIF(v0.c0, CAST(rt0.c1 AS REAL)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY NULLIF(v0.c0, CAST(rt0.c1 AS REAL)) DESC);
SELECT ALL COUNT(*) FROM vt1, v0, rt0 WHERE (CAST(CAST(rt0.c1 AS TEXT) AS TEXT)) ORDER BY NULLIF(v0.c0, CAST(rt0.c1 AS REAL)) DESC;
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END)+(((vt1.c0) NOTNULL))) RIGHT OUTER JOIN vt1 ON (((TYPEOF(rt0.c1), MIN(rt0.c2, v0.c0, rt0.c2, rt0.c2), ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))>((((v0.c0)OR(vt1.c0)), SUBSTR(rt0.c2, rt0.c1), ((v0.c0) NOTNULL)))) WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END)+(((vt1.c0) NOTNULL))) RIGHT OUTER JOIN vt1 ON (((TYPEOF(rt0.c1), MIN(rt0.c2, v0.c0, rt0.c2, rt0.c2), ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))>((((v0.c0)OR(vt1.c0)), SUBSTR(rt0.c2, rt0.c1), ((v0.c0) NOTNULL)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END)+(((vt1.c0) NOTNULL))) RIGHT OUTER JOIN vt1 ON (((TYPEOF(rt0.c1), MIN(rt0.c2, v0.c0, rt0.c2, rt0.c2), ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))>((((v0.c0)OR(vt1.c0)), SUBSTR(rt0.c2, rt0.c1), ((v0.c0) NOTNULL)))) WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END)+(((vt1.c0) NOTNULL))) RIGHT OUTER JOIN vt1 ON (((TYPEOF(rt0.c1), MIN(rt0.c2, v0.c0, rt0.c2, rt0.c2), ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))>((((v0.c0)OR(vt1.c0)), SUBSTR(rt0.c2, rt0.c1), ((v0.c0) NOTNULL)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (COALESCE((((rt0.c0, rt0.c1, vt1.c1))>=((vt1.c0, vt1.c1, vt1.c1))), rt0.c0)) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE((((rt0.c0, rt0.c1, vt1.c1))>=((vt1.c0, vt1.c1, vt1.c1))), rt0.c0)) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (COALESCE((((rt0.c0, rt0.c1, vt1.c1))>=((vt1.c0, vt1.c1, vt1.c1))), rt0.c0)) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE((((rt0.c0, rt0.c1, vt1.c1))>=((vt1.c0, vt1.c1, vt1.c1))), rt0.c0)) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (COALESCE((((rt0.c0, rt0.c1, vt1.c1))>=((vt1.c0, vt1.c1, vt1.c1))), rt0.c0)) ORDER BY NULL ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c2 IN (rt0.c0)))+(((vt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c0)))+(((vt1.c1) IS TRUE)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c2 IN (rt0.c0)))+(((vt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c0)))+(((vt1.c1) IS TRUE)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c2 IN (rt0.c0)))+(((vt1.c1) IS TRUE))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c1 IN ()), ((vt1.c0)*(vt1.c0)), CAST(vt1.c0 AS INTEGER), (vt1.c0 IN (x'6889')), CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END))<(((((vt1.c0)) BETWEEN ((NULL)) AND ((NULL))), CASE WHEN vt1.c1 THEN vt1.c0 END, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN '-894513850' WHEN vt1.c1 THEN vt1.c0 END, (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1 IN ()), ((vt1.c0)*(vt1.c0)), CAST(vt1.c0 AS INTEGER), (vt1.c0 IN (x'6889')), CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END))<(((((vt1.c0)) BETWEEN ((NULL)) AND ((NULL))), CASE WHEN vt1.c1 THEN vt1.c0 END, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN '-894513850' WHEN vt1.c1 THEN vt1.c0 END, (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c1 IN ()), ((vt1.c0)*(vt1.c0)), CAST(vt1.c0 AS INTEGER), (vt1.c0 IN (x'6889')), CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END))<(((((vt1.c0)) BETWEEN ((NULL)) AND ((NULL))), CASE WHEN vt1.c1 THEN vt1.c0 END, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN '-894513850' WHEN vt1.c1 THEN vt1.c0 END, (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1 IN ()), ((vt1.c0)*(vt1.c0)), CAST(vt1.c0 AS INTEGER), (vt1.c0 IN (x'6889')), CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END))<(((((vt1.c0)) BETWEEN ((NULL)) AND ((NULL))), CASE WHEN vt1.c1 THEN vt1.c0 END, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN '-894513850' WHEN vt1.c1 THEN vt1.c0 END, (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c1 IN ()), ((vt1.c0)*(vt1.c0)), CAST(vt1.c0 AS INTEGER), (vt1.c0 IN (x'6889')), CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END))<(((((vt1.c0)) BETWEEN ((NULL)) AND ((NULL))), CASE WHEN vt1.c1 THEN vt1.c0 END, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN '-894513850' WHEN vt1.c1 THEN vt1.c0 END, (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), vt1.c1))));
SELECT * FROM v0 WHERE (((((((v0.c0)>=(x'fcaf066d')))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)>=(x'fcaf066d')))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)>=(x'fcaf066d')))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)>=(x'fcaf066d')))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)>=(x'fcaf066d')))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((+ (v0.c0)))));
SELECT ALL COUNT(*) FROM vt1, v0 FULL OUTER JOIN rt0 ON ((+ (rt0.c1)) IN ()) WHERE ((((vt1.c1) IS TRUE) IN (((((rt0.c2)OR(vt1.c1)))AND('508384858')), CAST(vt1.c0 AS BLOB), (NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1) IS TRUE) IN (((((rt0.c2)OR(vt1.c1)))AND('508384858')), CAST(vt1.c0 AS BLOB), (NOT (v0.c0))))) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN rt0 ON ((+ (rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt1, v0 FULL OUTER JOIN rt0 ON ((+ (rt0.c1)) IN ()) WHERE ((((vt1.c1) IS TRUE) IN (((((rt0.c2)OR(vt1.c1)))AND('508384858')), CAST(vt1.c0 AS BLOB), (NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1) IS TRUE) IN (((((rt0.c2)OR(vt1.c1)))AND('508384858')), CAST(vt1.c0 AS BLOB), (NOT (v0.c0))))) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN rt0 ON ((+ (rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt1, v0 FULL OUTER JOIN rt0 ON ((+ (rt0.c1)) IN ()) WHERE ((((vt1.c1) IS TRUE) IN (((((rt0.c2)OR(vt1.c1)))AND('508384858')), CAST(vt1.c0 AS BLOB), (NOT (v0.c0)))));
SELECT * FROM vt1, v0 WHERE (((((vt1.c1) NOT NULL))LIKE(v0.c0))) ORDER BY (((vt1.c1 IN (vt1.c0, vt1.c1)))OR((('1458986229')AND(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT NULL))LIKE(v0.c0))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((vt1.c1 IN (vt1.c0, vt1.c1)))OR((('1458986229')AND(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1, v0 WHERE (((((vt1.c1) NOT NULL))LIKE(v0.c0))) ORDER BY (((vt1.c1 IN (vt1.c0, vt1.c1)))OR((('1458986229')AND(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT NULL))LIKE(v0.c0))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((vt1.c1 IN (vt1.c0, vt1.c1)))OR((('1458986229')AND(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1, v0 WHERE (((((vt1.c1) NOT NULL))LIKE(v0.c0))) ORDER BY (((vt1.c1 IN (vt1.c0, vt1.c1)))OR((('1458986229')AND(v0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((NOT (rt0.c2)), rt0.c0 COLLATE NOCASE, (rt0.c2 IN ())))>=((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END, (NULL IN ()), ((rt0.c1)=(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c2)), rt0.c0 COLLATE NOCASE, (rt0.c2 IN ())))>=((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END, (NULL IN ()), ((rt0.c1)=(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((NOT (rt0.c2)), rt0.c0 COLLATE NOCASE, (rt0.c2 IN ())))>=((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END, (NULL IN ()), ((rt0.c1)=(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c2)), rt0.c0 COLLATE NOCASE, (rt0.c2 IN ())))>=((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END, (NULL IN ()), ((rt0.c1)=(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((NOT (rt0.c2)), rt0.c0 COLLATE NOCASE, (rt0.c2 IN ())))>=((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END, (NULL IN ()), ((rt0.c1)=(rt0.c1))))));
SELECT ALL * FROM v0, rt0 NOT INDEXED WHERE (CAST(CAST(v0.c0 AS REAL) AS BLOB)) ORDER BY CASE WHEN 0Xfffffffff1fea7b9 THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 END WHEN COALESCE(DISTINCT rt0.c0, rt0.c1) THEN ((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)) WHEN rt0.c1 THEN (((rt0.c0, rt0.c2, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, x'')) AND ((v0.c0, rt0.c2, rt0.c0))) ELSE ((rt0.c2) ISNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN 0xfffffffff1fea7b9 THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 END WHEN COALESCE(DISTINCT rt0.c0, rt0.c1) THEN ((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)) WHEN rt0.c1 THEN (((rt0.c0, rt0.c2, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, x'')) AND ((v0.c0, rt0.c2, rt0.c0))) ELSE ((rt0.c2) ISNULL) END  NULLS LAST);
SELECT ALL * FROM v0, rt0 NOT INDEXED WHERE (CAST(CAST(v0.c0 AS REAL) AS BLOB)) ORDER BY CASE WHEN 0Xfffffffff1fea7b9 THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 END WHEN COALESCE(DISTINCT rt0.c0, rt0.c1) THEN ((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)) WHEN rt0.c1 THEN (((rt0.c0, rt0.c2, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, x'')) AND ((v0.c0, rt0.c2, rt0.c0))) ELSE ((rt0.c2) ISNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN 0xfffffffff1fea7b9 THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 END WHEN COALESCE(DISTINCT rt0.c0, rt0.c1) THEN ((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)) WHEN rt0.c1 THEN (((rt0.c0, rt0.c2, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, x'')) AND ((v0.c0, rt0.c2, rt0.c0))) ELSE ((rt0.c2) ISNULL) END  NULLS LAST);
SELECT ALL * FROM v0, rt0 NOT INDEXED WHERE (CAST(CAST(v0.c0 AS REAL) AS BLOB)) ORDER BY CASE WHEN 0Xfffffffff1fea7b9 THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 END WHEN COALESCE(DISTINCT rt0.c0, rt0.c1) THEN ((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)) WHEN rt0.c1 THEN (((rt0.c0, rt0.c2, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, x'')) AND ((v0.c0, rt0.c2, rt0.c0))) ELSE ((rt0.c2) ISNULL) END  NULLS LAST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2) IS TRUE))||(((v0.c0)>=(v0.c0)))) WHERE (CASE 0.30271042846922225  WHEN CAST(v0.c0 AS TEXT) THEN ((rt0.c1)|(rt0.c0)) ELSE (~ (rt0.c1)) END) ORDER BY ((rt0.c0) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE 0.30271042846922225  WHEN CAST(v0.c0 AS TEXT) THEN ((rt0.c1)|(rt0.c0)) ELSE (~ (rt0.c1)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2) IS TRUE))||(((v0.c0)>=(v0.c0)))) ORDER BY ((rt0.c0) NOT NULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2) IS TRUE))||(((v0.c0)>=(v0.c0)))) WHERE (CASE 0.30271042846922225  WHEN CAST(v0.c0 AS TEXT) THEN ((rt0.c1)|(rt0.c0)) ELSE (~ (rt0.c1)) END) ORDER BY ((rt0.c0) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE 0.30271042846922225  WHEN CAST(v0.c0 AS TEXT) THEN ((rt0.c1)|(rt0.c0)) ELSE (~ (rt0.c1)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2) IS TRUE))||(((v0.c0)>=(v0.c0)))) ORDER BY ((rt0.c0) NOT NULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2) IS TRUE))||(((v0.c0)>=(v0.c0)))) WHERE (CASE 0.30271042846922225  WHEN CAST(v0.c0 AS TEXT) THEN ((rt0.c1)|(rt0.c0)) ELSE (~ (rt0.c1)) END) ORDER BY ((rt0.c0) NOT NULL);
SELECT ALL COUNT(*) FROM vt1, v0 FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0)))) AND ((rt0.c0))) WHERE ((+ ((rt0.c0 IN ())))) ORDER BY (((v0.c0 IN ()))<=(((v0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0)))) AND ((rt0.c0))) ORDER BY (((v0.c0 IN ()))<=(((v0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1, v0 FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0)))) AND ((rt0.c0))) WHERE ((+ ((rt0.c0 IN ())))) ORDER BY (((v0.c0 IN ()))<=(((v0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0)))) AND ((rt0.c0))) ORDER BY (((v0.c0 IN ()))<=(((v0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1, v0 FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0)))) AND ((rt0.c0))) WHERE ((+ ((rt0.c0 IN ())))) ORDER BY (((v0.c0 IN ()))<=(((v0.c0) NOT NULL)));
SELECT * FROM rt0 WHERE ((((0.642847476593767)) BETWEEN ((x'')) AND (('901846504'))));
SELECT SUM(count) FROM (SELECT (((((0.642847476593767)) BETWEEN ((x'')) AND (('901846504')))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((0.642847476593767)) BETWEEN ((x'')) AND (('901846504'))));
SELECT SUM(count) FROM (SELECT (((((0.642847476593767)) BETWEEN ((x'')) AND (('901846504')))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((0.642847476593767)) BETWEEN ((x'')) AND (('901846504'))));
SELECT COUNT(*) FROM v0, vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c1) AND (0.3164098767981708))) IS FALSE)) ORDER BY -1332479325  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (vt1.c1) AND (0.3164098767981708))) IS FALSE)) IS TRUE)  as count FROM v0, vt1 ORDER BY -1332479325  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c1) AND (0.3164098767981708))) IS FALSE)) ORDER BY -1332479325  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (vt1.c1) AND (0.3164098767981708))) IS FALSE)) IS TRUE)  as count FROM v0, vt1 ORDER BY -1332479325  NULLS FIRST);
SELECT ALL * FROM v0, vt1, rt0 WHERE ((NOT ((((v0.c0))==((vt1.c0)))))) ORDER BY (('-1124218423')<((NOT (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c0))=((vt1.c0)))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY (('-1124218423')<((NOT (rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM v0, vt1, rt0 WHERE ((NOT ((((v0.c0))==((vt1.c0)))))) ORDER BY (('-1124218423')<((NOT (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c0))=((vt1.c0)))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY (('-1124218423')<((NOT (rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM v0, vt1, rt0 WHERE ((NOT ((((v0.c0))==((vt1.c0)))))) ORDER BY (('-1124218423')<((NOT (rt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((LOWER(DISTINCT v0.c0) IN (((v0.c0) NOTNULL)))) ORDER BY x'0c5a80ab' DESC;
SELECT SUM(count) FROM (SELECT (((LOWER(DISTINCT v0.c0) IN (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY x'0c5a80ab' DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((LOWER(DISTINCT v0.c0) IN (((v0.c0) NOTNULL)))) ORDER BY x'0c5a80ab' DESC;
SELECT SUM(count) FROM (SELECT (((LOWER(DISTINCT v0.c0) IN (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY x'0c5a80ab' DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((LOWER(DISTINCT v0.c0) IN (((v0.c0) NOTNULL)))) ORDER BY x'0c5a80ab' DESC;
SELECT ALL * FROM v0 NOT INDEXED WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 NOT INDEXED WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 NOT INDEXED WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) AS INTEGER));
SELECT ALL * FROM rt0 WHERE (((((((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(6.92752213E8)))OR(rt0.c1)))OR((rt0.c2 IN ()))))OR(json_array(rt0.c0, rt0.c0, rt0.c1, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(6.92752213E8)))OR(rt0.c1)))OR((rt0.c2 IN ()))))OR(json_array(rt0.c0, rt0.c0, rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(6.92752213E8)))OR(rt0.c1)))OR((rt0.c2 IN ()))))OR(json_array(rt0.c0, rt0.c0, rt0.c1, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(6.92752213E8)))OR(rt0.c1)))OR((rt0.c2 IN ()))))OR(json_array(rt0.c0, rt0.c0, rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(6.92752213E8)))OR(rt0.c1)))OR((rt0.c2 IN ()))))OR(json_array(rt0.c0, rt0.c0, rt0.c1, rt0.c2))));
SELECT ALL * FROM vt1, v0, rt0 WHERE ((NOT (((((((((vt1.c1)OR(rt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(x''))))) ORDER BY CASE WHEN LOWER(vt1.c1) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c2)) WHEN ((('1809213930', rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, v0.c0)) AND ((vt1.c1, rt0.c2, vt1.c1))) THEN CASE WHEN rt0.c1 THEN vt1.c0 END WHEN (NOT (v0.c0)) THEN ((((vt1.c1)OR(v0.c0)))AND(rt0.c0)) WHEN '1065789771' THEN ((vt1.c1)==(rt0.c0)) WHEN v0.c0 THEN rt0.c1 COLLATE NOCASE END, (((vt1.c0 IN ())) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((((((((vt1.c1)OR(rt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(x''))))) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY CASE WHEN LOWER(vt1.c1) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c2)) WHEN ((('1809213930', rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, v0.c0)) AND ((vt1.c1, rt0.c2, vt1.c1))) THEN CASE WHEN rt0.c1 THEN vt1.c0 END WHEN (NOT (v0.c0)) THEN ((((vt1.c1)OR(v0.c0)))AND(rt0.c0)) WHEN '1065789771' THEN ((vt1.c1)=(rt0.c0)) WHEN v0.c0 THEN rt0.c1 COLLATE NOCASE END, (((vt1.c0 IN ())) NOTNULL) ASC);
SELECT ALL * FROM vt1, v0, rt0 WHERE ((NOT (((((((((vt1.c1)OR(rt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(x''))))) ORDER BY CASE WHEN LOWER(vt1.c1) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c2)) WHEN ((('1809213930', rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, v0.c0)) AND ((vt1.c1, rt0.c2, vt1.c1))) THEN CASE WHEN rt0.c1 THEN vt1.c0 END WHEN (NOT (v0.c0)) THEN ((((vt1.c1)OR(v0.c0)))AND(rt0.c0)) WHEN '1065789771' THEN ((vt1.c1)==(rt0.c0)) WHEN v0.c0 THEN rt0.c1 COLLATE NOCASE END, (((vt1.c0 IN ())) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((((((((vt1.c1)OR(rt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(x''))))) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY CASE WHEN LOWER(vt1.c1) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c2)) WHEN ((('1809213930', rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, v0.c0)) AND ((vt1.c1, rt0.c2, vt1.c1))) THEN CASE WHEN rt0.c1 THEN vt1.c0 END WHEN (NOT (v0.c0)) THEN ((((vt1.c1)OR(v0.c0)))AND(rt0.c0)) WHEN '1065789771' THEN ((vt1.c1)=(rt0.c0)) WHEN v0.c0 THEN rt0.c1 COLLATE NOCASE END, (((vt1.c0 IN ())) NOTNULL) ASC);
SELECT ALL * FROM vt1, v0, rt0 WHERE ((NOT (((((((((vt1.c1)OR(rt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(x''))))) ORDER BY CASE WHEN LOWER(vt1.c1) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c2)) WHEN ((('1809213930', rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, v0.c0)) AND ((vt1.c1, rt0.c2, vt1.c1))) THEN CASE WHEN rt0.c1 THEN vt1.c0 END WHEN (NOT (v0.c0)) THEN ((((vt1.c1)OR(v0.c0)))AND(rt0.c0)) WHEN '1065789771' THEN ((vt1.c1)==(rt0.c0)) WHEN v0.c0 THEN rt0.c1 COLLATE NOCASE END, (((vt1.c0 IN ())) NOTNULL) ASC;
SELECT * FROM vt1 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((((((rt0.c2)AND(rt0.c0)))OR(vt1.c1)))OR(rt0.c1)))AND(vt1.c0)))) AND ((LIKELIHOOD(DISTINCT v0.c0, 0.7911669421804693)))) RIGHT OUTER JOIN v0 ON (((((rt0.c2))<=((vt1.c1)))) NOT NULL) WHERE ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN (((((((((v0.c0)AND('2026705608')))AND(vt1.c0)))AND(v0.c0)))AND(v0.c0))))) ORDER BY 0.6925989584280934  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN (((((((((v0.c0)AND('2026705608')))AND(vt1.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((((((rt0.c2)AND(rt0.c0)))OR(vt1.c1)))OR(rt0.c1)))AND(vt1.c0)))) AND ((LIKELIHOOD(DISTINCT v0.c0, 0.7911669421804693)))) RIGHT OUTER JOIN v0 ON (((((rt0.c2))<=((vt1.c1)))) NOT NULL) ORDER BY 0.6925989584280934  NULLS FIRST);
SELECT * FROM vt1 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((((((rt0.c2)AND(rt0.c0)))OR(vt1.c1)))OR(rt0.c1)))AND(vt1.c0)))) AND ((LIKELIHOOD(DISTINCT v0.c0, 0.7911669421804693)))) RIGHT OUTER JOIN v0 ON (((((rt0.c2))<=((vt1.c1)))) NOT NULL) WHERE ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN (((((((((v0.c0)AND('2026705608')))AND(vt1.c0)))AND(v0.c0)))AND(v0.c0))))) ORDER BY 0.6925989584280934  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN (((((((((v0.c0)AND('2026705608')))AND(vt1.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((((((rt0.c2)AND(rt0.c0)))OR(vt1.c1)))OR(rt0.c1)))AND(vt1.c0)))) AND ((LIKELIHOOD(DISTINCT v0.c0, 0.7911669421804693)))) RIGHT OUTER JOIN v0 ON (((((rt0.c2))<=((vt1.c1)))) NOT NULL) ORDER BY 0.6925989584280934  NULLS FIRST);
SELECT ALL * FROM vt1, v0 WHERE (vt1.c0) ORDER BY ((((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))AND(((v0.c0)GLOB('-804845602')))) DESC  NULLS LAST, CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))AND(((v0.c0)GLOB('-804845602')))) DESC  NULLS LAST, CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT));
SELECT ALL * FROM vt1, v0 WHERE (vt1.c0) ORDER BY ((((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))AND(((v0.c0)GLOB('-804845602')))) DESC  NULLS LAST, CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))AND(((v0.c0)GLOB('-804845602')))) DESC  NULLS LAST, CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT));
SELECT ALL * FROM vt1, v0 WHERE (vt1.c0) ORDER BY ((((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))AND(((v0.c0)GLOB('-804845602')))) DESC  NULLS LAST, CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT);
SELECT * FROM vt1 WHERE (((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE ((- (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (rt0.c1)));
SELECT * FROM rt0, v0 WHERE (((((((((CAST(v0.c0 AS INTEGER))AND(((((x'')OR(v0.c0)))AND(rt0.c0)))))OR(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))))OR(rt0.c2 COLLATE RTRIM)))OR(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(v0.c0 AS INTEGER))AND(((((x'')OR(v0.c0)))AND(rt0.c0)))))OR(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))))OR(rt0.c2 COLLATE RTRIM)))OR(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((((CAST(v0.c0 AS INTEGER))AND(((((x'')OR(v0.c0)))AND(rt0.c0)))))OR(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))))OR(rt0.c2 COLLATE RTRIM)))OR(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(v0.c0 AS INTEGER))AND(((((x'')OR(v0.c0)))AND(rt0.c0)))))OR(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))))OR(rt0.c2 COLLATE RTRIM)))OR(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((((CAST(v0.c0 AS INTEGER))AND(((((x'')OR(v0.c0)))AND(rt0.c0)))))OR(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))))OR(rt0.c2 COLLATE RTRIM)))OR(CAST(rt0.c0 AS REAL))));
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (json_array_length(((rt0.c1) NOT BETWEEN (vt1.c1) AND (v0.c0)), ((vt1.c1) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY ((vt1.c0 COLLATE BINARY) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(((rt0.c1) NOT BETWEEN (vt1.c1) AND (v0.c0)), ((vt1.c1) BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((vt1.c0 COLLATE BINARY) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (json_array_length(((rt0.c1) NOT BETWEEN (vt1.c1) AND (v0.c0)), ((vt1.c1) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY ((vt1.c0 COLLATE BINARY) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(((rt0.c1) NOT BETWEEN (vt1.c1) AND (v0.c0)), ((vt1.c1) BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY ((vt1.c0 COLLATE BINARY) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (json_array_length(((rt0.c1) NOT BETWEEN (vt1.c1) AND (v0.c0)), ((vt1.c1) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY ((vt1.c0 COLLATE BINARY) NOT NULL)  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((- (rt0.c2)));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0) IS TRUE))*(((vt1.c1) NOT BETWEEN (vt1.c1) AND (rt0.c1))))) ORDER BY CAST(((rt0.c0) ISNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))*(((vt1.c1) NOT BETWEEN (vt1.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(((rt0.c0) ISNULL) AS INTEGER));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0) IS TRUE))*(((vt1.c1) NOT BETWEEN (vt1.c1) AND (rt0.c1))))) ORDER BY CAST(((rt0.c0) ISNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))*(((vt1.c1) NOT BETWEEN (vt1.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(((rt0.c0) ISNULL) AS INTEGER));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0) IS TRUE))*(((vt1.c1) NOT BETWEEN (vt1.c1) AND (rt0.c1))))) ORDER BY CAST(((rt0.c0) ISNULL) AS INTEGER);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (v0.c0) AND (vt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT BETWEEN (v0.c0) AND (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (v0.c0) AND (vt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT BETWEEN (v0.c0) AND (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (v0.c0) AND (vt1.c1)) AS TEXT));
SELECT * FROM rt0, vt1, v0 WHERE ((((~ (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, v0);
SELECT * FROM rt0, vt1, v0 WHERE ((((~ (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, v0);
SELECT * FROM rt0, vt1, v0 WHERE ((((~ (v0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE NULL END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE NULL END IN ())) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE NULL END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE NULL END IN ())) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE NULL END IN ()));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((NULL) BETWEEN ((+ (rt0.c1))) AND (((v0.c0)<('1345806387')))) WHERE (((((CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND((rt0.c0 IN ()))))AND(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND((rt0.c0 IN ()))))AND(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((NULL) BETWEEN ((+ (rt0.c1))) AND (((v0.c0)<('1345806387')))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((NULL) BETWEEN ((+ (rt0.c1))) AND (((v0.c0)<('1345806387')))) WHERE (((((CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND((rt0.c0 IN ()))))AND(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND((rt0.c0 IN ()))))AND(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((NULL) BETWEEN ((+ (rt0.c1))) AND (((v0.c0)<('1345806387')))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((NULL) BETWEEN ((+ (rt0.c1))) AND (((v0.c0)<('1345806387')))) WHERE (((((CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND((rt0.c0 IN ()))))AND(CAST(rt0.c1 AS REAL))));
SELECT ALL * FROM v0 WHERE ((((+ (v0.c0)))LIKE(((v0.c0) NOT NULL)))) ORDER BY ((((x'') ISNULL))<<((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS FIRST, (- (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, CASE v0.c0  WHEN TRIM(DISTINCT v0.c0) THEN ((x'')-(v0.c0)) WHEN (v0.c0 IN ()) THEN (((v0.c0))==((v0.c0))) WHEN ((v0.c0)LIKE(v0.c0)) THEN ((v0.c0)*(v0.c0)) ELSE ((v0.c0) ISNULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))LIKE(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY ((((x'') ISNULL))<<((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS FIRST, (- (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, CASE v0.c0  WHEN TRIM(DISTINCT v0.c0) THEN ((x'')-(v0.c0)) WHEN (v0.c0 IN ()) THEN (((v0.c0))==((v0.c0))) WHEN ((v0.c0)LIKE(v0.c0)) THEN ((v0.c0)*(v0.c0)) ELSE ((v0.c0) ISNULL) END ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((+ (v0.c0)))LIKE(((v0.c0) NOT NULL)))) ORDER BY ((((x'') ISNULL))<<((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS FIRST, (- (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, CASE v0.c0  WHEN TRIM(DISTINCT v0.c0) THEN ((x'')-(v0.c0)) WHEN (v0.c0 IN ()) THEN (((v0.c0))==((v0.c0))) WHEN ((v0.c0)LIKE(v0.c0)) THEN ((v0.c0)*(v0.c0)) ELSE ((v0.c0) ISNULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))LIKE(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY ((((x'') ISNULL))<<((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS FIRST, (- (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, CASE v0.c0  WHEN TRIM(DISTINCT v0.c0) THEN ((x'')-(v0.c0)) WHEN (v0.c0 IN ()) THEN (((v0.c0))==((v0.c0))) WHEN ((v0.c0)LIKE(v0.c0)) THEN ((v0.c0)*(v0.c0)) ELSE ((v0.c0) ISNULL) END ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((+ (v0.c0)))LIKE(((v0.c0) NOT NULL)))) ORDER BY ((((x'') ISNULL))<<((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS FIRST, (- (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, CASE v0.c0  WHEN TRIM(DISTINCT v0.c0) THEN ((x'')-(v0.c0)) WHEN (v0.c0 IN ()) THEN (((v0.c0))==((v0.c0))) WHEN ((v0.c0)LIKE(v0.c0)) THEN ((v0.c0)*(v0.c0)) ELSE ((v0.c0) ISNULL) END ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))IS NOT(CAST(vt1.c1 AS NUMERIC)))) ORDER BY CASE ((v0.c0)IS(vt1.c1))  WHEN NULL THEN NULLIF(DISTINCT v0.c0, v0.c0) WHEN CAST(vt1.c1 AS REAL) THEN NULL WHEN vt1.c0 THEN (vt1.c0 IN (x'', v0.c0)) ELSE TRIM(DISTINCT vt1.c1, vt1.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))IS NOT(CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt1 ORDER BY CASE ((v0.c0)IS(vt1.c1))  WHEN NULL THEN NULLIF(DISTINCT v0.c0, v0.c0) WHEN CAST(vt1.c1 AS REAL) THEN NULL WHEN vt1.c0 THEN (vt1.c0 IN (x'', v0.c0)) ELSE TRIM(DISTINCT vt1.c1, vt1.c1) END  NULLS LAST);
SELECT ALL * FROM v0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))IS NOT(CAST(vt1.c1 AS NUMERIC)))) ORDER BY CASE ((v0.c0)IS(vt1.c1))  WHEN NULL THEN NULLIF(DISTINCT v0.c0, v0.c0) WHEN CAST(vt1.c1 AS REAL) THEN NULL WHEN vt1.c0 THEN (vt1.c0 IN (x'', v0.c0)) ELSE TRIM(DISTINCT vt1.c1, vt1.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))IS NOT(CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt1 ORDER BY CASE ((v0.c0)IS(vt1.c1))  WHEN NULL THEN NULLIF(DISTINCT v0.c0, v0.c0) WHEN CAST(vt1.c1 AS REAL) THEN NULL WHEN vt1.c0 THEN (vt1.c0 IN (x'', v0.c0)) ELSE TRIM(DISTINCT vt1.c1, vt1.c1) END  NULLS LAST);
SELECT ALL * FROM v0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))IS NOT(CAST(vt1.c1 AS NUMERIC)))) ORDER BY CASE ((v0.c0)IS(vt1.c1))  WHEN NULL THEN NULLIF(DISTINCT v0.c0, v0.c0) WHEN CAST(vt1.c1 AS REAL) THEN NULL WHEN vt1.c0 THEN (vt1.c0 IN (x'', v0.c0)) ELSE TRIM(DISTINCT vt1.c1, vt1.c1) END  NULLS LAST;
SELECT * FROM rt0, vt1 FULL OUTER JOIN v0 ON ((((((v0.c0)AND(rt0.c2)))OR('1091635068'))) NOTNULL) WHERE (((((((rt0.c2) IS FALSE))AND(rt0.c2 COLLATE NOCASE)))AND((+ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) IS FALSE))AND(rt0.c2 COLLATE NOCASE)))AND((+ (vt1.c1))))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN v0 ON ((((((v0.c0)AND(rt0.c2)))OR('1091635068'))) NOTNULL));
SELECT * FROM rt0, vt1 FULL OUTER JOIN v0 ON ((((((v0.c0)AND(rt0.c2)))OR('1091635068'))) NOTNULL) WHERE (((((((rt0.c2) IS FALSE))AND(rt0.c2 COLLATE NOCASE)))AND((+ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) IS FALSE))AND(rt0.c2 COLLATE NOCASE)))AND((+ (vt1.c1))))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN v0 ON ((((((v0.c0)AND(rt0.c2)))OR('1091635068'))) NOTNULL));
SELECT * FROM rt0, vt1 FULL OUTER JOIN v0 ON ((((((v0.c0)AND(rt0.c2)))OR('1091635068'))) NOTNULL) WHERE (((((((rt0.c2) IS FALSE))AND(rt0.c2 COLLATE NOCASE)))AND((+ (vt1.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c1)!=(rt0.c2)))OR(CAST(rt0.c2 AS BLOB))))AND(((x'c86b') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)!=(rt0.c2)))OR(CAST(rt0.c2 AS BLOB))))AND(((x'c86b') NOT NULL)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c1)!=(rt0.c2)))OR(CAST(rt0.c2 AS BLOB))))AND(((x'c86b') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)!=(rt0.c2)))OR(CAST(rt0.c2 AS BLOB))))AND(((x'c86b') NOT NULL)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c1)!=(rt0.c2)))OR(CAST(rt0.c2 AS BLOB))))AND(((x'c86b') NOT NULL))));
SELECT * FROM v0, vt1, rt0 WHERE ((((('yQ#v')OR(((((rt0.c1)OR(vt1.c0)))AND(vt1.c1)))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('yQ#v')OR(((((rt0.c1)OR(vt1.c0)))AND(vt1.c1)))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM v0, vt1, rt0 WHERE ((((('yQ#v')OR(((((rt0.c1)OR(vt1.c0)))AND(vt1.c1)))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('yQ#v')OR(((((rt0.c1)OR(vt1.c0)))AND(vt1.c1)))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM v0, vt1, rt0 WHERE ((((('yQ#v')OR(((((rt0.c1)OR(vt1.c0)))AND(vt1.c1)))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((0X3e814ce0 COLLATE NOCASE)<>(vt1.c0))) ORDER BY ((rt0.c0) BETWEEN (((rt0.c1) IS FALSE)) AND (0.7865961484517956)) DESC;
SELECT SUM(count) FROM (SELECT ((((0X3e814ce0 COLLATE NOCASE)!=(vt1.c0))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((rt0.c0) BETWEEN (((rt0.c1) IS FALSE)) AND (0.7865961484517956)) DESC);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((0X3e814ce0 COLLATE NOCASE)<>(vt1.c0))) ORDER BY ((rt0.c0) BETWEEN (((rt0.c1) IS FALSE)) AND (0.7865961484517956)) DESC;
SELECT SUM(count) FROM (SELECT ((((0X3e814ce0 COLLATE NOCASE)!=(vt1.c0))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((rt0.c0) BETWEEN (((rt0.c1) IS FALSE)) AND (0.7865961484517956)) DESC);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((0X3e814ce0 COLLATE NOCASE)<>(vt1.c0))) ORDER BY ((rt0.c0) BETWEEN (((rt0.c1) IS FALSE)) AND (0.7865961484517956)) DESC;
SELECT * FROM rt0 WHERE ((((((rt0.c2))<>((rt0.c1))))+(0.8307249683592496))) ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c0))>=((rt0.c1))))) AND (((NOT (rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))!=((rt0.c1))))+(0.8307249683592496))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c0))>=((rt0.c1))))) AND (((NOT (rt0.c0))))) ASC);
SELECT * FROM rt0 WHERE ((((((rt0.c2))<>((rt0.c1))))+(0.8307249683592496))) ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c0))>=((rt0.c1))))) AND (((NOT (rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))!=((rt0.c1))))+(0.8307249683592496))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c0))>=((rt0.c1))))) AND (((NOT (rt0.c0))))) ASC);
SELECT * FROM rt0 WHERE ((((((rt0.c2))<>((rt0.c1))))+(0.8307249683592496))) ORDER BY (((rt0.c2)) BETWEEN (((((rt0.c0))>=((rt0.c1))))) AND (((NOT (rt0.c0))))) ASC;
SELECT ALL * FROM vt1 WHERE (MIN(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END, (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), CASE WHEN vt1.c0 THEN vt1.c1 END, CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((MIN(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END, (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), CASE WHEN vt1.c0 THEN vt1.c1 END, CAST(vt1.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (MIN(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END, (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), CASE WHEN vt1.c0 THEN vt1.c1 END, CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((MIN(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END, (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), CASE WHEN vt1.c0 THEN vt1.c1 END, CAST(vt1.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (MIN(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END, (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), CASE WHEN vt1.c0 THEN vt1.c1 END, CAST(vt1.c0 AS NUMERIC)));
SELECT COUNT(*) FROM vt1, v0 WHERE (PRINTF(((v0.c0) NOTNULL))) ORDER BY x''  NULLS LAST, ((((v0.c0) NOTNULL)) NOT NULL) ASC  NULLS FIRST, LAST_INSERT_ROWID() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((PRINTF(((v0.c0) NOTNULL))) IS TRUE)  as count FROM vt1, v0 ORDER BY x''  NULLS LAST, ((((v0.c0) NOTNULL)) NOT NULL) ASC  NULLS FIRST, LAST_INSERT_ROWID() ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0 WHERE (PRINTF(((v0.c0) NOTNULL))) ORDER BY x''  NULLS LAST, ((((v0.c0) NOTNULL)) NOT NULL) ASC  NULLS FIRST, LAST_INSERT_ROWID() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((PRINTF(((v0.c0) NOTNULL))) IS TRUE)  as count FROM vt1, v0 ORDER BY x''  NULLS LAST, ((((v0.c0) NOTNULL)) NOT NULL) ASC  NULLS FIRST, LAST_INSERT_ROWID() ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0 WHERE (PRINTF(((v0.c0) NOTNULL))) ORDER BY x''  NULLS LAST, ((((v0.c0) NOTNULL)) NOT NULL) ASC  NULLS FIRST, LAST_INSERT_ROWID() ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END THEN (rt0.c1 IN ()) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (NOT (rt0.c0)) WHEN ((((rt0.c2)OR('698127418')))OR(rt0.c1)) THEN (NOT (rt0.c0)) END) ORDER BY (((rt0.c0)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END THEN (rt0.c1 IN ()) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (NOT (rt0.c0)) WHEN ((((rt0.c2)OR('698127418')))OR(rt0.c1)) THEN (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((rt0.c1) NOT NULL)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END THEN (rt0.c1 IN ()) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (NOT (rt0.c0)) WHEN ((((rt0.c2)OR('698127418')))OR(rt0.c1)) THEN (NOT (rt0.c0)) END) ORDER BY (((rt0.c0)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END THEN (rt0.c1 IN ()) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (NOT (rt0.c0)) WHEN ((((rt0.c2)OR('698127418')))OR(rt0.c1)) THEN (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((rt0.c1) NOT NULL)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END THEN (rt0.c1 IN ()) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (NOT (rt0.c0)) WHEN ((((rt0.c2)OR('698127418')))OR(rt0.c1)) THEN (NOT (rt0.c0)) END) ORDER BY (((rt0.c0)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((rt0.c1) NOT NULL))));
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0))>((((((rt0.c1)AND(NULL)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))>((((((rt0.c1)AND(NULL)))OR(rt0.c1)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0))>((((((rt0.c1)AND(NULL)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))>((((((rt0.c1)AND(NULL)))OR(rt0.c1)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0))>((((((rt0.c1)AND(NULL)))OR(rt0.c1))))));
SELECT * FROM vt1, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c1)))=(CASE WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c0 END))) ORDER BY (- (((vt1.c1) NOT BETWEEN (vt1.c1) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c1)))==(CASE WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (- (((vt1.c1) NOT BETWEEN (vt1.c1) AND (rt0.c1))))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c1)))=(CASE WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c0 END))) ORDER BY (- (((vt1.c1) NOT BETWEEN (vt1.c1) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c1)))==(CASE WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (- (((vt1.c1) NOT BETWEEN (vt1.c1) AND (rt0.c1))))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c1)))=(CASE WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c0 END))) ORDER BY (- (((vt1.c1) NOT BETWEEN (vt1.c1) AND (rt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt1, v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN v0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN v0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN v0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN v0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN v0.c0 END) IS TRUE));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON (((rt0.c0 COLLATE RTRIM))>((CAST(vt1.c0 AS INTEGER)))) CROSS JOIN vt1 ON (((((((0.8442500201493844)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(CAST(v0.c0 AS TEXT))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (((CAST(v0.c0 AS INTEGER))||(vt1.c1 COLLATE BINARY))) ORDER BY (((((- (v0.c0)))AND(((v0.c0) NOT NULL))))OR(vt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER))||(vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((rt0.c0 COLLATE RTRIM))>((CAST(vt1.c0 AS INTEGER)))) CROSS JOIN vt1 ON (((((((0.8442500201493844)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(CAST(v0.c0 AS TEXT))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ORDER BY (((((- (v0.c0)))AND(((v0.c0) NOT NULL))))OR(vt1.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON (((rt0.c0 COLLATE RTRIM))>((CAST(vt1.c0 AS INTEGER)))) CROSS JOIN vt1 ON (((((((0.8442500201493844)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(CAST(v0.c0 AS TEXT))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (((CAST(v0.c0 AS INTEGER))||(vt1.c1 COLLATE BINARY))) ORDER BY (((((- (v0.c0)))AND(((v0.c0) NOT NULL))))OR(vt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER))||(vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((rt0.c0 COLLATE RTRIM))>((CAST(vt1.c0 AS INTEGER)))) CROSS JOIN vt1 ON (((((((0.8442500201493844)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(CAST(v0.c0 AS TEXT))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ORDER BY (((((- (v0.c0)))AND(((v0.c0) NOT NULL))))OR(vt1.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON (((rt0.c0 COLLATE RTRIM))>((CAST(vt1.c0 AS INTEGER)))) CROSS JOIN vt1 ON (((((((0.8442500201493844)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(CAST(v0.c0 AS TEXT))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (((CAST(v0.c0 AS INTEGER))||(vt1.c1 COLLATE BINARY))) ORDER BY (((((- (v0.c0)))AND(((v0.c0) NOT NULL))))OR(vt1.c1))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c2) BETWEEN (CASE WHEN x'e1e3' THEN '1155474416' END) AND (((((rt0.c2)OR(183982375)))AND(rt0.c1))))) ORDER BY ((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))<(((x'')||(rt0.c1)))) DESC, ((((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR((+ (rt0.c1)))))OR((NOT (rt0.c2)))))AND(IFNULL(rt0.c2, x''))))OR(rt0.c2)), '(~r2um';
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (CASE WHEN x'e1e3' THEN '1155474416' END) AND (((((rt0.c2)OR(183982375)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))<(((x'')||(rt0.c1)))) DESC, ((((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR((+ (rt0.c1)))))OR((NOT (rt0.c2)))))AND(IFNULL(rt0.c2, x''))))OR(rt0.c2)), '(~r2um');
SELECT ALL * FROM rt0 WHERE (((rt0.c2) BETWEEN (CASE WHEN x'e1e3' THEN '1155474416' END) AND (((((rt0.c2)OR(183982375)))AND(rt0.c1))))) ORDER BY ((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))<(((x'')||(rt0.c1)))) DESC, ((((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR((+ (rt0.c1)))))OR((NOT (rt0.c2)))))AND(IFNULL(rt0.c2, x''))))OR(rt0.c2)), '(~r2um';
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (CASE WHEN x'e1e3' THEN '1155474416' END) AND (((((rt0.c2)OR(183982375)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))<(((x'')||(rt0.c1)))) DESC, ((((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR((+ (rt0.c1)))))OR((NOT (rt0.c2)))))AND(IFNULL(rt0.c2, x''))))OR(rt0.c2)), '(~r2um');
SELECT ALL * FROM rt0 WHERE (((rt0.c2) BETWEEN (CASE WHEN x'e1e3' THEN '1155474416' END) AND (((((rt0.c2)OR(183982375)))AND(rt0.c1))))) ORDER BY ((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))<(((x'')||(rt0.c1)))) DESC, ((((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR((+ (rt0.c1)))))OR((NOT (rt0.c2)))))AND(IFNULL(rt0.c2, x''))))OR(rt0.c2)), '(~r2um';
SELECT * FROM v0, vt1 WHERE (((LOWER(vt1.c0)) NOT BETWEEN (((vt1.c1)<=(vt1.c1))) AND (NULLIF(DISTINCT v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt1.c0)) NOT BETWEEN (((vt1.c1)<=(vt1.c1))) AND (NULLIF(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (((LOWER(vt1.c0)) NOT BETWEEN (((vt1.c1)<=(vt1.c1))) AND (NULLIF(DISTINCT v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt1.c0)) NOT BETWEEN (((vt1.c1)<=(vt1.c1))) AND (NULLIF(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (((LOWER(vt1.c0)) NOT BETWEEN (((vt1.c1)<=(vt1.c1))) AND (NULLIF(DISTINCT v0.c0, v0.c0))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON (((((rt0.c1, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c1, vt1.c1)))) NOTNULL) WHERE (((((rt0.c0)GLOB(vt1.c0))) NOT BETWEEN ((+ (rt0.c1))) AND (vt1.c0))) ORDER BY (NOT (((((((((vt1.c0)AND('i>')))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)GLOB(vt1.c0))) NOT BETWEEN ((+ (rt0.c1))) AND (vt1.c0))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((((rt0.c1, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c1, vt1.c1)))) NOTNULL) ORDER BY (NOT (((((((((vt1.c0)AND('i>')))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c1)))) DESC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON (((((rt0.c1, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c1, vt1.c1)))) NOTNULL) WHERE (((((rt0.c0)GLOB(vt1.c0))) NOT BETWEEN ((+ (rt0.c1))) AND (vt1.c0))) ORDER BY (NOT (((((((((vt1.c0)AND('i>')))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)GLOB(vt1.c0))) NOT BETWEEN ((+ (rt0.c1))) AND (vt1.c0))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((((rt0.c1, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c1, vt1.c1)))) NOTNULL) ORDER BY (NOT (((((((((vt1.c0)AND('i>')))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c1)))) DESC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON (((((rt0.c1, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c1, vt1.c1)))) NOTNULL) WHERE (((((rt0.c0)GLOB(vt1.c0))) NOT BETWEEN ((+ (rt0.c1))) AND (vt1.c0))) ORDER BY (NOT (((((((((vt1.c0)AND('i>')))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c1)))) DESC;
SELECT * FROM v0, rt0, vt1 WHERE (((((v0.c0)==(rt0.c0)))%((((v0.c0)) NOT BETWEEN ((0X616c5d03)) AND ((rt0.c1)))))) ORDER BY (((((vt1.c1)==(vt1.c1))))<(((rt0.c2 IN ())))) DESC  NULLS LAST, vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(rt0.c0)))%((((v0.c0)) NOT BETWEEN ((0X616c5d03)) AND ((rt0.c1)))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt1 ORDER BY (((((vt1.c1)==(vt1.c1))))<(((rt0.c2 IN ())))) DESC  NULLS LAST, vt1.c0 DESC  NULLS FIRST);
SELECT * FROM v0, rt0, vt1 WHERE (((((v0.c0)==(rt0.c0)))%((((v0.c0)) NOT BETWEEN ((0X616c5d03)) AND ((rt0.c1)))))) ORDER BY (((((vt1.c1)==(vt1.c1))))<(((rt0.c2 IN ())))) DESC  NULLS LAST, vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(rt0.c0)))%((((v0.c0)) NOT BETWEEN ((0X616c5d03)) AND ((rt0.c1)))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt1 ORDER BY (((((vt1.c1)==(vt1.c1))))<(((rt0.c2 IN ())))) DESC  NULLS LAST, vt1.c0 DESC  NULLS FIRST);
SELECT * FROM v0, rt0, vt1 WHERE (((((v0.c0)==(rt0.c0)))%((((v0.c0)) NOT BETWEEN ((0X616c5d03)) AND ((rt0.c1)))))) ORDER BY (((((vt1.c1)==(vt1.c1))))<(((rt0.c2 IN ())))) DESC  NULLS LAST, vt1.c0 DESC  NULLS FIRST;
SELECT * FROM v0, vt1 FULL OUTER JOIN rt0 ON (((((((((((((~ (vt1.c1)))OR((vt1.c0 IN (0.6388537443788154)))))OR(((rt0.c1)AND(rt0.c0)))))OR(NULL)))OR((((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))AND(((rt0.c2) IS TRUE))))OR(((rt0.c2) BETWEEN (v0.c0) AND (vt1.c0)))) WHERE (((x'')-(-1023916777)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')-(-1023916777))) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN rt0 ON (((((((((((((~ (vt1.c1)))OR((vt1.c0 IN (0.6388537443788154)))))OR(((rt0.c1)AND(rt0.c0)))))OR(NULL)))OR((((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))AND(((rt0.c2) IS TRUE))))OR(((rt0.c2) BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT * FROM v0, vt1 FULL OUTER JOIN rt0 ON (((((((((((((~ (vt1.c1)))OR((vt1.c0 IN (0.6388537443788154)))))OR(((rt0.c1)AND(rt0.c0)))))OR(NULL)))OR((((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))AND(((rt0.c2) IS TRUE))))OR(((rt0.c2) BETWEEN (v0.c0) AND (vt1.c0)))) WHERE (((x'')-(-1023916777)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')-(-1023916777))) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN rt0 ON (((((((((((((~ (vt1.c1)))OR((vt1.c0 IN (0.6388537443788154)))))OR(((rt0.c1)AND(rt0.c0)))))OR(NULL)))OR((((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))AND(((rt0.c2) IS TRUE))))OR(((rt0.c2) BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT * FROM v0, vt1 FULL OUTER JOIN rt0 ON (((((((((((((~ (vt1.c1)))OR((vt1.c0 IN (0.6388537443788154)))))OR(((rt0.c1)AND(rt0.c0)))))OR(NULL)))OR((((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))AND(((rt0.c2) IS TRUE))))OR(((rt0.c2) BETWEEN (v0.c0) AND (vt1.c0)))) WHERE (((x'')-(-1023916777)));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS REAL)) BETWEEN ((vt1.c1 IN ())) AND (TYPEOF(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL)) BETWEEN ((vt1.c1 IN ())) AND (TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS REAL)) BETWEEN ((vt1.c1 IN ())) AND (TYPEOF(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL)) BETWEEN ((vt1.c1 IN ())) AND (TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS REAL)) BETWEEN ((vt1.c1 IN ())) AND (TYPEOF(vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))) NOTNULL)) ORDER BY json_type(vt1.c0) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY json_type(vt1.c0) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))) NOTNULL)) ORDER BY json_type(vt1.c0) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY json_type(vt1.c0) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))) NOTNULL)) ORDER BY json_type(vt1.c0) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((vt1.c0) NOT NULL) RIGHT OUTER JOIN vt1 ON ((vt1.c1 COLLATE RTRIM) NOT BETWEEN (((v0.c0)!=(x''))) AND (((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)))) WHERE ((((30663318 IN (rt0.c2))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) AND (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((30663318 IN (rt0.c2))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) AND (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((vt1.c0) NOT NULL) RIGHT OUTER JOIN vt1 ON ((vt1.c1 COLLATE RTRIM) NOT BETWEEN (((v0.c0)!=(x''))) AND (((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((vt1.c0) NOT NULL) RIGHT OUTER JOIN vt1 ON ((vt1.c1 COLLATE RTRIM) NOT BETWEEN (((v0.c0)!=(x''))) AND (((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)))) WHERE ((((30663318 IN (rt0.c2))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) AND (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((30663318 IN (rt0.c2))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) AND (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((vt1.c0) NOT NULL) RIGHT OUTER JOIN vt1 ON ((vt1.c1 COLLATE RTRIM) NOT BETWEEN (((v0.c0)!=(x''))) AND (((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)))));
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))OR(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))OR(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))OR(((v0.c0) NOTNULL))));
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c1) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c1) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c1) NOTNULL) COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (((DATE(v0.c0, v0.c0, v0.c0))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((DATE(v0.c0, v0.c0, v0.c0))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((DATE(v0.c0, v0.c0, v0.c0))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((DATE(v0.c0, v0.c0, v0.c0))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((DATE(v0.c0, v0.c0, v0.c0))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))))));
SELECT ALL * FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (((((((((((((((((v0.c0)OR(((v0.c0)<('1345806387')))))AND(vt1.c1)))AND((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))))OR(CAST(rt0.c0 AS REAL))))AND(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2)%(rt0.c2)))))AND((vt1.c1 IN ())))) ORDER BY ((((((((CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END)AND(((rt0.c0) IS TRUE))))OR((rt0.c2 IN (rt0.c1, vt1.c1, rt0.c2)))))AND((NOT (-103870850)))))AND((NOT (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((v0.c0)OR(((v0.c0)<('1345806387')))))AND(vt1.c1)))AND((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))))OR(CAST(rt0.c0 AS REAL))))AND(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2)%(rt0.c2)))))AND((vt1.c1 IN ())))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((((((((CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END)AND(((rt0.c0) IS TRUE))))OR((rt0.c2 IN (rt0.c1, vt1.c1, rt0.c2)))))AND((NOT (-103870850)))))AND((NOT (vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (((((((((((((((((v0.c0)OR(((v0.c0)<('1345806387')))))AND(vt1.c1)))AND((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))))OR(CAST(rt0.c0 AS REAL))))AND(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2)%(rt0.c2)))))AND((vt1.c1 IN ())))) ORDER BY ((((((((CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END)AND(((rt0.c0) IS TRUE))))OR((rt0.c2 IN (rt0.c1, vt1.c1, rt0.c2)))))AND((NOT (-103870850)))))AND((NOT (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((v0.c0)OR(((v0.c0)<('1345806387')))))AND(vt1.c1)))AND((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))))OR(CAST(rt0.c0 AS REAL))))AND(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2)%(rt0.c2)))))AND((vt1.c1 IN ())))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((((((((CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END)AND(((rt0.c0) IS TRUE))))OR((rt0.c2 IN (rt0.c1, vt1.c1, rt0.c2)))))AND((NOT (-103870850)))))AND((NOT (vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (((((((((((((((((v0.c0)OR(((v0.c0)<('1345806387')))))AND(vt1.c1)))AND((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))))OR(CAST(rt0.c0 AS REAL))))AND(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2)%(rt0.c2)))))AND((vt1.c1 IN ())))) ORDER BY ((((((((CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END)AND(((rt0.c0) IS TRUE))))OR((rt0.c2 IN (rt0.c1, vt1.c1, rt0.c2)))))AND((NOT (-103870850)))))AND((NOT (vt1.c0)))) ASC;
