-- Time: 2024/06/09 20:20:44
-- Database: database1
-- Database version: 3.40.0
-- seed value: 2404518201
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=('3hDC') WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-1619423419' ELSE vt1.c0 END)<<(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)); -- 1ms;
UPDATE OR ABORT vt0 SET (c0)=(x'fc2f'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
PRAGMA optimize; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0)<=(vt0.c0)) THEN ((x'') NOT NULL) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.44934538345832054)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END; -- 2ms;
UPDATE vt1 SET (c0)=(NULL) WHERE (~ (JULIANDAY(vt1.c0, vt1.c0, vt1.c0))); -- 0ms;
UPDATE OR FAIL vt0 SET (c0, c0, c0)=(0xffffffff98f4d2ca, '0.44934538345832054', 0.010309146706501626) WHERE ((vt0.c0)||((((vt0.c0, '-1619423419', vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL; -- 0ms;
PRAGMA temp.locking_mode; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('777383529'))!=((''))))!=(json_array(x'', 'Z'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'3a40') BETWEEN (CASE WHEN 0.22673166157234914 THEN NULL ELSE 0.5839494792270018 END) AND ((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.19610740453902886) NOT NULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1470338932 sz=-1470338932 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0Xffffffffa85c688c AS INTEGER) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1470338932' AS NUMERIC))LIKE(('' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-337851579 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-337851579 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-181203691'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 0.9571896042367389 THEN NULL ELSE 0.09310771297536602 END)-((((((((('-181203691')AND(0.6197531047222853)))AND(0.6569656610718286)))OR(NULL)))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-56693086 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1728785718 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-2064382989 sz=488471071 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '938421489'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-2133919841 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '749238635 sz=1429320333 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-245688995'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM)<=((((1684289123)) BETWEEN ((x'aa58')) AND ((x''))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-86768180 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1706980137 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '4 0 sz=-56693086 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1149572233 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-627247393 AS INTEGER))LIKE(((x'4be6')IS NOT(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) IS FALSE) THEN (+ ('-1368135043')) WHEN CAST(0.20033110818476807 AS REAL) THEN ((666892434)GLOB('3hDC')) WHEN (('1429320333') NOT NULL) THEN (('') ISNULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT (('528997075')&(0Xffffffff8c1210ee))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER('1429320333'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-627247393 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(((NULL)+(5.28997075E8)), ((x'002c') IS FALSE), CAST(-2108227407 AS NUMERIC), (((0x5b8060a8))!=((0.5417910049905124))), ((NULL) BETWEEN ('-86768180') AND (x'8b7f'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.02848608679324882 THEN (((('1447278543')OR(NULL)))AND(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-349994487 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')<(x'')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1729692822 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1619423419 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((0Xfffffffff953b171) BETWEEN (0.8760279181725253) AND (-2133919841)))) AND ((((0.20033110818476807) NOT BETWEEN (NULL) AND ('-111955599'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2030570577'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((x'2bb9' IN (0Xffffffffe00c5952)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1757095847 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'', x'74ec', NULL)) NOT BETWEEN (('3h''C', NULL, '-1368135043')) AND ((NULL, 0.4189019055007147, 0.5417910049905124))) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN -1.424431592E9 THEN '3hDC' END)*(CASE x''  WHEN x'8d19' THEN 0Xffffffffeddbff7d ELSE -6.27247393E8 END)); -- 2ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN NULL THEN 0.6197531047222853 ELSE 831001362 END, (((('98086635')AND(x'')))OR(x'')), ((x'') NOT BETWEEN (NULL) AND ('1149428413'))))>=((0.9998614355002222, (('-181203691') ISNULL), ((('-1619423419', '_|2l', 'eYxE'))<>(('270968529', '''錄Z', '128021675')))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '335185327'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=191344047 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-1728785718 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-621854126'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)OR(0.31459429146754014)))AND('')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('88707979'))>=((0.26955603466902844))) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '898204662'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0x7377e862)OR(x'')))AND(335185327)))OR((+ (x'eee7')))))OR(((0.7785947623530319)GLOB('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1434570435 sz=898204662 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1944973074'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1225543971'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1447278543 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=191344047 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=808726530 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(x'' AS TEXT) THEN CASE 1684289123  WHEN -1382983099 THEN 3.35185327E8 END END; -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-806579114 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((((((('25674345')OR(x'')))AND(NULL)))AND(1.535140008E9)))AND(0x3bcf13f6)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 0 sz=191344047 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=831001362'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') IS FALSE) THEN ((x'') NOT BETWEEN (NULL) AND (x'2cb362cd')) WHEN (('560410569') NOT BETWEEN ('') AND ('nky?h/ጒ')) THEN -2.108227407E9 COLLATE RTRIM WHEN x'' THEN CASE NULL  WHEN 0x6bbe1718 THEN 0.9051548699269055 WHEN '' THEN '-1253792775' WHEN x'' THEN '749238635' ELSE x'' END END; -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('')OR(0.8778820956898741)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '291234856 sz=1154177458'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=98086635'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.04872042764934903 AS NUMERIC)) NOT BETWEEN (CAST(NULL AS REAL)) AND (COALESCE(DISTINCT x'd226', -2035483461))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1734478019 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT (('5z	|꬘uW')>>(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1036802462 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=882314015'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0.6669610446450717 THEN '' ELSE 'ꏹU1R' END)AND(x'943a' COLLATE NOCASE)))OR((~ (NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((0.936224305754215) ISNULL), ((NULL)!=(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'6f9c') BETWEEN ('-1706980137') AND ('0.31459429146754014')))+(212379931 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2058397448 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=2113066632'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ()))GLOB((((0x6bbe1718)) BETWEEN (('')) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '749238635'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('e4\r牜}Ev')-(((('1003426806', '966070974', -1372343405)) NOT BETWEEN ((-270012180, NULL, 'a0')) AND ((0.5014178168498981, 0.5854995805964905, 0.4560282354899875))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1201110710'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-813847651 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-30120105 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1402146602'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1036802462 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.132597465033654; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 5727014 -2044347674 sz=510525888 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS NUMERIC))<((('')>('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1429320333 0 sz=-806579114 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1635640860 sz=1757095847 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1807619864 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT ((((NULL)AND('')))OR(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '808726530 2 sz=1447278543 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=528997075'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1757095847 sz=98086635 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-985929751 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1938691913 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) IS FALSE))AND((((0Xffffffff8fca09a7))>=((0Xfffffffffad405cc))))))AND(CAST(NULL AS TEXT))))AND(NULL COLLATE RTRIM)))OR((((x'', 0Xffffffffbfc7ff2b, '&Crpsv')) BETWEEN (('NKY?H/ጒ', 0xffffffffcfec9456, '-985929751')) AND ((NULL, 1.434570435E9, 'eYxE'))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-2064382989 0 sz=-1363773852 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1406166406 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-270012180 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.5014178168498981 IN ()) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(((0.39028869915155684)*('^ﲻH|En-T/'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1734478019 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-994285921 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((1415915498))=((x''))) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(x'' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2117479857'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=938421489 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1515797195 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ''  WHEN 0Xffffffffefe11f1c THEN 'n' WHEN x'' THEN NULL WHEN 0.5279349817225778 THEN '1535140008' ELSE NULL END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-494543751'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=676285992 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=80494436 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-189587414 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=352812652 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1099843133'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1214608237 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(0X6e343d26 AS INTEGER)))=((0X5ff7dd8d COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 1447278543'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'' COLLATE NOCASE  WHEN ((0xffffffff9f798f45) NOTNULL) THEN (~ (224368254)) ELSE (~ ('966070974')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0Xffffffffcaf4e912 AS NUMERIC))*(((NULL) BETWEEN (x'') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1413374983' IN ()))*(((0.34244669537758765)&('g9')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-111955599 0 sz=-1938072506 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=25674345'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.17270680481628975 IN ('-1709169163', 0X6c8fab7a))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((0.1465411379945858)) AND ((4.88471071E8))))/(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 -2015658514 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=828105209 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1172204760 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 294106961 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('808726530' IN (NULL)))>=(('梌?K' IN ('-813847651', NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(0.5014178168498981 AS REAL) THEN ((x'')>(NULL)) WHEN CAST(NULL AS REAL) THEN CASE x''  WHEN x'' THEN '' ELSE NULL END WHEN 0xffffffff86819da6 THEN ((((0.36600119922963503)AND('/f[e\')))AND('0.6669610446450717')) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((('Cs7?R]迬&')OR('')))OR('MgL!tj')))AND('*/p&')))AND('TRUE')))AND(-2062559232)))OR(x'85ae'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS REAL)  WHEN CASE x''  WHEN NULL THEN x'' WHEN x'' THEN 'PVvDbC' WHEN 9.66070974E8 THEN x'' ELSE 'MgDNC' END THEN ((NULL) NOT BETWEEN (x'') AND ('njO	b')) ELSE (('j% [A}i2.')>>(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('<#ZY')AND(x'')))OR(',(')))OR(0Xffffffffc79e9987)))AND(-1113947198)))&(TRIM(0.6273658367769739))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'')|(0x1)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-994285921 0 sz=-418907640 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-2013194783 sz=1030188219 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'cd6f'))=((''))))OR((0.4728049805849637 IN ()))))AND(((NULL) NOT BETWEEN ('') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-526626942 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=745640708 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=504218667 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '379201846 1248523984 sz=-189587414'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2117479857 sz=-245688995'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(TRIM(NULL, 0xffffffffb86827f3)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=139083972 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=715328711'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(((NULL)=(NULL)), ((NULL) BETWEEN ('-') AND ('x\n{^'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '4 sz=744789945'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=128021675 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2108227407 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-521895667)) BETWEEN ((NULL)) AND (('988664238'))) IN (CAST('1483856848' AS TEXT), ((NULL)-(0.11677765235083404)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN (('d>')/('d>')) WHEN '-2004458275' COLLATE NOCASE THEN (+ (NULL)) WHEN CASE WHEN 0.39028869915155684 THEN 777383529 END THEN (('') ISNULL) ELSE (NOT (0.5702049550895026)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')==('1684289123')) COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-2044347674'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') NOTNULL)  WHEN (((('{3')AND(NULL)))AND('')) THEN (+ ('-1036802462')) ELSE CASE WHEN '799202190' THEN -8.676818E7 END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=2003808810 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(0.6389292679079176))==(((('2030570577'))<=((0Xffffffffb79a8c93))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-755745510'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2046232328 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=49065 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=831001362 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL)) BETWEEN (((((((((NULL)AND('-1755070486')))AND('{3')))AND('sደcQQ3J4')))OR(''))) AND (((NULL)>>(0.3429816096408923)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((('')<(x'')), LIKELIHOOD(DISTINCT '_|2l', 0.1312914364468457)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) ISNULL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (CASE 0.8536524175866274  WHEN '-1470338932' THEN 0Xffffffffe77682ff END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1099843133 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-2127834420 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1390285276 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=270968529 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1729692822 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1536459917 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1155964487)%('-839993070')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN ('[7''<\n~胚') AND (0.038153418512427484))) BETWEEN (((('5z	|꬘uw')) BETWEEN ((x'1f50a4e4')) AND (('-471492184')))) AND (LIKELY(DISTINCT '1684289123'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-30120105 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '726483275 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN '-1470338932' WHEN NULL THEN 0.9571896042367389 WHEN -2044347674 THEN 0.3072511998549855 ELSE 0.5493556799263879 END) BETWEEN (rtreenode(0Xffffffff9d6a7bcf, NULL)) AND (x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-892419031 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1543862826 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1793663971 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1580303761 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.22673166157234914 COLLATE RTRIM AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1706980137 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOT BETWEEN (0.7403034306072) AND (NULL)))AND((- (NULL)))))OR((('-1298892002')&('1149572233')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'57c3')AND(((((-3.37851579E8)AND(NULL)))AND(x'')))))OR((('1610079629')%(0.09310771297536602)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=146142185'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1043987096 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-983153408 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1438060751'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1315906961 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-589960148 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-260706737 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((UPPER('~)?*'))AND((('898204662') BETWEEN (x'') AND (NULL)))))OR((NOT (-982611617)))))OR(('''錄z' IN ()))))AND(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=488471071 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' AS NUMERIC) COLLATE BINARY COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4875638087080614) IS TRUE))>(UPPER(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1402146602 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=128021675'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN 0.19939955274170218 THEN ((x'') NOTNULL) WHEN ('2093580778' IN ()) THEN STRFTIME(0.6441374599009598, x'', NULL) WHEN x'' COLLATE RTRIM THEN ((0.7396847871182968) NOTNULL) ELSE ((((-1469845506)OR(NULL)))AND('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5454007717557218; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1466278019 25674345 sz=-1928269926 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1368135043 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('XE¨x')AND('0.04872042764934903')))AND(x'')))OR(NULL)))AND('1003426806')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-611758257 sz=-2021047781'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 sz=-724809834 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) BETWEEN ((('0.7396847871182968')>>('p?)*IjI'))) AND (CASE NULL  WHEN '5z	|꬘uw' THEN 0.9798629385908841 ELSE 0x5b8060a8 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1679646270 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-633263725 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')OR(-2133919841)))OR(x'')) IN (x'a0ae' COLLATE RTRIM, (~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT ((('', x'4366', '25674345')) NOT BETWEEN ((x'1715', x'', x'')) AND ((NULL, NULL, x'daa4')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-263943376'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1187455454'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1466940498 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-853758863 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 -1706980137 sz=2117479857 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-371330043'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1900699964 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 1710170155 sz=5727014 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 -1621755684 sz=1717352163 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1017858519'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1882584665 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1662573014 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=697782893'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-939310583 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2058397448 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-708314005'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 510525888 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 sz=1656939840'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-86768180 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=291234856 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-705280046 sz=-1099843133 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-655898271 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=191344047 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 0 sz=1549300667 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=399420460 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((IFNULL(2.5674345E7, 'l\\ϳ*6'))) AND (((NULL IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1385023675 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN '1848917286' THEN 0X14cff24a END))>(((((x'', x'1199', x'')) NOT BETWEEN ((-30177720, 1434570435, '')) AND ((x'', '0.132597465033654', 0.8175743996729922)))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 6.66892434E8; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.9650580662704026)<>(0Xffffffffcaf4e912)) AS INTEGER); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((0.4715249593870483 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-460069312 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT (('') NOTNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '梌?K'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1055789106 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-2035483461'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '573372401 sz=25674345'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1482941401 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) BETWEEN (((x'') BETWEEN (NULL) AND (NULL))) AND (CASE WHEN x'' THEN NULL ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1702757608 sz=-1582408812 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-806579114 AS BLOB))<<((('1645621554')AND(0.07164953722859257)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9998614355002222 IN (0.4598731839878144, x'8157')))*((NOT (0.3885076649785938)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=755409298 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=808726530 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-994285921 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.9658492087225579) IS TRUE))); -- 2ms;
DELETE FROM sqlite_stat1 WHERE (((('p')||('膃l훠Kxdf%杗'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-477695873'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1970655220 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=1039539301 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.38440269292898055) NOT BETWEEN (NULL) AND ('0.9998614355002222'))) BETWEEN (NULL) AND (((((((((x'63d8')OR(0.14348029476141044)))AND(0xffffffff88ef6735)))OR(NULL)))AND(0Xffffffffaef1f2a4)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY(((0.6738494539047383) NOTNULL), CASE NULL  WHEN 1.154177458E9 THEN x'' WHEN 1845172817 THEN NULL WHEN '1400951412' THEN x'' ELSE 0.7657918961107109 END, (('-2108227407')||('#'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1728785718 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1376346637 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-2108227407 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(x'47ef')) NOT NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1075126739 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (x'') AND ('-2032473006'))) NOT BETWEEN ((('564689974') NOT BETWEEN (x'407c') AND (x'f924'))) AND (((0.1039984049123347)OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-18679096 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-2027566257 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((MAX(NULL, x'', x'', 0.5372763941820586))OR(((((0.8462071339219821)OR('0.6569656610718286')))OR(NULL)))))AND(CAST(-3.49994487E8 AS NUMERIC))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1854708032 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(CASE WHEN 0.7947349724986712 THEN '1987053275' END, CAST(NULL AS NUMERIC)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1476242134 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1843912141 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('rU') NOT BETWEEN (NULL) AND (NULL))))<((x'' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT TRIM(DISTINCT 0xffffffff8c71e8b7)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOT BETWEEN (1.674809787246545E-4) AND (0.5818769894319348)))AND((- (0.3606795726937988)))))AND(CAST(NULL AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (x'5ca2')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1668794583 sz=250991758 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (((x'') IS FALSE)) AND (UNLIKELY(-1.89587414E8))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE)/(x'5360')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=339990098 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '745640708 sz=-1424431592'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(x'')) NOT BETWEEN ((NOT (0.7763672925692449))) AND (NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN NULL ELSE '-1402146602' END) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND(CASE WHEN 1.848917286E9 THEN NULL END, ((((x'5f4cd126')AND(x'')))AND(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '528997075 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5320234684589593)) BETWEEN (('摳굓7a%+-')) AND (((('') NOT BETWEEN ('-813847651') AND ('800492917'))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.9181469586346205 AS REAL))<>(((((((((NULL)OR('666892434')))OR(x'cd68')))OR(0x34970b1f)))OR(x'1a00')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=560410569 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1727160689 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 -671993590 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(CAST(-2107156714 AS INTEGER), (- (1.91344047E8))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1842599591 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('3fk') NOT BETWEEN (NULL) AND (0.9181469586346205)) COLLATE BINARY COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-222784477'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 sz=1014071351'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1527433954 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0Xffffffffa85c688c)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-448544444 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '>i'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('jtyk뜹' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN NULL THEN x'' ELSE NULL END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(NULL AS INTEGER) THEN CAST('' AS INTEGER) ELSE ((x'')OR(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'45fa', '', '狐e', '-1e500', x'')) NOT BETWEEN ((0xffffffff82446054, x'', x'fe07', '0.8778820956898741', 0.03774378653157062)) AND ((1099931912, x'8fdc', '2E薯㍴iZPu', 0.17270680481628975, -30120105))) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD('270968529', 0.9489690625549696)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=591283811 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X413e7669; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL))) NOT BETWEEN (((0.30611711061381797)GLOB(0.6217660097819034))) AND (COALESCE(NULL, 0.9513416057544238))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((3.35185327E8)) NOT BETWEEN ((x'')) AND ((352812652))) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(CASE 8.98204662E8  WHEN 1054634588 THEN NULL ELSE x'' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1750136739'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=283221984 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('㘷f4' IN (NULL)))AND(CAST(x'' AS TEXT))))AND((('{3') NOT NULL))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('2E') AND (0.432524434975584)))>=(LIKELIHOOD('191344047', 0.6073195477381417))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1829675682 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.1525575104202358 IN ()))AND(CAST(NULL AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL COLLATE RTRIM)AND(MIN(-2.108227407E9, '-2055515062'))))AND(CAST('' AS INTEGER))))OR(LENGTH('0.4560282354899875'))))OR((NULL IN (0.8832585101971142)))); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(-2.035483461E9 AS NUMERIC) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-2000314856'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1384999112 sz=-43168478 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN 913315561 THEN '' ELSE 0X3227f2dc END AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TRIM(DISTINCT 0.19939955274170218, 0.20346997236811337) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(x'1260a4df' AS BLOB))OR(0.26955603466902844)))OR(('2117479857' IN ()))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'8927' COLLATE NOCASE)==(('855680641' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-891646884 sz=-1779517494 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x3edc725c COLLATE BINARY)%(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1938691913 sz=-973105341'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 -1618736805 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))IS(CASE WHEN NULL THEN x'422d' ELSE 0.9058808596975532 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (0.6217660097819034 IN (NULL))  WHEN (('<k。^')>=(-985929751)) THEN (('#S') BETWEEN (-986195629) AND (1.447278543E9)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('212379931')<=(0.990330564609361)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-304349315'  WHEN NULL THEN 0.9650580662704026 END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.729692822E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=352812652 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'05b2' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.2744418931648188) ISNULL)) BETWEEN ((((0.773071487949783))>=((1.515797195E9)))) AND (PRINTF(0.04872042764934903))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 637296823  WHEN '-305881624' THEN NULL ELSE x'' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((388134960)) NOT BETWEEN (((('q&TE7v') NOT BETWEEN (NULL) AND (NULL)))) AND ((((x'') IS TRUE)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Kŉ0W<\r', 0.34439292256506726, '0.3072511998549855')) NOT BETWEEN (((NOT ('')), ((x'5e2ef6c1') NOT BETWEEN (NULL) AND ('[+')), CAST(0.8286879607419133 AS NUMERIC))) AND ((((('2117479857')) NOT BETWEEN ((0.43851196938814363)) AND ((NULL))), ((NULL)||(NULL)), ((x'') NOT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR(x'5f53')))AND(x''))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffff9cdd7cb5; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1860931431 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-110676647 -1177762200 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT))<<((('\n}[DP*VKd')&(x'7e61')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1589095206'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7871228656355451))<=(('-1714823814'))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.22172379100079875 COLLATE RTRIM THEN CASE '1937238114'  WHEN NULL THEN NULL ELSE 0.3514482756831969 END ELSE ((x'') BETWEEN (x'') AND ('1412354278')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 1072068391 sz=1447278543 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=749238635'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.8990154306538171)-(NULL)) IN ((('-245688995')<=(0.973168216223705)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)IS NOT(0.6879256169871082)))OR((((''))<=(('-1728654653'))))))OR(('hT' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('1415915498')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=507086850 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-470321364'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.4927168530004016)AND('V*''^6ὛW-5')))OR('1445476387'))) BETWEEN ((((-2022325199, NULL, 0xffffffff9e29be31))>=((x'', x'', 0.6429482017000935)))) AND ((((NULL))<=(('n){<'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1502451577 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LENGTH(x'') AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((x'')OR('-1253792775')))OR('%Dcw^j<]w')))AND(0.8750964155648002)))OR(0.9782742398459469))  WHEN 2.117479857E9 COLLATE RTRIM THEN ((x'5b21496e')LIKE('')) WHEN (('') NOT BETWEEN ('A蜍') AND (x'8d58')) THEN (NULL IN (0.9422473917200899)) WHEN x'' COLLATE RTRIM THEN (('-1070298520')<(-1.938691913E9)) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE '181530481' COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(0X1026a6d1, NULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-970242367 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffb544a3f9)/(((x'c0ac')IS NOT(0X6b206113)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1705204962 0 sz=-1253792775'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1111996665'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.8778820956898741 THEN x'' ELSE 0.028475065615767736 END) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('' AS REAL) AS REAL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1406166406') NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-851689841'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 sz=-1253792775'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1901041292 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1059930955 sz=5727014 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATETIME(((x'')<=(0.24439379599108124)), (+ (NULL)), (4.88471071E8 IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '551904067 sz=1011455596 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-766667168 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'', 'm9', 0.4598731839878144)) NOT BETWEEN ((NULL, x'', '')) AND (('-1077412053', '', NULL))))AND(0.132597465033654)))AND((NULL IN ()))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE ''  WHEN x'' THEN x'' END  WHEN (('-1077412053')!=('-245688995')) THEN x'54af' COLLATE NOCASE WHEN (('''eIE')LIKE('1154177458')) THEN TYPEOF(x'') WHEN CASE 0.17358289483148082  WHEN '-890967402' THEN x'' WHEN '-349994487' THEN '0.6669610446450717' WHEN '898204662' THEN 0Xffffffffebdccb45 END THEN LIKELIHOOD('1429320333', 0.5517794693429194) WHEN (('0.9181469586346205')OR('Et&H_')) THEN ((x'')>('')) WHEN (((0.5552233850209493)) NOT BETWEEN ((0.8778820956898741)) AND ((x''))) THEN CASE WHEN NULL THEN NULL END ELSE CASE WHEN NULL THEN NULL WHEN '0.5279349817225778' THEN NULL WHEN x'81b5' THEN '' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-985504096 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1706980137; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.6828798253055121)>=(0x60a1aa54))  WHEN ((x'076b3d78') ISNULL) THEN ((((((((NULL)AND('-2113220631')))OR(NULL)))AND(NULL)))OR(-9.94285921E8)) ELSE CAST(x'fd6a' AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1372343405 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('-1547789153' IN ()) AS BLOB); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=1908836865'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1201110710; -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE BINARY THEN (('-') NOT NULL) ELSE ((NULL)==(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-621854126 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('')==(x''))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-416767847 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=231259939 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1686983590'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN x'' COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1214608237'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-557846799 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((''))<=(('1532302472'))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=191344047'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT BETWEEN ('488471071') AND (0.7657918961107109)))OR(CAST('vOx Fb' AS TEXT))))AND(((NULL) BETWEEN ('~g[w') AND ('1e500')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1860270622 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1715589756'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-111955599 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'')))>=((('')>=(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('3MAS' COLLATE BINARY) BETWEEN (x'') AND (((NULL)||('턢я\')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-496026945'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-889919214 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1515797195 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '840113477 sz=-1847876367 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1944973074 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1131262608 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0x2e55ee69)) BETWEEN ((0.32186814717242396)) AND (('385353563'))))+(CAST(-2058397448 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('Hl&	|t')>>(((NULL)<>(0.4232159854306631)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 989761827 sz=1311753173 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-2121484907 -381434846 sz=2030570577 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1596116267 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '931883854 2 sz=1556718167'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1136963945 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('Rrcr7NF' COLLATE RTRIM) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('0.2744418931648188')OR(x'')))AND(NULL))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 sz=-13106823'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'13a7'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=850005177 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.26955603466902844; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=-1382983099 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=1025611164'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1470338932 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS NUMERIC) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((2.5674345E7, x'5bea', ''))<=((-1099843133, '4A', x'')))  WHEN CAST(x'' AS TEXT) THEN (+ (NULL)) ELSE ((('-1281653847', x'', x''))==((0.5206270847330358, x'', 0.5595658299913383))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (NULL) AND (x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=510525888 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2035483461 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS TRUE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=352812652 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)GLOB(NULL)))IS((((0.43636339073091357)) NOT BETWEEN ((NULL)) AND ((''))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'')))IS(CAST(x'263e' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-349994487 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-862912884 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=2003546286'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(DISTINCT NULL))LIKE(CASE WHEN x'' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=692648608 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=233721511 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1363773852'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1003426806 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffff8fab217b)<('')))IS((((((((('352812652')AND(NULL)))AND('D%쭅75BdA')))OR(x'')))OR('j% [A}i2.')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<((0.39028869915155684))))|(CASE WHEN 0.46601115079097566 THEN '-2036390507' WHEN NULL THEN '!,sf>瞾#v' WHEN x'8fd9' THEN 'mZ' ELSE 1.807619864E9 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length((('1412199862')>(0.9462528294150522)), 0.1187758592929189 COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9690367485648143) ISNULL))AND((NOT (0.2089420060818109)))))OR((('%]m]t▲i!-') BETWEEN (0.16266526545901494) AND (-2.044347674E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1604420828'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOTNULL))OR(((NULL) IS TRUE))))OR((('0.9422473917200899') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'd5af')%('1605193548'))  WHEN ((x'') IS FALSE) THEN (-3.49994487E8 IN (0.9438159543143626, '')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'86664701' COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '2%'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)LIKE(NULL)) IN ((- (0Xfffffffff96a870c)), LAST_INSERT_ROWID())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '5727014 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS TEXT))>=(-1155406811)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=808726530 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1771664574 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=1469789224 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1535140008 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0.5366955871981582)) BETWEEN ((-2.108227407E9)) AND ((-806579114))) THEN (0.1578003885810325 IN ()) WHEN ((NULL)==(NULL)) THEN (((-1456510391, NULL, x''))<>(('-349994487', '-111955599', x'e74a'))) WHEN ((0.06877090007039921) IS FALSE) THEN (((((((('KʼN0W<\r')AND(x'')))AND(NULL)))AND('Oa34%j,*')))AND('')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array('1345324617', '1054634588', '1356649277', '288359926', x'', 0Xffffffffe861092e, NULL, x'e8fc'))>(((x'') BETWEEN (NULL) AND (0.11694497052232844)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'8eaf7f2c')OR('-1393997176')))AND(0.895614686870385)))OR(((0.4316529122308368)+(x'')))))AND((('') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 -1762307950 sz=650771136 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'9c2e' IN (NULL, '-1363773852', -2048727)))AND(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-2040117498 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-141179666 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2129195962 sz=-1619423419'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1944576895 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-914621964'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOTNULL))OR((~ (0xffffffff8c1210ee)))))OR((x'' IN (x'8d63', NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-542439252')) BETWEEN ((NULL)) AND ((x''))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1756723942 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST('0.8175743996729922' AS NUMERIC))OR('')))AND(x'' COLLATE RTRIM)))AND(((0xffffffffdf8c93ea)*(NULL)))))AND((+ (-157523180)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'fdcf')<(-1783680063)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-586288811 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-384286941 sz=-2035483461 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=184744266 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT x'4e77d561' COLLATE RTRIM, (((0.5867425725361002)) NOT BETWEEN (('H2')) AND ((NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1077412053 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-572263283 sz=-1706980137 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-536061614 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(NULL))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 -1664340053 sz=47783915 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN ((((NULL))<((NULL)))) AND (CASE WHEN x'' THEN 'tn' WHEN '0.7947349724986712' THEN NULL WHEN '1454958562' THEN x'a1c757ee' ELSE 2.030570577E9 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2108662306 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((LIKELY(NULL))) AND ((SQLITE_VERSION()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-337851579 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'5007', 0.1465411379945858, '0.6429482017000935')) BETWEEN ((TRIM(0.3574138136073718, 0.2486325434163793), CAST(x'' AS TEXT), CAST(x'' AS REAL))) AND ((LIKELIHOOD(NULL, 0.6347681616966292), 0X4676142a, (('91020109')GLOB(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=528997075 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.28465108049050625))<>((((('~)?*')) BETWEEN ((4.88471071E8)) AND ((NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-2044884189') NOT NULL)  WHEN (NOT (0.3899964165198916)) THEN ((x'9adb')AND(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1948666208'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')*(x'df0f'))))<(((0.14091034401398816 IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.36201445653264963  WHEN NULL THEN NULL ELSE x'' END) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1656072966 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1710040923 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT CAST('bbg(4' AS TEXT)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOT NULL))OR((('144634514')<=(x'')))))OR(((0Xfffffffff15b155d)||(NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1550697269 2 sz=-1530527549 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'2679')OR(0.8462071339219821))  WHEN x'' THEN ((1467994410)OR('1848917286')) WHEN x'acbecdcd' THEN CAST(0.5702049550895026 AS TEXT) WHEN ((('B <ǀ⍤ᐌHQ'))>=(('-1470338932'))) THEN (((NULL)) BETWEEN ((0xffffffff854f58f8)) AND ((NULL))) WHEN ((NULL) NOT NULL) THEN ('2030570577' IN ()) WHEN (((NULL)) NOT BETWEEN ((NULL)) AND (('P'))) THEN (x'' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=676285992'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '543296723 sz=-2044347674 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-827981636 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=745640708 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1535140008 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 -428542952 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-667993659 sz=1'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'')) NOT BETWEEN ((-2058397448)) AND ((0Xffffffffae73ea7d))))AND(CAST('' AS TEXT))))OR(UNLIKELY(DISTINCT 0.053585855389777226))); -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (x''); -- 6ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL, c0='' WHERE ((1961958574 COLLATE NOCASE)||(vt1.c0 COLLATE NOCASE)); -- 17ms;
INSERT OR REPLACE INTO vt0 VALUES ('1888500121'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.21226458376144441; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-998801646 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1610079629 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('') NOT BETWEEN (x'8aa2a831') AND (8.8707979E7)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) IS TRUE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1026028302'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1415915498 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1416975442 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=611059193 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.5874153506186706, 0X79aae9d3)) BETWEEN (('N#薯q|', x'1e37', 'cN|>')) AND (('0.17358289483148082', 0.11220320436044362, 1.684289123E9))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((CAST('1346571592' AS REAL))) AND ((CAST('蒤u\Pg' AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-187585147 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'dc39')) NOT BETWEEN ((NULL)) AND ((0xffffffffb72bb71d)))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE '0.8990154306538171'  WHEN '5727014' THEN 'es' END IN (TRIM(DISTINCT 0.2896841571315185))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1820864485 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0S'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=803911298'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'a66e')AND('-415815269')))AND(x'9f4440aa')))OR(1.684289123E9)))OR('0S')) IN ((('')LIKE(x'')), ((NULL) ISNULL), ((NULL)AND('es(B}%')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.37870790111698704 COLLATE NOCASE AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1045196678 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=654477476'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=1068414769'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-722900756 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-337851579 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))|(((8.8707979E7)GLOB('0.43851196938814363')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1397187152 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '745640708 -645070404 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1149428413', NULL, x'')) BETWEEN (('㘷f4', 0.5210541953947412, -1728785718)) AND ((NULL, NULL, 0.556917640139105))))=((((0.20346997236811337)) BETWEEN ((x'')) AND ((''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'd069') NOT BETWEEN (0.149011563753912) AND (0.9343101861967632))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-111955599 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)IS(1003426806)))OR(CASE NULL  WHEN '-1e500' THEN '&#,U' ELSE x'' END)))OR(UNICODE(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')==('-1619423419')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'66ed')AND(x'd276')))OR(x'')))OR(ABS('-627247393'))))AND(CAST('831001362' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1149572233 sz=-889919214 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1301313610'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-244671300 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT 0.26504631129928113 COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1.937238114E9)AND('')))OR(x'')))<(NULL)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) ISNULL) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1654221032 0 sz=-1582038632 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-847490754'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=784720537'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT 0Xffffffff87465cac COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6209970796474983 COLLATE BINARY)<<(IFNULL(DISTINCT NULL, 0x4f205776))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=938421489 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1781958225 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1790137594 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (SQLITE_SOURCE_ID())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5014178168498981)) NOT BETWEEN ((((((NULL)OR(x'ed81')))AND(NULL)))) AND ((0.548755066326637))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((IFNULL(DISTINCT '1886688518', 0.8832585101971142))AND(((NULL)==(0.8230185242349907)))))OR((+ (NULL)))))AND(CASE 0x0  WHEN 0.8338375950470304 THEN 0.5434772847638815 ELSE '᏶|' END)))OR(((((x'')AND(0.24439379599108124)))OR(x'ed41')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY(((x'') NOT NULL), (+ ('')), '-1470338932' COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X68bb27a7, 0.3959947145359909, 1988500443, 2.24368254E8, '')) BETWEEN ((x'', NULL, '-1855638193', NULL, 0.01867480308103775)) AND ((2.91234856E8, '-56693086', 0.9383567670836174, x'', NULL))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((2002619988)%(0xd54892f)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('oF' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1201110710 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '98086635' THEN NULL ELSE ')' END)+((((279314721, 0.8197739702466562, '', 0X21672fc9, NULL))>((0x4354e5cc, NULL, 1610079629, '80494436', 'Up'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-2035483461 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1352074579'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-189587414 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'4634')) NOT BETWEEN (('0.5839494792270018' COLLATE NOCASE)) AND (((+ ('-1'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT CAST('᏶|' AS REAL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1382983099 sz=-16582896 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 sz=-1101690913'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X44cb59b2; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((((((x'')AND(NULL)))OR(x'13fe')))AND(0.6722867146531639)))AND('98086635')))OR(x'')))OR(NULL)))OR(((0.2768795277341245) NOT BETWEEN ('+s') AND (x'')))))OR(CASE WHEN 0.19005683629566672 THEN NULL END)))AND(STRFTIME('1610079629', 'l\\ϳ*6', 1039620386))))AND(NULLIF('', 0xffffffffae73ea7d))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-458935267 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'f50c')OR(HEX(NULL))))AND(CASE x''  WHEN '135016524' THEN x'' ELSE x'05b2' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '745640708 -788281402 sz=937086811 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=843372018'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((NOT (0.21725011547238293))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2124892768 sz=2095347117'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NULL IN ()) THEN LOWER('-536061614') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-889932574'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'21403998') NOT NULL))AND(((('%^FCP')) NOT BETWEEN ((x'')) AND ((NULL))))))AND(('-189587414' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2021040141'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.3533718271436813 IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.25316956750377884) IS TRUE))*(((('')) BETWEEN ((NULL)) AND ((0.8681757844053068))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1253792775 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('745640708'))==((NULL)))))>((x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffff979853f0) ISNULL))/(((0.6566326541497793) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '258101494 0 sz=-361277193'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1123214473' COLLATE BINARY) IS FALSE); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', NULL, '-115071251')) BETWEEN ((x'', '', -1.402146602E9)) AND ((0.27377320805579075, '2113066632', NULL))))GLOB(CAST(NULL AS TEXT))); -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)OR(0.7562442889463201)))OR(NULL))))<((((x'c19b')+('510525888'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=668649218 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=709032403 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1288165333 sz=-2056864951 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1559810960 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '335185327 sz=-304349315 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('5727014')OR(0x1)))AND(7.77383529E8))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=67539377 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)+(0.8220250831834552)))|((((NULL)) BETWEEN ((0.4038648492900402)) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((- (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (PRINTF('狟z') IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2030570577 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '843212276 -1797488413 sz=1461554574 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1756652607 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=910302700 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1792564871 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1960737734 sz=882314015 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-325574337 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.22593761904630671)) NOT BETWEEN ((x'531e')) AND ((x''))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1372343405 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1610079629 0 sz=1054634588 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'qs'  WHEN '0.9422473917200899' THEN '-181203691' WHEN -1.938691913E9 THEN x'' WHEN 0xffffffffae33b393 THEN '陾bSm+杏Q+m' ELSE '537619437' END)|(((0.19957583837447956) NOTNULL))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x'1565', x'bace', NULL))>=((2.030570577E9, '+', '#褯bKPx')))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=968137669 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=352812652 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1728785718 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 -479350476 sz=-965692259 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1955247868'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-270459108 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1470338932 -2035483461 sz=772791385 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-2013229829 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 1628087394 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1003426806 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '120342616 1877422666 sz=1170627776 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=898204662 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1045969409 sz=-2130535151 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1434570435 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))IS NOT((- (0.970556716080942)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(((('645391811'))==(('寡9奐<8A8ﲻ丨'))), (NULL IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((x'') NOT BETWEEN ('7824940961165815229T-1257459755437534771-1677:1790 103-1265 1201:1515-1') AND (NULL)), (NULL IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=777383529 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(0.02848608679324882); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1685352123 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=5727014 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-2035483461 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-506499113 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1139380255 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('0.9513416057544238') BETWEEN (((x'923f')*(NULL))) AND ('sደcqq3j4' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((NULL)AND(x'4983')))OR(NULL)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR(0.7796245512100675)))AND(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-1147340137 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (6.76285992E8))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1610079629 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-1706980137 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=876770349 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-2074808338 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.936224305754215) NOT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('-1784070869')AND(x'' COLLATE NOCASE)))OR(((0x5d8aeeb)LIKE(0X2665e1d1)))))AND(CAST(0.20187817006064335 AS TEXT))))OR('z*P1B&+V#' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_VERSION(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=80494436 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'6803') IS FALSE))!=(((0.5028339792019715) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '0.7396847871182968'  WHEN 'TtZO+XP1' THEN '' END)<=((x'' IN (-3.0120105E7)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1501988052 sz=2021447390 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 -1925403994 unordered noskipscan'); -- 7ms;
DELETE FROM sqlite_stat1 WHERE (- (((((-889919214)AND(NULL)))OR('2%')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(0.5020625415178986)))OR(0.9989814817952806))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1807619864'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((5727014.0, '-1571168288', '-374106552')) BETWEEN ((x'1a64', 0.9798394412657581, x'')) AND (('-304349315', NULL, x'a81e'))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.47230098812038956) NOT NULL))/(CAST(x'407e' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1816721710'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-2035483461)OR(-8.89919214E8)))AND('1003426806')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=883086032 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-48979147 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1635640860 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.04913367607845631)||(-245688995))) BETWEEN ((~ (0X27fa9987))) AND (((NULL)%(-1938691913)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 sz=128021675'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1603847490 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1734478019'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-111955599 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')||(x'')))OR(CAST(-0.0 AS INTEGER))))AND(((x'')+(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1356782747 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=25674345 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('0.38440269292898055') BETWEEN ('I92sH') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-444503207') NOTNULL))AND(x'' COLLATE NOCASE)))AND(((0.9658492087225579) NOTNULL))))OR(((1651133015) NOT BETWEEN ('-889919214') AND (x'')))))OR(((NULL)=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-108889498 sz=1065222104 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 sz=510525888'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2113066632 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=467046429'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1567402121'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS REAL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-953603242 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1424243227 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0 COLLATE NOCASE)&(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffdeedd6d0) NOT NULL))>(((x'c533')<(1149572233)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-994285921 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=802401892 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('-30120105' IN (x'')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-62260113 sz=532550319 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-889919214 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-813847651 -944268480 sz=291234856'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=212379931 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE RTRIM THEN RTRIM(0xffffffffaeb67664) ELSE ((NULL) IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -1271474728 sz=-1143943728 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1632851411 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=505721463'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('98086635' IN ()) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=808726530 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (0.6237426804875337) AND (NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT (528997075))))<>((CAST(0.27054490763420536 AS REAL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=749238635 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-889919214 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1191083205 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('鋧3郓S,v1')>(NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1099843133 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT CASE WHEN -793159454 THEN x'' WHEN x'ab34' THEN 0.8990154306538171 WHEN '' THEN x'' END, ((NULL)*(x'a613'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1434649012 -1635640860 sz=-985929751 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-84921726 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=380562142 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '898204662'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'61c0')*('-2087466796'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(highlight(NULL, x'', 0.3699616942557248, NULL) AS BLOB); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=351295301 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('-154587932' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '660598659 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=831001362'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)=(NULL)), ((0X6e65567d)=(0.25166038796700074)), (('1535140008') BETWEEN (x'') AND (x''))))>=((x'' COLLATE RTRIM, (('5727014')%(0.049705793034572565)), '' COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X6dce620 COLLATE BINARY COLLATE NOCASE COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1018992539 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '49583873 sz=-933612181 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) BETWEEN (x'02bc') AND (0.1759808735736128)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-6.27247393E8 COLLATE RTRIM)GLOB((((0.9286821289103377))<=((''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1011764099 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1837287528'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')IS(0Xffffffffe00c5952)))OR(((((NULL)OR(0.19645740691639957)))OR('|_7v')))))AND(((((x'')AND('0.9658492087225579')))AND('T휟g{}')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('%C ' COLLATE NOCASE AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2030570577'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('xe¨x' IN ())))<=((('938421489' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN x'da05' THEN x'' ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (NULL)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.8990154306538171) ISNULL))AND((((NULL))=((NULL))))))OR((- (0.39483576843706314)))))OR(((NULL) NOT NULL))))OR((+ ('-30120105')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0X737ff69c  WHEN 0.5450832391900783 THEN 0.371213898825948 WHEN '0.34244669537758765' THEN '' WHEN x'' THEN 0Xffffffffda660e67 ELSE x'' END)-((('Lu') BETWEEN (0x6a158dee) AND (0.758930817816722)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-121169284'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL)OR(1.91344047E8)))OR('0.1465411379945858')))AND(0.0)))AND(0.13530224554896564)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1691764049 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1108869929' AS BLOB))>>(LOWER(''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1358453227'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('1218038258') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('1054634588')) BETWEEN ((NULL)) AND ((2.113066632E9))) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=938421489 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1231360174'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=-1527904970'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (0.7025511405021604)) IN (0.6421901100520804 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1882584665 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-494543751 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('2113066632' IN ()))IS((('1149572233') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6248894051536765; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2108227407 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1434570435 0 sz=-103326799 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.6738494539047383'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1871265732 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=670457829 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')|(NULL))) NOT BETWEEN ((('2(洌n') ISNULL)) AND (((x'') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE '7/2d('  WHEN '-1382983099' THEN '-1944973074' WHEN '' THEN 'oF' WHEN NULL THEN NULL ELSE '}gTP' END AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-621854126 sz=142509946 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-802818915'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-994285921 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ ('XD\')) THEN ((0.5045590710421285) ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-56693086 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (1541202426 IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0X680954b4)%(x'df28')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) NOT BETWEEN ((('E)qꇨ9q.') NOTNULL)) AND ((('vY䒾K fN祫')-(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=720317504 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('Zgq\9N' AS NUMERIC)) BETWEEN (x'fb2c') AND ((('-1372343405') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1944973074 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=488471071 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1415915498'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=335185327'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR('C7Gt'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1438598316 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-123159413'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1245145662 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) NOT BETWEEN (NULL) AND (NULL)) THEN load_extension('ꘑ#﾿^', -1165608226) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') BETWEEN ('-1382983099') AND ('-1099843133'))))>(('1807619864'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN 'EGmYDm' THEN x'' END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-950938725 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1499444144 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('-534109680')-(x'aba7')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('-1882584665'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((NULL)GLOB(x'44c7')))) AND (((- (0.8213729051100536))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT (('666892434') BETWEEN (x'') AND (NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(0.5728684439995685 AS TEXT)))<=((((((NULL)OR(2.70968529E8)))OR(0.577229128949421))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 sz=-551976552 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 1085483550 sz=-792155244 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=938224226 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1054634588 sz=150852785 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 -1036802462 sz=686820649 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((NULL)OR('1225543971')))AND(NULL)))AND(LAST_INSERT_ROWID())))AND((0X4847b80e IN (NULL)))))OR(((('-1944973074'))>=((''))))))OR((('0.6197531047222853') BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0xffffffffefe11f1c)))<=((0.31459429146754014 IN (0.1566671964404328)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1009957565 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2113066632 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-116142802'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=121519215 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-56693086 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('9p恹6dK3'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '4 sz=170995276 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.3886486472333164; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1706980137 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1714878570 1514780562 sz=5727014'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-377498599', x'', '-494543751')) BETWEEN ((((((0.5142915558833108)OR('-1635640860')))AND(NULL)), json_array_length(''''), CASE WHEN '2您' THEN x'f689' WHEN NULL THEN '0.7871228656355451' WHEN x'f179' THEN '' END)) AND ((CASE WHEN x'' THEN NULL ELSE '-219379155' END, ((0.609529857603921)IS(NULL)), (+ (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1913540047 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')GLOB(NULL)))|(((0.5365962515090696)=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((- ('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) BETWEEN (x'a2aa') AND ('')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '522706939 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=598559237 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1731370739'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'd4a1')) BETWEEN (((((x'', NULL, -1.424431592E9)) BETWEEN (('1894464566', -117595501, '0.6429482017000935')) AND (('7e/{M_A', NULL, ''))))) AND (((('ZH') BETWEEN ('') AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1149572233 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('80494436' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8118125316182375; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-806579114 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0Xffffffffababa0f2) NOT BETWEEN ('|''') AND (0xca8a91b)) THEN ((((0xffffffff88e2233d)OR(x'')))AND(x'79cc')) ELSE 0.913599394429461 COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0Xffffffffc649e01d)AND(x'')))AND(NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.6292894812439939)&('-1706980137')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-117141636 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-452158238 -2133919841 sz=1729692822'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2058397448'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1049230602'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND(NULL)))OR('5뎦'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-2.044347674E9 IN (NULL)))OR(CASE '-1036802462'  WHEN x'241b' THEN '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=37726435'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-3.49994487E8 AS INTEGER))>=('2113066632')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '273450861 sz=-1125401966 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL))>(LOWER(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1848917286 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-536061614 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1840154782 sz=-1734478019 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1308883384'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'678a') BETWEEN (0X51c7d6f7) AND (0xffffffff98f4d2ca)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ ('1140140689')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1837433741 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x''))<=((0.8193617124233149))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1812407123 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((- ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=682412277 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE 'F-|M'  WHEN 0.6541735175160243 THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-160697941'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('' AS REAL)))==((((NULL) NOT BETWEEN (0.5320234684589593) AND (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1036802462'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=1894705869'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-270012180'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=655911882 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'5724')GLOB(0.13662972497386117))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1848917286 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-181203691 sz=-667814678 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=273397276 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-98064313'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-5.6693086E7) BETWEEN (x'dc07') AND (0.5326303080489762))) NOT BETWEEN ((((0.8567416380140056, NULL, x'', 0.6080524169384557, x'baf4'))>=((x'', 0.5429624501461849, x'7c9f', NULL, 0.7763672925692449)))) AND (CAST('?pQHE(&_D' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=2117479857 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' IN (1.937238114E9)) IN (((x'ca51')&(0.40199577672524045)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=938421489 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'')) NOT BETWEEN (('0.6441374599009598')) AND (('1598631856'))) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.05729309423122986) NOT BETWEEN (x'') AND (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1530891408 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=645963487 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=2001832328 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN -1879926067 THEN '' WHEN '-806579114' THEN NULL WHEN 0.7888853938872772 THEN 0.0 ELSE NULL END THEN (((0.9919799370677576)) NOT BETWEEN ((x'')) AND (('-1064872424'))) WHEN CAST(x'' AS TEXT) THEN (('666892434')=('_|2l')) WHEN (+ (0.9571896042367389)) THEN (~ (NULL)) ELSE (x'' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1099843133 1447278543 sz=-883060248 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0x36ffd23c THEN x'' WHEN '' THEN '-86768180' WHEN 0.07888486120412241 THEN '#k' ELSE NULL END)<=(TRIM(DISTINCT 0.07164953722859257))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1214608237 sz=1525539951 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=2072851898 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)IS NOT(0.46752324089273367)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.44338005772174216) NOT BETWEEN ((('24890918')<=(0.8355345750189972))) AND (((1269851363) BETWEEN ('-523756880') AND (x'7633')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=648788132 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffff8c1210ee) NOT BETWEEN ((('WZae^vtn') NOT BETWEEN (NULL) AND (0.3941947713725694))) AND ((((0x4e4deb8))=((0.8805620815168058))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6816903969742348 COLLATE NOCASE) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1977148427 sz=-177138790 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('698556295')<=(1961472626))  WHEN ((x'') NOTNULL) THEN ((0.5454007717557218)<=('-1635640860')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '128021675 0 sz=-1382983099 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM) BETWEEN ((('1054634588') NOT NULL)) AND (((('2113066632')) BETWEEN (('720108133')) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=707313461 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2521162'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1979326744'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1406166406 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1434570435'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-752192340 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '88707979'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1635640860 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.004474503180963096) NOT NULL)  WHEN ('1535140008' IN ()) THEN (('zU')>>(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=706249692 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1952422215 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2095669667'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND((((x'1b74')) NOT BETWEEN ((0.0)) AND (('梌?k'))), CASE x''  WHEN x'986f' THEN x'' WHEN x'fca1' THEN NULL WHEN '5727014' THEN NULL ELSE '-1176114601' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<>(NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('560410569')IS NOT('-189587414'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 sz=-1160824447 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1555611871 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)GLOB(LIKELY(-1.619423419E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '898204662'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.8536524175866274 COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=508808316 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0.492632997907296 THEN 0.9654292844768951 ELSE x'20b6' END) NOT BETWEEN ((((('-')OR(-1098168264)))OR('777383529'))) AND (((((0.3606795726937988)AND('192836817')))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -188633452 sz=-1164848659 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-317533208 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.363773852E9)) BETWEEN (((('')/(NULL)))) AND ((((0.16321142653438647) BETWEEN (NULL) AND (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL((~ ('z\3>FL')), (('bf')==(9.66070974E8))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=510525888 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0X665328b4 AS NUMERIC))|((0Xffffffffe366fc0d IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<('0.7763672925692449'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHAR((+ (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '265896889 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0x8e49ec6 THEN '7' ELSE '' END)+(((((((((0Xffffffffe285dc79)AND('-{]E')))OR(NULL)))OR(NULL)))OR('-1092040177')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=1902320418 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-943661822 -828377129 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x79080c51) ISNULL))>('-791330341')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1420478406 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '752886896'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1705414648'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('')||('121499076')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1052581877 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'f26b')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1437984632 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 724978136 sz=-30120105 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (LIKELIHOOD(NULL, 0.7463436678868294))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)GLOB(0.8064329550876913)))AND(((NULL) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1201110710)) BETWEEN ((((((((((NULL)OR(0.30611711061381797)))AND('!,sf>瞾#v')))OR(NULL)))AND(0.8126906911521947)))) AND ((((NULL) NOT BETWEEN ('151405379') AND (-824550290))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 sz=291363345'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=304414931 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1084763924 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('1149428413')LIKE(-189587414)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((0.6888507930638172)) AND (((NULL IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=5727014'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (NULL) AND (NULL))) BETWEEN (('1404963147' IN (NULL))) AND (((NULL)GLOB('-339487926')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-189587414 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '243181767 sz=-270459108 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-985929751 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1114264102 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '541337813 -591942196 0 sz=-2058397448'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9155193663427549 IN ()))IS(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-985929751 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (x'')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-869531251, NULL, '302759258'))=((0xffffffffcfec9456, x'', '50C')))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-86768180 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3429816096408923)*(('734932431' IN ('-2035483461', NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 1611668480 sz=-111955599 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')OR(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1646685632 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(((0.055332531222996195) ISNULL), ((0xffffffffd8337461) BETWEEN ('Zꏹ') AND ('0.5818769894319348'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 's' COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-1.706980137E9)OR(0x4482e2bd)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-2127651140 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1612455376 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-76260441 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-388027092 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2047606640 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1430465015')) NOT BETWEEN ((0.7270988128380393)) AND (('-1142058210')))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((NULL)AND(0X5c0fb28d)))AND('')))AND(0.6194769889962887)))AND(0.13979701668569766)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'2126c496') IS FALSE))>(CAST(0.6197531047222853 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))==((x''))))&((- ('Pf	TI	')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((NULL)) BETWEEN ((0x2c719304)) AND ((0.7396847871182968))) THEN '882314015' COLLATE RTRIM ELSE ((((0.8832585101971142)OR(x'')))OR('939171233')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.42903736860858144 AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-889919214 sz=0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '' COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-484641720 4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1807849860'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER('-1944973074') COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1938691913' AS REAL))GLOB(CASE WHEN 1.91344047E8 THEN NULL WHEN -1.363773852E9 THEN 908188562 WHEN '83732739' THEN '	ABi\n' ELSE 0.523081718643129 END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('528997075')) NOT BETWEEN ((-1635640860 COLLATE NOCASE)) AND ((CASE x'aa5e'  WHEN x'1d0f' THEN 0.8323311657737297 WHEN x'' THEN '{3' WHEN 0.8286879607419133 THEN NULL END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('HkKCa+**')AND(NULL)))OR((((x'6e7e'))=((0.1039984049123347))))))AND(((((NULL)OR(-1253332623)))AND('-686223188')))))OR(((((0.1334047115429562)OR(0.14563344711809678)))OR(NULL)))))AND(('-1938691913' IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=882314015 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1253792775 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2137817109 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1112320711)) BETWEEN (((x'' IN ()))) AND (((NULL IN (x'', x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 'H7]L.5'  WHEN '뚓''0pR3s' THEN '핵.fe#2' ELSE NULL END, ((0X20f8658f)>>('yw')), 0.0600057431294021 COLLATE BINARY))>((CASE WHEN 0.6115050374289653 THEN '' WHEN 7.49238635E8 THEN NULL WHEN '' THEN '辺I' ELSE '-2064382989' END, ((NULL) BETWEEN (x'1b4d') AND (x'')), HEX(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')%(0.7009504381242496)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1043265253)>>(0.26429833869290964)))AND(CASE x''  WHEN 'FALSE' THEN -396606208 ELSE 0.2889273026881295 END)))AND(0.12937429025346525 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE NOCASE COLLATE NOCASE COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.8462071339219821' IN (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(((551181214)>(0.7387651243322853)))))AND(((NULL) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 545777649 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2035483461 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.47308441093718945)) BETWEEN ((x'3d85')) AND ((''))))/((('1434570435') NOT BETWEEN (0.917766421468713) AND (x'd547')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6039599694594547)) BETWEEN (((((x'7582', NULL, '-1229402586'))<=((x'', 8.82314015E8, 8.0494436E7))))) AND ((json_extract(0.8360761680095692, '1613349429')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-270012180 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1478999735 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '270968529 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT ('\ns')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '240022420 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'' THEN x'c2d3' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1219122408'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL)) BETWEEN (((x'') NOT NULL)) AND (x'')); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1425672016 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(0.7904140283436578)))AND('333133467'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1156386406 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, x'', '1807619864')) NOT BETWEEN ((x'', x'0243', 0.4882776257212019)) AND ((-1.424431592E9, '#Z|-g ', x'fdee')))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('e(n' IN ()) IN (CASE NULL  WHEN '1807619864' THEN '0.6669610446450717' ELSE 0.010309146706501626 END, (0.8592773954877806 IN (x'', 679043422)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((1)) BETWEEN ((0.3674621743716354)) AND ((NULL))))AND((+ ('+~')))))AND((('1273766711')LIKE('O/Zo')))))OR(((NULL)||(NULL)))))AND(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1259148974 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object((((('')OR(0.18966797970043558)))OR(NULL)), (((0.08146651949592643))>=((NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1991320016'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1149428413 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-475505754 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2043361024 745640708 sz=639299498'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)LIKE(NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1602913076 sz=-994285921 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(NULL)))OR(0.0067322961471409926))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1713116886 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT ((0.6380220956748768)*(x'006f')), 0.5828849526092112); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=553228258 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT (((NULL)) BETWEEN ((-3.49994487E8)) AND ((x''))), 0.3295717945997507); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '49413715 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SUBSTR(x'', 666892434)) IS TRUE); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))<(CASE WHEN 0.14458051544759765 THEN 0.07838082404008417 WHEN NULL THEN 0.7403034306072 WHEN NULL THEN '' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1424431592 sz=-1088200704 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.03398721224762957 IN ()))>((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN '1436709503' THEN NULL WHEN 2009029250 THEN '0.9513416057544238' WHEN NULL THEN 0xffffffffadaee92c ELSE -1.077412053E9 END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9423272773181105; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1346332266 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((0.8044653318268176)OR(x'')))OR('oz'))  WHEN ((((NULL)AND(x'')))AND('5cc')) THEN (((NULL)) NOT BETWEEN ((1)) AND ((0.16000604588149714))) ELSE TYPEOF(DISTINCT 0X15077e6c) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS FALSE)) BETWEEN ((-423565899 IN ())) AND (((0.27249229155574983)+(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.19541055890558356; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' COLLATE BINARY IN ((NULL IN (0.09338654285796655)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.1362232414130774, 0.9005295413632952, '(j''og᜘}')) BETWEEN ((CASE WHEN 0.8400036183932635 THEN '' ELSE '-298435776' END, ((x'dd07')IS(x'')), ((NULL) IS TRUE))) AND (((NULL IN ()), ((NULL)+(NULL)), CASE '26058498'  WHEN x'' THEN 'uK^L' ELSE NULL END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1617199673'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(NULL AS BLOB))OR((((('')AND('0.7763672925692449')))AND('-380374834')))))OR(COALESCE(DISTINCT '-2063574080', NULL, x'', x''))))OR(CASE ''  WHEN x'' THEN 0.32555329930974675 ELSE NULL END)))AND((x'abd2' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 0.29642637145672546  WHEN 0.15020059177228562 THEN NULL ELSE 0xffffffffda9cf6df END)OR((~ (x'')))))OR(((0.8241389789465726) BETWEEN ('2030570577') AND ('-800614835')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0Xfffffffff3c688c5)) NOT BETWEEN ((((0X64643663)<('}*{/')))) AND ((((NULL) NOT BETWEEN (1.674809787246545E-4) AND (NULL))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-8.06579114E8) NOTNULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1003426806'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-475563915 1579711412'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2015281224'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1882584665 4 sz=814693348 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1372343405 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1882584665 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-540324672 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1272847476 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 2001071124 355747454 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '585453552'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1654687217 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1637171609 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=7224016 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1619423419 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-621854126'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '815118886 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-2064382989 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1624817241 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=468221502 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('848318638') NOT BETWEEN (x'8d0b') AND (x'')))>=((('') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=138887827 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1490053577 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (0.9414367343294492 IN ()) THEN CASE WHEN 1169589398 THEN ']*,(6sU''㫋' ELSE '' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((('-1976255538')OR(0.7886452201494614)))OR(NULL))  WHEN HEX(DISTINCT x'') THEN CASE WHEN '560410569' THEN '-245688995' WHEN '224368254' THEN '1807619864' WHEN 'X1' THEN 'FG&喭_' ELSE 0.03352662716447774 END ELSE ((x'')/('-1649773177')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=528997075 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1184164568 0 sz=1610079629 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-56693086')) NOT BETWEEN ((((0x1180dc9d) IS FALSE))) AND (((((('0.43851196938814363')OR(x'')))AND(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(-815933691 COLLATE NOCASE, ((NULL) IS TRUE), ((NULL) IS FALSE), ((0.49544877477794735)OR(0.5511911411317281)), 0.4065354081264433 COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5163295781912371; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-111955599 sz=1144354041 unordered noskipscan'); -- 0ms;
PRAGMA cache_spill; -- 0ms;
DELETE FROM vt1; -- 1ms;
PRAGMA temp.legacy_file_format; -- 1ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
UPDATE vt0 SET c0='3ao^qHV' WHERE (- ('' COLLATE RTRIM)); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (x''); -- 0ms;
CREATE TEMP VIEW v0(c0, c1, c2) AS SELECT ALL ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))<(((vt1.c0)>>(vt0.c0)))), (((vt0.c0 IN (vt1.c0)))%(MAX(vt0.c0))), CASE ((vt0.c0) ISNULL)  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((938421489))) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) ELSE DATE(vt0.c0, vt1.c0, vt1.c0) END FROM vt0, vt1 WHERE (CAST(676599759 AS BLOB)) LIMIT -1619423419; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (0.6036343388936168), (-2052237891), ('966070974'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '55213'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=('1Y㟿F)qO', '/f[e\'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0, c0, c0)=(NULL, '', '+Q7') WHERE x''; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'b3d2'; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.7109154240437567 WHERE ((((vt0.c0 COLLATE RTRIM)OR(((vt0.c0)OR(vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))); -- 1ms;
UPDATE vt1 SET c0=''; -- 1ms;
UPDATE OR REPLACE vt0 SET c0=2045254307; -- 1ms;
ANALYZE sqlite_master; -- 0ms;
REINDEX RTRIM; -- 1ms;
ANALYZE main; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 1ms;
ANALYZE; -- 1ms;
PRAGMA main.application_id = -100312270248042947; -- 0ms;
UPDATE OR ROLLBACK vt1 SET c0=0.320608303239571; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), (NULL), (x'ee77'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='25674345' WHERE (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))||(CASE WHEN vt0.c0 THEN 0xfffffffff4144ae7 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '777383529' END)); -- 0ms;
UPDATE vt1 SET c0=NULL, c0=NULL; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (0X338a020); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 909317236); -- 0ms;
ANALYZE; -- 1ms;
VACUUM; -- 1ms;
COMMIT; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(0.5279349817225778); -- 1ms;
REINDEX; -- 0ms;
ANALYZE main; -- 1ms;
CREATE TABLE t0 (c0 INTEGER , c1 INT , c2 TEXT ); -- 0ms;
DROP VIEW v0; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 12); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c75 INTEGER; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE t0 SET c0='2131362663', c0='-343146247' WHERE CAST(((t0.c0) NOTNULL) AS REAL); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=('812647759'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '19405'); -- 0ms;
UPDATE vt1 SET c0='mE' WHERE ((((vt1.c0)IS(vt1.c0)))==(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))); -- 1ms;
PRAGMA temp.checkpoint_fullfsync = false; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 2); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1444070172);\n; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('N#薯q|'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0xffffffff8536fe03)OR('')))AND(NULL)))AND(0.08911655535468499)))AND('0K\r-䐖(Gw5'))) IS TRUE); -- 0ms;
ANALYZE; -- 1ms;
PRAGMA temp.foreign_keys; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.12572090608297337; -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
PRAGMA main.recursive_triggers; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ALTER TABLE t0 ADD COLUMN c7 REAL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.01262313021303152); -- 0ms;
PRAGMA cache_size; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
VACUUM; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 BLOB ); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='-1077412053'; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0, rt0 WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(NULL AS REAL));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CAST(((rt0.c0) NOT BETWEEN (t0.c7) AND (rt0.c3)) AS REAL) LEFT OUTER JOIN vt1 ON ((((((((((((rt0.c3)OR(t0.c2)))AND(t0.c75)))OR(t0.c7)))AND(t0.c75)))OR((('秫롏9La(&')OR(t0.c0)))))AND(((rt0.c2)-(t0.c2)))) LEFT OUTER JOIN vt0 ON ((((((((UNLIKELY('-828966070'))OR(((((((((((((((((vt1.c0)OR(rt0.c3)))AND(vt1.c0)))AND(x'd9c65e98')))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)))OR(t0.c1)))))AND(rt0.c0)))OR(((((t0.c2)OR(t0.c0)))OR(t0.c75)))))OR(ABS(DISTINCT t0.c2))) WHERE (t0.c1) ORDER BY CASE 0xffffffff8e347f96  WHEN COALESCE(DISTINCT '614658187', 8.8707979E7) THEN t0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CAST(((rt0.c0) NOT BETWEEN (t0.c7) AND (rt0.c3)) AS REAL) LEFT OUTER JOIN vt1 ON ((((((((((((rt0.c3)OR(t0.c2)))AND(t0.c75)))OR(t0.c7)))AND(t0.c75)))OR((('秫롏9La(&')OR(t0.c0)))))AND(((rt0.c2)-(t0.c2)))) LEFT OUTER JOIN vt0 ON ((((((((UNLIKELY('-828966070'))OR(((((((((((((((((vt1.c0)OR(rt0.c3)))AND(vt1.c0)))AND(x'd9c65e98')))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)))OR(t0.c1)))))AND(rt0.c0)))OR(((((t0.c2)OR(t0.c0)))OR(t0.c75)))))OR(ABS(DISTINCT t0.c2))) ORDER BY CASE 0Xffffffff8e347f96  WHEN COALESCE(DISTINCT '614658187', 8.8707979E7) THEN t0.c0 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CAST(((rt0.c0) NOT BETWEEN (t0.c7) AND (rt0.c3)) AS REAL) LEFT OUTER JOIN vt1 ON ((((((((((((rt0.c3)OR(t0.c2)))AND(t0.c75)))OR(t0.c7)))AND(t0.c75)))OR((('秫롏9La(&')OR(t0.c0)))))AND(((rt0.c2)-(t0.c2)))) LEFT OUTER JOIN vt0 ON ((((((((UNLIKELY('-828966070'))OR(((((((((((((((((vt1.c0)OR(rt0.c3)))AND(vt1.c0)))AND(x'd9c65e98')))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)))OR(t0.c1)))))AND(rt0.c0)))OR(((((t0.c2)OR(t0.c0)))OR(t0.c75)))))OR(ABS(DISTINCT t0.c2))) WHERE (t0.c1) ORDER BY CASE 0xffffffff8e347f96  WHEN COALESCE(DISTINCT '614658187', 8.8707979E7) THEN t0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CAST(((rt0.c0) NOT BETWEEN (t0.c7) AND (rt0.c3)) AS REAL) LEFT OUTER JOIN vt1 ON ((((((((((((rt0.c3)OR(t0.c2)))AND(t0.c75)))OR(t0.c7)))AND(t0.c75)))OR((('秫롏9La(&')OR(t0.c0)))))AND(((rt0.c2)-(t0.c2)))) LEFT OUTER JOIN vt0 ON ((((((((UNLIKELY('-828966070'))OR(((((((((((((((((vt1.c0)OR(rt0.c3)))AND(vt1.c0)))AND(x'd9c65e98')))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)))OR(t0.c1)))))AND(rt0.c0)))OR(((((t0.c2)OR(t0.c0)))OR(t0.c75)))))OR(ABS(DISTINCT t0.c2))) ORDER BY CASE 0Xffffffff8e347f96  WHEN COALESCE(DISTINCT '614658187', 8.8707979E7) THEN t0.c0 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CAST(((rt0.c0) NOT BETWEEN (t0.c7) AND (rt0.c3)) AS REAL) LEFT OUTER JOIN vt1 ON ((((((((((((rt0.c3)OR(t0.c2)))AND(t0.c75)))OR(t0.c7)))AND(t0.c75)))OR((('秫롏9La(&')OR(t0.c0)))))AND(((rt0.c2)-(t0.c2)))) LEFT OUTER JOIN vt0 ON ((((((((UNLIKELY('-828966070'))OR(((((((((((((((((vt1.c0)OR(rt0.c3)))AND(vt1.c0)))AND(x'd9c65e98')))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)))OR(t0.c1)))))AND(rt0.c0)))OR(((((t0.c2)OR(t0.c0)))OR(t0.c75)))))OR(ABS(DISTINCT t0.c2))) WHERE (t0.c1) ORDER BY CASE 0xffffffff8e347f96  WHEN COALESCE(DISTINCT '614658187', 8.8707979E7) THEN t0.c0 END  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c1, t0.c0, t0.c1)) BETWEEN ((x'4928', TYPEOF(t0.c1), ((t0.c75) NOT BETWEEN (t0.c7) AND (t0.c75)))) AND (((((t0.c0, vt0.c0, t0.c75)) NOT BETWEEN ((vt0.c0, t0.c2, t0.c75)) AND ((t0.c0, 0.8735976894633095, t0.c7))), CAST(NULL AS INTEGER), (((t0.c75, vt0.c0, t0.c7)) NOT BETWEEN ((t0.c2, t0.c7, t0.c2)) AND ((t0.c2, t0.c75, t0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c0, t0.c1)) BETWEEN ((x'4928', TYPEOF(t0.c1), ((t0.c75) NOT BETWEEN (t0.c7) AND (t0.c75)))) AND (((((t0.c0, vt0.c0, t0.c75)) NOT BETWEEN ((vt0.c0, t0.c2, t0.c75)) AND ((t0.c0, 0.8735976894633095, t0.c7))), CAST(NULL AS INTEGER), (((t0.c75, vt0.c0, t0.c7)) NOT BETWEEN ((t0.c2, t0.c7, t0.c2)) AND ((t0.c2, t0.c75, t0.c0))))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c1, t0.c0, t0.c1)) BETWEEN ((x'4928', TYPEOF(t0.c1), ((t0.c75) NOT BETWEEN (t0.c7) AND (t0.c75)))) AND (((((t0.c0, vt0.c0, t0.c75)) NOT BETWEEN ((vt0.c0, t0.c2, t0.c75)) AND ((t0.c0, 0.8735976894633095, t0.c7))), CAST(NULL AS INTEGER), (((t0.c75, vt0.c0, t0.c7)) NOT BETWEEN ((t0.c2, t0.c7, t0.c2)) AND ((t0.c2, t0.c75, t0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c0, t0.c1)) BETWEEN ((x'4928', TYPEOF(t0.c1), ((t0.c75) NOT BETWEEN (t0.c7) AND (t0.c75)))) AND (((((t0.c0, vt0.c0, t0.c75)) NOT BETWEEN ((vt0.c0, t0.c2, t0.c75)) AND ((t0.c0, 0.8735976894633095, t0.c7))), CAST(NULL AS INTEGER), (((t0.c75, vt0.c0, t0.c7)) NOT BETWEEN ((t0.c2, t0.c7, t0.c2)) AND ((t0.c2, t0.c75, t0.c0))))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c1, t0.c0, t0.c1)) BETWEEN ((x'4928', TYPEOF(t0.c1), ((t0.c75) NOT BETWEEN (t0.c7) AND (t0.c75)))) AND (((((t0.c0, vt0.c0, t0.c75)) NOT BETWEEN ((vt0.c0, t0.c2, t0.c75)) AND ((t0.c0, 0.8735976894633095, t0.c7))), CAST(NULL AS INTEGER), (((t0.c75, vt0.c0, t0.c7)) NOT BETWEEN ((t0.c2, t0.c7, t0.c2)) AND ((t0.c2, t0.c75, t0.c0)))))));
SELECT ALL * FROM vt1 NOT INDEXED, rt0 CROSS JOIN vt0 ON json_object(((9.8086635E7) NOTNULL), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c3))) WHERE ((((- (rt0.c0)))>>(x''))) ORDER BY ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0)))>>(x''))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt0 ON json_object(((9.8086635E7) NOTNULL), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c3))) ORDER BY ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE ASC);
SELECT ALL * FROM vt1 NOT INDEXED, rt0 CROSS JOIN vt0 ON json_object(((9.8086635E7) NOTNULL), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c3))) WHERE ((((- (rt0.c0)))>>(x''))) ORDER BY ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0)))>>(x''))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt0 ON json_object(((9.8086635E7) NOTNULL), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c3))) ORDER BY ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE ASC);
SELECT ALL * FROM vt1 NOT INDEXED, rt0 CROSS JOIN vt0 ON json_object(((9.8086635E7) NOTNULL), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c3))) WHERE ((((- (rt0.c0)))>>(x''))) ORDER BY ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE ASC;
SELECT * FROM t0, rt0 WHERE (((rt0.c2)<<(t0.c2)) COLLATE NOCASE COLLATE RTRIM) ORDER BY CAST(((t0.c2) BETWEEN (t0.c0) AND (rt0.c3)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<<(t0.c2)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((t0.c2) BETWEEN (t0.c0) AND (rt0.c3)) AS REAL) ASC);
SELECT * FROM t0, rt0 WHERE (((rt0.c2)<<(t0.c2)) COLLATE NOCASE COLLATE RTRIM) ORDER BY CAST(((t0.c2) BETWEEN (t0.c0) AND (rt0.c3)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<<(t0.c2)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((t0.c2) BETWEEN (t0.c0) AND (rt0.c3)) AS REAL) ASC);
SELECT * FROM t0, rt0 WHERE (((rt0.c2)<<(t0.c2)) COLLATE NOCASE COLLATE RTRIM) ORDER BY CAST(((t0.c2) BETWEEN (t0.c0) AND (rt0.c3)) AS REAL) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN ((~ (vt1.c0))) AND (LIKELY(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN ((~ (vt1.c0))) AND (LIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN ((~ (vt1.c0))) AND (LIKELY(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN ((~ (vt1.c0))) AND (LIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN ((~ (vt1.c0))) AND (LIKELY(vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE (json_patch((('-1261489234') IS FALSE), ((0x43cdd51f) BETWEEN (vt1.c0) AND (0.993859356117858)))) ORDER BY (('-331988325') NOT NULL) ASC, (CAST(vt1.c0 AS NUMERIC) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((json_patch((('-1261489234') IS FALSE), ((0X43cdd51f) BETWEEN (vt1.c0) AND (0.993859356117858)))) IS TRUE)  as count FROM vt1 ORDER BY (('-331988325') NOT NULL) ASC, (CAST(vt1.c0 AS NUMERIC) IN ()) DESC);
SELECT COUNT(*) FROM vt1 WHERE (json_patch((('-1261489234') IS FALSE), ((0x43cdd51f) BETWEEN (vt1.c0) AND (0.993859356117858)))) ORDER BY (('-331988325') NOT NULL) ASC, (CAST(vt1.c0 AS NUMERIC) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((json_patch((('-1261489234') IS FALSE), ((0X43cdd51f) BETWEEN (vt1.c0) AND (0.993859356117858)))) IS TRUE)  as count FROM vt1 ORDER BY (('-331988325') NOT NULL) ASC, (CAST(vt1.c0 AS NUMERIC) IN ()) DESC);
SELECT COUNT(*) FROM vt1 WHERE (json_patch((('-1261489234') IS FALSE), ((0x43cdd51f) BETWEEN (vt1.c0) AND (0.993859356117858)))) ORDER BY (('-331988325') NOT NULL) ASC, (CAST(vt1.c0 AS NUMERIC) IN ()) DESC;
SELECT ALL * FROM t0, vt1 WHERE ((((t0.c1)) NOT BETWEEN ((CASE t0.c1  WHEN t0.c2 THEN t0.c75 ELSE t0.c2 END)) AND ((CASE t0.c0  WHEN 2.117479857E9 THEN t0.c75 WHEN t0.c2 THEN t0.c0 WHEN t0.c7 THEN t0.c0 ELSE t0.c7 END)))) ORDER BY ((UNLIKELY(DISTINCT t0.c2)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((CASE t0.c1  WHEN t0.c2 THEN t0.c75 ELSE t0.c2 END)) AND ((CASE t0.c0  WHEN 2.117479857E9 THEN t0.c75 WHEN t0.c2 THEN t0.c0 WHEN t0.c7 THEN t0.c0 ELSE t0.c7 END)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((UNLIKELY(DISTINCT t0.c2)) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE ((((t0.c1)) NOT BETWEEN ((CASE t0.c1  WHEN t0.c2 THEN t0.c75 ELSE t0.c2 END)) AND ((CASE t0.c0  WHEN 2.117479857E9 THEN t0.c75 WHEN t0.c2 THEN t0.c0 WHEN t0.c7 THEN t0.c0 ELSE t0.c7 END)))) ORDER BY ((UNLIKELY(DISTINCT t0.c2)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((CASE t0.c1  WHEN t0.c2 THEN t0.c75 ELSE t0.c2 END)) AND ((CASE t0.c0  WHEN 2.117479857E9 THEN t0.c75 WHEN t0.c2 THEN t0.c0 WHEN t0.c7 THEN t0.c0 ELSE t0.c7 END)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((UNLIKELY(DISTINCT t0.c2)) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE ((((t0.c1)) NOT BETWEEN ((CASE t0.c1  WHEN t0.c2 THEN t0.c75 ELSE t0.c2 END)) AND ((CASE t0.c0  WHEN 2.117479857E9 THEN t0.c75 WHEN t0.c2 THEN t0.c0 WHEN t0.c7 THEN t0.c0 ELSE t0.c7 END)))) ORDER BY ((UNLIKELY(DISTINCT t0.c2)) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(0.3340465052349424)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(0.3340465052349424)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(0.3340465052349424)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(0.3340465052349424)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(0.3340465052349424)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (RTRIM(((rt0.c2) NOT BETWEEN (x'') AND (t0.c7))));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((rt0.c2) NOT BETWEEN (x'') AND (t0.c7)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (RTRIM(((rt0.c2) NOT BETWEEN (x'') AND (t0.c7))));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((rt0.c2) NOT BETWEEN (x'') AND (t0.c7)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (RTRIM(((rt0.c2) NOT BETWEEN (x'') AND (t0.c7))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((((((NULL)OR((vt0.c0 IN ()))))AND(CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))OR(rt0.c0)))OR(((0.7034704870694967)!=(rt0.c2)))) WHERE (UPPER((((((((('p')OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((UPPER((((((((('p')OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((((NULL)OR((vt0.c0 IN ()))))AND(CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))OR(rt0.c0)))OR(((0.7034704870694967)!=(rt0.c2)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((((((NULL)OR((vt0.c0 IN ()))))AND(CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))OR(rt0.c0)))OR(((0.7034704870694967)!=(rt0.c2)))) WHERE (UPPER((((((((('p')OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((UPPER((((((((('p')OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((((NULL)OR((vt0.c0 IN ()))))AND(CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))OR(rt0.c0)))OR(((0.7034704870694967)!=(rt0.c2)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((((((NULL)OR((vt0.c0 IN ()))))AND(CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))OR(rt0.c0)))OR(((0.7034704870694967)!=(rt0.c2)))) WHERE (UPPER((((((((('p')OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 COLLATE BINARY THEN rt0.c2 WHEN CAST(rt0.c1 AS TEXT) THEN ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(0.2171311860777705)))AND(rt0.c1)) WHEN ((rt0.c1)%(rt0.c3)) THEN x'e8c7' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 COLLATE BINARY THEN rt0.c2 WHEN CAST(rt0.c1 AS TEXT) THEN ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(0.2171311860777705)))AND(rt0.c1)) WHEN ((rt0.c1)%(rt0.c3)) THEN x'e8c7' END) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 COLLATE BINARY THEN rt0.c2 WHEN CAST(rt0.c1 AS TEXT) THEN ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(0.2171311860777705)))AND(rt0.c1)) WHEN ((rt0.c1)%(rt0.c3)) THEN x'e8c7' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 COLLATE BINARY THEN rt0.c2 WHEN CAST(rt0.c1 AS TEXT) THEN ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(0.2171311860777705)))AND(rt0.c1)) WHEN ((rt0.c1)%(rt0.c3)) THEN x'e8c7' END) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 COLLATE BINARY THEN rt0.c2 WHEN CAST(rt0.c1 AS TEXT) THEN ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(0.2171311860777705)))AND(rt0.c1)) WHEN ((rt0.c1)%(rt0.c3)) THEN x'e8c7' END);
SELECT * FROM t0, vt0, rt0 WHERE (((((((rt0.c1)OR(t0.c75)))AND(vt0.c0)))!=(((vt0.c0)IS NOT(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(t0.c75)))AND(vt0.c0)))!=(((vt0.c0)IS NOT(t0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((((((rt0.c1)OR(t0.c75)))AND(vt0.c0)))!=(((vt0.c0)IS NOT(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(t0.c75)))AND(vt0.c0)))!=(((vt0.c0)IS NOT(t0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((((((rt0.c1)OR(t0.c75)))AND(vt0.c0)))!=(((vt0.c0)IS NOT(t0.c2)))));
SELECT ALL * FROM vt0 NOT INDEXED, vt1 WHERE (((((((vt0.c0)<(vt1.c0)))OR(NULL)))OR(((vt1.c0)/(vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0)|(vt1.c0)) THEN ABS(vt1.c0) WHEN (((vt0.c0))<>((vt0.c0))) THEN ((vt0.c0) NOT NULL) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0)!=(vt0.c0)) END DESC  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<(vt1.c0)))OR(NULL)))OR(((vt1.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt0.c0)|(vt1.c0)) THEN ABS(vt1.c0) WHEN (((vt0.c0))!=((vt0.c0))) THEN ((vt0.c0) NOT NULL) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0)!=(vt0.c0)) END DESC  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT ALL * FROM vt0 NOT INDEXED, vt1 WHERE (((((((vt0.c0)<(vt1.c0)))OR(NULL)))OR(((vt1.c0)/(vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0)|(vt1.c0)) THEN ABS(vt1.c0) WHEN (((vt0.c0))<>((vt0.c0))) THEN ((vt0.c0) NOT NULL) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0)!=(vt0.c0)) END DESC  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<(vt1.c0)))OR(NULL)))OR(((vt1.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt0.c0)|(vt1.c0)) THEN ABS(vt1.c0) WHEN (((vt0.c0))!=((vt0.c0))) THEN ((vt0.c0) NOT NULL) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0)!=(vt0.c0)) END DESC  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT ALL * FROM vt0 NOT INDEXED, vt1 WHERE (((((((vt0.c0)<(vt1.c0)))OR(NULL)))OR(((vt1.c0)/(vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0)|(vt1.c0)) THEN ABS(vt1.c0) WHEN (((vt0.c0))<>((vt0.c0))) THEN ((vt0.c0) NOT NULL) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0)!=(vt0.c0)) END DESC  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END;
SELECT ALL * FROM rt0, vt0 INNER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN t0.c7 WHEN rt0.c3 THEN rt0.c2 WHEN t0.c1 THEN rt0.c1 END)) AND ((LOWER(DISTINCT rt0.c0)))) WHERE (((ABS(0.9596943555426923))!=(((t0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(0.9596943555426923))!=(((t0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN t0.c7 WHEN rt0.c3 THEN rt0.c2 WHEN t0.c1 THEN rt0.c1 END)) AND ((LOWER(DISTINCT rt0.c0)))));
SELECT ALL * FROM rt0, vt0 INNER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN t0.c7 WHEN rt0.c3 THEN rt0.c2 WHEN t0.c1 THEN rt0.c1 END)) AND ((LOWER(DISTINCT rt0.c0)))) WHERE (((ABS(0.9596943555426923))!=(((t0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(0.9596943555426923))!=(((t0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN t0.c7 WHEN rt0.c3 THEN rt0.c2 WHEN t0.c1 THEN rt0.c1 END)) AND ((LOWER(DISTINCT rt0.c0)))));
SELECT ALL * FROM rt0, vt0 INNER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN t0.c7 WHEN rt0.c3 THEN rt0.c2 WHEN t0.c1 THEN rt0.c1 END)) AND ((LOWER(DISTINCT rt0.c0)))) WHERE (((ABS(0.9596943555426923))!=(((t0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2)))));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((((0X54affc51))<=((t0.c7)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((0X54affc51))<=((t0.c7)))) NOT NULL)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((((0X54affc51))<=((t0.c7)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((0X54affc51))<=((t0.c7)))) NOT NULL)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((((0X54affc51))<=((t0.c7)))) NOT NULL));
SELECT * FROM vt1, vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 RIGHT OUTER JOIN t0 ON LIKELIHOOD(t0.c0, 0.46405479144562534) COLLATE NOCASE WHERE ((((CAST(vt1.c0 AS NUMERIC)))>((TYPEOF(t0.c0))))) ORDER BY 0x97f2e29  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS NUMERIC)))>((TYPEOF(t0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0 RIGHT OUTER JOIN t0 ON LIKELIHOOD(t0.c0, 0.46405479144562534) COLLATE NOCASE ORDER BY 0x97f2e29  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 RIGHT OUTER JOIN t0 ON LIKELIHOOD(t0.c0, 0.46405479144562534) COLLATE NOCASE WHERE ((((CAST(vt1.c0 AS NUMERIC)))>((TYPEOF(t0.c0))))) ORDER BY 0x97f2e29  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS NUMERIC)))>((TYPEOF(t0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0 RIGHT OUTER JOIN t0 ON LIKELIHOOD(t0.c0, 0.46405479144562534) COLLATE NOCASE ORDER BY 0x97f2e29  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>=('335185327'))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND('*>W')))AND(vt0.c0)))OR(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=('335185327'))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND('*>W')))AND(vt0.c0)))OR(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>=('335185327'))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND('*>W')))AND(vt0.c0)))OR(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=('335185327'))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND('*>W')))AND(vt0.c0)))OR(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>=('335185327'))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND('*>W')))AND(vt0.c0)))OR(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM rt0, vt1 WHERE ('J+7') ORDER BY (+ (((rt0.c0) BETWEEN ('XE¨X') AND (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('J+7') IS TRUE)  as count FROM rt0, vt1 ORDER BY (+ (((rt0.c0) BETWEEN ('XE¨X') AND (rt0.c3)))) ASC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE ('J+7') ORDER BY (+ (((rt0.c0) BETWEEN ('XE¨X') AND (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('J+7') IS TRUE)  as count FROM rt0, vt1 ORDER BY (+ (((rt0.c0) BETWEEN ('XE¨X') AND (rt0.c3)))) ASC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE ('J+7') ORDER BY (+ (((rt0.c0) BETWEEN ('XE¨X') AND (rt0.c3)))) ASC  NULLS LAST;
SELECT * FROM rt0, vt0, t0 WHERE ((NOT (CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((NOT (CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((NOT (CAST(rt0.c3 AS INTEGER))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND('z{')) COLLATE RTRIM) ORDER BY ((CASE vt0.c0  WHEN 7.77383529E8 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))AND('z{')) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN 7.77383529E8 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND('z{')) COLLATE RTRIM) ORDER BY ((CASE vt0.c0  WHEN 7.77383529E8 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))AND('z{')) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN 7.77383529E8 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND('z{')) COLLATE RTRIM) ORDER BY ((CASE vt0.c0  WHEN 7.77383529E8 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (CAST(rt0.c0 AS REAL)) AND ('885179939'))) ORDER BY (rt0.c0 COLLATE NOCASE IN ())  NULLS LAST, (((((rt0.c2, rt0.c1, rt0.c1, rt0.c1, 0.7722332406980346)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c1, rt0.c1, rt0.c1)))) NOT BETWEEN (((((0.5652835708461368)AND(rt0.c2)))OR(-20874043))) AND (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND('454015511'))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (CAST(rt0.c0 AS REAL)) AND ('885179939'))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 COLLATE NOCASE IN ())  NULLS LAST, (((((rt0.c2, rt0.c1, rt0.c1, rt0.c1, 0.7722332406980346)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c1, rt0.c1, rt0.c1)))) NOT BETWEEN (((((0.5652835708461368)AND(rt0.c2)))OR(-20874043))) AND (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND('454015511')))));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (CAST(rt0.c0 AS REAL)) AND ('885179939'))) ORDER BY (rt0.c0 COLLATE NOCASE IN ())  NULLS LAST, (((((rt0.c2, rt0.c1, rt0.c1, rt0.c1, 0.7722332406980346)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c1, rt0.c1, rt0.c1)))) NOT BETWEEN (((((0.5652835708461368)AND(rt0.c2)))OR(-20874043))) AND (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND('454015511'))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (CAST(rt0.c0 AS REAL)) AND ('885179939'))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 COLLATE NOCASE IN ())  NULLS LAST, (((((rt0.c2, rt0.c1, rt0.c1, rt0.c1, 0.7722332406980346)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c1, rt0.c1, rt0.c1)))) NOT BETWEEN (((((0.5652835708461368)AND(rt0.c2)))OR(-20874043))) AND (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND('454015511')))));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (CAST(rt0.c0 AS REAL)) AND ('885179939'))) ORDER BY (rt0.c0 COLLATE NOCASE IN ())  NULLS LAST, (((((rt0.c2, rt0.c1, rt0.c1, rt0.c1, 0.7722332406980346)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c1, rt0.c1, rt0.c1)))) NOT BETWEEN (((((0.5652835708461368)AND(rt0.c2)))OR(-20874043))) AND (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND('454015511'))));
SELECT ALL * FROM t0 WHERE (((CASE t0.c7  WHEN t0.c75 THEN t0.c0 WHEN t0.c7 THEN t0.c1 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END)GLOB(NULL))) ORDER BY ((((SQLITE_COMPILEOPTION_USED(t0.c75))AND((t0.c2 IN ()))))AND(((t0.c1) NOT BETWEEN (t0.c7) AND (t0.c7))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c7  WHEN t0.c75 THEN t0.c0 WHEN t0.c7 THEN t0.c1 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END)GLOB(NULL))) IS TRUE)  as count FROM t0 ORDER BY ((((SQLITE_COMPILEOPTION_USED(t0.c75))AND((t0.c2 IN ()))))AND(((t0.c1) NOT BETWEEN (t0.c7) AND (t0.c7)))));
SELECT ALL * FROM t0 WHERE (((CASE t0.c7  WHEN t0.c75 THEN t0.c0 WHEN t0.c7 THEN t0.c1 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END)GLOB(NULL))) ORDER BY ((((SQLITE_COMPILEOPTION_USED(t0.c75))AND((t0.c2 IN ()))))AND(((t0.c1) NOT BETWEEN (t0.c7) AND (t0.c7))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c7  WHEN t0.c75 THEN t0.c0 WHEN t0.c7 THEN t0.c1 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END)GLOB(NULL))) IS TRUE)  as count FROM t0 ORDER BY ((((SQLITE_COMPILEOPTION_USED(t0.c75))AND((t0.c2 IN ()))))AND(((t0.c1) NOT BETWEEN (t0.c7) AND (t0.c7)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((((((((((vt1.c0 IN ()))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt1.c0 IN ()))))AND((('njo	b') ISNULL))))AND((~ (vt1.c0)))))OR(0.968013464980365)))AND(1157461840)));
SELECT SUM(count) FROM (SELECT (((((((((((((((vt1.c0 IN ()))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt1.c0 IN ()))))AND((('njo	b') ISNULL))))AND((~ (vt1.c0)))))OR(0.968013464980365)))AND(1157461840))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((((((((((vt1.c0 IN ()))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt1.c0 IN ()))))AND((('njo	b') ISNULL))))AND((~ (vt1.c0)))))OR(0.968013464980365)))AND(1157461840)));
SELECT SUM(count) FROM (SELECT (((((((((((((((vt1.c0 IN ()))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt1.c0 IN ()))))AND((('njo	b') ISNULL))))AND((~ (vt1.c0)))))OR(0.968013464980365)))AND(1157461840))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((((((((((vt1.c0 IN ()))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt1.c0 IN ()))))AND((('njo	b') ISNULL))))AND((~ (vt1.c0)))))OR(0.968013464980365)))AND(1157461840)));
SELECT ALL * FROM t0, rt0 WHERE ('v') ORDER BY (- (('1848917286' IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('v') IS TRUE)  as count FROM t0, rt0 ORDER BY (- (('1848917286' IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE ('v') ORDER BY (- (('1848917286' IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('v') IS TRUE)  as count FROM t0, rt0 ORDER BY (- (('1848917286' IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE ('v') ORDER BY (- (('1848917286' IN ()))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c2) IS TRUE)) ORDER BY ((((rt0.c2)OR(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))))OR(((rt0.c0) IS FALSE))), ((((((rt0.c0)OR(0X21672fc9)))OR(rt0.c2))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)OR(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))))OR(((rt0.c0) IS FALSE))), ((((((rt0.c0)OR(0x21672fc9)))OR(rt0.c2))) NOT NULL) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c2) IS TRUE)) ORDER BY ((((rt0.c2)OR(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))))OR(((rt0.c0) IS FALSE))), ((((((rt0.c0)OR(0X21672fc9)))OR(rt0.c2))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)OR(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))))OR(((rt0.c0) IS FALSE))), ((((((rt0.c0)OR(0x21672fc9)))OR(rt0.c2))) NOT NULL) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c2) IS TRUE)) ORDER BY ((((rt0.c2)OR(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))))OR(((rt0.c0) IS FALSE))), ((((((rt0.c0)OR(0X21672fc9)))OR(rt0.c2))) NOT NULL) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) ORDER BY rt0.c2  NULLS FIRST, ((rt0.c0 COLLATE BINARY)>=(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST, ((rt0.c0 COLLATE BINARY)>=(NULL))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) ORDER BY rt0.c2  NULLS FIRST, ((rt0.c0 COLLATE BINARY)>=(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST, ((rt0.c0 COLLATE BINARY)>=(NULL))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) ORDER BY rt0.c2  NULLS FIRST, ((rt0.c0 COLLATE BINARY)>=(NULL))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((vt1.c0 IN (t0.c0, 'wX1K*牜p\n*')))&(NULLIF(t0.c1, t0.c75))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (t0.c0, 'wX1K*牜p\n*')))&(NULLIF(t0.c1, t0.c75)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((vt1.c0 IN (t0.c0, 'wX1K*牜p\n*')))&(NULLIF(t0.c1, t0.c75))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (t0.c0, 'wX1K*牜p\n*')))&(NULLIF(t0.c1, t0.c75)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((vt1.c0 IN (t0.c0, 'wX1K*牜p\n*')))&(NULLIF(t0.c1, t0.c75))));
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (CASE x'6257b569'  WHEN rt0.c2 THEN rt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE x'6257b569'  WHEN rt0.c2 THEN rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (CASE x'6257b569'  WHEN rt0.c2 THEN rt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE x'6257b569'  WHEN rt0.c2 THEN rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (CASE x'6257b569'  WHEN rt0.c2 THEN rt0.c1 END COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE ('1746426974');
SELECT SUM(count) FROM (SELECT ALL (('1746426974') IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE ('1746426974');
SELECT SUM(count) FROM (SELECT ALL (('1746426974') IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE ('1746426974');
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CAST(((((rt0.c3)AND(vt1.c0)))AND(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c3)AND(vt1.c0)))AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CAST(((((rt0.c3)AND(vt1.c0)))AND(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c3)AND(vt1.c0)))AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CAST(((((rt0.c3)AND(vt1.c0)))AND(rt0.c1)) AS BLOB));
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((((t0.c2)OR(t0.c1)))AND(t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)OR(t0.c1)))AND(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((((t0.c2)OR(t0.c1)))AND(t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)OR(t0.c1)))AND(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((((t0.c2)OR(t0.c1)))AND(t0.c0))) NOTNULL));
SELECT * FROM t0 WHERE (CASE WHEN t0.c75 THEN t0.c75 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c75 THEN t0.c75 END COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN t0.c75 THEN t0.c75 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c75 THEN t0.c75 END COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN t0.c75 THEN t0.c75 END COLLATE RTRIM);
SELECT * FROM vt0, rt0 WHERE ((NOT (rt0.c3))) ORDER BY CAST((('0.028475065615767736')LIKE(rt0.c3)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c3))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((('0.028475065615767736')LIKE(rt0.c3)) AS REAL)  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((NOT (rt0.c3))) ORDER BY CAST((('0.028475065615767736')LIKE(rt0.c3)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c3))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((('0.028475065615767736')LIKE(rt0.c3)) AS REAL)  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((NOT (rt0.c3))) ORDER BY CAST((('0.028475065615767736')LIKE(rt0.c3)) AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0, vt0, rt0 WHERE ('' COLLATE NOCASE) ORDER BY ((rt0.c0) NOT NULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (('' COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, vt0, rt0 ORDER BY ((rt0.c0) NOT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, t0, vt0, rt0 WHERE ('' COLLATE NOCASE) ORDER BY ((rt0.c0) NOT NULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (('' COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, vt0, rt0 ORDER BY ((rt0.c0) NOT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, t0, vt0, rt0 WHERE ('' COLLATE NOCASE) ORDER BY ((rt0.c0) NOT NULL) COLLATE NOCASE;
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (CASE TOTAL_CHANGES()  WHEN CASE WHEN t0.c75 THEN t0.c75 END THEN CAST(t0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TOTAL_CHANGES()  WHEN CASE WHEN t0.c75 THEN t0.c75 END THEN CAST(t0.c1 AS TEXT) END) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (CASE TOTAL_CHANGES()  WHEN CASE WHEN t0.c75 THEN t0.c75 END THEN CAST(t0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TOTAL_CHANGES()  WHEN CASE WHEN t0.c75 THEN t0.c75 END THEN CAST(t0.c1 AS TEXT) END) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (CASE TOTAL_CHANGES()  WHEN CASE WHEN t0.c75 THEN t0.c75 END THEN CAST(t0.c1 AS TEXT) END);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((((t0.c7)LIKE(x'')) IN ())) ORDER BY (((+ (t0.c2))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c7)LIKE(x'')) IN ())) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY (((+ (t0.c2))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((((t0.c7)LIKE(x'')) IN ())) ORDER BY (((+ (t0.c2))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c7)LIKE(x'')) IN ())) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY (((+ (t0.c2))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((((t0.c7)LIKE(x'')) IN ())) ORDER BY (((+ (t0.c2))) IS TRUE) DESC;
SELECT * FROM t0, rt0 WHERE (NULL) ORDER BY CAST(UPPER(DISTINCT rt0.c3) AS TEXT)  NULLS FIRST, CAST('㫋㣅9不uv' AS BLOB) ASC  NULLS LAST, ((0X67190496) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(UPPER(DISTINCT rt0.c3) AS TEXT)  NULLS FIRST, CAST('㫋㣅9不uv' AS BLOB) ASC  NULLS LAST, ((0x67190496) IS TRUE)  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (NULL) ORDER BY CAST(UPPER(DISTINCT rt0.c3) AS TEXT)  NULLS FIRST, CAST('㫋㣅9不uv' AS BLOB) ASC  NULLS LAST, ((0X67190496) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(UPPER(DISTINCT rt0.c3) AS TEXT)  NULLS FIRST, CAST('㫋㣅9不uv' AS BLOB) ASC  NULLS LAST, ((0x67190496) IS TRUE)  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (NULL) ORDER BY CAST(UPPER(DISTINCT rt0.c3) AS TEXT)  NULLS FIRST, CAST('㫋㣅9不uv' AS BLOB) ASC  NULLS LAST, ((0X67190496) IS TRUE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c2) BETWEEN (t0.c7) AND (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2) BETWEEN (t0.c7) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c2) BETWEEN (t0.c7) AND (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2) BETWEEN (t0.c7) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c2) BETWEEN (t0.c7) AND (t0.c0)) IN ()));
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON (~ ((((rt0.c1)) BETWEEN ((-1728785718)) AND ((rt0.c0))))) INNER JOIN vt0 ON ((((((((((t0.c75) NOT NULL))AND('Asd)Q\}p%')))AND(rt0.c2 COLLATE RTRIM)))OR(((0.9310081332814585) IS FALSE))))OR(CAST(rt0.c1 AS NUMERIC))) WHERE (0.38413843848511997) ORDER BY (((((t0.c75)) NOT BETWEEN (('0-ꊌ7')) AND ((rt0.c1))))<>((t0.c2 IN (rt0.c2, t0.c75)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.38413843848511997) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (~ ((((rt0.c1)) BETWEEN ((-1728785718)) AND ((rt0.c0))))) INNER JOIN vt0 ON ((((((((((t0.c75) NOT NULL))AND('Asd)Q\}p%')))AND(rt0.c2 COLLATE RTRIM)))OR(((0.9310081332814585) IS FALSE))))OR(CAST(rt0.c1 AS NUMERIC))) ORDER BY (((((t0.c75)) NOT BETWEEN (('0-ꊌ7')) AND ((rt0.c1))))!=((t0.c2 IN (rt0.c2, t0.c75)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON (~ ((((rt0.c1)) BETWEEN ((-1728785718)) AND ((rt0.c0))))) INNER JOIN vt0 ON ((((((((((t0.c75) NOT NULL))AND('Asd)Q\}p%')))AND(rt0.c2 COLLATE RTRIM)))OR(((0.9310081332814585) IS FALSE))))OR(CAST(rt0.c1 AS NUMERIC))) WHERE (0.38413843848511997) ORDER BY (((((t0.c75)) NOT BETWEEN (('0-ꊌ7')) AND ((rt0.c1))))<>((t0.c2 IN (rt0.c2, t0.c75)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.38413843848511997) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (~ ((((rt0.c1)) BETWEEN ((-1728785718)) AND ((rt0.c0))))) INNER JOIN vt0 ON ((((((((((t0.c75) NOT NULL))AND('Asd)Q\}p%')))AND(rt0.c2 COLLATE RTRIM)))OR(((0.9310081332814585) IS FALSE))))OR(CAST(rt0.c1 AS NUMERIC))) ORDER BY (((((t0.c75)) NOT BETWEEN (('0-ꊌ7')) AND ((rt0.c1))))!=((t0.c2 IN (rt0.c2, t0.c75)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON (~ ((((rt0.c1)) BETWEEN ((-1728785718)) AND ((rt0.c0))))) INNER JOIN vt0 ON ((((((((((t0.c75) NOT NULL))AND('Asd)Q\}p%')))AND(rt0.c2 COLLATE RTRIM)))OR(((0.9310081332814585) IS FALSE))))OR(CAST(rt0.c1 AS NUMERIC))) WHERE (0.38413843848511997) ORDER BY (((((t0.c75)) NOT BETWEEN (('0-ꊌ7')) AND ((rt0.c1))))<>((t0.c2 IN (rt0.c2, t0.c75)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, t0 WHERE (NULLIF('-1174188734', CAST(t0.c7 AS TEXT))) ORDER BY (~ (CASE WHEN NULL THEN t0.c7 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF('-1174188734', CAST(t0.c7 AS TEXT))) IS TRUE)  as count FROM rt0, t0 ORDER BY (~ (CASE WHEN NULL THEN t0.c7 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (NULLIF('-1174188734', CAST(t0.c7 AS TEXT))) ORDER BY (~ (CASE WHEN NULL THEN t0.c7 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF('-1174188734', CAST(t0.c7 AS TEXT))) IS TRUE)  as count FROM rt0, t0 ORDER BY (~ (CASE WHEN NULL THEN t0.c7 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (NULLIF('-1174188734', CAST(t0.c7 AS TEXT))) ORDER BY (~ (CASE WHEN NULL THEN t0.c7 END)) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CAST(0x6ba656b1 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(0X6ba656b1 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(0x6ba656b1 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(0X6ba656b1 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(0x6ba656b1 AS INTEGER) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (CASE (~ (t0.c75))  WHEN (((t0.c0, rt0.c3, t0.c1)) NOT BETWEEN (('', 0.9584670925223008, vt0.c0)) AND ((t0.c7, vt1.c0, rt0.c0))) THEN ((((t0.c7)AND(t0.c0)))AND(t0.c1)) ELSE ((((vt0.c0)AND(rt0.c0)))AND(t0.c0)) END) ORDER BY CAST(rt0.c2 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (t0.c75))  WHEN (((t0.c0, rt0.c3, t0.c1)) NOT BETWEEN (('', 0.9584670925223008, vt0.c0)) AND ((t0.c7, vt1.c0, rt0.c0))) THEN ((((t0.c7)AND(t0.c0)))AND(t0.c1)) ELSE ((((vt0.c0)AND(rt0.c0)))AND(t0.c0)) END) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY CAST(rt0.c2 AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (CASE (~ (t0.c75))  WHEN (((t0.c0, rt0.c3, t0.c1)) NOT BETWEEN (('', 0.9584670925223008, vt0.c0)) AND ((t0.c7, vt1.c0, rt0.c0))) THEN ((((t0.c7)AND(t0.c0)))AND(t0.c1)) ELSE ((((vt0.c0)AND(rt0.c0)))AND(t0.c0)) END) ORDER BY CAST(rt0.c2 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (t0.c75))  WHEN (((t0.c0, rt0.c3, t0.c1)) NOT BETWEEN (('', 0.9584670925223008, vt0.c0)) AND ((t0.c7, vt1.c0, rt0.c0))) THEN ((((t0.c7)AND(t0.c0)))AND(t0.c1)) ELSE ((((vt0.c0)AND(rt0.c0)))AND(t0.c0)) END) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY CAST(rt0.c2 AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (CASE (~ (t0.c75))  WHEN (((t0.c0, rt0.c3, t0.c1)) NOT BETWEEN (('', 0.9584670925223008, vt0.c0)) AND ((t0.c7, vt1.c0, rt0.c0))) THEN ((((t0.c7)AND(t0.c0)))AND(t0.c1)) ELSE ((((vt0.c0)AND(rt0.c0)))AND(t0.c0)) END) ORDER BY CAST(rt0.c2 AS NUMERIC) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((((rt0.c3) NOTNULL))IS((rt0.c0 IN ())))) ORDER BY (t0.c1 IN (rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOTNULL))IS((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY (t0.c1 IN (rt0.c1))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((((rt0.c3) NOTNULL))IS((rt0.c0 IN ())))) ORDER BY (t0.c1 IN (rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOTNULL))IS((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY (t0.c1 IN (rt0.c1))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((((rt0.c3) NOTNULL))IS((rt0.c0 IN ())))) ORDER BY (t0.c1 IN (rt0.c1))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT * FROM vt0, rt0, t0, vt1 WHERE (((((t0.c1) NOT BETWEEN (vt1.c0) AND (t0.c7))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (vt1.c0) AND (t0.c7))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (((((t0.c1) NOT BETWEEN (vt1.c0) AND (t0.c7))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (vt1.c0) AND (t0.c7))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (((((t0.c1) NOT BETWEEN (vt1.c0) AND (t0.c7))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE ((+ ((~ (NULL)))));
SELECT SUM(count) FROM (SELECT (((+ ((~ (NULL))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((~ (NULL)))));
SELECT SUM(count) FROM (SELECT (((+ ((~ (NULL))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((~ (NULL)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, '', (~ (vt0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC), vt1.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE ((((+ (vt1.c0)))IS NOT(NULLIF(DISTINCT vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))IS NOT(NULLIF(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, '', (~ (vt0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC), vt1.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, '', (~ (vt0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC), vt1.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE ((((+ (vt1.c0)))IS NOT(NULLIF(DISTINCT vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))IS NOT(NULLIF(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, '', (~ (vt0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC), vt1.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, '', (~ (vt0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC), vt1.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE ((((+ (vt1.c0)))IS NOT(NULLIF(DISTINCT vt1.c0, vt1.c0))));
SELECT * FROM vt1, t0, rt0, vt0 WHERE ('h|') ORDER BY CAST(vt1.c0 AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (('h|') IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY CAST(vt1.c0 AS BLOB) ASC);
SELECT * FROM vt1, t0, rt0, vt0 WHERE ('h|') ORDER BY CAST(vt1.c0 AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (('h|') IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY CAST(vt1.c0 AS BLOB) ASC);
SELECT * FROM vt1, t0, rt0, vt0 WHERE ('h|') ORDER BY CAST(vt1.c0 AS BLOB) ASC;
SELECT * FROM vt0, t0 WHERE (x'cbab');
SELECT SUM(count) FROM (SELECT ALL ((x'cbab') IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (x'cbab');
SELECT SUM(count) FROM (SELECT ALL ((x'cbab') IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (x'cbab');
SELECT ALL * FROM vt1, rt0, t0 WHERE (json_quote(x'')) ORDER BY -1.470338932E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(x'')) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY -1.470338932E9  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, t0 WHERE (json_quote(x'')) ORDER BY -1.470338932E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(x'')) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY -1.470338932E9  NULLS FIRST);
SELECT * FROM vt0, vt1 FULL OUTER JOIN rt0 ON CAST(((((vt0.c0)AND(rt0.c1)))OR(vt1.c0)) AS BLOB) INNER JOIN t0 ON CASE WHEN (t0.c1 IN ()) THEN rt0.c3 END WHERE ((~ (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON CAST(((((vt0.c0)AND(rt0.c1)))OR(vt1.c0)) AS BLOB) INNER JOIN t0 ON CASE WHEN (t0.c1 IN ()) THEN rt0.c3 END);
SELECT * FROM vt0, vt1 FULL OUTER JOIN rt0 ON CAST(((((vt0.c0)AND(rt0.c1)))OR(vt1.c0)) AS BLOB) INNER JOIN t0 ON CASE WHEN (t0.c1 IN ()) THEN rt0.c3 END WHERE ((~ (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON CAST(((((vt0.c0)AND(rt0.c1)))OR(vt1.c0)) AS BLOB) INNER JOIN t0 ON CASE WHEN (t0.c1 IN ()) THEN rt0.c3 END);
SELECT * FROM vt0, vt1 FULL OUTER JOIN rt0 ON CAST(((((vt0.c0)AND(rt0.c1)))OR(vt1.c0)) AS BLOB) INNER JOIN t0 ON CASE WHEN (t0.c1 IN ()) THEN rt0.c3 END WHERE ((~ (rt0.c1)));
SELECT ALL * FROM rt0, vt1, t0 CROSS JOIN vt0 ON ((((CAST(rt0.c2 AS NUMERIC))AND(('0.4189019055007147' IN ()))))AND((+ (t0.c1)))) WHERE (0.8760279181725253);
SELECT SUM(count) FROM (SELECT ((0.8760279181725253) IS TRUE)  as count FROM rt0, vt1, t0 CROSS JOIN vt0 ON ((((CAST(rt0.c2 AS NUMERIC))AND(('0.4189019055007147' IN ()))))AND((+ (t0.c1)))));
SELECT ALL * FROM rt0, vt1, t0 CROSS JOIN vt0 ON ((((CAST(rt0.c2 AS NUMERIC))AND(('0.4189019055007147' IN ()))))AND((+ (t0.c1)))) WHERE (0.8760279181725253);
SELECT SUM(count) FROM (SELECT ((0.8760279181725253) IS TRUE)  as count FROM rt0, vt1, t0 CROSS JOIN vt0 ON ((((CAST(rt0.c2 AS NUMERIC))AND(('0.4189019055007147' IN ()))))AND((+ (t0.c1)))));
SELECT ALL * FROM rt0, vt1, t0 CROSS JOIN vt0 ON ((((CAST(rt0.c2 AS NUMERIC))AND(('0.4189019055007147' IN ()))))AND((+ (t0.c1)))) WHERE (0.8760279181725253);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)IS NOT(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)IS NOT(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)IS NOT(rt0.c3))) ISNULL));
SELECT * FROM rt0, vt1, t0 FULL OUTER JOIN vt0 ON ((((t0.c7) NOT NULL)) BETWEEN (vt1.c0) AND (SQLITE_VERSION())) WHERE (((((CAST(vt1.c0 AS REAL))OR(((t0.c1)AND(vt0.c0)))))OR(((-895710228)<=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS REAL))OR(((t0.c1)AND(vt0.c0)))))OR(((-895710228)<=(t0.c0))))) IS TRUE)  as count FROM rt0, vt1, t0 FULL OUTER JOIN vt0 ON ((((t0.c7) NOT NULL)) BETWEEN (vt1.c0) AND (SQLITE_VERSION())));
SELECT * FROM rt0, vt1, t0 FULL OUTER JOIN vt0 ON ((((t0.c7) NOT NULL)) BETWEEN (vt1.c0) AND (SQLITE_VERSION())) WHERE (((((CAST(vt1.c0 AS REAL))OR(((t0.c1)AND(vt0.c0)))))OR(((-895710228)<=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS REAL))OR(((t0.c1)AND(vt0.c0)))))OR(((-895710228)<=(t0.c0))))) IS TRUE)  as count FROM rt0, vt1, t0 FULL OUTER JOIN vt0 ON ((((t0.c7) NOT NULL)) BETWEEN (vt1.c0) AND (SQLITE_VERSION())));
SELECT * FROM rt0, vt1, t0 FULL OUTER JOIN vt0 ON ((((t0.c7) NOT NULL)) BETWEEN (vt1.c0) AND (SQLITE_VERSION())) WHERE (((((CAST(vt1.c0 AS REAL))OR(((t0.c1)AND(vt0.c0)))))OR(((-895710228)<=(t0.c0)))));
SELECT * FROM vt0, t0, vt1, rt0 WHERE ((- ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT * FROM vt0, t0, vt1, rt0 WHERE ((- ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT * FROM vt0, t0, vt1, rt0 WHERE ((- ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))));
SELECT * FROM rt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (x'');
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN vt1 ON ((((((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)AND(TRIM(rt0.c0))))OR(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))))AND((+ (vt0.c0)))))OR(rt0.c1)) WHERE ('-1036802462') ORDER BY CASE ((vt1.c0)==(rt0.c0))  WHEN (rt0.c2 IN ()) THEN (rt0.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1036802462') IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt1 ON ((((((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)AND(TRIM(rt0.c0))))OR(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))))AND((+ (vt0.c0)))))OR(rt0.c1)) ORDER BY CASE ((vt1.c0)==(rt0.c0))  WHEN (rt0.c2 IN ()) THEN (rt0.c0 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN vt1 ON ((((((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)AND(TRIM(rt0.c0))))OR(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))))AND((+ (vt0.c0)))))OR(rt0.c1)) WHERE ('-1036802462') ORDER BY CASE ((vt1.c0)==(rt0.c0))  WHEN (rt0.c2 IN ()) THEN (rt0.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1036802462') IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt1 ON ((((((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)AND(TRIM(rt0.c0))))OR(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))))AND((+ (vt0.c0)))))OR(rt0.c1)) ORDER BY CASE ((vt1.c0)==(rt0.c0))  WHEN (rt0.c2 IN ()) THEN (rt0.c0 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN vt1 ON ((((((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)AND(TRIM(rt0.c0))))OR(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))))AND((+ (vt0.c0)))))OR(rt0.c1)) WHERE ('-1036802462') ORDER BY CASE ((vt1.c0)==(rt0.c0))  WHEN (rt0.c2 IN ()) THEN (rt0.c0 IN ()) END  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (CASE (~ (vt1.c0))  WHEN ((749238635)/(vt1.c0)) THEN ((vt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt1.c0))  WHEN ((749238635)/(vt1.c0)) THEN ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE (~ (vt1.c0))  WHEN ((749238635)/(vt1.c0)) THEN ((vt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt1.c0))  WHEN ((749238635)/(vt1.c0)) THEN ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE (~ (vt1.c0))  WHEN ((749238635)/(vt1.c0)) THEN ((vt1.c0) IS TRUE) END);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOTNULL)) ORDER BY (vt1.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOTNULL)) ORDER BY (vt1.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOTNULL)) ORDER BY (vt1.c0 IN ());
SELECT ALL COUNT(*) FROM vt1, t0 NATURAL JOIN rt0 WHERE ((NOT (CASE rt0.c3  WHEN t0.c1 THEN rt0.c2 ELSE t0.c75 END))) ORDER BY (((t0.c1)) BETWEEN ((7.45640708E8)) AND ((rt0.c1))) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt0.c3  WHEN t0.c1 THEN rt0.c2 ELSE t0.c75 END))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN rt0 ORDER BY (((t0.c1)) BETWEEN ((7.45640708E8)) AND ((rt0.c1))) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 NATURAL JOIN rt0 WHERE ((NOT (CASE rt0.c3  WHEN t0.c1 THEN rt0.c2 ELSE t0.c75 END))) ORDER BY (((t0.c1)) BETWEEN ((7.45640708E8)) AND ((rt0.c1))) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt0.c3  WHEN t0.c1 THEN rt0.c2 ELSE t0.c75 END))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN rt0 ORDER BY (((t0.c1)) BETWEEN ((7.45640708E8)) AND ((rt0.c1))) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 NATURAL JOIN rt0 WHERE ((NOT (CASE rt0.c3  WHEN t0.c1 THEN rt0.c2 ELSE t0.c75 END))) ORDER BY (((t0.c1)) BETWEEN ((7.45640708E8)) AND ((rt0.c1))) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT * FROM vt0, rt0, vt1, t0 WHERE (HEX(DISTINCT (NOT ('#褯bKPx'))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (NOT ('#褯bKPx')))) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT * FROM vt0, rt0, vt1, t0 WHERE (HEX(DISTINCT (NOT ('#褯bKPx'))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (NOT ('#褯bKPx')))) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT * FROM vt0, rt0, vt1, t0 WHERE (HEX(DISTINCT (NOT ('#褯bKPx'))));
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (ABS((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((+ (vt0.c0)))) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (ABS((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((+ (vt0.c0)))) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (ABS((+ (vt0.c0))));
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN (((t0.c7)-(rt0.c0))) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) BETWEEN (((t0.c7)-(rt0.c0))) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN (((t0.c7)-(rt0.c0))) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) BETWEEN (((t0.c7)-(rt0.c0))) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN (((t0.c7)-(rt0.c0))) AND ((vt1.c0 IN ()))));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON UPPER(CASE WHEN vt0.c0 THEN t0.c7 END) WHERE (SQLITE_COMPILEOPTION_USED(t0.c7) COLLATE NOCASE COLLATE BINARY) ORDER BY ((((t0.c1)&(t0.c0))) NOT BETWEEN (((vt0.c0)<>(t0.c0))) AND (((t0.c0)-(t0.c7))))  NULLS FIRST, ((0.5485666540341577) BETWEEN (((vt0.c0)GLOB(t0.c75))) AND (0.1890563881092695)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(t0.c7) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON UPPER(CASE WHEN vt0.c0 THEN t0.c7 END) ORDER BY ((((t0.c1)&(t0.c0))) NOT BETWEEN (((vt0.c0)<>(t0.c0))) AND (((t0.c0)-(t0.c7))))  NULLS FIRST, ((0.5485666540341577) BETWEEN (((vt0.c0)GLOB(t0.c75))) AND (0.1890563881092695)) ASC  NULLS LAST);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON UPPER(CASE WHEN vt0.c0 THEN t0.c7 END) WHERE (SQLITE_COMPILEOPTION_USED(t0.c7) COLLATE NOCASE COLLATE BINARY) ORDER BY ((((t0.c1)&(t0.c0))) NOT BETWEEN (((vt0.c0)<>(t0.c0))) AND (((t0.c0)-(t0.c7))))  NULLS FIRST, ((0.5485666540341577) BETWEEN (((vt0.c0)GLOB(t0.c75))) AND (0.1890563881092695)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(t0.c7) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON UPPER(CASE WHEN vt0.c0 THEN t0.c7 END) ORDER BY ((((t0.c1)&(t0.c0))) NOT BETWEEN (((vt0.c0)<>(t0.c0))) AND (((t0.c0)-(t0.c7))))  NULLS FIRST, ((0.5485666540341577) BETWEEN (((vt0.c0)GLOB(t0.c75))) AND (0.1890563881092695)) ASC  NULLS LAST);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON UPPER(CASE WHEN vt0.c0 THEN t0.c7 END) WHERE (SQLITE_COMPILEOPTION_USED(t0.c7) COLLATE NOCASE COLLATE BINARY) ORDER BY ((((t0.c1)&(t0.c0))) NOT BETWEEN (((vt0.c0)<>(t0.c0))) AND (((t0.c0)-(t0.c7))))  NULLS FIRST, ((0.5485666540341577) BETWEEN (((vt0.c0)GLOB(t0.c75))) AND (0.1890563881092695)) ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 CROSS JOIN t0 ON (((+ (t0.c1))) IS FALSE) WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<<((rt0.c1 IN ())))) ORDER BY ((((rt0.c1)AND(rt0.c1)))AND(t0.c1)) COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<<((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN t0 ON (((+ (t0.c1))) IS FALSE) ORDER BY ((((rt0.c1)AND(rt0.c1)))AND(t0.c1)) COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 CROSS JOIN t0 ON (((+ (t0.c1))) IS FALSE) WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<<((rt0.c1 IN ())))) ORDER BY ((((rt0.c1)AND(rt0.c1)))AND(t0.c1)) COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<<((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN t0 ON (((+ (t0.c1))) IS FALSE) ORDER BY ((((rt0.c1)AND(rt0.c1)))AND(t0.c1)) COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 CROSS JOIN t0 ON (((+ (t0.c1))) IS FALSE) WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<<((rt0.c1 IN ())))) ORDER BY ((((rt0.c1)AND(rt0.c1)))AND(t0.c1)) COLLATE RTRIM COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (((t0.c75)LIKE(rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c75)LIKE(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (((t0.c75)LIKE(rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c75)LIKE(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (((t0.c75)LIKE(rt0.c3)) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (((((t0.c2) ISNULL))OR((((t0.c1))<=((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) ISNULL))OR((((t0.c1))<=((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c2) ISNULL))OR((((t0.c1))<=((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) ISNULL))OR((((t0.c1))<=((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c2) ISNULL))OR((((t0.c1))<=((t0.c0))))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(-1635640860 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(-1635640860 AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(-1635640860 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(-1635640860 AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(-1635640860 AS TEXT));
SELECT ALL * FROM t0, vt1, vt0 WHERE ('-1077412053') ORDER BY CAST(((t0.c75)LIKE(1946310355)) AS REAL);
SELECT SUM(count) FROM (SELECT (('-1077412053') IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST(((t0.c75)LIKE(1946310355)) AS REAL));
SELECT ALL * FROM t0, vt1, vt0 WHERE ('-1077412053') ORDER BY CAST(((t0.c75)LIKE(1946310355)) AS REAL);
SELECT SUM(count) FROM (SELECT (('-1077412053') IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST(((t0.c75)LIKE(1946310355)) AS REAL));
SELECT ALL * FROM t0, vt1, vt0 WHERE ('-1077412053') ORDER BY CAST(((t0.c75)LIKE(1946310355)) AS REAL);
SELECT COUNT(*) FROM t0, vt1 WHERE ((- ((((t0.c0))>=((t0.c75))))));
SELECT SUM(count) FROM (SELECT (((- ((((t0.c0))>=((t0.c75)))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((- ((((t0.c0))>=((t0.c75))))));
SELECT SUM(count) FROM (SELECT (((- ((((t0.c0))>=((t0.c75)))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((- ((((t0.c0))>=((t0.c75))))));
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c3) IS TRUE)) NOT BETWEEN (rt0.c0) AND (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE 0.48652423846003445 END))) ORDER BY (((vt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN (((+ (rt0.c2)), (rt0.c3 IN ()), ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)))) AND ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c3)), (NOT (rt0.c3)), (rt0.c3 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS TRUE)) NOT BETWEEN (rt0.c0) AND (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE 0.48652423846003445 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN (((+ (rt0.c2)), (rt0.c3 IN ()), ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)))) AND ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c3)), (NOT (rt0.c3)), (rt0.c3 IN ()))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c3) IS TRUE)) NOT BETWEEN (rt0.c0) AND (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE 0.48652423846003445 END))) ORDER BY (((vt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN (((+ (rt0.c2)), (rt0.c3 IN ()), ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)))) AND ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c3)), (NOT (rt0.c3)), (rt0.c3 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS TRUE)) NOT BETWEEN (rt0.c0) AND (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE 0.48652423846003445 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN (((+ (rt0.c2)), (rt0.c3 IN ()), ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)))) AND ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c3)), (NOT (rt0.c3)), (rt0.c3 IN ()))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c3) IS TRUE)) NOT BETWEEN (rt0.c0) AND (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE 0.48652423846003445 END))) ORDER BY (((vt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN (((+ (rt0.c2)), (rt0.c3 IN ()), ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)))) AND ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c3)), (NOT (rt0.c3)), (rt0.c3 IN ()))))  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c2)AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)AND(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)));
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c7) AND (t0.c1))  WHEN IFNULL(t0.c7, t0.c75) THEN 'W ' COLLATE NOCASE WHEN t0.c75 COLLATE NOCASE THEN CASE WHEN t0.c1 THEN t0.c2 END WHEN (t0.c7 IN (NULL)) THEN CAST(NULL AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) NOT BETWEEN (t0.c7) AND (t0.c1))  WHEN IFNULL(t0.c7, t0.c75) THEN 'W ' COLLATE NOCASE WHEN t0.c75 COLLATE NOCASE THEN CASE WHEN t0.c1 THEN t0.c2 END WHEN (t0.c7 IN (NULL)) THEN CAST(NULL AS REAL) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c7) AND (t0.c1))  WHEN IFNULL(t0.c7, t0.c75) THEN 'W ' COLLATE NOCASE WHEN t0.c75 COLLATE NOCASE THEN CASE WHEN t0.c1 THEN t0.c2 END WHEN (t0.c7 IN (NULL)) THEN CAST(NULL AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) NOT BETWEEN (t0.c7) AND (t0.c1))  WHEN IFNULL(t0.c7, t0.c75) THEN 'W ' COLLATE NOCASE WHEN t0.c75 COLLATE NOCASE THEN CASE WHEN t0.c1 THEN t0.c2 END WHEN (t0.c7 IN (NULL)) THEN CAST(NULL AS REAL) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c7) AND (t0.c1))  WHEN IFNULL(t0.c7, t0.c75) THEN 'W ' COLLATE NOCASE WHEN t0.c75 COLLATE NOCASE THEN CASE WHEN t0.c1 THEN t0.c2 END WHEN (t0.c7 IN (NULL)) THEN CAST(NULL AS REAL) END);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM vt1, t0 RIGHT OUTER JOIN rt0 ON rt0.c3 COLLATE BINARY WHERE ((((((((((((t0.c75)OR(t0.c1)))AND(t0.c0)))AND(t0.c7)))AND(rt0.c3))))<(((- (rt0.c2)))))) ORDER BY CASE WHEN t0.c2 COLLATE NOCASE THEN rt0.c2 COLLATE RTRIM ELSE ((0xffffffffdbcbc172) IS TRUE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c75)OR(t0.c1)))AND(t0.c0)))AND(t0.c7)))AND(rt0.c3))))<(((- (rt0.c2)))))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN rt0 ON rt0.c3 COLLATE BINARY ORDER BY CASE WHEN t0.c2 COLLATE NOCASE THEN rt0.c2 COLLATE RTRIM ELSE ((0Xffffffffdbcbc172) IS TRUE) END DESC  NULLS LAST);
SELECT ALL * FROM vt1, t0 RIGHT OUTER JOIN rt0 ON rt0.c3 COLLATE BINARY WHERE ((((((((((((t0.c75)OR(t0.c1)))AND(t0.c0)))AND(t0.c7)))AND(rt0.c3))))<(((- (rt0.c2)))))) ORDER BY CASE WHEN t0.c2 COLLATE NOCASE THEN rt0.c2 COLLATE RTRIM ELSE ((0xffffffffdbcbc172) IS TRUE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c75)OR(t0.c1)))AND(t0.c0)))AND(t0.c7)))AND(rt0.c3))))<(((- (rt0.c2)))))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN rt0 ON rt0.c3 COLLATE BINARY ORDER BY CASE WHEN t0.c2 COLLATE NOCASE THEN rt0.c2 COLLATE RTRIM ELSE ((0Xffffffffdbcbc172) IS TRUE) END DESC  NULLS LAST);
SELECT ALL * FROM vt1, t0 RIGHT OUTER JOIN rt0 ON rt0.c3 COLLATE BINARY WHERE ((((((((((((t0.c75)OR(t0.c1)))AND(t0.c0)))AND(t0.c7)))AND(rt0.c3))))<(((- (rt0.c2)))))) ORDER BY CASE WHEN t0.c2 COLLATE NOCASE THEN rt0.c2 COLLATE RTRIM ELSE ((0xffffffffdbcbc172) IS TRUE) END DESC  NULLS LAST;
SELECT * FROM t0, rt0, vt0 WHERE ((NOT (((x'')!=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((x'')!=(rt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((NOT (((x'')!=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((x'')!=(rt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((NOT (((x'')!=(rt0.c2)))));
SELECT ALL * FROM t0, rt0 WHERE (((CAST(t0.c75 AS TEXT)) NOTNULL)) ORDER BY LIKE(CASE WHEN rt0.c3 THEN t0.c1 WHEN t0.c7 THEN rt0.c2 WHEN t0.c75 THEN t0.c75 END, ((NULL)%(t0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c75 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY LIKE(CASE WHEN rt0.c3 THEN t0.c1 WHEN t0.c7 THEN rt0.c2 WHEN t0.c75 THEN t0.c75 END, ((NULL)%(t0.c2))) DESC);
SELECT ALL * FROM t0, rt0 WHERE (((CAST(t0.c75 AS TEXT)) NOTNULL)) ORDER BY LIKE(CASE WHEN rt0.c3 THEN t0.c1 WHEN t0.c7 THEN rt0.c2 WHEN t0.c75 THEN t0.c75 END, ((NULL)%(t0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c75 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY LIKE(CASE WHEN rt0.c3 THEN t0.c1 WHEN t0.c7 THEN rt0.c2 WHEN t0.c75 THEN t0.c75 END, ((NULL)%(t0.c2))) DESC);
SELECT ALL * FROM t0, rt0 WHERE (((CAST(t0.c75 AS TEXT)) NOTNULL)) ORDER BY LIKE(CASE WHEN rt0.c3 THEN t0.c1 WHEN t0.c7 THEN rt0.c2 WHEN t0.c75 THEN t0.c75 END, ((NULL)%(t0.c2))) DESC;
SELECT * FROM t0, rt0, vt0, vt1 WHERE (((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (((t0.c7) BETWEEN (t0.c0) AND (vt0.c0))) AND (x''))) ORDER BY ((t0.c7)<=(TIME(t0.c0, rt0.c3, t0.c2, rt0.c2, t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (((t0.c7) BETWEEN (t0.c0) AND (vt0.c0))) AND (x''))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY ((t0.c7)<=(TIME(t0.c0, rt0.c3, t0.c2, rt0.c2, t0.c0)))  NULLS LAST);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (((t0.c7) BETWEEN (t0.c0) AND (vt0.c0))) AND (x''))) ORDER BY ((t0.c7)<=(TIME(t0.c0, rt0.c3, t0.c2, rt0.c2, t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (((t0.c7) BETWEEN (t0.c0) AND (vt0.c0))) AND (x''))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY ((t0.c7)<=(TIME(t0.c0, rt0.c3, t0.c2, rt0.c2, t0.c0)))  NULLS LAST);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (((t0.c7) BETWEEN (t0.c0) AND (vt0.c0))) AND (x''))) ORDER BY ((t0.c7)<=(TIME(t0.c0, rt0.c3, t0.c2, rt0.c2, t0.c0)))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)!=(vt0.c0)))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(vt0.c0)))AND(vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)!=(vt0.c0)))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(vt0.c0)))AND(vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)!=(vt0.c0)))AND(vt1.c0)));
SELECT * FROM t0 WHERE ((NOT (((t0.c0)GLOB(t0.c0))))) ORDER BY 0.901388957668844, 1434570435;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0)GLOB(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY 0.901388957668844, 1434570435);
SELECT * FROM t0 WHERE ((NOT (((t0.c0)GLOB(t0.c0))))) ORDER BY 0.901388957668844, 1434570435;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0)GLOB(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY 0.901388957668844, 1434570435);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c7)) NOT BETWEEN ((t0.c7)) AND ((t0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c7)) NOT BETWEEN ((t0.c7)) AND ((t0.c0)))) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c7)) NOT BETWEEN ((t0.c7)) AND ((t0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c7)) NOT BETWEEN ((t0.c7)) AND ((t0.c0)))) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c7)) NOT BETWEEN ((t0.c7)) AND ((t0.c0)))) NOT NULL));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((vt1.c0)) BETWEEN (((vt0.c0 IN (x'')))) AND (((vt0.c0 IN ())))) WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY ((((CAST(x'' AS BLOB))AND(vt1.c0 COLLATE BINARY)))AND((NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((vt1.c0)) BETWEEN (((vt0.c0 IN (x'')))) AND (((vt0.c0 IN ())))) ORDER BY ((((CAST(x'' AS BLOB))AND(vt1.c0 COLLATE BINARY)))AND((NOT (vt1.c0)))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((vt1.c0)) BETWEEN (((vt0.c0 IN (x'')))) AND (((vt0.c0 IN ())))) WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY ((((CAST(x'' AS BLOB))AND(vt1.c0 COLLATE BINARY)))AND((NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((vt1.c0)) BETWEEN (((vt0.c0 IN (x'')))) AND (((vt0.c0 IN ())))) ORDER BY ((((CAST(x'' AS BLOB))AND(vt1.c0 COLLATE BINARY)))AND((NOT (vt1.c0)))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((vt1.c0)) BETWEEN (((vt0.c0 IN (x'')))) AND (((vt0.c0 IN ())))) WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY ((((CAST(x'' AS BLOB))AND(vt1.c0 COLLATE BINARY)))AND((NOT (vt1.c0))));
SELECT * FROM rt0 NOT INDEXED, vt1, t0, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT * FROM rt0 NOT INDEXED, vt1, t0, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT * FROM rt0 NOT INDEXED, vt1, t0, vt0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('-1652515668' COLLATE NOCASE) ISNULL)) ORDER BY (((('釭C^DF6B')OR(((vt1.c0)AND(vt1.c0)))))OR(((vt1.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('-1652515668' COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((('釭C^DF6B')OR(((vt1.c0)AND(vt1.c0)))))OR(((vt1.c0) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('-1652515668' COLLATE NOCASE) ISNULL)) ORDER BY (((('釭C^DF6B')OR(((vt1.c0)AND(vt1.c0)))))OR(((vt1.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('-1652515668' COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((('釭C^DF6B')OR(((vt1.c0)AND(vt1.c0)))))OR(((vt1.c0) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('-1652515668' COLLATE NOCASE) ISNULL)) ORDER BY (((('釭C^DF6B')OR(((vt1.c0)AND(vt1.c0)))))OR(((vt1.c0) IS FALSE))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c3 THEN rt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c3 THEN rt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c3 THEN rt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c3 THEN rt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c3 THEN rt0.c1 END COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c75)AND(NULL)))AND(t0.c2)))AND(((t0.c2)>=(t0.c1)))))AND(t0.c1)))AND((((t0.c75))<((t0.c75))))))AND((((t0.c75))>((t0.c1)))))) ORDER BY (+ (((t0.c1) NOT NULL))) DESC, (((((((t0.c1)) NOT BETWEEN ((0.485636756953052)) AND ((t0.c7))))OR(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c75)))))OR(t0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c75)AND(NULL)))AND(t0.c2)))AND(((t0.c2)>=(t0.c1)))))AND(t0.c1)))AND((((t0.c75))<((t0.c75))))))AND((((t0.c75))>((t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c1) NOT NULL))) DESC, (((((((t0.c1)) NOT BETWEEN ((0.485636756953052)) AND ((t0.c7))))OR(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c75)))))OR(t0.c1 COLLATE RTRIM)) ASC);
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c75)AND(NULL)))AND(t0.c2)))AND(((t0.c2)>=(t0.c1)))))AND(t0.c1)))AND((((t0.c75))<((t0.c75))))))AND((((t0.c75))>((t0.c1)))))) ORDER BY (+ (((t0.c1) NOT NULL))) DESC, (((((((t0.c1)) NOT BETWEEN ((0.485636756953052)) AND ((t0.c7))))OR(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c75)))))OR(t0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c75)AND(NULL)))AND(t0.c2)))AND(((t0.c2)>=(t0.c1)))))AND(t0.c1)))AND((((t0.c75))<((t0.c75))))))AND((((t0.c75))>((t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c1) NOT NULL))) DESC, (((((((t0.c1)) NOT BETWEEN ((0.485636756953052)) AND ((t0.c7))))OR(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c75)))))OR(t0.c1 COLLATE RTRIM)) ASC);
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c75)AND(NULL)))AND(t0.c2)))AND(((t0.c2)>=(t0.c1)))))AND(t0.c1)))AND((((t0.c75))<((t0.c75))))))AND((((t0.c75))>((t0.c1)))))) ORDER BY (+ (((t0.c1) NOT NULL))) DESC, (((((((t0.c1)) NOT BETWEEN ((0.485636756953052)) AND ((t0.c7))))OR(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c75)))))OR(t0.c1 COLLATE RTRIM)) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(t0.c75)))*(((rt0.c1) NOT BETWEEN (t0.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(t0.c75)))*(((rt0.c1) NOT BETWEEN (t0.c0) AND (NULL))))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(t0.c75)))*(((rt0.c1) NOT BETWEEN (t0.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(t0.c75)))*(((rt0.c1) NOT BETWEEN (t0.c0) AND (NULL))))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(t0.c75)))*(((rt0.c1) NOT BETWEEN (t0.c0) AND (NULL)))));
SELECT ALL * FROM vt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((((HEX(vt1.c0))AND((((vt0.c0))<=((vt1.c0))))))OR((~ (vt0.c0)))) WHERE ((((vt1.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt1.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((HEX(vt1.c0))AND((((vt0.c0))<=((vt1.c0))))))OR((~ (vt0.c0)))));
SELECT ALL * FROM vt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((((HEX(vt1.c0))AND((((vt0.c0))<=((vt1.c0))))))OR((~ (vt0.c0)))) WHERE ((((vt1.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt1.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((HEX(vt1.c0))AND((((vt0.c0))<=((vt1.c0))))))OR((~ (vt0.c0)))));
SELECT ALL * FROM vt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((((HEX(vt1.c0))AND((((vt0.c0))<=((vt1.c0))))))OR((~ (vt0.c0)))) WHERE ((((vt1.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((vt1.c0) NOT NULL)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c75) AND (rt0.c0)))*(x'')) INNER JOIN t0 ON ((x'')IS NOT(0xffffffffc39b2bbe)) LEFT OUTER JOIN vt1 ON ((CASE x''  WHEN t0.c7 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END) NOTNULL) WHERE (((((t0.c1)AND(rt0.c3))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)AND(rt0.c3))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c75) AND (rt0.c0)))*(x'')) INNER JOIN t0 ON ((x'')IS NOT(0Xffffffffc39b2bbe)) LEFT OUTER JOIN vt1 ON ((CASE x''  WHEN t0.c7 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END) NOTNULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c75) AND (rt0.c0)))*(x'')) INNER JOIN t0 ON ((x'')IS NOT(0xffffffffc39b2bbe)) LEFT OUTER JOIN vt1 ON ((CASE x''  WHEN t0.c7 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END) NOTNULL) WHERE (((((t0.c1)AND(rt0.c3))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)AND(rt0.c3))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c75) AND (rt0.c0)))*(x'')) INNER JOIN t0 ON ((x'')IS NOT(0Xffffffffc39b2bbe)) LEFT OUTER JOIN vt1 ON ((CASE x''  WHEN t0.c7 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END) NOTNULL));
SELECT * FROM t0, vt1, vt0 WHERE (CASE WHEN (t0.c75 IN ()) THEN (((t0.c7))<((t0.c0))) ELSE ((t0.c75) NOT BETWEEN (t0.c7) AND (t0.c7)) END) ORDER BY (NOT (((t0.c7)<=(t0.c75))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c75 IN ()) THEN (((t0.c7))<((t0.c0))) ELSE ((t0.c75) NOT BETWEEN (t0.c7) AND (t0.c7)) END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (NOT (((t0.c7)<=(t0.c75)))));
SELECT * FROM t0, vt1, vt0 WHERE (CASE WHEN (t0.c75 IN ()) THEN (((t0.c7))<((t0.c0))) ELSE ((t0.c75) NOT BETWEEN (t0.c7) AND (t0.c7)) END) ORDER BY (NOT (((t0.c7)<=(t0.c75))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c75 IN ()) THEN (((t0.c7))<((t0.c0))) ELSE ((t0.c75) NOT BETWEEN (t0.c7) AND (t0.c7)) END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (NOT (((t0.c7)<=(t0.c75)))));
SELECT * FROM t0, vt1, vt0 WHERE (CASE WHEN (t0.c75 IN ()) THEN (((t0.c7))<((t0.c0))) ELSE ((t0.c75) NOT BETWEEN (t0.c7) AND (t0.c7)) END) ORDER BY (NOT (((t0.c7)<=(t0.c75))));
SELECT * FROM vt1, t0 INNER JOIN vt0 ON CASE CAST(t0.c1 AS INTEGER)  WHEN (rt0.c2 IN ()) THEN CAST(rt0.c1 AS BLOB) END INNER JOIN rt0 ON x'2749' WHERE (((((((rt0.c2)OR(t0.c0)))OR(t0.c0)))<=(t0.c0))) ORDER BY (((t0.c1 IN ()))=('-890166505')), ((t0.c1 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(t0.c0)))OR(t0.c0)))<=(t0.c0))) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON CASE CAST(t0.c1 AS INTEGER)  WHEN (rt0.c2 IN ()) THEN CAST(rt0.c1 AS BLOB) END INNER JOIN rt0 ON x'2749' ORDER BY (((t0.c1 IN ()))==('-890166505')), ((t0.c1 IN ()) IN ()) DESC);
SELECT * FROM vt1, t0 INNER JOIN vt0 ON CASE CAST(t0.c1 AS INTEGER)  WHEN (rt0.c2 IN ()) THEN CAST(rt0.c1 AS BLOB) END INNER JOIN rt0 ON x'2749' WHERE (((((((rt0.c2)OR(t0.c0)))OR(t0.c0)))<=(t0.c0))) ORDER BY (((t0.c1 IN ()))=('-890166505')), ((t0.c1 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(t0.c0)))OR(t0.c0)))<=(t0.c0))) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON CASE CAST(t0.c1 AS INTEGER)  WHEN (rt0.c2 IN ()) THEN CAST(rt0.c1 AS BLOB) END INNER JOIN rt0 ON x'2749' ORDER BY (((t0.c1 IN ()))==('-890166505')), ((t0.c1 IN ()) IN ()) DESC);
SELECT * FROM vt1, t0 INNER JOIN vt0 ON CASE CAST(t0.c1 AS INTEGER)  WHEN (rt0.c2 IN ()) THEN CAST(rt0.c1 AS BLOB) END INNER JOIN rt0 ON x'2749' WHERE (((((((rt0.c2)OR(t0.c0)))OR(t0.c0)))<=(t0.c0))) ORDER BY (((t0.c1 IN ()))=('-890166505')), ((t0.c1 IN ()) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM rt0, vt1 WHERE ((((('291234856') NOT BETWEEN (rt0.c0) AND ('1*賗>OsdU')))>=(x'167e6985'))) ORDER BY ('-536061614' IN ('7*]psP')) DESC;
SELECT SUM(count) FROM (SELECT (((((('291234856') NOT BETWEEN (rt0.c0) AND ('1*賗>OsdU')))>=(x'167e6985'))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ('-536061614' IN ('7*]psP')) DESC);
SELECT ALL * FROM rt0, vt1 WHERE ((((('291234856') NOT BETWEEN (rt0.c0) AND ('1*賗>OsdU')))>=(x'167e6985'))) ORDER BY ('-536061614' IN ('7*]psP')) DESC;
SELECT SUM(count) FROM (SELECT (((((('291234856') NOT BETWEEN (rt0.c0) AND ('1*賗>OsdU')))>=(x'167e6985'))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ('-536061614' IN ('7*]psP')) DESC);
SELECT ALL * FROM rt0, vt1 WHERE ((((('291234856') NOT BETWEEN (rt0.c0) AND ('1*賗>OsdU')))>=(x'167e6985'))) ORDER BY ('-536061614' IN ('7*]psP')) DESC;
SELECT COUNT(*) FROM vt0, vt1, rt0 INNER JOIN t0 ON rt0.c2 WHERE (LIKELY(DISTINCT t0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT t0.c1) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, rt0 INNER JOIN t0 ON rt0.c2);
SELECT COUNT(*) FROM vt0, vt1, rt0 INNER JOIN t0 ON rt0.c2 WHERE (LIKELY(DISTINCT t0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT t0.c1) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, rt0 INNER JOIN t0 ON rt0.c2);
SELECT COUNT(*) FROM vt0, vt1, rt0 INNER JOIN t0 ON rt0.c2 WHERE (LIKELY(DISTINCT t0.c1) COLLATE BINARY);
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE (((0Xffffffffefe11f1c) BETWEEN (t0.c7) AND (t0.c0)) COLLATE NOCASE) ORDER BY (((NOT (vt1.c0))) NOT BETWEEN (CASE WHEN t0.c75 THEN '' ELSE x'' END) AND (((((rt0.c2)OR(t0.c75)))OR(x'')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffefe11f1c) BETWEEN (t0.c7) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY (((NOT (vt1.c0))) NOT BETWEEN (CASE WHEN t0.c75 THEN '' ELSE x'' END) AND (((((rt0.c2)OR(t0.c75)))OR(x'')))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE (((0Xffffffffefe11f1c) BETWEEN (t0.c7) AND (t0.c0)) COLLATE NOCASE) ORDER BY (((NOT (vt1.c0))) NOT BETWEEN (CASE WHEN t0.c75 THEN '' ELSE x'' END) AND (((((rt0.c2)OR(t0.c75)))OR(x'')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffefe11f1c) BETWEEN (t0.c7) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY (((NOT (vt1.c0))) NOT BETWEEN (CASE WHEN t0.c75 THEN '' ELSE x'' END) AND (((((rt0.c2)OR(t0.c75)))OR(x'')))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE (((0Xffffffffefe11f1c) BETWEEN (t0.c7) AND (t0.c0)) COLLATE NOCASE) ORDER BY (((NOT (vt1.c0))) NOT BETWEEN (CASE WHEN t0.c75 THEN '' ELSE x'' END) AND (((((rt0.c2)OR(t0.c75)))OR(x'')))) DESC  NULLS LAST;
SELECT * FROM rt0, vt0, t0 WHERE (TYPEOF(rt0.c2) COLLATE BINARY) ORDER BY t0.c7 DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY t0.c7 DESC);
SELECT * FROM rt0, vt0, t0 WHERE (TYPEOF(rt0.c2) COLLATE BINARY) ORDER BY t0.c7 DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY t0.c7 DESC);
SELECT * FROM rt0, vt0, t0 WHERE (TYPEOF(rt0.c2) COLLATE BINARY) ORDER BY t0.c7 DESC;
SELECT ALL * FROM vt1 WHERE (CASE CASE vt1.c0  WHEN '-30120105' THEN vt1.c0 END  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0) NOT NULL) END) ORDER BY (((TYPEOF(vt1.c0), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)>=(vt1.c0))))<(('[BwV.', (NOT (vt1.c0)), 'R'))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt1.c0  WHEN '-30120105' THEN vt1.c0 END  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0) NOT NULL) END) IS TRUE)  as count FROM vt1 ORDER BY (((TYPEOF(vt1.c0), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)>=(vt1.c0))))<(('[BwV.', (NOT (vt1.c0)), 'R'))) DESC);
SELECT ALL * FROM vt1 WHERE (CASE CASE vt1.c0  WHEN '-30120105' THEN vt1.c0 END  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0) NOT NULL) END) ORDER BY (((TYPEOF(vt1.c0), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)>=(vt1.c0))))<(('[BwV.', (NOT (vt1.c0)), 'R'))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt1.c0  WHEN '-30120105' THEN vt1.c0 END  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0) NOT NULL) END) IS TRUE)  as count FROM vt1 ORDER BY (((TYPEOF(vt1.c0), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)>=(vt1.c0))))<(('[BwV.', (NOT (vt1.c0)), 'R'))) DESC);
SELECT ALL * FROM vt1 WHERE (CASE CASE vt1.c0  WHEN '-30120105' THEN vt1.c0 END  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0) NOT NULL) END) ORDER BY (((TYPEOF(vt1.c0), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)>=(vt1.c0))))<(('[BwV.', (NOT (vt1.c0)), 'R'))) DESC;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON 0.6304463177137687 FULL OUTER JOIN t0 ON TRIM(DISTINCT (((t0.c1)) BETWEEN ((t0.c7)) AND ((vt0.c0)))) INNER JOIN vt1 ON (((t0.c0)) BETWEEN ((((t0.c75)IS NOT(t0.c0)))) AND ((0.36600119922963503))) WHERE (((TOTAL_CHANGES())GLOB(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES())GLOB(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON 0.6304463177137687 FULL OUTER JOIN t0 ON TRIM(DISTINCT (((t0.c1)) BETWEEN ((t0.c7)) AND ((vt0.c0)))) INNER JOIN vt1 ON (((t0.c0)) BETWEEN ((((t0.c75)IS NOT(t0.c0)))) AND ((0.36600119922963503))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON 0.6304463177137687 FULL OUTER JOIN t0 ON TRIM(DISTINCT (((t0.c1)) BETWEEN ((t0.c7)) AND ((vt0.c0)))) INNER JOIN vt1 ON (((t0.c0)) BETWEEN ((((t0.c75)IS NOT(t0.c0)))) AND ((0.36600119922963503))) WHERE (((TOTAL_CHANGES())GLOB(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES())GLOB(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON 0.6304463177137687 FULL OUTER JOIN t0 ON TRIM(DISTINCT (((t0.c1)) BETWEEN ((t0.c7)) AND ((vt0.c0)))) INNER JOIN vt1 ON (((t0.c0)) BETWEEN ((((t0.c75)IS NOT(t0.c0)))) AND ((0.36600119922963503))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON 0.6304463177137687 FULL OUTER JOIN t0 ON TRIM(DISTINCT (((t0.c1)) BETWEEN ((t0.c7)) AND ((vt0.c0)))) INNER JOIN vt1 ON (((t0.c0)) BETWEEN ((((t0.c75)IS NOT(t0.c0)))) AND ((0.36600119922963503))) WHERE (((TOTAL_CHANGES())GLOB(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0 FULL OUTER JOIN t0 ON CAST(((((((((rt0.c1)AND(t0.c0)))AND(t0.c0)))OR(rt0.c1)))AND(t0.c2)) AS TEXT) WHERE (((((t0.c7)LIKE(t0.c1)))/(((t0.c2)<<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c7)LIKE(t0.c1)))/(((t0.c2)<<(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN t0 ON CAST(((((((((rt0.c1)AND(t0.c0)))AND(t0.c0)))OR(rt0.c1)))AND(t0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, rt0 FULL OUTER JOIN t0 ON CAST(((((((((rt0.c1)AND(t0.c0)))AND(t0.c0)))OR(rt0.c1)))AND(t0.c2)) AS TEXT) WHERE (((((t0.c7)LIKE(t0.c1)))/(((t0.c2)<<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c7)LIKE(t0.c1)))/(((t0.c2)<<(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN t0 ON CAST(((((((((rt0.c1)AND(t0.c0)))AND(t0.c0)))OR(rt0.c1)))AND(t0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, rt0 FULL OUTER JOIN t0 ON CAST(((((((((rt0.c1)AND(t0.c0)))AND(t0.c0)))OR(rt0.c1)))AND(t0.c2)) AS TEXT) WHERE (((((t0.c7)LIKE(t0.c1)))/(((t0.c2)<<(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (((rt0.c1) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (((rt0.c1) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (((rt0.c1) IS FALSE) COLLATE NOCASE);
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN vt0 ON CASE t0.c1  WHEN CAST(rt0.c0 AS NUMERIC) THEN (rt0.c0 IN (NULL)) END WHERE ('0.010309146706501626' COLLATE NOCASE) ORDER BY 0.25621793914536983 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.010309146706501626' COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON CASE t0.c1  WHEN CAST(rt0.c0 AS NUMERIC) THEN (rt0.c0 IN (NULL)) END ORDER BY 0.25621793914536983 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN vt0 ON CASE t0.c1  WHEN CAST(rt0.c0 AS NUMERIC) THEN (rt0.c0 IN (NULL)) END WHERE ('0.010309146706501626' COLLATE NOCASE) ORDER BY 0.25621793914536983 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.010309146706501626' COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON CASE t0.c1  WHEN CAST(rt0.c0 AS NUMERIC) THEN (rt0.c0 IN (NULL)) END ORDER BY 0.25621793914536983 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN vt0 ON CASE t0.c1  WHEN CAST(rt0.c0 AS NUMERIC) THEN (rt0.c0 IN (NULL)) END WHERE ('0.010309146706501626' COLLATE NOCASE) ORDER BY 0.25621793914536983 ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 INNER JOIN rt0 ON (((t0.c2, vt0.c0, rt0.c1))>((vt1.c0, t0.c75, vt1.c0))) COLLATE RTRIM CROSS JOIN t0 ON CASE WHEN rt0.c1 THEN vt0.c0 END COLLATE RTRIM WHERE (((x'')AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))))) ORDER BY ((((t0.c1) NOT BETWEEN ('&}2P8T6i') AND (vt1.c0)))<(((rt0.c2)||(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON (((t0.c2, vt0.c0, rt0.c1))>((vt1.c0, t0.c75, vt1.c0))) COLLATE RTRIM CROSS JOIN t0 ON CASE WHEN rt0.c1 THEN vt0.c0 END COLLATE RTRIM ORDER BY ((((t0.c1) NOT BETWEEN ('&}2P8T6i') AND (vt1.c0)))<(((rt0.c2)||(t0.c2)))) DESC);
SELECT ALL * FROM vt0, vt1 INNER JOIN rt0 ON (((t0.c2, vt0.c0, rt0.c1))>((vt1.c0, t0.c75, vt1.c0))) COLLATE RTRIM CROSS JOIN t0 ON CASE WHEN rt0.c1 THEN vt0.c0 END COLLATE RTRIM WHERE (((x'')AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))))) ORDER BY ((((t0.c1) NOT BETWEEN ('&}2P8T6i') AND (vt1.c0)))<(((rt0.c2)||(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON (((t0.c2, vt0.c0, rt0.c1))>((vt1.c0, t0.c75, vt1.c0))) COLLATE RTRIM CROSS JOIN t0 ON CASE WHEN rt0.c1 THEN vt0.c0 END COLLATE RTRIM ORDER BY ((((t0.c1) NOT BETWEEN ('&}2P8T6i') AND (vt1.c0)))<(((rt0.c2)||(t0.c2)))) DESC);
SELECT ALL * FROM vt0, vt1 INNER JOIN rt0 ON (((t0.c2, vt0.c0, rt0.c1))>((vt1.c0, t0.c75, vt1.c0))) COLLATE RTRIM CROSS JOIN t0 ON CASE WHEN rt0.c1 THEN vt0.c0 END COLLATE RTRIM WHERE (((x'')AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))))) ORDER BY ((((t0.c1) NOT BETWEEN ('&}2P8T6i') AND (vt1.c0)))<(((rt0.c2)||(t0.c2)))) DESC;
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON (((t0.c1 IN (1154177458))) IS FALSE) WHERE ((((t0.c7)) NOT BETWEEN ((((t0.c75) NOT BETWEEN (t0.c7) AND (t0.c7)))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c7)) NOT BETWEEN ((((t0.c75) NOT BETWEEN (t0.c7) AND (t0.c7)))) AND ((NULL)))) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON (((t0.c1 IN (1154177458))) IS FALSE));
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON (((t0.c1 IN (1154177458))) IS FALSE) WHERE ((((t0.c7)) NOT BETWEEN ((((t0.c75) NOT BETWEEN (t0.c7) AND (t0.c7)))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c7)) NOT BETWEEN ((((t0.c75) NOT BETWEEN (t0.c7) AND (t0.c7)))) AND ((NULL)))) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON (((t0.c1 IN (1154177458))) IS FALSE));
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON (((t0.c1 IN (1154177458))) IS FALSE) WHERE ((((t0.c7)) NOT BETWEEN ((((t0.c75) NOT BETWEEN (t0.c7) AND (t0.c7)))) AND ((NULL))));
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (((((t0.c1) ISNULL))=(((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) ISNULL))==(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (((((t0.c1) ISNULL))=(((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) ISNULL))==(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (((((t0.c1) ISNULL))=(((rt0.c1) IS FALSE))));
SELECT COUNT(*) FROM t0, rt0, vt1 NATURAL JOIN vt0 WHERE (((((((((vt1.c0)OR(t0.c75)))AND(t0.c75)))OR((- (NULL)))))OR(LIKELIHOOD(t0.c0, 0.41860079199393485))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)OR(t0.c75)))AND(t0.c75)))OR((- (NULL)))))OR(LIKELIHOOD(t0.c0, 0.41860079199393485)))) IS TRUE)  as count FROM t0, rt0, vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0, rt0, vt1 NATURAL JOIN vt0 WHERE (((((((((vt1.c0)OR(t0.c75)))AND(t0.c75)))OR((- (NULL)))))OR(LIKELIHOOD(t0.c0, 0.41860079199393485))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)OR(t0.c75)))AND(t0.c75)))OR((- (NULL)))))OR(LIKELIHOOD(t0.c0, 0.41860079199393485)))) IS TRUE)  as count FROM t0, rt0, vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0, rt0, vt1 NATURAL JOIN vt0 WHERE (((((((((vt1.c0)OR(t0.c75)))AND(t0.c75)))OR((- (NULL)))))OR(LIKELIHOOD(t0.c0, 0.41860079199393485))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN (((- (rt0.c0)))) AND ((rt0.c3 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN (((- (rt0.c0)))) AND ((rt0.c3 COLLATE BINARY)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN (((- (rt0.c0)))) AND ((rt0.c3 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN (((- (rt0.c0)))) AND ((rt0.c3 COLLATE BINARY)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN (((- (rt0.c0)))) AND ((rt0.c3 COLLATE BINARY))));
SELECT * FROM t0, rt0, vt1, vt0 WHERE (((((((((t0.c2)OR(vt0.c0)))OR(t0.c0)))OR(TYPEOF(DISTINCT t0.c2))))AND(((((rt0.c3)OR(t0.c2)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c2)OR(vt0.c0)))OR(t0.c0)))OR(TYPEOF(DISTINCT t0.c2))))AND(((((rt0.c3)OR(t0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT * FROM t0, rt0, vt1, vt0 WHERE (((((((((t0.c2)OR(vt0.c0)))OR(t0.c0)))OR(TYPEOF(DISTINCT t0.c2))))AND(((((rt0.c3)OR(t0.c2)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c2)OR(vt0.c0)))OR(t0.c0)))OR(TYPEOF(DISTINCT t0.c2))))AND(((((rt0.c3)OR(t0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT * FROM t0, rt0, vt1, vt0 WHERE (((((((((t0.c2)OR(vt0.c0)))OR(t0.c0)))OR(TYPEOF(DISTINCT t0.c2))))AND(((((rt0.c3)OR(t0.c2)))OR(vt0.c0)))));
SELECT * FROM rt0, vt1, vt0 CROSS JOIN t0 ON (((vt0.c0 IN ()))||(((t0.c7) NOTNULL))) WHERE ((((rt0.c2)) NOT BETWEEN ((CASE t0.c0  WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)) AND ((UPPER(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE t0.c0  WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)) AND ((UPPER(rt0.c3))))) IS TRUE)  as count FROM rt0, vt1, vt0 CROSS JOIN t0 ON (((vt0.c0 IN ()))||(((t0.c7) NOTNULL))));
SELECT * FROM rt0, vt1, vt0 CROSS JOIN t0 ON (((vt0.c0 IN ()))||(((t0.c7) NOTNULL))) WHERE ((((rt0.c2)) NOT BETWEEN ((CASE t0.c0  WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)) AND ((UPPER(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE t0.c0  WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)) AND ((UPPER(rt0.c3))))) IS TRUE)  as count FROM rt0, vt1, vt0 CROSS JOIN t0 ON (((vt0.c0 IN ()))||(((t0.c7) NOTNULL))));
SELECT * FROM rt0, vt1, vt0 CROSS JOIN t0 ON (((vt0.c0 IN ()))||(((t0.c7) NOTNULL))) WHERE ((((rt0.c2)) NOT BETWEEN ((CASE t0.c0  WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)) AND ((UPPER(rt0.c3)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((((NOT (vt0.c0)))AND(((t0.c0)>(t0.c7)))))OR((vt0.c0 IN ()))) WHERE ((((t0.c7) ISNULL) IN ())) ORDER BY ((t0.c7) BETWEEN (t0.c2) AND (t0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c7) ISNULL) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((((NOT (vt0.c0)))AND(((t0.c0)>(t0.c7)))))OR((vt0.c0 IN ()))) ORDER BY ((t0.c7) BETWEEN (t0.c2) AND (t0.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((((NOT (vt0.c0)))AND(((t0.c0)>(t0.c7)))))OR((vt0.c0 IN ()))) WHERE ((((t0.c7) ISNULL) IN ())) ORDER BY ((t0.c7) BETWEEN (t0.c2) AND (t0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c7) ISNULL) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((((NOT (vt0.c0)))AND(((t0.c0)>(t0.c7)))))OR((vt0.c0 IN ()))) ORDER BY ((t0.c7) BETWEEN (t0.c2) AND (t0.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((((NOT (vt0.c0)))AND(((t0.c0)>(t0.c7)))))OR((vt0.c0 IN ()))) WHERE ((((t0.c7) ISNULL) IN ())) ORDER BY ((t0.c7) BETWEEN (t0.c2) AND (t0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (0.36600119922963503);
SELECT SUM(count) FROM (SELECT ((0.36600119922963503) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.36600119922963503);
SELECT SUM(count) FROM (SELECT ((0.36600119922963503) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.36600119922963503);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c0, t0.c0, x'')) NOT BETWEEN ((((((((((((((rt0.c1)AND(t0.c2)))AND(rt0.c3)))OR(t0.c0)))OR(rt0.c1)))AND(t0.c1)))OR(t0.c7)), ((t0.c2)>(x'')), rt0.c2)) AND ((LOWER(DISTINCT rt0.c2), rt0.c3 COLLATE NOCASE, TRIM(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, t0.c0, x'')) NOT BETWEEN ((((((((((((((rt0.c1)AND(t0.c2)))AND(rt0.c3)))OR(t0.c0)))OR(rt0.c1)))AND(t0.c1)))OR(t0.c7)), ((t0.c2)>(x'')), rt0.c2)) AND ((LOWER(DISTINCT rt0.c2), rt0.c3 COLLATE NOCASE, TRIM(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c0, t0.c0, x'')) NOT BETWEEN ((((((((((((((rt0.c1)AND(t0.c2)))AND(rt0.c3)))OR(t0.c0)))OR(rt0.c1)))AND(t0.c1)))OR(t0.c7)), ((t0.c2)>(x'')), rt0.c2)) AND ((LOWER(DISTINCT rt0.c2), rt0.c3 COLLATE NOCASE, TRIM(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, t0.c0, x'')) NOT BETWEEN ((((((((((((((rt0.c1)AND(t0.c2)))AND(rt0.c3)))OR(t0.c0)))OR(rt0.c1)))AND(t0.c1)))OR(t0.c7)), ((t0.c2)>(x'')), rt0.c2)) AND ((LOWER(DISTINCT rt0.c2), rt0.c3 COLLATE NOCASE, TRIM(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c0, t0.c0, x'')) NOT BETWEEN ((((((((((((((rt0.c1)AND(t0.c2)))AND(rt0.c3)))OR(t0.c0)))OR(rt0.c1)))AND(t0.c1)))OR(t0.c7)), ((t0.c2)>(x'')), rt0.c2)) AND ((LOWER(DISTINCT rt0.c2), rt0.c3 COLLATE NOCASE, TRIM(rt0.c1)))));
SELECT * FROM t0 WHERE (((CAST(0Xffffffffebca3b1a AS TEXT)) NOT BETWEEN ((- (t0.c2))) AND (t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0xffffffffebca3b1a AS TEXT)) NOT BETWEEN ((- (t0.c2))) AND (t0.c2))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CAST(0Xffffffffebca3b1a AS TEXT)) NOT BETWEEN ((- (t0.c2))) AND (t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0xffffffffebca3b1a AS TEXT)) NOT BETWEEN ((- (t0.c2))) AND (t0.c2))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CAST(0Xffffffffebca3b1a AS TEXT)) NOT BETWEEN ((- (t0.c2))) AND (t0.c2)));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((CASE WHEN t0.c1 THEN rt0.c1 END IN ((+ (rt0.c1)), ((t0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c1 THEN rt0.c1 END IN ((+ (rt0.c1)), ((t0.c1) IS FALSE)))) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((CASE WHEN t0.c1 THEN rt0.c1 END IN ((+ (rt0.c1)), ((t0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c1 THEN rt0.c1 END IN ((+ (rt0.c1)), ((t0.c1) IS FALSE)))) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((CASE WHEN t0.c1 THEN rt0.c1 END IN ((+ (rt0.c1)), ((t0.c1) IS FALSE))));
SELECT * FROM rt0 WHERE (((((rt0.c0)<<(rt0.c0)))>=(((rt0.c3) NOTNULL)))) ORDER BY CASE CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END  WHEN rt0.c3 COLLATE NOCASE THEN CASE 0.4347511191667036  WHEN rt0.c0 THEN x'' END WHEN CAST(rt0.c0 AS INTEGER) THEN (NOT (rt0.c2)) WHEN (rt0.c3 IN ()) THEN rt0.c2 COLLATE BINARY ELSE CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(rt0.c0)))>=(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END  WHEN rt0.c3 COLLATE NOCASE THEN CASE 0.4347511191667036  WHEN rt0.c0 THEN x'' END WHEN CAST(rt0.c0 AS INTEGER) THEN (NOT (rt0.c2)) WHEN (rt0.c3 IN ()) THEN rt0.c2 COLLATE BINARY ELSE CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END END ASC);
SELECT * FROM rt0 WHERE (((((rt0.c0)<<(rt0.c0)))>=(((rt0.c3) NOTNULL)))) ORDER BY CASE CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END  WHEN rt0.c3 COLLATE NOCASE THEN CASE 0.4347511191667036  WHEN rt0.c0 THEN x'' END WHEN CAST(rt0.c0 AS INTEGER) THEN (NOT (rt0.c2)) WHEN (rt0.c3 IN ()) THEN rt0.c2 COLLATE BINARY ELSE CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(rt0.c0)))>=(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END  WHEN rt0.c3 COLLATE NOCASE THEN CASE 0.4347511191667036  WHEN rt0.c0 THEN x'' END WHEN CAST(rt0.c0 AS INTEGER) THEN (NOT (rt0.c2)) WHEN (rt0.c3 IN ()) THEN rt0.c2 COLLATE BINARY ELSE CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END END ASC);
SELECT * FROM rt0 WHERE (((((rt0.c0)<<(rt0.c0)))>=(((rt0.c3) NOTNULL)))) ORDER BY CASE CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END  WHEN rt0.c3 COLLATE NOCASE THEN CASE 0.4347511191667036  WHEN rt0.c0 THEN x'' END WHEN CAST(rt0.c0 AS INTEGER) THEN (NOT (rt0.c2)) WHEN (rt0.c3 IN ()) THEN rt0.c2 COLLATE BINARY ELSE CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END END ASC;
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((vt1.c0)*(rt0.c1))) NOT BETWEEN (((t0.c2)||(t0.c7))) AND (CASE t0.c1  WHEN rt0.c3 THEN t0.c2 WHEN rt0.c3 THEN t0.c7 WHEN t0.c2 THEN '5727014' ELSE rt0.c2 END))) ORDER BY CASE TRIM(DISTINCT t0.c1)  WHEN (+ (t0.c2)) THEN ((((rt0.c3)AND(rt0.c2)))AND(t0.c75)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)*(rt0.c1))) NOT BETWEEN (((t0.c2)||(t0.c7))) AND (CASE t0.c1  WHEN rt0.c3 THEN t0.c2 WHEN rt0.c3 THEN t0.c7 WHEN t0.c2 THEN '5727014' ELSE rt0.c2 END))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY CASE TRIM(DISTINCT t0.c1)  WHEN (+ (t0.c2)) THEN ((((rt0.c3)AND(rt0.c2)))AND(t0.c75)) END DESC);
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((vt1.c0)*(rt0.c1))) NOT BETWEEN (((t0.c2)||(t0.c7))) AND (CASE t0.c1  WHEN rt0.c3 THEN t0.c2 WHEN rt0.c3 THEN t0.c7 WHEN t0.c2 THEN '5727014' ELSE rt0.c2 END))) ORDER BY CASE TRIM(DISTINCT t0.c1)  WHEN (+ (t0.c2)) THEN ((((rt0.c3)AND(rt0.c2)))AND(t0.c75)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)*(rt0.c1))) NOT BETWEEN (((t0.c2)||(t0.c7))) AND (CASE t0.c1  WHEN rt0.c3 THEN t0.c2 WHEN rt0.c3 THEN t0.c7 WHEN t0.c2 THEN '5727014' ELSE rt0.c2 END))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY CASE TRIM(DISTINCT t0.c1)  WHEN (+ (t0.c2)) THEN ((((rt0.c3)AND(rt0.c2)))AND(t0.c75)) END DESC);
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((vt1.c0)*(rt0.c1))) NOT BETWEEN (((t0.c2)||(t0.c7))) AND (CASE t0.c1  WHEN rt0.c3 THEN t0.c2 WHEN rt0.c3 THEN t0.c7 WHEN t0.c2 THEN '5727014' ELSE rt0.c2 END))) ORDER BY CASE TRIM(DISTINCT t0.c1)  WHEN (+ (t0.c2)) THEN ((((rt0.c3)AND(rt0.c2)))AND(t0.c75)) END DESC;
SELECT * FROM vt1, vt0, rt0 WHERE ((((rt0.c2 IN ()))%((NOT (rt0.c2))))) ORDER BY CASE CASE rt0.c2  WHEN '' THEN rt0.c3 END  WHEN CASE WHEN rt0.c0 THEN 770047488 ELSE rt0.c1 END THEN ((rt0.c2)>=(rt0.c1)) ELSE ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)) END, rt0.c3  NULLS FIRST, ('N}N28' IN (((rt0.c2) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))%((NOT (rt0.c2))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE CASE rt0.c2  WHEN '' THEN rt0.c3 END  WHEN CASE WHEN rt0.c0 THEN 770047488 ELSE rt0.c1 END THEN ((rt0.c2)>=(rt0.c1)) ELSE ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)) END, rt0.c3  NULLS FIRST, ('N}N28' IN (((rt0.c2) ISNULL))) ASC);
SELECT * FROM vt1, vt0, rt0 WHERE ((((rt0.c2 IN ()))%((NOT (rt0.c2))))) ORDER BY CASE CASE rt0.c2  WHEN '' THEN rt0.c3 END  WHEN CASE WHEN rt0.c0 THEN 770047488 ELSE rt0.c1 END THEN ((rt0.c2)>=(rt0.c1)) ELSE ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)) END, rt0.c3  NULLS FIRST, ('N}N28' IN (((rt0.c2) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))%((NOT (rt0.c2))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE CASE rt0.c2  WHEN '' THEN rt0.c3 END  WHEN CASE WHEN rt0.c0 THEN 770047488 ELSE rt0.c1 END THEN ((rt0.c2)>=(rt0.c1)) ELSE ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)) END, rt0.c3  NULLS FIRST, ('N}N28' IN (((rt0.c2) ISNULL))) ASC);
SELECT * FROM vt1, vt0, rt0 WHERE ((((rt0.c2 IN ()))%((NOT (rt0.c2))))) ORDER BY CASE CASE rt0.c2  WHEN '' THEN rt0.c3 END  WHEN CASE WHEN rt0.c0 THEN 770047488 ELSE rt0.c1 END THEN ((rt0.c2)>=(rt0.c1)) ELSE ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)) END, rt0.c3  NULLS FIRST, ('N}N28' IN (((rt0.c2) ISNULL))) ASC;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON NULL LEFT OUTER JOIN t0 ON rt0.c1 INNER JOIN rt0 ON (((rt0.c3)IS(rt0.c1)) IN ()) WHERE (((CASE WHEN t0.c7 THEN rt0.c0 WHEN x'' THEN t0.c2 WHEN t0.c75 THEN t0.c7 ELSE rt0.c3 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c7 THEN rt0.c0 WHEN x'' THEN t0.c2 WHEN t0.c75 THEN t0.c7 ELSE rt0.c3 END) NOTNULL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON NULL LEFT OUTER JOIN t0 ON rt0.c1 INNER JOIN rt0 ON (((rt0.c3)IS(rt0.c1)) IN ()));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON NULL LEFT OUTER JOIN t0 ON rt0.c1 INNER JOIN rt0 ON (((rt0.c3)IS(rt0.c1)) IN ()) WHERE (((CASE WHEN t0.c7 THEN rt0.c0 WHEN x'' THEN t0.c2 WHEN t0.c75 THEN t0.c7 ELSE rt0.c3 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c7 THEN rt0.c0 WHEN x'' THEN t0.c2 WHEN t0.c75 THEN t0.c7 ELSE rt0.c3 END) NOTNULL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON NULL LEFT OUTER JOIN t0 ON rt0.c1 INNER JOIN rt0 ON (((rt0.c3)IS(rt0.c1)) IN ()));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON NULL LEFT OUTER JOIN t0 ON rt0.c1 INNER JOIN rt0 ON (((rt0.c3)IS(rt0.c1)) IN ()) WHERE (((CASE WHEN t0.c7 THEN rt0.c0 WHEN x'' THEN t0.c2 WHEN t0.c75 THEN t0.c7 ELSE rt0.c3 END) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((rt0.c2)OR(CAST(t0.c7 AS TEXT)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((t0.c7)) AND ((rt0.c1))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)OR(CAST(t0.c7 AS TEXT)))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY (((vt1.c0)) NOT BETWEEN ((t0.c7)) AND ((rt0.c1))) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((rt0.c2)OR(CAST(t0.c7 AS TEXT)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((t0.c7)) AND ((rt0.c1))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)OR(CAST(t0.c7 AS TEXT)))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY (((vt1.c0)) NOT BETWEEN ((t0.c7)) AND ((rt0.c1))) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((rt0.c2)OR(CAST(t0.c7 AS TEXT)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((t0.c7)) AND ((rt0.c1))) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((rt0.c1 IN ()) IN ((rt0.c3 IN (rt0.c2)))) FULL OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT vt1.c0 COLLATE NOCASE, 0.28718869595820695) WHERE ((((rt0.c2, '', rt0.c2)) BETWEEN (((((rt0.c3)) BETWEEN (('.19')) AND ((rt0.c2))), (- (rt0.c0)), rt0.c1 COLLATE NOCASE)) AND ((CAST(rt0.c3 AS INTEGER), ((((((((rt0.c3)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)), (rt0.c3 IN ()))))) ORDER BY rt0.c1, (('ﳆt \na6') BETWEEN (rt0.c1 COLLATE NOCASE) AND (LENGTH(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, '', rt0.c2)) BETWEEN (((((rt0.c3)) BETWEEN (('.19')) AND ((rt0.c2))), (- (rt0.c0)), rt0.c1 COLLATE NOCASE)) AND ((CAST(rt0.c3 AS INTEGER), ((((((((rt0.c3)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)), (rt0.c3 IN ()))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((rt0.c1 IN ()) IN ((rt0.c3 IN (rt0.c2)))) FULL OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT vt1.c0 COLLATE NOCASE, 0.28718869595820695) ORDER BY rt0.c1, (('ﳆt \na6') BETWEEN (rt0.c1 COLLATE NOCASE) AND (LENGTH(rt0.c0))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((rt0.c1 IN ()) IN ((rt0.c3 IN (rt0.c2)))) FULL OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT vt1.c0 COLLATE NOCASE, 0.28718869595820695) WHERE ((((rt0.c2, '', rt0.c2)) BETWEEN (((((rt0.c3)) BETWEEN (('.19')) AND ((rt0.c2))), (- (rt0.c0)), rt0.c1 COLLATE NOCASE)) AND ((CAST(rt0.c3 AS INTEGER), ((((((((rt0.c3)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)), (rt0.c3 IN ()))))) ORDER BY rt0.c1, (('ﳆt \na6') BETWEEN (rt0.c1 COLLATE NOCASE) AND (LENGTH(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, '', rt0.c2)) BETWEEN (((((rt0.c3)) BETWEEN (('.19')) AND ((rt0.c2))), (- (rt0.c0)), rt0.c1 COLLATE NOCASE)) AND ((CAST(rt0.c3 AS INTEGER), ((((((((rt0.c3)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)), (rt0.c3 IN ()))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((rt0.c1 IN ()) IN ((rt0.c3 IN (rt0.c2)))) FULL OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT vt1.c0 COLLATE NOCASE, 0.28718869595820695) ORDER BY rt0.c1, (('ﳆt \na6') BETWEEN (rt0.c1 COLLATE NOCASE) AND (LENGTH(rt0.c0))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((rt0.c1 IN ()) IN ((rt0.c3 IN (rt0.c2)))) FULL OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT vt1.c0 COLLATE NOCASE, 0.28718869595820695) WHERE ((((rt0.c2, '', rt0.c2)) BETWEEN (((((rt0.c3)) BETWEEN (('.19')) AND ((rt0.c2))), (- (rt0.c0)), rt0.c1 COLLATE NOCASE)) AND ((CAST(rt0.c3 AS INTEGER), ((((((((rt0.c3)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)), (rt0.c3 IN ()))))) ORDER BY rt0.c1, (('ﳆt \na6') BETWEEN (rt0.c1 COLLATE NOCASE) AND (LENGTH(rt0.c0)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((((vt1.c0))>=((vt1.c0)))))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)&(-3.0120105E7)))) AND (('-2044347674'))), (+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) DESC  NULLS LAST, (((((- (x'')))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(((vt1.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((vt1.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)&(-3.0120105E7)))) AND (('-2044347674'))), (+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) DESC  NULLS LAST, (((((- (x'')))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(((vt1.c0) NOTNULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((((vt1.c0))>=((vt1.c0)))))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)&(-3.0120105E7)))) AND (('-2044347674'))), (+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) DESC  NULLS LAST, (((((- (x'')))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(((vt1.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((vt1.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)&(-3.0120105E7)))) AND (('-2044347674'))), (+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) DESC  NULLS LAST, (((((- (x'')))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(((vt1.c0) NOTNULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((((vt1.c0))>=((vt1.c0)))))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)&(-3.0120105E7)))) AND (('-2044347674'))), (+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) DESC  NULLS LAST, (((((- (x'')))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(((vt1.c0) NOTNULL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (((((t0.c1) BETWEEN (NULL) AND (t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) BETWEEN (NULL) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (((((t0.c1) BETWEEN (NULL) AND (t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) BETWEEN (NULL) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (((((t0.c1) BETWEEN (NULL) AND (t0.c0))) IS TRUE));
SELECT * FROM rt0, vt1, t0 WHERE (((((t0.c0 IN ()), CASE WHEN t0.c75 THEN t0.c75 ELSE vt1.c0 END, '352812652'))=((NULL, ((t0.c2) ISNULL), ''))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN ()), CASE WHEN t0.c75 THEN t0.c75 ELSE vt1.c0 END, '352812652'))==((NULL, ((t0.c2) ISNULL), '')))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE (((((t0.c0 IN ()), CASE WHEN t0.c75 THEN t0.c75 ELSE vt1.c0 END, '352812652'))=((NULL, ((t0.c2) ISNULL), ''))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN ()), CASE WHEN t0.c75 THEN t0.c75 ELSE vt1.c0 END, '352812652'))==((NULL, ((t0.c2) ISNULL), '')))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE (((((t0.c0 IN ()), CASE WHEN t0.c75 THEN t0.c75 ELSE vt1.c0 END, '352812652'))=((NULL, ((t0.c2) ISNULL), ''))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2, rt0.c3, rt0.c3))==((vt1.c0, rt0.c2, vt1.c0))) COLLATE BINARY) ORDER BY CAST(IFNULL(DISTINCT rt0.c1, rt0.c3) AS BLOB) DESC, ((rt0.c1)<<((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c3, rt0.c3))=((vt1.c0, rt0.c2, vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(IFNULL(DISTINCT rt0.c1, rt0.c3) AS BLOB) DESC, ((rt0.c1)<<((rt0.c1 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2, rt0.c3, rt0.c3))==((vt1.c0, rt0.c2, vt1.c0))) COLLATE BINARY) ORDER BY CAST(IFNULL(DISTINCT rt0.c1, rt0.c3) AS BLOB) DESC, ((rt0.c1)<<((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c3, rt0.c3))=((vt1.c0, rt0.c2, vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(IFNULL(DISTINCT rt0.c1, rt0.c3) AS BLOB) DESC, ((rt0.c1)<<((rt0.c1 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2, rt0.c3, rt0.c3))==((vt1.c0, rt0.c2, vt1.c0))) COLLATE BINARY) ORDER BY CAST(IFNULL(DISTINCT rt0.c1, rt0.c3) AS BLOB) DESC, ((rt0.c1)<<((rt0.c1 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS TEXT)))) ORDER BY ((vt0.c0 IN ()) IN ()) DESC, ((CAST(vt0.c0 AS TEXT)) BETWEEN ((((vt0.c0))==((vt0.c0)))) AND (CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()) DESC, ((CAST(vt0.c0 AS TEXT)) BETWEEN ((((vt0.c0))==((vt0.c0)))) AND (CAST(vt0.c0 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS TEXT)))) ORDER BY ((vt0.c0 IN ()) IN ()) DESC, ((CAST(vt0.c0 AS TEXT)) BETWEEN ((((vt0.c0))==((vt0.c0)))) AND (CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()) DESC, ((CAST(vt0.c0 AS TEXT)) BETWEEN ((((vt0.c0))==((vt0.c0)))) AND (CAST(vt0.c0 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS TEXT)))) ORDER BY ((vt0.c0 IN ()) IN ()) DESC, ((CAST(vt0.c0 AS TEXT)) BETWEEN ((((vt0.c0))==((vt0.c0)))) AND (CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 CROSS JOIN t0 ON IFNULL(DISTINCT ((t0.c1) NOTNULL), ((((t0.c1)OR(vt0.c0)))OR(vt1.c0))) CROSS JOIN rt0 ON (- (((rt0.c1)<=(vt1.c0)))) WHERE (t0.c75) ORDER BY '2117479857'  NULLS FIRST, (((((vt1.c0))<((rt0.c2)))) NOT BETWEEN ((NOT (t0.c2))) AND (x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c75) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON IFNULL(DISTINCT ((t0.c1) NOTNULL), ((((t0.c1)OR(vt0.c0)))OR(vt1.c0))) CROSS JOIN rt0 ON (- (((rt0.c1)<=(vt1.c0)))) ORDER BY '2117479857'  NULLS FIRST, (((((vt1.c0))<((rt0.c2)))) NOT BETWEEN ((NOT (t0.c2))) AND (x'')) ASC);
SELECT ALL * FROM vt0, vt1 CROSS JOIN t0 ON IFNULL(DISTINCT ((t0.c1) NOTNULL), ((((t0.c1)OR(vt0.c0)))OR(vt1.c0))) CROSS JOIN rt0 ON (- (((rt0.c1)<=(vt1.c0)))) WHERE (t0.c75) ORDER BY '2117479857'  NULLS FIRST, (((((vt1.c0))<((rt0.c2)))) NOT BETWEEN ((NOT (t0.c2))) AND (x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c75) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON IFNULL(DISTINCT ((t0.c1) NOTNULL), ((((t0.c1)OR(vt0.c0)))OR(vt1.c0))) CROSS JOIN rt0 ON (- (((rt0.c1)<=(vt1.c0)))) ORDER BY '2117479857'  NULLS FIRST, (((((vt1.c0))<((rt0.c2)))) NOT BETWEEN ((NOT (t0.c2))) AND (x'')) ASC);
SELECT ALL * FROM vt0, vt1 CROSS JOIN t0 ON IFNULL(DISTINCT ((t0.c1) NOTNULL), ((((t0.c1)OR(vt0.c0)))OR(vt1.c0))) CROSS JOIN rt0 ON (- (((rt0.c1)<=(vt1.c0)))) WHERE (t0.c75) ORDER BY '2117479857'  NULLS FIRST, (((((vt1.c0))<((rt0.c2)))) NOT BETWEEN ((NOT (t0.c2))) AND (x'')) ASC;
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON CAST(NULL AS REAL) INNER JOIN t0 ON CASE WHEN CASE t0.c0  WHEN '	j奒vJ' THEN vt0.c0 ELSE t0.c0 END THEN (((t0.c2))=((x''))) WHEN rt0.c0 THEN (((t0.c75)) BETWEEN ((vt1.c0)) AND (('z%'))) WHEN (+ (t0.c1)) THEN (NOT (t0.c0)) END WHERE (((rt0.c2) ISNULL) COLLATE NOCASE) ORDER BY ((rt0.c3 COLLATE RTRIM)||(((t0.c7) BETWEEN (rt0.c0) AND (t0.c7)))), (- ((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON CAST(NULL AS REAL) INNER JOIN t0 ON CASE WHEN CASE t0.c0  WHEN '	j奒vJ' THEN vt0.c0 ELSE t0.c0 END THEN (((t0.c2))=((x''))) WHEN rt0.c0 THEN (((t0.c75)) BETWEEN ((vt1.c0)) AND (('z%'))) WHEN (+ (t0.c1)) THEN (NOT (t0.c0)) END ORDER BY ((rt0.c3 COLLATE RTRIM)||(((t0.c7) BETWEEN (rt0.c0) AND (t0.c7)))), (- ((t0.c0 IN ()))) ASC);
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON CAST(NULL AS REAL) INNER JOIN t0 ON CASE WHEN CASE t0.c0  WHEN '	j奒vJ' THEN vt0.c0 ELSE t0.c0 END THEN (((t0.c2))=((x''))) WHEN rt0.c0 THEN (((t0.c75)) BETWEEN ((vt1.c0)) AND (('z%'))) WHEN (+ (t0.c1)) THEN (NOT (t0.c0)) END WHERE (((rt0.c2) ISNULL) COLLATE NOCASE) ORDER BY ((rt0.c3 COLLATE RTRIM)||(((t0.c7) BETWEEN (rt0.c0) AND (t0.c7)))), (- ((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON CAST(NULL AS REAL) INNER JOIN t0 ON CASE WHEN CASE t0.c0  WHEN '	j奒vJ' THEN vt0.c0 ELSE t0.c0 END THEN (((t0.c2))=((x''))) WHEN rt0.c0 THEN (((t0.c75)) BETWEEN ((vt1.c0)) AND (('z%'))) WHEN (+ (t0.c1)) THEN (NOT (t0.c0)) END ORDER BY ((rt0.c3 COLLATE RTRIM)||(((t0.c7) BETWEEN (rt0.c0) AND (t0.c7)))), (- ((t0.c0 IN ()))) ASC);
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON CAST(NULL AS REAL) INNER JOIN t0 ON CASE WHEN CASE t0.c0  WHEN '	j奒vJ' THEN vt0.c0 ELSE t0.c0 END THEN (((t0.c2))=((x''))) WHEN rt0.c0 THEN (((t0.c75)) BETWEEN ((vt1.c0)) AND (('z%'))) WHEN (+ (t0.c1)) THEN (NOT (t0.c0)) END WHERE (((rt0.c2) ISNULL) COLLATE NOCASE) ORDER BY ((rt0.c3 COLLATE RTRIM)||(((t0.c7) BETWEEN (rt0.c0) AND (t0.c7)))), (- ((t0.c0 IN ()))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((+ (((0.18303761494448767) NOT BETWEEN (rt0.c1) AND (t0.c1))))) ORDER BY (CAST(t0.c75 AS NUMERIC) IN (((rt0.c3)>(rt0.c0)), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END))  NULLS FIRST, CAST((((t0.c7))<>((t0.c75))) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((0.18303761494448767) NOT BETWEEN (rt0.c1) AND (t0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (CAST(t0.c75 AS NUMERIC) IN (((rt0.c3)>(rt0.c0)), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END))  NULLS FIRST, CAST((((t0.c7))<>((t0.c75))) AS REAL) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((+ (((0.18303761494448767) NOT BETWEEN (rt0.c1) AND (t0.c1))))) ORDER BY (CAST(t0.c75 AS NUMERIC) IN (((rt0.c3)>(rt0.c0)), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END))  NULLS FIRST, CAST((((t0.c7))<>((t0.c75))) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((0.18303761494448767) NOT BETWEEN (rt0.c1) AND (t0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (CAST(t0.c75 AS NUMERIC) IN (((rt0.c3)>(rt0.c0)), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END))  NULLS FIRST, CAST((((t0.c7))<>((t0.c75))) AS REAL) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((+ (((0.18303761494448767) NOT BETWEEN (rt0.c1) AND (t0.c1))))) ORDER BY (CAST(t0.c75 AS NUMERIC) IN (((rt0.c3)>(rt0.c0)), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END))  NULLS FIRST, CAST((((t0.c7))<>((t0.c75))) AS REAL) ASC;
SELECT ALL * FROM t0 INNER JOIN rt0 ON 0.12424077332132 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1))  WHEN ((t0.c0)>=(t0.c1)) THEN (((t0.c7))>=((t0.c75))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1))  WHEN ((t0.c0)>=(t0.c1)) THEN (((t0.c7))>=((t0.c75))) END) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON 0.12424077332132);
SELECT ALL * FROM t0 INNER JOIN rt0 ON 0.12424077332132 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1))  WHEN ((t0.c0)>=(t0.c1)) THEN (((t0.c7))>=((t0.c75))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1))  WHEN ((t0.c0)>=(t0.c1)) THEN (((t0.c7))>=((t0.c75))) END) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON 0.12424077332132);
SELECT ALL * FROM t0 INNER JOIN rt0 ON 0.12424077332132 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1))  WHEN ((t0.c0)>=(t0.c1)) THEN (((t0.c7))>=((t0.c75))) END);
SELECT * FROM vt0 NOT INDEXED, rt0 FULL OUTER JOIN vt1 ON ((((t0.c2)/(rt0.c2)))IS NOT(CAST(t0.c2 AS BLOB))) RIGHT OUTER JOIN t0 ON x'a6a9' WHERE ((((t0.c2)) BETWEEN ((t0.c75)) AND ((t0.c7 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN ((t0.c75)) AND ((t0.c7 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON ((((t0.c2)/(rt0.c2)))IS NOT(CAST(t0.c2 AS BLOB))) RIGHT OUTER JOIN t0 ON x'a6a9');
SELECT * FROM vt0 NOT INDEXED, rt0 FULL OUTER JOIN vt1 ON ((((t0.c2)/(rt0.c2)))IS NOT(CAST(t0.c2 AS BLOB))) RIGHT OUTER JOIN t0 ON x'a6a9' WHERE ((((t0.c2)) BETWEEN ((t0.c75)) AND ((t0.c7 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN ((t0.c75)) AND ((t0.c7 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON ((((t0.c2)/(rt0.c2)))IS NOT(CAST(t0.c2 AS BLOB))) RIGHT OUTER JOIN t0 ON x'a6a9');
SELECT * FROM t0 INNER JOIN vt1 ON RTRIM(((NULL) IS FALSE)) RIGHT OUTER JOIN rt0 ON (vt1.c0 IN ()) WHERE ((- ((+ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (rt0.c3))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON RTRIM(((NULL) IS FALSE)) RIGHT OUTER JOIN rt0 ON (vt1.c0 IN ()));
SELECT * FROM t0 INNER JOIN vt1 ON RTRIM(((NULL) IS FALSE)) RIGHT OUTER JOIN rt0 ON (vt1.c0 IN ()) WHERE ((- ((+ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (rt0.c3))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON RTRIM(((NULL) IS FALSE)) RIGHT OUTER JOIN rt0 ON (vt1.c0 IN ()));
SELECT * FROM t0 INNER JOIN vt1 ON RTRIM(((NULL) IS FALSE)) RIGHT OUTER JOIN rt0 ON (vt1.c0 IN ()) WHERE ((- ((+ (rt0.c3)))));
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (UPPER((- (t0.c7)))) ORDER BY (~ (((((t0.c7)OR(t0.c7)))OR(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((UPPER((- (t0.c7)))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (~ (((((t0.c7)OR(t0.c7)))OR(vt1.c0)))) ASC);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (UPPER((- (t0.c7)))) ORDER BY (~ (((((t0.c7)OR(t0.c7)))OR(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((UPPER((- (t0.c7)))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (~ (((((t0.c7)OR(t0.c7)))OR(vt1.c0)))) ASC);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (UPPER((- (t0.c7)))) ORDER BY (~ (((((t0.c7)OR(t0.c7)))OR(vt1.c0)))) ASC;
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER));
SELECT * FROM vt1 WHERE (((TRIM(vt1.c0, vt1.c0)) ISNULL)) ORDER BY LTRIM((((vt1.c0, '882314015', vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c0, vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY LTRIM((((vt1.c0, '882314015', vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((TRIM(vt1.c0, vt1.c0)) ISNULL)) ORDER BY LTRIM((((vt1.c0, '882314015', vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c0, vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY LTRIM((((vt1.c0, '882314015', vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((TRIM(vt1.c0, vt1.c0)) ISNULL)) ORDER BY LTRIM((((vt1.c0, '882314015', vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((t0.c1)OR(t0.c1)))AND(t0.c7))) NOT BETWEEN (json_insert(t0.c75, t0.c2, 0.4560282354899875)) AND (TRIM(DISTINCT t0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)OR(t0.c1)))AND(t0.c7))) NOT BETWEEN (json_insert(t0.c75, t0.c2, 0.4560282354899875)) AND (TRIM(DISTINCT t0.c1)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c1)OR(t0.c1)))AND(t0.c7))) NOT BETWEEN (json_insert(t0.c75, t0.c2, 0.4560282354899875)) AND (TRIM(DISTINCT t0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)OR(t0.c1)))AND(t0.c7))) NOT BETWEEN (json_insert(t0.c75, t0.c2, 0.4560282354899875)) AND (TRIM(DISTINCT t0.c1)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c1)OR(t0.c1)))AND(t0.c7))) NOT BETWEEN (json_insert(t0.c75, t0.c2, 0.4560282354899875)) AND (TRIM(DISTINCT t0.c1))));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 NOT INDEXED, rt0 WHERE ((TRIM(DISTINCT t0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT t0.c2) IN ())) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 NOT INDEXED, rt0 WHERE ((TRIM(DISTINCT t0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT t0.c2) IN ())) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 NOT INDEXED, rt0 WHERE ((TRIM(DISTINCT t0.c2) IN ()));
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN ((t0.c7)GLOB(t0.c7)) THEN ((((((((vt0.c0)OR(t0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c1)) END) ORDER BY (LOWER(t0.c2) IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c7)GLOB(t0.c7)) THEN ((((((((vt0.c0)OR(t0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c1)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (LOWER(t0.c2) IN ()));
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN ((t0.c7)GLOB(t0.c7)) THEN ((((((((vt0.c0)OR(t0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c1)) END) ORDER BY (LOWER(t0.c2) IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c7)GLOB(t0.c7)) THEN ((((((((vt0.c0)OR(t0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c1)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (LOWER(t0.c2) IN ()));
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN ((t0.c7)GLOB(t0.c7)) THEN ((((((((vt0.c0)OR(t0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c1)) END) ORDER BY (LOWER(t0.c2) IN ());
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (t0.c2) ORDER BY (((vt1.c0 IN ()))<(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY (((vt1.c0 IN ()))<(NULL)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (t0.c2) ORDER BY (((vt1.c0 IN ()))<(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY (((vt1.c0 IN ()))<(NULL)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (t0.c2) ORDER BY (((vt1.c0 IN ()))<(NULL)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((rt0.c3) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) ORDER BY json_array_length(CAST(rt0.c1 AS NUMERIC), ((rt0.c1) ISNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY json_array_length(CAST(rt0.c1 AS NUMERIC), ((rt0.c1) ISNULL))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((rt0.c3) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) ORDER BY json_array_length(CAST(rt0.c1 AS NUMERIC), ((rt0.c1) ISNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY json_array_length(CAST(rt0.c1 AS NUMERIC), ((rt0.c1) ISNULL))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((rt0.c3) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) ORDER BY json_array_length(CAST(rt0.c1 AS NUMERIC), ((rt0.c1) ISNULL))  NULLS FIRST;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((((CASE WHEN vt0.c0 THEN vt1.c0 END)AND(((((vt0.c0)OR(vt0.c0)))OR('2117479857')))))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN vt1.c0 END)AND(((((vt0.c0)OR(vt0.c0)))OR('2117479857')))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((((CASE WHEN vt0.c0 THEN vt1.c0 END)AND(((((vt0.c0)OR(vt0.c0)))OR('2117479857')))))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN vt1.c0 END)AND(((((vt0.c0)OR(vt0.c0)))OR('2117479857')))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((((CASE WHEN vt0.c0 THEN vt1.c0 END)AND(((((vt0.c0)OR(vt0.c0)))OR('2117479857')))))OR((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('0.773071487949783')) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (CAST(NULL AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (('0.773071487949783')) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(NULL AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('0.773071487949783')) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (CAST(NULL AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (('0.773071487949783')) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(NULL AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('0.773071487949783')) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (CAST(NULL AS BLOB) IN ());
SELECT * FROM t0 CROSS JOIN rt0 ON x'' INNER JOIN vt0 ON (((t0.c2) ISNULL) IN ()) WHERE ((+ (CASE WHEN t0.c7 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN t0.c7 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 END))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON x'' INNER JOIN vt0 ON (((t0.c2) ISNULL) IN ()));
SELECT * FROM t0 CROSS JOIN rt0 ON x'' INNER JOIN vt0 ON (((t0.c2) ISNULL) IN ()) WHERE ((+ (CASE WHEN t0.c7 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN t0.c7 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 END))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON x'' INNER JOIN vt0 ON (((t0.c2) ISNULL) IN ()));
SELECT * FROM t0 CROSS JOIN rt0 ON x'' INNER JOIN vt0 ON (((t0.c2) ISNULL) IN ()) WHERE ((+ (CASE WHEN t0.c7 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 END)));
SELECT * FROM rt0, vt0, t0, vt1 WHERE (IFNULL(((((vt1.c0)AND(rt0.c0)))AND(t0.c2)), CASE t0.c2  WHEN t0.c2 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((vt1.c0)AND(rt0.c0)))AND(t0.c2)), CASE t0.c2  WHEN t0.c2 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT * FROM rt0, vt0, t0, vt1 WHERE (IFNULL(((((vt1.c0)AND(rt0.c0)))AND(t0.c2)), CASE t0.c2  WHEN t0.c2 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((vt1.c0)AND(rt0.c0)))AND(t0.c2)), CASE t0.c2  WHEN t0.c2 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT * FROM rt0, vt0, t0, vt1 WHERE (IFNULL(((((vt1.c0)AND(rt0.c0)))AND(t0.c2)), CASE t0.c2  WHEN t0.c2 THEN rt0.c0 END));
SELECT * FROM t0 INNER JOIN vt1 ON (NOT (((((t0.c7)AND(t0.c2)))AND(t0.c0)))) LEFT OUTER JOIN vt0 ON CAST(0.5322641370240585 AS REAL) WHERE ((+ (x'9604'))) ORDER BY TRIM(((((t0.c1)OR(t0.c1)))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (x'9604'))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (NOT (((((t0.c7)AND(t0.c2)))AND(t0.c0)))) LEFT OUTER JOIN vt0 ON CAST(0.5322641370240585 AS REAL) ORDER BY TRIM(((((t0.c1)OR(t0.c1)))AND(t0.c0))));
SELECT * FROM t0 INNER JOIN vt1 ON (NOT (((((t0.c7)AND(t0.c2)))AND(t0.c0)))) LEFT OUTER JOIN vt0 ON CAST(0.5322641370240585 AS REAL) WHERE ((+ (x'9604'))) ORDER BY TRIM(((((t0.c1)OR(t0.c1)))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (x'9604'))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (NOT (((((t0.c7)AND(t0.c2)))AND(t0.c0)))) LEFT OUTER JOIN vt0 ON CAST(0.5322641370240585 AS REAL) ORDER BY TRIM(((((t0.c1)OR(t0.c1)))AND(t0.c0))));
SELECT * FROM t0 INNER JOIN vt1 ON (NOT (((((t0.c7)AND(t0.c2)))AND(t0.c0)))) LEFT OUTER JOIN vt0 ON CAST(0.5322641370240585 AS REAL) WHERE ((+ (x'9604'))) ORDER BY TRIM(((((t0.c1)OR(t0.c1)))AND(t0.c0)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON 0x5b8060a8 INNER JOIN vt0 ON CASE WHEN (+ (x'1f6aad23')) THEN CAST(vt0.c0 AS BLOB) ELSE 0Xfffffffffc9eeea2 COLLATE NOCASE END CROSS JOIN vt1 ON ((((CAST(rt0.c0 AS INTEGER))AND('6')))AND(vt0.c0 COLLATE BINARY)) WHERE (t0.c75);
SELECT SUM(count) FROM (SELECT ((t0.c75) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON 0x5b8060a8 INNER JOIN vt0 ON CASE WHEN (+ (x'1f6aad23')) THEN CAST(vt0.c0 AS BLOB) ELSE 0Xfffffffffc9eeea2 COLLATE NOCASE END CROSS JOIN vt1 ON ((((CAST(rt0.c0 AS INTEGER))AND('6')))AND(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON 0x5b8060a8 INNER JOIN vt0 ON CASE WHEN (+ (x'1f6aad23')) THEN CAST(vt0.c0 AS BLOB) ELSE 0Xfffffffffc9eeea2 COLLATE NOCASE END CROSS JOIN vt1 ON ((((CAST(rt0.c0 AS INTEGER))AND('6')))AND(vt0.c0 COLLATE BINARY)) WHERE (t0.c75);
SELECT SUM(count) FROM (SELECT ((t0.c75) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON 0x5b8060a8 INNER JOIN vt0 ON CASE WHEN (+ (x'1f6aad23')) THEN CAST(vt0.c0 AS BLOB) ELSE 0Xfffffffffc9eeea2 COLLATE NOCASE END CROSS JOIN vt1 ON ((((CAST(rt0.c0 AS INTEGER))AND('6')))AND(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON 0x5b8060a8 INNER JOIN vt0 ON CASE WHEN (+ (x'1f6aad23')) THEN CAST(vt0.c0 AS BLOB) ELSE 0Xfffffffffc9eeea2 COLLATE NOCASE END CROSS JOIN vt1 ON ((((CAST(rt0.c0 AS INTEGER))AND('6')))AND(vt0.c0 COLLATE BINARY)) WHERE (t0.c75);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((t0.c7) NOT BETWEEN (rt0.c2) AND (NULL)))+(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c7) NOT BETWEEN (rt0.c2) AND (NULL)))+(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((t0.c7) NOT BETWEEN (rt0.c2) AND (NULL)))+(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c7) NOT BETWEEN (rt0.c2) AND (NULL)))+(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((t0.c7) NOT BETWEEN (rt0.c2) AND (NULL)))+(CAST(vt1.c0 AS INTEGER))));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2)==(rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c0 COLLATE RTRIM))) ORDER BY ((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)==(rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0))) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2)==(rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c0 COLLATE RTRIM))) ORDER BY ((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)==(rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0))) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2)==(rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c0 COLLATE RTRIM))) ORDER BY ((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((((vt0.c0)OR(8.0494436E7)))AND(vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((((vt0.c0)OR(8.0494436E7)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((((vt0.c0)OR(8.0494436E7)))AND(vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((((vt0.c0)OR(8.0494436E7)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((((vt0.c0)OR(8.0494436E7)))AND(vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE DESC  NULLS LAST;
SELECT * FROM vt1, rt0, vt0, t0 WHERE (vt0.c0) ORDER BY ((((((((x'b23bbffe')OR(vt1.c0)))OR(t0.c0)))OR(rt0.c0)))OR(t0.c75)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY ((((((((x'b23bbffe')OR(vt1.c0)))OR(t0.c0)))OR(rt0.c0)))OR(t0.c75)) COLLATE NOCASE DESC);
SELECT * FROM vt1, rt0, vt0, t0 WHERE (vt0.c0) ORDER BY ((((((((x'b23bbffe')OR(vt1.c0)))OR(t0.c0)))OR(rt0.c0)))OR(t0.c75)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY ((((((((x'b23bbffe')OR(vt1.c0)))OR(t0.c0)))OR(rt0.c0)))OR(t0.c75)) COLLATE NOCASE DESC);
SELECT * FROM vt1, rt0, vt0, t0 WHERE (vt0.c0) ORDER BY ((((((((x'b23bbffe')OR(vt1.c0)))OR(t0.c0)))OR(rt0.c0)))OR(t0.c75)) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (t0.c75) ORDER BY ((((rt0.c0 IN ())))>((0.050898808597480194))) ASC, (+ (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c75) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY ((((rt0.c0 IN ())))>((0.050898808597480194))) ASC, (+ (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (t0.c75) ORDER BY ((((rt0.c0 IN ())))>((0.050898808597480194))) ASC, (+ (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c75) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY ((((rt0.c0 IN ())))>((0.050898808597480194))) ASC, (+ (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (t0.c75) ORDER BY ((((rt0.c0 IN ())))>((0.050898808597480194))) ASC, (+ (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))));
SELECT * FROM rt0 WHERE (LOWER(DISTINCT CASE '98086635'  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) ORDER BY 1.91344047E8 ASC  NULLS LAST, ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))AND((rt0.c0 IN ()))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CASE '98086635'  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0 ORDER BY 1.91344047E8 ASC  NULLS LAST, ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))AND((rt0.c0 IN ()))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) ASC);
SELECT * FROM rt0 WHERE (LOWER(DISTINCT CASE '98086635'  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) ORDER BY 1.91344047E8 ASC  NULLS LAST, ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))AND((rt0.c0 IN ()))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CASE '98086635'  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0 ORDER BY 1.91344047E8 ASC  NULLS LAST, ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))AND((rt0.c0 IN ()))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) ASC);
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE ((((~ (t0.c7)))=(((rt0.c2)>>(vt1.c0))))) ORDER BY (((rt0.c1)) BETWEEN (((t0.c2 IN ()))) AND ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN t0.c1 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c7)))=(((rt0.c2)>>(vt1.c0))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY (((rt0.c1)) BETWEEN (((t0.c2 IN ()))) AND ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN t0.c1 END))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE ((((~ (t0.c7)))=(((rt0.c2)>>(vt1.c0))))) ORDER BY (((rt0.c1)) BETWEEN (((t0.c2 IN ()))) AND ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN t0.c1 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c7)))=(((rt0.c2)>>(vt1.c0))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY (((rt0.c1)) BETWEEN (((t0.c2 IN ()))) AND ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN t0.c1 END))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE ((((~ (t0.c7)))=(((rt0.c2)>>(vt1.c0))))) ORDER BY (((rt0.c1)) BETWEEN (((t0.c2 IN ()))) AND ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN t0.c1 END))) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, t0, vt0, vt1 WHERE ((((((vt1.c0 IN ()))AND(((0xfffffffffc9eeea2)<=(t0.c1)))))OR(((t0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN ()))AND(((0Xfffffffffc9eeea2)<=(t0.c1)))))OR(((t0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, vt1 WHERE ((((((vt1.c0 IN ()))AND(((0xfffffffffc9eeea2)<=(t0.c1)))))OR(((t0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN ()))AND(((0Xfffffffffc9eeea2)<=(t0.c1)))))OR(((t0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, vt1 WHERE ((((((vt1.c0 IN ()))AND(((0xfffffffffc9eeea2)<=(t0.c1)))))OR(((t0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'')%(rt0.c3))) NOT BETWEEN ((((rt0.c3))<((rt0.c1)))) AND (0.132597465033654))) ORDER BY ((((rt0.c2)IS(rt0.c3))) BETWEEN (rt0.c2 COLLATE BINARY) AND (HEX(rt0.c0))) ASC, (((rt0.c2)>>(rt0.c3)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((x'')%(rt0.c3))) NOT BETWEEN ((((rt0.c3))<((rt0.c1)))) AND (0.132597465033654))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)IS(rt0.c3))) BETWEEN (rt0.c2 COLLATE BINARY) AND (HEX(rt0.c0))) ASC, (((rt0.c2)>>(rt0.c3)) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'')%(rt0.c3))) NOT BETWEEN ((((rt0.c3))<((rt0.c1)))) AND (0.132597465033654))) ORDER BY ((((rt0.c2)IS(rt0.c3))) BETWEEN (rt0.c2 COLLATE BINARY) AND (HEX(rt0.c0))) ASC, (((rt0.c2)>>(rt0.c3)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((x'')%(rt0.c3))) NOT BETWEEN ((((rt0.c3))<((rt0.c1)))) AND (0.132597465033654))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)IS(rt0.c3))) BETWEEN (rt0.c2 COLLATE BINARY) AND (HEX(rt0.c0))) ASC, (((rt0.c2)>>(rt0.c3)) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'')%(rt0.c3))) NOT BETWEEN ((((rt0.c3))<((rt0.c1)))) AND (0.132597465033654))) ORDER BY ((((rt0.c2)IS(rt0.c3))) BETWEEN (rt0.c2 COLLATE BINARY) AND (HEX(rt0.c0))) ASC, (((rt0.c2)>>(rt0.c3)) IN ()) DESC;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS BLOB))) FULL OUTER JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((((((((((((((t0.c1)OR(rt0.c3)))OR(t0.c75)))OR(rt0.c0)))OR(vt0.c0)))OR(t0.c7)))OR(vt0.c0)))) AND ((rt0.c1 COLLATE BINARY))) FULL OUTER JOIN rt0 ON CAST(COALESCE(DISTINCT t0.c1, vt0.c0, 0.0503501187066544, vt0.c0, rt0.c3, t0.c7) AS INTEGER) WHERE (TIME(((vt0.c0) IS TRUE), ((t0.c7) BETWEEN (vt0.c0) AND (t0.c1)), ((t0.c1)%(rt0.c2)))) ORDER BY CASE WHEN 7.77383529E8 THEN json_array(vt1.c0, vt0.c0) ELSE CASE t0.c75  WHEN 0.3194034388210635 THEN rt0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(((vt0.c0) IS TRUE), ((t0.c7) BETWEEN (vt0.c0) AND (t0.c1)), ((t0.c1)%(rt0.c2)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS BLOB))) FULL OUTER JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((((((((((((((t0.c1)OR(rt0.c3)))OR(t0.c75)))OR(rt0.c0)))OR(vt0.c0)))OR(t0.c7)))OR(vt0.c0)))) AND ((rt0.c1 COLLATE BINARY))) FULL OUTER JOIN rt0 ON CAST(COALESCE(DISTINCT t0.c1, vt0.c0, 0.0503501187066544, vt0.c0, rt0.c3, t0.c7) AS INTEGER) ORDER BY CASE WHEN 7.77383529E8 THEN json_array(vt1.c0, vt0.c0) ELSE CASE t0.c75  WHEN 0.3194034388210635 THEN rt0.c0 END END  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS BLOB))) FULL OUTER JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((((((((((((((t0.c1)OR(rt0.c3)))OR(t0.c75)))OR(rt0.c0)))OR(vt0.c0)))OR(t0.c7)))OR(vt0.c0)))) AND ((rt0.c1 COLLATE BINARY))) FULL OUTER JOIN rt0 ON CAST(COALESCE(DISTINCT t0.c1, vt0.c0, 0.0503501187066544, vt0.c0, rt0.c3, t0.c7) AS INTEGER) WHERE (TIME(((vt0.c0) IS TRUE), ((t0.c7) BETWEEN (vt0.c0) AND (t0.c1)), ((t0.c1)%(rt0.c2)))) ORDER BY CASE WHEN 7.77383529E8 THEN json_array(vt1.c0, vt0.c0) ELSE CASE t0.c75  WHEN 0.3194034388210635 THEN rt0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(((vt0.c0) IS TRUE), ((t0.c7) BETWEEN (vt0.c0) AND (t0.c1)), ((t0.c1)%(rt0.c2)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS BLOB))) FULL OUTER JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((((((((((((((t0.c1)OR(rt0.c3)))OR(t0.c75)))OR(rt0.c0)))OR(vt0.c0)))OR(t0.c7)))OR(vt0.c0)))) AND ((rt0.c1 COLLATE BINARY))) FULL OUTER JOIN rt0 ON CAST(COALESCE(DISTINCT t0.c1, vt0.c0, 0.0503501187066544, vt0.c0, rt0.c3, t0.c7) AS INTEGER) ORDER BY CASE WHEN 7.77383529E8 THEN json_array(vt1.c0, vt0.c0) ELSE CASE t0.c75  WHEN 0.3194034388210635 THEN rt0.c0 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((~ (((((((((t0.c0)AND(t0.c7)))AND(x'5ccb')))AND(vt1.c0)))OR(t0.c75)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((t0.c0)AND(t0.c7)))AND(x'5ccb')))AND(vt1.c0)))OR(t0.c75))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((~ (((((((((t0.c0)AND(t0.c7)))AND(x'5ccb')))AND(vt1.c0)))OR(t0.c75)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((t0.c0)AND(t0.c7)))AND(x'5ccb')))AND(vt1.c0)))OR(t0.c75))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((~ (((((((((t0.c0)AND(t0.c7)))AND(x'5ccb')))AND(vt1.c0)))OR(t0.c75)))));
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((rt0.c1) ISNULL)) ORDER BY t0.c1 DESC, x'';
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY t0.c1 DESC, x'');
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((rt0.c1) ISNULL)) ORDER BY t0.c1 DESC, x'';
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY t0.c1 DESC, x'');
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((rt0.c1) ISNULL)) ORDER BY t0.c1 DESC, x'';
SELECT ALL * FROM vt0, vt1, t0 WHERE (json_array_length(0.051905360129420486));
SELECT SUM(count) FROM (SELECT ((json_array_length(0.051905360129420486)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (json_array_length(0.051905360129420486));
SELECT SUM(count) FROM (SELECT ((json_array_length(0.051905360129420486)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (json_array_length(0.051905360129420486));
SELECT * FROM vt0, rt0 WHERE (((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c2)))OR((rt0.c3 IN (rt0.c2)))))OR(((rt0.c0)>(rt0.c2)))))AND((vt0.c0 IN ()))))OR('2zE_r먏')));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c2)))OR((rt0.c3 IN (rt0.c2)))))OR(((rt0.c0)>(rt0.c2)))))AND((vt0.c0 IN ()))))OR('2zE_r먏'))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c2)))OR((rt0.c3 IN (rt0.c2)))))OR(((rt0.c0)>(rt0.c2)))))AND((vt0.c0 IN ()))))OR('2zE_r먏')));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c2)))OR((rt0.c3 IN (rt0.c2)))))OR(((rt0.c0)>(rt0.c2)))))AND((vt0.c0 IN ()))))OR('2zE_r먏'))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c2)))OR((rt0.c3 IN (rt0.c2)))))OR(((rt0.c0)>(rt0.c2)))))AND((vt0.c0 IN ()))))OR('2zE_r먏')));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((((((t0.c2))==((t0.c75))))OR((t0.c0 IN ()))))OR(((t0.c0)<<(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c2))=((t0.c75))))OR((t0.c0 IN ()))))OR(((t0.c0)<<(t0.c2))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((((((t0.c2))==((t0.c75))))OR((t0.c0 IN ()))))OR(((t0.c0)<<(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c2))=((t0.c75))))OR((t0.c0 IN ()))))OR(((t0.c0)<<(t0.c2))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((((((t0.c2))==((t0.c75))))OR((t0.c0 IN ()))))OR(((t0.c0)<<(t0.c2)))));
SELECT ALL * FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((('FALSE'))>((rt0.c0 COLLATE NOCASE))) WHERE ((NOT (((((rt0.c3)OR(t0.c75)))AND(-8.13847651E8)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c3)OR(t0.c75)))AND(-8.13847651E8))))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((('FALSE'))>((rt0.c0 COLLATE NOCASE))));
SELECT ALL * FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((('FALSE'))>((rt0.c0 COLLATE NOCASE))) WHERE ((NOT (((((rt0.c3)OR(t0.c75)))AND(-8.13847651E8)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c3)OR(t0.c75)))AND(-8.13847651E8))))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((('FALSE'))>((rt0.c0 COLLATE NOCASE))));
SELECT ALL * FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((('FALSE'))>((rt0.c0 COLLATE NOCASE))) WHERE ((NOT (((((rt0.c3)OR(t0.c75)))AND(-8.13847651E8)))));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY RTRIM((+ (t0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS BLOB)) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY RTRIM((+ (t0.c1))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY RTRIM((+ (t0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS BLOB)) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY RTRIM((+ (t0.c1))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY RTRIM((+ (t0.c1))) ASC;
SELECT ALL * FROM t0, rt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (t0.c1);
SELECT ALL * FROM t0, rt0, vt1, vt0 WHERE (((CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END) NOT BETWEEN (((rt0.c3) BETWEEN (t0.c75) AND (vt0.c0))) AND (CASE WHEN rt0.c1 THEN t0.c75 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END) NOT BETWEEN (((rt0.c3) BETWEEN (t0.c75) AND (vt0.c0))) AND (CASE WHEN rt0.c1 THEN t0.c75 ELSE NULL END))) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT ALL * FROM t0, rt0, vt1, vt0 WHERE (((CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END) NOT BETWEEN (((rt0.c3) BETWEEN (t0.c75) AND (vt0.c0))) AND (CASE WHEN rt0.c1 THEN t0.c75 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END) NOT BETWEEN (((rt0.c3) BETWEEN (t0.c75) AND (vt0.c0))) AND (CASE WHEN rt0.c1 THEN t0.c75 ELSE NULL END))) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT ALL * FROM t0, rt0, vt1, vt0 WHERE (((CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END) NOT BETWEEN (((rt0.c3) BETWEEN (t0.c75) AND (vt0.c0))) AND (CASE WHEN rt0.c1 THEN t0.c75 ELSE NULL END)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON UNLIKELY(CAST(0.48747113930350894 AS NUMERIC)) WHERE (CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) AS REAL)) ORDER BY ((((((((((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))))AND(vt0.c0)))OR(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))))OR(ABS(DISTINCT vt0.c0))))OR((- ('-2133919841')))))OR((('odNyA') NOT BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON UNLIKELY(CAST(0.48747113930350894 AS NUMERIC)) ORDER BY ((((((((((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))))AND(vt0.c0)))OR(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))))OR(ABS(DISTINCT vt0.c0))))OR((- ('-2133919841')))))OR((('odNyA') NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON UNLIKELY(CAST(0.48747113930350894 AS NUMERIC)) WHERE (CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) AS REAL)) ORDER BY ((((((((((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))))AND(vt0.c0)))OR(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))))OR(ABS(DISTINCT vt0.c0))))OR((- ('-2133919841')))))OR((('odNyA') NOT BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON UNLIKELY(CAST(0.48747113930350894 AS NUMERIC)) ORDER BY ((((((((((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))))AND(vt0.c0)))OR(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))))OR(ABS(DISTINCT vt0.c0))))OR((- ('-2133919841')))))OR((('odNyA') NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON UNLIKELY(CAST(0.48747113930350894 AS NUMERIC)) WHERE (CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) AS REAL)) ORDER BY ((((((((((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))))AND(vt0.c0)))OR(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))))OR(ABS(DISTINCT vt0.c0))))OR((- ('-2133919841')))))OR((('odNyA') NOT BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT * FROM vt1, rt0, vt0, t0 WHERE (CASE ((t0.c7) ISNULL)  WHEN ((t0.c75)>(rt0.c2)) THEN ((t0.c75) NOTNULL) WHEN ((((t0.c0)OR(vt1.c0)))AND(NULL)) THEN 'V*''^6ὛW-5' WHEN CASE WHEN t0.c1 THEN t0.c75 ELSE rt0.c1 END THEN (((t0.c75))>=((t0.c0))) ELSE NULL END) ORDER BY (((~ (rt0.c2))) NOT BETWEEN ((((-2.108227407E9))==((rt0.c1)))) AND (rt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c7) ISNULL)  WHEN ((t0.c75)>(rt0.c2)) THEN ((t0.c75) NOTNULL) WHEN ((((t0.c0)OR(vt1.c0)))AND(NULL)) THEN 'V*''^6ὛW-5' WHEN CASE WHEN t0.c1 THEN t0.c75 ELSE rt0.c1 END THEN (((t0.c75))>=((t0.c0))) ELSE NULL END) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, vt0, t0 ORDER BY (((~ (rt0.c2))) NOT BETWEEN ((((-2.108227407E9))==((rt0.c1)))) AND (rt0.c0 COLLATE BINARY)) DESC);
SELECT * FROM vt1, rt0, vt0, t0 WHERE (CASE ((t0.c7) ISNULL)  WHEN ((t0.c75)>(rt0.c2)) THEN ((t0.c75) NOTNULL) WHEN ((((t0.c0)OR(vt1.c0)))AND(NULL)) THEN 'V*''^6ὛW-5' WHEN CASE WHEN t0.c1 THEN t0.c75 ELSE rt0.c1 END THEN (((t0.c75))>=((t0.c0))) ELSE NULL END) ORDER BY (((~ (rt0.c2))) NOT BETWEEN ((((-2.108227407E9))==((rt0.c1)))) AND (rt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c7) ISNULL)  WHEN ((t0.c75)>(rt0.c2)) THEN ((t0.c75) NOTNULL) WHEN ((((t0.c0)OR(vt1.c0)))AND(NULL)) THEN 'V*''^6ὛW-5' WHEN CASE WHEN t0.c1 THEN t0.c75 ELSE rt0.c1 END THEN (((t0.c75))>=((t0.c0))) ELSE NULL END) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, vt0, t0 ORDER BY (((~ (rt0.c2))) NOT BETWEEN ((((-2.108227407E9))==((rt0.c1)))) AND (rt0.c0 COLLATE BINARY)) DESC);
SELECT * FROM vt1, rt0, vt0, t0 WHERE (CASE ((t0.c7) ISNULL)  WHEN ((t0.c75)>(rt0.c2)) THEN ((t0.c75) NOTNULL) WHEN ((((t0.c0)OR(vt1.c0)))AND(NULL)) THEN 'V*''^6ὛW-5' WHEN CASE WHEN t0.c1 THEN t0.c75 ELSE rt0.c1 END THEN (((t0.c75))>=((t0.c0))) ELSE NULL END) ORDER BY (((~ (rt0.c2))) NOT BETWEEN ((((-2.108227407E9))==((rt0.c1)))) AND (rt0.c0 COLLATE BINARY)) DESC;
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON (((t0.c75)) NOT BETWEEN ((((vt0.c0)>=(t0.c2)))) AND ((((t0.c0)<=(t0.c75))))) RIGHT OUTER JOIN vt0 ON ((((t0.c2)AND(t0.c75)))>>(((t0.c1)|(vt0.c0)))) WHERE (0.17777267031372257);
SELECT SUM(count) FROM (SELECT ((0.17777267031372257) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (((t0.c75)) NOT BETWEEN ((((vt0.c0)>=(t0.c2)))) AND ((((t0.c0)<=(t0.c75))))) RIGHT OUTER JOIN vt0 ON ((((t0.c2)AND(t0.c75)))>>(((t0.c1)|(vt0.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON (((t0.c75)) NOT BETWEEN ((((vt0.c0)>=(t0.c2)))) AND ((((t0.c0)<=(t0.c75))))) RIGHT OUTER JOIN vt0 ON ((((t0.c2)AND(t0.c75)))>>(((t0.c1)|(vt0.c0)))) WHERE (0.17777267031372257);
SELECT SUM(count) FROM (SELECT ((0.17777267031372257) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (((t0.c75)) NOT BETWEEN ((((vt0.c0)>=(t0.c2)))) AND ((((t0.c0)<=(t0.c75))))) RIGHT OUTER JOIN vt0 ON ((((t0.c2)AND(t0.c75)))>>(((t0.c1)|(vt0.c0)))));
SELECT * FROM rt0, vt1, vt0, t0 WHERE (((CASE WHEN NULL THEN t0.c7 WHEN vt1.c0 THEN rt0.c1 WHEN t0.c2 THEN t0.c2 END)IS((rt0.c0 IN ())))) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c75))))GLOB(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN NULL THEN t0.c7 WHEN vt1.c0 THEN rt0.c1 WHEN t0.c2 THEN t0.c2 END)IS((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c75))))GLOB(NULL))  NULLS FIRST);
SELECT * FROM rt0, vt1, vt0, t0 WHERE (((CASE WHEN NULL THEN t0.c7 WHEN vt1.c0 THEN rt0.c1 WHEN t0.c2 THEN t0.c2 END)IS((rt0.c0 IN ())))) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c75))))GLOB(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN NULL THEN t0.c7 WHEN vt1.c0 THEN rt0.c1 WHEN t0.c2 THEN t0.c2 END)IS((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c75))))GLOB(NULL))  NULLS FIRST);
SELECT * FROM rt0, vt1, vt0, t0 WHERE (((CASE WHEN NULL THEN t0.c7 WHEN vt1.c0 THEN rt0.c1 WHEN t0.c2 THEN t0.c2 END)IS((rt0.c0 IN ())))) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c75))))GLOB(NULL))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)%(((vt0.c0) NOTNULL)))) ORDER BY (((((t0.c7 IN ()))OR((((t0.c75)) BETWEEN ((t0.c75)) AND ((rt0.c1))))))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)%(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY (((((t0.c7 IN ()))OR((((t0.c75)) BETWEEN ((t0.c75)) AND ((rt0.c1))))))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)%(((vt0.c0) NOTNULL)))) ORDER BY (((((t0.c7 IN ()))OR((((t0.c75)) BETWEEN ((t0.c75)) AND ((rt0.c1))))))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)%(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY (((((t0.c7 IN ()))OR((((t0.c75)) BETWEEN ((t0.c75)) AND ((rt0.c1))))))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)%(((vt0.c0) NOTNULL)))) ORDER BY (((((t0.c7 IN ()))OR((((t0.c75)) BETWEEN ((t0.c75)) AND ((rt0.c1))))))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0 WHERE (3.52812652E8 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((3.52812652E8 COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (3.52812652E8 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((3.52812652E8 COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (3.52812652E8 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((NULLIF(t0.c75, rt0.c1)) BETWEEN (((t0.c0) ISNULL)) AND (((t0.c1)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(t0.c75, rt0.c1)) BETWEEN (((t0.c0) ISNULL)) AND (((t0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((NULLIF(t0.c75, rt0.c1)) BETWEEN (((t0.c0) ISNULL)) AND (((t0.c1)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(t0.c75, rt0.c1)) BETWEEN (((t0.c0) ISNULL)) AND (((t0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((NULLIF(t0.c75, rt0.c1)) BETWEEN (((t0.c0) ISNULL)) AND (((t0.c1)IS NOT(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0)>(vt1.c0)))))AND('r*'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0)>(vt1.c0)))))AND('r*'))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0)>(vt1.c0)))))AND('r*'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0)>(vt1.c0)))))AND('r*'))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0)>(vt1.c0)))))AND('r*'))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON CAST((((rt0.c1))<((rt0.c3))) AS INTEGER) RIGHT OUTER JOIN t0 ON CAST((((rt0.c3)) NOT BETWEEN ((t0.c7)) AND ((vt0.c0))) AS REAL) WHERE ((t0.c75 IN ())) ORDER BY (((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c1))))%(((rt0.c2)&(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c75 IN ())) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON CAST((((rt0.c1))<((rt0.c3))) AS INTEGER) RIGHT OUTER JOIN t0 ON CAST((((rt0.c3)) NOT BETWEEN ((t0.c7)) AND ((vt0.c0))) AS REAL) ORDER BY (((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c1))))%(((rt0.c2)&(rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON CAST((((rt0.c1))<((rt0.c3))) AS INTEGER) RIGHT OUTER JOIN t0 ON CAST((((rt0.c3)) NOT BETWEEN ((t0.c7)) AND ((vt0.c0))) AS REAL) WHERE ((t0.c75 IN ())) ORDER BY (((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c1))))%(((rt0.c2)&(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c75 IN ())) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON CAST((((rt0.c1))<((rt0.c3))) AS INTEGER) RIGHT OUTER JOIN t0 ON CAST((((rt0.c3)) NOT BETWEEN ((t0.c7)) AND ((vt0.c0))) AS REAL) ORDER BY (((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c1))))%(((rt0.c2)&(rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON CAST((((rt0.c1))<((rt0.c3))) AS INTEGER) RIGHT OUTER JOIN t0 ON CAST((((rt0.c3)) NOT BETWEEN ((t0.c7)) AND ((vt0.c0))) AS REAL) WHERE ((t0.c75 IN ())) ORDER BY (((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c1))))%(((rt0.c2)&(rt0.c1)))) DESC;
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (INSTR(t0.c75, CAST(t0.c75 AS REAL))) ORDER BY ((((((((t0.c7)OR(CAST(t0.c1 AS REAL))))OR(((0.9793326978251468)+(t0.c1)))))AND(((rt0.c1)>(t0.c1)))))AND(((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(t0.c2)))AND('1439556786'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(t0.c75, CAST(t0.c75 AS REAL))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((((t0.c7)OR(CAST(t0.c1 AS REAL))))OR(((0.9793326978251468)+(t0.c1)))))AND(((rt0.c1)>(t0.c1)))))AND(((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(t0.c2)))AND('1439556786'))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (INSTR(t0.c75, CAST(t0.c75 AS REAL))) ORDER BY ((((((((t0.c7)OR(CAST(t0.c1 AS REAL))))OR(((0.9793326978251468)+(t0.c1)))))AND(((rt0.c1)>(t0.c1)))))AND(((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(t0.c2)))AND('1439556786'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(t0.c75, CAST(t0.c75 AS REAL))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((((t0.c7)OR(CAST(t0.c1 AS REAL))))OR(((0.9793326978251468)+(t0.c1)))))AND(((rt0.c1)>(t0.c1)))))AND(((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(t0.c2)))AND('1439556786'))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (INSTR(t0.c75, CAST(t0.c75 AS REAL))) ORDER BY ((((((((t0.c7)OR(CAST(t0.c1 AS REAL))))OR(((0.9793326978251468)+(t0.c1)))))AND(((rt0.c1)>(t0.c1)))))AND(((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(t0.c2)))AND('1439556786'))))  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE ((((((t0.c1))<((t0.c7)))) BETWEEN ((((rt0.c1, 0.22255958640292828, t0.c7))==((x'', rt0.c0, rt0.c2)))) AND (((((rt0.c2)AND(t0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c1))<((t0.c7)))) BETWEEN ((((rt0.c1, 0.22255958640292828, t0.c7))=((x'', rt0.c0, rt0.c2)))) AND (((((rt0.c2)AND(t0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((((t0.c1))<((t0.c7)))) BETWEEN ((((rt0.c1, 0.22255958640292828, t0.c7))==((x'', rt0.c0, rt0.c2)))) AND (((((rt0.c2)AND(t0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c1))<((t0.c7)))) BETWEEN ((((rt0.c1, 0.22255958640292828, t0.c7))=((x'', rt0.c0, rt0.c2)))) AND (((((rt0.c2)AND(t0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((((t0.c1))<((t0.c7)))) BETWEEN ((((rt0.c1, 0.22255958640292828, t0.c7))==((x'', rt0.c0, rt0.c2)))) AND (((((rt0.c2)AND(t0.c2)))OR(rt0.c2)))));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (CASE (((NULL, rt0.c3, vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, vt0.c0, rt0.c2, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c3)))  WHEN ((((((((rt0.c3)OR(vt0.c0)))OR(rt0.c3)))AND('1762108604')))OR(rt0.c1)) THEN (NOT (rt0.c3)) ELSE ((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((NULL, rt0.c3, vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, vt0.c0, rt0.c2, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c3)))  WHEN ((((((((rt0.c3)OR(vt0.c0)))OR(rt0.c3)))AND('1762108604')))OR(rt0.c1)) THEN (NOT (rt0.c3)) ELSE ((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)) END) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (CASE (((NULL, rt0.c3, vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, vt0.c0, rt0.c2, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c3)))  WHEN ((((((((rt0.c3)OR(vt0.c0)))OR(rt0.c3)))AND('1762108604')))OR(rt0.c1)) THEN (NOT (rt0.c3)) ELSE ((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((NULL, rt0.c3, vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, vt0.c0, rt0.c2, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c3)))  WHEN ((((((((rt0.c3)OR(vt0.c0)))OR(rt0.c3)))AND('1762108604')))OR(rt0.c1)) THEN (NOT (rt0.c3)) ELSE ((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)) END) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (CASE (((NULL, rt0.c3, vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, vt0.c0, rt0.c2, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c3)))  WHEN ((((((((rt0.c3)OR(vt0.c0)))OR(rt0.c3)))AND('1762108604')))OR(rt0.c1)) THEN (NOT (rt0.c3)) ELSE ((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)) END);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY LIKELIHOOD(DISTINCT vt1.c0 COLLATE NOCASE, 0.532744653402892) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY LIKELIHOOD(DISTINCT vt1.c0 COLLATE NOCASE, 0.532744653402892) ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY LIKELIHOOD(DISTINCT vt1.c0 COLLATE NOCASE, 0.532744653402892) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY LIKELIHOOD(DISTINCT vt1.c0 COLLATE NOCASE, 0.532744653402892) ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY LIKELIHOOD(DISTINCT vt1.c0 COLLATE NOCASE, 0.532744653402892) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY (+ ((((vt0.c0))<>((0.7999938291261318))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((vt0.c0))!=((0.7999938291261318))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY (+ ((((vt0.c0))<>((0.7999938291261318))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((vt0.c0))!=((0.7999938291261318))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY (+ ((((vt0.c0))<>((0.7999938291261318))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c1)-(NULL)) IN ((t0.c7 IN ()), ((x'') NOT BETWEEN (vt1.c0) AND (t0.c2))))) ORDER BY CAST(CASE t0.c7  WHEN t0.c75 THEN '0.8175743996729922' END AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c1)-(NULL)) IN ((t0.c7 IN ()), ((x'') NOT BETWEEN (vt1.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(CASE t0.c7  WHEN t0.c75 THEN '0.8175743996729922' END AS BLOB) DESC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c1)-(NULL)) IN ((t0.c7 IN ()), ((x'') NOT BETWEEN (vt1.c0) AND (t0.c2))))) ORDER BY CAST(CASE t0.c7  WHEN t0.c75 THEN '0.8175743996729922' END AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c1)-(NULL)) IN ((t0.c7 IN ()), ((x'') NOT BETWEEN (vt1.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(CASE t0.c7  WHEN t0.c75 THEN '0.8175743996729922' END AS BLOB) DESC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c1)-(NULL)) IN ((t0.c7 IN ()), ((x'') NOT BETWEEN (vt1.c0) AND (t0.c2))))) ORDER BY CAST(CASE t0.c7  WHEN t0.c75 THEN '0.8175743996729922' END AS BLOB) DESC;
SELECT COUNT(*) FROM t0, vt1 WHERE (((((x'' COLLATE BINARY)OR(t0.c1)))AND(t0.c1))) ORDER BY t0.c75 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'' COLLATE BINARY)OR(t0.c1)))AND(t0.c1))) IS TRUE)  as count FROM t0, vt1 ORDER BY t0.c75 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((x'' COLLATE BINARY)OR(t0.c1)))AND(t0.c1))) ORDER BY t0.c75 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'' COLLATE BINARY)OR(t0.c1)))AND(t0.c1))) IS TRUE)  as count FROM t0, vt1 ORDER BY t0.c75 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((x'' COLLATE BINARY)OR(t0.c1)))AND(t0.c1))) ORDER BY t0.c75 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2)!=('Weo')))OR(CAST(NULL AS BLOB))))AND((vt0.c0 IN ()))) FULL OUTER JOIN vt0 ON (((rt0.c0) IS TRUE) IN ()) WHERE (((rt0.c2)||(rt0.c0)) COLLATE RTRIM) ORDER BY CASE 0.0  WHEN (- (vt0.c0)) THEN NULL COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)||(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2)!=('Weo')))OR(CAST(NULL AS BLOB))))AND((vt0.c0 IN ()))) FULL OUTER JOIN vt0 ON (((rt0.c0) IS TRUE) IN ()) ORDER BY CASE 0.0  WHEN (- (vt0.c0)) THEN NULL COLLATE BINARY END DESC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2)!=('Weo')))OR(CAST(NULL AS BLOB))))AND((vt0.c0 IN ()))) FULL OUTER JOIN vt0 ON (((rt0.c0) IS TRUE) IN ()) WHERE (((rt0.c2)||(rt0.c0)) COLLATE RTRIM) ORDER BY CASE 0.0  WHEN (- (vt0.c0)) THEN NULL COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)||(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2)!=('Weo')))OR(CAST(NULL AS BLOB))))AND((vt0.c0 IN ()))) FULL OUTER JOIN vt0 ON (((rt0.c0) IS TRUE) IN ()) ORDER BY CASE 0.0  WHEN (- (vt0.c0)) THEN NULL COLLATE BINARY END DESC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2)!=('Weo')))OR(CAST(NULL AS BLOB))))AND((vt0.c0 IN ()))) FULL OUTER JOIN vt0 ON (((rt0.c0) IS TRUE) IN ()) WHERE (((rt0.c2)||(rt0.c0)) COLLATE RTRIM) ORDER BY CASE 0.0  WHEN (- (vt0.c0)) THEN NULL COLLATE BINARY END DESC;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((t0.c1, t0.c0, t0.c2))>((t0.c1, t0.c75, vt0.c0)))) AND (t0.c0))) ORDER BY (((- (t0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((t0.c1, t0.c0, t0.c2))>((t0.c1, t0.c75, vt0.c0)))) AND (t0.c0))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((- (t0.c0))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((t0.c1, t0.c0, t0.c2))>((t0.c1, t0.c75, vt0.c0)))) AND (t0.c0))) ORDER BY (((- (t0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((t0.c1, t0.c0, t0.c2))>((t0.c1, t0.c75, vt0.c0)))) AND (t0.c0))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((- (t0.c0))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((t0.c1, t0.c0, t0.c2))>((t0.c1, t0.c75, vt0.c0)))) AND (t0.c0))) ORDER BY (((- (t0.c0))) NOTNULL)  NULLS LAST;
SELECT * FROM vt1, t0 WHERE (LOWER(DISTINCT CAST(t0.c75 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CAST(t0.c75 AS NUMERIC))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (LOWER(DISTINCT CAST(t0.c75 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CAST(t0.c75 AS NUMERIC))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (LOWER(DISTINCT CAST(t0.c75 AS NUMERIC)));
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE ('1149572233') ORDER BY ((((((vt1.c0) BETWEEN (rt0.c1) AND (t0.c0)))AND(vt0.c0)))AND((t0.c7 IN ())))  NULLS LAST, ((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(t0.c75)))AND(vt1.c0)))||(((t0.c7) BETWEEN (t0.c0) AND (t0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1149572233') IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY ((((((vt1.c0) BETWEEN (rt0.c1) AND (t0.c0)))AND(vt0.c0)))AND((t0.c7 IN ())))  NULLS LAST, ((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(t0.c75)))AND(vt1.c0)))||(((t0.c7) BETWEEN (t0.c0) AND (t0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE ('1149572233') ORDER BY ((((((vt1.c0) BETWEEN (rt0.c1) AND (t0.c0)))AND(vt0.c0)))AND((t0.c7 IN ())))  NULLS LAST, ((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(t0.c75)))AND(vt1.c0)))||(((t0.c7) BETWEEN (t0.c0) AND (t0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1149572233') IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY ((((((vt1.c0) BETWEEN (rt0.c1) AND (t0.c0)))AND(vt0.c0)))AND((t0.c7 IN ())))  NULLS LAST, ((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(t0.c75)))AND(vt1.c0)))||(((t0.c7) BETWEEN (t0.c0) AND (t0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (CASE TOTAL_CHANGES()  WHEN (((t0.c2, t0.c7, t0.c7))>=((t0.c75, vt1.c0, -1.214608237E9))) THEN ((t0.c7) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TOTAL_CHANGES()  WHEN (((t0.c2, t0.c7, t0.c7))>=((t0.c75, vt1.c0, -1.214608237E9))) THEN ((t0.c7) NOT NULL) END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (CASE TOTAL_CHANGES()  WHEN (((t0.c2, t0.c7, t0.c7))>=((t0.c75, vt1.c0, -1.214608237E9))) THEN ((t0.c7) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TOTAL_CHANGES()  WHEN (((t0.c2, t0.c7, t0.c7))>=((t0.c75, vt1.c0, -1.214608237E9))) THEN ((t0.c7) NOT NULL) END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (CASE TOTAL_CHANGES()  WHEN (((t0.c2, t0.c7, t0.c7))>=((t0.c75, vt1.c0, -1.214608237E9))) THEN ((t0.c7) NOT NULL) END);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((((((((((vt1.c0)AND(t0.c0)))OR(rt0.c0)))OR(t0.c75)))OR(x'')))%(((('繬 ')) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)AND(t0.c0)))OR(rt0.c0)))OR(t0.c75)))OR(x'')))%(((('繬 ')) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((((((((((vt1.c0)AND(t0.c0)))OR(rt0.c0)))OR(t0.c75)))OR(x'')))%(((('繬 ')) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)AND(t0.c0)))OR(rt0.c0)))OR(t0.c75)))OR(x'')))%(((('繬 ')) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((((((((((vt1.c0)AND(t0.c0)))OR(rt0.c0)))OR(t0.c75)))OR(x'')))%(((('繬 ')) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((((t0.c0))=((vt1.c0))))*(CAST(t0.c1 AS TEXT)))) ORDER BY ((t0.c1 COLLATE RTRIM) IS FALSE) ASC, x'c76c' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0))==((vt1.c0))))*(CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((t0.c1 COLLATE RTRIM) IS FALSE) ASC, x'c76c' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((((t0.c0))=((vt1.c0))))*(CAST(t0.c1 AS TEXT)))) ORDER BY ((t0.c1 COLLATE RTRIM) IS FALSE) ASC, x'c76c' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0))==((vt1.c0))))*(CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((t0.c1 COLLATE RTRIM) IS FALSE) ASC, x'c76c' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((((t0.c0))=((vt1.c0))))*(CAST(t0.c1 AS TEXT)))) ORDER BY ((t0.c1 COLLATE RTRIM) IS FALSE) ASC, x'c76c' DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE BINARY THEN (- (vt1.c0)) ELSE ((vt1.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE BINARY THEN (- (vt1.c0)) ELSE ((vt1.c0) NOT NULL) END) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE BINARY THEN (- (vt1.c0)) ELSE ((vt1.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE BINARY THEN (- (vt1.c0)) ELSE ((vt1.c0) NOT NULL) END) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE BINARY THEN (- (vt1.c0)) ELSE ((vt1.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (x'');
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN (((t0.c0, vt1.c0, t0.c7))>=(('-1424431592', x'', t0.c7))) THEN ((vt0.c0)%(rt0.c1)) ELSE t0.c75 COLLATE RTRIM END LEFT OUTER JOIN vt1 ON ((0.20362133070268196)||(COALESCE(t0.c7, t0.c75))) RIGHT OUTER JOIN t0 ON (((((+ (vt0.c0)))OR(((t0.c75)IS(t0.c2)))))OR('-524503657' COLLATE NOCASE)) WHERE ((((rt0.c3 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN (((t0.c0, vt1.c0, t0.c7))>=(('-1424431592', x'', t0.c7))) THEN ((vt0.c0)%(rt0.c1)) ELSE t0.c75 COLLATE RTRIM END LEFT OUTER JOIN vt1 ON ((0.20362133070268196)||(COALESCE(t0.c7, t0.c75))) RIGHT OUTER JOIN t0 ON (((((+ (vt0.c0)))OR(((t0.c75)IS(t0.c2)))))OR('-524503657' COLLATE NOCASE)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN (((t0.c0, vt1.c0, t0.c7))>=(('-1424431592', x'', t0.c7))) THEN ((vt0.c0)%(rt0.c1)) ELSE t0.c75 COLLATE RTRIM END LEFT OUTER JOIN vt1 ON ((0.20362133070268196)||(COALESCE(t0.c7, t0.c75))) RIGHT OUTER JOIN t0 ON (((((+ (vt0.c0)))OR(((t0.c75)IS(t0.c2)))))OR('-524503657' COLLATE NOCASE)) WHERE ((((rt0.c3 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN (((t0.c0, vt1.c0, t0.c7))>=(('-1424431592', x'', t0.c7))) THEN ((vt0.c0)%(rt0.c1)) ELSE t0.c75 COLLATE RTRIM END LEFT OUTER JOIN vt1 ON ((0.20362133070268196)||(COALESCE(t0.c7, t0.c75))) RIGHT OUTER JOIN t0 ON (((((+ (vt0.c0)))OR(((t0.c75)IS(t0.c2)))))OR('-524503657' COLLATE NOCASE)));
SELECT * FROM vt1, rt0 WHERE ((+ (((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((+ (((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((+ (((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CASE ABS(vt1.c0)  WHEN x'4819' THEN (((0Xfffffffface1e243, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, x'', vt1.c0, vt1.c0, vt1.c0))) WHEN vt1.c0 THEN (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE BINARY END, ((((((vt1.c0)AND(vt1.c0)))AND(NULL)))AND(((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CASE ABS(vt1.c0)  WHEN x'4819' THEN (((0Xfffffffface1e243, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, x'', vt1.c0, vt1.c0, vt1.c0))) WHEN vt1.c0 THEN (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE BINARY END, ((((((vt1.c0)AND(vt1.c0)))AND(NULL)))AND(((vt1.c0) NOT NULL))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CASE ABS(vt1.c0)  WHEN x'4819' THEN (((0Xfffffffface1e243, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, x'', vt1.c0, vt1.c0, vt1.c0))) WHEN vt1.c0 THEN (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE BINARY END, ((((((vt1.c0)AND(vt1.c0)))AND(NULL)))AND(((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CASE ABS(vt1.c0)  WHEN x'4819' THEN (((0Xfffffffface1e243, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, x'', vt1.c0, vt1.c0, vt1.c0))) WHEN vt1.c0 THEN (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE BINARY END, ((((((vt1.c0)AND(vt1.c0)))AND(NULL)))AND(((vt1.c0) NOT NULL))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CASE ABS(vt1.c0)  WHEN x'4819' THEN (((0Xfffffffface1e243, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, x'', vt1.c0, vt1.c0, vt1.c0))) WHEN vt1.c0 THEN (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE BINARY END, ((((((vt1.c0)AND(vt1.c0)))AND(NULL)))AND(((vt1.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c1, NULL)) BETWEEN ((t0.c0, t0.c1, t0.c0)) AND (('', t0.c7, NULL))) COLLATE NOCASE) ORDER BY CASE WHEN 'T ' THEN ((t0.c75)!=(t0.c75)) END;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c1, NULL)) BETWEEN ((t0.c0, t0.c1, t0.c0)) AND (('', t0.c7, NULL))) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN 'T ' THEN ((t0.c75)!=(t0.c75)) END);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c1, NULL)) BETWEEN ((t0.c0, t0.c1, t0.c0)) AND (('', t0.c7, NULL))) COLLATE NOCASE) ORDER BY CASE WHEN 'T ' THEN ((t0.c75)!=(t0.c75)) END;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c1, NULL)) BETWEEN ((t0.c0, t0.c1, t0.c0)) AND (('', t0.c7, NULL))) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN 'T ' THEN ((t0.c75)!=(t0.c75)) END);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c1, NULL)) BETWEEN ((t0.c0, t0.c1, t0.c0)) AND (('', t0.c7, NULL))) COLLATE NOCASE) ORDER BY CASE WHEN 'T ' THEN ((t0.c75)!=(t0.c75)) END;
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (- (((t0.c0)||(t0.c2)))) FULL OUTER JOIN t0 ON ((t0.c1) NOT BETWEEN (t0.c1) AND (vt1.c0)) COLLATE BINARY WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c75 WHEN vt0.c0 THEN t0.c75 ELSE t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c75 WHEN vt0.c0 THEN t0.c75 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (- (((t0.c0)||(t0.c2)))) FULL OUTER JOIN t0 ON ((t0.c1) NOT BETWEEN (t0.c1) AND (vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (- (((t0.c0)||(t0.c2)))) FULL OUTER JOIN t0 ON ((t0.c1) NOT BETWEEN (t0.c1) AND (vt1.c0)) COLLATE BINARY WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c75 WHEN vt0.c0 THEN t0.c75 ELSE t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c75 WHEN vt0.c0 THEN t0.c75 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (- (((t0.c0)||(t0.c2)))) FULL OUTER JOIN t0 ON ((t0.c1) NOT BETWEEN (t0.c1) AND (vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (rt0.c2);
SELECT * FROM rt0, vt1, vt0, t0 WHERE (((t0.c0) BETWEEN ((rt0.c3 IN ())) AND ((((rt0.c2))<=((t0.c75)))))) ORDER BY ((((CAST(rt0.c3 AS TEXT))OR(((vt1.c0)IS(t0.c7)))))OR((('-2058397448')>=(t0.c7))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN ((rt0.c3 IN ())) AND ((((rt0.c2))<=((t0.c75)))))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY ((((CAST(rt0.c3 AS TEXT))OR(((vt1.c0)IS(t0.c7)))))OR((('-2058397448')>=(t0.c7))))  NULLS LAST);
SELECT * FROM rt0, vt1, vt0, t0 WHERE (((t0.c0) BETWEEN ((rt0.c3 IN ())) AND ((((rt0.c2))<=((t0.c75)))))) ORDER BY ((((CAST(rt0.c3 AS TEXT))OR(((vt1.c0)IS(t0.c7)))))OR((('-2058397448')>=(t0.c7))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN ((rt0.c3 IN ())) AND ((((rt0.c2))<=((t0.c75)))))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY ((((CAST(rt0.c3 AS TEXT))OR(((vt1.c0)IS(t0.c7)))))OR((('-2058397448')>=(t0.c7))))  NULLS LAST);
SELECT * FROM rt0, vt1, vt0, t0 WHERE (((t0.c0) BETWEEN ((rt0.c3 IN ())) AND ((((rt0.c2))<=((t0.c75)))))) ORDER BY ((((CAST(rt0.c3 AS TEXT))OR(((vt1.c0)IS(t0.c7)))))OR((('-2058397448')>=(t0.c7))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (vt0.c0)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (TIME('{}' COLLATE BINARY, ((rt0.c3)<(rt0.c0)), (rt0.c1 IN (rt0.c1)), ((0.25991043407599057)AND(rt0.c1)), CAST(vt0.c0 AS BLOB))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((TIME('{}' COLLATE BINARY, ((rt0.c3)<(rt0.c0)), (rt0.c1 IN (rt0.c1)), ((0.25991043407599057)AND(rt0.c1)), CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0 DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (TIME('{}' COLLATE BINARY, ((rt0.c3)<(rt0.c0)), (rt0.c1 IN (rt0.c1)), ((0.25991043407599057)AND(rt0.c1)), CAST(vt0.c0 AS BLOB))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((TIME('{}' COLLATE BINARY, ((rt0.c3)<(rt0.c0)), (rt0.c1 IN (rt0.c1)), ((0.25991043407599057)AND(rt0.c1)), CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0 DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (TIME('{}' COLLATE BINARY, ((rt0.c3)<(rt0.c0)), (rt0.c1 IN (rt0.c1)), ((0.25991043407599057)AND(rt0.c1)), CAST(vt0.c0 AS BLOB))) ORDER BY rt0.c0 DESC;
SELECT * FROM t0, vt0 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((vt0.c0) NOTNULL));
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (rt0.c2) ORDER BY t0.c75 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, t0, vt1 ORDER BY t0.c75 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (rt0.c2) ORDER BY t0.c75 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, t0, vt1 ORDER BY t0.c75 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (rt0.c2) ORDER BY t0.c75 DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, rt0 CROSS JOIN t0 ON (((((t0.c1))=((vt1.c0))))<=(CAST(t0.c7 AS INTEGER))) WHERE (((vt1.c0)%(x'31f7')) COLLATE BINARY COLLATE RTRIM) ORDER BY json_array(CHAR(x''), IFNULL(vt0.c0, t0.c75)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)%(x'31f7')) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, rt0 CROSS JOIN t0 ON (((((t0.c1))=((vt1.c0))))<=(CAST(t0.c7 AS INTEGER))) ORDER BY json_array(CHAR(x''), IFNULL(vt0.c0, t0.c75)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0 CROSS JOIN t0 ON (((((t0.c1))=((vt1.c0))))<=(CAST(t0.c7 AS INTEGER))) WHERE (((vt1.c0)%(x'31f7')) COLLATE BINARY COLLATE RTRIM) ORDER BY json_array(CHAR(x''), IFNULL(vt0.c0, t0.c75)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)%(x'31f7')) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, rt0 CROSS JOIN t0 ON (((((t0.c1))=((vt1.c0))))<=(CAST(t0.c7 AS INTEGER))) ORDER BY json_array(CHAR(x''), IFNULL(vt0.c0, t0.c75)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0 CROSS JOIN t0 ON (((((t0.c1))=((vt1.c0))))<=(CAST(t0.c7 AS INTEGER))) WHERE (((vt1.c0)%(x'31f7')) COLLATE BINARY COLLATE RTRIM) ORDER BY json_array(CHAR(x''), IFNULL(vt0.c0, t0.c75)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c75 IN ())) NOT BETWEEN ((((t0.c2, vt0.c0, vt0.c0))>((t0.c75, t0.c1, 0X23a934a)))) AND (((t0.c1)>=(t0.c75))))) ORDER BY CASE WHEN ((t0.c75)-(t0.c2)) THEN 0Xffffffffbdc0fe06 COLLATE BINARY END, (~ (CAST(vt0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c75 IN ())) NOT BETWEEN ((((t0.c2, vt0.c0, vt0.c0))>((t0.c75, t0.c1, 0X23a934a)))) AND (((t0.c1)>=(t0.c75))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN ((t0.c75)-(t0.c2)) THEN 0xffffffffbdc0fe06 COLLATE BINARY END, (~ (CAST(vt0.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c75 IN ())) NOT BETWEEN ((((t0.c2, vt0.c0, vt0.c0))>((t0.c75, t0.c1, 0X23a934a)))) AND (((t0.c1)>=(t0.c75))))) ORDER BY CASE WHEN ((t0.c75)-(t0.c2)) THEN 0Xffffffffbdc0fe06 COLLATE BINARY END, (~ (CAST(vt0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c75 IN ())) NOT BETWEEN ((((t0.c2, vt0.c0, vt0.c0))>((t0.c75, t0.c1, 0X23a934a)))) AND (((t0.c1)>=(t0.c75))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN ((t0.c75)-(t0.c2)) THEN 0xffffffffbdc0fe06 COLLATE BINARY END, (~ (CAST(vt0.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c75 IN ())) NOT BETWEEN ((((t0.c2, vt0.c0, vt0.c0))>((t0.c75, t0.c1, 0X23a934a)))) AND (((t0.c1)>=(t0.c75))))) ORDER BY CASE WHEN ((t0.c75)-(t0.c2)) THEN 0Xffffffffbdc0fe06 COLLATE BINARY END, (~ (CAST(vt0.c0 AS INTEGER)))  NULLS LAST;
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((CAST(vt0.c0 AS BLOB))IS NOT((1.415915498E9 IN ()))) RIGHT OUTER JOIN vt0 ON ((('1144448263') BETWEEN (NULL) AND (rt0.c2)) IN ()) INNER JOIN vt1 ON x'' WHERE (CASE rt0.c2  WHEN ((((vt0.c0)OR(rt0.c0)))AND(t0.c7)) THEN (((rt0.c1)) BETWEEN ((t0.c2)) AND ((rt0.c0))) END) ORDER BY ((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c3 END)&(rt0.c2 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN ((((vt0.c0)OR(rt0.c0)))AND(t0.c7)) THEN (((rt0.c1)) BETWEEN ((t0.c2)) AND ((rt0.c0))) END) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((CAST(vt0.c0 AS BLOB))IS NOT((1.415915498E9 IN ()))) RIGHT OUTER JOIN vt0 ON ((('1144448263') BETWEEN (NULL) AND (rt0.c2)) IN ()) INNER JOIN vt1 ON x'' ORDER BY ((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c3 END)&(rt0.c2 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((CAST(vt0.c0 AS BLOB))IS NOT((1.415915498E9 IN ()))) RIGHT OUTER JOIN vt0 ON ((('1144448263') BETWEEN (NULL) AND (rt0.c2)) IN ()) INNER JOIN vt1 ON x'' WHERE (CASE rt0.c2  WHEN ((((vt0.c0)OR(rt0.c0)))AND(t0.c7)) THEN (((rt0.c1)) BETWEEN ((t0.c2)) AND ((rt0.c0))) END) ORDER BY ((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c3 END)&(rt0.c2 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN ((((vt0.c0)OR(rt0.c0)))AND(t0.c7)) THEN (((rt0.c1)) BETWEEN ((t0.c2)) AND ((rt0.c0))) END) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((CAST(vt0.c0 AS BLOB))IS NOT((1.415915498E9 IN ()))) RIGHT OUTER JOIN vt0 ON ((('1144448263') BETWEEN (NULL) AND (rt0.c2)) IN ()) INNER JOIN vt1 ON x'' ORDER BY ((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c3 END)&(rt0.c2 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON (((vt0.c0 COLLATE NOCASE))>=((IFNULL(vt1.c0, vt1.c0)))) RIGHT OUTER JOIN rt0 ON (((t0.c1)) BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((CAST(rt0.c0 AS REAL)))) WHERE (((CASE vt1.c0  WHEN t0.c1 THEN '' ELSE vt0.c0 END) NOT BETWEEN (load_extension(t0.c2, vt1.c0)) AND (TIME(t0.c0, t0.c2, t0.c75))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN t0.c1 THEN '' ELSE vt0.c0 END) NOT BETWEEN (load_extension(t0.c2, vt1.c0)) AND (TIME(t0.c0, t0.c2, t0.c75)))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON (((vt0.c0 COLLATE NOCASE))>=((IFNULL(vt1.c0, vt1.c0)))) RIGHT OUTER JOIN rt0 ON (((t0.c1)) BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((CAST(rt0.c0 AS REAL)))));
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON (((vt0.c0 COLLATE NOCASE))>=((IFNULL(vt1.c0, vt1.c0)))) RIGHT OUTER JOIN rt0 ON (((t0.c1)) BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((CAST(rt0.c0 AS REAL)))) WHERE (((CASE vt1.c0  WHEN t0.c1 THEN '' ELSE vt0.c0 END) NOT BETWEEN (load_extension(t0.c2, vt1.c0)) AND (TIME(t0.c0, t0.c2, t0.c75))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN t0.c1 THEN '' ELSE vt0.c0 END) NOT BETWEEN (load_extension(t0.c2, vt1.c0)) AND (TIME(t0.c0, t0.c2, t0.c75)))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON (((vt0.c0 COLLATE NOCASE))>=((IFNULL(vt1.c0, vt1.c0)))) RIGHT OUTER JOIN rt0 ON (((t0.c1)) BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((CAST(rt0.c0 AS REAL)))));
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON (((vt0.c0 COLLATE NOCASE))>=((IFNULL(vt1.c0, vt1.c0)))) RIGHT OUTER JOIN rt0 ON (((t0.c1)) BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((CAST(rt0.c0 AS REAL)))) WHERE (((CASE vt1.c0  WHEN t0.c1 THEN '' ELSE vt0.c0 END) NOT BETWEEN (load_extension(t0.c2, vt1.c0)) AND (TIME(t0.c0, t0.c2, t0.c75))));
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN vt0 ON CAST((NOT (rt0.c2)) AS TEXT) CROSS JOIN t0 ON ((((((t0.c2)OR(rt0.c1)))OR(rt0.c3))) BETWEEN (((vt1.c0) IS TRUE)) AND (CASE t0.c2  WHEN t0.c7 THEN rt0.c3 END)) WHERE (CAST(((((rt0.c2)AND(rt0.c3)))OR(t0.c75)) AS BLOB)) ORDER BY ((((rt0.c0) ISNULL)) NOT BETWEEN (rt0.c1) AND (((((((((rt0.c2)AND(t0.c0)))OR(t0.c2)))AND(rt0.c3)))OR(vt0.c0)))) ASC, (~ (((t0.c0)<>(t0.c1)))) DESC, (CAST(rt0.c0 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)AND(rt0.c3)))OR(t0.c75)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN vt0 ON CAST((NOT (rt0.c2)) AS TEXT) CROSS JOIN t0 ON ((((((t0.c2)OR(rt0.c1)))OR(rt0.c3))) BETWEEN (((vt1.c0) IS TRUE)) AND (CASE t0.c2  WHEN t0.c7 THEN rt0.c3 END)) ORDER BY ((((rt0.c0) ISNULL)) NOT BETWEEN (rt0.c1) AND (((((((((rt0.c2)AND(t0.c0)))OR(t0.c2)))AND(rt0.c3)))OR(vt0.c0)))) ASC, (~ (((t0.c0)!=(t0.c1)))) DESC, (CAST(rt0.c0 AS BLOB) IN ()));
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN vt0 ON CAST((NOT (rt0.c2)) AS TEXT) CROSS JOIN t0 ON ((((((t0.c2)OR(rt0.c1)))OR(rt0.c3))) BETWEEN (((vt1.c0) IS TRUE)) AND (CASE t0.c2  WHEN t0.c7 THEN rt0.c3 END)) WHERE (CAST(((((rt0.c2)AND(rt0.c3)))OR(t0.c75)) AS BLOB)) ORDER BY ((((rt0.c0) ISNULL)) NOT BETWEEN (rt0.c1) AND (((((((((rt0.c2)AND(t0.c0)))OR(t0.c2)))AND(rt0.c3)))OR(vt0.c0)))) ASC, (~ (((t0.c0)<>(t0.c1)))) DESC, (CAST(rt0.c0 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)AND(rt0.c3)))OR(t0.c75)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN vt0 ON CAST((NOT (rt0.c2)) AS TEXT) CROSS JOIN t0 ON ((((((t0.c2)OR(rt0.c1)))OR(rt0.c3))) BETWEEN (((vt1.c0) IS TRUE)) AND (CASE t0.c2  WHEN t0.c7 THEN rt0.c3 END)) ORDER BY ((((rt0.c0) ISNULL)) NOT BETWEEN (rt0.c1) AND (((((((((rt0.c2)AND(t0.c0)))OR(t0.c2)))AND(rt0.c3)))OR(vt0.c0)))) ASC, (~ (((t0.c0)!=(t0.c1)))) DESC, (CAST(rt0.c0 AS BLOB) IN ()));
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN vt0 ON CAST((NOT (rt0.c2)) AS TEXT) CROSS JOIN t0 ON ((((((t0.c2)OR(rt0.c1)))OR(rt0.c3))) BETWEEN (((vt1.c0) IS TRUE)) AND (CASE t0.c2  WHEN t0.c7 THEN rt0.c3 END)) WHERE (CAST(((((rt0.c2)AND(rt0.c3)))OR(t0.c75)) AS BLOB)) ORDER BY ((((rt0.c0) ISNULL)) NOT BETWEEN (rt0.c1) AND (((((((((rt0.c2)AND(t0.c0)))OR(t0.c2)))AND(rt0.c3)))OR(vt0.c0)))) ASC, (~ (((t0.c0)<>(t0.c1)))) DESC, (CAST(rt0.c0 AS BLOB) IN ());
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (json_quote(CAST(rt0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((json_quote(CAST(rt0.c2 AS NUMERIC))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (json_quote(CAST(rt0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((json_quote(CAST(rt0.c2 AS NUMERIC))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (json_quote(CAST(rt0.c2 AS NUMERIC)));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOTNULL));
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE ((((CAST(t0.c0 AS TEXT)))==((((rt0.c2)IS(rt0.c0)))))) ORDER BY CASE WHEN (t0.c75 IN (t0.c2, t0.c0)) THEN CASE vt1.c0  WHEN vt0.c0 THEN t0.c1 ELSE rt0.c2 END END, (((t0.c75)) BETWEEN ((((vt0.c0)<=(t0.c0)))) AND ((((t0.c75) BETWEEN (t0.c75) AND (rt0.c0))))), CASE WHEN rt0.c3 THEN rt0.c0 COLLATE NOCASE WHEN (rt0.c1 IN ()) THEN ((0.2782861432803153) NOT NULL) WHEN LIKELY(rt0.c0) THEN (rt0.c0 IN (t0.c2, rt0.c3)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c0 AS TEXT)))=((((rt0.c2)IS(rt0.c0)))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY CASE WHEN (t0.c75 IN (t0.c2, t0.c0)) THEN CASE vt1.c0  WHEN vt0.c0 THEN t0.c1 ELSE rt0.c2 END END, (((t0.c75)) BETWEEN ((((vt0.c0)<=(t0.c0)))) AND ((((t0.c75) BETWEEN (t0.c75) AND (rt0.c0))))), CASE WHEN rt0.c3 THEN rt0.c0 COLLATE NOCASE WHEN (rt0.c1 IN ()) THEN ((0.2782861432803153) NOT NULL) WHEN LIKELY(rt0.c0) THEN (rt0.c0 IN (t0.c2, rt0.c3)) END ASC);
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE ((((CAST(t0.c0 AS TEXT)))==((((rt0.c2)IS(rt0.c0)))))) ORDER BY CASE WHEN (t0.c75 IN (t0.c2, t0.c0)) THEN CASE vt1.c0  WHEN vt0.c0 THEN t0.c1 ELSE rt0.c2 END END, (((t0.c75)) BETWEEN ((((vt0.c0)<=(t0.c0)))) AND ((((t0.c75) BETWEEN (t0.c75) AND (rt0.c0))))), CASE WHEN rt0.c3 THEN rt0.c0 COLLATE NOCASE WHEN (rt0.c1 IN ()) THEN ((0.2782861432803153) NOT NULL) WHEN LIKELY(rt0.c0) THEN (rt0.c0 IN (t0.c2, rt0.c3)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c0 AS TEXT)))=((((rt0.c2)IS(rt0.c0)))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY CASE WHEN (t0.c75 IN (t0.c2, t0.c0)) THEN CASE vt1.c0  WHEN vt0.c0 THEN t0.c1 ELSE rt0.c2 END END, (((t0.c75)) BETWEEN ((((vt0.c0)<=(t0.c0)))) AND ((((t0.c75) BETWEEN (t0.c75) AND (rt0.c0))))), CASE WHEN rt0.c3 THEN rt0.c0 COLLATE NOCASE WHEN (rt0.c1 IN ()) THEN ((0.2782861432803153) NOT NULL) WHEN LIKELY(rt0.c0) THEN (rt0.c0 IN (t0.c2, rt0.c3)) END ASC);
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE ((((CAST(t0.c0 AS TEXT)))==((((rt0.c2)IS(rt0.c0)))))) ORDER BY CASE WHEN (t0.c75 IN (t0.c2, t0.c0)) THEN CASE vt1.c0  WHEN vt0.c0 THEN t0.c1 ELSE rt0.c2 END END, (((t0.c75)) BETWEEN ((((vt0.c0)<=(t0.c0)))) AND ((((t0.c75) BETWEEN (t0.c75) AND (rt0.c0))))), CASE WHEN rt0.c3 THEN rt0.c0 COLLATE NOCASE WHEN (rt0.c1 IN ()) THEN ((0.2782861432803153) NOT NULL) WHEN LIKELY(rt0.c0) THEN (rt0.c0 IN (t0.c2, rt0.c3)) END ASC;
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE ((0Xffffffff976ab303 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0xffffffff976ab303 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE ((0Xffffffff976ab303 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0xffffffff976ab303 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE ((0Xffffffff976ab303 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (((t0.c7)) BETWEEN ((t0.c0)) AND ((t0.c2))) WHEN (((t0.c75, t0.c0, t0.c2)) NOT BETWEEN ((t0.c75, vt0.c0, t0.c0)) AND ((t0.c0, t0.c2, t0.c0))) THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) WHEN ((t0.c75) NOT BETWEEN (vt0.c0) AND (t0.c1)) THEN ((t0.c1)%(t0.c75)) END) ORDER BY ((((((((x'836ee746')AND(t0.c2)))OR(UPPER(DISTINCT t0.c75))))OR(((vt0.c0) NOT NULL))))AND(CASE t0.c7  WHEN t0.c1 THEN t0.c0 END))  NULLS LAST, (((t0.c7, vt0.c0, t0.c75)) BETWEEN ((((((((((t0.c7)AND(0.7859151077829104)))OR(vt0.c0)))OR(vt0.c0)))AND(793043266)), SQLITE_VERSION(), (t0.c1 IN ('6vdKP')))) AND ((TYPEOF(t0.c1), ('-1400242433' IN ()), ((t0.c7)*(t0.c75)))));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS TRUE)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (((t0.c7)) BETWEEN ((t0.c0)) AND ((t0.c2))) WHEN (((t0.c75, t0.c0, t0.c2)) NOT BETWEEN ((t0.c75, vt0.c0, t0.c0)) AND ((t0.c0, t0.c2, t0.c0))) THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) WHEN ((t0.c75) NOT BETWEEN (vt0.c0) AND (t0.c1)) THEN ((t0.c1)%(t0.c75)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((x'836ee746')AND(t0.c2)))OR(UPPER(DISTINCT t0.c75))))OR(((vt0.c0) NOT NULL))))AND(CASE t0.c7  WHEN t0.c1 THEN t0.c0 END))  NULLS LAST, (((t0.c7, vt0.c0, t0.c75)) BETWEEN ((((((((((t0.c7)AND(0.7859151077829104)))OR(vt0.c0)))OR(vt0.c0)))AND(793043266)), SQLITE_VERSION(), (t0.c1 IN ('6vdKP')))) AND ((TYPEOF(t0.c1), ('-1400242433' IN ()), ((t0.c7)*(t0.c75))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (((t0.c7)) BETWEEN ((t0.c0)) AND ((t0.c2))) WHEN (((t0.c75, t0.c0, t0.c2)) NOT BETWEEN ((t0.c75, vt0.c0, t0.c0)) AND ((t0.c0, t0.c2, t0.c0))) THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) WHEN ((t0.c75) NOT BETWEEN (vt0.c0) AND (t0.c1)) THEN ((t0.c1)%(t0.c75)) END) ORDER BY ((((((((x'836ee746')AND(t0.c2)))OR(UPPER(DISTINCT t0.c75))))OR(((vt0.c0) NOT NULL))))AND(CASE t0.c7  WHEN t0.c1 THEN t0.c0 END))  NULLS LAST, (((t0.c7, vt0.c0, t0.c75)) BETWEEN ((((((((((t0.c7)AND(0.7859151077829104)))OR(vt0.c0)))OR(vt0.c0)))AND(793043266)), SQLITE_VERSION(), (t0.c1 IN ('6vdKP')))) AND ((TYPEOF(t0.c1), ('-1400242433' IN ()), ((t0.c7)*(t0.c75)))));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS TRUE)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (((t0.c7)) BETWEEN ((t0.c0)) AND ((t0.c2))) WHEN (((t0.c75, t0.c0, t0.c2)) NOT BETWEEN ((t0.c75, vt0.c0, t0.c0)) AND ((t0.c0, t0.c2, t0.c0))) THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) WHEN ((t0.c75) NOT BETWEEN (vt0.c0) AND (t0.c1)) THEN ((t0.c1)%(t0.c75)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((x'836ee746')AND(t0.c2)))OR(UPPER(DISTINCT t0.c75))))OR(((vt0.c0) NOT NULL))))AND(CASE t0.c7  WHEN t0.c1 THEN t0.c0 END))  NULLS LAST, (((t0.c7, vt0.c0, t0.c75)) BETWEEN ((((((((((t0.c7)AND(0.7859151077829104)))OR(vt0.c0)))OR(vt0.c0)))AND(793043266)), SQLITE_VERSION(), (t0.c1 IN ('6vdKP')))) AND ((TYPEOF(t0.c1), ('-1400242433' IN ()), ((t0.c7)*(t0.c75))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (((t0.c7)) BETWEEN ((t0.c0)) AND ((t0.c2))) WHEN (((t0.c75, t0.c0, t0.c2)) NOT BETWEEN ((t0.c75, vt0.c0, t0.c0)) AND ((t0.c0, t0.c2, t0.c0))) THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) WHEN ((t0.c75) NOT BETWEEN (vt0.c0) AND (t0.c1)) THEN ((t0.c1)%(t0.c75)) END) ORDER BY ((((((((x'836ee746')AND(t0.c2)))OR(UPPER(DISTINCT t0.c75))))OR(((vt0.c0) NOT NULL))))AND(CASE t0.c7  WHEN t0.c1 THEN t0.c0 END))  NULLS LAST, (((t0.c7, vt0.c0, t0.c75)) BETWEEN ((((((((((t0.c7)AND(0.7859151077829104)))OR(vt0.c0)))OR(vt0.c0)))AND(793043266)), SQLITE_VERSION(), (t0.c1 IN ('6vdKP')))) AND ((TYPEOF(t0.c1), ('-1400242433' IN ()), ((t0.c7)*(t0.c75)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULLIF(DISTINCT vt0.c0, vt0.c0))AND(x'')))OR((~ (vt0.c0))))) ORDER BY json_array_length(((vt0.c0)<(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(DISTINCT vt0.c0, vt0.c0))AND(x'')))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY json_array_length(((vt0.c0)<(vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULLIF(DISTINCT vt0.c0, vt0.c0))AND(x'')))OR((~ (vt0.c0))))) ORDER BY json_array_length(((vt0.c0)<(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(DISTINCT vt0.c0, vt0.c0))AND(x'')))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY json_array_length(((vt0.c0)<(vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULLIF(DISTINCT vt0.c0, vt0.c0))AND(x'')))OR((~ (vt0.c0))))) ORDER BY json_array_length(((vt0.c0)<(vt0.c0))) ASC;
SELECT * FROM rt0, vt1, t0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE (TOTAL_CHANGES());
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((((t0.c1) BETWEEN (vt1.c0) AND (t0.c75))))<((((t0.c75)|('j% [A}i2.'))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1) BETWEEN (vt1.c0) AND (t0.c75))))<((((t0.c75)|('j% [A}i2.')))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((((t0.c1) BETWEEN (vt1.c0) AND (t0.c75))))<((((t0.c75)|('j% [A}i2.'))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1) BETWEEN (vt1.c0) AND (t0.c75))))<((((t0.c75)|('j% [A}i2.')))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((((t0.c1) BETWEEN (vt1.c0) AND (t0.c75))))<((((t0.c75)|('j% [A}i2.'))))));
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), rt0.c2));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), rt0.c2)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), rt0.c2));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), rt0.c2)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), rt0.c2));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (NOT (CASE t0.c75  WHEN t0.c0 THEN t0.c1 WHEN t0.c7 THEN rt0.c0 WHEN '1729692822' THEN t0.c1 WHEN t0.c2 THEN NULL WHEN t0.c1 THEN rt0.c3 END)) RIGHT OUTER JOIN vt0 ON UPPER(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN t0.c0 END) LEFT OUTER JOIN vt1 ON ((t0.c0)IS(rt0.c3)) COLLATE NOCASE WHERE ((((((NULL)||(rt0.c1)), ((rt0.c1)|(t0.c7)), ((rt0.c0)IS(t0.c1)), vt1.c0, (- (rt0.c0))))>((LIKELIHOOD(DISTINCT vt0.c0, 0.37374928758571935), ((t0.c75)>(0x2dc48f76)), (vt0.c0 IN ()), LIKELY(DISTINCT x''), t0.c7)))) ORDER BY t0.c75;
SELECT SUM(count) FROM (SELECT (((((((NULL)||(rt0.c1)), ((rt0.c1)|(t0.c7)), ((rt0.c0)IS(t0.c1)), vt1.c0, (- (rt0.c0))))>((LIKELIHOOD(DISTINCT vt0.c0, 0.37374928758571935), ((t0.c75)>(0X2dc48f76)), (vt0.c0 IN ()), LIKELY(DISTINCT x''), t0.c7)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (NOT (CASE t0.c75  WHEN t0.c0 THEN t0.c1 WHEN t0.c7 THEN rt0.c0 WHEN '1729692822' THEN t0.c1 WHEN t0.c2 THEN NULL WHEN t0.c1 THEN rt0.c3 END)) RIGHT OUTER JOIN vt0 ON UPPER(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN t0.c0 END) LEFT OUTER JOIN vt1 ON ((t0.c0)IS(rt0.c3)) COLLATE NOCASE ORDER BY t0.c75);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (NOT (CASE t0.c75  WHEN t0.c0 THEN t0.c1 WHEN t0.c7 THEN rt0.c0 WHEN '1729692822' THEN t0.c1 WHEN t0.c2 THEN NULL WHEN t0.c1 THEN rt0.c3 END)) RIGHT OUTER JOIN vt0 ON UPPER(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN t0.c0 END) LEFT OUTER JOIN vt1 ON ((t0.c0)IS(rt0.c3)) COLLATE NOCASE WHERE ((((((NULL)||(rt0.c1)), ((rt0.c1)|(t0.c7)), ((rt0.c0)IS(t0.c1)), vt1.c0, (- (rt0.c0))))>((LIKELIHOOD(DISTINCT vt0.c0, 0.37374928758571935), ((t0.c75)>(0x2dc48f76)), (vt0.c0 IN ()), LIKELY(DISTINCT x''), t0.c7)))) ORDER BY t0.c75;
SELECT SUM(count) FROM (SELECT (((((((NULL)||(rt0.c1)), ((rt0.c1)|(t0.c7)), ((rt0.c0)IS(t0.c1)), vt1.c0, (- (rt0.c0))))>((LIKELIHOOD(DISTINCT vt0.c0, 0.37374928758571935), ((t0.c75)>(0X2dc48f76)), (vt0.c0 IN ()), LIKELY(DISTINCT x''), t0.c7)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (NOT (CASE t0.c75  WHEN t0.c0 THEN t0.c1 WHEN t0.c7 THEN rt0.c0 WHEN '1729692822' THEN t0.c1 WHEN t0.c2 THEN NULL WHEN t0.c1 THEN rt0.c3 END)) RIGHT OUTER JOIN vt0 ON UPPER(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN t0.c0 END) LEFT OUTER JOIN vt1 ON ((t0.c0)IS(rt0.c3)) COLLATE NOCASE ORDER BY t0.c75);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (NOT (CASE t0.c75  WHEN t0.c0 THEN t0.c1 WHEN t0.c7 THEN rt0.c0 WHEN '1729692822' THEN t0.c1 WHEN t0.c2 THEN NULL WHEN t0.c1 THEN rt0.c3 END)) RIGHT OUTER JOIN vt0 ON UPPER(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN t0.c0 END) LEFT OUTER JOIN vt1 ON ((t0.c0)IS(rt0.c3)) COLLATE NOCASE WHERE ((((((NULL)||(rt0.c1)), ((rt0.c1)|(t0.c7)), ((rt0.c0)IS(t0.c1)), vt1.c0, (- (rt0.c0))))>((LIKELIHOOD(DISTINCT vt0.c0, 0.37374928758571935), ((t0.c75)>(0x2dc48f76)), (vt0.c0 IN ()), LIKELY(DISTINCT x''), t0.c7)))) ORDER BY t0.c75;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ((('-1036802462') NOT NULL))));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN ((('-1036802462') NOT NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ((('-1036802462') NOT NULL))));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN ((('-1036802462') NOT NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ((('-1036802462') NOT NULL))));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((((CASE t0.c7  WHEN vt1.c0 THEN t0.c0 WHEN t0.c7 THEN '' WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END)OR(LOWER(t0.c7))))AND((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c7  WHEN vt1.c0 THEN t0.c0 WHEN t0.c7 THEN '' WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END)OR(LOWER(t0.c7))))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((((CASE t0.c7  WHEN vt1.c0 THEN t0.c0 WHEN t0.c7 THEN '' WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END)OR(LOWER(t0.c7))))AND((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c7  WHEN vt1.c0 THEN t0.c0 WHEN t0.c7 THEN '' WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END)OR(LOWER(t0.c7))))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((((CASE t0.c7  WHEN vt1.c0 THEN t0.c0 WHEN t0.c7 THEN '' WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END)OR(LOWER(t0.c7))))AND((vt1.c0 IN ()))));
SELECT ALL * FROM vt0 NOT INDEXED, rt0, vt1 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY NULL DESC, (((rt0.c2, rt0.c2, x'f112')) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))), rt0.c3, LIKE(rt0.c3, vt0.c0, 'b'))) AND ((((rt0.c3) IS FALSE), ((vt0.c0)>(rt0.c0)), (x'' IN (vt1.c0))))) DESC  NULLS FIRST, (((0.6745691862782734))<=(((((vt0.c0, rt0.c0, rt0.c3))=((rt0.c3, rt0.c1, rt0.c0)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY NULL DESC, (((rt0.c2, rt0.c2, x'f112')) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))), rt0.c3, LIKE(rt0.c3, vt0.c0, 'b'))) AND ((((rt0.c3) IS FALSE), ((vt0.c0)>(rt0.c0)), (x'' IN (vt1.c0))))) DESC  NULLS FIRST, (((0.6745691862782734))<=(((((vt0.c0, rt0.c0, rt0.c3))=((rt0.c3, rt0.c1, rt0.c0)))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED, rt0, vt1 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY NULL DESC, (((rt0.c2, rt0.c2, x'f112')) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))), rt0.c3, LIKE(rt0.c3, vt0.c0, 'b'))) AND ((((rt0.c3) IS FALSE), ((vt0.c0)>(rt0.c0)), (x'' IN (vt1.c0))))) DESC  NULLS FIRST, (((0.6745691862782734))<=(((((vt0.c0, rt0.c0, rt0.c3))=((rt0.c3, rt0.c1, rt0.c0)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY NULL DESC, (((rt0.c2, rt0.c2, x'f112')) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))), rt0.c3, LIKE(rt0.c3, vt0.c0, 'b'))) AND ((((rt0.c3) IS FALSE), ((vt0.c0)>(rt0.c0)), (x'' IN (vt1.c0))))) DESC  NULLS FIRST, (((0.6745691862782734))<=(((((vt0.c0, rt0.c0, rt0.c3))=((rt0.c3, rt0.c1, rt0.c0)))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED, rt0, vt1 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY NULL DESC, (((rt0.c2, rt0.c2, x'f112')) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))), rt0.c3, LIKE(rt0.c3, vt0.c0, 'b'))) AND ((((rt0.c3) IS FALSE), ((vt0.c0)>(rt0.c0)), (x'' IN (vt1.c0))))) DESC  NULLS FIRST, (((0.6745691862782734))<=(((((vt0.c0, rt0.c0, rt0.c3))=((rt0.c3, rt0.c1, rt0.c0)))))) DESC  NULLS LAST;
SELECT * FROM t0, vt1, vt0 INNER JOIN rt0 ON ((((((((SUBSTR(vt1.c0, rt0.c1))AND((t0.c1 IN (vt1.c0)))))AND((((rt0.c0, t0.c0, t0.c0))<((vt0.c0, t0.c7, t0.c2))))))AND(t0.c75 COLLATE BINARY)))AND(CASE WHEN t0.c1 THEN t0.c0 WHEN vt1.c0 THEN t0.c1 WHEN t0.c0 THEN vt0.c0 END)) WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM t0, vt1 NOT INDEXED, vt0 INNER JOIN rt0 ON ((((((((SUBSTR(vt1.c0, rt0.c1))AND((t0.c1 IN (vt1.c0)))))AND((((rt0.c0, t0.c0, t0.c0))<((vt0.c0, t0.c7, t0.c2))))))AND(t0.c75 COLLATE BINARY)))AND(CASE WHEN t0.c1 THEN t0.c0 WHEN vt1.c0 THEN t0.c1 WHEN t0.c0 THEN vt0.c0 END)));
SELECT * FROM t0, vt1, vt0 INNER JOIN rt0 ON ((((((((SUBSTR(vt1.c0, rt0.c1))AND((t0.c1 IN (vt1.c0)))))AND((((rt0.c0, t0.c0, t0.c0))<((vt0.c0, t0.c7, t0.c2))))))AND(t0.c75 COLLATE BINARY)))AND(CASE WHEN t0.c1 THEN t0.c0 WHEN vt1.c0 THEN t0.c1 WHEN t0.c0 THEN vt0.c0 END)) WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM t0, vt1 NOT INDEXED, vt0 INNER JOIN rt0 ON ((((((((SUBSTR(vt1.c0, rt0.c1))AND((t0.c1 IN (vt1.c0)))))AND((((rt0.c0, t0.c0, t0.c0))<((vt0.c0, t0.c7, t0.c2))))))AND(t0.c75 COLLATE BINARY)))AND(CASE WHEN t0.c1 THEN t0.c0 WHEN vt1.c0 THEN t0.c1 WHEN t0.c0 THEN vt0.c0 END)));
SELECT * FROM t0, vt1, vt0 INNER JOIN rt0 ON ((((((((SUBSTR(vt1.c0, rt0.c1))AND((t0.c1 IN (vt1.c0)))))AND((((rt0.c0, t0.c0, t0.c0))<((vt0.c0, t0.c7, t0.c2))))))AND(t0.c75 COLLATE BINARY)))AND(CASE WHEN t0.c1 THEN t0.c0 WHEN vt1.c0 THEN t0.c1 WHEN t0.c0 THEN vt0.c0 END)) WHERE (((vt0.c0) ISNULL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))/(((t0.c7)%(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))/(((t0.c7)%(t0.c2))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))/(((t0.c7)%(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))/(((t0.c7)%(t0.c2))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))/(((t0.c7)%(t0.c2)))));
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (t0.c75 COLLATE RTRIM IN ()) INNER JOIN vt1 ON ((t0.c7)>>(t0.c7)) COLLATE RTRIM WHERE (((((((((((((t0.c7 COLLATE NOCASE)AND(t0.c75 COLLATE RTRIM)))OR((((t0.c2))>=((t0.c1))))))OR(((t0.c2) NOTNULL))))OR('-1938691913')))AND(0.9181469586346205)))AND(CAST(t0.c7 AS TEXT)))) ORDER BY CASE CASE WHEN rt0.c0 THEN 0x421c65ad ELSE rt0.c1 END  WHEN ((vt0.c0) NOT NULL) THEN CAST(rt0.c0 AS NUMERIC) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c7 COLLATE NOCASE)AND(t0.c75 COLLATE RTRIM)))OR((((t0.c2))>=((t0.c1))))))OR(((t0.c2) NOTNULL))))OR('-1938691913')))AND(0.9181469586346205)))AND(CAST(t0.c7 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (t0.c75 COLLATE RTRIM IN ()) INNER JOIN vt1 ON ((t0.c7)>>(t0.c7)) COLLATE RTRIM ORDER BY CASE CASE WHEN rt0.c0 THEN 0x421c65ad ELSE rt0.c1 END  WHEN ((vt0.c0) NOT NULL) THEN CAST(rt0.c0 AS NUMERIC) END  NULLS LAST);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (t0.c75 COLLATE RTRIM IN ()) INNER JOIN vt1 ON ((t0.c7)>>(t0.c7)) COLLATE RTRIM WHERE (((((((((((((t0.c7 COLLATE NOCASE)AND(t0.c75 COLLATE RTRIM)))OR((((t0.c2))>=((t0.c1))))))OR(((t0.c2) NOTNULL))))OR('-1938691913')))AND(0.9181469586346205)))AND(CAST(t0.c7 AS TEXT)))) ORDER BY CASE CASE WHEN rt0.c0 THEN 0x421c65ad ELSE rt0.c1 END  WHEN ((vt0.c0) NOT NULL) THEN CAST(rt0.c0 AS NUMERIC) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c7 COLLATE NOCASE)AND(t0.c75 COLLATE RTRIM)))OR((((t0.c2))>=((t0.c1))))))OR(((t0.c2) NOTNULL))))OR('-1938691913')))AND(0.9181469586346205)))AND(CAST(t0.c7 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (t0.c75 COLLATE RTRIM IN ()) INNER JOIN vt1 ON ((t0.c7)>>(t0.c7)) COLLATE RTRIM ORDER BY CASE CASE WHEN rt0.c0 THEN 0x421c65ad ELSE rt0.c1 END  WHEN ((vt0.c0) NOT NULL) THEN CAST(rt0.c0 AS NUMERIC) END  NULLS LAST);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (t0.c75 COLLATE RTRIM IN ()) INNER JOIN vt1 ON ((t0.c7)>>(t0.c7)) COLLATE RTRIM WHERE (((((((((((((t0.c7 COLLATE NOCASE)AND(t0.c75 COLLATE RTRIM)))OR((((t0.c2))>=((t0.c1))))))OR(((t0.c2) NOTNULL))))OR('-1938691913')))AND(0.9181469586346205)))AND(CAST(t0.c7 AS TEXT)))) ORDER BY CASE CASE WHEN rt0.c0 THEN 0x421c65ad ELSE rt0.c1 END  WHEN ((vt0.c0) NOT NULL) THEN CAST(rt0.c0 AS NUMERIC) END  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 INNER JOIN rt0 ON (t0.c2 IN ()) COLLATE NOCASE INNER JOIN vt1 ON rt0.c0 WHERE (((((vt0.c0) ISNULL)) BETWEEN ((rt0.c2 IN (vt1.c0))) AND (vt1.c0))) ORDER BY '0.8536524175866274'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) BETWEEN ((rt0.c2 IN (vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON (t0.c2 IN ()) COLLATE NOCASE INNER JOIN vt1 ON rt0.c0 ORDER BY '0.8536524175866274'  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 INNER JOIN rt0 ON (t0.c2 IN ()) COLLATE NOCASE INNER JOIN vt1 ON rt0.c0 WHERE (((((vt0.c0) ISNULL)) BETWEEN ((rt0.c2 IN (vt1.c0))) AND (vt1.c0))) ORDER BY '0.8536524175866274'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) BETWEEN ((rt0.c2 IN (vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON (t0.c2 IN ()) COLLATE NOCASE INNER JOIN vt1 ON rt0.c0 ORDER BY '0.8536524175866274'  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 INNER JOIN rt0 ON (t0.c2 IN ()) COLLATE NOCASE INNER JOIN vt1 ON rt0.c0 WHERE (((((vt0.c0) ISNULL)) BETWEEN ((rt0.c2 IN (vt1.c0))) AND (vt1.c0))) ORDER BY '0.8536524175866274'  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)>=(rt0.c1)) IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)>=(rt0.c1)) IN (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)>=(rt0.c1)) IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)>=(rt0.c1)) IN (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)>=(rt0.c1)) IN (rt0.c1)));
SELECT ALL * FROM t0, vt0 WHERE (CAST(t0.c7 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c7 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0, vt0 NOT INDEXED);
SELECT ALL * FROM t0, vt0 WHERE (CAST(t0.c7 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c7 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0, vt0 NOT INDEXED);
SELECT ALL * FROM t0, vt0 WHERE (CAST(t0.c7 COLLATE NOCASE AS TEXT));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON x'' RIGHT OUTER JOIN vt1 ON (((((t0.c75, vt1.c0, t0.c75))<((t0.c75, t0.c75, t0.c1)))) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c1 AS REAL))) WHERE (((CASE vt0.c0  WHEN '-627247393' THEN t0.c2 WHEN t0.c7 THEN t0.c7 WHEN t0.c75 THEN 0.24018884492886072 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN '-627247393' THEN t0.c2 WHEN t0.c7 THEN t0.c7 WHEN t0.c75 THEN 0.24018884492886072 END) IS TRUE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON x'' RIGHT OUTER JOIN vt1 ON (((((t0.c75, vt1.c0, t0.c75))<((t0.c75, t0.c75, t0.c1)))) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c1 AS REAL))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON x'' RIGHT OUTER JOIN vt1 ON (((((t0.c75, vt1.c0, t0.c75))<((t0.c75, t0.c75, t0.c1)))) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c1 AS REAL))) WHERE (((CASE vt0.c0  WHEN '-627247393' THEN t0.c2 WHEN t0.c7 THEN t0.c7 WHEN t0.c75 THEN 0.24018884492886072 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN '-627247393' THEN t0.c2 WHEN t0.c7 THEN t0.c7 WHEN t0.c75 THEN 0.24018884492886072 END) IS TRUE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON x'' RIGHT OUTER JOIN vt1 ON (((((t0.c75, vt1.c0, t0.c75))<((t0.c75, t0.c75, t0.c1)))) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c1 AS REAL))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON x'' RIGHT OUTER JOIN vt1 ON (((((t0.c75, vt1.c0, t0.c75))<((t0.c75, t0.c75, t0.c1)))) BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c1 AS REAL))) WHERE (((CASE vt0.c0  WHEN '-627247393' THEN t0.c2 WHEN t0.c7 THEN t0.c7 WHEN t0.c75 THEN 0.24018884492886072 END) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((((((rt0.c0 COLLATE NOCASE)OR(CASE rt0.c2  WHEN rt0.c3 THEN t0.c75 WHEN t0.c75 THEN rt0.c0 WHEN t0.c7 THEN rt0.c1 END)))OR(((((t0.c1)OR(rt0.c1)))AND(t0.c7)))))AND(((t0.c0) BETWEEN (x'') AND (rt0.c1)))))AND(CASE rt0.c2  WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN NULL WHEN rt0.c3 THEN rt0.c1 ELSE t0.c7 END))) ORDER BY ((((rt0.c1) IS TRUE))<(((t0.c0)AND(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0 COLLATE NOCASE)OR(CASE rt0.c2  WHEN rt0.c3 THEN t0.c75 WHEN t0.c75 THEN rt0.c0 WHEN t0.c7 THEN rt0.c1 END)))OR(((((t0.c1)OR(rt0.c1)))AND(t0.c7)))))AND(((t0.c0) BETWEEN (x'') AND (rt0.c1)))))AND(CASE rt0.c2  WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN NULL WHEN rt0.c3 THEN rt0.c1 ELSE t0.c7 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c1) IS TRUE))<(((t0.c0)AND(rt0.c3)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((((((rt0.c0 COLLATE NOCASE)OR(CASE rt0.c2  WHEN rt0.c3 THEN t0.c75 WHEN t0.c75 THEN rt0.c0 WHEN t0.c7 THEN rt0.c1 END)))OR(((((t0.c1)OR(rt0.c1)))AND(t0.c7)))))AND(((t0.c0) BETWEEN (x'') AND (rt0.c1)))))AND(CASE rt0.c2  WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN NULL WHEN rt0.c3 THEN rt0.c1 ELSE t0.c7 END))) ORDER BY ((((rt0.c1) IS TRUE))<(((t0.c0)AND(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0 COLLATE NOCASE)OR(CASE rt0.c2  WHEN rt0.c3 THEN t0.c75 WHEN t0.c75 THEN rt0.c0 WHEN t0.c7 THEN rt0.c1 END)))OR(((((t0.c1)OR(rt0.c1)))AND(t0.c7)))))AND(((t0.c0) BETWEEN (x'') AND (rt0.c1)))))AND(CASE rt0.c2  WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN NULL WHEN rt0.c3 THEN rt0.c1 ELSE t0.c7 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c1) IS TRUE))<(((t0.c0)AND(rt0.c3)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((((((rt0.c0 COLLATE NOCASE)OR(CASE rt0.c2  WHEN rt0.c3 THEN t0.c75 WHEN t0.c75 THEN rt0.c0 WHEN t0.c7 THEN rt0.c1 END)))OR(((((t0.c1)OR(rt0.c1)))AND(t0.c7)))))AND(((t0.c0) BETWEEN (x'') AND (rt0.c1)))))AND(CASE rt0.c2  WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN NULL WHEN rt0.c3 THEN rt0.c1 ELSE t0.c7 END))) ORDER BY ((((rt0.c1) IS TRUE))<(((t0.c0)AND(rt0.c3)))) DESC  NULLS LAST;
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON SUBSTR((rt0.c1 IN (vt1.c0)), (~ (rt0.c3))) LEFT OUTER JOIN vt1 ON ((((rt0.c2)<>(rt0.c3))) NOT BETWEEN (((rt0.c1)!=(vt1.c0))) AND (LIKELIHOOD(DISTINCT rt0.c2, 0.25599351223392053))) WHERE ('jw(*lz\n.');
SELECT SUM(count) FROM (SELECT ALL (('jw(*lz\n.') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON SUBSTR((rt0.c1 IN (vt1.c0)), (~ (rt0.c3))) LEFT OUTER JOIN vt1 ON ((((rt0.c2)<>(rt0.c3))) NOT BETWEEN (((rt0.c1)<>(vt1.c0))) AND (LIKELIHOOD(DISTINCT rt0.c2, 0.25599351223392053))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON SUBSTR((rt0.c1 IN (vt1.c0)), (~ (rt0.c3))) LEFT OUTER JOIN vt1 ON ((((rt0.c2)<>(rt0.c3))) NOT BETWEEN (((rt0.c1)!=(vt1.c0))) AND (LIKELIHOOD(DISTINCT rt0.c2, 0.25599351223392053))) WHERE ('jw(*lz\n.');
SELECT SUM(count) FROM (SELECT ALL (('jw(*lz\n.') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON SUBSTR((rt0.c1 IN (vt1.c0)), (~ (rt0.c3))) LEFT OUTER JOIN vt1 ON ((((rt0.c2)<>(rt0.c3))) NOT BETWEEN (((rt0.c1)<>(vt1.c0))) AND (LIKELIHOOD(DISTINCT rt0.c2, 0.25599351223392053))));
SELECT COUNT(*) FROM rt0, vt1, t0 NOT INDEXED WHERE ((((t0.c1 IN (rt0.c1)))<<(((rt0.c2)&(t0.c0))))) ORDER BY (((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))LIKE(((((((((vt1.c0)OR(t0.c75)))AND(rt0.c2)))AND(rt0.c3)))AND(t0.c0)))) ASC, (- (vt1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN (rt0.c1)))<<(((rt0.c2)&(t0.c0))))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY (((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))LIKE(((((((((vt1.c0)OR(t0.c75)))AND(rt0.c2)))AND(rt0.c3)))AND(t0.c0)))) ASC, (- (vt1.c0 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, t0 NOT INDEXED WHERE ((((t0.c1 IN (rt0.c1)))<<(((rt0.c2)&(t0.c0))))) ORDER BY (((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))LIKE(((((((((vt1.c0)OR(t0.c75)))AND(rt0.c2)))AND(rt0.c3)))AND(t0.c0)))) ASC, (- (vt1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN (rt0.c1)))<<(((rt0.c2)&(t0.c0))))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY (((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))LIKE(((((((((vt1.c0)OR(t0.c75)))AND(rt0.c2)))AND(rt0.c3)))AND(t0.c0)))) ASC, (- (vt1.c0 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, t0 NOT INDEXED WHERE ((((t0.c1 IN (rt0.c1)))<<(((rt0.c2)&(t0.c0))))) ORDER BY (((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))LIKE(((((((((vt1.c0)OR(t0.c75)))AND(rt0.c2)))AND(rt0.c3)))AND(t0.c0)))) ASC, (- (vt1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE IFNULL(vt0.c0, vt0.c0)  WHEN '-1036802462' THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(vt0.c0, vt0.c0)  WHEN '-1036802462' THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE IFNULL(vt0.c0, vt0.c0)  WHEN '-1036802462' THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(vt0.c0, vt0.c0)  WHEN '-1036802462' THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE IFNULL(vt0.c0, vt0.c0)  WHEN '-1036802462' THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE ((((NOT (t0.c75))) NOTNULL)) ORDER BY (NOT ('-1619423419')), (+ (LIKELY(DISTINCT vt1.c0))), ((NOT (t0.c0)) IN (((t0.c2)*(t0.c7))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c75))) NOTNULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY (NOT ('-1619423419')), (+ (LIKELY(DISTINCT vt1.c0))), ((NOT (t0.c0)) IN (((t0.c2)*(t0.c7))))  NULLS FIRST);
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE ((((NOT (t0.c75))) NOTNULL)) ORDER BY (NOT ('-1619423419')), (+ (LIKELY(DISTINCT vt1.c0))), ((NOT (t0.c0)) IN (((t0.c2)*(t0.c7))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c75))) NOTNULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY (NOT ('-1619423419')), (+ (LIKELY(DISTINCT vt1.c0))), ((NOT (t0.c0)) IN (((t0.c2)*(t0.c7))))  NULLS FIRST);
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE ((((NOT (t0.c75))) NOTNULL)) ORDER BY (NOT ('-1619423419')), (+ (LIKELY(DISTINCT vt1.c0))), ((NOT (t0.c0)) IN (((t0.c2)*(t0.c7))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0.8990154306538171) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((0.8990154306538171) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0.8990154306538171) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((0.8990154306538171) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0.8990154306538171) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS INTEGER);
SELECT ALL * FROM t0 WHERE ((((t0.c1 IN ()))LIKE(CASE t0.c7  WHEN t0.c2 THEN t0.c7 WHEN t0.c7 THEN t0.c0 WHEN t0.c0 THEN t0.c75 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ()))LIKE(CASE t0.c7  WHEN t0.c2 THEN t0.c7 WHEN t0.c7 THEN t0.c0 WHEN t0.c0 THEN t0.c75 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c1 IN ()))LIKE(CASE t0.c7  WHEN t0.c2 THEN t0.c7 WHEN t0.c7 THEN t0.c0 WHEN t0.c0 THEN t0.c75 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ()))LIKE(CASE t0.c7  WHEN t0.c2 THEN t0.c7 WHEN t0.c7 THEN t0.c0 WHEN t0.c0 THEN t0.c75 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c1 IN ()))LIKE(CASE t0.c7  WHEN t0.c2 THEN t0.c7 WHEN t0.c7 THEN t0.c0 WHEN t0.c0 THEN t0.c75 END)));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON TYPEOF(t0.c2) CROSS JOIN vt0 ON CASE NULL  WHEN (t0.c0 IN (t0.c1)) THEN (~ (t0.c75)) ELSE ((t0.c1) ISNULL) END WHERE (CAST(t0.c2 AS REAL)) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS REAL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON TYPEOF(t0.c2) CROSS JOIN vt0 ON CASE NULL  WHEN (t0.c0 IN (t0.c1)) THEN (~ (t0.c75)) ELSE ((t0.c1) ISNULL) END ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON TYPEOF(t0.c2) CROSS JOIN vt0 ON CASE NULL  WHEN (t0.c0 IN (t0.c1)) THEN (~ (t0.c75)) ELSE ((t0.c1) ISNULL) END WHERE (CAST(t0.c2 AS REAL)) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS REAL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON TYPEOF(t0.c2) CROSS JOIN vt0 ON CASE NULL  WHEN (t0.c0 IN (t0.c1)) THEN (~ (t0.c75)) ELSE ((t0.c1) ISNULL) END ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON TYPEOF(t0.c2) CROSS JOIN vt0 ON CASE NULL  WHEN (t0.c0 IN (t0.c1)) THEN (~ (t0.c75)) ELSE ((t0.c1) ISNULL) END WHERE (CAST(t0.c2 AS REAL)) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (NOT ((((rt0.c2))<((rt0.c2))))) LEFT OUTER JOIN rt0 ON '' WHERE ((((((((((rt0.c0 IN ()))AND(((vt0.c0)+(rt0.c0)))))AND(((vt0.c0) IS FALSE))))OR(((rt0.c1) IS FALSE))))OR(COALESCE(0X399512be, rt0.c1, rt0.c3, rt0.c1)))) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c0 IN ()))AND(((vt0.c0)+(rt0.c0)))))AND(((vt0.c0) IS FALSE))))OR(((rt0.c1) IS FALSE))))OR(COALESCE(0x399512be, rt0.c1, rt0.c3, rt0.c1)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (NOT ((((rt0.c2))<((rt0.c2))))) LEFT OUTER JOIN rt0 ON '' ORDER BY rt0.c3);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (NOT ((((rt0.c2))<((rt0.c2))))) LEFT OUTER JOIN rt0 ON '' WHERE ((((((((((rt0.c0 IN ()))AND(((vt0.c0)+(rt0.c0)))))AND(((vt0.c0) IS FALSE))))OR(((rt0.c1) IS FALSE))))OR(COALESCE(0X399512be, rt0.c1, rt0.c3, rt0.c1)))) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c0 IN ()))AND(((vt0.c0)+(rt0.c0)))))AND(((vt0.c0) IS FALSE))))OR(((rt0.c1) IS FALSE))))OR(COALESCE(0x399512be, rt0.c1, rt0.c3, rt0.c1)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (NOT ((((rt0.c2))<((rt0.c2))))) LEFT OUTER JOIN rt0 ON '' ORDER BY rt0.c3);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((~ (CASE WHEN rt0.c2 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt0.c2 THEN rt0.c3 END))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((~ (CASE WHEN rt0.c2 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt0.c2 THEN rt0.c3 END))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((~ (CASE WHEN rt0.c2 THEN rt0.c3 END)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)IS(vt0.c0))) NOT NULL)) ORDER BY x'f1c3';
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'f1c3');
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)IS(vt0.c0))) NOT NULL)) ORDER BY x'f1c3';
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'f1c3');
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)IS(vt0.c0))) NOT NULL)) ORDER BY x'f1c3';
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (((vt1.c0)>(CAST(0.7992017761670468 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>(CAST(0.7992017761670468 AS NUMERIC)))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0, t0, vt0);
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (((vt1.c0)>(CAST(0.7992017761670468 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>(CAST(0.7992017761670468 AS NUMERIC)))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0, t0, vt0);
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (((vt1.c0)>(CAST(0.7992017761670468 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((CASE WHEN vt0.c0 THEN rt0.c2 END)&(((rt0.c2) NOT NULL)))) ORDER BY (CAST(vt1.c0 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c2 END)&(((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, t0, vt1 ORDER BY (CAST(vt1.c0 AS BLOB) IN ()));
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((CASE WHEN vt0.c0 THEN rt0.c2 END)&(((rt0.c2) NOT NULL)))) ORDER BY (CAST(vt1.c0 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c2 END)&(((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, t0, vt1 ORDER BY (CAST(vt1.c0 AS BLOB) IN ()));
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((CASE WHEN vt0.c0 THEN rt0.c2 END)&(((rt0.c2) NOT NULL)))) ORDER BY (CAST(vt1.c0 AS BLOB) IN ());
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((rt0.c0) IS FALSE)) NOT BETWEEN ((rt0.c0 IN (rt0.c3, rt0.c3, vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))) ORDER BY -1708838226;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE)) NOT BETWEEN ((rt0.c0 IN (rt0.c3, rt0.c3, vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY -1708838226);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((rt0.c0) IS FALSE)) NOT BETWEEN ((rt0.c0 IN (rt0.c3, rt0.c3, vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))) ORDER BY -1708838226;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE)) NOT BETWEEN ((rt0.c0 IN (rt0.c3, rt0.c3, vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY -1708838226);
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (((INSTR(t0.c0, rt0.c3)) IS FALSE)) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((INSTR(t0.c0, rt0.c3)) IS FALSE)) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY x'' DESC);
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (((INSTR(t0.c0, rt0.c3)) IS FALSE)) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((INSTR(t0.c0, rt0.c3)) IS FALSE)) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY x'' DESC);
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (((INSTR(t0.c0, rt0.c3)) IS FALSE)) ORDER BY x'' DESC;
SELECT * FROM t0, vt0 INNER JOIN vt1 ON rt0.c1 RIGHT OUTER JOIN rt0 ON CAST((((t0.c75, rt0.c2, rt0.c0)) BETWEEN ((t0.c75, vt0.c0, t0.c1)) AND ((vt1.c0, rt0.c0, t0.c75))) AS REAL) WHERE ((((rt0.c2)) NOT BETWEEN ((((t0.c75) NOTNULL))) AND ((UPPER(t0.c7)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((t0.c75) NOTNULL))) AND ((UPPER(t0.c7))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON rt0.c1 RIGHT OUTER JOIN rt0 ON CAST((((t0.c75, rt0.c2, rt0.c0)) BETWEEN ((t0.c75, vt0.c0, t0.c1)) AND ((vt1.c0, rt0.c0, t0.c75))) AS REAL));
SELECT * FROM t0, vt0 INNER JOIN vt1 ON rt0.c1 RIGHT OUTER JOIN rt0 ON CAST((((t0.c75, rt0.c2, rt0.c0)) BETWEEN ((t0.c75, vt0.c0, t0.c1)) AND ((vt1.c0, rt0.c0, t0.c75))) AS REAL) WHERE ((((rt0.c2)) NOT BETWEEN ((((t0.c75) NOTNULL))) AND ((UPPER(t0.c7)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((t0.c75) NOTNULL))) AND ((UPPER(t0.c7))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON rt0.c1 RIGHT OUTER JOIN rt0 ON CAST((((t0.c75, rt0.c2, rt0.c0)) BETWEEN ((t0.c75, vt0.c0, t0.c1)) AND ((vt1.c0, rt0.c0, t0.c75))) AS REAL));
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((CAST(t0.c1 AS REAL)) ISNULL)) ORDER BY IFNULL((- (t0.c1)), vt1.c0)  NULLS LAST, CASE rt0.c3 COLLATE RTRIM  WHEN (vt1.c0 IN ('831001362')) THEN CASE WHEN rt0.c0 THEN vt1.c0 WHEN t0.c75 THEN t0.c2 WHEN t0.c1 THEN rt0.c3 END END  NULLS LAST, CASE WHEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (t0.c2)) THEN ((rt0.c1) IS FALSE) ELSE CASE t0.c7  WHEN '257415496' THEN rt0.c0 ELSE rt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS REAL)) ISNULL)) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY IFNULL((- (t0.c1)), vt1.c0)  NULLS LAST, CASE rt0.c3 COLLATE RTRIM  WHEN (vt1.c0 IN ('831001362')) THEN CASE WHEN rt0.c0 THEN vt1.c0 WHEN t0.c75 THEN t0.c2 WHEN t0.c1 THEN rt0.c3 END END  NULLS LAST, CASE WHEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (t0.c2)) THEN ((rt0.c1) IS FALSE) ELSE CASE t0.c7  WHEN '257415496' THEN rt0.c0 ELSE rt0.c0 END END);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((CAST(t0.c1 AS REAL)) ISNULL)) ORDER BY IFNULL((- (t0.c1)), vt1.c0)  NULLS LAST, CASE rt0.c3 COLLATE RTRIM  WHEN (vt1.c0 IN ('831001362')) THEN CASE WHEN rt0.c0 THEN vt1.c0 WHEN t0.c75 THEN t0.c2 WHEN t0.c1 THEN rt0.c3 END END  NULLS LAST, CASE WHEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (t0.c2)) THEN ((rt0.c1) IS FALSE) ELSE CASE t0.c7  WHEN '257415496' THEN rt0.c0 ELSE rt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS REAL)) ISNULL)) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY IFNULL((- (t0.c1)), vt1.c0)  NULLS LAST, CASE rt0.c3 COLLATE RTRIM  WHEN (vt1.c0 IN ('831001362')) THEN CASE WHEN rt0.c0 THEN vt1.c0 WHEN t0.c75 THEN t0.c2 WHEN t0.c1 THEN rt0.c3 END END  NULLS LAST, CASE WHEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (t0.c2)) THEN ((rt0.c1) IS FALSE) ELSE CASE t0.c7  WHEN '257415496' THEN rt0.c0 ELSE rt0.c0 END END);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((CAST(t0.c1 AS REAL)) ISNULL)) ORDER BY IFNULL((- (t0.c1)), vt1.c0)  NULLS LAST, CASE rt0.c3 COLLATE RTRIM  WHEN (vt1.c0 IN ('831001362')) THEN CASE WHEN rt0.c0 THEN vt1.c0 WHEN t0.c75 THEN t0.c2 WHEN t0.c1 THEN rt0.c3 END END  NULLS LAST, CASE WHEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (t0.c2)) THEN ((rt0.c1) IS FALSE) ELSE CASE t0.c7  WHEN '257415496' THEN rt0.c0 ELSE rt0.c0 END END;
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (CASE WHEN json_remove(t0.c7, rt0.c3) THEN t0.c2 ELSE ((((((((t0.c75)AND(t0.c0)))OR('2113066632')))OR(vt0.c0)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_remove(t0.c7, rt0.c3) THEN t0.c2 ELSE ((((((((t0.c75)AND(t0.c0)))OR('2113066632')))OR(vt0.c0)))AND(rt0.c2)) END) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (CASE WHEN json_remove(t0.c7, rt0.c3) THEN t0.c2 ELSE ((((((((t0.c75)AND(t0.c0)))OR('2113066632')))OR(vt0.c0)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_remove(t0.c7, rt0.c3) THEN t0.c2 ELSE ((((((((t0.c75)AND(t0.c0)))OR('2113066632')))OR(vt0.c0)))AND(rt0.c2)) END) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (CASE WHEN json_remove(t0.c7, rt0.c3) THEN t0.c2 ELSE ((((((((t0.c75)AND(t0.c0)))OR('2113066632')))OR(vt0.c0)))AND(rt0.c2)) END);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS TRUE)) ORDER BY -2.70459108E8  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY -2.70459108E8  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS TRUE)) ORDER BY -2.70459108E8  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY -2.70459108E8  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS TRUE)) ORDER BY -2.70459108E8  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1 WHERE (((t0.c0)-(t0.c7)) COLLATE BINARY) ORDER BY CAST(CASE t0.c2  WHEN t0.c0 THEN t0.c7 END AS INTEGER) DESC  NULLS LAST, CAST(((t0.c2) BETWEEN (t0.c75) AND (t0.c75)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)-(t0.c7)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(CASE t0.c2  WHEN t0.c0 THEN t0.c7 END AS INTEGER) DESC  NULLS LAST, CAST(((t0.c2) BETWEEN (t0.c75) AND (t0.c75)) AS TEXT) DESC);
SELECT COUNT(*) FROM t0, vt1 WHERE (((t0.c0)-(t0.c7)) COLLATE BINARY) ORDER BY CAST(CASE t0.c2  WHEN t0.c0 THEN t0.c7 END AS INTEGER) DESC  NULLS LAST, CAST(((t0.c2) BETWEEN (t0.c75) AND (t0.c75)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)-(t0.c7)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(CASE t0.c2  WHEN t0.c0 THEN t0.c7 END AS INTEGER) DESC  NULLS LAST, CAST(((t0.c2) BETWEEN (t0.c75) AND (t0.c75)) AS TEXT) DESC);
SELECT COUNT(*) FROM t0, vt1 WHERE (((t0.c0)-(t0.c7)) COLLATE BINARY) ORDER BY CAST(CASE t0.c2  WHEN t0.c0 THEN t0.c7 END AS INTEGER) DESC  NULLS LAST, CAST(((t0.c2) BETWEEN (t0.c75) AND (t0.c75)) AS TEXT) DESC;
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (0.35355754156110253))  WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 ELSE (vt0.c0 IN ()) END) ORDER BY (+ ((~ (vt0.c0)))) DESC  NULLS FIRST, ((UNICODE(vt0.c0)) BETWEEN (vt0.c0) AND (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (0.35355754156110253))  WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY (+ ((~ (vt0.c0)))) DESC  NULLS FIRST, ((UNICODE(vt0.c0)) BETWEEN (vt0.c0) AND (vt0.c0)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (0.35355754156110253))  WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 ELSE (vt0.c0 IN ()) END) ORDER BY (+ ((~ (vt0.c0)))) DESC  NULLS FIRST, ((UNICODE(vt0.c0)) BETWEEN (vt0.c0) AND (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (0.35355754156110253))  WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY (+ ((~ (vt0.c0)))) DESC  NULLS FIRST, ((UNICODE(vt0.c0)) BETWEEN (vt0.c0) AND (vt0.c0)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (0.35355754156110253))  WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 ELSE (vt0.c0 IN ()) END) ORDER BY (+ ((~ (vt0.c0)))) DESC  NULLS FIRST, ((UNICODE(vt0.c0)) BETWEEN (vt0.c0) AND (vt0.c0)) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) IS TRUE));
SELECT * FROM t0, rt0 NATURAL JOIN vt0 WHERE (((LAST_INSERT_ROWID()) NOT BETWEEN (('\f' IN ())) AND ((vt0.c0 IN ())))) ORDER BY rt0.c2, ((('488502288', ((t0.c0) BETWEEN (-575088991) AND (x'f48a')), vt0.c0))>((((((t0.c1)OR(t0.c2)))AND(t0.c0)), (+ (t0.c2)), t0.c7 COLLATE BINARY))) ASC;
SELECT SUM(count) FROM (SELECT ((((LAST_INSERT_ROWID()) NOT BETWEEN (('\f' IN ())) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0 ORDER BY rt0.c2, ((('488502288', ((t0.c0) BETWEEN (-575088991) AND (x'f48a')), vt0.c0))>((((((t0.c1)OR(t0.c2)))AND(t0.c0)), (+ (t0.c2)), t0.c7 COLLATE BINARY))) ASC);
SELECT * FROM t0, rt0 NATURAL JOIN vt0 WHERE (((LAST_INSERT_ROWID()) NOT BETWEEN (('\f' IN ())) AND ((vt0.c0 IN ())))) ORDER BY rt0.c2, ((('488502288', ((t0.c0) BETWEEN (-575088991) AND (x'f48a')), vt0.c0))>((((((t0.c1)OR(t0.c2)))AND(t0.c0)), (+ (t0.c2)), t0.c7 COLLATE BINARY))) ASC;
SELECT SUM(count) FROM (SELECT ((((LAST_INSERT_ROWID()) NOT BETWEEN (('\f' IN ())) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0 ORDER BY rt0.c2, ((('488502288', ((t0.c0) BETWEEN (-575088991) AND (x'f48a')), vt0.c0))>((((((t0.c1)OR(t0.c2)))AND(t0.c0)), (+ (t0.c2)), t0.c7 COLLATE BINARY))) ASC);
SELECT * FROM t0, rt0 NATURAL JOIN vt0 WHERE (((LAST_INSERT_ROWID()) NOT BETWEEN (('\f' IN ())) AND ((vt0.c0 IN ())))) ORDER BY rt0.c2, ((('488502288', ((t0.c0) BETWEEN (-575088991) AND (x'f48a')), vt0.c0))>((((((t0.c1)OR(t0.c2)))AND(t0.c0)), (+ (t0.c2)), t0.c7 COLLATE BINARY))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY (((vt0.c0)>>(vt0.c0)) IN (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)>>(vt0.c0)) IN (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY (((vt0.c0)>>(vt0.c0)) IN (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)>>(vt0.c0)) IN (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY (((vt0.c0)>>(vt0.c0)) IN (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT * FROM vt0, t0, vt1, rt0 WHERE (((((t0.c2 IN ())))<=((((t0.c0)<<(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2 IN ())))<=((((t0.c0)<<(rt0.c2)))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT * FROM vt0, t0, vt1, rt0 WHERE (((((t0.c2 IN ())))<=((((t0.c0)<<(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2 IN ())))<=((((t0.c0)<<(rt0.c2)))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT * FROM vt0, t0, vt1, rt0 WHERE (((((t0.c2 IN ())))<=((((t0.c0)<<(rt0.c2))))));
SELECT * FROM t0, rt0, vt1 NATURAL JOIN vt0 WHERE ((((rt0.c2, rt0.c3, t0.c1))>((x'', rt0.c2, t0.c2))) COLLATE NOCASE) ORDER BY x''  NULLS LAST, TRIM(((rt0.c0) BETWEEN (t0.c0) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c3, t0.c1))>((x'', rt0.c2, t0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt1 NATURAL JOIN vt0 ORDER BY x''  NULLS LAST, TRIM(((rt0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT * FROM t0, rt0, vt1 NATURAL JOIN vt0 WHERE ((((rt0.c2, rt0.c3, t0.c1))>((x'', rt0.c2, t0.c2))) COLLATE NOCASE) ORDER BY x''  NULLS LAST, TRIM(((rt0.c0) BETWEEN (t0.c0) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c3, t0.c1))>((x'', rt0.c2, t0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt1 NATURAL JOIN vt0 ORDER BY x''  NULLS LAST, TRIM(((rt0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT * FROM t0, rt0, vt1 NATURAL JOIN vt0 WHERE ((((rt0.c2, rt0.c3, t0.c1))>((x'', rt0.c2, t0.c2))) COLLATE NOCASE) ORDER BY x''  NULLS LAST, TRIM(((rt0.c0) BETWEEN (t0.c0) AND (t0.c0)));
SELECT * FROM rt0, vt0 INNER JOIN vt1 ON ((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND('606359164')) COLLATE NOCASE WHERE (CASE WHEN ((x'a410') IS FALSE) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END END) ORDER BY CASE WHEN ((rt0.c1)<<(vt0.c0)) THEN (- (rt0.c1)) WHEN 'eI' THEN CAST(vt1.c0 AS NUMERIC) WHEN (~ (rt0.c0)) THEN x'' ELSE LOWER(vt0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'a410') IS FALSE) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON ((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND('606359164')) COLLATE NOCASE ORDER BY CASE WHEN ((rt0.c1)<<(vt0.c0)) THEN (- (rt0.c1)) WHEN 'eI' THEN CAST(vt1.c0 AS NUMERIC) WHEN (~ (rt0.c0)) THEN x'' ELSE LOWER(vt0.c0) END  NULLS LAST);
SELECT * FROM rt0, vt0 INNER JOIN vt1 ON ((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND('606359164')) COLLATE NOCASE WHERE (CASE WHEN ((x'a410') IS FALSE) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END END) ORDER BY CASE WHEN ((rt0.c1)<<(vt0.c0)) THEN (- (rt0.c1)) WHEN 'eI' THEN CAST(vt1.c0 AS NUMERIC) WHEN (~ (rt0.c0)) THEN x'' ELSE LOWER(vt0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'a410') IS FALSE) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON ((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND('606359164')) COLLATE NOCASE ORDER BY CASE WHEN ((rt0.c1)<<(vt0.c0)) THEN (- (rt0.c1)) WHEN 'eI' THEN CAST(vt1.c0 AS NUMERIC) WHEN (~ (rt0.c0)) THEN x'' ELSE LOWER(vt0.c0) END  NULLS LAST);
SELECT * FROM rt0, vt0 INNER JOIN vt1 ON ((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND('606359164')) COLLATE NOCASE WHERE (CASE WHEN ((x'a410') IS FALSE) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END END) ORDER BY CASE WHEN ((rt0.c1)<<(vt0.c0)) THEN (- (rt0.c1)) WHEN 'eI' THEN CAST(vt1.c0 AS NUMERIC) WHEN (~ (rt0.c0)) THEN x'' ELSE LOWER(vt0.c0) END  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (rt0.c1);
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC)) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC)) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC)) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((((vt0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2)))) NOT BETWEEN (((0.6509733765200906)<(t0.c1))) AND (t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2)))) NOT BETWEEN (((0.6509733765200906)<(t0.c1))) AND (t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((((vt0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2)))) NOT BETWEEN (((0.6509733765200906)<(t0.c1))) AND (t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2)))) NOT BETWEEN (((0.6509733765200906)<(t0.c1))) AND (t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((((vt0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2)))) NOT BETWEEN (((0.6509733765200906)<(t0.c1))) AND (t0.c2 COLLATE BINARY)));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)==(rt0.c2)) AS NUMERIC)) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c3)>(NULL)) ELSE CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END END, ((rt0.c0)|(rt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)==(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c3)>(NULL)) ELSE CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END END, ((rt0.c0)|(rt0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)==(rt0.c2)) AS NUMERIC)) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c3)>(NULL)) ELSE CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END END, ((rt0.c0)|(rt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)==(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c3)>(NULL)) ELSE CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END END, ((rt0.c0)|(rt0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)==(rt0.c2)) AS NUMERIC)) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c3)>(NULL)) ELSE CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END END, ((rt0.c0)|(rt0.c0)) COLLATE RTRIM ASC;
SELECT * FROM t0, vt0, vt1 WHERE ((((NULL)) BETWEEN (((vt0.c0 IN (t0.c1, t0.c0)))) AND (((- (t0.c2)))))) ORDER BY CASE WHEN t0.c75 COLLATE RTRIM THEN ((((((((vt0.c0)AND(t0.c1)))OR(t0.c7)))AND(NULL)))AND(t0.c2)) END;
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN (((vt0.c0 IN (t0.c1, t0.c0)))) AND (((- (t0.c2)))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE WHEN t0.c75 COLLATE RTRIM THEN ((((((((vt0.c0)AND(t0.c1)))OR(t0.c7)))AND(NULL)))AND(t0.c2)) END);
SELECT * FROM t0, vt0, vt1 WHERE ((((NULL)) BETWEEN (((vt0.c0 IN (t0.c1, t0.c0)))) AND (((- (t0.c2)))))) ORDER BY CASE WHEN t0.c75 COLLATE RTRIM THEN ((((((((vt0.c0)AND(t0.c1)))OR(t0.c7)))AND(NULL)))AND(t0.c2)) END;
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN (((vt0.c0 IN (t0.c1, t0.c0)))) AND (((- (t0.c2)))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE WHEN t0.c75 COLLATE RTRIM THEN ((((((((vt0.c0)AND(t0.c1)))OR(t0.c7)))AND(NULL)))AND(t0.c2)) END);
SELECT * FROM t0, vt0, vt1 WHERE ((((NULL)) BETWEEN (((vt0.c0 IN (t0.c1, t0.c0)))) AND (((- (t0.c2)))))) ORDER BY CASE WHEN t0.c75 COLLATE RTRIM THEN ((((((((vt0.c0)AND(t0.c1)))OR(t0.c7)))AND(NULL)))AND(t0.c2)) END;
SELECT * FROM t0, rt0, vt1 WHERE (CAST(x'' COLLATE NOCASE AS BLOB)) ORDER BY CASE WHEN ((t0.c7) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN (+ (rt0.c3)) WHEN ((t0.c2) IS TRUE) THEN t0.c7 COLLATE RTRIM WHEN CAST(rt0.c1 AS NUMERIC) THEN t0.c75 COLLATE BINARY ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)) END, (((CASE WHEN t0.c75 THEN rt0.c0 ELSE rt0.c1 END))>=((((rt0.c2) NOT BETWEEN (1429320333) AND (x'b988')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY CASE WHEN ((t0.c7) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN (+ (rt0.c3)) WHEN ((t0.c2) IS TRUE) THEN t0.c7 COLLATE RTRIM WHEN CAST(rt0.c1 AS NUMERIC) THEN t0.c75 COLLATE BINARY ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)) END, (((CASE WHEN t0.c75 THEN rt0.c0 ELSE rt0.c1 END))>=((((rt0.c2) NOT BETWEEN (1429320333) AND (x'b988')))))  NULLS LAST);
SELECT * FROM t0, rt0, vt1 WHERE (CAST(x'' COLLATE NOCASE AS BLOB)) ORDER BY CASE WHEN ((t0.c7) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN (+ (rt0.c3)) WHEN ((t0.c2) IS TRUE) THEN t0.c7 COLLATE RTRIM WHEN CAST(rt0.c1 AS NUMERIC) THEN t0.c75 COLLATE BINARY ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)) END, (((CASE WHEN t0.c75 THEN rt0.c0 ELSE rt0.c1 END))>=((((rt0.c2) NOT BETWEEN (1429320333) AND (x'b988')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY CASE WHEN ((t0.c7) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN (+ (rt0.c3)) WHEN ((t0.c2) IS TRUE) THEN t0.c7 COLLATE RTRIM WHEN CAST(rt0.c1 AS NUMERIC) THEN t0.c75 COLLATE BINARY ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)) END, (((CASE WHEN t0.c75 THEN rt0.c0 ELSE rt0.c1 END))>=((((rt0.c2) NOT BETWEEN (1429320333) AND (x'b988')))))  NULLS LAST);
SELECT * FROM t0, rt0, vt1 WHERE (CAST(x'' COLLATE NOCASE AS BLOB)) ORDER BY CASE WHEN ((t0.c7) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN (+ (rt0.c3)) WHEN ((t0.c2) IS TRUE) THEN t0.c7 COLLATE RTRIM WHEN CAST(rt0.c1 AS NUMERIC) THEN t0.c75 COLLATE BINARY ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)) END, (((CASE WHEN t0.c75 THEN rt0.c0 ELSE rt0.c1 END))>=((((rt0.c2) NOT BETWEEN (1429320333) AND (x'b988')))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'6b4ed80c9bd1' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'6b4ed80c9bd1' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'6b4ed80c9bd1' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'6b4ed80c9bd1' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'6b4ed80c9bd1' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c75) ORDER BY (((rt0.c0) NOT NULL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((t0.c75) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c0) NOT NULL) IN ()));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c75) ORDER BY (((rt0.c0) NOT NULL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((t0.c75) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c0) NOT NULL) IN ()));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c75) ORDER BY (((rt0.c0) NOT NULL) IN ());
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (((((vt0.c0)||(t0.c75))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.8889464453623537))) AND (((t0.c7) IS TRUE)))) ORDER BY (- (((t0.c0) BETWEEN (NULL) AND (t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(t0.c75))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.8889464453623537))) AND (((t0.c7) IS TRUE)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (- (((t0.c0) BETWEEN (NULL) AND (t0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (((((vt0.c0)||(t0.c75))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.8889464453623537))) AND (((t0.c7) IS TRUE)))) ORDER BY (- (((t0.c0) BETWEEN (NULL) AND (t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(t0.c75))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.8889464453623537))) AND (((t0.c7) IS TRUE)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (- (((t0.c0) BETWEEN (NULL) AND (t0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (((((vt0.c0)||(t0.c75))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.8889464453623537))) AND (((t0.c7) IS TRUE)))) ORDER BY (- (((t0.c0) BETWEEN (NULL) AND (t0.c2))))  NULLS LAST;
SELECT * FROM vt1, t0 INNER JOIN vt0 ON (((~ (t0.c75)))>>(((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)))) LEFT OUTER JOIN rt0 ON CASE WHEN PRINTF(t0.c2, t0.c2, t0.c75) THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)) ELSE ((t0.c75)<>(t0.c75)) END WHERE ((((x'') NOTNULL) IN (t0.c7))) ORDER BY ABS(rt0.c0) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'') NOTNULL) IN (t0.c7))) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON (((~ (t0.c75)))>>(((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)))) LEFT OUTER JOIN rt0 ON CASE WHEN PRINTF(t0.c2, t0.c2, t0.c75) THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)) ELSE ((t0.c75)<>(t0.c75)) END ORDER BY ABS(rt0.c0) ASC  NULLS LAST);
SELECT * FROM vt1, t0 INNER JOIN vt0 ON (((~ (t0.c75)))>>(((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)))) LEFT OUTER JOIN rt0 ON CASE WHEN PRINTF(t0.c2, t0.c2, t0.c75) THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)) ELSE ((t0.c75)<>(t0.c75)) END WHERE ((((x'') NOTNULL) IN (t0.c7))) ORDER BY ABS(rt0.c0) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'') NOTNULL) IN (t0.c7))) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON (((~ (t0.c75)))>>(((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)))) LEFT OUTER JOIN rt0 ON CASE WHEN PRINTF(t0.c2, t0.c2, t0.c75) THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)) ELSE ((t0.c75)<>(t0.c75)) END ORDER BY ABS(rt0.c0) ASC  NULLS LAST);
SELECT * FROM vt1, t0 INNER JOIN vt0 ON (((~ (t0.c75)))>>(((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)))) LEFT OUTER JOIN rt0 ON CASE WHEN PRINTF(t0.c2, t0.c2, t0.c75) THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)) ELSE ((t0.c75)<>(t0.c75)) END WHERE ((((x'') NOTNULL) IN (t0.c7))) ORDER BY ABS(rt0.c0) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (((((t0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c1)))*(((rt0.c3)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c1)))*(((rt0.c3)*(rt0.c2))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (((((t0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c1)))*(((rt0.c3)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c1)))*(((rt0.c3)*(rt0.c2))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (((((t0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c1)))*(((rt0.c3)*(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((0.27588008336610603, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt1.c0, NULL)), ((vt1.c0)/(vt1.c0)), (NULL IN ()))) AND (((vt0.c0 IN (vt1.c0)), vt1.c0 COLLATE RTRIM, RTRIM(vt0.c0)))) WHERE (((((vt0.c0)>=(vt0.c0)))!=((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c0)))<>((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((0.27588008336610603, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt1.c0, NULL)), ((vt1.c0)/(vt1.c0)), (NULL IN ()))) AND (((vt0.c0 IN (vt1.c0)), vt1.c0 COLLATE RTRIM, RTRIM(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((0.27588008336610603, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt1.c0, NULL)), ((vt1.c0)/(vt1.c0)), (NULL IN ()))) AND (((vt0.c0 IN (vt1.c0)), vt1.c0 COLLATE RTRIM, RTRIM(vt0.c0)))) WHERE (((((vt0.c0)>=(vt0.c0)))!=((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c0)))<>((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((0.27588008336610603, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt1.c0, NULL)), ((vt1.c0)/(vt1.c0)), (NULL IN ()))) AND (((vt0.c0 IN (vt1.c0)), vt1.c0 COLLATE RTRIM, RTRIM(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((0.27588008336610603, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt1.c0, NULL)), ((vt1.c0)/(vt1.c0)), (NULL IN ()))) AND (((vt0.c0 IN (vt1.c0)), vt1.c0 COLLATE RTRIM, RTRIM(vt0.c0)))) WHERE (((((vt0.c0)>=(vt0.c0)))!=((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))AND('-2058397448')))OR(rt0.c0)))AND(rt0.c1)) THEN ((0.6429482017000935)<>(rt0.c1)) WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c0)>=(rt0.c2)) WHEN UPPER(DISTINCT rt0.c0) THEN NULL ELSE rt0.c3 END) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))AND('-2058397448')))OR(rt0.c0)))AND(rt0.c1)) THEN ((0.6429482017000935)<>(rt0.c1)) WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c0)>=(rt0.c2)) WHEN UPPER(DISTINCT rt0.c0) THEN NULL ELSE rt0.c3 END) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 END IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))AND('-2058397448')))OR(rt0.c0)))AND(rt0.c1)) THEN ((0.6429482017000935)<>(rt0.c1)) WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c0)>=(rt0.c2)) WHEN UPPER(DISTINCT rt0.c0) THEN NULL ELSE rt0.c3 END) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))AND('-2058397448')))OR(rt0.c0)))AND(rt0.c1)) THEN ((0.6429482017000935)<>(rt0.c1)) WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c0)>=(rt0.c2)) WHEN UPPER(DISTINCT rt0.c0) THEN NULL ELSE rt0.c3 END) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 END IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))AND('-2058397448')))OR(rt0.c0)))AND(rt0.c1)) THEN ((0.6429482017000935)<>(rt0.c1)) WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c0)>=(rt0.c2)) WHEN UPPER(DISTINCT rt0.c0) THEN NULL ELSE rt0.c3 END) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 END IN ())  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c75) BETWEEN (t0.c0) AND (0xffffffffc2eb56b1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c75) BETWEEN (t0.c0) AND (0xffffffffc2eb56b1)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c75) BETWEEN (t0.c0) AND (0xffffffffc2eb56b1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c75) BETWEEN (t0.c0) AND (0xffffffffc2eb56b1)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c75) BETWEEN (t0.c0) AND (0xffffffffc2eb56b1)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (((((t0.c2 COLLATE RTRIM)AND((- (t0.c7)))))OR(((t0.c7) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2 COLLATE RTRIM)AND((- (t0.c7)))))OR(((t0.c7) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (((((t0.c2 COLLATE RTRIM)AND((- (t0.c7)))))OR(((t0.c7) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2 COLLATE RTRIM)AND((- (t0.c7)))))OR(((t0.c7) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (((((t0.c2 COLLATE RTRIM)AND((- (t0.c7)))))OR(((t0.c7) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN (((rt0.c2, '1937238114', 0.5574669221432139, rt0.c3, rt0.c3)) NOT BETWEEN ((NULL, rt0.c1, rt0.c0, rt0.c3, rt0.c3)) AND ((rt0.c2, rt0.c2, rt0.c0, rt0.c3, rt0.c1))) THEN (~ (rt0.c3)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN (((rt0.c2, '1937238114', 0.5574669221432139, rt0.c3, rt0.c3)) NOT BETWEEN ((NULL, rt0.c1, rt0.c0, rt0.c3, rt0.c3)) AND ((rt0.c2, rt0.c2, rt0.c0, rt0.c3, rt0.c1))) THEN (~ (rt0.c3)) ELSE NULL END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN (((rt0.c2, '1937238114', 0.5574669221432139, rt0.c3, rt0.c3)) NOT BETWEEN ((NULL, rt0.c1, rt0.c0, rt0.c3, rt0.c3)) AND ((rt0.c2, rt0.c2, rt0.c0, rt0.c3, rt0.c1))) THEN (~ (rt0.c3)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN (((rt0.c2, '1937238114', 0.5574669221432139, rt0.c3, rt0.c3)) NOT BETWEEN ((NULL, rt0.c1, rt0.c0, rt0.c3, rt0.c3)) AND ((rt0.c2, rt0.c2, rt0.c0, rt0.c3, rt0.c1))) THEN (~ (rt0.c3)) ELSE NULL END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN (((rt0.c2, '1937238114', 0.5574669221432139, rt0.c3, rt0.c3)) NOT BETWEEN ((NULL, rt0.c1, rt0.c0, rt0.c3, rt0.c3)) AND ((rt0.c2, rt0.c2, rt0.c0, rt0.c3, rt0.c1))) THEN (~ (rt0.c3)) ELSE NULL END);
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY (- (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY (- (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY (- (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN rt0 ON ((((vt1.c0)>=(rt0.c3))) BETWEEN (rt0.c1) AND ((~ (t0.c75)))) WHERE (((((((rt0.c0)>=(rt0.c0)))OR((('_T댩')>=(t0.c75)))))AND(((t0.c7)IS(rt0.c3))))) ORDER BY (json_array(rt0.c2, t0.c2, vt1.c0, t0.c7) IN (((((t0.c1)OR(rt0.c2)))AND(rt0.c1)), ((rt0.c3)>(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)>=(rt0.c0)))OR((('_T댩')>=(t0.c75)))))AND(((t0.c7)IS(rt0.c3))))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN rt0 ON ((((vt1.c0)>=(rt0.c3))) BETWEEN (rt0.c1) AND ((~ (t0.c75)))) ORDER BY (json_array(rt0.c2, t0.c2, vt1.c0, t0.c7) IN (((((t0.c1)OR(rt0.c2)))AND(rt0.c1)), ((rt0.c3)>(rt0.c3)))));
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN rt0 ON ((((vt1.c0)>=(rt0.c3))) BETWEEN (rt0.c1) AND ((~ (t0.c75)))) WHERE (((((((rt0.c0)>=(rt0.c0)))OR((('_T댩')>=(t0.c75)))))AND(((t0.c7)IS(rt0.c3))))) ORDER BY (json_array(rt0.c2, t0.c2, vt1.c0, t0.c7) IN (((((t0.c1)OR(rt0.c2)))AND(rt0.c1)), ((rt0.c3)>(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)>=(rt0.c0)))OR((('_T댩')>=(t0.c75)))))AND(((t0.c7)IS(rt0.c3))))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN rt0 ON ((((vt1.c0)>=(rt0.c3))) BETWEEN (rt0.c1) AND ((~ (t0.c75)))) ORDER BY (json_array(rt0.c2, t0.c2, vt1.c0, t0.c7) IN (((((t0.c1)OR(rt0.c2)))AND(rt0.c1)), ((rt0.c3)>(rt0.c3)))));
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN rt0 ON ((((vt1.c0)>=(rt0.c3))) BETWEEN (rt0.c1) AND ((~ (t0.c75)))) WHERE (((((((rt0.c0)>=(rt0.c0)))OR((('_T댩')>=(t0.c75)))))AND(((t0.c7)IS(rt0.c3))))) ORDER BY (json_array(rt0.c2, t0.c2, vt1.c0, t0.c7) IN (((((t0.c1)OR(rt0.c2)))AND(rt0.c1)), ((rt0.c3)>(rt0.c3))));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((0x4bf89a7f)GLOB(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((0X4bf89a7f)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((0x4bf89a7f)GLOB(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((0X4bf89a7f)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((0x4bf89a7f)GLOB(vt0.c0))))));
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c1 IN (t0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN (t0.c2))) NOT NULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c1 IN (t0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN (t0.c2))) NOT NULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c1 IN (t0.c2))) NOT NULL));
SELECT * FROM rt0, t0, vt0 WHERE ((- (((rt0.c1) BETWEEN (t0.c7) AND (rt0.c2))))) ORDER BY (((rt0.c1, rt0.c2, vt0.c0))<((rt0.c2, vt0.c0, rt0.c1))) COLLATE NOCASE COLLATE BINARY, (((rt0.c0, ((t0.c7)>>(t0.c2)), (((t0.c0, t0.c2, vt0.c0)) BETWEEN ((t0.c75, rt0.c1, t0.c1)) AND ((vt0.c0, t0.c0, '')))))<=((rt0.c3 COLLATE NOCASE, CASE rt0.c0  WHEN t0.c0 THEN rt0.c2 END, (((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) BETWEEN (t0.c7) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((rt0.c1, rt0.c2, vt0.c0))<((rt0.c2, vt0.c0, rt0.c1))) COLLATE NOCASE COLLATE BINARY, (((rt0.c0, ((t0.c7)>>(t0.c2)), (((t0.c0, t0.c2, vt0.c0)) BETWEEN ((t0.c75, rt0.c1, t0.c1)) AND ((vt0.c0, t0.c0, '')))))<=((rt0.c3 COLLATE NOCASE, CASE rt0.c0  WHEN t0.c0 THEN rt0.c2 END, (((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))));
SELECT * FROM rt0, t0, vt0 WHERE ((- (((rt0.c1) BETWEEN (t0.c7) AND (rt0.c2))))) ORDER BY (((rt0.c1, rt0.c2, vt0.c0))<((rt0.c2, vt0.c0, rt0.c1))) COLLATE NOCASE COLLATE BINARY, (((rt0.c0, ((t0.c7)>>(t0.c2)), (((t0.c0, t0.c2, vt0.c0)) BETWEEN ((t0.c75, rt0.c1, t0.c1)) AND ((vt0.c0, t0.c0, '')))))<=((rt0.c3 COLLATE NOCASE, CASE rt0.c0  WHEN t0.c0 THEN rt0.c2 END, (((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) BETWEEN (t0.c7) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((rt0.c1, rt0.c2, vt0.c0))<((rt0.c2, vt0.c0, rt0.c1))) COLLATE NOCASE COLLATE BINARY, (((rt0.c0, ((t0.c7)>>(t0.c2)), (((t0.c0, t0.c2, vt0.c0)) BETWEEN ((t0.c75, rt0.c1, t0.c1)) AND ((vt0.c0, t0.c0, '')))))<=((rt0.c3 COLLATE NOCASE, CASE rt0.c0  WHEN t0.c0 THEN rt0.c2 END, (((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))));
SELECT * FROM rt0, t0, vt0 WHERE ((- (((rt0.c1) BETWEEN (t0.c7) AND (rt0.c2))))) ORDER BY (((rt0.c1, rt0.c2, vt0.c0))<((rt0.c2, vt0.c0, rt0.c1))) COLLATE NOCASE COLLATE BINARY, (((rt0.c0, ((t0.c7)>>(t0.c2)), (((t0.c0, t0.c2, vt0.c0)) BETWEEN ((t0.c75, rt0.c1, t0.c1)) AND ((vt0.c0, t0.c0, '')))))<=((rt0.c3 COLLATE NOCASE, CASE rt0.c0  WHEN t0.c0 THEN rt0.c2 END, (((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((((UPPER(rt0.c1))OR(CAST(t0.c0 AS INTEGER))))OR(LTRIM(t0.c2))) FULL OUTER JOIN vt1 ON ((((((((((rt0.c0)OR(t0.c2)))OR(t0.c2)))OR(rt0.c1)))AND(rt0.c0))) BETWEEN ((((rt0.c2))<((rt0.c1)))) AND ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((t0.c75))))) WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((UPPER(rt0.c1))OR(CAST(t0.c0 AS INTEGER))))OR(LTRIM(t0.c2))) FULL OUTER JOIN vt1 ON ((((((((((rt0.c0)OR(t0.c2)))OR(t0.c2)))OR(rt0.c1)))AND(rt0.c0))) BETWEEN ((((rt0.c2))<((rt0.c1)))) AND ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((t0.c75))))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((((UPPER(rt0.c1))OR(CAST(t0.c0 AS INTEGER))))OR(LTRIM(t0.c2))) FULL OUTER JOIN vt1 ON ((((((((((rt0.c0)OR(t0.c2)))OR(t0.c2)))OR(rt0.c1)))AND(rt0.c0))) BETWEEN ((((rt0.c2))<((rt0.c1)))) AND ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((t0.c75))))) WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((UPPER(rt0.c1))OR(CAST(t0.c0 AS INTEGER))))OR(LTRIM(t0.c2))) FULL OUTER JOIN vt1 ON ((((((((((rt0.c0)OR(t0.c2)))OR(t0.c2)))OR(rt0.c1)))AND(rt0.c0))) BETWEEN ((((rt0.c2))<((rt0.c1)))) AND ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((t0.c75))))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((((UPPER(rt0.c1))OR(CAST(t0.c0 AS INTEGER))))OR(LTRIM(t0.c2))) FULL OUTER JOIN vt1 ON ((((((((((rt0.c0)OR(t0.c2)))OR(t0.c2)))OR(rt0.c1)))AND(rt0.c0))) BETWEEN ((((rt0.c2))<((rt0.c1)))) AND ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((t0.c75))))) WHERE (x'' COLLATE NOCASE);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c7) BETWEEN (t0.c75) AND (t0.c7)))GLOB(t0.c75 COLLATE NOCASE)) WHERE (CAST((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c7) BETWEEN (t0.c75) AND (t0.c7)))GLOB(t0.c75 COLLATE NOCASE)));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c7) BETWEEN (t0.c75) AND (t0.c7)))GLOB(t0.c75 COLLATE NOCASE)) WHERE (CAST((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c7) BETWEEN (t0.c75) AND (t0.c7)))GLOB(t0.c75 COLLATE NOCASE)));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c7) BETWEEN (t0.c75) AND (t0.c7)))GLOB(t0.c75 COLLATE NOCASE)) WHERE (CAST((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))) AS BLOB));
SELECT ALL * FROM rt0, t0, vt0 CROSS JOIN vt1 ON '898204662' WHERE (((((rt0.c1)>(t0.c7)))*(TRIM(DISTINCT '726595373', vt0.c0)))) ORDER BY CASE ((t0.c1)||(vt1.c0))  WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN t0.c75 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 ELSE t0.c75 END THEN (vt1.c0 IN ()) WHEN ((t0.c2)&(rt0.c1)) THEN ((rt0.c1)==(rt0.c1)) WHEN (vt1.c0 IN ()) THEN NULL END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>(t0.c7)))*(TRIM(DISTINCT '726595373', vt0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0 CROSS JOIN vt1 ON '898204662' ORDER BY CASE ((t0.c1)||(vt1.c0))  WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN t0.c75 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 ELSE t0.c75 END THEN (vt1.c0 IN ()) WHEN ((t0.c2)&(rt0.c1)) THEN ((rt0.c1)==(rt0.c1)) WHEN (vt1.c0 IN ()) THEN NULL END DESC);
SELECT ALL * FROM rt0, t0, vt0 CROSS JOIN vt1 ON '898204662' WHERE (((((rt0.c1)>(t0.c7)))*(TRIM(DISTINCT '726595373', vt0.c0)))) ORDER BY CASE ((t0.c1)||(vt1.c0))  WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN t0.c75 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 ELSE t0.c75 END THEN (vt1.c0 IN ()) WHEN ((t0.c2)&(rt0.c1)) THEN ((rt0.c1)==(rt0.c1)) WHEN (vt1.c0 IN ()) THEN NULL END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>(t0.c7)))*(TRIM(DISTINCT '726595373', vt0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0 CROSS JOIN vt1 ON '898204662' ORDER BY CASE ((t0.c1)||(vt1.c0))  WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN t0.c75 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 ELSE t0.c75 END THEN (vt1.c0 IN ()) WHEN ((t0.c2)&(rt0.c1)) THEN ((rt0.c1)==(rt0.c1)) WHEN (vt1.c0 IN ()) THEN NULL END DESC);
SELECT ALL * FROM rt0, t0, vt0 CROSS JOIN vt1 ON '898204662' WHERE (((((rt0.c1)>(t0.c7)))*(TRIM(DISTINCT '726595373', vt0.c0)))) ORDER BY CASE ((t0.c1)||(vt1.c0))  WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN t0.c75 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 ELSE t0.c75 END THEN (vt1.c0 IN ()) WHEN ((t0.c2)&(rt0.c1)) THEN ((rt0.c1)==(rt0.c1)) WHEN (vt1.c0 IN ()) THEN NULL END DESC;
SELECT * FROM t0, rt0, vt0 WHERE (t0.c7);
SELECT SUM(count) FROM (SELECT ALL ((t0.c7) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (t0.c7);
SELECT SUM(count) FROM (SELECT ALL ((t0.c7) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (t0.c7);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0 DESC  NULLS LAST, ((CAST(vt1.c0 AS NUMERIC))IS((vt1.c0 IN ()))), ((vt1.c0)<=(NULL)) COLLATE BINARY, CAST(UNLIKELY(vt1.c0) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST, ((CAST(vt1.c0 AS NUMERIC))IS((vt1.c0 IN ()))), ((vt1.c0)<=(NULL)) COLLATE BINARY, CAST(UNLIKELY(vt1.c0) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0 DESC  NULLS LAST, ((CAST(vt1.c0 AS NUMERIC))IS((vt1.c0 IN ()))), ((vt1.c0)<=(NULL)) COLLATE BINARY, CAST(UNLIKELY(vt1.c0) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST, ((CAST(vt1.c0 AS NUMERIC))IS((vt1.c0 IN ()))), ((vt1.c0)<=(NULL)) COLLATE BINARY, CAST(UNLIKELY(vt1.c0) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0 DESC  NULLS LAST, ((CAST(vt1.c0 AS NUMERIC))IS((vt1.c0 IN ()))), ((vt1.c0)<=(NULL)) COLLATE BINARY, CAST(UNLIKELY(vt1.c0) AS BLOB) ASC;
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT ALL * FROM rt0, vt1 WHERE ((('-412322744' COLLATE NOCASE)*(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((('-412322744' COLLATE NOCASE)*(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((('-412322744' COLLATE NOCASE)*(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((('-412322744' COLLATE NOCASE)*(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((('-412322744' COLLATE NOCASE)*(vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c3) IS TRUE))));
SELECT ALL * FROM rt0 WHERE (((HEX(DISTINCT rt0.c0)) NOT NULL)) ORDER BY (+ (CAST(rt0.c1 AS INTEGER))) DESC  NULLS FIRST, ((((rt0.c1) BETWEEN (rt0.c1) AND (0.7633290307122047)))<<(rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT rt0.c0)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c1 AS INTEGER))) DESC  NULLS FIRST, ((((rt0.c1) BETWEEN (rt0.c1) AND (0.7633290307122047)))<<(rt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((HEX(DISTINCT rt0.c0)) NOT NULL)) ORDER BY (+ (CAST(rt0.c1 AS INTEGER))) DESC  NULLS FIRST, ((((rt0.c1) BETWEEN (rt0.c1) AND (0.7633290307122047)))<<(rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT rt0.c0)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c1 AS INTEGER))) DESC  NULLS FIRST, ((((rt0.c1) BETWEEN (rt0.c1) AND (0.7633290307122047)))<<(rt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((HEX(DISTINCT rt0.c0)) NOT NULL)) ORDER BY (+ (CAST(rt0.c1 AS INTEGER))) DESC  NULLS FIRST, ((((rt0.c1) BETWEEN (rt0.c1) AND (0.7633290307122047)))<<(rt0.c1)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON (((CAST(t0.c2 AS REAL)))>((((rt0.c2)GLOB('A'))))) RIGHT OUTER JOIN rt0 ON CAST(((t0.c75) NOT BETWEEN (rt0.c2) AND (t0.c75)) AS BLOB) WHERE (UNLIKELY(CAST(t0.c75 AS TEXT))) ORDER BY (((NULLIF(rt0.c3, rt0.c1), (t0.c1 IN ()), CASE x'02031fc5'  WHEN rt0.c1 THEN t0.c7 WHEN rt0.c1 THEN t0.c0 WHEN t0.c2 THEN rt0.c1 ELSE vt1.c0 END))>((((((((((rt0.c1)OR(rt0.c0)))AND(t0.c75)))AND(x'cde2')))AND(rt0.c1)), (t0.c0 IN ()), (t0.c1 IN ())))), '-945931578', (((((vt1.c0) IS TRUE), CAST(x'' AS NUMERIC), CASE WHEN t0.c0 THEN rt0.c2 ELSE t0.c0 END))<=((((((-837026175)OR(rt0.c0)))OR(x'')), 0.9212357021182993, json_array_length(rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CAST(t0.c75 AS TEXT))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (((CAST(t0.c2 AS REAL)))>((((rt0.c2)GLOB('A'))))) RIGHT OUTER JOIN rt0 ON CAST(((t0.c75) NOT BETWEEN (rt0.c2) AND (t0.c75)) AS BLOB) ORDER BY (((NULLIF(rt0.c3, rt0.c1), (t0.c1 IN ()), CASE x'02031fc5'  WHEN rt0.c1 THEN t0.c7 WHEN rt0.c1 THEN t0.c0 WHEN t0.c2 THEN rt0.c1 ELSE vt1.c0 END))>((((((((((rt0.c1)OR(rt0.c0)))AND(t0.c75)))AND(x'cde2')))AND(rt0.c1)), (t0.c0 IN ()), (t0.c1 IN ())))), '-945931578', (((((vt1.c0) IS TRUE), CAST(x'' AS NUMERIC), CASE WHEN t0.c0 THEN rt0.c2 ELSE t0.c0 END))<=((((((-837026175)OR(rt0.c0)))OR(x'')), 0.9212357021182993, json_array_length(rt0.c3))))  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON (((CAST(t0.c2 AS REAL)))>((((rt0.c2)GLOB('A'))))) RIGHT OUTER JOIN rt0 ON CAST(((t0.c75) NOT BETWEEN (rt0.c2) AND (t0.c75)) AS BLOB) WHERE (UNLIKELY(CAST(t0.c75 AS TEXT))) ORDER BY (((NULLIF(rt0.c3, rt0.c1), (t0.c1 IN ()), CASE x'02031fc5'  WHEN rt0.c1 THEN t0.c7 WHEN rt0.c1 THEN t0.c0 WHEN t0.c2 THEN rt0.c1 ELSE vt1.c0 END))>((((((((((rt0.c1)OR(rt0.c0)))AND(t0.c75)))AND(x'cde2')))AND(rt0.c1)), (t0.c0 IN ()), (t0.c1 IN ())))), '-945931578', (((((vt1.c0) IS TRUE), CAST(x'' AS NUMERIC), CASE WHEN t0.c0 THEN rt0.c2 ELSE t0.c0 END))<=((((((-837026175)OR(rt0.c0)))OR(x'')), 0.9212357021182993, json_array_length(rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CAST(t0.c75 AS TEXT))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (((CAST(t0.c2 AS REAL)))>((((rt0.c2)GLOB('A'))))) RIGHT OUTER JOIN rt0 ON CAST(((t0.c75) NOT BETWEEN (rt0.c2) AND (t0.c75)) AS BLOB) ORDER BY (((NULLIF(rt0.c3, rt0.c1), (t0.c1 IN ()), CASE x'02031fc5'  WHEN rt0.c1 THEN t0.c7 WHEN rt0.c1 THEN t0.c0 WHEN t0.c2 THEN rt0.c1 ELSE vt1.c0 END))>((((((((((rt0.c1)OR(rt0.c0)))AND(t0.c75)))AND(x'cde2')))AND(rt0.c1)), (t0.c0 IN ()), (t0.c1 IN ())))), '-945931578', (((((vt1.c0) IS TRUE), CAST(x'' AS NUMERIC), CASE WHEN t0.c0 THEN rt0.c2 ELSE t0.c0 END))<=((((((-837026175)OR(rt0.c0)))OR(x'')), 0.9212357021182993, json_array_length(rt0.c3))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0)AND(rt0.c1))) ISNULL)) ORDER BY (((rt0.c0 COLLATE RTRIM))<=((json_array(vt0.c0, NULL, rt0.c3, rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0 COLLATE RTRIM))<=((json_array(vt0.c0, NULL, rt0.c3, rt0.c2)))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0)AND(rt0.c1))) ISNULL)) ORDER BY (((rt0.c0 COLLATE RTRIM))<=((json_array(vt0.c0, NULL, rt0.c3, rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0 COLLATE RTRIM))<=((json_array(vt0.c0, NULL, rt0.c3, rt0.c2)))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0)AND(rt0.c1))) ISNULL)) ORDER BY (((rt0.c0 COLLATE RTRIM))<=((json_array(vt0.c0, NULL, rt0.c3, rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (UNLIKELY(rt0.c1)) ORDER BY -494543751 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(rt0.c1)) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY -494543751 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (UNLIKELY(rt0.c1)) ORDER BY -494543751 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(rt0.c1)) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY -494543751 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-1434030477' WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)||((- (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-1434030477' WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)||((- (vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-1434030477' WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)||((- (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-1434030477' WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)||((- (vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-1434030477' WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)||((- (vt1.c0)))) ASC;
SELECT ALL * FROM vt1, t0, rt0 WHERE (((((((rt0.c1)OR(t0.c2)))OR(rt0.c3)))<=(((((((((rt0.c3)AND(t0.c7)))OR(rt0.c2)))OR(rt0.c0)))OR(t0.c0))))) ORDER BY CASE WHEN ((rt0.c2)IS(NULL)) THEN (('1933366480')>(t0.c2)) ELSE CASE rt0.c0  WHEN vt1.c0 THEN t0.c7 WHEN t0.c7 THEN rt0.c1 WHEN rt0.c0 THEN '3e' END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(t0.c2)))OR(rt0.c3)))<=(((((((((rt0.c3)AND(t0.c7)))OR(rt0.c2)))OR(rt0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY CASE WHEN ((rt0.c2)IS(NULL)) THEN (('1933366480')>(t0.c2)) ELSE CASE rt0.c0  WHEN vt1.c0 THEN t0.c7 WHEN t0.c7 THEN rt0.c1 WHEN rt0.c0 THEN '3e' END END DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0, rt0 WHERE (((((((rt0.c1)OR(t0.c2)))OR(rt0.c3)))<=(((((((((rt0.c3)AND(t0.c7)))OR(rt0.c2)))OR(rt0.c0)))OR(t0.c0))))) ORDER BY CASE WHEN ((rt0.c2)IS(NULL)) THEN (('1933366480')>(t0.c2)) ELSE CASE rt0.c0  WHEN vt1.c0 THEN t0.c7 WHEN t0.c7 THEN rt0.c1 WHEN rt0.c0 THEN '3e' END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(t0.c2)))OR(rt0.c3)))<=(((((((((rt0.c3)AND(t0.c7)))OR(rt0.c2)))OR(rt0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY CASE WHEN ((rt0.c2)IS(NULL)) THEN (('1933366480')>(t0.c2)) ELSE CASE rt0.c0  WHEN vt1.c0 THEN t0.c7 WHEN t0.c7 THEN rt0.c1 WHEN rt0.c0 THEN '3e' END END DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0, rt0 WHERE (((((((rt0.c1)OR(t0.c2)))OR(rt0.c3)))<=(((((((((rt0.c3)AND(t0.c7)))OR(rt0.c2)))OR(rt0.c0)))OR(t0.c0))))) ORDER BY CASE WHEN ((rt0.c2)IS(NULL)) THEN (('1933366480')>(t0.c2)) ELSE CASE rt0.c0  WHEN vt1.c0 THEN t0.c7 WHEN t0.c7 THEN rt0.c1 WHEN rt0.c0 THEN '3e' END END DESC  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((((((((t0.c0 IN (t0.c75)))OR(CASE WHEN t0.c0 THEN vt0.c0 END)))OR((((t0.c75, t0.c7, t0.c75)) BETWEEN ((t0.c2, t0.c7, t0.c0)) AND ((t0.c1, vt0.c0, t0.c0))))))AND((('599405992') NOT BETWEEN (t0.c7) AND (t0.c1)))))AND(NULL)) INNER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t0.c7 WHEN t0.c2 THEN t0.c75 WHEN vt1.c0 THEN t0.c1 ELSE t0.c7 END  WHEN ((t0.c7) NOTNULL) THEN (((t0.c0, t0.c2, t0.c75))==((t0.c75, vt1.c0, t0.c1))) END WHERE ((GLOB(t0.c7, t0.c0) IN (vt0.c0 COLLATE BINARY))) ORDER BY ((t0.c1)GLOB((((t0.c2))<((t0.c0)))));
SELECT SUM(count) FROM (SELECT (((GLOB(t0.c7, t0.c0) IN (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((((((t0.c0 IN (t0.c75)))OR(CASE WHEN t0.c0 THEN vt0.c0 END)))OR((((t0.c75, t0.c7, t0.c75)) BETWEEN ((t0.c2, t0.c7, t0.c0)) AND ((t0.c1, vt0.c0, t0.c0))))))AND((('599405992') NOT BETWEEN (t0.c7) AND (t0.c1)))))AND(NULL)) INNER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t0.c7 WHEN t0.c2 THEN t0.c75 WHEN vt1.c0 THEN t0.c1 ELSE t0.c7 END  WHEN ((t0.c7) NOTNULL) THEN (((t0.c0, t0.c2, t0.c75))=((t0.c75, vt1.c0, t0.c1))) END ORDER BY ((t0.c1)GLOB((((t0.c2))<((t0.c0))))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((((((((t0.c0 IN (t0.c75)))OR(CASE WHEN t0.c0 THEN vt0.c0 END)))OR((((t0.c75, t0.c7, t0.c75)) BETWEEN ((t0.c2, t0.c7, t0.c0)) AND ((t0.c1, vt0.c0, t0.c0))))))AND((('599405992') NOT BETWEEN (t0.c7) AND (t0.c1)))))AND(NULL)) INNER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t0.c7 WHEN t0.c2 THEN t0.c75 WHEN vt1.c0 THEN t0.c1 ELSE t0.c7 END  WHEN ((t0.c7) NOTNULL) THEN (((t0.c0, t0.c2, t0.c75))==((t0.c75, vt1.c0, t0.c1))) END WHERE ((GLOB(t0.c7, t0.c0) IN (vt0.c0 COLLATE BINARY))) ORDER BY ((t0.c1)GLOB((((t0.c2))<((t0.c0)))));
SELECT SUM(count) FROM (SELECT (((GLOB(t0.c7, t0.c0) IN (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((((((t0.c0 IN (t0.c75)))OR(CASE WHEN t0.c0 THEN vt0.c0 END)))OR((((t0.c75, t0.c7, t0.c75)) BETWEEN ((t0.c2, t0.c7, t0.c0)) AND ((t0.c1, vt0.c0, t0.c0))))))AND((('599405992') NOT BETWEEN (t0.c7) AND (t0.c1)))))AND(NULL)) INNER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t0.c7 WHEN t0.c2 THEN t0.c75 WHEN vt1.c0 THEN t0.c1 ELSE t0.c7 END  WHEN ((t0.c7) NOTNULL) THEN (((t0.c0, t0.c2, t0.c75))=((t0.c75, vt1.c0, t0.c1))) END ORDER BY ((t0.c1)GLOB((((t0.c2))<((t0.c0))))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((((((((t0.c0 IN (t0.c75)))OR(CASE WHEN t0.c0 THEN vt0.c0 END)))OR((((t0.c75, t0.c7, t0.c75)) BETWEEN ((t0.c2, t0.c7, t0.c0)) AND ((t0.c1, vt0.c0, t0.c0))))))AND((('599405992') NOT BETWEEN (t0.c7) AND (t0.c1)))))AND(NULL)) INNER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t0.c7 WHEN t0.c2 THEN t0.c75 WHEN vt1.c0 THEN t0.c1 ELSE t0.c7 END  WHEN ((t0.c7) NOTNULL) THEN (((t0.c0, t0.c2, t0.c75))==((t0.c75, vt1.c0, t0.c1))) END WHERE ((GLOB(t0.c7, t0.c0) IN (vt0.c0 COLLATE BINARY))) ORDER BY ((t0.c1)GLOB((((t0.c2))<((t0.c0)))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND('-238930860')) THEN NULL COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND('-238930860')) THEN NULL COLLATE BINARY END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND('-238930860')) THEN NULL COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND('-238930860')) THEN NULL COLLATE BINARY END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND('-238930860')) THEN NULL COLLATE BINARY END);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (IFNULL(((t0.c2)|(vt0.c0)), ((((t0.c2)OR(t0.c2)))AND(t0.c1)))) ORDER BY ((CAST(vt0.c0 AS INTEGER))*((((t0.c2, 'l6', t0.c2))>((t0.c7, t0.c75, t0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((t0.c2)|(vt0.c0)), ((((t0.c2)OR(t0.c2)))AND(t0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0 NOT INDEXED ORDER BY ((CAST(vt0.c0 AS INTEGER))*((((t0.c2, 'l6', t0.c2))>((t0.c7, t0.c75, t0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (IFNULL(((t0.c2)|(vt0.c0)), ((((t0.c2)OR(t0.c2)))AND(t0.c1)))) ORDER BY ((CAST(vt0.c0 AS INTEGER))*((((t0.c2, 'l6', t0.c2))>((t0.c7, t0.c75, t0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((t0.c2)|(vt0.c0)), ((((t0.c2)OR(t0.c2)))AND(t0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0 NOT INDEXED ORDER BY ((CAST(vt0.c0 AS INTEGER))*((((t0.c2, 'l6', t0.c2))>((t0.c7, t0.c75, t0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (IFNULL(((t0.c2)|(vt0.c0)), ((((t0.c2)OR(t0.c2)))AND(t0.c1)))) ORDER BY ((CAST(vt0.c0 AS INTEGER))*((((t0.c2, 'l6', t0.c2))>((t0.c7, t0.c75, t0.c0))))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (0X2c3545a1) ORDER BY t0.c75;
SELECT SUM(count) FROM (SELECT ((0X2c3545a1) IS TRUE)  as count FROM t0 ORDER BY t0.c75);
SELECT * FROM t0 WHERE (0X2c3545a1) ORDER BY t0.c75;
SELECT SUM(count) FROM (SELECT ((0X2c3545a1) IS TRUE)  as count FROM t0 ORDER BY t0.c75);
SELECT * FROM t0 WHERE (0X2c3545a1) ORDER BY t0.c75;
SELECT * FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c0)) COLLATE NOCASE) ORDER BY rt0.c0  NULLS LAST, ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3))) BETWEEN (((rt0.c2)<=(rt0.c1))) AND (rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST, ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3))) BETWEEN (((rt0.c2)<=(rt0.c1))) AND (rt0.c2 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c0)) COLLATE NOCASE) ORDER BY rt0.c0  NULLS LAST, ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3))) BETWEEN (((rt0.c2)<=(rt0.c1))) AND (rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST, ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3))) BETWEEN (((rt0.c2)<=(rt0.c1))) AND (rt0.c2 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c0)) COLLATE NOCASE) ORDER BY rt0.c0  NULLS LAST, ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3))) BETWEEN (((rt0.c2)<=(rt0.c1))) AND (rt0.c2 COLLATE NOCASE));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((NULL)>=(((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3))))) ORDER BY PRINTF(((0.9649655092419434) ISNULL))  NULLS FIRST, (- (((vt1.c0)OR(rt0.c2)))), ((((((vt0.c0)*(rt0.c3)))OR(rt0.c1)))AND(((vt1.c0)<>('nky?h/ጒ'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)>=(((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY PRINTF(((0.9649655092419434) ISNULL))  NULLS FIRST, (- (((vt1.c0)OR(rt0.c2)))), ((((((vt0.c0)*(rt0.c3)))OR(rt0.c1)))AND(((vt1.c0)!=('nky?h/ጒ'))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((NULL)>=(((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3))))) ORDER BY PRINTF(((0.9649655092419434) ISNULL))  NULLS FIRST, (- (((vt1.c0)OR(rt0.c2)))), ((((((vt0.c0)*(rt0.c3)))OR(rt0.c1)))AND(((vt1.c0)<>('nky?h/ጒ'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)>=(((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY PRINTF(((0.9649655092419434) ISNULL))  NULLS FIRST, (- (((vt1.c0)OR(rt0.c2)))), ((((((vt0.c0)*(rt0.c3)))OR(rt0.c1)))AND(((vt1.c0)!=('nky?h/ጒ'))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((NULL)>=(((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3))))) ORDER BY PRINTF(((0.9649655092419434) ISNULL))  NULLS FIRST, (- (((vt1.c0)OR(rt0.c2)))), ((((((vt0.c0)*(rt0.c3)))OR(rt0.c1)))AND(((vt1.c0)<>('nky?h/ጒ'))))  NULLS LAST;
SELECT * FROM rt0, vt0, vt1, t0 WHERE (((t0.c75)-(t0.c1)) COLLATE RTRIM) ORDER BY (~ (((vt1.c0) NOT BETWEEN (t0.c1) AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c75)-(t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY (~ (((vt1.c0) NOT BETWEEN (t0.c1) AND (rt0.c3)))) DESC);
SELECT * FROM rt0, vt0, vt1, t0 WHERE (((t0.c75)-(t0.c1)) COLLATE RTRIM) ORDER BY (~ (((vt1.c0) NOT BETWEEN (t0.c1) AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c75)-(t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY (~ (((vt1.c0) NOT BETWEEN (t0.c1) AND (rt0.c3)))) DESC);
SELECT * FROM rt0, vt0, vt1, t0 WHERE (((t0.c75)-(t0.c1)) COLLATE RTRIM) ORDER BY (~ (((vt1.c0) NOT BETWEEN (t0.c1) AND (rt0.c3)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((('-1437379382')IS NOT(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((('-1437379382')IS NOT(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('-1437379382')IS NOT(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((('-1437379382')IS NOT(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('-1437379382')IS NOT(rt0.c2)));
SELECT * FROM rt0, vt1, vt0 WHERE (((vt1.c0 IN (rt0.c2, vt1.c0)) IN ())) ORDER BY (((((vt0.c0))<=((rt0.c2))))>(((rt0.c0)>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN (rt0.c2, vt1.c0)) IN ())) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((((vt0.c0))<=((rt0.c2))))>(((rt0.c0)>(rt0.c2)))));
SELECT * FROM rt0, vt1, vt0 WHERE (((vt1.c0 IN (rt0.c2, vt1.c0)) IN ())) ORDER BY (((((vt0.c0))<=((rt0.c2))))>(((rt0.c0)>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN (rt0.c2, vt1.c0)) IN ())) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((((vt0.c0))<=((rt0.c2))))>(((rt0.c0)>(rt0.c2)))));
SELECT * FROM rt0, vt1, vt0 WHERE (((vt1.c0 IN (rt0.c2, vt1.c0)) IN ())) ORDER BY (((((vt0.c0))<=((rt0.c2))))>(((rt0.c0)>(rt0.c2))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CAST(((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CAST(((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CAST(((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))>=(rt0.c3))) ORDER BY ((CASE rt0.c0  WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN x'' WHEN rt0.c2 THEN rt0.c3 ELSE '0.5014178168498981' END) IS TRUE), ((((rt0.c1)*(rt0.c3)))=(((rt0.c0)/(rt0.c2)))) ASC  NULLS FIRST, CAST((~ (rt0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT))>=(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN x'' WHEN rt0.c2 THEN rt0.c3 ELSE '0.5014178168498981' END) IS TRUE), ((((rt0.c1)*(rt0.c3)))==(((rt0.c0)/(rt0.c2)))) ASC  NULLS FIRST, CAST((~ (rt0.c0)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))>=(rt0.c3))) ORDER BY ((CASE rt0.c0  WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN x'' WHEN rt0.c2 THEN rt0.c3 ELSE '0.5014178168498981' END) IS TRUE), ((((rt0.c1)*(rt0.c3)))=(((rt0.c0)/(rt0.c2)))) ASC  NULLS FIRST, CAST((~ (rt0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT))>=(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN x'' WHEN rt0.c2 THEN rt0.c3 ELSE '0.5014178168498981' END) IS TRUE), ((((rt0.c1)*(rt0.c3)))==(((rt0.c0)/(rt0.c2)))) ASC  NULLS FIRST, CAST((~ (rt0.c0)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))>=(rt0.c3))) ORDER BY ((CASE rt0.c0  WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN x'' WHEN rt0.c2 THEN rt0.c3 ELSE '0.5014178168498981' END) IS TRUE), ((((rt0.c1)*(rt0.c3)))=(((rt0.c0)/(rt0.c2)))) ASC  NULLS FIRST, CAST((~ (rt0.c0)) AS TEXT)  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN vt1 ON (((t0.c75)) NOT BETWEEN ((highlight(t0.c75, vt1.c0, t0.c2, t0.c1))) AND ((((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))) WHERE ((NOT ((((t0.c75))<((vt1.c0)))))) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c7)) AND ((0.1525575104202358)))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c75))<((vt1.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((t0.c75)) NOT BETWEEN ((highlight(t0.c75, vt1.c0, t0.c2, t0.c1))) AND ((((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c7)) AND ((0.1525575104202358)))) IS TRUE) DESC);
SELECT ALL * FROM t0 CROSS JOIN vt1 ON (((t0.c75)) NOT BETWEEN ((highlight(t0.c75, vt1.c0, t0.c2, t0.c1))) AND ((((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))) WHERE ((NOT ((((t0.c75))<((vt1.c0)))))) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c7)) AND ((0.1525575104202358)))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c75))<((vt1.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((t0.c75)) NOT BETWEEN ((highlight(t0.c75, vt1.c0, t0.c2, t0.c1))) AND ((((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c7)) AND ((0.1525575104202358)))) IS TRUE) DESC);
SELECT ALL * FROM t0 CROSS JOIN vt1 ON (((t0.c75)) NOT BETWEEN ((highlight(t0.c75, vt1.c0, t0.c2, t0.c1))) AND ((((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))) WHERE ((NOT ((((t0.c75))<((vt1.c0)))))) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c7)) AND ((0.1525575104202358)))) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT ALL * FROM t0, rt0, vt1 WHERE ((((((vt1.c0, t0.c7, t0.c1)) BETWEEN ((t0.c1, rt0.c0, t0.c0)) AND ((vt1.c0, rt0.c0, '	/_	6[肸'))))/(ABS(t0.c2)))) ORDER BY ((((0.7403034306072)>=(rt0.c1)))||((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, t0.c7, t0.c1)) BETWEEN ((t0.c1, rt0.c0, t0.c0)) AND ((vt1.c0, rt0.c0, '	/_	6[肸'))))/(ABS(t0.c2)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((0.7403034306072)>=(rt0.c1)))||((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC);
SELECT ALL * FROM t0, rt0, vt1 WHERE ((((((vt1.c0, t0.c7, t0.c1)) BETWEEN ((t0.c1, rt0.c0, t0.c0)) AND ((vt1.c0, rt0.c0, '	/_	6[肸'))))/(ABS(t0.c2)))) ORDER BY ((((0.7403034306072)>=(rt0.c1)))||((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, t0.c7, t0.c1)) BETWEEN ((t0.c1, rt0.c0, t0.c0)) AND ((vt1.c0, rt0.c0, '	/_	6[肸'))))/(ABS(t0.c2)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((0.7403034306072)>=(rt0.c1)))||((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC);
SELECT ALL * FROM t0, rt0, vt1 WHERE ((((((vt1.c0, t0.c7, t0.c1)) BETWEEN ((t0.c1, rt0.c0, t0.c0)) AND ((vt1.c0, rt0.c0, '	/_	6[肸'))))/(ABS(t0.c2)))) ORDER BY ((((0.7403034306072)>=(rt0.c1)))||((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c0)==(t0.c75))  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c1)%(t0.c1)) WHEN (t0.c0 IN ()) THEN t0.c1 WHEN (((7.49238635E8, t0.c0, t0.c75, t0.c0, t0.c2))>=((t0.c2, t0.c0, t0.c7, t0.c7, t0.c0))) THEN (~ (t0.c75)) ELSE ((t0.c2) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)=(t0.c75))  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c1)%(t0.c1)) WHEN (t0.c0 IN ()) THEN t0.c1 WHEN (((7.49238635E8, t0.c0, t0.c75, t0.c0, t0.c2))>=((t0.c2, t0.c0, t0.c7, t0.c7, t0.c0))) THEN (~ (t0.c75)) ELSE ((t0.c2) IS FALSE) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c0)==(t0.c75))  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c1)%(t0.c1)) WHEN (t0.c0 IN ()) THEN t0.c1 WHEN (((7.49238635E8, t0.c0, t0.c75, t0.c0, t0.c2))>=((t0.c2, t0.c0, t0.c7, t0.c7, t0.c0))) THEN (~ (t0.c75)) ELSE ((t0.c2) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)=(t0.c75))  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c1)%(t0.c1)) WHEN (t0.c0 IN ()) THEN t0.c1 WHEN (((7.49238635E8, t0.c0, t0.c75, t0.c0, t0.c2))>=((t0.c2, t0.c0, t0.c7, t0.c7, t0.c0))) THEN (~ (t0.c75)) ELSE ((t0.c2) IS FALSE) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c0)==(t0.c75))  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c1)%(t0.c1)) WHEN (t0.c0 IN ()) THEN t0.c1 WHEN (((7.49238635E8, t0.c0, t0.c75, t0.c0, t0.c2))>=((t0.c2, t0.c0, t0.c7, t0.c7, t0.c0))) THEN (~ (t0.c75)) ELSE ((t0.c2) IS FALSE) END);
SELECT COUNT(*) FROM t0, rt0 WHERE ((CAST(x'981d' AS NUMERIC) IN ())) ORDER BY t0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(x'981d' AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((CAST(x'981d' AS NUMERIC) IN ())) ORDER BY t0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(x'981d' AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((CAST(x'981d' AS NUMERIC) IN ())) ORDER BY t0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN vt0.c0 THEN (NOT (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN (NOT (t0.c0)) END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN vt0.c0 THEN (NOT (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN (NOT (t0.c0)) END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN vt0.c0 THEN (NOT (t0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN vt1 ON '25674345' LEFT OUTER JOIN t0 ON (((rt0.c0 IN ()))GLOB(((rt0.c0) NOT BETWEEN (t0.c7) AND (rt0.c2)))) WHERE (((~ (t0.c2)) IN ())) ORDER BY (rt0.c0 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ALL ((((~ (t0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0 INNER JOIN vt1 ON '25674345' LEFT OUTER JOIN t0 ON (((rt0.c0 IN ()))GLOB(((rt0.c0) NOT BETWEEN (t0.c7) AND (rt0.c2)))) ORDER BY (rt0.c0 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN vt1 ON '25674345' LEFT OUTER JOIN t0 ON (((rt0.c0 IN ()))GLOB(((rt0.c0) NOT BETWEEN (t0.c7) AND (rt0.c2)))) WHERE (((~ (t0.c2)) IN ())) ORDER BY (rt0.c0 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ALL ((((~ (t0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0 INNER JOIN vt1 ON '25674345' LEFT OUTER JOIN t0 ON (((rt0.c0 IN ()))GLOB(((rt0.c0) NOT BETWEEN (t0.c7) AND (rt0.c2)))) ORDER BY (rt0.c0 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN vt1 ON '25674345' LEFT OUTER JOIN t0 ON (((rt0.c0 IN ()))GLOB(((rt0.c0) NOT BETWEEN (t0.c7) AND (rt0.c2)))) WHERE (((~ (t0.c2)) IN ())) ORDER BY (rt0.c0 COLLATE BINARY IN ());
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3)AND(rt0.c3))) NOT NULL)) ORDER BY CASE WHEN (((('a_E#.>')AND(rt0.c1)))AND(vt0.c0)) THEN SQLITE_COMPILEOPTION_USED(x'f71cdfb9') END  NULLS FIRST, CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (((('a_E#.>')AND(rt0.c1)))AND(vt0.c0)) THEN SQLITE_COMPILEOPTION_USED(x'f71cdfb9') END  NULLS FIRST, CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END COLLATE NOCASE);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3)AND(rt0.c3))) NOT NULL)) ORDER BY CASE WHEN (((('a_E#.>')AND(rt0.c1)))AND(vt0.c0)) THEN SQLITE_COMPILEOPTION_USED(x'f71cdfb9') END  NULLS FIRST, CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (((('a_E#.>')AND(rt0.c1)))AND(vt0.c0)) THEN SQLITE_COMPILEOPTION_USED(x'f71cdfb9') END  NULLS FIRST, CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END COLLATE NOCASE);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3)AND(rt0.c3))) NOT NULL)) ORDER BY CASE WHEN (((('a_E#.>')AND(rt0.c1)))AND(vt0.c0)) THEN SQLITE_COMPILEOPTION_USED(x'f71cdfb9') END  NULLS FIRST, CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((-1382983099) BETWEEN (t0.c2) AND (t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((-1382983099) BETWEEN (t0.c2) AND (t0.c2)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((-1382983099) BETWEEN (t0.c2) AND (t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((-1382983099) BETWEEN (t0.c2) AND (t0.c2)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((-1382983099) BETWEEN (t0.c2) AND (t0.c2)) IN ()));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN ()))|(t0.c1)) WHERE (rt0.c2) ORDER BY (((t0.c7 IN (t0.c0)))<>(((rt0.c2) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN ()))|(t0.c1)) ORDER BY (((t0.c7 IN (t0.c0)))<>(((rt0.c2) IS FALSE))) DESC);
SELECT * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN ()))|(t0.c1)) WHERE (rt0.c2) ORDER BY (((t0.c7 IN (t0.c0)))<>(((rt0.c2) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN ()))|(t0.c1)) ORDER BY (((t0.c7 IN (t0.c0)))<>(((rt0.c2) IS FALSE))) DESC);
SELECT * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN ()))|(t0.c1)) WHERE (rt0.c2) ORDER BY (((t0.c7 IN (t0.c0)))<>(((rt0.c2) IS FALSE))) DESC;
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (vt1.c0) AND ('-181203691')) COLLATE BINARY WHERE ((((+ (vt0.c0))) ISNULL)) ORDER BY x'38f42820'  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN (vt0.c0)) ASC, (((vt1.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)) AND (('-2133919841')));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (vt1.c0) AND ('-181203691')) COLLATE BINARY ORDER BY x'38f42820'  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN (vt0.c0)) ASC, (((vt1.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)) AND (('-2133919841'))));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (vt1.c0) AND ('-181203691')) COLLATE BINARY WHERE ((((+ (vt0.c0))) ISNULL)) ORDER BY x'38f42820'  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN (vt0.c0)) ASC, (((vt1.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)) AND (('-2133919841')));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (vt1.c0) AND ('-181203691')) COLLATE BINARY ORDER BY x'38f42820'  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN (vt0.c0)) ASC, (((vt1.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)) AND (('-2133919841'))));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (vt1.c0) AND ('-181203691')) COLLATE BINARY WHERE ((((+ (vt0.c0))) ISNULL)) ORDER BY x'38f42820'  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN (vt0.c0)) ASC, (((vt1.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)) AND (('-2133919841')));
SELECT * FROM vt1 WHERE (CAST('932963275' AS INTEGER) COLLATE BINARY) ORDER BY CAST(((vt1.c0)%(vt1.c0)) AS NUMERIC), ((((vt1.c0)+(vt1.c0))) NOT BETWEEN (RTRIM(vt1.c0)) AND ((vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST('932963275' AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)%(vt1.c0)) AS NUMERIC), ((((vt1.c0)+(vt1.c0))) NOT BETWEEN (RTRIM(vt1.c0)) AND ((vt1.c0 IN ()))) ASC);
SELECT * FROM vt1 WHERE (CAST('932963275' AS INTEGER) COLLATE BINARY) ORDER BY CAST(((vt1.c0)%(vt1.c0)) AS NUMERIC), ((((vt1.c0)+(vt1.c0))) NOT BETWEEN (RTRIM(vt1.c0)) AND ((vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST('932963275' AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)%(vt1.c0)) AS NUMERIC), ((((vt1.c0)+(vt1.c0))) NOT BETWEEN (RTRIM(vt1.c0)) AND ((vt1.c0 IN ()))) ASC);
SELECT * FROM vt1 WHERE (CAST('932963275' AS INTEGER) COLLATE BINARY) ORDER BY CAST(((vt1.c0)%(vt1.c0)) AS NUMERIC), ((((vt1.c0)+(vt1.c0))) NOT BETWEEN (RTRIM(vt1.c0)) AND ((vt1.c0 IN ()))) ASC;
SELECT ALL * FROM vt1, rt0, vt0 LEFT OUTER JOIN t0 ON (((t0.c1)) BETWEEN (((- ('1014367758')))) AND (((vt0.c0 IN ())))) WHERE ((((((t0.c7)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))) NOTNULL)) ORDER BY CAST(((t0.c1) NOT BETWEEN (t0.c0) AND (rt0.c3)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c7)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, vt0 LEFT OUTER JOIN t0 ON (((t0.c1)) BETWEEN (((- ('1014367758')))) AND (((vt0.c0 IN ())))) ORDER BY CAST(((t0.c1) NOT BETWEEN (t0.c0) AND (rt0.c3)) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 LEFT OUTER JOIN t0 ON (((t0.c1)) BETWEEN (((- ('1014367758')))) AND (((vt0.c0 IN ())))) WHERE ((((((t0.c7)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))) NOTNULL)) ORDER BY CAST(((t0.c1) NOT BETWEEN (t0.c0) AND (rt0.c3)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c7)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, vt0 LEFT OUTER JOIN t0 ON (((t0.c1)) BETWEEN (((- ('1014367758')))) AND (((vt0.c0 IN ())))) ORDER BY CAST(((t0.c1) NOT BETWEEN (t0.c0) AND (rt0.c3)) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 LEFT OUTER JOIN t0 ON (((t0.c1)) BETWEEN (((- ('1014367758')))) AND (((vt0.c0 IN ())))) WHERE ((((((t0.c7)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))) NOTNULL)) ORDER BY CAST(((t0.c1) NOT BETWEEN (t0.c0) AND (rt0.c3)) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE ((NOT (HEX(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (HEX(rt0.c0)))) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE ((NOT (HEX(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (HEX(rt0.c0)))) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE ((NOT (HEX(rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c2) BETWEEN (NULLIF('-985929751', rt0.c0)) AND (((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))) WHERE (rt0.c0) ORDER BY ((((((rt0.c1)>=(rt0.c3)))OR(('oF' IN (rt0.c2)))))AND(0X2f1da3d6)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c2) BETWEEN (NULLIF('-985929751', rt0.c0)) AND (((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))) ORDER BY ((((((rt0.c1)>=(rt0.c3)))OR(('oF' IN (rt0.c2)))))AND(0x2f1da3d6)) ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c2) BETWEEN (NULLIF('-985929751', rt0.c0)) AND (((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))) WHERE (rt0.c0) ORDER BY ((((((rt0.c1)>=(rt0.c3)))OR(('oF' IN (rt0.c2)))))AND(0X2f1da3d6)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c2) BETWEEN (NULLIF('-985929751', rt0.c0)) AND (((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))) ORDER BY ((((((rt0.c1)>=(rt0.c3)))OR(('oF' IN (rt0.c2)))))AND(0x2f1da3d6)) ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c2) BETWEEN (NULLIF('-985929751', rt0.c0)) AND (((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))) WHERE (rt0.c0) ORDER BY ((((((rt0.c1)>=(rt0.c3)))OR(('oF' IN (rt0.c2)))))AND(0X2f1da3d6)) ASC;
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)IS(t0.c75)))OR(((((t0.c7)AND(t0.c75)))AND(t0.c1)))))OR(NULL)) WHERE ((- (json_valid(t0.c75))));
SELECT SUM(count) FROM (SELECT (((- (json_valid(t0.c75)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)IS(t0.c75)))OR(((((t0.c7)AND(t0.c75)))AND(t0.c1)))))OR(NULL)));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)IS(t0.c75)))OR(((((t0.c7)AND(t0.c75)))AND(t0.c1)))))OR(NULL)) WHERE ((- (json_valid(t0.c75))));
SELECT SUM(count) FROM (SELECT (((- (json_valid(t0.c75)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)IS(t0.c75)))OR(((((t0.c7)AND(t0.c75)))AND(t0.c1)))))OR(NULL)));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)IS(t0.c75)))OR(((((t0.c7)AND(t0.c75)))AND(t0.c1)))))OR(NULL)) WHERE ((- (json_valid(t0.c75))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))/(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))/(vt0.c0))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))/(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))/(vt0.c0))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))/(vt0.c0)));
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(t0.c7 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c7 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(t0.c7 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c7 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(t0.c7 AS REAL) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT ALL * FROM vt0, vt1 INNER JOIN rt0 ON '0.8778820956898741' WHERE (CASE WHEN (((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c2)+(rt0.c0)) ELSE (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c2)+(rt0.c0)) ELSE (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt1.c0))) END) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON '0.8778820956898741');
SELECT ALL * FROM vt0, vt1 INNER JOIN rt0 ON '0.8778820956898741' WHERE (CASE WHEN (((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c2)+(rt0.c0)) ELSE (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c2)+(rt0.c0)) ELSE (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt1.c0))) END) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON '0.8778820956898741');
SELECT ALL * FROM vt0, vt1 INNER JOIN rt0 ON '0.8778820956898741' WHERE (CASE WHEN (((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c2)+(rt0.c0)) ELSE (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt1.c0))) END);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (t0.c2) ORDER BY (((rt0.c0 IN ())) NOT NULL) ASC  NULLS FIRST, ((vt0.c0 COLLATE RTRIM) BETWEEN (-1086698039) AND (rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (((rt0.c0 IN ())) NOT NULL) ASC  NULLS FIRST, ((vt0.c0 COLLATE RTRIM) BETWEEN (-1086698039) AND (rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (t0.c2) ORDER BY (((rt0.c0 IN ())) NOT NULL) ASC  NULLS FIRST, ((vt0.c0 COLLATE RTRIM) BETWEEN (-1086698039) AND (rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (((rt0.c0 IN ())) NOT NULL) ASC  NULLS FIRST, ((vt0.c0 COLLATE RTRIM) BETWEEN (-1086698039) AND (rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (t0.c2) ORDER BY (((rt0.c0 IN ())) NOT NULL) ASC  NULLS FIRST, ((vt0.c0 COLLATE RTRIM) BETWEEN (-1086698039) AND (rt0.c0))  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0 WHERE (x'a449');
SELECT SUM(count) FROM (SELECT ((x'a449') IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (x'a449');
SELECT SUM(count) FROM (SELECT ((x'a449') IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (x'a449');
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (~ (((rt0.c0)*(rt0.c1)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (~ (((rt0.c0)*(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (~ (((rt0.c0)*(rt0.c1)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (~ (((rt0.c0)*(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (~ (((rt0.c0)*(rt0.c1)))) WHERE (x'');
SELECT * FROM rt0, vt1 WHERE (IFNULL(rt0.c3 COLLATE NOCASE, (rt0.c1 IN (rt0.c2)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((((((((rt0.c0)OR(x'')))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))) AND ((CAST(rt0.c2 AS INTEGER))))  NULLS FIRST, ((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c1)))OR(rt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c3 COLLATE NOCASE, (rt0.c1 IN (rt0.c2)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2)) NOT BETWEEN ((((((((((rt0.c0)OR(x'')))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))) AND ((CAST(rt0.c2 AS INTEGER))))  NULLS FIRST, ((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c1)))OR(rt0.c0)) COLLATE BINARY);
SELECT * FROM rt0, vt1 WHERE (IFNULL(rt0.c3 COLLATE NOCASE, (rt0.c1 IN (rt0.c2)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((((((((rt0.c0)OR(x'')))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))) AND ((CAST(rt0.c2 AS INTEGER))))  NULLS FIRST, ((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c1)))OR(rt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c3 COLLATE NOCASE, (rt0.c1 IN (rt0.c2)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2)) NOT BETWEEN ((((((((((rt0.c0)OR(x'')))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))) AND ((CAST(rt0.c2 AS INTEGER))))  NULLS FIRST, ((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c1)))OR(rt0.c0)) COLLATE BINARY);
SELECT * FROM rt0, vt1 WHERE (IFNULL(rt0.c3 COLLATE NOCASE, (rt0.c1 IN (rt0.c2)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((((((((rt0.c0)OR(x'')))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))) AND ((CAST(rt0.c2 AS INTEGER))))  NULLS FIRST, ((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c1)))OR(rt0.c0)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (- (t0.c7)) COLLATE RTRIM LEFT OUTER JOIN rt0 ON CAST(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)) AS REAL) WHERE (GLOB(t0.c0, ((rt0.c3)<(t0.c0))));
SELECT SUM(count) FROM (SELECT ((GLOB(t0.c0, ((rt0.c3)<(t0.c0)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (- (t0.c7)) COLLATE RTRIM LEFT OUTER JOIN rt0 ON CAST(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)) AS REAL));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (- (t0.c7)) COLLATE RTRIM LEFT OUTER JOIN rt0 ON CAST(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)) AS REAL) WHERE (GLOB(t0.c0, ((rt0.c3)<(t0.c0))));
SELECT SUM(count) FROM (SELECT ((GLOB(t0.c0, ((rt0.c3)<(t0.c0)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (- (t0.c7)) COLLATE RTRIM LEFT OUTER JOIN rt0 ON CAST(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)) AS REAL));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (- (t0.c7)) COLLATE RTRIM LEFT OUTER JOIN rt0 ON CAST(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)) AS REAL) WHERE (GLOB(t0.c0, ((rt0.c3)<(t0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN (vt0.c0)));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((t0.c7)<=(NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c7)<=(NULL))) IS FALSE)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((t0.c7)<=(NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c7)<=(NULL))) IS FALSE)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((t0.c7)<=(NULL))) IS FALSE));
SELECT ALL * FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN ((((rt0.c2, '-1756422831', rt0.c2, rt0.c1, rt0.c2))>=((rt0.c0, rt0.c3, rt0.c0, rt0.c3, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN ((((rt0.c2, '-1756422831', rt0.c2, rt0.c1, rt0.c2))>=((rt0.c0, rt0.c3, rt0.c0, rt0.c3, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN ((((rt0.c2, '-1756422831', rt0.c2, rt0.c1, rt0.c2))>=((rt0.c0, rt0.c3, rt0.c0, rt0.c3, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN ((((rt0.c2, '-1756422831', rt0.c2, rt0.c1, rt0.c2))>=((rt0.c0, rt0.c3, rt0.c0, rt0.c3, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN ((((rt0.c2, '-1756422831', rt0.c2, rt0.c1, rt0.c2))>=((rt0.c0, rt0.c3, rt0.c0, rt0.c3, rt0.c2))))));
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, vt1, t0);
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, vt1, t0);
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE CASE WHEN vt0.c0 THEN -337851579 END  WHEN ((vt0.c0)OR(vt0.c0)) THEN 0.7951064029903667 ELSE ((rt0.c1)|(rt0.c1)) END) ORDER BY (((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) IN (rt0.c1, NULL));
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN -337851579 END  WHEN ((vt0.c0)OR(vt0.c0)) THEN 0.7951064029903667 ELSE ((rt0.c1)|(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) IN (rt0.c1, NULL)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE CASE WHEN vt0.c0 THEN -337851579 END  WHEN ((vt0.c0)OR(vt0.c0)) THEN 0.7951064029903667 ELSE ((rt0.c1)|(rt0.c1)) END) ORDER BY (((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) IN (rt0.c1, NULL));
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN -337851579 END  WHEN ((vt0.c0)OR(vt0.c0)) THEN 0.7951064029903667 ELSE ((rt0.c1)|(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) IN (rt0.c1, NULL)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE CASE WHEN vt0.c0 THEN -337851579 END  WHEN ((vt0.c0)OR(vt0.c0)) THEN 0.7951064029903667 ELSE ((rt0.c1)|(rt0.c1)) END) ORDER BY (((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) IN (rt0.c1, NULL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('D5')) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('D5')) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('D5')) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('D5')) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('D5')) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((((((rt0.c2, rt0.c2, vt1.c0))<>((rt0.c1, rt0.c0, rt0.c3)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c2, vt1.c0))<>((rt0.c1, rt0.c0, rt0.c3)))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((((((rt0.c2, rt0.c2, vt1.c0))<>((rt0.c1, rt0.c0, rt0.c3)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c2, vt1.c0))<>((rt0.c1, rt0.c0, rt0.c3)))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((((((rt0.c2, rt0.c2, vt1.c0))<>((rt0.c1, rt0.c0, rt0.c3)))) NOT NULL));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END IN ())) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END IN ())) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END IN ())) ORDER BY x'' DESC;
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE ((((((((((((rt0.c0, t0.c2, rt0.c2)) BETWEEN ((t0.c7, vt0.c0, t0.c7)) AND ((t0.c2, vt0.c0, '1532545969'))))OR(CASE rt0.c3  WHEN t0.c1 THEN vt0.c0 END)))OR('1210475611')))AND(CAST(t0.c7 AS NUMERIC))))AND(((((rt0.c2)OR(t0.c1)))AND(t0.c75)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c0, t0.c2, rt0.c2)) BETWEEN ((t0.c7, vt0.c0, t0.c7)) AND ((t0.c2, vt0.c0, '1532545969'))))OR(CASE rt0.c3  WHEN t0.c1 THEN vt0.c0 END)))OR('1210475611')))AND(CAST(t0.c7 AS NUMERIC))))AND(((((rt0.c2)OR(t0.c1)))AND(t0.c75))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE ((((((((((((rt0.c0, t0.c2, rt0.c2)) BETWEEN ((t0.c7, vt0.c0, t0.c7)) AND ((t0.c2, vt0.c0, '1532545969'))))OR(CASE rt0.c3  WHEN t0.c1 THEN vt0.c0 END)))OR('1210475611')))AND(CAST(t0.c7 AS NUMERIC))))AND(((((rt0.c2)OR(t0.c1)))AND(t0.c75)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c0, t0.c2, rt0.c2)) BETWEEN ((t0.c7, vt0.c0, t0.c7)) AND ((t0.c2, vt0.c0, '1532545969'))))OR(CASE rt0.c3  WHEN t0.c1 THEN vt0.c0 END)))OR('1210475611')))AND(CAST(t0.c7 AS NUMERIC))))AND(((((rt0.c2)OR(t0.c1)))AND(t0.c75))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE ((((((((((((rt0.c0, t0.c2, rt0.c2)) BETWEEN ((t0.c7, vt0.c0, t0.c7)) AND ((t0.c2, vt0.c0, '1532545969'))))OR(CASE rt0.c3  WHEN t0.c1 THEN vt0.c0 END)))OR('1210475611')))AND(CAST(t0.c7 AS NUMERIC))))AND(((((rt0.c2)OR(t0.c1)))AND(t0.c75)))));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END) IS FALSE) WHERE (CAST((((rt0.c0, rt0.c2, rt0.c0))<>((1403045137, rt0.c2, rt0.c0))) AS NUMERIC)) ORDER BY ((rt0.c1 COLLATE NOCASE)/(((rt0.c3)||(rt0.c1)))) DESC  NULLS LAST, DATETIME(((((rt0.c1)OR(vt1.c0)))OR(rt0.c0)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)), vt1.c0, ABS(DISTINCT rt0.c2), ((rt0.c2)IS NOT(vt1.c0)), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c2)||(rt0.c1)), CAST(rt0.c1 AS TEXT), ((vt1.c0) ISNULL)) DESC, rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0, rt0.c2, rt0.c0))<>((1403045137, rt0.c2, rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END) IS FALSE) ORDER BY ((rt0.c1 COLLATE NOCASE)/(((rt0.c3)||(rt0.c1)))) DESC  NULLS LAST, DATETIME(((((rt0.c1)OR(vt1.c0)))OR(rt0.c0)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)), vt1.c0, ABS(DISTINCT rt0.c2), ((rt0.c2)IS NOT(vt1.c0)), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c2)||(rt0.c1)), CAST(rt0.c1 AS TEXT), ((vt1.c0) ISNULL)) DESC, rt0.c0 ASC  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END) IS FALSE) WHERE (CAST((((rt0.c0, rt0.c2, rt0.c0))<>((1403045137, rt0.c2, rt0.c0))) AS NUMERIC)) ORDER BY ((rt0.c1 COLLATE NOCASE)/(((rt0.c3)||(rt0.c1)))) DESC  NULLS LAST, DATETIME(((((rt0.c1)OR(vt1.c0)))OR(rt0.c0)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)), vt1.c0, ABS(DISTINCT rt0.c2), ((rt0.c2)IS NOT(vt1.c0)), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c2)||(rt0.c1)), CAST(rt0.c1 AS TEXT), ((vt1.c0) ISNULL)) DESC, rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0, rt0.c2, rt0.c0))<>((1403045137, rt0.c2, rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END) IS FALSE) ORDER BY ((rt0.c1 COLLATE NOCASE)/(((rt0.c3)||(rt0.c1)))) DESC  NULLS LAST, DATETIME(((((rt0.c1)OR(vt1.c0)))OR(rt0.c0)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)), vt1.c0, ABS(DISTINCT rt0.c2), ((rt0.c2)IS NOT(vt1.c0)), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c2)||(rt0.c1)), CAST(rt0.c1 AS TEXT), ((vt1.c0) ISNULL)) DESC, rt0.c0 ASC  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END) IS FALSE) WHERE (CAST((((rt0.c0, rt0.c2, rt0.c0))<>((1403045137, rt0.c2, rt0.c0))) AS NUMERIC)) ORDER BY ((rt0.c1 COLLATE NOCASE)/(((rt0.c3)||(rt0.c1)))) DESC  NULLS LAST, DATETIME(((((rt0.c1)OR(vt1.c0)))OR(rt0.c0)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)), vt1.c0, ABS(DISTINCT rt0.c2), ((rt0.c2)IS NOT(vt1.c0)), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c2)||(rt0.c1)), CAST(rt0.c1 AS TEXT), ((vt1.c0) ISNULL)) DESC, rt0.c0 ASC  NULLS LAST;
SELECT * FROM vt1, t0 WHERE ((((vt1.c0)) BETWEEN ((CAST(t0.c2 AS BLOB))) AND ((((t0.c7) NOTNULL))))) ORDER BY CASE ((t0.c7) NOT BETWEEN (t0.c1) AND (t0.c2))  WHEN (((t0.c2)) BETWEEN ((t0.c75)) AND ((t0.c7))) THEN ((t0.c7) IS FALSE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((CAST(t0.c2 AS BLOB))) AND ((((t0.c7) NOTNULL))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE ((t0.c7) NOT BETWEEN (t0.c1) AND (t0.c2))  WHEN (((t0.c2)) BETWEEN ((t0.c75)) AND ((t0.c7))) THEN ((t0.c7) IS FALSE) END ASC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ((((vt1.c0)) BETWEEN ((CAST(t0.c2 AS BLOB))) AND ((((t0.c7) NOTNULL))))) ORDER BY CASE ((t0.c7) NOT BETWEEN (t0.c1) AND (t0.c2))  WHEN (((t0.c2)) BETWEEN ((t0.c75)) AND ((t0.c7))) THEN ((t0.c7) IS FALSE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((CAST(t0.c2 AS BLOB))) AND ((((t0.c7) NOTNULL))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE ((t0.c7) NOT BETWEEN (t0.c1) AND (t0.c2))  WHEN (((t0.c2)) BETWEEN ((t0.c75)) AND ((t0.c7))) THEN ((t0.c7) IS FALSE) END ASC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ((((vt1.c0)) BETWEEN ((CAST(t0.c2 AS BLOB))) AND ((((t0.c7) NOTNULL))))) ORDER BY CASE ((t0.c7) NOT BETWEEN (t0.c1) AND (t0.c2))  WHEN (((t0.c2)) BETWEEN ((t0.c75)) AND ((t0.c7))) THEN ((t0.c7) IS FALSE) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL COLLATE NOCASE);
SELECT * FROM rt0, vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (t0.c0);
SELECT COUNT(*) FROM vt0, t0, rt0, vt1 WHERE ((((CHAR(vt1.c0)))>((((((t0.c0)OR(t0.c1)))AND(t0.c1)))))) ORDER BY t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CHAR(vt1.c0)))>((((((t0.c0)OR(t0.c1)))AND(t0.c1)))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY t0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0, vt1 WHERE ((((CHAR(vt1.c0)))>((((((t0.c0)OR(t0.c1)))AND(t0.c1)))))) ORDER BY t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CHAR(vt1.c0)))>((((((t0.c0)OR(t0.c1)))AND(t0.c1)))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY t0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0, vt1 WHERE ((((CHAR(vt1.c0)))>((((((t0.c0)OR(t0.c1)))AND(t0.c1)))))) ORDER BY t0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (((('1152877506'))>((((t0.c1)GLOB(x'')))))) ORDER BY (~ (((t0.c75)AND(t0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('1152877506'))>((((t0.c1)GLOB(x'')))))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY (~ (((t0.c75)AND(t0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (((('1152877506'))>((((t0.c1)GLOB(x'')))))) ORDER BY (~ (((t0.c75)AND(t0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('1152877506'))>((((t0.c1)GLOB(x'')))))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY (~ (((t0.c75)AND(t0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (((('1152877506'))>((((t0.c1)GLOB(x'')))))) ORDER BY (~ (((t0.c75)AND(t0.c1)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (ABS(CAST(rt0.c3 AS REAL))) ORDER BY rt0.c1 DESC  NULLS FIRST, ((((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)OR(json_patch(rt0.c1, rt0.c3))))AND(rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST, RTRIM(rt0.c1) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(rt0.c3 AS REAL))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS FIRST, ((((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)OR(json_patch(rt0.c1, rt0.c3))))AND(rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST, RTRIM(rt0.c1) COLLATE NOCASE ASC);
SELECT * FROM rt0 WHERE (ABS(CAST(rt0.c3 AS REAL))) ORDER BY rt0.c1 DESC  NULLS FIRST, ((((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)OR(json_patch(rt0.c1, rt0.c3))))AND(rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST, RTRIM(rt0.c1) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(rt0.c3 AS REAL))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS FIRST, ((((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)OR(json_patch(rt0.c1, rt0.c3))))AND(rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST, RTRIM(rt0.c1) COLLATE NOCASE ASC);
SELECT * FROM rt0 WHERE (ABS(CAST(rt0.c3 AS REAL))) ORDER BY rt0.c1 DESC  NULLS FIRST, ((((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)OR(json_patch(rt0.c1, rt0.c3))))AND(rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST, RTRIM(rt0.c1) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (t0.c7);
SELECT SUM(count) FROM (SELECT ALL ((t0.c7) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (t0.c7);
SELECT SUM(count) FROM (SELECT ALL ((t0.c7) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (t0.c7);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY ((((((((((((t0.c75)OR(t0.c7)))OR(t0.c2)))AND(t0.c75)))OR(t0.c1)))OR(((t0.c1)AND(t0.c7)))))AND(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((((((((((t0.c75)OR(t0.c7)))OR(t0.c2)))AND(t0.c75)))OR(t0.c1)))OR(((t0.c1)AND(t0.c7)))))AND(x'')) ASC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY ((((((((((((t0.c75)OR(t0.c7)))OR(t0.c2)))AND(t0.c75)))OR(t0.c1)))OR(((t0.c1)AND(t0.c7)))))AND(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((((((((((t0.c75)OR(t0.c7)))OR(t0.c2)))AND(t0.c75)))OR(t0.c1)))OR(((t0.c1)AND(t0.c7)))))AND(x'')) ASC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY ((((((((((((t0.c75)OR(t0.c7)))OR(t0.c2)))AND(t0.c75)))OR(t0.c1)))OR(((t0.c1)AND(t0.c7)))))AND(x'')) ASC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((rt0.c2, rt0.c3, t0.c2, t0.c1, t0.c0)) NOT BETWEEN ((rt0.c3, t0.c75, 361094791, vt1.c0, vt0.c0)) AND ((t0.c75, rt0.c1, t0.c7, t0.c2, t0.c1))))|(((t0.c0)-('we{crU,d')))) LEFT OUTER JOIN t0 ON CAST(LOWER(DISTINCT t0.c0) AS REAL) FULL OUTER JOIN vt1 ON NULLIF(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN t0.c7 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN t0.c2 ELSE t0.c0 END, ((t0.c7) NOTNULL)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((rt0.c2, rt0.c3, t0.c2, t0.c1, t0.c0)) NOT BETWEEN ((rt0.c3, t0.c75, 361094791, vt1.c0, vt0.c0)) AND ((t0.c75, rt0.c1, t0.c7, t0.c2, t0.c1))))|(((t0.c0)-('we{crU,d')))) LEFT OUTER JOIN t0 ON CAST(LOWER(DISTINCT t0.c0) AS REAL) FULL OUTER JOIN vt1 ON NULLIF(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN t0.c7 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN t0.c2 ELSE t0.c0 END, ((t0.c7) NOTNULL)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((rt0.c2, rt0.c3, t0.c2, t0.c1, t0.c0)) NOT BETWEEN ((rt0.c3, t0.c75, 361094791, vt1.c0, vt0.c0)) AND ((t0.c75, rt0.c1, t0.c7, t0.c2, t0.c1))))|(((t0.c0)-('we{crU,d')))) LEFT OUTER JOIN t0 ON CAST(LOWER(DISTINCT t0.c0) AS REAL) FULL OUTER JOIN vt1 ON NULLIF(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN t0.c7 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN t0.c2 ELSE t0.c0 END, ((t0.c7) NOTNULL)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((rt0.c2, rt0.c3, t0.c2, t0.c1, t0.c0)) NOT BETWEEN ((rt0.c3, t0.c75, 361094791, vt1.c0, vt0.c0)) AND ((t0.c75, rt0.c1, t0.c7, t0.c2, t0.c1))))|(((t0.c0)-('we{crU,d')))) LEFT OUTER JOIN t0 ON CAST(LOWER(DISTINCT t0.c0) AS REAL) FULL OUTER JOIN vt1 ON NULLIF(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN t0.c7 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN t0.c2 ELSE t0.c0 END, ((t0.c7) NOTNULL)));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON CASE WHEN (t0.c7 IN ()) THEN CHANGES() ELSE 0.988517747812692 COLLATE BINARY END RIGHT OUTER JOIN vt1 ON (((vt0.c0 IN (t0.c2))) NOT NULL) WHERE (((t0.c75)*(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c75)*(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON CASE WHEN (t0.c7 IN ()) THEN CHANGES() ELSE 0.988517747812692 COLLATE BINARY END RIGHT OUTER JOIN vt1 ON (((vt0.c0 IN (t0.c2))) NOT NULL));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON CASE WHEN (t0.c7 IN ()) THEN CHANGES() ELSE 0.988517747812692 COLLATE BINARY END RIGHT OUTER JOIN vt1 ON (((vt0.c0 IN (t0.c2))) NOT NULL) WHERE (((t0.c75)*(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c75)*(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON CASE WHEN (t0.c7 IN ()) THEN CHANGES() ELSE 0.988517747812692 COLLATE BINARY END RIGHT OUTER JOIN vt1 ON (((vt0.c0 IN (t0.c2))) NOT NULL));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON CASE WHEN (t0.c7 IN ()) THEN CHANGES() ELSE 0.988517747812692 COLLATE BINARY END RIGHT OUTER JOIN vt1 ON (((vt0.c0 IN (t0.c2))) NOT NULL) WHERE (((t0.c75)*(t0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2))) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)+(vt0.c0))  WHEN NULL THEN (NOT (vt0.c0)) ELSE ((0.6738494539047383)&(vt0.c0)) END) ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)+(vt0.c0))  WHEN NULL THEN (NOT (vt0.c0)) ELSE ((0.6738494539047383)&(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)+(vt0.c0))  WHEN NULL THEN (NOT (vt0.c0)) ELSE ((0.6738494539047383)&(vt0.c0)) END) ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)+(vt0.c0))  WHEN NULL THEN (NOT (vt0.c0)) ELSE ((0.6738494539047383)&(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)+(vt0.c0))  WHEN NULL THEN (NOT (vt0.c0)) ELSE ((0.6738494539047383)&(vt0.c0)) END) ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END DESC;
SELECT * FROM rt0, vt1 WHERE (((- (rt0.c3)) IN (((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), ((((((((((((vt1.c0)OR(NULL)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3)))AND(vt1.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c3)) IN (((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), ((((((((((((vt1.c0)OR(NULL)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3)))AND(vt1.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((- (rt0.c3)) IN (((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), ((((((((((((vt1.c0)OR(NULL)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3)))AND(vt1.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c3)) IN (((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), ((((((((((((vt1.c0)OR(NULL)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3)))AND(vt1.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((- (rt0.c3)) IN (((NULL) BETWEEN (vt1.c0) AND (vt1.c0)), ((((((((((((vt1.c0)OR(NULL)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3)))AND(vt1.c0)))OR(rt0.c0)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c3) ORDER BY '-756099142';
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt1, rt0 ORDER BY '-756099142');
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c3) ORDER BY '-756099142';
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt1, rt0 ORDER BY '-756099142');
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c3) ORDER BY '-756099142';
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((t0.c2) NOT BETWEEN (0.31379298219838936) AND (t0.c7)) COLLATE RTRIM) ORDER BY 0.5179467198099044  NULLS FIRST, ((t0.c1)+(t0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOT BETWEEN (0.31379298219838936) AND (t0.c7)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY 0.5179467198099044  NULLS FIRST, ((t0.c1)+(t0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((t0.c2) NOT BETWEEN (0.31379298219838936) AND (t0.c7)) COLLATE RTRIM) ORDER BY 0.5179467198099044  NULLS FIRST, ((t0.c1)+(t0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOT BETWEEN (0.31379298219838936) AND (t0.c7)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY 0.5179467198099044  NULLS FIRST, ((t0.c1)+(t0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((t0.c2) NOT BETWEEN (0.31379298219838936) AND (t0.c7)) COLLATE RTRIM) ORDER BY 0.5179467198099044  NULLS FIRST, ((t0.c1)+(t0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN (((+ (rt0.c0)))) AND ((CASE rt0.c2  WHEN rt0.c3 THEN NULL ELSE rt0.c2 END))) WHERE ((~ (rt0.c1 COLLATE NOCASE))) ORDER BY (+ (CAST(rt0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN (((+ (rt0.c0)))) AND ((CASE rt0.c2  WHEN rt0.c3 THEN NULL ELSE rt0.c2 END))) ORDER BY (+ (CAST(rt0.c2 AS REAL))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN (((+ (rt0.c0)))) AND ((CASE rt0.c2  WHEN rt0.c3 THEN NULL ELSE rt0.c2 END))) WHERE ((~ (rt0.c1 COLLATE NOCASE))) ORDER BY (+ (CAST(rt0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN (((+ (rt0.c0)))) AND ((CASE rt0.c2  WHEN rt0.c3 THEN NULL ELSE rt0.c2 END))) ORDER BY (+ (CAST(rt0.c2 AS REAL))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN (((+ (rt0.c0)))) AND ((CASE rt0.c2  WHEN rt0.c3 THEN NULL ELSE rt0.c2 END))) WHERE ((~ (rt0.c1 COLLATE NOCASE))) ORDER BY (+ (CAST(rt0.c2 AS REAL)));
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c75))<=((t0.c0)))))!=((((t0.c75)!=(t0.c1)))))) ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c75))<=((t0.c0)))))<>((((t0.c75)!=(t0.c1)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c75))<=((t0.c0)))))!=((((t0.c75)!=(t0.c1)))))) ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c75))<=((t0.c0)))))<>((((t0.c75)!=(t0.c1)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c75))<=((t0.c0)))))!=((((t0.c75)!=(t0.c1)))))) ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 NOT INDEXED, t0 WHERE (((CAST(t0.c2 AS TEXT)) NOT BETWEEN (json_extract(t0.c1, vt1.c0)) AND (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS TEXT)) NOT BETWEEN (json_extract(t0.c1, vt1.c0)) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 NOT INDEXED, t0 WHERE (((CAST(t0.c2 AS TEXT)) NOT BETWEEN (json_extract(t0.c1, vt1.c0)) AND (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS TEXT)) NOT BETWEEN (json_extract(t0.c1, vt1.c0)) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 NOT INDEXED, t0 WHERE (((CAST(t0.c2 AS TEXT)) NOT BETWEEN (json_extract(t0.c1, vt1.c0)) AND (vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt0 INNER JOIN vt1 ON ((LOWER(DISTINCT rt0.c2))IS(CAST('' AS TEXT))) LEFT OUTER JOIN t0 ON (- (((t0.c1)*(t0.c0)))) INNER JOIN rt0 ON (((vt0.c0 IN ())) IS TRUE) WHERE (CAST((t0.c0 IN ()) AS TEXT)) ORDER BY ((((((t0.c1)AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((t0.c1)IS(rt0.c2))) AND ((+ (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((LOWER(DISTINCT rt0.c2))IS(CAST('' AS TEXT))) LEFT OUTER JOIN t0 ON (- (((t0.c1)*(t0.c0)))) INNER JOIN rt0 ON (((vt0.c0 IN ())) IS TRUE) ORDER BY ((((((t0.c1)AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((t0.c1)IS(rt0.c2))) AND ((+ (rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN vt1 ON ((LOWER(DISTINCT rt0.c2))IS(CAST('' AS TEXT))) LEFT OUTER JOIN t0 ON (- (((t0.c1)*(t0.c0)))) INNER JOIN rt0 ON (((vt0.c0 IN ())) IS TRUE) WHERE (CAST((t0.c0 IN ()) AS TEXT)) ORDER BY ((((((t0.c1)AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((t0.c1)IS(rt0.c2))) AND ((+ (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((LOWER(DISTINCT rt0.c2))IS(CAST('' AS TEXT))) LEFT OUTER JOIN t0 ON (- (((t0.c1)*(t0.c0)))) INNER JOIN rt0 ON (((vt0.c0 IN ())) IS TRUE) ORDER BY ((((((t0.c1)AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((t0.c1)IS(rt0.c2))) AND ((+ (rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN vt1 ON ((LOWER(DISTINCT rt0.c2))IS(CAST('' AS TEXT))) LEFT OUTER JOIN t0 ON (- (((t0.c1)*(t0.c0)))) INNER JOIN rt0 ON (((vt0.c0 IN ())) IS TRUE) WHERE (CAST((t0.c0 IN ()) AS TEXT)) ORDER BY ((((((t0.c1)AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((t0.c1)IS(rt0.c2))) AND ((+ (rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((((('-1798200620')AND(((vt0.c0) IS FALSE))))OR((~ (vt0.c0))))) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('-1798200620')AND(((vt0.c0) IS FALSE))))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((('-1798200620')AND(((vt0.c0) IS FALSE))))OR((~ (vt0.c0))))) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('-1798200620')AND(((vt0.c0) IS FALSE))))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((('-1798200620')AND(((vt0.c0) IS FALSE))))OR((~ (vt0.c0))))) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON (((((+ (vt1.c0)))OR(t0.c0)))AND(TRIM(953077403))) CROSS JOIN rt0 ON CASE WHEN (((t0.c2))==((t0.c7))) THEN CASE t0.c7  WHEN rt0.c3 THEN t0.c7 WHEN t0.c0 THEN rt0.c3 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c2 END END WHERE ((((rt0.c3) IS TRUE) IN ((((t0.c75, t0.c0, t0.c2)) BETWEEN ((t0.c75, vt1.c0, rt0.c0)) AND ((rt0.c3, rt0.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) IS TRUE) IN ((((t0.c75, t0.c0, t0.c2)) BETWEEN ((t0.c75, vt1.c0, rt0.c0)) AND ((rt0.c3, rt0.c1, vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON (((((+ (vt1.c0)))OR(t0.c0)))AND(TRIM(953077403))) CROSS JOIN rt0 ON CASE WHEN (((t0.c2))=((t0.c7))) THEN CASE t0.c7  WHEN rt0.c3 THEN t0.c7 WHEN t0.c0 THEN rt0.c3 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c2 END END);
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON (((((+ (vt1.c0)))OR(t0.c0)))AND(TRIM(953077403))) CROSS JOIN rt0 ON CASE WHEN (((t0.c2))==((t0.c7))) THEN CASE t0.c7  WHEN rt0.c3 THEN t0.c7 WHEN t0.c0 THEN rt0.c3 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c2 END END WHERE ((((rt0.c3) IS TRUE) IN ((((t0.c75, t0.c0, t0.c2)) BETWEEN ((t0.c75, vt1.c0, rt0.c0)) AND ((rt0.c3, rt0.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) IS TRUE) IN ((((t0.c75, t0.c0, t0.c2)) BETWEEN ((t0.c75, vt1.c0, rt0.c0)) AND ((rt0.c3, rt0.c1, vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON (((((+ (vt1.c0)))OR(t0.c0)))AND(TRIM(953077403))) CROSS JOIN rt0 ON CASE WHEN (((t0.c2))=((t0.c7))) THEN CASE t0.c7  WHEN rt0.c3 THEN t0.c7 WHEN t0.c0 THEN rt0.c3 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c2 END END);
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON (((((+ (vt1.c0)))OR(t0.c0)))AND(TRIM(953077403))) CROSS JOIN rt0 ON CASE WHEN (((t0.c2))==((t0.c7))) THEN CASE t0.c7  WHEN rt0.c3 THEN t0.c7 WHEN t0.c0 THEN rt0.c3 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c2 END END WHERE ((((rt0.c3) IS TRUE) IN ((((t0.c75, t0.c0, t0.c2)) BETWEEN ((t0.c75, vt1.c0, rt0.c0)) AND ((rt0.c3, rt0.c1, vt0.c0))))));
SELECT * FROM rt0, vt1, vt0 WHERE (CAST('TvOB-?' AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST('TvOB-?' AS BLOB)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (CAST('TvOB-?' AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST('TvOB-?' AS BLOB)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (CAST('TvOB-?' AS BLOB));
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE WHEN vt0.c0 THEN rt0.c2 ELSE NULL END, ((((rt0.c0)OR(-1119194244)))AND(rt0.c0)), ((vt0.c0)<=(vt0.c0))))<((CASE rt0.c0  WHEN x'a9ce' THEN rt0.c0 END, rt0.c1, vt0.c0 COLLATE RTRIM)))) ORDER BY CASE ((rt0.c2)&('1993285452'))  WHEN CAST(rt0.c2 AS INTEGER) THEN ((x'df42')||(vt0.c0)) WHEN rt0.c3 THEN ((rt0.c0) IS FALSE) WHEN rt0.c2 COLLATE BINARY THEN rt0.c0 ELSE ((((rt0.c3)OR(vt0.c0)))AND(rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c0 THEN rt0.c2 ELSE NULL END, ((((rt0.c0)OR(-1119194244)))AND(rt0.c0)), ((vt0.c0)<=(vt0.c0))))<((CASE rt0.c0  WHEN x'a9ce' THEN rt0.c0 END, rt0.c1, vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE ((rt0.c2)&('1993285452'))  WHEN CAST(rt0.c2 AS INTEGER) THEN ((x'df42')||(vt0.c0)) WHEN rt0.c3 THEN ((rt0.c0) IS FALSE) WHEN rt0.c2 COLLATE BINARY THEN rt0.c0 ELSE ((((rt0.c3)OR(vt0.c0)))AND(rt0.c1)) END DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE WHEN vt0.c0 THEN rt0.c2 ELSE NULL END, ((((rt0.c0)OR(-1119194244)))AND(rt0.c0)), ((vt0.c0)<=(vt0.c0))))<((CASE rt0.c0  WHEN x'a9ce' THEN rt0.c0 END, rt0.c1, vt0.c0 COLLATE RTRIM)))) ORDER BY CASE ((rt0.c2)&('1993285452'))  WHEN CAST(rt0.c2 AS INTEGER) THEN ((x'df42')||(vt0.c0)) WHEN rt0.c3 THEN ((rt0.c0) IS FALSE) WHEN rt0.c2 COLLATE BINARY THEN rt0.c0 ELSE ((((rt0.c3)OR(vt0.c0)))AND(rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c0 THEN rt0.c2 ELSE NULL END, ((((rt0.c0)OR(-1119194244)))AND(rt0.c0)), ((vt0.c0)<=(vt0.c0))))<((CASE rt0.c0  WHEN x'a9ce' THEN rt0.c0 END, rt0.c1, vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE ((rt0.c2)&('1993285452'))  WHEN CAST(rt0.c2 AS INTEGER) THEN ((x'df42')||(vt0.c0)) WHEN rt0.c3 THEN ((rt0.c0) IS FALSE) WHEN rt0.c2 COLLATE BINARY THEN rt0.c0 ELSE ((((rt0.c3)OR(vt0.c0)))AND(rt0.c1)) END DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE WHEN vt0.c0 THEN rt0.c2 ELSE NULL END, ((((rt0.c0)OR(-1119194244)))AND(rt0.c0)), ((vt0.c0)<=(vt0.c0))))<((CASE rt0.c0  WHEN x'a9ce' THEN rt0.c0 END, rt0.c1, vt0.c0 COLLATE RTRIM)))) ORDER BY CASE ((rt0.c2)&('1993285452'))  WHEN CAST(rt0.c2 AS INTEGER) THEN ((x'df42')||(vt0.c0)) WHEN rt0.c3 THEN ((rt0.c0) IS FALSE) WHEN rt0.c2 COLLATE BINARY THEN rt0.c0 ELSE ((((rt0.c3)OR(vt0.c0)))AND(rt0.c1)) END DESC;
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((((t0.c1)AND(vt0.c0)))OR(t0.c1)) THEN CAST(t0.c1 AS TEXT) ELSE ((t0.c1)==(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c1)AND(vt0.c0)))OR(t0.c1)) THEN CAST(t0.c1 AS TEXT) ELSE ((t0.c1)=(t0.c0)) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((((t0.c1)AND(vt0.c0)))OR(t0.c1)) THEN CAST(t0.c1 AS TEXT) ELSE ((t0.c1)==(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c1)AND(vt0.c0)))OR(t0.c1)) THEN CAST(t0.c1 AS TEXT) ELSE ((t0.c1)=(t0.c0)) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((((t0.c1)AND(vt0.c0)))OR(t0.c1)) THEN CAST(t0.c1 AS TEXT) ELSE ((t0.c1)==(t0.c0)) END);
SELECT * FROM t0 WHERE (json_array_length(((t0.c2) NOT NULL), ((t0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((t0.c2) NOT NULL), ((t0.c0) IS TRUE))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (json_array_length(((t0.c2) NOT NULL), ((t0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((t0.c2) NOT NULL), ((t0.c0) IS TRUE))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (json_array_length(((t0.c2) NOT NULL), ((t0.c0) IS TRUE)));
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE ((((t0.c7)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN t0.c7 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c1 THEN t0.c75 ELSE rt0.c2 END)) AND ((CASE t0.c2  WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN rt0.c2 WHEN vt1.c0 THEN NULL ELSE t0.c2 END)))) ORDER BY ((((NOT (t0.c2))))==((CASE WHEN t0.c7 THEN t0.c7 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c7)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN t0.c7 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c1 THEN t0.c75 ELSE rt0.c2 END)) AND ((CASE t0.c2  WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN rt0.c2 WHEN vt1.c0 THEN NULL ELSE t0.c2 END)))) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY ((((NOT (t0.c2))))=((CASE WHEN t0.c7 THEN t0.c7 ELSE t0.c0 END))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE ((((t0.c7)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN t0.c7 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c1 THEN t0.c75 ELSE rt0.c2 END)) AND ((CASE t0.c2  WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN rt0.c2 WHEN vt1.c0 THEN NULL ELSE t0.c2 END)))) ORDER BY ((((NOT (t0.c2))))==((CASE WHEN t0.c7 THEN t0.c7 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c7)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN t0.c7 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c1 THEN t0.c75 ELSE rt0.c2 END)) AND ((CASE t0.c2  WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN rt0.c2 WHEN vt1.c0 THEN NULL ELSE t0.c2 END)))) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY ((((NOT (t0.c2))))=((CASE WHEN t0.c7 THEN t0.c7 ELSE t0.c0 END))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE ((((t0.c7)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN t0.c7 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c1 THEN t0.c75 ELSE rt0.c2 END)) AND ((CASE t0.c2  WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN rt0.c2 WHEN vt1.c0 THEN NULL ELSE t0.c2 END)))) ORDER BY ((((NOT (t0.c2))))==((CASE WHEN t0.c7 THEN t0.c7 ELSE t0.c0 END)));
SELECT ALL * FROM vt0, t0, vt1 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY 0.3464001441543523;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY 0.3464001441543523);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY 0.3464001441543523;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY 0.3464001441543523);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY 0.3464001441543523;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((('-333607026' COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT (((('-333607026' COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((('-333607026' COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT (((('-333607026' COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((('-333607026' COLLATE NOCASE) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c1)||('')) COLLATE BINARY) ORDER BY CASE vt0.c0  WHEN CASE rt0.c3  WHEN t0.c1 THEN t0.c1 WHEN t0.c7 THEN rt0.c2 WHEN t0.c75 THEN vt0.c0 END THEN 0X24cebfe1 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)||('')) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CASE vt0.c0  WHEN CASE rt0.c3  WHEN t0.c1 THEN t0.c1 WHEN t0.c7 THEN rt0.c2 WHEN t0.c75 THEN vt0.c0 END THEN 0x24cebfe1 END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c1)||('')) COLLATE BINARY) ORDER BY CASE vt0.c0  WHEN CASE rt0.c3  WHEN t0.c1 THEN t0.c1 WHEN t0.c7 THEN rt0.c2 WHEN t0.c75 THEN vt0.c0 END THEN 0X24cebfe1 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)||('')) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CASE vt0.c0  WHEN CASE rt0.c3  WHEN t0.c1 THEN t0.c1 WHEN t0.c7 THEN rt0.c2 WHEN t0.c75 THEN vt0.c0 END THEN 0x24cebfe1 END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c1)||('')) COLLATE BINARY) ORDER BY CASE vt0.c0  WHEN CASE rt0.c3  WHEN t0.c1 THEN t0.c1 WHEN t0.c7 THEN rt0.c2 WHEN t0.c75 THEN vt0.c0 END THEN 0X24cebfe1 END  NULLS LAST;
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE ((((~ (vt0.c0)))GLOB(TYPEOF(t0.c2)))) ORDER BY CASE WHEN CAST(t0.c2 AS NUMERIC) THEN ((((((((rt0.c0)OR(0.14834495185483532)))OR(rt0.c2)))OR(t0.c75)))AND(vt0.c0)) ELSE ((t0.c75)=(vt0.c0)) END DESC, (~ (CAST(t0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))GLOB(TYPEOF(t0.c2)))) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY CASE WHEN CAST(t0.c2 AS NUMERIC) THEN ((((((((rt0.c0)OR(0.14834495185483532)))OR(rt0.c2)))OR(t0.c75)))AND(vt0.c0)) ELSE ((t0.c75)=(vt0.c0)) END DESC, (~ (CAST(t0.c1 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE ((((~ (vt0.c0)))GLOB(TYPEOF(t0.c2)))) ORDER BY CASE WHEN CAST(t0.c2 AS NUMERIC) THEN ((((((((rt0.c0)OR(0.14834495185483532)))OR(rt0.c2)))OR(t0.c75)))AND(vt0.c0)) ELSE ((t0.c75)=(vt0.c0)) END DESC, (~ (CAST(t0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))GLOB(TYPEOF(t0.c2)))) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY CASE WHEN CAST(t0.c2 AS NUMERIC) THEN ((((((((rt0.c0)OR(0.14834495185483532)))OR(rt0.c2)))OR(t0.c75)))AND(vt0.c0)) ELSE ((t0.c75)=(vt0.c0)) END DESC, (~ (CAST(t0.c1 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE ((((~ (vt0.c0)))GLOB(TYPEOF(t0.c2)))) ORDER BY CASE WHEN CAST(t0.c2 AS NUMERIC) THEN ((((((((rt0.c0)OR(0.14834495185483532)))OR(rt0.c2)))OR(t0.c75)))AND(vt0.c0)) ELSE ((t0.c75)=(vt0.c0)) END DESC, (~ (CAST(t0.c1 AS INTEGER)))  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE (0.6569998990936181) ORDER BY 0.5417910049905124;
SELECT SUM(count) FROM (SELECT ALL ((0.6569998990936181) IS TRUE)  as count FROM t0, rt0 ORDER BY 0.5417910049905124);
SELECT ALL * FROM t0, rt0 WHERE (0.6569998990936181) ORDER BY 0.5417910049905124;
SELECT SUM(count) FROM (SELECT ALL ((0.6569998990936181) IS TRUE)  as count FROM t0, rt0 ORDER BY 0.5417910049905124);
SELECT ALL * FROM t0, rt0 WHERE (0.6569998990936181) ORDER BY 0.5417910049905124;
SELECT COUNT(*) FROM rt0, vt0, t0 NOT INDEXED, vt1 WHERE (((t0.c1)==(rt0.c3)) COLLATE RTRIM) ORDER BY (((NULL, rt0.c3, t0.c2)) BETWEEN ((t0.c2 COLLATE NOCASE, ((rt0.c1)+(t0.c1)), CAST(vt1.c0 AS NUMERIC))) AND ((CAST(t0.c2 AS BLOB), ((rt0.c2) NOTNULL), ((t0.c1)*(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)=(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY (((NULL, rt0.c3, t0.c2)) BETWEEN ((t0.c2 COLLATE NOCASE, ((rt0.c1)+(t0.c1)), CAST(vt1.c0 AS NUMERIC))) AND ((CAST(t0.c2 AS BLOB), ((rt0.c2) NOTNULL), ((t0.c1)*(vt1.c0))))) DESC);
SELECT COUNT(*) FROM rt0, vt0, t0 NOT INDEXED, vt1 WHERE (((t0.c1)==(rt0.c3)) COLLATE RTRIM) ORDER BY (((NULL, rt0.c3, t0.c2)) BETWEEN ((t0.c2 COLLATE NOCASE, ((rt0.c1)+(t0.c1)), CAST(vt1.c0 AS NUMERIC))) AND ((CAST(t0.c2 AS BLOB), ((rt0.c2) NOTNULL), ((t0.c1)*(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)=(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY (((NULL, rt0.c3, t0.c2)) BETWEEN ((t0.c2 COLLATE NOCASE, ((rt0.c1)+(t0.c1)), CAST(vt1.c0 AS NUMERIC))) AND ((CAST(t0.c2 AS BLOB), ((rt0.c2) NOTNULL), ((t0.c1)*(vt1.c0))))) DESC);
SELECT COUNT(*) FROM rt0, vt0, t0 NOT INDEXED, vt1 WHERE (((t0.c1)==(rt0.c3)) COLLATE RTRIM) ORDER BY (((NULL, rt0.c3, t0.c2)) BETWEEN ((t0.c2 COLLATE NOCASE, ((rt0.c1)+(t0.c1)), CAST(vt1.c0 AS NUMERIC))) AND ((CAST(t0.c2 AS BLOB), ((rt0.c2) NOTNULL), ((t0.c1)*(vt1.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((0.6734178374241553) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0.6734178374241553) NOT NULL)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((0.6734178374241553) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0.6734178374241553) NOT NULL)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((0.6734178374241553) NOT NULL));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c0) NOTNULL) IN (t0.c75 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON ((NULL) ISNULL) CROSS JOIN vt0 ON 0.3929481358593683 WHERE (rt0.c0) ORDER BY (NOT (((vt0.c0)/(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c0) NOTNULL) IN (t0.c75 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON ((NULL) ISNULL) CROSS JOIN vt0 ON 0.3929481358593683 ORDER BY (NOT (((vt0.c0)/(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c0) NOTNULL) IN (t0.c75 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON ((NULL) ISNULL) CROSS JOIN vt0 ON 0.3929481358593683 WHERE (rt0.c0) ORDER BY (NOT (((vt0.c0)/(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c0) NOTNULL) IN (t0.c75 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON ((NULL) ISNULL) CROSS JOIN vt0 ON 0.3929481358593683 ORDER BY (NOT (((vt0.c0)/(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c0) NOTNULL) IN (t0.c75 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON ((NULL) ISNULL) CROSS JOIN vt0 ON 0.3929481358593683 WHERE (rt0.c0) ORDER BY (NOT (((vt0.c0)/(vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (UPPER((t0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((t0.c2 IN ()))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (UPPER((t0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((t0.c2 IN ()))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (UPPER((t0.c2 IN ())));
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN vt0 WHERE (CASE WHEN ((rt0.c3)<<(rt0.c3)) THEN ((x'6cde')<<(rt0.c2)) WHEN (+ (rt0.c2)) THEN ((t0.c1) NOT NULL) WHEN ((t0.c2) IS TRUE) THEN ((vt0.c0) BETWEEN (rt0.c0) AND (t0.c1)) END) ORDER BY ((((((((((t0.c1)OR(t0.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(vt0.c0)))=(((((t0.c75)OR(rt0.c1)))AND(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)<<(rt0.c3)) THEN ((x'6cde')<<(rt0.c2)) WHEN (+ (rt0.c2)) THEN ((t0.c1) NOT NULL) WHEN ((t0.c2) IS TRUE) THEN ((vt0.c0) BETWEEN (rt0.c0) AND (t0.c1)) END) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0 ORDER BY ((((((((((t0.c1)OR(t0.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(vt0.c0)))==(((((t0.c75)OR(rt0.c1)))AND(t0.c0)))));
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN vt0 WHERE (CASE WHEN ((rt0.c3)<<(rt0.c3)) THEN ((x'6cde')<<(rt0.c2)) WHEN (+ (rt0.c2)) THEN ((t0.c1) NOT NULL) WHEN ((t0.c2) IS TRUE) THEN ((vt0.c0) BETWEEN (rt0.c0) AND (t0.c1)) END) ORDER BY ((((((((((t0.c1)OR(t0.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(vt0.c0)))=(((((t0.c75)OR(rt0.c1)))AND(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)<<(rt0.c3)) THEN ((x'6cde')<<(rt0.c2)) WHEN (+ (rt0.c2)) THEN ((t0.c1) NOT NULL) WHEN ((t0.c2) IS TRUE) THEN ((vt0.c0) BETWEEN (rt0.c0) AND (t0.c1)) END) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0 ORDER BY ((((((((((t0.c1)OR(t0.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(vt0.c0)))==(((((t0.c75)OR(rt0.c1)))AND(t0.c0)))));
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN vt0 WHERE (CASE WHEN ((rt0.c3)<<(rt0.c3)) THEN ((x'6cde')<<(rt0.c2)) WHEN (+ (rt0.c2)) THEN ((t0.c1) NOT NULL) WHEN ((t0.c2) IS TRUE) THEN ((vt0.c0) BETWEEN (rt0.c0) AND (t0.c1)) END) ORDER BY ((((((((((t0.c1)OR(t0.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(vt0.c0)))=(((((t0.c75)OR(rt0.c1)))AND(t0.c0))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt0.c0) NOT NULL))AND(0.9571896042367389 COLLATE BINARY)))OR(((vt1.c0)<<(vt0.c0)))))OR(((vt1.c0) NOTNULL))))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) ORDER BY (+ (CASE WHEN 0x1a5f00da THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT NULL))AND(0.9571896042367389 COLLATE BINARY)))OR(((vt1.c0)<<(vt0.c0)))))OR(((vt1.c0) NOTNULL))))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ (CASE WHEN 0X1a5f00da THEN vt1.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt0.c0) NOT NULL))AND(0.9571896042367389 COLLATE BINARY)))OR(((vt1.c0)<<(vt0.c0)))))OR(((vt1.c0) NOTNULL))))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) ORDER BY (+ (CASE WHEN 0x1a5f00da THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT NULL))AND(0.9571896042367389 COLLATE BINARY)))OR(((vt1.c0)<<(vt0.c0)))))OR(((vt1.c0) NOTNULL))))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ (CASE WHEN 0X1a5f00da THEN vt1.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt0.c0) NOT NULL))AND(0.9571896042367389 COLLATE BINARY)))OR(((vt1.c0)<<(vt0.c0)))))OR(((vt1.c0) NOTNULL))))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) ORDER BY (+ (CASE WHEN 0x1a5f00da THEN vt1.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CASE WHEN (~ (rt0.c3)) THEN rt0.c3 COLLATE BINARY WHEN ((rt0.c2)=(rt0.c2)) THEN (~ (rt0.c0)) WHEN ((0.43614566068443017)%(rt0.c3)) THEN ((vt1.c0)<(rt0.c1)) END) ORDER BY CASE NULL  WHEN rt0.c2 THEN vt0.c0 END COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt0.c3)) THEN rt0.c3 COLLATE BINARY WHEN ((rt0.c2)=(rt0.c2)) THEN (~ (rt0.c0)) WHEN ((0.43614566068443017)%(rt0.c3)) THEN ((vt1.c0)<(rt0.c1)) END) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE NULL  WHEN rt0.c2 THEN vt0.c0 END COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CASE WHEN (~ (rt0.c3)) THEN rt0.c3 COLLATE BINARY WHEN ((rt0.c2)=(rt0.c2)) THEN (~ (rt0.c0)) WHEN ((0.43614566068443017)%(rt0.c3)) THEN ((vt1.c0)<(rt0.c1)) END) ORDER BY CASE NULL  WHEN rt0.c2 THEN vt0.c0 END COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt0.c3)) THEN rt0.c3 COLLATE BINARY WHEN ((rt0.c2)=(rt0.c2)) THEN (~ (rt0.c0)) WHEN ((0.43614566068443017)%(rt0.c3)) THEN ((vt1.c0)<(rt0.c1)) END) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE NULL  WHEN rt0.c2 THEN vt0.c0 END COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CASE WHEN (~ (rt0.c3)) THEN rt0.c3 COLLATE BINARY WHEN ((rt0.c2)=(rt0.c2)) THEN (~ (rt0.c0)) WHEN ((0.43614566068443017)%(rt0.c3)) THEN ((vt1.c0)<(rt0.c1)) END) ORDER BY CASE NULL  WHEN rt0.c2 THEN vt0.c0 END COLLATE RTRIM DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE ((((t0.c75 IN ()))/(CASE t0.c7  WHEN t0.c1 THEN rt0.c0 WHEN 0.32539595503221586 THEN t0.c0 WHEN rt0.c2 THEN t0.c75 ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((t0.c75 IN ()))/(CASE t0.c7  WHEN t0.c1 THEN rt0.c0 WHEN 0.32539595503221586 THEN t0.c0 WHEN rt0.c2 THEN t0.c75 ELSE t0.c2 END))) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, t0, vt0);
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE ((((t0.c75 IN ()))/(CASE t0.c7  WHEN t0.c1 THEN rt0.c0 WHEN 0.32539595503221586 THEN t0.c0 WHEN rt0.c2 THEN t0.c75 ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((t0.c75 IN ()))/(CASE t0.c7  WHEN t0.c1 THEN rt0.c0 WHEN 0.32539595503221586 THEN t0.c0 WHEN rt0.c2 THEN t0.c75 ELSE t0.c2 END))) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, t0, vt0);
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE ((((t0.c75 IN ()))/(CASE t0.c7  WHEN t0.c1 THEN rt0.c0 WHEN 0.32539595503221586 THEN t0.c0 WHEN rt0.c2 THEN t0.c75 ELSE t0.c2 END)));
SELECT * FROM vt0, vt1, t0 WHERE (((CASE WHEN vt0.c0 THEN t0.c7 END) BETWEEN ((- (t0.c1))) AND (((t0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN t0.c7 END) BETWEEN ((- (t0.c1))) AND (((t0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((CASE WHEN vt0.c0 THEN t0.c7 END) BETWEEN ((- (t0.c1))) AND (((t0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN t0.c7 END) BETWEEN ((- (t0.c1))) AND (((t0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((CASE WHEN vt0.c0 THEN t0.c7 END) BETWEEN ((- (t0.c1))) AND (((t0.c0)<=(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c75 WHEN t0.c0 THEN t0.c7 ELSE t0.c0 END THEN (+ (t0.c7)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c75 WHEN t0.c0 THEN t0.c7 ELSE t0.c0 END THEN (+ (t0.c7)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c75 WHEN t0.c0 THEN t0.c7 ELSE t0.c0 END THEN (+ (t0.c7)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c75 WHEN t0.c0 THEN t0.c7 ELSE t0.c0 END THEN (+ (t0.c7)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c75 WHEN t0.c0 THEN t0.c7 ELSE t0.c0 END THEN (+ (t0.c7)) END);
SELECT * FROM rt0 CROSS JOIN vt0 ON CASE WHEN (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN (((rt0.c0))<=((rt0.c1))) END WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))<=((0.3003883926530476)))) ORDER BY (((IFNULL(DISTINCT vt0.c0, rt0.c1)))==((((rt0.c0)<(rt0.c0))))), ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c0)=(rt0.c2)))))OR(CAST('1429320333' AS BLOB))), CAST(vt0.c0 AS REAL);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))<=((0.3003883926530476)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE WHEN (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN (((rt0.c0))<=((rt0.c1))) END ORDER BY (((IFNULL(DISTINCT vt0.c0, rt0.c1)))=((((rt0.c0)<(rt0.c0))))), ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c0)==(rt0.c2)))))OR(CAST('1429320333' AS BLOB))), CAST(vt0.c0 AS REAL));
SELECT * FROM rt0 CROSS JOIN vt0 ON CASE WHEN (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN (((rt0.c0))<=((rt0.c1))) END WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))<=((0.3003883926530476)))) ORDER BY (((IFNULL(DISTINCT vt0.c0, rt0.c1)))==((((rt0.c0)<(rt0.c0))))), ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c0)=(rt0.c2)))))OR(CAST('1429320333' AS BLOB))), CAST(vt0.c0 AS REAL);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))<=((0.3003883926530476)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE WHEN (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN (((rt0.c0))<=((rt0.c1))) END ORDER BY (((IFNULL(DISTINCT vt0.c0, rt0.c1)))=((((rt0.c0)<(rt0.c0))))), ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c0)==(rt0.c2)))))OR(CAST('1429320333' AS BLOB))), CAST(vt0.c0 AS REAL));
SELECT * FROM rt0 CROSS JOIN vt0 ON CASE WHEN (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN (((rt0.c0))<=((rt0.c1))) END WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))<=((0.3003883926530476)))) ORDER BY (((IFNULL(DISTINCT vt0.c0, rt0.c1)))==((((rt0.c0)<(rt0.c0))))), ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c0)=(rt0.c2)))))OR(CAST('1429320333' AS BLOB))), CAST(vt0.c0 AS REAL);
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))AND((rt0.c2 IN ()))))AND(((x'')<(rt0.c1)))))AND(NULL)))OR(UNLIKELY(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))AND((rt0.c2 IN ()))))AND(((x'')<(rt0.c1)))))AND(NULL)))OR(UNLIKELY(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))AND((rt0.c2 IN ()))))AND(((x'')<(rt0.c1)))))AND(NULL)))OR(UNLIKELY(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))AND((rt0.c2 IN ()))))AND(((x'')<(rt0.c1)))))AND(NULL)))OR(UNLIKELY(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))AND((rt0.c2 IN ()))))AND(((x'')<(rt0.c1)))))AND(NULL)))OR(UNLIKELY(rt0.c0))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((NOT (rt0.c1))) BETWEEN ((rt0.c3 IN ())) AND (CAST(0x490c5123 AS TEXT)))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))<=(rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) BETWEEN ((rt0.c3 IN ())) AND (CAST(0x490c5123 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))<=(rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((NOT (rt0.c1))) BETWEEN ((rt0.c3 IN ())) AND (CAST(0x490c5123 AS TEXT)))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))<=(rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) BETWEEN ((rt0.c3 IN ())) AND (CAST(0x490c5123 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))<=(rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((NOT (rt0.c1))) BETWEEN ((rt0.c3 IN ())) AND (CAST(0x490c5123 AS TEXT)))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))<=(rt0.c1 COLLATE RTRIM));
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c3)) COLLATE BINARY);
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((((0.31770046305061284))>=((rt0.c3)))) NOT BETWEEN (rtreenode(vt0.c0, 0.20943044280311152)) AND (((vt0.c0)IS NOT(t0.c1)))) RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT ROUND(vt0.c0, t0.c1), (t0.c75 IN ())) WHERE (((CASE t0.c7  WHEN t0.c7 THEN rt0.c2 ELSE rt0.c2 END)/(t0.c7))) ORDER BY ((GLOB(t0.c0, t0.c1)) NOT NULL)  NULLS FIRST, (((rt0.c2)) BETWEEN (((t0.c0 IN ()))) AND ((t0.c75)));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c7  WHEN t0.c7 THEN rt0.c2 ELSE rt0.c2 END)/(t0.c7))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((((0.31770046305061284))>=((rt0.c3)))) NOT BETWEEN (rtreenode(vt0.c0, 0.20943044280311152)) AND (((vt0.c0)IS NOT(t0.c1)))) RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT ROUND(vt0.c0, t0.c1), (t0.c75 IN ())) ORDER BY ((GLOB(t0.c0, t0.c1)) NOT NULL)  NULLS FIRST, (((rt0.c2)) BETWEEN (((t0.c0 IN ()))) AND ((t0.c75))));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((((0.31770046305061284))>=((rt0.c3)))) NOT BETWEEN (rtreenode(vt0.c0, 0.20943044280311152)) AND (((vt0.c0)IS NOT(t0.c1)))) RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT ROUND(vt0.c0, t0.c1), (t0.c75 IN ())) WHERE (((CASE t0.c7  WHEN t0.c7 THEN rt0.c2 ELSE rt0.c2 END)/(t0.c7))) ORDER BY ((GLOB(t0.c0, t0.c1)) NOT NULL)  NULLS FIRST, (((rt0.c2)) BETWEEN (((t0.c0 IN ()))) AND ((t0.c75)));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c7  WHEN t0.c7 THEN rt0.c2 ELSE rt0.c2 END)/(t0.c7))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((((0.31770046305061284))>=((rt0.c3)))) NOT BETWEEN (rtreenode(vt0.c0, 0.20943044280311152)) AND (((vt0.c0)IS NOT(t0.c1)))) RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT ROUND(vt0.c0, t0.c1), (t0.c75 IN ())) ORDER BY ((GLOB(t0.c0, t0.c1)) NOT NULL)  NULLS FIRST, (((rt0.c2)) BETWEEN (((t0.c0 IN ()))) AND ((t0.c75))));
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((x'')<<((((vt0.c0))>=((t0.c75))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<<((((vt0.c0))>=((t0.c75)))))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((x'')<<((((vt0.c0))>=((t0.c75))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<<((((vt0.c0))>=((t0.c75)))))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((x'')<<((((vt0.c0))>=((t0.c75))))));
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c0 IN ()))-(((vt0.c0)<<('a'))))) ORDER BY ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)))=(((NULL)&(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))-(((vt0.c0)<<('a'))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)))==(((NULL)&(rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c0 IN ()))-(((vt0.c0)<<('a'))))) ORDER BY ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)))=(((NULL)&(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))-(((vt0.c0)<<('a'))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)))==(((NULL)&(rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c0 IN ()))-(((vt0.c0)<<('a'))))) ORDER BY ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)))=(((NULL)&(rt0.c3))))  NULLS FIRST;
SELECT ALL * FROM t0, vt1 WHERE (t0.c7) ORDER BY ((CASE t0.c1  WHEN t0.c75 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN 0.5783394530123132 THEN t0.c75 ELSE x'' END) BETWEEN (t0.c75 COLLATE NOCASE) AND (((t0.c0) BETWEEN (vt1.c0) AND (t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c7) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CASE t0.c1  WHEN t0.c75 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN 0.5783394530123132 THEN t0.c75 ELSE x'' END) BETWEEN (t0.c75 COLLATE NOCASE) AND (((t0.c0) BETWEEN (vt1.c0) AND (t0.c1))))  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE (t0.c7) ORDER BY ((CASE t0.c1  WHEN t0.c75 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN 0.5783394530123132 THEN t0.c75 ELSE x'' END) BETWEEN (t0.c75 COLLATE NOCASE) AND (((t0.c0) BETWEEN (vt1.c0) AND (t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c7) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CASE t0.c1  WHEN t0.c75 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN 0.5783394530123132 THEN t0.c75 ELSE x'' END) BETWEEN (t0.c75 COLLATE NOCASE) AND (((t0.c0) BETWEEN (vt1.c0) AND (t0.c1))))  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE (t0.c7) ORDER BY ((CASE t0.c1  WHEN t0.c75 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN 0.5783394530123132 THEN t0.c75 ELSE x'' END) BETWEEN (t0.c75 COLLATE NOCASE) AND (((t0.c0) BETWEEN (vt1.c0) AND (t0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT t0.c7, 0.4427644434759659) FULL OUTER JOIN t0 ON (+ ((NULL IN ()))) WHERE (((t0.c7) BETWEEN (NULL) AND (t0.c75)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c7) BETWEEN (NULL) AND (t0.c75)) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT t0.c7, 0.4427644434759659) FULL OUTER JOIN t0 ON (+ ((NULL IN ()))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT t0.c7, 0.4427644434759659) FULL OUTER JOIN t0 ON (+ ((NULL IN ()))) WHERE (((t0.c7) BETWEEN (NULL) AND (t0.c75)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c7) BETWEEN (NULL) AND (t0.c75)) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT t0.c7, 0.4427644434759659) FULL OUTER JOIN t0 ON (+ ((NULL IN ()))));
SELECT * FROM vt1 INNER JOIN t0 ON CAST(CASE t0.c75  WHEN 0.389915237066187 THEN rt0.c0 END AS BLOB) INNER JOIN vt0 ON ((CAST(rt0.c3 AS BLOB))IS('')) INNER JOIN rt0 ON (((((t0.c1)!=(t0.c1))))==(((t0.c2 IN (rt0.c2))))) WHERE (COALESCE(((((vt0.c0)OR(rt0.c3)))AND(t0.c75)), (+ (vt1.c0)), ((t0.c7)+('Pk|癤')), ((t0.c1) BETWEEN (t0.c7) AND (rt0.c1)))) ORDER BY '*杗';
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((((vt0.c0)OR(rt0.c3)))AND(t0.c75)), (+ (vt1.c0)), ((t0.c7)+('Pk|癤')), ((t0.c1) BETWEEN (t0.c7) AND (rt0.c1)))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CAST(CASE t0.c75  WHEN 0.389915237066187 THEN rt0.c0 END AS BLOB) INNER JOIN vt0 ON ((CAST(rt0.c3 AS BLOB))IS('')) INNER JOIN rt0 ON (((((t0.c1)!=(t0.c1))))==(((t0.c2 IN (rt0.c2))))) ORDER BY '*杗');
SELECT * FROM vt1 INNER JOIN t0 ON CAST(CASE t0.c75  WHEN 0.389915237066187 THEN rt0.c0 END AS BLOB) INNER JOIN vt0 ON ((CAST(rt0.c3 AS BLOB))IS('')) INNER JOIN rt0 ON (((((t0.c1)!=(t0.c1))))==(((t0.c2 IN (rt0.c2))))) WHERE (COALESCE(((((vt0.c0)OR(rt0.c3)))AND(t0.c75)), (+ (vt1.c0)), ((t0.c7)+('Pk|癤')), ((t0.c1) BETWEEN (t0.c7) AND (rt0.c1)))) ORDER BY '*杗';
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((((vt0.c0)OR(rt0.c3)))AND(t0.c75)), (+ (vt1.c0)), ((t0.c7)+('Pk|癤')), ((t0.c1) BETWEEN (t0.c7) AND (rt0.c1)))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CAST(CASE t0.c75  WHEN 0.389915237066187 THEN rt0.c0 END AS BLOB) INNER JOIN vt0 ON ((CAST(rt0.c3 AS BLOB))IS('')) INNER JOIN rt0 ON (((((t0.c1)!=(t0.c1))))==(((t0.c2 IN (rt0.c2))))) ORDER BY '*杗');
SELECT * FROM vt1 INNER JOIN t0 ON CAST(CASE t0.c75  WHEN 0.389915237066187 THEN rt0.c0 END AS BLOB) INNER JOIN vt0 ON ((CAST(rt0.c3 AS BLOB))IS('')) INNER JOIN rt0 ON (((((t0.c1)!=(t0.c1))))==(((t0.c2 IN (rt0.c2))))) WHERE (COALESCE(((((vt0.c0)OR(rt0.c3)))AND(t0.c75)), (+ (vt1.c0)), ((t0.c7)+('Pk|癤')), ((t0.c1) BETWEEN (t0.c7) AND (rt0.c1)))) ORDER BY '*杗';
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON CASE UNLIKELY(rt0.c1)  WHEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) THEN CAST(rt0.c2 AS TEXT) END INNER JOIN vt1 ON ((NULLIF(rt0.c0, vt1.c0))GLOB(rt0.c0)) WHERE (('H1|3rA' IN ((~ (rt0.c0))))) ORDER BY ((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c3 ELSE vt1.c0 END) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((('H1|3rA' IN ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE UNLIKELY(rt0.c1)  WHEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) THEN CAST(rt0.c2 AS TEXT) END INNER JOIN vt1 ON ((NULLIF(rt0.c0, vt1.c0))GLOB(rt0.c0)) ORDER BY ((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c3 ELSE vt1.c0 END) IS TRUE) ASC);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON CASE UNLIKELY(rt0.c1)  WHEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) THEN CAST(rt0.c2 AS TEXT) END INNER JOIN vt1 ON ((NULLIF(rt0.c0, vt1.c0))GLOB(rt0.c0)) WHERE (('H1|3rA' IN ((~ (rt0.c0))))) ORDER BY ((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c3 ELSE vt1.c0 END) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((('H1|3rA' IN ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE UNLIKELY(rt0.c1)  WHEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) THEN CAST(rt0.c2 AS TEXT) END INNER JOIN vt1 ON ((NULLIF(rt0.c0, vt1.c0))GLOB(rt0.c0)) ORDER BY ((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c3 ELSE vt1.c0 END) IS TRUE) ASC);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON CASE UNLIKELY(rt0.c1)  WHEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) THEN CAST(rt0.c2 AS TEXT) END INNER JOIN vt1 ON ((NULLIF(rt0.c0, vt1.c0))GLOB(rt0.c0)) WHERE (('H1|3rA' IN ((~ (rt0.c0))))) ORDER BY ((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c3 ELSE vt1.c0 END) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE WHEN 0.19543143352708336 THEN (t0.c75 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.19543143352708336 THEN (t0.c75 IN ()) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE WHEN 0.19543143352708336 THEN (t0.c75 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.19543143352708336 THEN (t0.c75 IN ()) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE WHEN 0.19543143352708336 THEN (t0.c75 IN ()) END);
SELECT ALL * FROM t0, vt0, vt1, rt0 WHERE ((((NOT (t0.c0)))IS((((t0.c7))<((t0.c7))))));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0)))IS((((t0.c7))<((t0.c7)))))) IS TRUE)  as count FROM t0, vt0, vt1, rt0);
SELECT ALL * FROM t0, vt0, vt1, rt0 WHERE ((((NOT (t0.c0)))IS((((t0.c7))<((t0.c7))))));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0)))IS((((t0.c7))<((t0.c7)))))) IS TRUE)  as count FROM t0, vt0, vt1, rt0);
SELECT ALL * FROM t0, vt0, vt1, rt0 WHERE ((((NOT (t0.c0)))IS((((t0.c7))<((t0.c7))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (+ (rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (+ (rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (+ (rt0.c1 COLLATE RTRIM));
SELECT * FROM rt0, t0, vt1 NATURAL JOIN vt0 WHERE ((((t0.c7 IN ())) BETWEEN ((vt1.c0 IN ())) AND ((t0.c1 IN (rt0.c0, rt0.c0))))) ORDER BY ((((rt0.c3)<(t0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c7 IN ())) BETWEEN ((vt1.c0 IN ())) AND ((t0.c1 IN (rt0.c0, rt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt1 NATURAL JOIN vt0 ORDER BY ((((rt0.c3)<(t0.c0))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM rt0, t0, vt1 NATURAL JOIN vt0 WHERE ((((t0.c7 IN ())) BETWEEN ((vt1.c0 IN ())) AND ((t0.c1 IN (rt0.c0, rt0.c0))))) ORDER BY ((((rt0.c3)<(t0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c7 IN ())) BETWEEN ((vt1.c0 IN ())) AND ((t0.c1 IN (rt0.c0, rt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt1 NATURAL JOIN vt0 ORDER BY ((((rt0.c3)<(t0.c0))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM rt0, t0, vt1 NATURAL JOIN vt0 WHERE ((((t0.c7 IN ())) BETWEEN ((vt1.c0 IN ())) AND ((t0.c1 IN (rt0.c0, rt0.c0))))) ORDER BY ((((rt0.c3)<(t0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT ALL * FROM rt0, t0, vt1 WHERE (((((((((((((((((((((t0.c75)AND(t0.c7)))AND(t0.c0)))AND(t0.c2)))OR(t0.c7)))OR(((rt0.c2)GLOB(t0.c2)))))OR(((rt0.c2) NOTNULL))))OR(((rt0.c0)IS NOT(rt0.c1)))))AND(SQLITE_VERSION())))AND((((vt1.c0)) BETWEEN ((t0.c7)) AND ((rt0.c0))))))OR(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((t0.c75)AND(t0.c7)))AND(t0.c0)))AND(t0.c2)))OR(t0.c7)))OR(((rt0.c2)GLOB(t0.c2)))))OR(((rt0.c2) NOTNULL))))OR(((rt0.c0)IS NOT(rt0.c1)))))AND(SQLITE_VERSION())))AND((((vt1.c0)) BETWEEN ((t0.c7)) AND ((rt0.c0))))))OR(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (((((((((((((((((((((t0.c75)AND(t0.c7)))AND(t0.c0)))AND(t0.c2)))OR(t0.c7)))OR(((rt0.c2)GLOB(t0.c2)))))OR(((rt0.c2) NOTNULL))))OR(((rt0.c0)IS NOT(rt0.c1)))))AND(SQLITE_VERSION())))AND((((vt1.c0)) BETWEEN ((t0.c7)) AND ((rt0.c0))))))OR(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((t0.c75)AND(t0.c7)))AND(t0.c0)))AND(t0.c2)))OR(t0.c7)))OR(((rt0.c2)GLOB(t0.c2)))))OR(((rt0.c2) NOTNULL))))OR(((rt0.c0)IS NOT(rt0.c1)))))AND(SQLITE_VERSION())))AND((((vt1.c0)) BETWEEN ((t0.c7)) AND ((rt0.c0))))))OR(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (((((((((((((((((((((t0.c75)AND(t0.c7)))AND(t0.c0)))AND(t0.c2)))OR(t0.c7)))OR(((rt0.c2)GLOB(t0.c2)))))OR(((rt0.c2) NOTNULL))))OR(((rt0.c0)IS NOT(rt0.c1)))))AND(SQLITE_VERSION())))AND((((vt1.c0)) BETWEEN ((t0.c7)) AND ((rt0.c0))))))OR(CAST(vt1.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1 WHERE (COALESCE(vt1.c0, ((vt1.c0)AND(vt1.c0)), 0.808587528348349, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(vt1.c0 AS TEXT), (vt1.c0 IN ()))) ORDER BY ((((((((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(vt1.c0 COLLATE RTRIM)))AND((NOT (vt1.c0)))))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0))<=((vt1.c0))))))OR(((vt1.c0)||(0.00941183074418428)))))OR(INSTR(vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ((COALESCE(vt1.c0, ((vt1.c0)AND(vt1.c0)), 0.808587528348349, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(vt1.c0 AS TEXT), (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(vt1.c0 COLLATE RTRIM)))AND((NOT (vt1.c0)))))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0))<=((vt1.c0))))))OR(((vt1.c0)||(0.00941183074418428)))))OR(INSTR(vt1.c0, vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (COALESCE(vt1.c0, ((vt1.c0)AND(vt1.c0)), 0.808587528348349, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(vt1.c0 AS TEXT), (vt1.c0 IN ()))) ORDER BY ((((((((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(vt1.c0 COLLATE RTRIM)))AND((NOT (vt1.c0)))))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0))<=((vt1.c0))))))OR(((vt1.c0)||(0.00941183074418428)))))OR(INSTR(vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ((COALESCE(vt1.c0, ((vt1.c0)AND(vt1.c0)), 0.808587528348349, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(vt1.c0 AS TEXT), (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(vt1.c0 COLLATE RTRIM)))AND((NOT (vt1.c0)))))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0))<=((vt1.c0))))))OR(((vt1.c0)||(0.00941183074418428)))))OR(INSTR(vt1.c0, vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (COALESCE(vt1.c0, ((vt1.c0)AND(vt1.c0)), 0.808587528348349, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(vt1.c0 AS TEXT), (vt1.c0 IN ()))) ORDER BY ((((((((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(vt1.c0 COLLATE RTRIM)))AND((NOT (vt1.c0)))))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0))<=((vt1.c0))))))OR(((vt1.c0)||(0.00941183074418428)))))OR(INSTR(vt1.c0, vt1.c0)));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (rt0.c3);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((+ ((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (t0.c2))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((+ ((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (t0.c2))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((+ ((NOT (t0.c2)))));
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE (HEX(DISTINCT ((rt0.c0)AND(t0.c2)))) ORDER BY (0.20609881713507006 IN ())  NULLS LAST, COALESCE((rt0.c3 IN ()), (((t0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), ((rt0.c3)IS(t0.c1)), ((rt0.c0)<=(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((rt0.c0)AND(t0.c2)))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (0.20609881713507006 IN ())  NULLS LAST, COALESCE((rt0.c3 IN ()), (((t0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), ((rt0.c3)IS(t0.c1)), ((rt0.c0)<=(vt1.c0))));
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE (HEX(DISTINCT ((rt0.c0)AND(t0.c2)))) ORDER BY (0.20609881713507006 IN ())  NULLS LAST, COALESCE((rt0.c3 IN ()), (((t0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), ((rt0.c3)IS(t0.c1)), ((rt0.c0)<=(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((rt0.c0)AND(t0.c2)))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (0.20609881713507006 IN ())  NULLS LAST, COALESCE((rt0.c3 IN ()), (((t0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), ((rt0.c3)IS(t0.c1)), ((rt0.c0)<=(vt1.c0))));
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE (HEX(DISTINCT ((rt0.c0)AND(t0.c2)))) ORDER BY (0.20609881713507006 IN ())  NULLS LAST, COALESCE((rt0.c3 IN ()), (((t0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), ((rt0.c3)IS(t0.c1)), ((rt0.c0)<=(vt1.c0)));
SELECT * FROM vt0, t0 WHERE (0.9505805872682779);
SELECT SUM(count) FROM (SELECT ALL ((0.9505805872682779) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (0.9505805872682779);
SELECT SUM(count) FROM (SELECT ALL ((0.9505805872682779) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (0.9505805872682779);
SELECT ALL * FROM rt0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (t0.c2);
SELECT * FROM t0 WHERE (((((t0.c1) BETWEEN (t0.c75) AND (t0.c7)))<(((t0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) BETWEEN (t0.c75) AND (t0.c7)))<(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c1) BETWEEN (t0.c75) AND (t0.c7)))<(((t0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) BETWEEN (t0.c75) AND (t0.c7)))<(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c1) BETWEEN (t0.c75) AND (t0.c7)))<(((t0.c2) IS TRUE))));
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((rt0.c2) NOTNULL) COLLATE BINARY CROSS JOIN vt1 ON (((((((('XH')AND(((((1.848917286E9)OR(rt0.c3)))OR(t0.c1)))))OR(CAST(rt0.c2 AS TEXT))))OR(((t0.c75) BETWEEN (t0.c7) AND (rt0.c0)))))AND(((0.14952648324060402) IS TRUE))) WHERE ((- ((vt0.c0 IN ())))) ORDER BY (((vt1.c0, rt0.c1, rt0.c3)) BETWEEN ((((vt0.c0)*(rt0.c1)), rt0.c1, (((t0.c7, rt0.c3, vt1.c0)) BETWEEN ((vt1.c0, t0.c1, rt0.c3)) AND ((t0.c2, rt0.c2, vt0.c0))))) AND ((LIKELIHOOD(DISTINCT vt0.c0, 0.5457012193616358), LIKELY(vt0.c0), ((rt0.c2) NOT NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((rt0.c2) NOTNULL) COLLATE BINARY CROSS JOIN vt1 ON (((((((('XH')AND(((((1.848917286E9)OR(rt0.c3)))OR(t0.c1)))))OR(CAST(rt0.c2 AS TEXT))))OR(((t0.c75) BETWEEN (t0.c7) AND (rt0.c0)))))AND(((0.14952648324060402) IS TRUE))) ORDER BY (((vt1.c0, rt0.c1, rt0.c3)) BETWEEN ((((vt0.c0)*(rt0.c1)), rt0.c1, (((t0.c7, rt0.c3, vt1.c0)) BETWEEN ((vt1.c0, t0.c1, rt0.c3)) AND ((t0.c2, rt0.c2, vt0.c0))))) AND ((LIKELIHOOD(DISTINCT vt0.c0, 0.5457012193616358), LIKELY(vt0.c0), ((rt0.c2) NOT NULL)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((rt0.c2) NOTNULL) COLLATE BINARY CROSS JOIN vt1 ON (((((((('XH')AND(((((1.848917286E9)OR(rt0.c3)))OR(t0.c1)))))OR(CAST(rt0.c2 AS TEXT))))OR(((t0.c75) BETWEEN (t0.c7) AND (rt0.c0)))))AND(((0.14952648324060402) IS TRUE))) WHERE ((- ((vt0.c0 IN ())))) ORDER BY (((vt1.c0, rt0.c1, rt0.c3)) BETWEEN ((((vt0.c0)*(rt0.c1)), rt0.c1, (((t0.c7, rt0.c3, vt1.c0)) BETWEEN ((vt1.c0, t0.c1, rt0.c3)) AND ((t0.c2, rt0.c2, vt0.c0))))) AND ((LIKELIHOOD(DISTINCT vt0.c0, 0.5457012193616358), LIKELY(vt0.c0), ((rt0.c2) NOT NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((rt0.c2) NOTNULL) COLLATE BINARY CROSS JOIN vt1 ON (((((((('XH')AND(((((1.848917286E9)OR(rt0.c3)))OR(t0.c1)))))OR(CAST(rt0.c2 AS TEXT))))OR(((t0.c75) BETWEEN (t0.c7) AND (rt0.c0)))))AND(((0.14952648324060402) IS TRUE))) ORDER BY (((vt1.c0, rt0.c1, rt0.c3)) BETWEEN ((((vt0.c0)*(rt0.c1)), rt0.c1, (((t0.c7, rt0.c3, vt1.c0)) BETWEEN ((vt1.c0, t0.c1, rt0.c3)) AND ((t0.c2, rt0.c2, vt0.c0))))) AND ((LIKELIHOOD(DISTINCT vt0.c0, 0.5457012193616358), LIKELY(vt0.c0), ((rt0.c2) NOT NULL)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON ((rt0.c2) NOTNULL) COLLATE BINARY CROSS JOIN vt1 ON (((((((('XH')AND(((((1.848917286E9)OR(rt0.c3)))OR(t0.c1)))))OR(CAST(rt0.c2 AS TEXT))))OR(((t0.c75) BETWEEN (t0.c7) AND (rt0.c0)))))AND(((0.14952648324060402) IS TRUE))) WHERE ((- ((vt0.c0 IN ())))) ORDER BY (((vt1.c0, rt0.c1, rt0.c3)) BETWEEN ((((vt0.c0)*(rt0.c1)), rt0.c1, (((t0.c7, rt0.c3, vt1.c0)) BETWEEN ((vt1.c0, t0.c1, rt0.c3)) AND ((t0.c2, rt0.c2, vt0.c0))))) AND ((LIKELIHOOD(DISTINCT vt0.c0, 0.5457012193616358), LIKELY(vt0.c0), ((rt0.c2) NOT NULL)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE ((+ ((- (rt0.c2))))) ORDER BY CASE WHEN ((t0.c2) NOTNULL) THEN ((t0.c0) NOT BETWEEN ('-813847651') AND (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY CASE WHEN ((t0.c2) NOTNULL) THEN ((t0.c0) NOT BETWEEN ('-813847651') AND (vt1.c0)) END ASC);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE ((+ ((- (rt0.c2))))) ORDER BY CASE WHEN ((t0.c2) NOTNULL) THEN ((t0.c0) NOT BETWEEN ('-813847651') AND (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY CASE WHEN ((t0.c2) NOTNULL) THEN ((t0.c0) NOT BETWEEN ('-813847651') AND (vt1.c0)) END ASC);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE ((+ ((- (rt0.c2))))) ORDER BY CASE WHEN ((t0.c2) NOTNULL) THEN ((t0.c0) NOT BETWEEN ('-813847651') AND (vt1.c0)) END ASC;
SELECT ALL * FROM vt0, rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((t0.c75) IS FALSE))OR(CASE t0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE t0.c0 END)))OR(NULL)))OR((((t0.c7))>((vt1.c0))))))AND(((vt0.c0)==(rt0.c2)))) FULL OUTER JOIN t0 ON (((rt0.c1)) BETWEEN ((t0.c7 COLLATE BINARY)) AND ((((t0.c1)>>(t0.c2))))) WHERE ((((t0.c75)) BETWEEN ((((t0.c2) ISNULL))) AND ((((rt0.c3) BETWEEN (t0.c75) AND (t0.c1)))))) ORDER BY CAST((~ (rt0.c1)) AS BLOB)  NULLS LAST, vt0.c0 ASC, '335185327' ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c75)) BETWEEN ((((t0.c2) ISNULL))) AND ((((rt0.c3) BETWEEN (t0.c75) AND (t0.c1)))))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((t0.c75) IS FALSE))OR(CASE t0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE t0.c0 END)))OR(NULL)))OR((((t0.c7))>((vt1.c0))))))AND(((vt0.c0)=(rt0.c2)))) FULL OUTER JOIN t0 ON (((rt0.c1)) BETWEEN ((t0.c7 COLLATE BINARY)) AND ((((t0.c1)>>(t0.c2))))) ORDER BY CAST((~ (rt0.c1)) AS BLOB)  NULLS LAST, vt0.c0 ASC, '335185327' ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((t0.c75) IS FALSE))OR(CASE t0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE t0.c0 END)))OR(NULL)))OR((((t0.c7))>((vt1.c0))))))AND(((vt0.c0)==(rt0.c2)))) FULL OUTER JOIN t0 ON (((rt0.c1)) BETWEEN ((t0.c7 COLLATE BINARY)) AND ((((t0.c1)>>(t0.c2))))) WHERE ((((t0.c75)) BETWEEN ((((t0.c2) ISNULL))) AND ((((rt0.c3) BETWEEN (t0.c75) AND (t0.c1)))))) ORDER BY CAST((~ (rt0.c1)) AS BLOB)  NULLS LAST, vt0.c0 ASC, '335185327' ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c75)) BETWEEN ((((t0.c2) ISNULL))) AND ((((rt0.c3) BETWEEN (t0.c75) AND (t0.c1)))))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((t0.c75) IS FALSE))OR(CASE t0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE t0.c0 END)))OR(NULL)))OR((((t0.c7))>((vt1.c0))))))AND(((vt0.c0)=(rt0.c2)))) FULL OUTER JOIN t0 ON (((rt0.c1)) BETWEEN ((t0.c7 COLLATE BINARY)) AND ((((t0.c1)>>(t0.c2))))) ORDER BY CAST((~ (rt0.c1)) AS BLOB)  NULLS LAST, vt0.c0 ASC, '335185327' ASC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (CASE rt0.c0  WHEN t0.c2 THEN rt0.c1 WHEN NULL THEN vt1.c0 WHEN t0.c7 THEN t0.c2 ELSE rt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN t0.c2 THEN rt0.c1 WHEN NULL THEN vt1.c0 WHEN t0.c7 THEN t0.c2 ELSE rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (CASE rt0.c0  WHEN t0.c2 THEN rt0.c1 WHEN NULL THEN vt1.c0 WHEN t0.c7 THEN t0.c2 ELSE rt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN t0.c2 THEN rt0.c1 WHEN NULL THEN vt1.c0 WHEN t0.c7 THEN t0.c2 ELSE rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (CASE rt0.c0  WHEN t0.c2 THEN rt0.c1 WHEN NULL THEN vt1.c0 WHEN t0.c7 THEN t0.c2 ELSE rt0.c1 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (CAST(NULL AS BLOB)) ORDER BY ((x'1c81') BETWEEN (((((t0.c1)OR(rt0.c0)))OR(rt0.c2))) AND (((t0.c0) NOT BETWEEN (t0.c7) AND (x'')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((x'1c81') BETWEEN (((((t0.c1)OR(rt0.c0)))OR(rt0.c2))) AND (((t0.c0) NOT BETWEEN (t0.c7) AND (x'')))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (CAST(NULL AS BLOB)) ORDER BY ((x'1c81') BETWEEN (((((t0.c1)OR(rt0.c0)))OR(rt0.c2))) AND (((t0.c0) NOT BETWEEN (t0.c7) AND (x'')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((x'1c81') BETWEEN (((((t0.c1)OR(rt0.c0)))OR(rt0.c2))) AND (((t0.c0) NOT BETWEEN (t0.c7) AND (x'')))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (CAST(NULL AS BLOB)) ORDER BY ((x'1c81') BETWEEN (((((t0.c1)OR(rt0.c0)))OR(rt0.c2))) AND (((t0.c0) NOT BETWEEN (t0.c7) AND (x'')))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (TYPEOF(((x'') BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((x'') BETWEEN (vt0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (TYPEOF(((x'') BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((x'') BETWEEN (vt0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (TYPEOF(((x'') BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT ALL * FROM rt0, vt1 FULL OUTER JOIN vt0 ON (((rt0.c1 IN ())) ISNULL) WHERE ((((~ (rt0.c2)))||(((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c1))))) ORDER BY ((((x'')AND(((vt1.c0)+(rt0.c2)))))AND(0.9903584086521132))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2)))||(((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON (((rt0.c1 IN ())) ISNULL) ORDER BY ((((x'')AND(((vt1.c0)+(rt0.c2)))))AND(0.9903584086521132))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 FULL OUTER JOIN vt0 ON (((rt0.c1 IN ())) ISNULL) WHERE ((((~ (rt0.c2)))||(((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c1))))) ORDER BY ((((x'')AND(((vt1.c0)+(rt0.c2)))))AND(0.9903584086521132))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2)))||(((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON (((rt0.c1 IN ())) ISNULL) ORDER BY ((((x'')AND(((vt1.c0)+(rt0.c2)))))AND(0.9903584086521132))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 FULL OUTER JOIN vt0 ON (((rt0.c1 IN ())) ISNULL) WHERE ((((~ (rt0.c2)))||(((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c1))))) ORDER BY ((((x'')AND(((vt1.c0)+(rt0.c2)))))AND(0.9903584086521132))  NULLS FIRST;
SELECT * FROM t0, vt1, rt0 WHERE ((- (rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((- (rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE ((- (rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((- (rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE ((- (rt0.c3)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((((~ (t0.c1)))AND(((((((((t0.c75)OR(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c7)))))AND((t0.c0 IN ()))))AND(((((((((NULL)OR(t0.c0)))OR(t0.c75)))OR(t0.c2)))AND(t0.c2)))))AND(-1.619423419E9)));
SELECT SUM(count) FROM (SELECT (((((((((((~ (t0.c1)))AND(((((((((t0.c75)OR(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c7)))))AND((t0.c0 IN ()))))AND(((((((((NULL)OR(t0.c0)))OR(t0.c75)))OR(t0.c2)))AND(t0.c2)))))AND(-1.619423419E9))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((((~ (t0.c1)))AND(((((((((t0.c75)OR(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c7)))))AND((t0.c0 IN ()))))AND(((((((((NULL)OR(t0.c0)))OR(t0.c75)))OR(t0.c2)))AND(t0.c2)))))AND(-1.619423419E9)));
SELECT SUM(count) FROM (SELECT (((((((((((~ (t0.c1)))AND(((((((((t0.c75)OR(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c7)))))AND((t0.c0 IN ()))))AND(((((((((NULL)OR(t0.c0)))OR(t0.c75)))OR(t0.c2)))AND(t0.c2)))))AND(-1.619423419E9))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((((~ (t0.c1)))AND(((((((((t0.c75)OR(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c7)))))AND((t0.c0 IN ()))))AND(((((((((NULL)OR(t0.c0)))OR(t0.c75)))OR(t0.c2)))AND(t0.c2)))))AND(-1.619423419E9)));
SELECT COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (COALESCE(DISTINCT ((rt0.c1) IS FALSE), CAST(t0.c7 AS TEXT), (((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c7))), LENGTH(t0.c2))) ORDER BY ((((((x'69f6')AND(vt1.c0)))AND(vt0.c0)))&(((vt1.c0) BETWEEN (vt0.c0) AND (t0.c2))))  NULLS LAST, CASE WHEN (vt0.c0 IN ()) THEN CAST(t0.c0 AS NUMERIC) ELSE ((t0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((rt0.c1) IS FALSE), CAST(t0.c7 AS TEXT), (((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c7))), LENGTH(t0.c2))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY ((((((x'69f6')AND(vt1.c0)))AND(vt0.c0)))&(((vt1.c0) BETWEEN (vt0.c0) AND (t0.c2))))  NULLS LAST, CASE WHEN (vt0.c0 IN ()) THEN CAST(t0.c0 AS NUMERIC) ELSE ((t0.c0) NOT NULL) END);
SELECT COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (COALESCE(DISTINCT ((rt0.c1) IS FALSE), CAST(t0.c7 AS TEXT), (((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c7))), LENGTH(t0.c2))) ORDER BY ((((((x'69f6')AND(vt1.c0)))AND(vt0.c0)))&(((vt1.c0) BETWEEN (vt0.c0) AND (t0.c2))))  NULLS LAST, CASE WHEN (vt0.c0 IN ()) THEN CAST(t0.c0 AS NUMERIC) ELSE ((t0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((rt0.c1) IS FALSE), CAST(t0.c7 AS TEXT), (((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c7))), LENGTH(t0.c2))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY ((((((x'69f6')AND(vt1.c0)))AND(vt0.c0)))&(((vt1.c0) BETWEEN (vt0.c0) AND (t0.c2))))  NULLS LAST, CASE WHEN (vt0.c0 IN ()) THEN CAST(t0.c0 AS NUMERIC) ELSE ((t0.c0) NOT NULL) END);
SELECT COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (COALESCE(DISTINCT ((rt0.c1) IS FALSE), CAST(t0.c7 AS TEXT), (((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c7))), LENGTH(t0.c2))) ORDER BY ((((((x'69f6')AND(vt1.c0)))AND(vt0.c0)))&(((vt1.c0) BETWEEN (vt0.c0) AND (t0.c2))))  NULLS LAST, CASE WHEN (vt0.c0 IN ()) THEN CAST(t0.c0 AS NUMERIC) ELSE ((t0.c0) NOT NULL) END;
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((((((((~ (vt0.c0)))AND(UPPER(rt0.c2))))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)))AND((+ (rt0.c1)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (((((((((- (rt0.c1)))OR(((rt0.c0)%(rt0.c3)))))AND((- (rt0.c1)))))OR(CASE NULL  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN vt1.c0 THEN 0.18694719722772524 END)))OR(CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((~ (vt0.c0)))AND(UPPER(rt0.c2))))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)))AND((+ (rt0.c1)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((((((((- (rt0.c1)))OR(((rt0.c0)%(rt0.c3)))))AND((- (rt0.c1)))))OR(CASE NULL  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN vt1.c0 THEN 0.18694719722772524 END)))OR(CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((((((((~ (vt0.c0)))AND(UPPER(rt0.c2))))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)))AND((+ (rt0.c1)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (((((((((- (rt0.c1)))OR(((rt0.c0)%(rt0.c3)))))AND((- (rt0.c1)))))OR(CASE NULL  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN vt1.c0 THEN 0.18694719722772524 END)))OR(CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((~ (vt0.c0)))AND(UPPER(rt0.c2))))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)))AND((+ (rt0.c1)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((((((((- (rt0.c1)))OR(((rt0.c0)%(rt0.c3)))))AND((- (rt0.c1)))))OR(CASE NULL  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN vt1.c0 THEN 0.18694719722772524 END)))OR(CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((((((((~ (vt0.c0)))AND(UPPER(rt0.c2))))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)))AND((+ (rt0.c1)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (((((((((- (rt0.c1)))OR(((rt0.c0)%(rt0.c3)))))AND((- (rt0.c1)))))OR(CASE NULL  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN vt1.c0 THEN 0.18694719722772524 END)))OR(CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST;
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON (((0Xffffffffae33b393 IN (rt0.c3))) NOTNULL) FULL OUTER JOIN vt0 ON ((((rt0.c0) IS FALSE)) IS TRUE) RIGHT OUTER JOIN vt1 ON ((NULLIF('-899776182', t0.c0)) BETWEEN ((1503212091 IN ())) AND (((6.76285992E8) BETWEEN (t0.c1) AND (t0.c0)))) WHERE (NULLIF(CAST(vt0.c0 AS REAL), ((t0.c75) NOT NULL))) ORDER BY json_quote(CAST(t0.c2 AS TEXT)) ASC, ((rt0.c3) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CAST(vt0.c0 AS REAL), ((t0.c75) NOT NULL))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((0xffffffffae33b393 IN (rt0.c3))) NOTNULL) FULL OUTER JOIN vt0 ON ((((rt0.c0) IS FALSE)) IS TRUE) RIGHT OUTER JOIN vt1 ON ((NULLIF('-899776182', t0.c0)) BETWEEN ((1503212091 IN ())) AND (((6.76285992E8) BETWEEN (t0.c1) AND (t0.c0)))) ORDER BY json_quote(CAST(t0.c2 AS TEXT)) ASC, ((rt0.c3) IS FALSE) DESC);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON (((0Xffffffffae33b393 IN (rt0.c3))) NOTNULL) FULL OUTER JOIN vt0 ON ((((rt0.c0) IS FALSE)) IS TRUE) RIGHT OUTER JOIN vt1 ON ((NULLIF('-899776182', t0.c0)) BETWEEN ((1503212091 IN ())) AND (((6.76285992E8) BETWEEN (t0.c1) AND (t0.c0)))) WHERE (NULLIF(CAST(vt0.c0 AS REAL), ((t0.c75) NOT NULL))) ORDER BY json_quote(CAST(t0.c2 AS TEXT)) ASC, ((rt0.c3) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CAST(vt0.c0 AS REAL), ((t0.c75) NOT NULL))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((0xffffffffae33b393 IN (rt0.c3))) NOTNULL) FULL OUTER JOIN vt0 ON ((((rt0.c0) IS FALSE)) IS TRUE) RIGHT OUTER JOIN vt1 ON ((NULLIF('-899776182', t0.c0)) BETWEEN ((1503212091 IN ())) AND (((6.76285992E8) BETWEEN (t0.c1) AND (t0.c0)))) ORDER BY json_quote(CAST(t0.c2 AS TEXT)) ASC, ((rt0.c3) IS FALSE) DESC);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON (((0Xffffffffae33b393 IN (rt0.c3))) NOTNULL) FULL OUTER JOIN vt0 ON ((((rt0.c0) IS FALSE)) IS TRUE) RIGHT OUTER JOIN vt1 ON ((NULLIF('-899776182', t0.c0)) BETWEEN ((1503212091 IN ())) AND (((6.76285992E8) BETWEEN (t0.c1) AND (t0.c0)))) WHERE (NULLIF(CAST(vt0.c0 AS REAL), ((t0.c75) NOT NULL))) ORDER BY json_quote(CAST(t0.c2 AS TEXT)) ASC, ((rt0.c3) IS FALSE) DESC;
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (UPPER(((rt0.c1)<<(t0.c0)))) ORDER BY 'E*', COALESCE(((-1.382983099E9) IS FALSE), CASE WHEN t0.c0 THEN t0.c1 END);
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c1)<<(t0.c0)))) IS TRUE)  as count FROM rt0, vt0, vt1, t0 NOT INDEXED ORDER BY 'E*', COALESCE(((-1.382983099E9) IS FALSE), CASE WHEN t0.c0 THEN t0.c1 END));
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (UPPER(((rt0.c1)<<(t0.c0)))) ORDER BY 'E*', COALESCE(((-1.382983099E9) IS FALSE), CASE WHEN t0.c0 THEN t0.c1 END);
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c1)<<(t0.c0)))) IS TRUE)  as count FROM rt0, vt0, vt1, t0 NOT INDEXED ORDER BY 'E*', COALESCE(((-1.382983099E9) IS FALSE), CASE WHEN t0.c0 THEN t0.c1 END));
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (UPPER(((rt0.c1)<<(t0.c0)))) ORDER BY 'E*', COALESCE(((-1.382983099E9) IS FALSE), CASE WHEN t0.c0 THEN t0.c1 END);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (CAST(((NULL)/(rt0.c1)) AS BLOB)) ORDER BY ((CAST(t0.c0 AS NUMERIC))|(CAST('270968529' AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)/(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY ((CAST(t0.c0 AS NUMERIC))|(CAST('270968529' AS BLOB))) ASC);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (CAST(((NULL)/(rt0.c1)) AS BLOB)) ORDER BY ((CAST(t0.c0 AS NUMERIC))|(CAST('270968529' AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)/(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY ((CAST(t0.c0 AS NUMERIC))|(CAST('270968529' AS BLOB))) ASC);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (CAST(((NULL)/(rt0.c1)) AS BLOB)) ORDER BY ((CAST(t0.c0 AS NUMERIC))|(CAST('270968529' AS BLOB))) ASC;
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN t0 ON ((((CAST(rt0.c3 AS TEXT))OR(((t0.c2)OR(NULL)))))OR((~ (t0.c2)))) WHERE ((((t0.c7) BETWEEN (t0.c0) AND (t0.c75)) IN ())) ORDER BY rt0.c3, ((LIKELIHOOD(DISTINCT NULL, 0.5320809358766326))OR(t0.c75 COLLATE BINARY))  NULLS LAST, (rt0.c1 COLLATE NOCASE IN (((((t0.c75)OR(rt0.c0)))OR(t0.c2)), CAST(t0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c7) BETWEEN (t0.c0) AND (t0.c75)) IN ())) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN t0 ON ((((CAST(rt0.c3 AS TEXT))OR(((t0.c2)OR(NULL)))))OR((~ (t0.c2)))) ORDER BY rt0.c3, ((LIKELIHOOD(DISTINCT NULL, 0.5320809358766326))OR(t0.c75 COLLATE BINARY))  NULLS LAST, (rt0.c1 COLLATE NOCASE IN (((((t0.c75)OR(rt0.c0)))OR(t0.c2)), CAST(t0.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN t0 ON ((((CAST(rt0.c3 AS TEXT))OR(((t0.c2)OR(NULL)))))OR((~ (t0.c2)))) WHERE ((((t0.c7) BETWEEN (t0.c0) AND (t0.c75)) IN ())) ORDER BY rt0.c3, ((LIKELIHOOD(DISTINCT NULL, 0.5320809358766326))OR(t0.c75 COLLATE BINARY))  NULLS LAST, (rt0.c1 COLLATE NOCASE IN (((((t0.c75)OR(rt0.c0)))OR(t0.c2)), CAST(t0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c7) BETWEEN (t0.c0) AND (t0.c75)) IN ())) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN t0 ON ((((CAST(rt0.c3 AS TEXT))OR(((t0.c2)OR(NULL)))))OR((~ (t0.c2)))) ORDER BY rt0.c3, ((LIKELIHOOD(DISTINCT NULL, 0.5320809358766326))OR(t0.c75 COLLATE BINARY))  NULLS LAST, (rt0.c1 COLLATE NOCASE IN (((((t0.c75)OR(rt0.c0)))OR(t0.c2)), CAST(t0.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN t0 ON ((((CAST(rt0.c3 AS TEXT))OR(((t0.c2)OR(NULL)))))OR((~ (t0.c2)))) WHERE ((((t0.c7) BETWEEN (t0.c0) AND (t0.c75)) IN ())) ORDER BY rt0.c3, ((LIKELIHOOD(DISTINCT NULL, 0.5320809358766326))OR(t0.c75 COLLATE BINARY))  NULLS LAST, (rt0.c1 COLLATE NOCASE IN (((((t0.c75)OR(rt0.c0)))OR(t0.c2)), CAST(t0.c1 AS INTEGER)));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN ((rt0.c3 IN (t0.c2))) AND (((((rt0.c1)OR(rt0.c2)))OR(t0.c0))))) ORDER BY CASE ((rt0.c1)OR(t0.c7))  WHEN (('')<<(rt0.c1)) THEN (- (t0.c2)) WHEN (t0.c7 IN ()) THEN CAST(t0.c0 AS NUMERIC) WHEN ((vt1.c0) BETWEEN (x'') AND (t0.c2)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2)) ELSE CASE WHEN t0.c7 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN 1356507224 THEN t0.c2 ELSE t0.c75 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) NOT BETWEEN ((rt0.c3 IN (t0.c2))) AND (((((rt0.c1)OR(rt0.c2)))OR(t0.c0))))) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY CASE ((rt0.c1)OR(t0.c7))  WHEN (('')<<(rt0.c1)) THEN (- (t0.c2)) WHEN (t0.c7 IN ()) THEN CAST(t0.c0 AS NUMERIC) WHEN ((vt1.c0) BETWEEN (x'') AND (t0.c2)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2)) ELSE CASE WHEN t0.c7 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN 1356507224 THEN t0.c2 ELSE t0.c75 END END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN ((rt0.c3 IN (t0.c2))) AND (((((rt0.c1)OR(rt0.c2)))OR(t0.c0))))) ORDER BY CASE ((rt0.c1)OR(t0.c7))  WHEN (('')<<(rt0.c1)) THEN (- (t0.c2)) WHEN (t0.c7 IN ()) THEN CAST(t0.c0 AS NUMERIC) WHEN ((vt1.c0) BETWEEN (x'') AND (t0.c2)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2)) ELSE CASE WHEN t0.c7 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN 1356507224 THEN t0.c2 ELSE t0.c75 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) NOT BETWEEN ((rt0.c3 IN (t0.c2))) AND (((((rt0.c1)OR(rt0.c2)))OR(t0.c0))))) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY CASE ((rt0.c1)OR(t0.c7))  WHEN (('')<<(rt0.c1)) THEN (- (t0.c2)) WHEN (t0.c7 IN ()) THEN CAST(t0.c0 AS NUMERIC) WHEN ((vt1.c0) BETWEEN (x'') AND (t0.c2)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2)) ELSE CASE WHEN t0.c7 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN 1356507224 THEN t0.c2 ELSE t0.c75 END END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN ((rt0.c3 IN (t0.c2))) AND (((((rt0.c1)OR(rt0.c2)))OR(t0.c0))))) ORDER BY CASE ((rt0.c1)OR(t0.c7))  WHEN (('')<<(rt0.c1)) THEN (- (t0.c2)) WHEN (t0.c7 IN ()) THEN CAST(t0.c0 AS NUMERIC) WHEN ((vt1.c0) BETWEEN (x'') AND (t0.c2)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2)) ELSE CASE WHEN t0.c7 THEN t0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN 1356507224 THEN t0.c2 ELSE t0.c75 END END DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 CROSS JOIN vt1 ON (~ ((~ (vt1.c0)))) WHERE ((~ (CAST(vt1.c0 AS BLOB)))) ORDER BY COALESCE(CAST(rt0.c3 AS INTEGER), CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END, CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 END, ((rt0.c3)<<(rt0.c0)), (((('-574989047')OR(rt0.c1)))AND('')), ((rt0.c0)<=(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt1 ON (~ ((~ (vt1.c0)))) ORDER BY COALESCE(CAST(rt0.c3 AS INTEGER), CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END, CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 END, ((rt0.c3)<<(rt0.c0)), (((('-574989047')OR(rt0.c1)))AND('')), ((rt0.c0)<=(vt0.c0))) DESC);
SELECT ALL * FROM rt0, vt0 CROSS JOIN vt1 ON (~ ((~ (vt1.c0)))) WHERE ((~ (CAST(vt1.c0 AS BLOB)))) ORDER BY COALESCE(CAST(rt0.c3 AS INTEGER), CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END, CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 END, ((rt0.c3)<<(rt0.c0)), (((('-574989047')OR(rt0.c1)))AND('')), ((rt0.c0)<=(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt1 ON (~ ((~ (vt1.c0)))) ORDER BY COALESCE(CAST(rt0.c3 AS INTEGER), CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END, CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 END, ((rt0.c3)<<(rt0.c0)), (((('-574989047')OR(rt0.c1)))AND('')), ((rt0.c0)<=(vt0.c0))) DESC);
SELECT ALL * FROM rt0, vt0 CROSS JOIN vt1 ON (~ ((~ (vt1.c0)))) WHERE ((~ (CAST(vt1.c0 AS BLOB)))) ORDER BY COALESCE(CAST(rt0.c3 AS INTEGER), CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END, CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 END, ((rt0.c3)<<(rt0.c0)), (((('-574989047')OR(rt0.c1)))AND('')), ((rt0.c0)<=(vt0.c0))) DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC)) ORDER BY (NOT (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC)) ORDER BY (NOT (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC)) ORDER BY (NOT (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (((((((((t0.c1)AND(rt0.c2)))AND(rt0.c2)))OR(t0.c2)))AND(t0.c1)) IN ()) RIGHT OUTER JOIN rt0 ON ((((((vt1.c0)|(t0.c1)))AND(vt1.c0)))AND((((vt1.c0)) NOT BETWEEN ((t0.c1)) AND ((rt0.c0))))) WHERE (((((CAST(t0.c1 AS NUMERIC))OR(UPPER(DISTINCT 0.570133073720255))))OR(COALESCE(t0.c0, t0.c0)))) ORDER BY (NOT (t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c1 AS NUMERIC))OR(UPPER(DISTINCT 0.570133073720255))))OR(COALESCE(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (((((((((t0.c1)AND(rt0.c2)))AND(rt0.c2)))OR(t0.c2)))AND(t0.c1)) IN ()) RIGHT OUTER JOIN rt0 ON ((((((vt1.c0)|(t0.c1)))AND(vt1.c0)))AND((((vt1.c0)) NOT BETWEEN ((t0.c1)) AND ((rt0.c0))))) ORDER BY (NOT (t0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (((((((((t0.c1)AND(rt0.c2)))AND(rt0.c2)))OR(t0.c2)))AND(t0.c1)) IN ()) RIGHT OUTER JOIN rt0 ON ((((((vt1.c0)|(t0.c1)))AND(vt1.c0)))AND((((vt1.c0)) NOT BETWEEN ((t0.c1)) AND ((rt0.c0))))) WHERE (((((CAST(t0.c1 AS NUMERIC))OR(UPPER(DISTINCT 0.570133073720255))))OR(COALESCE(t0.c0, t0.c0)))) ORDER BY (NOT (t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c1 AS NUMERIC))OR(UPPER(DISTINCT 0.570133073720255))))OR(COALESCE(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (((((((((t0.c1)AND(rt0.c2)))AND(rt0.c2)))OR(t0.c2)))AND(t0.c1)) IN ()) RIGHT OUTER JOIN rt0 ON ((((((vt1.c0)|(t0.c1)))AND(vt1.c0)))AND((((vt1.c0)) NOT BETWEEN ((t0.c1)) AND ((rt0.c0))))) ORDER BY (NOT (t0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (((((((((t0.c1)AND(rt0.c2)))AND(rt0.c2)))OR(t0.c2)))AND(t0.c1)) IN ()) RIGHT OUTER JOIN rt0 ON ((((((vt1.c0)|(t0.c1)))AND(vt1.c0)))AND((((vt1.c0)) NOT BETWEEN ((t0.c1)) AND ((rt0.c0))))) WHERE (((((CAST(t0.c1 AS NUMERIC))OR(UPPER(DISTINCT 0.570133073720255))))OR(COALESCE(t0.c0, t0.c0)))) ORDER BY (NOT (t0.c0))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (x'7da72498');
SELECT SUM(count) FROM (SELECT ALL ((x'7da72498') IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (x'7da72498');
SELECT SUM(count) FROM (SELECT ALL ((x'7da72498') IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (x'7da72498');
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((rt0.c3)<(t0.c75)) COLLATE RTRIM CROSS JOIN rt0 ON CAST(t0.c0 AS TEXT) INNER JOIN vt1 ON 829053575 WHERE ((- (rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((rt0.c3)<(t0.c75)) COLLATE RTRIM CROSS JOIN rt0 ON CAST(t0.c0 AS TEXT) INNER JOIN vt1 ON 829053575);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((rt0.c3)<(t0.c75)) COLLATE RTRIM CROSS JOIN rt0 ON CAST(t0.c0 AS TEXT) INNER JOIN vt1 ON 829053575 WHERE ((- (rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((rt0.c3)<(t0.c75)) COLLATE RTRIM CROSS JOIN rt0 ON CAST(t0.c0 AS TEXT) INNER JOIN vt1 ON 829053575);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((rt0.c3)<(t0.c75)) COLLATE RTRIM CROSS JOIN rt0 ON CAST(t0.c0 AS TEXT) INNER JOIN vt1 ON 829053575 WHERE ((- (rt0.c3)) COLLATE RTRIM);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((t0.c7) NOTNULL) IN ())) ORDER BY ((((((vt0.c0)AND(t0.c2)))AND(t0.c1)))-(CASE t0.c2  WHEN t0.c7 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c7) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((((vt0.c0)AND(t0.c2)))AND(t0.c1)))-(CASE t0.c2  WHEN t0.c7 THEN t0.c0 END)));
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((t0.c7) NOTNULL) IN ())) ORDER BY ((((((vt0.c0)AND(t0.c2)))AND(t0.c1)))-(CASE t0.c2  WHEN t0.c7 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c7) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((((vt0.c0)AND(t0.c2)))AND(t0.c1)))-(CASE t0.c2  WHEN t0.c7 THEN t0.c0 END)));
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((t0.c7) NOTNULL) IN ())) ORDER BY ((((((vt0.c0)AND(t0.c2)))AND(t0.c1)))-(CASE t0.c2  WHEN t0.c7 THEN t0.c0 END));
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE (json(((rt0.c2) NOT BETWEEN ('1807619864') AND (rt0.c2)))) ORDER BY (((TRIM(DISTINCT vt1.c0)))>((SQLITE_COMPILEOPTION_GET(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json(((rt0.c2) NOT BETWEEN ('1807619864') AND (rt0.c2)))) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY (((TRIM(DISTINCT vt1.c0)))>((SQLITE_COMPILEOPTION_GET(rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE (json(((rt0.c2) NOT BETWEEN ('1807619864') AND (rt0.c2)))) ORDER BY (((TRIM(DISTINCT vt1.c0)))>((SQLITE_COMPILEOPTION_GET(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json(((rt0.c2) NOT BETWEEN ('1807619864') AND (rt0.c2)))) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY (((TRIM(DISTINCT vt1.c0)))>((SQLITE_COMPILEOPTION_GET(rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE (json(((rt0.c2) NOT BETWEEN ('1807619864') AND (rt0.c2)))) ORDER BY (((TRIM(DISTINCT vt1.c0)))>((SQLITE_COMPILEOPTION_GET(rt0.c3))))  NULLS FIRST;
SELECT ALL * FROM t0 INNER JOIN vt0 ON (t0.c2 IN ()) WHERE (((((((((((t0.c0)AND(t0.c2)))AND(t0.c7)))OR(t0.c0)))OR('')))+(IFNULL(DISTINCT t0.c1, t0.c7))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)AND(t0.c2)))AND(t0.c7)))OR(t0.c0)))OR('')))+(IFNULL(DISTINCT t0.c1, t0.c7)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (t0.c2 IN ()));
SELECT ALL * FROM t0 INNER JOIN vt0 ON (t0.c2 IN ()) WHERE (((((((((((t0.c0)AND(t0.c2)))AND(t0.c7)))OR(t0.c0)))OR('')))+(IFNULL(DISTINCT t0.c1, t0.c7))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)AND(t0.c2)))AND(t0.c7)))OR(t0.c0)))OR('')))+(IFNULL(DISTINCT t0.c1, t0.c7)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (t0.c2 IN ()));
SELECT ALL * FROM t0 INNER JOIN vt0 ON (t0.c2 IN ()) WHERE (((((((((((t0.c0)AND(t0.c2)))AND(t0.c7)))OR(t0.c0)))OR('')))+(IFNULL(DISTINCT t0.c1, t0.c7))));
SELECT ALL * FROM t0 WHERE (UNICODE(t0.c7 COLLATE BINARY)) ORDER BY ((((t0.c75)-(t0.c1))) BETWEEN (0.9782742398459469) AND (CASE WHEN '1937238114' THEN t0.c75 ELSE t0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(t0.c7 COLLATE BINARY)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c75)-(t0.c1))) BETWEEN (0.9782742398459469) AND (CASE WHEN '1937238114' THEN t0.c75 ELSE t0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (UNICODE(t0.c7 COLLATE BINARY)) ORDER BY ((((t0.c75)-(t0.c1))) BETWEEN (0.9782742398459469) AND (CASE WHEN '1937238114' THEN t0.c75 ELSE t0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(t0.c7 COLLATE BINARY)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c75)-(t0.c1))) BETWEEN (0.9782742398459469) AND (CASE WHEN '1937238114' THEN t0.c75 ELSE t0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (UNICODE(t0.c7 COLLATE BINARY)) ORDER BY ((((t0.c75)-(t0.c1))) BETWEEN (0.9782742398459469) AND (CASE WHEN '1937238114' THEN t0.c75 ELSE t0.c0 END)) ASC  NULLS LAST;
SELECT * FROM vt1, t0, vt0 WHERE (((CASE WHEN t0.c1 THEN '' ELSE t0.c1 END)AND(((((((((t0.c75)OR(NULL)))OR(t0.c1)))OR(t0.c75)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c1 THEN '' ELSE t0.c1 END)AND(((((((((t0.c75)OR(NULL)))OR(t0.c1)))OR(t0.c75)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((CASE WHEN t0.c1 THEN '' ELSE t0.c1 END)AND(((((((((t0.c75)OR(NULL)))OR(t0.c1)))OR(t0.c75)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c1 THEN '' ELSE t0.c1 END)AND(((((((((t0.c75)OR(NULL)))OR(t0.c1)))OR(t0.c75)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((CASE WHEN t0.c1 THEN '' ELSE t0.c1 END)AND(((((((((t0.c75)OR(NULL)))OR(t0.c1)))OR(t0.c75)))AND(vt0.c0)))));
SELECT * FROM vt1, rt0 WHERE ('-245688995') ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-245688995') IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ('-245688995') ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-245688995') IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ('-245688995') ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN 0.5814441646607171 THEN MIN(rt0.c0, rt0.c1, rt0.c0, rt0.c0) WHEN CAST(rt0.c0 AS BLOB) THEN (~ (rt0.c0)) WHEN ((rt0.c2) IS FALSE) THEN SQLITE_COMPILEOPTION_GET(vt0.c0) ELSE vt1.c0 COLLATE RTRIM END CROSS JOIN vt0 ON rt0.c3 WHERE (CASE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0))  WHEN ((vt1.c0)>=(rt0.c1)) THEN CAST(rt0.c2 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0))  WHEN ((vt1.c0)>=(rt0.c1)) THEN CAST(rt0.c2 AS REAL) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN 0.5814441646607171 THEN MIN(rt0.c0, rt0.c1, rt0.c0, rt0.c0) WHEN CAST(rt0.c0 AS BLOB) THEN (~ (rt0.c0)) WHEN ((rt0.c2) IS FALSE) THEN SQLITE_COMPILEOPTION_GET(vt0.c0) ELSE vt1.c0 COLLATE RTRIM END CROSS JOIN vt0 ON rt0.c3);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN 0.5814441646607171 THEN MIN(rt0.c0, rt0.c1, rt0.c0, rt0.c0) WHEN CAST(rt0.c0 AS BLOB) THEN (~ (rt0.c0)) WHEN ((rt0.c2) IS FALSE) THEN SQLITE_COMPILEOPTION_GET(vt0.c0) ELSE vt1.c0 COLLATE RTRIM END CROSS JOIN vt0 ON rt0.c3 WHERE (CASE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0))  WHEN ((vt1.c0)>=(rt0.c1)) THEN CAST(rt0.c2 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0))  WHEN ((vt1.c0)>=(rt0.c1)) THEN CAST(rt0.c2 AS REAL) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN 0.5814441646607171 THEN MIN(rt0.c0, rt0.c1, rt0.c0, rt0.c0) WHEN CAST(rt0.c0 AS BLOB) THEN (~ (rt0.c0)) WHEN ((rt0.c2) IS FALSE) THEN SQLITE_COMPILEOPTION_GET(vt0.c0) ELSE vt1.c0 COLLATE RTRIM END CROSS JOIN vt0 ON rt0.c3);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOTNULL) INNER JOIN rt0 ON rt0.c1 RIGHT OUTER JOIN vt1 ON (+ (((t0.c75) IS FALSE))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOTNULL) INNER JOIN rt0 ON rt0.c1 RIGHT OUTER JOIN vt1 ON (+ (((t0.c75) IS FALSE))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOTNULL) INNER JOIN rt0 ON rt0.c1 RIGHT OUTER JOIN vt1 ON (+ (((t0.c75) IS FALSE))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOTNULL) INNER JOIN rt0 ON rt0.c1 RIGHT OUTER JOIN vt1 ON (+ (((t0.c75) IS FALSE))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOTNULL) INNER JOIN rt0 ON rt0.c1 RIGHT OUTER JOIN vt1 ON (+ (((t0.c75) IS FALSE))) WHERE (rt0.c3);
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE (((t0.c1 IN (rt0.c1, rt0.c2)) IN (CAST(1128178123 AS INTEGER)))) ORDER BY ((((t0.c1)*(rt0.c2)))AND(((((((((t0.c75)AND(rt0.c0)))AND(t0.c2)))AND(rt0.c0)))AND(vt0.c0)))), ((((t0.c75)-(vt0.c0)))>=(((vt1.c0)<=('0.8462071339219821'))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 IN (rt0.c1, rt0.c2)) IN (CAST(1128178123 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY ((((t0.c1)*(rt0.c2)))AND(((((((((t0.c75)AND(rt0.c0)))AND(t0.c2)))AND(rt0.c0)))AND(vt0.c0)))), ((((t0.c75)-(vt0.c0)))>=(((vt1.c0)<=('0.8462071339219821')))));
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE (((t0.c1 IN (rt0.c1, rt0.c2)) IN (CAST(1128178123 AS INTEGER)))) ORDER BY ((((t0.c1)*(rt0.c2)))AND(((((((((t0.c75)AND(rt0.c0)))AND(t0.c2)))AND(rt0.c0)))AND(vt0.c0)))), ((((t0.c75)-(vt0.c0)))>=(((vt1.c0)<=('0.8462071339219821'))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 IN (rt0.c1, rt0.c2)) IN (CAST(1128178123 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY ((((t0.c1)*(rt0.c2)))AND(((((((((t0.c75)AND(rt0.c0)))AND(t0.c2)))AND(rt0.c0)))AND(vt0.c0)))), ((((t0.c75)-(vt0.c0)))>=(((vt1.c0)<=('0.8462071339219821')))));
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE (((t0.c1 IN (rt0.c1, rt0.c2)) IN (CAST(1128178123 AS INTEGER)))) ORDER BY ((((t0.c1)*(rt0.c2)))AND(((((((((t0.c75)AND(rt0.c0)))AND(t0.c2)))AND(rt0.c0)))AND(vt0.c0)))), ((((t0.c75)-(vt0.c0)))>=(((vt1.c0)<=('0.8462071339219821'))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE ((((rt0.c3 COLLATE BINARY))>((CASE rt0.c0  WHEN t0.c1 THEN t0.c7 WHEN rt0.c3 THEN t0.c0 WHEN t0.c75 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 COLLATE BINARY))>((CASE rt0.c0  WHEN t0.c1 THEN t0.c7 WHEN rt0.c3 THEN t0.c0 WHEN t0.c75 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE ((((rt0.c3 COLLATE BINARY))>((CASE rt0.c0  WHEN t0.c1 THEN t0.c7 WHEN rt0.c3 THEN t0.c0 WHEN t0.c75 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 COLLATE BINARY))>((CASE rt0.c0  WHEN t0.c1 THEN t0.c7 WHEN rt0.c3 THEN t0.c0 WHEN t0.c75 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE ((((rt0.c3 COLLATE BINARY))>((CASE rt0.c0  WHEN t0.c1 THEN t0.c7 WHEN rt0.c3 THEN t0.c0 WHEN t0.c75 THEN vt1.c0 END))));
SELECT * FROM vt0 WHERE ((+ ('')));
SELECT SUM(count) FROM (SELECT (((+ (''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ ('')));
SELECT SUM(count) FROM (SELECT (((+ (''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ ('')));
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE WHEN CAST(t0.c1 AS BLOB) THEN ((rt0.c1)%(t0.c1)) WHEN CASE WHEN vt0.c0 THEN t0.c1 ELSE rt0.c3 END THEN ((((((((rt0.c1)AND(rt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c1)) WHEN (((rt0.c2, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, NULL)) AND ((rt0.c2, rt0.c3, vt0.c0))) THEN (vt0.c0 IN ()) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c1 AS BLOB) THEN ((rt0.c1)%(t0.c1)) WHEN CASE WHEN vt0.c0 THEN t0.c1 ELSE rt0.c3 END THEN ((((((((rt0.c1)AND(rt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c1)) WHEN (((rt0.c2, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, NULL)) AND ((rt0.c2, rt0.c3, vt0.c0))) THEN (vt0.c0 IN ()) ELSE x'' END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE WHEN CAST(t0.c1 AS BLOB) THEN ((rt0.c1)%(t0.c1)) WHEN CASE WHEN vt0.c0 THEN t0.c1 ELSE rt0.c3 END THEN ((((((((rt0.c1)AND(rt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c1)) WHEN (((rt0.c2, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, NULL)) AND ((rt0.c2, rt0.c3, vt0.c0))) THEN (vt0.c0 IN ()) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c1 AS BLOB) THEN ((rt0.c1)%(t0.c1)) WHEN CASE WHEN vt0.c0 THEN t0.c1 ELSE rt0.c3 END THEN ((((((((rt0.c1)AND(rt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c1)) WHEN (((rt0.c2, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, NULL)) AND ((rt0.c2, rt0.c3, vt0.c0))) THEN (vt0.c0 IN ()) ELSE x'' END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE WHEN CAST(t0.c1 AS BLOB) THEN ((rt0.c1)%(t0.c1)) WHEN CASE WHEN vt0.c0 THEN t0.c1 ELSE rt0.c3 END THEN ((((((((rt0.c1)AND(rt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c1)) WHEN (((rt0.c2, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, NULL)) AND ((rt0.c2, rt0.c3, vt0.c0))) THEN (vt0.c0 IN ()) ELSE x'' END);
SELECT COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (((((((((((((((((rt0.c2)AND(rt0.c2)))AND(t0.c1)))AND(rt0.c3)))OR(t0.c1)))AND(vt0.c0)))OR(vt1.c0)))AND(CAST(t0.c2 AS BLOB))))OR(CASE WHEN t0.c7 THEN t0.c2 ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((rt0.c2)AND(rt0.c2)))AND(t0.c1)))AND(rt0.c3)))OR(t0.c1)))AND(vt0.c0)))OR(vt1.c0)))AND(CAST(t0.c2 AS BLOB))))OR(CASE WHEN t0.c7 THEN t0.c2 ELSE t0.c2 END))) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (((((((((((((((((rt0.c2)AND(rt0.c2)))AND(t0.c1)))AND(rt0.c3)))OR(t0.c1)))AND(vt0.c0)))OR(vt1.c0)))AND(CAST(t0.c2 AS BLOB))))OR(CASE WHEN t0.c7 THEN t0.c2 ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((rt0.c2)AND(rt0.c2)))AND(t0.c1)))AND(rt0.c3)))OR(t0.c1)))AND(vt0.c0)))OR(vt1.c0)))AND(CAST(t0.c2 AS BLOB))))OR(CASE WHEN t0.c7 THEN t0.c2 ELSE t0.c2 END))) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (((((((((((((((((rt0.c2)AND(rt0.c2)))AND(t0.c1)))AND(rt0.c3)))OR(t0.c1)))AND(vt0.c0)))OR(vt1.c0)))AND(CAST(t0.c2 AS BLOB))))OR(CASE WHEN t0.c7 THEN t0.c2 ELSE t0.c2 END)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((ABS(-1374448676), ((rt0.c0) IS TRUE), vt0.c0))>=((((rt0.c0) NOT BETWEEN ('1618785340') AND (rt0.c3)), 0.007523164181245989, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM) ORDER BY ((((rt0.c2)>=(vt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (TRIM(rt0.c0, rt0.c0))) ASC  NULLS FIRST, (((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((ABS(-1374448676), ((rt0.c0) IS TRUE), vt0.c0))>=((((rt0.c0) NOT BETWEEN ('1618785340') AND (rt0.c3)), 0.007523164181245989, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((rt0.c2)>=(vt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (TRIM(rt0.c0, rt0.c0))) ASC  NULLS FIRST, (((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((rt0.c3))) ASC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((ABS(-1374448676), ((rt0.c0) IS TRUE), vt0.c0))>=((((rt0.c0) NOT BETWEEN ('1618785340') AND (rt0.c3)), 0.007523164181245989, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM) ORDER BY ((((rt0.c2)>=(vt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (TRIM(rt0.c0, rt0.c0))) ASC  NULLS FIRST, (((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((ABS(-1374448676), ((rt0.c0) IS TRUE), vt0.c0))>=((((rt0.c0) NOT BETWEEN ('1618785340') AND (rt0.c3)), 0.007523164181245989, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((rt0.c2)>=(vt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (TRIM(rt0.c0, rt0.c0))) ASC  NULLS FIRST, (((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((rt0.c3))) ASC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((ABS(-1374448676), ((rt0.c0) IS TRUE), vt0.c0))>=((((rt0.c0) NOT BETWEEN ('1618785340') AND (rt0.c3)), 0.007523164181245989, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM) ORDER BY ((((rt0.c2)>=(vt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (TRIM(rt0.c0, rt0.c0))) ASC  NULLS FIRST, (((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((rt0.c3))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN NULL THEN (rt0.c3 IN ()) WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) THEN (- ('1131451748')) WHEN (((rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, vt0.c0))) THEN (rt0.c3 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN (rt0.c3 IN ()) WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) THEN (- ('1131451748')) WHEN (((rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, vt0.c0))) THEN (rt0.c3 IN ()) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN NULL THEN (rt0.c3 IN ()) WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) THEN (- ('1131451748')) WHEN (((rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, vt0.c0))) THEN (rt0.c3 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN (rt0.c3 IN ()) WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) THEN (- ('1131451748')) WHEN (((rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, vt0.c0))) THEN (rt0.c3 IN ()) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN NULL THEN (rt0.c3 IN ()) WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) THEN (- ('1131451748')) WHEN (((rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, vt0.c0))) THEN (rt0.c3 IN ()) END);
SELECT * FROM rt0 WHERE (((((rt0.c1)*(rt0.c0)))|(((rt0.c0)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)*(rt0.c0)))|(((rt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)*(rt0.c0)))|(((rt0.c0)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)*(rt0.c0)))|(((rt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)*(rt0.c0)))|(((rt0.c0)%(rt0.c2)))));
SELECT ALL * FROM rt0, vt1, t0 WHERE ((t0.c2 IN ()) COLLATE RTRIM) ORDER BY rt0.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY rt0.c3 ASC);
SELECT ALL * FROM rt0, vt1, t0 WHERE ((t0.c2 IN ()) COLLATE RTRIM) ORDER BY rt0.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY rt0.c3 ASC);
SELECT ALL * FROM rt0, vt1, t0 WHERE ((t0.c2 IN ()) COLLATE RTRIM) ORDER BY rt0.c3 ASC;
SELECT * FROM rt0 INNER JOIN vt0 ON t0.c75 CROSS JOIN t0 ON (((~ (t0.c2)))>>(NULL)) RIGHT OUTER JOIN vt1 ON (vt1.c0 IN (((rt0.c0)IS(t0.c0)), (('')IS NOT('')))) WHERE (((((rt0.c2)<=(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<=(t0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON t0.c75 CROSS JOIN t0 ON (((~ (t0.c2)))>>(NULL)) RIGHT OUTER JOIN vt1 ON (vt1.c0 IN (((rt0.c0)IS(t0.c0)), (('')IS NOT('')))));
SELECT * FROM rt0 INNER JOIN vt0 ON t0.c75 CROSS JOIN t0 ON (((~ (t0.c2)))>>(NULL)) RIGHT OUTER JOIN vt1 ON (vt1.c0 IN (((rt0.c0)IS(t0.c0)), (('')IS NOT('')))) WHERE (((((rt0.c2)<=(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<=(t0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON t0.c75 CROSS JOIN t0 ON (((~ (t0.c2)))>>(NULL)) RIGHT OUTER JOIN vt1 ON (vt1.c0 IN (((rt0.c0)IS(t0.c0)), (('')IS NOT('')))));
SELECT ALL * FROM vt1, vt0 WHERE (load_extension(vt0.c0 COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension(vt0.c0 COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (load_extension(vt0.c0 COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension(vt0.c0 COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE (CASE ((rt0.c3)IS NOT(vt0.c0))  WHEN ((((((((((((t0.c0)AND(t0.c2)))OR(rt0.c2)))AND(t0.c75)))AND(t0.c75)))AND(rt0.c1)))AND(t0.c75)) THEN CASE WHEN rt0.c2 THEN rt0.c3 ELSE t0.c7 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3)IS NOT(vt0.c0))  WHEN ((((((((((((t0.c0)AND(t0.c2)))OR(rt0.c2)))AND(t0.c75)))AND(t0.c75)))AND(rt0.c1)))AND(t0.c75)) THEN CASE WHEN rt0.c2 THEN rt0.c3 ELSE t0.c7 END END) IS TRUE)  as count FROM rt0, vt1, vt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE (CASE ((rt0.c3)IS NOT(vt0.c0))  WHEN ((((((((((((t0.c0)AND(t0.c2)))OR(rt0.c2)))AND(t0.c75)))AND(t0.c75)))AND(rt0.c1)))AND(t0.c75)) THEN CASE WHEN rt0.c2 THEN rt0.c3 ELSE t0.c7 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3)IS NOT(vt0.c0))  WHEN ((((((((((((t0.c0)AND(t0.c2)))OR(rt0.c2)))AND(t0.c75)))AND(t0.c75)))AND(rt0.c1)))AND(t0.c75)) THEN CASE WHEN rt0.c2 THEN rt0.c3 ELSE t0.c7 END END) IS TRUE)  as count FROM rt0, vt1, vt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE (CASE ((rt0.c3)IS NOT(vt0.c0))  WHEN ((((((((((((t0.c0)AND(t0.c2)))OR(rt0.c2)))AND(t0.c75)))AND(t0.c75)))AND(rt0.c1)))AND(t0.c75)) THEN CASE WHEN rt0.c2 THEN rt0.c3 ELSE t0.c7 END END);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON ((vt0.c0)IS(t0.c0)) CROSS JOIN vt0 ON x'e46c' WHERE (((((vt1.c0) NOTNULL)) NOTNULL)) ORDER BY STRFTIME('0.8778820956898741', t0.c2, vt0.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON ((vt0.c0)IS(t0.c0)) CROSS JOIN vt0 ON x'e46c' ORDER BY STRFTIME('0.8778820956898741', t0.c2, vt0.c0) COLLATE BINARY);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON ((vt0.c0)IS(t0.c0)) CROSS JOIN vt0 ON x'e46c' WHERE (((((vt1.c0) NOTNULL)) NOTNULL)) ORDER BY STRFTIME('0.8778820956898741', t0.c2, vt0.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON ((vt0.c0)IS(t0.c0)) CROSS JOIN vt0 ON x'e46c' ORDER BY STRFTIME('0.8778820956898741', t0.c2, vt0.c0) COLLATE BINARY);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((~ (vt1.c0)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON t0.c75 WHERE ((((rt0.c2)+(rt0.c2)) IN ())) ORDER BY CASE WHEN CAST(t0.c2 AS INTEGER) THEN ((t0.c2) NOT BETWEEN (t0.c75) AND (rt0.c3)) ELSE (((rt0.c2, rt0.c3, t0.c1)) BETWEEN ((t0.c0, t0.c1, NULL)) AND ((t0.c0, t0.c7, rt0.c2))) END DESC, (((t0.c75 IN ())) BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)+(rt0.c2)) IN ())) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON t0.c75 ORDER BY CASE WHEN CAST(t0.c2 AS INTEGER) THEN ((t0.c2) NOT BETWEEN (t0.c75) AND (rt0.c3)) ELSE (((rt0.c2, rt0.c3, t0.c1)) BETWEEN ((t0.c0, t0.c1, NULL)) AND ((t0.c0, t0.c7, rt0.c2))) END DESC, (((t0.c75 IN ())) BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON t0.c75 WHERE ((((rt0.c2)+(rt0.c2)) IN ())) ORDER BY CASE WHEN CAST(t0.c2 AS INTEGER) THEN ((t0.c2) NOT BETWEEN (t0.c75) AND (rt0.c3)) ELSE (((rt0.c2, rt0.c3, t0.c1)) BETWEEN ((t0.c0, t0.c1, NULL)) AND ((t0.c0, t0.c7, rt0.c2))) END DESC, (((t0.c75 IN ())) BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)+(rt0.c2)) IN ())) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON t0.c75 ORDER BY CASE WHEN CAST(t0.c2 AS INTEGER) THEN ((t0.c2) NOT BETWEEN (t0.c75) AND (rt0.c3)) ELSE (((rt0.c2, rt0.c3, t0.c1)) BETWEEN ((t0.c0, t0.c1, NULL)) AND ((t0.c0, t0.c7, rt0.c2))) END DESC, (((t0.c75 IN ())) BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON t0.c75 WHERE ((((rt0.c2)+(rt0.c2)) IN ())) ORDER BY CASE WHEN CAST(t0.c2 AS INTEGER) THEN ((t0.c2) NOT BETWEEN (t0.c75) AND (rt0.c3)) ELSE (((rt0.c2, rt0.c3, t0.c1)) BETWEEN ((t0.c0, t0.c1, NULL)) AND ((t0.c0, t0.c7, rt0.c2))) END DESC, (((t0.c75 IN ())) BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c0) ISNULL)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON t0.c7 WHERE (((t0.c7 COLLATE RTRIM) IS TRUE)) ORDER BY ((((((((x'aa91')AND(rt0.c2)))AND(rt0.c2)))AND(0.09434323416678236)))OR((((rt0.c0, t0.c0, t0.c7))<>((t0.c2, rt0.c2, t0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c7 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON t0.c7 ORDER BY ((((((((x'aa91')AND(rt0.c2)))AND(rt0.c2)))AND(0.09434323416678236)))OR((((rt0.c0, t0.c0, t0.c7))<>((t0.c2, rt0.c2, t0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON t0.c7 WHERE (((t0.c7 COLLATE RTRIM) IS TRUE)) ORDER BY ((((((((x'aa91')AND(rt0.c2)))AND(rt0.c2)))AND(0.09434323416678236)))OR((((rt0.c0, t0.c0, t0.c7))<>((t0.c2, rt0.c2, t0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c7 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON t0.c7 ORDER BY ((((((((x'aa91')AND(rt0.c2)))AND(rt0.c2)))AND(0.09434323416678236)))OR((((rt0.c0, t0.c0, t0.c7))<>((t0.c2, rt0.c2, t0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON t0.c7 WHERE (((t0.c7 COLLATE RTRIM) IS TRUE)) ORDER BY ((((((((x'aa91')AND(rt0.c2)))AND(rt0.c2)))AND(0.09434323416678236)))OR((((rt0.c0, t0.c0, t0.c7))<>((t0.c2, rt0.c2, t0.c1))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((((((((t0.c7) BETWEEN (NULL) AND (t0.c2)))AND((t0.c7 IN ()))))AND(((t0.c75)IS NOT(t0.c0)))))AND(0.3158979337795237)))OR(((((vt0.c0)AND(t0.c0)))OR(vt0.c0))))) ORDER BY (CASE WHEN t0.c2 THEN t0.c1 END IN (((vt0.c0)=(t0.c2)))), ((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0)>(t0.c7))) AND (CAST(vt1.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c7) BETWEEN (NULL) AND (t0.c2)))AND((t0.c7 IN ()))))AND(((t0.c75)IS NOT(t0.c0)))))AND(0.3158979337795237)))OR(((((vt0.c0)AND(t0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (CASE WHEN t0.c2 THEN t0.c1 END IN (((vt0.c0)=(t0.c2)))), ((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0)>(t0.c7))) AND (CAST(vt1.c0 AS NUMERIC))) DESC);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((((((((t0.c7) BETWEEN (NULL) AND (t0.c2)))AND((t0.c7 IN ()))))AND(((t0.c75)IS NOT(t0.c0)))))AND(0.3158979337795237)))OR(((((vt0.c0)AND(t0.c0)))OR(vt0.c0))))) ORDER BY (CASE WHEN t0.c2 THEN t0.c1 END IN (((vt0.c0)=(t0.c2)))), ((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0)>(t0.c7))) AND (CAST(vt1.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c7) BETWEEN (NULL) AND (t0.c2)))AND((t0.c7 IN ()))))AND(((t0.c75)IS NOT(t0.c0)))))AND(0.3158979337795237)))OR(((((vt0.c0)AND(t0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (CASE WHEN t0.c2 THEN t0.c1 END IN (((vt0.c0)=(t0.c2)))), ((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0)>(t0.c7))) AND (CAST(vt1.c0 AS NUMERIC))) DESC);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((((((((t0.c7) BETWEEN (NULL) AND (t0.c2)))AND((t0.c7 IN ()))))AND(((t0.c75)IS NOT(t0.c0)))))AND(0.3158979337795237)))OR(((((vt0.c0)AND(t0.c0)))OR(vt0.c0))))) ORDER BY (CASE WHEN t0.c2 THEN t0.c1 END IN (((vt0.c0)=(t0.c2)))), ((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0)>(t0.c7))) AND (CAST(vt1.c0 AS NUMERIC))) DESC;
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CAST((- (rt0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CAST((- (rt0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CAST((- (rt0.c3)) AS INTEGER));
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((~ (((t0.c7)IS NOT(NULL))))) ORDER BY ((rt0.c2)==((((vt1.c0, vt0.c0, rt0.c2))<=((t0.c75, t0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c7)IS NOT(NULL))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((rt0.c2)==((((vt1.c0, vt0.c0, rt0.c2))<=((t0.c75, t0.c0, vt0.c0))))));
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((~ (((t0.c7)IS NOT(NULL))))) ORDER BY ((rt0.c2)==((((vt1.c0, vt0.c0, rt0.c2))<=((t0.c75, t0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c7)IS NOT(NULL))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((rt0.c2)==((((vt1.c0, vt0.c0, rt0.c2))<=((t0.c75, t0.c0, vt0.c0))))));
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((~ (((t0.c7)IS NOT(NULL))))) ORDER BY ((rt0.c2)==((((vt1.c0, vt0.c0, rt0.c2))<=((t0.c75, t0.c0, vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((COALESCE(vt0.c0, t0.c1, rt0.c2, rt0.c3))AND((vt0.c0 IN ()))))OR(ABS(t0.c75))));
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(vt0.c0, t0.c1, rt0.c2, rt0.c3))AND((vt0.c0 IN ()))))OR(ABS(t0.c75)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((COALESCE(vt0.c0, t0.c1, rt0.c2, rt0.c3))AND((vt0.c0 IN ()))))OR(ABS(t0.c75))));
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(vt0.c0, t0.c1, rt0.c2, rt0.c3))AND((vt0.c0 IN ()))))OR(ABS(t0.c75)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((COALESCE(vt0.c0, t0.c1, rt0.c2, rt0.c3))AND((vt0.c0 IN ()))))OR(ABS(t0.c75))));
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ((HEX(DISTINCT vt1.c0) IN ())) ORDER BY ((((((t0.c2) IS FALSE))AND(t0.c1)))OR(t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((HEX(DISTINCT vt1.c0) IN ())) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY ((((((t0.c2) IS FALSE))AND(t0.c1)))OR(t0.c0 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ((HEX(DISTINCT vt1.c0) IN ())) ORDER BY ((((((t0.c2) IS FALSE))AND(t0.c1)))OR(t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((HEX(DISTINCT vt1.c0) IN ())) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY ((((((t0.c2) IS FALSE))AND(t0.c1)))OR(t0.c0 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ((HEX(DISTINCT vt1.c0) IN ())) ORDER BY ((((((t0.c2) IS FALSE))AND(t0.c1)))OR(t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN SQLITE_SOURCE_ID() THEN ((NULL)GLOB(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN SQLITE_SOURCE_ID() THEN ((NULL)GLOB(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN SQLITE_SOURCE_ID() THEN ((NULL)GLOB(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN SQLITE_SOURCE_ID() THEN ((NULL)GLOB(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN SQLITE_SOURCE_ID() THEN ((NULL)GLOB(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON ((((rt0.c1) NOTNULL))=(((t0.c2) NOT NULL))) CROSS JOIN rt0 ON ((t0.c75) NOT BETWEEN (LOWER(DISTINCT rt0.c1)) AND (((rt0.c1) NOTNULL))) WHERE (CAST((((vt1.c0)) BETWEEN ((t0.c7)) AND ((t0.c1))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0)) BETWEEN ((t0.c7)) AND ((t0.c1))) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON ((((rt0.c1) NOTNULL))==(((t0.c2) NOT NULL))) CROSS JOIN rt0 ON ((t0.c75) NOT BETWEEN (LOWER(DISTINCT rt0.c1)) AND (((rt0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON ((((rt0.c1) NOTNULL))=(((t0.c2) NOT NULL))) CROSS JOIN rt0 ON ((t0.c75) NOT BETWEEN (LOWER(DISTINCT rt0.c1)) AND (((rt0.c1) NOTNULL))) WHERE (CAST((((vt1.c0)) BETWEEN ((t0.c7)) AND ((t0.c1))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0)) BETWEEN ((t0.c7)) AND ((t0.c1))) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON ((((rt0.c1) NOTNULL))==(((t0.c2) NOT NULL))) CROSS JOIN rt0 ON ((t0.c75) NOT BETWEEN (LOWER(DISTINCT rt0.c1)) AND (((rt0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON ((((rt0.c1) NOTNULL))=(((t0.c2) NOT NULL))) CROSS JOIN rt0 ON ((t0.c75) NOT BETWEEN (LOWER(DISTINCT rt0.c1)) AND (((rt0.c1) NOTNULL))) WHERE (CAST((((vt1.c0)) BETWEEN ((t0.c7)) AND ((t0.c1))) AS BLOB));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (json_extract(((t0.c2)>>(t0.c7)), x''));
SELECT SUM(count) FROM (SELECT ((json_extract(((t0.c2)>>(t0.c7)), x'')) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (json_extract(((t0.c2)>>(t0.c7)), x''));
SELECT SUM(count) FROM (SELECT ((json_extract(((t0.c2)>>(t0.c7)), x'')) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (json_extract(((t0.c2)>>(t0.c7)), x''));
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c7)) COLLATE NOCASE) ORDER BY (((- ('hk'))) BETWEEN ('-806579114') AND (((rt0.c3)LIKE(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c7)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY (((- ('hk'))) BETWEEN ('-806579114') AND (((rt0.c3)LIKE(t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c7)) COLLATE NOCASE) ORDER BY (((- ('hk'))) BETWEEN ('-806579114') AND (((rt0.c3)LIKE(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c7)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY (((- ('hk'))) BETWEEN ('-806579114') AND (((rt0.c3)LIKE(t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c7)) COLLATE NOCASE) ORDER BY (((- ('hk'))) BETWEEN ('-806579114') AND (((rt0.c3)LIKE(t0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(-1.63564086E9)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(-1.63564086E9)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(-1.63564086E9)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(-1.63564086E9)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(-1.63564086E9)))OR(vt1.c0)))));
SELECT * FROM vt1 INNER JOIN vt0 ON (~ (CASE t0.c1  WHEN NULL THEN rt0.c0 END)) LEFT OUTER JOIN rt0 ON rt0.c1 INNER JOIN t0 ON (((t0.c2, '48685058', rt0.c3)) NOT BETWEEN ((t0.c1 COLLATE RTRIM, (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))), ((t0.c75) NOTNULL))) AND (((t0.c2 IN ()), CASE WHEN vt0.c0 THEN rt0.c2 WHEN t0.c1 THEN vt1.c0 WHEN 'pfR큌' THEN t0.c0 END, ((((((((t0.c2)AND(vt0.c0)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c2))))) WHERE ((((t0.c7)==(vt0.c0)) IN (CAST(0.92258657737467 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((t0.c7)=(vt0.c0)) IN (CAST(0.92258657737467 AS NUMERIC)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (~ (CASE t0.c1  WHEN NULL THEN rt0.c0 END)) LEFT OUTER JOIN rt0 ON rt0.c1 INNER JOIN t0 ON (((t0.c2, '48685058', rt0.c3)) NOT BETWEEN ((t0.c1 COLLATE RTRIM, (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))), ((t0.c75) NOTNULL))) AND (((t0.c2 IN ()), CASE WHEN vt0.c0 THEN rt0.c2 WHEN t0.c1 THEN vt1.c0 WHEN 'pfR큌' THEN t0.c0 END, ((((((((t0.c2)AND(vt0.c0)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c2))))));
SELECT * FROM vt1 INNER JOIN vt0 ON (~ (CASE t0.c1  WHEN NULL THEN rt0.c0 END)) LEFT OUTER JOIN rt0 ON rt0.c1 INNER JOIN t0 ON (((t0.c2, '48685058', rt0.c3)) NOT BETWEEN ((t0.c1 COLLATE RTRIM, (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))), ((t0.c75) NOTNULL))) AND (((t0.c2 IN ()), CASE WHEN vt0.c0 THEN rt0.c2 WHEN t0.c1 THEN vt1.c0 WHEN 'pfR큌' THEN t0.c0 END, ((((((((t0.c2)AND(vt0.c0)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c2))))) WHERE ((((t0.c7)==(vt0.c0)) IN (CAST(0.92258657737467 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((t0.c7)=(vt0.c0)) IN (CAST(0.92258657737467 AS NUMERIC)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (~ (CASE t0.c1  WHEN NULL THEN rt0.c0 END)) LEFT OUTER JOIN rt0 ON rt0.c1 INNER JOIN t0 ON (((t0.c2, '48685058', rt0.c3)) NOT BETWEEN ((t0.c1 COLLATE RTRIM, (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))), ((t0.c75) NOTNULL))) AND (((t0.c2 IN ()), CASE WHEN vt0.c0 THEN rt0.c2 WHEN t0.c1 THEN vt1.c0 WHEN 'pfR큌' THEN t0.c0 END, ((((((((t0.c2)AND(vt0.c0)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c2))))));
SELECT * FROM vt1 INNER JOIN vt0 ON (~ (CASE t0.c1  WHEN NULL THEN rt0.c0 END)) LEFT OUTER JOIN rt0 ON rt0.c1 INNER JOIN t0 ON (((t0.c2, '48685058', rt0.c3)) NOT BETWEEN ((t0.c1 COLLATE RTRIM, (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))), ((t0.c75) NOTNULL))) AND (((t0.c2 IN ()), CASE WHEN vt0.c0 THEN rt0.c2 WHEN t0.c1 THEN vt1.c0 WHEN 'pfR큌' THEN t0.c0 END, ((((((((t0.c2)AND(vt0.c0)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c2))))) WHERE ((((t0.c7)==(vt0.c0)) IN (CAST(0.92258657737467 AS NUMERIC))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt1, t0, rt0, vt0 WHERE (CASE ((t0.c0)IS(t0.c1))  WHEN t0.c7 COLLATE BINARY THEN ((rt0.c2)>>(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)IS(t0.c1))  WHEN t0.c7 COLLATE BINARY THEN ((rt0.c2)>>(rt0.c0)) END) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (CASE ((t0.c0)IS(t0.c1))  WHEN t0.c7 COLLATE BINARY THEN ((rt0.c2)>>(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)IS(t0.c1))  WHEN t0.c7 COLLATE BINARY THEN ((rt0.c2)>>(rt0.c0)) END) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (CASE ((t0.c0)IS(t0.c1))  WHEN t0.c7 COLLATE BINARY THEN ((rt0.c2)>>(rt0.c0)) END);
SELECT COUNT(*) FROM t0, rt0 WHERE (IFNULL(DISTINCT ('' IN (rt0.c2)), '')) ORDER BY (((t0.c2)) NOT BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((CASE WHEN rt0.c3 THEN NULL ELSE t0.c75 END)));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ('' IN (rt0.c2)), '')) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c2)) NOT BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((CASE WHEN rt0.c3 THEN NULL ELSE t0.c75 END))));
SELECT COUNT(*) FROM t0, rt0 WHERE (IFNULL(DISTINCT ('' IN (rt0.c2)), '')) ORDER BY (((t0.c2)) NOT BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((CASE WHEN rt0.c3 THEN NULL ELSE t0.c75 END)));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ('' IN (rt0.c2)), '')) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c2)) NOT BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((CASE WHEN rt0.c3 THEN NULL ELSE t0.c75 END))));
SELECT COUNT(*) FROM t0, rt0 WHERE (IFNULL(DISTINCT ('' IN (rt0.c2)), '')) ORDER BY (((t0.c2)) NOT BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((CASE WHEN rt0.c3 THEN NULL ELSE t0.c75 END)));
SELECT COUNT(*) FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 END)AND((- (rt0.c2)))))AND(CASE WHEN vt1.c0 THEN rt0.c3 END)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 END)AND((- (rt0.c2)))))AND(CASE WHEN vt1.c0 THEN rt0.c3 END)));
SELECT COUNT(*) FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 END)AND((- (rt0.c2)))))AND(CASE WHEN vt1.c0 THEN rt0.c3 END)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 END)AND((- (rt0.c2)))))AND(CASE WHEN vt1.c0 THEN rt0.c3 END)));
SELECT COUNT(*) FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 END)AND((- (rt0.c2)))))AND(CASE WHEN vt1.c0 THEN rt0.c3 END)) WHERE (x'');
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 IN (vt0.c0)) IN ())) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt1.c0) NOTNULL))))OR((((0.16216372138448065, 0.664361337104688, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))) DESC, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS TEXT), CAST(vt1.c0 AS BLOB)))>((((0xffffffffad915a45)==(vt0.c0)), vt1.c0, ((vt0.c0)>=(-1191294216)))))  NULLS FIRST, CAST(vt1.c0 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt1.c0) NOTNULL))))OR((((0.16216372138448065, 0.664361337104688, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))) DESC, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS TEXT), CAST(vt1.c0 AS BLOB)))>((((0Xffffffffad915a45)==(vt0.c0)), vt1.c0, ((vt0.c0)>=(-1191294216)))))  NULLS FIRST, CAST(vt1.c0 AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 IN (vt0.c0)) IN ())) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt1.c0) NOTNULL))))OR((((0.16216372138448065, 0.664361337104688, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))) DESC, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS TEXT), CAST(vt1.c0 AS BLOB)))>((((0xffffffffad915a45)==(vt0.c0)), vt1.c0, ((vt0.c0)>=(-1191294216)))))  NULLS FIRST, CAST(vt1.c0 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt1.c0) NOTNULL))))OR((((0.16216372138448065, 0.664361337104688, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))) DESC, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS TEXT), CAST(vt1.c0 AS BLOB)))>((((0Xffffffffad915a45)==(vt0.c0)), vt1.c0, ((vt0.c0)>=(-1191294216)))))  NULLS FIRST, CAST(vt1.c0 AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 IN (vt0.c0)) IN ())) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt1.c0) NOTNULL))))OR((((0.16216372138448065, 0.664361337104688, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))) DESC, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS TEXT), CAST(vt1.c0 AS BLOB)))>((((0xffffffffad915a45)==(vt0.c0)), vt1.c0, ((vt0.c0)>=(-1191294216)))))  NULLS FIRST, CAST(vt1.c0 AS REAL) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) IS TRUE) ASC);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) IS TRUE) ASC);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) IS TRUE) ASC;
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c1)OR(t0.c75)))AND(t0.c1)))>=(0.30611711061381797)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)OR(t0.c75)))AND(t0.c1)))>=(0.30611711061381797))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c1)OR(t0.c75)))AND(t0.c1)))>=(0.30611711061381797)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)OR(t0.c75)))AND(t0.c1)))>=(0.30611711061381797))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c1)OR(t0.c75)))AND(t0.c1)))>=(0.30611711061381797)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (((t0.c1 IN (t0.c0)))>(CASE t0.c7  WHEN t0.c2 THEN t0.c75 WHEN t0.c2 THEN t0.c2 WHEN t0.c75 THEN t0.c7 ELSE t0.c7 END)) WHERE (((((vt1.c0)>>(t0.c0))) NOTNULL)) ORDER BY (((t0.c2, t0.c0, t0.c1)) BETWEEN ((t0.c7, ((t0.c1) NOT NULL), ((t0.c1)IS NOT(t0.c0)))) AND ((CAST(vt1.c0 AS BLOB), ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c75)), (NOT (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>>(t0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (((t0.c1 IN (t0.c0)))>(CASE t0.c7  WHEN t0.c2 THEN t0.c75 WHEN t0.c2 THEN t0.c2 WHEN t0.c75 THEN t0.c7 ELSE t0.c7 END)) ORDER BY (((t0.c2, t0.c0, t0.c1)) BETWEEN ((t0.c7, ((t0.c1) NOT NULL), ((t0.c1)IS NOT(t0.c0)))) AND ((CAST(vt1.c0 AS BLOB), ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c75)), (NOT (t0.c1))))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (((t0.c1 IN (t0.c0)))>(CASE t0.c7  WHEN t0.c2 THEN t0.c75 WHEN t0.c2 THEN t0.c2 WHEN t0.c75 THEN t0.c7 ELSE t0.c7 END)) WHERE (((((vt1.c0)>>(t0.c0))) NOTNULL)) ORDER BY (((t0.c2, t0.c0, t0.c1)) BETWEEN ((t0.c7, ((t0.c1) NOT NULL), ((t0.c1)IS NOT(t0.c0)))) AND ((CAST(vt1.c0 AS BLOB), ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c75)), (NOT (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>>(t0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (((t0.c1 IN (t0.c0)))>(CASE t0.c7  WHEN t0.c2 THEN t0.c75 WHEN t0.c2 THEN t0.c2 WHEN t0.c75 THEN t0.c7 ELSE t0.c7 END)) ORDER BY (((t0.c2, t0.c0, t0.c1)) BETWEEN ((t0.c7, ((t0.c1) NOT NULL), ((t0.c1)IS NOT(t0.c0)))) AND ((CAST(vt1.c0 AS BLOB), ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c75)), (NOT (t0.c1))))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (((t0.c1 IN (t0.c0)))>(CASE t0.c7  WHEN t0.c2 THEN t0.c75 WHEN t0.c2 THEN t0.c2 WHEN t0.c75 THEN t0.c7 ELSE t0.c7 END)) WHERE (((((vt1.c0)>>(t0.c0))) NOTNULL)) ORDER BY (((t0.c2, t0.c0, t0.c1)) BETWEEN ((t0.c7, ((t0.c1) NOT NULL), ((t0.c1)IS NOT(t0.c0)))) AND ((CAST(vt1.c0 AS BLOB), ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c75)), (NOT (t0.c1)))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((vt1.c0 COLLATE NOCASE IN (((vt1.c0)&(vt0.c0)), ((NULL)>>(vt1.c0))))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))))%(((vt1.c0)<(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE NOCASE IN (((vt1.c0)&(vt0.c0)), ((NULL)>>(vt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))))%(((vt1.c0)<(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((vt1.c0 COLLATE NOCASE IN (((vt1.c0)&(vt0.c0)), ((NULL)>>(vt1.c0))))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))))%(((vt1.c0)<(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE NOCASE IN (((vt1.c0)&(vt0.c0)), ((NULL)>>(vt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))))%(((vt1.c0)<(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((vt1.c0 COLLATE NOCASE IN (((vt1.c0)&(vt0.c0)), ((NULL)>>(vt1.c0))))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))))%(((vt1.c0)<(vt1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0, vt1 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (NULL COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS TRUE)) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (((t0.c75) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c75) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (((t0.c75) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c75) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (((t0.c75) NOTNULL) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('');
SELECT * FROM vt0, vt1, t0, rt0 WHERE ((((((((NULL)OR(t0.c0)))AND(t0.c2)), '224368254', t0.c0))<>((CASE WHEN t0.c0 THEN 'y⟪EꤛmOjZ' ELSE t0.c75 END, (vt1.c0 IN (')')), rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((((NULL)OR(t0.c0)))AND(t0.c2)), '224368254', t0.c0))<>((CASE WHEN t0.c0 THEN 'y⟪EꤛmOjZ' ELSE t0.c75 END, (vt1.c0 IN (')')), rt0.c2)))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT * FROM vt0, vt1, t0, rt0 WHERE ((((((((NULL)OR(t0.c0)))AND(t0.c2)), '224368254', t0.c0))<>((CASE WHEN t0.c0 THEN 'y⟪EꤛmOjZ' ELSE t0.c75 END, (vt1.c0 IN (')')), rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((((NULL)OR(t0.c0)))AND(t0.c2)), '224368254', t0.c0))<>((CASE WHEN t0.c0 THEN 'y⟪EꤛmOjZ' ELSE t0.c75 END, (vt1.c0 IN (')')), rt0.c2)))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT * FROM vt0, vt1, t0, rt0 WHERE ((((((((NULL)OR(t0.c0)))AND(t0.c2)), '224368254', t0.c0))<>((CASE WHEN t0.c0 THEN 'y⟪EꤛmOjZ' ELSE t0.c75 END, (vt1.c0 IN (')')), rt0.c2))));
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOT NULL)) ORDER BY ((((rt0.c1))>=((rt0.c2))) IN (((rt0.c3)LIKE(343161924))))  NULLS LAST, ((((((((((((((rt0.c1)>(rt0.c1)))OR(x'3a57')))OR(HEX(rt0.c2))))AND(CAST(rt0.c2 AS INTEGER))))OR(((rt0.c3)GLOB(rt0.c2)))))OR(rt0.c0)))AND(((((rt0.c3)AND(rt0.c0)))AND(0.8750964155648002)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1))>=((rt0.c2))) IN (((rt0.c3)LIKE(343161924))))  NULLS LAST, ((((((((((((((rt0.c1)>(rt0.c1)))OR(x'3a57')))OR(HEX(rt0.c2))))AND(CAST(rt0.c2 AS INTEGER))))OR(((rt0.c3)GLOB(rt0.c2)))))OR(rt0.c0)))AND(((((rt0.c3)AND(rt0.c0)))AND(0.8750964155648002)))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOT NULL)) ORDER BY ((((rt0.c1))>=((rt0.c2))) IN (((rt0.c3)LIKE(343161924))))  NULLS LAST, ((((((((((((((rt0.c1)>(rt0.c1)))OR(x'3a57')))OR(HEX(rt0.c2))))AND(CAST(rt0.c2 AS INTEGER))))OR(((rt0.c3)GLOB(rt0.c2)))))OR(rt0.c0)))AND(((((rt0.c3)AND(rt0.c0)))AND(0.8750964155648002)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1))>=((rt0.c2))) IN (((rt0.c3)LIKE(343161924))))  NULLS LAST, ((((((((((((((rt0.c1)>(rt0.c1)))OR(x'3a57')))OR(HEX(rt0.c2))))AND(CAST(rt0.c2 AS INTEGER))))OR(((rt0.c3)GLOB(rt0.c2)))))OR(rt0.c0)))AND(((((rt0.c3)AND(rt0.c0)))AND(0.8750964155648002)))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOT NULL)) ORDER BY ((((rt0.c1))>=((rt0.c2))) IN (((rt0.c3)LIKE(343161924))))  NULLS LAST, ((((((((((((((rt0.c1)>(rt0.c1)))OR(x'3a57')))OR(HEX(rt0.c2))))AND(CAST(rt0.c2 AS INTEGER))))OR(((rt0.c3)GLOB(rt0.c2)))))OR(rt0.c0)))AND(((((rt0.c3)AND(rt0.c0)))AND(0.8750964155648002)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c2)<<(t0.c2)) IN (CAST(t0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)<<(t0.c2)) IN (CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c2)<<(t0.c2)) IN (CAST(t0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)<<(t0.c2)) IN (CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c2)<<(t0.c2)) IN (CAST(t0.c2 AS BLOB))));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((t0.c75) NOT BETWEEN (NULL) AND ((~ (t0.c75)))));
SELECT SUM(count) FROM (SELECT ((((t0.c75) NOT BETWEEN (NULL) AND ((~ (t0.c75))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((t0.c75) NOT BETWEEN (NULL) AND ((~ (t0.c75)))));
SELECT SUM(count) FROM (SELECT ((((t0.c75) NOT BETWEEN (NULL) AND ((~ (t0.c75))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((t0.c75) NOT BETWEEN (NULL) AND ((~ (t0.c75)))));
SELECT * FROM vt0 WHERE ((('98086635')-(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((('98086635')-(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('98086635')-(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((('98086635')-(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('98086635')-(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (0X218e861a)) END) ORDER BY (((vt0.c0 IN ())) IS TRUE)  NULLS FIRST, (((NOT (vt0.c0))) BETWEEN ('1996755714') AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (0x218e861a)) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) IS TRUE)  NULLS FIRST, (((NOT (vt0.c0))) BETWEEN ('1996755714') AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (0X218e861a)) END) ORDER BY (((vt0.c0 IN ())) IS TRUE)  NULLS FIRST, (((NOT (vt0.c0))) BETWEEN ('1996755714') AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (0x218e861a)) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) IS TRUE)  NULLS FIRST, (((NOT (vt0.c0))) BETWEEN ('1996755714') AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (0X218e861a)) END) ORDER BY (((vt0.c0 IN ())) IS TRUE)  NULLS FIRST, (((NOT (vt0.c0))) BETWEEN ('1996755714') AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (json_type(rt0.c3 COLLATE RTRIM)) ORDER BY CAST(0.8086800313646569 AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((json_type(rt0.c3 COLLATE RTRIM)) IS TRUE)  as count FROM rt0 ORDER BY CAST(0.8086800313646569 AS NUMERIC));
SELECT ALL * FROM rt0 WHERE (json_type(rt0.c3 COLLATE RTRIM)) ORDER BY CAST(0.8086800313646569 AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((json_type(rt0.c3 COLLATE RTRIM)) IS TRUE)  as count FROM rt0 ORDER BY CAST(0.8086800313646569 AS NUMERIC));
SELECT ALL * FROM rt0 WHERE (json_type(rt0.c3 COLLATE RTRIM)) ORDER BY CAST(0.8086800313646569 AS NUMERIC);
SELECT ALL * FROM t0 WHERE ((((t0.c1)) NOT BETWEEN (((NOT (t0.c75)))) AND ((CASE t0.c1  WHEN t0.c75 THEN t0.c7 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN (((NOT (t0.c75)))) AND ((CASE t0.c1  WHEN t0.c75 THEN t0.c7 END)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c1)) NOT BETWEEN (((NOT (t0.c75)))) AND ((CASE t0.c1  WHEN t0.c75 THEN t0.c7 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN (((NOT (t0.c75)))) AND ((CASE t0.c1  WHEN t0.c75 THEN t0.c7 END)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c1)) NOT BETWEEN (((NOT (t0.c75)))) AND ((CASE t0.c1  WHEN t0.c75 THEN t0.c7 END))));
SELECT * FROM vt1 NOT INDEXED WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 NOT INDEXED WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 NOT INDEXED WHERE (CAST(NULL AS NUMERIC));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB) WHERE (UPPER(x''));
SELECT SUM(count) FROM (SELECT ((UPPER(x'')) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB) WHERE (UPPER(x''));
SELECT SUM(count) FROM (SELECT ((UPPER(x'')) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB) WHERE (UPPER(x''));
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE (((((t0.c0)<<(t0.c7)))|(((((((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(t0.c75)))AND(t0.c0)))OR(rt0.c0)))AND(rt0.c1))))) ORDER BY (((NOT (vt0.c0))) IS FALSE) DESC, ((0.15373368868935988)IS NOT(CASE WHEN t0.c2 THEN t0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<<(t0.c7)))|(((((((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(t0.c75)))AND(t0.c0)))OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY (((NOT (vt0.c0))) IS FALSE) DESC, ((0.15373368868935988)IS NOT(CASE WHEN t0.c2 THEN t0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE (((((t0.c0)<<(t0.c7)))|(((((((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(t0.c75)))AND(t0.c0)))OR(rt0.c0)))AND(rt0.c1))))) ORDER BY (((NOT (vt0.c0))) IS FALSE) DESC, ((0.15373368868935988)IS NOT(CASE WHEN t0.c2 THEN t0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<<(t0.c7)))|(((((((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(t0.c75)))AND(t0.c0)))OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY (((NOT (vt0.c0))) IS FALSE) DESC, ((0.15373368868935988)IS NOT(CASE WHEN t0.c2 THEN t0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL * FROM rt0, vt1, vt0, t0 WHERE (((((t0.c0)<<(t0.c7)))|(((((((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(t0.c75)))AND(t0.c0)))OR(rt0.c0)))AND(rt0.c1))))) ORDER BY (((NOT (vt0.c0))) IS FALSE) DESC, ((0.15373368868935988)IS NOT(CASE WHEN t0.c2 THEN t0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(((rt0.c1)<=(0.8115073491172908)))))AND(COALESCE(DISTINCT 0x7377e862, rt0.c2, rt0.c2, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c0)))OR(((rt0.c1)<=(0.8115073491172908)))))AND(COALESCE(DISTINCT 0X7377e862, rt0.c2, rt0.c2, vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(((rt0.c1)<=(0.8115073491172908)))))AND(COALESCE(DISTINCT 0x7377e862, rt0.c2, rt0.c2, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c0)))OR(((rt0.c1)<=(0.8115073491172908)))))AND(COALESCE(DISTINCT 0X7377e862, rt0.c2, rt0.c2, vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(((rt0.c1)<=(0.8115073491172908)))))AND(COALESCE(DISTINCT 0x7377e862, rt0.c2, rt0.c2, vt0.c0))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((TRIM(DISTINCT NULL))) AND ((((((t0.c75)OR(vt0.c0)))OR(vt0.c0))))) LEFT OUTER JOIN vt0 ON (((LAST_INSERT_ROWID(), CASE vt1.c0  WHEN t0.c1 THEN vt0.c0 END, LIKELY(DISTINCT vt1.c0), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c75)), CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c7 END))==((((t0.c2)*(t0.c2)), json_array(t0.c7, x'8982f1d2'), ((vt1.c0)AND(vt1.c0)), (t0.c75 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c1))))) WHERE (CASE WHEN ((t0.c7) IS FALSE) THEN ((t0.c7) NOT BETWEEN (t0.c2) AND (vt1.c0)) ELSE ((t0.c0)/(t0.c2)) END) ORDER BY (NOT (CAST(vt1.c0 AS INTEGER))), ((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c75))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c7) IS FALSE) THEN ((t0.c7) NOT BETWEEN (t0.c2) AND (vt1.c0)) ELSE ((t0.c0)/(t0.c2)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((TRIM(DISTINCT NULL))) AND ((((((t0.c75)OR(vt0.c0)))OR(vt0.c0))))) LEFT OUTER JOIN vt0 ON (((LAST_INSERT_ROWID(), CASE vt1.c0  WHEN t0.c1 THEN vt0.c0 END, LIKELY(DISTINCT vt1.c0), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c75)), CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c7 END))=((((t0.c2)*(t0.c2)), json_array(t0.c7, x'8982f1d2'), ((vt1.c0)AND(vt1.c0)), (t0.c75 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c1))))) ORDER BY (NOT (CAST(vt1.c0 AS INTEGER))), ((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c75))) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((TRIM(DISTINCT NULL))) AND ((((((t0.c75)OR(vt0.c0)))OR(vt0.c0))))) LEFT OUTER JOIN vt0 ON (((LAST_INSERT_ROWID(), CASE vt1.c0  WHEN t0.c1 THEN vt0.c0 END, LIKELY(DISTINCT vt1.c0), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c75)), CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c7 END))==((((t0.c2)*(t0.c2)), json_array(t0.c7, x'8982f1d2'), ((vt1.c0)AND(vt1.c0)), (t0.c75 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c1))))) WHERE (CASE WHEN ((t0.c7) IS FALSE) THEN ((t0.c7) NOT BETWEEN (t0.c2) AND (vt1.c0)) ELSE ((t0.c0)/(t0.c2)) END) ORDER BY (NOT (CAST(vt1.c0 AS INTEGER))), ((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c75))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c7) IS FALSE) THEN ((t0.c7) NOT BETWEEN (t0.c2) AND (vt1.c0)) ELSE ((t0.c0)/(t0.c2)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((TRIM(DISTINCT NULL))) AND ((((((t0.c75)OR(vt0.c0)))OR(vt0.c0))))) LEFT OUTER JOIN vt0 ON (((LAST_INSERT_ROWID(), CASE vt1.c0  WHEN t0.c1 THEN vt0.c0 END, LIKELY(DISTINCT vt1.c0), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c75)), CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c7 END))=((((t0.c2)*(t0.c2)), json_array(t0.c7, x'8982f1d2'), ((vt1.c0)AND(vt1.c0)), (t0.c75 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c1))))) ORDER BY (NOT (CAST(vt1.c0 AS INTEGER))), ((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c75))) ISNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((t0.c75) NOT NULL))/(CAST(t0.c75 AS BLOB))) WHERE (((rt0.c2 COLLATE NOCASE)<=(((t0.c0) BETWEEN (rt0.c1) AND (t0.c2))))) ORDER BY ((((rt0.c1)+(t0.c7))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)<=(((t0.c0) BETWEEN (rt0.c1) AND (t0.c2))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((t0.c75) NOT NULL))/(CAST(t0.c75 AS BLOB))) ORDER BY ((((rt0.c1)+(t0.c7))) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((t0.c75) NOT NULL))/(CAST(t0.c75 AS BLOB))) WHERE (((rt0.c2 COLLATE NOCASE)<=(((t0.c0) BETWEEN (rt0.c1) AND (t0.c2))))) ORDER BY ((((rt0.c1)+(t0.c7))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)<=(((t0.c0) BETWEEN (rt0.c1) AND (t0.c2))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((t0.c75) NOT NULL))/(CAST(t0.c75 AS BLOB))) ORDER BY ((((rt0.c1)+(t0.c7))) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON ((((t0.c75) NOT NULL))/(CAST(t0.c75 AS BLOB))) WHERE (((rt0.c2 COLLATE NOCASE)<=(((t0.c0) BETWEEN (rt0.c1) AND (t0.c2))))) ORDER BY ((((rt0.c1)+(t0.c7))) ISNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (CASE WHEN ((rt0.c3) IS FALSE) THEN rt0.c3 END) ORDER BY LTRIM((((rt0.c0))<((rt0.c2)))), rt0.c3 COLLATE NOCASE COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3) IS FALSE) THEN rt0.c3 END) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY LTRIM((((rt0.c0))<((rt0.c2)))), rt0.c3 COLLATE NOCASE COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (CASE WHEN ((rt0.c3) IS FALSE) THEN rt0.c3 END) ORDER BY LTRIM((((rt0.c0))<((rt0.c2)))), rt0.c3 COLLATE NOCASE COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3) IS FALSE) THEN rt0.c3 END) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY LTRIM((((rt0.c0))<((rt0.c2)))), rt0.c3 COLLATE NOCASE COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (CASE WHEN ((rt0.c3) IS FALSE) THEN rt0.c3 END) ORDER BY LTRIM((((rt0.c0))<((rt0.c2)))), rt0.c3 COLLATE NOCASE COLLATE NOCASE DESC;
SELECT * FROM rt0, vt0 WHERE (STRFTIME(x'', (~ (rt0.c1)), (- (vt0.c0)), CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN -1838352962 THEN rt0.c1 END, (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(x'', (~ (rt0.c1)), (- (vt0.c0)), CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN -1838352962 THEN rt0.c1 END, (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (STRFTIME(x'', (~ (rt0.c1)), (- (vt0.c0)), CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN -1838352962 THEN rt0.c1 END, (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(x'', (~ (rt0.c1)), (- (vt0.c0)), CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN -1838352962 THEN rt0.c1 END, (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (STRFTIME(x'', (~ (rt0.c1)), (- (vt0.c0)), CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN -1838352962 THEN rt0.c1 END, (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))));
SELECT ALL * FROM t0, vt1, rt0 WHERE (NULL) ORDER BY CAST(t0.c0 AS REAL) DESC  NULLS LAST, ((((rt0.c2) BETWEEN (t0.c7) AND (rt0.c3)))GLOB(CAST(vt1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY CAST(t0.c0 AS REAL) DESC  NULLS LAST, ((((rt0.c2) BETWEEN (t0.c7) AND (rt0.c3)))GLOB(CAST(vt1.c0 AS REAL))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt1, rt0 WHERE (NULL) ORDER BY CAST(t0.c0 AS REAL) DESC  NULLS LAST, ((((rt0.c2) BETWEEN (t0.c7) AND (rt0.c3)))GLOB(CAST(vt1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY CAST(t0.c0 AS REAL) DESC  NULLS LAST, ((((rt0.c2) BETWEEN (t0.c7) AND (rt0.c3)))GLOB(CAST(vt1.c0 AS REAL))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt1, rt0 WHERE (NULL) ORDER BY CAST(t0.c0 AS REAL) DESC  NULLS LAST, ((((rt0.c2) BETWEEN (t0.c7) AND (rt0.c3)))GLOB(CAST(vt1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT));
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0, rt0, t0 WHERE (((x'') IS FALSE)) ORDER BY TYPEOF(DISTINCT rt0.c2 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY TYPEOF(DISTINCT rt0.c2 COLLATE RTRIM) ASC);
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0, rt0, t0 WHERE (((x'') IS FALSE)) ORDER BY TYPEOF(DISTINCT rt0.c2 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY TYPEOF(DISTINCT rt0.c2 COLLATE RTRIM) ASC);
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0, rt0, t0 WHERE (((x'') IS FALSE)) ORDER BY TYPEOF(DISTINCT rt0.c2 COLLATE RTRIM) ASC;
SELECT * FROM vt0, t0, vt1, rt0 WHERE ((- (CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END))) ORDER BY (~ (CASE WHEN t0.c7 THEN rt0.c0 ELSE rt0.c0 END)) DESC  NULLS FIRST, CASE ((rt0.c2)<>(rt0.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt1.c0)/(t0.c2)) ELSE CAST(rt0.c1 AS BLOB) END;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY (~ (CASE WHEN t0.c7 THEN rt0.c0 ELSE rt0.c0 END)) DESC  NULLS FIRST, CASE ((rt0.c2)<>(rt0.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt1.c0)/(t0.c2)) ELSE CAST(rt0.c1 AS BLOB) END);
SELECT * FROM vt0, t0, vt1, rt0 WHERE ((- (CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END))) ORDER BY (~ (CASE WHEN t0.c7 THEN rt0.c0 ELSE rt0.c0 END)) DESC  NULLS FIRST, CASE ((rt0.c2)<>(rt0.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt1.c0)/(t0.c2)) ELSE CAST(rt0.c1 AS BLOB) END;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY (~ (CASE WHEN t0.c7 THEN rt0.c0 ELSE rt0.c0 END)) DESC  NULLS FIRST, CASE ((rt0.c2)<>(rt0.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt1.c0)/(t0.c2)) ELSE CAST(rt0.c1 AS BLOB) END);
SELECT * FROM vt0, t0, vt1, rt0 WHERE ((- (CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END))) ORDER BY (~ (CASE WHEN t0.c7 THEN rt0.c0 ELSE rt0.c0 END)) DESC  NULLS FIRST, CASE ((rt0.c2)<>(rt0.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt1.c0)/(t0.c2)) ELSE CAST(rt0.c1 AS BLOB) END;
SELECT * FROM t0, rt0, vt1 LEFT OUTER JOIN vt0 ON ((((((((vt1.c0)AND(t0.c75)))AND(rt0.c2)))OR(t0.c7)))OR(t0.c1)) COLLATE RTRIM WHERE ((((t0.c7)) BETWEEN (((~ (rt0.c2)))) AND ((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))))) ORDER BY TRIM((t0.c75 IN (rt0.c1, t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c7)) BETWEEN (((~ (rt0.c2)))) AND ((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt1 LEFT OUTER JOIN vt0 ON ((((((((vt1.c0)AND(t0.c75)))AND(rt0.c2)))OR(t0.c7)))OR(t0.c1)) COLLATE RTRIM ORDER BY TRIM((t0.c75 IN (rt0.c1, t0.c0)))  NULLS FIRST);
SELECT * FROM t0, rt0, vt1 LEFT OUTER JOIN vt0 ON ((((((((vt1.c0)AND(t0.c75)))AND(rt0.c2)))OR(t0.c7)))OR(t0.c1)) COLLATE RTRIM WHERE ((((t0.c7)) BETWEEN (((~ (rt0.c2)))) AND ((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))))) ORDER BY TRIM((t0.c75 IN (rt0.c1, t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c7)) BETWEEN (((~ (rt0.c2)))) AND ((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt1 LEFT OUTER JOIN vt0 ON ((((((((vt1.c0)AND(t0.c75)))AND(rt0.c2)))OR(t0.c7)))OR(t0.c1)) COLLATE RTRIM ORDER BY TRIM((t0.c75 IN (rt0.c1, t0.c0)))  NULLS FIRST);
SELECT * FROM t0, rt0, vt1 LEFT OUTER JOIN vt0 ON ((((((((vt1.c0)AND(t0.c75)))AND(rt0.c2)))OR(t0.c7)))OR(t0.c1)) COLLATE RTRIM WHERE ((((t0.c7)) BETWEEN (((~ (rt0.c2)))) AND ((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))))) ORDER BY TRIM((t0.c75 IN (rt0.c1, t0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (TYPEOF(CASE t0.c2  WHEN t0.c7 THEN t0.c1 WHEN rt0.c3 THEN t0.c2 WHEN vt1.c0 THEN rt0.c1 ELSE vt0.c0 END)) ORDER BY t0.c1, CAST((('6s')==(t0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(CASE t0.c2  WHEN t0.c7 THEN t0.c1 WHEN rt0.c3 THEN t0.c2 WHEN vt1.c0 THEN rt0.c1 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0, rt0, t0, vt1 ORDER BY t0.c1, CAST((('6s')==(t0.c0)) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (TYPEOF(CASE t0.c2  WHEN t0.c7 THEN t0.c1 WHEN rt0.c3 THEN t0.c2 WHEN vt1.c0 THEN rt0.c1 ELSE vt0.c0 END)) ORDER BY t0.c1, CAST((('6s')==(t0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(CASE t0.c2  WHEN t0.c7 THEN t0.c1 WHEN rt0.c3 THEN t0.c2 WHEN vt1.c0 THEN rt0.c1 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0, rt0, t0, vt1 ORDER BY t0.c1, CAST((('6s')==(t0.c0)) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (TYPEOF(CASE t0.c2  WHEN t0.c7 THEN t0.c1 WHEN rt0.c3 THEN t0.c2 WHEN vt1.c0 THEN rt0.c1 ELSE vt0.c0 END)) ORDER BY t0.c1, CAST((('6s')==(t0.c0)) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (COALESCE(TYPEOF(DISTINCT t0.c1), ((t0.c75) NOT BETWEEN (rt0.c0) AND (rt0.c0)), x'', CAST(rt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(TYPEOF(DISTINCT t0.c1), ((t0.c75) NOT BETWEEN (rt0.c0) AND (rt0.c0)), x'', CAST(rt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (COALESCE(TYPEOF(DISTINCT t0.c1), ((t0.c75) NOT BETWEEN (rt0.c0) AND (rt0.c0)), x'', CAST(rt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(TYPEOF(DISTINCT t0.c1), ((t0.c75) NOT BETWEEN (rt0.c0) AND (rt0.c0)), x'', CAST(rt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (COALESCE(TYPEOF(DISTINCT t0.c1), ((t0.c75) NOT BETWEEN (rt0.c0) AND (rt0.c0)), x'', CAST(rt0.c0 AS BLOB)));
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt1 ON ((((t0.c1) NOT BETWEEN (rt0.c2) AND (NULL))) NOT BETWEEN (t0.c1) AND (IFNULL(DISTINCT t0.c2, t0.c0))) RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY (+ ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt1 ON ((((t0.c1) NOT BETWEEN (rt0.c2) AND (NULL))) NOT BETWEEN (t0.c1) AND (IFNULL(DISTINCT t0.c2, t0.c0))) RIGHT OUTER JOIN vt0 ON vt1.c0 ORDER BY (+ ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt1 ON ((((t0.c1) NOT BETWEEN (rt0.c2) AND (NULL))) NOT BETWEEN (t0.c1) AND (IFNULL(DISTINCT t0.c2, t0.c0))) RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY (+ ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt1 ON ((((t0.c1) NOT BETWEEN (rt0.c2) AND (NULL))) NOT BETWEEN (t0.c1) AND (IFNULL(DISTINCT t0.c2, t0.c0))) RIGHT OUTER JOIN vt0 ON vt1.c0 ORDER BY (+ ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt1 ON ((((t0.c1) NOT BETWEEN (rt0.c2) AND (NULL))) NOT BETWEEN (t0.c1) AND (IFNULL(DISTINCT t0.c2, t0.c0))) RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY (+ ((vt0.c0 IN ())));
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN ((((rt0.c0)OR(t0.c7)))AND(t0.c2)) THEN ((t0.c75) NOT BETWEEN (NULL) AND (t0.c1)) ELSE NULL END) ORDER BY (((NOT (rt0.c1)))<=(CAST(t0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)OR(t0.c7)))AND(t0.c2)) THEN ((t0.c75) NOT BETWEEN (NULL) AND (t0.c1)) ELSE NULL END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((NOT (rt0.c1)))<=(CAST(t0.c0 AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN ((((rt0.c0)OR(t0.c7)))AND(t0.c2)) THEN ((t0.c75) NOT BETWEEN (NULL) AND (t0.c1)) ELSE NULL END) ORDER BY (((NOT (rt0.c1)))<=(CAST(t0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)OR(t0.c7)))AND(t0.c2)) THEN ((t0.c75) NOT BETWEEN (NULL) AND (t0.c1)) ELSE NULL END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((NOT (rt0.c1)))<=(CAST(t0.c0 AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN ((((rt0.c0)OR(t0.c7)))AND(t0.c2)) THEN ((t0.c75) NOT BETWEEN (NULL) AND (t0.c1)) ELSE NULL END) ORDER BY (((NOT (rt0.c1)))<=(CAST(t0.c0 AS REAL)))  NULLS FIRST;
SELECT * FROM vt0, rt0, vt1, t0 WHERE (((((((vt0.c0)!=(rt0.c1)))OR(CAST(t0.c0 AS BLOB))))AND((((rt0.c2))==((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<>(rt0.c1)))OR(CAST(t0.c0 AS BLOB))))AND((((rt0.c2))=((rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT * FROM vt0, rt0, vt1, t0 WHERE (((((((vt0.c0)!=(rt0.c1)))OR(CAST(t0.c0 AS BLOB))))AND((((rt0.c2))==((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<>(rt0.c1)))OR(CAST(t0.c0 AS BLOB))))AND((((rt0.c2))=((rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT * FROM vt0, rt0, vt1, t0 WHERE (((((((vt0.c0)!=(rt0.c1)))OR(CAST(t0.c0 AS BLOB))))AND((((rt0.c2))==((rt0.c3))))));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((LIKELY(vt1.c0))) AND ((CAST(rt0.c0 AS BLOB))))) ORDER BY json_extract(rt0.c1, vt1.c0) COLLATE BINARY ASC  NULLS FIRST, ((((~ (vt1.c0)), (rt0.c0 IN ()), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END))<((((rt0.c3)|(2.91234856E8)), ((((rt0.c1)AND(vt0.c0)))OR(rt0.c3)), ((vt0.c0)+(NULL)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((LIKELY(vt1.c0))) AND ((CAST(rt0.c0 AS BLOB))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY json_extract(rt0.c1, vt1.c0) COLLATE BINARY ASC  NULLS FIRST, ((((~ (vt1.c0)), (rt0.c0 IN ()), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END))<((((rt0.c3)|(2.91234856E8)), ((((rt0.c1)AND(vt0.c0)))OR(rt0.c3)), ((vt0.c0)+(NULL)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((LIKELY(vt1.c0))) AND ((CAST(rt0.c0 AS BLOB))))) ORDER BY json_extract(rt0.c1, vt1.c0) COLLATE BINARY ASC  NULLS FIRST, ((((~ (vt1.c0)), (rt0.c0 IN ()), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END))<((((rt0.c3)|(2.91234856E8)), ((((rt0.c1)AND(vt0.c0)))OR(rt0.c3)), ((vt0.c0)+(NULL)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((LIKELY(vt1.c0))) AND ((CAST(rt0.c0 AS BLOB))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY json_extract(rt0.c1, vt1.c0) COLLATE BINARY ASC  NULLS FIRST, ((((~ (vt1.c0)), (rt0.c0 IN ()), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END))<((((rt0.c3)|(2.91234856E8)), ((((rt0.c1)AND(vt0.c0)))OR(rt0.c3)), ((vt0.c0)+(NULL)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((LIKELY(vt1.c0))) AND ((CAST(rt0.c0 AS BLOB))))) ORDER BY json_extract(rt0.c1, vt1.c0) COLLATE BINARY ASC  NULLS FIRST, ((((~ (vt1.c0)), (rt0.c0 IN ()), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END))<((((rt0.c3)|(2.91234856E8)), ((((rt0.c1)AND(vt0.c0)))OR(rt0.c3)), ((vt0.c0)+(NULL)))))  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE (NULL);
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((((((rt0.c2 COLLATE NOCASE)OR(((NULL)*(rt0.c1)))))AND(CAST(t0.c1 AS TEXT))))OR(rt0.c0)))OR(vt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND (((0.46500641883096105 IN ())))), (((('9lb梌R') ISNULL)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2 COLLATE NOCASE)OR(((NULL)*(rt0.c1)))))AND(CAST(t0.c1 AS TEXT))))OR(rt0.c0)))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND (((0.46500641883096105 IN ())))), (((('9lb梌R') ISNULL)) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((((((rt0.c2 COLLATE NOCASE)OR(((NULL)*(rt0.c1)))))AND(CAST(t0.c1 AS TEXT))))OR(rt0.c0)))OR(vt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND (((0.46500641883096105 IN ())))), (((('9lb梌R') ISNULL)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2 COLLATE NOCASE)OR(((NULL)*(rt0.c1)))))AND(CAST(t0.c1 AS TEXT))))OR(rt0.c0)))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND (((0.46500641883096105 IN ())))), (((('9lb梌R') ISNULL)) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((((((rt0.c2 COLLATE NOCASE)OR(((NULL)*(rt0.c1)))))AND(CAST(t0.c1 AS TEXT))))OR(rt0.c0)))OR(vt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND (((0.46500641883096105 IN ())))), (((('9lb梌R') ISNULL)) IS TRUE) DESC  NULLS LAST;
SELECT * FROM t0 WHERE ((+ (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c75))))) ORDER BY (((t0.c75))>((t0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c75))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c75))>((t0.c0))) COLLATE RTRIM  NULLS LAST);
SELECT * FROM t0 WHERE ((+ (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c75))))) ORDER BY (((t0.c75))>((t0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c75))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c75))>((t0.c0))) COLLATE RTRIM  NULLS LAST);
SELECT * FROM t0 WHERE ((+ (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c75))))) ORDER BY (((t0.c75))>((t0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY CASE WHEN ABS(vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((vt1.c0)&(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ABS(vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((vt1.c0)&(vt1.c0)) END);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY CASE WHEN ABS(vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((vt1.c0)&(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ABS(vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((vt1.c0)&(vt1.c0)) END);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY CASE WHEN ABS(vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((vt1.c0)&(vt1.c0)) END;
SELECT * FROM rt0, vt0, vt1, t0 WHERE ((((t0.c0)OR(vt1.c0)) IN ())) ORDER BY ((rt0.c1)<(t0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)OR(vt1.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY ((rt0.c1)<(t0.c0)) COLLATE NOCASE DESC);
SELECT * FROM rt0, vt0, vt1, t0 WHERE ((((t0.c0)OR(vt1.c0)) IN ())) ORDER BY ((rt0.c1)<(t0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)OR(vt1.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY ((rt0.c1)<(t0.c0)) COLLATE NOCASE DESC);
SELECT * FROM rt0, vt0, vt1, t0 WHERE ((((t0.c0)OR(vt1.c0)) IN ())) ORDER BY ((rt0.c1)<(t0.c0)) COLLATE NOCASE DESC;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (json_object(((1.149428413E9) ISNULL), DATETIME('-974501495', vt0.c0, rt0.c0))) ORDER BY COALESCE(DISTINCT ((rt0.c1)<(rt0.c0)), TRIM(DISTINCT rt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_object(((1.149428413E9) ISNULL), DATETIME('-974501495', vt0.c0, rt0.c0))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY COALESCE(DISTINCT ((rt0.c1)<(rt0.c0)), TRIM(DISTINCT rt0.c1)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (json_object(((1.149428413E9) ISNULL), DATETIME('-974501495', vt0.c0, rt0.c0))) ORDER BY COALESCE(DISTINCT ((rt0.c1)<(rt0.c0)), TRIM(DISTINCT rt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_object(((1.149428413E9) ISNULL), DATETIME('-974501495', vt0.c0, rt0.c0))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY COALESCE(DISTINCT ((rt0.c1)<(rt0.c0)), TRIM(DISTINCT rt0.c1)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (json_object(((1.149428413E9) ISNULL), DATETIME('-974501495', vt0.c0, rt0.c0))) ORDER BY COALESCE(DISTINCT ((rt0.c1)<(rt0.c0)), TRIM(DISTINCT rt0.c1)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON json_insert(CASE t0.c0  WHEN vt1.c0 THEN t0.c1 WHEN t0.c7 THEN vt0.c0 WHEN t0.c75 THEN t0.c2 END, 0.04332616536664513, (+ (NULL)), (((t0.c7, t0.c1, t0.c1)) NOT BETWEEN ((x'', vt0.c0, NULL)) AND ((vt0.c0, t0.c75, vt1.c0))), CAST(t0.c1 AS BLOB)) INNER JOIN t0 ON t0.c2 WHERE (LIKELY(DISTINCT ((t0.c2)|(t0.c75))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((t0.c2)|(t0.c75)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON json_insert(CASE t0.c0  WHEN vt1.c0 THEN t0.c1 WHEN t0.c7 THEN vt0.c0 WHEN t0.c75 THEN t0.c2 END, 0.04332616536664513, (+ (NULL)), (((t0.c7, t0.c1, t0.c1)) NOT BETWEEN ((x'', vt0.c0, NULL)) AND ((vt0.c0, t0.c75, vt1.c0))), CAST(t0.c1 AS BLOB)) INNER JOIN t0 ON t0.c2);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON json_insert(CASE t0.c0  WHEN vt1.c0 THEN t0.c1 WHEN t0.c7 THEN vt0.c0 WHEN t0.c75 THEN t0.c2 END, 0.04332616536664513, (+ (NULL)), (((t0.c7, t0.c1, t0.c1)) NOT BETWEEN ((x'', vt0.c0, NULL)) AND ((vt0.c0, t0.c75, vt1.c0))), CAST(t0.c1 AS BLOB)) INNER JOIN t0 ON t0.c2 WHERE (LIKELY(DISTINCT ((t0.c2)|(t0.c75))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((t0.c2)|(t0.c75)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON json_insert(CASE t0.c0  WHEN vt1.c0 THEN t0.c1 WHEN t0.c7 THEN vt0.c0 WHEN t0.c75 THEN t0.c2 END, 0.04332616536664513, (+ (NULL)), (((t0.c7, t0.c1, t0.c1)) NOT BETWEEN ((x'', vt0.c0, NULL)) AND ((vt0.c0, t0.c75, vt1.c0))), CAST(t0.c1 AS BLOB)) INNER JOIN t0 ON t0.c2);
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (((rt0.c2 COLLATE NOCASE)>(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)>(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (((rt0.c2 COLLATE NOCASE)>(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)>(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (((rt0.c2 COLLATE NOCASE)>(CAST(rt0.c1 AS REAL))));
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL);
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL);
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY NULL;
SELECT COUNT(*) FROM t0, rt0 WHERE ((+ (x'1888')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (x'1888')) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((+ (x'1888')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (x'1888')) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((+ (x'1888')) COLLATE NOCASE);
SELECT ALL * FROM vt1, t0, vt0, rt0 NOT INDEXED WHERE (((((((((t0.c0)AND(rt0.c2)))OR(vt0.c0)))AND(t0.c7 COLLATE NOCASE)))OR(t0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)AND(rt0.c2)))OR(vt0.c0)))AND(t0.c7 COLLATE NOCASE)))OR(t0.c2))) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT ALL * FROM vt1, t0, vt0, rt0 NOT INDEXED WHERE (((((((((t0.c0)AND(rt0.c2)))OR(vt0.c0)))AND(t0.c7 COLLATE NOCASE)))OR(t0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)AND(rt0.c2)))OR(vt0.c0)))AND(t0.c7 COLLATE NOCASE)))OR(t0.c2))) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT ALL * FROM vt1, t0, vt0, rt0 NOT INDEXED WHERE (((((((((t0.c0)AND(rt0.c2)))OR(vt0.c0)))AND(t0.c7 COLLATE NOCASE)))OR(t0.c2)));
SELECT * FROM vt0 CROSS JOIN vt1 ON CAST(vt1.c0 AS INTEGER) COLLATE NOCASE RIGHT OUTER JOIN t0 ON (((t0.c7 IN ())) NOT BETWEEN (((rt0.c0) NOT BETWEEN (t0.c2) AND (0.20346997236811337))) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)))) FULL OUTER JOIN rt0 ON ((rt0.c1)<=(((((rt0.c1)OR(t0.c2)))OR(vt0.c0)))) WHERE (((UNLIKELY(DISTINCT rt0.c2)) ISNULL)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT rt0.c2)) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(vt1.c0 AS INTEGER) COLLATE NOCASE RIGHT OUTER JOIN t0 ON (((t0.c7 IN ())) NOT BETWEEN (((rt0.c0) NOT BETWEEN (t0.c2) AND (0.20346997236811337))) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)))) FULL OUTER JOIN rt0 ON ((rt0.c1)<=(((((rt0.c1)OR(t0.c2)))OR(vt0.c0)))) ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN vt1 ON CAST(vt1.c0 AS INTEGER) COLLATE NOCASE RIGHT OUTER JOIN t0 ON (((t0.c7 IN ())) NOT BETWEEN (((rt0.c0) NOT BETWEEN (t0.c2) AND (0.20346997236811337))) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)))) FULL OUTER JOIN rt0 ON ((rt0.c1)<=(((((rt0.c1)OR(t0.c2)))OR(vt0.c0)))) WHERE (((UNLIKELY(DISTINCT rt0.c2)) ISNULL)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT rt0.c2)) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(vt1.c0 AS INTEGER) COLLATE NOCASE RIGHT OUTER JOIN t0 ON (((t0.c7 IN ())) NOT BETWEEN (((rt0.c0) NOT BETWEEN (t0.c2) AND (0.20346997236811337))) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)))) FULL OUTER JOIN rt0 ON ((rt0.c1)<=(((((rt0.c1)OR(t0.c2)))OR(vt0.c0)))) ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM t0, vt1, rt0 WHERE ((+ (rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE ((+ (rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE ((+ (rt0.c3)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 IN ()) IN (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, NULL)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, NULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 IN ()) IN (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, NULL)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, NULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 IN ()) IN (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, NULL)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (+ (((rt0.c1)!=(rt0.c1)))) WHERE (LIKELIHOOD(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), 0.9513067829318909));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), 0.9513067829318909)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (+ (((rt0.c1)<>(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (+ (((rt0.c1)!=(rt0.c1)))) WHERE (LIKELIHOOD(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), 0.9513067829318909));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), 0.9513067829318909)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (+ (((rt0.c1)<>(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (+ (((rt0.c1)!=(rt0.c1)))) WHERE (LIKELIHOOD(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), 0.9513067829318909));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (('2030570577'))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (('2030570577')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (('2030570577'))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (('2030570577')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (('2030570577'))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) ORDER BY vt0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) ORDER BY vt0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) ORDER BY vt0.c0 COLLATE BINARY;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT * FROM vt1 WHERE (((((json_array(vt1.c0, vt1.c0, vt1.c0, vt1.c0))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)<=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_array(vt1.c0, vt1.c0, vt1.c0, vt1.c0))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)<=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((json_array(vt1.c0, vt1.c0, vt1.c0, vt1.c0))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)<=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_array(vt1.c0, vt1.c0, vt1.c0, vt1.c0))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)<=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((json_array(vt1.c0, vt1.c0, vt1.c0, vt1.c0))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)<=(vt1.c0)))));
SELECT * FROM t0 CROSS JOIN vt1 ON (((((((((vt1.c0)AND(t0.c2)))OR(t0.c2)))OR(t0.c1)))AND(t0.c1)) IN ()) FULL OUTER JOIN vt0 ON ((((vt1.c0)<<(t0.c0))) NOT BETWEEN ((((x'', '{X~nx\', vt0.c0)) NOT BETWEEN ((vt1.c0, t0.c1, t0.c75)) AND ((t0.c75, t0.c7, t0.c1)))) AND (t0.c7)) WHERE (((MAX(t0.c2, vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((t0.c1)==('1447278543'))))) ORDER BY ((((t0.c0) BETWEEN (t0.c7) AND (t0.c2))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((MAX(t0.c2, vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((t0.c1)==('1447278543'))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((((((((vt1.c0)AND(t0.c2)))OR(t0.c2)))OR(t0.c1)))AND(t0.c1)) IN ()) FULL OUTER JOIN vt0 ON ((((vt1.c0)<<(t0.c0))) NOT BETWEEN ((((x'', '{X~nx\', vt0.c0)) NOT BETWEEN ((vt1.c0, t0.c1, t0.c75)) AND ((t0.c75, t0.c7, t0.c1)))) AND (t0.c7)) ORDER BY ((((t0.c0) BETWEEN (t0.c7) AND (t0.c2))) IS FALSE)  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt1 ON (((((((((vt1.c0)AND(t0.c2)))OR(t0.c2)))OR(t0.c1)))AND(t0.c1)) IN ()) FULL OUTER JOIN vt0 ON ((((vt1.c0)<<(t0.c0))) NOT BETWEEN ((((x'', '{X~nx\', vt0.c0)) NOT BETWEEN ((vt1.c0, t0.c1, t0.c75)) AND ((t0.c75, t0.c7, t0.c1)))) AND (t0.c7)) WHERE (((MAX(t0.c2, vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((t0.c1)==('1447278543'))))) ORDER BY ((((t0.c0) BETWEEN (t0.c7) AND (t0.c2))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((MAX(t0.c2, vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((t0.c1)==('1447278543'))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((((((((vt1.c0)AND(t0.c2)))OR(t0.c2)))OR(t0.c1)))AND(t0.c1)) IN ()) FULL OUTER JOIN vt0 ON ((((vt1.c0)<<(t0.c0))) NOT BETWEEN ((((x'', '{X~nx\', vt0.c0)) NOT BETWEEN ((vt1.c0, t0.c1, t0.c75)) AND ((t0.c75, t0.c7, t0.c1)))) AND (t0.c7)) ORDER BY ((((t0.c0) BETWEEN (t0.c7) AND (t0.c2))) IS FALSE)  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt1 ON (((((((((vt1.c0)AND(t0.c2)))OR(t0.c2)))OR(t0.c1)))AND(t0.c1)) IN ()) FULL OUTER JOIN vt0 ON ((((vt1.c0)<<(t0.c0))) NOT BETWEEN ((((x'', '{X~nx\', vt0.c0)) NOT BETWEEN ((vt1.c0, t0.c1, t0.c75)) AND ((t0.c75, t0.c7, t0.c1)))) AND (t0.c7)) WHERE (((MAX(t0.c2, vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((t0.c1)==('1447278543'))))) ORDER BY ((((t0.c0) BETWEEN (t0.c7) AND (t0.c2))) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST(t0.c75 AS NUMERIC) COLLATE NOCASE FULL OUTER JOIN vt1 ON CAST((((rt0.c0))>=((t0.c75))) AS TEXT) WHERE (0.8778820956898741);
SELECT SUM(count) FROM (SELECT ((0.8778820956898741) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(t0.c75 AS NUMERIC) COLLATE NOCASE FULL OUTER JOIN vt1 ON CAST((((rt0.c0))>=((t0.c75))) AS TEXT));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST(t0.c75 AS NUMERIC) COLLATE NOCASE FULL OUTER JOIN vt1 ON CAST((((rt0.c0))>=((t0.c75))) AS TEXT) WHERE (0.8778820956898741);
SELECT SUM(count) FROM (SELECT ((0.8778820956898741) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(t0.c75 AS NUMERIC) COLLATE NOCASE FULL OUTER JOIN vt1 ON CAST((((rt0.c0))>=((t0.c75))) AS TEXT));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST(t0.c75 AS NUMERIC) COLLATE NOCASE FULL OUTER JOIN vt1 ON CAST((((rt0.c0))>=((t0.c75))) AS TEXT) WHERE (0.8778820956898741);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE ((((~ (t0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt1 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE ((((~ (t0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt1 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE ((((~ (t0.c1))) NOT NULL));
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((((t0.c1) ISNULL), t0.c2, ((t0.c0)<>(vt0.c0))))<(((((t0.c1))<=((vt0.c0))), ((t0.c0) NOT BETWEEN (t0.c2) AND (vt1.c0)), (+ (1238583664))))) WHERE ((((t0.c1)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((t0.c2 COLLATE BINARY)))) ORDER BY ((CASE t0.c1  WHEN t0.c7 THEN t0.c2 ELSE t0.c7 END)IS(((vt1.c0) NOT BETWEEN (t0.c1) AND (t0.c7)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((t0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((((t0.c1) ISNULL), t0.c2, ((t0.c0)!=(vt0.c0))))<(((((t0.c1))<=((vt0.c0))), ((t0.c0) NOT BETWEEN (t0.c2) AND (vt1.c0)), (+ (1238583664))))) ORDER BY ((CASE t0.c1  WHEN t0.c7 THEN t0.c2 ELSE t0.c7 END)IS(((vt1.c0) NOT BETWEEN (t0.c1) AND (t0.c7)))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((((t0.c1) ISNULL), t0.c2, ((t0.c0)<>(vt0.c0))))<(((((t0.c1))<=((vt0.c0))), ((t0.c0) NOT BETWEEN (t0.c2) AND (vt1.c0)), (+ (1238583664))))) WHERE ((((t0.c1)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((t0.c2 COLLATE BINARY)))) ORDER BY ((CASE t0.c1  WHEN t0.c7 THEN t0.c2 ELSE t0.c7 END)IS(((vt1.c0) NOT BETWEEN (t0.c1) AND (t0.c7)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((t0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((((t0.c1) ISNULL), t0.c2, ((t0.c0)!=(vt0.c0))))<(((((t0.c1))<=((vt0.c0))), ((t0.c0) NOT BETWEEN (t0.c2) AND (vt1.c0)), (+ (1238583664))))) ORDER BY ((CASE t0.c1  WHEN t0.c7 THEN t0.c2 ELSE t0.c7 END)IS(((vt1.c0) NOT BETWEEN (t0.c1) AND (t0.c7)))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((((t0.c1) ISNULL), t0.c2, ((t0.c0)<>(vt0.c0))))<(((((t0.c1))<=((vt0.c0))), ((t0.c0) NOT BETWEEN (t0.c2) AND (vt1.c0)), (+ (1238583664))))) WHERE ((((t0.c1)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((t0.c2 COLLATE BINARY)))) ORDER BY ((CASE t0.c1  WHEN t0.c7 THEN t0.c2 ELSE t0.c7 END)IS(((vt1.c0) NOT BETWEEN (t0.c1) AND (t0.c7)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt1 ON (((NULL IN ())) NOT BETWEEN ((t0.c2 IN ())) AND (((t0.c0)&(rt0.c3)))) WHERE (GLOB(((rt0.c2) NOT BETWEEN (t0.c75) AND (t0.c75)), (+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((rt0.c2) NOT BETWEEN (t0.c75) AND (t0.c75)), (+ (vt1.c0)))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt1 ON (((NULL IN ())) NOT BETWEEN ((t0.c2 IN ())) AND (((t0.c0)&(rt0.c3)))));
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt1 ON (((NULL IN ())) NOT BETWEEN ((t0.c2 IN ())) AND (((t0.c0)&(rt0.c3)))) WHERE (GLOB(((rt0.c2) NOT BETWEEN (t0.c75) AND (t0.c75)), (+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((rt0.c2) NOT BETWEEN (t0.c75) AND (t0.c75)), (+ (vt1.c0)))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt1 ON (((NULL IN ())) NOT BETWEEN ((t0.c2 IN ())) AND (((t0.c0)&(rt0.c3)))));
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt1 ON (((NULL IN ())) NOT BETWEEN ((t0.c2 IN ())) AND (((t0.c0)&(rt0.c3)))) WHERE (GLOB(((rt0.c2) NOT BETWEEN (t0.c75) AND (t0.c75)), (+ (vt1.c0))));
