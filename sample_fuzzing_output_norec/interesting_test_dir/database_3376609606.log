-- Time: 2024/06/09 14:51:48
-- Database: database6
-- Database version: 3.40.0
-- seed value: 3376609606
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
PRAGMA optimize; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.cache_spill = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1016749198); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL vt0.c0 FROM vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=']	~頉[Z5kM', c0=x''; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='-300836855'; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('㌭	SoUq'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('43868784'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0.2967049332157343); -- 1ms;
END TRANSACTION; -- 5ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('-300836855'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.1646760662321356); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cache_size = -1955256749147454612; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.8299400627430907), (x'57bb'), (''); -- 1ms;
PRAGMA cache_spill; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
REINDEX; -- 0ms;
ANALYZE; -- 4ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL); -- 0ms;
END; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('xU'); -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x''), (x''), (x'0830'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL); -- 4ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('-64933075') WHERE (~ (((vt1.c0)|(vt1.c0)))); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (-642615283); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (0.2967049332157343), (0.6264929369754366), (NULL), (NULL), ('809165088'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0='Q/'; -- 1ms;
END; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.11965125808471488); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (NULL), (1011381980), ('-300836855'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA temp.ignore_check_constraints = true; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.87040815148022; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT (NOT (0.2967049332157343))); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 4ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 101044276); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 935827491); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('43868784'); -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (0.886371096014151); -- 0ms;
PRAGMA main.secure_delete = FAST; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (((((((8.09165088E8) BETWEEN ('qK') AND (x'')))OR(((']	~頉[Z5kM')GLOB(NULL)))))OR(((NULL) IS FALSE)))); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (0.9968952687141007); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('zp') WHERE ((((vt0.c0) ISNULL)) NOTNULL); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(1223578571); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c2, c3) VALUES (0.6339007456419955, 8.09165088E8, 1011381980), ('1223578571', '-300836855', NULL), ('1011381980', '1223578571', NULL); -- 1ms;
INSERT OR REPLACE INTO rt0(c4, c1) VALUES (x'', 1.223578571E9); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 14); -- 0ms;
DROP VIEW v0; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1418477060); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''), (x'f2aed32f'), (0.5853140744158197); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=1223578571,6');\n; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
PRAGMA temp.optimize; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1223578571);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1695562676);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-64933075,5');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0X3877bd5f), (0.09650257318552002), (-6.42615283E8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('⛧||7*9z]0'); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1223578571);\n; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA main.checkpoint_fullfsync = false; -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1329422032); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 219959003); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
END TRANSACTION; -- 1ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '60468'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 7); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))))) ORDER BY '1011381980' DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY '1011381980' DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))))) ORDER BY '1011381980' DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY '1011381980' DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))))) ORDER BY '1011381980' DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((((((rt0.c0) NOT NULL))AND((rt0.c2 IN ()))))AND((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT NULL))AND((rt0.c2 IN ()))))AND((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((((((rt0.c0) NOT NULL))AND((rt0.c2 IN ()))))AND((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT NULL))AND((rt0.c2 IN ()))))AND((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((((((rt0.c0) NOT NULL))AND((rt0.c2 IN ()))))AND((NOT (rt0.c2)))));
SELECT ALL * FROM vt0 WHERE ((- ('kD'))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))*(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((((vt0.c0 COLLATE NOCASE)AND((NOT ('>㌭')))))OR(((vt0.c0)*(vt0.c0)))))AND(TYPEOF(vt0.c0))))OR((~ (vt0.c0))))  NULLS LAST, ((((((((((vt0.c0)%(vt0.c0)))OR(vt0.c0)))AND('583862401')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((- ('kD'))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))*(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((((vt0.c0 COLLATE NOCASE)AND((NOT ('>㌭')))))OR(((vt0.c0)*(vt0.c0)))))AND(TYPEOF(vt0.c0))))OR((~ (vt0.c0))))  NULLS LAST, ((((((((((vt0.c0)%(vt0.c0)))OR(vt0.c0)))AND('583862401')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE ((- ('kD'))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))*(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((((vt0.c0 COLLATE NOCASE)AND((NOT ('>㌭')))))OR(((vt0.c0)*(vt0.c0)))))AND(TYPEOF(vt0.c0))))OR((~ (vt0.c0))))  NULLS LAST, ((((((((((vt0.c0)%(vt0.c0)))OR(vt0.c0)))AND('583862401')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((- ('kD'))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))*(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((((vt0.c0 COLLATE NOCASE)AND((NOT ('>㌭')))))OR(((vt0.c0)*(vt0.c0)))))AND(TYPEOF(vt0.c0))))OR((~ (vt0.c0))))  NULLS LAST, ((((((((((vt0.c0)%(vt0.c0)))OR(vt0.c0)))AND('583862401')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE ((- ('kD'))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))*(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((((vt0.c0 COLLATE NOCASE)AND((NOT ('>㌭')))))OR(((vt0.c0)*(vt0.c0)))))AND(TYPEOF(vt0.c0))))OR((~ (vt0.c0))))  NULLS LAST, ((((((((((vt0.c0)%(vt0.c0)))OR(vt0.c0)))AND('583862401')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT * FROM vt0, rt0, vt1 WHERE (0x7df326e7) ORDER BY CAST(COALESCE(rt0.c4, vt1.c0) AS BLOB), CASE WHEN 0.1501161784668884 THEN CAST(rt0.c2 AS BLOB) END  NULLS FIRST, ((((rt0.c4)>(rt0.c1)))>=(CASE NULL  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0x7df326e7) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY CAST(COALESCE(rt0.c4, vt1.c0) AS BLOB), CASE WHEN 0.1501161784668884 THEN CAST(rt0.c2 AS BLOB) END  NULLS FIRST, ((((rt0.c4)>(rt0.c1)))>=(CASE NULL  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 END)) ASC  NULLS LAST);
SELECT * FROM vt0, rt0, vt1 WHERE (0x7df326e7) ORDER BY CAST(COALESCE(rt0.c4, vt1.c0) AS BLOB), CASE WHEN 0.1501161784668884 THEN CAST(rt0.c2 AS BLOB) END  NULLS FIRST, ((((rt0.c4)>(rt0.c1)))>=(CASE NULL  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0x7df326e7) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY CAST(COALESCE(rt0.c4, vt1.c0) AS BLOB), CASE WHEN 0.1501161784668884 THEN CAST(rt0.c2 AS BLOB) END  NULLS FIRST, ((((rt0.c4)>(rt0.c1)))>=(CASE NULL  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 END)) ASC  NULLS LAST);
SELECT * FROM vt0, rt0, vt1 WHERE (0x7df326e7) ORDER BY CAST(COALESCE(rt0.c4, vt1.c0) AS BLOB), CASE WHEN 0.1501161784668884 THEN CAST(rt0.c2 AS BLOB) END  NULLS FIRST, ((((rt0.c4)>(rt0.c1)))>=(CASE NULL  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT * FROM rt0, vt1, vt0 WHERE (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0))) NOTNULL)) ORDER BY (~ (((rt0.c4)<(rt0.c4)))) ASC  NULLS LAST, (((rt0.c2)LIKE(vt0.c0)) IN (0.7780483774027241)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (~ (((rt0.c4)<(rt0.c4)))) ASC  NULLS LAST, (((rt0.c2)LIKE(vt0.c0)) IN (0.7780483774027241)) ASC);
SELECT * FROM rt0, vt1, vt0 WHERE (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0))) NOTNULL)) ORDER BY (~ (((rt0.c4)<(rt0.c4)))) ASC  NULLS LAST, (((rt0.c2)LIKE(vt0.c0)) IN (0.7780483774027241)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (~ (((rt0.c4)<(rt0.c4)))) ASC  NULLS LAST, (((rt0.c2)LIKE(vt0.c0)) IN (0.7780483774027241)) ASC);
SELECT * FROM rt0, vt1, vt0 WHERE (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0))) NOTNULL)) ORDER BY (~ (((rt0.c4)<(rt0.c4)))) ASC  NULLS LAST, (((rt0.c2)LIKE(vt0.c0)) IN (0.7780483774027241)) ASC;
SELECT * FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c2)))OR(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c2)))OR(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c2)))OR(rt0.c1))) NOTNULL));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c3)AND(((rt0.c2)/(vt1.c0)))))OR('')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND(((rt0.c2)/(vt1.c0)))))OR(''))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c3)AND(((rt0.c2)/(vt1.c0)))))OR('')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND(((rt0.c2)/(vt1.c0)))))OR(''))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c3)AND(((rt0.c2)/(vt1.c0)))))OR('')));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CAST(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)) AS INTEGER)) ORDER BY ((LIKELY(rt0.c4))*((((rt0.c4))>=((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)) AS INTEGER)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((LIKELY(rt0.c4))*((((rt0.c4))>=((rt0.c1))))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CAST(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)) AS INTEGER)) ORDER BY ((LIKELY(rt0.c4))*((((rt0.c4))>=((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)) AS INTEGER)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((LIKELY(rt0.c4))*((((rt0.c4))>=((rt0.c1))))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CAST(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)) AS INTEGER)) ORDER BY ((LIKELY(rt0.c4))*((((rt0.c4))>=((rt0.c1)))));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((TRIM(rt0.c3))>=(((((rt0.c4)AND(vt1.c0)))AND(rt0.c3)))) WHERE (((rt0.c3)%(((vt1.c0) BETWEEN (rt0.c4) AND (vt0.c0))))) ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS NUMERIC) DESC  NULLS LAST, (((rt0.c1) NOTNULL) IN ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)%(((vt1.c0) BETWEEN (rt0.c4) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((TRIM(rt0.c3))>=(((((rt0.c4)AND(vt1.c0)))AND(rt0.c3)))) ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS NUMERIC) DESC  NULLS LAST, (((rt0.c1) NOTNULL) IN ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((TRIM(rt0.c3))>=(((((rt0.c4)AND(vt1.c0)))AND(rt0.c3)))) WHERE (((rt0.c3)%(((vt1.c0) BETWEEN (rt0.c4) AND (vt0.c0))))) ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS NUMERIC) DESC  NULLS LAST, (((rt0.c1) NOTNULL) IN ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)%(((vt1.c0) BETWEEN (rt0.c4) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((TRIM(rt0.c3))>=(((((rt0.c4)AND(vt1.c0)))AND(rt0.c3)))) ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS NUMERIC) DESC  NULLS LAST, (((rt0.c1) NOTNULL) IN ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((TRIM(rt0.c3))>=(((((rt0.c4)AND(vt1.c0)))AND(rt0.c3)))) WHERE (((rt0.c3)%(((vt1.c0) BETWEEN (rt0.c4) AND (vt0.c0))))) ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS NUMERIC) DESC  NULLS LAST, (((rt0.c1) NOTNULL) IN ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c2)IS NOT('')) COLLATE RTRIM) ORDER BY (((+ ('-535253658')))GLOB(CAST(rt0.c3 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)IS NOT('')) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((+ ('-535253658')))GLOB(CAST(rt0.c3 AS TEXT))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c2)IS NOT('')) COLLATE RTRIM) ORDER BY (((+ ('-535253658')))GLOB(CAST(rt0.c3 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)IS NOT('')) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((+ ('-535253658')))GLOB(CAST(rt0.c3 AS TEXT))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c2)IS NOT('')) COLLATE RTRIM) ORDER BY (((+ ('-535253658')))GLOB(CAST(rt0.c3 AS TEXT))) DESC;
SELECT ALL * FROM vt0, rt0 WHERE (LIKELY(DISTINCT 8.09165088E8) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT 8.09165088E8) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (LIKELY(DISTINCT 8.09165088E8) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT 8.09165088E8) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (LIKELY(DISTINCT 8.09165088E8) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((rt0.c4)OR(rt0.c2)))*((((vt0.c0))>=((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((rt0.c4)OR(rt0.c2)))*((((vt0.c0))>=((rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((rt0.c4)OR(rt0.c2)))*((((vt0.c0))>=((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((rt0.c4)OR(rt0.c2)))*((((vt0.c0))>=((rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((rt0.c4)OR(rt0.c2)))*((((vt0.c0))>=((rt0.c2))))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c4) NOT NULL))<(CAST(rt0.c1 AS TEXT)))) ORDER BY (~ (vt0.c0)) COLLATE BINARY DESC, '' DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT NULL))<(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (vt0.c0)) COLLATE BINARY DESC, '' DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c4) NOT NULL))<(CAST(rt0.c1 AS TEXT)))) ORDER BY (~ (vt0.c0)) COLLATE BINARY DESC, '' DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT NULL))<(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (vt0.c0)) COLLATE BINARY DESC, '' DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c4) NOT NULL))<(CAST(rt0.c1 AS TEXT)))) ORDER BY (~ (vt0.c0)) COLLATE BINARY DESC, '' DESC;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)) IN ())) ORDER BY (~ (rt0.c1)) COLLATE BINARY COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (~ (rt0.c1)) COLLATE BINARY COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)) IN ())) ORDER BY (~ (rt0.c1)) COLLATE BINARY COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (~ (rt0.c1)) COLLATE BINARY COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)) IN ())) ORDER BY (~ (rt0.c1)) COLLATE BINARY COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((CAST(vt1.c0 AS NUMERIC), vt1.c0, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))>=(((vt0.c0 IN (vt1.c0)), ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)), vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS NUMERIC), vt1.c0, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))>=(((vt0.c0 IN (vt1.c0)), ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)), vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((CAST(vt1.c0 AS NUMERIC), vt1.c0, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))>=(((vt0.c0 IN (vt1.c0)), ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)), vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS NUMERIC), vt1.c0, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))>=(((vt0.c0 IN (vt1.c0)), ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)), vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((CAST(vt1.c0 AS NUMERIC), vt1.c0, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))>=(((vt0.c0 IN (vt1.c0)), ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)), vt1.c0 COLLATE RTRIM))));
SELECT * FROM vt1 WHERE ((+ ((vt1.c0 IN ())))) ORDER BY (((vt1.c0) IS TRUE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) IS TRUE) IN ()) ASC);
SELECT * FROM vt1 WHERE ((+ ((vt1.c0 IN ())))) ORDER BY (((vt1.c0) IS TRUE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) IS TRUE) IN ()) ASC);
SELECT * FROM vt1 WHERE ((+ ((vt1.c0 IN ())))) ORDER BY (((vt1.c0) IS TRUE) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0))) ORDER BY (((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)), NULL, vt1.c0 COLLATE BINARY))<>((((vt1.c0)||(vt1.c0)), ((vt1.c0)LIKE(vt1.c0)), ((vt1.c0)!=(vt1.c0))))), ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)), NULL, vt1.c0 COLLATE BINARY))<>((((vt1.c0)||(vt1.c0)), ((vt1.c0)LIKE(vt1.c0)), ((vt1.c0)<>(vt1.c0))))), ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0))) ORDER BY (((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)), NULL, vt1.c0 COLLATE BINARY))<>((((vt1.c0)||(vt1.c0)), ((vt1.c0)LIKE(vt1.c0)), ((vt1.c0)!=(vt1.c0))))), ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)), NULL, vt1.c0 COLLATE BINARY))<>((((vt1.c0)||(vt1.c0)), ((vt1.c0)LIKE(vt1.c0)), ((vt1.c0)<>(vt1.c0))))), ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0))) ORDER BY (((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)), NULL, vt1.c0 COLLATE BINARY))<>((((vt1.c0)||(vt1.c0)), ((vt1.c0)LIKE(vt1.c0)), ((vt1.c0)!=(vt1.c0))))), ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT NULL)))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (x'') ORDER BY (~ (((vt1.c0)&(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (~ (((vt1.c0)&(rt0.c1)))) DESC);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (x'') ORDER BY (~ (((vt1.c0)&(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (~ (((vt1.c0)&(rt0.c1)))) DESC);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (x'') ORDER BY (~ (((vt1.c0)&(rt0.c1)))) DESC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)IS NOT(rt0.c1))) NOTNULL) FULL OUTER JOIN vt1 ON ((((((((((rt0.c0)AND(NULL)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN ((- (vt0.c0))) AND ((((rt0.c3))>=((rt0.c0))))) WHERE (TRIM(((((vt1.c0)AND(rt0.c2)))OR('cN')), ((vt1.c0)<=('947371359'))));
SELECT SUM(count) FROM (SELECT ((TRIM(((((vt1.c0)AND(rt0.c2)))OR('cN')), ((vt1.c0)<=('947371359')))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)IS NOT(rt0.c1))) NOTNULL) FULL OUTER JOIN vt1 ON ((((((((((rt0.c0)AND(NULL)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN ((- (vt0.c0))) AND ((((rt0.c3))>=((rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)IS NOT(rt0.c1))) NOTNULL) FULL OUTER JOIN vt1 ON ((((((((((rt0.c0)AND(NULL)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN ((- (vt0.c0))) AND ((((rt0.c3))>=((rt0.c0))))) WHERE (TRIM(((((vt1.c0)AND(rt0.c2)))OR('cN')), ((vt1.c0)<=('947371359'))));
SELECT SUM(count) FROM (SELECT ((TRIM(((((vt1.c0)AND(rt0.c2)))OR('cN')), ((vt1.c0)<=('947371359')))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)IS NOT(rt0.c1))) NOTNULL) FULL OUTER JOIN vt1 ON ((((((((((rt0.c0)AND(NULL)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN ((- (vt0.c0))) AND ((((rt0.c3))>=((rt0.c0))))));
SELECT * FROM vt1, rt0, vt0 WHERE (CASE json(vt1.c0)  WHEN CAST(rt0.c2 AS REAL) THEN CAST(vt1.c0 AS INTEGER) ELSE '1223578571' END);
SELECT SUM(count) FROM (SELECT ((CASE json(vt1.c0)  WHEN CAST(rt0.c2 AS REAL) THEN CAST(vt1.c0 AS INTEGER) ELSE '1223578571' END) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (CASE json(vt1.c0)  WHEN CAST(rt0.c2 AS REAL) THEN CAST(vt1.c0 AS INTEGER) ELSE '1223578571' END);
SELECT SUM(count) FROM (SELECT ((CASE json(vt1.c0)  WHEN CAST(rt0.c2 AS REAL) THEN CAST(vt1.c0 AS INTEGER) ELSE '1223578571' END) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2)))%(((rt0.c1) BETWEEN (rt0.c1) AND (x'')))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))%(((rt0.c1) BETWEEN (rt0.c1) AND (x''))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2)))%(((rt0.c1) BETWEEN (rt0.c1) AND (x'')))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))%(((rt0.c1) BETWEEN (rt0.c1) AND (x''))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2)))%(((rt0.c1) BETWEEN (rt0.c1) AND (x'')))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (- (CAST(vt1.c0 AS TEXT))) ASC, ((((vt1.c0)||(vt1.c0)))<=(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (- (CAST(vt1.c0 AS TEXT))) ASC, ((((vt1.c0)||(vt1.c0)))<=(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (- (CAST(vt1.c0 AS TEXT))) ASC, ((((vt1.c0)||(vt1.c0)))<=(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (- (CAST(vt1.c0 AS TEXT))) ASC, ((((vt1.c0)||(vt1.c0)))<=(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (- (CAST(vt1.c0 AS TEXT))) ASC, ((((vt1.c0)||(vt1.c0)))<=(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)!=(vt0.c0)) AS TEXT)) ORDER BY CASE CAST(NULL AS TEXT)  WHEN (((vt0.c0))<((vt0.c0))) THEN CAST(vt0.c0 AS INTEGER) WHEN 'za' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0) IS TRUE) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE HEX(vt0.c0) END  NULLS LAST, ((((((vt0.c0) IS TRUE))AND(((vt0.c0)>(vt0.c0)))))AND((((0.3837590368412803, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)!=(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(NULL AS TEXT)  WHEN (((vt0.c0))<((vt0.c0))) THEN CAST(vt0.c0 AS INTEGER) WHEN 'za' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0) IS TRUE) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE HEX(vt0.c0) END  NULLS LAST, ((((((vt0.c0) IS TRUE))AND(((vt0.c0)>(vt0.c0)))))AND((((0.3837590368412803, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)!=(vt0.c0)) AS TEXT)) ORDER BY CASE CAST(NULL AS TEXT)  WHEN (((vt0.c0))<((vt0.c0))) THEN CAST(vt0.c0 AS INTEGER) WHEN 'za' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0) IS TRUE) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE HEX(vt0.c0) END  NULLS LAST, ((((((vt0.c0) IS TRUE))AND(((vt0.c0)>(vt0.c0)))))AND((((0.3837590368412803, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)!=(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(NULL AS TEXT)  WHEN (((vt0.c0))<((vt0.c0))) THEN CAST(vt0.c0 AS INTEGER) WHEN 'za' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0) IS TRUE) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE HEX(vt0.c0) END  NULLS LAST, ((((((vt0.c0) IS TRUE))AND(((vt0.c0)>(vt0.c0)))))AND((((0.3837590368412803, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)!=(vt0.c0)) AS TEXT)) ORDER BY CASE CAST(NULL AS TEXT)  WHEN (((vt0.c0))<((vt0.c0))) THEN CAST(vt0.c0 AS INTEGER) WHEN 'za' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0) IS TRUE) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE HEX(vt0.c0) END  NULLS LAST, ((((((vt0.c0) IS TRUE))AND(((vt0.c0)>(vt0.c0)))))AND((((0.3837590368412803, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0)))));
SELECT * FROM vt0, rt0, vt1 WHERE (((rt0.c3)AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c3)AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (((rt0.c3)AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c3)AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (((rt0.c3)AND(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c0)>(vt1.c0))))>=((((vt1.c0)||(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)>(vt1.c0))))>=((((vt1.c0)||(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c0)>(vt1.c0))))>=((((vt1.c0)||(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)>(vt1.c0))))>=((((vt1.c0)||(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c0)>(vt1.c0))))>=((((vt1.c0)||(vt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END IN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (- (((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END IN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (- (((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END IN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (- (((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END IN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (- (((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END IN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (- (((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))AND(rt0.c4 COLLATE RTRIM)))AND((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0)))))) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))AND(rt0.c4 COLLATE RTRIM)))AND((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))AND(rt0.c4 COLLATE RTRIM)))AND((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0)))))) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))AND(rt0.c4 COLLATE RTRIM)))AND((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))AND(rt0.c4 COLLATE RTRIM)))AND((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0)))))) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c4)))OR(NULL))) ISNULL)) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c4)))OR(NULL))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS NUMERIC) DESC);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c4)))OR(NULL))) ISNULL)) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c4)))OR(NULL))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS NUMERIC) DESC);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c4)))OR(NULL))) ISNULL)) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS NUMERIC) DESC;
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c4)OR(((1.01138198E9)>=(vt1.c0)))))OR(((NULL)<(rt0.c0)))) CROSS JOIN vt1 ON (((NULL IN ())) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((vt1.c0)IS(NULL)))) WHERE (((((vt1.c0)||('-1471414778')))&((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)||('-1471414778')))&((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c4)OR(((1.01138198E9)>=(vt1.c0)))))OR(((NULL)<(rt0.c0)))) CROSS JOIN vt1 ON (((NULL IN ())) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((vt1.c0)IS(NULL)))));
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c4)OR(((1.01138198E9)>=(vt1.c0)))))OR(((NULL)<(rt0.c0)))) CROSS JOIN vt1 ON (((NULL IN ())) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((vt1.c0)IS(NULL)))) WHERE (((((vt1.c0)||('-1471414778')))&((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)||('-1471414778')))&((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c4)OR(((1.01138198E9)>=(vt1.c0)))))OR(((NULL)<(rt0.c0)))) CROSS JOIN vt1 ON (((NULL IN ())) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((vt1.c0)IS(NULL)))));
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c4)OR(((1.01138198E9)>=(vt1.c0)))))OR(((NULL)<(rt0.c0)))) CROSS JOIN vt1 ON (((NULL IN ())) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((vt1.c0)IS(NULL)))) WHERE (((((vt1.c0)||('-1471414778')))&((rt0.c0 IN ()))));
SELECT * FROM vt1, vt0 WHERE (UNLIKELY(((vt0.c0) NOTNULL))) ORDER BY (((+ (vt1.c0))) BETWEEN ((- (vt0.c0))) AND (vt0.c0)), ((((vt1.c0)%(vt1.c0)))!=((- (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((+ (vt1.c0))) BETWEEN ((- (vt0.c0))) AND (vt0.c0)), ((((vt1.c0)%(vt1.c0)))!=((- (vt1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (UNLIKELY(((vt0.c0) NOTNULL))) ORDER BY (((+ (vt1.c0))) BETWEEN ((- (vt0.c0))) AND (vt0.c0)), ((((vt1.c0)%(vt1.c0)))!=((- (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((+ (vt1.c0))) BETWEEN ((- (vt0.c0))) AND (vt0.c0)), ((((vt1.c0)%(vt1.c0)))!=((- (vt1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (UNLIKELY(((vt0.c0) NOTNULL))) ORDER BY (((+ (vt1.c0))) BETWEEN ((- (vt0.c0))) AND (vt0.c0)), ((((vt1.c0)%(vt1.c0)))!=((- (vt1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0 IN (vt1.c0)))|(vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, ((+ (x'')) IN (((rt0.c2) NOTNULL), ((((((((((((vt0.c0)OR(x'380b')))AND(vt0.c0)))OR(2113087207)))AND(rt0.c2)))AND(rt0.c4)))AND(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((vt1.c0 IN (vt1.c0)))|(vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, ((+ (x'')) IN (((rt0.c2) NOTNULL), ((((((((((((vt0.c0)OR(x'380b')))AND(vt0.c0)))OR(2113087207)))AND(rt0.c2)))AND(rt0.c4)))AND(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0 IN (vt1.c0)))|(vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, ((+ (x'')) IN (((rt0.c2) NOTNULL), ((((((((((((vt0.c0)OR(x'380b')))AND(vt0.c0)))OR(2113087207)))AND(rt0.c2)))AND(rt0.c4)))AND(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((vt1.c0 IN (vt1.c0)))|(vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, ((+ (x'')) IN (((rt0.c2) NOTNULL), ((((((((((((vt0.c0)OR(x'380b')))AND(vt0.c0)))OR(2113087207)))AND(rt0.c2)))AND(rt0.c4)))AND(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0 IN (vt1.c0)))|(vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, ((+ (x'')) IN (((rt0.c2) NOTNULL), ((((((((((((vt0.c0)OR(x'380b')))AND(vt0.c0)))OR(2113087207)))AND(rt0.c2)))AND(rt0.c4)))AND(rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)OR(((vt1.c0)!=(vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(((vt1.c0)<>(vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)OR(((vt1.c0)!=(vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(((vt1.c0)<>(vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)OR(((vt1.c0)!=(vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CASE ((((((((((((vt1.c0)AND('1695562676')))OR(rt0.c4)))AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c0)))OR(vt0.c0))  WHEN CASE vt1.c0  WHEN rt0.c3 THEN '' END THEN ((((vt0.c0)OR(rt0.c2)))OR(rt0.c3)) ELSE ((rt0.c1)GLOB(rt0.c0)) END) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((((((vt1.c0)AND('1695562676')))OR(rt0.c4)))AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c0)))OR(vt0.c0))  WHEN CASE vt1.c0  WHEN rt0.c3 THEN '' END THEN ((((vt0.c0)OR(rt0.c2)))OR(rt0.c3)) ELSE ((rt0.c1)GLOB(rt0.c0)) END) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CASE ((((((((((((vt1.c0)AND('1695562676')))OR(rt0.c4)))AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c0)))OR(vt0.c0))  WHEN CASE vt1.c0  WHEN rt0.c3 THEN '' END THEN ((((vt0.c0)OR(rt0.c2)))OR(rt0.c3)) ELSE ((rt0.c1)GLOB(rt0.c0)) END) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((((((vt1.c0)AND('1695562676')))OR(rt0.c4)))AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c0)))OR(vt0.c0))  WHEN CASE vt1.c0  WHEN rt0.c3 THEN '' END THEN ((((vt0.c0)OR(rt0.c2)))OR(rt0.c3)) ELSE ((rt0.c1)GLOB(rt0.c0)) END) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CASE ((((((((((((vt1.c0)AND('1695562676')))OR(rt0.c4)))AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c0)))OR(vt0.c0))  WHEN CASE vt1.c0  WHEN rt0.c3 THEN '' END THEN ((((vt0.c0)OR(rt0.c2)))OR(rt0.c3)) ELSE ((rt0.c1)GLOB(rt0.c0)) END) ORDER BY x'' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0X29d6270) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*(ABS(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((0X29d6270) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*(ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0X29d6270) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*(ABS(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((0X29d6270) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*(ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0X29d6270) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*(ABS(DISTINCT vt0.c0))));
SELECT * FROM vt1, rt0, vt0 WHERE (CASE WHEN 0Xffffffff932bc2cd THEN rt0.c3 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0Xffffffff932bc2cd THEN rt0.c3 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (CASE WHEN 0Xffffffff932bc2cd THEN rt0.c3 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0Xffffffff932bc2cd THEN rt0.c3 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (CASE WHEN 0Xffffffff932bc2cd THEN rt0.c3 END COLLATE RTRIM);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) IS FALSE) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS TRUE) THEN '' END) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)-(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) IS FALSE) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS TRUE) THEN '' END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)-(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) IS FALSE) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS TRUE) THEN '' END) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)-(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) IS FALSE) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS TRUE) THEN '' END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)-(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) IS FALSE) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS TRUE) THEN '' END) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)-(vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((LAST_INSERT_ROWID())) AND ((x'5018')))) ORDER BY (((((vt1.c0) NOTNULL)))!=(((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((LAST_INSERT_ROWID())) AND ((x'5018')))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) NOTNULL)))!=(((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))))  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((LAST_INSERT_ROWID())) AND ((x'5018')))) ORDER BY (((((vt1.c0) NOTNULL)))!=(((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((LAST_INSERT_ROWID())) AND ((x'5018')))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) NOTNULL)))!=(((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))))  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((LAST_INSERT_ROWID())) AND ((x'5018')))) ORDER BY (((((vt1.c0) NOTNULL)))!=(((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) IN ((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) IN ((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) IN ((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) IN ((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) IN ((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((TYPEOF(rt0.c1)) BETWEEN (((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND ((('-1911604933') ISNULL)))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c2 END)OR(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR('⛧%h2'))  NULLS FIRST, ((rt0.c3)*(CAST(vt1.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c1)) BETWEEN (((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND ((('-1911604933') ISNULL)))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c2 END)OR(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR('⛧%h2'))  NULLS FIRST, ((rt0.c3)*(CAST(vt1.c0 AS BLOB))) DESC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((TYPEOF(rt0.c1)) BETWEEN (((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND ((('-1911604933') ISNULL)))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c2 END)OR(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR('⛧%h2'))  NULLS FIRST, ((rt0.c3)*(CAST(vt1.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c1)) BETWEEN (((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND ((('-1911604933') ISNULL)))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c2 END)OR(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR('⛧%h2'))  NULLS FIRST, ((rt0.c3)*(CAST(vt1.c0 AS BLOB))) DESC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((TYPEOF(rt0.c1)) BETWEEN (((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND ((('-1911604933') ISNULL)))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c2 END)OR(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR('⛧%h2'))  NULLS FIRST, ((rt0.c3)*(CAST(vt1.c0 AS BLOB))) DESC;
SELECT ALL * FROM rt0, vt0 WHERE ((((((0.5070452372646634)) BETWEEN ((vt0.c0)) AND ((rt0.c3)))) NOTNULL)) ORDER BY ((rt0.c1)<<(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((0.5070452372646634)) BETWEEN ((vt0.c0)) AND ((rt0.c3)))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1)<<(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0, vt0 WHERE ((((((0.5070452372646634)) BETWEEN ((vt0.c0)) AND ((rt0.c3)))) NOTNULL)) ORDER BY ((rt0.c1)<<(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((0.5070452372646634)) BETWEEN ((vt0.c0)) AND ((rt0.c3)))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1)<<(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0, vt0 WHERE ((((((0.5070452372646634)) BETWEEN ((vt0.c0)) AND ((rt0.c3)))) NOTNULL)) ORDER BY ((rt0.c1)<<(vt0.c0)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT vt0.c0 COLLATE NOCASE)) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT vt0.c0 COLLATE NOCASE)) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT vt0.c0 COLLATE NOCASE)) ORDER BY x''  NULLS FIRST;
SELECT * FROM vt0, rt0, vt1 WHERE (((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))) IS FALSE));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((rt0.c1))>=(('4\n'))) COLLATE BINARY WHERE (((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c2)) COLLATE RTRIM) ORDER BY CAST(LAST_INSERT_ROWID() AS BLOB)  NULLS LAST, (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))>>((((x'', vt1.c0, rt0.c2)) NOT BETWEEN ((0.5600363494528264, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, 'yeFc㤻WW')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((rt0.c1))>=(('4\n'))) COLLATE BINARY ORDER BY CAST(LAST_INSERT_ROWID() AS BLOB)  NULLS LAST, (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))>>((((x'', vt1.c0, rt0.c2)) NOT BETWEEN ((0.5600363494528264, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, 'yeFc㤻WW')))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((rt0.c1))>=(('4\n'))) COLLATE BINARY WHERE (((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c2)) COLLATE RTRIM) ORDER BY CAST(LAST_INSERT_ROWID() AS BLOB)  NULLS LAST, (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))>>((((x'', vt1.c0, rt0.c2)) NOT BETWEEN ((0.5600363494528264, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, 'yeFc㤻WW')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((rt0.c1))>=(('4\n'))) COLLATE BINARY ORDER BY CAST(LAST_INSERT_ROWID() AS BLOB)  NULLS LAST, (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))>>((((x'', vt1.c0, rt0.c2)) NOT BETWEEN ((0.5600363494528264, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, 'yeFc㤻WW')))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((rt0.c1))>=(('4\n'))) COLLATE BINARY WHERE (((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c2)) COLLATE RTRIM) ORDER BY CAST(LAST_INSERT_ROWID() AS BLOB)  NULLS LAST, (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))>>((((x'', vt1.c0, rt0.c2)) NOT BETWEEN ((0.5600363494528264, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, 'yeFc㤻WW')))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE) ORDER BY CAST(x'' COLLATE NOCASE AS INTEGER)  NULLS LAST, (+ (CAST('' AS INTEGER))) ASC  NULLS FIRST, CASE (('V') NOT NULL)  WHEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, '809165088'))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0) IS FALSE) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY CAST(x'' COLLATE NOCASE AS INTEGER)  NULLS LAST, (+ (CAST('' AS INTEGER))) ASC  NULLS FIRST, CASE (('V') NOT NULL)  WHEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, '809165088'))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0) IS FALSE) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE) ORDER BY CAST(x'' COLLATE NOCASE AS INTEGER)  NULLS LAST, (+ (CAST('' AS INTEGER))) ASC  NULLS FIRST, CASE (('V') NOT NULL)  WHEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, '809165088'))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0) IS FALSE) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY CAST(x'' COLLATE NOCASE AS INTEGER)  NULLS LAST, (+ (CAST('' AS INTEGER))) ASC  NULLS FIRST, CASE (('V') NOT NULL)  WHEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, '809165088'))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0) IS FALSE) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE) ORDER BY CAST(x'' COLLATE NOCASE AS INTEGER)  NULLS LAST, (+ (CAST('' AS INTEGER))) ASC  NULLS FIRST, CASE (('V') NOT NULL)  WHEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, '809165088'))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0) IS FALSE) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ('-1943308415') ORDER BY ((HEX(rt0.c3)) NOT BETWEEN (((rt0.c4)<<('-1825848627'))) AND (((rt0.c3) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1943308415') IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((HEX(rt0.c3)) NOT BETWEEN (((rt0.c4)<<('-1825848627'))) AND (((rt0.c3) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ('-1943308415') ORDER BY ((HEX(rt0.c3)) NOT BETWEEN (((rt0.c4)<<('-1825848627'))) AND (((rt0.c3) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1943308415') IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((HEX(rt0.c3)) NOT BETWEEN (((rt0.c4)<<('-1825848627'))) AND (((rt0.c3) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ('-1943308415') ORDER BY ((HEX(rt0.c3)) NOT BETWEEN (((rt0.c4)<<('-1825848627'))) AND (((rt0.c3) NOT NULL)))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (CASE (rt0.c3 IN (rt0.c4, rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 ELSE vt1.c0 END THEN (- (rt0.c2)) ELSE CAST(rt0.c0 AS BLOB) END) ORDER BY ((((((rt0.c4)OR(rt0.c3)))OR(rt0.c3))) BETWEEN ((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c3 IN (rt0.c4, rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 ELSE vt1.c0 END THEN (- (rt0.c2)) ELSE CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((((rt0.c4)OR(rt0.c3)))OR(rt0.c3))) BETWEEN ((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((rt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (CASE (rt0.c3 IN (rt0.c4, rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 ELSE vt1.c0 END THEN (- (rt0.c2)) ELSE CAST(rt0.c0 AS BLOB) END) ORDER BY ((((((rt0.c4)OR(rt0.c3)))OR(rt0.c3))) BETWEEN ((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c3 IN (rt0.c4, rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 ELSE vt1.c0 END THEN (- (rt0.c2)) ELSE CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((((rt0.c4)OR(rt0.c3)))OR(rt0.c3))) BETWEEN ((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((rt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (CASE (rt0.c3 IN (rt0.c4, rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 ELSE vt1.c0 END THEN (- (rt0.c2)) ELSE CAST(rt0.c0 AS BLOB) END) ORDER BY ((((((rt0.c4)OR(rt0.c3)))OR(rt0.c3))) BETWEEN ((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((rt0.c2) NOT NULL)));
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((vt1.c0) IS FALSE))==((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE))=((rt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((vt1.c0) IS FALSE))==((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE))=((rt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((vt1.c0) IS FALSE))==((rt0.c0 IN ()))));
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((((rt0.c0)<<(rt0.c1))))=(((rt0.c1 IN ()))))) ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c0 END  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c2)%(rt0.c4)) ELSE ((rt0.c2)+('-1841120171')) END;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)<<(rt0.c1))))=(((rt0.c1 IN ()))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c0 END  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c2)%(rt0.c4)) ELSE ((rt0.c2)+('-1841120171')) END);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((((rt0.c0)<<(rt0.c1))))=(((rt0.c1 IN ()))))) ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c0 END  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c2)%(rt0.c4)) ELSE ((rt0.c2)+('-1841120171')) END;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)<<(rt0.c1))))=(((rt0.c1 IN ()))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c0 END  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c2)%(rt0.c4)) ELSE ((rt0.c2)+('-1841120171')) END);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((((rt0.c0)<<(rt0.c1))))=(((rt0.c1 IN ()))))) ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c0 END  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c2)%(rt0.c4)) ELSE ((rt0.c2)+('-1841120171')) END;
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((rt0.c2)%(rt0.c3))) IS FALSE)) ORDER BY ((((rt0.c0)OR(vt1.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)%(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((rt0.c0)OR(vt1.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((rt0.c2)%(rt0.c3))) IS FALSE)) ORDER BY ((((rt0.c0)OR(vt1.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)%(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((rt0.c0)OR(vt1.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((rt0.c2)%(rt0.c3))) IS FALSE)) ORDER BY ((((rt0.c0)OR(vt1.c0))) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((((((((((rt0.c3)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))>>(CASE rt0.c4  WHEN NULL THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN '0.87040815148022' THEN x'' END)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))>>(CASE rt0.c4  WHEN NULL THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN '0.87040815148022' THEN x'' END))) IS TRUE)  as count FROM rt0, vt1, vt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((((((((((rt0.c3)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))>>(CASE rt0.c4  WHEN NULL THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN '0.87040815148022' THEN x'' END)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))>>(CASE rt0.c4  WHEN NULL THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN '0.87040815148022' THEN x'' END))) IS TRUE)  as count FROM rt0, vt1, vt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((((((((((rt0.c3)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))>>(CASE rt0.c4  WHEN NULL THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN '0.87040815148022' THEN x'' END)));
SELECT ALL * FROM rt0, vt0 NATURAL JOIN vt1 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM COLLATE NOCASE) ORDER BY (((rt0.c3)) BETWEEN (((~ (rt0.c3)))) AND ((((rt0.c3) NOTNULL)))) ASC  NULLS LAST, INSTR(((((rt0.c0)OR(rt0.c4)))OR(vt0.c0)), ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)))  NULLS FIRST, ((((vt1.c0) IS TRUE))>(CHANGES()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN vt1 ORDER BY (((rt0.c3)) BETWEEN (((~ (rt0.c3)))) AND ((((rt0.c3) NOTNULL)))) ASC  NULLS LAST, INSTR(((((rt0.c0)OR(rt0.c4)))OR(vt0.c0)), ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)))  NULLS FIRST, ((((vt1.c0) IS TRUE))>(CHANGES()))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN vt1 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM COLLATE NOCASE) ORDER BY (((rt0.c3)) BETWEEN (((~ (rt0.c3)))) AND ((((rt0.c3) NOTNULL)))) ASC  NULLS LAST, INSTR(((((rt0.c0)OR(rt0.c4)))OR(vt0.c0)), ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)))  NULLS FIRST, ((((vt1.c0) IS TRUE))>(CHANGES()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN vt1 ORDER BY (((rt0.c3)) BETWEEN (((~ (rt0.c3)))) AND ((((rt0.c3) NOTNULL)))) ASC  NULLS LAST, INSTR(((((rt0.c0)OR(rt0.c4)))OR(vt0.c0)), ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)))  NULLS FIRST, ((((vt1.c0) IS TRUE))>(CHANGES()))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN vt1 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM COLLATE NOCASE) ORDER BY (((rt0.c3)) BETWEEN (((~ (rt0.c3)))) AND ((((rt0.c3) NOTNULL)))) ASC  NULLS LAST, INSTR(((((rt0.c0)OR(rt0.c4)))OR(vt0.c0)), ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)))  NULLS FIRST, ((((vt1.c0) IS TRUE))>(CHANGES()))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((NULL)GLOB(rt0.c2))) NOT BETWEEN (CAST('-1503550449' AS BLOB)) AND ('XxT')));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)GLOB(rt0.c2))) NOT BETWEEN (CAST('-1503550449' AS BLOB)) AND ('XxT'))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((NULL)GLOB(rt0.c2))) NOT BETWEEN (CAST('-1503550449' AS BLOB)) AND ('XxT')));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)GLOB(rt0.c2))) NOT BETWEEN (CAST('-1503550449' AS BLOB)) AND ('XxT'))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((NULL)GLOB(rt0.c2))) NOT BETWEEN (CAST('-1503550449' AS BLOB)) AND ('XxT')));
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((rt0.c4 IN ())) ORDER BY CASE WHEN ((rt0.c3)==(rt0.c2)) THEN ((rt0.c2)*(rt0.c2)) ELSE (((vt0.c0, rt0.c0, rt0.c4)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c4)) AND ((rt0.c3, vt0.c0, rt0.c1))) END, (((((+ (rt0.c3)))AND((rt0.c4 IN ()))))AND((((rt0.c0, rt0.c2, rt0.c0))>=((x'', rt0.c2, rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c4 IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE WHEN ((rt0.c3)=(rt0.c2)) THEN ((rt0.c2)*(rt0.c2)) ELSE (((vt0.c0, rt0.c0, rt0.c4)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c4)) AND ((rt0.c3, vt0.c0, rt0.c1))) END, (((((+ (rt0.c3)))AND((rt0.c4 IN ()))))AND((((rt0.c0, rt0.c2, rt0.c0))>=((x'', rt0.c2, rt0.c1))))) ASC  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((rt0.c4 IN ())) ORDER BY CASE WHEN ((rt0.c3)==(rt0.c2)) THEN ((rt0.c2)*(rt0.c2)) ELSE (((vt0.c0, rt0.c0, rt0.c4)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c4)) AND ((rt0.c3, vt0.c0, rt0.c1))) END, (((((+ (rt0.c3)))AND((rt0.c4 IN ()))))AND((((rt0.c0, rt0.c2, rt0.c0))>=((x'', rt0.c2, rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c4 IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE WHEN ((rt0.c3)=(rt0.c2)) THEN ((rt0.c2)*(rt0.c2)) ELSE (((vt0.c0, rt0.c0, rt0.c4)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c4)) AND ((rt0.c3, vt0.c0, rt0.c1))) END, (((((+ (rt0.c3)))AND((rt0.c4 IN ()))))AND((((rt0.c0, rt0.c2, rt0.c0))>=((x'', rt0.c2, rt0.c1))))) ASC  NULLS LAST);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((((x'') BETWEEN (rt0.c1) AND (rt0.c2)))/((rt0.c1 IN (rt0.c0)))) WHERE (0.31372455379588204 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((0.31372455379588204 COLLATE RTRIM) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((x'') BETWEEN (rt0.c1) AND (rt0.c2)))/((rt0.c1 IN (rt0.c0)))));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((((x'') BETWEEN (rt0.c1) AND (rt0.c2)))/((rt0.c1 IN (rt0.c0)))) WHERE (0.31372455379588204 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((0.31372455379588204 COLLATE RTRIM) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((x'') BETWEEN (rt0.c1) AND (rt0.c2)))/((rt0.c1 IN (rt0.c0)))));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((((x'') BETWEEN (rt0.c1) AND (rt0.c2)))/((rt0.c1 IN (rt0.c0)))) WHERE (0.31372455379588204 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((rt0.c0 IN ()))>(rt0.c4 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON ((((x'')AND(((rt0.c2)<<(vt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c4 ELSE vt1.c0 END)) WHERE ((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c4 COLLATE NOCASE)))) ORDER BY (('') NOT NULL) DESC  NULLS LAST, COALESCE(DISTINCT ((rt0.c2)&(rt0.c3)), ((vt0.c0)>(rt0.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c4 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((rt0.c0 IN ()))>(rt0.c4 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON ((((x'')AND(((rt0.c2)<<(vt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c4 ELSE vt1.c0 END)) ORDER BY (('') NOT NULL) DESC  NULLS LAST, COALESCE(DISTINCT ((rt0.c2)&(rt0.c3)), ((vt0.c0)>(rt0.c4)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((rt0.c0 IN ()))>(rt0.c4 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON ((((x'')AND(((rt0.c2)<<(vt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c4 ELSE vt1.c0 END)) WHERE ((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c4 COLLATE NOCASE)))) ORDER BY (('') NOT NULL) DESC  NULLS LAST, COALESCE(DISTINCT ((rt0.c2)&(rt0.c3)), ((vt0.c0)>(rt0.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c4 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((rt0.c0 IN ()))>(rt0.c4 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON ((((x'')AND(((rt0.c2)<<(vt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c4 ELSE vt1.c0 END)) ORDER BY (('') NOT NULL) DESC  NULLS LAST, COALESCE(DISTINCT ((rt0.c2)&(rt0.c3)), ((vt0.c0)>(rt0.c4)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((rt0.c0 IN ()))>(rt0.c4 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON ((((x'')AND(((rt0.c2)<<(vt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c4 ELSE vt1.c0 END)) WHERE ((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c4 COLLATE NOCASE)))) ORDER BY (('') NOT NULL) DESC  NULLS LAST, COALESCE(DISTINCT ((rt0.c2)&(rt0.c3)), ((vt0.c0)>(rt0.c4)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (NULL) ORDER BY ((CASE WHEN '' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN 0.4406666701346005 THEN rt0.c4 END)<>('1083700688' COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE WHEN '' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN 0.4406666701346005 THEN rt0.c4 END)!=('1083700688' COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (NULL) ORDER BY ((CASE WHEN '' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN 0.4406666701346005 THEN rt0.c4 END)<>('1083700688' COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE WHEN '' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN 0.4406666701346005 THEN rt0.c4 END)!=('1083700688' COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (NULL) ORDER BY ((CASE WHEN '' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN 0.4406666701346005 THEN rt0.c4 END)<>('1083700688' COLLATE BINARY))  NULLS LAST;
SELECT * FROM vt0, vt1, rt0 WHERE (((rt0.c2) NOT BETWEEN (((((rt0.c2)OR(vt1.c0)))OR(rt0.c4))) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY ((((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))OR(rt0.c3 COLLATE BINARY)) DESC, vt1.c0, CAST(((((((((vt0.c0)OR(rt0.c2)))OR(vt1.c0)))AND('0.1370899302174906')))AND(rt0.c4)) AS REAL), ((((((rt0.c1))=((rt0.c0))), rt0.c2 COLLATE RTRIM, (~ (rt0.c0))))>((((vt1.c0)%(rt0.c0)), ((rt0.c3) NOTNULL), rt0.c2 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (((((rt0.c2)OR(vt1.c0)))OR(rt0.c4))) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))OR(rt0.c3 COLLATE BINARY)) DESC, vt1.c0, CAST(((((((((vt0.c0)OR(rt0.c2)))OR(vt1.c0)))AND('0.1370899302174906')))AND(rt0.c4)) AS REAL), ((((((rt0.c1))==((rt0.c0))), rt0.c2 COLLATE RTRIM, (~ (rt0.c0))))>((((vt1.c0)%(rt0.c0)), ((rt0.c3) NOTNULL), rt0.c2 COLLATE NOCASE)))  NULLS LAST);
SELECT * FROM vt0, vt1, rt0 WHERE (((rt0.c2) NOT BETWEEN (((((rt0.c2)OR(vt1.c0)))OR(rt0.c4))) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY ((((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))OR(rt0.c3 COLLATE BINARY)) DESC, vt1.c0, CAST(((((((((vt0.c0)OR(rt0.c2)))OR(vt1.c0)))AND('0.1370899302174906')))AND(rt0.c4)) AS REAL), ((((((rt0.c1))=((rt0.c0))), rt0.c2 COLLATE RTRIM, (~ (rt0.c0))))>((((vt1.c0)%(rt0.c0)), ((rt0.c3) NOTNULL), rt0.c2 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (((((rt0.c2)OR(vt1.c0)))OR(rt0.c4))) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))OR(rt0.c3 COLLATE BINARY)) DESC, vt1.c0, CAST(((((((((vt0.c0)OR(rt0.c2)))OR(vt1.c0)))AND('0.1370899302174906')))AND(rt0.c4)) AS REAL), ((((((rt0.c1))==((rt0.c0))), rt0.c2 COLLATE RTRIM, (~ (rt0.c0))))>((((vt1.c0)%(rt0.c0)), ((rt0.c3) NOTNULL), rt0.c2 COLLATE NOCASE)))  NULLS LAST);
SELECT * FROM vt0, vt1, rt0 WHERE (((rt0.c2) NOT BETWEEN (((((rt0.c2)OR(vt1.c0)))OR(rt0.c4))) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY ((((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))OR(rt0.c3 COLLATE BINARY)) DESC, vt1.c0, CAST(((((((((vt0.c0)OR(rt0.c2)))OR(vt1.c0)))AND('0.1370899302174906')))AND(rt0.c4)) AS REAL), ((((((rt0.c1))=((rt0.c0))), rt0.c2 COLLATE RTRIM, (~ (rt0.c0))))>((((vt1.c0)%(rt0.c0)), ((rt0.c3) NOTNULL), rt0.c2 COLLATE NOCASE)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((0X2fd7a0fc)-((vt1.c0 IN (rt0.c4)))) INNER JOIN vt1 ON ((((rt0.c2) BETWEEN (x'22ba') AND (rt0.c4)))>>((((rt0.c1))>=((rt0.c1))))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((0X2fd7a0fc)-((vt1.c0 IN (rt0.c4)))) INNER JOIN vt1 ON ((((rt0.c2) BETWEEN (x'22ba') AND (rt0.c4)))>>((((rt0.c1))>=((rt0.c1))))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((0X2fd7a0fc)-((vt1.c0 IN (rt0.c4)))) INNER JOIN vt1 ON ((((rt0.c2) BETWEEN (x'22ba') AND (rt0.c4)))>>((((rt0.c1))>=((rt0.c1))))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((0X2fd7a0fc)-((vt1.c0 IN (rt0.c4)))) INNER JOIN vt1 ON ((((rt0.c2) BETWEEN (x'22ba') AND (rt0.c4)))>>((((rt0.c1))>=((rt0.c1))))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((0X2fd7a0fc)-((vt1.c0 IN (rt0.c4)))) INNER JOIN vt1 ON ((((rt0.c2) BETWEEN (x'22ba') AND (rt0.c4)))>>((((rt0.c1))>=((rt0.c1))))) WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(CAST(rt0.c2 AS TEXT))) ORDER BY x'' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((HEX(CAST(rt0.c2 AS TEXT))) IS TRUE)  as count FROM rt0 ORDER BY x'' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(CAST(rt0.c2 AS TEXT))) ORDER BY x'' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((HEX(CAST(rt0.c2 AS TEXT))) IS TRUE)  as count FROM rt0 ORDER BY x'' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(CAST(rt0.c2 AS TEXT))) ORDER BY x'' COLLATE RTRIM;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT NULL));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))))>=((((rt0.c1)IS NOT(rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))))>=((((rt0.c1)IS NOT(rt0.c4)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))))>=((((rt0.c1)IS NOT(rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))))>=((((rt0.c1)IS NOT(rt0.c4)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))))>=((((rt0.c1)IS NOT(rt0.c4))))));
SELECT * FROM vt1 INNER JOIN rt0 ON '0.6264929369754366' WHERE ((((rt0.c4)) BETWEEN ((LIKELIHOOD(DISTINCT rt0.c4, 0.17950748095200564))) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c4, vt1.c0, rt0.c0)) AND ((rt0.c0, '\nA', vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) BETWEEN ((LIKELIHOOD(DISTINCT rt0.c4, 0.17950748095200564))) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c4, vt1.c0, rt0.c0)) AND ((rt0.c0, '\nA', vt1.c0))))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON '0.6264929369754366');
SELECT * FROM vt1 INNER JOIN rt0 ON '0.6264929369754366' WHERE ((((rt0.c4)) BETWEEN ((LIKELIHOOD(DISTINCT rt0.c4, 0.17950748095200564))) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c4, vt1.c0, rt0.c0)) AND ((rt0.c0, '\nA', vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) BETWEEN ((LIKELIHOOD(DISTINCT rt0.c4, 0.17950748095200564))) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c4, vt1.c0, rt0.c0)) AND ((rt0.c0, '\nA', vt1.c0))))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON '0.6264929369754366');
SELECT * FROM vt1 INNER JOIN rt0 ON '0.6264929369754366' WHERE ((((rt0.c4)) BETWEEN ((LIKELIHOOD(DISTINCT rt0.c4, 0.17950748095200564))) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c4, vt1.c0, rt0.c0)) AND ((rt0.c0, '\nA', vt1.c0)))))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN LIKE(rt0.c0, rt0.c1, '-') THEN ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)) WHEN CASE rt0.c4  WHEN x'' THEN rt0.c3 END THEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN LIKE(rt0.c0, rt0.c1, '-') THEN ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)) WHEN CASE rt0.c4  WHEN x'' THEN rt0.c3 END THEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN LIKE(rt0.c0, rt0.c1, '-') THEN ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)) WHEN CASE rt0.c4  WHEN x'' THEN rt0.c3 END THEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN LIKE(rt0.c0, rt0.c1, '-') THEN ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)) WHEN CASE rt0.c4  WHEN x'' THEN rt0.c3 END THEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN LIKE(rt0.c0, rt0.c1, '-') THEN ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)) WHEN CASE rt0.c4  WHEN x'' THEN rt0.c3 END THEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NULL IN ()));
SELECT ALL * FROM vt1, vt0 WHERE (((TRIM(vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))) ORDER BY ((((('''m')<=(vt0.c0))))<=((x''))) ASC;
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((('''m')<=(vt0.c0))))<=((x''))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (((TRIM(vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))) ORDER BY ((((('''m')<=(vt0.c0))))<=((x''))) ASC;
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((('''m')<=(vt0.c0))))<=((x''))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (((TRIM(vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))) ORDER BY ((((('''m')<=(vt0.c0))))<=((x''))) ASC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)||((((vt0.c0))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)||((((vt0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)||((((vt0.c0))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)||((((vt0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)||((((vt0.c0))<>((vt0.c0))))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((((rt0.c4))>=((vt0.c0))))OR(((rt0.c3)OR(vt0.c0)))))OR((+ (rt0.c1)))))AND(((rt0.c4) NOT BETWEEN ('*') AND (rt0.c2)))))OR(CAST(rt0.c2 AS TEXT))) WHERE ('-1359220890') ORDER BY ((((UNLIKELY(rt0.c2))OR((rt0.c2 IN ()))))AND(rt0.c4 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1359220890') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((((rt0.c4))>=((vt0.c0))))OR(((rt0.c3)OR(vt0.c0)))))OR((+ (rt0.c1)))))AND(((rt0.c4) NOT BETWEEN ('*') AND (rt0.c2)))))OR(CAST(rt0.c2 AS TEXT))) ORDER BY ((((UNLIKELY(rt0.c2))OR((rt0.c2 IN ()))))AND(rt0.c4 COLLATE NOCASE)) ASC);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((((rt0.c4))>=((vt0.c0))))OR(((rt0.c3)OR(vt0.c0)))))OR((+ (rt0.c1)))))AND(((rt0.c4) NOT BETWEEN ('*') AND (rt0.c2)))))OR(CAST(rt0.c2 AS TEXT))) WHERE ('-1359220890') ORDER BY ((((UNLIKELY(rt0.c2))OR((rt0.c2 IN ()))))AND(rt0.c4 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1359220890') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((((rt0.c4))>=((vt0.c0))))OR(((rt0.c3)OR(vt0.c0)))))OR((+ (rt0.c1)))))AND(((rt0.c4) NOT BETWEEN ('*') AND (rt0.c2)))))OR(CAST(rt0.c2 AS TEXT))) ORDER BY ((((UNLIKELY(rt0.c2))OR((rt0.c2 IN ()))))AND(rt0.c4 COLLATE NOCASE)) ASC);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((((rt0.c4))>=((vt0.c0))))OR(((rt0.c3)OR(vt0.c0)))))OR((+ (rt0.c1)))))AND(((rt0.c4) NOT BETWEEN ('*') AND (rt0.c2)))))OR(CAST(rt0.c2 AS TEXT))) WHERE ('-1359220890') ORDER BY ((((UNLIKELY(rt0.c2))OR((rt0.c2 IN ()))))AND(rt0.c4 COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((('-540834255')>>(NULLIF(DISTINCT '1873478685', rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((('-540834255')>>(NULLIF(DISTINCT '1873478685', rt0.c1)))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((('-540834255')>>(NULLIF(DISTINCT '1873478685', rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((('-540834255')>>(NULLIF(DISTINCT '1873478685', rt0.c1)))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((('-540834255')>>(NULLIF(DISTINCT '1873478685', rt0.c1))));
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (0xffffffff92e8690a) ORDER BY (((((rt0.c2))<((rt0.c2))))<<(x'9217ac2c')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff92e8690a) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2))<((rt0.c2))))<<(x'9217ac2c')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (0xffffffff92e8690a) ORDER BY (((((rt0.c2))<((rt0.c2))))<<(x'9217ac2c')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff92e8690a) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2))<((rt0.c2))))<<(x'9217ac2c')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (0xffffffff92e8690a) ORDER BY (((((rt0.c2))<((rt0.c2))))<<(x'9217ac2c')) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ('S᧹RUn');
SELECT SUM(count) FROM (SELECT ALL (('S᧹RUn') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('S᧹RUn');
SELECT SUM(count) FROM (SELECT ALL (('S᧹RUn') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('S᧹RUn');
SELECT ALL * FROM vt1, vt0 WHERE ((~ ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((~ ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((~ ((NOT (vt1.c0)))));
SELECT * FROM vt1 CROSS JOIN rt0 ON ((UNLIKELY(vt1.c0)) BETWEEN ((+ (rt0.c2))) AND (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c3 END)) FULL OUTER JOIN vt0 ON (((((((rt0.c1)AND(rt0.c4)))AND(rt0.c1))))<(((0xffffffffaefbef66 IN (vt1.c0, rt0.c1))))) WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN 0.9968952687141007 THEN rt0.c4 COLLATE RTRIM END) ORDER BY (- (((rt0.c3) BETWEEN (NULL) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS REAL)  WHEN 0.9968952687141007 THEN rt0.c4 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((UNLIKELY(vt1.c0)) BETWEEN ((+ (rt0.c2))) AND (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c3 END)) FULL OUTER JOIN vt0 ON (((((((rt0.c1)AND(rt0.c4)))AND(rt0.c1))))<(((0xffffffffaefbef66 IN (vt1.c0, rt0.c1))))) ORDER BY (- (((rt0.c3) BETWEEN (NULL) AND (rt0.c2)))));
SELECT * FROM vt1 CROSS JOIN rt0 ON ((UNLIKELY(vt1.c0)) BETWEEN ((+ (rt0.c2))) AND (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c3 END)) FULL OUTER JOIN vt0 ON (((((((rt0.c1)AND(rt0.c4)))AND(rt0.c1))))<(((0xffffffffaefbef66 IN (vt1.c0, rt0.c1))))) WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN 0.9968952687141007 THEN rt0.c4 COLLATE RTRIM END) ORDER BY (- (((rt0.c3) BETWEEN (NULL) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS REAL)  WHEN 0.9968952687141007 THEN rt0.c4 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((UNLIKELY(vt1.c0)) BETWEEN ((+ (rt0.c2))) AND (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c3 END)) FULL OUTER JOIN vt0 ON (((((((rt0.c1)AND(rt0.c4)))AND(rt0.c1))))<(((0xffffffffaefbef66 IN (vt1.c0, rt0.c1))))) ORDER BY (- (((rt0.c3) BETWEEN (NULL) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE 'qK'  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)GLOB(((vt1.c0)>>(vt1.c0))))) ORDER BY vt1.c0 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE 'qK'  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)GLOB(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE 'qK'  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)GLOB(((vt1.c0)>>(vt1.c0))))) ORDER BY vt1.c0 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE 'qK'  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)GLOB(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE 'qK'  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)GLOB(((vt1.c0)>>(vt1.c0))))) ORDER BY vt1.c0 COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((rt0.c1)AND(vt0.c0)))AND(rt0.c4)))LIKE(CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.42023801075549794 END))) ORDER BY (rt0.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c4)))LIKE(CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.42023801075549794 END))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (rt0.c0 COLLATE RTRIM IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((rt0.c1)AND(vt0.c0)))AND(rt0.c4)))LIKE(CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.42023801075549794 END))) ORDER BY (rt0.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c4)))LIKE(CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.42023801075549794 END))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (rt0.c0 COLLATE RTRIM IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((rt0.c1)AND(vt0.c0)))AND(rt0.c4)))LIKE(CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.42023801075549794 END))) ORDER BY (rt0.c0 COLLATE RTRIM IN ()) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) IS TRUE))-((- (rt0.c3)))) WHERE (((((vt1.c0) NOTNULL))&(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) ORDER BY ((((vt1.c0)AND(rt0.c1)))OR(rt0.c1)) COLLATE NOCASE, (rt0.c0 IN ()) COLLATE RTRIM  NULLS LAST, (((rt0.c1) NOT NULL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL))&(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) IS TRUE))-((- (rt0.c3)))) ORDER BY ((((vt1.c0)AND(rt0.c1)))OR(rt0.c1)) COLLATE NOCASE, (rt0.c0 IN ()) COLLATE RTRIM  NULLS LAST, (((rt0.c1) NOT NULL) IN ()));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) IS TRUE))-((- (rt0.c3)))) WHERE (((((vt1.c0) NOTNULL))&(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) ORDER BY ((((vt1.c0)AND(rt0.c1)))OR(rt0.c1)) COLLATE NOCASE, (rt0.c0 IN ()) COLLATE RTRIM  NULLS LAST, (((rt0.c1) NOT NULL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL))&(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) IS TRUE))-((- (rt0.c3)))) ORDER BY ((((vt1.c0)AND(rt0.c1)))OR(rt0.c1)) COLLATE NOCASE, (rt0.c0 IN ()) COLLATE RTRIM  NULLS LAST, (((rt0.c1) NOT NULL) IN ()));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) IS TRUE))-((- (rt0.c3)))) WHERE (((((vt1.c0) NOTNULL))&(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) ORDER BY ((((vt1.c0)AND(rt0.c1)))OR(rt0.c1)) COLLATE NOCASE, (rt0.c0 IN ()) COLLATE RTRIM  NULLS LAST, (((rt0.c1) NOT NULL) IN ());
SELECT * FROM rt0, vt1, vt0 WHERE (((((HEX(DISTINCT vt0.c0))AND(((((vt1.c0)OR(rt0.c4)))AND(rt0.c0)))))AND(CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(DISTINCT vt0.c0))AND(((((vt1.c0)OR(rt0.c4)))AND(rt0.c0)))))AND(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (((((HEX(DISTINCT vt0.c0))AND(((((vt1.c0)OR(rt0.c4)))AND(rt0.c0)))))AND(CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(DISTINCT vt0.c0))AND(((((vt1.c0)OR(rt0.c4)))AND(rt0.c0)))))AND(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (((((HEX(DISTINCT vt0.c0))AND(((((vt1.c0)OR(rt0.c4)))AND(rt0.c0)))))AND(CAST(rt0.c2 AS INTEGER))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE ((rt0.c2)>(0.306915515395187))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN CAST(vt0.c0 AS BLOB) ELSE CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN '' END END CROSS JOIN rt0 ON ((((CAST(vt1.c0 AS REAL))AND(((rt0.c4)||(rt0.c2)))))OR((rt0.c2 IN ()))) WHERE (((rt0.c3) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE ((rt0.c2)>(0.306915515395187))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN CAST(vt0.c0 AS BLOB) ELSE CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN '' END END CROSS JOIN rt0 ON ((((CAST(vt1.c0 AS REAL))AND(((rt0.c4)||(rt0.c2)))))OR((rt0.c2 IN ()))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE ((rt0.c2)>(0.306915515395187))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN CAST(vt0.c0 AS BLOB) ELSE CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN '' END END CROSS JOIN rt0 ON ((((CAST(vt1.c0 AS REAL))AND(((rt0.c4)||(rt0.c2)))))OR((rt0.c2 IN ()))) WHERE (((rt0.c3) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE ((rt0.c2)>(0.306915515395187))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN CAST(vt0.c0 AS BLOB) ELSE CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN '' END END CROSS JOIN rt0 ON ((((CAST(vt1.c0 AS REAL))AND(((rt0.c4)||(rt0.c2)))))OR((rt0.c2 IN ()))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE ((rt0.c2)>(0.306915515395187))  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) THEN CAST(vt0.c0 AS BLOB) ELSE CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN '' END END CROSS JOIN rt0 ON ((((CAST(vt1.c0 AS REAL))AND(((rt0.c4)||(rt0.c2)))))OR((rt0.c2 IN ()))) WHERE (((rt0.c3) IS FALSE) COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0)-(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE (CASE WHEN (('') NOT BETWEEN (vt0.c0) AND (-1.841120171E9)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END WHEN vt1.c0 THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt1.c0)) THEN CAST(vt0.c0 AS REAL) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((0x303ae120)<<(vt0.c0)) WHEN ((((((((vt1.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) THEN ((vt0.c0)==(vt1.c0)) ELSE json_patch(vt0.c0, vt1.c0) END) ORDER BY (((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN ' %' ELSE vt0.c0 END, '-799848790', NULL, ((vt0.c0) NOT NULL))) AND (((vt0.c0 IN ()), ((vt1.c0)/(vt1.c0)), load_extension(vt1.c0, vt1.c0), vt1.c0 COLLATE BINARY, 1941351477)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('') NOT BETWEEN (vt0.c0) AND (-1.841120171E9)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END WHEN vt1.c0 THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt1.c0)) THEN CAST(vt0.c0 AS REAL) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((0x303ae120)<<(vt0.c0)) WHEN ((((((((vt1.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) THEN ((vt0.c0)=(vt1.c0)) ELSE json_patch(vt0.c0, vt1.c0) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN ' %' ELSE vt0.c0 END, '-799848790', NULL, ((vt0.c0) NOT NULL))) AND (((vt0.c0 IN ()), ((vt1.c0)/(vt1.c0)), load_extension(vt1.c0, vt1.c0), vt1.c0 COLLATE BINARY, 1941351477))));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE (CASE WHEN (('') NOT BETWEEN (vt0.c0) AND (-1.841120171E9)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END WHEN vt1.c0 THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt1.c0)) THEN CAST(vt0.c0 AS REAL) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((0x303ae120)<<(vt0.c0)) WHEN ((((((((vt1.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) THEN ((vt0.c0)==(vt1.c0)) ELSE json_patch(vt0.c0, vt1.c0) END) ORDER BY (((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN ' %' ELSE vt0.c0 END, '-799848790', NULL, ((vt0.c0) NOT NULL))) AND (((vt0.c0 IN ()), ((vt1.c0)/(vt1.c0)), load_extension(vt1.c0, vt1.c0), vt1.c0 COLLATE BINARY, 1941351477)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('') NOT BETWEEN (vt0.c0) AND (-1.841120171E9)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END WHEN vt1.c0 THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt1.c0)) THEN CAST(vt0.c0 AS REAL) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((0x303ae120)<<(vt0.c0)) WHEN ((((((((vt1.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) THEN ((vt0.c0)=(vt1.c0)) ELSE json_patch(vt0.c0, vt1.c0) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN ' %' ELSE vt0.c0 END, '-799848790', NULL, ((vt0.c0) NOT NULL))) AND (((vt0.c0 IN ()), ((vt1.c0)/(vt1.c0)), load_extension(vt1.c0, vt1.c0), vt1.c0 COLLATE BINARY, 1941351477))));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE (CASE WHEN (('') NOT BETWEEN (vt0.c0) AND (-1.841120171E9)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END WHEN vt1.c0 THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt1.c0)) THEN CAST(vt0.c0 AS REAL) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((0x303ae120)<<(vt0.c0)) WHEN ((((((((vt1.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) THEN ((vt0.c0)==(vt1.c0)) ELSE json_patch(vt0.c0, vt1.c0) END) ORDER BY (((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN ' %' ELSE vt0.c0 END, '-799848790', NULL, ((vt0.c0) NOT NULL))) AND (((vt0.c0 IN ()), ((vt1.c0)/(vt1.c0)), load_extension(vt1.c0, vt1.c0), vt1.c0 COLLATE BINARY, 1941351477)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((0.06746214071365819)AND(vt1.c0)))AND(NULL)))AND(TRIM(DISTINCT vt1.c0, vt1.c0)))) ORDER BY ((- (vt1.c0)) IN ()), (+ (CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((0.06746214071365819)AND(vt1.c0)))AND(NULL)))AND(TRIM(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((- (vt1.c0)) IN ()), (+ (CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((0.06746214071365819)AND(vt1.c0)))AND(NULL)))AND(TRIM(DISTINCT vt1.c0, vt1.c0)))) ORDER BY ((- (vt1.c0)) IN ()), (+ (CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((0.06746214071365819)AND(vt1.c0)))AND(NULL)))AND(TRIM(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((- (vt1.c0)) IN ()), (+ (CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((0.06746214071365819)AND(vt1.c0)))AND(NULL)))AND(TRIM(DISTINCT vt1.c0, vt1.c0)))) ORDER BY ((- (vt1.c0)) IN ()), (+ (CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c0) IS TRUE))>=((NOT (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE))>=((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c0) IS TRUE))>=((NOT (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE))>=((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c0) IS TRUE))>=((NOT (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON (- (('' IN ()))) WHERE (TRIM(DISTINCT (rt0.c4 IN ()), vt0.c0));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (rt0.c4 IN ()), vt0.c0)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON (- (('' IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON (- (('' IN ()))) WHERE (TRIM(DISTINCT (rt0.c4 IN ()), vt0.c0));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (rt0.c4 IN ()), vt0.c0)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON (- (('' IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON (- (('' IN ()))) WHERE (TRIM(DISTINCT (rt0.c4 IN ()), vt0.c0));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (((+ (-1943308415)))|(CAST(rt0.c3 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (((+ (-1943308415)))|(CAST(rt0.c3 AS REAL))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (((+ (-1943308415)))|(CAST(rt0.c3 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (((+ (-1943308415)))|(CAST(rt0.c3 AS REAL))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (((+ (-1943308415)))|(CAST(rt0.c3 AS REAL)));
SELECT COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c3)))AND(NULLIF(x'579b', rt0.c2))))AND(LIKELIHOOD(rt0.c0, 0.34779415612818)))) ORDER BY CAST((((('947371359')OR(rt0.c2)))OR(rt0.c4)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((+ (rt0.c3)))AND(NULLIF(x'579b', rt0.c2))))AND(LIKELIHOOD(rt0.c0, 0.34779415612818)))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((('947371359')OR(rt0.c2)))OR(rt0.c4)) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c3)))AND(NULLIF(x'579b', rt0.c2))))AND(LIKELIHOOD(rt0.c0, 0.34779415612818)))) ORDER BY CAST((((('947371359')OR(rt0.c2)))OR(rt0.c4)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((+ (rt0.c3)))AND(NULLIF(x'579b', rt0.c2))))AND(LIKELIHOOD(rt0.c0, 0.34779415612818)))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((('947371359')OR(rt0.c2)))OR(rt0.c4)) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c3)))AND(NULLIF(x'579b', rt0.c2))))AND(LIKELIHOOD(rt0.c0, 0.34779415612818)))) ORDER BY CAST((((('947371359')OR(rt0.c2)))OR(rt0.c4)) AS TEXT) ASC  NULLS LAST;
SELECT * FROM vt1, vt0, rt0 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0)))IS((+ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))IS((+ (rt0.c3))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0)))IS((+ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))IS((+ (rt0.c3))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0)))IS((+ (rt0.c3)))));
SELECT ALL * FROM vt1 WHERE ((((((- (vt1.c0)))AND('oJgW}%SI#')))AND(CAST(vt1.c0 AS BLOB)))) ORDER BY (~ (vt1.c0)), CAST(UPPER(DISTINCT vt1.c0) AS BLOB) DESC, CAST((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt1.c0)))AND('oJgW}%SI#')))AND(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c0)), CAST(UPPER(DISTINCT vt1.c0) AS BLOB) DESC, CAST((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((- (vt1.c0)))AND('oJgW}%SI#')))AND(CAST(vt1.c0 AS BLOB)))) ORDER BY (~ (vt1.c0)), CAST(UPPER(DISTINCT vt1.c0) AS BLOB) DESC, CAST((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt1.c0)))AND('oJgW}%SI#')))AND(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c0)), CAST(UPPER(DISTINCT vt1.c0) AS BLOB) DESC, CAST((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((- (vt1.c0)))AND('oJgW}%SI#')))AND(CAST(vt1.c0 AS BLOB)))) ORDER BY (~ (vt1.c0)), CAST(UPPER(DISTINCT vt1.c0) AS BLOB) DESC, CAST((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)) AS BLOB) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c0 IN ()))GLOB(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (rt0.c1 IN ()) WHEN ((rt0.c0)<=(rt0.c4)) THEN CASE rt0.c3  WHEN vt1.c0 THEN 0.386275279226704 WHEN '' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END WHEN (rt0.c0 IN (rt0.c3, rt0.c1)) THEN CAST(rt0.c3 AS NUMERIC) ELSE (rt0.c1 IN ()) END  NULLS LAST, IFNULL(((((rt0.c3)OR(rt0.c2)))AND(rt0.c3)), vt1.c0 COLLATE BINARY) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))GLOB(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (rt0.c1 IN ()) WHEN ((rt0.c0)<=(rt0.c4)) THEN CASE rt0.c3  WHEN vt1.c0 THEN 0.386275279226704 WHEN '' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END WHEN (rt0.c0 IN (rt0.c3, rt0.c1)) THEN CAST(rt0.c3 AS NUMERIC) ELSE (rt0.c1 IN ()) END  NULLS LAST, IFNULL(((((rt0.c3)OR(rt0.c2)))AND(rt0.c3)), vt1.c0 COLLATE BINARY) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c0 IN ()))GLOB(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (rt0.c1 IN ()) WHEN ((rt0.c0)<=(rt0.c4)) THEN CASE rt0.c3  WHEN vt1.c0 THEN 0.386275279226704 WHEN '' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END WHEN (rt0.c0 IN (rt0.c3, rt0.c1)) THEN CAST(rt0.c3 AS NUMERIC) ELSE (rt0.c1 IN ()) END  NULLS LAST, IFNULL(((((rt0.c3)OR(rt0.c2)))AND(rt0.c3)), vt1.c0 COLLATE BINARY) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))GLOB(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (rt0.c1 IN ()) WHEN ((rt0.c0)<=(rt0.c4)) THEN CASE rt0.c3  WHEN vt1.c0 THEN 0.386275279226704 WHEN '' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END WHEN (rt0.c0 IN (rt0.c3, rt0.c1)) THEN CAST(rt0.c3 AS NUMERIC) ELSE (rt0.c1 IN ()) END  NULLS LAST, IFNULL(((((rt0.c3)OR(rt0.c2)))AND(rt0.c3)), vt1.c0 COLLATE BINARY) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c0 IN ()))GLOB(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (rt0.c1 IN ()) WHEN ((rt0.c0)<=(rt0.c4)) THEN CASE rt0.c3  WHEN vt1.c0 THEN 0.386275279226704 WHEN '' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END WHEN (rt0.c0 IN (rt0.c3, rt0.c1)) THEN CAST(rt0.c3 AS NUMERIC) ELSE (rt0.c1 IN ()) END  NULLS LAST, IFNULL(((((rt0.c3)OR(rt0.c2)))AND(rt0.c3)), vt1.c0 COLLATE BINARY) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((('642419929') NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((('642419929') NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((((rt0.c4)AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('642419929') NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((('642419929') NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((((rt0.c4)AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('642419929') NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((((rt0.c4)AND(rt0.c1)))AND(rt0.c2)))));
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c4)))) AND ((SQLITE_VERSION()))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c4)))) AND ((SQLITE_VERSION())))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c4)))) AND ((SQLITE_VERSION()))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c4)))) AND ((SQLITE_VERSION())))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c4)))) AND ((SQLITE_VERSION()))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE RTRIM)AND(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) CROSS JOIN vt0 ON ((((((NULL) NOT NULL))OR(rt0.c0 COLLATE BINARY)))OR((NOT (rt0.c3)))) WHERE (0.2784873707495069 COLLATE BINARY) ORDER BY ((CASE x''  WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END)>>(rt0.c2)) DESC  NULLS LAST, x'', (((+ (rt0.c2))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.2784873707495069 COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE RTRIM)AND(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) CROSS JOIN vt0 ON ((((((NULL) NOT NULL))OR(rt0.c0 COLLATE BINARY)))OR((NOT (rt0.c3)))) ORDER BY ((CASE x''  WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END)>>(rt0.c2)) DESC  NULLS LAST, x'', (((+ (rt0.c2))) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE RTRIM)AND(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) CROSS JOIN vt0 ON ((((((NULL) NOT NULL))OR(rt0.c0 COLLATE BINARY)))OR((NOT (rt0.c3)))) WHERE (0.2784873707495069 COLLATE BINARY) ORDER BY ((CASE x''  WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END)>>(rt0.c2)) DESC  NULLS LAST, x'', (((+ (rt0.c2))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.2784873707495069 COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE RTRIM)AND(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) CROSS JOIN vt0 ON ((((((NULL) NOT NULL))OR(rt0.c0 COLLATE BINARY)))OR((NOT (rt0.c3)))) ORDER BY ((CASE x''  WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END)>>(rt0.c2)) DESC  NULLS LAST, x'', (((+ (rt0.c2))) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE RTRIM)AND(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) CROSS JOIN vt0 ON ((((((NULL) NOT NULL))OR(rt0.c0 COLLATE BINARY)))OR((NOT (rt0.c3)))) WHERE (0.2784873707495069 COLLATE BINARY) ORDER BY ((CASE x''  WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END)>>(rt0.c2)) DESC  NULLS LAST, x'', (((+ (rt0.c2))) NOT NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((LTRIM(rt0.c4)) BETWEEN (((vt1.c0)GLOB(rt0.c2))) AND ((((rt0.c1))>((vt0.c0))))) INNER JOIN vt1 ON (((0.797143166375382))>=((((vt0.c0) BETWEEN (x'') AND (rt0.c2))))) WHERE (((((((vt1.c0)>(0.6925593142551838)))AND(CASE WHEN x'' THEN vt0.c0 END)))AND('')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)>(0.6925593142551838)))AND(CASE WHEN x'' THEN vt0.c0 END)))AND(''))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((LTRIM(rt0.c4)) BETWEEN (((vt1.c0)GLOB(rt0.c2))) AND ((((rt0.c1))>((vt0.c0))))) INNER JOIN vt1 ON (((0.797143166375382))>=((((vt0.c0) BETWEEN (x'') AND (rt0.c2))))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((LTRIM(rt0.c4)) BETWEEN (((vt1.c0)GLOB(rt0.c2))) AND ((((rt0.c1))>((vt0.c0))))) INNER JOIN vt1 ON (((0.797143166375382))>=((((vt0.c0) BETWEEN (x'') AND (rt0.c2))))) WHERE (((((((vt1.c0)>(0.6925593142551838)))AND(CASE WHEN x'' THEN vt0.c0 END)))AND('')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)>(0.6925593142551838)))AND(CASE WHEN x'' THEN vt0.c0 END)))AND(''))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((LTRIM(rt0.c4)) BETWEEN (((vt1.c0)GLOB(rt0.c2))) AND ((((rt0.c1))>((vt0.c0))))) INNER JOIN vt1 ON (((0.797143166375382))>=((((vt0.c0) BETWEEN (x'') AND (rt0.c2))))));
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) NOTNULL))))OR((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) NOTNULL))))OR((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) NOTNULL))))OR((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) NOTNULL))))OR((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) NOTNULL))))OR((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM vt1, rt0 WHERE (TYPEOF((NOT (vt1.c0)))) ORDER BY (~ (((rt0.c2)/(rt0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((NOT (vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0 ORDER BY (~ (((rt0.c2)/(rt0.c4)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (TYPEOF((NOT (vt1.c0)))) ORDER BY (~ (((rt0.c2)/(rt0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((NOT (vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0 ORDER BY (~ (((rt0.c2)/(rt0.c4)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (TYPEOF((NOT (vt1.c0)))) ORDER BY (~ (((rt0.c2)/(rt0.c4)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((- (vt1.c0))) ORDER BY ((((vt1.c0) ISNULL))|((((vt1.c0))>=((vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL))|((((vt1.c0))>=((vt1.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((- (vt1.c0))) ORDER BY ((((vt1.c0) ISNULL))|((((vt1.c0))>=((vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL))|((((vt1.c0))>=((vt1.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((- (vt1.c0))) ORDER BY ((((vt1.c0) ISNULL))|((((vt1.c0))>=((vt1.c0))))) ASC  NULLS LAST;
SELECT * FROM vt1, rt0 INNER JOIN vt0 ON CAST(((rt0.c1) IS FALSE) AS NUMERIC) WHERE ((((((NOT (vt1.c0)))AND(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt1.c0)))AND(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c4 END))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON CAST(((rt0.c1) IS FALSE) AS NUMERIC));
SELECT * FROM vt1, rt0 INNER JOIN vt0 ON CAST(((rt0.c1) IS FALSE) AS NUMERIC) WHERE ((((((NOT (vt1.c0)))AND(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt1.c0)))AND(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c4 END))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON CAST(((rt0.c1) IS FALSE) AS NUMERIC));
SELECT * FROM vt1, rt0 INNER JOIN vt0 ON CAST(((rt0.c1) IS FALSE) AS NUMERIC) WHERE ((((((NOT (vt1.c0)))AND(rt0.c0)))OR(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c4 END)));
SELECT * FROM rt0 WHERE ('1011381980') ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((NULL)<(rt0.c0))) AND (CAST(rt0.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1011381980') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((NULL)<(rt0.c0))) AND (CAST(rt0.c0 AS TEXT))) DESC);
SELECT * FROM rt0 WHERE ('1011381980') ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((NULL)<(rt0.c0))) AND (CAST(rt0.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1011381980') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((NULL)<(rt0.c0))) AND (CAST(rt0.c0 AS TEXT))) DESC);
SELECT * FROM rt0 WHERE ('1011381980') ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((NULL)<(rt0.c0))) AND (CAST(rt0.c0 AS TEXT))) DESC;
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (CASE WHEN (rt0.c0 IN (rt0.c0)) THEN rt0.c3 WHEN (rt0.c2 IN (rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) WHEN 0.4443012273906952 THEN vt0.c0 ELSE rt0.c0 END) ORDER BY (((((((vt0.c0)AND('-1576290873')))OR(rt0.c0))))>=(((rt0.c3 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c0 IN (rt0.c0)) THEN rt0.c3 WHEN (rt0.c2 IN (rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) WHEN 0.4443012273906952 THEN vt0.c0 ELSE rt0.c0 END) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (((((((vt0.c0)AND('-1576290873')))OR(rt0.c0))))>=(((rt0.c3 IN ())))) ASC);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (CASE WHEN (rt0.c0 IN (rt0.c0)) THEN rt0.c3 WHEN (rt0.c2 IN (rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) WHEN 0.4443012273906952 THEN vt0.c0 ELSE rt0.c0 END) ORDER BY (((((((vt0.c0)AND('-1576290873')))OR(rt0.c0))))>=(((rt0.c3 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c0 IN (rt0.c0)) THEN rt0.c3 WHEN (rt0.c2 IN (rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) WHEN 0.4443012273906952 THEN vt0.c0 ELSE rt0.c0 END) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (((((((vt0.c0)AND('-1576290873')))OR(rt0.c0))))>=(((rt0.c3 IN ())))) ASC);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (CASE WHEN (rt0.c0 IN (rt0.c0)) THEN rt0.c3 WHEN (rt0.c2 IN (rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) WHEN 0.4443012273906952 THEN vt0.c0 ELSE rt0.c0 END) ORDER BY (((((((vt0.c0)AND('-1576290873')))OR(rt0.c0))))>=(((rt0.c3 IN ())))) ASC;
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (rt0.c3);
SELECT ALL * FROM vt1 WHERE (CAST((+ (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((+ (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((+ (vt1.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) ISNULL))LIKE((vt1.c0 IN ())))) ORDER BY json_insert((NOT (vt0.c0)), UPPER(DISTINCT '-1179810691'), (- (vt1.c0)), ((vt0.c0) ISNULL), vt0.c0) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))LIKE((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_insert((NOT (vt0.c0)), UPPER(DISTINCT '-1179810691'), (- (vt1.c0)), ((vt0.c0) ISNULL), vt0.c0) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) ISNULL))LIKE((vt1.c0 IN ())))) ORDER BY json_insert((NOT (vt0.c0)), UPPER(DISTINCT '-1179810691'), (- (vt1.c0)), ((vt0.c0) ISNULL), vt0.c0) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))LIKE((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_insert((NOT (vt0.c0)), UPPER(DISTINCT '-1179810691'), (- (vt1.c0)), ((vt0.c0) ISNULL), vt0.c0) ASC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CAST(rt0.c3 AS NUMERIC) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST(rt0.c3 AS NUMERIC));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CAST(rt0.c3 AS NUMERIC) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST(rt0.c3 AS NUMERIC));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CAST(rt0.c3 AS NUMERIC) WHERE (rt0.c4);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY json_valid(((((rt0.c0)OR(rt0.c3)))AND(NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY json_valid(((((rt0.c0)OR(rt0.c3)))AND(NULL))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY json_valid(((((rt0.c0)OR(rt0.c3)))AND(NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY json_valid(((((rt0.c0)OR(rt0.c3)))AND(NULL))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY json_valid(((((rt0.c0)OR(rt0.c3)))AND(NULL))) ASC;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((CAST(rt0.c1 AS REAL))*(((rt0.c4)*(rt0.c1))))) ORDER BY ((+ (rt0.c4)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS REAL))*(((rt0.c4)*(rt0.c1))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((+ (rt0.c4)) IN ()) ASC);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((CAST(rt0.c1 AS REAL))*(((rt0.c4)*(rt0.c1))))) ORDER BY ((+ (rt0.c4)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS REAL))*(((rt0.c4)*(rt0.c1))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((+ (rt0.c4)) IN ()) ASC);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((CAST(rt0.c1 AS REAL))*(((rt0.c4)*(rt0.c1))))) ORDER BY ((+ (rt0.c4)) IN ()) ASC;
SELECT COUNT(*) FROM vt1 WHERE ((+ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.24416662996608662))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.24416662996608662)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.24416662996608662))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.24416662996608662)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.24416662996608662))))));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (RTRIM(((('', vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, 0.024156797645359718)) AND ((rt0.c2, rt0.c3, rt0.c2))))) ORDER BY CAST((x'' IN ()) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((('', vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, 0.024156797645359718)) AND ((rt0.c2, rt0.c3, rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY CAST((x'' IN ()) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (RTRIM(((('', vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, 0.024156797645359718)) AND ((rt0.c2, rt0.c3, rt0.c2))))) ORDER BY CAST((x'' IN ()) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((('', vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, 0.024156797645359718)) AND ((rt0.c2, rt0.c3, rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY CAST((x'' IN ()) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (RTRIM(((('', vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, 0.024156797645359718)) AND ((rt0.c2, rt0.c3, rt0.c2))))) ORDER BY CAST((x'' IN ()) AS INTEGER) DESC;
SELECT * FROM vt0, vt1 WHERE (((((((((((('-1841120171')OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0))))==((((vt0.c0) IS TRUE))))) ORDER BY (NOT (((vt1.c0)!=(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((('-1841120171')OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0))))=((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (((vt1.c0)<>(vt1.c0)))) DESC);
SELECT * FROM vt0, vt1 WHERE (((((((((((('-1841120171')OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0))))==((((vt0.c0) IS TRUE))))) ORDER BY (NOT (((vt1.c0)!=(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((('-1841120171')OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0))))=((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (((vt1.c0)<>(vt1.c0)))) DESC);
SELECT * FROM vt0, vt1 WHERE (((((((((((('-1841120171')OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0))))==((((vt0.c0) IS TRUE))))) ORDER BY (NOT (((vt1.c0)!=(vt1.c0)))) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END)*(vt0.c0))) ORDER BY (('0.386275279226704')OR(((rt0.c2)>=(rt0.c2)))) ASC, ((((rt0.c1)IS NOT(NULL))) BETWEEN (TRIM(DISTINCT rt0.c1)) AND (x''));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END)*(vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('0.386275279226704')OR(((rt0.c2)>=(rt0.c2)))) ASC, ((((rt0.c1)IS NOT(NULL))) BETWEEN (TRIM(DISTINCT rt0.c1)) AND (x'')));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END)*(vt0.c0))) ORDER BY (('0.386275279226704')OR(((rt0.c2)>=(rt0.c2)))) ASC, ((((rt0.c1)IS NOT(NULL))) BETWEEN (TRIM(DISTINCT rt0.c1)) AND (x''));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END)*(vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('0.386275279226704')OR(((rt0.c2)>=(rt0.c2)))) ASC, ((((rt0.c1)IS NOT(NULL))) BETWEEN (TRIM(DISTINCT rt0.c1)) AND (x'')));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END)*(vt0.c0))) ORDER BY (('0.386275279226704')OR(((rt0.c2)>=(rt0.c2)))) ASC, ((((rt0.c1)IS NOT(NULL))) BETWEEN (TRIM(DISTINCT rt0.c1)) AND (x''));
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN rt0 ON SUBSTR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END, '') WHERE (224166977);
SELECT SUM(count) FROM (SELECT ALL ((224166977) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN rt0 ON SUBSTR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END, ''));
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN rt0 ON SUBSTR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END, '') WHERE (224166977);
SELECT SUM(count) FROM (SELECT ALL ((224166977) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN rt0 ON SUBSTR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END, ''));
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN rt0 ON SUBSTR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END, '') WHERE (224166977);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c3) ORDER BY ((rt0.c1) IS TRUE) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c1) IS TRUE) COLLATE BINARY DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c3) ORDER BY ((rt0.c1) IS TRUE) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c1) IS TRUE) COLLATE BINARY DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c3) ORDER BY ((rt0.c1) IS TRUE) COLLATE BINARY DESC;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((((NULL)|(vt0.c0)) IN ())) ORDER BY ((((rt0.c0)!=(rt0.c1))) NOTNULL) DESC, (((((((((vt1.c0 IN ()))OR(((rt0.c0)<(rt0.c4)))))AND(rt0.c0 COLLATE BINARY)))AND(((rt0.c3) ISNULL))))OR(((rt0.c2) ISNULL)))  NULLS FIRST, ((rt0.c2)&(CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL)|(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((rt0.c0)<>(rt0.c1))) NOTNULL) DESC, (((((((((vt1.c0 IN ()))OR(((rt0.c0)<(rt0.c4)))))AND(rt0.c0 COLLATE BINARY)))AND(((rt0.c3) ISNULL))))OR(((rt0.c2) ISNULL)))  NULLS FIRST, ((rt0.c2)&(CAST(vt0.c0 AS TEXT)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((((NULL)|(vt0.c0)) IN ())) ORDER BY ((((rt0.c0)!=(rt0.c1))) NOTNULL) DESC, (((((((((vt1.c0 IN ()))OR(((rt0.c0)<(rt0.c4)))))AND(rt0.c0 COLLATE BINARY)))AND(((rt0.c3) ISNULL))))OR(((rt0.c2) ISNULL)))  NULLS FIRST, ((rt0.c2)&(CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL)|(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((rt0.c0)<>(rt0.c1))) NOTNULL) DESC, (((((((((vt1.c0 IN ()))OR(((rt0.c0)<(rt0.c4)))))AND(rt0.c0 COLLATE BINARY)))AND(((rt0.c3) ISNULL))))OR(((rt0.c2) ISNULL)))  NULLS FIRST, ((rt0.c2)&(CAST(vt0.c0 AS TEXT)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((((NULL)|(vt0.c0)) IN ())) ORDER BY ((((rt0.c0)!=(rt0.c1))) NOTNULL) DESC, (((((((((vt1.c0 IN ()))OR(((rt0.c0)<(rt0.c4)))))AND(rt0.c0 COLLATE BINARY)))AND(((rt0.c3) ISNULL))))OR(((rt0.c2) ISNULL)))  NULLS FIRST, ((rt0.c2)&(CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)||(NULL)))AND(0.6872258258281498)))AND(((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)||(NULL)))AND(0.6872258258281498)))AND(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)||(NULL)))AND(0.6872258258281498)))AND(((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)||(NULL)))AND(0.6872258258281498)))AND(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)||(NULL)))AND(0.6872258258281498)))AND(((vt0.c0)<<(vt0.c0)))));
SELECT * FROM rt0 CROSS JOIN vt0 ON (+ (rt0.c0)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON CASE rt0.c4  WHEN vt0.c0 THEN rt0.c2 END COLLATE RTRIM WHERE (((CAST(-1107633172 AS REAL))<<(SQLITE_COMPILEOPTION_GET(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(-1107633172 AS REAL))<<(SQLITE_COMPILEOPTION_GET(rt0.c2)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (+ (rt0.c0)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON CASE rt0.c4  WHEN vt0.c0 THEN rt0.c2 END COLLATE RTRIM);
SELECT * FROM rt0 CROSS JOIN vt0 ON (+ (rt0.c0)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON CASE rt0.c4  WHEN vt0.c0 THEN rt0.c2 END COLLATE RTRIM WHERE (((CAST(-1107633172 AS REAL))<<(SQLITE_COMPILEOPTION_GET(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(-1107633172 AS REAL))<<(SQLITE_COMPILEOPTION_GET(rt0.c2)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (+ (rt0.c0)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON CASE rt0.c4  WHEN vt0.c0 THEN rt0.c2 END COLLATE RTRIM);
SELECT * FROM rt0 CROSS JOIN vt0 ON (+ (rt0.c0)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON CASE rt0.c4  WHEN vt0.c0 THEN rt0.c2 END COLLATE RTRIM WHERE (((CAST(-1107633172 AS REAL))<<(SQLITE_COMPILEOPTION_GET(rt0.c2))));
SELECT * FROM vt1 WHERE (ABS(DISTINCT CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CAST(vt1.c0 AS BLOB))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (ABS(DISTINCT CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CAST(vt1.c0 AS BLOB))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (ABS(DISTINCT CAST(vt1.c0 AS BLOB)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)>>(((vt1.c0)*(vt1.c0)))) WHERE ((((((vt1.c0)) BETWEEN ((0.22307097493197203)) AND ((vt1.c0)))) ISNULL)) ORDER BY (vt0.c0 IN (vt1.c0)) COLLATE RTRIM, ((CASE WHEN 0.3354626364079072 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)&(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((0.22307097493197203)) AND ((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)>>(((vt1.c0)*(vt1.c0)))) ORDER BY (vt0.c0 IN (vt1.c0)) COLLATE RTRIM, ((CASE WHEN 0.3354626364079072 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)&(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)>>(((vt1.c0)*(vt1.c0)))) WHERE ((((((vt1.c0)) BETWEEN ((0.22307097493197203)) AND ((vt1.c0)))) ISNULL)) ORDER BY (vt0.c0 IN (vt1.c0)) COLLATE RTRIM, ((CASE WHEN 0.3354626364079072 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)&(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((0.22307097493197203)) AND ((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)>>(((vt1.c0)*(vt1.c0)))) ORDER BY (vt0.c0 IN (vt1.c0)) COLLATE RTRIM, ((CASE WHEN 0.3354626364079072 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)&(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)>>(((vt1.c0)*(vt1.c0)))) WHERE ((((((vt1.c0)) BETWEEN ((0.22307097493197203)) AND ((vt1.c0)))) ISNULL)) ORDER BY (vt0.c0 IN (vt1.c0)) COLLATE RTRIM, ((CASE WHEN 0.3354626364079072 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)&(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0))) IS FALSE)) ORDER BY (+ (CASE WHEN rt0.c0 THEN rt0.c3 END))  NULLS LAST, NULL  NULLS FIRST, (+ (rtreenode(rt0.c3, rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (+ (CASE WHEN rt0.c0 THEN rt0.c3 END))  NULLS LAST, NULL  NULLS FIRST, (+ (rtreenode(rt0.c3, rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0))) IS FALSE)) ORDER BY (+ (CASE WHEN rt0.c0 THEN rt0.c3 END))  NULLS LAST, NULL  NULLS FIRST, (+ (rtreenode(rt0.c3, rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (+ (CASE WHEN rt0.c0 THEN rt0.c3 END))  NULLS LAST, NULL  NULLS FIRST, (+ (rtreenode(rt0.c3, rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c0))) IS FALSE)) ORDER BY (+ (CASE WHEN rt0.c0 THEN rt0.c3 END))  NULLS LAST, NULL  NULLS FIRST, (+ (rtreenode(rt0.c3, rt0.c3)));
SELECT COUNT(*) FROM vt1, rt0 NOT INDEXED WHERE (((((CASE WHEN rt0.c3 THEN rt0.c3 ELSE 0xffffffffd06c3626 END)OR(((((rt0.c4)OR(rt0.c1)))AND(vt1.c0)))))OR(rt0.c2))) ORDER BY ((TYPEOF(DISTINCT rt0.c3)) NOT NULL), ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3))) IS TRUE) ASC, (NOT (((rt0.c2)/(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c3 THEN rt0.c3 ELSE 0Xffffffffd06c3626 END)OR(((((rt0.c4)OR(rt0.c1)))AND(vt1.c0)))))OR(rt0.c2))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((TYPEOF(DISTINCT rt0.c3)) NOT NULL), ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3))) IS TRUE) ASC, (NOT (((rt0.c2)/(rt0.c0)))));
SELECT COUNT(*) FROM vt1, rt0 NOT INDEXED WHERE (((((CASE WHEN rt0.c3 THEN rt0.c3 ELSE 0xffffffffd06c3626 END)OR(((((rt0.c4)OR(rt0.c1)))AND(vt1.c0)))))OR(rt0.c2))) ORDER BY ((TYPEOF(DISTINCT rt0.c3)) NOT NULL), ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3))) IS TRUE) ASC, (NOT (((rt0.c2)/(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c3 THEN rt0.c3 ELSE 0Xffffffffd06c3626 END)OR(((((rt0.c4)OR(rt0.c1)))AND(vt1.c0)))))OR(rt0.c2))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((TYPEOF(DISTINCT rt0.c3)) NOT NULL), ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3))) IS TRUE) ASC, (NOT (((rt0.c2)/(rt0.c0)))));
SELECT COUNT(*) FROM vt1, rt0 NOT INDEXED WHERE (((((CASE WHEN rt0.c3 THEN rt0.c3 ELSE 0xffffffffd06c3626 END)OR(((((rt0.c4)OR(rt0.c1)))AND(vt1.c0)))))OR(rt0.c2))) ORDER BY ((TYPEOF(DISTINCT rt0.c3)) NOT NULL), ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3))) IS TRUE) ASC, (NOT (((rt0.c2)/(rt0.c0))));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((rt0.c3)>>(rt0.c3)))/(CAST(vt1.c0 AS REAL)))) ORDER BY ((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)) COLLATE RTRIM  NULLS LAST, (~ ((((rt0.c1, vt1.c0, vt1.c0, rt0.c0, rt0.c3))<((rt0.c3, rt0.c2, vt1.c0, rt0.c0, rt0.c3)))))  NULLS FIRST, rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>>(rt0.c3)))/(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)) COLLATE RTRIM  NULLS LAST, (~ ((((rt0.c1, vt1.c0, vt1.c0, rt0.c0, rt0.c3))<((rt0.c3, rt0.c2, vt1.c0, rt0.c0, rt0.c3)))))  NULLS FIRST, rt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((rt0.c3)>>(rt0.c3)))/(CAST(vt1.c0 AS REAL)))) ORDER BY ((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)) COLLATE RTRIM  NULLS LAST, (~ ((((rt0.c1, vt1.c0, vt1.c0, rt0.c0, rt0.c3))<((rt0.c3, rt0.c2, vt1.c0, rt0.c0, rt0.c3)))))  NULLS FIRST, rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>>(rt0.c3)))/(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)) COLLATE RTRIM  NULLS LAST, (~ ((((rt0.c1, vt1.c0, vt1.c0, rt0.c0, rt0.c3))<((rt0.c3, rt0.c2, vt1.c0, rt0.c0, rt0.c3)))))  NULLS FIRST, rt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((rt0.c3)>>(rt0.c3)))/(CAST(vt1.c0 AS REAL)))) ORDER BY ((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)) COLLATE RTRIM  NULLS LAST, (~ ((((rt0.c1, vt1.c0, vt1.c0, rt0.c0, rt0.c3))<((rt0.c3, rt0.c2, vt1.c0, rt0.c0, rt0.c3)))))  NULLS FIRST, rt0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE vt0.c0 END IN ()) WHERE (CASE WHEN rt0.c1 THEN rt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c1 END) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE vt0.c0 END IN ()));
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE vt0.c0 END IN ()) WHERE (CASE WHEN rt0.c1 THEN rt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c1 END) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE vt0.c0 END IN ()));
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE vt0.c0 END IN ()) WHERE (CASE WHEN rt0.c1 THEN rt0.c1 END);
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END) BETWEEN (((rt0.c1)GLOB(rt0.c4))) AND (((rt0.c4) ISNULL))) WHERE ((((((rt0.c1, vt1.c0, rt0.c2))>=((vt0.c0, rt0.c2, rt0.c3))))+(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, vt1.c0, rt0.c2))>=((vt0.c0, rt0.c2, rt0.c3))))+(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END) BETWEEN (((rt0.c1)GLOB(rt0.c4))) AND (((rt0.c4) ISNULL))));
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END) BETWEEN (((rt0.c1)GLOB(rt0.c4))) AND (((rt0.c4) ISNULL))) WHERE ((((((rt0.c1, vt1.c0, rt0.c2))>=((vt0.c0, rt0.c2, rt0.c3))))+(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, vt1.c0, rt0.c2))>=((vt0.c0, rt0.c2, rt0.c3))))+(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END) BETWEEN (((rt0.c1)GLOB(rt0.c4))) AND (((rt0.c4) ISNULL))));
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END) BETWEEN (((rt0.c1)GLOB(rt0.c4))) AND (((rt0.c4) ISNULL))) WHERE ((((((rt0.c1, vt1.c0, rt0.c2))>=((vt0.c0, rt0.c2, rt0.c3))))+(CAST(rt0.c0 AS BLOB))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN 'S' WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (rt0.c4 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON ((TRIM(DISTINCT NULL, rt0.c3)) IS FALSE) WHERE (((((((rt0.c0)=(rt0.c2)))AND((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)==(rt0.c2)))AND((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))))AND(vt1.c0))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN 'S' WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (rt0.c4 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON ((TRIM(DISTINCT NULL, rt0.c3)) IS FALSE));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN 'S' WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (rt0.c4 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON ((TRIM(DISTINCT NULL, rt0.c3)) IS FALSE) WHERE (((((((rt0.c0)=(rt0.c2)))AND((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)==(rt0.c2)))AND((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))))AND(vt1.c0))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN 'S' WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (rt0.c4 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON ((TRIM(DISTINCT NULL, rt0.c3)) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND('0.6339007456419955')))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((+ (NULL))))) ORDER BY vt1.c0 COLLATE RTRIM DESC, CAST(load_extension(vt1.c0, vt1.c0) AS BLOB) DESC  NULLS LAST, ((NULL)AND(((vt1.c0)%(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(vt1.c0)))AND('0.6339007456419955')))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((+ (NULL))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE RTRIM DESC, CAST(load_extension(vt1.c0, vt1.c0) AS BLOB) DESC  NULLS LAST, ((NULL)AND(((vt1.c0)%(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND('0.6339007456419955')))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((+ (NULL))))) ORDER BY vt1.c0 COLLATE RTRIM DESC, CAST(load_extension(vt1.c0, vt1.c0) AS BLOB) DESC  NULLS LAST, ((NULL)AND(((vt1.c0)%(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(vt1.c0)))AND('0.6339007456419955')))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((+ (NULL))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE RTRIM DESC, CAST(load_extension(vt1.c0, vt1.c0) AS BLOB) DESC  NULLS LAST, ((NULL)AND(((vt1.c0)%(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((((rt0.c3))<((rt0.c4)))))<((CAST(rt0.c3 AS NUMERIC)))) WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((((rt0.c3))<((rt0.c4)))))<((CAST(rt0.c3 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((((rt0.c3))<((rt0.c4)))))<((CAST(rt0.c3 AS NUMERIC)))) WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((((rt0.c3))<((rt0.c4)))))<((CAST(rt0.c3 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((((rt0.c3))<((rt0.c4)))))<((CAST(rt0.c3 AS NUMERIC)))) WHERE (((- (vt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c3 AS BLOB))AND(((rt0.c1) ISNULL))))AND(((rt0.c1)GLOB(rt0.c4))))) ORDER BY (- ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c3 AS BLOB))AND(((rt0.c1) ISNULL))))AND(((rt0.c1)GLOB(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY (- ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))));
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c3 AS BLOB))AND(((rt0.c1) ISNULL))))AND(((rt0.c1)GLOB(rt0.c4))))) ORDER BY (- ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c3 AS BLOB))AND(((rt0.c1) ISNULL))))AND(((rt0.c1)GLOB(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY (- ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))));
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c3 AS BLOB))AND(((rt0.c1) ISNULL))))AND(((rt0.c1)GLOB(rt0.c4))))) ORDER BY (- ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (vt1.c0) ORDER BY ((UNICODE(0.3913287362543283)) BETWEEN (((vt0.c0)|(rt0.c4))) AND ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((UNICODE(0.3913287362543283)) BETWEEN (((vt0.c0)|(rt0.c4))) AND ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))) DESC);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (vt1.c0) ORDER BY ((UNICODE(0.3913287362543283)) BETWEEN (((vt0.c0)|(rt0.c4))) AND ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((UNICODE(0.3913287362543283)) BETWEEN (((vt0.c0)|(rt0.c4))) AND ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))) DESC);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (vt1.c0) ORDER BY ((UNICODE(0.3913287362543283)) BETWEEN (((vt0.c0)|(rt0.c4))) AND ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE))>(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))>(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE))>(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))>(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE))>(CAST(vt0.c0 AS BLOB))));
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((rt0.c3)%(0.11965125808471488))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)%(0.11965125808471488))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((rt0.c3)%(0.11965125808471488))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)%(0.11965125808471488))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((rt0.c3)%(0.11965125808471488))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c0)/(x'')) IN ()) INNER JOIN vt0 ON ((((vt0.c0)%(rt0.c4)))>>(CAST(rt0.c2 AS REAL))) WHERE ((((((- (rt0.c4)))AND((((rt0.c0))<=((vt0.c0))))))AND(rt0.c3)));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c4)))AND((((rt0.c0))<=((vt0.c0))))))AND(rt0.c3))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c0)/(x'')) IN ()) INNER JOIN vt0 ON ((((vt0.c0)%(rt0.c4)))>>(CAST(rt0.c2 AS REAL))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c0)/(x'')) IN ()) INNER JOIN vt0 ON ((((vt0.c0)%(rt0.c4)))>>(CAST(rt0.c2 AS REAL))) WHERE ((((((- (rt0.c4)))AND((((rt0.c0))<=((vt0.c0))))))AND(rt0.c3)));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c4)))AND((((rt0.c0))<=((vt0.c0))))))AND(rt0.c3))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c0)/(x'')) IN ()) INNER JOIN vt0 ON ((((vt0.c0)%(rt0.c4)))>>(CAST(rt0.c2 AS REAL))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c0)/(x'')) IN ()) INNER JOIN vt0 ON ((((vt0.c0)%(rt0.c4)))>>(CAST(rt0.c2 AS REAL))) WHERE ((((((- (rt0.c4)))AND((((rt0.c0))<=((vt0.c0))))))AND(rt0.c3)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) AS TEXT)) ORDER BY (CAST(rt0.c3 AS REAL) IN (((((rt0.c1)AND(vt1.c0)))OR(rt0.c3)), ((rt0.c3)>(rt0.c4)))), 0.10819741723755572 DESC, (((rt0.c3)) NOT BETWEEN (((rt0.c1 IN (rt0.c1)))) AND (((((rt0.c3))!=((rt0.c4)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (CAST(rt0.c3 AS REAL) IN (((((rt0.c1)AND(vt1.c0)))OR(rt0.c3)), ((rt0.c3)>(rt0.c4)))), 0.10819741723755572 DESC, (((rt0.c3)) NOT BETWEEN (((rt0.c1 IN (rt0.c1)))) AND (((((rt0.c3))<>((rt0.c4)))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) AS TEXT)) ORDER BY (CAST(rt0.c3 AS REAL) IN (((((rt0.c1)AND(vt1.c0)))OR(rt0.c3)), ((rt0.c3)>(rt0.c4)))), 0.10819741723755572 DESC, (((rt0.c3)) NOT BETWEEN (((rt0.c1 IN (rt0.c1)))) AND (((((rt0.c3))!=((rt0.c4)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (CAST(rt0.c3 AS REAL) IN (((((rt0.c1)AND(vt1.c0)))OR(rt0.c3)), ((rt0.c3)>(rt0.c4)))), 0.10819741723755572 DESC, (((rt0.c3)) NOT BETWEEN (((rt0.c1 IN (rt0.c1)))) AND (((((rt0.c3))<>((rt0.c4)))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) AS TEXT)) ORDER BY (CAST(rt0.c3 AS REAL) IN (((((rt0.c1)AND(vt1.c0)))OR(rt0.c3)), ((rt0.c3)>(rt0.c4)))), 0.10819741723755572 DESC, (((rt0.c3)) NOT BETWEEN (((rt0.c1 IN (rt0.c1)))) AND (((((rt0.c3))!=((rt0.c4)))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((x'')+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'')+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((x'')+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'')+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((x'')+(vt0.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((rt0.c1)%(rt0.c3)))OR(((vt0.c0) ISNULL))))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)))))AND(((rt0.c0)<>(rt0.c4)))))AND(((rt0.c2) IS TRUE))) INNER JOIN rt0 ON ((HEX(DISTINCT vt0.c0))>=(CAST(rt0.c2 AS INTEGER))) WHERE (((((rt0.c3) IS TRUE))-(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS TRUE))-(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c4))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((rt0.c1)%(rt0.c3)))OR(((vt0.c0) ISNULL))))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)))))AND(((rt0.c0)<>(rt0.c4)))))AND(((rt0.c2) IS TRUE))) INNER JOIN rt0 ON ((HEX(DISTINCT vt0.c0))>=(CAST(rt0.c2 AS INTEGER))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((rt0.c1)%(rt0.c3)))OR(((vt0.c0) ISNULL))))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)))))AND(((rt0.c0)<>(rt0.c4)))))AND(((rt0.c2) IS TRUE))) INNER JOIN rt0 ON ((HEX(DISTINCT vt0.c0))>=(CAST(rt0.c2 AS INTEGER))) WHERE (((((rt0.c3) IS TRUE))-(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS TRUE))-(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c4))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((rt0.c1)%(rt0.c3)))OR(((vt0.c0) ISNULL))))OR(((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)))))AND(((rt0.c0)<>(rt0.c4)))))AND(((rt0.c2) IS TRUE))) INNER JOIN rt0 ON ((HEX(DISTINCT vt0.c0))>=(CAST(rt0.c2 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((NULL)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))%('-1894626065'))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) BETWEEN ((- (vt0.c0))) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))%('-1894626065'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) BETWEEN ((- (vt0.c0))) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((NULL)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))%('-1894626065'))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) BETWEEN ((- (vt0.c0))) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))%('-1894626065'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) BETWEEN ((- (vt0.c0))) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((NULL)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))%('-1894626065'))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) BETWEEN ((- (vt0.c0))) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (('36') BETWEEN (((rt0.c1) NOT NULL)) AND (vt1.c0 COLLATE RTRIM)) CROSS JOIN rt0 ON (~ ((vt1.c0 IN ()))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (('36') BETWEEN (((rt0.c1) NOT NULL)) AND (vt1.c0 COLLATE RTRIM)) CROSS JOIN rt0 ON (~ ((vt1.c0 IN ()))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (('36') BETWEEN (((rt0.c1) NOT NULL)) AND (vt1.c0 COLLATE RTRIM)) CROSS JOIN rt0 ON (~ ((vt1.c0 IN ()))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (('36') BETWEEN (((rt0.c1) NOT NULL)) AND (vt1.c0 COLLATE RTRIM)) CROSS JOIN rt0 ON (~ ((vt1.c0 IN ()))));
SELECT ALL * FROM vt0, rt0 WHERE ((((~ (rt0.c0)))>=(CASE rt0.c3  WHEN vt0.c0 THEN 0.29816995987366657 END))) ORDER BY ((((rt0.c0)IS NOT(vt0.c0)))LIKE(NULLIF(rt0.c1, rt0.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0)))>=(CASE rt0.c3  WHEN vt0.c0 THEN 0.29816995987366657 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)IS NOT(vt0.c0)))LIKE(NULLIF(rt0.c1, rt0.c3)))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((((~ (rt0.c0)))>=(CASE rt0.c3  WHEN vt0.c0 THEN 0.29816995987366657 END))) ORDER BY ((((rt0.c0)IS NOT(vt0.c0)))LIKE(NULLIF(rt0.c1, rt0.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0)))>=(CASE rt0.c3  WHEN vt0.c0 THEN 0.29816995987366657 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)IS NOT(vt0.c0)))LIKE(NULLIF(rt0.c1, rt0.c3)))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((((~ (rt0.c0)))>=(CASE rt0.c3  WHEN vt0.c0 THEN 0.29816995987366657 END))) ORDER BY ((((rt0.c0)IS NOT(vt0.c0)))LIKE(NULLIF(rt0.c1, rt0.c3)))  NULLS FIRST;
SELECT ALL * FROM vt0 NOT INDEXED, rt0 WHERE (CAST(rt0.c4 AS INTEGER) COLLATE NOCASE) ORDER BY (+ (CAST(rt0.c2 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (CAST(rt0.c2 AS TEXT))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 NOT INDEXED, rt0 WHERE (CAST(rt0.c4 AS INTEGER) COLLATE NOCASE) ORDER BY (+ (CAST(rt0.c2 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (CAST(rt0.c2 AS TEXT))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 NOT INDEXED, rt0 WHERE (CAST(rt0.c4 AS INTEGER) COLLATE NOCASE) ORDER BY (+ (CAST(rt0.c2 AS TEXT))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (UPPER(rt0.c4)) ORDER BY LTRIM((- (rt0.c4))), ((((x'')OR(((rt0.c2) IS FALSE))))OR((NOT (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((UPPER(rt0.c4)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY LTRIM((- (rt0.c4))), ((((x'')OR(((rt0.c2) IS FALSE))))OR((NOT (vt0.c0)))) ASC);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (UPPER(rt0.c4)) ORDER BY LTRIM((- (rt0.c4))), ((((x'')OR(((rt0.c2) IS FALSE))))OR((NOT (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((UPPER(rt0.c4)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY LTRIM((- (rt0.c4))), ((((x'')OR(((rt0.c2) IS FALSE))))OR((NOT (vt0.c0)))) ASC);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (UPPER(rt0.c4)) ORDER BY LTRIM((- (rt0.c4))), ((((x'')OR(((rt0.c2) IS FALSE))))OR((NOT (vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((((rt0.c0 IN ()))AND(((vt1.c0)IS NOT(rt0.c4)))))OR(UNLIKELY(DISTINCT rt0.c3))) LEFT OUTER JOIN rt0 ON NULL WHERE (CAST(((rt0.c1) IS FALSE) AS BLOB)) ORDER BY ((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1))) NOT BETWEEN ((rt0.c3 IN (rt0.c3))) AND (((rt0.c4)&(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) IS FALSE) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((rt0.c0 IN ()))AND(((vt1.c0)IS NOT(rt0.c4)))))OR(UNLIKELY(DISTINCT rt0.c3))) LEFT OUTER JOIN rt0 ON NULL ORDER BY ((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1))) NOT BETWEEN ((rt0.c3 IN (rt0.c3))) AND (((rt0.c4)&(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((((rt0.c0 IN ()))AND(((vt1.c0)IS NOT(rt0.c4)))))OR(UNLIKELY(DISTINCT rt0.c3))) LEFT OUTER JOIN rt0 ON NULL WHERE (CAST(((rt0.c1) IS FALSE) AS BLOB)) ORDER BY ((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1))) NOT BETWEEN ((rt0.c3 IN (rt0.c3))) AND (((rt0.c4)&(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) IS FALSE) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((rt0.c0 IN ()))AND(((vt1.c0)IS NOT(rt0.c4)))))OR(UNLIKELY(DISTINCT rt0.c3))) LEFT OUTER JOIN rt0 ON NULL ORDER BY ((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1))) NOT BETWEEN ((rt0.c3 IN (rt0.c3))) AND (((rt0.c4)&(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((~ (((rt0.c1)*(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1)*(x''))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((~ (((rt0.c1)*(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1)*(x''))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((~ (((rt0.c1)*(x'')))));
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((rt0.c4)OR(rt0.c4)))AND('-2016732679')))OR(rt0.c4)))OR(rt0.c0))) NOT BETWEEN ((rt0.c4 IN ())) AND ((((vt0.c0))=((rt0.c1)))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c4)OR(rt0.c4)))AND('-2016732679')))OR(rt0.c4)))OR(rt0.c0))) NOT BETWEEN ((rt0.c4 IN ())) AND ((((vt0.c0))==((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'' DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((rt0.c4)OR(rt0.c4)))AND('-2016732679')))OR(rt0.c4)))OR(rt0.c0))) NOT BETWEEN ((rt0.c4 IN ())) AND ((((vt0.c0))=((rt0.c1)))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c4)OR(rt0.c4)))AND('-2016732679')))OR(rt0.c4)))OR(rt0.c0))) NOT BETWEEN ((rt0.c4 IN ())) AND ((((vt0.c0))==((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'' DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((rt0.c4)OR(rt0.c4)))AND('-2016732679')))OR(rt0.c4)))OR(rt0.c0))) NOT BETWEEN ((rt0.c4 IN ())) AND ((((vt0.c0))=((rt0.c1)))))) ORDER BY x'' DESC;
SELECT * FROM rt0 WHERE (((((CAST(rt0.c4 AS REAL))AND(rt0.c1 COLLATE NOCASE)))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c4 AS REAL))AND(rt0.c1 COLLATE NOCASE)))OR(x''))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c4 AS REAL))AND(rt0.c1 COLLATE NOCASE)))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c4 AS REAL))AND(rt0.c1 COLLATE NOCASE)))OR(x''))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c4 AS REAL))AND(rt0.c1 COLLATE NOCASE)))OR(x'')));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (CASE WHEN vt0.c0 THEN 0X6eed89fd WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((vt0.c0)AND('0.0')))AND(vt0.c0))))) ORDER BY (vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (CASE WHEN vt0.c0 THEN 0X6eed89fd WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((vt0.c0)AND('0.0')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (CASE WHEN vt0.c0 THEN 0X6eed89fd WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((vt0.c0)AND('0.0')))AND(vt0.c0))))) ORDER BY (vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (CASE WHEN vt0.c0 THEN 0X6eed89fd WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((vt0.c0)AND('0.0')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (CASE WHEN vt0.c0 THEN 0X6eed89fd WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((vt0.c0)AND('0.0')))AND(vt0.c0))))) ORDER BY (vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (('j9*&\H' IN (x'', (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))))) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) ASC, LIKELIHOOD(DISTINCT (vt1.c0 IN (vt1.c0)), 0.6735752719196713) ASC;
SELECT SUM(count) FROM (SELECT ((('j9*&\H' IN (x'', (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) ASC, LIKELIHOOD(DISTINCT (vt1.c0 IN (vt1.c0)), 0.6735752719196713) ASC);
SELECT COUNT(*) FROM vt1 WHERE (('j9*&\H' IN (x'', (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))))) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) ASC, LIKELIHOOD(DISTINCT (vt1.c0 IN (vt1.c0)), 0.6735752719196713) ASC;
SELECT SUM(count) FROM (SELECT ((('j9*&\H' IN (x'', (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) ASC, LIKELIHOOD(DISTINCT (vt1.c0 IN (vt1.c0)), 0.6735752719196713) ASC);
SELECT COUNT(*) FROM vt1 WHERE (('j9*&\H' IN (x'', (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))))) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) ASC, LIKELIHOOD(DISTINCT (vt1.c0 IN (vt1.c0)), 0.6735752719196713) ASC;
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (('0.5600363494528264')) AND ((((rt0.c3) NOT NULL))))) ORDER BY (NULL IN ((((NULL, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((rt0.c2, '-1666026942', rt0.c3))), 0.7742403114118233));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (('0.5600363494528264')) AND ((((rt0.c3) NOT NULL))))) IS TRUE)  as count FROM rt0 ORDER BY (NULL IN ((((NULL, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((rt0.c2, '-1666026942', rt0.c3))), 0.7742403114118233)));
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (('0.5600363494528264')) AND ((((rt0.c3) NOT NULL))))) ORDER BY (NULL IN ((((NULL, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((rt0.c2, '-1666026942', rt0.c3))), 0.7742403114118233));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (('0.5600363494528264')) AND ((((rt0.c3) NOT NULL))))) IS TRUE)  as count FROM rt0 ORDER BY (NULL IN ((((NULL, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((rt0.c2, '-1666026942', rt0.c3))), 0.7742403114118233)));
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (('0.5600363494528264')) AND ((((rt0.c3) NOT NULL))))) ORDER BY (NULL IN ((((NULL, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((rt0.c2, '-1666026942', rt0.c3))), 0.7742403114118233));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((rt0.c4) ISNULL)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) ISNULL)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY x'');
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((rt0.c4) ISNULL)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) ISNULL)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY x'');
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((rt0.c4) ISNULL)) ORDER BY x'';
SELECT * FROM vt1 CROSS JOIN vt0 ON vt1.c0 WHERE ((((vt0.c0)OR(vt1.c0)) IN ())) ORDER BY (((vt0.c0)) BETWEEN ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) AND ((vt1.c0))), 1941351477;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt1.c0 ORDER BY (((vt0.c0)) BETWEEN ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) AND ((vt1.c0))), 1941351477);
SELECT * FROM vt1 CROSS JOIN vt0 ON vt1.c0 WHERE ((((vt0.c0)OR(vt1.c0)) IN ())) ORDER BY (((vt0.c0)) BETWEEN ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) AND ((vt1.c0))), 1941351477;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt1.c0 ORDER BY (((vt0.c0)) BETWEEN ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) AND ((vt1.c0))), 1941351477);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0Xffffffff81940b02, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0xffffffff81940b02, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0Xffffffff81940b02, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0xffffffff81940b02, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0Xffffffff81940b02, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON rt0.c4 WHERE (((((rt0.c0) NOTNULL)) NOT NULL)) ORDER BY (rt0.c3 COLLATE BINARY IN (SQLITE_SOURCE_ID()))  NULLS LAST, (- (CASE vt0.c0  WHEN rt0.c4 THEN NULL WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c0 THEN '-2016732679' WHEN rt0.c2 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON rt0.c4 ORDER BY (rt0.c3 COLLATE BINARY IN (SQLITE_SOURCE_ID()))  NULLS LAST, (- (CASE vt0.c0  WHEN rt0.c4 THEN NULL WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c0 THEN '-2016732679' WHEN rt0.c2 THEN vt0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON rt0.c4 WHERE (((((rt0.c0) NOTNULL)) NOT NULL)) ORDER BY (rt0.c3 COLLATE BINARY IN (SQLITE_SOURCE_ID()))  NULLS LAST, (- (CASE vt0.c0  WHEN rt0.c4 THEN NULL WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c0 THEN '-2016732679' WHEN rt0.c2 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON rt0.c4 ORDER BY (rt0.c3 COLLATE BINARY IN (SQLITE_SOURCE_ID()))  NULLS LAST, (- (CASE vt0.c0  WHEN rt0.c4 THEN NULL WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c0 THEN '-2016732679' WHEN rt0.c2 THEN vt0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON rt0.c4 WHERE (((((rt0.c0) NOTNULL)) NOT NULL)) ORDER BY (rt0.c3 COLLATE BINARY IN (SQLITE_SOURCE_ID()))  NULLS LAST, (- (CASE vt0.c0  WHEN rt0.c4 THEN NULL WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c0 THEN '-2016732679' WHEN rt0.c2 THEN vt0.c0 END)) DESC;
SELECT * FROM vt0 WHERE (load_extension(NULL) COLLATE RTRIM) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN '1941351477' END)) AND (((vt0.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN '1941351477' END)) AND (((vt0.c0 IN ()))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (load_extension(NULL) COLLATE RTRIM) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN '1941351477' END)) AND (((vt0.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN '1941351477' END)) AND (((vt0.c0 IN ()))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT * FROM rt0, vt1, vt0 WHERE ((((((((((- (0.6079645174114061)))OR(((rt0.c0)>>(rt0.c2)))))OR(CAST('947371359' AS TEXT))))AND(((rt0.c0)IS NOT(rt0.c3)))))AND(((vt1.c0)&(rt0.c3))))) ORDER BY CASE ((rt0.c0) IS FALSE)  WHEN NULL THEN (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) END;
SELECT SUM(count) FROM (SELECT (((((((((((- (0.6079645174114061)))OR(((rt0.c0)>>(rt0.c2)))))OR(CAST('947371359' AS TEXT))))AND(((rt0.c0)IS NOT(rt0.c3)))))AND(((vt1.c0)&(rt0.c3))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE ((rt0.c0) IS FALSE)  WHEN NULL THEN (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) END);
SELECT * FROM rt0, vt1, vt0 WHERE ((((((((((- (0.6079645174114061)))OR(((rt0.c0)>>(rt0.c2)))))OR(CAST('947371359' AS TEXT))))AND(((rt0.c0)IS NOT(rt0.c3)))))AND(((vt1.c0)&(rt0.c3))))) ORDER BY CASE ((rt0.c0) IS FALSE)  WHEN NULL THEN (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) END;
SELECT SUM(count) FROM (SELECT (((((((((((- (0.6079645174114061)))OR(((rt0.c0)>>(rt0.c2)))))OR(CAST('947371359' AS TEXT))))AND(((rt0.c0)IS NOT(rt0.c3)))))AND(((vt1.c0)&(rt0.c3))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE ((rt0.c0) IS FALSE)  WHEN NULL THEN (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) END);
SELECT * FROM rt0, vt1, vt0 WHERE ((((((((((- (0.6079645174114061)))OR(((rt0.c0)>>(rt0.c2)))))OR(CAST('947371359' AS TEXT))))AND(((rt0.c0)IS NOT(rt0.c3)))))AND(((vt1.c0)&(rt0.c3))))) ORDER BY CASE ((rt0.c0) IS FALSE)  WHEN NULL THEN (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) END;
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((('43868784', vt1.c0, rt0.c4))<=((rt0.c4, rt0.c3, rt0.c1))) THEN (~ (rt0.c1)) ELSE (((rt0.c3, vt1.c0, rt0.c1))>((rt0.c0, rt0.c3, rt0.c2))) END WHERE ((((((~ ('1011381980')))OR(0x20254d88)))OR((((rt0.c2, rt0.c4, rt0.c2))<>((rt0.c1, vt1.c0, rt0.c1)))))) ORDER BY (((+ (rt0.c0)))&(((rt0.c4)+(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ ('1011381980')))OR(0X20254d88)))OR((((rt0.c2, rt0.c4, rt0.c2))<>((rt0.c1, vt1.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((('43868784', vt1.c0, rt0.c4))<=((rt0.c4, rt0.c3, rt0.c1))) THEN (~ (rt0.c1)) ELSE (((rt0.c3, vt1.c0, rt0.c1))>((rt0.c0, rt0.c3, rt0.c2))) END ORDER BY (((+ (rt0.c0)))&(((rt0.c4)+(rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((('43868784', vt1.c0, rt0.c4))<=((rt0.c4, rt0.c3, rt0.c1))) THEN (~ (rt0.c1)) ELSE (((rt0.c3, vt1.c0, rt0.c1))>((rt0.c0, rt0.c3, rt0.c2))) END WHERE ((((((~ ('1011381980')))OR(0x20254d88)))OR((((rt0.c2, rt0.c4, rt0.c2))<>((rt0.c1, vt1.c0, rt0.c1)))))) ORDER BY (((+ (rt0.c0)))&(((rt0.c4)+(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ ('1011381980')))OR(0X20254d88)))OR((((rt0.c2, rt0.c4, rt0.c2))<>((rt0.c1, vt1.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((('43868784', vt1.c0, rt0.c4))<=((rt0.c4, rt0.c3, rt0.c1))) THEN (~ (rt0.c1)) ELSE (((rt0.c3, vt1.c0, rt0.c1))>((rt0.c0, rt0.c3, rt0.c2))) END ORDER BY (((+ (rt0.c0)))&(((rt0.c4)+(rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((('43868784', vt1.c0, rt0.c4))<=((rt0.c4, rt0.c3, rt0.c1))) THEN (~ (rt0.c1)) ELSE (((rt0.c3, vt1.c0, rt0.c1))>((rt0.c0, rt0.c3, rt0.c2))) END WHERE ((((((~ ('1011381980')))OR(0x20254d88)))OR((((rt0.c2, rt0.c4, rt0.c2))<>((rt0.c1, vt1.c0, rt0.c1)))))) ORDER BY (((+ (rt0.c0)))&(((rt0.c4)+(rt0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (load_extension(vt0.c0, vt0.c0) COLLATE RTRIM) ORDER BY ((vt0.c0 COLLATE NOCASE)IS NOT(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(vt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)IS NOT(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (load_extension(vt0.c0, vt0.c0) COLLATE RTRIM) ORDER BY ((vt0.c0 COLLATE NOCASE)IS NOT(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(vt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)IS NOT(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((NULL IN (vt1.c0)))+(STRFTIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) ORDER BY (vt1.c0 IN ()), CAST(((vt1.c0) IS FALSE) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL IN (vt1.c0)))+(STRFTIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()), CAST(((vt1.c0) IS FALSE) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((NULL IN (vt1.c0)))+(STRFTIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) ORDER BY (vt1.c0 IN ()), CAST(((vt1.c0) IS FALSE) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL IN (vt1.c0)))+(STRFTIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()), CAST(((vt1.c0) IS FALSE) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((NULL IN (vt1.c0)))+(STRFTIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) ORDER BY (vt1.c0 IN ()), CAST(((vt1.c0) IS FALSE) AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (vt0.c0) ORDER BY (((rt0.c1)) BETWEEN (((((rt0.c3))>=((rt0.c2))))) AND ((CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((rt0.c1)) BETWEEN (((((rt0.c3))>=((rt0.c2))))) AND ((CAST(rt0.c1 AS TEXT)))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (vt0.c0) ORDER BY (((rt0.c1)) BETWEEN (((((rt0.c3))>=((rt0.c2))))) AND ((CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((rt0.c1)) BETWEEN (((((rt0.c3))>=((rt0.c2))))) AND ((CAST(rt0.c1 AS TEXT)))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (vt0.c0) ORDER BY (((rt0.c1)) BETWEEN (((((rt0.c3))>=((rt0.c2))))) AND ((CAST(rt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL)  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE ((((('b<') BETWEEN (rt0.c1) AND (rt0.c4))) BETWEEN (((((rt0.c4)OR(rt0.c1)))OR(0.7897073645193076))) AND (x'8754'))) ORDER BY (((NULL, (+ (rt0.c2)), (NOT (rt0.c3)), NULL, CAST(rt0.c0 AS BLOB)))==((((rt0.c0)==('-1943308415')), ((vt0.c0) IS FALSE), 0.35617523854098454, (((vt0.c0, vt0.c0, x'f250286f'))==((rt0.c2, vt0.c0, vt0.c0))), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) ASC  NULLS LAST, ((rt0.c1)IS((rt0.c1 IN (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('b<') BETWEEN (rt0.c1) AND (rt0.c4))) BETWEEN (((((rt0.c4)OR(rt0.c1)))OR(0.7897073645193076))) AND (x'8754'))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NULL, (+ (rt0.c2)), (NOT (rt0.c3)), NULL, CAST(rt0.c0 AS BLOB)))==((((rt0.c0)==('-1943308415')), ((vt0.c0) IS FALSE), 0.35617523854098454, (((vt0.c0, vt0.c0, x'f250286f'))=((rt0.c2, vt0.c0, vt0.c0))), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) ASC  NULLS LAST, ((rt0.c1)IS((rt0.c1 IN (rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((('b<') BETWEEN (rt0.c1) AND (rt0.c4))) BETWEEN (((((rt0.c4)OR(rt0.c1)))OR(0.7897073645193076))) AND (x'8754'))) ORDER BY (((NULL, (+ (rt0.c2)), (NOT (rt0.c3)), NULL, CAST(rt0.c0 AS BLOB)))==((((rt0.c0)==('-1943308415')), ((vt0.c0) IS FALSE), 0.35617523854098454, (((vt0.c0, vt0.c0, x'f250286f'))==((rt0.c2, vt0.c0, vt0.c0))), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) ASC  NULLS LAST, ((rt0.c1)IS((rt0.c1 IN (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('b<') BETWEEN (rt0.c1) AND (rt0.c4))) BETWEEN (((((rt0.c4)OR(rt0.c1)))OR(0.7897073645193076))) AND (x'8754'))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NULL, (+ (rt0.c2)), (NOT (rt0.c3)), NULL, CAST(rt0.c0 AS BLOB)))==((((rt0.c0)==('-1943308415')), ((vt0.c0) IS FALSE), 0.35617523854098454, (((vt0.c0, vt0.c0, x'f250286f'))=((rt0.c2, vt0.c0, vt0.c0))), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) ASC  NULLS LAST, ((rt0.c1)IS((rt0.c1 IN (rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((('b<') BETWEEN (rt0.c1) AND (rt0.c4))) BETWEEN (((((rt0.c4)OR(rt0.c1)))OR(0.7897073645193076))) AND (x'8754'))) ORDER BY (((NULL, (+ (rt0.c2)), (NOT (rt0.c3)), NULL, CAST(rt0.c0 AS BLOB)))==((((rt0.c0)==('-1943308415')), ((vt0.c0) IS FALSE), 0.35617523854098454, (((vt0.c0, vt0.c0, x'f250286f'))==((rt0.c2, vt0.c0, vt0.c0))), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) ASC  NULLS LAST, ((rt0.c1)IS((rt0.c1 IN (rt0.c3))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((NULL COLLATE BINARY)OR(rt0.c1 COLLATE RTRIM)))AND(CAST(rt0.c2 AS REAL))))OR(((((rt0.c0)OR(rt0.c4)))OR(rt0.c1)))))AND(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(0.8773153599930557)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL COLLATE BINARY)OR(rt0.c1 COLLATE RTRIM)))AND(CAST(rt0.c2 AS REAL))))OR(((((rt0.c0)OR(rt0.c4)))OR(rt0.c1)))))AND(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(0.8773153599930557)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((NULL COLLATE BINARY)OR(rt0.c1 COLLATE RTRIM)))AND(CAST(rt0.c2 AS REAL))))OR(((((rt0.c0)OR(rt0.c4)))OR(rt0.c1)))))AND(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(0.8773153599930557)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL COLLATE BINARY)OR(rt0.c1 COLLATE RTRIM)))AND(CAST(rt0.c2 AS REAL))))OR(((((rt0.c0)OR(rt0.c4)))OR(rt0.c1)))))AND(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(0.8773153599930557)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((NULL COLLATE BINARY)OR(rt0.c1 COLLATE RTRIM)))AND(CAST(rt0.c2 AS REAL))))OR(((((rt0.c0)OR(rt0.c4)))OR(rt0.c1)))))AND(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(0.8773153599930557)))OR(vt1.c0)))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN (((vt1.c0))<=((vt0.c0))) ELSE (((vt1.c0))>=((vt0.c0))) END WHERE ((vt1.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN (((vt1.c0))<=((vt0.c0))) ELSE (((vt1.c0))>=((vt0.c0))) END);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN (((vt1.c0))<=((vt0.c0))) ELSE (((vt1.c0))>=((vt0.c0))) END WHERE ((vt1.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN (((vt1.c0))<=((vt0.c0))) ELSE (((vt1.c0))>=((vt0.c0))) END);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN (((vt1.c0))<=((vt0.c0))) ELSE (((vt1.c0))>=((vt0.c0))) END WHERE ((vt1.c0 IN ()) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((NOT (vt0.c0))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((NOT (vt0.c0))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((NOT (vt0.c0))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((json_object(vt1.c0, vt1.c0))IS(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((json_object(vt1.c0, vt1.c0))IS(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((json_object(vt1.c0, vt1.c0))IS(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((json_object(vt1.c0, vt1.c0))IS(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)&(vt0.c0)) AS REAL)) ORDER BY x'' ASC  NULLS LAST, CASE (~ (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 THEN (- (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('|F~iYqJGC')) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0)&(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)&(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC  NULLS LAST, CASE (~ (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 THEN (- (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('|F~iYqJGC')) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0)&(vt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)&(vt0.c0)) AS REAL)) ORDER BY x'' ASC  NULLS LAST, CASE (~ (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 THEN (- (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('|F~iYqJGC')) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0)&(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)&(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC  NULLS LAST, CASE (~ (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 THEN (- (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('|F~iYqJGC')) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0)&(vt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)&(vt0.c0)) AS REAL)) ORDER BY x'' ASC  NULLS LAST, CASE (~ (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 THEN (- (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('|F~iYqJGC')) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0)&(vt0.c0)) END  NULLS FIRST;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((~ (rt0.c4))) NOT BETWEEN (((rt0.c4)IS(rt0.c0))) AND (((rt0.c0) NOTNULL))) WHERE (CAST(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END AS TEXT)) ORDER BY ((rt0.c3)>(CAST(rt0.c1 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((~ (rt0.c4))) NOT BETWEEN (((rt0.c4)IS(rt0.c0))) AND (((rt0.c0) NOTNULL))) ORDER BY ((rt0.c3)>(CAST(rt0.c1 AS REAL))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((~ (rt0.c4))) NOT BETWEEN (((rt0.c4)IS(rt0.c0))) AND (((rt0.c0) NOTNULL))) WHERE (CAST(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END AS TEXT)) ORDER BY ((rt0.c3)>(CAST(rt0.c1 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((~ (rt0.c4))) NOT BETWEEN (((rt0.c4)IS(rt0.c0))) AND (((rt0.c0) NOTNULL))) ORDER BY ((rt0.c3)>(CAST(rt0.c1 AS REAL))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((~ (rt0.c4))) NOT BETWEEN (((rt0.c4)IS(rt0.c0))) AND (((rt0.c0) NOTNULL))) WHERE (CAST(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END AS TEXT)) ORDER BY ((rt0.c3)>(CAST(rt0.c1 AS REAL))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0))==((((vt1.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0))==((((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0))==((((vt1.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0))==((((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0))==((((vt1.c0) NOT NULL)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE COALESCE(DISTINCT vt0.c0, vt1.c0)  WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)==(((vt1.c0)GLOB(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE COALESCE(DISTINCT vt0.c0, vt1.c0)  WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)=(((vt1.c0)GLOB(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE COALESCE(DISTINCT vt0.c0, vt1.c0)  WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)==(((vt1.c0)GLOB(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE COALESCE(DISTINCT vt0.c0, vt1.c0)  WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)=(((vt1.c0)GLOB(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE COALESCE(DISTINCT vt0.c0, vt1.c0)  WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)==(((vt1.c0)GLOB(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((ABS(rt0.c1))=(CAST(rt0.c4 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c1))=(CAST(rt0.c4 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((ABS(rt0.c1))=(CAST(rt0.c4 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c1))=(CAST(rt0.c4 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((ABS(rt0.c1))=(CAST(rt0.c4 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((LIKELIHOOD(DISTINCT vt1.c0, 0.8546398848799877))LIKE(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY NULL COLLATE BINARY, (+ (LIKELIHOOD(DISTINCT vt1.c0, 0.062421082429891306)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt1.c0, 0.8546398848799877))LIKE(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY NULL COLLATE BINARY, (+ (LIKELIHOOD(DISTINCT vt1.c0, 0.062421082429891306)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LIKELIHOOD(DISTINCT vt1.c0, 0.8546398848799877))LIKE(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY NULL COLLATE BINARY, (+ (LIKELIHOOD(DISTINCT vt1.c0, 0.062421082429891306)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt1.c0, 0.8546398848799877))LIKE(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY NULL COLLATE BINARY, (+ (LIKELIHOOD(DISTINCT vt1.c0, 0.062421082429891306)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LIKELIHOOD(DISTINCT vt1.c0, 0.8546398848799877))LIKE(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY NULL COLLATE BINARY, (+ (LIKELIHOOD(DISTINCT vt1.c0, 0.062421082429891306)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.8845154532820402) ORDER BY (((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.8845154532820402) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c1)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.8845154532820402) ORDER BY (((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.8845154532820402) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c1)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.8845154532820402) ORDER BY (((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c1)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE (+ ('1083700688'))  WHEN CASE WHEN vt0.c0 THEN x'd562' WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((vt0.c0) IS TRUE) END) ORDER BY (NOT ((((vt1.c0))<>((vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ ('1083700688'))  WHEN CASE WHEN vt0.c0 THEN x'd562' WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT ((((vt1.c0))!=((vt1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE (+ ('1083700688'))  WHEN CASE WHEN vt0.c0 THEN x'd562' WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((vt0.c0) IS TRUE) END) ORDER BY (NOT ((((vt1.c0))<>((vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ ('1083700688'))  WHEN CASE WHEN vt0.c0 THEN x'd562' WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT ((((vt1.c0))!=((vt1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE (+ ('1083700688'))  WHEN CASE WHEN vt0.c0 THEN x'd562' WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((vt0.c0) IS TRUE) END) ORDER BY (NOT ((((vt1.c0))<>((vt1.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0)||(vt0.c0)))OR((+ (vt1.c0)))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)||(vt0.c0)))OR((+ (vt1.c0)))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0)||(vt0.c0)))OR((+ (vt1.c0)))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)||(vt0.c0)))OR((+ (vt1.c0)))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0)||(vt0.c0)))OR((+ (vt1.c0)))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY vt1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (SUBSTR(((rt0.c3)|(rt0.c4)), ((rt0.c1)>(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((rt0.c3)|(rt0.c4)), ((rt0.c1)>(vt1.c0)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (SUBSTR(((rt0.c3)|(rt0.c4)), ((rt0.c1)>(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((rt0.c3)|(rt0.c4)), ((rt0.c1)>(vt1.c0)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (SUBSTR(((rt0.c3)|(rt0.c4)), ((rt0.c1)>(vt1.c0))));
SELECT ALL * FROM vt1, vt0, rt0 WHERE (vt1.c0) ORDER BY (((((((rt0.c3)OR(vt0.c0)))AND(rt0.c2)), rt0.c0 COLLATE BINARY, (- (''))))==(((NOT (rt0.c3)), (((rt0.c3))>=((rt0.c4))), (((rt0.c2, vt0.c0, rt0.c0)) BETWEEN (('-1631819545', rt0.c2, vt1.c0)) AND ((vt1.c0, rt0.c3, vt0.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((((((rt0.c3)OR(vt0.c0)))AND(rt0.c2)), rt0.c0 COLLATE BINARY, (- (''))))==(((NOT (rt0.c3)), (((rt0.c3))>=((rt0.c4))), (((rt0.c2, vt0.c0, rt0.c0)) BETWEEN (('-1631819545', rt0.c2, vt1.c0)) AND ((vt1.c0, rt0.c3, vt0.c0)))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (vt1.c0) ORDER BY (((((((rt0.c3)OR(vt0.c0)))AND(rt0.c2)), rt0.c0 COLLATE BINARY, (- (''))))==(((NOT (rt0.c3)), (((rt0.c3))>=((rt0.c4))), (((rt0.c2, vt0.c0, rt0.c0)) BETWEEN (('-1631819545', rt0.c2, vt1.c0)) AND ((vt1.c0, rt0.c3, vt0.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((((((rt0.c3)OR(vt0.c0)))AND(rt0.c2)), rt0.c0 COLLATE BINARY, (- (''))))==(((NOT (rt0.c3)), (((rt0.c3))>=((rt0.c4))), (((rt0.c2, vt0.c0, rt0.c0)) BETWEEN (('-1631819545', rt0.c2, vt1.c0)) AND ((vt1.c0, rt0.c3, vt0.c0)))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (vt1.c0) ORDER BY (((((((rt0.c3)OR(vt0.c0)))AND(rt0.c2)), rt0.c0 COLLATE BINARY, (- (''))))==(((NOT (rt0.c3)), (((rt0.c3))>=((rt0.c4))), (((rt0.c2, vt0.c0, rt0.c0)) BETWEEN (('-1631819545', rt0.c2, vt1.c0)) AND ((vt1.c0, rt0.c3, vt0.c0)))))) DESC  NULLS FIRST;
SELECT * FROM rt0 CROSS JOIN vt1 ON CAST(((rt0.c2)>>(rt0.c3)) AS BLOB) RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c4) NOT NULL) THEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) WHEN NULL COLLATE NOCASE THEN RTRIM(rt0.c2) WHEN x'9f18' THEN (rt0.c1 IN ()) END WHERE ((+ (vt1.c0))) ORDER BY (LOWER(DISTINCT rt0.c3) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CAST(((rt0.c2)>>(rt0.c3)) AS BLOB) RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c4) NOT NULL) THEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) WHEN NULL COLLATE NOCASE THEN RTRIM(rt0.c2) WHEN x'9f18' THEN (rt0.c1 IN ()) END ORDER BY (LOWER(DISTINCT rt0.c3) IN ()) DESC);
SELECT * FROM rt0 CROSS JOIN vt1 ON CAST(((rt0.c2)>>(rt0.c3)) AS BLOB) RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c4) NOT NULL) THEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) WHEN NULL COLLATE NOCASE THEN RTRIM(rt0.c2) WHEN x'9f18' THEN (rt0.c1 IN ()) END WHERE ((+ (vt1.c0))) ORDER BY (LOWER(DISTINCT rt0.c3) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CAST(((rt0.c2)>>(rt0.c3)) AS BLOB) RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c4) NOT NULL) THEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) WHEN NULL COLLATE NOCASE THEN RTRIM(rt0.c2) WHEN x'9f18' THEN (rt0.c1 IN ()) END ORDER BY (LOWER(DISTINCT rt0.c3) IN ()) DESC);
SELECT * FROM rt0 CROSS JOIN vt1 ON CAST(((rt0.c2)>>(rt0.c3)) AS BLOB) RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c4) NOT NULL) THEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) WHEN NULL COLLATE NOCASE THEN RTRIM(rt0.c2) WHEN x'9f18' THEN (rt0.c1 IN ()) END WHERE ((+ (vt1.c0))) ORDER BY (LOWER(DISTINCT rt0.c3) IN ()) DESC;
SELECT * FROM vt0, vt1, rt0 WHERE (((((rt0.c4)==(rt0.c2)))<(((vt1.c0) BETWEEN (0.5180715862238078) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)==(rt0.c2)))<(((vt1.c0) BETWEEN (0.5180715862238078) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE (((((rt0.c4)==(rt0.c2)))<(((vt1.c0) BETWEEN (0.5180715862238078) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)==(rt0.c2)))<(((vt1.c0) BETWEEN (0.5180715862238078) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE (((((rt0.c4)==(rt0.c2)))<(((vt1.c0) BETWEEN (0.5180715862238078) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (CASE WHEN 0x60281db3 COLLATE NOCASE THEN (('B&mS6')+(vt0.c0)) WHEN vt1.c0 THEN ((vt1.c0)+(vt1.c0)) WHEN LOWER(DISTINCT vt1.c0) THEN ((vt0.c0)<=(vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0X60281db3 COLLATE NOCASE THEN (('B&mS6')+(vt0.c0)) WHEN vt1.c0 THEN ((vt1.c0)+(vt1.c0)) WHEN LOWER(DISTINCT vt1.c0) THEN ((vt0.c0)<=(vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0);
SELECT COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (CASE WHEN 0x60281db3 COLLATE NOCASE THEN (('B&mS6')+(vt0.c0)) WHEN vt1.c0 THEN ((vt1.c0)+(vt1.c0)) WHEN LOWER(DISTINCT vt1.c0) THEN ((vt0.c0)<=(vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0X60281db3 COLLATE NOCASE THEN (('B&mS6')+(vt0.c0)) WHEN vt1.c0 THEN ((vt1.c0)+(vt1.c0)) WHEN LOWER(DISTINCT vt1.c0) THEN ((vt0.c0)<=(vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0);
SELECT COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (CASE WHEN 0x60281db3 COLLATE NOCASE THEN (('B&mS6')+(vt0.c0)) WHEN vt1.c0 THEN ((vt1.c0)+(vt1.c0)) WHEN LOWER(DISTINCT vt1.c0) THEN ((vt0.c0)<=(vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('') ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((('') ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('') ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((('') ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('') ISNULL)) NOT NULL));
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY((('809165088')+(rt0.c3)))) ORDER BY ((((((rt0.c1))<((rt0.c3)))))!=(((rt0.c1 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((('809165088')+(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1))<((rt0.c3)))))!=(((rt0.c1 IN ()))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY((('809165088')+(rt0.c3)))) ORDER BY ((((((rt0.c1))<((rt0.c3)))))!=(((rt0.c1 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((('809165088')+(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1))<((rt0.c3)))))!=(((rt0.c1 IN ()))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY((('809165088')+(rt0.c3)))) ORDER BY ((((((rt0.c1))<((rt0.c3)))))!=(((rt0.c1 IN ()))))  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE ((((NULL, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c3)>=(rt0.c2)), ((((((((((((((((rt0.c0)OR(vt1.c0)))OR(rt0.c1)))OR(vt1.c0)))AND(rt0.c1)))OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c2)))AND(x'')), (vt1.c0 IN ()))) AND ((((rt0.c1)|(rt0.c3)), LIKELIHOOD(DISTINCT rt0.c2, 0.5505527883636269), ((((rt0.c1)AND(rt0.c3)))OR(rt0.c2)))))) ORDER BY ((rt0.c3 COLLATE NOCASE) NOT BETWEEN (TRIM(rt0.c2, ']	~頉[Z5kM')) AND (COALESCE(rt0.c3, rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c3)>=(rt0.c2)), ((((((((((((((((rt0.c0)OR(vt1.c0)))OR(rt0.c1)))OR(vt1.c0)))AND(rt0.c1)))OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c2)))AND(x'')), (vt1.c0 IN ()))) AND ((((rt0.c1)|(rt0.c3)), LIKELIHOOD(DISTINCT rt0.c2, 0.5505527883636269), ((((rt0.c1)AND(rt0.c3)))OR(rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c3 COLLATE NOCASE) NOT BETWEEN (TRIM(rt0.c2, ']	~頉[Z5kM')) AND (COALESCE(rt0.c3, rt0.c2))));
SELECT * FROM vt1, rt0 WHERE ((((NULL, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c3)>=(rt0.c2)), ((((((((((((((((rt0.c0)OR(vt1.c0)))OR(rt0.c1)))OR(vt1.c0)))AND(rt0.c1)))OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c2)))AND(x'')), (vt1.c0 IN ()))) AND ((((rt0.c1)|(rt0.c3)), LIKELIHOOD(DISTINCT rt0.c2, 0.5505527883636269), ((((rt0.c1)AND(rt0.c3)))OR(rt0.c2)))))) ORDER BY ((rt0.c3 COLLATE NOCASE) NOT BETWEEN (TRIM(rt0.c2, ']	~頉[Z5kM')) AND (COALESCE(rt0.c3, rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c3)>=(rt0.c2)), ((((((((((((((((rt0.c0)OR(vt1.c0)))OR(rt0.c1)))OR(vt1.c0)))AND(rt0.c1)))OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c2)))AND(x'')), (vt1.c0 IN ()))) AND ((((rt0.c1)|(rt0.c3)), LIKELIHOOD(DISTINCT rt0.c2, 0.5505527883636269), ((((rt0.c1)AND(rt0.c3)))OR(rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c3 COLLATE NOCASE) NOT BETWEEN (TRIM(rt0.c2, ']	~頉[Z5kM')) AND (COALESCE(rt0.c3, rt0.c2))));
SELECT * FROM vt1, rt0 WHERE ((((NULL, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c3)>=(rt0.c2)), ((((((((((((((((rt0.c0)OR(vt1.c0)))OR(rt0.c1)))OR(vt1.c0)))AND(rt0.c1)))OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c2)))AND(x'')), (vt1.c0 IN ()))) AND ((((rt0.c1)|(rt0.c3)), LIKELIHOOD(DISTINCT rt0.c2, 0.5505527883636269), ((((rt0.c1)AND(rt0.c3)))OR(rt0.c2)))))) ORDER BY ((rt0.c3 COLLATE NOCASE) NOT BETWEEN (TRIM(rt0.c2, ']	~頉[Z5kM')) AND (COALESCE(rt0.c3, rt0.c2)));
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(((vt0.c0) NOT NULL)))) ORDER BY rtreenode((((vt1.c0))==((vt1.c0))), ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) ASC, ((vt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY rtreenode((((vt1.c0))=((vt1.c0))), ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) ASC, ((vt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(((vt0.c0) NOT NULL)))) ORDER BY rtreenode((((vt1.c0))==((vt1.c0))), ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) ASC, ((vt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY rtreenode((((vt1.c0))=((vt1.c0))), ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) ASC, ((vt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(((vt0.c0) NOT NULL)))) ORDER BY rtreenode((((vt1.c0))==((vt1.c0))), ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) ASC, ((vt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((rt0.c0)<<(rt0.c4)) COLLATE NOCASE) ORDER BY SQLITE_COMPILEOPTION_GET(x'') COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<<(rt0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY SQLITE_COMPILEOPTION_GET(x'') COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((rt0.c0)<<(rt0.c4)) COLLATE NOCASE) ORDER BY SQLITE_COMPILEOPTION_GET(x'') COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<<(rt0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY SQLITE_COMPILEOPTION_GET(x'') COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((rt0.c0)<<(rt0.c4)) COLLATE NOCASE) ORDER BY SQLITE_COMPILEOPTION_GET(x'') COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON 'Jp\T' CROSS JOIN vt1 ON ((x'') NOTNULL) WHERE (((LTRIM(rt0.c4, rt0.c0)) IS FALSE)) ORDER BY ((((CAST(rt0.c0 AS REAL))AND((((('-537756918')OR(rt0.c4)))OR(rt0.c0)))))OR(CASE rt0.c4  WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(rt0.c4, rt0.c0)) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON 'Jp\T' CROSS JOIN vt1 ON ((x'') NOTNULL) ORDER BY ((((CAST(rt0.c0 AS REAL))AND((((('-537756918')OR(rt0.c4)))OR(rt0.c0)))))OR(CASE rt0.c4  WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c2 END)) ASC);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON 'Jp\T' CROSS JOIN vt1 ON ((x'') NOTNULL) WHERE (((LTRIM(rt0.c4, rt0.c0)) IS FALSE)) ORDER BY ((((CAST(rt0.c0 AS REAL))AND((((('-537756918')OR(rt0.c4)))OR(rt0.c0)))))OR(CASE rt0.c4  WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(rt0.c4, rt0.c0)) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON 'Jp\T' CROSS JOIN vt1 ON ((x'') NOTNULL) ORDER BY ((((CAST(rt0.c0 AS REAL))AND((((('-537756918')OR(rt0.c4)))OR(rt0.c0)))))OR(CASE rt0.c4  WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c2 END)) ASC);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON 'Jp\T' CROSS JOIN vt1 ON ((x'') NOTNULL) WHERE (((LTRIM(rt0.c4, rt0.c0)) IS FALSE)) ORDER BY ((((CAST(rt0.c0 AS REAL))AND((((('-537756918')OR(rt0.c4)))OR(rt0.c0)))))OR(CASE rt0.c4  WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c2 END)) ASC;
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((rt0.c2)>=(rt0.c2)) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((((((vt0.c0)/(rt0.c0)))AND('')))OR(((((rt0.c3)OR(rt0.c2)))AND(vt1.c0)))) WHERE ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c4 END IN ())) ORDER BY ((((rt0.c1)<=(rt0.c4))) NOT BETWEEN (((rt0.c3)>(0.23183605484183367))) AND (CAST(rt0.c3 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c4 END IN ())) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((rt0.c2)>=(rt0.c2)) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((((((vt0.c0)/(rt0.c0)))AND('')))OR(((((rt0.c3)OR(rt0.c2)))AND(vt1.c0)))) ORDER BY ((((rt0.c1)<=(rt0.c4))) NOT BETWEEN (((rt0.c3)>(0.23183605484183367))) AND (CAST(rt0.c3 AS BLOB)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((rt0.c2)>=(rt0.c2)) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((((((vt0.c0)/(rt0.c0)))AND('')))OR(((((rt0.c3)OR(rt0.c2)))AND(vt1.c0)))) WHERE ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c4 END IN ())) ORDER BY ((((rt0.c1)<=(rt0.c4))) NOT BETWEEN (((rt0.c3)>(0.23183605484183367))) AND (CAST(rt0.c3 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c4 END IN ())) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((rt0.c2)>=(rt0.c2)) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((((((vt0.c0)/(rt0.c0)))AND('')))OR(((((rt0.c3)OR(rt0.c2)))AND(vt1.c0)))) ORDER BY ((((rt0.c1)<=(rt0.c4))) NOT BETWEEN (((rt0.c3)>(0.23183605484183367))) AND (CAST(rt0.c3 AS BLOB)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((rt0.c2)>=(rt0.c2)) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((((((vt0.c0)/(rt0.c0)))AND('')))OR(((((rt0.c3)OR(rt0.c2)))AND(vt1.c0)))) WHERE ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c4 END IN ())) ORDER BY ((((rt0.c1)<=(rt0.c4))) NOT BETWEEN (((rt0.c3)>(0.23183605484183367))) AND (CAST(rt0.c3 AS BLOB)))  NULLS LAST;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c0 THEN vt1.c0 END) NOTNULL) WHERE (vt1.c0) ORDER BY TIME((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((NULL))), ((rt0.c4) NOT BETWEEN (rt0.c1) AND (vt1.c0)), ((rt0.c4)==(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c0 THEN vt1.c0 END) NOTNULL) ORDER BY TIME((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((NULL))), ((rt0.c4) NOT BETWEEN (rt0.c1) AND (vt1.c0)), ((rt0.c4)=(rt0.c1))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c0 THEN vt1.c0 END) NOTNULL) WHERE (vt1.c0) ORDER BY TIME((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((NULL))), ((rt0.c4) NOT BETWEEN (rt0.c1) AND (vt1.c0)), ((rt0.c4)==(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c0 THEN vt1.c0 END) NOTNULL) ORDER BY TIME((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((NULL))), ((rt0.c4) NOT BETWEEN (rt0.c1) AND (vt1.c0)), ((rt0.c4)=(rt0.c1))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c0 THEN vt1.c0 END) NOTNULL) WHERE (vt1.c0) ORDER BY TIME((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((NULL))), ((rt0.c4) NOT BETWEEN (rt0.c1) AND (vt1.c0)), ((rt0.c4)==(rt0.c1)));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE NULL END)/((~ (vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE NULL END)/((~ (vt1.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE NULL END)/((~ (vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE NULL END)/((~ (vt1.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE NULL END)/((~ (vt1.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ('');
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((rt0.c3))!=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((rt0.c3))<>((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((rt0.c3))!=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((rt0.c3))<>((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((rt0.c3))!=((rt0.c2))))));
SELECT * FROM vt0, rt0, vt1 WHERE (((((rt0.c0))>=((rt0.c4))) IN (CASE WHEN rt0.c1 THEN 0.024156797645359718 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0))>=((rt0.c4))) IN (CASE WHEN rt0.c1 THEN 0.024156797645359718 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (((((rt0.c0))>=((rt0.c4))) IN (CASE WHEN rt0.c1 THEN 0.024156797645359718 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0))>=((rt0.c4))) IN (CASE WHEN rt0.c1 THEN 0.024156797645359718 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (((((rt0.c0))>=((rt0.c4))) IN (CASE WHEN rt0.c1 THEN 0.024156797645359718 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((rt0.c4, -2121004286, rt0.c3)) BETWEEN ((rt0.c0, '-1526644265', 1079766675)) AND ((vt1.c0, rt0.c2, rt0.c2))) IN ()) WHERE (((rt0.c4 COLLATE RTRIM)IS NOT(CASE rt0.c1  WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE RTRIM)IS NOT(CASE rt0.c1  WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c4 END))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((rt0.c4, -2121004286, rt0.c3)) BETWEEN ((rt0.c0, '-1526644265', 1079766675)) AND ((vt1.c0, rt0.c2, rt0.c2))) IN ()));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((rt0.c4, -2121004286, rt0.c3)) BETWEEN ((rt0.c0, '-1526644265', 1079766675)) AND ((vt1.c0, rt0.c2, rt0.c2))) IN ()) WHERE (((rt0.c4 COLLATE RTRIM)IS NOT(CASE rt0.c1  WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE RTRIM)IS NOT(CASE rt0.c1  WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c4 END))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((rt0.c4, -2121004286, rt0.c3)) BETWEEN ((rt0.c0, '-1526644265', 1079766675)) AND ((vt1.c0, rt0.c2, rt0.c2))) IN ()));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((rt0.c4, -2121004286, rt0.c3)) BETWEEN ((rt0.c0, '-1526644265', 1079766675)) AND ((vt1.c0, rt0.c2, rt0.c2))) IN ()) WHERE (((rt0.c4 COLLATE RTRIM)IS NOT(CASE rt0.c1  WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c4 END)));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (0.09650257318552002) AND (vt1.c0)))%(((vt1.c0)>>(vt1.c0))))) ORDER BY IFNULL(CAST(vt1.c0 AS BLOB), vt1.c0), (((~ (vt1.c0)))!=(((vt1.c0)<>(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (0.09650257318552002) AND (vt1.c0)))%(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY IFNULL(CAST(vt1.c0 AS BLOB), vt1.c0), (((~ (vt1.c0)))!=(((vt1.c0)!=(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (0.09650257318552002) AND (vt1.c0)))%(((vt1.c0)>>(vt1.c0))))) ORDER BY IFNULL(CAST(vt1.c0 AS BLOB), vt1.c0), (((~ (vt1.c0)))!=(((vt1.c0)<>(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (0.09650257318552002) AND (vt1.c0)))%(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY IFNULL(CAST(vt1.c0 AS BLOB), vt1.c0), (((~ (vt1.c0)))!=(((vt1.c0)!=(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (0.09650257318552002) AND (vt1.c0)))%(((vt1.c0)>>(vt1.c0))))) ORDER BY IFNULL(CAST(vt1.c0 AS BLOB), vt1.c0), (((~ (vt1.c0)))!=(((vt1.c0)<>(vt1.c0))));
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c2 IN ()))AND(CASE WHEN rt0.c4 THEN 1502158821 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)))AND(((rt0.c1)IS NOT(0.15777573344259976)))))AND(CASE 0.36237723490987284  WHEN 'Q|㌭' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND((rt0.c4 IN ())))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c2 IN ()))AND(CASE WHEN rt0.c4 THEN 1502158821 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)))AND(((rt0.c1)IS NOT(0.15777573344259976)))))AND(CASE 0.36237723490987284  WHEN 'Q|㌭' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c2 IN ()))AND(CASE WHEN rt0.c4 THEN 1502158821 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)))AND(((rt0.c1)IS NOT(0.15777573344259976)))))AND(CASE 0.36237723490987284  WHEN 'Q|㌭' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND((rt0.c4 IN ())))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c2 IN ()))AND(CASE WHEN rt0.c4 THEN 1502158821 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)))AND(((rt0.c1)IS NOT(0.15777573344259976)))))AND(CASE 0.36237723490987284  WHEN 'Q|㌭' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c2 IN ()))AND(CASE WHEN rt0.c4 THEN 1502158821 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)))AND(((rt0.c1)IS NOT(0.15777573344259976)))))AND(CASE 0.36237723490987284  WHEN 'Q|㌭' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND((rt0.c4 IN ())))) ORDER BY rt0.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('224166977');
SELECT SUM(count) FROM (SELECT ALL (('224166977') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('224166977');
SELECT SUM(count) FROM (SELECT ALL (('224166977') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('224166977');
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN ((((rt0.c4)) NOT BETWEEN ((NULL)) AND ((rt0.c2)))) AND ('-1'))) ORDER BY NULLIF(-1.179810691E9, rt0.c2) COLLATE NOCASE, ((rt0.c0 COLLATE RTRIM)==(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) BETWEEN ((((rt0.c4)) NOT BETWEEN ((NULL)) AND ((rt0.c2)))) AND ('-1'))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULLIF(-1.179810691E9, rt0.c2) COLLATE NOCASE, ((rt0.c0 COLLATE RTRIM)=(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN ((((rt0.c4)) NOT BETWEEN ((NULL)) AND ((rt0.c2)))) AND ('-1'))) ORDER BY NULLIF(-1.179810691E9, rt0.c2) COLLATE NOCASE, ((rt0.c0 COLLATE RTRIM)==(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) BETWEEN ((((rt0.c4)) NOT BETWEEN ((NULL)) AND ((rt0.c2)))) AND ('-1'))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULLIF(-1.179810691E9, rt0.c2) COLLATE NOCASE, ((rt0.c0 COLLATE RTRIM)=(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN ((((rt0.c4)) NOT BETWEEN ((NULL)) AND ((rt0.c2)))) AND ('-1'))) ORDER BY NULLIF(-1.179810691E9, rt0.c2) COLLATE NOCASE, ((rt0.c0 COLLATE RTRIM)==(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((vt1.c0))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT ALL * FROM rt0, vt0 WHERE (CAST(load_extension(rt0.c1, -609094899) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(load_extension(rt0.c1, -609094899) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(load_extension(rt0.c1, -609094899) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(load_extension(rt0.c1, -609094899) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST;
SELECT * FROM rt0, vt1, vt0 WHERE (CASE ((rt0.c1)-(rt0.c0))  WHEN x'' THEN (~ (vt0.c0)) WHEN ((rt0.c3)>('iz')) THEN ((vt1.c0)AND(vt1.c0)) WHEN ((rt0.c1)||(vt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))OR(vt1.c0)) ELSE ((rt0.c0)*('-1894626065')) END) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c4 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)-(rt0.c0))  WHEN x'' THEN (~ (vt0.c0)) WHEN ((rt0.c3)>('iz')) THEN ((vt1.c0)AND(vt1.c0)) WHEN ((rt0.c1)||(vt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))OR(vt1.c0)) ELSE ((rt0.c0)*('-1894626065')) END) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c4 END IN ()) DESC);
SELECT * FROM rt0, vt1, vt0 WHERE (CASE ((rt0.c1)-(rt0.c0))  WHEN x'' THEN (~ (vt0.c0)) WHEN ((rt0.c3)>('iz')) THEN ((vt1.c0)AND(vt1.c0)) WHEN ((rt0.c1)||(vt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))OR(vt1.c0)) ELSE ((rt0.c0)*('-1894626065')) END) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c4 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)-(rt0.c0))  WHEN x'' THEN (~ (vt0.c0)) WHEN ((rt0.c3)>('iz')) THEN ((vt1.c0)AND(vt1.c0)) WHEN ((rt0.c1)||(vt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))OR(vt1.c0)) ELSE ((rt0.c0)*('-1894626065')) END) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c4 END IN ()) DESC);
SELECT * FROM rt0, vt1, vt0 WHERE (CASE ((rt0.c1)-(rt0.c0))  WHEN x'' THEN (~ (vt0.c0)) WHEN ((rt0.c3)>('iz')) THEN ((vt1.c0)AND(vt1.c0)) WHEN ((rt0.c1)||(vt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))OR(vt1.c0)) ELSE ((rt0.c0)*('-1894626065')) END) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c4 END IN ()) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||('0.9968952687141007'))) NOT BETWEEN (NULL) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)>>(vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||('0.9968952687141007'))) NOT BETWEEN (NULL) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>>(vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||('0.9968952687141007'))) NOT BETWEEN (NULL) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)>>(vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||('0.9968952687141007'))) NOT BETWEEN (NULL) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>>(vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||('0.9968952687141007'))) NOT BETWEEN (NULL) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)>>(vt0.c0))) IS TRUE);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c2)&(((vt1.c0) BETWEEN (rt0.c3) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)&(((vt1.c0) BETWEEN (rt0.c3) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c2)&(((vt1.c0) BETWEEN (rt0.c3) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)&(((vt1.c0) BETWEEN (rt0.c3) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c2)&(((vt1.c0) BETWEEN (rt0.c3) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((~ (vt1.c0)))<<(((vt0.c0)IS(NULL)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))<<(((vt0.c0)IS(NULL))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((~ (vt1.c0)))<<(((vt0.c0)IS(NULL)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))<<(((vt0.c0)IS(NULL))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((~ (vt1.c0)))<<(((vt0.c0)IS(NULL)))));
SELECT * FROM rt0, vt1, vt0 WHERE ((((rt0.c1 IN ()))%(rt0.c1))) ORDER BY ((CASE WHEN x'' THEN vt1.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN (((0Xd93970e) NOTNULL)) AND ((rt0.c1 IN (NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))%(rt0.c1))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((CASE WHEN x'' THEN vt1.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN (((0xd93970e) NOTNULL)) AND ((rt0.c1 IN (NULL)))));
SELECT * FROM rt0, vt1, vt0 WHERE ((((rt0.c1 IN ()))%(rt0.c1))) ORDER BY ((CASE WHEN x'' THEN vt1.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN (((0Xd93970e) NOTNULL)) AND ((rt0.c1 IN (NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))%(rt0.c1))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((CASE WHEN x'' THEN vt1.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN (((0xd93970e) NOTNULL)) AND ((rt0.c1 IN (NULL)))));
SELECT * FROM rt0, vt1, vt0 WHERE ((((rt0.c1 IN ()))%(rt0.c1))) ORDER BY ((CASE WHEN x'' THEN vt1.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN (((0Xd93970e) NOTNULL)) AND ((rt0.c1 IN (NULL))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (((+ (rt0.c4)))||(((0.5830268986250886) NOTNULL))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((+ (rt0.c4)))||(((0.5830268986250886) NOTNULL))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (((+ (rt0.c4)))||(((0.5830268986250886) NOTNULL))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((+ (rt0.c4)))||(((0.5830268986250886) NOTNULL))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (((+ (rt0.c4)))||(((0.5830268986250886) NOTNULL))) WHERE (rt0.c0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((rt0.c3)IS(rt0.c2)))%((((((((('')AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS(rt0.c2)))%((((((((('')AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((rt0.c3)IS(rt0.c2)))%((((((((('')AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS(rt0.c2)))%((((((((('')AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((rt0.c3)IS(rt0.c2)))%((((((((('')AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY LIKELY(CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffffd9b2780d ELSE vt0.c0 END) ASC  NULLS LAST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffffd9b2780d ELSE vt0.c0 END) ASC  NULLS LAST, vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY LIKELY(CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffffd9b2780d ELSE vt0.c0 END) ASC  NULLS LAST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffffd9b2780d ELSE vt0.c0 END) ASC  NULLS LAST, vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY LIKELY(CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffffd9b2780d ELSE vt0.c0 END) ASC  NULLS LAST, vt0.c0 DESC;
SELECT * FROM rt0 WHERE (CAST(0.11537297986659789 AS INTEGER)) ORDER BY CASE ((rt0.c0)/(-1.179810691E9))  WHEN (((rt0.c3, x'', rt0.c3))>=((rt0.c2, rt0.c4, rt0.c0))) THEN ((rt0.c4) NOTNULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.11537297986659789 AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0)/(-1.179810691E9))  WHEN (((rt0.c3, x'', rt0.c3))>=((rt0.c2, rt0.c4, rt0.c0))) THEN ((rt0.c4) NOTNULL) END DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(0.11537297986659789 AS INTEGER)) ORDER BY CASE ((rt0.c0)/(-1.179810691E9))  WHEN (((rt0.c3, x'', rt0.c3))>=((rt0.c2, rt0.c4, rt0.c0))) THEN ((rt0.c4) NOTNULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.11537297986659789 AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0)/(-1.179810691E9))  WHEN (((rt0.c3, x'', rt0.c3))>=((rt0.c2, rt0.c4, rt0.c0))) THEN ((rt0.c4) NOTNULL) END DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(0.11537297986659789 AS INTEGER)) ORDER BY CASE ((rt0.c0)/(-1.179810691E9))  WHEN (((rt0.c3, x'', rt0.c3))>=((rt0.c2, rt0.c4, rt0.c0))) THEN ((rt0.c4) NOTNULL) END DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (rt0.c4 IN ()) COLLATE BINARY WHERE (vt0.c0) ORDER BY (((rt0.c1 IN ())) IS FALSE), ((rt0.c4) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (rt0.c4 IN ()) COLLATE BINARY ORDER BY (((rt0.c1 IN ())) IS FALSE), ((rt0.c4) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (rt0.c4 IN ()) COLLATE BINARY WHERE (vt0.c0) ORDER BY (((rt0.c1 IN ())) IS FALSE), ((rt0.c4) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (rt0.c4 IN ()) COLLATE BINARY ORDER BY (((rt0.c1 IN ())) IS FALSE), ((rt0.c4) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (rt0.c4 IN ()) COLLATE BINARY WHERE (vt0.c0) ORDER BY (((rt0.c1 IN ())) IS FALSE), ((rt0.c4) ISNULL)  NULLS LAST;
SELECT * FROM rt0, vt1 NATURAL JOIN vt0 WHERE (((SQLITE_VERSION())OR((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())OR((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN vt0);
SELECT * FROM rt0, vt1 NATURAL JOIN vt0 WHERE (((SQLITE_VERSION())OR((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())OR((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN vt0);
SELECT * FROM rt0, vt1 NATURAL JOIN vt0 WHERE (((SQLITE_VERSION())OR((~ (rt0.c0)))));
SELECT ALL * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'');
SELECT ALL * FROM vt1 WHERE (0.5818909497300147);
SELECT SUM(count) FROM (SELECT ((0.5818909497300147) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.5818909497300147);
SELECT SUM(count) FROM (SELECT ((0.5818909497300147) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.5818909497300147);
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY NULL COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY NULL COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY NULL COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY NULL COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY NULL COLLATE BINARY DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY CHANGES()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY CHANGES()  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY CHANGES()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY CHANGES()  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY CHANGES()  NULLS LAST;
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((NOT (vt1.c0)) IN (vt1.c0)) WHERE (x'') ORDER BY ((((vt1.c0 COLLATE BINARY)OR(((vt1.c0)>>(vt1.c0)))))OR(((NULL)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((NOT (vt1.c0)) IN (vt1.c0)) ORDER BY ((((vt1.c0 COLLATE BINARY)OR(((vt1.c0)>>(vt1.c0)))))OR(((NULL)%(vt0.c0)))));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((NOT (vt1.c0)) IN (vt1.c0)) WHERE (x'') ORDER BY ((((vt1.c0 COLLATE BINARY)OR(((vt1.c0)>>(vt1.c0)))))OR(((NULL)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((NOT (vt1.c0)) IN (vt1.c0)) ORDER BY ((((vt1.c0 COLLATE BINARY)OR(((vt1.c0)>>(vt1.c0)))))OR(((NULL)%(vt0.c0)))));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((NOT (vt1.c0)) IN (vt1.c0)) WHERE (x'') ORDER BY ((((vt1.c0 COLLATE BINARY)OR(((vt1.c0)>>(vt1.c0)))))OR(((NULL)%(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((- ((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c3 IN ())))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((- ((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c3 IN ())))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((- ((rt0.c3 IN ()))));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((CAST(rt0.c0 AS INTEGER))-((rt0.c2 IN (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER))-((rt0.c2 IN (rt0.c4))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((CAST(rt0.c0 AS INTEGER))-((rt0.c2 IN (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER))-((rt0.c2 IN (rt0.c4))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((CAST(rt0.c0 AS INTEGER))-((rt0.c2 IN (rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((((vt1.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((((vt1.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((((vt1.c0 IN ())) NOTNULL));
SELECT COUNT(*) FROM vt0 NOT INDEXED INNER JOIN rt0 ON ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt1 ON ((((rt0.c3) BETWEEN (rt0.c1) AND (vt0.c0)))=(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END)) WHERE ((+ (((rt0.c1)<(rt0.c2))))) ORDER BY '' DESC, ((((((((CASE '4J굦!QjmS'  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)OR(CAST(rt0.c0 AS TEXT))))AND((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))OR((rt0.c4 IN ()))))AND(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)<(rt0.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt1 ON ((((rt0.c3) BETWEEN (rt0.c1) AND (vt0.c0)))=(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END)) ORDER BY '' DESC, ((((((((CASE '4J굦!QjmS'  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)OR(CAST(rt0.c0 AS TEXT))))AND((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))OR((rt0.c4 IN ()))))AND(rt0.c2)) DESC);
SELECT COUNT(*) FROM vt0 NOT INDEXED INNER JOIN rt0 ON ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt1 ON ((((rt0.c3) BETWEEN (rt0.c1) AND (vt0.c0)))=(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END)) WHERE ((+ (((rt0.c1)<(rt0.c2))))) ORDER BY '' DESC, ((((((((CASE '4J굦!QjmS'  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)OR(CAST(rt0.c0 AS TEXT))))AND((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))OR((rt0.c4 IN ()))))AND(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)<(rt0.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt1 ON ((((rt0.c3) BETWEEN (rt0.c1) AND (vt0.c0)))=(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END)) ORDER BY '' DESC, ((((((((CASE '4J굦!QjmS'  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)OR(CAST(rt0.c0 AS TEXT))))AND((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))OR((rt0.c4 IN ()))))AND(rt0.c2)) DESC);
SELECT COUNT(*) FROM vt0 NOT INDEXED INNER JOIN rt0 ON ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt1 ON ((((rt0.c3) BETWEEN (rt0.c1) AND (vt0.c0)))=(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END)) WHERE ((+ (((rt0.c1)<(rt0.c2))))) ORDER BY '' DESC, ((((((((CASE '4J굦!QjmS'  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)OR(CAST(rt0.c0 AS TEXT))))AND((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))OR((rt0.c4 IN ()))))AND(rt0.c2)) DESC;
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((CAST(rt0.c0 AS REAL)))!=((((vt0.c0) BETWEEN (rt0.c4) AND (vt1.c0))))) WHERE ((0.8845154532820402 IN (((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT (((0.8845154532820402 IN (((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((CAST(rt0.c0 AS REAL)))!=((((vt0.c0) BETWEEN (rt0.c4) AND (vt1.c0))))) ORDER BY rt0.c3);
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((CAST(rt0.c0 AS REAL)))!=((((vt0.c0) BETWEEN (rt0.c4) AND (vt1.c0))))) WHERE ((0.8845154532820402 IN (((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT (((0.8845154532820402 IN (((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((CAST(rt0.c0 AS REAL)))!=((((vt0.c0) BETWEEN (rt0.c4) AND (vt1.c0))))) ORDER BY rt0.c3);
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((CAST(rt0.c0 AS REAL)))!=((((vt0.c0) BETWEEN (rt0.c4) AND (vt1.c0))))) WHERE ((0.8845154532820402 IN (((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY rt0.c3;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)!=(vt1.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((NOT (vt1.c0))))) ORDER BY (~ ((vt0.c0 IN (vt1.c0)))) DESC, CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CASE ''  WHEN NULL THEN '-783145244' ELSE vt1.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)!=(vt1.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ ((vt0.c0 IN (vt1.c0)))) DESC, CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CASE ''  WHEN NULL THEN '-783145244' ELSE vt1.c0 END END ASC);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)!=(vt1.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((NOT (vt1.c0))))) ORDER BY (~ ((vt0.c0 IN (vt1.c0)))) DESC, CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CASE ''  WHEN NULL THEN '-783145244' ELSE vt1.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)!=(vt1.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ ((vt0.c0 IN (vt1.c0)))) DESC, CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CASE ''  WHEN NULL THEN '-783145244' ELSE vt1.c0 END END ASC);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)!=(vt1.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((NOT (vt1.c0))))) ORDER BY (~ ((vt0.c0 IN (vt1.c0)))) DESC, CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CASE ''  WHEN NULL THEN '-783145244' ELSE vt1.c0 END END ASC;
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (((((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2))) AND ((+ (rt0.c0))))) ORDER BY ((((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1))) IS FALSE) DESC, (rt0.c4 IN ())  NULLS LAST, ((rt0.c1 COLLATE NOCASE)+(rt0.c4)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) BETWEEN (((((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2))) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0 ORDER BY ((((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1))) IS FALSE) DESC, (rt0.c4 IN ())  NULLS LAST, ((rt0.c1 COLLATE NOCASE)+(rt0.c4)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (((((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2))) AND ((+ (rt0.c0))))) ORDER BY ((((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1))) IS FALSE) DESC, (rt0.c4 IN ())  NULLS LAST, ((rt0.c1 COLLATE NOCASE)+(rt0.c4)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) BETWEEN (((((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2))) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0 ORDER BY ((((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1))) IS FALSE) DESC, (rt0.c4 IN ())  NULLS LAST, ((rt0.c1 COLLATE NOCASE)+(rt0.c4)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (((((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2))) AND ((+ (rt0.c0))))) ORDER BY ((((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1))) IS FALSE) DESC, (rt0.c4 IN ())  NULLS LAST, ((rt0.c1 COLLATE NOCASE)+(rt0.c4)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (TRIM(vt1.c0, vt1.c0) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(vt1.c0, vt1.c0) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(vt1.c0, vt1.c0) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(vt1.c0, vt1.c0) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(vt1.c0, vt1.c0) COLLATE RTRIM COLLATE NOCASE);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((json_object(vt1.c0, vt0.c0, rt0.c2, rt0.c0))>('0.35617523854098454')));
SELECT SUM(count) FROM (SELECT ((((json_object(vt1.c0, vt0.c0, rt0.c2, rt0.c0))>('0.35617523854098454'))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((json_object(vt1.c0, vt0.c0, rt0.c2, rt0.c0))>('0.35617523854098454')));
SELECT SUM(count) FROM (SELECT ((((json_object(vt1.c0, vt0.c0, rt0.c2, rt0.c0))>('0.35617523854098454'))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c4) NOTNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4) NOTNULL) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c4) NOTNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4) NOTNULL) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c4) NOTNULL) COLLATE NOCASE;
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)LIKE(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR((((vt1.c0))>=((vt1.c0)))))) ORDER BY ((((NOT (vt1.c0))))<=((CAST(vt1.c0 AS REAL)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)LIKE(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR((((vt1.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((NOT (vt1.c0))))<=((CAST(vt1.c0 AS REAL)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)LIKE(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR((((vt1.c0))>=((vt1.c0)))))) ORDER BY ((((NOT (vt1.c0))))<=((CAST(vt1.c0 AS REAL)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)LIKE(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR((((vt1.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((NOT (vt1.c0))))<=((CAST(vt1.c0 AS REAL)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)LIKE(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR((((vt1.c0))>=((vt1.c0)))))) ORDER BY ((((NOT (vt1.c0))))<=((CAST(vt1.c0 AS REAL)))) ASC;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))LIKE((~ (vt0.c0))))) ORDER BY ((((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)OR(CAST(vt1.c0 AS TEXT))))AND(CAST(vt1.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))LIKE((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)OR(CAST(vt1.c0 AS TEXT))))AND(CAST(vt1.c0 AS TEXT))) ASC  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))LIKE((~ (vt0.c0))))) ORDER BY ((((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)OR(CAST(vt1.c0 AS TEXT))))AND(CAST(vt1.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))LIKE((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)OR(CAST(vt1.c0 AS TEXT))))AND(CAST(vt1.c0 AS TEXT))) ASC  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))LIKE((~ (vt0.c0))))) ORDER BY ((((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)OR(CAST(vt1.c0 AS TEXT))))AND(CAST(vt1.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN (HEX(rt0.c1)) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) NOT BETWEEN (HEX(rt0.c1)) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN (HEX(rt0.c1)) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) NOT BETWEEN (HEX(rt0.c1)) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN (HEX(rt0.c1)) AND (rt0.c2 COLLATE RTRIM)));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0 IN ()))AND((~ (vt1.c0)))))OR((vt1.c0 IN ()))), ((((vt1.c0)AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND((vt1.c0 IN (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0 IN ()))AND((~ (vt1.c0)))))OR((vt1.c0 IN ()))), ((((vt1.c0)AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND((vt1.c0 IN (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0 IN ()))AND((~ (vt1.c0)))))OR((vt1.c0 IN ()))), ((((vt1.c0)AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND((vt1.c0 IN (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0 IN ()))AND((~ (vt1.c0)))))OR((vt1.c0 IN ()))), ((((vt1.c0)AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND((vt1.c0 IN (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0 IN ()))AND((~ (vt1.c0)))))OR((vt1.c0 IN ()))), ((((vt1.c0)AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND((vt1.c0 IN (vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((((vt1.c0)<=(rt0.c3))))==(('-784368831'))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)<=(rt0.c3))))==(('-784368831')))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((((vt1.c0)<=(rt0.c3))))==(('-784368831'))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)<=(rt0.c3))))==(('-784368831')))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((((vt1.c0)<=(rt0.c3))))==(('-784368831'))));
SELECT * FROM vt1, rt0 INNER JOIN vt0 ON NULL WHERE ((((((((((rt0.c0)OR('TYdY')))AND(rt0.c3)))OR(rt0.c1)))OR(vt1.c0)) IN (((rt0.c3)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c0)OR('TYdY')))AND(rt0.c3)))OR(rt0.c1)))OR(vt1.c0)) IN (((rt0.c3)>(vt0.c0))))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON NULL);
SELECT * FROM vt1, rt0 INNER JOIN vt0 ON NULL WHERE ((((((((((rt0.c0)OR('TYdY')))AND(rt0.c3)))OR(rt0.c1)))OR(vt1.c0)) IN (((rt0.c3)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c0)OR('TYdY')))AND(rt0.c3)))OR(rt0.c1)))OR(vt1.c0)) IN (((rt0.c3)>(vt0.c0))))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON NULL);
SELECT * FROM vt1, rt0 INNER JOIN vt0 ON NULL WHERE ((((((((((rt0.c0)OR('TYdY')))AND(rt0.c3)))OR(rt0.c1)))OR(vt1.c0)) IN (((rt0.c3)>(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN rt0.c4 COLLATE RTRIM THEN x'9756' END) ORDER BY ((((((((CAST(rt0.c1 AS NUMERIC))AND(' 9')))AND(NULL)))OR('Q/')))AND(((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c4 COLLATE RTRIM THEN x'9756' END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((CAST(rt0.c1 AS NUMERIC))AND(' 9')))AND(NULL)))OR('Q/')))AND(((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN rt0.c4 COLLATE RTRIM THEN x'9756' END) ORDER BY ((((((((CAST(rt0.c1 AS NUMERIC))AND(' 9')))AND(NULL)))OR('Q/')))AND(((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c4 COLLATE RTRIM THEN x'9756' END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((CAST(rt0.c1 AS NUMERIC))AND(' 9')))AND(NULL)))OR('Q/')))AND(((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN rt0.c4 COLLATE RTRIM THEN x'9756' END) ORDER BY ((((((((CAST(rt0.c1 AS NUMERIC))AND(' 9')))AND(NULL)))OR('Q/')))AND(((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (CASE WHEN CAST(rt0.c1 AS REAL) THEN (- (rt0.c2)) END) ORDER BY ((((((((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c4)))AND(((rt0.c4)LIKE(rt0.c3)))))OR(vt1.c0)))OR(((rt0.c4) ISNULL))))OR(rt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS REAL) THEN (- (rt0.c2)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c4)))AND(((rt0.c4)LIKE(rt0.c3)))))OR(vt1.c0)))OR(((rt0.c4) ISNULL))))OR(rt0.c2)) ASC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN CAST(rt0.c1 AS REAL) THEN (- (rt0.c2)) END) ORDER BY ((((((((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c4)))AND(((rt0.c4)LIKE(rt0.c3)))))OR(vt1.c0)))OR(((rt0.c4) ISNULL))))OR(rt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS REAL) THEN (- (rt0.c2)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c4)))AND(((rt0.c4)LIKE(rt0.c3)))))OR(vt1.c0)))OR(((rt0.c4) ISNULL))))OR(rt0.c2)) ASC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN CAST(rt0.c1 AS REAL) THEN (- (rt0.c2)) END) ORDER BY ((((((((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c4)))AND(((rt0.c4)LIKE(rt0.c3)))))OR(vt1.c0)))OR(((rt0.c4) ISNULL))))OR(rt0.c2)) ASC  NULLS FIRST;
SELECT * FROM vt1, rt0, vt0 WHERE (CAST(((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))AND(-1911299128)))AND(rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))AND(-1911299128)))AND(rt0.c1)) AS REAL)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (CAST(((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))AND(-1911299128)))AND(rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))AND(-1911299128)))AND(rt0.c1)) AS REAL)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (CAST(((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))AND(-1911299128)))AND(rt0.c1)) AS REAL));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((~ ((~ (rt0.c2))))) ORDER BY CASE WHEN ((((vt1.c0)OR(rt0.c4)))AND(0.3354626364079072)) THEN IFNULL(DISTINCT rt0.c3, rt0.c4) ELSE ((((((((vt1.c0)AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE WHEN ((((vt1.c0)OR(rt0.c4)))AND(0.3354626364079072)) THEN IFNULL(DISTINCT rt0.c3, rt0.c4) ELSE ((((((((vt1.c0)AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)) END DESC);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((~ ((~ (rt0.c2))))) ORDER BY CASE WHEN ((((vt1.c0)OR(rt0.c4)))AND(0.3354626364079072)) THEN IFNULL(DISTINCT rt0.c3, rt0.c4) ELSE ((((((((vt1.c0)AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE WHEN ((((vt1.c0)OR(rt0.c4)))AND(0.3354626364079072)) THEN IFNULL(DISTINCT rt0.c3, rt0.c4) ELSE ((((((((vt1.c0)AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)) END DESC);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((~ ((~ (rt0.c2))))) ORDER BY CASE WHEN ((((vt1.c0)OR(rt0.c4)))AND(0.3354626364079072)) THEN IFNULL(DISTINCT rt0.c3, rt0.c4) ELSE ((((((((vt1.c0)AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)) END DESC;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN ((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)) THEN (NOT (rt0.c1)) END) ORDER BY CAST(((rt0.c4)&(rt0.c2)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)) THEN (NOT (rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY CAST(((rt0.c4)&(rt0.c2)) AS TEXT) DESC);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN ((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)) THEN (NOT (rt0.c1)) END) ORDER BY CAST(((rt0.c4)&(rt0.c2)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)) THEN (NOT (rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY CAST(((rt0.c4)&(rt0.c2)) AS TEXT) DESC);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN ((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)) THEN (NOT (rt0.c1)) END) ORDER BY CAST(((rt0.c4)&(rt0.c2)) AS TEXT) DESC;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (((vt1.c0) ISNULL)) AND (((vt1.c0)<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (((vt1.c0) ISNULL)) AND (((vt1.c0)<(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (((vt1.c0) ISNULL)) AND (((vt1.c0)<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (((vt1.c0) ISNULL)) AND (((vt1.c0)<(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (((vt1.c0) ISNULL)) AND (((vt1.c0)<(vt1.c0)))));
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CAST(STRFTIME(rt0.c4, '', rt0.c3, rt0.c1, rt0.c3, rt0.c3, rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(STRFTIME(rt0.c4, '', rt0.c3, rt0.c1, rt0.c3, rt0.c3, rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CAST(STRFTIME(rt0.c4, '', rt0.c3, rt0.c1, rt0.c3, rt0.c3, rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(STRFTIME(rt0.c4, '', rt0.c3, rt0.c1, rt0.c3, rt0.c3, rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CAST(STRFTIME(rt0.c4, '', rt0.c3, rt0.c1, rt0.c3, rt0.c3, rt0.c2) AS NUMERIC));
SELECT ALL * FROM rt0, vt0, vt1 WHERE (CASE (~ (rt0.c0))  WHEN TIME(rt0.c4, vt1.c0, rt0.c0, rt0.c4, vt1.c0, 0.14446128726179097, rt0.c1) THEN TOTAL_CHANGES() WHEN (+ (rt0.c4)) THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN ()) THEN ((rt0.c2)|(vt1.c0)) ELSE ((rt0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt0.c0))  WHEN TIME(rt0.c4, vt1.c0, rt0.c0, rt0.c4, vt1.c0, 0.14446128726179097, rt0.c1) THEN TOTAL_CHANGES() WHEN (+ (rt0.c4)) THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN ()) THEN ((rt0.c2)|(vt1.c0)) ELSE ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (CASE (~ (rt0.c0))  WHEN TIME(rt0.c4, vt1.c0, rt0.c0, rt0.c4, vt1.c0, 0.14446128726179097, rt0.c1) THEN TOTAL_CHANGES() WHEN (+ (rt0.c4)) THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN ()) THEN ((rt0.c2)|(vt1.c0)) ELSE ((rt0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt0.c0))  WHEN TIME(rt0.c4, vt1.c0, rt0.c0, rt0.c4, vt1.c0, 0.14446128726179097, rt0.c1) THEN TOTAL_CHANGES() WHEN (+ (rt0.c4)) THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN ()) THEN ((rt0.c2)|(vt1.c0)) ELSE ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (CASE (~ (rt0.c0))  WHEN TIME(rt0.c4, vt1.c0, rt0.c0, rt0.c4, vt1.c0, 0.14446128726179097, rt0.c1) THEN TOTAL_CHANGES() WHEN (+ (rt0.c4)) THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN ()) THEN ((rt0.c2)|(vt1.c0)) ELSE ((rt0.c1) IS FALSE) END);
SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT NULL))OR(((x'6f40') NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT NULL))OR(((x'6f40') NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (NULL))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT NULL))OR(((x'6f40') NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT NULL))OR(((x'6f40') NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (NULL))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT NULL))OR(((x'6f40') NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))));
SELECT * FROM vt1, rt0 WHERE (((vt1.c0)-(CASE rt0.c4  WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)-(CASE rt0.c4  WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((vt1.c0)-(CASE rt0.c4  WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)-(CASE rt0.c4  WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((vt1.c0)-(CASE rt0.c4  WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 END)));
SELECT * FROM vt1, rt0, vt0 WHERE (((NULL)>>(CASE WHEN rt0.c3 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(CASE WHEN rt0.c3 THEN rt0.c0 END))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (((NULL)>>(CASE WHEN rt0.c3 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(CASE WHEN rt0.c3 THEN rt0.c0 END))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (((NULL)>>(CASE WHEN rt0.c3 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0) ISNULL) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<(json_valid(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) ISNULL) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<(json_valid(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0) ISNULL) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<(json_valid(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) ISNULL) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<(json_valid(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0) ISNULL) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<(json_valid(vt0.c0))) DESC;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CASE PRINTF(vt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c1)  WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (0.23969940166005654)) THEN (rt0.c0 IN ()) END INNER JOIN vt1 ON ((((x'') NOT BETWEEN (rt0.c4) AND (rt0.c1))) IS FALSE) WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE rt0.c1 END AS TEXT)) ORDER BY (NOT (((rt0.c1)>(rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE rt0.c1 END AS TEXT)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE PRINTF(vt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c1)  WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (0.23969940166005654)) THEN (rt0.c0 IN ()) END INNER JOIN vt1 ON ((((x'') NOT BETWEEN (rt0.c4) AND (rt0.c1))) IS FALSE) ORDER BY (NOT (((rt0.c1)>(rt0.c4))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CASE PRINTF(vt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c1)  WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (0.23969940166005654)) THEN (rt0.c0 IN ()) END INNER JOIN vt1 ON ((((x'') NOT BETWEEN (rt0.c4) AND (rt0.c1))) IS FALSE) WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE rt0.c1 END AS TEXT)) ORDER BY (NOT (((rt0.c1)>(rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE rt0.c1 END AS TEXT)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE PRINTF(vt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c1)  WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (0.23969940166005654)) THEN (rt0.c0 IN ()) END INNER JOIN vt1 ON ((((x'') NOT BETWEEN (rt0.c4) AND (rt0.c1))) IS FALSE) ORDER BY (NOT (((rt0.c1)>(rt0.c4))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CASE PRINTF(vt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c1)  WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (0.23969940166005654)) THEN (rt0.c0 IN ()) END INNER JOIN vt1 ON ((((x'') NOT BETWEEN (rt0.c4) AND (rt0.c1))) IS FALSE) WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE rt0.c1 END AS TEXT)) ORDER BY (NOT (((rt0.c1)>(rt0.c4))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c3)IS NOT(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN vt1 ON CASE ((rt0.c4) BETWEEN (rt0.c3) AND (0.7232511317609513))  WHEN (rt0.c4 IN (rt0.c0)) THEN (rt0.c4 IN ()) WHEN (rt0.c1 IN ()) THEN ((rt0.c4)|(rt0.c4)) WHEN ((rt0.c3) ISNULL) THEN (((rt0.c4)) NOT BETWEEN ((NULL)) AND ((rt0.c2))) END WHERE (((vt0.c0)OR(rt0.c0)) COLLATE RTRIM) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(-2.121004286E9)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c3)IS NOT(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN vt1 ON CASE ((rt0.c4) BETWEEN (rt0.c3) AND (0.7232511317609513))  WHEN (rt0.c4 IN (rt0.c0)) THEN (rt0.c4 IN ()) WHEN (rt0.c1 IN ()) THEN ((rt0.c4)|(rt0.c4)) WHEN ((rt0.c3) ISNULL) THEN (((rt0.c4)) NOT BETWEEN ((NULL)) AND ((rt0.c2))) END ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(-2.121004286E9)) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c3)IS NOT(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN vt1 ON CASE ((rt0.c4) BETWEEN (rt0.c3) AND (0.7232511317609513))  WHEN (rt0.c4 IN (rt0.c0)) THEN (rt0.c4 IN ()) WHEN (rt0.c1 IN ()) THEN ((rt0.c4)|(rt0.c4)) WHEN ((rt0.c3) ISNULL) THEN (((rt0.c4)) NOT BETWEEN ((NULL)) AND ((rt0.c2))) END WHERE (((vt0.c0)OR(rt0.c0)) COLLATE RTRIM) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(-2.121004286E9)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c3)IS NOT(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN vt1 ON CASE ((rt0.c4) BETWEEN (rt0.c3) AND (0.7232511317609513))  WHEN (rt0.c4 IN (rt0.c0)) THEN (rt0.c4 IN ()) WHEN (rt0.c1 IN ()) THEN ((rt0.c4)|(rt0.c4)) WHEN ((rt0.c3) ISNULL) THEN (((rt0.c4)) NOT BETWEEN ((NULL)) AND ((rt0.c2))) END ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(-2.121004286E9)) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c3)IS NOT(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN vt1 ON CASE ((rt0.c4) BETWEEN (rt0.c3) AND (0.7232511317609513))  WHEN (rt0.c4 IN (rt0.c0)) THEN (rt0.c4 IN ()) WHEN (rt0.c1 IN ()) THEN ((rt0.c4)|(rt0.c4)) WHEN ((rt0.c3) ISNULL) THEN (((rt0.c4)) NOT BETWEEN ((NULL)) AND ((rt0.c2))) END WHERE (((vt0.c0)OR(rt0.c0)) COLLATE RTRIM) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(-2.121004286E9)) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(0.7122451108441495)))AND('')))AND(vt0.c0)))<((('')==(vt1.c0))))) ORDER BY (((((vt0.c0)OR(vt1.c0))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(0.7122451108441495)))AND('')))AND(vt0.c0)))<((('')=(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)OR(vt1.c0))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(0.7122451108441495)))AND('')))AND(vt0.c0)))<((('')==(vt1.c0))))) ORDER BY (((((vt0.c0)OR(vt1.c0))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(0.7122451108441495)))AND('')))AND(vt0.c0)))<((('')=(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)OR(vt1.c0))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(0.7122451108441495)))AND('')))AND(vt0.c0)))<((('')==(vt1.c0))))) ORDER BY (((((vt0.c0)OR(vt1.c0))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((((((rt0.c2))=((rt0.c1))))AND(CASE WHEN '┕~' THEN rt0.c2 WHEN rt0.c4 THEN x'' WHEN rt0.c3 THEN x'a8b7' ELSE rt0.c0 END)))AND(rt0.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c2))=((rt0.c1))))AND(CASE WHEN '┕~' THEN rt0.c2 WHEN rt0.c4 THEN x'' WHEN rt0.c3 THEN x'a8b7' ELSE rt0.c0 END)))AND(rt0.c1 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((((((rt0.c2))=((rt0.c1))))AND(CASE WHEN '┕~' THEN rt0.c2 WHEN rt0.c4 THEN x'' WHEN rt0.c3 THEN x'a8b7' ELSE rt0.c0 END)))AND(rt0.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c2))=((rt0.c1))))AND(CASE WHEN '┕~' THEN rt0.c2 WHEN rt0.c4 THEN x'' WHEN rt0.c3 THEN x'a8b7' ELSE rt0.c0 END)))AND(rt0.c1 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((((((rt0.c2))=((rt0.c1))))AND(CASE WHEN '┕~' THEN rt0.c2 WHEN rt0.c4 THEN x'' WHEN rt0.c3 THEN x'a8b7' ELSE rt0.c0 END)))AND(rt0.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4)<<(rt0.c4)))IS NOT(json_array(rt0.c4, rt0.c3, rt0.c1, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)<<(rt0.c4)))IS NOT(json_array(rt0.c4, rt0.c3, rt0.c1, rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4)<<(rt0.c4)))IS NOT(json_array(rt0.c4, rt0.c3, rt0.c1, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)<<(rt0.c4)))IS NOT(json_array(rt0.c4, rt0.c3, rt0.c1, rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4)<<(rt0.c4)))IS NOT(json_array(rt0.c4, rt0.c3, rt0.c1, rt0.c1))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((- ('C^Y!0-/V')))%(rt0.c4)) CROSS JOIN rt0 ON (- ('')) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((- ('C^Y!0-/V')))%(rt0.c4)) CROSS JOIN rt0 ON (- ('')));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((- ('C^Y!0-/V')))%(rt0.c4)) CROSS JOIN rt0 ON (- ('')) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((- ('C^Y!0-/V')))%(rt0.c4)) CROSS JOIN rt0 ON (- ('')));
SELECT * FROM vt1, vt0, rt0 WHERE (((((CAST(rt0.c0 AS NUMERIC))AND(x'9937')))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS NUMERIC))AND(x'9937')))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0 WHERE (((((CAST(rt0.c0 AS NUMERIC))AND(x'9937')))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS NUMERIC))AND(x'9937')))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0 WHERE (((((CAST(rt0.c0 AS NUMERIC))AND(x'9937')))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) IN ((0Xffffffff92d0e5a7 IN ()), CAST(rt0.c2 AS REAL)))) ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) IN ((0xffffffff92d0e5a7 IN ()), CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) IN ((0Xffffffff92d0e5a7 IN ()), CAST(rt0.c2 AS REAL)))) ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) IN ((0xffffffff92d0e5a7 IN ()), CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) IN ((0Xffffffff92d0e5a7 IN ()), CAST(rt0.c2 AS REAL)))) ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END) IS TRUE) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END) IS TRUE));
SELECT COUNT(*) FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END) IS TRUE) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END) IS TRUE));
SELECT COUNT(*) FROM vt1, rt0 FULL OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END) IS TRUE) WHERE (rt0.c4);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((vt1.c0)AND(vt0.c0)))OR('-993054195'))))<>(('-971469757')))) ORDER BY ((IFNULL(DISTINCT vt0.c0, vt1.c0)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0)AND(vt0.c0)))OR('-993054195'))))!=(('-971469757')))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((IFNULL(DISTINCT vt0.c0, vt1.c0)) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((vt1.c0)AND(vt0.c0)))OR('-993054195'))))<>(('-971469757')))) ORDER BY ((IFNULL(DISTINCT vt0.c0, vt1.c0)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0)AND(vt0.c0)))OR('-993054195'))))!=(('-971469757')))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((IFNULL(DISTINCT vt0.c0, vt1.c0)) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((vt1.c0)AND(vt0.c0)))OR('-993054195'))))<>(('-971469757')))) ORDER BY ((IFNULL(DISTINCT vt0.c0, vt1.c0)) ISNULL)  NULLS LAST;
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((((((((rt0.c0, NULL, rt0.c2)) BETWEEN ((rt0.c4, vt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c3, x''))))AND((rt0.c0 IN ()))))AND(((vt0.c0)LIKE(vt0.c0)))))OR((((rt0.c3))<((rt0.c4))))))AND(NULL COLLATE BINARY))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CAST(rt0.c2 AS TEXT) WHEN (~ (rt0.c2)) THEN ((rt0.c0) NOTNULL) WHEN ((vt0.c0) IS TRUE) THEN 'w&''' ELSE (- (rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0, NULL, rt0.c2)) BETWEEN ((rt0.c4, vt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c3, x''))))AND((rt0.c0 IN ()))))AND(((vt0.c0)LIKE(vt0.c0)))))OR((((rt0.c3))<((rt0.c4))))))AND(NULL COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CAST(rt0.c2 AS TEXT) WHEN (~ (rt0.c2)) THEN ((rt0.c0) NOTNULL) WHEN ((vt0.c0) IS TRUE) THEN 'w&''' ELSE (- (rt0.c0)) END  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((((((((rt0.c0, NULL, rt0.c2)) BETWEEN ((rt0.c4, vt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c3, x''))))AND((rt0.c0 IN ()))))AND(((vt0.c0)LIKE(vt0.c0)))))OR((((rt0.c3))<((rt0.c4))))))AND(NULL COLLATE BINARY))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CAST(rt0.c2 AS TEXT) WHEN (~ (rt0.c2)) THEN ((rt0.c0) NOTNULL) WHEN ((vt0.c0) IS TRUE) THEN 'w&''' ELSE (- (rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0, NULL, rt0.c2)) BETWEEN ((rt0.c4, vt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c3, x''))))AND((rt0.c0 IN ()))))AND(((vt0.c0)LIKE(vt0.c0)))))OR((((rt0.c3))<((rt0.c4))))))AND(NULL COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CAST(rt0.c2 AS TEXT) WHEN (~ (rt0.c2)) THEN ((rt0.c0) NOTNULL) WHEN ((vt0.c0) IS TRUE) THEN 'w&''' ELSE (- (rt0.c0)) END  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((((((((rt0.c0, NULL, rt0.c2)) BETWEEN ((rt0.c4, vt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c3, x''))))AND((rt0.c0 IN ()))))AND(((vt0.c0)LIKE(vt0.c0)))))OR((((rt0.c3))<((rt0.c4))))))AND(NULL COLLATE BINARY))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CAST(rt0.c2 AS TEXT) WHEN (~ (rt0.c2)) THEN ((rt0.c0) NOTNULL) WHEN ((vt0.c0) IS TRUE) THEN 'w&''' ELSE (- (rt0.c0)) END  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON highlight((((NULL, vt1.c0, rt0.c4))!=((rt0.c0, vt0.c0, vt1.c0))), ((1873478685) BETWEEN (rt0.c0) AND (rt0.c3)), (+ (rt0.c3)), ((((((((rt0.c3)OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0))) RIGHT OUTER JOIN vt1 ON rt0.c0 WHERE ((((((((((+ (rt0.c1)))AND(((rt0.c3) IS FALSE))))AND(((vt1.c0) IS TRUE))))AND(((((rt0.c1)AND(vt0.c0)))OR(vt1.c0)))))OR((rt0.c4 IN ())))) ORDER BY (((rt0.c4, vt1.c0, vt1.c0)) NOT BETWEEN ((((rt0.c3) IS FALSE), rt0.c4, (+ (rt0.c0)))) AND (((vt0.c0 IN ()), CAST(vt0.c0 AS INTEGER), rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c1)))AND(((rt0.c3) IS FALSE))))AND(((vt1.c0) IS TRUE))))AND(((((rt0.c1)AND(vt0.c0)))OR(vt1.c0)))))OR((rt0.c4 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON highlight((((NULL, vt1.c0, rt0.c4))!=((rt0.c0, vt0.c0, vt1.c0))), ((1873478685) BETWEEN (rt0.c0) AND (rt0.c3)), (+ (rt0.c3)), ((((((((rt0.c3)OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0))) RIGHT OUTER JOIN vt1 ON rt0.c0 ORDER BY (((rt0.c4, vt1.c0, vt1.c0)) NOT BETWEEN ((((rt0.c3) IS FALSE), rt0.c4, (+ (rt0.c0)))) AND (((vt0.c0 IN ()), CAST(vt0.c0 AS INTEGER), rt0.c1 COLLATE BINARY))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON highlight((((NULL, vt1.c0, rt0.c4))!=((rt0.c0, vt0.c0, vt1.c0))), ((1873478685) BETWEEN (rt0.c0) AND (rt0.c3)), (+ (rt0.c3)), ((((((((rt0.c3)OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0))) RIGHT OUTER JOIN vt1 ON rt0.c0 WHERE ((((((((((+ (rt0.c1)))AND(((rt0.c3) IS FALSE))))AND(((vt1.c0) IS TRUE))))AND(((((rt0.c1)AND(vt0.c0)))OR(vt1.c0)))))OR((rt0.c4 IN ())))) ORDER BY (((rt0.c4, vt1.c0, vt1.c0)) NOT BETWEEN ((((rt0.c3) IS FALSE), rt0.c4, (+ (rt0.c0)))) AND (((vt0.c0 IN ()), CAST(vt0.c0 AS INTEGER), rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c1)))AND(((rt0.c3) IS FALSE))))AND(((vt1.c0) IS TRUE))))AND(((((rt0.c1)AND(vt0.c0)))OR(vt1.c0)))))OR((rt0.c4 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON highlight((((NULL, vt1.c0, rt0.c4))!=((rt0.c0, vt0.c0, vt1.c0))), ((1873478685) BETWEEN (rt0.c0) AND (rt0.c3)), (+ (rt0.c3)), ((((((((rt0.c3)OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0))) RIGHT OUTER JOIN vt1 ON rt0.c0 ORDER BY (((rt0.c4, vt1.c0, vt1.c0)) NOT BETWEEN ((((rt0.c3) IS FALSE), rt0.c4, (+ (rt0.c0)))) AND (((vt0.c0 IN ()), CAST(vt0.c0 AS INTEGER), rt0.c1 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c0, '-1943308415', vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))) THEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, '-1943308415', vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))) THEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c0, '-1943308415', vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))) THEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, '-1943308415', vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))) THEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c0, '-1943308415', vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))) THEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END);
SELECT ALL * FROM vt1 WHERE (((((('舉9')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT NULL)) ORDER BY vt1.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((('舉9')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE (((((('舉9')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT NULL)) ORDER BY vt1.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((('舉9')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE (((((('舉9')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT NULL)) ORDER BY vt1.c0 COLLATE BINARY;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0);
SELECT * FROM vt0 WHERE (CASE 0Xffffffffd1d31eed  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN NULL WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) ORDER BY (((((vt0.c0))<((vt0.c0))))!=((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE 0Xffffffffd1d31eed  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN NULL WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))<((vt0.c0))))!=((vt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE 0Xffffffffd1d31eed  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN NULL WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) ORDER BY (((((vt0.c0))<((vt0.c0))))!=((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE 0Xffffffffd1d31eed  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN NULL WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))<((vt0.c0))))!=((vt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE 0Xffffffffd1d31eed  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN NULL WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) ORDER BY (((((vt0.c0))<((vt0.c0))))!=((vt0.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (-6.4933075E7 COLLATE RTRIM) ORDER BY ((vt1.c0 COLLATE NOCASE)+(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((-6.4933075E7 COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)+(vt1.c0)) DESC);
SELECT ALL * FROM vt1 WHERE (-6.4933075E7 COLLATE RTRIM) ORDER BY ((vt1.c0 COLLATE NOCASE)+(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((-6.4933075E7 COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)+(vt1.c0)) DESC);
SELECT ALL * FROM vt1 WHERE (-6.4933075E7 COLLATE RTRIM) ORDER BY ((vt1.c0 COLLATE NOCASE)+(vt1.c0)) DESC;
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN 0.8220801870013805 THEN vt1.c0 ELSE vt1.c0 END)/((((vt1.c0))=(('')))))) ORDER BY (+ ((- (vt1.c0)))), ((((vt1.c0)IS(vt1.c0)))<((vt1.c0 IN (vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.8220801870013805 THEN vt1.c0 ELSE vt1.c0 END)/((((vt1.c0))==(('')))))) IS TRUE)  as count FROM vt1 ORDER BY (+ ((- (vt1.c0)))), ((((vt1.c0)IS(vt1.c0)))<((vt1.c0 IN (vt1.c0, vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN 0.8220801870013805 THEN vt1.c0 ELSE vt1.c0 END)/((((vt1.c0))=(('')))))) ORDER BY (+ ((- (vt1.c0)))), ((((vt1.c0)IS(vt1.c0)))<((vt1.c0 IN (vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.8220801870013805 THEN vt1.c0 ELSE vt1.c0 END)/((((vt1.c0))==(('')))))) IS TRUE)  as count FROM vt1 ORDER BY (+ ((- (vt1.c0)))), ((((vt1.c0)IS(vt1.c0)))<((vt1.c0 IN (vt1.c0, vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN 0.8220801870013805 THEN vt1.c0 ELSE vt1.c0 END)/((((vt1.c0))=(('')))))) ORDER BY (+ ((- (vt1.c0)))), ((((vt1.c0)IS(vt1.c0)))<((vt1.c0 IN (vt1.c0, vt1.c0))));
SELECT * FROM vt1, rt0, vt0 WHERE ((NOT ('227776270')));
SELECT SUM(count) FROM (SELECT (((NOT ('227776270'))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE ((NOT ('227776270')));
SELECT SUM(count) FROM (SELECT (((NOT ('227776270'))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE ((NOT ('227776270')));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)) BETWEEN ((rt0.c2)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((rt0.c2)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)) BETWEEN ((rt0.c2)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((rt0.c2)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)) BETWEEN ((rt0.c2)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))));
SELECT * FROM vt1 INNER JOIN vt0 ON CASE (+ (vt1.c0))  WHEN vt0.c0 COLLATE BINARY THEN ((vt1.c0)IS NOT('HH')) END WHERE (LTRIM(vt0.c0, vt1.c0) COLLATE BINARY) ORDER BY CASE (- (vt0.c0))  WHEN ((vt1.c0)>(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(vt0.c0, vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE (+ (vt1.c0))  WHEN vt0.c0 COLLATE BINARY THEN ((vt1.c0)IS NOT('HH')) END ORDER BY CASE (- (vt0.c0))  WHEN ((vt1.c0)>(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END END ASC  NULLS LAST);
SELECT * FROM vt1 INNER JOIN vt0 ON CASE (+ (vt1.c0))  WHEN vt0.c0 COLLATE BINARY THEN ((vt1.c0)IS NOT('HH')) END WHERE (LTRIM(vt0.c0, vt1.c0) COLLATE BINARY) ORDER BY CASE (- (vt0.c0))  WHEN ((vt1.c0)>(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(vt0.c0, vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE (+ (vt1.c0))  WHEN vt0.c0 COLLATE BINARY THEN ((vt1.c0)IS NOT('HH')) END ORDER BY CASE (- (vt0.c0))  WHEN ((vt1.c0)>(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END END ASC  NULLS LAST);
SELECT * FROM vt1 INNER JOIN vt0 ON CASE (+ (vt1.c0))  WHEN vt0.c0 COLLATE BINARY THEN ((vt1.c0)IS NOT('HH')) END WHERE (LTRIM(vt0.c0, vt1.c0) COLLATE BINARY) ORDER BY CASE (- (vt0.c0))  WHEN ((vt1.c0)>(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END END ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ('AA');
SELECT SUM(count) FROM (SELECT (('AA') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('AA');
SELECT SUM(count) FROM (SELECT (('AA') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('AA');
SELECT * FROM vt0, rt0 WHERE (((CASE 0.5600363494528264  WHEN x'b2f2' THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))<>(((rt0.c3) BETWEEN (x'd43b') AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.5600363494528264  WHEN x'b2f2' THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))<>(((rt0.c3) BETWEEN (x'd43b') AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((CASE 0.5600363494528264  WHEN x'b2f2' THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))<>(((rt0.c3) BETWEEN (x'd43b') AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.5600363494528264  WHEN x'b2f2' THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))<>(((rt0.c3) BETWEEN (x'd43b') AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((CASE 0.5600363494528264  WHEN x'b2f2' THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))<>(((rt0.c3) BETWEEN (x'd43b') AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (UPPER(DISTINCT vt1.c0));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (UPPER(DISTINCT vt1.c0));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (UPPER(DISTINCT vt1.c0));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON 0.9144721973107307 WHERE (((((vt1.c0)OR((((rt0.c0))<((rt0.c0))))))OR((('-1265920966')IS(x''))))) ORDER BY (((rt0.c1)) BETWEEN (((vt1.c0 IN (rt0.c0, rt0.c1)))) AND (((rt0.c1 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR((((rt0.c0))<((rt0.c0))))))OR((('-1265920966')IS(x''))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON 0.9144721973107307 ORDER BY (((rt0.c1)) BETWEEN (((vt1.c0 IN (rt0.c0, rt0.c1)))) AND (((rt0.c1 IN (rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON 0.9144721973107307 WHERE (((((vt1.c0)OR((((rt0.c0))<((rt0.c0))))))OR((('-1265920966')IS(x''))))) ORDER BY (((rt0.c1)) BETWEEN (((vt1.c0 IN (rt0.c0, rt0.c1)))) AND (((rt0.c1 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR((((rt0.c0))<((rt0.c0))))))OR((('-1265920966')IS(x''))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON 0.9144721973107307 ORDER BY (((rt0.c1)) BETWEEN (((vt1.c0 IN (rt0.c0, rt0.c1)))) AND (((rt0.c1 IN (rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON 0.9144721973107307 WHERE (((((vt1.c0)OR((((rt0.c0))<((rt0.c0))))))OR((('-1265920966')IS(x''))))) ORDER BY (((rt0.c1)) BETWEEN (((vt1.c0 IN (rt0.c0, rt0.c1)))) AND (((rt0.c1 IN (rt0.c1)))));
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON (((vt0.c0))==((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))))) WHERE (((CASE x''  WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c4 THEN 0.9727100656509894 WHEN rt0.c1 THEN rt0.c2 END)%((((rt0.c3))!=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c4 THEN 0.9727100656509894 WHEN rt0.c1 THEN rt0.c2 END)%((((rt0.c3))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON (((vt0.c0))=((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))))));
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON (((vt0.c0))==((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))))) WHERE (((CASE x''  WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c4 THEN 0.9727100656509894 WHEN rt0.c1 THEN rt0.c2 END)%((((rt0.c3))!=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c4 THEN 0.9727100656509894 WHEN rt0.c1 THEN rt0.c2 END)%((((rt0.c3))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON (((vt0.c0))=((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))))));
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON (((vt0.c0))==((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))))) WHERE (((CASE x''  WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c4 THEN 0.9727100656509894 WHEN rt0.c1 THEN rt0.c2 END)%((((rt0.c3))!=((vt0.c0))))));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((RTRIM(vt0.c0))) AND ((CASE rt0.c4  WHEN 0Xffffffffee119809 THEN rt0.c3 ELSE vt1.c0 END)))) ORDER BY LOWER((rt0.c1 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((RTRIM(vt0.c0))) AND ((CASE rt0.c4  WHEN 0xffffffffee119809 THEN rt0.c3 ELSE vt1.c0 END)))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY LOWER((rt0.c1 IN ())) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((RTRIM(vt0.c0))) AND ((CASE rt0.c4  WHEN 0Xffffffffee119809 THEN rt0.c3 ELSE vt1.c0 END)))) ORDER BY LOWER((rt0.c1 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((RTRIM(vt0.c0))) AND ((CASE rt0.c4  WHEN 0xffffffffee119809 THEN rt0.c3 ELSE vt1.c0 END)))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY LOWER((rt0.c1 IN ())) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((RTRIM(vt0.c0))) AND ((CASE rt0.c4  WHEN 0Xffffffffee119809 THEN rt0.c3 ELSE vt1.c0 END)))) ORDER BY LOWER((rt0.c1 IN ())) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON '800728341' CROSS JOIN rt0 ON TRIM(((((rt0.c0)AND(vt0.c0)))AND(rt0.c0))) WHERE (((((-0.0)LIKE(rt0.c3))) NOT NULL)) ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((-0.0)LIKE(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON '800728341' CROSS JOIN rt0 ON TRIM(((((rt0.c0)AND(vt0.c0)))AND(rt0.c0))) ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON '800728341' CROSS JOIN rt0 ON TRIM(((((rt0.c0)AND(vt0.c0)))AND(rt0.c0))) WHERE (((((-0.0)LIKE(rt0.c3))) NOT NULL)) ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((-0.0)LIKE(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON '800728341' CROSS JOIN rt0 ON TRIM(((((rt0.c0)AND(vt0.c0)))AND(rt0.c0))) ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON '800728341' CROSS JOIN rt0 ON TRIM(((((rt0.c0)AND(vt0.c0)))AND(rt0.c0))) WHERE (((((-0.0)LIKE(rt0.c3))) NOT NULL)) ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE;
SELECT COUNT(*) FROM vt1 WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN (- (vt1.c0)) THEN (((vt1.c0))<((vt1.c0))) WHEN ((vt1.c0) NOTNULL) THEN vt1.c0 WHEN json_valid(vt1.c0) THEN ((vt1.c0) IS TRUE) ELSE ((vt1.c0)<<(NULL)) END) ORDER BY NULL COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN (- (vt1.c0)) THEN (((vt1.c0))<((vt1.c0))) WHEN ((vt1.c0) NOTNULL) THEN vt1.c0 WHEN json_valid(vt1.c0) THEN ((vt1.c0) IS TRUE) ELSE ((vt1.c0)<<(NULL)) END) IS TRUE)  as count FROM vt1 ORDER BY NULL COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt1 WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN (- (vt1.c0)) THEN (((vt1.c0))<((vt1.c0))) WHEN ((vt1.c0) NOTNULL) THEN vt1.c0 WHEN json_valid(vt1.c0) THEN ((vt1.c0) IS TRUE) ELSE ((vt1.c0)<<(NULL)) END) ORDER BY NULL COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN (- (vt1.c0)) THEN (((vt1.c0))<((vt1.c0))) WHEN ((vt1.c0) NOTNULL) THEN vt1.c0 WHEN json_valid(vt1.c0) THEN ((vt1.c0) IS TRUE) ELSE ((vt1.c0)<<(NULL)) END) IS TRUE)  as count FROM vt1 ORDER BY NULL COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt1 WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN (- (vt1.c0)) THEN (((vt1.c0))<((vt1.c0))) WHEN ((vt1.c0) NOTNULL) THEN vt1.c0 WHEN json_valid(vt1.c0) THEN ((vt1.c0) IS TRUE) ELSE ((vt1.c0)<<(NULL)) END) ORDER BY NULL COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'c7e6')) IN (CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'c7e6')) IN (CAST(NULL AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'c7e6')) IN (CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'c7e6')) IN (CAST(NULL AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'c7e6')) IN (CAST(NULL AS TEXT))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (json_quote(CASE WHEN rt0.c0 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(CASE WHEN rt0.c0 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (json_quote(CASE WHEN rt0.c0 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(CASE WHEN rt0.c0 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (json_quote(CASE WHEN rt0.c0 THEN rt0.c0 END));
SELECT ALL * FROM vt1, vt0 WHERE (TIME('-1894626065', (- (vt0.c0)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0Xbcdd1a8))), vt1.c0, ((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((TIME('-1894626065', (- (vt0.c0)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0Xbcdd1a8))), vt1.c0, ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (TIME('-1894626065', (- (vt0.c0)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0Xbcdd1a8))), vt1.c0, ((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((TIME('-1894626065', (- (vt0.c0)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0Xbcdd1a8))), vt1.c0, ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (TIME('-1894626065', (- (vt0.c0)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0Xbcdd1a8))), vt1.c0, ((vt0.c0) IS FALSE)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END)AND(CASE WHEN 0.2396830580514352 THEN rt0.c4 END)))AND(((rt0.c1)>=(rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE RTRIM IN (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END)AND(CASE WHEN 0.2396830580514352 THEN rt0.c4 END)))AND(((rt0.c1)>=(rt0.c3)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END)AND(CASE WHEN 0.2396830580514352 THEN rt0.c4 END)))AND(((rt0.c1)>=(rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE RTRIM IN (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END)AND(CASE WHEN 0.2396830580514352 THEN rt0.c4 END)))AND(((rt0.c1)>=(rt0.c3)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END)AND(CASE WHEN 0.2396830580514352 THEN rt0.c4 END)))AND(((rt0.c1)>=(rt0.c3)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((- (NULL)))LIKE(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((- (NULL)))LIKE(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((- (NULL)))LIKE(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((- (NULL)))LIKE(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((- (NULL)))LIKE(CAST(rt0.c0 AS REAL))));
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)<(vt1.c0)))))AND(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST, (- (CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)<(vt1.c0)))))AND(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST, (- (CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)<(vt1.c0)))))AND(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST, (- (CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)<(vt1.c0)))))AND(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST, (- (CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)<(vt1.c0)))))AND(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST, (- (CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CAST(vt0.c0 AS TEXT)) ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS REAL));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CAST(vt0.c0 AS TEXT)) ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS REAL));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CAST(vt0.c0 AS TEXT)) ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS REAL);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((((NOT (vt1.c0)))GLOB((((rt0.c0, rt0.c1, rt0.c3))<(('59107942', vt0.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0)))GLOB((((rt0.c0, rt0.c1, rt0.c3))<(('59107942', vt0.c0, vt1.c0)))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((((NOT (vt1.c0)))GLOB((((rt0.c0, rt0.c1, rt0.c3))<(('59107942', vt0.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0)))GLOB((((rt0.c0, rt0.c1, rt0.c3))<(('59107942', vt0.c0, vt1.c0)))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((((NOT (vt1.c0)))GLOB((((rt0.c0, rt0.c1, rt0.c3))<(('59107942', vt0.c0, vt1.c0))))));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2) NOT NULL)  WHEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(NULL)) THEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) NOT NULL)  WHEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(NULL)) THEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2) NOT NULL)  WHEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(NULL)) THEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) NOT NULL)  WHEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(NULL)) THEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2) NOT NULL)  WHEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(NULL)) THEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) END);
SELECT * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(271475676))) NOT BETWEEN (((0.536318680959228)AND(rt0.c3))) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))OR(271475676))) NOT BETWEEN (((0.536318680959228)AND(rt0.c3))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(271475676))) NOT BETWEEN (((0.536318680959228)AND(rt0.c3))) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))OR(271475676))) NOT BETWEEN (((0.536318680959228)AND(rt0.c3))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(271475676))) NOT BETWEEN (((0.536318680959228)AND(rt0.c3))) AND ((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY CASE (rt0.c3 IN ())  WHEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 END THEN rt0.c4 END;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (rt0.c3 IN ())  WHEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 END THEN rt0.c4 END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY CASE (rt0.c3 IN ())  WHEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 END THEN rt0.c4 END;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (rt0.c3 IN ())  WHEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 END THEN rt0.c4 END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY CASE (rt0.c3 IN ())  WHEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 END THEN rt0.c4 END;
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((((rt0.c0, NULL, rt0.c0)) BETWEEN ((rt0.c1, vt1.c0, rt0.c4)) AND ((rt0.c4, rt0.c0, rt0.c2)))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (rt0.c0))) ORDER BY ((RTRIM(rt0.c2))&(CAST(rt0.c1 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, NULL, rt0.c0)) BETWEEN ((rt0.c1, vt1.c0, rt0.c4)) AND ((rt0.c4, rt0.c0, rt0.c2)))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (rt0.c0))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((RTRIM(rt0.c2))&(CAST(rt0.c1 AS TEXT))) ASC);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((((rt0.c0, NULL, rt0.c0)) BETWEEN ((rt0.c1, vt1.c0, rt0.c4)) AND ((rt0.c4, rt0.c0, rt0.c2)))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (rt0.c0))) ORDER BY ((RTRIM(rt0.c2))&(CAST(rt0.c1 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, NULL, rt0.c0)) BETWEEN ((rt0.c1, vt1.c0, rt0.c4)) AND ((rt0.c4, rt0.c0, rt0.c2)))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (rt0.c0))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((RTRIM(rt0.c2))&(CAST(rt0.c1 AS TEXT))) ASC);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((((rt0.c0, NULL, rt0.c0)) BETWEEN ((rt0.c1, vt1.c0, rt0.c4)) AND ((rt0.c4, rt0.c0, rt0.c2)))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (rt0.c0))) ORDER BY ((RTRIM(rt0.c2))&(CAST(rt0.c1 AS TEXT))) ASC;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((CAST(rt0.c4 AS REAL))||(((((NULL)OR(rt0.c1)))AND(vt1.c0))))) ORDER BY ((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c4)))OR(vt1.c0)))OR(rt0.c4))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c2 END) AND (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c4 AS REAL))||(((((NULL)OR(rt0.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c4)))OR(vt1.c0)))OR(rt0.c4))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c2 END) AND (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((CAST(rt0.c4 AS REAL))||(((((NULL)OR(rt0.c1)))AND(vt1.c0))))) ORDER BY ((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c4)))OR(vt1.c0)))OR(rt0.c4))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c2 END) AND (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c4 AS REAL))||(((((NULL)OR(rt0.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c4)))OR(vt1.c0)))OR(rt0.c4))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c2 END) AND (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((CAST(rt0.c4 AS REAL))||(((((NULL)OR(rt0.c1)))AND(vt1.c0))))) ORDER BY ((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c4)))OR(vt1.c0)))OR(rt0.c4))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c2 END) AND (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))))  NULLS LAST;
SELECT * FROM vt1 NOT INDEXED, rt0 WHERE (((rt0.c0 IN ()) IN (rt0.c3 COLLATE NOCASE))) ORDER BY NULLIF(((('0.9144721973107307')) NOT BETWEEN ((rt0.c0)) AND ((x''))), (0.24416662996608662 IN (x''))) DESC  NULLS FIRST, CAST(((x'')||(rt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0 ORDER BY NULLIF(((('0.9144721973107307')) NOT BETWEEN ((rt0.c0)) AND ((x''))), (0.24416662996608662 IN (x''))) DESC  NULLS FIRST, CAST(((x'')||(rt0.c0)) AS BLOB));
SELECT * FROM vt1 NOT INDEXED, rt0 WHERE (((rt0.c0 IN ()) IN (rt0.c3 COLLATE NOCASE))) ORDER BY NULLIF(((('0.9144721973107307')) NOT BETWEEN ((rt0.c0)) AND ((x''))), (0.24416662996608662 IN (x''))) DESC  NULLS FIRST, CAST(((x'')||(rt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0 ORDER BY NULLIF(((('0.9144721973107307')) NOT BETWEEN ((rt0.c0)) AND ((x''))), (0.24416662996608662 IN (x''))) DESC  NULLS FIRST, CAST(((x'')||(rt0.c0)) AS BLOB));
SELECT * FROM vt1 NOT INDEXED, rt0 WHERE (((rt0.c0 IN ()) IN (rt0.c3 COLLATE NOCASE))) ORDER BY NULLIF(((('0.9144721973107307')) NOT BETWEEN ((rt0.c0)) AND ((x''))), (0.24416662996608662 IN (x''))) DESC  NULLS FIRST, CAST(((x'')||(rt0.c0)) AS BLOB);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN vt1 WHERE ((((vt1.c0)>(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)>(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN vt1 WHERE ((((vt1.c0)>(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)>(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN vt1 WHERE ((((vt1.c0)>(rt0.c1)) IN ()));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), CAST(rt0.c1 AS TEXT), (('c')|(rt0.c0))))>=((vt1.c0 COLLATE BINARY, CASE WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 END, CAST(rt0.c4 AS BLOB))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), CAST(rt0.c1 AS TEXT), (('c')|(rt0.c0))))>=((vt1.c0 COLLATE BINARY, CASE WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 END, CAST(rt0.c4 AS BLOB))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY rt0.c1);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), CAST(rt0.c1 AS TEXT), (('c')|(rt0.c0))))>=((vt1.c0 COLLATE BINARY, CASE WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 END, CAST(rt0.c4 AS BLOB))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), CAST(rt0.c1 AS TEXT), (('c')|(rt0.c0))))>=((vt1.c0 COLLATE BINARY, CASE WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 END, CAST(rt0.c4 AS BLOB))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY rt0.c1);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), CAST(rt0.c1 AS TEXT), (('c')|(rt0.c0))))>=((vt1.c0 COLLATE BINARY, CASE WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 END, CAST(rt0.c4 AS BLOB))))) ORDER BY rt0.c1;
SELECT * FROM vt0, rt0, vt1 WHERE ((((((((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE ((((((((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE ((((((((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))>>((- (rt0.c3))))) ORDER BY (('')-(rt0.c4)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT))>>((- (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (('')-(rt0.c4)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))>>((- (rt0.c3))))) ORDER BY (('')-(rt0.c4)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT))>>((- (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (('')-(rt0.c4)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))>>((- (rt0.c3))))) ORDER BY (('')-(rt0.c4)) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((((((rt0.c1)OR(CASE WHEN '~V쨈DSjj' THEN rt0.c4 END)))OR(((rt0.c1) ISNULL))))OR(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))))AND((rt0.c3 IN (rt0.c3, vt0.c0))))) ORDER BY (0X1e012804 IN ()) DESC  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c0 END)==(((rt0.c0) NOT BETWEEN (vt0.c0) AND (0.6923057615886118)))), rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR(CASE WHEN '~V쨈DSjj' THEN rt0.c4 END)))OR(((rt0.c1) ISNULL))))OR(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))))AND((rt0.c3 IN (rt0.c3, vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (0X1e012804 IN ()) DESC  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c0 END)=(((rt0.c0) NOT BETWEEN (vt0.c0) AND (0.6923057615886118)))), rt0.c1 ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((((((rt0.c1)OR(CASE WHEN '~V쨈DSjj' THEN rt0.c4 END)))OR(((rt0.c1) ISNULL))))OR(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))))AND((rt0.c3 IN (rt0.c3, vt0.c0))))) ORDER BY (0X1e012804 IN ()) DESC  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c0 END)==(((rt0.c0) NOT BETWEEN (vt0.c0) AND (0.6923057615886118)))), rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR(CASE WHEN '~V쨈DSjj' THEN rt0.c4 END)))OR(((rt0.c1) ISNULL))))OR(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))))AND((rt0.c3 IN (rt0.c3, vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (0X1e012804 IN ()) DESC  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c0 END)=(((rt0.c0) NOT BETWEEN (vt0.c0) AND (0.6923057615886118)))), rt0.c1 ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((((((rt0.c1)OR(CASE WHEN '~V쨈DSjj' THEN rt0.c4 END)))OR(((rt0.c1) ISNULL))))OR(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))))AND((rt0.c3 IN (rt0.c3, vt0.c0))))) ORDER BY (0X1e012804 IN ()) DESC  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c0 END)==(((rt0.c0) NOT BETWEEN (vt0.c0) AND (0.6923057615886118)))), rt0.c1 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((LTRIM(NULL))IS(((rt0.c4) NOT BETWEEN (x'') AND (rt0.c1))))) ORDER BY 'TYDY' COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(NULL))IS(((rt0.c4) NOT BETWEEN (x'') AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY 'TYDY' COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LTRIM(NULL))IS(((rt0.c4) NOT BETWEEN (x'') AND (rt0.c1))))) ORDER BY 'TYDY' COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(NULL))IS(((rt0.c4) NOT BETWEEN (x'') AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY 'TYDY' COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LTRIM(NULL))IS(((rt0.c4) NOT BETWEEN (x'') AND (rt0.c1))))) ORDER BY 'TYDY' COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN '-2121004286' WHEN vt1.c0 THEN vt1.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN '-2121004286' WHEN vt1.c0 THEN vt1.c0 END AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN '-2121004286' WHEN vt1.c0 THEN vt1.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN '-2121004286' WHEN vt1.c0 THEN vt1.c0 END AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN '-2121004286' WHEN vt1.c0 THEN vt1.c0 END AS TEXT));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (TRIM('fh114Yt') COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TRIM('fh114Yt') COLLATE RTRIM) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (TRIM('fh114Yt') COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TRIM('fh114Yt') COLLATE RTRIM) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (TRIM('fh114Yt') COLLATE RTRIM);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((- (rt0.c4)) IN ()) FULL OUTER JOIN rt0 ON CASE WHEN (((vt0.c0))<>((rt0.c1))) THEN ((rt0.c4)IS NOT(rt0.c4)) ELSE CAST(vt0.c0 AS NUMERIC) END WHERE (((rt0.c1 COLLATE RTRIM)|(((rt0.c4)<=(rt0.c1))))) ORDER BY UNLIKELY(DISTINCT CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c4 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)|(((rt0.c4)<=(rt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((- (rt0.c4)) IN ()) FULL OUTER JOIN rt0 ON CASE WHEN (((vt0.c0))<>((rt0.c1))) THEN ((rt0.c4)IS NOT(rt0.c4)) ELSE CAST(vt0.c0 AS NUMERIC) END ORDER BY UNLIKELY(DISTINCT CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c4 END) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((- (rt0.c4)) IN ()) FULL OUTER JOIN rt0 ON CASE WHEN (((vt0.c0))<>((rt0.c1))) THEN ((rt0.c4)IS NOT(rt0.c4)) ELSE CAST(vt0.c0 AS NUMERIC) END WHERE (((rt0.c1 COLLATE RTRIM)|(((rt0.c4)<=(rt0.c1))))) ORDER BY UNLIKELY(DISTINCT CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c4 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)|(((rt0.c4)<=(rt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((- (rt0.c4)) IN ()) FULL OUTER JOIN rt0 ON CASE WHEN (((vt0.c0))<>((rt0.c1))) THEN ((rt0.c4)IS NOT(rt0.c4)) ELSE CAST(vt0.c0 AS NUMERIC) END ORDER BY UNLIKELY(DISTINCT CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c4 END) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((- (rt0.c4)) IN ()) FULL OUTER JOIN rt0 ON CASE WHEN (((vt0.c0))<>((rt0.c1))) THEN ((rt0.c4)IS NOT(rt0.c4)) ELSE CAST(vt0.c0 AS NUMERIC) END WHERE (((rt0.c1 COLLATE RTRIM)|(((rt0.c4)<=(rt0.c1))))) ORDER BY UNLIKELY(DISTINCT CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c4 END) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((CAST('' AS TEXT), ((vt1.c0)<>(vt0.c0)), CAST(vt0.c0 AS TEXT)))<((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)), ((vt0.c0) NOTNULL), vt1.c0 COLLATE BINARY)))) ORDER BY (((((((((vt0.c0 IN ()))OR((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))))OR(0xfffffffff8f05eac)))OR(((vt1.c0)=(vt0.c0)))))OR((((vt1.c0))<((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((CAST('' AS TEXT), ((vt1.c0)<>(vt0.c0)), CAST(vt0.c0 AS TEXT)))<((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)), ((vt0.c0) NOTNULL), vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((vt0.c0 IN ()))OR((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))))OR(0Xfffffffff8f05eac)))OR(((vt1.c0)==(vt0.c0)))))OR((((vt1.c0))<((vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((CAST('' AS TEXT), ((vt1.c0)<>(vt0.c0)), CAST(vt0.c0 AS TEXT)))<((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)), ((vt0.c0) NOTNULL), vt1.c0 COLLATE BINARY)))) ORDER BY (((((((((vt0.c0 IN ()))OR((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))))OR(0xfffffffff8f05eac)))OR(((vt1.c0)=(vt0.c0)))))OR((((vt1.c0))<((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((CAST('' AS TEXT), ((vt1.c0)<>(vt0.c0)), CAST(vt0.c0 AS TEXT)))<((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)), ((vt0.c0) NOTNULL), vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((vt0.c0 IN ()))OR((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))))OR(0Xfffffffff8f05eac)))OR(((vt1.c0)==(vt0.c0)))))OR((((vt1.c0))<((vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((CAST('' AS TEXT), ((vt1.c0)<>(vt0.c0)), CAST(vt0.c0 AS TEXT)))<((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)), ((vt0.c0) NOTNULL), vt1.c0 COLLATE BINARY)))) ORDER BY (((((((((vt0.c0 IN ()))OR((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))))OR(0xfffffffff8f05eac)))OR(((vt1.c0)=(vt0.c0)))))OR((((vt1.c0))<((vt1.c0))))) DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE)) ORDER BY CAST((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE)) ORDER BY CAST((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE)) ORDER BY CAST((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN x'' THEN rt0.c4 END, ((rt0.c0)%(rt0.c3)), rt0.c4)) AND ((CAST(rt0.c1 AS NUMERIC), TRIM(rt0.c1), CAST(rt0.c1 AS INTEGER))))) ORDER BY (((((vt1.c0)>=(rt0.c3))))=((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN x'' THEN rt0.c4 END, ((rt0.c0)%(rt0.c3)), rt0.c4)) AND ((CAST(rt0.c1 AS NUMERIC), TRIM(rt0.c1), CAST(rt0.c1 AS INTEGER))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((vt1.c0)>=(rt0.c3))))==((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN x'' THEN rt0.c4 END, ((rt0.c0)%(rt0.c3)), rt0.c4)) AND ((CAST(rt0.c1 AS NUMERIC), TRIM(rt0.c1), CAST(rt0.c1 AS INTEGER))))) ORDER BY (((((vt1.c0)>=(rt0.c3))))=((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN x'' THEN rt0.c4 END, ((rt0.c0)%(rt0.c3)), rt0.c4)) AND ((CAST(rt0.c1 AS NUMERIC), TRIM(rt0.c1), CAST(rt0.c1 AS INTEGER))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((vt1.c0)>=(rt0.c3))))==((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN x'' THEN rt0.c4 END, ((rt0.c0)%(rt0.c3)), rt0.c4)) AND ((CAST(rt0.c1 AS NUMERIC), TRIM(rt0.c1), CAST(rt0.c1 AS INTEGER))))) ORDER BY (((((vt1.c0)>=(rt0.c3))))=((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (CAST((+ (vt1.c0)) AS INTEGER)) ORDER BY (((((((vt1.c0))<>((vt1.c0))))AND(((vt1.c0)*(vt1.c0)))))AND('-291403734')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0))<>((vt1.c0))))AND(((vt1.c0)*(vt1.c0)))))AND('-291403734')) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CAST((+ (vt1.c0)) AS INTEGER)) ORDER BY (((((((vt1.c0))<>((vt1.c0))))AND(((vt1.c0)*(vt1.c0)))))AND('-291403734')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0))<>((vt1.c0))))AND(((vt1.c0)*(vt1.c0)))))AND('-291403734')) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CAST((+ (vt1.c0)) AS INTEGER)) ORDER BY (((((((vt1.c0))<>((vt1.c0))))AND(((vt1.c0)*(vt1.c0)))))AND('-291403734')) ASC;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))>=((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END))) LEFT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)>=(rt0.c4)) THEN CAST(rt0.c3 AS NUMERIC) ELSE ((271475676) BETWEEN (rt0.c1) AND (vt1.c0)) END WHERE (((((rt0.c4)OR(vt0.c0))) BETWEEN ((rt0.c1 IN (rt0.c4))) AND (((((rt0.c2)OR(vt1.c0)))OR(x'fb587ac7')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)OR(vt0.c0))) BETWEEN ((rt0.c1 IN (rt0.c4))) AND (((((rt0.c2)OR(vt1.c0)))OR(x'fb587ac7'))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))>=((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END))) LEFT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)>=(rt0.c4)) THEN CAST(rt0.c3 AS NUMERIC) ELSE ((271475676) BETWEEN (rt0.c1) AND (vt1.c0)) END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))>=((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END))) LEFT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)>=(rt0.c4)) THEN CAST(rt0.c3 AS NUMERIC) ELSE ((271475676) BETWEEN (rt0.c1) AND (vt1.c0)) END WHERE (((((rt0.c4)OR(vt0.c0))) BETWEEN ((rt0.c1 IN (rt0.c4))) AND (((((rt0.c2)OR(vt1.c0)))OR(x'fb587ac7')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)OR(vt0.c0))) BETWEEN ((rt0.c1 IN (rt0.c4))) AND (((((rt0.c2)OR(vt1.c0)))OR(x'fb587ac7'))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))>=((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END))) LEFT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)>=(rt0.c4)) THEN CAST(rt0.c3 AS NUMERIC) ELSE ((271475676) BETWEEN (rt0.c1) AND (vt1.c0)) END);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CAST(x'' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CAST(x'' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CAST(x'' AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ('BL');
SELECT SUM(count) FROM (SELECT ALL (('BL') IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ('BL');
SELECT SUM(count) FROM (SELECT ALL (('BL') IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ('BL');
SELECT * FROM vt0, vt1, rt0 WHERE ((((NOT (x'e28ca15d')))-(0.09295931406995683)));
SELECT SUM(count) FROM (SELECT (((((NOT (x'e28ca15d')))-(0.09295931406995683))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE ((((NOT (x'e28ca15d')))-(0.09295931406995683)));
SELECT SUM(count) FROM (SELECT (((((NOT (x'e28ca15d')))-(0.09295931406995683))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE ((((NOT (x'e28ca15d')))-(0.09295931406995683)));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON LIKELIHOOD((((vt1.c0, vt1.c0, '-1265920966'))>((vt1.c0, vt0.c0, vt1.c0))), 0.3424446603725071) WHERE (((((((vt1.c0) NOT NULL))OR(CAST(vt0.c0 AS INTEGER))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT NULL))OR(CAST(vt0.c0 AS INTEGER))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON LIKELIHOOD((((vt1.c0, vt1.c0, '-1265920966'))>((vt1.c0, vt0.c0, vt1.c0))), 0.3424446603725071));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON LIKELIHOOD((((vt1.c0, vt1.c0, '-1265920966'))>((vt1.c0, vt0.c0, vt1.c0))), 0.3424446603725071) WHERE (((((((vt1.c0) NOT NULL))OR(CAST(vt0.c0 AS INTEGER))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT NULL))OR(CAST(vt0.c0 AS INTEGER))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON LIKELIHOOD((((vt1.c0, vt1.c0, '-1265920966'))>((vt1.c0, vt0.c0, vt1.c0))), 0.3424446603725071));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON LIKELIHOOD((((vt1.c0, vt1.c0, '-1265920966'))>((vt1.c0, vt0.c0, vt1.c0))), 0.3424446603725071) WHERE (((((((vt1.c0) NOT NULL))OR(CAST(vt0.c0 AS INTEGER))))OR((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((x'' IN ())) ORDER BY rt0.c3 DESC, ((CAST(rt0.c3 AS REAL)) NOTNULL), ((((((((((((vt1.c0)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))OR(CAST(rt0.c1 AS TEXT))))AND(x'3e2a'));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, vt0 ORDER BY rt0.c3 DESC, ((CAST(rt0.c3 AS REAL)) NOTNULL), ((((((((((((vt1.c0)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))OR(CAST(rt0.c1 AS TEXT))))AND(x'3e2a')));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((x'' IN ())) ORDER BY rt0.c3 DESC, ((CAST(rt0.c3 AS REAL)) NOTNULL), ((((((((((((vt1.c0)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))OR(CAST(rt0.c1 AS TEXT))))AND(x'3e2a'));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, vt0 ORDER BY rt0.c3 DESC, ((CAST(rt0.c3 AS REAL)) NOTNULL), ((((((((((((vt1.c0)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))OR(CAST(rt0.c1 AS TEXT))))AND(x'3e2a')));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((x'' IN ())) ORDER BY rt0.c3 DESC, ((CAST(rt0.c3 AS REAL)) NOTNULL), ((((((((((((vt1.c0)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))OR(CAST(rt0.c1 AS TEXT))))AND(x'3e2a'));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c3) IS FALSE)) AND (((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c1))))) ORDER BY ((-6.09094899E8) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c3) IS FALSE)) AND (((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((-6.09094899E8) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c3) IS FALSE)) AND (((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c1))))) ORDER BY ((-6.09094899E8) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c3) IS FALSE)) AND (((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((-6.09094899E8) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c3) IS FALSE)) AND (((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c1))))) ORDER BY ((-6.09094899E8) IS FALSE) DESC  NULLS LAST;
SELECT ALL * FROM vt1, rt0, vt0 WHERE (json_insert(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))OR(vt1.c0)))AND(0X6ae567c)), CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END, CASE WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN '' END)) ORDER BY CAST('})04' AS BLOB)  NULLS FIRST, (- (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))OR(vt1.c0)))AND(0x6ae567c)), CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END, CASE WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN '' END)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY CAST('})04' AS BLOB)  NULLS FIRST, (- (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (json_insert(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))OR(vt1.c0)))AND(0X6ae567c)), CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END, CASE WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN '' END)) ORDER BY CAST('})04' AS BLOB)  NULLS FIRST, (- (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))OR(vt1.c0)))AND(0x6ae567c)), CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END, CASE WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN '' END)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY CAST('})04' AS BLOB)  NULLS FIRST, (- (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((x'')&(x'a9eb6bc1')) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS INTEGER))<(x'')) WHERE (CASE ((rt0.c2)=(rt0.c4))  WHEN CAST('yE㮴r' AS INTEGER) THEN vt1.c0 COLLATE RTRIM WHEN ((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c1)) WHEN ((rt0.c4)GLOB(rt0.c2)) THEN ((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)) WHEN CAST(rt0.c4 AS TEXT) THEN ((rt0.c4) ISNULL) WHEN (((0.9321556861163257, vt1.c0, rt0.c2))<>((vt0.c0, vt1.c0, rt0.c2))) THEN (('c^y!0-/v')!=(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)=(rt0.c4))  WHEN CAST('yE㮴r' AS INTEGER) THEN vt1.c0 COLLATE RTRIM WHEN ((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c1)) WHEN ((rt0.c4)GLOB(rt0.c2)) THEN ((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)) WHEN CAST(rt0.c4 AS TEXT) THEN ((rt0.c4) ISNULL) WHEN (((0.9321556861163257, vt1.c0, rt0.c2))<>((vt0.c0, vt1.c0, rt0.c2))) THEN (('c^y!0-/v')!=(rt0.c0)) END) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((x'')&(x'a9eb6bc1')) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS INTEGER))<(x'')));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((x'')&(x'a9eb6bc1')) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS INTEGER))<(x'')) WHERE (CASE ((rt0.c2)=(rt0.c4))  WHEN CAST('yE㮴r' AS INTEGER) THEN vt1.c0 COLLATE RTRIM WHEN ((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c1)) WHEN ((rt0.c4)GLOB(rt0.c2)) THEN ((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)) WHEN CAST(rt0.c4 AS TEXT) THEN ((rt0.c4) ISNULL) WHEN (((0.9321556861163257, vt1.c0, rt0.c2))<>((vt0.c0, vt1.c0, rt0.c2))) THEN (('c^y!0-/v')!=(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)=(rt0.c4))  WHEN CAST('yE㮴r' AS INTEGER) THEN vt1.c0 COLLATE RTRIM WHEN ((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c1)) WHEN ((rt0.c4)GLOB(rt0.c2)) THEN ((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)) WHEN CAST(rt0.c4 AS TEXT) THEN ((rt0.c4) ISNULL) WHEN (((0.9321556861163257, vt1.c0, rt0.c2))<>((vt0.c0, vt1.c0, rt0.c2))) THEN (('c^y!0-/v')!=(rt0.c0)) END) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((x'')&(x'a9eb6bc1')) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS INTEGER))<(x'')));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((x'')&(x'a9eb6bc1')) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS INTEGER))<(x'')) WHERE (CASE ((rt0.c2)=(rt0.c4))  WHEN CAST('yE㮴r' AS INTEGER) THEN vt1.c0 COLLATE RTRIM WHEN ((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c1)) WHEN ((rt0.c4)GLOB(rt0.c2)) THEN ((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)) WHEN CAST(rt0.c4 AS TEXT) THEN ((rt0.c4) ISNULL) WHEN (((0.9321556861163257, vt1.c0, rt0.c2))<>((vt0.c0, vt1.c0, rt0.c2))) THEN (('c^y!0-/v')!=(rt0.c0)) END);
SELECT * FROM vt0, vt1, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE (rt0.c3);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)*(rt0.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)*(rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)*(rt0.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)*(rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)*(rt0.c3)) AS NUMERIC));
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((+ (((rt0.c2)IS NOT(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)IS NOT(rt0.c3))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((+ (((rt0.c2)IS NOT(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)IS NOT(rt0.c3))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((+ (((rt0.c2)IS NOT(rt0.c3)))));
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c3 AS TEXT) AS INTEGER)) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c3 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END AS REAL));
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c3 AS TEXT) AS INTEGER)) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c3 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END AS REAL));
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c3 AS TEXT) AS INTEGER)) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END AS REAL);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) AS TEXT)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) AS TEXT)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) AS TEXT));
SELECT * FROM rt0, vt0 WHERE ((CASE rt0.c4  WHEN rt0.c3 THEN vt0.c0 WHEN NULL THEN rt0.c0 WHEN x'' THEN rt0.c3 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c4  WHEN rt0.c3 THEN vt0.c0 WHEN NULL THEN rt0.c0 WHEN x'' THEN rt0.c3 END IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((CASE rt0.c4  WHEN rt0.c3 THEN vt0.c0 WHEN NULL THEN rt0.c0 WHEN x'' THEN rt0.c3 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c4  WHEN rt0.c3 THEN vt0.c0 WHEN NULL THEN rt0.c0 WHEN x'' THEN rt0.c3 END IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((CASE rt0.c4  WHEN rt0.c3 THEN vt0.c0 WHEN NULL THEN rt0.c0 WHEN x'' THEN rt0.c3 END IN ()));
SELECT * FROM rt0, vt1 WHERE (CAST(UPPER(NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(NULL) AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST(UPPER(NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(NULL) AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST(UPPER(NULL) AS BLOB));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CAST((vt1.c0 IN ()) AS REAL) CROSS JOIN vt0 ON (CAST(vt1.c0 AS REAL) IN ()) WHERE ('-774693139') ORDER BY (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (('-774693139') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST((vt1.c0 IN ()) AS REAL) CROSS JOIN vt0 ON (CAST(vt1.c0 AS REAL) IN ()) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0))))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CAST((vt1.c0 IN ()) AS REAL) CROSS JOIN vt0 ON (CAST(vt1.c0 AS REAL) IN ()) WHERE ('-774693139') ORDER BY (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (('-774693139') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST((vt1.c0 IN ()) AS REAL) CROSS JOIN vt0 ON (CAST(vt1.c0 AS REAL) IN ()) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0))))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CAST((vt1.c0 IN ()) AS REAL) CROSS JOIN vt0 ON (CAST(vt1.c0 AS REAL) IN ()) WHERE ('-774693139') ORDER BY (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0)))));
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((((vt1.c0, rt0.c2, rt0.c3)) BETWEEN ((((rt0.c3)>=(rt0.c3)), ((rt0.c3)<=(rt0.c1)), (x'' IN (vt1.c0)))) AND ((((rt0.c4)%(vt1.c0)), ((rt0.c0)LIKE(rt0.c4)), rt0.c0)))) ORDER BY RTRIM((vt0.c0 IN (rt0.c0, vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, rt0.c2, rt0.c3)) BETWEEN ((((rt0.c3)>=(rt0.c3)), ((rt0.c3)<=(rt0.c1)), (x'' IN (vt1.c0)))) AND ((((rt0.c4)%(vt1.c0)), ((rt0.c0)LIKE(rt0.c4)), rt0.c0)))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY RTRIM((vt0.c0 IN (rt0.c0, vt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((((vt1.c0, rt0.c2, rt0.c3)) BETWEEN ((((rt0.c3)>=(rt0.c3)), ((rt0.c3)<=(rt0.c1)), (x'' IN (vt1.c0)))) AND ((((rt0.c4)%(vt1.c0)), ((rt0.c0)LIKE(rt0.c4)), rt0.c0)))) ORDER BY RTRIM((vt0.c0 IN (rt0.c0, vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, rt0.c2, rt0.c3)) BETWEEN ((((rt0.c3)>=(rt0.c3)), ((rt0.c3)<=(rt0.c1)), (x'' IN (vt1.c0)))) AND ((((rt0.c4)%(vt1.c0)), ((rt0.c0)LIKE(rt0.c4)), rt0.c0)))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY RTRIM((vt0.c0 IN (rt0.c0, vt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((((vt1.c0, rt0.c2, rt0.c3)) BETWEEN ((((rt0.c3)>=(rt0.c3)), ((rt0.c3)<=(rt0.c1)), (x'' IN (vt1.c0)))) AND ((((rt0.c4)%(vt1.c0)), ((rt0.c0)LIKE(rt0.c4)), rt0.c0)))) ORDER BY RTRIM((vt0.c0 IN (rt0.c0, vt0.c0))) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1, rt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((rt0.c4)<<(vt1.c0)))))AND(((rt0.c2) IS TRUE)))) ORDER BY ((((((((((((((rt0.c2)AND(vt1.c0)))AND(0.7122451108441495)))AND(rt0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND('0.87040815148022')))IS NOT('')) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(((rt0.c4)<<(vt1.c0)))))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((((((((((((rt0.c2)AND(vt1.c0)))AND(0.7122451108441495)))AND(rt0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND('0.87040815148022')))IS NOT('')) ASC);
SELECT * FROM vt0, vt1, rt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((rt0.c4)<<(vt1.c0)))))AND(((rt0.c2) IS TRUE)))) ORDER BY ((((((((((((((rt0.c2)AND(vt1.c0)))AND(0.7122451108441495)))AND(rt0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND('0.87040815148022')))IS NOT('')) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(((rt0.c4)<<(vt1.c0)))))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((((((((((((rt0.c2)AND(vt1.c0)))AND(0.7122451108441495)))AND(rt0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND('0.87040815148022')))IS NOT('')) ASC);
SELECT * FROM vt0, vt1, rt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((rt0.c4)<<(vt1.c0)))))AND(((rt0.c2) IS TRUE)))) ORDER BY ((((((((((((((rt0.c2)AND(vt1.c0)))AND(0.7122451108441495)))AND(rt0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND('0.87040815148022')))IS NOT('')) ASC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((x'') NOT BETWEEN ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((vt1.c0)))) AND (((rt0.c3) IS TRUE)))) ORDER BY CASE WHEN (- (rt0.c2)) THEN CASE WHEN rt0.c2 THEN vt1.c0 END ELSE (((rt0.c0)) BETWEEN ((0Xffffffffdfc38631)) AND ((rt0.c3))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((vt1.c0)))) AND (((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN (- (rt0.c2)) THEN CASE WHEN rt0.c2 THEN vt1.c0 END ELSE (((rt0.c0)) BETWEEN ((0xffffffffdfc38631)) AND ((rt0.c3))) END ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((x'') NOT BETWEEN ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((vt1.c0)))) AND (((rt0.c3) IS TRUE)))) ORDER BY CASE WHEN (- (rt0.c2)) THEN CASE WHEN rt0.c2 THEN vt1.c0 END ELSE (((rt0.c0)) BETWEEN ((0Xffffffffdfc38631)) AND ((rt0.c3))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((vt1.c0)))) AND (((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN (- (rt0.c2)) THEN CASE WHEN rt0.c2 THEN vt1.c0 END ELSE (((rt0.c0)) BETWEEN ((0xffffffffdfc38631)) AND ((rt0.c3))) END ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((x'') NOT BETWEEN ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((vt1.c0)))) AND (((rt0.c3) IS TRUE)))) ORDER BY CASE WHEN (- (rt0.c2)) THEN CASE WHEN rt0.c2 THEN vt1.c0 END ELSE (((rt0.c0)) BETWEEN ((0Xffffffffdfc38631)) AND ((rt0.c3))) END ASC;
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM COLLATE NOCASE) ORDER BY 0.9040649467619585  NULLS FIRST, (TYPEOF(NULL) IN ())  NULLS LAST, TRIM(DISTINCT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY 0.9040649467619585  NULLS FIRST, (TYPEOF(NULL) IN ())  NULLS LAST, TRIM(DISTINCT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM COLLATE NOCASE) ORDER BY 0.9040649467619585  NULLS FIRST, (TYPEOF(NULL) IN ())  NULLS LAST, TRIM(DISTINCT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY 0.9040649467619585  NULLS FIRST, (TYPEOF(NULL) IN ())  NULLS LAST, TRIM(DISTINCT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM COLLATE NOCASE) ORDER BY 0.9040649467619585  NULLS FIRST, (TYPEOF(NULL) IN ())  NULLS LAST, TRIM(DISTINCT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE ('<V') ORDER BY (((((((((vt1.c0 IN (vt1.c0)))OR(((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)))))AND(vt1.c0)))OR(((((((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c4)))OR(rt0.c2)))OR(vt1.c0)))OR(vt1.c0)))))OR(NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('<V') IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((((vt1.c0 IN (vt1.c0)))OR(((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)))))AND(vt1.c0)))OR(((((((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c4)))OR(rt0.c2)))OR(vt1.c0)))OR(vt1.c0)))))OR(NULL)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ('<V') ORDER BY (((((((((vt1.c0 IN (vt1.c0)))OR(((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)))))AND(vt1.c0)))OR(((((((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c4)))OR(rt0.c2)))OR(vt1.c0)))OR(vt1.c0)))))OR(NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('<V') IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((((vt1.c0 IN (vt1.c0)))OR(((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)))))AND(vt1.c0)))OR(((((((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c4)))OR(rt0.c2)))OR(vt1.c0)))OR(vt1.c0)))))OR(NULL)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ('<V') ORDER BY (((((((((vt1.c0 IN (vt1.c0)))OR(((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)))))AND(vt1.c0)))OR(((((((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c4)))OR(rt0.c2)))OR(vt1.c0)))OR(vt1.c0)))))OR(NULL)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) NOTNULL) AS BLOB) WHERE (((((((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(rt0.c4 COLLATE RTRIM)))OR(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(rt0.c4 COLLATE RTRIM)))OR(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) NOTNULL) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) NOTNULL) AS BLOB) WHERE (((((((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(rt0.c4 COLLATE RTRIM)))OR(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(rt0.c4 COLLATE RTRIM)))OR(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) NOTNULL) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) NOTNULL) AS BLOB) WHERE (((((((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(rt0.c4 COLLATE RTRIM)))OR(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((rt0.c4)GLOB(rt0.c0))  WHEN TYPEOF(DISTINCT rt0.c2) THEN (((1.01138198E9)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) ELSE ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (((((rt0.c4 IN ()))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 END)))OR(rt0.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4)GLOB(rt0.c0))  WHEN TYPEOF(DISTINCT rt0.c2) THEN (((1.01138198E9)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) ELSE ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c4 IN ()))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 END)))OR(rt0.c3 COLLATE BINARY)));
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((rt0.c4)GLOB(rt0.c0))  WHEN TYPEOF(DISTINCT rt0.c2) THEN (((1.01138198E9)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) ELSE ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (((((rt0.c4 IN ()))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 END)))OR(rt0.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4)GLOB(rt0.c0))  WHEN TYPEOF(DISTINCT rt0.c2) THEN (((1.01138198E9)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) ELSE ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c4 IN ()))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 END)))OR(rt0.c3 COLLATE BINARY)));
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((rt0.c4)GLOB(rt0.c0))  WHEN TYPEOF(DISTINCT rt0.c2) THEN (((1.01138198E9)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) ELSE ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (((((rt0.c4 IN ()))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 END)))OR(rt0.c3 COLLATE BINARY));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 END COLLATE RTRIM);
SELECT * FROM vt0 WHERE ('583862401') ORDER BY ((((vt0.c0)>(vt0.c0)))IS((vt0.c0 IN (vt0.c0)))) DESC  NULLS FIRST, (CAST(vt0.c0 AS REAL) IN ()) ASC  NULLS FIRST, ((((CAST(vt0.c0 AS NUMERIC))AND((NULL IN ()))))OR((+ (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('583862401') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0)))IS((vt0.c0 IN (vt0.c0)))) DESC  NULLS FIRST, (CAST(vt0.c0 AS REAL) IN ()) ASC  NULLS FIRST, ((((CAST(vt0.c0 AS NUMERIC))AND((NULL IN ()))))OR((+ (vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ('583862401') ORDER BY ((((vt0.c0)>(vt0.c0)))IS((vt0.c0 IN (vt0.c0)))) DESC  NULLS FIRST, (CAST(vt0.c0 AS REAL) IN ()) ASC  NULLS FIRST, ((((CAST(vt0.c0 AS NUMERIC))AND((NULL IN ()))))OR((+ (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('583862401') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0)))IS((vt0.c0 IN (vt0.c0)))) DESC  NULLS FIRST, (CAST(vt0.c0 AS REAL) IN ()) ASC  NULLS FIRST, ((((CAST(vt0.c0 AS NUMERIC))AND((NULL IN ()))))OR((+ (vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ('583862401') ORDER BY ((((vt0.c0)>(vt0.c0)))IS((vt0.c0 IN (vt0.c0)))) DESC  NULLS FIRST, (CAST(vt0.c0 AS REAL) IN ()) ASC  NULLS FIRST, ((((CAST(vt0.c0 AS NUMERIC))AND((NULL IN ()))))OR((+ (vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0, vt1, rt0 WHERE ((((((((((rt0.c2 IN ()))AND(((rt0.c2)OR(x'')))))OR(((rt0.c4) NOTNULL))))AND(UNLIKELY(rt0.c1))))OR(((NULL) NOTNULL)))) ORDER BY '-1894626065' DESC;
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c2 IN ()))AND(((rt0.c2)OR(x'')))))OR(((rt0.c4) NOTNULL))))AND(UNLIKELY(rt0.c1))))OR(((NULL) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY '-1894626065' DESC);
SELECT * FROM vt0, vt1, rt0 WHERE ((((((((((rt0.c2 IN ()))AND(((rt0.c2)OR(x'')))))OR(((rt0.c4) NOTNULL))))AND(UNLIKELY(rt0.c1))))OR(((NULL) NOTNULL)))) ORDER BY '-1894626065' DESC;
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c2 IN ()))AND(((rt0.c2)OR(x'')))))OR(((rt0.c4) NOTNULL))))AND(UNLIKELY(rt0.c1))))OR(((NULL) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY '-1894626065' DESC);
SELECT * FROM vt0, vt1, rt0 WHERE ((((((((((rt0.c2 IN ()))AND(((rt0.c2)OR(x'')))))OR(((rt0.c4) NOTNULL))))AND(UNLIKELY(rt0.c1))))OR(((NULL) NOTNULL)))) ORDER BY '-1894626065' DESC;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (TOTAL_CHANGES()) ORDER BY rt0.c4 ASC, CAST(rt0.c4 AS INTEGER) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY rt0.c4 ASC, CAST(rt0.c4 AS INTEGER) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (TOTAL_CHANGES()) ORDER BY rt0.c4 ASC, CAST(rt0.c4 AS INTEGER) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY rt0.c4 ASC, CAST(rt0.c4 AS INTEGER) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (TOTAL_CHANGES()) ORDER BY rt0.c4 ASC, CAST(rt0.c4 AS INTEGER) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((((((rt0.c4, rt0.c1, 0xfffffffff2a601c0, NULL, NULL))>((vt0.c0, rt0.c0, rt0.c4, rt0.c2, vt0.c0))))AND(CASE vt1.c0  WHEN rt0.c2 THEN vt0.c0 END))) ORDER BY rt0.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4, rt0.c1, 0Xfffffffff2a601c0, NULL, NULL))>((vt0.c0, rt0.c0, rt0.c4, rt0.c2, vt0.c0))))AND(CASE vt1.c0  WHEN rt0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY rt0.c4  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((((((rt0.c4, rt0.c1, 0xfffffffff2a601c0, NULL, NULL))>((vt0.c0, rt0.c0, rt0.c4, rt0.c2, vt0.c0))))AND(CASE vt1.c0  WHEN rt0.c2 THEN vt0.c0 END))) ORDER BY rt0.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4, rt0.c1, 0Xfffffffff2a601c0, NULL, NULL))>((vt0.c0, rt0.c0, rt0.c4, rt0.c2, vt0.c0))))AND(CASE vt1.c0  WHEN rt0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY rt0.c4  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((((((rt0.c4, rt0.c1, 0xfffffffff2a601c0, NULL, NULL))>((vt0.c0, rt0.c0, rt0.c4, rt0.c2, vt0.c0))))AND(CASE vt1.c0  WHEN rt0.c2 THEN vt0.c0 END))) ORDER BY rt0.c4  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c3 END) ISNULL)) ORDER BY SUBSTR(((rt0.c3)&(rt0.c3)), ((vt0.c0)+(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c3 END) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY SUBSTR(((rt0.c3)&(rt0.c3)), ((vt0.c0)+(rt0.c2))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c3 END) ISNULL)) ORDER BY SUBSTR(((rt0.c3)&(rt0.c3)), ((vt0.c0)+(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c3 END) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY SUBSTR(((rt0.c3)&(rt0.c3)), ((vt0.c0)+(rt0.c2))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c3 END) ISNULL)) ORDER BY SUBSTR(((rt0.c3)&(rt0.c3)), ((vt0.c0)+(rt0.c2)));
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2))=((rt0.c2, vt0.c0, rt0.c0)))) NOT NULL)) ORDER BY ((CASE '{}'  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c4 END)>=(((rt0.c2)/(0.9798870674895948)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c2, rt0.c2))=((rt0.c2, vt0.c0, rt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE '{}'  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c4 END)>=(((rt0.c2)/(0.9798870674895948)))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2))=((rt0.c2, vt0.c0, rt0.c0)))) NOT NULL)) ORDER BY ((CASE '{}'  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c4 END)>=(((rt0.c2)/(0.9798870674895948)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c2, rt0.c2))=((rt0.c2, vt0.c0, rt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE '{}'  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c4 END)>=(((rt0.c2)/(0.9798870674895948)))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2))=((rt0.c2, vt0.c0, rt0.c0)))) NOT NULL)) ORDER BY ((CASE '{}'  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c4 END)>=(((rt0.c2)/(0.9798870674895948)))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)AND(vt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0))<((vt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))<((vt0.c0))) IN ())  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)AND(vt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0))<((vt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))<((vt0.c0))) IN ())  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)AND(vt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0))<((vt0.c0))) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (json_valid(((NULL) BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY (((((((((rt0.c4)OR(rt0.c3)))AND(x'')))OR(rt0.c0)))AND(rt0.c3)) IN ()) ASC  NULLS LAST, ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((json_valid(((NULL) BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((((((rt0.c4)OR(rt0.c3)))AND(x'')))OR(rt0.c0)))AND(rt0.c3)) IN ()) ASC  NULLS LAST, ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM rt0, vt1 WHERE (json_valid(((NULL) BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY (((((((((rt0.c4)OR(rt0.c3)))AND(x'')))OR(rt0.c0)))AND(rt0.c3)) IN ()) ASC  NULLS LAST, ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((json_valid(((NULL) BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((((((rt0.c4)OR(rt0.c3)))AND(x'')))OR(rt0.c0)))AND(rt0.c3)) IN ()) ASC  NULLS LAST, ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM rt0, vt1 WHERE (json_valid(((NULL) BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY (((((((((rt0.c4)OR(rt0.c3)))AND(x'')))OR(rt0.c0)))AND(rt0.c3)) IN ()) ASC  NULLS LAST, ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE);
SELECT * FROM rt0, vt1, vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt1, rt0 WHERE (((x'13cc' COLLATE BINARY)AND(CASE WHEN rt0.c4 THEN rt0.c2 END))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((((x'13cc' COLLATE BINARY)AND(CASE WHEN rt0.c4 THEN rt0.c2 END))) IS TRUE)  as count FROM vt1, rt0 ORDER BY x'' ASC);
SELECT ALL * FROM vt1, rt0 WHERE (((x'13cc' COLLATE BINARY)AND(CASE WHEN rt0.c4 THEN rt0.c2 END))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((((x'13cc' COLLATE BINARY)AND(CASE WHEN rt0.c4 THEN rt0.c2 END))) IS TRUE)  as count FROM vt1, rt0 ORDER BY x'' ASC);
SELECT ALL * FROM vt1, rt0 WHERE (((x'13cc' COLLATE BINARY)AND(CASE WHEN rt0.c4 THEN rt0.c2 END))) ORDER BY x'' ASC;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((vt1.c0))>=(((rt0.c4 IN (rt0.c0, rt0.c1)))))) ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))IS NOT(((rt0.c4) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>=(((rt0.c4 IN (rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))IS NOT(((rt0.c4) IS TRUE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((vt1.c0))>=(((rt0.c4 IN (rt0.c0, rt0.c1)))))) ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))IS NOT(((rt0.c4) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>=(((rt0.c4 IN (rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))IS NOT(((rt0.c4) IS TRUE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((vt1.c0))>=(((rt0.c4 IN (rt0.c0, rt0.c1)))))) ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))IS NOT(((rt0.c4) IS TRUE)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0)OR(x'e4684a13')))OR(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(x'e4684a13')))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0)OR(x'e4684a13')))OR(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(x'e4684a13')))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0)OR(x'e4684a13')))OR(vt0.c0))) NOTNULL));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((((((('h8QlsBOtB')OR((+ (rt0.c0)))))OR((((rt0.c1))<=((vt0.c0))))))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(CAST(rt0.c3 AS BLOB))) FULL OUTER JOIN vt1 ON 'zp' WHERE (CASE WHEN ((rt0.c2) IS TRUE) THEN (- (rt0.c2)) ELSE rt0.c0 END) ORDER BY (- (CAST(rt0.c1 AS BLOB)))  NULLS FIRST, CAST((rt0.c3 IN ()) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) IS TRUE) THEN (- (rt0.c2)) ELSE rt0.c0 END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((((((('h8QlsBOtB')OR((+ (rt0.c0)))))OR((((rt0.c1))<=((vt0.c0))))))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(CAST(rt0.c3 AS BLOB))) FULL OUTER JOIN vt1 ON 'zp' ORDER BY (- (CAST(rt0.c1 AS BLOB)))  NULLS FIRST, CAST((rt0.c3 IN ()) AS TEXT) ASC);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((((((('h8QlsBOtB')OR((+ (rt0.c0)))))OR((((rt0.c1))<=((vt0.c0))))))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(CAST(rt0.c3 AS BLOB))) FULL OUTER JOIN vt1 ON 'zp' WHERE (CASE WHEN ((rt0.c2) IS TRUE) THEN (- (rt0.c2)) ELSE rt0.c0 END) ORDER BY (- (CAST(rt0.c1 AS BLOB)))  NULLS FIRST, CAST((rt0.c3 IN ()) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) IS TRUE) THEN (- (rt0.c2)) ELSE rt0.c0 END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((((((('h8QlsBOtB')OR((+ (rt0.c0)))))OR((((rt0.c1))<=((vt0.c0))))))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(CAST(rt0.c3 AS BLOB))) FULL OUTER JOIN vt1 ON 'zp' ORDER BY (- (CAST(rt0.c1 AS BLOB)))  NULLS FIRST, CAST((rt0.c3 IN ()) AS TEXT) ASC);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((((((('h8QlsBOtB')OR((+ (rt0.c0)))))OR((((rt0.c1))<=((vt0.c0))))))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(CAST(rt0.c3 AS BLOB))) FULL OUTER JOIN vt1 ON 'zp' WHERE (CASE WHEN ((rt0.c2) IS TRUE) THEN (- (rt0.c2)) ELSE rt0.c0 END) ORDER BY (- (CAST(rt0.c1 AS BLOB)))  NULLS FIRST, CAST((rt0.c3 IN ()) AS TEXT) ASC;
SELECT ALL * FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN ())) ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END))=((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END))=((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END))) DESC);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN ())) ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END))=((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END))=((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END))) DESC);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN ())) ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END))=((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END))) DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((-7.83145244E8)>=(vt0.c0)))) AND ((COALESCE(DISTINCT vt0.c0, x''))))) ORDER BY (((vt0.c0)) BETWEEN ((((NULL)+(vt0.c0)))) AND ((((vt0.c0)/(vt0.c0)))))  NULLS LAST, ((((vt0.c0) IS FALSE))<=(COALESCE(vt0.c0, vt0.c0)))  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((-7.83145244E8)>=(vt0.c0)))) AND ((COALESCE(DISTINCT vt0.c0, x''))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((NULL)+(vt0.c0)))) AND ((((vt0.c0)/(vt0.c0)))))  NULLS LAST, ((((vt0.c0) IS FALSE))<=(COALESCE(vt0.c0, vt0.c0)))  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((-7.83145244E8)>=(vt0.c0)))) AND ((COALESCE(DISTINCT vt0.c0, x''))))) ORDER BY (((vt0.c0)) BETWEEN ((((NULL)+(vt0.c0)))) AND ((((vt0.c0)/(vt0.c0)))))  NULLS LAST, ((((vt0.c0) IS FALSE))<=(COALESCE(vt0.c0, vt0.c0)))  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((-7.83145244E8)>=(vt0.c0)))) AND ((COALESCE(DISTINCT vt0.c0, x''))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((NULL)+(vt0.c0)))) AND ((((vt0.c0)/(vt0.c0)))))  NULLS LAST, ((((vt0.c0) IS FALSE))<=(COALESCE(vt0.c0, vt0.c0)))  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((-7.83145244E8)>=(vt0.c0)))) AND ((COALESCE(DISTINCT vt0.c0, x''))))) ORDER BY (((vt0.c0)) BETWEEN ((((NULL)+(vt0.c0)))) AND ((((vt0.c0)/(vt0.c0)))))  NULLS LAST, ((((vt0.c0) IS FALSE))<=(COALESCE(vt0.c0, vt0.c0)))  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE (RTRIM(rt0.c1)) ORDER BY ((x'') IS TRUE) COLLATE NOCASE COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((RTRIM(rt0.c1)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((x'') IS TRUE) COLLATE NOCASE COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (RTRIM(rt0.c1)) ORDER BY ((x'') IS TRUE) COLLATE NOCASE COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((RTRIM(rt0.c1)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((x'') IS TRUE) COLLATE NOCASE COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (RTRIM(rt0.c1)) ORDER BY ((x'') IS TRUE) COLLATE NOCASE COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) COLLATE BINARY) ORDER BY (((vt1.c0) NOT BETWEEN (rt0.c2) AND (0.9009188933407001)) IN (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END)), (vt1.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((vt1.c0) NOT BETWEEN (rt0.c2) AND (0.9009188933407001)) IN (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END)), (vt1.c0 IN ()) DESC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) COLLATE BINARY) ORDER BY (((vt1.c0) NOT BETWEEN (rt0.c2) AND (0.9009188933407001)) IN (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END)), (vt1.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((vt1.c0) NOT BETWEEN (rt0.c2) AND (0.9009188933407001)) IN (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END)), (vt1.c0 IN ()) DESC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) COLLATE BINARY) ORDER BY (((vt1.c0) NOT BETWEEN (rt0.c2) AND (0.9009188933407001)) IN (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END)), (vt1.c0 IN ()) DESC;
SELECT * FROM rt0 WHERE (CAST(STRFTIME(rt0.c1, rt0.c3, rt0.c1, rt0.c4, rt0.c4) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(STRFTIME(rt0.c1, rt0.c3, rt0.c1, rt0.c4, rt0.c4) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(STRFTIME(rt0.c1, rt0.c3, rt0.c1, rt0.c4, rt0.c4) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(STRFTIME(rt0.c1, rt0.c3, rt0.c1, rt0.c4, rt0.c4) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(STRFTIME(rt0.c1, rt0.c3, rt0.c1, rt0.c4, rt0.c4) AS TEXT));
SELECT ALL * FROM vt1 WHERE ((~ (CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((~ (CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((~ (CAST(vt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (MIN(vt0.c0, (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((MIN(vt0.c0, (+ (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (MIN(vt0.c0, (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((MIN(vt0.c0, (+ (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (MIN(vt0.c0, (+ (vt0.c0))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON PRINTF(NULL COLLATE BINARY, rt0.c3, CAST(rt0.c0 AS REAL)) INNER JOIN rt0 ON rt0.c2 WHERE (((IFNULL(DISTINCT vt1.c0, rt0.c1))-(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt1.c0, rt0.c1))-(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON PRINTF(NULL COLLATE BINARY, rt0.c3, CAST(rt0.c0 AS REAL)) INNER JOIN rt0 ON rt0.c2);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON PRINTF(NULL COLLATE BINARY, rt0.c3, CAST(rt0.c0 AS REAL)) INNER JOIN rt0 ON rt0.c2 WHERE (((IFNULL(DISTINCT vt1.c0, rt0.c1))-(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt1.c0, rt0.c1))-(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON PRINTF(NULL COLLATE BINARY, rt0.c3, CAST(rt0.c0 AS REAL)) INNER JOIN rt0 ON rt0.c2);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON PRINTF(NULL COLLATE BINARY, rt0.c3, CAST(rt0.c0 AS REAL)) INNER JOIN rt0 ON rt0.c2 WHERE (((IFNULL(DISTINCT vt1.c0, rt0.c1))-(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (CAST((+ (rt0.c0)) AS INTEGER)) ORDER BY ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (CAST((+ (rt0.c0)) AS INTEGER)) ORDER BY ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (CAST((+ (rt0.c0)) AS INTEGER)) ORDER BY ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) ORDER BY ((vt1.c0 IN ()) IN ((vt1.c0 IN ()))) ASC, ((vt1.c0)<>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (((((~ (vt1.c0)))OR(((vt1.c0) IS FALSE))))AND((~ (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 IN ()) IN ((vt1.c0 IN ()))) ASC, ((vt1.c0)<>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (((((~ (vt1.c0)))OR(((vt1.c0) IS FALSE))))AND((~ (vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) ORDER BY ((vt1.c0 IN ()) IN ((vt1.c0 IN ()))) ASC, ((vt1.c0)<>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (((((~ (vt1.c0)))OR(((vt1.c0) IS FALSE))))AND((~ (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 IN ()) IN ((vt1.c0 IN ()))) ASC, ((vt1.c0)<>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (((((~ (vt1.c0)))OR(((vt1.c0) IS FALSE))))AND((~ (vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) ORDER BY ((vt1.c0 IN ()) IN ((vt1.c0 IN ()))) ASC, ((vt1.c0)<>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (((((~ (vt1.c0)))OR(((vt1.c0) IS FALSE))))AND((~ (vt1.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0, vt1 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (vt1.c0))) BETWEEN (((((rt0.c0)AND(rt0.c4)))OR(vt1.c0))) AND (CAST(rt0.c0 AS INTEGER)))) ORDER BY x'', (((rt0.c1 IN (rt0.c3))) IS TRUE)  NULLS FIRST, IFNULL(DISTINCT ((rt0.c4)+(rt0.c4)), (- (rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt0.c3) AND (vt1.c0))) BETWEEN (((((rt0.c0)AND(rt0.c4)))OR(vt1.c0))) AND (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY x'', (((rt0.c1 IN (rt0.c3))) IS TRUE)  NULLS FIRST, IFNULL(DISTINCT ((rt0.c4)+(rt0.c4)), (- (rt0.c0))) ASC);
SELECT * FROM vt0, rt0, vt1 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (vt1.c0))) BETWEEN (((((rt0.c0)AND(rt0.c4)))OR(vt1.c0))) AND (CAST(rt0.c0 AS INTEGER)))) ORDER BY x'', (((rt0.c1 IN (rt0.c3))) IS TRUE)  NULLS FIRST, IFNULL(DISTINCT ((rt0.c4)+(rt0.c4)), (- (rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt0.c3) AND (vt1.c0))) BETWEEN (((((rt0.c0)AND(rt0.c4)))OR(vt1.c0))) AND (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY x'', (((rt0.c1 IN (rt0.c3))) IS TRUE)  NULLS FIRST, IFNULL(DISTINCT ((rt0.c4)+(rt0.c4)), (- (rt0.c0))) ASC);
SELECT * FROM vt0, rt0, vt1 WHERE (((((rt0.c3) BETWEEN (rt0.c3) AND (vt1.c0))) BETWEEN (((((rt0.c0)AND(rt0.c4)))OR(vt1.c0))) AND (CAST(rt0.c0 AS INTEGER)))) ORDER BY x'', (((rt0.c1 IN (rt0.c3))) IS TRUE)  NULLS FIRST, IFNULL(DISTINCT ((rt0.c4)+(rt0.c4)), (- (rt0.c0))) ASC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) IS FALSE)) BETWEEN ((x'' IN ())) AND ((((rt0.c2))>=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE)) BETWEEN ((x'' IN ())) AND ((((rt0.c2))>=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) IS FALSE)) BETWEEN ((x'' IN ())) AND ((((rt0.c2))>=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE)) BETWEEN ((x'' IN ())) AND ((((rt0.c2))>=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) IS FALSE)) BETWEEN ((x'' IN ())) AND ((((rt0.c2))>=((rt0.c2))))));
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))<(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))<(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))<(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))<(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))<(vt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt1, rt0 WHERE (((CASE -3.00836855E8  WHEN vt1.c0 THEN rt0.c4 ELSE rt0.c2 END)<<((~ (rt0.c3))))) ORDER BY ((rt0.c2 IN ()) IN ())  NULLS FIRST, (~ (((((vt1.c0)OR(rt0.c4)))OR(rt0.c0))))  NULLS LAST, (((((vt1.c0)OR(vt1.c0))))>((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE -3.00836855E8  WHEN vt1.c0 THEN rt0.c4 ELSE rt0.c2 END)<<((~ (rt0.c3))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c2 IN ()) IN ())  NULLS FIRST, (~ (((((vt1.c0)OR(rt0.c4)))OR(rt0.c0))))  NULLS LAST, (((((vt1.c0)OR(vt1.c0))))>((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((CASE -3.00836855E8  WHEN vt1.c0 THEN rt0.c4 ELSE rt0.c2 END)<<((~ (rt0.c3))))) ORDER BY ((rt0.c2 IN ()) IN ())  NULLS FIRST, (~ (((((vt1.c0)OR(rt0.c4)))OR(rt0.c0))))  NULLS LAST, (((((vt1.c0)OR(vt1.c0))))>((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE -3.00836855E8  WHEN vt1.c0 THEN rt0.c4 ELSE rt0.c2 END)<<((~ (rt0.c3))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c2 IN ()) IN ())  NULLS FIRST, (~ (((((vt1.c0)OR(rt0.c4)))OR(rt0.c0))))  NULLS LAST, (((((vt1.c0)OR(vt1.c0))))>((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((CASE -3.00836855E8  WHEN vt1.c0 THEN rt0.c4 ELSE rt0.c2 END)<<((~ (rt0.c3))))) ORDER BY ((rt0.c2 IN ()) IN ())  NULLS FIRST, (~ (((((vt1.c0)OR(rt0.c4)))OR(rt0.c0))))  NULLS LAST, (((((vt1.c0)OR(vt1.c0))))>((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END AS REAL) WHERE ((((((vt1.c0)>(rt0.c1)), ((((((((vt1.c0)AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)), CAST(rt0.c4 AS REAL)))>((((rt0.c2)%(rt0.c2)), (vt1.c0 IN ()), IFNULL(DISTINCT rt0.c4, rt0.c2))))) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c4))) IS TRUE) DESC, rt0.c1 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)>(rt0.c1)), ((((((((vt1.c0)AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)), CAST(rt0.c4 AS REAL)))>((((rt0.c2)%(rt0.c2)), (vt1.c0 IN ()), IFNULL(DISTINCT rt0.c4, rt0.c2))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END AS REAL) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c4))) IS TRUE) DESC, rt0.c1 COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END AS REAL) WHERE ((((((vt1.c0)>(rt0.c1)), ((((((((vt1.c0)AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)), CAST(rt0.c4 AS REAL)))>((((rt0.c2)%(rt0.c2)), (vt1.c0 IN ()), IFNULL(DISTINCT rt0.c4, rt0.c2))))) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c4))) IS TRUE) DESC, rt0.c1 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)>(rt0.c1)), ((((((((vt1.c0)AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)), CAST(rt0.c4 AS REAL)))>((((rt0.c2)%(rt0.c2)), (vt1.c0 IN ()), IFNULL(DISTINCT rt0.c4, rt0.c2))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END AS REAL) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c4))) IS TRUE) DESC, rt0.c1 COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END AS REAL) WHERE ((((((vt1.c0)>(rt0.c1)), ((((((((vt1.c0)AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)), CAST(rt0.c4 AS REAL)))>((((rt0.c2)%(rt0.c2)), (vt1.c0 IN ()), IFNULL(DISTINCT rt0.c4, rt0.c2))))) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c4))) IS TRUE) DESC, rt0.c1 COLLATE BINARY;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))<=(((- (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE NOCASE))<=(((- (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))<=(((- (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE NOCASE))<=(((- (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))<=(((- (vt0.c0))))));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0))) NOTNULL) WHERE (((rtreenode(vt1.c0, rt0.c4)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rtreenode(vt1.c0, rt0.c4)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0))) NOTNULL) WHERE (((rtreenode(vt1.c0, rt0.c4)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rtreenode(vt1.c0, rt0.c4)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c0))) NOTNULL) WHERE (((rtreenode(vt1.c0, rt0.c4)) NOTNULL));
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((+ ((((rt0.c3))>(('qi㻠c|*켓|*'))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c3))>(('qi㻠c|*켓|*')))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((+ ((((rt0.c3))>(('qi㻠c|*켓|*'))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c3))>(('qi㻠c|*켓|*')))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((+ ((((rt0.c3))>(('qi㻠c|*켓|*'))))));
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON vt0.c0 WHERE ((((vt1.c0)) NOT BETWEEN ((((rt0.c4) IS FALSE))) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((rt0.c4) IS FALSE))) AND ((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON vt0.c0);
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON vt0.c0 WHERE ((((vt1.c0)) NOT BETWEEN ((((rt0.c4) IS FALSE))) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((rt0.c4) IS FALSE))) AND ((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON vt0.c0);
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON vt0.c0 WHERE ((((vt1.c0)) NOT BETWEEN ((((rt0.c4) IS FALSE))) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c0 COLLATE BINARY END);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN 0.6961623677529765 ELSE CASE WHEN '7劎l\' THEN 0.6440731353783108 ELSE x'' END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN 0.6961623677529765 ELSE CASE WHEN '7劎l\' THEN 0.6440731353783108 ELSE x'' END END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN 0.6961623677529765 ELSE CASE WHEN '7劎l\' THEN 0.6440731353783108 ELSE x'' END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN 0.6961623677529765 ELSE CASE WHEN '7劎l\' THEN 0.6440731353783108 ELSE x'' END END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN 0.6961623677529765 ELSE CASE WHEN '7劎l\' THEN 0.6440731353783108 ELSE x'' END END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3))!=((rt0.c4))))LIKE(rtreenode(rt0.c1, 0.8447508046675661)))) ORDER BY ((((TRIM(rt0.c1))AND(rt0.c3 COLLATE RTRIM)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))!=((rt0.c4))))LIKE(rtreenode(rt0.c1, 0.8447508046675661)))) IS TRUE)  as count FROM rt0 ORDER BY ((((TRIM(rt0.c1))AND(rt0.c3 COLLATE RTRIM)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3))!=((rt0.c4))))LIKE(rtreenode(rt0.c1, 0.8447508046675661)))) ORDER BY ((((TRIM(rt0.c1))AND(rt0.c3 COLLATE RTRIM)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))!=((rt0.c4))))LIKE(rtreenode(rt0.c1, 0.8447508046675661)))) IS TRUE)  as count FROM rt0 ORDER BY ((((TRIM(rt0.c1))AND(rt0.c3 COLLATE RTRIM)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3))!=((rt0.c4))))LIKE(rtreenode(rt0.c1, 0.8447508046675661)))) ORDER BY ((((TRIM(rt0.c1))AND(rt0.c3 COLLATE RTRIM)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE ('1828396728');
SELECT SUM(count) FROM (SELECT (('1828396728') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('1828396728');
SELECT SUM(count) FROM (SELECT (('1828396728') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('1828396728');
SELECT COUNT(*) FROM rt0 WHERE (((((COALESCE(rt0.c2, rt0.c2))OR(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((rt0.c0)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(rt0.c2, rt0.c2))OR(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((rt0.c0)OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((COALESCE(rt0.c2, rt0.c2))OR(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((rt0.c0)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(rt0.c2, rt0.c2))OR(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((rt0.c0)OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((COALESCE(rt0.c2, rt0.c2))OR(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((rt0.c0)OR(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY rt0.c3, ((rt0.c0 COLLATE NOCASE)<<(((rt0.c2)<(rt0.c4)))), ((((rt0.c2) IS FALSE)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (CAST(rt0.c1 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3, ((rt0.c0 COLLATE NOCASE)<<(((rt0.c2)<(rt0.c4)))), ((((rt0.c2) IS FALSE)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (CAST(rt0.c1 AS BLOB))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY rt0.c3, ((rt0.c0 COLLATE NOCASE)<<(((rt0.c2)<(rt0.c4)))), ((((rt0.c2) IS FALSE)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (CAST(rt0.c1 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3, ((rt0.c0 COLLATE NOCASE)<<(((rt0.c2)<(rt0.c4)))), ((((rt0.c2) IS FALSE)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (CAST(rt0.c1 AS BLOB))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY rt0.c3, ((rt0.c0 COLLATE NOCASE)<<(((rt0.c2)<(rt0.c4)))), ((((rt0.c2) IS FALSE)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (CAST(rt0.c1 AS BLOB))) ASC;
SELECT * FROM vt0, vt1 WHERE ((vt1.c0 COLLATE BINARY IN ())) ORDER BY (- (1857486528));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (1857486528)));
SELECT * FROM vt0, vt1 WHERE ((vt1.c0 COLLATE BINARY IN ())) ORDER BY (- (1857486528));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (1857486528)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((-392437513) IS TRUE))AND(((((rt0.c0)AND(rt0.c4)))AND(rt0.c4)))))AND(NULL)))OR((((rt0.c2))>((rt0.c0))))))AND(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((-392437513) IS TRUE))AND(((((rt0.c0)AND(rt0.c4)))AND(rt0.c4)))))AND(NULL)))OR((((rt0.c2))>((rt0.c0))))))AND(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((-392437513) IS TRUE))AND(((((rt0.c0)AND(rt0.c4)))AND(rt0.c4)))))AND(NULL)))OR((((rt0.c2))>((rt0.c0))))))AND(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((-392437513) IS TRUE))AND(((((rt0.c0)AND(rt0.c4)))AND(rt0.c4)))))AND(NULL)))OR((((rt0.c2))>((rt0.c0))))))AND(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((-392437513) IS TRUE))AND(((((rt0.c0)AND(rt0.c4)))AND(rt0.c4)))))AND(NULL)))OR((((rt0.c2))>((rt0.c0))))))AND(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c4) IS TRUE)) NOTNULL) WHERE (((rt0.c3)<<(rt0.c2)) COLLATE BINARY) ORDER BY ((((rt0.c3) IS FALSE))LIKE(((rt0.c0)+(rt0.c3)))) DESC, ((((vt1.c0) BETWEEN (rt0.c4) AND (vt1.c0)))<((((rt0.c1))<((vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)<<(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c4) IS TRUE)) NOTNULL) ORDER BY ((((rt0.c3) IS FALSE))LIKE(((rt0.c0)+(rt0.c3)))) DESC, ((((vt1.c0) BETWEEN (rt0.c4) AND (vt1.c0)))<((((rt0.c1))<((vt1.c0)))))  NULLS FIRST);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c4) IS TRUE)) NOTNULL) WHERE (((rt0.c3)<<(rt0.c2)) COLLATE BINARY) ORDER BY ((((rt0.c3) IS FALSE))LIKE(((rt0.c0)+(rt0.c3)))) DESC, ((((vt1.c0) BETWEEN (rt0.c4) AND (vt1.c0)))<((((rt0.c1))<((vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)<<(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c4) IS TRUE)) NOTNULL) ORDER BY ((((rt0.c3) IS FALSE))LIKE(((rt0.c0)+(rt0.c3)))) DESC, ((((vt1.c0) BETWEEN (rt0.c4) AND (vt1.c0)))<((((rt0.c1))<((vt1.c0)))))  NULLS FIRST);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c4) IS TRUE)) NOTNULL) WHERE (((rt0.c3)<<(rt0.c2)) COLLATE BINARY) ORDER BY ((((rt0.c3) IS FALSE))LIKE(((rt0.c0)+(rt0.c3)))) DESC, ((((vt1.c0) BETWEEN (rt0.c4) AND (vt1.c0)))<((((rt0.c1))<((vt1.c0)))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((('0.7232511317609513') NOT BETWEEN (rt0.c4) AND (vt1.c0))))<>((rt0.c4 COLLATE RTRIM))) WHERE ((((~ (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((('0.7232511317609513') NOT BETWEEN (rt0.c4) AND (vt1.c0))))<>((rt0.c4 COLLATE RTRIM))));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((('0.7232511317609513') NOT BETWEEN (rt0.c4) AND (vt1.c0))))<>((rt0.c4 COLLATE RTRIM))) WHERE ((((~ (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((('0.7232511317609513') NOT BETWEEN (rt0.c4) AND (vt1.c0))))<>((rt0.c4 COLLATE RTRIM))));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((('0.7232511317609513') NOT BETWEEN (rt0.c4) AND (vt1.c0))))<>((rt0.c4 COLLATE RTRIM))) WHERE ((((~ (vt0.c0))) NOT NULL));
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN rt0.c3 END)AND(((rt0.c1)IS(rt0.c2)))))AND((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN rt0.c3 END)AND(((rt0.c1)IS(rt0.c2)))))AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN rt0.c3 END)AND(((rt0.c1)IS(rt0.c2)))))AND((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN rt0.c3 END)AND(((rt0.c1)IS(rt0.c2)))))AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN rt0.c3 END)AND(((rt0.c1)IS(rt0.c2)))))AND((~ (rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((rt0.c3, rt0.c1, rt0.c4))<=((rt0.c4, vt0.c0, rt0.c2))))=(CAST(rt0.c4 AS NUMERIC)))) ORDER BY LIKELY(rt0.c2) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, rt0.c1, rt0.c4))<=((rt0.c4, vt0.c0, rt0.c2))))==(CAST(rt0.c4 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY LIKELY(rt0.c2) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((rt0.c3, rt0.c1, rt0.c4))<=((rt0.c4, vt0.c0, rt0.c2))))=(CAST(rt0.c4 AS NUMERIC)))) ORDER BY LIKELY(rt0.c2) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, rt0.c1, rt0.c4))<=((rt0.c4, vt0.c0, rt0.c2))))==(CAST(rt0.c4 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY LIKELY(rt0.c2) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((rt0.c3, rt0.c1, rt0.c4))<=((rt0.c4, vt0.c0, rt0.c2))))=(CAST(rt0.c4 AS NUMERIC)))) ORDER BY LIKELY(rt0.c2) COLLATE RTRIM;
SELECT * FROM vt1, vt0 WHERE (((vt1.c0) NOTNULL)) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(TIME(vt0.c0, vt0.c0, vt1.c0))))OR((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(TIME(vt0.c0, vt0.c0, vt1.c0))))OR((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0) NOTNULL)) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(TIME(vt0.c0, vt0.c0, vt1.c0))))OR((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(TIME(vt0.c0, vt0.c0, vt1.c0))))OR((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0) NOTNULL)) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(TIME(vt0.c0, vt0.c0, vt1.c0))))OR((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (LOWER(DISTINCT vt1.c0)) AND (((rt0.c4) ISNULL)))) ORDER BY ((((vt1.c0)+(vt1.c0))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (NULLIF(DISTINCT rt0.c1, rt0.c4)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) BETWEEN (LOWER(DISTINCT vt1.c0)) AND (((rt0.c4) ISNULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((vt1.c0)+(vt1.c0))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (NULLIF(DISTINCT rt0.c1, rt0.c4)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (LOWER(DISTINCT vt1.c0)) AND (((rt0.c4) ISNULL)))) ORDER BY ((((vt1.c0)+(vt1.c0))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (NULLIF(DISTINCT rt0.c1, rt0.c4)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) BETWEEN (LOWER(DISTINCT vt1.c0)) AND (((rt0.c4) ISNULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((vt1.c0)+(vt1.c0))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (NULLIF(DISTINCT rt0.c1, rt0.c4)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (LOWER(DISTINCT vt1.c0)) AND (((rt0.c4) ISNULL)))) ORDER BY ((((vt1.c0)+(vt1.c0))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (NULLIF(DISTINCT rt0.c1, rt0.c4)))  NULLS LAST;
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((((((x'')OR(rt0.c4 COLLATE NOCASE)))OR(CAST(rt0.c3 AS TEXT))))OR(((((((((rt0.c0)OR(rt0.c0)))AND(vt1.c0)))OR(rt0.c3)))AND(NULL)))))AND((~ (rt0.c1))))) ORDER BY CASE WHEN (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))) THEN TRIM(0.476732147743563, vt1.c0) ELSE ((vt0.c0) IS TRUE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(rt0.c4 COLLATE NOCASE)))OR(CAST(rt0.c3 AS TEXT))))OR(((((((((rt0.c0)OR(rt0.c0)))AND(vt1.c0)))OR(rt0.c3)))AND(NULL)))))AND((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CASE WHEN (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))) THEN TRIM(0.476732147743563, vt1.c0) ELSE ((vt0.c0) IS TRUE) END DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((((((x'')OR(rt0.c4 COLLATE NOCASE)))OR(CAST(rt0.c3 AS TEXT))))OR(((((((((rt0.c0)OR(rt0.c0)))AND(vt1.c0)))OR(rt0.c3)))AND(NULL)))))AND((~ (rt0.c1))))) ORDER BY CASE WHEN (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))) THEN TRIM(0.476732147743563, vt1.c0) ELSE ((vt0.c0) IS TRUE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(rt0.c4 COLLATE NOCASE)))OR(CAST(rt0.c3 AS TEXT))))OR(((((((((rt0.c0)OR(rt0.c0)))AND(vt1.c0)))OR(rt0.c3)))AND(NULL)))))AND((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CASE WHEN (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))) THEN TRIM(0.476732147743563, vt1.c0) ELSE ((vt0.c0) IS TRUE) END DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((((((x'')OR(rt0.c4 COLLATE NOCASE)))OR(CAST(rt0.c3 AS TEXT))))OR(((((((((rt0.c0)OR(rt0.c0)))AND(vt1.c0)))OR(rt0.c3)))AND(NULL)))))AND((~ (rt0.c1))))) ORDER BY CASE WHEN (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))) THEN TRIM(0.476732147743563, vt1.c0) ELSE ((vt0.c0) IS TRUE) END DESC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (((((0.8145580087798417) NOT NULL))+(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.8145580087798417) NOT NULL))+(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((0.8145580087798417) NOT NULL))+(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.8145580087798417) NOT NULL))+(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((0.8145580087798417) NOT NULL))+(vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)&(vt1.c0)), ((vt1.c0)IS NOT(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))<((((vt1.c0)AND(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)<(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)&(vt1.c0)), ((vt1.c0)IS NOT(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))<((((vt1.c0)AND(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)<(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)&(vt1.c0)), ((vt1.c0)IS NOT(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))<((((vt1.c0)AND(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)<(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)&(vt1.c0)), ((vt1.c0)IS NOT(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))<((((vt1.c0)AND(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)<(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)&(vt1.c0)), ((vt1.c0)IS NOT(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))<((((vt1.c0)AND(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)<(vt1.c0))))));
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT (- (rt0.c1)), CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END)) ORDER BY (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))>((rt0.c4 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (- (rt0.c1)), CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))>((rt0.c4 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT (- (rt0.c1)), CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END)) ORDER BY (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))>((rt0.c4 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (- (rt0.c1)), CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))>((rt0.c4 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT (- (rt0.c1)), CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END)) ORDER BY (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))>((rt0.c4 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END  WHEN vt1.c0 THEN CAST('U䬌ῥIꥶB' AS TEXT) END WHERE ((((vt0.c0 IN ()))>>(vt1.c0))) ORDER BY ((((((((1684646262)OR(vt1.c0)))OR(vt0.c0)))AND((vt1.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>>(vt1.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END  WHEN vt1.c0 THEN CAST('U䬌ῥIꥶB' AS TEXT) END ORDER BY ((((((((1684646262)OR(vt1.c0)))OR(vt0.c0)))AND((vt1.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END  WHEN vt1.c0 THEN CAST('U䬌ῥIꥶB' AS TEXT) END WHERE ((((vt0.c0 IN ()))>>(vt1.c0))) ORDER BY ((((((((1684646262)OR(vt1.c0)))OR(vt0.c0)))AND((vt1.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>>(vt1.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END  WHEN vt1.c0 THEN CAST('U䬌ῥIꥶB' AS TEXT) END ORDER BY ((((((((1684646262)OR(vt1.c0)))OR(vt0.c0)))AND((vt1.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END  WHEN vt1.c0 THEN CAST('U䬌ῥIꥶB' AS TEXT) END WHERE ((((vt0.c0 IN ()))>>(vt1.c0))) ORDER BY ((((((((1684646262)OR(vt1.c0)))OR(vt0.c0)))AND((vt1.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (CAST(((((((((rt0.c4)AND('')))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) AS INTEGER)) ORDER BY ((((rt0.c2)|(rt0.c3)))IS((vt1.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c4)AND('')))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY ((((rt0.c2)|(rt0.c3)))IS((vt1.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (CAST(((((((((rt0.c4)AND('')))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) AS INTEGER)) ORDER BY ((((rt0.c2)|(rt0.c3)))IS((vt1.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c4)AND('')))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY ((((rt0.c2)|(rt0.c3)))IS((vt1.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (CAST(((((((((rt0.c4)AND('')))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)) AS INTEGER)) ORDER BY ((((rt0.c2)|(rt0.c3)))IS((vt1.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY WHERE (((x'')<('fẵﰩg#uH'''))) ORDER BY rt0.c4 COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<('fẵﰩg#uH'''))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY ORDER BY rt0.c4 COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY WHERE (((x'')<('fẵﰩg#uH'''))) ORDER BY rt0.c4 COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<('fẵﰩg#uH'''))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY ORDER BY rt0.c4 COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY WHERE (((x'')<('fẵﰩg#uH'''))) ORDER BY rt0.c4 COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM vt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((vt1.c0 IN ()) IN ((NULL IN ()))) WHERE ((((vt1.c0 IN ()))||(CAST(vt1.c0 AS REAL)))) ORDER BY ((vt1.c0) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))||(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt1.c0 IN ()) IN ((NULL IN ()))) ORDER BY ((vt1.c0) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((vt1.c0 IN ()) IN ((NULL IN ()))) WHERE ((((vt1.c0 IN ()))||(CAST(vt1.c0 AS REAL)))) ORDER BY ((vt1.c0) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))||(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt1.c0 IN ()) IN ((NULL IN ()))) ORDER BY ((vt1.c0) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((vt1.c0 IN ()) IN ((NULL IN ()))) WHERE ((((vt1.c0 IN ()))||(CAST(vt1.c0 AS REAL)))) ORDER BY ((vt1.c0) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, vt1 WHERE (rt0.c3 COLLATE NOCASE) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY CAST(rt0.c1 COLLATE RTRIM AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (rt0.c3 COLLATE NOCASE) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY CAST(rt0.c1 COLLATE RTRIM AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (rt0.c3 COLLATE NOCASE) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS REAL)  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((0.11965125808471488) NOT NULL) THEN LIKELY(rt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((0.11965125808471488) NOT NULL) THEN LIKELY(rt0.c1) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((0.11965125808471488) NOT NULL) THEN LIKELY(rt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((0.11965125808471488) NOT NULL) THEN LIKELY(rt0.c1) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((0.11965125808471488) NOT NULL) THEN LIKELY(rt0.c1) END);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (0Xd55650c);
SELECT SUM(count) FROM (SELECT ((0xd55650c) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (0Xd55650c);
SELECT SUM(count) FROM (SELECT ((0xd55650c) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (0Xd55650c);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c4, rt0.c1, rt0.c3))!=((vt0.c0, x'', rt0.c0))))LIKE(((rt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4, rt0.c1, rt0.c3))<>((vt0.c0, x'', rt0.c0))))LIKE(((rt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c4, rt0.c1, rt0.c3))!=((vt0.c0, x'', rt0.c0))))LIKE(((rt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4, rt0.c1, rt0.c3))<>((vt0.c0, x'', rt0.c0))))LIKE(((rt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c4, rt0.c1, rt0.c3))!=((vt0.c0, x'', rt0.c0))))LIKE(((rt0.c0)>=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((('k&{}㽂') NOTNULL) IN (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((('k&{}㽂') NOTNULL) IN (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((('k&{}㽂') NOTNULL) IN (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((('k&{}㽂') NOTNULL) IN (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((('k&{}㽂') NOTNULL) IN (CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (COALESCE(vt0.c0, vt0.c0) IN ()) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (COALESCE(vt0.c0, vt0.c0) IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (COALESCE(vt0.c0, vt0.c0) IN ()) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (COALESCE(vt0.c0, vt0.c0) IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (COALESCE(vt0.c0, vt0.c0) IN ()) WHERE (NULL);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)||(vt1.c0)) THEN CAST(vt1.c0 AS REAL) WHEN CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (0X6eed89fd IN ()) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN ((vt1.c0)|(vt1.c0)) WHEN (vt1.c0 IN ()) THEN (NULL IN (vt1.c0)) END) ORDER BY ((((vt1.c0) ISNULL))+(NULL)) DESC  NULLS FIRST, CAST(((vt1.c0)*(vt1.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)||(vt1.c0)) THEN CAST(vt1.c0 AS REAL) WHEN CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (0x6eed89fd IN ()) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN ((vt1.c0)|(vt1.c0)) WHEN (vt1.c0 IN ()) THEN (NULL IN (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL))+(NULL)) DESC  NULLS FIRST, CAST(((vt1.c0)*(vt1.c0)) AS INTEGER) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)||(vt1.c0)) THEN CAST(vt1.c0 AS REAL) WHEN CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (0X6eed89fd IN ()) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN ((vt1.c0)|(vt1.c0)) WHEN (vt1.c0 IN ()) THEN (NULL IN (vt1.c0)) END) ORDER BY ((((vt1.c0) ISNULL))+(NULL)) DESC  NULLS FIRST, CAST(((vt1.c0)*(vt1.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)||(vt1.c0)) THEN CAST(vt1.c0 AS REAL) WHEN CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (0x6eed89fd IN ()) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN ((vt1.c0)|(vt1.c0)) WHEN (vt1.c0 IN ()) THEN (NULL IN (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL))+(NULL)) DESC  NULLS FIRST, CAST(((vt1.c0)*(vt1.c0)) AS INTEGER) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)||(vt1.c0)) THEN CAST(vt1.c0 AS REAL) WHEN CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (0X6eed89fd IN ()) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN ((vt1.c0)|(vt1.c0)) WHEN (vt1.c0 IN ()) THEN (NULL IN (vt1.c0)) END) ORDER BY ((((vt1.c0) ISNULL))+(NULL)) DESC  NULLS FIRST, CAST(((vt1.c0)*(vt1.c0)) AS INTEGER) ASC;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((- (((rt0.c2)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2)||(vt0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((- (((rt0.c2)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2)||(vt0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((- (((rt0.c2)||(vt0.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c0) IS TRUE) COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN vt0 ON CAST(((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)) AS BLOB) WHERE (((((('947371359'))>=((vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((('947371359'))>=((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c0) IS TRUE) COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN vt0 ON CAST(((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)) AS BLOB));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c0) IS TRUE) COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN vt0 ON CAST(((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)) AS BLOB) WHERE (((((('947371359'))>=((vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((('947371359'))>=((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c0) IS TRUE) COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN vt0 ON CAST(((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)) AS BLOB));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c0) IS TRUE) COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN vt0 ON CAST(((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)) AS BLOB) WHERE (((((('947371359'))>=((vt1.c0)))) IS TRUE));
SELECT * FROM rt0 WHERE (((json_insert(rt0.c2, 0.4901646045642404, rt0.c1))||((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c4, rt0.c0)) AND ((rt0.c0, rt0.c4, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((json_insert(rt0.c2, 0.4901646045642404, rt0.c1))||((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c4, rt0.c0)) AND ((rt0.c0, rt0.c4, rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((json_insert(rt0.c2, 0.4901646045642404, rt0.c1))||((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c4, rt0.c0)) AND ((rt0.c0, rt0.c4, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((json_insert(rt0.c2, 0.4901646045642404, rt0.c1))||((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c4, rt0.c0)) AND ((rt0.c0, rt0.c4, rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((NULL IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NULL IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((NULL IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NULL IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((NULL IN ()) AS INTEGER));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((rt0.c0 COLLATE NOCASE)*(((rt0.c4) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)*(((rt0.c4) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((rt0.c0 COLLATE NOCASE)*(((rt0.c4) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)*(((rt0.c4) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((rt0.c0 COLLATE NOCASE)*(((rt0.c4) IS FALSE))));
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ('-1553155148') ORDER BY (((vt0.c0)) BETWEEN ((rt0.c3)) AND (((vt0.c0 IN (rt0.c0, rt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1553155148') IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((vt0.c0)) BETWEEN ((rt0.c3)) AND (((vt0.c0 IN (rt0.c0, rt0.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ('-1553155148') ORDER BY (((vt0.c0)) BETWEEN ((rt0.c3)) AND (((vt0.c0 IN (rt0.c0, rt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1553155148') IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((vt0.c0)) BETWEEN ((rt0.c3)) AND (((vt0.c0 IN (rt0.c0, rt0.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ('-1553155148') ORDER BY (((vt0.c0)) BETWEEN ((rt0.c3)) AND (((vt0.c0 IN (rt0.c0, rt0.c1))))) DESC  NULLS LAST;
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c1) ISNULL) IN ())) ORDER BY (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END IN ((x'' IN ()), ((rt0.c2)<<(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END IN ((x'' IN ()), ((rt0.c2)<<(vt0.c0))))  NULLS LAST);
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c1) ISNULL) IN ())) ORDER BY (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END IN ((x'' IN ()), ((rt0.c2)<<(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END IN ((x'' IN ()), ((rt0.c2)<<(vt0.c0))))  NULLS LAST);
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c1) ISNULL) IN ())) ORDER BY (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END IN ((x'' IN ()), ((rt0.c2)<<(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c3)==(rt0.c2)))+((NOT (rt0.c0)))) LEFT OUTER JOIN vt0 ON LIKELY(((rt0.c2)/(rt0.c0))) WHERE (796550533);
SELECT SUM(count) FROM (SELECT ((796550533) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c3)==(rt0.c2)))+((NOT (rt0.c0)))) LEFT OUTER JOIN vt0 ON LIKELY(((rt0.c2)/(rt0.c0))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c3)==(rt0.c2)))+((NOT (rt0.c0)))) LEFT OUTER JOIN vt0 ON LIKELY(((rt0.c2)/(rt0.c0))) WHERE (796550533);
SELECT SUM(count) FROM (SELECT ((796550533) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c3)==(rt0.c2)))+((NOT (rt0.c0)))) LEFT OUTER JOIN vt0 ON LIKELY(((rt0.c2)/(rt0.c0))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c3)==(rt0.c2)))+((NOT (rt0.c0)))) LEFT OUTER JOIN vt0 ON LIKELY(((rt0.c2)/(rt0.c0))) WHERE (796550533);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(ABS(rt0.c0) AS INTEGER)) ORDER BY CAST(((x'') BETWEEN (rt0.c0) AND (rt0.c3)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(rt0.c0) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((x'') BETWEEN (rt0.c0) AND (rt0.c3)) AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(ABS(rt0.c0) AS INTEGER)) ORDER BY CAST(((x'') BETWEEN (rt0.c0) AND (rt0.c3)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(rt0.c0) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((x'') BETWEEN (rt0.c0) AND (rt0.c3)) AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(ABS(rt0.c0) AS INTEGER)) ORDER BY CAST(((x'') BETWEEN (rt0.c0) AND (rt0.c3)) AS NUMERIC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON NULLIF(DISTINCT CASE WHEN x'' THEN rt0.c3 ELSE vt0.c0 END, ((rt0.c4)<<(rt0.c0))) WHERE ((((NULL IN (rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NULL IN (rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON NULLIF(DISTINCT CASE WHEN x'' THEN rt0.c3 ELSE vt0.c0 END, ((rt0.c4)<<(rt0.c0))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON NULLIF(DISTINCT CASE WHEN x'' THEN rt0.c3 ELSE vt0.c0 END, ((rt0.c4)<<(rt0.c0))) WHERE ((((NULL IN (rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NULL IN (rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON NULLIF(DISTINCT CASE WHEN x'' THEN rt0.c3 ELSE vt0.c0 END, ((rt0.c4)<<(rt0.c0))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON NULLIF(DISTINCT CASE WHEN x'' THEN rt0.c3 ELSE vt0.c0 END, ((rt0.c4)<<(rt0.c0))) WHERE ((((NULL IN (rt0.c2))) IS FALSE));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c3 IN ()))-((0.8365321534144557 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))-((0.8365321534144557 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c3 IN ()))-((0.8365321534144557 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))-((0.8365321534144557 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c3 IN ()))-((0.8365321534144557 IN ()))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (~ (((vt1.c0)LIKE(NULL)))) WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c2 AS INTEGER), 0.821022640723865));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT CAST(rt0.c2 AS INTEGER), 0.821022640723865)) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (~ (((vt1.c0)LIKE(NULL)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (~ (((vt1.c0)LIKE(NULL)))) WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c2 AS INTEGER), 0.821022640723865));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT CAST(rt0.c2 AS INTEGER), 0.821022640723865)) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (~ (((vt1.c0)LIKE(NULL)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (~ (((vt1.c0)LIKE(NULL)))) WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c2 AS INTEGER), 0.821022640723865));
SELECT * FROM rt0, vt1 WHERE ((((~ ('-1798046679'))) BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))) AND (((rt0.c2)<=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((~ ('-1798046679'))) BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))) AND (((rt0.c2)<=(rt0.c3))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((~ ('-1798046679'))) BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))) AND (((rt0.c2)<=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((~ ('-1798046679'))) BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))) AND (((rt0.c2)<=(rt0.c3))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((~ ('-1798046679'))) BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))) AND (((rt0.c2)<=(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) NOTNULL))AND(((rt0.c0) IS TRUE))))AND('2113087207')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOTNULL))AND(((rt0.c0) IS TRUE))))AND('2113087207'))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) NOTNULL))AND(((rt0.c0) IS TRUE))))AND('2113087207')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOTNULL))AND(((rt0.c0) IS TRUE))))AND('2113087207'))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) NOTNULL))AND(((rt0.c0) IS TRUE))))AND('2113087207')));
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)!=(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)!=(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)!=(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)!=(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)!=(rt0.c2))) IS TRUE));
SELECT ALL * FROM rt0, vt1 WHERE ((~ ((((rt0.c4))<>((rt0.c4))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c4))<>((rt0.c4)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((~ ((((rt0.c4))<>((rt0.c4))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c4))<>((rt0.c4)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((~ ((((rt0.c4))<>((rt0.c4))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (0.014130373882182079))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (0.014130373882182079))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (0.014130373882182079))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (0.014130373882182079))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (0.014130373882182079))) IS TRUE));
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((NOT (rt0.c4)), rt0.c0 COLLATE BINARY, (vt0.c0 IN ())))<=(((rt0.c2 IN (rt0.c1)), rt0.c1 COLLATE RTRIM, ((rt0.c4) NOT NULL)))) LEFT OUTER JOIN vt1 ON LOWER(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END) WHERE (rt0.c4) ORDER BY (- (rt0.c3)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((NOT (rt0.c4)), rt0.c0 COLLATE BINARY, (vt0.c0 IN ())))<=(((rt0.c2 IN (rt0.c1)), rt0.c1 COLLATE RTRIM, ((rt0.c4) NOT NULL)))) LEFT OUTER JOIN vt1 ON LOWER(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END) ORDER BY (- (rt0.c3)) COLLATE NOCASE);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((NOT (rt0.c4)), rt0.c0 COLLATE BINARY, (vt0.c0 IN ())))<=(((rt0.c2 IN (rt0.c1)), rt0.c1 COLLATE RTRIM, ((rt0.c4) NOT NULL)))) LEFT OUTER JOIN vt1 ON LOWER(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END) WHERE (rt0.c4) ORDER BY (- (rt0.c3)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((NOT (rt0.c4)), rt0.c0 COLLATE BINARY, (vt0.c0 IN ())))<=(((rt0.c2 IN (rt0.c1)), rt0.c1 COLLATE RTRIM, ((rt0.c4) NOT NULL)))) LEFT OUTER JOIN vt1 ON LOWER(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END) ORDER BY (- (rt0.c3)) COLLATE NOCASE);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((NOT (rt0.c4)), rt0.c0 COLLATE BINARY, (vt0.c0 IN ())))<=(((rt0.c2 IN (rt0.c1)), rt0.c1 COLLATE RTRIM, ((rt0.c4) NOT NULL)))) LEFT OUTER JOIN vt1 ON LOWER(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END) WHERE (rt0.c4) ORDER BY (- (rt0.c3)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (x'00cf') AND (vt0.c0))) NOT BETWEEN (((NULL) IS TRUE)) AND (TRIM(vt0.c0)))) ORDER BY ((((- (vt0.c0))))<>((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST, (- ((- (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (x'00cf') AND (vt0.c0))) NOT BETWEEN (((NULL) IS TRUE)) AND (TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((- (vt0.c0))))!=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST, (- ((- (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (x'00cf') AND (vt0.c0))) NOT BETWEEN (((NULL) IS TRUE)) AND (TRIM(vt0.c0)))) ORDER BY ((((- (vt0.c0))))<>((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST, (- ((- (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (x'00cf') AND (vt0.c0))) NOT BETWEEN (((NULL) IS TRUE)) AND (TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((- (vt0.c0))))!=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST, (- ((- (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (x'00cf') AND (vt0.c0))) NOT BETWEEN (((NULL) IS TRUE)) AND (TRIM(vt0.c0)))) ORDER BY ((((- (vt0.c0))))<>((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS FIRST, (- ((- (vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0) ISNULL)))<((((vt1.c0) IS FALSE)))) ASC, vt1.c0, ((vt1.c0)<>(vt1.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) ISNULL)))<((((vt1.c0) IS FALSE)))) ASC, vt1.c0, ((vt1.c0)!=(vt1.c0)) COLLATE RTRIM DESC);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0) ISNULL)))<((((vt1.c0) IS FALSE)))) ASC, vt1.c0, ((vt1.c0)<>(vt1.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) ISNULL)))<((((vt1.c0) IS FALSE)))) ASC, vt1.c0, ((vt1.c0)!=(vt1.c0)) COLLATE RTRIM DESC);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0) ISNULL)))<((((vt1.c0) IS FALSE)))) ASC, vt1.c0, ((vt1.c0)<>(vt1.c0)) COLLATE RTRIM DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((+ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((+ (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((+ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((+ (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((+ (vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c4)>>(rt0.c0)))OR((((rt0.c2, rt0.c1, 0.4853379941285001)) BETWEEN ((rt0.c0, rt0.c3, vt0.c0)) AND ((rt0.c1, vt0.c0, vt0.c0))))))AND(rt0.c3 COLLATE BINARY))) ORDER BY (((+ (rt0.c3)))!=(rt0.c4))  NULLS LAST, CAST(((rt0.c3)/(rt0.c3)) AS BLOB), ((rt0.c3)|(rt0.c3)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)>>(rt0.c0)))OR((((rt0.c2, rt0.c1, 0.4853379941285001)) BETWEEN ((rt0.c0, rt0.c3, vt0.c0)) AND ((rt0.c1, vt0.c0, vt0.c0))))))AND(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((+ (rt0.c3)))<>(rt0.c4))  NULLS LAST, CAST(((rt0.c3)/(rt0.c3)) AS BLOB), ((rt0.c3)|(rt0.c3)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c4)>>(rt0.c0)))OR((((rt0.c2, rt0.c1, 0.4853379941285001)) BETWEEN ((rt0.c0, rt0.c3, vt0.c0)) AND ((rt0.c1, vt0.c0, vt0.c0))))))AND(rt0.c3 COLLATE BINARY))) ORDER BY (((+ (rt0.c3)))!=(rt0.c4))  NULLS LAST, CAST(((rt0.c3)/(rt0.c3)) AS BLOB), ((rt0.c3)|(rt0.c3)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)>>(rt0.c0)))OR((((rt0.c2, rt0.c1, 0.4853379941285001)) BETWEEN ((rt0.c0, rt0.c3, vt0.c0)) AND ((rt0.c1, vt0.c0, vt0.c0))))))AND(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((+ (rt0.c3)))<>(rt0.c4))  NULLS LAST, CAST(((rt0.c3)/(rt0.c3)) AS BLOB), ((rt0.c3)|(rt0.c3)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c4)>>(rt0.c0)))OR((((rt0.c2, rt0.c1, 0.4853379941285001)) BETWEEN ((rt0.c0, rt0.c3, vt0.c0)) AND ((rt0.c1, vt0.c0, vt0.c0))))))AND(rt0.c3 COLLATE BINARY))) ORDER BY (((+ (rt0.c3)))!=(rt0.c4))  NULLS LAST, CAST(((rt0.c3)/(rt0.c3)) AS BLOB), ((rt0.c3)|(rt0.c3)) COLLATE NOCASE ASC;
SELECT * FROM vt1 WHERE (((vt1.c0)*(vt1.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)*(vt1.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0)*(vt1.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)*(vt1.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0)*(vt1.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((((vt1.c0))>((vt0.c0)))))) ORDER BY ((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))==(((vt0.c0)*(vt0.c0)))) DESC, TRIM(DISTINCT (~ (vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((((vt1.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))=(((vt0.c0)*(vt0.c0)))) DESC, TRIM(DISTINCT (~ (vt1.c0))) DESC);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((((vt1.c0))>((vt0.c0)))))) ORDER BY ((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))==(((vt0.c0)*(vt0.c0)))) DESC, TRIM(DISTINCT (~ (vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((((vt1.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))=(((vt0.c0)*(vt0.c0)))) DESC, TRIM(DISTINCT (~ (vt1.c0))) DESC);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((((vt1.c0))>((vt0.c0)))))) ORDER BY ((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))==(((vt0.c0)*(vt0.c0)))) DESC, TRIM(DISTINCT (~ (vt1.c0))) DESC;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((-1.553155148E9)) BETWEEN (((rt0.c3 IN ()))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((-1.553155148E9)) BETWEEN (((rt0.c3 IN ()))) AND ((NULL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((-1.553155148E9)) BETWEEN (((rt0.c3 IN ()))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((-1.553155148E9)) BETWEEN (((rt0.c3 IN ()))) AND ((NULL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((-1.553155148E9)) BETWEEN (((rt0.c3 IN ()))) AND ((NULL))));
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN vt1 WHERE (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 ELSE vt1.c0 END)|(rt0.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 ELSE vt1.c0 END)|(rt0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN vt1 WHERE (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 ELSE vt1.c0 END)|(rt0.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 ELSE vt1.c0 END)|(rt0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN vt1 WHERE (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 ELSE vt1.c0 END)|(rt0.c4 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((vt1.c0))<((rt0.c0))) IN (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0))<((rt0.c0))) IN (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((vt1.c0))<((rt0.c0))) IN (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0))<((rt0.c0))) IN (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((vt1.c0))<((rt0.c0))) IN (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END)));
SELECT * FROM vt0, rt0, vt1 WHERE ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)) IN ()));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- (CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- (CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- (CAST(vt1.c0 AS REAL))));
SELECT * FROM vt1, rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c1)%(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)%(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c1)%(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)%(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c1)%(vt1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (STRFTIME(((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)), rt0.c2, ABS(DISTINCT rt0.c3))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((STRFTIME(((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)), rt0.c2, ABS(DISTINCT rt0.c3))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (STRFTIME(((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)), rt0.c2, ABS(DISTINCT rt0.c3))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((STRFTIME(((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)), rt0.c2, ABS(DISTINCT rt0.c3))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (STRFTIME(((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)), rt0.c2, ABS(DISTINCT rt0.c3))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3))) IS TRUE)  NULLS FIRST;
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((vt0.c0)-(CASE WHEN rt0.c2 THEN vt0.c0 END)) FULL OUTER JOIN vt0 ON ((((((((rt0.c0)AND(((((((((((((rt0.c3)OR(rt0.c1)))AND(vt1.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c4)))))AND(rt0.c4)))OR(x'')))AND(((rt0.c2) NOTNULL))) WHERE (((((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))IS(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))IS(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((vt0.c0)-(CASE WHEN rt0.c2 THEN vt0.c0 END)) FULL OUTER JOIN vt0 ON ((((((((rt0.c0)AND(((((((((((((rt0.c3)OR(rt0.c1)))AND(vt1.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c4)))))AND(rt0.c4)))OR(x'')))AND(((rt0.c2) NOTNULL))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((vt0.c0)-(CASE WHEN rt0.c2 THEN vt0.c0 END)) FULL OUTER JOIN vt0 ON ((((((((rt0.c0)AND(((((((((((((rt0.c3)OR(rt0.c1)))AND(vt1.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c4)))))AND(rt0.c4)))OR(x'')))AND(((rt0.c2) NOTNULL))) WHERE (((((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))IS(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)))IS(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((vt0.c0)-(CASE WHEN rt0.c2 THEN vt0.c0 END)) FULL OUTER JOIN vt0 ON ((((((((rt0.c0)AND(((((((((((((rt0.c3)OR(rt0.c1)))AND(vt1.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c4)))))AND(rt0.c4)))OR(x'')))AND(((rt0.c2) NOTNULL))));
SELECT * FROM vt0, rt0 NATURAL JOIN vt1 WHERE ((((rt0.c4 IN ())) NOT BETWEEN (rt0.c3) AND (rt0.c3 COLLATE BINARY))) ORDER BY CASE WHEN rt0.c1 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN (((rt0.c0))<=((rt0.c1))) THEN (rt0.c4 IN (vt0.c0)) WHEN ((vt1.c0) IS TRUE) THEN (rt0.c1 IN ()) END  NULLS FIRST, UPPER('0.3913287362543283') DESC, CASE LIKELY(DISTINCT vt1.c0)  WHEN (+ (vt0.c0)) THEN rt0.c1 END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ())) NOT BETWEEN (rt0.c3) AND (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1 ORDER BY CASE WHEN rt0.c1 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN (((rt0.c0))<=((rt0.c1))) THEN (rt0.c4 IN (vt0.c0)) WHEN ((vt1.c0) IS TRUE) THEN (rt0.c1 IN ()) END  NULLS FIRST, UPPER('0.3913287362543283') DESC, CASE LIKELY(DISTINCT vt1.c0)  WHEN (+ (vt0.c0)) THEN rt0.c1 END);
SELECT * FROM vt0, rt0 NATURAL JOIN vt1 WHERE ((((rt0.c4 IN ())) NOT BETWEEN (rt0.c3) AND (rt0.c3 COLLATE BINARY))) ORDER BY CASE WHEN rt0.c1 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN (((rt0.c0))<=((rt0.c1))) THEN (rt0.c4 IN (vt0.c0)) WHEN ((vt1.c0) IS TRUE) THEN (rt0.c1 IN ()) END  NULLS FIRST, UPPER('0.3913287362543283') DESC, CASE LIKELY(DISTINCT vt1.c0)  WHEN (+ (vt0.c0)) THEN rt0.c1 END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ())) NOT BETWEEN (rt0.c3) AND (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1 ORDER BY CASE WHEN rt0.c1 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN (((rt0.c0))<=((rt0.c1))) THEN (rt0.c4 IN (vt0.c0)) WHEN ((vt1.c0) IS TRUE) THEN (rt0.c1 IN ()) END  NULLS FIRST, UPPER('0.3913287362543283') DESC, CASE LIKELY(DISTINCT vt1.c0)  WHEN (+ (vt0.c0)) THEN rt0.c1 END);
SELECT * FROM vt0, rt0 NATURAL JOIN vt1 WHERE ((((rt0.c4 IN ())) NOT BETWEEN (rt0.c3) AND (rt0.c3 COLLATE BINARY))) ORDER BY CASE WHEN rt0.c1 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN (((rt0.c0))<=((rt0.c1))) THEN (rt0.c4 IN (vt0.c0)) WHEN ((vt1.c0) IS TRUE) THEN (rt0.c1 IN ()) END  NULLS FIRST, UPPER('0.3913287362543283') DESC, CASE LIKELY(DISTINCT vt1.c0)  WHEN (+ (vt0.c0)) THEN rt0.c1 END;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt1 WHERE ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt1 WHERE ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt1 WHERE ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)AND(rt0.c1)) IN ((('-784368831') ISNULL), (((('-998599025')AND(rt0.c4)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)AND(rt0.c1)) IN ((('-784368831') ISNULL), (((('-998599025')AND(rt0.c4)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)AND(rt0.c1)) IN ((('-784368831') ISNULL), (((('-998599025')AND(rt0.c4)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)AND(rt0.c1)) IN ((('-784368831') ISNULL), (((('-998599025')AND(rt0.c4)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)AND(rt0.c1)) IN ((('-784368831') ISNULL), (((('-998599025')AND(rt0.c4)))OR(rt0.c2)))));
SELECT * FROM vt1, rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (vt0.c0);
SELECT ALL * FROM rt0, vt1 WHERE (CASE 0.9580943727388507  WHEN (- (rt0.c1)) THEN '2145087901' ELSE (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE 0.9580943727388507  WHEN (- (rt0.c1)) THEN '2145087901' ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE 0.9580943727388507  WHEN (- (rt0.c1)) THEN '2145087901' ELSE (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE 0.9580943727388507  WHEN (- (rt0.c1)) THEN '2145087901' ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE 0.9580943727388507  WHEN (- (rt0.c1)) THEN '2145087901' ELSE (rt0.c1 IN ()) END);
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE BINARY AS TEXT) WHERE (CAST(((((vt1.c0)OR(rt0.c4)))OR(rt0.c2)) AS INTEGER)) ORDER BY ((((NULL)OR(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c3)))))AND(((rt0.c2)&(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(rt0.c4)))OR(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE BINARY AS TEXT) ORDER BY ((((NULL)OR(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c3)))))AND(((rt0.c2)&(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE BINARY AS TEXT) WHERE (CAST(((((vt1.c0)OR(rt0.c4)))OR(rt0.c2)) AS INTEGER)) ORDER BY ((((NULL)OR(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c3)))))AND(((rt0.c2)&(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(rt0.c4)))OR(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE BINARY AS TEXT) ORDER BY ((((NULL)OR(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c3)))))AND(((rt0.c2)&(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE BINARY AS TEXT) WHERE (CAST(((((vt1.c0)OR(rt0.c4)))OR(rt0.c2)) AS INTEGER)) ORDER BY ((((NULL)OR(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c3)))))AND(((rt0.c2)&(rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))) BETWEEN (x'63d6') AND ((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((0.19151260312076357, rt0.c0, rt0.c4)) AND ((rt0.c3, rt0.c4, rt0.c3)))))) ORDER BY CASE (NOT (rt0.c2))  WHEN (((rt0.c2))!=((rt0.c4))) THEN rt0.c3 ELSE (+ (rt0.c3)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))) BETWEEN (x'63d6') AND ((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((0.19151260312076357, rt0.c0, rt0.c4)) AND ((rt0.c3, rt0.c4, rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (NOT (rt0.c2))  WHEN (((rt0.c2))!=((rt0.c4))) THEN rt0.c3 ELSE (+ (rt0.c3)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))) BETWEEN (x'63d6') AND ((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((0.19151260312076357, rt0.c0, rt0.c4)) AND ((rt0.c3, rt0.c4, rt0.c3)))))) ORDER BY CASE (NOT (rt0.c2))  WHEN (((rt0.c2))!=((rt0.c4))) THEN rt0.c3 ELSE (+ (rt0.c3)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))) BETWEEN (x'63d6') AND ((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((0.19151260312076357, rt0.c0, rt0.c4)) AND ((rt0.c3, rt0.c4, rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (NOT (rt0.c2))  WHEN (((rt0.c2))!=((rt0.c4))) THEN rt0.c3 ELSE (+ (rt0.c3)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))) BETWEEN (x'63d6') AND ((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((0.19151260312076357, rt0.c0, rt0.c4)) AND ((rt0.c3, rt0.c4, rt0.c3)))))) ORDER BY CASE (NOT (rt0.c2))  WHEN (((rt0.c2))!=((rt0.c4))) THEN rt0.c3 ELSE (+ (rt0.c3)) END  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((x'd687')<>((rt0.c1 IN (vt1.c0, rt0.c1))))) ORDER BY (((((rt0.c0)AND(rt0.c2)))OR(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((x'd687')!=((rt0.c1 IN (vt1.c0, rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((((rt0.c0)AND(rt0.c2)))OR(vt0.c0)) IN ()));
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((x'd687')<>((rt0.c1 IN (vt1.c0, rt0.c1))))) ORDER BY (((((rt0.c0)AND(rt0.c2)))OR(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((x'd687')!=((rt0.c1 IN (vt1.c0, rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((((rt0.c0)AND(rt0.c2)))OR(vt0.c0)) IN ()));
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((x'd687')<>((rt0.c1 IN (vt1.c0, rt0.c1))))) ORDER BY (((((rt0.c0)AND(rt0.c2)))OR(vt0.c0)) IN ());
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN rt0.c3 COLLATE BINARY THEN (NOT (rt0.c3)) WHEN IFNULL(DISTINCT '-43569612', rt0.c3) THEN (NOT (rt0.c2)) WHEN ((rt0.c2)LIKE('-1908330298')) THEN TYPEOF(DISTINCT vt1.c0) ELSE HEX(DISTINCT vt1.c0) END) ORDER BY ((NULL)>=(((rt0.c4)=(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 COLLATE BINARY THEN (NOT (rt0.c3)) WHEN IFNULL(DISTINCT '-43569612', rt0.c3) THEN (NOT (rt0.c2)) WHEN ((rt0.c2)LIKE('-1908330298')) THEN TYPEOF(DISTINCT vt1.c0) ELSE HEX(DISTINCT vt1.c0) END) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((NULL)>=(((rt0.c4)==(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN rt0.c3 COLLATE BINARY THEN (NOT (rt0.c3)) WHEN IFNULL(DISTINCT '-43569612', rt0.c3) THEN (NOT (rt0.c2)) WHEN ((rt0.c2)LIKE('-1908330298')) THEN TYPEOF(DISTINCT vt1.c0) ELSE HEX(DISTINCT vt1.c0) END) ORDER BY ((NULL)>=(((rt0.c4)=(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 COLLATE BINARY THEN (NOT (rt0.c3)) WHEN IFNULL(DISTINCT '-43569612', rt0.c3) THEN (NOT (rt0.c2)) WHEN ((rt0.c2)LIKE('-1908330298')) THEN TYPEOF(DISTINCT vt1.c0) ELSE HEX(DISTINCT vt1.c0) END) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((NULL)>=(((rt0.c4)==(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN rt0.c3 COLLATE BINARY THEN (NOT (rt0.c3)) WHEN IFNULL(DISTINCT '-43569612', rt0.c3) THEN (NOT (rt0.c2)) WHEN ((rt0.c2)LIKE('-1908330298')) THEN TYPEOF(DISTINCT vt1.c0) ELSE HEX(DISTINCT vt1.c0) END) ORDER BY ((NULL)>=(((rt0.c4)=(vt1.c0))))  NULLS LAST;
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((~ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((~ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((~ (rt0.c2)));
SELECT ALL * FROM rt0, vt1 WHERE (CAST(rt0.c3 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(rt0.c3 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(rt0.c3 COLLATE NOCASE AS REAL));
SELECT * FROM vt1 WHERE ((+ (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (((vt1.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1 WHERE (LIKELY(DISTINCT vt1.c0)) ORDER BY (('1223578571')%(((vt1.c0)>=(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt1 ORDER BY (('1223578571')%(((vt1.c0)>=(vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (LIKELY(DISTINCT vt1.c0)) ORDER BY (('1223578571')%(((vt1.c0)>=(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt1 ORDER BY (('1223578571')%(((vt1.c0)>=(vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (LIKELY(DISTINCT vt1.c0)) ORDER BY (('1223578571')%(((vt1.c0)>=(vt1.c0)))) ASC;
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT ((vt1.c0) ISNULL)) WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT ((vt1.c0) ISNULL)));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT ((vt1.c0) ISNULL)) WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT ((vt1.c0) ISNULL)));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ABS(DISTINCT ((vt1.c0) ISNULL)) WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))) WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (vt1.c0 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))) ORDER BY (vt1.c0 IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))) WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (vt1.c0 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))) ORDER BY (vt1.c0 IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))) WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (vt1.c0 IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 NOT INDEXED WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY ((((((((vt1.c0)OR(((((((((vt1.c0)AND(rt0.c1)))OR(vt1.c0)))OR(rt0.c1)))AND(vt1.c0)))))OR((rt0.c0 IN (vt1.c0)))))AND(CAST(-9.93054195E8 AS NUMERIC))))AND(((vt1.c0)*(NULL))))  NULLS FIRST, CAST(vt0.c0 AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((((((vt1.c0)OR(((((((((vt1.c0)AND(rt0.c1)))OR(vt1.c0)))OR(rt0.c1)))AND(vt1.c0)))))OR((rt0.c0 IN (vt1.c0)))))AND(CAST(-9.93054195E8 AS NUMERIC))))AND(((vt1.c0)*(NULL))))  NULLS FIRST, CAST(vt0.c0 AS TEXT) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 NOT INDEXED WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY ((((((((vt1.c0)OR(((((((((vt1.c0)AND(rt0.c1)))OR(vt1.c0)))OR(rt0.c1)))AND(vt1.c0)))))OR((rt0.c0 IN (vt1.c0)))))AND(CAST(-9.93054195E8 AS NUMERIC))))AND(((vt1.c0)*(NULL))))  NULLS FIRST, CAST(vt0.c0 AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((((((vt1.c0)OR(((((((((vt1.c0)AND(rt0.c1)))OR(vt1.c0)))OR(rt0.c1)))AND(vt1.c0)))))OR((rt0.c0 IN (vt1.c0)))))AND(CAST(-9.93054195E8 AS NUMERIC))))AND(((vt1.c0)*(NULL))))  NULLS FIRST, CAST(vt0.c0 AS TEXT) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 NOT INDEXED WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY ((((((((vt1.c0)OR(((((((((vt1.c0)AND(rt0.c1)))OR(vt1.c0)))OR(rt0.c1)))AND(vt1.c0)))))OR((rt0.c0 IN (vt1.c0)))))AND(CAST(-9.93054195E8 AS NUMERIC))))AND(((vt1.c0)*(NULL))))  NULLS FIRST, CAST(vt0.c0 AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ (rt0.c3)) COLLATE BINARY) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c0 DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ (rt0.c3)) COLLATE BINARY) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c0 DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ (rt0.c3)) COLLATE BINARY) ORDER BY vt1.c0 DESC;
SELECT * FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((((rt0.c0)*(rt0.c3))) NOT NULL) WHERE (((((CASE WHEN rt0.c4 THEN vt1.c0 ELSE NULL END)OR(CASE rt0.c2  WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN -883375426 THEN rt0.c4 ELSE NULL END)))OR(rt0.c0 COLLATE NOCASE))) ORDER BY (((rt0.c2)) NOT BETWEEN (((((rt0.c4)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) AND ((json_extract(rt0.c0, vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c4 THEN vt1.c0 ELSE NULL END)OR(CASE rt0.c2  WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN -883375426 THEN rt0.c4 ELSE NULL END)))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((((rt0.c0)*(rt0.c3))) NOT NULL) ORDER BY (((rt0.c2)) NOT BETWEEN (((((rt0.c4)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) AND ((json_extract(rt0.c0, vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((((rt0.c0)*(rt0.c3))) NOT NULL) WHERE (((((CASE WHEN rt0.c4 THEN vt1.c0 ELSE NULL END)OR(CASE rt0.c2  WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN -883375426 THEN rt0.c4 ELSE NULL END)))OR(rt0.c0 COLLATE NOCASE))) ORDER BY (((rt0.c2)) NOT BETWEEN (((((rt0.c4)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) AND ((json_extract(rt0.c0, vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c4 THEN vt1.c0 ELSE NULL END)OR(CASE rt0.c2  WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN -883375426 THEN rt0.c4 ELSE NULL END)))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((((rt0.c0)*(rt0.c3))) NOT NULL) ORDER BY (((rt0.c2)) NOT BETWEEN (((((rt0.c4)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) AND ((json_extract(rt0.c0, vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) WHERE ((rt0.c4 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) WHERE ((rt0.c4 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) WHERE ((rt0.c4 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON CASE ((vt1.c0)<=(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '{3t' ELSE (+ (vt0.c0)) END INNER JOIN vt0 ON CASE CASE WHEN vt1.c0 THEN rt0.c0 END  WHEN LTRIM(rt0.c1, rt0.c2) THEN (rt0.c3 IN ()) WHEN CASE rt0.c0  WHEN rt0.c2 THEN x'' ELSE x'' END THEN ((rt0.c3) IS TRUE) WHEN (rt0.c1 IN (vt0.c0)) THEN (((rt0.c0))=((rt0.c2))) ELSE CAST(vt0.c0 AS REAL) END WHERE (CASE CASE vt1.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END  WHEN CAST(rt0.c4 AS NUMERIC) THEN ((vt1.c0)||(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END  WHEN CAST(rt0.c4 AS NUMERIC) THEN ((vt1.c0)||(vt1.c0)) END) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON CASE ((vt1.c0)<=(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '{3t' ELSE (+ (vt0.c0)) END INNER JOIN vt0 ON CASE CASE WHEN vt1.c0 THEN rt0.c0 END  WHEN LTRIM(rt0.c1, rt0.c2) THEN (rt0.c3 IN ()) WHEN CASE rt0.c0  WHEN rt0.c2 THEN x'' ELSE x'' END THEN ((rt0.c3) IS TRUE) WHEN (rt0.c1 IN (vt0.c0)) THEN (((rt0.c0))=((rt0.c2))) ELSE CAST(vt0.c0 AS REAL) END);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON CASE ((vt1.c0)<=(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '{3t' ELSE (+ (vt0.c0)) END INNER JOIN vt0 ON CASE CASE WHEN vt1.c0 THEN rt0.c0 END  WHEN LTRIM(rt0.c1, rt0.c2) THEN (rt0.c3 IN ()) WHEN CASE rt0.c0  WHEN rt0.c2 THEN x'' ELSE x'' END THEN ((rt0.c3) IS TRUE) WHEN (rt0.c1 IN (vt0.c0)) THEN (((rt0.c0))=((rt0.c2))) ELSE CAST(vt0.c0 AS REAL) END WHERE (CASE CASE vt1.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END  WHEN CAST(rt0.c4 AS NUMERIC) THEN ((vt1.c0)||(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END  WHEN CAST(rt0.c4 AS NUMERIC) THEN ((vt1.c0)||(vt1.c0)) END) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON CASE ((vt1.c0)<=(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '{3t' ELSE (+ (vt0.c0)) END INNER JOIN vt0 ON CASE CASE WHEN vt1.c0 THEN rt0.c0 END  WHEN LTRIM(rt0.c1, rt0.c2) THEN (rt0.c3 IN ()) WHEN CASE rt0.c0  WHEN rt0.c2 THEN x'' ELSE x'' END THEN ((rt0.c3) IS TRUE) WHEN (rt0.c1 IN (vt0.c0)) THEN (((rt0.c0))=((rt0.c2))) ELSE CAST(vt0.c0 AS REAL) END);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON CASE ((vt1.c0)<=(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '{3t' ELSE (+ (vt0.c0)) END INNER JOIN vt0 ON CASE CASE WHEN vt1.c0 THEN rt0.c0 END  WHEN LTRIM(rt0.c1, rt0.c2) THEN (rt0.c3 IN ()) WHEN CASE rt0.c0  WHEN rt0.c2 THEN x'' ELSE x'' END THEN ((rt0.c3) IS TRUE) WHEN (rt0.c1 IN (vt0.c0)) THEN (((rt0.c0))=((rt0.c2))) ELSE CAST(vt0.c0 AS REAL) END WHERE (CASE CASE vt1.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END  WHEN CAST(rt0.c4 AS NUMERIC) THEN ((vt1.c0)||(vt1.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CHANGES());
SELECT COUNT(*) FROM vt1 WHERE (DATE(COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0), SUBSTR(NULL, x''), json_insert(vt1.c0, vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((DATE(COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0), SUBSTR(NULL, x''), json_insert(vt1.c0, vt1.c0, vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (DATE(COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0), SUBSTR(NULL, x''), json_insert(vt1.c0, vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((DATE(COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0), SUBSTR(NULL, x''), json_insert(vt1.c0, vt1.c0, vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((vt1.c0)) BETWEEN ((rt0.c3)) AND ((vt1.c0)))) BETWEEN (((((rt0.c0)AND(rt0.c2)))AND(1124011464))) AND (((rt0.c0)-(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((rt0.c3)) AND ((vt1.c0)))) BETWEEN (((((rt0.c0)AND(rt0.c2)))AND(1124011464))) AND (((rt0.c0)-(rt0.c4))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((vt1.c0)) BETWEEN ((rt0.c3)) AND ((vt1.c0)))) BETWEEN (((((rt0.c0)AND(rt0.c2)))AND(1124011464))) AND (((rt0.c0)-(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((rt0.c3)) AND ((vt1.c0)))) BETWEEN (((((rt0.c0)AND(rt0.c2)))AND(1124011464))) AND (((rt0.c0)-(rt0.c4))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((vt1.c0)) BETWEEN ((rt0.c3)) AND ((vt1.c0)))) BETWEEN (((((rt0.c0)AND(rt0.c2)))AND(1124011464))) AND (((rt0.c0)-(rt0.c4)))));
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((rt0.c2 IN ())) IS TRUE)) ORDER BY ((((rt0.c2)>(rt0.c4)))<(((rt0.c2)AND(rt0.c0)))), (('0.797143166375382' COLLATE RTRIM) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((rt0.c2)>(rt0.c4)))<(((rt0.c2)AND(rt0.c0)))), (('0.797143166375382' COLLATE RTRIM) IS TRUE) DESC);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((rt0.c2 IN ())) IS TRUE)) ORDER BY ((((rt0.c2)>(rt0.c4)))<(((rt0.c2)AND(rt0.c0)))), (('0.797143166375382' COLLATE RTRIM) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((rt0.c2)>(rt0.c4)))<(((rt0.c2)AND(rt0.c0)))), (('0.797143166375382' COLLATE RTRIM) IS TRUE) DESC);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((rt0.c2 IN ())) IS TRUE)) ORDER BY ((((rt0.c2)>(rt0.c4)))<(((rt0.c2)AND(rt0.c0)))), (('0.797143166375382' COLLATE RTRIM) IS TRUE) DESC;
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2) BETWEEN (((vt0.c0)>>(vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY ((0.6820144838465613) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (((vt0.c0)>>(vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((0.6820144838465613) IS TRUE) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2) BETWEEN (((vt0.c0)>>(vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY ((0.6820144838465613) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (((vt0.c0)>>(vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((0.6820144838465613) IS TRUE) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2) BETWEEN (((vt0.c0)>>(vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY ((0.6820144838465613) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c1 AS NUMERIC) WHERE ((((rt0.c1)) NOT BETWEEN ((0.933199014437)) AND ((((rt0.c2) BETWEEN (rt0.c4) AND (-4.3569612E7))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((0.933199014437)) AND ((((rt0.c2) BETWEEN (rt0.c4) AND (-4.3569612E7)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c1 AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c1 AS NUMERIC) WHERE ((((rt0.c1)) NOT BETWEEN ((0.933199014437)) AND ((((rt0.c2) BETWEEN (rt0.c4) AND (-4.3569612E7))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((0.933199014437)) AND ((((rt0.c2) BETWEEN (rt0.c4) AND (-4.3569612E7)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c1 AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON CAST(rt0.c1 AS NUMERIC) WHERE ((((rt0.c1)) NOT BETWEEN ((0.933199014437)) AND ((((rt0.c2) BETWEEN (rt0.c4) AND (-4.3569612E7))))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (x''))) IS TRUE)) ORDER BY CAST(vt1.c0 COLLATE BINARY AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (x''))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 COLLATE BINARY AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (x''))) IS TRUE)) ORDER BY CAST(vt1.c0 COLLATE BINARY AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (x''))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 COLLATE BINARY AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (x''))) IS TRUE)) ORDER BY CAST(vt1.c0 COLLATE BINARY AS NUMERIC) ASC  NULLS LAST;
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((rt0.c3 IN ())) BETWEEN (CASE 'YEFC㤻WW'  WHEN NULL THEN rt0.c4 END) AND ((NOT (rt0.c3))))) ORDER BY json_array_length((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))), ((rt0.c2) NOT NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) BETWEEN (CASE 'YEFC㤻WW'  WHEN NULL THEN rt0.c4 END) AND ((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY json_array_length((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))), ((rt0.c2) NOT NULL))  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((rt0.c3 IN ())) BETWEEN (CASE 'YEFC㤻WW'  WHEN NULL THEN rt0.c4 END) AND ((NOT (rt0.c3))))) ORDER BY json_array_length((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))), ((rt0.c2) NOT NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) BETWEEN (CASE 'YEFC㤻WW'  WHEN NULL THEN rt0.c4 END) AND ((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY json_array_length((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))), ((rt0.c2) NOT NULL))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (x'');
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (0.8204044561123354);
SELECT SUM(count) FROM (SELECT ALL ((0.8204044561123354) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (0.8204044561123354);
SELECT SUM(count) FROM (SELECT ALL ((0.8204044561123354) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (0.8204044561123354);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((((rt0.c4)<>(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)<>(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((((rt0.c4)<>(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)<>(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((((rt0.c4)<>(rt0.c1))) IS TRUE));
SELECT ALL * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) ELSE ((vt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) ELSE ((vt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) ELSE ((vt0.c0) ISNULL) END);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (0x1885ff82) ORDER BY NULLIF(DISTINCT rt0.c4, (~ (rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0x1885ff82) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY NULLIF(DISTINCT rt0.c4, (~ (rt0.c3))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (0x1885ff82) ORDER BY NULLIF(DISTINCT rt0.c4, (~ (rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0x1885ff82) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY NULLIF(DISTINCT rt0.c4, (~ (rt0.c3))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (0x1885ff82) ORDER BY NULLIF(DISTINCT rt0.c4, (~ (rt0.c3))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0))*(((vt1.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c0))*(((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0))*(((vt1.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c0))*(((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0))*(((vt1.c0)OR(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (x'')));
SELECT ALL * FROM vt0, rt0 WHERE ((((~ (rt0.c0))) NOTNULL)) ORDER BY (+ (CAST(rt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (CAST(rt0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((~ (rt0.c0))) NOTNULL)) ORDER BY (+ (CAST(rt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (CAST(rt0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((~ (rt0.c0))) NOTNULL)) ORDER BY (+ (CAST(rt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS BLOB)) ORDER BY (~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)%(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS BLOB)) ORDER BY (~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)%(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS BLOB)) ORDER BY (~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END IN ())) ORDER BY (((CAST(rt0.c2 AS NUMERIC)))<=((((rt0.c3)>=(rt0.c4)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c2 AS NUMERIC)))<=((((rt0.c3)>=(rt0.c4)))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END IN ())) ORDER BY (((CAST(rt0.c2 AS NUMERIC)))<=((((rt0.c3)>=(rt0.c4)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c2 AS NUMERIC)))<=((((rt0.c3)>=(rt0.c4)))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END IN ())) ORDER BY (((CAST(rt0.c2 AS NUMERIC)))<=((((rt0.c3)>=(rt0.c4)))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((CAST(rt0.c4 AS BLOB)))=((rt0.c1)))) ORDER BY TIME(IFNULL(rt0.c4, rt0.c0), (NOT (rt0.c2)), rt0.c0, ((rt0.c3)OR(rt0.c0)), (NOT (rt0.c3)))  NULLS LAST, (NOT ((NOT (rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c4 AS BLOB)))==((rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY TIME(IFNULL(rt0.c4, rt0.c0), (NOT (rt0.c2)), rt0.c0, ((rt0.c3)OR(rt0.c0)), (NOT (rt0.c3)))  NULLS LAST, (NOT ((NOT (rt0.c3)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((CAST(rt0.c4 AS BLOB)))=((rt0.c1)))) ORDER BY TIME(IFNULL(rt0.c4, rt0.c0), (NOT (rt0.c2)), rt0.c0, ((rt0.c3)OR(rt0.c0)), (NOT (rt0.c3)))  NULLS LAST, (NOT ((NOT (rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c4 AS BLOB)))==((rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY TIME(IFNULL(rt0.c4, rt0.c0), (NOT (rt0.c2)), rt0.c0, ((rt0.c3)OR(rt0.c0)), (NOT (rt0.c3)))  NULLS LAST, (NOT ((NOT (rt0.c3)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((CAST(rt0.c4 AS BLOB)))=((rt0.c1)))) ORDER BY TIME(IFNULL(rt0.c4, rt0.c0), (NOT (rt0.c2)), rt0.c0, ((rt0.c3)OR(rt0.c0)), (NOT (rt0.c3)))  NULLS LAST, (NOT ((NOT (rt0.c3)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) AS TEXT));
SELECT COUNT(*) FROM vt1, vt0 WHERE ('') ORDER BY ((vt0.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0) IS FALSE));
SELECT COUNT(*) FROM vt1, vt0 WHERE ('') ORDER BY ((vt0.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0) IS FALSE));
SELECT COUNT(*) FROM vt1, vt0 WHERE ('') ORDER BY ((vt0.c0) IS FALSE);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((~ (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((~ (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((~ (vt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (rt0.c2) ORDER BY CASE IFNULL(rt0.c4, vt1.c0)  WHEN (vt0.c0 IN ()) THEN vt1.c0 COLLATE NOCASE ELSE ((rt0.c0)IS(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE IFNULL(rt0.c4, vt1.c0)  WHEN (vt0.c0 IN ()) THEN vt1.c0 COLLATE NOCASE ELSE ((rt0.c0)IS(rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (rt0.c2) ORDER BY CASE IFNULL(rt0.c4, vt1.c0)  WHEN (vt0.c0 IN ()) THEN vt1.c0 COLLATE NOCASE ELSE ((rt0.c0)IS(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE IFNULL(rt0.c4, vt1.c0)  WHEN (vt0.c0 IN ()) THEN vt1.c0 COLLATE NOCASE ELSE ((rt0.c0)IS(rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (rt0.c2) ORDER BY CASE IFNULL(rt0.c4, vt1.c0)  WHEN (vt0.c0 IN ()) THEN vt1.c0 COLLATE NOCASE ELSE ((rt0.c0)IS(rt0.c0)) END;
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((vt0.c0)LIKE(rt0.c4))))<(((vt1.c0 IN (rt0.c1, rt0.c0)))))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN CAST(rt0.c3 AS INTEGER) THEN 0.8947772542315491 COLLATE RTRIM ELSE ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END ASC  NULLS FIRST, x'' DESC  NULLS LAST, rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)LIKE(rt0.c4))))<(((vt1.c0 IN (rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN CAST(rt0.c3 AS INTEGER) THEN 0.8947772542315491 COLLATE RTRIM ELSE ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END ASC  NULLS FIRST, x'' DESC  NULLS LAST, rt0.c3  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((vt0.c0)LIKE(rt0.c4))))<(((vt1.c0 IN (rt0.c1, rt0.c0)))))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN CAST(rt0.c3 AS INTEGER) THEN 0.8947772542315491 COLLATE RTRIM ELSE ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END ASC  NULLS FIRST, x'' DESC  NULLS LAST, rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)LIKE(rt0.c4))))<(((vt1.c0 IN (rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN CAST(rt0.c3 AS INTEGER) THEN 0.8947772542315491 COLLATE RTRIM ELSE ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END ASC  NULLS FIRST, x'' DESC  NULLS LAST, rt0.c3  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((vt0.c0)LIKE(rt0.c4))))<(((vt1.c0 IN (rt0.c1, rt0.c0)))))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN CAST(rt0.c3 AS INTEGER) THEN 0.8947772542315491 COLLATE RTRIM ELSE ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END ASC  NULLS FIRST, x'' DESC  NULLS LAST, rt0.c3  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (2010698533) ORDER BY ((vt1.c0 COLLATE RTRIM)=((NOT (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((2010698533) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE RTRIM)==((NOT (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (2010698533) ORDER BY ((vt1.c0 COLLATE RTRIM)=((NOT (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((2010698533) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE RTRIM)==((NOT (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (2010698533) ORDER BY ((vt1.c0 COLLATE RTRIM)=((NOT (vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((CAST(vt0.c0 AS NUMERIC) IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS NUMERIC) IN (vt0.c0))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((CAST(vt0.c0 AS NUMERIC) IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS NUMERIC) IN (vt0.c0))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((CAST(vt0.c0 AS NUMERIC) IN (vt0.c0)));
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))AND((rt0.c4 IN (rt0.c2)))))OR(rt0.c1))) ORDER BY ((((((((LIKELY(DISTINCT rt0.c2))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))AND(CAST('622087615' AS INTEGER))))OR(((((9.47371359E8)OR(rt0.c1)))OR(rt0.c1)))))OR(CAST(rt0.c4 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))AND((rt0.c4 IN (rt0.c2)))))OR(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((LIKELY(DISTINCT rt0.c2))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))AND(CAST('622087615' AS INTEGER))))OR(((((9.47371359E8)OR(rt0.c1)))OR(rt0.c1)))))OR(CAST(rt0.c4 AS BLOB))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))AND((rt0.c4 IN (rt0.c2)))))OR(rt0.c1))) ORDER BY ((((((((LIKELY(DISTINCT rt0.c2))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))AND(CAST('622087615' AS INTEGER))))OR(((((9.47371359E8)OR(rt0.c1)))OR(rt0.c1)))))OR(CAST(rt0.c4 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))AND((rt0.c4 IN (rt0.c2)))))OR(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((LIKELY(DISTINCT rt0.c2))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))AND(CAST('622087615' AS INTEGER))))OR(((((9.47371359E8)OR(rt0.c1)))OR(rt0.c1)))))OR(CAST(rt0.c4 AS BLOB))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))AND((rt0.c4 IN (rt0.c2)))))OR(rt0.c1))) ORDER BY ((((((((LIKELY(DISTINCT rt0.c2))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))AND(CAST('622087615' AS INTEGER))))OR(((((9.47371359E8)OR(rt0.c1)))OR(rt0.c1)))))OR(CAST(rt0.c4 AS BLOB)));
SELECT * FROM vt0, rt0 WHERE ((NOT (x'0c3c')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x'0c3c'))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((NOT (x'0c3c')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x'0c3c'))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((NOT (x'0c3c')));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS TEXT)) ORDER BY ((((((((DATE(rt0.c0, vt1.c0, vt1.c0))OR(NULL)))AND(((('1138097029')) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))OR((+ (rt0.c4)))))AND(x'')) DESC  NULLS LAST, ((((((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((((DATE(rt0.c0, vt1.c0, vt1.c0))OR(NULL)))AND(((('1138097029')) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))OR((+ (rt0.c4)))))AND(x'')) DESC  NULLS LAST, ((((((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS TEXT)) ORDER BY ((((((((DATE(rt0.c0, vt1.c0, vt1.c0))OR(NULL)))AND(((('1138097029')) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))OR((+ (rt0.c4)))))AND(x'')) DESC  NULLS LAST, ((((((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((((DATE(rt0.c0, vt1.c0, vt1.c0))OR(NULL)))AND(((('1138097029')) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))OR((+ (rt0.c4)))))AND(x'')) DESC  NULLS LAST, ((((((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS TEXT)) ORDER BY ((((((((DATE(rt0.c0, vt1.c0, vt1.c0))OR(NULL)))AND(((('1138097029')) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))OR((+ (rt0.c4)))))AND(x'')) DESC  NULLS LAST, ((((((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CAST('0.4443012273906952' AS TEXT) WHERE (((((vt0.c0)+(vt1.c0))) ISNULL)) ORDER BY CAST(vt1.c0 AS TEXT) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST('0.4443012273906952' AS TEXT) ORDER BY CAST(vt1.c0 AS TEXT) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CAST('0.4443012273906952' AS TEXT) WHERE (((((vt0.c0)+(vt1.c0))) ISNULL)) ORDER BY CAST(vt1.c0 AS TEXT) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST('0.4443012273906952' AS TEXT) ORDER BY CAST(vt1.c0 AS TEXT) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CAST('0.4443012273906952' AS TEXT) WHERE (((((vt0.c0)+(vt1.c0))) ISNULL)) ORDER BY CAST(vt1.c0 AS TEXT) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ('') ORDER BY ((((0.8374647899405181) NOT NULL)) BETWEEN (CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 ELSE vt0.c0 END) AND (((rt0.c1)>=(rt0.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((0.8374647899405181) NOT NULL)) BETWEEN (CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 ELSE vt0.c0 END) AND (((rt0.c1)>=(rt0.c3)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ('') ORDER BY ((((0.8374647899405181) NOT NULL)) BETWEEN (CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 ELSE vt0.c0 END) AND (((rt0.c1)>=(rt0.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((0.8374647899405181) NOT NULL)) BETWEEN (CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 ELSE vt0.c0 END) AND (((rt0.c1)>=(rt0.c3)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ('') ORDER BY ((((0.8374647899405181) NOT NULL)) BETWEEN (CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 ELSE vt0.c0 END) AND (((rt0.c1)>=(rt0.c3)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)-(0.13953722621657993))) NOT BETWEEN ((NOT (rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))) ORDER BY rt0.c4 ASC  NULLS LAST, ((((rt0.c1, rt0.c1, 0.476732147743563))>=((rt0.c3, rt0.c1, rt0.c2))) IN (rt0.c4, (rt0.c2 IN ()), CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 0.23057966622168202 ELSE rt0.c2 END)) DESC  NULLS FIRST, TRIM(ABS(DISTINCT rt0.c4)) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)-(0.13953722621657993))) NOT BETWEEN ((NOT (rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4 ASC  NULLS LAST, ((((rt0.c1, rt0.c1, 0.476732147743563))>=((rt0.c3, rt0.c1, rt0.c2))) IN (rt0.c4, (rt0.c2 IN ()), CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 0.23057966622168202 ELSE rt0.c2 END)) DESC  NULLS FIRST, TRIM(ABS(DISTINCT rt0.c4)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)-(0.13953722621657993))) NOT BETWEEN ((NOT (rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))) ORDER BY rt0.c4 ASC  NULLS LAST, ((((rt0.c1, rt0.c1, 0.476732147743563))>=((rt0.c3, rt0.c1, rt0.c2))) IN (rt0.c4, (rt0.c2 IN ()), CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 0.23057966622168202 ELSE rt0.c2 END)) DESC  NULLS FIRST, TRIM(ABS(DISTINCT rt0.c4)) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)-(0.13953722621657993))) NOT BETWEEN ((NOT (rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4 ASC  NULLS LAST, ((((rt0.c1, rt0.c1, 0.476732147743563))>=((rt0.c3, rt0.c1, rt0.c2))) IN (rt0.c4, (rt0.c2 IN ()), CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 0.23057966622168202 ELSE rt0.c2 END)) DESC  NULLS FIRST, TRIM(ABS(DISTINCT rt0.c4)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)-(0.13953722621657993))) NOT BETWEEN ((NOT (rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))) ORDER BY rt0.c4 ASC  NULLS LAST, ((((rt0.c1, rt0.c1, 0.476732147743563))>=((rt0.c3, rt0.c1, rt0.c2))) IN (rt0.c4, (rt0.c2 IN ()), CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 0.23057966622168202 ELSE rt0.c2 END)) DESC  NULLS FIRST, TRIM(ABS(DISTINCT rt0.c4)) DESC;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((((((((((((((~ (rt0.c3)))OR(((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c1)))))AND((- (rt0.c3)))))AND(CAST(vt0.c0 AS NUMERIC))))AND(UNLIKELY(DISTINCT vt1.c0))))AND(rt0.c2)))OR(((vt0.c0)GLOB(rt0.c1))))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((~ (rt0.c3)))OR(((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c1)))))AND((- (rt0.c3)))))AND(CAST(vt0.c0 AS NUMERIC))))AND(UNLIKELY(DISTINCT vt1.c0))))AND(rt0.c2)))OR(((vt0.c0)GLOB(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((((((((((((((~ (rt0.c3)))OR(((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c1)))))AND((- (rt0.c3)))))AND(CAST(vt0.c0 AS NUMERIC))))AND(UNLIKELY(DISTINCT vt1.c0))))AND(rt0.c2)))OR(((vt0.c0)GLOB(rt0.c1))))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((~ (rt0.c3)))OR(((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c1)))))AND((- (rt0.c3)))))AND(CAST(vt0.c0 AS NUMERIC))))AND(UNLIKELY(DISTINCT vt1.c0))))AND(rt0.c2)))OR(((vt0.c0)GLOB(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((((((((((((((~ (rt0.c3)))OR(((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c1)))))AND((- (rt0.c3)))))AND(CAST(vt0.c0 AS NUMERIC))))AND(UNLIKELY(DISTINCT vt1.c0))))AND(rt0.c2)))OR(((vt0.c0)GLOB(rt0.c1))))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c1)) BETWEEN ((TRIM(vt0.c0, vt1.c0))) AND ((LOWER(rt0.c2)))) FULL OUTER JOIN vt0 ON CASE ((rt0.c3)>>(rt0.c1))  WHEN ((vt1.c0) IS TRUE) THEN ((rt0.c4) BETWEEN ('⽽KnH Ypg') AND (vt0.c0)) WHEN (((NULL))>((rt0.c4))) THEN NULL COLLATE BINARY WHEN (((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((vt1.c0, rt0.c1, rt0.c3)) AND ((rt0.c1, vt0.c0, vt1.c0))) THEN (((vt0.c0, rt0.c1, rt0.c1))>=((0.12976735558261576, rt0.c1, x'd554'))) END WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY ((((CAST(vt1.c0 AS BLOB))AND(rt0.c3 COLLATE NOCASE)))OR((NOT (vt0.c0))))  NULLS FIRST, (- (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))) DESC  NULLS LAST, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c1)) BETWEEN ((TRIM(vt0.c0, vt1.c0))) AND ((LOWER(rt0.c2)))) FULL OUTER JOIN vt0 ON CASE ((rt0.c3)>>(rt0.c1))  WHEN ((vt1.c0) IS TRUE) THEN ((rt0.c4) BETWEEN ('⽽KnH Ypg') AND (vt0.c0)) WHEN (((NULL))>((rt0.c4))) THEN NULL COLLATE BINARY WHEN (((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((vt1.c0, rt0.c1, rt0.c3)) AND ((rt0.c1, vt0.c0, vt1.c0))) THEN (((vt0.c0, rt0.c1, rt0.c1))>=((0.12976735558261576, rt0.c1, x'd554'))) END ORDER BY ((((CAST(vt1.c0 AS BLOB))AND(rt0.c3 COLLATE NOCASE)))OR((NOT (vt0.c0))))  NULLS FIRST, (- (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))) DESC  NULLS LAST, rt0.c0 DESC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c1)) BETWEEN ((TRIM(vt0.c0, vt1.c0))) AND ((LOWER(rt0.c2)))) FULL OUTER JOIN vt0 ON CASE ((rt0.c3)>>(rt0.c1))  WHEN ((vt1.c0) IS TRUE) THEN ((rt0.c4) BETWEEN ('⽽KnH Ypg') AND (vt0.c0)) WHEN (((NULL))>((rt0.c4))) THEN NULL COLLATE BINARY WHEN (((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((vt1.c0, rt0.c1, rt0.c3)) AND ((rt0.c1, vt0.c0, vt1.c0))) THEN (((vt0.c0, rt0.c1, rt0.c1))>=((0.12976735558261576, rt0.c1, x'd554'))) END WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY ((((CAST(vt1.c0 AS BLOB))AND(rt0.c3 COLLATE NOCASE)))OR((NOT (vt0.c0))))  NULLS FIRST, (- (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))) DESC  NULLS LAST, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c1)) BETWEEN ((TRIM(vt0.c0, vt1.c0))) AND ((LOWER(rt0.c2)))) FULL OUTER JOIN vt0 ON CASE ((rt0.c3)>>(rt0.c1))  WHEN ((vt1.c0) IS TRUE) THEN ((rt0.c4) BETWEEN ('⽽KnH Ypg') AND (vt0.c0)) WHEN (((NULL))>((rt0.c4))) THEN NULL COLLATE BINARY WHEN (((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((vt1.c0, rt0.c1, rt0.c3)) AND ((rt0.c1, vt0.c0, vt1.c0))) THEN (((vt0.c0, rt0.c1, rt0.c1))>=((0.12976735558261576, rt0.c1, x'd554'))) END ORDER BY ((((CAST(vt1.c0 AS BLOB))AND(rt0.c3 COLLATE NOCASE)))OR((NOT (vt0.c0))))  NULLS FIRST, (- (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))) DESC  NULLS LAST, rt0.c0 DESC);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((SQLITE_COMPILEOPTION_USED(rt0.c1)))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) ORDER BY UPPER(DISTINCT rt0.c1) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((SQLITE_COMPILEOPTION_USED(rt0.c1)))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY UPPER(DISTINCT rt0.c1) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((SQLITE_COMPILEOPTION_USED(rt0.c1)))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) ORDER BY UPPER(DISTINCT rt0.c1) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((SQLITE_COMPILEOPTION_USED(rt0.c1)))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY UPPER(DISTINCT rt0.c1) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((SQLITE_COMPILEOPTION_USED(rt0.c1)))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) ORDER BY UPPER(DISTINCT rt0.c1) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (PRINTF(vt0.c0) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((PRINTF(vt0.c0) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (PRINTF(vt0.c0) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((PRINTF(vt0.c0) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (PRINTF(vt0.c0) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0))<((vt0.c0))) COLLATE NOCASE) ORDER BY ((((vt0.c0) IS FALSE))<((NOT (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) IS FALSE))<((NOT (vt1.c0)))) DESC);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0))<((vt0.c0))) COLLATE NOCASE) ORDER BY ((((vt0.c0) IS FALSE))<((NOT (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) IS FALSE))<((NOT (vt1.c0)))) DESC);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0))<((vt0.c0))) COLLATE NOCASE) ORDER BY ((((vt0.c0) IS FALSE))<((NOT (vt1.c0)))) DESC;
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((rt0.c0)<=(rt0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)<=(rt0.c3)) AS BLOB)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((rt0.c0)<=(rt0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)<=(rt0.c3)) AS BLOB)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((rt0.c0)<=(rt0.c3)) AS BLOB));
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((vt0.c0)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((vt0.c0)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((vt0.c0))));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CASE ((vt1.c0)!=(rt0.c4))  WHEN vt1.c0 COLLATE NOCASE THEN MIN(rt0.c4, -1180527982, vt1.c0, '796550533') END) ORDER BY ((((((((((vt1.c0)OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))*((x'449b' IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)<>(rt0.c4))  WHEN vt1.c0 COLLATE NOCASE THEN MIN(rt0.c4, -1180527982, vt1.c0, '796550533') END) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((((((((((vt1.c0)OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))*((x'449b' IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CASE ((vt1.c0)!=(rt0.c4))  WHEN vt1.c0 COLLATE NOCASE THEN MIN(rt0.c4, -1180527982, vt1.c0, '796550533') END) ORDER BY ((((((((((vt1.c0)OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))*((x'449b' IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)<>(rt0.c4))  WHEN vt1.c0 COLLATE NOCASE THEN MIN(rt0.c4, -1180527982, vt1.c0, '796550533') END) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((((((((((vt1.c0)OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))*((x'449b' IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CASE ((vt1.c0)!=(rt0.c4))  WHEN vt1.c0 COLLATE NOCASE THEN MIN(rt0.c4, -1180527982, vt1.c0, '796550533') END) ORDER BY ((((((((((vt1.c0)OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))*((x'449b' IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST(((((vt0.c0)OR('')))AND(vt0.c0)) AS TEXT) WHERE (CAST(CAST(vt1.c0 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CAST(((((vt0.c0)OR('')))AND(vt0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST(((((vt0.c0)OR('')))AND(vt0.c0)) AS TEXT) WHERE (CAST(CAST(vt1.c0 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CAST(((((vt0.c0)OR('')))AND(vt0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST(((((vt0.c0)OR('')))AND(vt0.c0)) AS TEXT) WHERE (CAST(CAST(vt1.c0 AS BLOB) AS TEXT));
SELECT * FROM rt0 WHERE (((x'') NOTNULL)) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))<=(((rt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))<=(((rt0.c0) ISNULL))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((x'') NOTNULL)) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))<=(((rt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))<=(((rt0.c0) ISNULL))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((x'') NOTNULL)) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))<=(((rt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN vt1 ON (CASE WHEN rt0.c0 THEN rt0.c0 END IN ()) WHERE ('b)\*%&R');
SELECT SUM(count) FROM (SELECT ALL (('b)\*%&R') IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt1 ON (CASE WHEN rt0.c0 THEN rt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN vt1 ON (CASE WHEN rt0.c0 THEN rt0.c0 END IN ()) WHERE ('b)\*%&R');
SELECT SUM(count) FROM (SELECT ALL (('b)\*%&R') IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt1 ON (CASE WHEN rt0.c0 THEN rt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN vt1 ON (CASE WHEN rt0.c0 THEN rt0.c0 END IN ()) WHERE ('b)\*%&R');
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c4))) NOT BETWEEN ((+ (vt0.c0))) AND (rt0.c4 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c4))) NOT BETWEEN ((+ (vt0.c0))) AND (rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c4))) NOT BETWEEN ((+ (vt0.c0))) AND (rt0.c4 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c4))) NOT BETWEEN ((+ (vt0.c0))) AND (rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c4))) NOT BETWEEN ((+ (vt0.c0))) AND (rt0.c4 COLLATE RTRIM)));
SELECT * FROM vt0 WHERE (((vt0.c0)<(((0.8643693944557216)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(((0.8643693944557216)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)<(((0.8643693944557216)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(((0.8643693944557216)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)<(((0.8643693944557216)-(vt0.c0)))));
SELECT * FROM vt1 NOT INDEXED WHERE ((((((vt1.c0) NOTNULL), vt1.c0 COLLATE BINARY, vt1.c0))>((((vt1.c0)AND(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (+ (vt1.c0)))))) ORDER BY ((TRIM(vt1.c0))<>(IFNULL(DISTINCT vt1.c0, vt1.c0)))  NULLS FIRST, ((((vt1.c0)LIKE(0.08037878054331782)))<=((+ (vt1.c0)))), vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) NOTNULL), vt1.c0 COLLATE BINARY, vt1.c0))>((((vt1.c0)AND(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (+ (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((TRIM(vt1.c0))!=(IFNULL(DISTINCT vt1.c0, vt1.c0)))  NULLS FIRST, ((((vt1.c0)LIKE(0.08037878054331782)))<=((+ (vt1.c0)))), vt1.c0  NULLS LAST);
SELECT * FROM vt1 NOT INDEXED WHERE ((((((vt1.c0) NOTNULL), vt1.c0 COLLATE BINARY, vt1.c0))>((((vt1.c0)AND(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (+ (vt1.c0)))))) ORDER BY ((TRIM(vt1.c0))<>(IFNULL(DISTINCT vt1.c0, vt1.c0)))  NULLS FIRST, ((((vt1.c0)LIKE(0.08037878054331782)))<=((+ (vt1.c0)))), vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) NOTNULL), vt1.c0 COLLATE BINARY, vt1.c0))>((((vt1.c0)AND(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (+ (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((TRIM(vt1.c0))!=(IFNULL(DISTINCT vt1.c0, vt1.c0)))  NULLS FIRST, ((((vt1.c0)LIKE(0.08037878054331782)))<=((+ (vt1.c0)))), vt1.c0  NULLS LAST);
SELECT * FROM vt1 NOT INDEXED WHERE ((((((vt1.c0) NOTNULL), vt1.c0 COLLATE BINARY, vt1.c0))>((((vt1.c0)AND(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (+ (vt1.c0)))))) ORDER BY ((TRIM(vt1.c0))<>(IFNULL(DISTINCT vt1.c0, vt1.c0)))  NULLS FIRST, ((((vt1.c0)LIKE(0.08037878054331782)))<=((+ (vt1.c0)))), vt1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS BLOB));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN ('KfUV') AND (vt1.c0 COLLATE NOCASE))) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))IS NOT(((vt1.c0)%(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN ('KfUV') AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))IS NOT(((vt1.c0)%(vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN ('KfUV') AND (vt1.c0 COLLATE NOCASE))) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))IS NOT(((vt1.c0)%(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN ('KfUV') AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))IS NOT(((vt1.c0)%(vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN ('KfUV') AND (vt1.c0 COLLATE NOCASE))) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))IS NOT(((vt1.c0)%(vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CASE WHEN 'bj3J' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (vt1.c0 COLLATE NOCASE))) ORDER BY '0.6961623677529765' DESC  NULLS LAST, ((((x'')+(vt1.c0))) BETWEEN (vt1.c0) AND ((vt1.c0 IN (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CASE WHEN 'bj3J' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY '0.6961623677529765' DESC  NULLS LAST, ((((x'')+(vt1.c0))) BETWEEN (vt1.c0) AND ((vt1.c0 IN (vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CASE WHEN 'bj3J' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (vt1.c0 COLLATE NOCASE))) ORDER BY '0.6961623677529765' DESC  NULLS LAST, ((((x'')+(vt1.c0))) BETWEEN (vt1.c0) AND ((vt1.c0 IN (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CASE WHEN 'bj3J' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY '0.6961623677529765' DESC  NULLS LAST, ((((x'')+(vt1.c0))) BETWEEN (vt1.c0) AND ((vt1.c0 IN (vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CASE WHEN 'bj3J' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (vt1.c0 COLLATE NOCASE))) ORDER BY '0.6961623677529765' DESC  NULLS LAST, ((((x'')+(vt1.c0))) BETWEEN (vt1.c0) AND ((vt1.c0 IN (vt1.c0)))) DESC;
SELECT * FROM rt0, vt0, vt1 WHERE ((CASE WHEN rt0.c4 THEN rt0.c4 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c4 THEN rt0.c4 END IN ())) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE ((CASE WHEN rt0.c4 THEN rt0.c4 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c4 THEN rt0.c4 END IN ())) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE ((CASE WHEN rt0.c4 THEN rt0.c4 END IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)-(rt0.c1)))LIKE((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(rt0.c1)))LIKE((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)-(rt0.c1)))LIKE((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(rt0.c1)))LIKE((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)-(rt0.c1)))LIKE((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (~ (vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (~ (vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (~ (vt1.c0))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((+ (((vt1.c0) BETWEEN (-1.7976931348623157E308) AND (vt1.c0))))) ORDER BY ((vt0.c0) BETWEEN (vt1.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) BETWEEN (-1.7976931348623157E308) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0) BETWEEN (vt1.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((+ (((vt1.c0) BETWEEN (-1.7976931348623157E308) AND (vt1.c0))))) ORDER BY ((vt0.c0) BETWEEN (vt1.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) BETWEEN (-1.7976931348623157E308) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0) BETWEEN (vt1.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((+ (((vt1.c0) BETWEEN (-1.7976931348623157E308) AND (vt1.c0))))) ORDER BY ((vt0.c0) BETWEEN (vt1.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c4);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)))OR(CAST(rt0.c0 AS BLOB))))AND((((vt1.c0, rt0.c0, '800728341')) BETWEEN ((rt0.c2, vt1.c0, x'')) AND ((rt0.c2, rt0.c4, rt0.c4))))))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)))))OR('wrO6S-[MF')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)))OR(CAST(rt0.c0 AS BLOB))))AND((((vt1.c0, rt0.c0, '800728341')) BETWEEN ((rt0.c2, vt1.c0, x'')) AND ((rt0.c2, rt0.c4, rt0.c4))))))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)))))OR('wrO6S-[MF'))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)))OR(CAST(rt0.c0 AS BLOB))))AND((((vt1.c0, rt0.c0, '800728341')) BETWEEN ((rt0.c2, vt1.c0, x'')) AND ((rt0.c2, rt0.c4, rt0.c4))))))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)))))OR('wrO6S-[MF')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)))OR(CAST(rt0.c0 AS BLOB))))AND((((vt1.c0, rt0.c0, '800728341')) BETWEEN ((rt0.c2, vt1.c0, x'')) AND ((rt0.c2, rt0.c4, rt0.c4))))))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)))))OR('wrO6S-[MF'))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)))OR(CAST(rt0.c0 AS BLOB))))AND((((vt1.c0, rt0.c0, '800728341')) BETWEEN ((rt0.c2, vt1.c0, x'')) AND ((rt0.c2, rt0.c4, rt0.c4))))))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)))))OR('wrO6S-[MF')));
SELECT * FROM vt1, vt0, rt0 WHERE (0.3913287362543283);
SELECT SUM(count) FROM (SELECT ((0.3913287362543283) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (0.3913287362543283);
SELECT SUM(count) FROM (SELECT ((0.3913287362543283) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (0.3913287362543283);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((rt0.c1 IN ())) NOT BETWEEN (((vt0.c0)IS(rt0.c3))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))) WHERE (((vt0.c0) BETWEEN (((rt0.c4) ISNULL)) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (((rt0.c4) ISNULL)) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((rt0.c1 IN ())) NOT BETWEEN (((vt0.c0)IS(rt0.c3))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((rt0.c1 IN ())) NOT BETWEEN (((vt0.c0)IS(rt0.c3))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))) WHERE (((vt0.c0) BETWEEN (((rt0.c4) ISNULL)) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (((rt0.c4) ISNULL)) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((rt0.c1 IN ())) NOT BETWEEN (((vt0.c0)IS(rt0.c3))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((rt0.c1 IN ())) NOT BETWEEN (((vt0.c0)IS(rt0.c3))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))) WHERE (((vt0.c0) BETWEEN (((rt0.c4) ISNULL)) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('');
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ())) NOT NULL) WHERE (0.6100933427913462);
SELECT SUM(count) FROM (SELECT ALL ((0.6100933427913462) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ())) NOT NULL));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ())) NOT NULL) WHERE (0.6100933427913462);
SELECT SUM(count) FROM (SELECT ALL ((0.6100933427913462) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ())) NOT NULL));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ())) NOT NULL) WHERE (0.6100933427913462);
SELECT * FROM vt0 NOT INDEXED, rt0, vt1 WHERE (HEX(vt1.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((HEX(vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0 NOT INDEXED, rt0, vt1 WHERE (HEX(vt1.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((HEX(vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0 NOT INDEXED, rt0, vt1 WHERE (HEX(vt1.c0) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c3 IN (rt0.c2)))*((NOT (0.6872258258281498))))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN (rt0.c2)))*((NOT (0.6872258258281498))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY rt0.c2 DESC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c3 IN (rt0.c2)))*((NOT (0.6872258258281498))))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN (rt0.c2)))*((NOT (0.6872258258281498))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY rt0.c2 DESC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c3 IN (rt0.c2)))*((NOT (0.6872258258281498))))) ORDER BY rt0.c2 DESC;
SELECT * FROM vt0 CROSS JOIN vt1 ON ((('-883375426'))>(((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) WHERE ((((vt0.c0 IN ()))IS NOT((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))IS NOT((- (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((('-883375426'))>(((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((('-883375426'))>(((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) WHERE ((((vt0.c0 IN ()))IS NOT((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))IS NOT((- (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((('-883375426'))>(((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((('-883375426'))>(((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) WHERE ((((vt0.c0 IN ()))IS NOT((- (vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((vt0.c0)GLOB(vt0.c0))  WHEN ABS(DISTINCT rt0.c3) THEN HEX(DISTINCT rt0.c1) END) ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c4 AS INTEGER)) AND (((rt0.c1)>(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)GLOB(vt0.c0))  WHEN ABS(DISTINCT rt0.c3) THEN HEX(DISTINCT rt0.c1) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c4 AS INTEGER)) AND (((rt0.c1)>(rt0.c1)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((vt0.c0)GLOB(vt0.c0))  WHEN ABS(DISTINCT rt0.c3) THEN HEX(DISTINCT rt0.c1) END) ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c4 AS INTEGER)) AND (((rt0.c1)>(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)GLOB(vt0.c0))  WHEN ABS(DISTINCT rt0.c3) THEN HEX(DISTINCT rt0.c1) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c4 AS INTEGER)) AND (((rt0.c1)>(rt0.c1)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((vt0.c0)GLOB(vt0.c0))  WHEN ABS(DISTINCT rt0.c3) THEN HEX(DISTINCT rt0.c1) END) ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c4 AS INTEGER)) AND (((rt0.c1)>(rt0.c1)))) ASC;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON x'e28effe9' WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))==((+ (vt1.c0))))) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) AS NUMERIC) ASC, ((((vt1.c0)/(vt0.c0)))IS NOT(0.29407651258180134)) ASC, ((vt1.c0 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))=((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON x'e28effe9' ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) AS NUMERIC) ASC, ((((vt1.c0)/(vt0.c0)))IS NOT(0.29407651258180134)) ASC, ((vt1.c0 IN ()) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON x'e28effe9' WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))==((+ (vt1.c0))))) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) AS NUMERIC) ASC, ((((vt1.c0)/(vt0.c0)))IS NOT(0.29407651258180134)) ASC, ((vt1.c0 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))=((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON x'e28effe9' ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) AS NUMERIC) ASC, ((((vt1.c0)/(vt0.c0)))IS NOT(0.29407651258180134)) ASC, ((vt1.c0 IN ()) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON x'e28effe9' WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))==((+ (vt1.c0))))) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) AS NUMERIC) ASC, ((((vt1.c0)/(vt0.c0)))IS NOT(0.29407651258180134)) ASC, ((vt1.c0 IN ()) IN ())  NULLS FIRST;
SELECT * FROM rt0, vt1, vt0 WHERE (vt1.c0) ORDER BY ((x'f4df') IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((x'f4df') IS FALSE)  NULLS LAST);
SELECT * FROM rt0, vt1, vt0 WHERE (vt1.c0) ORDER BY ((x'f4df') IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((x'f4df') IS FALSE)  NULLS LAST);
SELECT * FROM rt0, vt1, vt0 WHERE (vt1.c0) ORDER BY ((x'f4df') IS FALSE)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((NOT (((0.886371096014151)LIKE(vt0.c0))))) ORDER BY CASE ((vt0.c0)%(NULL))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT NULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0.886371096014151)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)%(NULL))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT NULL) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((NOT (((0.886371096014151)LIKE(vt0.c0))))) ORDER BY CASE ((vt0.c0)%(NULL))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT NULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0.886371096014151)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)%(NULL))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT NULL) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((NOT (((0.886371096014151)LIKE(vt0.c0))))) ORDER BY CASE ((vt0.c0)%(NULL))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT NULL) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)<=(rt0.c0)))>>(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN -1.943308415E9 END))) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE vt0.c0 END) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c3 END) AND (((rt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=(rt0.c0)))>>(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN -1.943308415E9 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE vt0.c0 END) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c3 END) AND (((rt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)<=(rt0.c0)))>>(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN -1.943308415E9 END))) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE vt0.c0 END) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c3 END) AND (((rt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=(rt0.c0)))>>(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN -1.943308415E9 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE vt0.c0 END) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c3 END) AND (((rt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)<=(rt0.c0)))>>(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN -1.943308415E9 END))) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE vt0.c0 END) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c3 END) AND (((rt0.c0) IS TRUE)));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((vt0.c0)=(vt0.c0))))<=((((NULL) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)==(vt0.c0))))<=((((NULL) IS TRUE))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((vt0.c0)=(vt0.c0))))<=((((NULL) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)==(vt0.c0))))<=((((NULL) IS TRUE))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((vt0.c0)=(vt0.c0))))<=((((NULL) IS TRUE)))));
SELECT * FROM vt1 WHERE (((((((((vt1.c0)OR(CAST(vt1.c0 AS REAL))))AND(vt1.c0)))OR((vt1.c0 IN ()))))AND((vt1.c0 IN ())))) ORDER BY (- (((vt1.c0)<(vt1.c0)))) ASC  NULLS FIRST, vt1.c0 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)OR(CAST(vt1.c0 AS REAL))))AND(vt1.c0)))OR((vt1.c0 IN ()))))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c0)<(vt1.c0)))) ASC  NULLS FIRST, vt1.c0 COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((((vt1.c0)OR(CAST(vt1.c0 AS REAL))))AND(vt1.c0)))OR((vt1.c0 IN ()))))AND((vt1.c0 IN ())))) ORDER BY (- (((vt1.c0)<(vt1.c0)))) ASC  NULLS FIRST, vt1.c0 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)OR(CAST(vt1.c0 AS REAL))))AND(vt1.c0)))OR((vt1.c0 IN ()))))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c0)<(vt1.c0)))) ASC  NULLS FIRST, vt1.c0 COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((((vt1.c0)OR(CAST(vt1.c0 AS REAL))))AND(vt1.c0)))OR((vt1.c0 IN ()))))AND((vt1.c0 IN ())))) ORDER BY (- (((vt1.c0)<(vt1.c0)))) ASC  NULLS FIRST, vt1.c0 COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((1242557303)||(vt1.c0)))<>(((vt0.c0)LIKE(vt0.c0))))) ORDER BY (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((1242557303)||(vt1.c0)))<>(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((1242557303)||(vt1.c0)))<>(((vt0.c0)LIKE(vt0.c0))))) ORDER BY (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((1242557303)||(vt1.c0)))<>(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((1242557303)||(vt1.c0)))<>(((vt0.c0)LIKE(vt0.c0))))) ORDER BY (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC;
SELECT ALL * FROM vt1 WHERE (CASE json_array_length(vt1.c0, vt1.c0)  WHEN ((vt1.c0)OR(vt1.c0)) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE json_array_length(vt1.c0, vt1.c0)  WHEN ((vt1.c0)OR(vt1.c0)) THEN vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE json_array_length(vt1.c0, vt1.c0)  WHEN ((vt1.c0)OR(vt1.c0)) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE json_array_length(vt1.c0, vt1.c0)  WHEN ((vt1.c0)OR(vt1.c0)) THEN vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c3)<<(rt0.c0)))OR((rt0.c3 IN ()))))AND(((vt1.c0) IS TRUE))) WHERE (CAST(((rt0.c2)-(rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)-(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c3)<<(rt0.c0)))OR((rt0.c3 IN ()))))AND(((vt1.c0) IS TRUE))));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c3)<<(rt0.c0)))OR((rt0.c3 IN ()))))AND(((vt1.c0) IS TRUE))) WHERE (CAST(((rt0.c2)-(rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)-(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c3)<<(rt0.c0)))OR((rt0.c3 IN ()))))AND(((vt1.c0) IS TRUE))));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c3)<<(rt0.c0)))OR((rt0.c3 IN ()))))AND(((vt1.c0) IS TRUE))) WHERE (CAST(((rt0.c2)-(rt0.c2)) AS INTEGER));
