-- Time: 2024/06/09 14:43:27
-- Database: database98
-- Database version: 3.40.0
-- seed value: 869354498
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 7ms;
SELECT rtreecheck('rt0'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE vt1 SET c0=0.4228452140419664 WHERE (~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 15); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -736611482);\n; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES ('-h'), (x''), (x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '29543'); -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA temp.cache_spill = 8129548717313214876; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '33257'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('p?x\n'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (0.43844432326850824); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2009502102); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
CREATE TABLE t0 (c0 BLOB CHECK ( ((((x'')OR((~ (c0)))))OR(((c0)-(0.43844432326850824))))) UNIQUE ON CONFLICT REPLACE NOT NULL ); -- 0ms;
CREATE INDEX IF NOT EXISTS i71 ON t0((c0 IN ()) COLLATE NOCASE COLLATE BINARY); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
PRAGMA automatic_index = true; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (-7.36611482E8), (''), ('-736611482'), (0.12114150998171225), ('-736611482'); -- 0ms;
PRAGMA main.recursive_triggers = false; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c96; -- 6ms;
UPDATE OR IGNORE vt0 SET c0='?.mI랭<' WHERE ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((((vt0.c0))>((vt0.c0)))) AND (0.9457351462539599)); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1465169837);\n; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=x'ade0', c0='0' WHERE ((((vt0.c0)<(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (UPPER(DISTINCT vt0.c0))); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.8626499904327185 WHERE ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((rt0.c0)>(rt0.c0))) AND (((rt0.c1)<(rt0.c1)))); -- 0ms;
REINDEX; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 BEFORE INSERT ON t0 WHEN LOWER(DISTINCT LIKELY(t0.c96)) BEGIN SELECT RAISE(ROLLBACK, 'asdf');END; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i67 ON t0((((((c96)AND(c96)))OR(c96)) IN ()) COLLATE RTRIM DESC) WHERE (((x'' IN ()))=(((((c96)AND(c96)))AND(c96)))); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c2=x'7af4' WHERE rt0.c1; -- 0ms;
REINDEX; -- 0ms;
PRAGMA integrity_check; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA temp.recursive_triggers = false; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), (0.9113563854498464), ('-867852740'); -- 0ms;
UPDATE vt0 SET c0='1465169837', c0=x''; -- 0ms;
UPDATE vt1 SET (c0)=('	s}drMJK9'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 0); -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX i67; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (1749290670); -- 0ms;
ALTER TABLE t0 ADD COLUMN c48 INT; -- 1ms;
UPDATE OR IGNORE t0 SET (c48, c96, c48, c96)=(-1898414291, 0.8376454424716374, 'C', 0.8896799295046149) WHERE (((t0.c96 IN (t0.c96))) NOT BETWEEN (((t0.c48) NOT BETWEEN (t0.c48) AND (t0.c96))) AND (t0.c48 COLLATE BINARY)); -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c96)=(0xffffffffc5a982ce) WHERE (((t0.c48)) BETWEEN ((0.8438098727743321)) AND ((((((t0.c48)AND(t0.c48)))AND(t0.c96))))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4, +c5 REAL , +c6 INTEGER ); -- 0ms;
INSERT OR IGNORE INTO rt1(c5, c2, c6) VALUES ('7Fwod!F{l', 0.5024613106994803, NULL); -- 0ms;
UPDATE OR IGNORE rt1 SET c0=-9.00267917E8 WHERE (((rt1.c3)) BETWEEN ((NULL)) AND ((((rt1.c5)<(rt1.c5))))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO rt1(c6) VALUES (NULL); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR ABORT INTO t0(c96) VALUES ('1164803913'); -- 0ms;
INSERT OR ABORT INTO t0(c96) VALUES (0X6a2ea258); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES (0Xffffffffe12f2cab), (NULL), ('-736611482'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1744257754); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i0 ON t0(((((((c48)>=(c96)))OR(c96)))AND(c96)) COLLATE RTRIM,(NOT ((c96 IN ())))) WHERE (~ (CAST(c96 AS NUMERIC))); -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (NULL); -- 0ms;
REINDEX  rt0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE t0 SET c48=x'', c48=x'' WHERE ((t0.c48)+(t0.c48)) COLLATE BINARY; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '13614'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES (NULL, 0.046029054671884784, NULL); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (NULL); -- 0ms;
REINDEX; -- 1ms;
ANALYZE; -- 1ms;
PRAGMA default_cache_size; -- 0ms;
REINDEX; -- 0ms;
DROP TABLE rt1; -- 1ms;
CREATE UNIQUE INDEX IF NOT EXISTS i75 ON t0((CASE WHEN '-1388941726' THEN c96 END IN ()) DESC,((((c96) NOTNULL)) BETWEEN (c96) AND (CAST(c96 AS NUMERIC))) COLLATE BINARY) WHERE ((CAST(c48 AS TEXT))IS((c96 IN (0.7933272160778245)))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=12'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA secure_delete = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 1ms;
INSERT OR ABORT INTO t0 VALUES ('', 0.5870923948098457), (0X151e6970, NULL), (x'2ae3', x''); -- 0ms;
INSERT OR REPLACE INTO t0(c96) VALUES (x''); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (x'4afc'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.5922715993412084); -- 0ms;
UPDATE OR REPLACE vt1 SET (c0)=(0.5337273236720413) WHERE (((vt1.c0))>((vt1.c0))) COLLATE RTRIM; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(NULL, x'', 0.5497478470541999) WHERE (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((((vt0.c0))=((vt0.c0)))))); -- 0ms;
COMMIT; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1140801310); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END; -- 1ms;
INSERT OR IGNORE INTO t0(c96) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0(c96) VALUES (0.966982725571922); -- 0ms;
INSERT OR IGNORE INTO t0(c96, c48) VALUES (NULL, 0.1360203527935543); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('-867852740'), (NULL), ('0.9457351462539599'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
REINDEX; -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''), (0.8267192220360731), ('1978767810'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('995311457'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES (x'', NULL, '1781441112'), (-7.36611482E8, x'0925', 0.04641990882175884), (x'', x'', 1164803913); -- 0ms;
REINDEX i71; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
PRAGMA soft_heap_limit = 1013760891425502610; -- 0ms;
COMMIT; -- 0ms;
END; -- 0ms;
PRAGMA optimize; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0, t0, vt1 WHERE (((vt0.c0)&(CAST(t0.c96 AS INTEGER)))) ORDER BY CASE WHEN t0.c96 COLLATE NOCASE THEN CASE t0.c96  WHEN 0.45035490788539745 THEN t0.c48 WHEN t0.c48 THEN vt1.c0 WHEN t0.c96 THEN t0.c96 END END DESC  NULLS LAST, (~ (CASE WHEN vt1.c0 THEN t0.c48 ELSE '-1543766688' END)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&(CAST(t0.c96 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CASE WHEN t0.c96 COLLATE NOCASE THEN CASE t0.c96  WHEN 0.45035490788539745 THEN t0.c48 WHEN t0.c48 THEN vt1.c0 WHEN t0.c96 THEN t0.c96 END END DESC  NULLS LAST, (~ (CASE WHEN vt1.c0 THEN t0.c48 ELSE '-1543766688' END)) DESC);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((vt0.c0)&(CAST(t0.c96 AS INTEGER)))) ORDER BY CASE WHEN t0.c96 COLLATE NOCASE THEN CASE t0.c96  WHEN 0.45035490788539745 THEN t0.c48 WHEN t0.c48 THEN vt1.c0 WHEN t0.c96 THEN t0.c96 END END DESC  NULLS LAST, (~ (CASE WHEN vt1.c0 THEN t0.c48 ELSE '-1543766688' END)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&(CAST(t0.c96 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CASE WHEN t0.c96 COLLATE NOCASE THEN CASE t0.c96  WHEN 0.45035490788539745 THEN t0.c48 WHEN t0.c48 THEN vt1.c0 WHEN t0.c96 THEN t0.c96 END END DESC  NULLS LAST, (~ (CASE WHEN vt1.c0 THEN t0.c48 ELSE '-1543766688' END)) DESC);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((vt0.c0)&(CAST(t0.c96 AS INTEGER)))) ORDER BY CASE WHEN t0.c96 COLLATE NOCASE THEN CASE t0.c96  WHEN 0.45035490788539745 THEN t0.c48 WHEN t0.c48 THEN vt1.c0 WHEN t0.c96 THEN t0.c96 END END DESC  NULLS LAST, (~ (CASE WHEN vt1.c0 THEN t0.c48 ELSE '-1543766688' END)) DESC;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE ((UNLIKELY(DISTINCT rt0.c0) IN (((rt0.c1) BETWEEN (t0.c96) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(DISTINCT rt0.c0) IN (((rt0.c1) BETWEEN (t0.c96) AND (rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE ((UNLIKELY(DISTINCT rt0.c0) IN (((rt0.c1) BETWEEN (t0.c96) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(DISTINCT rt0.c0) IN (((rt0.c1) BETWEEN (t0.c96) AND (rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE ((UNLIKELY(DISTINCT rt0.c0) IN (((rt0.c1) BETWEEN (t0.c96) AND (rt0.c2)))));
SELECT * FROM t0, vt0, vt1 WHERE (((CAST(x'3e72' AS INTEGER)) ISNULL)) ORDER BY ((((t0.c48))>=((t0.c96))) IN ((+ ('9^')), CAST(vt0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'3e72' AS INTEGER)) ISNULL)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((t0.c48))>=((t0.c96))) IN ((+ ('9^')), CAST(vt0.c0 AS REAL))) DESC);
SELECT * FROM t0, vt0, vt1 WHERE (((CAST(x'3e72' AS INTEGER)) ISNULL)) ORDER BY ((((t0.c48))>=((t0.c96))) IN ((+ ('9^')), CAST(vt0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'3e72' AS INTEGER)) ISNULL)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((t0.c48))>=((t0.c96))) IN ((+ ('9^')), CAST(vt0.c0 AS REAL))) DESC);
SELECT * FROM t0, vt0, vt1 WHERE (((CAST(x'3e72' AS INTEGER)) ISNULL)) ORDER BY ((((t0.c48))>=((t0.c96))) IN ((+ ('9^')), CAST(vt0.c0 AS REAL))) DESC;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((rt0.c1 COLLATE RTRIM)=(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)=(rt0.c1))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((rt0.c1 COLLATE RTRIM)=(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)=(rt0.c1))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((rt0.c1 COLLATE RTRIM)=(rt0.c1)));
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c1))>((((((rt0.c1)AND(vt1.c0)))OR(rt0.c0)))))) ORDER BY CASE WHEN ((rt0.c2)-(rt0.c2)) THEN vt0.c0 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1))>((((((rt0.c1)AND(vt1.c0)))OR(rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY CASE WHEN ((rt0.c2)-(rt0.c2)) THEN vt0.c0 COLLATE BINARY END DESC);
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c1))>((((((rt0.c1)AND(vt1.c0)))OR(rt0.c0)))))) ORDER BY CASE WHEN ((rt0.c2)-(rt0.c2)) THEN vt0.c0 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1))>((((((rt0.c1)AND(vt1.c0)))OR(rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY CASE WHEN ((rt0.c2)-(rt0.c2)) THEN vt0.c0 COLLATE BINARY END DESC);
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c1))>((((((rt0.c1)AND(vt1.c0)))OR(rt0.c0)))))) ORDER BY CASE WHEN ((rt0.c2)-(rt0.c2)) THEN vt0.c0 COLLATE BINARY END DESC;
SELECT * FROM vt0, vt1 WHERE (HEX(DISTINCT (((vt0.c0, NULL, vt1.c0, 1.164803913E9, vt1.c0))>((vt1.c0, vt0.c0, NULL, vt1.c0, NULL))))) ORDER BY IFNULL(vt0.c0, vt0.c0) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (((vt0.c0, NULL, vt1.c0, 1.164803913E9, vt1.c0))>((vt1.c0, vt0.c0, NULL, vt1.c0, NULL))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY IFNULL(vt0.c0, vt0.c0) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (HEX(DISTINCT (((vt0.c0, NULL, vt1.c0, 1.164803913E9, vt1.c0))>((vt1.c0, vt0.c0, NULL, vt1.c0, NULL))))) ORDER BY IFNULL(vt0.c0, vt0.c0) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (((vt0.c0, NULL, vt1.c0, 1.164803913E9, vt1.c0))>((vt1.c0, vt0.c0, NULL, vt1.c0, NULL))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY IFNULL(vt0.c0, vt0.c0) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (HEX(DISTINCT (((vt0.c0, NULL, vt1.c0, 1.164803913E9, vt1.c0))>((vt1.c0, vt0.c0, NULL, vt1.c0, NULL))))) ORDER BY IFNULL(vt0.c0, vt0.c0) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CASE WHEN CASE t0.c96  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt1.c0 WHEN 0.310003653987464 THEN t0.c96 END THEN (t0.c48 IN (t0.c96)) END LEFT OUTER JOIN t0 ON LTRIM(CAST(t0.c48 AS INTEGER)) WHERE (((t0.c48) NOT NULL) COLLATE BINARY) ORDER BY ((((((t0.c96) ISNULL))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(((t0.c96) NOT BETWEEN (t0.c96) AND ('O9')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c48) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE WHEN CASE t0.c96  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt1.c0 WHEN 0.310003653987464 THEN t0.c96 END THEN (t0.c48 IN (t0.c96)) END LEFT OUTER JOIN t0 ON LTRIM(CAST(t0.c48 AS INTEGER)) ORDER BY ((((((t0.c96) ISNULL))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(((t0.c96) NOT BETWEEN (t0.c96) AND ('O9')))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CASE WHEN CASE t0.c96  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt1.c0 WHEN 0.310003653987464 THEN t0.c96 END THEN (t0.c48 IN (t0.c96)) END LEFT OUTER JOIN t0 ON LTRIM(CAST(t0.c48 AS INTEGER)) WHERE (((t0.c48) NOT NULL) COLLATE BINARY) ORDER BY ((((((t0.c96) ISNULL))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(((t0.c96) NOT BETWEEN (t0.c96) AND ('O9')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c48) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE WHEN CASE t0.c96  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt1.c0 WHEN 0.310003653987464 THEN t0.c96 END THEN (t0.c48 IN (t0.c96)) END LEFT OUTER JOIN t0 ON LTRIM(CAST(t0.c48 AS INTEGER)) ORDER BY ((((((t0.c96) ISNULL))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(((t0.c96) NOT BETWEEN (t0.c96) AND ('O9')))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CASE WHEN CASE t0.c96  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt1.c0 WHEN 0.310003653987464 THEN t0.c96 END THEN (t0.c48 IN (t0.c96)) END LEFT OUTER JOIN t0 ON LTRIM(CAST(t0.c48 AS INTEGER)) WHERE (((t0.c48) NOT NULL) COLLATE BINARY) ORDER BY ((((((t0.c96) ISNULL))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(((t0.c96) NOT BETWEEN (t0.c96) AND ('O9')))) ASC  NULLS FIRST;
SELECT * FROM vt1, t0 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(rt0.c0) COLLATE NOCASE) ORDER BY (((rt0.c1)GLOB(rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)GLOB(rt0.c1)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(rt0.c0) COLLATE NOCASE) ORDER BY (((rt0.c1)GLOB(rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)GLOB(rt0.c1)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(rt0.c0) COLLATE NOCASE) ORDER BY (((rt0.c1)GLOB(rt0.c1)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 WHERE (((1337910700) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((1337910700) IS TRUE)) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((1337910700) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((1337910700) IS TRUE)) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((1337910700) IS TRUE));
SELECT * FROM rt0, t0, vt1 WHERE (((rt0.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT * FROM rt0, t0, vt1 WHERE (((rt0.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT * FROM rt0, t0, vt1 WHERE (((rt0.c2) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(NULL)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (TIME(vt0.c0, vt0.c0, vt0.c0))) ASC  NULLS FIRST, ((TYPEOF(DISTINCT vt0.c0))GLOB(((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)OR(NULL)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (TIME(vt0.c0, vt0.c0, vt0.c0))) ASC  NULLS FIRST, ((TYPEOF(DISTINCT vt0.c0))GLOB(((vt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(NULL)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (TIME(vt0.c0, vt0.c0, vt0.c0))) ASC  NULLS FIRST, ((TYPEOF(DISTINCT vt0.c0))GLOB(((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)OR(NULL)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (TIME(vt0.c0, vt0.c0, vt0.c0))) ASC  NULLS FIRST, ((TYPEOF(DISTINCT vt0.c0))GLOB(((vt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(NULL)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (TIME(vt0.c0, vt0.c0, vt0.c0))) ASC  NULLS FIRST, ((TYPEOF(DISTINCT vt0.c0))GLOB(((vt0.c0) ISNULL)));
SELECT ALL * FROM rt0, t0 WHERE (LIKELIHOOD(((rt0.c2) BETWEEN (rt0.c0) AND ('-234417716')), 0.13423853359996396));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c2) BETWEEN (rt0.c0) AND ('-234417716')), 0.13423853359996396)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (LIKELIHOOD(((rt0.c2) BETWEEN (rt0.c0) AND ('-234417716')), 0.13423853359996396));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c2) BETWEEN (rt0.c0) AND ('-234417716')), 0.13423853359996396)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (LIKELIHOOD(((rt0.c2) BETWEEN (rt0.c0) AND ('-234417716')), 0.13423853359996396));
SELECT * FROM t0 WHERE (((((t0.c96) NOT NULL))>=(IFNULL(t0.c48, t0.c96)))) ORDER BY ((t0.c96) NOT BETWEEN (t0.c48 COLLATE RTRIM) AND (t0.c96 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96) NOT NULL))>=(IFNULL(t0.c48, t0.c96)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c96) NOT BETWEEN (t0.c48 COLLATE RTRIM) AND (t0.c96 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c96) NOT NULL))>=(IFNULL(t0.c48, t0.c96)))) ORDER BY ((t0.c96) NOT BETWEEN (t0.c48 COLLATE RTRIM) AND (t0.c96 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96) NOT NULL))>=(IFNULL(t0.c48, t0.c96)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c96) NOT BETWEEN (t0.c48 COLLATE RTRIM) AND (t0.c96 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c96) NOT NULL))>=(IFNULL(t0.c48, t0.c96)))) ORDER BY ((t0.c96) NOT BETWEEN (t0.c48 COLLATE RTRIM) AND (t0.c96 COLLATE NOCASE))  NULLS LAST;
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((~ (((rt0.c2)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2)*(rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((~ (((rt0.c2)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2)*(rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((~ (((rt0.c2)*(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (((((vt1.c0))>=((t0.c48))) IN (NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0))>=((t0.c48))) IN (NULL))) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (((((vt1.c0))>=((t0.c48))) IN (NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0))>=((t0.c48))) IN (NULL))) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (((((vt1.c0))>=((t0.c48))) IN (NULL)));
SELECT * FROM rt0, vt1, t0 WHERE ((NOT (QUOTE(rt0.c0)))) ORDER BY ((GLOB(rt0.c0, '-234417716')) IS TRUE) DESC, ((1e500)>>(('' IN ())));
SELECT SUM(count) FROM (SELECT ALL (((NOT (QUOTE(rt0.c0)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((GLOB(rt0.c0, '-234417716')) IS TRUE) DESC, ((1e500)>>(('' IN ()))));
SELECT * FROM rt0, vt1, t0 WHERE ((NOT (QUOTE(rt0.c0)))) ORDER BY ((GLOB(rt0.c0, '-234417716')) IS TRUE) DESC, ((1e500)>>(('' IN ())));
SELECT SUM(count) FROM (SELECT ALL (((NOT (QUOTE(rt0.c0)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((GLOB(rt0.c0, '-234417716')) IS TRUE) DESC, ((1e500)>>(('' IN ()))));
SELECT * FROM rt0, vt1, t0 WHERE ((NOT (QUOTE(rt0.c0)))) ORDER BY ((GLOB(rt0.c0, '-234417716')) IS TRUE) DESC, ((1e500)>>(('' IN ())));
SELECT COUNT(*) FROM t0, vt1 WHERE (((((((((NULLIF(vt1.c0, t0.c96))AND(((t0.c96)+(t0.c48)))))AND((t0.c96 IN ()))))OR(((t0.c48) NOT NULL))))AND(CAST(t0.c48 AS NUMERIC)))) ORDER BY ((((t0.c48)/(vt1.c0))) ISNULL) ASC, CASE (((t0.c96))<>((t0.c48)))  WHEN CASE WHEN vt1.c0 THEN 0.22657976407007585 ELSE vt1.c0 END THEN ((t0.c96)>=(vt1.c0)) ELSE NULL END  NULLS LAST, ((x'') ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULLIF(vt1.c0, t0.c96))AND(((t0.c96)+(t0.c48)))))AND((t0.c96 IN ()))))OR(((t0.c48) NOT NULL))))AND(CAST(t0.c48 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c48)/(vt1.c0))) ISNULL) ASC, CASE (((t0.c96))!=((t0.c48)))  WHEN CASE WHEN vt1.c0 THEN 0.22657976407007585 ELSE vt1.c0 END THEN ((t0.c96)>=(vt1.c0)) ELSE NULL END  NULLS LAST, ((x'') ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((((((NULLIF(vt1.c0, t0.c96))AND(((t0.c96)+(t0.c48)))))AND((t0.c96 IN ()))))OR(((t0.c48) NOT NULL))))AND(CAST(t0.c48 AS NUMERIC)))) ORDER BY ((((t0.c48)/(vt1.c0))) ISNULL) ASC, CASE (((t0.c96))<>((t0.c48)))  WHEN CASE WHEN vt1.c0 THEN 0.22657976407007585 ELSE vt1.c0 END THEN ((t0.c96)>=(vt1.c0)) ELSE NULL END  NULLS LAST, ((x'') ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULLIF(vt1.c0, t0.c96))AND(((t0.c96)+(t0.c48)))))AND((t0.c96 IN ()))))OR(((t0.c48) NOT NULL))))AND(CAST(t0.c48 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c48)/(vt1.c0))) ISNULL) ASC, CASE (((t0.c96))!=((t0.c48)))  WHEN CASE WHEN vt1.c0 THEN 0.22657976407007585 ELSE vt1.c0 END THEN ((t0.c96)>=(vt1.c0)) ELSE NULL END  NULLS LAST, ((x'') ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((((((NULLIF(vt1.c0, t0.c96))AND(((t0.c96)+(t0.c48)))))AND((t0.c96 IN ()))))OR(((t0.c48) NOT NULL))))AND(CAST(t0.c48 AS NUMERIC)))) ORDER BY ((((t0.c48)/(vt1.c0))) ISNULL) ASC, CASE (((t0.c96))<>((t0.c48)))  WHEN CASE WHEN vt1.c0 THEN 0.22657976407007585 ELSE vt1.c0 END THEN ((t0.c96)>=(vt1.c0)) ELSE NULL END  NULLS LAST, ((x'') ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (('&n餞z锄vX' IN (((t0.c96)LIKE(t0.c48))))) ORDER BY (((vt1.c0)/(vt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('&n餞z锄vX' IN (((t0.c96)LIKE(t0.c48))))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY (((vt1.c0)/(vt0.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (('&n餞z锄vX' IN (((t0.c96)LIKE(t0.c48))))) ORDER BY (((vt1.c0)/(vt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('&n餞z锄vX' IN (((t0.c96)LIKE(t0.c48))))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY (((vt1.c0)/(vt0.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (('&n餞z锄vX' IN (((t0.c96)LIKE(t0.c48))))) ORDER BY (((vt1.c0)/(vt0.c0)) IN ())  NULLS FIRST;
SELECT * FROM vt1, t0 WHERE ('1978767810') ORDER BY (~ (CAST(t0.c96 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1978767810') IS TRUE)  as count FROM vt1, t0 ORDER BY (~ (CAST(t0.c96 AS INTEGER))) ASC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ('1978767810') ORDER BY (~ (CAST(t0.c96 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1978767810') IS TRUE)  as count FROM vt1, t0 ORDER BY (~ (CAST(t0.c96 AS INTEGER))) ASC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ('1978767810') ORDER BY (~ (CAST(t0.c96 AS INTEGER))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c0 COLLATE RTRIM))) ORDER BY (((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1))))<((rt0.c2))) ASC  NULLS FIRST, (+ ((((rt0.c1, rt0.c1, 0.8438098727743321))>((rt0.c0, rt0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1))))<((rt0.c2))) ASC  NULLS FIRST, (+ ((((rt0.c1, rt0.c1, 0.8438098727743321))>((rt0.c0, rt0.c2, rt0.c2))))));
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c0 COLLATE RTRIM))) ORDER BY (((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1))))<((rt0.c2))) ASC  NULLS FIRST, (+ ((((rt0.c1, rt0.c1, 0.8438098727743321))>((rt0.c0, rt0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1))))<((rt0.c2))) ASC  NULLS FIRST, (+ ((((rt0.c1, rt0.c1, 0.8438098727743321))>((rt0.c0, rt0.c2, rt0.c2))))));
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c0 COLLATE RTRIM))) ORDER BY (((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1))))<((rt0.c2))) ASC  NULLS FIRST, (+ ((((rt0.c1, rt0.c1, 0.8438098727743321))>((rt0.c0, rt0.c2, rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (CASE 1465169837  WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c0 IN (rt0.c0, rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE 1465169837  WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c0 IN (rt0.c0, rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE 1465169837  WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c0 IN (rt0.c0, rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE 1465169837  WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c0 IN (rt0.c0, rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE 1465169837  WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c0 IN (rt0.c0, rt0.c1)) END);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (CASE NULL  WHEN ((t0.c96) BETWEEN (790494156) AND (rt0.c0)) THEN (- (t0.c96)) WHEN t0.c48 COLLATE NOCASE THEN (('-794449797')OR(t0.c96)) WHEN CAST(t0.c48 AS REAL) THEN COALESCE(DISTINCT vt1.c0, rt0.c1, vt1.c0, t0.c96) ELSE t0.c96 COLLATE NOCASE END) ORDER BY (((((t0.c48)GLOB(t0.c96))))==((((t0.c48)IS NOT(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((t0.c96) BETWEEN (790494156) AND (rt0.c0)) THEN (- (t0.c96)) WHEN t0.c48 COLLATE NOCASE THEN (('-794449797')OR(t0.c96)) WHEN CAST(t0.c48 AS REAL) THEN COALESCE(DISTINCT vt1.c0, rt0.c1, vt1.c0, t0.c96) ELSE t0.c96 COLLATE NOCASE END) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY (((((t0.c48)GLOB(t0.c96))))==((((t0.c48)IS NOT(rt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (CASE NULL  WHEN ((t0.c96) BETWEEN (790494156) AND (rt0.c0)) THEN (- (t0.c96)) WHEN t0.c48 COLLATE NOCASE THEN (('-794449797')OR(t0.c96)) WHEN CAST(t0.c48 AS REAL) THEN COALESCE(DISTINCT vt1.c0, rt0.c1, vt1.c0, t0.c96) ELSE t0.c96 COLLATE NOCASE END) ORDER BY (((((t0.c48)GLOB(t0.c96))))==((((t0.c48)IS NOT(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((t0.c96) BETWEEN (790494156) AND (rt0.c0)) THEN (- (t0.c96)) WHEN t0.c48 COLLATE NOCASE THEN (('-794449797')OR(t0.c96)) WHEN CAST(t0.c48 AS REAL) THEN COALESCE(DISTINCT vt1.c0, rt0.c1, vt1.c0, t0.c96) ELSE t0.c96 COLLATE NOCASE END) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY (((((t0.c48)GLOB(t0.c96))))==((((t0.c48)IS NOT(rt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (CASE NULL  WHEN ((t0.c96) BETWEEN (790494156) AND (rt0.c0)) THEN (- (t0.c96)) WHEN t0.c48 COLLATE NOCASE THEN (('-794449797')OR(t0.c96)) WHEN CAST(t0.c48 AS REAL) THEN COALESCE(DISTINCT vt1.c0, rt0.c1, vt1.c0, t0.c96) ELSE t0.c96 COLLATE NOCASE END) ORDER BY (((((t0.c48)GLOB(t0.c96))))==((((t0.c48)IS NOT(rt0.c0))))) ASC;
SELECT * FROM vt0, t0 WHERE ((((t0.c48, t0.c96, t0.c96)) BETWEEN (((- (vt0.c0)), (- (t0.c48)), (((t0.c96))<((t0.c96))))) AND ((((t0.c48)<=(vt0.c0)), CAST(vt0.c0 AS INTEGER), ((t0.c48)AND(''))))));
SELECT SUM(count) FROM (SELECT (((((t0.c48, t0.c96, t0.c96)) BETWEEN (((- (vt0.c0)), (- (t0.c48)), (((t0.c96))<((t0.c96))))) AND ((((t0.c48)<=(vt0.c0)), CAST(vt0.c0 AS INTEGER), ((t0.c48)AND('')))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c48, t0.c96, t0.c96)) BETWEEN (((- (vt0.c0)), (- (t0.c48)), (((t0.c96))<((t0.c96))))) AND ((((t0.c48)<=(vt0.c0)), CAST(vt0.c0 AS INTEGER), ((t0.c48)AND(''))))));
SELECT SUM(count) FROM (SELECT (((((t0.c48, t0.c96, t0.c96)) BETWEEN (((- (vt0.c0)), (- (t0.c48)), (((t0.c96))<((t0.c96))))) AND ((((t0.c48)<=(vt0.c0)), CAST(vt0.c0 AS INTEGER), ((t0.c48)AND('')))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c48, t0.c96, t0.c96)) BETWEEN (((- (vt0.c0)), (- (t0.c48)), (((t0.c96))<((t0.c96))))) AND ((((t0.c48)<=(vt0.c0)), CAST(vt0.c0 AS INTEGER), ((t0.c48)AND(''))))));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((('꓌k' IN (t0.c48)))<=(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))) CROSS JOIN vt1 ON ((t0.c96)<(((t0.c96)/(vt0.c0)))) INNER JOIN vt0 ON NULLIF((('') ISNULL), ((t0.c48) NOT BETWEEN (t0.c48) AND (rt0.c0))) WHERE (((((-1326295792) BETWEEN (vt1.c0) AND (rt0.c2)))&(t0.c96 COLLATE NOCASE))) ORDER BY ((vt1.c0) ISNULL) ASC  NULLS FIRST, (NOT ('1421121959')) DESC;
SELECT SUM(count) FROM (SELECT ((((((-1326295792) BETWEEN (vt1.c0) AND (rt0.c2)))&(t0.c96 COLLATE NOCASE))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((('꓌k' IN (t0.c48)))<=(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))) CROSS JOIN vt1 ON ((t0.c96)<(((t0.c96)/(vt0.c0)))) INNER JOIN vt0 ON NULLIF((('') ISNULL), ((t0.c48) NOT BETWEEN (t0.c48) AND (rt0.c0))) ORDER BY ((vt1.c0) ISNULL) ASC  NULLS FIRST, (NOT ('1421121959')) DESC);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((('꓌k' IN (t0.c48)))<=(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))) CROSS JOIN vt1 ON ((t0.c96)<(((t0.c96)/(vt0.c0)))) INNER JOIN vt0 ON NULLIF((('') ISNULL), ((t0.c48) NOT BETWEEN (t0.c48) AND (rt0.c0))) WHERE (((((-1326295792) BETWEEN (vt1.c0) AND (rt0.c2)))&(t0.c96 COLLATE NOCASE))) ORDER BY ((vt1.c0) ISNULL) ASC  NULLS FIRST, (NOT ('1421121959')) DESC;
SELECT SUM(count) FROM (SELECT ((((((-1326295792) BETWEEN (vt1.c0) AND (rt0.c2)))&(t0.c96 COLLATE NOCASE))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((('꓌k' IN (t0.c48)))<=(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))) CROSS JOIN vt1 ON ((t0.c96)<(((t0.c96)/(vt0.c0)))) INNER JOIN vt0 ON NULLIF((('') ISNULL), ((t0.c48) NOT BETWEEN (t0.c48) AND (rt0.c0))) ORDER BY ((vt1.c0) ISNULL) ASC  NULLS FIRST, (NOT ('1421121959')) DESC);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (CASE WHEN (t0.c96 IN ()) THEN ((t0.c96)-('1956264208')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c96 IN ()) THEN ((t0.c96)-('1956264208')) END) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (CASE WHEN (t0.c96 IN ()) THEN ((t0.c96)-('1956264208')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c96 IN ()) THEN ((t0.c96)-('1956264208')) END) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (CASE WHEN (t0.c96 IN ()) THEN ((t0.c96)-('1956264208')) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((DATE(rt0.c2, 1866703097, rt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((DATE(rt0.c2, 1866703097, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((DATE(rt0.c2, 1866703097, rt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((DATE(rt0.c2, 1866703097, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((DATE(rt0.c2, 1866703097, rt0.c0)) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((- (vt0.c0)) IN ((vt0.c0 IN ()), ((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c0)) IN ((vt0.c0 IN ()), ((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((- (vt0.c0)) IN ((vt0.c0 IN ()), ((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c0)) IN ((vt0.c0 IN ()), ((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((- (vt0.c0)) IN ((vt0.c0 IN ()), ((vt0.c0)LIKE(vt0.c0)))));
SELECT * FROM vt0, vt1, t0 WHERE ((vt1.c0 IN (((vt0.c0)>>(vt1.c0)), (((t0.c48)) BETWEEN ((vt0.c0)) AND ((t0.c96))))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (((vt0.c0)>>(vt1.c0)), (((t0.c48)) BETWEEN ((vt0.c0)) AND ((t0.c96)))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ((vt1.c0 IN (((vt0.c0)>>(vt1.c0)), (((t0.c48)) BETWEEN ((vt0.c0)) AND ((t0.c96))))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (((vt0.c0)>>(vt1.c0)), (((t0.c48)) BETWEEN ((vt0.c0)) AND ((t0.c96)))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ((vt1.c0 IN (((vt0.c0)>>(vt1.c0)), (((t0.c48)) BETWEEN ((vt0.c0)) AND ((t0.c96))))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE ((((- (vt0.c0)))<=(CASE WHEN t0.c48 THEN 0X50dc02a7 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))<=(CASE WHEN t0.c48 THEN 0x50dc02a7 END))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE ((((- (vt0.c0)))<=(CASE WHEN t0.c48 THEN 0X50dc02a7 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))<=(CASE WHEN t0.c48 THEN 0x50dc02a7 END))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE ((((- (vt0.c0)))<=(CASE WHEN t0.c48 THEN 0X50dc02a7 END)));
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (((json_array(vt1.c0, t0.c96)))<(((- (t0.c96))))) WHERE ((((x'') BETWEEN (t0.c48) AND (t0.c48)) IN ()));
SELECT SUM(count) FROM (SELECT (((((x'') BETWEEN (t0.c48) AND (t0.c48)) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (((json_array(vt1.c0, t0.c96)))<(((- (t0.c96))))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (((json_array(vt1.c0, t0.c96)))<(((- (t0.c96))))) WHERE ((((x'') BETWEEN (t0.c48) AND (t0.c48)) IN ()));
SELECT SUM(count) FROM (SELECT (((((x'') BETWEEN (t0.c48) AND (t0.c48)) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (((json_array(vt1.c0, t0.c96)))<(((- (t0.c96))))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (((json_array(vt1.c0, t0.c96)))<(((- (t0.c96))))) WHERE ((((x'') BETWEEN (t0.c48) AND (t0.c48)) IN ()));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) INNER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN (((((rt0.c1))!=((vt0.c0))))) AND ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 END))) WHERE ((+ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) INNER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN (((((rt0.c1))<>((vt0.c0))))) AND ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 END))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) INNER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN (((((rt0.c1))!=((vt0.c0))))) AND ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 END))) WHERE ((+ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) INNER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN (((((rt0.c1))<>((vt0.c0))))) AND ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 END))));
SELECT ALL * FROM vt1, vt0, rt0 WHERE ('354314608');
SELECT SUM(count) FROM (SELECT ALL (('354314608') IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ('354314608');
SELECT SUM(count) FROM (SELECT ALL (('354314608') IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ('354314608');
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0 COLLATE RTRIM))) ORDER BY (NOT (((rt0.c1)||(rt0.c0)))), CAST((('1465169837') NOT NULL) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c1)||(rt0.c0)))), CAST((('1465169837') NOT NULL) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0 COLLATE RTRIM))) ORDER BY (NOT (((rt0.c1)||(rt0.c0)))), CAST((('1465169837') NOT NULL) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c1)||(rt0.c0)))), CAST((('1465169837') NOT NULL) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0 COLLATE RTRIM))) ORDER BY (NOT (((rt0.c1)||(rt0.c0)))), CAST((('1465169837') NOT NULL) AS BLOB);
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) BETWEEN (((vt0.c0)-(rt0.c1))) AND (((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(vt1.c0)))) RIGHT OUTER JOIN vt1 ON t0.c48 LEFT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE RTRIM WHERE (UPPER(DISTINCT (((t0.c48))==(('2100603887')))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((t0.c48))==(('2100603887'))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) BETWEEN (((vt0.c0)-(rt0.c1))) AND (((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(vt1.c0)))) RIGHT OUTER JOIN vt1 ON t0.c48 LEFT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) BETWEEN (((vt0.c0)-(rt0.c1))) AND (((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(vt1.c0)))) RIGHT OUTER JOIN vt1 ON t0.c48 LEFT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE RTRIM WHERE (UPPER(DISTINCT (((t0.c48))==(('2100603887')))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((t0.c48))==(('2100603887'))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) BETWEEN (((vt0.c0)-(rt0.c1))) AND (((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(vt1.c0)))) RIGHT OUTER JOIN vt1 ON t0.c48 LEFT OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE RTRIM);
SELECT * FROM vt0, vt1, t0 WHERE (((CAST(t0.c96 AS REAL))<<(((vt1.c0) NOT BETWEEN (t0.c48) AND (t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c96 AS REAL))<<(((vt1.c0) NOT BETWEEN (t0.c48) AND (t0.c48))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((CAST(t0.c96 AS REAL))<<(((vt1.c0) NOT BETWEEN (t0.c48) AND (t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c96 AS REAL))<<(((vt1.c0) NOT BETWEEN (t0.c48) AND (t0.c48))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((CAST(t0.c96 AS REAL))<<(((vt1.c0) NOT BETWEEN (t0.c48) AND (t0.c48)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (rt0.c2) ORDER BY ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(t0.c96)) COLLATE NOCASE DESC, rt0.c1, ((((t0.c48)>('-2074237748')))!=(CASE WHEN rt0.c1 THEN t0.c96 END)), CAST(((((rt0.c2)AND(t0.c96)))AND(t0.c96)) AS REAL);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(t0.c96)) COLLATE NOCASE DESC, rt0.c1, ((((t0.c48)>('-2074237748')))<>(CASE WHEN rt0.c1 THEN t0.c96 END)), CAST(((((rt0.c2)AND(t0.c96)))AND(t0.c96)) AS REAL));
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (rt0.c2) ORDER BY ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(t0.c96)) COLLATE NOCASE DESC, rt0.c1, ((((t0.c48)>('-2074237748')))!=(CASE WHEN rt0.c1 THEN t0.c96 END)), CAST(((((rt0.c2)AND(t0.c96)))AND(t0.c96)) AS REAL);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(t0.c96)) COLLATE NOCASE DESC, rt0.c1, ((((t0.c48)>('-2074237748')))<>(CASE WHEN rt0.c1 THEN t0.c96 END)), CAST(((((rt0.c2)AND(t0.c96)))AND(t0.c96)) AS REAL));
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (rt0.c2) ORDER BY ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(t0.c96)) COLLATE NOCASE DESC, rt0.c1, ((((t0.c48)>('-2074237748')))!=(CASE WHEN rt0.c1 THEN t0.c96 END)), CAST(((((rt0.c2)AND(t0.c96)))AND(t0.c96)) AS REAL);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2)<<(rt0.c1))  WHEN (((0Xffffffff8bc54541)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)<<(rt0.c1))  WHEN (((0Xffffffff8bc54541)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2)<<(rt0.c1))  WHEN (((0Xffffffff8bc54541)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)<<(rt0.c1))  WHEN (((0Xffffffff8bc54541)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2)<<(rt0.c1))  WHEN (((0Xffffffff8bc54541)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0x6cea5bc8) ORDER BY t0.c96  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0X6cea5bc8) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c96  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0x6cea5bc8) ORDER BY t0.c96  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0X6cea5bc8) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c96  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0x6cea5bc8) ORDER BY t0.c96  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c48, t0.c96, x'0185')) NOT BETWEEN ((((((vt0.c0)OR(t0.c96)))OR(NULL)), (((t0.c96))<((t0.c48))), ((t0.c96) NOTNULL))) AND ((CASE WHEN vt0.c0 THEN t0.c48 ELSE vt0.c0 END, (+ (t0.c48)), ((t0.c48) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48, t0.c96, x'0185')) NOT BETWEEN ((((((vt0.c0)OR(t0.c96)))OR(NULL)), (((t0.c96))<((t0.c48))), ((t0.c96) NOTNULL))) AND ((CASE WHEN vt0.c0 THEN t0.c48 ELSE vt0.c0 END, (+ (t0.c48)), ((t0.c48) NOTNULL))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c48, t0.c96, x'0185')) NOT BETWEEN ((((((vt0.c0)OR(t0.c96)))OR(NULL)), (((t0.c96))<((t0.c48))), ((t0.c96) NOTNULL))) AND ((CASE WHEN vt0.c0 THEN t0.c48 ELSE vt0.c0 END, (+ (t0.c48)), ((t0.c48) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48, t0.c96, x'0185')) NOT BETWEEN ((((((vt0.c0)OR(t0.c96)))OR(NULL)), (((t0.c96))<((t0.c48))), ((t0.c96) NOTNULL))) AND ((CASE WHEN vt0.c0 THEN t0.c48 ELSE vt0.c0 END, (+ (t0.c48)), ((t0.c48) NOTNULL))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c48, t0.c96, x'0185')) NOT BETWEEN ((((((vt0.c0)OR(t0.c96)))OR(NULL)), (((t0.c96))<((t0.c48))), ((t0.c96) NOTNULL))) AND ((CASE WHEN vt0.c0 THEN t0.c48 ELSE vt0.c0 END, (+ (t0.c48)), ((t0.c48) NOTNULL)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((((rt0.c1)LIKE(vt1.c0))) IS FALSE) FULL OUTER JOIN vt1 ON CAST(((((t0.c48)AND(t0.c96)))OR(rt0.c0)) AS NUMERIC) INNER JOIN vt0 ON (((rt0.c0) IS TRUE) IN ()) WHERE ((~ (CAST(rt0.c2 AS INTEGER)))) ORDER BY CAST((t0.c96 IN ()) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((rt0.c1)LIKE(vt1.c0))) IS FALSE) FULL OUTER JOIN vt1 ON CAST(((((t0.c48)AND(t0.c96)))OR(rt0.c0)) AS NUMERIC) INNER JOIN vt0 ON (((rt0.c0) IS TRUE) IN ()) ORDER BY CAST((t0.c96 IN ()) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((((rt0.c1)LIKE(vt1.c0))) IS FALSE) FULL OUTER JOIN vt1 ON CAST(((((t0.c48)AND(t0.c96)))OR(rt0.c0)) AS NUMERIC) INNER JOIN vt0 ON (((rt0.c0) IS TRUE) IN ()) WHERE ((~ (CAST(rt0.c2 AS INTEGER)))) ORDER BY CAST((t0.c96 IN ()) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((rt0.c1)LIKE(vt1.c0))) IS FALSE) FULL OUTER JOIN vt1 ON CAST(((((t0.c48)AND(t0.c96)))OR(rt0.c0)) AS NUMERIC) INNER JOIN vt0 ON (((rt0.c0) IS TRUE) IN ()) ORDER BY CAST((t0.c96 IN ()) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((((rt0.c1)LIKE(vt1.c0))) IS FALSE) FULL OUTER JOIN vt1 ON CAST(((((t0.c48)AND(t0.c96)))OR(rt0.c0)) AS NUMERIC) INNER JOIN vt0 ON (((rt0.c0) IS TRUE) IN ()) WHERE ((~ (CAST(rt0.c2 AS INTEGER)))) ORDER BY CAST((t0.c96 IN ()) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON rt0.c0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) IS TRUE)) IS TRUE) WHERE (((((t0.c96)GLOB(NULL)))>(((t0.c96) ISNULL)))) ORDER BY COALESCE(DISTINCT ((rt0.c1) IS FALSE), CASE WHEN t0.c96 THEN vt0.c0 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c96)GLOB(NULL)))>(((t0.c96) ISNULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON rt0.c0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) IS TRUE)) IS TRUE) ORDER BY COALESCE(DISTINCT ((rt0.c1) IS FALSE), CASE WHEN t0.c96 THEN vt0.c0 END) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON rt0.c0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) IS TRUE)) IS TRUE) WHERE (((((t0.c96)GLOB(NULL)))>(((t0.c96) ISNULL)))) ORDER BY COALESCE(DISTINCT ((rt0.c1) IS FALSE), CASE WHEN t0.c96 THEN vt0.c0 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c96)GLOB(NULL)))>(((t0.c96) ISNULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON rt0.c0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) IS TRUE)) IS TRUE) ORDER BY COALESCE(DISTINCT ((rt0.c1) IS FALSE), CASE WHEN t0.c96 THEN vt0.c0 END) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((NOT (CAST(t0.c48 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c48 AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (CAST(t0.c48 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c48 AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (CAST(t0.c48 AS INTEGER))));
SELECT COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON (NOT (((t0.c96)-(t0.c48)))) WHERE ((- (((t0.c48)>(t0.c96)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c48)>(t0.c96))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON (NOT (((t0.c96)-(t0.c48)))));
SELECT COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON (NOT (((t0.c96)-(t0.c48)))) WHERE ((- (((t0.c48)>(t0.c96)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c48)>(t0.c96))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON (NOT (((t0.c96)-(t0.c48)))));
SELECT COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON (NOT (((t0.c96)-(t0.c48)))) WHERE ((- (((t0.c48)>(t0.c96)))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c48)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((CAST(vt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c48)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((CAST(vt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c48)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((CAST(vt0.c0 AS REAL)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((t0.c96)OR(t0.c48)))OR(t0.c96)))AND(t0.c48)))AND(t0.c48)))AND(((t0.c96)IS NOT(t0.c96)))))OR(MAX(t0.c48, t0.c96))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c96)OR(t0.c48)))OR(t0.c96)))AND(t0.c48)))AND(t0.c48)))AND(((t0.c96)IS NOT(t0.c96)))))OR(MAX(t0.c48, t0.c96)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((t0.c96)OR(t0.c48)))OR(t0.c96)))AND(t0.c48)))AND(t0.c48)))AND(((t0.c96)IS NOT(t0.c96)))))OR(MAX(t0.c48, t0.c96))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c96)OR(t0.c48)))OR(t0.c96)))AND(t0.c48)))AND(t0.c48)))AND(((t0.c96)IS NOT(t0.c96)))))OR(MAX(t0.c48, t0.c96)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((t0.c96)OR(t0.c48)))OR(t0.c96)))AND(t0.c48)))AND(t0.c48)))AND(((t0.c96)IS NOT(t0.c96)))))OR(MAX(t0.c48, t0.c96))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c48)/(t0.c48))) IS TRUE)) ORDER BY (((t0.c48) IS TRUE) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)/(t0.c48))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c48) IS TRUE) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c48)/(t0.c48))) IS TRUE)) ORDER BY (((t0.c48) IS TRUE) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)/(t0.c48))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c48) IS TRUE) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c48)/(t0.c48))) IS TRUE)) ORDER BY (((t0.c48) IS TRUE) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c1)GLOB('1164803913'))  WHEN NULL COLLATE BINARY THEN x'' ELSE ((rt0.c1) ISNULL) END) ORDER BY '-113498873', CAST(CAST(rt0.c0 AS BLOB) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)GLOB('1164803913'))  WHEN NULL COLLATE BINARY THEN x'' ELSE ((rt0.c1) ISNULL) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY '-113498873', CAST(CAST(rt0.c0 AS BLOB) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c1)GLOB('1164803913'))  WHEN NULL COLLATE BINARY THEN x'' ELSE ((rt0.c1) ISNULL) END) ORDER BY '-113498873', CAST(CAST(rt0.c0 AS BLOB) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)GLOB('1164803913'))  WHEN NULL COLLATE BINARY THEN x'' ELSE ((rt0.c1) ISNULL) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY '-113498873', CAST(CAST(rt0.c0 AS BLOB) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c1)GLOB('1164803913'))  WHEN NULL COLLATE BINARY THEN x'' ELSE ((rt0.c1) ISNULL) END) ORDER BY '-113498873', CAST(CAST(rt0.c0 AS BLOB) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (((((((t0.c96) ISNULL))AND(((0.11804529412436249)>=(t0.c48)))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c48))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((t0.c48)<(t0.c48)))) AND ((CASE rt0.c1  WHEN t0.c96 THEN t0.c96 END))) ASC  NULLS FIRST, ((((rt0.c2))!=((rt0.c1))) IN ()), CAST(CASE t0.c48  WHEN t0.c48 THEN t0.c48 ELSE rt0.c1 END AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((((t0.c96) ISNULL))AND(((0.11804529412436249)>=(t0.c48)))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c48))))) IS TRUE)  as count FROM vt1, t0, rt0 NOT INDEXED ORDER BY (((vt1.c0)) NOT BETWEEN ((((t0.c48)<(t0.c48)))) AND ((CASE rt0.c1  WHEN t0.c96 THEN t0.c96 END))) ASC  NULLS FIRST, ((((rt0.c2))!=((rt0.c1))) IN ()), CAST(CASE t0.c48  WHEN t0.c48 THEN t0.c48 ELSE rt0.c1 END AS BLOB));
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (((((((t0.c96) ISNULL))AND(((0.11804529412436249)>=(t0.c48)))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c48))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((t0.c48)<(t0.c48)))) AND ((CASE rt0.c1  WHEN t0.c96 THEN t0.c96 END))) ASC  NULLS FIRST, ((((rt0.c2))!=((rt0.c1))) IN ()), CAST(CASE t0.c48  WHEN t0.c48 THEN t0.c48 ELSE rt0.c1 END AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((((t0.c96) ISNULL))AND(((0.11804529412436249)>=(t0.c48)))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c48))))) IS TRUE)  as count FROM vt1, t0, rt0 NOT INDEXED ORDER BY (((vt1.c0)) NOT BETWEEN ((((t0.c48)<(t0.c48)))) AND ((CASE rt0.c1  WHEN t0.c96 THEN t0.c96 END))) ASC  NULLS FIRST, ((((rt0.c2))!=((rt0.c1))) IN ()), CAST(CASE t0.c48  WHEN t0.c48 THEN t0.c48 ELSE rt0.c1 END AS BLOB));
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (((((((t0.c96) ISNULL))AND(((0.11804529412436249)>=(t0.c48)))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (t0.c48))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((t0.c48)<(t0.c48)))) AND ((CASE rt0.c1  WHEN t0.c96 THEN t0.c96 END))) ASC  NULLS FIRST, ((((rt0.c2))!=((rt0.c1))) IN ()), CAST(CASE t0.c48  WHEN t0.c48 THEN t0.c48 ELSE rt0.c1 END AS BLOB);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))) ORDER BY ((((1248490623) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((1248490623) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))) ORDER BY ((((1248490623) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((1248490623) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))) ORDER BY ((((1248490623) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) DESC;
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) ORDER BY CAST(((rt0.c1)*(vt1.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(((rt0.c1)*(vt1.c0)) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) ORDER BY CAST(((rt0.c1)*(vt1.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(((rt0.c1)*(vt1.c0)) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) ORDER BY CAST(((rt0.c1)*(vt1.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((CHANGES())>(CASE WHEN vt1.c0 THEN vt1.c0 END)) LEFT OUTER JOIN vt0 ON 1.421121959E9 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((CHANGES())>(CASE WHEN vt1.c0 THEN vt1.c0 END)) LEFT OUTER JOIN vt0 ON 1.421121959E9);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((CHANGES())>(CASE WHEN vt1.c0 THEN vt1.c0 END)) LEFT OUTER JOIN vt0 ON 1.421121959E9 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((CHANGES())>(CASE WHEN vt1.c0 THEN vt1.c0 END)) LEFT OUTER JOIN vt0 ON 1.421121959E9);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((CHANGES())>(CASE WHEN vt1.c0 THEN vt1.c0 END)) LEFT OUTER JOIN vt0 ON 1.421121959E9 WHERE ('');
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE (((x'') NOT BETWEEN (((rt0.c1) ISNULL)) AND (((t0.c96)GLOB(0.8767832934575494))))) ORDER BY (~ ((((vt0.c0))>((rt0.c1)))))  NULLS LAST, (((t0.c96 IN ()))<>(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0))))  NULLS LAST, ((((((rt0.c0) NOT NULL))OR(((vt1.c0) IS FALSE))))AND('')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (((rt0.c1) ISNULL)) AND (((t0.c96)GLOB(0.8767832934575494))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY (~ ((((vt0.c0))>((rt0.c1)))))  NULLS LAST, (((t0.c96 IN ()))<>(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0))))  NULLS LAST, ((((((rt0.c0) NOT NULL))OR(((vt1.c0) IS FALSE))))AND('')) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE (((x'') NOT BETWEEN (((rt0.c1) ISNULL)) AND (((t0.c96)GLOB(0.8767832934575494))))) ORDER BY (~ ((((vt0.c0))>((rt0.c1)))))  NULLS LAST, (((t0.c96 IN ()))<>(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0))))  NULLS LAST, ((((((rt0.c0) NOT NULL))OR(((vt1.c0) IS FALSE))))AND('')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (((rt0.c1) ISNULL)) AND (((t0.c96)GLOB(0.8767832934575494))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY (~ ((((vt0.c0))>((rt0.c1)))))  NULLS LAST, (((t0.c96 IN ()))<>(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0))))  NULLS LAST, ((((((rt0.c0) NOT NULL))OR(((vt1.c0) IS FALSE))))AND('')) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE (((x'') NOT BETWEEN (((rt0.c1) ISNULL)) AND (((t0.c96)GLOB(0.8767832934575494))))) ORDER BY (~ ((((vt0.c0))>((rt0.c1)))))  NULLS LAST, (((t0.c96 IN ()))<>(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0))))  NULLS LAST, ((((((rt0.c0) NOT NULL))OR(((vt1.c0) IS FALSE))))AND('')) DESC  NULLS FIRST;
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((((((t0.c96)AND(t0.c48)))AND(t0.c96))) BETWEEN (x'') AND (rt0.c1 COLLATE BINARY))) ORDER BY (((~ (vt1.c0))) BETWEEN (IFNULL(DISTINCT rt0.c2, vt0.c0)) AND ((((rt0.c2, vt1.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c96)AND(t0.c48)))AND(t0.c96))) BETWEEN (x'') AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY (((~ (vt1.c0))) BETWEEN (IFNULL(DISTINCT rt0.c2, vt0.c0)) AND ((((rt0.c2, vt1.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((((((t0.c96)AND(t0.c48)))AND(t0.c96))) BETWEEN (x'') AND (rt0.c1 COLLATE BINARY))) ORDER BY (((~ (vt1.c0))) BETWEEN (IFNULL(DISTINCT rt0.c2, vt0.c0)) AND ((((rt0.c2, vt1.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c96)AND(t0.c48)))AND(t0.c96))) BETWEEN (x'') AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY (((~ (vt1.c0))) BETWEEN (IFNULL(DISTINCT rt0.c2, vt0.c0)) AND ((((rt0.c2, vt1.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((((((t0.c96)AND(t0.c48)))AND(t0.c96))) BETWEEN (x'') AND (rt0.c1 COLLATE BINARY))) ORDER BY (((~ (vt1.c0))) BETWEEN (IFNULL(DISTINCT rt0.c2, vt0.c0)) AND ((((rt0.c2, vt1.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1 WHERE ((((((t0.c96, vt1.c0, t0.c96))>((t0.c48, t0.c96, NULL))))>=(((vt1.c0)||(NULL))))) ORDER BY (((t0.c96)) NOT BETWEEN ((((((t0.c48)OR(t0.c96)))AND(t0.c48)))) AND (((NOT (vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c96, vt1.c0, t0.c96))>((t0.c48, t0.c96, NULL))))>=(((vt1.c0)||(NULL))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c96)) NOT BETWEEN ((((((t0.c48)OR(t0.c96)))AND(t0.c48)))) AND (((NOT (vt1.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((((t0.c96, vt1.c0, t0.c96))>((t0.c48, t0.c96, NULL))))>=(((vt1.c0)||(NULL))))) ORDER BY (((t0.c96)) NOT BETWEEN ((((((t0.c48)OR(t0.c96)))AND(t0.c48)))) AND (((NOT (vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c96, vt1.c0, t0.c96))>((t0.c48, t0.c96, NULL))))>=(((vt1.c0)||(NULL))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c96)) NOT BETWEEN ((((((t0.c48)OR(t0.c96)))AND(t0.c48)))) AND (((NOT (vt1.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((((t0.c96, vt1.c0, t0.c96))>((t0.c48, t0.c96, NULL))))>=(((vt1.c0)||(NULL))))) ORDER BY (((t0.c96)) NOT BETWEEN ((((((t0.c48)OR(t0.c96)))AND(t0.c48)))) AND (((NOT (vt1.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON vt1.c0 WHERE (CASE WHEN CASE t0.c96  WHEN vt1.c0 THEN t0.c48 END THEN CASE vt1.c0  WHEN t0.c48 THEN vt1.c0 ELSE vt1.c0 END ELSE ((t0.c48)LIKE(t0.c96)) END) ORDER BY ((((((((((((((((t0.c96)OR(t0.c48)))OR(vt1.c0)))OR(t0.c48)))AND(0.11804529412436249)))AND(0xfffffffff93c2507)))AND(CAST(t0.c48 AS BLOB))))OR(((t0.c48)|(t0.c48)))))OR((((vt1.c0))<>((vt1.c0))))) ASC  NULLS LAST, CASE 0.8105546738376255  WHEN ((((((((t0.c48)AND(t0.c96)))OR(t0.c48)))OR(t0.c96)))OR(t0.c96)) THEN ((x'ab28') NOT BETWEEN (t0.c96) AND (vt1.c0)) WHEN CHANGES() THEN CASE WHEN t0.c96 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c96 END WHEN -2.074237748E9 THEN t0.c96 END  NULLS LAST, (((((t0.c96 IN ()))OR(((t0.c48) BETWEEN (vt1.c0) AND (t0.c48)))))OR(CASE WHEN t0.c96 THEN t0.c96 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t0.c96  WHEN vt1.c0 THEN t0.c48 END THEN CASE vt1.c0  WHEN t0.c48 THEN vt1.c0 ELSE vt1.c0 END ELSE ((t0.c48)LIKE(t0.c96)) END) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON vt1.c0 ORDER BY ((((((((((((((((t0.c96)OR(t0.c48)))OR(vt1.c0)))OR(t0.c48)))AND(0.11804529412436249)))AND(0xfffffffff93c2507)))AND(CAST(t0.c48 AS BLOB))))OR(((t0.c48)|(t0.c48)))))OR((((vt1.c0))<>((vt1.c0))))) ASC  NULLS LAST, CASE 0.8105546738376255  WHEN ((((((((t0.c48)AND(t0.c96)))OR(t0.c48)))OR(t0.c96)))OR(t0.c96)) THEN ((x'ab28') NOT BETWEEN (t0.c96) AND (vt1.c0)) WHEN CHANGES() THEN CASE WHEN t0.c96 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c96 END WHEN -2.074237748E9 THEN t0.c96 END  NULLS LAST, (((((t0.c96 IN ()))OR(((t0.c48) BETWEEN (vt1.c0) AND (t0.c48)))))OR(CASE WHEN t0.c96 THEN t0.c96 END)) DESC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON vt1.c0 WHERE (CASE WHEN CASE t0.c96  WHEN vt1.c0 THEN t0.c48 END THEN CASE vt1.c0  WHEN t0.c48 THEN vt1.c0 ELSE vt1.c0 END ELSE ((t0.c48)LIKE(t0.c96)) END) ORDER BY ((((((((((((((((t0.c96)OR(t0.c48)))OR(vt1.c0)))OR(t0.c48)))AND(0.11804529412436249)))AND(0xfffffffff93c2507)))AND(CAST(t0.c48 AS BLOB))))OR(((t0.c48)|(t0.c48)))))OR((((vt1.c0))<>((vt1.c0))))) ASC  NULLS LAST, CASE 0.8105546738376255  WHEN ((((((((t0.c48)AND(t0.c96)))OR(t0.c48)))OR(t0.c96)))OR(t0.c96)) THEN ((x'ab28') NOT BETWEEN (t0.c96) AND (vt1.c0)) WHEN CHANGES() THEN CASE WHEN t0.c96 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c96 END WHEN -2.074237748E9 THEN t0.c96 END  NULLS LAST, (((((t0.c96 IN ()))OR(((t0.c48) BETWEEN (vt1.c0) AND (t0.c48)))))OR(CASE WHEN t0.c96 THEN t0.c96 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t0.c96  WHEN vt1.c0 THEN t0.c48 END THEN CASE vt1.c0  WHEN t0.c48 THEN vt1.c0 ELSE vt1.c0 END ELSE ((t0.c48)LIKE(t0.c96)) END) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON vt1.c0 ORDER BY ((((((((((((((((t0.c96)OR(t0.c48)))OR(vt1.c0)))OR(t0.c48)))AND(0.11804529412436249)))AND(0xfffffffff93c2507)))AND(CAST(t0.c48 AS BLOB))))OR(((t0.c48)|(t0.c48)))))OR((((vt1.c0))<>((vt1.c0))))) ASC  NULLS LAST, CASE 0.8105546738376255  WHEN ((((((((t0.c48)AND(t0.c96)))OR(t0.c48)))OR(t0.c96)))OR(t0.c96)) THEN ((x'ab28') NOT BETWEEN (t0.c96) AND (vt1.c0)) WHEN CHANGES() THEN CASE WHEN t0.c96 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c96 END WHEN -2.074237748E9 THEN t0.c96 END  NULLS LAST, (((((t0.c96 IN ()))OR(((t0.c48) BETWEEN (vt1.c0) AND (t0.c48)))))OR(CASE WHEN t0.c96 THEN t0.c96 END)) DESC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON vt1.c0 WHERE (CASE WHEN CASE t0.c96  WHEN vt1.c0 THEN t0.c48 END THEN CASE vt1.c0  WHEN t0.c48 THEN vt1.c0 ELSE vt1.c0 END ELSE ((t0.c48)LIKE(t0.c96)) END) ORDER BY ((((((((((((((((t0.c96)OR(t0.c48)))OR(vt1.c0)))OR(t0.c48)))AND(0.11804529412436249)))AND(0xfffffffff93c2507)))AND(CAST(t0.c48 AS BLOB))))OR(((t0.c48)|(t0.c48)))))OR((((vt1.c0))<>((vt1.c0))))) ASC  NULLS LAST, CASE 0.8105546738376255  WHEN ((((((((t0.c48)AND(t0.c96)))OR(t0.c48)))OR(t0.c96)))OR(t0.c96)) THEN ((x'ab28') NOT BETWEEN (t0.c96) AND (vt1.c0)) WHEN CHANGES() THEN CASE WHEN t0.c96 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c96 END WHEN -2.074237748E9 THEN t0.c96 END  NULLS LAST, (((((t0.c96 IN ()))OR(((t0.c48) BETWEEN (vt1.c0) AND (t0.c48)))))OR(CASE WHEN t0.c96 THEN t0.c96 END)) DESC;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON ((((((t0.c48)OR(vt1.c0)))OR(vt1.c0)))GLOB(vt1.c0)) WHERE (((((0.5708198812346743)AND(vt1.c0)))AND(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((0.5708198812346743)AND(vt1.c0)))AND(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((((((t0.c48)OR(vt1.c0)))OR(vt1.c0)))GLOB(vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON ((((((t0.c48)OR(vt1.c0)))OR(vt1.c0)))GLOB(vt1.c0)) WHERE (((((0.5708198812346743)AND(vt1.c0)))AND(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((0.5708198812346743)AND(vt1.c0)))AND(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((((((t0.c48)OR(vt1.c0)))OR(vt1.c0)))GLOB(vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON ((((((t0.c48)OR(vt1.c0)))OR(vt1.c0)))GLOB(vt1.c0)) WHERE (((((0.5708198812346743)AND(vt1.c0)))AND(vt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((CAST(vt0.c0 AS REAL))OR(((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)))))AND((((''))<((rt0.c2)))))) ORDER BY ((((rt0.c1)/('kQ%!{iH4)')))<((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))OR(((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)))))AND((((''))<((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1)/('kQ%!{iH4)')))<((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((CAST(vt0.c0 AS REAL))OR(((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)))))AND((((''))<((rt0.c2)))))) ORDER BY ((((rt0.c1)/('kQ%!{iH4)')))<((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))OR(((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)))))AND((((''))<((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1)/('kQ%!{iH4)')))<((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((CAST(vt0.c0 AS REAL))OR(((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)))))AND((((''))<((rt0.c2)))))) ORDER BY ((((rt0.c1)/('kQ%!{iH4)')))<((vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (((((t0.c48))!=((rt0.c0))) IN ())) ORDER BY '7Fwod!F{l' ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c48))<>((rt0.c0))) IN ())) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY '7Fwod!F{l' ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (((((t0.c48))!=((rt0.c0))) IN ())) ORDER BY '7Fwod!F{l' ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c48))<>((rt0.c0))) IN ())) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY '7Fwod!F{l' ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (((((t0.c48))!=((rt0.c0))) IN ())) ORDER BY '7Fwod!F{l' ASC;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) NOTNULL)) ORDER BY LIKELY(((rt0.c1)AND(rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(((rt0.c1)AND(rt0.c2))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) NOTNULL)) ORDER BY LIKELY(((rt0.c1)AND(rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(((rt0.c1)AND(rt0.c2))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) NOTNULL)) ORDER BY LIKELY(((rt0.c1)AND(rt0.c2))) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0, rt0 WHERE (((rt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((rt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((rt0.c0) NOT NULL));
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((- (LIKELY(vt1.c0)))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND ((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((+ (vt0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND ((~ (vt0.c0)))));
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((- (LIKELY(vt1.c0)))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND ((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((+ (vt0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND ((~ (vt0.c0)))));
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((- (LIKELY(vt1.c0)))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND ((~ (vt0.c0))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, 0.15566174340440275)) ORDER BY CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)OR(rt0.c0)) END DESC, CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, 0.15566174340440275)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)OR(rt0.c0)) END DESC, CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) AS TEXT) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, 0.15566174340440275)) ORDER BY CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)OR(rt0.c0)) END DESC, CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, 0.15566174340440275)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)OR(rt0.c0)) END DESC, CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) AS TEXT) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, 0.15566174340440275)) ORDER BY CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)OR(rt0.c0)) END DESC, CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) AS TEXT) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((((((((t0.c96)GLOB(rt0.c2)))OR((((rt0.c2))>=((vt0.c0))))))AND(CAST(vt0.c0 AS TEXT))))OR(((rt0.c2)<>(rt0.c0)))))OR((rt0.c2 IN (rt0.c0, vt1.c0)))) CROSS JOIN t0 ON rt0.c0 COLLATE RTRIM CROSS JOIN vt0 ON ((((((t0.c48) NOT BETWEEN (rt0.c1) AND (t0.c48)))OR(((((((((vt1.c0)AND(t0.c96)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))))OR(TYPEOF(DISTINCT rt0.c2))) WHERE ((((((NOT (t0.c48)))AND(CAST(vt0.c0 AS NUMERIC))))OR((+ (rt0.c2))))) ORDER BY (((t0.c96)AND(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT (((((((NOT (t0.c48)))AND(CAST(vt0.c0 AS NUMERIC))))OR((+ (rt0.c2))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((((((((t0.c96)GLOB(rt0.c2)))OR((((rt0.c2))>=((vt0.c0))))))AND(CAST(vt0.c0 AS TEXT))))OR(((rt0.c2)!=(rt0.c0)))))OR((rt0.c2 IN (rt0.c0, vt1.c0)))) CROSS JOIN t0 ON rt0.c0 COLLATE RTRIM CROSS JOIN vt0 ON ((((((t0.c48) NOT BETWEEN (rt0.c1) AND (t0.c48)))OR(((((((((vt1.c0)AND(t0.c96)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))))OR(TYPEOF(DISTINCT rt0.c2))) ORDER BY (((t0.c96)AND(rt0.c2)) IN ()));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((((((((t0.c96)GLOB(rt0.c2)))OR((((rt0.c2))>=((vt0.c0))))))AND(CAST(vt0.c0 AS TEXT))))OR(((rt0.c2)<>(rt0.c0)))))OR((rt0.c2 IN (rt0.c0, vt1.c0)))) CROSS JOIN t0 ON rt0.c0 COLLATE RTRIM CROSS JOIN vt0 ON ((((((t0.c48) NOT BETWEEN (rt0.c1) AND (t0.c48)))OR(((((((((vt1.c0)AND(t0.c96)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))))OR(TYPEOF(DISTINCT rt0.c2))) WHERE ((((((NOT (t0.c48)))AND(CAST(vt0.c0 AS NUMERIC))))OR((+ (rt0.c2))))) ORDER BY (((t0.c96)AND(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT (((((((NOT (t0.c48)))AND(CAST(vt0.c0 AS NUMERIC))))OR((+ (rt0.c2))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((((((((t0.c96)GLOB(rt0.c2)))OR((((rt0.c2))>=((vt0.c0))))))AND(CAST(vt0.c0 AS TEXT))))OR(((rt0.c2)!=(rt0.c0)))))OR((rt0.c2 IN (rt0.c0, vt1.c0)))) CROSS JOIN t0 ON rt0.c0 COLLATE RTRIM CROSS JOIN vt0 ON ((((((t0.c48) NOT BETWEEN (rt0.c1) AND (t0.c48)))OR(((((((((vt1.c0)AND(t0.c96)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))))OR(TYPEOF(DISTINCT rt0.c2))) ORDER BY (((t0.c96)AND(rt0.c2)) IN ()));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN x'' WHEN vt1.c0 THEN vt1.c0 END)OR(CAST(vt1.c0 AS NUMERIC))))AND(((vt1.c0)>>(rt0.c1)))))AND(rt0.c1)))AND(((rt0.c1)/(vt1.c0)))) WHERE (TRIM(DISTINCT LIKELY(x''), (NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT LIKELY(x''), (NOT (rt0.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN x'' WHEN vt1.c0 THEN vt1.c0 END)OR(CAST(vt1.c0 AS NUMERIC))))AND(((vt1.c0)>>(rt0.c1)))))AND(rt0.c1)))AND(((rt0.c1)/(vt1.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN x'' WHEN vt1.c0 THEN vt1.c0 END)OR(CAST(vt1.c0 AS NUMERIC))))AND(((vt1.c0)>>(rt0.c1)))))AND(rt0.c1)))AND(((rt0.c1)/(vt1.c0)))) WHERE (TRIM(DISTINCT LIKELY(x''), (NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT LIKELY(x''), (NOT (rt0.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN x'' WHEN vt1.c0 THEN vt1.c0 END)OR(CAST(vt1.c0 AS NUMERIC))))AND(((vt1.c0)>>(rt0.c1)))))AND(rt0.c1)))AND(((rt0.c1)/(vt1.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN x'' WHEN vt1.c0 THEN vt1.c0 END)OR(CAST(vt1.c0 AS NUMERIC))))AND(((vt1.c0)>>(rt0.c1)))))AND(rt0.c1)))AND(((rt0.c1)/(vt1.c0)))) WHERE (TRIM(DISTINCT LIKELY(x''), (NOT (rt0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (x'd028') ORDER BY (- (vt1.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'd028') IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'd028') ORDER BY (- (vt1.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'd028') IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'd028') ORDER BY (- (vt1.c0)) COLLATE RTRIM DESC;
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c96))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c96))) IN ())) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c96))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c96))) IN ())) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c96))) IN ()));
SELECT COUNT(*) FROM vt1, vt0, t0 LEFT OUTER JOIN rt0 ON ((0Xffffffff9f186bc1)<<(CAST(t0.c96 AS BLOB))) WHERE ((NOT (CASE t0.c48  WHEN vt1.c0 THEN NULL WHEN rt0.c0 THEN x'' WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c0 END))) ORDER BY (- ((-2074237748 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c48  WHEN vt1.c0 THEN NULL WHEN rt0.c0 THEN x'' WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1, vt0, t0 LEFT OUTER JOIN rt0 ON ((0xffffffff9f186bc1)<<(CAST(t0.c96 AS BLOB))) ORDER BY (- ((-2074237748 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t0 LEFT OUTER JOIN rt0 ON ((0Xffffffff9f186bc1)<<(CAST(t0.c96 AS BLOB))) WHERE ((NOT (CASE t0.c48  WHEN vt1.c0 THEN NULL WHEN rt0.c0 THEN x'' WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c0 END))) ORDER BY (- ((-2074237748 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c48  WHEN vt1.c0 THEN NULL WHEN rt0.c0 THEN x'' WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1, vt0, t0 LEFT OUTER JOIN rt0 ON ((0xffffffff9f186bc1)<<(CAST(t0.c96 AS BLOB))) ORDER BY (- ((-2074237748 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t0 LEFT OUTER JOIN rt0 ON ((0Xffffffff9f186bc1)<<(CAST(t0.c96 AS BLOB))) WHERE ((NOT (CASE t0.c48  WHEN vt1.c0 THEN NULL WHEN rt0.c0 THEN x'' WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c0 END))) ORDER BY (- ((-2074237748 IN ()))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON x'b9f7' RIGHT OUTER JOIN vt0 ON CASE WHEN CASE t0.c48  WHEN t0.c96 THEN rt0.c1 ELSE vt0.c0 END THEN ((vt1.c0)<<(rt0.c2)) WHEN ((((t0.c48)OR(rt0.c1)))AND(rt0.c2)) THEN ((t0.c48) NOT BETWEEN (rt0.c1) AND (vt1.c0)) WHEN (((t0.c48)) NOT BETWEEN ((vt1.c0)) AND ((t0.c96))) THEN ((rt0.c0)*(t0.c96)) ELSE COALESCE(t0.c96, rt0.c2) END LEFT OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS INTEGER) WHERE ((+ (CAST(1.781441112E9 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(1.781441112E9 AS INTEGER)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON x'b9f7' RIGHT OUTER JOIN vt0 ON CASE WHEN CASE t0.c48  WHEN t0.c96 THEN rt0.c1 ELSE vt0.c0 END THEN ((vt1.c0)<<(rt0.c2)) WHEN ((((t0.c48)OR(rt0.c1)))AND(rt0.c2)) THEN ((t0.c48) NOT BETWEEN (rt0.c1) AND (vt1.c0)) WHEN (((t0.c48)) NOT BETWEEN ((vt1.c0)) AND ((t0.c96))) THEN ((rt0.c0)*(t0.c96)) ELSE COALESCE(t0.c96, rt0.c2) END LEFT OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS INTEGER));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON x'b9f7' RIGHT OUTER JOIN vt0 ON CASE WHEN CASE t0.c48  WHEN t0.c96 THEN rt0.c1 ELSE vt0.c0 END THEN ((vt1.c0)<<(rt0.c2)) WHEN ((((t0.c48)OR(rt0.c1)))AND(rt0.c2)) THEN ((t0.c48) NOT BETWEEN (rt0.c1) AND (vt1.c0)) WHEN (((t0.c48)) NOT BETWEEN ((vt1.c0)) AND ((t0.c96))) THEN ((rt0.c0)*(t0.c96)) ELSE COALESCE(t0.c96, rt0.c2) END LEFT OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS INTEGER) WHERE ((+ (CAST(1.781441112E9 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(1.781441112E9 AS INTEGER)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON x'b9f7' RIGHT OUTER JOIN vt0 ON CASE WHEN CASE t0.c48  WHEN t0.c96 THEN rt0.c1 ELSE vt0.c0 END THEN ((vt1.c0)<<(rt0.c2)) WHEN ((((t0.c48)OR(rt0.c1)))AND(rt0.c2)) THEN ((t0.c48) NOT BETWEEN (rt0.c1) AND (vt1.c0)) WHEN (((t0.c48)) NOT BETWEEN ((vt1.c0)) AND ((t0.c96))) THEN ((rt0.c0)*(t0.c96)) ELSE COALESCE(t0.c96, rt0.c2) END LEFT OUTER JOIN t0 ON CAST((vt0.c0 IN ()) AS INTEGER));
SELECT * FROM rt0 WHERE (((((- (rt0.c0))))<=((((rt0.c1) NOT BETWEEN ('1356595879') AND (rt0.c2)))))) ORDER BY ((rt0.c2 COLLATE RTRIM)<=(((rt0.c1)*(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((- (rt0.c0))))<=((((rt0.c1) NOT BETWEEN ('1356595879') AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE RTRIM)<=(((rt0.c1)*(rt0.c0))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((- (rt0.c0))))<=((((rt0.c1) NOT BETWEEN ('1356595879') AND (rt0.c2)))))) ORDER BY ((rt0.c2 COLLATE RTRIM)<=(((rt0.c1)*(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((- (rt0.c0))))<=((((rt0.c1) NOT BETWEEN ('1356595879') AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE RTRIM)<=(((rt0.c1)*(rt0.c0))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((- (rt0.c0))))<=((((rt0.c1) NOT BETWEEN ('1356595879') AND (rt0.c2)))))) ORDER BY ((rt0.c2 COLLATE RTRIM)<=(((rt0.c1)*(rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(0.19322253250767696 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.19322253250767696 AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(0.19322253250767696 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.19322253250767696 AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(0.19322253250767696 AS BLOB));
SELECT ALL * FROM vt1, t0 WHERE (HEX(DISTINCT (t0.c96 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (t0.c96 IN ()))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (HEX(DISTINCT (t0.c96 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (t0.c96 IN ()))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (HEX(DISTINCT (t0.c96 IN ())));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1)IS(NULL)) IN ()) RIGHT OUTER JOIN vt0 ON (CAST(rt0.c0 AS REAL) IN ((((rt0.c2))<=((rt0.c1))))) LEFT OUTER JOIN t0 ON (NOT (((rt0.c2)<(rt0.c0)))) WHERE (((t0.c96 COLLATE NOCASE)-(CAST(rt0.c2 AS TEXT)))) ORDER BY ((((json_extract(t0.c48, t0.c96))AND(rt0.c0 COLLATE BINARY)))AND(((((((((vt0.c0)OR(t0.c96)))AND(t0.c96)))OR(rt0.c0)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c96 COLLATE NOCASE)-(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1)IS(NULL)) IN ()) RIGHT OUTER JOIN vt0 ON (CAST(rt0.c0 AS REAL) IN ((((rt0.c2))<=((rt0.c1))))) LEFT OUTER JOIN t0 ON (NOT (((rt0.c2)<(rt0.c0)))) ORDER BY ((((json_extract(t0.c48, t0.c96))AND(rt0.c0 COLLATE BINARY)))AND(((((((((vt0.c0)OR(t0.c96)))AND(t0.c96)))OR(rt0.c0)))AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1)IS(NULL)) IN ()) RIGHT OUTER JOIN vt0 ON (CAST(rt0.c0 AS REAL) IN ((((rt0.c2))<=((rt0.c1))))) LEFT OUTER JOIN t0 ON (NOT (((rt0.c2)<(rt0.c0)))) WHERE (((t0.c96 COLLATE NOCASE)-(CAST(rt0.c2 AS TEXT)))) ORDER BY ((((json_extract(t0.c48, t0.c96))AND(rt0.c0 COLLATE BINARY)))AND(((((((((vt0.c0)OR(t0.c96)))AND(t0.c96)))OR(rt0.c0)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c96 COLLATE NOCASE)-(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1)IS(NULL)) IN ()) RIGHT OUTER JOIN vt0 ON (CAST(rt0.c0 AS REAL) IN ((((rt0.c2))<=((rt0.c1))))) LEFT OUTER JOIN t0 ON (NOT (((rt0.c2)<(rt0.c0)))) ORDER BY ((((json_extract(t0.c48, t0.c96))AND(rt0.c0 COLLATE BINARY)))AND(((((((((vt0.c0)OR(t0.c96)))AND(t0.c96)))OR(rt0.c0)))AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1)IS(NULL)) IN ()) RIGHT OUTER JOIN vt0 ON (CAST(rt0.c0 AS REAL) IN ((((rt0.c2))<=((rt0.c1))))) LEFT OUTER JOIN t0 ON (NOT (((rt0.c2)<(rt0.c0)))) WHERE (((t0.c96 COLLATE NOCASE)-(CAST(rt0.c2 AS TEXT)))) ORDER BY ((((json_extract(t0.c48, t0.c96))AND(rt0.c0 COLLATE BINARY)))AND(((((((((vt0.c0)OR(t0.c96)))AND(t0.c96)))OR(rt0.c0)))AND(rt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE));
SELECT * FROM vt1, t0 WHERE ((((vt1.c0)) NOT BETWEEN ((t0.c48)) AND ((t0.c48))) COLLATE NOCASE) ORDER BY '-1031063975' DESC  NULLS LAST, (((((- (t0.c96)))OR(((vt1.c0)>=(vt1.c0)))))AND(CASE WHEN '-867852740' THEN vt1.c0 WHEN vt1.c0 THEN t0.c48 WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((t0.c48)) AND ((t0.c48))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0 ORDER BY '-1031063975' DESC  NULLS LAST, (((((- (t0.c96)))OR(((vt1.c0)>=(vt1.c0)))))AND(CASE WHEN '-867852740' THEN vt1.c0 WHEN vt1.c0 THEN t0.c48 WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ((((vt1.c0)) NOT BETWEEN ((t0.c48)) AND ((t0.c48))) COLLATE NOCASE) ORDER BY '-1031063975' DESC  NULLS LAST, (((((- (t0.c96)))OR(((vt1.c0)>=(vt1.c0)))))AND(CASE WHEN '-867852740' THEN vt1.c0 WHEN vt1.c0 THEN t0.c48 WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((t0.c48)) AND ((t0.c48))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0 ORDER BY '-1031063975' DESC  NULLS LAST, (((((- (t0.c96)))OR(((vt1.c0)>=(vt1.c0)))))AND(CASE WHEN '-867852740' THEN vt1.c0 WHEN vt1.c0 THEN t0.c48 WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ((((vt1.c0)) NOT BETWEEN ((t0.c48)) AND ((t0.c48))) COLLATE NOCASE) ORDER BY '-1031063975' DESC  NULLS LAST, (((((- (t0.c96)))OR(((vt1.c0)>=(vt1.c0)))))AND(CASE WHEN '-867852740' THEN vt1.c0 WHEN vt1.c0 THEN t0.c48 WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (COALESCE(t0.c96 COLLATE NOCASE, ((((vt1.c0)OR(rt0.c0)))AND(rt0.c2)))) ORDER BY (('	S}DRMJK9') BETWEEN (((((t0.c48)OR(t0.c96)))OR(rt0.c1))) AND ((((vt0.c0, '', rt0.c1))!=((t0.c48, vt0.c0, rt0.c2))))) DESC, (((vt1.c0)IS NOT(vt1.c0)) IN ()) ASC, 0Xffffffffc5a982ce ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(t0.c96 COLLATE NOCASE, ((((vt1.c0)OR(rt0.c0)))AND(rt0.c2)))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY (('	S}DRMJK9') BETWEEN (((((t0.c48)OR(t0.c96)))OR(rt0.c1))) AND ((((vt0.c0, '', rt0.c1))<>((t0.c48, vt0.c0, rt0.c2))))) DESC, (((vt1.c0)IS NOT(vt1.c0)) IN ()) ASC, 0xffffffffc5a982ce ASC);
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (COALESCE(t0.c96 COLLATE NOCASE, ((((vt1.c0)OR(rt0.c0)))AND(rt0.c2)))) ORDER BY (('	S}DRMJK9') BETWEEN (((((t0.c48)OR(t0.c96)))OR(rt0.c1))) AND ((((vt0.c0, '', rt0.c1))!=((t0.c48, vt0.c0, rt0.c2))))) DESC, (((vt1.c0)IS NOT(vt1.c0)) IN ()) ASC, 0Xffffffffc5a982ce ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(t0.c96 COLLATE NOCASE, ((((vt1.c0)OR(rt0.c0)))AND(rt0.c2)))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY (('	S}DRMJK9') BETWEEN (((((t0.c48)OR(t0.c96)))OR(rt0.c1))) AND ((((vt0.c0, '', rt0.c1))<>((t0.c48, vt0.c0, rt0.c2))))) DESC, (((vt1.c0)IS NOT(vt1.c0)) IN ()) ASC, 0xffffffffc5a982ce ASC);
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (COALESCE(t0.c96 COLLATE NOCASE, ((((vt1.c0)OR(rt0.c0)))AND(rt0.c2)))) ORDER BY (('	S}DRMJK9') BETWEEN (((((t0.c48)OR(t0.c96)))OR(rt0.c1))) AND ((((vt0.c0, '', rt0.c1))!=((t0.c48, vt0.c0, rt0.c2))))) DESC, (((vt1.c0)IS NOT(vt1.c0)) IN ()) ASC, 0Xffffffffc5a982ce ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE UPPER(vt1.c0)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN LIKELY(DISTINCT vt1.c0) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-1886542252')) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 COLLATE NOCASE THEN (('-995977901') BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE UPPER(vt1.c0)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN LIKELY(DISTINCT vt1.c0) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-1886542252')) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 COLLATE NOCASE THEN (('-995977901') BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE UPPER(vt1.c0)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN LIKELY(DISTINCT vt1.c0) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-1886542252')) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 COLLATE NOCASE THEN (('-995977901') BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE UPPER(vt1.c0)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN LIKELY(DISTINCT vt1.c0) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-1886542252')) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 COLLATE NOCASE THEN (('-995977901') BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE UPPER(vt1.c0)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN LIKELY(DISTINCT vt1.c0) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-1886542252')) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 COLLATE NOCASE THEN (('-995977901') BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 END);
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((NOT (rt0.c1 COLLATE NOCASE))) ORDER BY ROUND((rt0.c2 IN ()), vt0.c0 COLLATE RTRIM) DESC, CAST(((t0.c48)%(t0.c48)) AS INTEGER) ASC  NULLS LAST, (NOT (json_extract(rt0.c2, rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ROUND((rt0.c2 IN ()), vt0.c0 COLLATE RTRIM) DESC, CAST(((t0.c48)%(t0.c48)) AS INTEGER) ASC  NULLS LAST, (NOT (json_extract(rt0.c2, rt0.c2))) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((NOT (rt0.c1 COLLATE NOCASE))) ORDER BY ROUND((rt0.c2 IN ()), vt0.c0 COLLATE RTRIM) DESC, CAST(((t0.c48)%(t0.c48)) AS INTEGER) ASC  NULLS LAST, (NOT (json_extract(rt0.c2, rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ROUND((rt0.c2 IN ()), vt0.c0 COLLATE RTRIM) DESC, CAST(((t0.c48)%(t0.c48)) AS INTEGER) ASC  NULLS LAST, (NOT (json_extract(rt0.c2, rt0.c2))) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((NOT (rt0.c1 COLLATE NOCASE))) ORDER BY ROUND((rt0.c2 IN ()), vt0.c0 COLLATE RTRIM) DESC, CAST(((t0.c48)%(t0.c48)) AS INTEGER) ASC  NULLS LAST, (NOT (json_extract(rt0.c2, rt0.c2))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((((rt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((((rt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((((rt0.c0) NOT NULL) IN ()));
SELECT COUNT(*) FROM t0 WHERE ((- ((+ (t0.c48)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (t0.c48))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- ((+ (t0.c48)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (t0.c48))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- ((+ (t0.c48)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)||(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)||(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)||(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)||(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)||(vt0.c0)) IN ()));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON CAST(CAST(t0.c48 AS REAL) AS INTEGER) WHERE (((t0.c48) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c48) NOTNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CAST(CAST(t0.c48 AS REAL) AS INTEGER));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON CAST(CAST(t0.c48 AS REAL) AS INTEGER) WHERE (((t0.c48) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c48) NOTNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CAST(CAST(t0.c48 AS REAL) AS INTEGER));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON CAST(CAST(t0.c48 AS REAL) AS INTEGER) WHERE (((t0.c48) NOTNULL));
SELECT * FROM t0 WHERE (((((((((CAST(t0.c48 AS TEXT))AND(((t0.c48)>>(t0.c96)))))AND(((t0.c48) ISNULL))))OR((((((((('-2012429377')AND(t0.c96)))AND(t0.c48)))OR(t0.c96)))AND(t0.c96)))))OR((((t0.c96, t0.c48, t0.c96)) BETWEEN ((t0.c48, t0.c48, t0.c48)) AND ((t0.c96, t0.c48, t0.c96)))))) ORDER BY ((((((((((((CAST(t0.c96 AS NUMERIC))AND(CASE t0.c96  WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN t0.c96 END)))OR('')))OR(t0.c96)))AND(CAST(NULL AS INTEGER))))AND((~ (t0.c96)))))OR(CAST(t0.c96 AS REAL))), LIKELY(((t0.c96) NOTNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c48 AS TEXT))AND(((t0.c48)>>(t0.c96)))))AND(((t0.c48) ISNULL))))OR((((((((('-2012429377')AND(t0.c96)))AND(t0.c48)))OR(t0.c96)))AND(t0.c96)))))OR((((t0.c96, t0.c48, t0.c96)) BETWEEN ((t0.c48, t0.c48, t0.c48)) AND ((t0.c96, t0.c48, t0.c96)))))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((((CAST(t0.c96 AS NUMERIC))AND(CASE t0.c96  WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN t0.c96 END)))OR('')))OR(t0.c96)))AND(CAST(NULL AS INTEGER))))AND((~ (t0.c96)))))OR(CAST(t0.c96 AS REAL))), LIKELY(((t0.c96) NOTNULL))  NULLS LAST);
SELECT * FROM t0 WHERE (((((((((CAST(t0.c48 AS TEXT))AND(((t0.c48)>>(t0.c96)))))AND(((t0.c48) ISNULL))))OR((((((((('-2012429377')AND(t0.c96)))AND(t0.c48)))OR(t0.c96)))AND(t0.c96)))))OR((((t0.c96, t0.c48, t0.c96)) BETWEEN ((t0.c48, t0.c48, t0.c48)) AND ((t0.c96, t0.c48, t0.c96)))))) ORDER BY ((((((((((((CAST(t0.c96 AS NUMERIC))AND(CASE t0.c96  WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN t0.c96 END)))OR('')))OR(t0.c96)))AND(CAST(NULL AS INTEGER))))AND((~ (t0.c96)))))OR(CAST(t0.c96 AS REAL))), LIKELY(((t0.c96) NOTNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c48 AS TEXT))AND(((t0.c48)>>(t0.c96)))))AND(((t0.c48) ISNULL))))OR((((((((('-2012429377')AND(t0.c96)))AND(t0.c48)))OR(t0.c96)))AND(t0.c96)))))OR((((t0.c96, t0.c48, t0.c96)) BETWEEN ((t0.c48, t0.c48, t0.c48)) AND ((t0.c96, t0.c48, t0.c96)))))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((((CAST(t0.c96 AS NUMERIC))AND(CASE t0.c96  WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN t0.c96 END)))OR('')))OR(t0.c96)))AND(CAST(NULL AS INTEGER))))AND((~ (t0.c96)))))OR(CAST(t0.c96 AS REAL))), LIKELY(((t0.c96) NOTNULL))  NULLS LAST);
SELECT * FROM t0 WHERE (((((((((CAST(t0.c48 AS TEXT))AND(((t0.c48)>>(t0.c96)))))AND(((t0.c48) ISNULL))))OR((((((((('-2012429377')AND(t0.c96)))AND(t0.c48)))OR(t0.c96)))AND(t0.c96)))))OR((((t0.c96, t0.c48, t0.c96)) BETWEEN ((t0.c48, t0.c48, t0.c48)) AND ((t0.c96, t0.c48, t0.c96)))))) ORDER BY ((((((((((((CAST(t0.c96 AS NUMERIC))AND(CASE t0.c96  WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN t0.c96 END)))OR('')))OR(t0.c96)))AND(CAST(NULL AS INTEGER))))AND((~ (t0.c96)))))OR(CAST(t0.c96 AS REAL))), LIKELY(((t0.c96) NOTNULL))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((278853977 IN (SQLITE_VERSION(), (t0.c96 IN ())))) ORDER BY (~ (LIKELIHOOD(t0.c48, 0.4371233175552127)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((278853977 IN (SQLITE_VERSION(), (t0.c96 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (~ (LIKELIHOOD(t0.c48, 0.4371233175552127)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((278853977 IN (SQLITE_VERSION(), (t0.c96 IN ())))) ORDER BY (~ (LIKELIHOOD(t0.c48, 0.4371233175552127)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((278853977 IN (SQLITE_VERSION(), (t0.c96 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (~ (LIKELIHOOD(t0.c48, 0.4371233175552127)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((278853977 IN (SQLITE_VERSION(), (t0.c96 IN ())))) ORDER BY (~ (LIKELIHOOD(t0.c48, 0.4371233175552127)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE (CAST(((t0.c48)==(t0.c48)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c48)=(t0.c48)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE (CAST(((t0.c48)==(t0.c48)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c48)=(t0.c48)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE (CAST(((t0.c48)==(t0.c48)) AS INTEGER));
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (-1886542252) ORDER BY '-0.0', ((vt1.c0 COLLATE BINARY) NOT BETWEEN (json_extract(t0.c96, rt0.c0)) AND (rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1886542252) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY '-0.0', ((vt1.c0 COLLATE BINARY) NOT BETWEEN (json_extract(t0.c96, rt0.c0)) AND (rt0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (-1886542252) ORDER BY '-0.0', ((vt1.c0 COLLATE BINARY) NOT BETWEEN (json_extract(t0.c96, rt0.c0)) AND (rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1886542252) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY '-0.0', ((vt1.c0 COLLATE BINARY) NOT BETWEEN (json_extract(t0.c96, rt0.c0)) AND (rt0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (-1886542252) ORDER BY '-0.0', ((vt1.c0 COLLATE BINARY) NOT BETWEEN (json_extract(t0.c96, rt0.c0)) AND (rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT ALL * FROM vt1, t0 RIGHT OUTER JOIN rt0 ON ((CAST(t0.c48 AS NUMERIC))<>(vt1.c0)) WHERE (CAST(t0.c48 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c48 AS REAL)) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN rt0 ON ((CAST(t0.c48 AS NUMERIC))<>(vt1.c0)));
SELECT ALL * FROM vt1, t0 RIGHT OUTER JOIN rt0 ON ((CAST(t0.c48 AS NUMERIC))<>(vt1.c0)) WHERE (CAST(t0.c48 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c48 AS REAL)) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN rt0 ON ((CAST(t0.c48 AS NUMERIC))<>(vt1.c0)));
SELECT ALL * FROM vt1, t0 RIGHT OUTER JOIN rt0 ON ((CAST(t0.c48 AS NUMERIC))<>(vt1.c0)) WHERE (CAST(t0.c48 AS REAL));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c96, t0.c96, t0.c96)) BETWEEN ((x'', t0.c48, t0.c48)) AND ((t0.c48, t0.c48, vt0.c0))))<>((t0.c48 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c96, t0.c96, t0.c96)) BETWEEN ((x'', t0.c48, t0.c48)) AND ((t0.c48, t0.c48, vt0.c0))))<>((t0.c48 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c96, t0.c96, t0.c96)) BETWEEN ((x'', t0.c48, t0.c48)) AND ((t0.c48, t0.c48, vt0.c0))))<>((t0.c48 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c96, t0.c96, t0.c96)) BETWEEN ((x'', t0.c48, t0.c48)) AND ((t0.c48, t0.c48, vt0.c0))))<>((t0.c48 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c96, t0.c96, t0.c96)) BETWEEN ((x'', t0.c48, t0.c48)) AND ((t0.c48, t0.c48, vt0.c0))))<>((t0.c48 IN ()))));
SELECT ALL * FROM rt0, t0 WHERE (CASE CAST(t0.c96 AS REAL)  WHEN ((('0.8626499904327185')) NOT BETWEEN ((0.2939356261283904)) AND ((rt0.c0))) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE t0.c48 END END) ORDER BY ((((rt0.c0 IN ())))>((t0.c48))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c96 AS REAL)  WHEN ((('0.8626499904327185')) NOT BETWEEN ((0.2939356261283904)) AND ((rt0.c0))) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE t0.c48 END END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0 IN ())))>((t0.c48))) DESC);
SELECT ALL * FROM rt0, t0 WHERE (CASE CAST(t0.c96 AS REAL)  WHEN ((('0.8626499904327185')) NOT BETWEEN ((0.2939356261283904)) AND ((rt0.c0))) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE t0.c48 END END) ORDER BY ((((rt0.c0 IN ())))>((t0.c48))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c96 AS REAL)  WHEN ((('0.8626499904327185')) NOT BETWEEN ((0.2939356261283904)) AND ((rt0.c0))) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE t0.c48 END END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0 IN ())))>((t0.c48))) DESC);
SELECT ALL * FROM rt0, t0 WHERE (CASE CAST(t0.c96 AS REAL)  WHEN ((('0.8626499904327185')) NOT BETWEEN ((0.2939356261283904)) AND ((rt0.c0))) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE t0.c48 END END) ORDER BY ((((rt0.c0 IN ())))>((t0.c48))) DESC;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (UNLIKELY(DISTINCT HEX(DISTINCT rt0.c2))) ORDER BY ((((rt0.c2) IS TRUE)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT HEX(DISTINCT rt0.c2))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((((rt0.c2) IS TRUE)) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (UNLIKELY(DISTINCT HEX(DISTINCT rt0.c2))) ORDER BY ((((rt0.c2) IS TRUE)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT HEX(DISTINCT rt0.c2))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((((rt0.c2) IS TRUE)) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (UNLIKELY(DISTINCT HEX(DISTINCT rt0.c2))) ORDER BY ((((rt0.c2) IS TRUE)) IS FALSE) ASC;
SELECT * FROM vt1, t0 FULL OUTER JOIN vt0 ON NULL WHERE ((NOT ((((vt1.c0))<=((t0.c96))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt1.c0))<=((t0.c96)))))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON NULL);
SELECT * FROM vt1, t0 FULL OUTER JOIN vt0 ON NULL WHERE ((NOT ((((vt1.c0))<=((t0.c96))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt1.c0))<=((t0.c96)))))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON NULL);
SELECT * FROM vt1, t0 FULL OUTER JOIN vt0 ON NULL WHERE ((NOT ((((vt1.c0))<=((t0.c96))))));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)AND(t0.c48)))OR(t0.c96)) COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN t0 ON ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) COLLATE RTRIM INNER JOIN vt0 ON rt0.c2 WHERE (LOWER(DISTINCT CASE vt0.c0  WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN t0.c96 WHEN rt0.c0 THEN vt0.c0 ELSE vt1.c0 END)) ORDER BY (NOT (((rt0.c0) IS FALSE))), ((((NULL)AND(((((t0.c96)AND(t0.c96)))OR(t0.c48)))))OR((((vt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, t0.c48, NULL)) AND ((rt0.c0, rt0.c1, t0.c96))))) ASC, ((((CAST(vt0.c0 AS INTEGER))OR(rt0.c1)))OR(TRIM(t0.c96, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CASE vt0.c0  WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN t0.c96 WHEN rt0.c0 THEN vt0.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)AND(t0.c48)))OR(t0.c96)) COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN t0 ON ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) COLLATE RTRIM INNER JOIN vt0 ON rt0.c2 ORDER BY (NOT (((rt0.c0) IS FALSE))), ((((NULL)AND(((((t0.c96)AND(t0.c96)))OR(t0.c48)))))OR((((vt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, t0.c48, NULL)) AND ((rt0.c0, rt0.c1, t0.c96))))) ASC, ((((CAST(vt0.c0 AS INTEGER))OR(rt0.c1)))OR(TRIM(t0.c96, vt0.c0))));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)AND(t0.c48)))OR(t0.c96)) COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN t0 ON ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) COLLATE RTRIM INNER JOIN vt0 ON rt0.c2 WHERE (LOWER(DISTINCT CASE vt0.c0  WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN t0.c96 WHEN rt0.c0 THEN vt0.c0 ELSE vt1.c0 END)) ORDER BY (NOT (((rt0.c0) IS FALSE))), ((((NULL)AND(((((t0.c96)AND(t0.c96)))OR(t0.c48)))))OR((((vt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, t0.c48, NULL)) AND ((rt0.c0, rt0.c1, t0.c96))))) ASC, ((((CAST(vt0.c0 AS INTEGER))OR(rt0.c1)))OR(TRIM(t0.c96, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CASE vt0.c0  WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN t0.c96 WHEN rt0.c0 THEN vt0.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)AND(t0.c48)))OR(t0.c96)) COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN t0 ON ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) COLLATE RTRIM INNER JOIN vt0 ON rt0.c2 ORDER BY (NOT (((rt0.c0) IS FALSE))), ((((NULL)AND(((((t0.c96)AND(t0.c96)))OR(t0.c48)))))OR((((vt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, t0.c48, NULL)) AND ((rt0.c0, rt0.c1, t0.c96))))) ASC, ((((CAST(vt0.c0 AS INTEGER))OR(rt0.c1)))OR(TRIM(t0.c96, vt0.c0))));
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE ((NOT ((((0.38251397619173266, vt1.c0, vt1.c0)) BETWEEN (('1956264208', t0.c96, vt1.c0)) AND ((rt0.c2, 'p?x\n', rt0.c0)))))) ORDER BY ((((NULL) NOTNULL)) NOT BETWEEN (NULL COLLATE NOCASE) AND (t0.c48));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((0.38251397619173266, vt1.c0, vt1.c0)) BETWEEN (('1956264208', t0.c96, vt1.c0)) AND ((rt0.c2, 'p?x\n', rt0.c0)))))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((NULL) NOTNULL)) NOT BETWEEN (NULL COLLATE NOCASE) AND (t0.c48)));
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE ((NOT ((((0.38251397619173266, vt1.c0, vt1.c0)) BETWEEN (('1956264208', t0.c96, vt1.c0)) AND ((rt0.c2, 'p?x\n', rt0.c0)))))) ORDER BY ((((NULL) NOTNULL)) NOT BETWEEN (NULL COLLATE NOCASE) AND (t0.c48));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((0.38251397619173266, vt1.c0, vt1.c0)) BETWEEN (('1956264208', t0.c96, vt1.c0)) AND ((rt0.c2, 'p?x\n', rt0.c0)))))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((NULL) NOTNULL)) NOT BETWEEN (NULL COLLATE NOCASE) AND (t0.c48)));
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE ((NOT ((((0.38251397619173266, vt1.c0, vt1.c0)) BETWEEN (('1956264208', t0.c96, vt1.c0)) AND ((rt0.c2, 'p?x\n', rt0.c0)))))) ORDER BY ((((NULL) NOTNULL)) NOT BETWEEN (NULL COLLATE NOCASE) AND (t0.c48));
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN t0 ON CASE ((rt0.c2) IS FALSE)  WHEN ((vt0.c0)|(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) ELSE t0.c96 END LEFT OUTER JOIN vt0 ON (-2.074237748E9 IN (((rt0.c1) IS TRUE))) WHERE (CAST(((((((((vt0.c0)OR(t0.c96)))AND(rt0.c2)))AND(rt0.c1)))AND(t0.c48)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)OR(t0.c96)))AND(rt0.c2)))AND(rt0.c1)))AND(t0.c48)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN t0 ON CASE ((rt0.c2) IS FALSE)  WHEN ((vt0.c0)|(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) ELSE t0.c96 END LEFT OUTER JOIN vt0 ON (-2.074237748E9 IN (((rt0.c1) IS TRUE))));
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN t0 ON CASE ((rt0.c2) IS FALSE)  WHEN ((vt0.c0)|(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) ELSE t0.c96 END LEFT OUTER JOIN vt0 ON (-2.074237748E9 IN (((rt0.c1) IS TRUE))) WHERE (CAST(((((((((vt0.c0)OR(t0.c96)))AND(rt0.c2)))AND(rt0.c1)))AND(t0.c48)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)OR(t0.c96)))AND(rt0.c2)))AND(rt0.c1)))AND(t0.c48)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN t0 ON CASE ((rt0.c2) IS FALSE)  WHEN ((vt0.c0)|(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) ELSE t0.c96 END LEFT OUTER JOIN vt0 ON (-2.074237748E9 IN (((rt0.c1) IS TRUE))));
SELECT ALL * FROM t0, vt0 WHERE (CAST((((t0.c96)) NOT BETWEEN ((489753427)) AND ((t0.c48))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c96)) NOT BETWEEN ((489753427)) AND ((t0.c48))) AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST((((t0.c96)) NOT BETWEEN ((489753427)) AND ((t0.c48))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c96)) NOT BETWEEN ((489753427)) AND ((t0.c48))) AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST((((t0.c96)) NOT BETWEEN ((489753427)) AND ((t0.c48))) AS TEXT));
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN vt1.c0 END WHEN TYPEOF(DISTINCT rt0.c1) THEN (('1827298248') NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN NULL THEN ((rt0.c1)>('-44864894')) ELSE ((((vt1.c0)AND(rt0.c0)))AND(rt0.c2)) END) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 END)>(rt0.c1)) ASC, rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN vt1.c0 END WHEN TYPEOF(DISTINCT rt0.c1) THEN (('1827298248') NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN NULL THEN ((rt0.c1)>('-44864894')) ELSE ((((vt1.c0)AND(rt0.c0)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 END)>(rt0.c1)) ASC, rt0.c1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN vt1.c0 END WHEN TYPEOF(DISTINCT rt0.c1) THEN (('1827298248') NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN NULL THEN ((rt0.c1)>('-44864894')) ELSE ((((vt1.c0)AND(rt0.c0)))AND(rt0.c2)) END) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 END)>(rt0.c1)) ASC, rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN vt1.c0 END WHEN TYPEOF(DISTINCT rt0.c1) THEN (('1827298248') NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN NULL THEN ((rt0.c1)>('-44864894')) ELSE ((((vt1.c0)AND(rt0.c0)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 END)>(rt0.c1)) ASC, rt0.c1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN vt1.c0 END WHEN TYPEOF(DISTINCT rt0.c1) THEN (('1827298248') NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN NULL THEN ((rt0.c1)>('-44864894')) ELSE ((((vt1.c0)AND(rt0.c0)))AND(rt0.c2)) END) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 END)>(rt0.c1)) ASC, rt0.c1;
SELECT * FROM vt1, rt0, t0, vt0 WHERE ((('1972409537') ISNULL)) ORDER BY ABS(DISTINCT (+ (t0.c96))) ASC, ((rt0.c2 COLLATE BINARY)%(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT (((('1972409537') ISNULL)) IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY ABS(DISTINCT (+ (t0.c96))) ASC, ((rt0.c2 COLLATE BINARY)%(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))));
SELECT * FROM vt1, rt0, t0, vt0 WHERE ((('1972409537') ISNULL)) ORDER BY ABS(DISTINCT (+ (t0.c96))) ASC, ((rt0.c2 COLLATE BINARY)%(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT (((('1972409537') ISNULL)) IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY ABS(DISTINCT (+ (t0.c96))) ASC, ((rt0.c2 COLLATE BINARY)%(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))));
SELECT * FROM vt1, rt0, t0, vt0 WHERE ((('1972409537') ISNULL)) ORDER BY ABS(DISTINCT (+ (t0.c96))) ASC, ((rt0.c2 COLLATE BINARY)%(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0 CROSS JOIN vt0 ON CAST((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c48))) AS NUMERIC) INNER JOIN t0 ON CASE ((rt0.c0)<<(rt0.c2))  WHEN CASE WHEN vt0.c0 THEN rt0.c1 END THEN CAST(t0.c96 AS TEXT) WHEN ((t0.c96)+(']%Kci*C瑿}')) THEN '-1e500' WHEN TOTAL_CHANGES() THEN (((rt0.c0, t0.c96, t0.c48))<>((t0.c48, t0.c48, vt0.c0))) ELSE (+ (t0.c96)) END WHERE ((~ (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0 CROSS JOIN vt0 ON CAST((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c48))) AS NUMERIC) INNER JOIN t0 ON CASE ((rt0.c0)<<(rt0.c2))  WHEN CASE WHEN vt0.c0 THEN rt0.c1 END THEN CAST(t0.c96 AS TEXT) WHEN ((t0.c96)+(']%Kci*C瑿}')) THEN '-1e500' WHEN TOTAL_CHANGES() THEN (((rt0.c0, t0.c96, t0.c48))<>((t0.c48, t0.c48, vt0.c0))) ELSE (+ (t0.c96)) END);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0 CROSS JOIN vt0 ON CAST((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c48))) AS NUMERIC) INNER JOIN t0 ON CASE ((rt0.c0)<<(rt0.c2))  WHEN CASE WHEN vt0.c0 THEN rt0.c1 END THEN CAST(t0.c96 AS TEXT) WHEN ((t0.c96)+(']%Kci*C瑿}')) THEN '-1e500' WHEN TOTAL_CHANGES() THEN (((rt0.c0, t0.c96, t0.c48))<>((t0.c48, t0.c48, vt0.c0))) ELSE (+ (t0.c96)) END WHERE ((~ (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0 CROSS JOIN vt0 ON CAST((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c48))) AS NUMERIC) INNER JOIN t0 ON CASE ((rt0.c0)<<(rt0.c2))  WHEN CASE WHEN vt0.c0 THEN rt0.c1 END THEN CAST(t0.c96 AS TEXT) WHEN ((t0.c96)+(']%Kci*C瑿}')) THEN '-1e500' WHEN TOTAL_CHANGES() THEN (((rt0.c0, t0.c96, t0.c48))<>((t0.c48, t0.c48, vt0.c0))) ELSE (+ (t0.c96)) END);
SELECT * FROM t0, vt1 WHERE ((~ (((vt1.c0) ISNULL)))) ORDER BY (((t0.c96) NOT NULL) IN (((NULL) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c96) NOT NULL) IN (((NULL) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE ((~ (((vt1.c0) ISNULL)))) ORDER BY (((t0.c96) NOT NULL) IN (((NULL) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c96) NOT NULL) IN (((NULL) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE ((~ (((vt1.c0) ISNULL)))) ORDER BY (((t0.c96) NOT NULL) IN (((NULL) NOT NULL))) ASC  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON (NOT (((t0.c48) NOTNULL))) FULL OUTER JOIN vt1 ON ((((t0.c48)<<(rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND ((+ (t0.c96)))) WHERE ((((- (rt0.c1)))-(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1)))-(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (NOT (((t0.c48) NOTNULL))) FULL OUTER JOIN vt1 ON ((((t0.c48)<<(rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND ((+ (t0.c96)))));
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON (NOT (((t0.c48) NOTNULL))) FULL OUTER JOIN vt1 ON ((((t0.c48)<<(rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND ((+ (t0.c96)))) WHERE ((((- (rt0.c1)))-(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1)))-(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (NOT (((t0.c48) NOTNULL))) FULL OUTER JOIN vt1 ON ((((t0.c48)<<(rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND ((+ (t0.c96)))));
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON (NOT (((t0.c48) NOTNULL))) FULL OUTER JOIN vt1 ON ((((t0.c48)<<(rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND ((+ (t0.c96)))) WHERE ((((- (rt0.c1)))-(rt0.c0 COLLATE NOCASE)));
SELECT * FROM t0, rt0, vt1 CROSS JOIN vt0 ON (((((vt1.c0, rt0.c2, rt0.c1, rt0.c1, vt1.c0))<=((rt0.c2, rt0.c1, vt0.c0, t0.c48, 0.15835718485218153)))) NOT BETWEEN (CASE t0.c48  WHEN t0.c96 THEN t0.c48 WHEN rt0.c1 THEN t0.c48 WHEN vt0.c0 THEN vt1.c0 ELSE t0.c48 END) AND (vt1.c0)) WHERE (HEX(((rt0.c2)<=(rt0.c2)))) ORDER BY ((CASE rt0.c2  WHEN t0.c48 THEN t0.c96 ELSE t0.c48 END) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c2)<=(rt0.c2)))) IS TRUE)  as count FROM t0, rt0, vt1 CROSS JOIN vt0 ON (((((vt1.c0, rt0.c2, rt0.c1, rt0.c1, vt1.c0))<=((rt0.c2, rt0.c1, vt0.c0, t0.c48, 0.15835718485218153)))) NOT BETWEEN (CASE t0.c48  WHEN t0.c96 THEN t0.c48 WHEN rt0.c1 THEN t0.c48 WHEN vt0.c0 THEN vt1.c0 ELSE t0.c48 END) AND (vt1.c0)) ORDER BY ((CASE rt0.c2  WHEN t0.c48 THEN t0.c96 ELSE t0.c48 END) IS FALSE)  NULLS LAST);
SELECT * FROM t0, rt0, vt1 CROSS JOIN vt0 ON (((((vt1.c0, rt0.c2, rt0.c1, rt0.c1, vt1.c0))<=((rt0.c2, rt0.c1, vt0.c0, t0.c48, 0.15835718485218153)))) NOT BETWEEN (CASE t0.c48  WHEN t0.c96 THEN t0.c48 WHEN rt0.c1 THEN t0.c48 WHEN vt0.c0 THEN vt1.c0 ELSE t0.c48 END) AND (vt1.c0)) WHERE (HEX(((rt0.c2)<=(rt0.c2)))) ORDER BY ((CASE rt0.c2  WHEN t0.c48 THEN t0.c96 ELSE t0.c48 END) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c2)<=(rt0.c2)))) IS TRUE)  as count FROM t0, rt0, vt1 CROSS JOIN vt0 ON (((((vt1.c0, rt0.c2, rt0.c1, rt0.c1, vt1.c0))<=((rt0.c2, rt0.c1, vt0.c0, t0.c48, 0.15835718485218153)))) NOT BETWEEN (CASE t0.c48  WHEN t0.c96 THEN t0.c48 WHEN rt0.c1 THEN t0.c48 WHEN vt0.c0 THEN vt1.c0 ELSE t0.c48 END) AND (vt1.c0)) ORDER BY ((CASE rt0.c2  WHEN t0.c48 THEN t0.c96 ELSE t0.c48 END) IS FALSE)  NULLS LAST);
SELECT * FROM t0, rt0, vt1 CROSS JOIN vt0 ON (((((vt1.c0, rt0.c2, rt0.c1, rt0.c1, vt1.c0))<=((rt0.c2, rt0.c1, vt0.c0, t0.c48, 0.15835718485218153)))) NOT BETWEEN (CASE t0.c48  WHEN t0.c96 THEN t0.c48 WHEN rt0.c1 THEN t0.c48 WHEN vt0.c0 THEN vt1.c0 ELSE t0.c48 END) AND (vt1.c0)) WHERE (HEX(((rt0.c2)<=(rt0.c2)))) ORDER BY ((CASE rt0.c2  WHEN t0.c48 THEN t0.c96 ELSE t0.c48 END) IS FALSE)  NULLS LAST;
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE ((((vt1.c0))>((((((vt1.c0)AND(0.8831378141379769)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))>((((((vt1.c0)AND(0.8831378141379769)))OR(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE ((((vt1.c0))>((((((vt1.c0)AND(0.8831378141379769)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))>((((((vt1.c0)AND(0.8831378141379769)))OR(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE ((((vt1.c0))>((((((vt1.c0)AND(0.8831378141379769)))OR(vt0.c0))))));
SELECT ALL * FROM rt0, vt1 RIGHT OUTER JOIN t0 ON ((((t0.c96) NOT BETWEEN (vt1.c0) AND (t0.c48))) NOT NULL) WHERE ((~ (CASE WHEN t0.c48 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN t0.c48 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN t0 ON ((((t0.c96) NOT BETWEEN (vt1.c0) AND (t0.c48))) NOT NULL));
SELECT ALL * FROM rt0, vt1 RIGHT OUTER JOIN t0 ON ((((t0.c96) NOT BETWEEN (vt1.c0) AND (t0.c48))) NOT NULL) WHERE ((~ (CASE WHEN t0.c48 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN t0.c48 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN t0 ON ((((t0.c96) NOT BETWEEN (vt1.c0) AND (t0.c48))) NOT NULL));
SELECT ALL * FROM rt0, vt1 RIGHT OUTER JOIN t0 ON ((((t0.c96) NOT BETWEEN (vt1.c0) AND (t0.c48))) NOT NULL) WHERE ((~ (CASE WHEN t0.c48 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM vt1, t0 LEFT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE BINARY WHERE (0.46074790650040554);
SELECT SUM(count) FROM (SELECT ALL ((0.46074790650040554) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, t0 LEFT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE BINARY WHERE (0.46074790650040554);
SELECT SUM(count) FROM (SELECT ALL ((0.46074790650040554) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, t0 LEFT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE BINARY WHERE (0.46074790650040554);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) NOT BETWEEN ((- (t0.c96))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) NOT BETWEEN ((- (t0.c96))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) NOT BETWEEN ((- (t0.c96))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) NOT BETWEEN ((- (t0.c96))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) NOT BETWEEN ((- (t0.c96))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((CAST(vt1.c0 AS REAL)))>((vt1.c0 COLLATE RTRIM)))) ORDER BY ((rt0.c0)<(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS REAL)))>((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((rt0.c0)<(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((CAST(vt1.c0 AS REAL)))>((vt1.c0 COLLATE RTRIM)))) ORDER BY ((rt0.c0)<(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS REAL)))>((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((rt0.c0)<(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((CAST(vt1.c0 AS REAL)))>((vt1.c0 COLLATE RTRIM)))) ORDER BY ((rt0.c0)<(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))));
SELECT * FROM vt1 WHERE ('0.8267192220360731');
SELECT SUM(count) FROM (SELECT (('0.8267192220360731') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('0.8267192220360731');
SELECT SUM(count) FROM (SELECT (('0.8267192220360731') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('0.8267192220360731');
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((((vt0.c0)<>(vt0.c0)))IS NOT(COALESCE(DISTINCT vt0.c0, vt0.c0))), (CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<>(vt0.c0)))IS NOT(COALESCE(DISTINCT vt0.c0, vt0.c0))), (CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC));
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((((vt0.c0)<>(vt0.c0)))IS NOT(COALESCE(DISTINCT vt0.c0, vt0.c0))), (CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<>(vt0.c0)))IS NOT(COALESCE(DISTINCT vt0.c0, vt0.c0))), (CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC));
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((((vt0.c0)<>(vt0.c0)))IS NOT(COALESCE(DISTINCT vt0.c0, vt0.c0))), (CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC);
SELECT * FROM t0, rt0, vt0 RIGHT OUTER JOIN vt1 ON t0.c48 WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)) THEN ((rt0.c1)-(rt0.c0)) WHEN t0.c96 COLLATE NOCASE THEN ((vt0.c0) ISNULL) WHEN load_extension(vt1.c0, rt0.c2) THEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c96)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)) THEN ((rt0.c1)-(rt0.c0)) WHEN t0.c96 COLLATE NOCASE THEN ((vt0.c0) ISNULL) WHEN load_extension(vt1.c0, rt0.c2) THEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c96)) END) IS TRUE)  as count FROM t0, rt0, vt0 RIGHT OUTER JOIN vt1 ON t0.c48);
SELECT * FROM t0, rt0, vt0 RIGHT OUTER JOIN vt1 ON t0.c48 WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)) THEN ((rt0.c1)-(rt0.c0)) WHEN t0.c96 COLLATE NOCASE THEN ((vt0.c0) ISNULL) WHEN load_extension(vt1.c0, rt0.c2) THEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c96)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)) THEN ((rt0.c1)-(rt0.c0)) WHEN t0.c96 COLLATE NOCASE THEN ((vt0.c0) ISNULL) WHEN load_extension(vt1.c0, rt0.c2) THEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c96)) END) IS TRUE)  as count FROM t0, rt0, vt0 RIGHT OUTER JOIN vt1 ON t0.c48);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2)%(rt0.c1)))*(((((rt0.c2)OR(vt0.c0)))OR(rt0.c1))))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)%(rt0.c1)))*(((((rt0.c2)OR(vt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2)%(rt0.c1)))*(((((rt0.c2)OR(vt0.c0)))OR(rt0.c1))))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)%(rt0.c1)))*(((((rt0.c2)OR(vt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2)%(rt0.c1)))*(((((rt0.c2)OR(vt0.c0)))OR(rt0.c1))))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED, t0 WHERE ((UPPER(rt0.c1) IN ())) ORDER BY (- (NULLIF(DISTINCT vt0.c0, rt0.c1)))  NULLS LAST, ((((((((((((CASE t0.c48  WHEN rt0.c0 THEN t0.c96 END)AND(CASE WHEN t0.c48 THEN vt0.c0 WHEN t0.c48 THEN rt0.c2 WHEN t0.c48 THEN '-736611482' END)))OR(rt0.c0 COLLATE NOCASE)))OR(((t0.c48) BETWEEN (t0.c48) AND (t0.c96)))))OR((t0.c96 IN ()))))OR(CASE WHEN rt0.c0 THEN t0.c96 END)))AND(((vt0.c0)OR(t0.c48))));
SELECT SUM(count) FROM (SELECT ALL (((UPPER(rt0.c1) IN ())) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (- (NULLIF(DISTINCT vt0.c0, rt0.c1)))  NULLS LAST, ((((((((((((CASE t0.c48  WHEN rt0.c0 THEN t0.c96 END)AND(CASE WHEN t0.c48 THEN vt0.c0 WHEN t0.c48 THEN rt0.c2 WHEN t0.c48 THEN '-736611482' END)))OR(rt0.c0 COLLATE NOCASE)))OR(((t0.c48) BETWEEN (t0.c48) AND (t0.c96)))))OR((t0.c96 IN ()))))OR(CASE WHEN rt0.c0 THEN t0.c96 END)))AND(((vt0.c0)OR(t0.c48)))));
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED, t0 WHERE ((UPPER(rt0.c1) IN ())) ORDER BY (- (NULLIF(DISTINCT vt0.c0, rt0.c1)))  NULLS LAST, ((((((((((((CASE t0.c48  WHEN rt0.c0 THEN t0.c96 END)AND(CASE WHEN t0.c48 THEN vt0.c0 WHEN t0.c48 THEN rt0.c2 WHEN t0.c48 THEN '-736611482' END)))OR(rt0.c0 COLLATE NOCASE)))OR(((t0.c48) BETWEEN (t0.c48) AND (t0.c96)))))OR((t0.c96 IN ()))))OR(CASE WHEN rt0.c0 THEN t0.c96 END)))AND(((vt0.c0)OR(t0.c48))));
SELECT SUM(count) FROM (SELECT ALL (((UPPER(rt0.c1) IN ())) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (- (NULLIF(DISTINCT vt0.c0, rt0.c1)))  NULLS LAST, ((((((((((((CASE t0.c48  WHEN rt0.c0 THEN t0.c96 END)AND(CASE WHEN t0.c48 THEN vt0.c0 WHEN t0.c48 THEN rt0.c2 WHEN t0.c48 THEN '-736611482' END)))OR(rt0.c0 COLLATE NOCASE)))OR(((t0.c48) BETWEEN (t0.c48) AND (t0.c96)))))OR((t0.c96 IN ()))))OR(CASE WHEN rt0.c0 THEN t0.c96 END)))AND(((vt0.c0)OR(t0.c48)))));
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED, t0 WHERE ((UPPER(rt0.c1) IN ())) ORDER BY (- (NULLIF(DISTINCT vt0.c0, rt0.c1)))  NULLS LAST, ((((((((((((CASE t0.c48  WHEN rt0.c0 THEN t0.c96 END)AND(CASE WHEN t0.c48 THEN vt0.c0 WHEN t0.c48 THEN rt0.c2 WHEN t0.c48 THEN '-736611482' END)))OR(rt0.c0 COLLATE NOCASE)))OR(((t0.c48) BETWEEN (t0.c48) AND (t0.c96)))))OR((t0.c96 IN ()))))OR(CASE WHEN rt0.c0 THEN t0.c96 END)))AND(((vt0.c0)OR(t0.c48))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT (rt0.c1 IN (rt0.c1)), CASE t0.c48  WHEN rt0.c1 THEN rt0.c2 END) WHERE ((((t0.c96, rt0.c1, rt0.c0)) BETWEEN ((((((((((((((t0.c96)AND(rt0.c2)))OR(rt0.c2)))OR(t0.c48)))OR(rt0.c1)))AND(rt0.c2)))AND(t0.c48)), UNLIKELY(rt0.c1), ((rt0.c1)>(rt0.c0)))) AND ((((t0.c96)GLOB(rt0.c2)), ROUND(t0.c48, rt0.c0), ((NULL)<(0.22568681329001727)))))) ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c96, rt0.c1, rt0.c0)) BETWEEN ((((((((((((((t0.c96)AND(rt0.c2)))OR(rt0.c2)))OR(t0.c48)))OR(rt0.c1)))AND(rt0.c2)))AND(t0.c48)), UNLIKELY(rt0.c1), ((rt0.c1)>(rt0.c0)))) AND ((((t0.c96)GLOB(rt0.c2)), ROUND(t0.c48, rt0.c0), ((NULL)<(0.22568681329001727)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT (rt0.c1 IN (rt0.c1)), CASE t0.c48  WHEN rt0.c1 THEN rt0.c2 END) ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY, rt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT (rt0.c1 IN (rt0.c1)), CASE t0.c48  WHEN rt0.c1 THEN rt0.c2 END) WHERE ((((t0.c96, rt0.c1, rt0.c0)) BETWEEN ((((((((((((((t0.c96)AND(rt0.c2)))OR(rt0.c2)))OR(t0.c48)))OR(rt0.c1)))AND(rt0.c2)))AND(t0.c48)), UNLIKELY(rt0.c1), ((rt0.c1)>(rt0.c0)))) AND ((((t0.c96)GLOB(rt0.c2)), ROUND(t0.c48, rt0.c0), ((NULL)<(0.22568681329001727)))))) ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c96, rt0.c1, rt0.c0)) BETWEEN ((((((((((((((t0.c96)AND(rt0.c2)))OR(rt0.c2)))OR(t0.c48)))OR(rt0.c1)))AND(rt0.c2)))AND(t0.c48)), UNLIKELY(rt0.c1), ((rt0.c1)>(rt0.c0)))) AND ((((t0.c96)GLOB(rt0.c2)), ROUND(t0.c48, rt0.c0), ((NULL)<(0.22568681329001727)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT (rt0.c1 IN (rt0.c1)), CASE t0.c48  WHEN rt0.c1 THEN rt0.c2 END) ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY, rt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT (rt0.c1 IN (rt0.c1)), CASE t0.c48  WHEN rt0.c1 THEN rt0.c2 END) WHERE ((((t0.c96, rt0.c1, rt0.c0)) BETWEEN ((((((((((((((t0.c96)AND(rt0.c2)))OR(rt0.c2)))OR(t0.c48)))OR(rt0.c1)))AND(rt0.c2)))AND(t0.c48)), UNLIKELY(rt0.c1), ((rt0.c1)>(rt0.c0)))) AND ((((t0.c96)GLOB(rt0.c2)), ROUND(t0.c48, rt0.c0), ((NULL)<(0.22568681329001727)))))) ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY, rt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((1341041880)OR('')))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)) COLLATE BINARY COLLATE NOCASE) ORDER BY ((rt0.c0) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((1341041880)OR('')))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((1341041880)OR('')))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)) COLLATE BINARY COLLATE NOCASE) ORDER BY ((rt0.c0) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((1341041880)OR('')))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((1341041880)OR('')))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)) COLLATE BINARY COLLATE NOCASE) ORDER BY ((rt0.c0) IS FALSE) ASC  NULLS FIRST;
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c0))!=((rt0.c2)))) NOT NULL) CROSS JOIN vt0 ON t0.c96 INNER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((LIKE(rt0.c2, rt0.c0))) AND ((x''))) WHERE (((((((rt0.c0) NOT NULL))AND((((t0.c96)) BETWEEN ((t0.c96)) AND ((rt0.c0))))))OR(((vt1.c0) NOTNULL)))) ORDER BY (- (CASE WHEN t0.c96 THEN rt0.c2 WHEN rt0.c1 THEN t0.c96 WHEN '1973343852' THEN t0.c48 END))  NULLS LAST, (rt0.c1 IN (SQLITE_SOURCE_ID(), ((vt1.c0)&(t0.c48))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT NULL))AND((((t0.c96)) BETWEEN ((t0.c96)) AND ((rt0.c0))))))OR(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c0))<>((rt0.c2)))) NOT NULL) CROSS JOIN vt0 ON t0.c96 INNER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((LIKE(rt0.c2, rt0.c0))) AND ((x''))) ORDER BY (- (CASE WHEN t0.c96 THEN rt0.c2 WHEN rt0.c1 THEN t0.c96 WHEN '1973343852' THEN t0.c48 END))  NULLS LAST, (rt0.c1 IN (SQLITE_SOURCE_ID(), ((vt1.c0)&(t0.c48)))));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c0))!=((rt0.c2)))) NOT NULL) CROSS JOIN vt0 ON t0.c96 INNER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((LIKE(rt0.c2, rt0.c0))) AND ((x''))) WHERE (((((((rt0.c0) NOT NULL))AND((((t0.c96)) BETWEEN ((t0.c96)) AND ((rt0.c0))))))OR(((vt1.c0) NOTNULL)))) ORDER BY (- (CASE WHEN t0.c96 THEN rt0.c2 WHEN rt0.c1 THEN t0.c96 WHEN '1973343852' THEN t0.c48 END))  NULLS LAST, (rt0.c1 IN (SQLITE_SOURCE_ID(), ((vt1.c0)&(t0.c48))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT NULL))AND((((t0.c96)) BETWEEN ((t0.c96)) AND ((rt0.c0))))))OR(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c0))<>((rt0.c2)))) NOT NULL) CROSS JOIN vt0 ON t0.c96 INNER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((LIKE(rt0.c2, rt0.c0))) AND ((x''))) ORDER BY (- (CASE WHEN t0.c96 THEN rt0.c2 WHEN rt0.c1 THEN t0.c96 WHEN '1973343852' THEN t0.c48 END))  NULLS LAST, (rt0.c1 IN (SQLITE_SOURCE_ID(), ((vt1.c0)&(t0.c48)))));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c0))!=((rt0.c2)))) NOT NULL) CROSS JOIN vt0 ON t0.c96 INNER JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((LIKE(rt0.c2, rt0.c0))) AND ((x''))) WHERE (((((((rt0.c0) NOT NULL))AND((((t0.c96)) BETWEEN ((t0.c96)) AND ((rt0.c0))))))OR(((vt1.c0) NOTNULL)))) ORDER BY (- (CASE WHEN t0.c96 THEN rt0.c2 WHEN rt0.c1 THEN t0.c96 WHEN '1973343852' THEN t0.c48 END))  NULLS LAST, (rt0.c1 IN (SQLITE_SOURCE_ID(), ((vt1.c0)&(t0.c48))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (((((rt0.c2)OR(rt0.c2)))AND(t0.c96)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(rt0.c2)))AND(t0.c96)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (((((rt0.c2)OR(rt0.c2)))AND(t0.c96)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(rt0.c2)))AND(t0.c96)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (((((rt0.c2)OR(rt0.c2)))AND(t0.c96)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((('?.MI랭<')IS NOT(rt0.c1))))) ORDER BY ((UNLIKELY(DISTINCT rt0.c1)) BETWEEN (((rt0.c0) IS TRUE)) AND (TRIM(DISTINCT rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT (((~ ((('?.MI랭<')IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((UNLIKELY(DISTINCT rt0.c1)) BETWEEN (((rt0.c0) IS TRUE)) AND (TRIM(DISTINCT rt0.c2))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((('?.MI랭<')IS NOT(rt0.c1))))) ORDER BY ((UNLIKELY(DISTINCT rt0.c1)) BETWEEN (((rt0.c0) IS TRUE)) AND (TRIM(DISTINCT rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT (((~ ((('?.MI랭<')IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((UNLIKELY(DISTINCT rt0.c1)) BETWEEN (((rt0.c0) IS TRUE)) AND (TRIM(DISTINCT rt0.c2))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((('?.MI랭<')IS NOT(rt0.c1))))) ORDER BY ((UNLIKELY(DISTINCT rt0.c1)) BETWEEN (((rt0.c0) IS TRUE)) AND (TRIM(DISTINCT rt0.c2))) ASC;
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS INTEGER) IN ())) ORDER BY 0.7733753940292396  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1 ORDER BY 0.7733753940292396  NULLS LAST);
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS INTEGER) IN ())) ORDER BY 0.7733753940292396  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1 ORDER BY 0.7733753940292396  NULLS LAST);
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS INTEGER) IN ())) ORDER BY 0.7733753940292396  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((vt0.c0)IS(t0.c48)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(t0.c48)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((vt0.c0)IS(t0.c48)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(t0.c48)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((vt0.c0)IS(t0.c48)) COLLATE RTRIM);
SELECT * FROM vt1, rt0 FULL OUTER JOIN vt0 ON (((rt0.c2)) NOT BETWEEN (((~ (rt0.c1)))) AND ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (t0.c96))))) CROSS JOIN t0 ON vt0.c0 WHERE (((((rt0.c1) NOT NULL)) IS FALSE)) ORDER BY CASE rt0.c2  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN CAST(vt0.c0 AS TEXT) ELSE (('1341041880')>>(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN vt0 ON (((rt0.c2)) NOT BETWEEN (((~ (rt0.c1)))) AND ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (t0.c96))))) CROSS JOIN t0 ON vt0.c0 ORDER BY CASE rt0.c2  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN CAST(vt0.c0 AS TEXT) ELSE (('1341041880')>>(rt0.c1)) END);
SELECT * FROM vt1, rt0 FULL OUTER JOIN vt0 ON (((rt0.c2)) NOT BETWEEN (((~ (rt0.c1)))) AND ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (t0.c96))))) CROSS JOIN t0 ON vt0.c0 WHERE (((((rt0.c1) NOT NULL)) IS FALSE)) ORDER BY CASE rt0.c2  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN CAST(vt0.c0 AS TEXT) ELSE (('1341041880')>>(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN vt0 ON (((rt0.c2)) NOT BETWEEN (((~ (rt0.c1)))) AND ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (t0.c96))))) CROSS JOIN t0 ON vt0.c0 ORDER BY CASE rt0.c2  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN CAST(vt0.c0 AS TEXT) ELSE (('1341041880')>>(rt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c48) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c48) IS FALSE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c48) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c48) IS FALSE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c48) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((rt0.c2 IN ()) COLLATE NOCASE) ORDER BY ((IFNULL(rt0.c1, x'0d9a'))IS NOT((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, vt1 ORDER BY ((IFNULL(rt0.c1, x'0d9a'))IS NOT((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((rt0.c2 IN ()) COLLATE NOCASE) ORDER BY ((IFNULL(rt0.c1, x'0d9a'))IS NOT((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, vt1 ORDER BY ((IFNULL(rt0.c1, x'0d9a'))IS NOT((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((rt0.c2 IN ()) COLLATE NOCASE) ORDER BY ((IFNULL(rt0.c1, x'0d9a'))IS NOT((rt0.c2 IN ())));
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1)+(rt0.c2)) IN ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)+(rt0.c2)) IN ((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1)+(rt0.c2)) IN ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)+(rt0.c2)) IN ((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1)+(rt0.c2)) IN ((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c1)|(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)|(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c1)|(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)|(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c1)|(rt0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((UNLIKELY(DISTINCT vt1.c0))AND((((rt0.c2))>=((t0.c96))))))AND(vt0.c0)) FULL OUTER JOIN vt0 ON CASE rt0.c2  WHEN TRIM(DISTINCT rt0.c1) THEN CAST(t0.c96 AS TEXT) END INNER JOIN vt1 ON CHAR(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c96 WHEN vt1.c0 THEN rt0.c2 END) WHERE (((((((((CAST(rt0.c0 AS REAL))OR(((0.3305842142243832) BETWEEN (NULL) AND (rt0.c2)))))AND(vt0.c0 COLLATE RTRIM)))OR(CAST(vt1.c0 AS TEXT))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY (((vt0.c0 COLLATE BINARY))=((((((rt0.c2)AND(NULL)))AND(rt0.c1))))) ASC  NULLS LAST, CASE WHEN ((rt0.c1)&(rt0.c1)) THEN (- (vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c0 AS REAL))OR(((0.3305842142243832) BETWEEN (NULL) AND (rt0.c2)))))AND(vt0.c0 COLLATE RTRIM)))OR(CAST(vt1.c0 AS TEXT))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((UNLIKELY(DISTINCT vt1.c0))AND((((rt0.c2))>=((t0.c96))))))AND(vt0.c0)) FULL OUTER JOIN vt0 ON CASE rt0.c2  WHEN TRIM(DISTINCT rt0.c1) THEN CAST(t0.c96 AS TEXT) END INNER JOIN vt1 ON CHAR(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c96 WHEN vt1.c0 THEN rt0.c2 END) ORDER BY (((vt0.c0 COLLATE BINARY))==((((((rt0.c2)AND(NULL)))AND(rt0.c1))))) ASC  NULLS LAST, CASE WHEN ((rt0.c1)&(rt0.c1)) THEN (- (vt0.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((UNLIKELY(DISTINCT vt1.c0))AND((((rt0.c2))>=((t0.c96))))))AND(vt0.c0)) FULL OUTER JOIN vt0 ON CASE rt0.c2  WHEN TRIM(DISTINCT rt0.c1) THEN CAST(t0.c96 AS TEXT) END INNER JOIN vt1 ON CHAR(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c96 WHEN vt1.c0 THEN rt0.c2 END) WHERE (((((((((CAST(rt0.c0 AS REAL))OR(((0.3305842142243832) BETWEEN (NULL) AND (rt0.c2)))))AND(vt0.c0 COLLATE RTRIM)))OR(CAST(vt1.c0 AS TEXT))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY (((vt0.c0 COLLATE BINARY))=((((((rt0.c2)AND(NULL)))AND(rt0.c1))))) ASC  NULLS LAST, CASE WHEN ((rt0.c1)&(rt0.c1)) THEN (- (vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c0 AS REAL))OR(((0.3305842142243832) BETWEEN (NULL) AND (rt0.c2)))))AND(vt0.c0 COLLATE RTRIM)))OR(CAST(vt1.c0 AS TEXT))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((UNLIKELY(DISTINCT vt1.c0))AND((((rt0.c2))>=((t0.c96))))))AND(vt0.c0)) FULL OUTER JOIN vt0 ON CASE rt0.c2  WHEN TRIM(DISTINCT rt0.c1) THEN CAST(t0.c96 AS TEXT) END INNER JOIN vt1 ON CHAR(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c96 WHEN vt1.c0 THEN rt0.c2 END) ORDER BY (((vt0.c0 COLLATE BINARY))==((((((rt0.c2)AND(NULL)))AND(rt0.c1))))) ASC  NULLS LAST, CASE WHEN ((rt0.c1)&(rt0.c1)) THEN (- (vt0.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ('0.0');
SELECT SUM(count) FROM (SELECT ALL (('0.0') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('0.0');
SELECT SUM(count) FROM (SELECT ALL (('0.0') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('0.0');
SELECT * FROM rt0, vt1 WHERE ((((((rt0.c0)&(vt1.c0))))!=((0.502131597908186 COLLATE NOCASE)))) ORDER BY ((0.2838418632638352)<=(((rt0.c1)<(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)&(vt1.c0))))<>((0.502131597908186 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((0.2838418632638352)<=(((rt0.c1)<(vt1.c0)))) DESC);
SELECT * FROM rt0, vt1 WHERE ((((((rt0.c0)&(vt1.c0))))!=((0.502131597908186 COLLATE NOCASE)))) ORDER BY ((0.2838418632638352)<=(((rt0.c1)<(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)&(vt1.c0))))<>((0.502131597908186 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((0.2838418632638352)<=(((rt0.c1)<(vt1.c0)))) DESC);
SELECT * FROM rt0, vt1 WHERE ((((((rt0.c0)&(vt1.c0))))!=((0.502131597908186 COLLATE NOCASE)))) ORDER BY ((0.2838418632638352)<=(((rt0.c1)<(vt1.c0)))) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((+ (t0.c96))))=((t0.c96))));
SELECT SUM(count) FROM (SELECT ((((((+ (t0.c96))))=((t0.c96)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((+ (t0.c96))))=((t0.c96))));
SELECT SUM(count) FROM (SELECT ((((((+ (t0.c96))))=((t0.c96)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((+ (t0.c96))))=((t0.c96))));
SELECT ALL * FROM vt1 INDEXED BY i67 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS REAL), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('1743319445'))));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 INDEXED BY i67 ORDER BY CAST(vt1.c0 COLLATE NOCASE AS REAL), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('1743319445')))));
SELECT ALL * FROM vt1 INDEXED BY i67 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS REAL), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('1743319445'))));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 INDEXED BY i67 ORDER BY CAST(vt1.c0 COLLATE NOCASE AS REAL), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('1743319445')))));
SELECT COUNT(*) FROM vt1 INDEXED BY i67, vt0, rt0, t0 WHERE (LIKELY((NOT (vt1.c0)))) ORDER BY ((((rt0.c0)|(366349588)))>>(CAST(rt0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY((NOT (vt1.c0)))) IS TRUE)  as count FROM vt1 INDEXED BY i67, vt0, rt0, t0 ORDER BY ((((rt0.c0)|(366349588)))>>(CAST(rt0.c0 AS BLOB))) DESC);
SELECT COUNT(*) FROM vt1 INDEXED BY i67, vt0, rt0, t0 WHERE (LIKELY((NOT (vt1.c0)))) ORDER BY ((((rt0.c0)|(366349588)))>>(CAST(rt0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY((NOT (vt1.c0)))) IS TRUE)  as count FROM vt1 INDEXED BY i67, vt0, rt0, t0 ORDER BY ((((rt0.c0)|(366349588)))>>(CAST(rt0.c0 AS BLOB))) DESC);
SELECT COUNT(*) FROM t0, rt0 WHERE ((+ ((')h' IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((')h' IN ())))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((+ ((')h' IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((')h' IN ())))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((+ ((')h' IN ()))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON ((((((((((((t0.c96)OR(t0.c96)))AND(vt1.c0)))AND(t0.c96)))AND(vt1.c0)))OR(vt1.c0)))AND(0.22657976407007585)) COLLATE BINARY WHERE (CAST((((t0.c96))!=((t0.c48))) AS TEXT)) ORDER BY ((vt1.c0)>(CAST(t0.c48 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c96))<>((t0.c48))) AS TEXT)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON ((((((((((((t0.c96)OR(t0.c96)))AND(vt1.c0)))AND(t0.c96)))AND(vt1.c0)))OR(vt1.c0)))AND(0.22657976407007585)) COLLATE BINARY ORDER BY ((vt1.c0)>(CAST(t0.c48 AS TEXT))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON ((((((((((((t0.c96)OR(t0.c96)))AND(vt1.c0)))AND(t0.c96)))AND(vt1.c0)))OR(vt1.c0)))AND(0.22657976407007585)) COLLATE BINARY WHERE (CAST((((t0.c96))!=((t0.c48))) AS TEXT)) ORDER BY ((vt1.c0)>(CAST(t0.c48 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c96))<>((t0.c48))) AS TEXT)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON ((((((((((((t0.c96)OR(t0.c96)))AND(vt1.c0)))AND(t0.c96)))AND(vt1.c0)))OR(vt1.c0)))AND(0.22657976407007585)) COLLATE BINARY ORDER BY ((vt1.c0)>(CAST(t0.c48 AS TEXT))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON ((((((((((((t0.c96)OR(t0.c96)))AND(vt1.c0)))AND(t0.c96)))AND(vt1.c0)))OR(vt1.c0)))AND(0.22657976407007585)) COLLATE BINARY WHERE (CAST((((t0.c96))!=((t0.c48))) AS TEXT)) ORDER BY ((vt1.c0)>(CAST(t0.c48 AS TEXT)));
SELECT * FROM vt0, rt0, t0, vt1 WHERE ((- (((t0.c48) NOT BETWEEN (t0.c48) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c48) NOT BETWEEN (t0.c48) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE ((- (((t0.c48) NOT BETWEEN (t0.c48) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c48) NOT BETWEEN (t0.c48) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE ((- (((t0.c48) NOT BETWEEN (t0.c48) AND (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT CASE WHEN rt0.c0 THEN 'xT' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CASE WHEN rt0.c0 THEN 'xT' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT CASE WHEN rt0.c0 THEN 'xT' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CASE WHEN rt0.c0 THEN 'xT' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT CASE WHEN rt0.c0 THEN 'xT' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END));
SELECT * FROM vt0, vt1, rt0 WHERE (TIME((((rt0.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, vt1.c0, rt0.c0)) AND ((rt0.c0, NULL, vt0.c0))), CASE vt0.c0  WHEN rt0.c1 THEN vt1.c0 END, (NOT (rt0.c0)), rt0.c0, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))) ORDER BY -1898414291 DESC;
SELECT SUM(count) FROM (SELECT ((TIME((((rt0.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, vt1.c0, rt0.c0)) AND ((rt0.c0, NULL, vt0.c0))), CASE vt0.c0  WHEN rt0.c1 THEN vt1.c0 END, (NOT (rt0.c0)), rt0.c0, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY -1898414291 DESC);
SELECT * FROM vt0, vt1, rt0 WHERE (TIME((((rt0.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, vt1.c0, rt0.c0)) AND ((rt0.c0, NULL, vt0.c0))), CASE vt0.c0  WHEN rt0.c1 THEN vt1.c0 END, (NOT (rt0.c0)), rt0.c0, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))) ORDER BY -1898414291 DESC;
SELECT SUM(count) FROM (SELECT ((TIME((((rt0.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, vt1.c0, rt0.c0)) AND ((rt0.c0, NULL, vt0.c0))), CASE vt0.c0  WHEN rt0.c1 THEN vt1.c0 END, (NOT (rt0.c0)), rt0.c0, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY -1898414291 DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB))) AND (((((vt1.c0))>=((vt1.c0))))))) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) NOT NULL) ASC, (+ (9.223372036854776E18)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB))) AND (((((vt1.c0))>=((vt1.c0))))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) NOT NULL) ASC, (+ (9.223372036854776E18)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB))) AND (((((vt1.c0))>=((vt1.c0))))))) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) NOT NULL) ASC, (+ (9.223372036854776E18)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB))) AND (((((vt1.c0))>=((vt1.c0))))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) NOT NULL) ASC, (+ (9.223372036854776E18)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB))) AND (((((vt1.c0))>=((vt1.c0))))))) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) NOT NULL) ASC, (+ (9.223372036854776E18)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0xe119a28dc99b592 WHEN vt1.c0 THEN vt0.c0 ELSE NULL END))) ORDER BY vt1.c0  NULLS LAST, CASE vt1.c0 COLLATE BINARY  WHEN ((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END  NULLS FIRST, (NOT (vt1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0xe119a28dc99b592 WHEN vt1.c0 THEN vt0.c0 ELSE NULL END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0  NULLS LAST, CASE vt1.c0 COLLATE BINARY  WHEN ((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END  NULLS FIRST, (NOT (vt1.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0xe119a28dc99b592 WHEN vt1.c0 THEN vt0.c0 ELSE NULL END))) ORDER BY vt1.c0  NULLS LAST, CASE vt1.c0 COLLATE BINARY  WHEN ((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END  NULLS FIRST, (NOT (vt1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0xe119a28dc99b592 WHEN vt1.c0 THEN vt0.c0 ELSE NULL END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0  NULLS LAST, CASE vt1.c0 COLLATE BINARY  WHEN ((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END  NULLS FIRST, (NOT (vt1.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0xe119a28dc99b592 WHEN vt1.c0 THEN vt0.c0 ELSE NULL END))) ORDER BY vt1.c0  NULLS LAST, CASE vt1.c0 COLLATE BINARY  WHEN ((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END  NULLS FIRST, (NOT (vt1.c0 COLLATE NOCASE)) ASC;
SELECT * FROM rt0, vt1 WHERE (CASE WHEN x'e360' THEN CASE WHEN vt1.c0 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'e360' THEN CASE WHEN vt1.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN x'e360' THEN CASE WHEN vt1.c0 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'e360' THEN CASE WHEN vt1.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN x'e360' THEN CASE WHEN vt1.c0 THEN rt0.c0 END END);
SELECT ALL * FROM vt1, rt0 INNER JOIN t0 ON (+ (vt1.c0 COLLATE RTRIM)) WHERE ((+ (((rt0.c2)==(vt1.c0))))) ORDER BY ((LTRIM(vt1.c0))IS(((rt0.c0)GLOB(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)==(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t0 ON (+ (vt1.c0 COLLATE RTRIM)) ORDER BY ((LTRIM(vt1.c0))IS(((rt0.c0)GLOB(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 INNER JOIN t0 ON (+ (vt1.c0 COLLATE RTRIM)) WHERE ((+ (((rt0.c2)==(vt1.c0))))) ORDER BY ((LTRIM(vt1.c0))IS(((rt0.c0)GLOB(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)==(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t0 ON (+ (vt1.c0 COLLATE RTRIM)) ORDER BY ((LTRIM(vt1.c0))IS(((rt0.c0)GLOB(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 INNER JOIN t0 ON (+ (vt1.c0 COLLATE RTRIM)) WHERE ((+ (((rt0.c2)==(vt1.c0))))) ORDER BY ((LTRIM(vt1.c0))IS(((rt0.c0)GLOB(vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((rt0.c2)IS(t0.c48))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (LIKELIHOOD(DISTINCT t0.c96, 0.044251840244810436))) FULL OUTER JOIN rt0 ON (((t0.c48 IN ())) IS FALSE) INNER JOIN vt1 ON (((t0.c96)>(rt0.c2)) IN ()) WHERE (CASE WHEN x'' THEN ('#/9FE' IN (x'')) WHEN (t0.c96 IN ()) THEN ((x'') BETWEEN (x'') AND (x'f006')) WHEN ((x'108a') IS FALSE) THEN ((rt0.c0)IS NOT(rt0.c2)) ELSE 0.7736127728086598 END) ORDER BY UNLIKELY((t0.c96 IN (rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN ('#/9FE' IN (x'')) WHEN (t0.c96 IN ()) THEN ((x'') BETWEEN (x'') AND (x'f006')) WHEN ((x'108a') IS FALSE) THEN ((rt0.c0)IS NOT(rt0.c2)) ELSE 0.7736127728086598 END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((rt0.c2)IS(t0.c48))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (LIKELIHOOD(DISTINCT t0.c96, 0.044251840244810436))) FULL OUTER JOIN rt0 ON (((t0.c48 IN ())) IS FALSE) INNER JOIN vt1 ON (((t0.c96)>(rt0.c2)) IN ()) ORDER BY UNLIKELY((t0.c96 IN (rt0.c2))) ASC);
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((rt0.c2)IS(t0.c48))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (LIKELIHOOD(DISTINCT t0.c96, 0.044251840244810436))) FULL OUTER JOIN rt0 ON (((t0.c48 IN ())) IS FALSE) INNER JOIN vt1 ON (((t0.c96)>(rt0.c2)) IN ()) WHERE (CASE WHEN x'' THEN ('#/9FE' IN (x'')) WHEN (t0.c96 IN ()) THEN ((x'') BETWEEN (x'') AND (x'f006')) WHEN ((x'108a') IS FALSE) THEN ((rt0.c0)IS NOT(rt0.c2)) ELSE 0.7736127728086598 END) ORDER BY UNLIKELY((t0.c96 IN (rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN ('#/9FE' IN (x'')) WHEN (t0.c96 IN ()) THEN ((x'') BETWEEN (x'') AND (x'f006')) WHEN ((x'108a') IS FALSE) THEN ((rt0.c0)IS NOT(rt0.c2)) ELSE 0.7736127728086598 END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((rt0.c2)IS(t0.c48))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (LIKELIHOOD(DISTINCT t0.c96, 0.044251840244810436))) FULL OUTER JOIN rt0 ON (((t0.c48 IN ())) IS FALSE) INNER JOIN vt1 ON (((t0.c96)>(rt0.c2)) IN ()) ORDER BY UNLIKELY((t0.c96 IN (rt0.c2))) ASC);
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((rt0.c2)IS(t0.c48))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (LIKELIHOOD(DISTINCT t0.c96, 0.044251840244810436))) FULL OUTER JOIN rt0 ON (((t0.c48 IN ())) IS FALSE) INNER JOIN vt1 ON (((t0.c96)>(rt0.c2)) IN ()) WHERE (CASE WHEN x'' THEN ('#/9FE' IN (x'')) WHEN (t0.c96 IN ()) THEN ((x'') BETWEEN (x'') AND (x'f006')) WHEN ((x'108a') IS FALSE) THEN ((rt0.c0)IS NOT(rt0.c2)) ELSE 0.7736127728086598 END) ORDER BY UNLIKELY((t0.c96 IN (rt0.c2))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (NULL) ORDER BY ((TRIM(t0.c48, vt0.c0))<((((vt0.c0, t0.c48, vt0.c0))<>((rt0.c0, rt0.c2, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY ((TRIM(t0.c48, vt0.c0))<((((vt0.c0, t0.c48, vt0.c0))<>((rt0.c0, rt0.c2, vt1.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (NULL) ORDER BY ((TRIM(t0.c48, vt0.c0))<((((vt0.c0, t0.c48, vt0.c0))<>((rt0.c0, rt0.c2, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY ((TRIM(t0.c48, vt0.c0))<((((vt0.c0, t0.c48, vt0.c0))<>((rt0.c0, rt0.c2, vt1.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (NULL) ORDER BY ((TRIM(t0.c48, vt0.c0))<((((vt0.c0, t0.c48, vt0.c0))<>((rt0.c0, rt0.c2, vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0, t0, rt0 WHERE (((vt0.c0) IS TRUE) COLLATE NOCASE COLLATE RTRIM) ORDER BY (((((('|OEh8\r')AND(vt1.c0)))OR(-110413379)))IS NOT(rt0.c0))  NULLS LAST, ((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE, ((CAST(vt0.c0 AS TEXT)) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY (((((('|OEh8\r')AND(vt1.c0)))OR(-110413379)))IS NOT(rt0.c0))  NULLS LAST, ((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE, ((CAST(vt0.c0 AS TEXT)) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0, t0, rt0 WHERE (((vt0.c0) IS TRUE) COLLATE NOCASE COLLATE RTRIM) ORDER BY (((((('|OEh8\r')AND(vt1.c0)))OR(-110413379)))IS NOT(rt0.c0))  NULLS LAST, ((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE, ((CAST(vt0.c0 AS TEXT)) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY (((((('|OEh8\r')AND(vt1.c0)))OR(-110413379)))IS NOT(rt0.c0))  NULLS LAST, ((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE, ((CAST(vt0.c0 AS TEXT)) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0, t0, rt0 WHERE (((vt0.c0) IS TRUE) COLLATE NOCASE COLLATE RTRIM) ORDER BY (((((('|OEh8\r')AND(vt1.c0)))OR(-110413379)))IS NOT(rt0.c0))  NULLS LAST, ((((vt1.c0)AND(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE, ((CAST(vt0.c0 AS TEXT)) IS FALSE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((CASE vt1.c0  WHEN t0.c48 THEN vt1.c0 ELSE vt1.c0 END))>=((CAST(t0.c96 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt1.c0  WHEN t0.c48 THEN vt1.c0 ELSE vt1.c0 END))>=((CAST(t0.c96 AS NUMERIC))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((CASE vt1.c0  WHEN t0.c48 THEN vt1.c0 ELSE vt1.c0 END))>=((CAST(t0.c96 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt1.c0  WHEN t0.c48 THEN vt1.c0 ELSE vt1.c0 END))>=((CAST(t0.c96 AS NUMERIC))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((CASE vt1.c0  WHEN t0.c48 THEN vt1.c0 ELSE vt1.c0 END))>=((CAST(t0.c96 AS NUMERIC)))));
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((((rt0.c2)==(x'7e61')))<<(((t0.c48)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)=(x'7e61')))<<(((t0.c48)OR(rt0.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((((rt0.c2)==(x'7e61')))<<(((t0.c48)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)=(x'7e61')))<<(((t0.c48)OR(rt0.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((((rt0.c2)==(x'7e61')))<<(((t0.c48)OR(rt0.c0)))));
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON 0Xffffffffc5a982ce INNER JOIN vt0 ON ((((t0.c48) ISNULL))<=(vt1.c0 COLLATE RTRIM)) WHERE (CASE CASE WHEN t0.c48 THEN t0.c96 END  WHEN (((('8,dP/DZYy')OR(vt0.c0)))OR(vt1.c0)) THEN ((vt0.c0)<>(t0.c96)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN t0.c48 THEN t0.c96 END  WHEN (((('8,dP/DZYy')OR(vt0.c0)))OR(vt1.c0)) THEN ((vt0.c0)<>(t0.c96)) END) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON 0xffffffffc5a982ce INNER JOIN vt0 ON ((((t0.c48) ISNULL))<=(vt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON 0Xffffffffc5a982ce INNER JOIN vt0 ON ((((t0.c48) ISNULL))<=(vt1.c0 COLLATE RTRIM)) WHERE (CASE CASE WHEN t0.c48 THEN t0.c96 END  WHEN (((('8,dP/DZYy')OR(vt0.c0)))OR(vt1.c0)) THEN ((vt0.c0)<>(t0.c96)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN t0.c48 THEN t0.c96 END  WHEN (((('8,dP/DZYy')OR(vt0.c0)))OR(vt1.c0)) THEN ((vt0.c0)<>(t0.c96)) END) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON 0xffffffffc5a982ce INNER JOIN vt0 ON ((((t0.c48) ISNULL))<=(vt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON 0Xffffffffc5a982ce INNER JOIN vt0 ON ((((t0.c48) ISNULL))<=(vt1.c0 COLLATE RTRIM)) WHERE (CASE CASE WHEN t0.c48 THEN t0.c96 END  WHEN (((('8,dP/DZYy')OR(vt0.c0)))OR(vt1.c0)) THEN ((vt0.c0)<>(t0.c96)) END);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((((((t0.c96)AND(t0.c96)))OR(t0.c48)))OR(t0.c48)))OR(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c96)AND(t0.c96)))OR(t0.c48)))OR(t0.c48)))OR(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((((((t0.c96)AND(t0.c96)))OR(t0.c48)))OR(t0.c48)))OR(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c96)AND(t0.c96)))OR(t0.c48)))OR(t0.c48)))OR(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((((((t0.c96)AND(t0.c96)))OR(t0.c48)))OR(t0.c48)))OR(vt1.c0)) COLLATE BINARY);
SELECT * FROM vt1, rt0 WHERE ((+ (((rt0.c0)GLOB(rt0.c2))))) ORDER BY (rt0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0)GLOB(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (rt0.c0 IN ()) ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((+ (((rt0.c0)GLOB(rt0.c2))))) ORDER BY (rt0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0)GLOB(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (rt0.c0 IN ()) ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((+ (((rt0.c0)GLOB(rt0.c2))))) ORDER BY (rt0.c0 IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (((((t0.c96)>=(vt0.c0))) NOT BETWEEN ('-1151140072') AND ((((rt0.c2, rt0.c2, rt0.c1))>((vt0.c0, vt1.c0, '51832078'))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c96)>=(vt0.c0))) NOT BETWEEN ('-1151140072') AND ((((rt0.c2, rt0.c2, rt0.c1))>((vt0.c0, vt1.c0, '51832078')))))) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (((((t0.c96)>=(vt0.c0))) NOT BETWEEN ('-1151140072') AND ((((rt0.c2, rt0.c2, rt0.c1))>((vt0.c0, vt1.c0, '51832078'))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c96)>=(vt0.c0))) NOT BETWEEN ('-1151140072') AND ((((rt0.c2, rt0.c2, rt0.c1))>((vt0.c0, vt1.c0, '51832078')))))) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (((((t0.c96)>=(vt0.c0))) NOT BETWEEN ('-1151140072') AND ((((rt0.c2, rt0.c2, rt0.c1))>((vt0.c0, vt1.c0, '51832078'))))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c2)/(rt0.c2))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((t0.c48)) AND ((vt0.c0)))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)/(rt0.c2))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((t0.c48)) AND ((vt0.c0)))) AND (rt0.c0))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c2)/(rt0.c2))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((t0.c48)) AND ((vt0.c0)))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)/(rt0.c2))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((t0.c48)) AND ((vt0.c0)))) AND (rt0.c0))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c2)/(rt0.c2))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((t0.c48)) AND ((vt0.c0)))) AND (rt0.c0)));
SELECT * FROM rt0, t0, vt0, vt1 WHERE (((CAST(t0.c96 AS NUMERIC))GLOB(((t0.c48) BETWEEN (t0.c48) AND (t0.c96)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c96 AS NUMERIC))GLOB(((t0.c48) BETWEEN (t0.c48) AND (t0.c96))))) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT * FROM rt0, t0, vt0, vt1 WHERE (((CAST(t0.c96 AS NUMERIC))GLOB(((t0.c48) BETWEEN (t0.c48) AND (t0.c96)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c96 AS NUMERIC))GLOB(((t0.c48) BETWEEN (t0.c48) AND (t0.c96))))) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT * FROM rt0, t0, vt0, vt1 WHERE (((CAST(t0.c96 AS NUMERIC))GLOB(((t0.c48) BETWEEN (t0.c48) AND (t0.c96)))));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0)<(rt0.c1))) NOT NULL) WHERE (((+ (0.9371491245593035)) IN ())) ORDER BY ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))))AND(CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((+ (0.9371491245593035)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0)<(rt0.c1))) NOT NULL) ORDER BY ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))))AND(CAST(rt0.c1 AS REAL))));
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0)<(rt0.c1))) NOT NULL) WHERE (((+ (0.9371491245593035)) IN ())) ORDER BY ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))))AND(CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((+ (0.9371491245593035)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0)<(rt0.c1))) NOT NULL) ORDER BY ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))))AND(CAST(rt0.c1 AS REAL))));
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0)<(rt0.c1))) NOT NULL) WHERE (((+ (0.9371491245593035)) IN ())) ORDER BY ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))))AND(CAST(rt0.c1 AS REAL)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CASE 0.11030830171341799  WHEN (rt0.c1 IN ()) THEN ((rt0.c1) IS TRUE) END WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) ORDER BY (((((((((- (rt0.c0)))AND(0Xffffffffe3820122)))OR(CAST(rt0.c1 AS BLOB))))AND(rt0.c0 COLLATE RTRIM)))OR(CAST(vt1.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CASE 0.11030830171341799  WHEN (rt0.c1 IN ()) THEN ((rt0.c1) IS TRUE) END ORDER BY (((((((((- (rt0.c0)))AND(0Xffffffffe3820122)))OR(CAST(rt0.c1 AS BLOB))))AND(rt0.c0 COLLATE RTRIM)))OR(CAST(vt1.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CASE 0.11030830171341799  WHEN (rt0.c1 IN ()) THEN ((rt0.c1) IS TRUE) END WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) ORDER BY (((((((((- (rt0.c0)))AND(0Xffffffffe3820122)))OR(CAST(rt0.c1 AS BLOB))))AND(rt0.c0 COLLATE RTRIM)))OR(CAST(vt1.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CASE 0.11030830171341799  WHEN (rt0.c1 IN ()) THEN ((rt0.c1) IS TRUE) END ORDER BY (((((((((- (rt0.c0)))AND(0Xffffffffe3820122)))OR(CAST(rt0.c1 AS BLOB))))AND(rt0.c0 COLLATE RTRIM)))OR(CAST(vt1.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CASE 0.11030830171341799  WHEN (rt0.c1 IN ()) THEN ((rt0.c1) IS TRUE) END WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) ORDER BY (((((((((- (rt0.c0)))AND(0Xffffffffe3820122)))OR(CAST(rt0.c1 AS BLOB))))AND(rt0.c0 COLLATE RTRIM)))OR(CAST(vt1.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 LEFT OUTER JOIN vt1 ON CASE LIKELY(DISTINCT vt1.c0)  WHEN (((vt1.c0, t0.c96, vt0.c0, t0.c48, rt0.c0))<((rt0.c1, t0.c48, t0.c96, t0.c96, vt0.c0))) THEN ((0.40869875894702357) BETWEEN (rt0.c0) AND (vt1.c0)) ELSE (NOT (vt1.c0)) END WHERE (vt0.c0) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((rt0.c1) BETWEEN (t0.c96) AND (vt0.c0))) AND (CAST(rt0.c2 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0, rt0 LEFT OUTER JOIN vt1 ON CASE LIKELY(DISTINCT vt1.c0)  WHEN (((vt1.c0, t0.c96, vt0.c0, t0.c48, rt0.c0))<((rt0.c1, t0.c48, t0.c96, t0.c96, vt0.c0))) THEN ((0.40869875894702357) BETWEEN (rt0.c0) AND (vt1.c0)) ELSE (NOT (vt1.c0)) END ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((rt0.c1) BETWEEN (t0.c96) AND (vt0.c0))) AND (CAST(rt0.c2 AS REAL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 LEFT OUTER JOIN vt1 ON CASE LIKELY(DISTINCT vt1.c0)  WHEN (((vt1.c0, t0.c96, vt0.c0, t0.c48, rt0.c0))<((rt0.c1, t0.c48, t0.c96, t0.c96, vt0.c0))) THEN ((0.40869875894702357) BETWEEN (rt0.c0) AND (vt1.c0)) ELSE (NOT (vt1.c0)) END WHERE (vt0.c0) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((rt0.c1) BETWEEN (t0.c96) AND (vt0.c0))) AND (CAST(rt0.c2 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0, rt0 LEFT OUTER JOIN vt1 ON CASE LIKELY(DISTINCT vt1.c0)  WHEN (((vt1.c0, t0.c96, vt0.c0, t0.c48, rt0.c0))<((rt0.c1, t0.c48, t0.c96, t0.c96, vt0.c0))) THEN ((0.40869875894702357) BETWEEN (rt0.c0) AND (vt1.c0)) ELSE (NOT (vt1.c0)) END ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((rt0.c1) BETWEEN (t0.c96) AND (vt0.c0))) AND (CAST(rt0.c2 AS REAL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 LEFT OUTER JOIN vt1 ON CASE LIKELY(DISTINCT vt1.c0)  WHEN (((vt1.c0, t0.c96, vt0.c0, t0.c48, rt0.c0))<((rt0.c1, t0.c48, t0.c96, t0.c96, vt0.c0))) THEN ((0.40869875894702357) BETWEEN (rt0.c0) AND (vt1.c0)) ELSE (NOT (vt1.c0)) END WHERE (vt0.c0) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((rt0.c1) BETWEEN (t0.c96) AND (vt0.c0))) AND (CAST(rt0.c2 AS REAL))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CASE WHEN NULL THEN rt0.c0 END) ORDER BY ((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN rt0.c0 END) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CASE WHEN NULL THEN rt0.c0 END) ORDER BY ((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN rt0.c0 END) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CASE WHEN NULL THEN rt0.c0 END) ORDER BY ((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) IS TRUE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((-1.898414291E9)||(vt1.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((-1.898414291E9)||(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((-1.898414291E9)||(vt1.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((-1.898414291E9)||(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((-1.898414291E9)||(vt1.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((((vt0.c0)|(-478019294)))AND(((rt0.c2) ISNULL)))) ORDER BY CASE WHEN ((('-995977901'))=((vt0.c0))) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)) ELSE CAST(t0.c96 AS NUMERIC) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)|(-478019294)))AND(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY CASE WHEN ((('-995977901'))==((vt0.c0))) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)) ELSE CAST(t0.c96 AS NUMERIC) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((((vt0.c0)|(-478019294)))AND(((rt0.c2) ISNULL)))) ORDER BY CASE WHEN ((('-995977901'))=((vt0.c0))) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)) ELSE CAST(t0.c96 AS NUMERIC) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)|(-478019294)))AND(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY CASE WHEN ((('-995977901'))==((vt0.c0))) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)) ELSE CAST(t0.c96 AS NUMERIC) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((((vt0.c0)|(-478019294)))AND(((rt0.c2) ISNULL)))) ORDER BY CASE WHEN ((('-995977901'))=((vt0.c0))) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)) ELSE CAST(t0.c96 AS NUMERIC) END ASC  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((CAST(t0.c48 AS BLOB))>((t0.c48 IN (t0.c96)))) WHERE (CASE WHEN ((('0.15835718485218153', t0.c96, t0.c96))<>((t0.c96, t0.c96, vt0.c0))) THEN CASE vt0.c0  WHEN t0.c96 THEN t0.c48 ELSE t0.c48 END ELSE ((t0.c48) NOT BETWEEN (t0.c96) AND (t0.c48)) END) ORDER BY ((((((t0.c96)LIKE(t0.c96)))OR(vt0.c0 COLLATE NOCASE)))AND((((t0.c96)) BETWEEN ((vt0.c0)) AND ((t0.c48))))) DESC  NULLS FIRST, (CASE WHEN t0.c48 THEN t0.c48 ELSE t0.c48 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((('0.15835718485218153', t0.c96, t0.c96))!=((t0.c96, t0.c96, vt0.c0))) THEN CASE vt0.c0  WHEN t0.c96 THEN t0.c48 ELSE t0.c48 END ELSE ((t0.c48) NOT BETWEEN (t0.c96) AND (t0.c48)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((CAST(t0.c48 AS BLOB))>((t0.c48 IN (t0.c96)))) ORDER BY ((((((t0.c96)LIKE(t0.c96)))OR(vt0.c0 COLLATE NOCASE)))AND((((t0.c96)) BETWEEN ((vt0.c0)) AND ((t0.c48))))) DESC  NULLS FIRST, (CASE WHEN t0.c48 THEN t0.c48 ELSE t0.c48 END IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((CAST(t0.c48 AS BLOB))>((t0.c48 IN (t0.c96)))) WHERE (CASE WHEN ((('0.15835718485218153', t0.c96, t0.c96))<>((t0.c96, t0.c96, vt0.c0))) THEN CASE vt0.c0  WHEN t0.c96 THEN t0.c48 ELSE t0.c48 END ELSE ((t0.c48) NOT BETWEEN (t0.c96) AND (t0.c48)) END) ORDER BY ((((((t0.c96)LIKE(t0.c96)))OR(vt0.c0 COLLATE NOCASE)))AND((((t0.c96)) BETWEEN ((vt0.c0)) AND ((t0.c48))))) DESC  NULLS FIRST, (CASE WHEN t0.c48 THEN t0.c48 ELSE t0.c48 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((('0.15835718485218153', t0.c96, t0.c96))!=((t0.c96, t0.c96, vt0.c0))) THEN CASE vt0.c0  WHEN t0.c96 THEN t0.c48 ELSE t0.c48 END ELSE ((t0.c48) NOT BETWEEN (t0.c96) AND (t0.c48)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((CAST(t0.c48 AS BLOB))>((t0.c48 IN (t0.c96)))) ORDER BY ((((((t0.c96)LIKE(t0.c96)))OR(vt0.c0 COLLATE NOCASE)))AND((((t0.c96)) BETWEEN ((vt0.c0)) AND ((t0.c48))))) DESC  NULLS FIRST, (CASE WHEN t0.c48 THEN t0.c48 ELSE t0.c48 END IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((CAST(t0.c48 AS BLOB))>((t0.c48 IN (t0.c96)))) WHERE (CASE WHEN ((('0.15835718485218153', t0.c96, t0.c96))<>((t0.c96, t0.c96, vt0.c0))) THEN CASE vt0.c0  WHEN t0.c96 THEN t0.c48 ELSE t0.c48 END ELSE ((t0.c48) NOT BETWEEN (t0.c96) AND (t0.c48)) END) ORDER BY ((((((t0.c96)LIKE(t0.c96)))OR(vt0.c0 COLLATE NOCASE)))AND((((t0.c96)) BETWEEN ((vt0.c0)) AND ((t0.c48))))) DESC  NULLS FIRST, (CASE WHEN t0.c48 THEN t0.c48 ELSE t0.c48 END IN ()) DESC  NULLS FIRST;
SELECT * FROM rt0, vt1, vt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c2)OR(rt0.c2)) ELSE NULLIF(vt1.c0, vt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c2)OR(rt0.c2)) ELSE NULLIF(vt1.c0, vt0.c0) END ASC);
SELECT * FROM rt0, vt1, vt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c2)OR(rt0.c2)) ELSE NULLIF(vt1.c0, vt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c2)OR(rt0.c2)) ELSE NULLIF(vt1.c0, vt0.c0) END ASC);
SELECT * FROM rt0, vt1, vt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c2)OR(rt0.c2)) ELSE NULLIF(vt1.c0, vt0.c0) END ASC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE (((t0.c96)) NOT BETWEEN ((t0.c48)) AND ((vt0.c0)))  WHEN (t0.c96 IN ()) THEN CAST(t0.c96 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c96)) NOT BETWEEN ((t0.c48)) AND ((vt0.c0)))  WHEN (t0.c96 IN ()) THEN CAST(t0.c96 AS TEXT) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE (((t0.c96)) NOT BETWEEN ((t0.c48)) AND ((vt0.c0)))  WHEN (t0.c96 IN ()) THEN CAST(t0.c96 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c96)) NOT BETWEEN ((t0.c48)) AND ((vt0.c0)))  WHEN (t0.c96 IN ()) THEN CAST(t0.c96 AS TEXT) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE (((t0.c96)) NOT BETWEEN ((t0.c48)) AND ((vt0.c0)))  WHEN (t0.c96 IN ()) THEN CAST(t0.c96 AS TEXT) END);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) NOTNULL));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((t0.c96)OR(t0.c96)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c96)OR(t0.c96)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((t0.c96)OR(t0.c96)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c96)OR(t0.c96)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((t0.c96)OR(t0.c96)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (((0.21316214365213015) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0.21316214365213015) NOTNULL)) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (((0.21316214365213015) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0.21316214365213015) NOTNULL)) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (((0.21316214365213015) NOTNULL));
SELECT * FROM vt1 WHERE (json_remove(vt1.c0, vt1.c0 COLLATE RTRIM)) ORDER BY vt1.c0 ASC, (((vt1.c0)AND(vt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(vt1.c0, vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, (((vt1.c0)AND(vt1.c0)) IN ()) DESC);
SELECT * FROM vt1 WHERE (json_remove(vt1.c0, vt1.c0 COLLATE RTRIM)) ORDER BY vt1.c0 ASC, (((vt1.c0)AND(vt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(vt1.c0, vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, (((vt1.c0)AND(vt1.c0)) IN ()) DESC);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((((NULL)OR(((vt1.c0)OR(t0.c96)))))AND(((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((vt1.c0 IN (rt0.c1))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((vt1.c0)OR(t0.c96)))))AND(((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY (((vt1.c0 IN (rt0.c1))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((((NULL)OR(((vt1.c0)OR(t0.c96)))))AND(((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((vt1.c0 IN (rt0.c1))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((vt1.c0)OR(t0.c96)))))AND(((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY (((vt1.c0 IN (rt0.c1))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((((NULL)OR(((vt1.c0)OR(t0.c96)))))AND(((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((vt1.c0 IN (rt0.c1))) IS FALSE)  NULLS FIRST;
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT vt0.c0)) ORDER BY ((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))/(((vt0.c0) NOTNULL))) ASC  NULLS FIRST, (- (((vt0.c0)|(vt0.c0)))), '';
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY ((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))/(((vt0.c0) NOTNULL))) ASC  NULLS FIRST, (- (((vt0.c0)|(vt0.c0)))), '');
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT vt0.c0)) ORDER BY ((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))/(((vt0.c0) NOTNULL))) ASC  NULLS FIRST, (- (((vt0.c0)|(vt0.c0)))), '';
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY ((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))/(((vt0.c0) NOTNULL))) ASC  NULLS FIRST, (- (((vt0.c0)|(vt0.c0)))), '');
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT vt0.c0)) ORDER BY ((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))/(((vt0.c0) NOTNULL))) ASC  NULLS FIRST, (- (((vt0.c0)|(vt0.c0)))), '';
SELECT * FROM t0, vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT ALL * FROM vt1 INDEXED BY i71, rt0, t0 WHERE (CAST(((rt0.c1) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) ISNULL) AS REAL)) IS TRUE)  as count FROM vt1 INDEXED BY i71, rt0, t0);
SELECT ALL * FROM vt1 INDEXED BY i71, rt0, t0 WHERE (CAST(((rt0.c1) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) ISNULL) AS REAL)) IS TRUE)  as count FROM vt1 INDEXED BY i71, rt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (CAST(((t0.c96)IS(t0.c96)) AS REAL)) ORDER BY (((vt1.c0 IN (t0.c48))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c96)IS(t0.c96)) AS REAL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((vt1.c0 IN (t0.c48))) NOT NULL)  NULLS LAST);
SELECT * FROM vt1, vt0, t0 WHERE (CAST(((t0.c96)IS(t0.c96)) AS REAL)) ORDER BY (((vt1.c0 IN (t0.c48))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c96)IS(t0.c96)) AS REAL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((vt1.c0 IN (t0.c48))) NOT NULL)  NULLS LAST);
SELECT * FROM vt1, vt0, t0 WHERE (CAST(((t0.c96)IS(t0.c96)) AS REAL)) ORDER BY (((vt1.c0 IN (t0.c48))) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 WHERE (((((+ (t0.c48))))<((t0.c48 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (t0.c48))))<((t0.c48 COLLATE BINARY)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((+ (t0.c48))))<((t0.c48 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (t0.c48))))<((t0.c48 COLLATE BINARY)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((+ (t0.c48))))<((t0.c48 COLLATE BINARY))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CASE (((t0.c48))<>((rt0.c0)))  WHEN CASE t0.c48  WHEN rt0.c0 THEN t0.c48 WHEN t0.c96 THEN rt0.c0 WHEN '1781441112' THEN vt0.c0 END THEN NULL WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)<(rt0.c2)) WHEN (t0.c48 IN ()) THEN rt0.c0 END) ORDER BY SUBSTR(('898591095' IN ()), (~ (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c48))<>((rt0.c0)))  WHEN CASE t0.c48  WHEN rt0.c0 THEN t0.c48 WHEN t0.c96 THEN rt0.c0 WHEN '1781441112' THEN vt0.c0 END THEN NULL WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)<(rt0.c2)) WHEN (t0.c48 IN ()) THEN rt0.c0 END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY SUBSTR(('898591095' IN ()), (~ (vt0.c0))) DESC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CASE (((t0.c48))<>((rt0.c0)))  WHEN CASE t0.c48  WHEN rt0.c0 THEN t0.c48 WHEN t0.c96 THEN rt0.c0 WHEN '1781441112' THEN vt0.c0 END THEN NULL WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)<(rt0.c2)) WHEN (t0.c48 IN ()) THEN rt0.c0 END) ORDER BY SUBSTR(('898591095' IN ()), (~ (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c48))<>((rt0.c0)))  WHEN CASE t0.c48  WHEN rt0.c0 THEN t0.c48 WHEN t0.c96 THEN rt0.c0 WHEN '1781441112' THEN vt0.c0 END THEN NULL WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)<(rt0.c2)) WHEN (t0.c48 IN ()) THEN rt0.c0 END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY SUBSTR(('898591095' IN ()), (~ (vt0.c0))) DESC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CASE (((t0.c48))<>((rt0.c0)))  WHEN CASE t0.c48  WHEN rt0.c0 THEN t0.c48 WHEN t0.c96 THEN rt0.c0 WHEN '1781441112' THEN vt0.c0 END THEN NULL WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)<(rt0.c2)) WHEN (t0.c48 IN ()) THEN rt0.c0 END) ORDER BY SUBSTR(('898591095' IN ()), (~ (vt0.c0))) DESC;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((rt0.c1) NOTNULL) COLLATE BINARY INNER JOIN t0 ON (((vt1.c0) IS FALSE) IN ()) WHERE (UNLIKELY((vt1.c0 IN (rt0.c1, rt0.c0)))) ORDER BY LTRIM(CASE WHEN rt0.c1 THEN t0.c48 ELSE rt0.c1 END) ASC, CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((t0.c96) NOTNULL) END DESC, (((~ (-9.00267917E8))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY((vt1.c0 IN (rt0.c1, rt0.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((rt0.c1) NOTNULL) COLLATE BINARY INNER JOIN t0 ON (((vt1.c0) IS FALSE) IN ()) ORDER BY LTRIM(CASE WHEN rt0.c1 THEN t0.c48 ELSE rt0.c1 END) ASC, CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((t0.c96) NOTNULL) END DESC, (((~ (-9.00267917E8))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((rt0.c1) NOTNULL) COLLATE BINARY INNER JOIN t0 ON (((vt1.c0) IS FALSE) IN ()) WHERE (UNLIKELY((vt1.c0 IN (rt0.c1, rt0.c0)))) ORDER BY LTRIM(CASE WHEN rt0.c1 THEN t0.c48 ELSE rt0.c1 END) ASC, CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((t0.c96) NOTNULL) END DESC, (((~ (-9.00267917E8))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY((vt1.c0 IN (rt0.c1, rt0.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((rt0.c1) NOTNULL) COLLATE BINARY INNER JOIN t0 ON (((vt1.c0) IS FALSE) IN ()) ORDER BY LTRIM(CASE WHEN rt0.c1 THEN t0.c48 ELSE rt0.c1 END) ASC, CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((t0.c96) NOTNULL) END DESC, (((~ (-9.00267917E8))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((rt0.c1) NOTNULL) COLLATE BINARY INNER JOIN t0 ON (((vt1.c0) IS FALSE) IN ()) WHERE (UNLIKELY((vt1.c0 IN (rt0.c1, rt0.c0)))) ORDER BY LTRIM(CASE WHEN rt0.c1 THEN t0.c48 ELSE rt0.c1 END) ASC, CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((t0.c96) NOTNULL) END DESC, (((~ (-9.00267917E8))) NOT NULL) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c48);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(((t0.c96)GLOB(t0.c96))) WHERE (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c48))) IN (((t0.c96)/(rt0.c1)), (((0.3115860918491258))>=((t0.c96)))))) ORDER BY (((0.5731456428098048 IN ())) BETWEEN ('') AND (CAST(t0.c96 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c48))) IN (((t0.c96)/(rt0.c1)), (((0.3115860918491258))>=((t0.c96)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(((t0.c96)GLOB(t0.c96))) ORDER BY (((0.5731456428098048 IN ())) BETWEEN ('') AND (CAST(t0.c96 AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(((t0.c96)GLOB(t0.c96))) WHERE (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c48))) IN (((t0.c96)/(rt0.c1)), (((0.3115860918491258))>=((t0.c96)))))) ORDER BY (((0.5731456428098048 IN ())) BETWEEN ('') AND (CAST(t0.c96 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c48))) IN (((t0.c96)/(rt0.c1)), (((0.3115860918491258))>=((t0.c96)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(((t0.c96)GLOB(t0.c96))) ORDER BY (((0.5731456428098048 IN ())) BETWEEN ('') AND (CAST(t0.c96 AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(((t0.c96)GLOB(t0.c96))) WHERE (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c48))) IN (((t0.c96)/(rt0.c1)), (((0.3115860918491258))>=((t0.c96)))))) ORDER BY (((0.5731456428098048 IN ())) BETWEEN ('') AND (CAST(t0.c96 AS BLOB))) DESC;
SELECT * FROM vt1 CROSS JOIN vt0 ON NULL INNER JOIN rt0 ON UNLIKELY(DISTINCT (- (rt0.c2))) WHERE (((rt0.c2) BETWEEN (json_remove(vt0.c0, rt0.c2)) AND (((rt0.c0)!=(vt1.c0))))) ORDER BY ((((vt1.c0)LIKE(rt0.c1))) BETWEEN (STRFTIME(rt0.c1, rt0.c1, vt1.c0, '1', vt1.c0)) AND (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (json_remove(vt0.c0, rt0.c2)) AND (((rt0.c0)<>(vt1.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON NULL INNER JOIN rt0 ON UNLIKELY(DISTINCT (- (rt0.c2))) ORDER BY ((((vt1.c0)LIKE(rt0.c1))) BETWEEN (STRFTIME(rt0.c1, rt0.c1, vt1.c0, '1', vt1.c0)) AND (x''))  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN vt0 ON NULL INNER JOIN rt0 ON UNLIKELY(DISTINCT (- (rt0.c2))) WHERE (((rt0.c2) BETWEEN (json_remove(vt0.c0, rt0.c2)) AND (((rt0.c0)!=(vt1.c0))))) ORDER BY ((((vt1.c0)LIKE(rt0.c1))) BETWEEN (STRFTIME(rt0.c1, rt0.c1, vt1.c0, '1', vt1.c0)) AND (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (json_remove(vt0.c0, rt0.c2)) AND (((rt0.c0)<>(vt1.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON NULL INNER JOIN rt0 ON UNLIKELY(DISTINCT (- (rt0.c2))) ORDER BY ((((vt1.c0)LIKE(rt0.c1))) BETWEEN (STRFTIME(rt0.c1, rt0.c1, vt1.c0, '1', vt1.c0)) AND (x''))  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN vt0 ON NULL INNER JOIN rt0 ON UNLIKELY(DISTINCT (- (rt0.c2))) WHERE (((rt0.c2) BETWEEN (json_remove(vt0.c0, rt0.c2)) AND (((rt0.c0)!=(vt1.c0))))) ORDER BY ((((vt1.c0)LIKE(rt0.c1))) BETWEEN (STRFTIME(rt0.c1, rt0.c1, vt1.c0, '1', vt1.c0)) AND (x''))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((UNICODE(vt0.c0)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((~ (rt0.c1))))) ORDER BY CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN '' WHEN x'' THEN '' WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((UNICODE(vt0.c0)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN '' WHEN x'' THEN '' WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((UNICODE(vt0.c0)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((~ (rt0.c1))))) ORDER BY CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN '' WHEN x'' THEN '' WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((UNICODE(vt0.c0)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN '' WHEN x'' THEN '' WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((UNICODE(vt0.c0)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((~ (rt0.c1))))) ORDER BY CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN '' WHEN x'' THEN '' WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END COLLATE RTRIM DESC;
SELECT * FROM vt1, t0, rt0 WHERE (((((((t0.c48) BETWEEN (t0.c96) AND (t0.c48)))AND((((t0.c96)) BETWEEN ((vt1.c0)) AND ((rt0.c2))))))OR(CAST(rt0.c2 AS BLOB)))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c48) BETWEEN (t0.c96) AND (t0.c48)))AND((((t0.c96)) BETWEEN ((vt1.c0)) AND ((rt0.c2))))))OR(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT * FROM vt1, t0, rt0 WHERE (((((((t0.c48) BETWEEN (t0.c96) AND (t0.c48)))AND((((t0.c96)) BETWEEN ((vt1.c0)) AND ((rt0.c2))))))OR(CAST(rt0.c2 AS BLOB)))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c48) BETWEEN (t0.c96) AND (t0.c48)))AND((((t0.c96)) BETWEEN ((vt1.c0)) AND ((rt0.c2))))))OR(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT * FROM vt1, t0, rt0 WHERE (((((((t0.c48) BETWEEN (t0.c96) AND (t0.c48)))AND((((t0.c96)) BETWEEN ((vt1.c0)) AND ((rt0.c2))))))OR(CAST(rt0.c2 AS BLOB)))) ORDER BY rt0.c2  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((0.7423902892657809)*(rt0.c2)) WHERE ('354314608') ORDER BY CAST(((t0.c48)-(rt0.c1)) AS NUMERIC), NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('354314608') IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((0.7423902892657809)*(rt0.c2)) ORDER BY CAST(((t0.c48)-(rt0.c1)) AS NUMERIC), NULL  NULLS LAST);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((0.7423902892657809)*(rt0.c2)) WHERE ('354314608') ORDER BY CAST(((t0.c48)-(rt0.c1)) AS NUMERIC), NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('354314608') IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((0.7423902892657809)*(rt0.c2)) ORDER BY CAST(((t0.c48)-(rt0.c1)) AS NUMERIC), NULL  NULLS LAST);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((0.7423902892657809)*(rt0.c2)) WHERE ('354314608') ORDER BY CAST(((t0.c48)-(rt0.c1)) AS NUMERIC), NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c96 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c96 IN ()) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c96 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c96 IN ()) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c96 IN ()) IN ()));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((DATETIME(t0.c96, t0.c96, t0.c96))OR(((rt0.c2)IS NOT(rt0.c2)))))OR(CAST(t0.c48 AS NUMERIC))) FULL OUTER JOIN rt0 ON ((((vt1.c0) BETWEEN (t0.c48) AND (vt0.c0)))<=(CAST(rt0.c0 AS NUMERIC))) CROSS JOIN vt1 ON (((+ (t0.c96))) NOT BETWEEN ((('0.7736127728086598')=(t0.c96))) AND (CAST(vt0.c0 AS TEXT))) WHERE (((((((((((t0.c48)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(vt1.c0)))IS NOT(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c48)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(vt1.c0)))IS NOT(NULL))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((DATETIME(t0.c96, t0.c96, t0.c96))OR(((rt0.c2)IS NOT(rt0.c2)))))OR(CAST(t0.c48 AS NUMERIC))) FULL OUTER JOIN rt0 ON ((((vt1.c0) BETWEEN (t0.c48) AND (vt0.c0)))<=(CAST(rt0.c0 AS NUMERIC))) CROSS JOIN vt1 ON (((+ (t0.c96))) NOT BETWEEN ((('0.7736127728086598')==(t0.c96))) AND (CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((DATETIME(t0.c96, t0.c96, t0.c96))OR(((rt0.c2)IS NOT(rt0.c2)))))OR(CAST(t0.c48 AS NUMERIC))) FULL OUTER JOIN rt0 ON ((((vt1.c0) BETWEEN (t0.c48) AND (vt0.c0)))<=(CAST(rt0.c0 AS NUMERIC))) CROSS JOIN vt1 ON (((+ (t0.c96))) NOT BETWEEN ((('0.7736127728086598')=(t0.c96))) AND (CAST(vt0.c0 AS TEXT))) WHERE (((((((((((t0.c48)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(vt1.c0)))IS NOT(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c48)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(vt1.c0)))IS NOT(NULL))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((DATETIME(t0.c96, t0.c96, t0.c96))OR(((rt0.c2)IS NOT(rt0.c2)))))OR(CAST(t0.c48 AS NUMERIC))) FULL OUTER JOIN rt0 ON ((((vt1.c0) BETWEEN (t0.c48) AND (vt0.c0)))<=(CAST(rt0.c0 AS NUMERIC))) CROSS JOIN vt1 ON (((+ (t0.c96))) NOT BETWEEN ((('0.7736127728086598')==(t0.c96))) AND (CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM t0 WHERE ((('-2074237748')/(t0.c96))) ORDER BY CASE WHEN t0.c48 THEN CASE t0.c96  WHEN t0.c48 THEN t0.c48 END WHEN '' COLLATE NOCASE THEN ((((t0.c48)OR(t0.c48)))AND(t0.c48)) WHEN ((t0.c48)+(-407110560)) THEN CASE WHEN t0.c96 THEN t0.c48 END WHEN (+ (t0.c48)) THEN CAST(t0.c48 AS INTEGER) WHEN ((t0.c48) IS FALSE) THEN CAST(t0.c96 AS BLOB) ELSE t0.c48 END;
SELECT SUM(count) FROM (SELECT ALL (((('-2074237748')/(t0.c96))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c48 THEN CASE t0.c96  WHEN t0.c48 THEN t0.c48 END WHEN '' COLLATE NOCASE THEN ((((t0.c48)OR(t0.c48)))AND(t0.c48)) WHEN ((t0.c48)+(-407110560)) THEN CASE WHEN t0.c96 THEN t0.c48 END WHEN (+ (t0.c48)) THEN CAST(t0.c48 AS INTEGER) WHEN ((t0.c48) IS FALSE) THEN CAST(t0.c96 AS BLOB) ELSE t0.c48 END);
SELECT ALL COUNT(*) FROM t0 WHERE ((('-2074237748')/(t0.c96))) ORDER BY CASE WHEN t0.c48 THEN CASE t0.c96  WHEN t0.c48 THEN t0.c48 END WHEN '' COLLATE NOCASE THEN ((((t0.c48)OR(t0.c48)))AND(t0.c48)) WHEN ((t0.c48)+(-407110560)) THEN CASE WHEN t0.c96 THEN t0.c48 END WHEN (+ (t0.c48)) THEN CAST(t0.c48 AS INTEGER) WHEN ((t0.c48) IS FALSE) THEN CAST(t0.c96 AS BLOB) ELSE t0.c48 END;
SELECT SUM(count) FROM (SELECT ALL (((('-2074237748')/(t0.c96))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c48 THEN CASE t0.c96  WHEN t0.c48 THEN t0.c48 END WHEN '' COLLATE NOCASE THEN ((((t0.c48)OR(t0.c48)))AND(t0.c48)) WHEN ((t0.c48)+(-407110560)) THEN CASE WHEN t0.c96 THEN t0.c48 END WHEN (+ (t0.c48)) THEN CAST(t0.c48 AS INTEGER) WHEN ((t0.c48) IS FALSE) THEN CAST(t0.c96 AS BLOB) ELSE t0.c48 END);
SELECT ALL COUNT(*) FROM t0 WHERE ((('-2074237748')/(t0.c96))) ORDER BY CASE WHEN t0.c48 THEN CASE t0.c96  WHEN t0.c48 THEN t0.c48 END WHEN '' COLLATE NOCASE THEN ((((t0.c48)OR(t0.c48)))AND(t0.c48)) WHEN ((t0.c48)+(-407110560)) THEN CASE WHEN t0.c96 THEN t0.c48 END WHEN (+ (t0.c48)) THEN CAST(t0.c48 AS INTEGER) WHEN ((t0.c48) IS FALSE) THEN CAST(t0.c96 AS BLOB) ELSE t0.c48 END;
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((UNLIKELY(rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(rt0.c1) IN ())) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((UNLIKELY(rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(rt0.c1) IN ())) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((UNLIKELY(rt0.c1) IN ()));
SELECT ALL * FROM vt0 WHERE ((((0.8173386394529619, (vt0.c0 IN ()), vt0.c0))>((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (NOT (vt0.c0)), (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((0.8173386394529619, (vt0.c0 IN ()), vt0.c0))>((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (NOT (vt0.c0)), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((0.8173386394529619, (vt0.c0 IN ()), vt0.c0))>((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (NOT (vt0.c0)), (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((0.8173386394529619, (vt0.c0 IN ()), vt0.c0))>((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (NOT (vt0.c0)), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((0.8173386394529619, (vt0.c0 IN ()), vt0.c0))>((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (NOT (vt0.c0)), (vt0.c0 IN ())))));
SELECT * FROM vt1, rt0, vt0, t0 WHERE (0.9274564404518653) ORDER BY CASE ((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c0))  WHEN 1956264208 THEN t0.c96 ELSE CAST(vt1.c0 AS TEXT) END  NULLS LAST, (((t0.c48 IN ()))|(CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS LAST, CAST(((t0.c96) BETWEEN (t0.c48) AND (vt0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9274564404518653) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY CASE ((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c0))  WHEN 1956264208 THEN t0.c96 ELSE CAST(vt1.c0 AS TEXT) END  NULLS LAST, (((t0.c48 IN ()))|(CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS LAST, CAST(((t0.c96) BETWEEN (t0.c48) AND (vt0.c0)) AS REAL) ASC);
SELECT * FROM vt1, rt0, vt0, t0 WHERE (0.9274564404518653) ORDER BY CASE ((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c0))  WHEN 1956264208 THEN t0.c96 ELSE CAST(vt1.c0 AS TEXT) END  NULLS LAST, (((t0.c48 IN ()))|(CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS LAST, CAST(((t0.c96) BETWEEN (t0.c48) AND (vt0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9274564404518653) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY CASE ((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c0))  WHEN 1956264208 THEN t0.c96 ELSE CAST(vt1.c0 AS TEXT) END  NULLS LAST, (((t0.c48 IN ()))|(CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS LAST, CAST(((t0.c96) BETWEEN (t0.c48) AND (vt0.c0)) AS REAL) ASC);
SELECT * FROM vt1, rt0, vt0, t0 WHERE (0.9274564404518653) ORDER BY CASE ((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c0))  WHEN 1956264208 THEN t0.c96 ELSE CAST(vt1.c0 AS TEXT) END  NULLS LAST, (((t0.c48 IN ()))|(CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS LAST, CAST(((t0.c96) BETWEEN (t0.c48) AND (vt0.c0)) AS REAL) ASC;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOTNULL) AS INTEGER) WHERE (((HEX(vt0.c0))IS NOT((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((HEX(vt0.c0))IS NOT((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOTNULL) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOTNULL) AS INTEGER) WHERE (((HEX(vt0.c0))IS NOT((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((HEX(vt0.c0))IS NOT((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOTNULL) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0) NOTNULL) AS INTEGER) WHERE (((HEX(vt0.c0))IS NOT((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c48 IN ())) IS FALSE)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (x''))) BETWEEN ((t0.c48 IN ())) AND (((t0.c96) BETWEEN (t0.c48) AND (t0.c48)))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c48 IN ())) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (x''))) BETWEEN ((t0.c48 IN ())) AND (((t0.c96) BETWEEN (t0.c48) AND (t0.c48)))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c48 IN ())) IS FALSE)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (x''))) BETWEEN ((t0.c48 IN ())) AND (((t0.c96) BETWEEN (t0.c48) AND (t0.c48)))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c48 IN ())) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (x''))) BETWEEN ((t0.c48 IN ())) AND (((t0.c96) BETWEEN (t0.c48) AND (t0.c48)))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c48 IN ())) IS FALSE)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (x''))) BETWEEN ((t0.c48 IN ())) AND (((t0.c96) BETWEEN (t0.c48) AND (t0.c48)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE WHEN 'w7' THEN vt0.c0 END THEN (vt0.c0 IN ()) END) ORDER BY CAST(((1.972409537E9) IS TRUE) AS NUMERIC)  NULLS FIRST, ((((((((((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('1578460926')))))AND(((vt0.c0)<=(vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))OR('1367179315')))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1866703097' END));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN 'w7' THEN vt0.c0 END THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((1.972409537E9) IS TRUE) AS NUMERIC)  NULLS FIRST, ((((((((((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('1578460926')))))AND(((vt0.c0)<=(vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))OR('1367179315')))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1866703097' END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE WHEN 'w7' THEN vt0.c0 END THEN (vt0.c0 IN ()) END) ORDER BY CAST(((1.972409537E9) IS TRUE) AS NUMERIC)  NULLS FIRST, ((((((((((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('1578460926')))))AND(((vt0.c0)<=(vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))OR('1367179315')))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1866703097' END));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN 'w7' THEN vt0.c0 END THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((1.972409537E9) IS TRUE) AS NUMERIC)  NULLS FIRST, ((((((((((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('1578460926')))))AND(((vt0.c0)<=(vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))OR('1367179315')))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1866703097' END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE WHEN 'w7' THEN vt0.c0 END THEN (vt0.c0 IN ()) END) ORDER BY CAST(((1.972409537E9) IS TRUE) AS NUMERIC)  NULLS FIRST, ((((((((((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('1578460926')))))AND(((vt0.c0)<=(vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))OR('1367179315')))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1866703097' END));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2))>=((rt0.c1)))) ISNULL)) ORDER BY CAST((rt0.c2 IN ()) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))>=((rt0.c1)))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c2 IN ()) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2))>=((rt0.c1)))) ISNULL)) ORDER BY CAST((rt0.c2 IN ()) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))>=((rt0.c1)))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c2 IN ()) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2))>=((rt0.c1)))) ISNULL)) ORDER BY CAST((rt0.c2 IN ()) AS INTEGER)  NULLS LAST;
SELECT * FROM t0, rt0, vt1 WHERE (CAST(NULL COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(NULL COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE (CAST(NULL COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(NULL COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE (CAST(NULL COLLATE NOCASE AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((json_patch(rt0.c2, rt0.c0) IN (0.04641990882175884)));
SELECT SUM(count) FROM (SELECT ALL (((json_patch(rt0.c2, rt0.c0) IN (0.04641990882175884))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((json_patch(rt0.c2, rt0.c0) IN (0.04641990882175884)));
SELECT SUM(count) FROM (SELECT ALL (((json_patch(rt0.c2, rt0.c0) IN (0.04641990882175884))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((json_patch(rt0.c2, rt0.c0) IN (0.04641990882175884)));
SELECT COUNT(*) FROM vt0, vt1, t0 INDEXED BY i75 WHERE (((((CASE t0.c48  WHEN t0.c96 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 WHEN vt1.c0 THEN '#/9FE' WHEN vt0.c0 THEN vt0.c0 WHEN t0.c96 THEN vt1.c0 END)AND(IFNULL(t0.c96, t0.c48))))AND(((0x3459cd76)<=(vt0.c0))))) ORDER BY ((CASE t0.c96  WHEN t0.c48 THEN t0.c96 END)IS(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c48  WHEN t0.c96 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 WHEN vt1.c0 THEN '#/9FE' WHEN vt0.c0 THEN vt0.c0 WHEN t0.c96 THEN vt1.c0 END)AND(IFNULL(t0.c96, t0.c48))))AND(((0X3459cd76)<=(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 INDEXED BY i75 ORDER BY ((CASE t0.c96  WHEN t0.c48 THEN t0.c96 END)IS(vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0 INDEXED BY i75 WHERE (((((CASE t0.c48  WHEN t0.c96 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 WHEN vt1.c0 THEN '#/9FE' WHEN vt0.c0 THEN vt0.c0 WHEN t0.c96 THEN vt1.c0 END)AND(IFNULL(t0.c96, t0.c48))))AND(((0x3459cd76)<=(vt0.c0))))) ORDER BY ((CASE t0.c96  WHEN t0.c48 THEN t0.c96 END)IS(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c48  WHEN t0.c96 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 WHEN vt1.c0 THEN '#/9FE' WHEN vt0.c0 THEN vt0.c0 WHEN t0.c96 THEN vt1.c0 END)AND(IFNULL(t0.c96, t0.c48))))AND(((0X3459cd76)<=(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 INDEXED BY i75 ORDER BY ((CASE t0.c96  WHEN t0.c48 THEN t0.c96 END)IS(vt1.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS BLOB))+(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CAST(vt0.c0 AS TEXT), TRIM(DISTINCT vt1.c0 COLLATE BINARY) ASC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))+(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt0.c0 AS TEXT), TRIM(DISTINCT vt1.c0 COLLATE BINARY) ASC  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS BLOB))+(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CAST(vt0.c0 AS TEXT), TRIM(DISTINCT vt1.c0 COLLATE BINARY) ASC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))+(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt0.c0 AS TEXT), TRIM(DISTINCT vt1.c0 COLLATE BINARY) ASC  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS BLOB))+(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CAST(vt0.c0 AS TEXT), TRIM(DISTINCT vt1.c0 COLLATE BINARY) ASC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ());
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((x'671d')+(t0.c96)))<<(((1009276411) BETWEEN (NULL) AND (vt0.c0))))) ORDER BY (- (((vt1.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'671d')+(t0.c96)))<<(((1009276411) BETWEEN (NULL) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (- (((vt1.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((x'671d')+(t0.c96)))<<(((1009276411) BETWEEN (NULL) AND (vt0.c0))))) ORDER BY (- (((vt1.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'671d')+(t0.c96)))<<(((1009276411) BETWEEN (NULL) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (- (((vt1.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((x'671d')+(t0.c96)))<<(((1009276411) BETWEEN (NULL) AND (vt0.c0))))) ORDER BY (- (((vt1.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)==(vt0.c0)))))AND(((vt0.c0) NOT NULL)))) ORDER BY CAST(COALESCE(DISTINCT NULL, vt0.c0) AS BLOB) DESC, LOWER(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)==(vt0.c0)))))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(COALESCE(DISTINCT NULL, vt0.c0) AS BLOB) DESC, LOWER(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)==(vt0.c0)))))AND(((vt0.c0) NOT NULL)))) ORDER BY CAST(COALESCE(DISTINCT NULL, vt0.c0) AS BLOB) DESC, LOWER(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)==(vt0.c0)))))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(COALESCE(DISTINCT NULL, vt0.c0) AS BLOB) DESC, LOWER(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)==(vt0.c0)))))AND(((vt0.c0) NOT NULL)))) ORDER BY CAST(COALESCE(DISTINCT NULL, vt0.c0) AS BLOB) DESC, LOWER(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON rt0.c0 LEFT OUTER JOIN vt0 ON CAST(vt1.c0 AS INTEGER) RIGHT OUTER JOIN rt0 ON (((('878300534')+(rt0.c2)))>=(vt0.c0 COLLATE BINARY)) WHERE (x'') ORDER BY (vt1.c0 IN ());
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON rt0.c0 LEFT OUTER JOIN vt0 ON CAST(vt1.c0 AS INTEGER) RIGHT OUTER JOIN rt0 ON (((('878300534')+(rt0.c2)))>=(vt0.c0 COLLATE BINARY)) ORDER BY (vt1.c0 IN ()));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON rt0.c0 LEFT OUTER JOIN vt0 ON CAST(vt1.c0 AS INTEGER) RIGHT OUTER JOIN rt0 ON (((('878300534')+(rt0.c2)))>=(vt0.c0 COLLATE BINARY)) WHERE (x'') ORDER BY (vt1.c0 IN ());
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON rt0.c0 LEFT OUTER JOIN vt0 ON CAST(vt1.c0 AS INTEGER) RIGHT OUTER JOIN rt0 ON (((('878300534')+(rt0.c2)))>=(vt0.c0 COLLATE BINARY)) ORDER BY (vt1.c0 IN ()));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) ORDER BY (((rt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c0) IS FALSE), ((vt1.c0)GLOB(vt1.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (vt1.c0 IN (rt0.c0)), ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) AND (((+ (rt0.c0)), (((rt0.c2, vt1.c0, rt0.c1))<((rt0.c2, '', vt1.c0))), ((NULL) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0, (rt0.c1 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c0) IS FALSE), ((vt1.c0)GLOB(vt1.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (vt1.c0 IN (rt0.c0)), ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) AND (((+ (rt0.c0)), (((rt0.c2, vt1.c0, rt0.c1))<((rt0.c2, '', vt1.c0))), ((NULL) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0, (rt0.c1 IN ())))) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) ORDER BY (((rt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c0) IS FALSE), ((vt1.c0)GLOB(vt1.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (vt1.c0 IN (rt0.c0)), ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) AND (((+ (rt0.c0)), (((rt0.c2, vt1.c0, rt0.c1))<((rt0.c2, '', vt1.c0))), ((NULL) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0, (rt0.c1 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c0) IS FALSE), ((vt1.c0)GLOB(vt1.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (vt1.c0 IN (rt0.c0)), ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) AND (((+ (rt0.c0)), (((rt0.c2, vt1.c0, rt0.c1))<((rt0.c2, '', vt1.c0))), ((NULL) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0, (rt0.c1 IN ())))) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) ORDER BY (((rt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c0) IS FALSE), ((vt1.c0)GLOB(vt1.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), (vt1.c0 IN (rt0.c0)), ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) AND (((+ (rt0.c0)), (((rt0.c2, vt1.c0, rt0.c1))<((rt0.c2, '', vt1.c0))), ((NULL) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0, (rt0.c1 IN ())))) ASC;
SELECT ALL * FROM vt0 WHERE (CASE json_valid(vt0.c0)  WHEN ((vt0.c0)>=(vt0.c0)) THEN vt0.c0 WHEN NULL COLLATE RTRIM THEN ((vt0.c0) IS TRUE) WHEN HEX(vt0.c0) THEN CAST(vt0.c0 AS REAL) WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN 39233445 THEN ((vt0.c0) NOT NULL) ELSE vt0.c0 COLLATE RTRIM END) ORDER BY (((('-1588054394')+(vt0.c0)))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE json_valid(vt0.c0)  WHEN ((vt0.c0)>=(vt0.c0)) THEN vt0.c0 WHEN NULL COLLATE RTRIM THEN ((vt0.c0) IS TRUE) WHEN HEX(vt0.c0) THEN CAST(vt0.c0 AS REAL) WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN 39233445 THEN ((vt0.c0) NOT NULL) ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY (((('-1588054394')+(vt0.c0)))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (CASE json_valid(vt0.c0)  WHEN ((vt0.c0)>=(vt0.c0)) THEN vt0.c0 WHEN NULL COLLATE RTRIM THEN ((vt0.c0) IS TRUE) WHEN HEX(vt0.c0) THEN CAST(vt0.c0 AS REAL) WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN 39233445 THEN ((vt0.c0) NOT NULL) ELSE vt0.c0 COLLATE RTRIM END) ORDER BY (((('-1588054394')+(vt0.c0)))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE json_valid(vt0.c0)  WHEN ((vt0.c0)>=(vt0.c0)) THEN vt0.c0 WHEN NULL COLLATE RTRIM THEN ((vt0.c0) IS TRUE) WHEN HEX(vt0.c0) THEN CAST(vt0.c0 AS REAL) WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN 39233445 THEN ((vt0.c0) NOT NULL) ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY (((('-1588054394')+(vt0.c0)))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (CASE json_valid(vt0.c0)  WHEN ((vt0.c0)>=(vt0.c0)) THEN vt0.c0 WHEN NULL COLLATE RTRIM THEN ((vt0.c0) IS TRUE) WHEN HEX(vt0.c0) THEN CAST(vt0.c0 AS REAL) WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN 39233445 THEN ((vt0.c0) NOT NULL) ELSE vt0.c0 COLLATE RTRIM END) ORDER BY (((('-1588054394')+(vt0.c0)))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)IS NOT(vt1.c0)))AND(((vt1.c0)OR(vt1.c0)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)IS NOT(vt1.c0)))AND(((vt1.c0)OR(vt1.c0)))))OR(NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)IS NOT(vt1.c0)))AND(((vt1.c0)OR(vt1.c0)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)IS NOT(vt1.c0)))AND(((vt1.c0)OR(vt1.c0)))))OR(NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)IS NOT(vt1.c0)))AND(((vt1.c0)OR(vt1.c0)))))OR(NULL)));
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c48)>=(t0.c96)) AS TEXT)) ORDER BY ((((t0.c48)-(vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c48)>=(t0.c96)) AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c48)-(vt0.c0))) ISNULL));
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c48)>=(t0.c96)) AS TEXT)) ORDER BY ((((t0.c48)-(vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c48)>=(t0.c96)) AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c48)-(vt0.c0))) ISNULL));
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c48)>=(t0.c96)) AS TEXT)) ORDER BY ((((t0.c48)-(vt0.c0))) ISNULL);
SELECT ALL * FROM t0, rt0, vt0 WHERE (t0.c96) ORDER BY (+ (t0.c48 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c96) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (+ (t0.c48 COLLATE RTRIM)) ASC);
SELECT ALL * FROM t0, rt0, vt0 WHERE (t0.c96) ORDER BY (+ (t0.c48 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c96) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (+ (t0.c48 COLLATE RTRIM)) ASC);
SELECT ALL * FROM t0, rt0, vt0 WHERE (t0.c96) ORDER BY (+ (t0.c48 COLLATE RTRIM)) ASC;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((0.16055442037554501)OR('}}')))OR(((rt0.c1) IS FALSE))) CROSS JOIN rt0 ON rt0.c2 WHERE (((((((((rt0.c0)OR(rt0.c2)))AND(vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(((rt0.c1)GLOB(rt0.c2))))) ORDER BY CASE LIKELIHOOD(vt1.c0, 0.9940521773202872)  WHEN rt0.c1 THEN (vt0.c0 IN (0.7158855071292883, rt0.c0)) ELSE ((vt0.c0)IS NOT(rt0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(rt0.c2)))AND(vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(((rt0.c1)GLOB(rt0.c2))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((0.16055442037554501)OR('}}')))OR(((rt0.c1) IS FALSE))) CROSS JOIN rt0 ON rt0.c2 ORDER BY CASE LIKELIHOOD(vt1.c0, 0.9940521773202872)  WHEN rt0.c1 THEN (vt0.c0 IN (0.7158855071292883, rt0.c0)) ELSE ((vt0.c0)IS NOT(rt0.c2)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((0.16055442037554501)OR('}}')))OR(((rt0.c1) IS FALSE))) CROSS JOIN rt0 ON rt0.c2 WHERE (((((((((rt0.c0)OR(rt0.c2)))AND(vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(((rt0.c1)GLOB(rt0.c2))))) ORDER BY CASE LIKELIHOOD(vt1.c0, 0.9940521773202872)  WHEN rt0.c1 THEN (vt0.c0 IN (0.7158855071292883, rt0.c0)) ELSE ((vt0.c0)IS NOT(rt0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(rt0.c2)))AND(vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(((rt0.c1)GLOB(rt0.c2))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((0.16055442037554501)OR('}}')))OR(((rt0.c1) IS FALSE))) CROSS JOIN rt0 ON rt0.c2 ORDER BY CASE LIKELIHOOD(vt1.c0, 0.9940521773202872)  WHEN rt0.c1 THEN (vt0.c0 IN (0.7158855071292883, rt0.c0)) ELSE ((vt0.c0)IS NOT(rt0.c2)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (t0.c96 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (t0.c96 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (t0.c96 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (t0.c96 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (t0.c96 COLLATE BINARY)));
SELECT ALL * FROM t0, vt0, rt0, vt1 NOT INDEXED WHERE (((((((((((((((((((((((((vt0.c0)OR(rt0.c0)))AND(vt1.c0)))AND(0.7631510353563193)))AND(rt0.c0)))OR(t0.c96)))OR(rt0.c1)))AND((NOT (rt0.c2)))))OR(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))AND(CASE vt0.c0  WHEN t0.c96 THEN -1.543766688E9 END)))OR((((t0.c96, t0.c96, rt0.c1))>=((rt0.c0, vt1.c0, t0.c96))))))AND((((t0.c48))>=((vt0.c0))))))AND((vt1.c0 IN ())))) ORDER BY (CAST(rt0.c0 AS REAL) IN ())  NULLS LAST, ((((NULL)AND(vt1.c0)))OR(rt0.c2)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((((((vt0.c0)OR(rt0.c0)))AND(vt1.c0)))AND(0.7631510353563193)))AND(rt0.c0)))OR(t0.c96)))OR(rt0.c1)))AND((NOT (rt0.c2)))))OR(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))AND(CASE vt0.c0  WHEN t0.c96 THEN -1.543766688E9 END)))OR((((t0.c96, t0.c96, rt0.c1))>=((rt0.c0, vt1.c0, t0.c96))))))AND((((t0.c48))>=((vt0.c0))))))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (CAST(rt0.c0 AS REAL) IN ())  NULLS LAST, ((((NULL)AND(vt1.c0)))OR(rt0.c2)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0, vt1 NOT INDEXED WHERE (((((((((((((((((((((((((vt0.c0)OR(rt0.c0)))AND(vt1.c0)))AND(0.7631510353563193)))AND(rt0.c0)))OR(t0.c96)))OR(rt0.c1)))AND((NOT (rt0.c2)))))OR(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))AND(CASE vt0.c0  WHEN t0.c96 THEN -1.543766688E9 END)))OR((((t0.c96, t0.c96, rt0.c1))>=((rt0.c0, vt1.c0, t0.c96))))))AND((((t0.c48))>=((vt0.c0))))))AND((vt1.c0 IN ())))) ORDER BY (CAST(rt0.c0 AS REAL) IN ())  NULLS LAST, ((((NULL)AND(vt1.c0)))OR(rt0.c2)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((((((vt0.c0)OR(rt0.c0)))AND(vt1.c0)))AND(0.7631510353563193)))AND(rt0.c0)))OR(t0.c96)))OR(rt0.c1)))AND((NOT (rt0.c2)))))OR(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))AND(CASE vt0.c0  WHEN t0.c96 THEN -1.543766688E9 END)))OR((((t0.c96, t0.c96, rt0.c1))>=((rt0.c0, vt1.c0, t0.c96))))))AND((((t0.c48))>=((vt0.c0))))))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (CAST(rt0.c0 AS REAL) IN ())  NULLS LAST, ((((NULL)AND(vt1.c0)))OR(rt0.c2)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0, vt1 NOT INDEXED WHERE (((((((((((((((((((((((((vt0.c0)OR(rt0.c0)))AND(vt1.c0)))AND(0.7631510353563193)))AND(rt0.c0)))OR(t0.c96)))OR(rt0.c1)))AND((NOT (rt0.c2)))))OR(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))AND(CASE vt0.c0  WHEN t0.c96 THEN -1.543766688E9 END)))OR((((t0.c96, t0.c96, rt0.c1))>=((rt0.c0, vt1.c0, t0.c96))))))AND((((t0.c48))>=((vt0.c0))))))AND((vt1.c0 IN ())))) ORDER BY (CAST(rt0.c0 AS REAL) IN ())  NULLS LAST, ((((NULL)AND(vt1.c0)))OR(rt0.c2)) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (-1.543766688E9) ORDER BY (((t0.c96 IN (t0.c96, vt1.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((-1.543766688E9) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((t0.c96 IN (t0.c96, vt1.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (-1.543766688E9) ORDER BY (((t0.c96 IN (t0.c96, vt1.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((-1.543766688E9) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((t0.c96 IN (t0.c96, vt1.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (-1.543766688E9) ORDER BY (((t0.c96 IN (t0.c96, vt1.c0))) NOT NULL);
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (- (((rt0.c1) NOTNULL))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (- (((rt0.c1) NOTNULL))));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (- (((rt0.c1) NOTNULL))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (- (((rt0.c1) NOTNULL))));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (- (((rt0.c1) NOTNULL))) WHERE (x'');
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0)-(rt0.c2))) BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)-(rt0.c2))) BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0)-(rt0.c2))) BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)-(rt0.c2))) BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0)-(rt0.c2))) BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c1) ISNULL))));
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c1, t0.c96, rt0.c2)) BETWEEN ((t0.c48, t0.c96, x'')) AND ((t0.c48, rt0.c1, rt0.c0))) IN ())) ORDER BY (~ (CAST(t0.c96 AS TEXT))) DESC  NULLS LAST, CAST(((rt0.c0) IS FALSE) AS TEXT)  NULLS FIRST, (((((('')*(t0.c96)))AND((((rt0.c1))!=((rt0.c1))))))AND((- (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1, t0.c96, rt0.c2)) BETWEEN ((t0.c48, t0.c96, x'')) AND ((t0.c48, rt0.c1, rt0.c0))) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY (~ (CAST(t0.c96 AS TEXT))) DESC  NULLS LAST, CAST(((rt0.c0) IS FALSE) AS TEXT)  NULLS FIRST, (((((('')*(t0.c96)))AND((((rt0.c1))<>((rt0.c1))))))AND((- (rt0.c0)))) DESC);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c1, t0.c96, rt0.c2)) BETWEEN ((t0.c48, t0.c96, x'')) AND ((t0.c48, rt0.c1, rt0.c0))) IN ())) ORDER BY (~ (CAST(t0.c96 AS TEXT))) DESC  NULLS LAST, CAST(((rt0.c0) IS FALSE) AS TEXT)  NULLS FIRST, (((((('')*(t0.c96)))AND((((rt0.c1))!=((rt0.c1))))))AND((- (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1, t0.c96, rt0.c2)) BETWEEN ((t0.c48, t0.c96, x'')) AND ((t0.c48, rt0.c1, rt0.c0))) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY (~ (CAST(t0.c96 AS TEXT))) DESC  NULLS LAST, CAST(((rt0.c0) IS FALSE) AS TEXT)  NULLS FIRST, (((((('')*(t0.c96)))AND((((rt0.c1))<>((rt0.c1))))))AND((- (rt0.c0)))) DESC);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c1, t0.c96, rt0.c2)) BETWEEN ((t0.c48, t0.c96, x'')) AND ((t0.c48, rt0.c1, rt0.c0))) IN ())) ORDER BY (~ (CAST(t0.c96 AS TEXT))) DESC  NULLS LAST, CAST(((rt0.c0) IS FALSE) AS TEXT)  NULLS FIRST, (((((('')*(t0.c96)))AND((((rt0.c1))!=((rt0.c1))))))AND((- (rt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c1)%(rt0.c2))) AND ((((rt0.c2))!=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (((rt0.c1)%(rt0.c2))) AND ((((rt0.c2))!=((vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c1)%(rt0.c2))) AND ((((rt0.c2))!=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (((rt0.c1)%(rt0.c2))) AND ((((rt0.c2))!=((vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c1)%(rt0.c2))) AND ((((rt0.c2))!=((vt1.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) ORDER BY CAST(INSTR(rt0.c0, rt0.c1) AS INTEGER) DESC, (((((rt0.c1))<(('-1388941726'))))OR(CAST('L6kV' AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CAST(INSTR(rt0.c0, rt0.c1) AS INTEGER) DESC, (((((rt0.c1))<(('-1388941726'))))OR(CAST('L6kV' AS REAL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) ORDER BY CAST(INSTR(rt0.c0, rt0.c1) AS INTEGER) DESC, (((((rt0.c1))<(('-1388941726'))))OR(CAST('L6kV' AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CAST(INSTR(rt0.c0, rt0.c1) AS INTEGER) DESC, (((((rt0.c1))<(('-1388941726'))))OR(CAST('L6kV' AS REAL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) ORDER BY CAST(INSTR(rt0.c0, rt0.c1) AS INTEGER) DESC, (((((rt0.c1))<(('-1388941726'))))OR(CAST('L6kV' AS REAL)));
SELECT ALL * FROM vt1 WHERE (0.46074790650040554);
SELECT SUM(count) FROM (SELECT ALL ((0.46074790650040554) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.46074790650040554);
SELECT SUM(count) FROM (SELECT ALL ((0.46074790650040554) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.46074790650040554);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (t0.c96 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c96 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (t0.c96 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c96 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (t0.c96 COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c0) BETWEEN (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))) AND (CASE t0.c48  WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((CASE t0.c96  WHEN 0.5030091846715548 THEN t0.c96 END) NOT BETWEEN (rt0.c1) AND ((((t0.c96, rt0.c1, rt0.c2)) BETWEEN ((t0.c96, rt0.c0, t0.c96)) AND (('1341041880', rt0.c0, rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))) AND (CASE t0.c48  WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE t0.c96  WHEN 0.5030091846715548 THEN t0.c96 END) NOT BETWEEN (rt0.c1) AND ((((t0.c96, rt0.c1, rt0.c2)) BETWEEN ((t0.c96, rt0.c0, t0.c96)) AND (('1341041880', rt0.c0, rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c0) BETWEEN (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))) AND (CASE t0.c48  WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((CASE t0.c96  WHEN 0.5030091846715548 THEN t0.c96 END) NOT BETWEEN (rt0.c1) AND ((((t0.c96, rt0.c1, rt0.c2)) BETWEEN ((t0.c96, rt0.c0, t0.c96)) AND (('1341041880', rt0.c0, rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))) AND (CASE t0.c48  WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE t0.c96  WHEN 0.5030091846715548 THEN t0.c96 END) NOT BETWEEN (rt0.c1) AND ((((t0.c96, rt0.c1, rt0.c2)) BETWEEN ((t0.c96, rt0.c0, t0.c96)) AND (('1341041880', rt0.c0, rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c0) BETWEEN (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))) AND (CASE t0.c48  WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((CASE t0.c96  WHEN 0.5030091846715548 THEN t0.c96 END) NOT BETWEEN (rt0.c1) AND ((((t0.c96, rt0.c1, rt0.c2)) BETWEEN ((t0.c96, rt0.c0, t0.c96)) AND (('1341041880', rt0.c0, rt0.c2)))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (('' IN ())) ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (('' IN ())) ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (('' IN ())) ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS NUMERIC) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (COALESCE(CAST(vt1.c0 AS BLOB), ((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((COALESCE(CAST(vt1.c0 AS BLOB), ((vt1.c0) NOT NULL))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (COALESCE(CAST(vt1.c0 AS BLOB), ((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((COALESCE(CAST(vt1.c0 AS BLOB), ((vt1.c0) NOT NULL))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (COALESCE(CAST(vt1.c0 AS BLOB), ((vt1.c0) NOT NULL)));
SELECT * FROM t0, vt1 WHERE (((((((((((vt1.c0)|(vt1.c0)))AND((((t0.c48))>((t0.c96))))))OR(t0.c48)))AND(((vt1.c0)<<(vt1.c0)))))OR(((t0.c48) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)|(vt1.c0)))AND((((t0.c48))>((t0.c96))))))OR(t0.c48)))AND(((vt1.c0)<<(vt1.c0)))))OR(((t0.c48) NOTNULL)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((((((((((vt1.c0)|(vt1.c0)))AND((((t0.c48))>((t0.c96))))))OR(t0.c48)))AND(((vt1.c0)<<(vt1.c0)))))OR(((t0.c48) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)|(vt1.c0)))AND((((t0.c48))>((t0.c96))))))OR(t0.c48)))AND(((vt1.c0)<<(vt1.c0)))))OR(((t0.c48) NOTNULL)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((((((((((vt1.c0)|(vt1.c0)))AND((((t0.c48))>((t0.c96))))))OR(t0.c48)))AND(((vt1.c0)<<(vt1.c0)))))OR(((t0.c48) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT vt0.c0 COLLATE RTRIM));
SELECT * FROM rt0, vt0, vt1 WHERE (CAST(((vt0.c0)IS NOT(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS NOT(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE (CAST(((vt0.c0)IS NOT(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS NOT(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE (CAST(((vt0.c0)IS NOT(rt0.c1)) AS INTEGER));
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((((((((((((((((((vt0.c0)OR(rt0.c0)))OR('	N''T<IH')))OR(NULL)))AND(t0.c96)))OR(((t0.c96)&(t0.c96)))))OR((+ (t0.c96)))))AND(rt0.c1)))AND(NULL)))AND((+ (rt0.c0)))))OR((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((vt0.c0)OR(rt0.c0)))OR('	N''T<IH')))OR(NULL)))AND(t0.c96)))OR(((t0.c96)&(t0.c96)))))OR((+ (t0.c96)))))AND(rt0.c1)))AND(NULL)))AND((+ (rt0.c0)))))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((((((((((((((((((vt0.c0)OR(rt0.c0)))OR('	N''T<IH')))OR(NULL)))AND(t0.c96)))OR(((t0.c96)&(t0.c96)))))OR((+ (t0.c96)))))AND(rt0.c1)))AND(NULL)))AND((+ (rt0.c0)))))OR((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((vt0.c0)OR(rt0.c0)))OR('	N''T<IH')))OR(NULL)))AND(t0.c96)))OR(((t0.c96)&(t0.c96)))))OR((+ (t0.c96)))))AND(rt0.c1)))AND(NULL)))AND((+ (rt0.c0)))))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((((((((((((((((((vt0.c0)OR(rt0.c0)))OR('	N''T<IH')))OR(NULL)))AND(t0.c96)))OR(((t0.c96)&(t0.c96)))))OR((+ (t0.c96)))))AND(rt0.c1)))AND(NULL)))AND((+ (rt0.c0)))))OR((rt0.c0 IN ()))));
SELECT * FROM rt0, vt1, vt0 WHERE (((((JULIANDAY(rt0.c0, rt0.c2, rt0.c0))OR(vt0.c0)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY (((NOT (rt0.c0)))&(((vt1.c0) ISNULL))) DESC  NULLS LAST, ((DATETIME(vt1.c0, vt0.c0, rt0.c2))*((- (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((JULIANDAY(rt0.c0, rt0.c2, rt0.c0))OR(vt0.c0)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((NOT (rt0.c0)))&(((vt1.c0) ISNULL))) DESC  NULLS LAST, ((DATETIME(vt1.c0, vt0.c0, rt0.c2))*((- (vt0.c0))))  NULLS LAST);
SELECT * FROM rt0, vt1, vt0 WHERE (((((JULIANDAY(rt0.c0, rt0.c2, rt0.c0))OR(vt0.c0)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY (((NOT (rt0.c0)))&(((vt1.c0) ISNULL))) DESC  NULLS LAST, ((DATETIME(vt1.c0, vt0.c0, rt0.c2))*((- (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((JULIANDAY(rt0.c0, rt0.c2, rt0.c0))OR(vt0.c0)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((NOT (rt0.c0)))&(((vt1.c0) ISNULL))) DESC  NULLS LAST, ((DATETIME(vt1.c0, vt0.c0, rt0.c2))*((- (vt0.c0))))  NULLS LAST);
SELECT * FROM rt0, vt1, vt0 WHERE (((((JULIANDAY(rt0.c0, rt0.c2, rt0.c0))OR(vt0.c0)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY (((NOT (rt0.c0)))&(((vt1.c0) ISNULL))) DESC  NULLS LAST, ((DATETIME(vt1.c0, vt0.c0, rt0.c2))*((- (vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN ((vt1.c0)>>(t0.c96)) THEN ((vt0.c0)<(t0.c48)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)>>(t0.c96)) THEN ((vt0.c0)<(t0.c48)) ELSE x'' END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN ((vt1.c0)>>(t0.c96)) THEN ((vt0.c0)<(t0.c48)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)>>(t0.c96)) THEN ((vt0.c0)<(t0.c48)) ELSE x'' END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN ((vt1.c0)>>(t0.c96)) THEN ((vt0.c0)<(t0.c48)) ELSE x'' END);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((((((rt0.c0)!=(0.7831688037899691)))OR(((t0.c48)OR(-1382313133)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END))) ORDER BY CAST((NOT (t0.c96)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)<>(0.7831688037899691)))OR(((t0.c48)OR(-1382313133)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY CAST((NOT (t0.c96)) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((((((rt0.c0)!=(0.7831688037899691)))OR(((t0.c48)OR(-1382313133)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END))) ORDER BY CAST((NOT (t0.c96)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)<>(0.7831688037899691)))OR(((t0.c48)OR(-1382313133)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY CAST((NOT (t0.c96)) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((((((rt0.c0)!=(0.7831688037899691)))OR(((t0.c48)OR(-1382313133)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END))) ORDER BY CAST((NOT (t0.c96)) AS BLOB) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((rt0.c0)AND(rt0.c2))) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c2))) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((rt0.c0)AND(rt0.c2))) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c2))) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((rt0.c0)AND(rt0.c2))) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOT NULL))));
SELECT * FROM t0, rt0, vt0, vt1 WHERE ('0.7933272160778245' COLLATE RTRIM) ORDER BY ((((NULL)OR(CAST(t0.c48 AS NUMERIC))))AND((vt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.7933272160778245' COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY ((((NULL)OR(CAST(t0.c48 AS NUMERIC))))AND((vt1.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM t0, rt0, vt0, vt1 WHERE ('0.7933272160778245' COLLATE RTRIM) ORDER BY ((((NULL)OR(CAST(t0.c48 AS NUMERIC))))AND((vt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.7933272160778245' COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY ((((NULL)OR(CAST(t0.c48 AS NUMERIC))))AND((vt1.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (CASE ((rt0.c2)||(vt1.c0))  WHEN CAST(rt0.c2 AS TEXT) THEN (- (vt1.c0)) END) ORDER BY LIKELY((rt0.c2 IN (t0.c48)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)||(vt1.c0))  WHEN CAST(rt0.c2 AS TEXT) THEN (- (vt1.c0)) END) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY LIKELY((rt0.c2 IN (t0.c48)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (CASE ((rt0.c2)||(vt1.c0))  WHEN CAST(rt0.c2 AS TEXT) THEN (- (vt1.c0)) END) ORDER BY LIKELY((rt0.c2 IN (t0.c48)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)||(vt1.c0))  WHEN CAST(rt0.c2 AS TEXT) THEN (- (vt1.c0)) END) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY LIKELY((rt0.c2 IN (t0.c48)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (CASE ((rt0.c2)||(vt1.c0))  WHEN CAST(rt0.c2 AS TEXT) THEN (- (vt1.c0)) END) ORDER BY LIKELY((rt0.c2 IN (t0.c48)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((- (t0.c96)))OR(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c96)))OR(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((- (t0.c96)))OR(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c96)))OR(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((- (t0.c96)))OR(((rt0.c0) NOTNULL))));
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (CAST(CASE WHEN t0.c96 THEN t0.c96 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END AS INTEGER)) ORDER BY ((((vt1.c0 COLLATE RTRIM)OR((('-234417716') BETWEEN (rt0.c2) AND (vt1.c0)))))AND((rt0.c2 IN ()))), ((rt0.c2)+((rt0.c2 IN ()))) ASC  NULLS LAST, -1.151140072E9 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c96 THEN t0.c96 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM t0 NOT INDEXED, rt0, vt1 ORDER BY ((((vt1.c0 COLLATE RTRIM)OR((('-234417716') BETWEEN (rt0.c2) AND (vt1.c0)))))AND((rt0.c2 IN ()))), ((rt0.c2)+((rt0.c2 IN ()))) ASC  NULLS LAST, -1.151140072E9 ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (CAST(CASE WHEN t0.c96 THEN t0.c96 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END AS INTEGER)) ORDER BY ((((vt1.c0 COLLATE RTRIM)OR((('-234417716') BETWEEN (rt0.c2) AND (vt1.c0)))))AND((rt0.c2 IN ()))), ((rt0.c2)+((rt0.c2 IN ()))) ASC  NULLS LAST, -1.151140072E9 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c96 THEN t0.c96 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM t0 NOT INDEXED, rt0, vt1 ORDER BY ((((vt1.c0 COLLATE RTRIM)OR((('-234417716') BETWEEN (rt0.c2) AND (vt1.c0)))))AND((rt0.c2 IN ()))), ((rt0.c2)+((rt0.c2 IN ()))) ASC  NULLS LAST, -1.151140072E9 ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((((t0.c48)/(t0.c96))) IS FALSE)) ORDER BY (~ (RTRIM(t0.c96)))  NULLS FIRST, ((rt0.c1) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (t0.c48));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)/(t0.c96))) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (~ (RTRIM(t0.c96)))  NULLS FIRST, ((rt0.c1) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (t0.c48)));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((((t0.c48)/(t0.c96))) IS FALSE)) ORDER BY (~ (RTRIM(t0.c96)))  NULLS FIRST, ((rt0.c1) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (t0.c48));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)/(t0.c96))) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (~ (RTRIM(t0.c96)))  NULLS FIRST, ((rt0.c1) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (t0.c48)));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((((t0.c48)/(t0.c96))) IS FALSE)) ORDER BY (~ (RTRIM(t0.c96)))  NULLS FIRST, ((rt0.c1) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (t0.c48));
SELECT ALL * FROM t0 WHERE ((CAST(t0.c48 AS NUMERIC) IN ())) ORDER BY (~ (((t0.c96)*(t0.c96))));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c48 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (~ (((t0.c96)*(t0.c96)))));
SELECT ALL * FROM t0 WHERE ((CAST(t0.c48 AS NUMERIC) IN ())) ORDER BY (~ (((t0.c96)*(t0.c96))));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c48 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (~ (((t0.c96)*(t0.c96)))));
SELECT ALL * FROM t0 WHERE ((CAST(t0.c48 AS NUMERIC) IN ())) ORDER BY (~ (((t0.c96)*(t0.c96))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) IN ())) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) IN ())) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) IN ())) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CASE t0.c48  WHEN x'' THEN rt0.c2 ELSE rt0.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE t0.c48  WHEN x'' THEN rt0.c2 ELSE rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CASE t0.c48  WHEN x'' THEN rt0.c2 ELSE rt0.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE t0.c48  WHEN x'' THEN rt0.c2 ELSE rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CASE t0.c48  WHEN x'' THEN rt0.c2 ELSE rt0.c2 END COLLATE BINARY);
SELECT COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (((((t0.c48) BETWEEN (vt1.c0) AND (vt1.c0)))|(t0.c48))) ORDER BY UNICODE('-50322560') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c48) BETWEEN (vt1.c0) AND (vt1.c0)))|(t0.c48))) IS TRUE)  as count FROM vt1, t0, vt0, rt0 ORDER BY UNICODE('-50322560') DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (((((t0.c48) BETWEEN (vt1.c0) AND (vt1.c0)))|(t0.c48))) ORDER BY UNICODE('-50322560') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c48) BETWEEN (vt1.c0) AND (vt1.c0)))|(t0.c48))) IS TRUE)  as count FROM vt1, t0, vt0, rt0 ORDER BY UNICODE('-50322560') DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (((((t0.c48) BETWEEN (vt1.c0) AND (vt1.c0)))|(t0.c48))) ORDER BY UNICODE('-50322560') DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt1, vt0, t0 NOT INDEXED WHERE (CHAR(rt0.c2 COLLATE RTRIM)) ORDER BY (rt0.c1 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY (rt0.c1 IN ())  NULLS LAST);
SELECT ALL * FROM rt0, vt1, vt0, t0 NOT INDEXED WHERE (CHAR(rt0.c2 COLLATE RTRIM)) ORDER BY (rt0.c1 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY (rt0.c1 IN ())  NULLS LAST);
SELECT ALL * FROM rt0, vt1, vt0, t0 NOT INDEXED WHERE (CHAR(rt0.c2 COLLATE RTRIM)) ORDER BY (rt0.c1 IN ())  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (json_array_length(((((rt0.c1)AND(rt0.c1)))OR(x'')), CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((json_array_length(((((rt0.c1)AND(rt0.c1)))OR(x'')), CAST(vt1.c0 AS INTEGER))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (json_array_length(((((rt0.c1)AND(rt0.c1)))OR(x'')), CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((json_array_length(((((rt0.c1)AND(rt0.c1)))OR(x'')), CAST(vt1.c0 AS INTEGER))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM t0 WHERE ((((t0.c96)) BETWEEN ((((t0.c48) BETWEEN (0.4878690985786609) AND (t0.c48)))) AND ((LIKELY(DISTINCT t0.c48))))) ORDER BY (- ((((t0.c48)) NOT BETWEEN ((t0.c96)) AND ((t0.c48)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c96)) BETWEEN ((((t0.c48) BETWEEN (0.4878690985786609) AND (t0.c48)))) AND ((LIKELY(DISTINCT t0.c48))))) IS TRUE)  as count FROM t0 ORDER BY (- ((((t0.c48)) NOT BETWEEN ((t0.c96)) AND ((t0.c48)))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((t0.c96)) BETWEEN ((((t0.c48) BETWEEN (0.4878690985786609) AND (t0.c48)))) AND ((LIKELY(DISTINCT t0.c48))))) ORDER BY (- ((((t0.c48)) NOT BETWEEN ((t0.c96)) AND ((t0.c48)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c96)) BETWEEN ((((t0.c48) BETWEEN (0.4878690985786609) AND (t0.c48)))) AND ((LIKELY(DISTINCT t0.c48))))) IS TRUE)  as count FROM t0 ORDER BY (- ((((t0.c48)) NOT BETWEEN ((t0.c96)) AND ((t0.c48)))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((t0.c96)) BETWEEN ((((t0.c48) BETWEEN (0.4878690985786609) AND (t0.c48)))) AND ((LIKELY(DISTINCT t0.c48))))) ORDER BY (- ((((t0.c48)) NOT BETWEEN ((t0.c96)) AND ((t0.c48)))))  NULLS FIRST;
SELECT * FROM rt0, vt0, vt1, t0 WHERE (t0.c48) ORDER BY ((((vt0.c0))==((t0.c96))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY ((((vt0.c0))==((t0.c96))) IN ()));
SELECT * FROM rt0, vt0, vt1, t0 WHERE (t0.c48) ORDER BY ((((vt0.c0))==((t0.c96))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY ((((vt0.c0))==((t0.c96))) IN ()));
SELECT * FROM rt0, vt0, vt1, t0 WHERE (t0.c48) ORDER BY ((((vt0.c0))==((t0.c96))) IN ());
SELECT ALL * FROM rt0, t0 NOT INDEXED, vt0, vt1 WHERE ((((((((((((((rt0.c2 IN ()))AND(((vt0.c0) BETWEEN (t0.c48) AND (t0.c96)))))OR(((((NULL)OR(rt0.c2)))AND(t0.c48)))))OR(json_remove(vt0.c0, t0.c48))))AND((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c0)OR(t0.c48))))) ORDER BY (((rt0.c0) ISNULL) IN ());
SELECT SUM(count) FROM (SELECT (((((((((((((((rt0.c2 IN ()))AND(((vt0.c0) BETWEEN (t0.c48) AND (t0.c96)))))OR(((((NULL)OR(rt0.c2)))AND(t0.c48)))))OR(json_remove(vt0.c0, t0.c48))))AND((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c0)OR(t0.c48))))) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY (((rt0.c0) ISNULL) IN ()));
SELECT ALL * FROM rt0, t0 NOT INDEXED, vt0, vt1 WHERE ((((((((((((((rt0.c2 IN ()))AND(((vt0.c0) BETWEEN (t0.c48) AND (t0.c96)))))OR(((((NULL)OR(rt0.c2)))AND(t0.c48)))))OR(json_remove(vt0.c0, t0.c48))))AND((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c0)OR(t0.c48))))) ORDER BY (((rt0.c0) ISNULL) IN ());
SELECT SUM(count) FROM (SELECT (((((((((((((((rt0.c2 IN ()))AND(((vt0.c0) BETWEEN (t0.c48) AND (t0.c96)))))OR(((((NULL)OR(rt0.c2)))AND(t0.c48)))))OR(json_remove(vt0.c0, t0.c48))))AND((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c0)OR(t0.c48))))) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY (((rt0.c0) ISNULL) IN ()));
SELECT ALL * FROM rt0, t0 NOT INDEXED, vt0, vt1 WHERE ((((((((((((((rt0.c2 IN ()))AND(((vt0.c0) BETWEEN (t0.c48) AND (t0.c96)))))OR(((((NULL)OR(rt0.c2)))AND(t0.c48)))))OR(json_remove(vt0.c0, t0.c48))))AND((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c0)OR(t0.c48))))) ORDER BY (((rt0.c0) ISNULL) IN ());
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((rt0.c0 IN (rt0.c2))))<>(((+ (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN (rt0.c2))))!=(((+ (rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((rt0.c0 IN (rt0.c2))))<>(((+ (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN (rt0.c2))))!=(((+ (rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((rt0.c0 IN (rt0.c2))))<>(((+ (rt0.c1))))));
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)>=(vt0.c0))) IS TRUE)) ORDER BY ((HEX(rt0.c0)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((HEX(rt0.c0)) NOT NULL) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)>=(vt0.c0))) IS TRUE)) ORDER BY ((HEX(rt0.c0)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((HEX(rt0.c0)) NOT NULL) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)>=(vt0.c0))) IS TRUE)) ORDER BY ((HEX(rt0.c0)) NOT NULL) DESC;
SELECT * FROM t0 WHERE (((((t0.c96) BETWEEN (t0.c48) AND (t0.c48))) NOT BETWEEN (ABS(t0.c48)) AND (t0.c96 COLLATE RTRIM))) ORDER BY ((t0.c96 COLLATE BINARY)<(CAST(t0.c96 AS BLOB))), t0.c48 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE DESC, (((rtreenode(t0.c48, t0.c96)))>(((~ (t0.c48))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96) BETWEEN (t0.c48) AND (t0.c48))) NOT BETWEEN (ABS(t0.c48)) AND (t0.c96 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c96 COLLATE BINARY)<(CAST(t0.c96 AS BLOB))), t0.c48 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE DESC, (((rtreenode(t0.c48, t0.c96)))>(((~ (t0.c48))))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c96) BETWEEN (t0.c48) AND (t0.c48))) NOT BETWEEN (ABS(t0.c48)) AND (t0.c96 COLLATE RTRIM))) ORDER BY ((t0.c96 COLLATE BINARY)<(CAST(t0.c96 AS BLOB))), t0.c48 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE DESC, (((rtreenode(t0.c48, t0.c96)))>(((~ (t0.c48))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96) BETWEEN (t0.c48) AND (t0.c48))) NOT BETWEEN (ABS(t0.c48)) AND (t0.c96 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c96 COLLATE BINARY)<(CAST(t0.c96 AS BLOB))), t0.c48 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE DESC, (((rtreenode(t0.c48, t0.c96)))>(((~ (t0.c48))))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c96) BETWEEN (t0.c48) AND (t0.c48))) NOT BETWEEN (ABS(t0.c48)) AND (t0.c96 COLLATE RTRIM))) ORDER BY ((t0.c96 COLLATE BINARY)<(CAST(t0.c96 AS BLOB))), t0.c48 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE DESC, (((rtreenode(t0.c48, t0.c96)))>(((~ (t0.c48))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (x'ccd9');
SELECT SUM(count) FROM (SELECT ((x'ccd9') IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (x'ccd9');
SELECT SUM(count) FROM (SELECT ((x'ccd9') IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (x'ccd9');
SELECT * FROM rt0, t0, vt1, vt0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT * FROM rt0, t0, vt1, vt0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT * FROM rt0, t0, vt1, vt0 WHERE (t0.c48);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (CASE WHEN 0.49778531291775197 THEN rt0.c2 WHEN t0.c96 THEN t0.c96 WHEN '-736611482' THEN rt0.c2 ELSE t0.c96 END IN ()) INNER JOIN rt0 ON CAST(((t0.c96) NOT BETWEEN (rt0.c1) AND (x'a7cf')) AS NUMERIC) WHERE (CAST(json_object(rt0.c1, t0.c96, t0.c96, vt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(json_object(rt0.c1, t0.c96, t0.c96, vt0.c0) AS INTEGER)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (CASE WHEN 0.49778531291775197 THEN rt0.c2 WHEN t0.c96 THEN t0.c96 WHEN '-736611482' THEN rt0.c2 ELSE t0.c96 END IN ()) INNER JOIN rt0 ON CAST(((t0.c96) NOT BETWEEN (rt0.c1) AND (x'a7cf')) AS NUMERIC));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (CASE WHEN 0.49778531291775197 THEN rt0.c2 WHEN t0.c96 THEN t0.c96 WHEN '-736611482' THEN rt0.c2 ELSE t0.c96 END IN ()) INNER JOIN rt0 ON CAST(((t0.c96) NOT BETWEEN (rt0.c1) AND (x'a7cf')) AS NUMERIC) WHERE (CAST(json_object(rt0.c1, t0.c96, t0.c96, vt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(json_object(rt0.c1, t0.c96, t0.c96, vt0.c0) AS INTEGER)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (CASE WHEN 0.49778531291775197 THEN rt0.c2 WHEN t0.c96 THEN t0.c96 WHEN '-736611482' THEN rt0.c2 ELSE t0.c96 END IN ()) INNER JOIN rt0 ON CAST(((t0.c96) NOT BETWEEN (rt0.c1) AND (x'a7cf')) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((rt0.c0)||(t0.c48))) ISNULL) INNER JOIN rt0 ON (UPPER(DISTINCT t0.c96) IN ()) WHERE (('0.5030091846715548' IN (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((('0.5030091846715548' IN (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((rt0.c0)||(t0.c48))) ISNULL) INNER JOIN rt0 ON (UPPER(DISTINCT t0.c96) IN ()));
SELECT ALL COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((rt0.c0)||(t0.c48))) ISNULL) INNER JOIN rt0 ON (UPPER(DISTINCT t0.c96) IN ()) WHERE (('0.5030091846715548' IN (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((('0.5030091846715548' IN (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((rt0.c0)||(t0.c48))) ISNULL) INNER JOIN rt0 ON (UPPER(DISTINCT t0.c96) IN ()));
SELECT ALL COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((rt0.c0)||(t0.c48))) ISNULL) INNER JOIN rt0 ON (UPPER(DISTINCT t0.c96) IN ()) WHERE (('0.5030091846715548' IN (vt1.c0 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN NULLIF(rt0.c1, rt0.c2) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c0)IS NOT(rt0.c2)) THEN INSTR(rt0.c0, 'OmJcUL%[/') WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN (-2074237748 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN NULLIF(rt0.c1, rt0.c2) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c0)IS NOT(rt0.c2)) THEN INSTR(rt0.c0, 'OmJcUL%[/') WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN (-2074237748 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN NULLIF(rt0.c1, rt0.c2) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c0)IS NOT(rt0.c2)) THEN INSTR(rt0.c0, 'OmJcUL%[/') WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN (-2074237748 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN NULLIF(rt0.c1, rt0.c2) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c0)IS NOT(rt0.c2)) THEN INSTR(rt0.c0, 'OmJcUL%[/') WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN (-2074237748 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN NULLIF(rt0.c1, rt0.c2) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c0)IS NOT(rt0.c2)) THEN INSTR(rt0.c0, 'OmJcUL%[/') WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN (-2074237748 IN ()) END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((LOWER(DISTINCT x'ddaf'))>(vt1.c0))) ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT x'ddaf'))>(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((LOWER(DISTINCT x'ddaf'))>(vt1.c0))) ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT x'ddaf'))>(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((LOWER(DISTINCT x'ddaf'))>(vt1.c0))) ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END END  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE ('1210868263');
SELECT SUM(count) FROM (SELECT ALL (('1210868263') IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE ('1210868263');
SELECT SUM(count) FROM (SELECT ALL (('1210868263') IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE ('1210868263');
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((~ (vt1.c0))) ORDER BY (((((t0.c48, vt1.c0, vt1.c0, t0.c48, t0.c48))!=((t0.c48, t0.c48, x'bff0', vt0.c0, vt1.c0))))<<(SQLITE_VERSION())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((t0.c48, vt1.c0, vt1.c0, t0.c48, t0.c48))<>((t0.c48, t0.c48, x'bff0', vt0.c0, vt1.c0))))<<(SQLITE_VERSION())) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((~ (vt1.c0))) ORDER BY (((((t0.c48, vt1.c0, vt1.c0, t0.c48, t0.c48))!=((t0.c48, t0.c48, x'bff0', vt0.c0, vt1.c0))))<<(SQLITE_VERSION())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((t0.c48, vt1.c0, vt1.c0, t0.c48, t0.c48))<>((t0.c48, t0.c48, x'bff0', vt0.c0, vt1.c0))))<<(SQLITE_VERSION())) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((~ (vt1.c0))) ORDER BY (((((t0.c48, vt1.c0, vt1.c0, t0.c48, t0.c48))!=((t0.c48, t0.c48, x'bff0', vt0.c0, vt1.c0))))<<(SQLITE_VERSION())) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((t0.c48)||(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48)||(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((t0.c48)||(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48)||(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((t0.c48)||(vt0.c0)) IN ()));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((~ (rt0.c0)))OR((NOT (x'')))) WHERE ((('1733937029')IS(((t0.c96) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (rt0.c2 IN ()) ASC  NULLS LAST, ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('1733937029')IS(((t0.c96) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((~ (rt0.c0)))OR((NOT (x'')))) ORDER BY (rt0.c2 IN ()) ASC  NULLS LAST, ''  NULLS LAST);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((~ (rt0.c0)))OR((NOT (x'')))) WHERE ((('1733937029')IS(((t0.c96) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (rt0.c2 IN ()) ASC  NULLS LAST, ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('1733937029')IS(((t0.c96) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((~ (rt0.c0)))OR((NOT (x'')))) ORDER BY (rt0.c2 IN ()) ASC  NULLS LAST, ''  NULLS LAST);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((~ (rt0.c0)))OR((NOT (x'')))) WHERE ((('1733937029')IS(((t0.c96) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (rt0.c2 IN ()) ASC  NULLS LAST, ''  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (((+ (rt0.c2)) IN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c96))), (((rt0.c1))==((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c2)) IN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c96))), (((rt0.c1))=((rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (((+ (rt0.c2)) IN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c96))), (((rt0.c1))==((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c2)) IN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c96))), (((rt0.c1))=((rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (((+ (rt0.c2)) IN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c96))), (((rt0.c1))==((rt0.c2))))));
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((rt0.c0) IS TRUE)) IS FALSE)) ORDER BY ((((0.2235539916698147)>(t0.c48))) NOT BETWEEN (x'') AND (rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((0.2235539916698147)>(t0.c48))) NOT BETWEEN (x'') AND (rt0.c2 COLLATE BINARY)));
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((rt0.c0) IS TRUE)) IS FALSE)) ORDER BY ((((0.2235539916698147)>(t0.c48))) NOT BETWEEN (x'') AND (rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((0.2235539916698147)>(t0.c48))) NOT BETWEEN (x'') AND (rt0.c2 COLLATE BINARY)));
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((rt0.c0) IS TRUE)) IS FALSE)) ORDER BY ((((0.2235539916698147)>(t0.c48))) NOT BETWEEN (x'') AND (rt0.c2 COLLATE BINARY));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (load_extension(rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (load_extension(rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE CHANGES()  WHEN ((vt1.c0)AND(vt1.c0)) THEN (('-H')!=(vt0.c0)) END WHERE (CAST(((vt1.c0)<(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)<(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE CHANGES()  WHEN ((vt1.c0)AND(vt1.c0)) THEN (('-H')<>(vt0.c0)) END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE CHANGES()  WHEN ((vt1.c0)AND(vt1.c0)) THEN (('-H')!=(vt0.c0)) END WHERE (CAST(((vt1.c0)<(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)<(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE CHANGES()  WHEN ((vt1.c0)AND(vt1.c0)) THEN (('-H')<>(vt0.c0)) END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE CHANGES()  WHEN ((vt1.c0)AND(vt1.c0)) THEN (('-H')!=(vt0.c0)) END WHERE (CAST(((vt1.c0)<(vt0.c0)) AS REAL));
SELECT COUNT(*) FROM t0, vt1 WHERE (((((((((x'')OR(t0.c48)))OR(t0.c96)))OR(((((t0.c48)AND(t0.c48)))OR(t0.c96)))))OR((('#/9FE') IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR(t0.c48)))OR(t0.c96)))OR(((((t0.c48)AND(t0.c48)))OR(t0.c96)))))OR((('#/9FE') IS FALSE)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((((((x'')OR(t0.c48)))OR(t0.c96)))OR(((((t0.c48)AND(t0.c48)))OR(t0.c96)))))OR((('#/9FE') IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR(t0.c48)))OR(t0.c96)))OR(((((t0.c48)AND(t0.c48)))OR(t0.c96)))))OR((('#/9FE') IS FALSE)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((((((x'')OR(t0.c48)))OR(t0.c96)))OR(((((t0.c48)AND(t0.c48)))OR(t0.c96)))))OR((('#/9FE') IS FALSE))));
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((t0.c48 COLLATE RTRIM IN ())) ORDER BY ((vt0.c0) NOT NULL) COLLATE RTRIM ASC  NULLS LAST, t0.c48  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c48 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY ((vt0.c0) NOT NULL) COLLATE RTRIM ASC  NULLS LAST, t0.c48  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((t0.c48 COLLATE RTRIM IN ())) ORDER BY ((vt0.c0) NOT NULL) COLLATE RTRIM ASC  NULLS LAST, t0.c48  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c48 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY ((vt0.c0) NOT NULL) COLLATE RTRIM ASC  NULLS LAST, t0.c48  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((t0.c48 COLLATE RTRIM IN ())) ORDER BY ((vt0.c0) NOT NULL) COLLATE RTRIM ASC  NULLS LAST, t0.c48  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END)) AND ((vt1.c0)))) ORDER BY ((((t0.c48, rt0.c1, rt0.c2))>((t0.c96, t0.c96, t0.c96))) IN (((rt0.c0)<<(rt0.c0)), t0.c48 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END)) AND ((vt1.c0)))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY ((((t0.c48, rt0.c1, rt0.c2))>((t0.c96, t0.c96, t0.c96))) IN (((rt0.c0)<<(rt0.c0)), t0.c48 COLLATE RTRIM)));
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END)) AND ((vt1.c0)))) ORDER BY ((((t0.c48, rt0.c1, rt0.c2))>((t0.c96, t0.c96, t0.c96))) IN (((rt0.c0)<<(rt0.c0)), t0.c48 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END)) AND ((vt1.c0)))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY ((((t0.c48, rt0.c1, rt0.c2))>((t0.c96, t0.c96, t0.c96))) IN (((rt0.c0)<<(rt0.c0)), t0.c48 COLLATE RTRIM)));
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END)) AND ((vt1.c0)))) ORDER BY ((((t0.c48, rt0.c1, rt0.c2))>((t0.c96, t0.c96, t0.c96))) IN (((rt0.c0)<<(rt0.c0)), t0.c48 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (t0.c96);
SELECT SUM(count) FROM (SELECT ((t0.c96) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (t0.c96);
SELECT SUM(count) FROM (SELECT ((t0.c96) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (t0.c96);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((t0.c48) BETWEEN (t0.c96) AND (rt0.c1)), ((((rt0.c1)OR(vt1.c0)))AND(t0.c48)), ((rt0.c2) ISNULL))) AND (((- (rt0.c2)), CAST(t0.c96 AS BLOB), t0.c96 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((t0.c48) BETWEEN (t0.c96) AND (rt0.c1)), ((((rt0.c1)OR(vt1.c0)))AND(t0.c48)), ((rt0.c2) ISNULL))) AND (((- (rt0.c2)), CAST(t0.c96 AS BLOB), t0.c96 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((t0.c48) BETWEEN (t0.c96) AND (rt0.c1)), ((((rt0.c1)OR(vt1.c0)))AND(t0.c48)), ((rt0.c2) ISNULL))) AND (((- (rt0.c2)), CAST(t0.c96 AS BLOB), t0.c96 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((t0.c48) BETWEEN (t0.c96) AND (rt0.c1)), ((((rt0.c1)OR(vt1.c0)))AND(t0.c48)), ((rt0.c2) ISNULL))) AND (((- (rt0.c2)), CAST(t0.c96 AS BLOB), t0.c96 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((t0.c48) BETWEEN (t0.c96) AND (rt0.c1)), ((((rt0.c1)OR(vt1.c0)))AND(t0.c48)), ((rt0.c2) ISNULL))) AND (((- (rt0.c2)), CAST(t0.c96 AS BLOB), t0.c96 COLLATE NOCASE))));
SELECT ALL * FROM rt0, vt0 INDEXED BY i0 WHERE (LOWER(DISTINCT CAST(vt0.c0 AS NUMERIC))) ORDER BY ((rt0.c2)==(rt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0, vt0 INDEXED BY i0 ORDER BY ((rt0.c2)=(rt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 INDEXED BY i0 WHERE (LOWER(DISTINCT CAST(vt0.c0 AS NUMERIC))) ORDER BY ((rt0.c2)==(rt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0, vt0 INDEXED BY i0 ORDER BY ((rt0.c2)=(rt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'5a72') IS TRUE)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'5a72') IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'5a72') IS TRUE)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'5a72') IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'5a72') IS TRUE)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((((((vt0.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c2, rt0.c1, t0.c48)) AND ((t0.c96, vt0.c0, vt1.c0))))GLOB(((t0.c48) IS FALSE)))) ORDER BY ((LOWER(rt0.c1)) NOT BETWEEN (((rt0.c2) BETWEEN (vt1.c0) AND (t0.c48))) AND (0.6706621984593097)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c2, rt0.c1, t0.c48)) AND ((t0.c96, vt0.c0, vt1.c0))))GLOB(((t0.c48) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ((LOWER(rt0.c1)) NOT BETWEEN (((rt0.c2) BETWEEN (vt1.c0) AND (t0.c48))) AND (0.6706621984593097)) DESC  NULLS LAST);
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((((((vt0.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c2, rt0.c1, t0.c48)) AND ((t0.c96, vt0.c0, vt1.c0))))GLOB(((t0.c48) IS FALSE)))) ORDER BY ((LOWER(rt0.c1)) NOT BETWEEN (((rt0.c2) BETWEEN (vt1.c0) AND (t0.c48))) AND (0.6706621984593097)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c2, rt0.c1, t0.c48)) AND ((t0.c96, vt0.c0, vt1.c0))))GLOB(((t0.c48) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ((LOWER(rt0.c1)) NOT BETWEEN (((rt0.c2) BETWEEN (vt1.c0) AND (t0.c48))) AND (0.6706621984593097)) DESC  NULLS LAST);
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((((((vt0.c0, rt0.c2, vt0.c0)) BETWEEN ((rt0.c2, rt0.c1, t0.c48)) AND ((t0.c96, vt0.c0, vt1.c0))))GLOB(((t0.c48) IS FALSE)))) ORDER BY ((LOWER(rt0.c1)) NOT BETWEEN (((rt0.c2) BETWEEN (vt1.c0) AND (t0.c48))) AND (0.6706621984593097)) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (t0.c48 COLLATE BINARY))) ORDER BY ((((vt0.c0))>=((t0.c48))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c48 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0))>=((t0.c48))) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (t0.c48 COLLATE BINARY))) ORDER BY ((((vt0.c0))>=((t0.c48))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c48 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0))>=((t0.c48))) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (t0.c48 COLLATE BINARY))) ORDER BY ((((vt0.c0))>=((t0.c48))) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((('\m') NOTNULL))) AND (((vt1.c0 IN ()))))) ORDER BY ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((('\m') NOTNULL))) AND (((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((('\m') NOTNULL))) AND (((vt1.c0 IN ()))))) ORDER BY ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((('\m') NOTNULL))) AND (((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((('\m') NOTNULL))) AND (((vt1.c0 IN ()))))) ORDER BY ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON 'd	%' CROSS JOIN rt0 ON ((vt1.c0)>(((t0.c96)LIKE(751016405)))) FULL OUTER JOIN t0 ON (+ ((- (rt0.c1)))) WHERE (CASE WHEN t0.c96 COLLATE RTRIM THEN (rt0.c0 IN ()) ELSE (vt1.c0 IN ()) END) ORDER BY CAST((((rt0.c2))<((t0.c96))) AS NUMERIC) ASC  NULLS FIRST, vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c96 COLLATE RTRIM THEN (rt0.c0 IN ()) ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON 'd	%' CROSS JOIN rt0 ON ((vt1.c0)>(((t0.c96)LIKE(751016405)))) FULL OUTER JOIN t0 ON (+ ((- (rt0.c1)))) ORDER BY CAST((((rt0.c2))<((t0.c96))) AS NUMERIC) ASC  NULLS FIRST, vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON 'd	%' CROSS JOIN rt0 ON ((vt1.c0)>(((t0.c96)LIKE(751016405)))) FULL OUTER JOIN t0 ON (+ ((- (rt0.c1)))) WHERE (CASE WHEN t0.c96 COLLATE RTRIM THEN (rt0.c0 IN ()) ELSE (vt1.c0 IN ()) END) ORDER BY CAST((((rt0.c2))<((t0.c96))) AS NUMERIC) ASC  NULLS FIRST, vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c96 COLLATE RTRIM THEN (rt0.c0 IN ()) ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON 'd	%' CROSS JOIN rt0 ON ((vt1.c0)>(((t0.c96)LIKE(751016405)))) FULL OUTER JOIN t0 ON (+ ((- (rt0.c1)))) ORDER BY CAST((((rt0.c2))<((t0.c96))) AS NUMERIC) ASC  NULLS FIRST, vt1.c0 DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((0.2718586836116301))<=((vt0.c0))))>>(vt0.c0))) ORDER BY ((GLOB(rt0.c2, vt0.c0))|(((rt0.c2) IS FALSE))) DESC  NULLS FIRST, 9223372036854775807  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((0.2718586836116301))<=((vt0.c0))))>>(vt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((GLOB(rt0.c2, vt0.c0))|(((rt0.c2) IS FALSE))) DESC  NULLS FIRST, 9223372036854775807  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((0.2718586836116301))<=((vt0.c0))))>>(vt0.c0))) ORDER BY ((GLOB(rt0.c2, vt0.c0))|(((rt0.c2) IS FALSE))) DESC  NULLS FIRST, 9223372036854775807  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((0.2718586836116301))<=((vt0.c0))))>>(vt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((GLOB(rt0.c2, vt0.c0))|(((rt0.c2) IS FALSE))) DESC  NULLS FIRST, 9223372036854775807  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((0.2718586836116301))<=((vt0.c0))))>>(vt0.c0))) ORDER BY ((GLOB(rt0.c2, vt0.c0))|(((rt0.c2) IS FALSE))) DESC  NULLS FIRST, 9223372036854775807  NULLS LAST;
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE ((((vt0.c0)<=(t0.c96)) IN ())) ORDER BY (((1.7976931348623157E308 IN (vt0.c0, t0.c96))) BETWEEN (((vt0.c0) NOT NULL)) AND (((rt0.c0)IS(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(t0.c96)) IN ())) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY (((1.7976931348623157E308 IN (vt0.c0, t0.c96))) BETWEEN (((vt0.c0) NOT NULL)) AND (((rt0.c0)IS(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE ((((vt0.c0)<=(t0.c96)) IN ())) ORDER BY (((1.7976931348623157E308 IN (vt0.c0, t0.c96))) BETWEEN (((vt0.c0) NOT NULL)) AND (((rt0.c0)IS(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(t0.c96)) IN ())) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY (((1.7976931348623157E308 IN (vt0.c0, t0.c96))) BETWEEN (((vt0.c0) NOT NULL)) AND (((rt0.c0)IS(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE ((((vt0.c0)<=(t0.c96)) IN ())) ORDER BY (((1.7976931348623157E308 IN (vt0.c0, t0.c96))) BETWEEN (((vt0.c0) NOT NULL)) AND (((rt0.c0)IS(vt0.c0))))  NULLS LAST;
SELECT * FROM t0, vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('-478019294', (~ (t0.c96)), (rt0.c0 IN ()))) AND ((rt0.c0, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)), (- ('[-a}h\仵'))))) WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) ORDER BY ((CAST(rt0.c2 AS TEXT)) IS TRUE)  NULLS LAST, (NOT (((vt1.c0)<<(t0.c48)))) DESC, (CAST(t0.c96 AS INTEGER) IN (((rt0.c1) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('-478019294', (~ (t0.c96)), (rt0.c0 IN ()))) AND ((rt0.c0, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)), (- ('[-a}h\仵'))))) ORDER BY ((CAST(rt0.c2 AS TEXT)) IS TRUE)  NULLS LAST, (NOT (((vt1.c0)<<(t0.c48)))) DESC, (CAST(t0.c96 AS INTEGER) IN (((rt0.c1) NOTNULL))) DESC  NULLS FIRST);
SELECT * FROM t0, vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('-478019294', (~ (t0.c96)), (rt0.c0 IN ()))) AND ((rt0.c0, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)), (- ('[-a}h\仵'))))) WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) ORDER BY ((CAST(rt0.c2 AS TEXT)) IS TRUE)  NULLS LAST, (NOT (((vt1.c0)<<(t0.c48)))) DESC, (CAST(t0.c96 AS INTEGER) IN (((rt0.c1) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('-478019294', (~ (t0.c96)), (rt0.c0 IN ()))) AND ((rt0.c0, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)), (- ('[-a}h\仵'))))) ORDER BY ((CAST(rt0.c2 AS TEXT)) IS TRUE)  NULLS LAST, (NOT (((vt1.c0)<<(t0.c48)))) DESC, (CAST(t0.c96 AS INTEGER) IN (((rt0.c1) NOTNULL))) DESC  NULLS FIRST);
SELECT * FROM t0, vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('-478019294', (~ (t0.c96)), (rt0.c0 IN ()))) AND ((rt0.c0, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)), (- ('[-a}h\仵'))))) WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) ORDER BY ((CAST(rt0.c2 AS TEXT)) IS TRUE)  NULLS LAST, (NOT (((vt1.c0)<<(t0.c48)))) DESC, (CAST(t0.c96 AS INTEGER) IN (((rt0.c1) NOTNULL))) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (DATETIME(((((vt0.c0)AND(vt1.c0)))OR(NULL)), ((vt0.c0)/(vt0.c0)), CAST(vt1.c0 AS NUMERIC))) ORDER BY TYPEOF(DISTINCT ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATETIME(((((vt0.c0)AND(vt1.c0)))OR(NULL)), ((vt0.c0)/(vt0.c0)), CAST(vt1.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TYPEOF(DISTINCT ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (DATETIME(((((vt0.c0)AND(vt1.c0)))OR(NULL)), ((vt0.c0)/(vt0.c0)), CAST(vt1.c0 AS NUMERIC))) ORDER BY TYPEOF(DISTINCT ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATETIME(((((vt0.c0)AND(vt1.c0)))OR(NULL)), ((vt0.c0)/(vt0.c0)), CAST(vt1.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TYPEOF(DISTINCT ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (DATETIME(((((vt0.c0)AND(vt1.c0)))OR(NULL)), ((vt0.c0)/(vt0.c0)), CAST(vt1.c0 AS NUMERIC))) ORDER BY TYPEOF(DISTINCT ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((((rt0.c1))<>((rt0.c1))), CAST(rt0.c0 AS BLOB), ((-1404077560)*(NULL))))>=((((rt0.c2)!=(vt1.c0)), (((NULL)) BETWEEN (('101535845')) AND ((-1509063673))), CASE WHEN rt0.c2 THEN x'17ab' WHEN t0.c48 THEN x'ce6f9f24' WHEN vt1.c0 THEN rt0.c0 END)))) ORDER BY (CAST(rt0.c0 AS REAL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1))<>((rt0.c1))), CAST(rt0.c0 AS BLOB), ((-1404077560)*(NULL))))>=((((rt0.c2)<>(vt1.c0)), (((NULL)) BETWEEN (('101535845')) AND ((-1509063673))), CASE WHEN rt0.c2 THEN x'17ab' WHEN t0.c48 THEN x'ce6f9f24' WHEN vt1.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY (CAST(rt0.c0 AS REAL) IN ())  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((((rt0.c1))<>((rt0.c1))), CAST(rt0.c0 AS BLOB), ((-1404077560)*(NULL))))>=((((rt0.c2)!=(vt1.c0)), (((NULL)) BETWEEN (('101535845')) AND ((-1509063673))), CASE WHEN rt0.c2 THEN x'17ab' WHEN t0.c48 THEN x'ce6f9f24' WHEN vt1.c0 THEN rt0.c0 END)))) ORDER BY (CAST(rt0.c0 AS REAL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1))<>((rt0.c1))), CAST(rt0.c0 AS BLOB), ((-1404077560)*(NULL))))>=((((rt0.c2)<>(vt1.c0)), (((NULL)) BETWEEN (('101535845')) AND ((-1509063673))), CASE WHEN rt0.c2 THEN x'17ab' WHEN t0.c48 THEN x'ce6f9f24' WHEN vt1.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY (CAST(rt0.c0 AS REAL) IN ())  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((((rt0.c1))<>((rt0.c1))), CAST(rt0.c0 AS BLOB), ((-1404077560)*(NULL))))>=((((rt0.c2)!=(vt1.c0)), (((NULL)) BETWEEN (('101535845')) AND ((-1509063673))), CASE WHEN rt0.c2 THEN x'17ab' WHEN t0.c48 THEN x'ce6f9f24' WHEN vt1.c0 THEN rt0.c0 END)))) ORDER BY (CAST(rt0.c0 AS REAL) IN ())  NULLS LAST;
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE (((((vt1.c0)IS(t0.c96)))<((t0.c48 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS(t0.c96)))<((t0.c48 IN ())))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE (((((vt1.c0)IS(t0.c96)))<((t0.c48 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS(t0.c96)))<((t0.c48 IN ())))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE (((((vt1.c0)IS(t0.c96)))<((t0.c48 IN ()))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON (((NOT (t0.c48))) NOTNULL) RIGHT OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN vt1.c0 THEN '' WHEN rt0.c2 THEN vt0.c0 WHEN t0.c96 THEN vt0.c0 WHEN rt0.c1 THEN 1.009276411E9 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c48 END) IS FALSE) FULL OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((t0.c96 COLLATE NOCASE)) AND ((TIME('1013760891425502610', vt0.c0, vt0.c0)))) WHERE (((UNLIKELY(x'2a83'))IS(((((t0.c96)OR(rt0.c2)))OR(t0.c48))))) ORDER BY CAST(((vt1.c0)GLOB(rt0.c2)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(x'2a83'))IS(((((t0.c96)OR(rt0.c2)))OR(t0.c48))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (((NOT (t0.c48))) NOTNULL) RIGHT OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN vt1.c0 THEN '' WHEN rt0.c2 THEN vt0.c0 WHEN t0.c96 THEN vt0.c0 WHEN rt0.c1 THEN 1.009276411E9 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c48 END) IS FALSE) FULL OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((t0.c96 COLLATE NOCASE)) AND ((TIME('1013760891425502610', vt0.c0, vt0.c0)))) ORDER BY CAST(((vt1.c0)GLOB(rt0.c2)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON (((NOT (t0.c48))) NOTNULL) RIGHT OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN vt1.c0 THEN '' WHEN rt0.c2 THEN vt0.c0 WHEN t0.c96 THEN vt0.c0 WHEN rt0.c1 THEN 1.009276411E9 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c48 END) IS FALSE) FULL OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((t0.c96 COLLATE NOCASE)) AND ((TIME('1013760891425502610', vt0.c0, vt0.c0)))) WHERE (((UNLIKELY(x'2a83'))IS(((((t0.c96)OR(rt0.c2)))OR(t0.c48))))) ORDER BY CAST(((vt1.c0)GLOB(rt0.c2)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(x'2a83'))IS(((((t0.c96)OR(rt0.c2)))OR(t0.c48))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (((NOT (t0.c48))) NOTNULL) RIGHT OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN vt1.c0 THEN '' WHEN rt0.c2 THEN vt0.c0 WHEN t0.c96 THEN vt0.c0 WHEN rt0.c1 THEN 1.009276411E9 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c48 END) IS FALSE) FULL OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((t0.c96 COLLATE NOCASE)) AND ((TIME('1013760891425502610', vt0.c0, vt0.c0)))) ORDER BY CAST(((vt1.c0)GLOB(rt0.c2)) AS REAL) ASC);
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (CHANGES());
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((((t0.c96)||(vt1.c0)) IN ())) ORDER BY ((t0.c96)=(CAST(rt0.c1 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c96)||(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((t0.c96)==(CAST(rt0.c1 AS REAL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((((t0.c96)||(vt1.c0)) IN ())) ORDER BY ((t0.c96)=(CAST(rt0.c1 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c96)||(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((t0.c96)==(CAST(rt0.c1 AS REAL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((((t0.c96)||(vt1.c0)) IN ())) ORDER BY ((t0.c96)=(CAST(rt0.c1 AS REAL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED, vt1, t0 WHERE (((json_type(0.8831378141379769))||(((vt0.c0) BETWEEN (t0.c96) AND (t0.c96))))) ORDER BY CASE CAST(t0.c96 AS BLOB)  WHEN ((rt0.c2)|(t0.c48)) THEN 0X72eeaca6 WHEN ((vt1.c0) IS TRUE) THEN (0.026281194337237856 IN ()) WHEN ((rt0.c0) ISNULL) THEN TOTAL_CHANGES() ELSE vt1.c0 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_type(0.8831378141379769))||(((vt0.c0) BETWEEN (t0.c96) AND (t0.c96))))) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY CASE CAST(t0.c96 AS BLOB)  WHEN ((rt0.c2)|(t0.c48)) THEN 0X72eeaca6 WHEN ((vt1.c0) IS TRUE) THEN (0.026281194337237856 IN ()) WHEN ((rt0.c0) ISNULL) THEN TOTAL_CHANGES() ELSE vt1.c0 END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED, vt1, t0 WHERE (((json_type(0.8831378141379769))||(((vt0.c0) BETWEEN (t0.c96) AND (t0.c96))))) ORDER BY CASE CAST(t0.c96 AS BLOB)  WHEN ((rt0.c2)|(t0.c48)) THEN 0X72eeaca6 WHEN ((vt1.c0) IS TRUE) THEN (0.026281194337237856 IN ()) WHEN ((rt0.c0) ISNULL) THEN TOTAL_CHANGES() ELSE vt1.c0 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_type(0.8831378141379769))||(((vt0.c0) BETWEEN (t0.c96) AND (t0.c96))))) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY CASE CAST(t0.c96 AS BLOB)  WHEN ((rt0.c2)|(t0.c48)) THEN 0X72eeaca6 WHEN ((vt1.c0) IS TRUE) THEN (0.026281194337237856 IN ()) WHEN ((rt0.c0) ISNULL) THEN TOTAL_CHANGES() ELSE vt1.c0 END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED, vt1, t0 WHERE (((json_type(0.8831378141379769))||(((vt0.c0) BETWEEN (t0.c96) AND (t0.c96))))) ORDER BY CASE CAST(t0.c96 AS BLOB)  WHEN ((rt0.c2)|(t0.c48)) THEN 0X72eeaca6 WHEN ((vt1.c0) IS TRUE) THEN (0.026281194337237856 IN ()) WHEN ((rt0.c0) ISNULL) THEN TOTAL_CHANGES() ELSE vt1.c0 END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN vt1 ON ((rt0.c0 COLLATE NOCASE) ISNULL) WHERE ((- (((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN vt1 ON ((rt0.c0 COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN vt1 ON ((rt0.c0 COLLATE NOCASE) ISNULL) WHERE ((- (((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN vt1 ON ((rt0.c0 COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c2 RIGHT OUTER JOIN vt1 ON ((rt0.c0 COLLATE NOCASE) ISNULL) WHERE ((- (((rt0.c2) NOTNULL))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))IS NOT(x'')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))IS NOT(x''))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))IS NOT(x'')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))IS NOT(x''))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))IS NOT(x'')));
SELECT * FROM vt1, t0 WHERE (NULL COLLATE BINARY) ORDER BY ((NULLIF(DISTINCT 0.5922715993412084, t0.c96)) BETWEEN (CAST(t0.c96 AS TEXT)) AND (((vt1.c0)GLOB(t0.c48)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt1, t0 ORDER BY ((NULLIF(DISTINCT 0.5922715993412084, t0.c96)) BETWEEN (CAST(t0.c96 AS TEXT)) AND (((vt1.c0)GLOB(t0.c48)))) DESC);
SELECT * FROM vt1, t0 WHERE (NULL COLLATE BINARY) ORDER BY ((NULLIF(DISTINCT 0.5922715993412084, t0.c96)) BETWEEN (CAST(t0.c96 AS TEXT)) AND (((vt1.c0)GLOB(t0.c48)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt1, t0 ORDER BY ((NULLIF(DISTINCT 0.5922715993412084, t0.c96)) BETWEEN (CAST(t0.c96 AS TEXT)) AND (((vt1.c0)GLOB(t0.c48)))) DESC);
SELECT * FROM vt1, t0 WHERE (NULL COLLATE BINARY) ORDER BY ((NULLIF(DISTINCT 0.5922715993412084, t0.c96)) BETWEEN (CAST(t0.c96 AS TEXT)) AND (((vt1.c0)GLOB(t0.c48)))) DESC;
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY)&(CASE t0.c48  WHEN 0.5431674677851082 THEN rt0.c1 ELSE t0.c48 END)) WHERE (t0.c96 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t0.c96 COLLATE RTRIM) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY)&(CASE t0.c48  WHEN 0.5431674677851082 THEN rt0.c1 ELSE t0.c48 END)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY)&(CASE t0.c48  WHEN 0.5431674677851082 THEN rt0.c1 ELSE t0.c48 END)) WHERE (t0.c96 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t0.c96 COLLATE RTRIM) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY)&(CASE t0.c48  WHEN 0.5431674677851082 THEN rt0.c1 ELSE t0.c48 END)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY)&(CASE t0.c48  WHEN 0.5431674677851082 THEN rt0.c1 ELSE t0.c48 END)) WHERE (t0.c96 COLLATE RTRIM);
SELECT ALL * FROM rt0, t0 WHERE (((- (t0.c48)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (t0.c48)) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((- (t0.c48)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (t0.c48)) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((- (t0.c48)) IN ()));
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0 IN ()))==((((rt0.c0, 0.3305022170788193, rt0.c2)) BETWEEN ((t0.c96, t0.c96, rt0.c1)) AND ((-764254970, vt1.c0, t0.c96)))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY (((rt0.c0 IN ()))==((((rt0.c0, 0.3305022170788193, rt0.c2)) BETWEEN ((t0.c96, t0.c96, rt0.c1)) AND ((-764254970, vt1.c0, t0.c96))))));
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0 IN ()))==((((rt0.c0, 0.3305022170788193, rt0.c2)) BETWEEN ((t0.c96, t0.c96, rt0.c1)) AND ((-764254970, vt1.c0, t0.c96)))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY (((rt0.c0 IN ()))==((((rt0.c0, 0.3305022170788193, rt0.c2)) BETWEEN ((t0.c96, t0.c96, rt0.c1)) AND ((-764254970, vt1.c0, t0.c96))))));
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0 IN ()))==((((rt0.c0, 0.3305022170788193, rt0.c2)) BETWEEN ((t0.c96, t0.c96, rt0.c1)) AND ((-764254970, vt1.c0, t0.c96)))));
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c48)) BETWEEN ((t0.c96)) AND ((CAST(0.31811621761604747 AS INTEGER))))) ORDER BY CASE vt0.c0  WHEN t0.c96 THEN t0.c48 ELSE t0.c48 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c48)) BETWEEN ((t0.c96)) AND ((CAST(0.31811621761604747 AS INTEGER))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE vt0.c0  WHEN t0.c96 THEN t0.c48 ELSE t0.c48 END COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c48)) BETWEEN ((t0.c96)) AND ((CAST(0.31811621761604747 AS INTEGER))))) ORDER BY CASE vt0.c0  WHEN t0.c96 THEN t0.c48 ELSE t0.c48 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c48)) BETWEEN ((t0.c96)) AND ((CAST(0.31811621761604747 AS INTEGER))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE vt0.c0  WHEN t0.c96 THEN t0.c48 ELSE t0.c48 END COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c48)) BETWEEN ((t0.c96)) AND ((CAST(0.31811621761604747 AS INTEGER))))) ORDER BY CASE vt0.c0  WHEN t0.c96 THEN t0.c48 ELSE t0.c48 END COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((NULL)<=(rt0.c1)) IN ())) ORDER BY ((rt0.c1) NOT BETWEEN (vt1.c0) AND (LAST_INSERT_ROWID())) ASC;
SELECT SUM(count) FROM (SELECT (((((NULL)<=(rt0.c1)) IN ())) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((rt0.c1) NOT BETWEEN (vt1.c0) AND (LAST_INSERT_ROWID())) ASC);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((NULL)<=(rt0.c1)) IN ())) ORDER BY ((rt0.c1) NOT BETWEEN (vt1.c0) AND (LAST_INSERT_ROWID())) ASC;
SELECT SUM(count) FROM (SELECT (((((NULL)<=(rt0.c1)) IN ())) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((rt0.c1) NOT BETWEEN (vt1.c0) AND (LAST_INSERT_ROWID())) ASC);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((NULL)<=(rt0.c1)) IN ())) ORDER BY ((rt0.c1) NOT BETWEEN (vt1.c0) AND (LAST_INSERT_ROWID())) ASC;
SELECT * FROM rt0 CROSS JOIN vt1 ON (((rt0.c0, rt0.c0, rt0.c2, t0.c96, t0.c48)) BETWEEN (((((t0.c96)) BETWEEN ((t0.c48)) AND ((t0.c96))), x'ee08', CASE WHEN vt1.c0 THEN 1470915014 WHEN rt0.c0 THEN 0.44879027966861385 WHEN t0.c48 THEN rt0.c2 END, '1781441112', vt1.c0 COLLATE RTRIM)) AND ((vt0.c0 COLLATE BINARY, CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c48 THEN vt1.c0 WHEN t0.c96 THEN t0.c48 ELSE rt0.c0 END, ((t0.c48)OR(rt0.c1)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c48))), CASE WHEN rt0.c0 THEN t0.c48 ELSE t0.c96 END))) LEFT OUTER JOIN t0 ON (((t0.c48)) BETWEEN ((CAST(t0.c96 AS TEXT))) AND (((vt1.c0 IN ('0.16055442037554501', vt1.c0))))) LEFT OUTER JOIN vt0 ON ((((vt1.c0) IS FALSE))&(rt0.c1 COLLATE RTRIM)) WHERE (CAST(TRIM(rt0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(rt0.c1) AS INTEGER)) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((rt0.c0, rt0.c0, rt0.c2, t0.c96, t0.c48)) BETWEEN (((((t0.c96)) BETWEEN ((t0.c48)) AND ((t0.c96))), x'ee08', CASE WHEN vt1.c0 THEN 1470915014 WHEN rt0.c0 THEN 0.44879027966861385 WHEN t0.c48 THEN rt0.c2 END, '1781441112', vt1.c0 COLLATE RTRIM)) AND ((vt0.c0 COLLATE BINARY, CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c48 THEN vt1.c0 WHEN t0.c96 THEN t0.c48 ELSE rt0.c0 END, ((t0.c48)OR(rt0.c1)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c48))), CASE WHEN rt0.c0 THEN t0.c48 ELSE t0.c96 END))) LEFT OUTER JOIN t0 ON (((t0.c48)) BETWEEN ((CAST(t0.c96 AS TEXT))) AND (((vt1.c0 IN ('0.16055442037554501', vt1.c0))))) LEFT OUTER JOIN vt0 ON ((((vt1.c0) IS FALSE))&(rt0.c1 COLLATE RTRIM)));
SELECT * FROM rt0 CROSS JOIN vt1 ON (((rt0.c0, rt0.c0, rt0.c2, t0.c96, t0.c48)) BETWEEN (((((t0.c96)) BETWEEN ((t0.c48)) AND ((t0.c96))), x'ee08', CASE WHEN vt1.c0 THEN 1470915014 WHEN rt0.c0 THEN 0.44879027966861385 WHEN t0.c48 THEN rt0.c2 END, '1781441112', vt1.c0 COLLATE RTRIM)) AND ((vt0.c0 COLLATE BINARY, CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c48 THEN vt1.c0 WHEN t0.c96 THEN t0.c48 ELSE rt0.c0 END, ((t0.c48)OR(rt0.c1)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c48))), CASE WHEN rt0.c0 THEN t0.c48 ELSE t0.c96 END))) LEFT OUTER JOIN t0 ON (((t0.c48)) BETWEEN ((CAST(t0.c96 AS TEXT))) AND (((vt1.c0 IN ('0.16055442037554501', vt1.c0))))) LEFT OUTER JOIN vt0 ON ((((vt1.c0) IS FALSE))&(rt0.c1 COLLATE RTRIM)) WHERE (CAST(TRIM(rt0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(rt0.c1) AS INTEGER)) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((rt0.c0, rt0.c0, rt0.c2, t0.c96, t0.c48)) BETWEEN (((((t0.c96)) BETWEEN ((t0.c48)) AND ((t0.c96))), x'ee08', CASE WHEN vt1.c0 THEN 1470915014 WHEN rt0.c0 THEN 0.44879027966861385 WHEN t0.c48 THEN rt0.c2 END, '1781441112', vt1.c0 COLLATE RTRIM)) AND ((vt0.c0 COLLATE BINARY, CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c48 THEN vt1.c0 WHEN t0.c96 THEN t0.c48 ELSE rt0.c0 END, ((t0.c48)OR(rt0.c1)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c48))), CASE WHEN rt0.c0 THEN t0.c48 ELSE t0.c96 END))) LEFT OUTER JOIN t0 ON (((t0.c48)) BETWEEN ((CAST(t0.c96 AS TEXT))) AND (((vt1.c0 IN ('0.16055442037554501', vt1.c0))))) LEFT OUTER JOIN vt0 ON ((((vt1.c0) IS FALSE))&(rt0.c1 COLLATE RTRIM)));
SELECT * FROM rt0 CROSS JOIN vt1 ON (((rt0.c0, rt0.c0, rt0.c2, t0.c96, t0.c48)) BETWEEN (((((t0.c96)) BETWEEN ((t0.c48)) AND ((t0.c96))), x'ee08', CASE WHEN vt1.c0 THEN 1470915014 WHEN rt0.c0 THEN 0.44879027966861385 WHEN t0.c48 THEN rt0.c2 END, '1781441112', vt1.c0 COLLATE RTRIM)) AND ((vt0.c0 COLLATE BINARY, CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c48 THEN vt1.c0 WHEN t0.c96 THEN t0.c48 ELSE rt0.c0 END, ((t0.c48)OR(rt0.c1)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c48))), CASE WHEN rt0.c0 THEN t0.c48 ELSE t0.c96 END))) LEFT OUTER JOIN t0 ON (((t0.c48)) BETWEEN ((CAST(t0.c96 AS TEXT))) AND (((vt1.c0 IN ('0.16055442037554501', vt1.c0))))) LEFT OUTER JOIN vt0 ON ((((vt1.c0) IS FALSE))&(rt0.c1 COLLATE RTRIM)) WHERE (CAST(TRIM(rt0.c1) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE NOCASE)));
SELECT * FROM vt1, t0 CROSS JOIN rt0 ON (((rt0.c2 IN ())) IS TRUE) RIGHT OUTER JOIN vt0 ON (((CAST(t0.c96 AS INTEGER), x'', ((t0.c96)<=(vt1.c0))))<((vt0.c0 COLLATE BINARY, ((rt0.c2) NOT NULL), ((rt0.c2)>(t0.c48))))) WHERE (((((((((rt0.c1)OR(0.1881937995569063 COLLATE BINARY)))AND((t0.c48 IN ()))))AND(((((((((rt0.c0)AND(t0.c96)))OR(t0.c48)))AND(rt0.c2)))AND(0.07347107388359975)))))OR((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR(0.1881937995569063 COLLATE BINARY)))AND((t0.c48 IN ()))))AND(((((((((rt0.c0)AND(t0.c96)))OR(t0.c48)))AND(rt0.c2)))AND(0.07347107388359975)))))OR((- (rt0.c1))))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt0 ON (((rt0.c2 IN ())) IS TRUE) RIGHT OUTER JOIN vt0 ON (((CAST(t0.c96 AS INTEGER), x'', ((t0.c96)<=(vt1.c0))))<((vt0.c0 COLLATE BINARY, ((rt0.c2) NOT NULL), ((rt0.c2)>(t0.c48))))));
SELECT * FROM vt1, t0 CROSS JOIN rt0 ON (((rt0.c2 IN ())) IS TRUE) RIGHT OUTER JOIN vt0 ON (((CAST(t0.c96 AS INTEGER), x'', ((t0.c96)<=(vt1.c0))))<((vt0.c0 COLLATE BINARY, ((rt0.c2) NOT NULL), ((rt0.c2)>(t0.c48))))) WHERE (((((((((rt0.c1)OR(0.1881937995569063 COLLATE BINARY)))AND((t0.c48 IN ()))))AND(((((((((rt0.c0)AND(t0.c96)))OR(t0.c48)))AND(rt0.c2)))AND(0.07347107388359975)))))OR((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR(0.1881937995569063 COLLATE BINARY)))AND((t0.c48 IN ()))))AND(((((((((rt0.c0)AND(t0.c96)))OR(t0.c48)))AND(rt0.c2)))AND(0.07347107388359975)))))OR((- (rt0.c1))))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt0 ON (((rt0.c2 IN ())) IS TRUE) RIGHT OUTER JOIN vt0 ON (((CAST(t0.c96 AS INTEGER), x'', ((t0.c96)<=(vt1.c0))))<((vt0.c0 COLLATE BINARY, ((rt0.c2) NOT NULL), ((rt0.c2)>(t0.c48))))));
SELECT * FROM vt1, t0 CROSS JOIN rt0 ON (((rt0.c2 IN ())) IS TRUE) RIGHT OUTER JOIN vt0 ON (((CAST(t0.c96 AS INTEGER), x'', ((t0.c96)<=(vt1.c0))))<((vt0.c0 COLLATE BINARY, ((rt0.c2) NOT NULL), ((rt0.c2)>(t0.c48))))) WHERE (((((((((rt0.c1)OR(0.1881937995569063 COLLATE BINARY)))AND((t0.c48 IN ()))))AND(((((((((rt0.c0)AND(t0.c96)))OR(t0.c48)))AND(rt0.c2)))AND(0.07347107388359975)))))OR((- (rt0.c1)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))OR(((rt0.c2)<=(rt0.c1)))))AND(((vt0.c0) IS TRUE))))AND(((rt0.c2) IS FALSE))))AND(vt0.c0)) WHERE (CAST(((vt0.c0) NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))OR(((rt0.c2)<=(rt0.c1)))))AND(((vt0.c0) IS TRUE))))AND(((rt0.c2) IS FALSE))))AND(vt0.c0)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))OR(((rt0.c2)<=(rt0.c1)))))AND(((vt0.c0) IS TRUE))))AND(((rt0.c2) IS FALSE))))AND(vt0.c0)) WHERE (CAST(((vt0.c0) NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))OR(((rt0.c2)<=(rt0.c1)))))AND(((vt0.c0) IS TRUE))))AND(((rt0.c2) IS FALSE))))AND(vt0.c0)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))OR(((rt0.c2)<=(rt0.c1)))))AND(((vt0.c0) IS TRUE))))AND(((rt0.c2) IS FALSE))))AND(vt0.c0)) WHERE (CAST(((vt0.c0) NOTNULL) AS NUMERIC));
SELECT ALL * FROM vt1, vt0 NOT INDEXED, rt0, t0 WHERE (((('L6kV' IN ()))>=(json_insert(t0.c48, rt0.c2, vt1.c0)))) ORDER BY ((NULL)/(rt0.c0))  NULLS LAST, CAST(vt1.c0 AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST, 0.5386935368652586 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('L6kV' IN ()))>=(json_insert(t0.c48, rt0.c2, vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, rt0, t0 ORDER BY ((NULL)/(rt0.c0))  NULLS LAST, CAST(vt1.c0 AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST, 0.5386935368652586 ASC);
SELECT ALL * FROM vt1, vt0 NOT INDEXED, rt0, t0 WHERE (((('L6kV' IN ()))>=(json_insert(t0.c48, rt0.c2, vt1.c0)))) ORDER BY ((NULL)/(rt0.c0))  NULLS LAST, CAST(vt1.c0 AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST, 0.5386935368652586 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('L6kV' IN ()))>=(json_insert(t0.c48, rt0.c2, vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, rt0, t0 ORDER BY ((NULL)/(rt0.c0))  NULLS LAST, CAST(vt1.c0 AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST, 0.5386935368652586 ASC);
SELECT ALL * FROM vt1, vt0 NOT INDEXED, rt0, t0 WHERE (((('L6kV' IN ()))>=(json_insert(t0.c48, rt0.c2, vt1.c0)))) ORDER BY ((NULL)/(rt0.c0))  NULLS LAST, CAST(vt1.c0 AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST, 0.5386935368652586 ASC;
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON CAST('-983740201' AS NUMERIC) COLLATE NOCASE WHERE (((STRFTIME(rt0.c1, rt0.c2, NULL, vt0.c0, vt1.c0, rt0.c2, NULL)) IS FALSE)) ORDER BY (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) IN (((rt0.c0)>>(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((STRFTIME(rt0.c1, rt0.c2, NULL, vt0.c0, vt1.c0, rt0.c2, NULL)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON CAST('-983740201' AS NUMERIC) COLLATE NOCASE ORDER BY (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) IN (((rt0.c0)>>(rt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON CAST('-983740201' AS NUMERIC) COLLATE NOCASE WHERE (((STRFTIME(rt0.c1, rt0.c2, NULL, vt0.c0, vt1.c0, rt0.c2, NULL)) IS FALSE)) ORDER BY (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) IN (((rt0.c0)>>(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((STRFTIME(rt0.c1, rt0.c2, NULL, vt0.c0, vt1.c0, rt0.c2, NULL)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON CAST('-983740201' AS NUMERIC) COLLATE NOCASE ORDER BY (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) IN (((rt0.c0)>>(rt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON CAST('-983740201' AS NUMERIC) COLLATE NOCASE WHERE (((STRFTIME(rt0.c1, rt0.c2, NULL, vt0.c0, vt1.c0, rt0.c2, NULL)) IS FALSE)) ORDER BY (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) IN (((rt0.c0)>>(rt0.c0))));
SELECT ALL * FROM vt1, t0 WHERE (((CAST(t0.c48 AS NUMERIC)) NOT BETWEEN (vt1.c0) AND (((NULL)OR('䂊YL')))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c48 AS NUMERIC)) NOT BETWEEN (vt1.c0) AND (((NULL)OR('䂊YL'))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((CAST(t0.c48 AS NUMERIC)) NOT BETWEEN (vt1.c0) AND (((NULL)OR('䂊YL')))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c48 AS NUMERIC)) NOT BETWEEN (vt1.c0) AND (((NULL)OR('䂊YL'))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((CAST(t0.c48 AS NUMERIC)) NOT BETWEEN (vt1.c0) AND (((NULL)OR('䂊YL')))));
SELECT ALL * FROM rt0, vt1, t0 INNER JOIN vt0 ON '-110413379' WHERE (CAST((t0.c48 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c48 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0, vt1, t0 INNER JOIN vt0 ON '-110413379');
SELECT ALL * FROM rt0, vt1, t0 INNER JOIN vt0 ON '-110413379' WHERE (CAST((t0.c48 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c48 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0, vt1, t0 INNER JOIN vt0 ON '-110413379');
SELECT ALL * FROM rt0, vt1, t0 INNER JOIN vt0 ON '-110413379' WHERE (CAST((t0.c48 IN ()) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) BETWEEN (((((0X17759762)AND(rt0.c2)))OR(vt0.c0))) AND ((rt0.c2 IN (rt0.c1))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (((((0x17759762)AND(rt0.c2)))OR(vt0.c0))) AND ((rt0.c2 IN (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) BETWEEN (((((0X17759762)AND(rt0.c2)))OR(vt0.c0))) AND ((rt0.c2 IN (rt0.c1))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (((((0x17759762)AND(rt0.c2)))OR(vt0.c0))) AND ((rt0.c2 IN (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) BETWEEN (((((0X17759762)AND(rt0.c2)))OR(vt0.c0))) AND ((rt0.c2 IN (rt0.c1))))) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)>=(vt1.c0)) AS BLOB)) ORDER BY (NOT ((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>=(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY (NOT ((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)>=(vt1.c0)) AS BLOB)) ORDER BY (NOT ((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>=(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY (NOT ((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)>=(vt1.c0)) AS BLOB)) ORDER BY (NOT ((vt1.c0 IN ())));
SELECT ALL * FROM t0 WHERE ((((t0.c48)) NOT BETWEEN ((((t0.c48)==(t0.c48)))) AND ((((((((((t0.c96)AND(t0.c96)))AND(t0.c96)))AND(t0.c48)))AND(t0.c48))))));
SELECT SUM(count) FROM (SELECT (((((t0.c48)) NOT BETWEEN ((((t0.c48)==(t0.c48)))) AND ((((((((((t0.c96)AND(t0.c96)))AND(t0.c96)))AND(t0.c48)))AND(t0.c48)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c48)) NOT BETWEEN ((((t0.c48)==(t0.c48)))) AND ((((((((((t0.c96)AND(t0.c96)))AND(t0.c96)))AND(t0.c48)))AND(t0.c48))))));
SELECT SUM(count) FROM (SELECT (((((t0.c48)) NOT BETWEEN ((((t0.c48)==(t0.c48)))) AND ((((((((((t0.c96)AND(t0.c96)))AND(t0.c96)))AND(t0.c48)))AND(t0.c48)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c48)) NOT BETWEEN ((((t0.c48)==(t0.c48)))) AND ((((((((((t0.c96)AND(t0.c96)))AND(t0.c96)))AND(t0.c48)))AND(t0.c48))))));
SELECT * FROM vt1, t0, rt0, vt0 WHERE (0.2553101075241643);
SELECT SUM(count) FROM (SELECT ((0.2553101075241643) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (0.2553101075241643);
SELECT SUM(count) FROM (SELECT ((0.2553101075241643) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (0.2553101075241643);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE ((((rt0.c0)&(rt0.c1)) IN ())) ORDER BY (((((((((vt0.c0 IN (t0.c96)))OR((- (rt0.c2)))))OR(CAST(t0.c96 AS INTEGER))))AND((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))OR(((rt0.c1) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)&(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY (((((((((vt0.c0 IN (t0.c96)))OR((- (rt0.c2)))))OR(CAST(t0.c96 AS INTEGER))))AND((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))OR(((rt0.c1) IS FALSE))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE ((((rt0.c0)&(rt0.c1)) IN ())) ORDER BY (((((((((vt0.c0 IN (t0.c96)))OR((- (rt0.c2)))))OR(CAST(t0.c96 AS INTEGER))))AND((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))OR(((rt0.c1) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)&(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY (((((((((vt0.c0 IN (t0.c96)))OR((- (rt0.c2)))))OR(CAST(t0.c96 AS INTEGER))))AND((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))OR(((rt0.c1) IS FALSE))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE ((((rt0.c0)&(rt0.c1)) IN ())) ORDER BY (((((((((vt0.c0 IN (t0.c96)))OR((- (rt0.c2)))))OR(CAST(t0.c96 AS INTEGER))))AND((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))OR(((rt0.c1) IS FALSE))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((vt1.c0)>=(t0.c96)) AS REAL)) ORDER BY (+ (((t0.c48)<(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>=(t0.c96)) AS REAL)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (+ (((t0.c48)<(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((vt1.c0)>=(t0.c96)) AS REAL)) ORDER BY (+ (((t0.c48)<(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>=(t0.c96)) AS REAL)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (+ (((t0.c48)<(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((vt1.c0)>=(t0.c96)) AS REAL)) ORDER BY (+ (((t0.c48)<(vt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0, vt1, vt0, t0 WHERE (0.29049039942558985);
SELECT SUM(count) FROM (SELECT ALL ((0.29049039942558985) IS TRUE)  as count FROM rt0, vt1, vt0, t0);
SELECT * FROM rt0, vt1, vt0, t0 WHERE (0.29049039942558985);
SELECT SUM(count) FROM (SELECT ALL ((0.29049039942558985) IS TRUE)  as count FROM rt0, vt1, vt0, t0);
SELECT * FROM rt0, vt1, vt0, t0 WHERE (0.29049039942558985);
SELECT * FROM t0 WHERE (0.7932154210914509) ORDER BY ((((t0.c96)*(t0.c96)))>((('-496820812') BETWEEN (t0.c96) AND (NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.7932154210914509) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c96)*(t0.c96)))>((('-496820812') BETWEEN (t0.c96) AND (NULL)))) ASC);
SELECT * FROM t0 WHERE (0.7932154210914509) ORDER BY ((((t0.c96)*(t0.c96)))>((('-496820812') BETWEEN (t0.c96) AND (NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.7932154210914509) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c96)*(t0.c96)))>((('-496820812') BETWEEN (t0.c96) AND (NULL)))) ASC);
SELECT * FROM t0 WHERE (0.7932154210914509) ORDER BY ((((t0.c96)*(t0.c96)))>((('-496820812') BETWEEN (t0.c96) AND (NULL)))) ASC;
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (t0.c48);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (INSTR(((((0.9362925237128747)OR(t0.c48)))AND(vt1.c0)), (((rt0.c0, rt0.c1, vt1.c0, vt1.c0, t0.c48))>=((t0.c96, vt1.c0, rt0.c1, vt0.c0, NULL))))) ORDER BY (((rt0.c1 COLLATE BINARY, NULLIF(DISTINCT rt0.c1, rt0.c1), t0.c96))<>((ABS(rt0.c1), ((rt0.c2) IS FALSE), ((((x'')AND(rt0.c1)))AND(rt0.c2))))), (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CAST(rt0.c2 AS TEXT)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(((((0.9362925237128747)OR(t0.c48)))AND(vt1.c0)), (((rt0.c0, rt0.c1, vt1.c0, vt1.c0, t0.c48))>=((t0.c96, vt1.c0, rt0.c1, vt0.c0, NULL))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY (((rt0.c1 COLLATE BINARY, NULLIF(DISTINCT rt0.c1, rt0.c1), t0.c96))<>((ABS(rt0.c1), ((rt0.c2) IS FALSE), ((((x'')AND(rt0.c1)))AND(rt0.c2))))), (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CAST(rt0.c2 AS TEXT)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (INSTR(((((0.9362925237128747)OR(t0.c48)))AND(vt1.c0)), (((rt0.c0, rt0.c1, vt1.c0, vt1.c0, t0.c48))>=((t0.c96, vt1.c0, rt0.c1, vt0.c0, NULL))))) ORDER BY (((rt0.c1 COLLATE BINARY, NULLIF(DISTINCT rt0.c1, rt0.c1), t0.c96))<>((ABS(rt0.c1), ((rt0.c2) IS FALSE), ((((x'')AND(rt0.c1)))AND(rt0.c2))))), (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CAST(rt0.c2 AS TEXT)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(((((0.9362925237128747)OR(t0.c48)))AND(vt1.c0)), (((rt0.c0, rt0.c1, vt1.c0, vt1.c0, t0.c48))>=((t0.c96, vt1.c0, rt0.c1, vt0.c0, NULL))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY (((rt0.c1 COLLATE BINARY, NULLIF(DISTINCT rt0.c1, rt0.c1), t0.c96))<>((ABS(rt0.c1), ((rt0.c2) IS FALSE), ((((x'')AND(rt0.c1)))AND(rt0.c2))))), (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CAST(rt0.c2 AS TEXT)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (INSTR(((((0.9362925237128747)OR(t0.c48)))AND(vt1.c0)), (((rt0.c0, rt0.c1, vt1.c0, vt1.c0, t0.c48))>=((t0.c96, vt1.c0, rt0.c1, vt0.c0, NULL))))) ORDER BY (((rt0.c1 COLLATE BINARY, NULLIF(DISTINCT rt0.c1, rt0.c1), t0.c96))<>((ABS(rt0.c1), ((rt0.c2) IS FALSE), ((((x'')AND(rt0.c1)))AND(rt0.c2))))), (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CAST(rt0.c2 AS TEXT)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1, t0, vt0 WHERE (TYPEOF(DISTINCT UNLIKELY(t0.c96)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT UNLIKELY(t0.c96))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (TYPEOF(DISTINCT UNLIKELY(t0.c96)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT UNLIKELY(t0.c96))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (TYPEOF(DISTINCT UNLIKELY(t0.c96)));
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE (0.6777418339425452) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.6777418339425452) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE (0.6777418339425452) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.6777418339425452) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1, rt0 WHERE (0.6777418339425452) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0, t0, vt1 WHERE (load_extension(((t0.c96)!=(t0.c48)), ((rt0.c2)/(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((t0.c96)!=(t0.c48)), ((rt0.c2)/(vt1.c0)))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT ALL * FROM vt0, rt0, t0, vt1 WHERE (load_extension(((t0.c96)!=(t0.c48)), ((rt0.c2)/(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((t0.c96)!=(t0.c48)), ((rt0.c2)/(vt1.c0)))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT ALL * FROM vt0, rt0, t0, vt1 WHERE (load_extension(((t0.c96)!=(t0.c48)), ((rt0.c2)/(vt1.c0))));
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN vt1 ON ((((((t0.c96) ISNULL))OR(vt1.c0 COLLATE NOCASE)))AND(IFNULL(rt0.c1, t0.c96))) LEFT OUTER JOIN t0 ON LOWER(DISTINCT (rt0.c2 IN ())) WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (t0.c96)))AND(((t0.c96)GLOB(rt0.c1)))))OR((- (rt0.c1))))) ORDER BY ((((rt0.c0) IS FALSE)) ISNULL) DESC, -1e500  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c0) AND (t0.c96)))AND(((t0.c96)GLOB(rt0.c1)))))OR((- (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN vt1 ON ((((((t0.c96) ISNULL))OR(vt1.c0 COLLATE NOCASE)))AND(IFNULL(rt0.c1, t0.c96))) LEFT OUTER JOIN t0 ON LOWER(DISTINCT (rt0.c2 IN ())) ORDER BY ((((rt0.c0) IS FALSE)) ISNULL) DESC, -1e500  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN vt1 ON ((((((t0.c96) ISNULL))OR(vt1.c0 COLLATE NOCASE)))AND(IFNULL(rt0.c1, t0.c96))) LEFT OUTER JOIN t0 ON LOWER(DISTINCT (rt0.c2 IN ())) WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (t0.c96)))AND(((t0.c96)GLOB(rt0.c1)))))OR((- (rt0.c1))))) ORDER BY ((((rt0.c0) IS FALSE)) ISNULL) DESC, -1e500  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c0) AND (t0.c96)))AND(((t0.c96)GLOB(rt0.c1)))))OR((- (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN vt1 ON ((((((t0.c96) ISNULL))OR(vt1.c0 COLLATE NOCASE)))AND(IFNULL(rt0.c1, t0.c96))) LEFT OUTER JOIN t0 ON LOWER(DISTINCT (rt0.c2 IN ())) ORDER BY ((((rt0.c0) IS FALSE)) ISNULL) DESC, -1e500  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN vt1 ON ((((((t0.c96) ISNULL))OR(vt1.c0 COLLATE NOCASE)))AND(IFNULL(rt0.c1, t0.c96))) LEFT OUTER JOIN t0 ON LOWER(DISTINCT (rt0.c2 IN ())) WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (t0.c96)))AND(((t0.c96)GLOB(rt0.c1)))))OR((- (rt0.c1))))) ORDER BY ((((rt0.c0) IS FALSE)) ISNULL) DESC, -1e500  NULLS LAST;
SELECT * FROM vt0, vt1 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)==(vt0.c0)))) AND ((LIKELIHOOD(vt1.c0, 0.3637278918371605))))) ORDER BY LOWER(DISTINCT vt0.c0) COLLATE BINARY ASC  NULLS FIRST, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)==(vt0.c0)))) AND ((LIKELIHOOD(vt1.c0, 0.3637278918371605))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY LOWER(DISTINCT vt0.c0) COLLATE BINARY ASC  NULLS FIRST, vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0, vt1 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)==(vt0.c0)))) AND ((LIKELIHOOD(vt1.c0, 0.3637278918371605))))) ORDER BY LOWER(DISTINCT vt0.c0) COLLATE BINARY ASC  NULLS FIRST, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)==(vt0.c0)))) AND ((LIKELIHOOD(vt1.c0, 0.3637278918371605))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY LOWER(DISTINCT vt0.c0) COLLATE BINARY ASC  NULLS FIRST, vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0, vt1 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)==(vt0.c0)))) AND ((LIKELIHOOD(vt1.c0, 0.3637278918371605))))) ORDER BY LOWER(DISTINCT vt0.c0) COLLATE BINARY ASC  NULLS FIRST, vt0.c0 ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN vt1 ON (vt1.c0 COLLATE BINARY IN ()) WHERE (NULL) ORDER BY (NOT (CASE vt1.c0  WHEN t0.c48 THEN t0.c96 ELSE t0.c96 END));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON (vt1.c0 COLLATE BINARY IN ()) ORDER BY (NOT (CASE vt1.c0  WHEN t0.c48 THEN t0.c96 ELSE t0.c96 END)));
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN vt1 ON (vt1.c0 COLLATE BINARY IN ()) WHERE (NULL) ORDER BY (NOT (CASE vt1.c0  WHEN t0.c48 THEN t0.c96 ELSE t0.c96 END));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON (vt1.c0 COLLATE BINARY IN ()) ORDER BY (NOT (CASE vt1.c0  WHEN t0.c48 THEN t0.c96 ELSE t0.c96 END)));
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN vt1 ON (vt1.c0 COLLATE BINARY IN ()) WHERE (NULL) ORDER BY (NOT (CASE vt1.c0  WHEN t0.c48 THEN t0.c96 ELSE t0.c96 END));
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1) NOT BETWEEN (t0.c96) AND (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT BETWEEN (t0.c96) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1) NOT BETWEEN (t0.c96) AND (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT BETWEEN (t0.c96) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1) NOT BETWEEN (t0.c96) AND (rt0.c1)) IN ()));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)<>(rt0.c0)) AS BLOB) WHERE (CASE WHEN CASE WHEN rt0.c0 THEN 0.7546163736765544 END THEN '-287095630' ELSE (('1013760891425502610')<>(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c0 THEN 0.7546163736765544 END THEN '-287095630' ELSE (('1013760891425502610')<>(rt0.c1)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)!=(rt0.c0)) AS BLOB));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)<>(rt0.c0)) AS BLOB) WHERE (CASE WHEN CASE WHEN rt0.c0 THEN 0.7546163736765544 END THEN '-287095630' ELSE (('1013760891425502610')<>(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c0 THEN 0.7546163736765544 END THEN '-287095630' ELSE (('1013760891425502610')<>(rt0.c1)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)!=(rt0.c0)) AS BLOB));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)<>(rt0.c0)) AS BLOB) WHERE (CASE WHEN CASE WHEN rt0.c0 THEN 0.7546163736765544 END THEN '-287095630' ELSE (('1013760891425502610')<>(rt0.c1)) END);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((((t0.c96) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((((t0.c96) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((((t0.c96) NOTNULL)) NOT NULL));
SELECT ALL * FROM vt1, t0 WHERE (DATETIME(t0.c96 COLLATE BINARY, ((vt1.c0)<=(t0.c48)), (0.9785132049312997 IN (t0.c96, t0.c48))));
SELECT SUM(count) FROM (SELECT ((DATETIME(t0.c96 COLLATE BINARY, ((vt1.c0)<=(t0.c48)), (0.9785132049312997 IN (t0.c96, t0.c48)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (DATETIME(t0.c96 COLLATE BINARY, ((vt1.c0)<=(t0.c48)), (0.9785132049312997 IN (t0.c96, t0.c48))));
SELECT SUM(count) FROM (SELECT ((DATETIME(t0.c96 COLLATE BINARY, ((vt1.c0)<=(t0.c48)), (0.9785132049312997 IN (t0.c96, t0.c48)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (DATETIME(t0.c96 COLLATE BINARY, ((vt1.c0)<=(t0.c48)), (0.9785132049312997 IN (t0.c96, t0.c48))));
SELECT ALL * FROM vt0, vt1, t0 WHERE ((t0.c48 COLLATE NOCASE IN (CAST(t0.c48 AS REAL)))) ORDER BY (((t0.c96) IS FALSE) IN (CAST(vt1.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT (((t0.c48 COLLATE NOCASE IN (CAST(t0.c48 AS REAL)))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, t0 ORDER BY (((t0.c96) IS FALSE) IN (CAST(vt1.c0 AS TEXT))) DESC);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((t0.c48 COLLATE NOCASE IN (CAST(t0.c48 AS REAL)))) ORDER BY (((t0.c96) IS FALSE) IN (CAST(vt1.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT (((t0.c48 COLLATE NOCASE IN (CAST(t0.c48 AS REAL)))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, t0 ORDER BY (((t0.c96) IS FALSE) IN (CAST(vt1.c0 AS TEXT))) DESC);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((t0.c48 COLLATE NOCASE IN (CAST(t0.c48 AS REAL)))) ORDER BY (((t0.c96) IS FALSE) IN (CAST(vt1.c0 AS TEXT))) DESC;
SELECT COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON ((((CAST(rt0.c1 AS INTEGER))OR(CAST(rt0.c1 AS NUMERIC))))OR(t0.c48)) WHERE (CAST(((vt0.c0)IS NOT('o\r')) AS NUMERIC)) ORDER BY ((((((rt0.c2) ISNULL))AND(t0.c96)))OR(rt0.c0 COLLATE BINARY)) DESC, ((rt0.c2 COLLATE RTRIM)>(t0.c96))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS NOT('o\r')) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((((CAST(rt0.c1 AS INTEGER))OR(CAST(rt0.c1 AS NUMERIC))))OR(t0.c48)) ORDER BY ((((((rt0.c2) ISNULL))AND(t0.c96)))OR(rt0.c0 COLLATE BINARY)) DESC, ((rt0.c2 COLLATE RTRIM)>(t0.c96))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON ((((CAST(rt0.c1 AS INTEGER))OR(CAST(rt0.c1 AS NUMERIC))))OR(t0.c48)) WHERE (CAST(((vt0.c0)IS NOT('o\r')) AS NUMERIC)) ORDER BY ((((((rt0.c2) ISNULL))AND(t0.c96)))OR(rt0.c0 COLLATE BINARY)) DESC, ((rt0.c2 COLLATE RTRIM)>(t0.c96))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS NOT('o\r')) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((((CAST(rt0.c1 AS INTEGER))OR(CAST(rt0.c1 AS NUMERIC))))OR(t0.c48)) ORDER BY ((((((rt0.c2) ISNULL))AND(t0.c96)))OR(rt0.c0 COLLATE BINARY)) DESC, ((rt0.c2 COLLATE RTRIM)>(t0.c96))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON ((((CAST(rt0.c1 AS INTEGER))OR(CAST(rt0.c1 AS NUMERIC))))OR(t0.c48)) WHERE (CAST(((vt0.c0)IS NOT('o\r')) AS NUMERIC)) ORDER BY ((((((rt0.c2) ISNULL))AND(t0.c96)))OR(rt0.c0 COLLATE BINARY)) DESC, ((rt0.c2 COLLATE RTRIM)>(t0.c96))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((- (t0.c48)));
SELECT SUM(count) FROM (SELECT (((- (t0.c48))) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((- (t0.c48)));
SELECT SUM(count) FROM (SELECT (((- (t0.c48))) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((- (t0.c48)));
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (((((((((0Xffffffffe865f58d)AND((rt0.c1 IN (rt0.c2, rt0.c0)))))OR(((vt0.c0) IS FALSE))))OR(t0.c96)))OR(MAX(rt0.c0, rt0.c0, rt0.c2, t0.c48))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0Xffffffffe865f58d)AND((rt0.c1 IN (rt0.c2, rt0.c0)))))OR(((vt0.c0) IS FALSE))))OR(t0.c96)))OR(MAX(rt0.c0, rt0.c0, rt0.c2, t0.c48)))) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (((((((((0Xffffffffe865f58d)AND((rt0.c1 IN (rt0.c2, rt0.c0)))))OR(((vt0.c0) IS FALSE))))OR(t0.c96)))OR(MAX(rt0.c0, rt0.c0, rt0.c2, t0.c48))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0Xffffffffe865f58d)AND((rt0.c1 IN (rt0.c2, rt0.c0)))))OR(((vt0.c0) IS FALSE))))OR(t0.c96)))OR(MAX(rt0.c0, rt0.c0, rt0.c2, t0.c48)))) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (((((((((0Xffffffffe865f58d)AND((rt0.c1 IN (rt0.c2, rt0.c0)))))OR(((vt0.c0) IS FALSE))))OR(t0.c96)))OR(MAX(rt0.c0, rt0.c0, rt0.c2, t0.c48))));
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((t0.c48)OR(t0.c48)))OR(t0.c96))) NOT BETWEEN (((t0.c48) IS TRUE)) AND ('-1886542252' COLLATE NOCASE))) ORDER BY (((((t0.c96)AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c48)OR(t0.c48)))OR(t0.c96))) NOT BETWEEN (((t0.c48) IS TRUE)) AND ('-1886542252' COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((t0.c96)AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((t0.c48)OR(t0.c48)))OR(t0.c96))) NOT BETWEEN (((t0.c48) IS TRUE)) AND ('-1886542252' COLLATE NOCASE))) ORDER BY (((((t0.c96)AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c48)OR(t0.c48)))OR(t0.c96))) NOT BETWEEN (((t0.c48) IS TRUE)) AND ('-1886542252' COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((t0.c96)AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((t0.c48)OR(t0.c48)))OR(t0.c96))) NOT BETWEEN (((t0.c48) IS TRUE)) AND ('-1886542252' COLLATE NOCASE))) ORDER BY (((((t0.c96)AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY 0.8696092873511337  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY 0.8696092873511337  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY 0.8696092873511337  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY 0.8696092873511337  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY 0.8696092873511337  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((vt0.c0)==((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)=((- (rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((vt0.c0)==((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)=((- (rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((vt0.c0)==((- (rt0.c2)))));
SELECT * FROM t0, vt0, rt0, vt1 WHERE ((((('-1159027357' COLLATE RTRIM)AND((((t0.c96)) BETWEEN ((rt0.c1)) AND (('3ꕣ'))))))AND(CAST(rt0.c2 AS TEXT)))) ORDER BY (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('-1159027357' COLLATE RTRIM)AND((((t0.c96)) BETWEEN ((rt0.c1)) AND (('3ꕣ'))))))AND(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM t0, vt0, rt0, vt1 WHERE ((((('-1159027357' COLLATE RTRIM)AND((((t0.c96)) BETWEEN ((rt0.c1)) AND (('3ꕣ'))))))AND(CAST(rt0.c2 AS TEXT)))) ORDER BY (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('-1159027357' COLLATE RTRIM)AND((((t0.c96)) BETWEEN ((rt0.c1)) AND (('3ꕣ'))))))AND(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM t0, vt0, rt0, vt1 WHERE ((((('-1159027357' COLLATE RTRIM)AND((((t0.c96)) BETWEEN ((rt0.c1)) AND (('3ꕣ'))))))AND(CAST(rt0.c2 AS TEXT)))) ORDER BY (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (t0.c48 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t0.c48 COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (t0.c48 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t0.c48 COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (t0.c48 COLLATE NOCASE);
SELECT * FROM vt0 WHERE ((((x'')GLOB(vt0.c0)) IN (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((x'')GLOB(vt0.c0)) IN (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((x'')GLOB(vt0.c0)) IN (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((x'')GLOB(vt0.c0)) IN (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((x'')GLOB(vt0.c0)) IN (((vt0.c0) IS FALSE))));
SELECT * FROM vt1, vt0, rt0 NATURAL JOIN t0 WHERE ((+ (((t0.c96) NOT NULL)))) ORDER BY -1.625789503E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c96) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0, rt0 NATURAL JOIN t0 ORDER BY -1.625789503E9  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0 NATURAL JOIN t0 WHERE ((+ (((t0.c96) NOT NULL)))) ORDER BY -1.625789503E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c96) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0, rt0 NATURAL JOIN t0 ORDER BY -1.625789503E9  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0 NATURAL JOIN t0 WHERE ((+ (((t0.c96) NOT NULL)))) ORDER BY -1.625789503E9  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((LOWER(vt0.c0))&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c0))&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LOWER(vt0.c0))&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c0))&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LOWER(vt0.c0))&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)LIKE(vt1.c0)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))AND((NOT (vt0.c0)))) WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)LIKE(vt1.c0)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))AND((NOT (vt0.c0)))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) DESC, vt0.c0);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)LIKE(vt1.c0)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))AND((NOT (vt0.c0)))) WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)LIKE(vt1.c0)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))AND((NOT (vt0.c0)))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) DESC, vt0.c0);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)LIKE(vt1.c0)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))AND((NOT (vt0.c0)))) WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) DESC, vt0.c0;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, NULL)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, NULL)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, NULL)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, NULL)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, NULL)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE RTRIM);
SELECT * FROM t0, vt1 WHERE (CASE (NULL IN ())  WHEN (- (t0.c96)) THEN CASE WHEN t0.c48 THEN vt1.c0 WHEN t0.c96 THEN 0.46584464180774743 WHEN vt1.c0 THEN t0.c96 ELSE t0.c48 END END) ORDER BY ((t0.c48)IS(CAST(vt1.c0 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (NULL IN ())  WHEN (- (t0.c96)) THEN CASE WHEN t0.c48 THEN vt1.c0 WHEN t0.c96 THEN 0.46584464180774743 WHEN vt1.c0 THEN t0.c96 ELSE t0.c48 END END) IS TRUE)  as count FROM t0, vt1 ORDER BY ((t0.c48)IS(CAST(vt1.c0 AS BLOB))) DESC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (CASE (NULL IN ())  WHEN (- (t0.c96)) THEN CASE WHEN t0.c48 THEN vt1.c0 WHEN t0.c96 THEN 0.46584464180774743 WHEN vt1.c0 THEN t0.c96 ELSE t0.c48 END END) ORDER BY ((t0.c48)IS(CAST(vt1.c0 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (NULL IN ())  WHEN (- (t0.c96)) THEN CASE WHEN t0.c48 THEN vt1.c0 WHEN t0.c96 THEN 0.46584464180774743 WHEN vt1.c0 THEN t0.c96 ELSE t0.c48 END END) IS TRUE)  as count FROM t0, vt1 ORDER BY ((t0.c48)IS(CAST(vt1.c0 AS BLOB))) DESC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (CASE (NULL IN ())  WHEN (- (t0.c96)) THEN CASE WHEN t0.c48 THEN vt1.c0 WHEN t0.c96 THEN 0.46584464180774743 WHEN vt1.c0 THEN t0.c96 ELSE t0.c48 END END) ORDER BY ((t0.c48)IS(CAST(vt1.c0 AS BLOB))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((t0.c96)IS(t0.c96)))>>(x''))) ORDER BY ((((t0.c96)LIKE(t0.c96))) NOT BETWEEN ((- (rt0.c0))) AND (((0.45035490788539745)OR(NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c96)IS(t0.c96)))>>(x''))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((t0.c96)LIKE(t0.c96))) NOT BETWEEN ((- (rt0.c0))) AND (((0.45035490788539745)OR(NULL))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((t0.c96)IS(t0.c96)))>>(x''))) ORDER BY ((((t0.c96)LIKE(t0.c96))) NOT BETWEEN ((- (rt0.c0))) AND (((0.45035490788539745)OR(NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c96)IS(t0.c96)))>>(x''))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((t0.c96)LIKE(t0.c96))) NOT BETWEEN ((- (rt0.c0))) AND (((0.45035490788539745)OR(NULL))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((t0.c96)IS(t0.c96)))>>(x''))) ORDER BY ((((t0.c96)LIKE(t0.c96))) NOT BETWEEN ((- (rt0.c0))) AND (((0.45035490788539745)OR(NULL))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_VERSION()) ORDER BY ((CAST(rt0.c2 AS REAL))IS((NOT (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS REAL))IS((NOT (rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_VERSION()) ORDER BY ((CAST(rt0.c2 AS REAL))IS((NOT (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS REAL))IS((NOT (rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_VERSION()) ORDER BY ((CAST(rt0.c2 AS REAL))IS((NOT (rt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CASE (vt1.c0 IN ())  WHEN ((((vt1.c0)OR('-110413379')))AND(vt1.c0)) THEN (('')IS(vt1.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) WHEN '1973343852' THEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, 0.11804529412436249))) WHEN vt1.c0 COLLATE BINARY THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)OR(vt1.c0)))AND('-1404077560')) THEN ((NULL)>(vt1.c0)) ELSE vt1.c0 COLLATE RTRIM END) ORDER BY ((CAST(vt1.c0 AS INTEGER))/(NULL)), ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (vt1.c0 IN ())  WHEN ((((vt1.c0)OR('-110413379')))AND(vt1.c0)) THEN (('')IS(vt1.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) WHEN '1973343852' THEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, 0.11804529412436249))) WHEN vt1.c0 COLLATE BINARY THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)OR(vt1.c0)))AND('-1404077560')) THEN ((NULL)>(vt1.c0)) ELSE vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER))/(NULL)), ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE (vt1.c0 IN ())  WHEN ((((vt1.c0)OR('-110413379')))AND(vt1.c0)) THEN (('')IS(vt1.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) WHEN '1973343852' THEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, 0.11804529412436249))) WHEN vt1.c0 COLLATE BINARY THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)OR(vt1.c0)))AND('-1404077560')) THEN ((NULL)>(vt1.c0)) ELSE vt1.c0 COLLATE RTRIM END) ORDER BY ((CAST(vt1.c0 AS INTEGER))/(NULL)), ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (vt1.c0 IN ())  WHEN ((((vt1.c0)OR('-110413379')))AND(vt1.c0)) THEN (('')IS(vt1.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) WHEN '1973343852' THEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, 0.11804529412436249))) WHEN vt1.c0 COLLATE BINARY THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)OR(vt1.c0)))AND('-1404077560')) THEN ((NULL)>(vt1.c0)) ELSE vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER))/(NULL)), ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE (vt1.c0 IN ())  WHEN ((((vt1.c0)OR('-110413379')))AND(vt1.c0)) THEN (('')IS(vt1.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) WHEN '1973343852' THEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, 0.11804529412436249))) WHEN vt1.c0 COLLATE BINARY THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)OR(vt1.c0)))AND('-1404077560')) THEN ((NULL)>(vt1.c0)) ELSE vt1.c0 COLLATE RTRIM END) ORDER BY ((CAST(vt1.c0 AS INTEGER))/(NULL)), ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) ISNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((vt1.c0 IN (t0.c48, rt0.c1)), ((((rt0.c2)AND(t0.c48)))OR(rt0.c1)), CAST(t0.c96 AS REAL)))>=((CAST(vt1.c0 AS INTEGER), ((rt0.c0) NOTNULL), (((rt0.c1)) NOT BETWEEN ((t0.c96)) AND ((rt0.c1)))))) CROSS JOIN vt1 ON ((((UPPER(rt0.c1))OR(((t0.c48) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c0)&(vt1.c0)))) WHERE (CAST(rt0.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((vt1.c0 IN (t0.c48, rt0.c1)), ((((rt0.c2)AND(t0.c48)))OR(rt0.c1)), CAST(t0.c96 AS REAL)))>=((CAST(vt1.c0 AS INTEGER), ((rt0.c0) NOTNULL), (((rt0.c1)) NOT BETWEEN ((t0.c96)) AND ((rt0.c1)))))) CROSS JOIN vt1 ON ((((UPPER(rt0.c1))OR(((t0.c48) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c0)&(vt1.c0)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((vt1.c0 IN (t0.c48, rt0.c1)), ((((rt0.c2)AND(t0.c48)))OR(rt0.c1)), CAST(t0.c96 AS REAL)))>=((CAST(vt1.c0 AS INTEGER), ((rt0.c0) NOTNULL), (((rt0.c1)) NOT BETWEEN ((t0.c96)) AND ((rt0.c1)))))) CROSS JOIN vt1 ON ((((UPPER(rt0.c1))OR(((t0.c48) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c0)&(vt1.c0)))) WHERE (CAST(rt0.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((vt1.c0 IN (t0.c48, rt0.c1)), ((((rt0.c2)AND(t0.c48)))OR(rt0.c1)), CAST(t0.c96 AS REAL)))>=((CAST(vt1.c0 AS INTEGER), ((rt0.c0) NOTNULL), (((rt0.c1)) NOT BETWEEN ((t0.c96)) AND ((rt0.c1)))))) CROSS JOIN vt1 ON ((((UPPER(rt0.c1))OR(((t0.c48) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c0)&(vt1.c0)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((vt1.c0 IN (t0.c48, rt0.c1)), ((((rt0.c2)AND(t0.c48)))OR(rt0.c1)), CAST(t0.c96 AS REAL)))>=((CAST(vt1.c0 AS INTEGER), ((rt0.c0) NOTNULL), (((rt0.c1)) NOT BETWEEN ((t0.c96)) AND ((rt0.c1)))))) CROSS JOIN vt1 ON ((((UPPER(rt0.c1))OR(((t0.c48) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c0)&(vt1.c0)))) WHERE (CAST(rt0.c0 AS BLOB) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((vt0.c0 IN (vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((vt0.c0 IN (vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((vt0.c0 IN (vt1.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (UNLIKELY(0.34547149746163475)) ORDER BY (((704622802)) NOT BETWEEN ((((vt1.c0)LIKE(vt0.c0)))) AND ((t0.c96))) DESC, ((1.866703097E9)IS NOT(t0.c48));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(0.34547149746163475)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((704622802)) NOT BETWEEN ((((vt1.c0)LIKE(vt0.c0)))) AND ((t0.c96))) DESC, ((1.866703097E9)IS NOT(t0.c48)));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (UNLIKELY(0.34547149746163475)) ORDER BY (((704622802)) NOT BETWEEN ((((vt1.c0)LIKE(vt0.c0)))) AND ((t0.c96))) DESC, ((1.866703097E9)IS NOT(t0.c48));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(0.34547149746163475)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((704622802)) NOT BETWEEN ((((vt1.c0)LIKE(vt0.c0)))) AND ((t0.c96))) DESC, ((1.866703097E9)IS NOT(t0.c48)));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (UNLIKELY(0.34547149746163475)) ORDER BY (((704622802)) NOT BETWEEN ((((vt1.c0)LIKE(vt0.c0)))) AND ((t0.c96))) DESC, ((1.866703097E9)IS NOT(t0.c48));
SELECT ALL * FROM t0 WHERE (((((t0.c48)GLOB(t0.c48))) IS TRUE)) ORDER BY ((((t0.c96)%(t0.c48)))OR(((((t0.c48)AND(t0.c96)))OR(t0.c48)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)GLOB(t0.c48))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c96)%(t0.c48)))OR(((((t0.c48)AND(t0.c96)))OR(t0.c48)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c48)GLOB(t0.c48))) IS TRUE)) ORDER BY ((((t0.c96)%(t0.c48)))OR(((((t0.c48)AND(t0.c96)))OR(t0.c48)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)GLOB(t0.c48))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c96)%(t0.c48)))OR(((((t0.c48)AND(t0.c96)))OR(t0.c48)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c48)GLOB(t0.c48))) IS TRUE)) ORDER BY ((((t0.c96)%(t0.c48)))OR(((((t0.c48)AND(t0.c96)))OR(t0.c48)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CASE '366349588'  WHEN ((((t0.c96)AND(t0.c96)))AND(t0.c48)) THEN ABS(t0.c48) ELSE (t0.c48 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE '366349588'  WHEN ((((t0.c96)AND(t0.c96)))AND(t0.c48)) THEN ABS(t0.c48) ELSE (t0.c48 IN ()) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE '366349588'  WHEN ((((t0.c96)AND(t0.c96)))AND(t0.c48)) THEN ABS(t0.c48) ELSE (t0.c48 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE '366349588'  WHEN ((((t0.c96)AND(t0.c96)))AND(t0.c48)) THEN ABS(t0.c48) ELSE (t0.c48 IN ()) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE '366349588'  WHEN ((((t0.c96)AND(t0.c96)))AND(t0.c48)) THEN ABS(t0.c48) ELSE (t0.c48 IN ()) END);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((((- (vt1.c0)))<(rt0.c1 COLLATE RTRIM))) ORDER BY ((((((((((((CAST(t0.c96 AS INTEGER))AND(((rt0.c1) ISNULL))))OR(((vt1.c0) NOT BETWEEN (x'') AND (rt0.c2)))))OR((((vt1.c0))<((vt1.c0))))))OR(((vt1.c0)<>(vt1.c0)))))OR('0.0')))OR(((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))<(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((((((((((((CAST(t0.c96 AS INTEGER))AND(((rt0.c1) ISNULL))))OR(((vt1.c0) NOT BETWEEN (x'') AND (rt0.c2)))))OR((((vt1.c0))<((vt1.c0))))))OR(((vt1.c0)!=(vt1.c0)))))OR('0.0')))OR(((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))) DESC);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((((- (vt1.c0)))<(rt0.c1 COLLATE RTRIM))) ORDER BY ((((((((((((CAST(t0.c96 AS INTEGER))AND(((rt0.c1) ISNULL))))OR(((vt1.c0) NOT BETWEEN (x'') AND (rt0.c2)))))OR((((vt1.c0))<((vt1.c0))))))OR(((vt1.c0)<>(vt1.c0)))))OR('0.0')))OR(((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))<(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((((((((((((CAST(t0.c96 AS INTEGER))AND(((rt0.c1) ISNULL))))OR(((vt1.c0) NOT BETWEEN (x'') AND (rt0.c2)))))OR((((vt1.c0))<((vt1.c0))))))OR(((vt1.c0)!=(vt1.c0)))))OR('0.0')))OR(((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))) DESC);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((((- (vt1.c0)))<(rt0.c1 COLLATE RTRIM))) ORDER BY ((((((((((((CAST(t0.c96 AS INTEGER))AND(((rt0.c1) ISNULL))))OR(((vt1.c0) NOT BETWEEN (x'') AND (rt0.c2)))))OR((((vt1.c0))<((vt1.c0))))))OR(((vt1.c0)<>(vt1.c0)))))OR('0.0')))OR(((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE NOCASE ELSE (- (vt0.c0)) END) ORDER BY (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST, x'' ASC, x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE NOCASE ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST, x'' ASC, x'');
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE NOCASE ELSE (- (vt0.c0)) END) ORDER BY (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST, x'' ASC, x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE NOCASE ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST, x'' ASC, x'');
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE NOCASE ELSE (- (vt0.c0)) END) ORDER BY (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST, x'' ASC, x'';
SELECT ALL * FROM rt0, vt0 WHERE (json_quote(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(vt0.c0)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (json_quote(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(vt0.c0)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) AND (rt0.c0))) ORDER BY '-2030989925'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) AND (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY '-2030989925'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) AND (rt0.c0))) ORDER BY '-2030989925'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) AND (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY '-2030989925'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) AND (rt0.c0))) ORDER BY '-2030989925'  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT ALL * FROM rt0, vt1, t0 WHERE (((CAST(rt0.c1 AS TEXT))/((t0.c48 IN ())))) ORDER BY TYPEOF(DISTINCT ((vt1.c0) NOT NULL)), LOWER(CASE WHEN t0.c48 THEN rt0.c2 ELSE vt1.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT))/((t0.c48 IN ())))) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, t0 ORDER BY TYPEOF(DISTINCT ((vt1.c0) NOT NULL)), LOWER(CASE WHEN t0.c48 THEN rt0.c2 ELSE vt1.c0 END) ASC);
SELECT ALL * FROM rt0, vt1, t0 WHERE (((CAST(rt0.c1 AS TEXT))/((t0.c48 IN ())))) ORDER BY TYPEOF(DISTINCT ((vt1.c0) NOT NULL)), LOWER(CASE WHEN t0.c48 THEN rt0.c2 ELSE vt1.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT))/((t0.c48 IN ())))) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, t0 ORDER BY TYPEOF(DISTINCT ((vt1.c0) NOT NULL)), LOWER(CASE WHEN t0.c48 THEN rt0.c2 ELSE vt1.c0 END) ASC);
SELECT ALL * FROM rt0, vt1, t0 WHERE (((CAST(rt0.c1 AS TEXT))/((t0.c48 IN ())))) ORDER BY TYPEOF(DISTINCT ((vt1.c0) NOT NULL)), LOWER(CASE WHEN t0.c48 THEN rt0.c2 ELSE vt1.c0 END) ASC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY))==((((rt0.c1)-(rt0.c2)))))) ORDER BY ((((CAST(rt0.c1 AS NUMERIC))AND(CASE WHEN rt0.c0 THEN 0.5497478470541999 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt0.c2)LIKE(rt0.c1)))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT (((rt0.c0))<>((rt0.c2))), 0.7386468938646835);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY))=((((rt0.c1)-(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c1 AS NUMERIC))AND(CASE WHEN rt0.c0 THEN 0.5497478470541999 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt0.c2)LIKE(rt0.c1)))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT (((rt0.c0))<>((rt0.c2))), 0.7386468938646835));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY))==((((rt0.c1)-(rt0.c2)))))) ORDER BY ((((CAST(rt0.c1 AS NUMERIC))AND(CASE WHEN rt0.c0 THEN 0.5497478470541999 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt0.c2)LIKE(rt0.c1)))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT (((rt0.c0))<>((rt0.c2))), 0.7386468938646835);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY))=((((rt0.c1)-(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c1 AS NUMERIC))AND(CASE WHEN rt0.c0 THEN 0.5497478470541999 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt0.c2)LIKE(rt0.c1)))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT (((rt0.c0))<>((rt0.c2))), 0.7386468938646835));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY))==((((rt0.c1)-(rt0.c2)))))) ORDER BY ((((CAST(rt0.c1 AS NUMERIC))AND(CASE WHEN rt0.c0 THEN 0.5497478470541999 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt0.c2)LIKE(rt0.c1)))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT (((rt0.c0))<>((rt0.c2))), 0.7386468938646835);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM)==((((vt0.c0))<=((rt0.c2))))) RIGHT OUTER JOIN rt0 ON ((((vt0.c0)<<(rt0.c1))) IS FALSE) WHERE (((rt0.c0)||(rt0.c1)) COLLATE NOCASE) ORDER BY (NOT (CASE WHEN vt1.c0 THEN -5.032256E7 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)||(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM)=((((vt0.c0))<=((rt0.c2))))) RIGHT OUTER JOIN rt0 ON ((((vt0.c0)<<(rt0.c1))) IS FALSE) ORDER BY (NOT (CASE WHEN vt1.c0 THEN -5.032256E7 END)) ASC);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM)==((((vt0.c0))<=((rt0.c2))))) RIGHT OUTER JOIN rt0 ON ((((vt0.c0)<<(rt0.c1))) IS FALSE) WHERE (((rt0.c0)||(rt0.c1)) COLLATE NOCASE) ORDER BY (NOT (CASE WHEN vt1.c0 THEN -5.032256E7 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)||(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM)=((((vt0.c0))<=((rt0.c2))))) RIGHT OUTER JOIN rt0 ON ((((vt0.c0)<<(rt0.c1))) IS FALSE) ORDER BY (NOT (CASE WHEN vt1.c0 THEN -5.032256E7 END)) ASC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON 0.9303673647137212 LEFT OUTER JOIN t0 ON x'' WHERE ((((vt1.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN t0.c96 END)) AND ((((((vt0.c0)AND(t0.c96)))OR(-1667974029)))))) ORDER BY CASE ((vt1.c0) ISNULL)  WHEN vt1.c0 COLLATE RTRIM THEN ((t0.c48)>(NULL)) ELSE (+ (t0.c96)) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN t0.c96 END)) AND ((((((vt0.c0)AND(t0.c96)))OR(-1667974029)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON 0.9303673647137212 LEFT OUTER JOIN t0 ON x'' ORDER BY CASE ((vt1.c0) ISNULL)  WHEN vt1.c0 COLLATE RTRIM THEN ((t0.c48)>(NULL)) ELSE (+ (t0.c96)) END);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON 0.9303673647137212 LEFT OUTER JOIN t0 ON x'' WHERE ((((vt1.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN t0.c96 END)) AND ((((((vt0.c0)AND(t0.c96)))OR(-1667974029)))))) ORDER BY CASE ((vt1.c0) ISNULL)  WHEN vt1.c0 COLLATE RTRIM THEN ((t0.c48)>(NULL)) ELSE (+ (t0.c96)) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN t0.c96 END)) AND ((((((vt0.c0)AND(t0.c96)))OR(-1667974029)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON 0.9303673647137212 LEFT OUTER JOIN t0 ON x'' ORDER BY CASE ((vt1.c0) ISNULL)  WHEN vt1.c0 COLLATE RTRIM THEN ((t0.c48)>(NULL)) ELSE (+ (t0.c96)) END);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON 0.9303673647137212 LEFT OUTER JOIN t0 ON x'' WHERE ((((vt1.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN t0.c96 END)) AND ((((((vt0.c0)AND(t0.c96)))OR(-1667974029)))))) ORDER BY CASE ((vt1.c0) ISNULL)  WHEN vt1.c0 COLLATE RTRIM THEN ((t0.c48)>(NULL)) ELSE (+ (t0.c96)) END;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0 IN (vt0.c0, t0.c48))) ISNULL)) ORDER BY UNLIKELY(((vt0.c0)GLOB(t0.c48))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, t0.c48))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY UNLIKELY(((vt0.c0)GLOB(t0.c48))) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0 IN (vt0.c0, t0.c48))) ISNULL)) ORDER BY UNLIKELY(((vt0.c0)GLOB(t0.c48))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, t0.c48))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY UNLIKELY(((vt0.c0)GLOB(t0.c48))) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0 IN (vt0.c0, t0.c48))) ISNULL)) ORDER BY UNLIKELY(((vt0.c0)GLOB(t0.c48))) DESC;
SELECT ALL * FROM t0, rt0 WHERE (((json_quote(rt0.c0))>=((+ (t0.c96)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(rt0.c0))>=((+ (t0.c96))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((json_quote(rt0.c0))>=((+ (t0.c96)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(rt0.c0))>=((+ (t0.c96))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((json_quote(rt0.c0))>=((+ (t0.c96)))));
SELECT ALL * FROM t0 WHERE (((t0.c48) IS FALSE)) ORDER BY ((((((((((t0.c48)OR(t0.c96)))AND(t0.c48)))AND(NULL)))OR(t0.c96))) NOT NULL) DESC  NULLS FIRST, ((((t0.c96)OR(t0.c48)))AND(LOWER(t0.c96)));
SELECT SUM(count) FROM (SELECT ((((t0.c48) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c48)OR(t0.c96)))AND(t0.c48)))AND(NULL)))OR(t0.c96))) NOT NULL) DESC  NULLS FIRST, ((((t0.c96)OR(t0.c48)))AND(LOWER(t0.c96))));
SELECT ALL * FROM t0 WHERE (((t0.c48) IS FALSE)) ORDER BY ((((((((((t0.c48)OR(t0.c96)))AND(t0.c48)))AND(NULL)))OR(t0.c96))) NOT NULL) DESC  NULLS FIRST, ((((t0.c96)OR(t0.c48)))AND(LOWER(t0.c96)));
SELECT SUM(count) FROM (SELECT ((((t0.c48) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c48)OR(t0.c96)))AND(t0.c48)))AND(NULL)))OR(t0.c96))) NOT NULL) DESC  NULLS FIRST, ((((t0.c96)OR(t0.c48)))AND(LOWER(t0.c96))));
SELECT ALL * FROM t0 WHERE (((t0.c48) IS FALSE)) ORDER BY ((((((((((t0.c48)OR(t0.c96)))AND(t0.c48)))AND(NULL)))OR(t0.c96))) NOT NULL) DESC  NULLS FIRST, ((((t0.c96)OR(t0.c48)))AND(LOWER(t0.c96)));
SELECT ALL * FROM t0 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c0 THEN 0x6a2ea258 END)OR(LIKE(t0.c96, t0.c48))) WHERE (((CASE t0.c48  WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN vt1.c0 ELSE t0.c96 END) NOT BETWEEN (((vt1.c0) BETWEEN (t0.c96) AND (t0.c96))) AND (0xffffffffdf2b1b35)));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c48  WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN vt1.c0 ELSE t0.c96 END) NOT BETWEEN (((vt1.c0) BETWEEN (t0.c96) AND (t0.c96))) AND (0Xffffffffdf2b1b35))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c0 THEN 0X6a2ea258 END)OR(LIKE(t0.c96, t0.c48))));
SELECT ALL * FROM t0 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c0 THEN 0x6a2ea258 END)OR(LIKE(t0.c96, t0.c48))) WHERE (((CASE t0.c48  WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN vt1.c0 ELSE t0.c96 END) NOT BETWEEN (((vt1.c0) BETWEEN (t0.c96) AND (t0.c96))) AND (0xffffffffdf2b1b35)));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c48  WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN vt1.c0 ELSE t0.c96 END) NOT BETWEEN (((vt1.c0) BETWEEN (t0.c96) AND (t0.c96))) AND (0Xffffffffdf2b1b35))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c0 THEN 0X6a2ea258 END)OR(LIKE(t0.c96, t0.c48))));
SELECT ALL * FROM t0 INNER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c0 THEN 0x6a2ea258 END)OR(LIKE(t0.c96, t0.c48))) WHERE (((CASE t0.c48  WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN t0.c96 WHEN t0.c48 THEN vt1.c0 ELSE t0.c96 END) NOT BETWEEN (((vt1.c0) BETWEEN (t0.c96) AND (t0.c96))) AND (0xffffffffdf2b1b35)));
SELECT ALL * FROM t0, vt1, rt0 WHERE ((NOT (((t0.c96) IS FALSE)))) ORDER BY (((t0.c48)>(t0.c96)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c96) IS FALSE)))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY (((t0.c48)>(t0.c96)) IN ()) DESC);
SELECT ALL * FROM t0, vt1, rt0 WHERE ((NOT (((t0.c96) IS FALSE)))) ORDER BY (((t0.c48)>(t0.c96)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c96) IS FALSE)))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY (((t0.c48)>(t0.c96)) IN ()) DESC);
SELECT ALL * FROM t0, vt1, rt0 WHERE ((NOT (((t0.c96) IS FALSE)))) ORDER BY (((t0.c48)>(t0.c96)) IN ()) DESC;
SELECT * FROM vt1, rt0 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN 0.3316500476442853 ELSE rt0.c0 END)AND((((rt0.c0, rt0.c0, rt0.c2))!=((rt0.c2, rt0.c0, rt0.c2))))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt1.c0  WHEN vt1.c0 THEN 0.3316500476442853 ELSE rt0.c0 END)AND((((rt0.c0, rt0.c0, rt0.c2))<>((rt0.c2, rt0.c0, rt0.c2))))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN 0.3316500476442853 ELSE rt0.c0 END)AND((((rt0.c0, rt0.c0, rt0.c2))!=((rt0.c2, rt0.c0, rt0.c2))))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt1.c0  WHEN vt1.c0 THEN 0.3316500476442853 ELSE rt0.c0 END)AND((((rt0.c0, rt0.c0, rt0.c2))<>((rt0.c2, rt0.c0, rt0.c2))))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN 0.3316500476442853 ELSE rt0.c0 END)AND((((rt0.c0, rt0.c0, rt0.c2))!=((rt0.c2, rt0.c0, rt0.c2))))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)))));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (t0.c96 IN (t0.c96)) THEN ((t0.c96) NOT BETWEEN (t0.c48) AND (t0.c96)) END) ORDER BY (((((~ (t0.c48)))OR(((t0.c48) BETWEEN (t0.c48) AND (t0.c48)))))AND('|oeh8\r')) DESC, ((((t0.c48)/(x''))) BETWEEN (((((t0.c48)OR(t0.c48)))AND(t0.c96))) AND (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c96 IN (t0.c96)) THEN ((t0.c96) NOT BETWEEN (t0.c48) AND (t0.c96)) END) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((((~ (t0.c48)))OR(((t0.c48) BETWEEN (t0.c48) AND (t0.c48)))))AND('|oeh8\r')) DESC, ((((t0.c48)/(x''))) BETWEEN (((((t0.c48)OR(t0.c48)))AND(t0.c96))) AND (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (t0.c96 IN (t0.c96)) THEN ((t0.c96) NOT BETWEEN (t0.c48) AND (t0.c96)) END) ORDER BY (((((~ (t0.c48)))OR(((t0.c48) BETWEEN (t0.c48) AND (t0.c48)))))AND('|oeh8\r')) DESC, ((((t0.c48)/(x''))) BETWEEN (((((t0.c48)OR(t0.c48)))AND(t0.c96))) AND (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c96 IN (t0.c96)) THEN ((t0.c96) NOT BETWEEN (t0.c48) AND (t0.c96)) END) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((((~ (t0.c48)))OR(((t0.c48) BETWEEN (t0.c48) AND (t0.c48)))))AND('|oeh8\r')) DESC, ((((t0.c48)/(x''))) BETWEEN (((((t0.c48)OR(t0.c48)))AND(t0.c96))) AND (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (t0.c96 IN (t0.c96)) THEN ((t0.c96) NOT BETWEEN (t0.c48) AND (t0.c96)) END) ORDER BY (((((~ (t0.c48)))OR(((t0.c48) BETWEEN (t0.c48) AND (t0.c48)))))AND('|oeh8\r')) DESC, ((((t0.c48)/(x''))) BETWEEN (((((t0.c48)OR(t0.c48)))AND(t0.c96))) AND (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (LAST_INSERT_ROWID());
SELECT ALL * FROM vt1, t0, rt0, vt0 NOT INDEXED WHERE (((CAST(rt0.c0 AS TEXT)) IS TRUE)) ORDER BY ((t0.c96) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN rt0.c2 ELSE t0.c48 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY ((t0.c96) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN rt0.c2 ELSE t0.c48 END))  NULLS LAST);
SELECT ALL * FROM vt1, t0, rt0, vt0 NOT INDEXED WHERE (((CAST(rt0.c0 AS TEXT)) IS TRUE)) ORDER BY ((t0.c96) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN rt0.c2 ELSE t0.c48 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY ((t0.c96) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN rt0.c2 ELSE t0.c48 END))  NULLS LAST);
SELECT ALL * FROM vt1, t0, rt0, vt0 NOT INDEXED WHERE (((CAST(rt0.c0 AS TEXT)) IS TRUE)) ORDER BY ((t0.c96) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN rt0.c2 ELSE t0.c48 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, '51832078')) AND ((rt0.c2, rt0.c0, rt0.c2))))!=(rt0.c2 COLLATE RTRIM))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) ISNULL);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, '51832078')) AND ((rt0.c2, rt0.c0, rt0.c2))))!=(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c1 AS INTEGER)) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, '51832078')) AND ((rt0.c2, rt0.c0, rt0.c2))))!=(rt0.c2 COLLATE RTRIM))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) ISNULL);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, '51832078')) AND ((rt0.c2, rt0.c0, rt0.c2))))!=(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c1 AS INTEGER)) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, '51832078')) AND ((rt0.c2, rt0.c0, rt0.c2))))!=(rt0.c2 COLLATE RTRIM))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) ISNULL);
SELECT * FROM t0, vt1 WHERE (((((t0.c48) ISNULL)) NOTNULL)) ORDER BY x'' ASC  NULLS LAST, (t0.c96 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48) ISNULL)) NOTNULL)) IS TRUE)  as count FROM t0, vt1 ORDER BY x'' ASC  NULLS LAST, (t0.c96 IN ()) ASC  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (((((t0.c48) ISNULL)) NOTNULL)) ORDER BY x'' ASC  NULLS LAST, (t0.c96 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48) ISNULL)) NOTNULL)) IS TRUE)  as count FROM t0, vt1 ORDER BY x'' ASC  NULLS LAST, (t0.c96 IN ()) ASC  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (((((t0.c48) ISNULL)) NOTNULL)) ORDER BY x'' ASC  NULLS LAST, (t0.c96 IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1))<>((rt0.c2)))) BETWEEN ('1421121959') AND (((rt0.c1)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<>((rt0.c2)))) BETWEEN ('1421121959') AND (((rt0.c1)&(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1))<>((rt0.c2)))) BETWEEN ('1421121959') AND (((rt0.c1)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<>((rt0.c2)))) BETWEEN ('1421121959') AND (((rt0.c1)&(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1))<>((rt0.c2)))) BETWEEN ('1421121959') AND (((rt0.c1)&(rt0.c2)))));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON (((t0.c48 IN ()))-(((((((((((((rt0.c0)AND(rt0.c0)))OR(t0.c48)))OR(t0.c96)))AND(vt1.c0)))OR(vt1.c0)))AND(rt0.c1)))) FULL OUTER JOIN t0 ON (((((vt0.c0, NULL, rt0.c1)) BETWEEN ((t0.c96, rt0.c2, t0.c96)) AND ((rt0.c0, vt1.c0, rt0.c1)))) NOT BETWEEN (CAST(t0.c48 AS REAL)) AND ('2069722267')) RIGHT OUTER JOIN vt0 ON (rt0.c1 IN ((((rt0.c1, vt0.c0, rt0.c1))=((t0.c48, rt0.c1, rt0.c2))))) WHERE (((rt0.c0)AND(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((t0.c48 IN ()))-(((((((((((((rt0.c0)AND(rt0.c0)))OR(t0.c48)))OR(t0.c96)))AND(vt1.c0)))OR(vt1.c0)))AND(rt0.c1)))) FULL OUTER JOIN t0 ON (((((vt0.c0, NULL, rt0.c1)) BETWEEN ((t0.c96, rt0.c2, t0.c96)) AND ((rt0.c0, vt1.c0, rt0.c1)))) NOT BETWEEN (CAST(t0.c48 AS REAL)) AND ('2069722267')) RIGHT OUTER JOIN vt0 ON (rt0.c1 IN ((((rt0.c1, vt0.c0, rt0.c1))==((t0.c48, rt0.c1, rt0.c2))))));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON (((t0.c48 IN ()))-(((((((((((((rt0.c0)AND(rt0.c0)))OR(t0.c48)))OR(t0.c96)))AND(vt1.c0)))OR(vt1.c0)))AND(rt0.c1)))) FULL OUTER JOIN t0 ON (((((vt0.c0, NULL, rt0.c1)) BETWEEN ((t0.c96, rt0.c2, t0.c96)) AND ((rt0.c0, vt1.c0, rt0.c1)))) NOT BETWEEN (CAST(t0.c48 AS REAL)) AND ('2069722267')) RIGHT OUTER JOIN vt0 ON (rt0.c1 IN ((((rt0.c1, vt0.c0, rt0.c1))=((t0.c48, rt0.c1, rt0.c2))))) WHERE (((rt0.c0)AND(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((t0.c48 IN ()))-(((((((((((((rt0.c0)AND(rt0.c0)))OR(t0.c48)))OR(t0.c96)))AND(vt1.c0)))OR(vt1.c0)))AND(rt0.c1)))) FULL OUTER JOIN t0 ON (((((vt0.c0, NULL, rt0.c1)) BETWEEN ((t0.c96, rt0.c2, t0.c96)) AND ((rt0.c0, vt1.c0, rt0.c1)))) NOT BETWEEN (CAST(t0.c48 AS REAL)) AND ('2069722267')) RIGHT OUTER JOIN vt0 ON (rt0.c1 IN ((((rt0.c1, vt0.c0, rt0.c1))==((t0.c48, rt0.c1, rt0.c2))))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c96 COLLATE RTRIM) NOTNULL)) ORDER BY (((((t0.c96)AND(t0.c96)))AND(t0.c96)) IN ())  NULLS FIRST, ((((((vt0.c0)<<(vt0.c0)))OR(((t0.c96) IS FALSE))))AND((((t0.c96, t0.c96, t0.c96))>=((t0.c96, x'', t0.c48)))));
SELECT SUM(count) FROM (SELECT ((((t0.c96 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c96)AND(t0.c96)))AND(t0.c96)) IN ())  NULLS FIRST, ((((((vt0.c0)<<(vt0.c0)))OR(((t0.c96) IS FALSE))))AND((((t0.c96, t0.c96, t0.c96))>=((t0.c96, x'', t0.c48))))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c96 COLLATE RTRIM) NOTNULL)) ORDER BY (((((t0.c96)AND(t0.c96)))AND(t0.c96)) IN ())  NULLS FIRST, ((((((vt0.c0)<<(vt0.c0)))OR(((t0.c96) IS FALSE))))AND((((t0.c96, t0.c96, t0.c96))>=((t0.c96, x'', t0.c48)))));
SELECT SUM(count) FROM (SELECT ((((t0.c96 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c96)AND(t0.c96)))AND(t0.c96)) IN ())  NULLS FIRST, ((((((vt0.c0)<<(vt0.c0)))OR(((t0.c96) IS FALSE))))AND((((t0.c96, t0.c96, t0.c96))>=((t0.c96, x'', t0.c48))))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c96 COLLATE RTRIM) NOTNULL)) ORDER BY (((((t0.c96)AND(t0.c96)))AND(t0.c96)) IN ())  NULLS FIRST, ((((((vt0.c0)<<(vt0.c0)))OR(((t0.c96) IS FALSE))))AND((((t0.c96, t0.c96, t0.c96))>=((t0.c96, x'', t0.c48)))));
SELECT ALL * FROM t0 WHERE (((((((((t0.c96)AND(t0.c96)))AND(t0.c48)))OR(COALESCE(t0.c48, t0.c96, t0.c96, t0.c48))))AND((((t0.c48, x'', t0.c48))<=((t0.c96, t0.c48, t0.c96))))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c96)AND(t0.c96)))AND(t0.c48)))OR(COALESCE(t0.c48, t0.c96, t0.c96, t0.c48))))AND((((t0.c48, x'', t0.c48))<=((t0.c96, t0.c48, t0.c96)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((t0.c96)AND(t0.c96)))AND(t0.c48)))OR(COALESCE(t0.c48, t0.c96, t0.c96, t0.c48))))AND((((t0.c48, x'', t0.c48))<=((t0.c96, t0.c48, t0.c96))))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c96)AND(t0.c96)))AND(t0.c48)))OR(COALESCE(t0.c48, t0.c96, t0.c96, t0.c48))))AND((((t0.c48, x'', t0.c48))<=((t0.c96, t0.c48, t0.c96)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((t0.c96)AND(t0.c96)))AND(t0.c48)))OR(COALESCE(t0.c48, t0.c96, t0.c96, t0.c48))))AND((((t0.c48, x'', t0.c48))<=((t0.c96, t0.c48, t0.c96))))));
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((- (t0.c48)))OR((((vt1.c0))>=((t0.c96))))))OR(CASE WHEN vt1.c0 THEN NULL WHEN t0.c96 THEN vt1.c0 WHEN t0.c96 THEN 'ߜ6' END))) ORDER BY ((((t0.c48) BETWEEN (vt1.c0) AND (t0.c48)))-(t0.c48)) ASC  NULLS LAST, ((((vt1.c0) NOTNULL)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((((((- (t0.c48)))OR((((vt1.c0))>=((t0.c96))))))OR(CASE WHEN vt1.c0 THEN NULL WHEN t0.c96 THEN vt1.c0 WHEN t0.c96 THEN 'ߜ6' END))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((t0.c48) BETWEEN (vt1.c0) AND (t0.c48)))-(t0.c48)) ASC  NULLS LAST, ((((vt1.c0) NOTNULL)) IS TRUE) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((- (t0.c48)))OR((((vt1.c0))>=((t0.c96))))))OR(CASE WHEN vt1.c0 THEN NULL WHEN t0.c96 THEN vt1.c0 WHEN t0.c96 THEN 'ߜ6' END))) ORDER BY ((((t0.c48) BETWEEN (vt1.c0) AND (t0.c48)))-(t0.c48)) ASC  NULLS LAST, ((((vt1.c0) NOTNULL)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((((((- (t0.c48)))OR((((vt1.c0))>=((t0.c96))))))OR(CASE WHEN vt1.c0 THEN NULL WHEN t0.c96 THEN vt1.c0 WHEN t0.c96 THEN 'ߜ6' END))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((t0.c48) BETWEEN (vt1.c0) AND (t0.c48)))-(t0.c48)) ASC  NULLS LAST, ((((vt1.c0) NOTNULL)) IS TRUE) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((- (t0.c48)))OR((((vt1.c0))>=((t0.c96))))))OR(CASE WHEN vt1.c0 THEN NULL WHEN t0.c96 THEN vt1.c0 WHEN t0.c96 THEN 'ߜ6' END))) ORDER BY ((((t0.c48) BETWEEN (vt1.c0) AND (t0.c48)))-(t0.c48)) ASC  NULLS LAST, ((((vt1.c0) NOTNULL)) IS TRUE) ASC;
SELECT COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c0)%(vt0.c0)))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE) ASC);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c0)%(vt0.c0)))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE) ASC);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c0)%(vt0.c0)))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (json_patch(((rt0.c1)AND(rt0.c0)), (rt0.c2 IN ()))) ORDER BY (load_extension(rt0.c1, NULL) IN (rt0.c1 COLLATE NOCASE)) ASC  NULLS LAST, CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((json_patch(((rt0.c1)AND(rt0.c0)), (rt0.c2 IN ()))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (load_extension(rt0.c1, NULL) IN (rt0.c1 COLLATE NOCASE)) ASC  NULLS LAST, CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (json_patch(((rt0.c1)AND(rt0.c0)), (rt0.c2 IN ()))) ORDER BY (load_extension(rt0.c1, NULL) IN (rt0.c1 COLLATE NOCASE)) ASC  NULLS LAST, CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((json_patch(((rt0.c1)AND(rt0.c0)), (rt0.c2 IN ()))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (load_extension(rt0.c1, NULL) IN (rt0.c1 COLLATE NOCASE)) ASC  NULLS LAST, CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)) AS BLOB));
SELECT * FROM t0, vt1, vt0, rt0 WHERE (vt1.c0) ORDER BY ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE, (((t0.c96)>=(t0.c48)) IN ((((x'')) BETWEEN ((rt0.c0)) AND ((t0.c96))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE, (((t0.c96)>=(t0.c48)) IN ((((x'')) BETWEEN ((rt0.c0)) AND ((t0.c96))))) ASC);
SELECT * FROM t0, vt1, vt0, rt0 WHERE (vt1.c0) ORDER BY ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE, (((t0.c96)>=(t0.c48)) IN ((((x'')) BETWEEN ((rt0.c0)) AND ((t0.c96))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE, (((t0.c96)>=(t0.c48)) IN ((((x'')) BETWEEN ((rt0.c0)) AND ((t0.c96))))) ASC);
SELECT * FROM t0, vt1, vt0, rt0 WHERE (vt1.c0) ORDER BY ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE, (((t0.c96)>=(t0.c48)) IN ((((x'')) BETWEEN ((rt0.c0)) AND ((t0.c96))))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.5024613106994803)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.5024613106994803)) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.5024613106994803)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.5024613106994803)) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.5024613106994803)) AS TEXT) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((- (((vt0.c0)OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)OR(rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((- (((vt0.c0)OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)OR(rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((- (((vt0.c0)OR(rt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY ((UPPER(vt0.c0))&(((vt0.c0) BETWEEN (vt0.c0) AND (0.11030830171341799)))) ASC, vt0.c0  NULLS FIRST, CAST(((vt0.c0)IS(vt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((UPPER(vt0.c0))&(((vt0.c0) BETWEEN (vt0.c0) AND (0.11030830171341799)))) ASC, vt0.c0  NULLS FIRST, CAST(((vt0.c0)IS(vt0.c0)) AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY ((UPPER(vt0.c0))&(((vt0.c0) BETWEEN (vt0.c0) AND (0.11030830171341799)))) ASC, vt0.c0  NULLS FIRST, CAST(((vt0.c0)IS(vt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((UPPER(vt0.c0))&(((vt0.c0) BETWEEN (vt0.c0) AND (0.11030830171341799)))) ASC, vt0.c0  NULLS FIRST, CAST(((vt0.c0)IS(vt0.c0)) AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY ((UPPER(vt0.c0))&(((vt0.c0) BETWEEN (vt0.c0) AND (0.11030830171341799)))) ASC, vt0.c0  NULLS FIRST, CAST(((vt0.c0)IS(vt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(json_array_length(t0.c96) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_array_length(t0.c96) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(json_array_length(t0.c96) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_array_length(t0.c96) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(json_array_length(t0.c96) AS BLOB));
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((((((t0.c96)AND(vt0.c0))))<=(((+ (vt0.c0)))))) ORDER BY (((CAST(x'' AS TEXT)))<=((((t0.c48) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((t0.c96)AND(vt0.c0))))<=(((+ (vt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY (((CAST(x'' AS TEXT)))<=((((t0.c48) NOT NULL)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((((((t0.c96)AND(vt0.c0))))<=(((+ (vt0.c0)))))) ORDER BY (((CAST(x'' AS TEXT)))<=((((t0.c48) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((t0.c96)AND(vt0.c0))))<=(((+ (vt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY (((CAST(x'' AS TEXT)))<=((((t0.c48) NOT NULL)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((((((t0.c96)AND(vt0.c0))))<=(((+ (vt0.c0)))))) ORDER BY (((CAST(x'' AS TEXT)))<=((((t0.c48) NOT NULL))));
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON CAST(((vt1.c0)<=(rt0.c1)) AS INTEGER) LEFT OUTER JOIN vt1 ON ((((t0.c48) BETWEEN (t0.c48) AND (t0.c48))) BETWEEN (((0.6068340412589391)>>(vt0.c0))) AND (((rt0.c1)&(t0.c96)))) WHERE ((((rt0.c1)AND(vt1.c0)) IN (CAST(rt0.c1 AS REAL), (+ (t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)AND(vt1.c0)) IN (CAST(rt0.c1 AS REAL), (+ (t0.c48))))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON CAST(((vt1.c0)<=(rt0.c1)) AS INTEGER) LEFT OUTER JOIN vt1 ON ((((t0.c48) BETWEEN (t0.c48) AND (t0.c48))) BETWEEN (((0.6068340412589391)>>(vt0.c0))) AND (((rt0.c1)&(t0.c96)))));
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON CAST(((vt1.c0)<=(rt0.c1)) AS INTEGER) LEFT OUTER JOIN vt1 ON ((((t0.c48) BETWEEN (t0.c48) AND (t0.c48))) BETWEEN (((0.6068340412589391)>>(vt0.c0))) AND (((rt0.c1)&(t0.c96)))) WHERE ((((rt0.c1)AND(vt1.c0)) IN (CAST(rt0.c1 AS REAL), (+ (t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)AND(vt1.c0)) IN (CAST(rt0.c1 AS REAL), (+ (t0.c48))))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON CAST(((vt1.c0)<=(rt0.c1)) AS INTEGER) LEFT OUTER JOIN vt1 ON ((((t0.c48) BETWEEN (t0.c48) AND (t0.c48))) BETWEEN (((0.6068340412589391)>>(vt0.c0))) AND (((rt0.c1)&(t0.c96)))));
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON CAST(((vt1.c0)<=(rt0.c1)) AS INTEGER) LEFT OUTER JOIN vt1 ON ((((t0.c48) BETWEEN (t0.c48) AND (t0.c48))) BETWEEN (((0.6068340412589391)>>(vt0.c0))) AND (((rt0.c1)&(t0.c96)))) WHERE ((((rt0.c1)AND(vt1.c0)) IN (CAST(rt0.c1 AS REAL), (+ (t0.c48)))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((((((((((((vt0.c0) BETWEEN (vt1.c0) AND (t0.c96)))AND(CAST(t0.c48 AS BLOB))))AND('o\r')))OR(((vt1.c0) IS FALSE))))AND((x'' IN ()))))OR(LTRIM(t0.c96, t0.c48))))AND((+ ('x!'))))) ORDER BY (+ (((((((((vt1.c0)OR(t0.c96)))AND(t0.c96)))OR(t0.c96)))OR(t0.c48)))), vt1.c0, (((t0.c48 IN ())) BETWEEN (CASE WHEN vt1.c0 THEN t0.c48 WHEN t0.c96 THEN t0.c48 WHEN t0.c96 THEN vt1.c0 ELSE vt0.c0 END) AND ((- (t0.c96)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0) BETWEEN (vt1.c0) AND (t0.c96)))AND(CAST(t0.c48 AS BLOB))))AND('o\r')))OR(((vt1.c0) IS FALSE))))AND((x'' IN ()))))OR(LTRIM(t0.c96, t0.c48))))AND((+ ('x!'))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (+ (((((((((vt1.c0)OR(t0.c96)))AND(t0.c96)))OR(t0.c96)))OR(t0.c48)))), vt1.c0, (((t0.c48 IN ())) BETWEEN (CASE WHEN vt1.c0 THEN t0.c48 WHEN t0.c96 THEN t0.c48 WHEN t0.c96 THEN vt1.c0 ELSE vt0.c0 END) AND ((- (t0.c96)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((((((((((((vt0.c0) BETWEEN (vt1.c0) AND (t0.c96)))AND(CAST(t0.c48 AS BLOB))))AND('o\r')))OR(((vt1.c0) IS FALSE))))AND((x'' IN ()))))OR(LTRIM(t0.c96, t0.c48))))AND((+ ('x!'))))) ORDER BY (+ (((((((((vt1.c0)OR(t0.c96)))AND(t0.c96)))OR(t0.c96)))OR(t0.c48)))), vt1.c0, (((t0.c48 IN ())) BETWEEN (CASE WHEN vt1.c0 THEN t0.c48 WHEN t0.c96 THEN t0.c48 WHEN t0.c96 THEN vt1.c0 ELSE vt0.c0 END) AND ((- (t0.c96)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0) BETWEEN (vt1.c0) AND (t0.c96)))AND(CAST(t0.c48 AS BLOB))))AND('o\r')))OR(((vt1.c0) IS FALSE))))AND((x'' IN ()))))OR(LTRIM(t0.c96, t0.c48))))AND((+ ('x!'))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (+ (((((((((vt1.c0)OR(t0.c96)))AND(t0.c96)))OR(t0.c96)))OR(t0.c48)))), vt1.c0, (((t0.c48 IN ())) BETWEEN (CASE WHEN vt1.c0 THEN t0.c48 WHEN t0.c96 THEN t0.c48 WHEN t0.c96 THEN vt1.c0 ELSE vt0.c0 END) AND ((- (t0.c96)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((((((((((((vt0.c0) BETWEEN (vt1.c0) AND (t0.c96)))AND(CAST(t0.c48 AS BLOB))))AND('o\r')))OR(((vt1.c0) IS FALSE))))AND((x'' IN ()))))OR(LTRIM(t0.c96, t0.c48))))AND((+ ('x!'))))) ORDER BY (+ (((((((((vt1.c0)OR(t0.c96)))AND(t0.c96)))OR(t0.c96)))OR(t0.c48)))), vt1.c0, (((t0.c48 IN ())) BETWEEN (CASE WHEN vt1.c0 THEN t0.c48 WHEN t0.c96 THEN t0.c48 WHEN t0.c96 THEN vt1.c0 ELSE vt0.c0 END) AND ((- (t0.c96)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i67 LEFT OUTER JOIN rt0 ON ((NULL) BETWEEN (rt0.c0 COLLATE BINARY) AND (rt0.c1)) FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((((x'a83f') ISNULL))) AND ((CAST(rt0.c2 AS TEXT)))) WHERE ((((NOT (rt0.c1))) IS TRUE)) ORDER BY ((CAST(rt0.c1 AS TEXT))!=((vt1.c0 IN (NULL, 2.100603887E9)))), UNLIKELY(DISTINCT rt0.c2) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0 INDEXED BY i67 LEFT OUTER JOIN rt0 ON ((NULL) BETWEEN (rt0.c0 COLLATE BINARY) AND (rt0.c1)) FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((((x'a83f') ISNULL))) AND ((CAST(rt0.c2 AS TEXT)))) ORDER BY ((CAST(rt0.c1 AS TEXT))<>((vt1.c0 IN (NULL, 2.100603887E9)))), UNLIKELY(DISTINCT rt0.c2) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i67 LEFT OUTER JOIN rt0 ON ((NULL) BETWEEN (rt0.c0 COLLATE BINARY) AND (rt0.c1)) FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((((x'a83f') ISNULL))) AND ((CAST(rt0.c2 AS TEXT)))) WHERE ((((NOT (rt0.c1))) IS TRUE)) ORDER BY ((CAST(rt0.c1 AS TEXT))!=((vt1.c0 IN (NULL, 2.100603887E9)))), UNLIKELY(DISTINCT rt0.c2) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0 INDEXED BY i67 LEFT OUTER JOIN rt0 ON ((NULL) BETWEEN (rt0.c0 COLLATE BINARY) AND (rt0.c1)) FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((((x'a83f') ISNULL))) AND ((CAST(rt0.c2 AS TEXT)))) ORDER BY ((CAST(rt0.c1 AS TEXT))<>((vt1.c0 IN (NULL, 2.100603887E9)))), UNLIKELY(DISTINCT rt0.c2) COLLATE BINARY);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c0))))<>((((rt0.c0)||(rt0.c2)))))) ORDER BY ((((669576614)AND((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c0))))<>((((rt0.c0)||(rt0.c2)))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((669576614)AND((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(NULL))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c0))))<>((((rt0.c0)||(rt0.c2)))))) ORDER BY ((((669576614)AND((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c0))))<>((((rt0.c0)||(rt0.c2)))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((669576614)AND((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(NULL))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c0))))<>((((rt0.c0)||(rt0.c2)))))) ORDER BY ((((669576614)AND((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(NULL))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c2)||(((rt0.c2)OR(rt0.c0))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND (((+ (rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)||(((rt0.c2)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND (((+ (rt0.c0))))) DESC);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)||(((rt0.c2)OR(rt0.c0))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND (((+ (rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)||(((rt0.c2)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND (((+ (rt0.c0))))) DESC);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)||(((rt0.c2)OR(rt0.c0))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND (((+ (rt0.c0))))) DESC;
SELECT ALL * FROM t0 WHERE (t0.c96) ORDER BY ((CASE t0.c96  WHEN t0.c96 THEN t0.c96 ELSE t0.c48 END) NOT BETWEEN ((('TFlL')<=(t0.c96))) AND ((('') BETWEEN (t0.c96) AND (t0.c96)))) DESC, UPPER(DISTINCT ((t0.c48) NOT NULL));
SELECT SUM(count) FROM (SELECT ((t0.c96) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c96  WHEN t0.c96 THEN t0.c96 ELSE t0.c48 END) NOT BETWEEN ((('TFlL')<=(t0.c96))) AND ((('') BETWEEN (t0.c96) AND (t0.c96)))) DESC, UPPER(DISTINCT ((t0.c48) NOT NULL)));
SELECT ALL * FROM t0 WHERE (t0.c96) ORDER BY ((CASE t0.c96  WHEN t0.c96 THEN t0.c96 ELSE t0.c48 END) NOT BETWEEN ((('TFlL')<=(t0.c96))) AND ((('') BETWEEN (t0.c96) AND (t0.c96)))) DESC, UPPER(DISTINCT ((t0.c48) NOT NULL));
SELECT SUM(count) FROM (SELECT ((t0.c96) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c96  WHEN t0.c96 THEN t0.c96 ELSE t0.c48 END) NOT BETWEEN ((('TFlL')<=(t0.c96))) AND ((('') BETWEEN (t0.c96) AND (t0.c96)))) DESC, UPPER(DISTINCT ((t0.c48) NOT NULL)));
SELECT ALL * FROM t0 WHERE (t0.c96) ORDER BY ((CASE t0.c96  WHEN t0.c96 THEN t0.c96 ELSE t0.c48 END) NOT BETWEEN ((('TFlL')<=(t0.c96))) AND ((('') BETWEEN (t0.c96) AND (t0.c96)))) DESC, UPPER(DISTINCT ((t0.c48) NOT NULL));
SELECT ALL * FROM vt1, t0 WHERE ((((- (t0.c48))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (t0.c96 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((- (t0.c48))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (t0.c96 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((- (t0.c48))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (t0.c96 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((- (t0.c48))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (t0.c96 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((- (t0.c48))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (t0.c96 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN t0 ON CAST(((((((((rt0.c2)OR(rt0.c2)))OR(t0.c48)))AND(rt0.c0)))AND(t0.c96)) AS INTEGER) WHERE (((LIKELIHOOD(rt0.c0, 0.002331125725947736)) ISNULL)) ORDER BY (((((((((((rt0.c0))>=((t0.c48))))AND(((((((((t0.c96)OR(rt0.c2)))AND(vt1.c0)))AND(vt1.c0)))OR('278853977')))))AND(((t0.c96) NOTNULL))))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c0)IS NOT(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt0.c0, 0.002331125725947736)) ISNULL)) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t0 ON CAST(((((((((rt0.c2)OR(rt0.c2)))OR(t0.c48)))AND(rt0.c0)))AND(t0.c96)) AS INTEGER) ORDER BY (((((((((((rt0.c0))>=((t0.c48))))AND(((((((((t0.c96)OR(rt0.c2)))AND(vt1.c0)))AND(vt1.c0)))OR('278853977')))))AND(((t0.c96) NOTNULL))))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c0)IS NOT(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN t0 ON CAST(((((((((rt0.c2)OR(rt0.c2)))OR(t0.c48)))AND(rt0.c0)))AND(t0.c96)) AS INTEGER) WHERE (((LIKELIHOOD(rt0.c0, 0.002331125725947736)) ISNULL)) ORDER BY (((((((((((rt0.c0))>=((t0.c48))))AND(((((((((t0.c96)OR(rt0.c2)))AND(vt1.c0)))AND(vt1.c0)))OR('278853977')))))AND(((t0.c96) NOTNULL))))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c0)IS NOT(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt0.c0, 0.002331125725947736)) ISNULL)) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t0 ON CAST(((((((((rt0.c2)OR(rt0.c2)))OR(t0.c48)))AND(rt0.c0)))AND(t0.c96)) AS INTEGER) ORDER BY (((((((((((rt0.c0))>=((t0.c48))))AND(((((((((t0.c96)OR(rt0.c2)))AND(vt1.c0)))AND(vt1.c0)))OR('278853977')))))AND(((t0.c96) NOTNULL))))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c0)IS NOT(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN t0 ON CAST(((((((((rt0.c2)OR(rt0.c2)))OR(t0.c48)))AND(rt0.c0)))AND(t0.c96)) AS INTEGER) WHERE (((LIKELIHOOD(rt0.c0, 0.002331125725947736)) ISNULL)) ORDER BY (((((((((((rt0.c0))>=((t0.c48))))AND(((((((((t0.c96)OR(rt0.c2)))AND(vt1.c0)))AND(vt1.c0)))OR('278853977')))))AND(((t0.c96) NOTNULL))))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c0)IS NOT(rt0.c1))));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY CAST(x'3f7d' AS INTEGER), 'DIRk]+댹7';
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CAST(x'3f7d' AS INTEGER), 'DIRk]+댹7');
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY CAST(x'3f7d' AS INTEGER), 'DIRk]+댹7';
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CAST(x'3f7d' AS INTEGER), 'DIRk]+댹7');
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY CAST(x'3f7d' AS INTEGER), 'DIRk]+댹7';
SELECT * FROM t0 WHERE (((CASE WHEN t0.c48 THEN t0.c48 ELSE t0.c48 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c48 THEN t0.c48 ELSE t0.c48 END) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c48 THEN t0.c48 ELSE t0.c48 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c48 THEN t0.c48 ELSE t0.c48 END) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c48 THEN t0.c48 ELSE t0.c48 END) NOT NULL));
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((vt1.c0) NOT BETWEEN (((rt0.c0) IS FALSE)) AND ((rt0.c1 IN (vt1.c0, vt0.c0)))) WHERE ((~ ((- (vt1.c0))))) ORDER BY ((((- (rt0.c0)), ((vt0.c0) IS FALSE), (((rt0.c1))==((rt0.c0)))))!=((rt0.c0 COLLATE RTRIM, ((vt1.c0)-(rt0.c2)), ((((vt1.c0)OR(0Xffffffffa488d9bd)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((vt1.c0) NOT BETWEEN (((rt0.c0) IS FALSE)) AND ((rt0.c1 IN (vt1.c0, vt0.c0)))) ORDER BY ((((- (rt0.c0)), ((vt0.c0) IS FALSE), (((rt0.c1))=((rt0.c0)))))!=((rt0.c0 COLLATE RTRIM, ((vt1.c0)-(rt0.c2)), ((((vt1.c0)OR(0xffffffffa488d9bd)))AND(rt0.c1))))));
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((vt1.c0) NOT BETWEEN (((rt0.c0) IS FALSE)) AND ((rt0.c1 IN (vt1.c0, vt0.c0)))) WHERE ((~ ((- (vt1.c0))))) ORDER BY ((((- (rt0.c0)), ((vt0.c0) IS FALSE), (((rt0.c1))==((rt0.c0)))))!=((rt0.c0 COLLATE RTRIM, ((vt1.c0)-(rt0.c2)), ((((vt1.c0)OR(0Xffffffffa488d9bd)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((vt1.c0) NOT BETWEEN (((rt0.c0) IS FALSE)) AND ((rt0.c1 IN (vt1.c0, vt0.c0)))) ORDER BY ((((- (rt0.c0)), ((vt0.c0) IS FALSE), (((rt0.c1))=((rt0.c0)))))!=((rt0.c0 COLLATE RTRIM, ((vt1.c0)-(rt0.c2)), ((((vt1.c0)OR(0xffffffffa488d9bd)))AND(rt0.c1))))));
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((vt1.c0) NOT BETWEEN (((rt0.c0) IS FALSE)) AND ((rt0.c1 IN (vt1.c0, vt0.c0)))) WHERE ((~ ((- (vt1.c0))))) ORDER BY ((((- (rt0.c0)), ((vt0.c0) IS FALSE), (((rt0.c1))==((rt0.c0)))))!=((rt0.c0 COLLATE RTRIM, ((vt1.c0)-(rt0.c2)), ((((vt1.c0)OR(0Xffffffffa488d9bd)))AND(rt0.c1)))));
SELECT * FROM t0, rt0 WHERE (((((rt0.c0) NOTNULL)) NOT BETWEEN ((rt0.c2 IN ())) AND (((t0.c48) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL)) NOT BETWEEN ((rt0.c2 IN ())) AND (((t0.c48) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((rt0.c0) NOTNULL)) NOT BETWEEN ((rt0.c2 IN ())) AND (((t0.c48) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL)) NOT BETWEEN ((rt0.c2 IN ())) AND (((t0.c48) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((rt0.c0) NOTNULL)) NOT BETWEEN ((rt0.c2 IN ())) AND (((t0.c48) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT * FROM vt0, vt1 WHERE ((NOT ((vt0.c0 IN (vt1.c0))))) ORDER BY INSTR(vt0.c0, (- (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY INSTR(vt0.c0, (- (vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((NOT ((vt0.c0 IN (vt1.c0))))) ORDER BY INSTR(vt0.c0, (- (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY INSTR(vt0.c0, (- (vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((NOT ((vt0.c0 IN (vt1.c0))))) ORDER BY INSTR(vt0.c0, (- (vt0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1))>=((''))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))>=((''))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1))>=((''))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))>=((''))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1))>=((''))) COLLATE RTRIM);
SELECT ALL * FROM t0, vt0, vt1, rt0 WHERE ((((((rt0.c2)AND(rt0.c1)))OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)AND(rt0.c1)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM t0, vt0, vt1, rt0);
SELECT ALL * FROM t0, vt0, vt1, rt0 WHERE ((((((rt0.c2)AND(rt0.c1)))OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)AND(rt0.c1)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM t0, vt0, vt1, rt0);
SELECT ALL * FROM t0, vt0, vt1, rt0 WHERE ((((((rt0.c2)AND(rt0.c1)))OR(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON CASE WHEN (NOT ('101535845')) THEN x'7767' ELSE (vt0.c0 IN (t0.c48)) END LEFT OUTER JOIN t0 ON t0.c48 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM WHERE (CAST(((rt0.c1)>>(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)>>(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON CASE WHEN (NOT ('101535845')) THEN x'7767' ELSE (vt0.c0 IN (t0.c48)) END LEFT OUTER JOIN t0 ON t0.c48 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON CASE WHEN (NOT ('101535845')) THEN x'7767' ELSE (vt0.c0 IN (t0.c48)) END LEFT OUTER JOIN t0 ON t0.c48 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM WHERE (CAST(((rt0.c1)>>(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)>>(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON CASE WHEN (NOT ('101535845')) THEN x'7767' ELSE (vt0.c0 IN (t0.c48)) END LEFT OUTER JOIN t0 ON t0.c48 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON CASE WHEN (NOT ('101535845')) THEN x'7767' ELSE (vt0.c0 IN (t0.c48)) END LEFT OUTER JOIN t0 ON t0.c48 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM WHERE (CAST(((rt0.c1)>>(rt0.c0)) AS TEXT));
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ((((vt1.c0, vt1.c0, t0.c48, vt1.c0, rt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c0, vt1.c0, t0.c48)) AND ((vt1.c0, t0.c48, rt0.c1, 0.9303673647137212, t0.c48))) COLLATE RTRIM) ORDER BY CAST(((t0.c96)<(vt1.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, t0.c48, vt1.c0, rt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c0, vt1.c0, t0.c48)) AND ((vt1.c0, t0.c48, rt0.c1, 0.9303673647137212, t0.c48))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY CAST(((t0.c96)<(vt1.c0)) AS INTEGER) DESC);
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ((((vt1.c0, vt1.c0, t0.c48, vt1.c0, rt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c0, vt1.c0, t0.c48)) AND ((vt1.c0, t0.c48, rt0.c1, 0.9303673647137212, t0.c48))) COLLATE RTRIM) ORDER BY CAST(((t0.c96)<(vt1.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, t0.c48, vt1.c0, rt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c0, vt1.c0, t0.c48)) AND ((vt1.c0, t0.c48, rt0.c1, 0.9303673647137212, t0.c48))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY CAST(((t0.c96)<(vt1.c0)) AS INTEGER) DESC);
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ((((vt1.c0, vt1.c0, t0.c48, vt1.c0, rt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c0, vt1.c0, t0.c48)) AND ((vt1.c0, t0.c48, rt0.c1, 0.9303673647137212, t0.c48))) COLLATE RTRIM) ORDER BY CAST(((t0.c96)<(vt1.c0)) AS INTEGER) DESC;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((t0.c48) NOT BETWEEN (((vt0.c0)<(vt1.c0))) AND (CASE t0.c48  WHEN t0.c96 THEN t0.c48 ELSE t0.c96 END))) ORDER BY (('1465169837')/(x'')) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c48) NOT BETWEEN (((vt0.c0)<(vt1.c0))) AND (CASE t0.c48  WHEN t0.c96 THEN t0.c48 ELSE t0.c96 END))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (('1465169837')/(x'')) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((t0.c48) NOT BETWEEN (((vt0.c0)<(vt1.c0))) AND (CASE t0.c48  WHEN t0.c96 THEN t0.c48 ELSE t0.c96 END))) ORDER BY (('1465169837')/(x'')) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c48) NOT BETWEEN (((vt0.c0)<(vt1.c0))) AND (CASE t0.c48  WHEN t0.c96 THEN t0.c48 ELSE t0.c96 END))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (('1465169837')/(x'')) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((t0.c48) NOT BETWEEN (((vt0.c0)<(vt1.c0))) AND (CASE t0.c48  WHEN t0.c96 THEN t0.c48 ELSE t0.c96 END))) ORDER BY (('1465169837')/(x'')) COLLATE RTRIM DESC;
SELECT * FROM vt0, t0, vt1 WHERE (((((((vt1.c0)AND(t0.c48)))OR(vt1.c0)))LIKE(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (- (TRIM(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(t0.c48)))OR(vt1.c0)))LIKE(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (- (TRIM(vt0.c0)))  NULLS FIRST);
SELECT * FROM vt0, t0, vt1 WHERE (((((((vt1.c0)AND(t0.c48)))OR(vt1.c0)))LIKE(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (- (TRIM(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(t0.c48)))OR(vt1.c0)))LIKE(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (- (TRIM(vt0.c0)))  NULLS FIRST);
SELECT * FROM vt0, t0, vt1 WHERE (((((((vt1.c0)AND(t0.c48)))OR(vt1.c0)))LIKE(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (- (TRIM(vt0.c0)))  NULLS FIRST;
SELECT ALL * FROM t0, vt1 WHERE (((CASE vt1.c0  WHEN NULL THEN t0.c96 END) IS TRUE)) ORDER BY CASE WHEN 0.8911042900309134 COLLATE NOCASE THEN x'' END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN NULL THEN t0.c96 END) IS TRUE)) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN 0.8911042900309134 COLLATE NOCASE THEN x'' END);
SELECT ALL * FROM t0, vt1 WHERE (((CASE vt1.c0  WHEN NULL THEN t0.c96 END) IS TRUE)) ORDER BY CASE WHEN 0.8911042900309134 COLLATE NOCASE THEN x'' END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN NULL THEN t0.c96 END) IS TRUE)) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN 0.8911042900309134 COLLATE NOCASE THEN x'' END);
SELECT ALL * FROM t0, vt1 WHERE (((CASE vt1.c0  WHEN NULL THEN t0.c96 END) IS TRUE)) ORDER BY CASE WHEN 0.8911042900309134 COLLATE NOCASE THEN x'' END;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (vt0.c0) ORDER BY ((t0.c96)<<('35838793')) COLLATE NOCASE COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((t0.c96)<<('35838793')) COLLATE NOCASE COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (vt0.c0) ORDER BY ((t0.c96)<<('35838793')) COLLATE NOCASE COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((t0.c96)<<('35838793')) COLLATE NOCASE COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (vt0.c0) ORDER BY ((t0.c96)<<('35838793')) COLLATE NOCASE COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((rt0.c0)>(rt0.c1)) IN ()) WHERE ((((t0.c96, 0.8626499904327185, t0.c96)) BETWEEN (((+ (vt1.c0)), ((rt0.c1) NOT NULL), ((rt0.c2) BETWEEN (rt0.c0) AND (0.6881301090919637)))) AND ((((rt0.c1)|(rt0.c2)), (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), (vt1.c0 IN ()))))) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((t0.c96) NOTNULL)) AND (((((vt1.c0)OR(-2144569489)))AND(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c96, 0.8626499904327185, t0.c96)) BETWEEN (((+ (vt1.c0)), ((rt0.c1) NOT NULL), ((rt0.c2) BETWEEN (rt0.c0) AND (0.6881301090919637)))) AND ((((rt0.c1)|(rt0.c2)), (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), (vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((rt0.c0)>(rt0.c1)) IN ()) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((t0.c96) NOTNULL)) AND (((((vt1.c0)OR(-2144569489)))AND(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((rt0.c0)>(rt0.c1)) IN ()) WHERE ((((t0.c96, 0.8626499904327185, t0.c96)) BETWEEN (((+ (vt1.c0)), ((rt0.c1) NOT NULL), ((rt0.c2) BETWEEN (rt0.c0) AND (0.6881301090919637)))) AND ((((rt0.c1)|(rt0.c2)), (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), (vt1.c0 IN ()))))) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((t0.c96) NOTNULL)) AND (((((vt1.c0)OR(-2144569489)))AND(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c96, 0.8626499904327185, t0.c96)) BETWEEN (((+ (vt1.c0)), ((rt0.c1) NOT NULL), ((rt0.c2) BETWEEN (rt0.c0) AND (0.6881301090919637)))) AND ((((rt0.c1)|(rt0.c2)), (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), (vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((rt0.c0)>(rt0.c1)) IN ()) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((t0.c96) NOTNULL)) AND (((((vt1.c0)OR(-2144569489)))AND(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((rt0.c0)>(rt0.c1)) IN ()) WHERE ((((t0.c96, 0.8626499904327185, t0.c96)) BETWEEN (((+ (vt1.c0)), ((rt0.c1) NOT NULL), ((rt0.c2) BETWEEN (rt0.c0) AND (0.6881301090919637)))) AND ((((rt0.c1)|(rt0.c2)), (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), (vt1.c0 IN ()))))) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((t0.c96) NOTNULL)) AND (((((vt1.c0)OR(-2144569489)))AND(rt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE (json_patch(((rt0.c0) NOT NULL), rt0.c2)) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((json_patch(((rt0.c0) NOT NULL), rt0.c2)) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c2);
SELECT * FROM vt1, rt0 WHERE (json_patch(((rt0.c0) NOT NULL), rt0.c2)) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((json_patch(((rt0.c0) NOT NULL), rt0.c2)) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c2);
SELECT * FROM vt1, rt0 WHERE (json_patch(((rt0.c0) NOT NULL), rt0.c2)) ORDER BY rt0.c2;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CASE (((vt1.c0))<>((vt1.c0)))  WHEN CAST(vt1.c0 AS INTEGER) THEN t0.c48 COLLATE BINARY END LEFT OUTER JOIN vt1 ON vt0.c0 WHERE (COALESCE(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(t0.c48)), t0.c96, ((t0.c48) IS TRUE), ((vt0.c0)>(vt0.c0)))) ORDER BY (t0.c96 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(t0.c48)), t0.c96, ((t0.c48) IS TRUE), ((vt0.c0)>(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE (((vt1.c0))!=((vt1.c0)))  WHEN CAST(vt1.c0 AS INTEGER) THEN t0.c48 COLLATE BINARY END LEFT OUTER JOIN vt1 ON vt0.c0 ORDER BY (t0.c96 IN ()) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CASE (((vt1.c0))<>((vt1.c0)))  WHEN CAST(vt1.c0 AS INTEGER) THEN t0.c48 COLLATE BINARY END LEFT OUTER JOIN vt1 ON vt0.c0 WHERE (COALESCE(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(t0.c48)), t0.c96, ((t0.c48) IS TRUE), ((vt0.c0)>(vt0.c0)))) ORDER BY (t0.c96 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(t0.c48)), t0.c96, ((t0.c48) IS TRUE), ((vt0.c0)>(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE (((vt1.c0))!=((vt1.c0)))  WHEN CAST(vt1.c0 AS INTEGER) THEN t0.c48 COLLATE BINARY END LEFT OUTER JOIN vt1 ON vt0.c0 ORDER BY (t0.c96 IN ()) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('䈭XP') ORDER BY ((vt0.c0) NOT BETWEEN (UPPER(DISTINCT rt0.c1)) AND (TYPEOF(DISTINCT rt0.c0)));
SELECT SUM(count) FROM (SELECT (('䈭XP') IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((vt0.c0) NOT BETWEEN (UPPER(DISTINCT rt0.c1)) AND (TYPEOF(DISTINCT rt0.c0))));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('䈭XP') ORDER BY ((vt0.c0) NOT BETWEEN (UPPER(DISTINCT rt0.c1)) AND (TYPEOF(DISTINCT rt0.c0)));
SELECT SUM(count) FROM (SELECT (('䈭XP') IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((vt0.c0) NOT BETWEEN (UPPER(DISTINCT rt0.c1)) AND (TYPEOF(DISTINCT rt0.c0))));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('䈭XP') ORDER BY ((vt0.c0) NOT BETWEEN (UPPER(DISTINCT rt0.c1)) AND (TYPEOF(DISTINCT rt0.c0)));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (t0.c48);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN 0.23533379162934964 ELSE 0.3286027237261213 END THEN ((rt0.c0)-(vt1.c0)) ELSE ((rt0.c0)AND(rt0.c1)) END) ORDER BY (~ (((rt0.c1)-(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN 0.23533379162934964 ELSE 0.3286027237261213 END THEN ((rt0.c0)-(vt1.c0)) ELSE ((rt0.c0)AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY (~ (((rt0.c1)-(rt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN 0.23533379162934964 ELSE 0.3286027237261213 END THEN ((rt0.c0)-(vt1.c0)) ELSE ((rt0.c0)AND(rt0.c1)) END) ORDER BY (~ (((rt0.c1)-(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN 0.23533379162934964 ELSE 0.3286027237261213 END THEN ((rt0.c0)-(vt1.c0)) ELSE ((rt0.c0)AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY (~ (((rt0.c1)-(rt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN 0.23533379162934964 ELSE 0.3286027237261213 END THEN ((rt0.c0)-(vt1.c0)) ELSE ((rt0.c0)AND(rt0.c1)) END) ORDER BY (~ (((rt0.c1)-(rt0.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt0 WHERE ((CASE WHEN t0.c48 THEN rt0.c1 WHEN t0.c96 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c96 THEN rt0.c1 ELSE rt0.c2 END IN (CHANGES())));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c48 THEN rt0.c1 WHEN t0.c96 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c96 THEN rt0.c1 ELSE rt0.c2 END IN (CHANGES()))) IS TRUE)  as count FROM t0, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt0 WHERE ((CASE WHEN t0.c48 THEN rt0.c1 WHEN t0.c96 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c96 THEN rt0.c1 ELSE rt0.c2 END IN (CHANGES())));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c48 THEN rt0.c1 WHEN t0.c96 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c96 THEN rt0.c1 ELSE rt0.c2 END IN (CHANGES()))) IS TRUE)  as count FROM t0, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt0 WHERE ((CASE WHEN t0.c48 THEN rt0.c1 WHEN t0.c96 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c96 THEN rt0.c1 ELSE rt0.c2 END IN (CHANGES())));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c48);
SELECT * FROM t0 WHERE (((t0.c48)LIKE(((t0.c96) NOT BETWEEN (t0.c48) AND (t0.c48)))));
SELECT SUM(count) FROM (SELECT ((((t0.c48)LIKE(((t0.c96) NOT BETWEEN (t0.c48) AND (t0.c48))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c48)LIKE(((t0.c96) NOT BETWEEN (t0.c48) AND (t0.c48)))));
SELECT SUM(count) FROM (SELECT ((((t0.c48)LIKE(((t0.c96) NOT BETWEEN (t0.c48) AND (t0.c48))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c48)LIKE(((t0.c96) NOT BETWEEN (t0.c48) AND (t0.c48)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('') NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('') NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('') NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('') NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('') NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0)|(vt0.c0)))));
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE ((- (((t0.c48) NOTNULL)))) ORDER BY ((t0.c96)-(vt1.c0)) COLLATE BINARY ASC, CASE WHEN ((rt0.c0) ISNULL) THEN NULL COLLATE BINARY WHEN CAST(x'' AS REAL) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c96)) WHEN rt0.c1 THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c48) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY ((t0.c96)-(vt1.c0)) COLLATE BINARY ASC, CASE WHEN ((rt0.c0) ISNULL) THEN NULL COLLATE BINARY WHEN CAST(x'' AS REAL) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c96)) WHEN rt0.c1 THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE ((- (((t0.c48) NOTNULL)))) ORDER BY ((t0.c96)-(vt1.c0)) COLLATE BINARY ASC, CASE WHEN ((rt0.c0) ISNULL) THEN NULL COLLATE BINARY WHEN CAST(x'' AS REAL) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c96)) WHEN rt0.c1 THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c48) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY ((t0.c96)-(vt1.c0)) COLLATE BINARY ASC, CASE WHEN ((rt0.c0) ISNULL) THEN NULL COLLATE BINARY WHEN CAST(x'' AS REAL) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c96)) WHEN rt0.c1 THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE ((- (((t0.c48) NOTNULL)))) ORDER BY ((t0.c96)-(vt1.c0)) COLLATE BINARY ASC, CASE WHEN ((rt0.c0) ISNULL) THEN NULL COLLATE BINARY WHEN CAST(x'' AS REAL) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c96)) WHEN rt0.c1 THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((((- (vt1.c0))) NOT BETWEEN ((+ (rt0.c1))) AND (x'877c47be')));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) NOT BETWEEN ((+ (rt0.c1))) AND (x'877c47be'))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((((- (vt1.c0))) NOT BETWEEN ((+ (rt0.c1))) AND (x'877c47be')));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) NOT BETWEEN ((+ (rt0.c1))) AND (x'877c47be'))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((((- (vt1.c0))) NOT BETWEEN ((+ (rt0.c1))) AND (x'877c47be')));
SELECT ALL * FROM vt0, vt1 WHERE ((('485001704') BETWEEN (CAST(vt0.c0 AS REAL)) AND (-2.012429377E9)));
SELECT SUM(count) FROM (SELECT ALL (((('485001704') BETWEEN (CAST(vt0.c0 AS REAL)) AND (-2.012429377E9))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((('485001704') BETWEEN (CAST(vt0.c0 AS REAL)) AND (-2.012429377E9)));
SELECT SUM(count) FROM (SELECT ALL (((('485001704') BETWEEN (CAST(vt0.c0 AS REAL)) AND (-2.012429377E9))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((('485001704') BETWEEN (CAST(vt0.c0 AS REAL)) AND (-2.012429377E9)));
SELECT * FROM vt1 WHERE (((x'') BETWEEN (UNLIKELY(vt1.c0)) AND (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (UNLIKELY(vt1.c0)) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((x'') BETWEEN (UNLIKELY(vt1.c0)) AND (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (UNLIKELY(vt1.c0)) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((x'') BETWEEN (UNLIKELY(vt1.c0)) AND (((vt1.c0) IS TRUE))));
SELECT ALL * FROM t0, vt1 WHERE ((((CAST(t0.c48 AS NUMERIC)))!=((((t0.c48) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c48 AS NUMERIC)))!=((((t0.c48) NOT NULL))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((((CAST(t0.c48 AS NUMERIC)))!=((((t0.c48) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c48 AS NUMERIC)))!=((((t0.c48) NOT NULL))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((((CAST(t0.c48 AS NUMERIC)))!=((((t0.c48) NOT NULL)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(0.6289944200935168)))OR(vt1.c0)))OR(vt1.c0)))+(CASE WHEN vt1.c0 THEN vt1.c0 ELSE '1928244390' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))AND(0.6289944200935168)))OR(vt1.c0)))OR(vt1.c0)))+(CASE WHEN vt1.c0 THEN vt1.c0 ELSE '1928244390' END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(0.6289944200935168)))OR(vt1.c0)))OR(vt1.c0)))+(CASE WHEN vt1.c0 THEN vt1.c0 ELSE '1928244390' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))AND(0.6289944200935168)))OR(vt1.c0)))OR(vt1.c0)))+(CASE WHEN vt1.c0 THEN vt1.c0 ELSE '1928244390' END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(0.6289944200935168)))OR(vt1.c0)))OR(vt1.c0)))+(CASE WHEN vt1.c0 THEN vt1.c0 ELSE '1928244390' END)));
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON CAST(((vt1.c0)<>(vt0.c0)) AS REAL) WHERE (vt1.c0) ORDER BY t0.c48 COLLATE BINARY COLLATE NOCASE, (((((((((t0.c48 IN ()))AND('-300872659')))OR(COALESCE(DISTINCT t0.c48, vt1.c0))))OR(0.09010225734990496)))OR((('3ꕣ')||(vt0.c0)))) DESC, (((((t0.c48)||(vt0.c0)), ((t0.c48) NOT BETWEEN (vt0.c0) AND (vt1.c0)), '%^N^Qrmty'))<>((vt0.c0, ((((((((((((x'')AND(vt1.c0)))AND(t0.c96)))AND(t0.c48)))OR(vt1.c0)))AND(t0.c48)))OR(t0.c48)), ((((vt0.c0)OR(t0.c48)))AND(vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON CAST(((vt1.c0)<>(vt0.c0)) AS REAL) ORDER BY t0.c48 COLLATE BINARY COLLATE NOCASE, (((((((((t0.c48 IN ()))AND('-300872659')))OR(COALESCE(DISTINCT t0.c48, vt1.c0))))OR(0.09010225734990496)))OR((('3ꕣ')||(vt0.c0)))) DESC, (((((t0.c48)||(vt0.c0)), ((t0.c48) NOT BETWEEN (vt0.c0) AND (vt1.c0)), '%^N^Qrmty'))!=((vt0.c0, ((((((((((((x'')AND(vt1.c0)))AND(t0.c96)))AND(t0.c48)))OR(vt1.c0)))AND(t0.c48)))OR(t0.c48)), ((((vt0.c0)OR(t0.c48)))AND(vt1.c0))))) DESC  NULLS LAST);
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON CAST(((vt1.c0)<>(vt0.c0)) AS REAL) WHERE (vt1.c0) ORDER BY t0.c48 COLLATE BINARY COLLATE NOCASE, (((((((((t0.c48 IN ()))AND('-300872659')))OR(COALESCE(DISTINCT t0.c48, vt1.c0))))OR(0.09010225734990496)))OR((('3ꕣ')||(vt0.c0)))) DESC, (((((t0.c48)||(vt0.c0)), ((t0.c48) NOT BETWEEN (vt0.c0) AND (vt1.c0)), '%^N^Qrmty'))<>((vt0.c0, ((((((((((((x'')AND(vt1.c0)))AND(t0.c96)))AND(t0.c48)))OR(vt1.c0)))AND(t0.c48)))OR(t0.c48)), ((((vt0.c0)OR(t0.c48)))AND(vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON CAST(((vt1.c0)<>(vt0.c0)) AS REAL) ORDER BY t0.c48 COLLATE BINARY COLLATE NOCASE, (((((((((t0.c48 IN ()))AND('-300872659')))OR(COALESCE(DISTINCT t0.c48, vt1.c0))))OR(0.09010225734990496)))OR((('3ꕣ')||(vt0.c0)))) DESC, (((((t0.c48)||(vt0.c0)), ((t0.c48) NOT BETWEEN (vt0.c0) AND (vt1.c0)), '%^N^Qrmty'))!=((vt0.c0, ((((((((((((x'')AND(vt1.c0)))AND(t0.c96)))AND(t0.c48)))OR(vt1.c0)))AND(t0.c48)))OR(t0.c48)), ((((vt0.c0)OR(t0.c48)))AND(vt1.c0))))) DESC  NULLS LAST);
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON CAST(((vt1.c0)<>(vt0.c0)) AS REAL) WHERE (vt1.c0) ORDER BY t0.c48 COLLATE BINARY COLLATE NOCASE, (((((((((t0.c48 IN ()))AND('-300872659')))OR(COALESCE(DISTINCT t0.c48, vt1.c0))))OR(0.09010225734990496)))OR((('3ꕣ')||(vt0.c0)))) DESC, (((((t0.c48)||(vt0.c0)), ((t0.c48) NOT BETWEEN (vt0.c0) AND (vt1.c0)), '%^N^Qrmty'))<>((vt0.c0, ((((((((((((x'')AND(vt1.c0)))AND(t0.c96)))AND(t0.c48)))OR(vt1.c0)))AND(t0.c48)))OR(t0.c48)), ((((vt0.c0)OR(t0.c48)))AND(vt1.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))*(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))*(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))*(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))*(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))*(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c96)) NOT BETWEEN ((((rt0.c0) IS TRUE))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c96)) NOT BETWEEN ((((rt0.c0) IS TRUE))) AND ((NULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c96)) NOT BETWEEN ((((rt0.c0) IS TRUE))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c96)) NOT BETWEEN ((((rt0.c0) IS TRUE))) AND ((NULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c96)) NOT BETWEEN ((((rt0.c0) IS TRUE))) AND ((NULL))));
SELECT * FROM vt1 INNER JOIN t0 ON ((((t0.c48 IN (rt0.c0)), ((x'c7b5') NOTNULL), CASE WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))=(((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, t0.c96, vt1.c0)) AND ((rt0.c0, 0Xffffffffea1f2e55, rt0.c1))), CAST(t0.c96 AS NUMERIC), ((rt0.c1)-(vt1.c0))))) RIGHT OUTER JOIN rt0 ON ((0.6677800082599215) IS FALSE) WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((t0.c48 IN (rt0.c0)), ((x'c7b5') NOTNULL), CASE WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))==(((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, t0.c96, vt1.c0)) AND ((rt0.c0, 0Xffffffffea1f2e55, rt0.c1))), CAST(t0.c96 AS NUMERIC), ((rt0.c1)-(vt1.c0))))) RIGHT OUTER JOIN rt0 ON ((0.6677800082599215) IS FALSE));
SELECT * FROM vt1 INNER JOIN t0 ON ((((t0.c48 IN (rt0.c0)), ((x'c7b5') NOTNULL), CASE WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))=(((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, t0.c96, vt1.c0)) AND ((rt0.c0, 0Xffffffffea1f2e55, rt0.c1))), CAST(t0.c96 AS NUMERIC), ((rt0.c1)-(vt1.c0))))) RIGHT OUTER JOIN rt0 ON ((0.6677800082599215) IS FALSE) WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((t0.c48 IN (rt0.c0)), ((x'c7b5') NOTNULL), CASE WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))==(((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, t0.c96, vt1.c0)) AND ((rt0.c0, 0Xffffffffea1f2e55, rt0.c1))), CAST(t0.c96 AS NUMERIC), ((rt0.c1)-(vt1.c0))))) RIGHT OUTER JOIN rt0 ON ((0.6677800082599215) IS FALSE));
SELECT * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1)|(t0.c48)) AS REAL) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1)|(t0.c48)) AS REAL));
SELECT * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1)|(t0.c48)) AS REAL) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1)|(t0.c48)) AS REAL));
SELECT * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1)|(t0.c48)) AS REAL) WHERE (vt0.c0);
SELECT * FROM vt1, t0, rt0 WHERE (((rt0.c0)+(rt0.c1)) COLLATE RTRIM) ORDER BY (((rt0.c0, t0.c96, rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE BINARY, (NOT (vt1.c0)), (rt0.c2 IN ()))) AND ((rt0.c1, (- (rt0.c2)), CHAR(t0.c48)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)+(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (((rt0.c0, t0.c96, rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE BINARY, (NOT (vt1.c0)), (rt0.c2 IN ()))) AND ((rt0.c1, (- (rt0.c2)), CHAR(t0.c48)))) ASC  NULLS LAST);
SELECT * FROM vt1, t0, rt0 WHERE (((rt0.c0)+(rt0.c1)) COLLATE RTRIM) ORDER BY (((rt0.c0, t0.c96, rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE BINARY, (NOT (vt1.c0)), (rt0.c2 IN ()))) AND ((rt0.c1, (- (rt0.c2)), CHAR(t0.c48)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)+(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (((rt0.c0, t0.c96, rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE BINARY, (NOT (vt1.c0)), (rt0.c2 IN ()))) AND ((rt0.c1, (- (rt0.c2)), CHAR(t0.c48)))) ASC  NULLS LAST);
SELECT * FROM vt1, t0, rt0 WHERE (((rt0.c0)+(rt0.c1)) COLLATE RTRIM) ORDER BY (((rt0.c0, t0.c96, rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE BINARY, (NOT (vt1.c0)), (rt0.c2 IN ()))) AND ((rt0.c1, (- (rt0.c2)), CHAR(t0.c48)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((rt0.c2) NOTNULL)) NOT NULL) FULL OUTER JOIN vt1 ON ((((((((((((((vt0.c0)OR(t0.c48)))AND(t0.c48)))OR(t0.c48)))AND(rt0.c1)))AND(t0.c96)))OR(t0.c48)))<=((+ (vt1.c0)))) INNER JOIN vt0 ON ((((t0.c96) IS FALSE)) IS TRUE) WHERE (x'') ORDER BY ((CAST(vt1.c0 AS BLOB)) NOT NULL) ASC  NULLS LAST, (((t0.c96)) NOT BETWEEN ((((rt0.c2)%(t0.c48)))) AND ((highlight(vt1.c0, t0.c96, vt0.c0, rt0.c2)))), CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((rt0.c2) NOTNULL)) NOT NULL) FULL OUTER JOIN vt1 ON ((((((((((((((vt0.c0)OR(t0.c48)))AND(t0.c48)))OR(t0.c48)))AND(rt0.c1)))AND(t0.c96)))OR(t0.c48)))<=((+ (vt1.c0)))) INNER JOIN vt0 ON ((((t0.c96) IS FALSE)) IS TRUE) ORDER BY ((CAST(vt1.c0 AS BLOB)) NOT NULL) ASC  NULLS LAST, (((t0.c96)) NOT BETWEEN ((((rt0.c2)%(t0.c48)))) AND ((highlight(vt1.c0, t0.c96, vt0.c0, rt0.c2)))), CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((rt0.c2) NOTNULL)) NOT NULL) FULL OUTER JOIN vt1 ON ((((((((((((((vt0.c0)OR(t0.c48)))AND(t0.c48)))OR(t0.c48)))AND(rt0.c1)))AND(t0.c96)))OR(t0.c48)))<=((+ (vt1.c0)))) INNER JOIN vt0 ON ((((t0.c96) IS FALSE)) IS TRUE) WHERE (x'') ORDER BY ((CAST(vt1.c0 AS BLOB)) NOT NULL) ASC  NULLS LAST, (((t0.c96)) NOT BETWEEN ((((rt0.c2)%(t0.c48)))) AND ((highlight(vt1.c0, t0.c96, vt0.c0, rt0.c2)))), CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((rt0.c2) NOTNULL)) NOT NULL) FULL OUTER JOIN vt1 ON ((((((((((((((vt0.c0)OR(t0.c48)))AND(t0.c48)))OR(t0.c48)))AND(rt0.c1)))AND(t0.c96)))OR(t0.c48)))<=((+ (vt1.c0)))) INNER JOIN vt0 ON ((((t0.c96) IS FALSE)) IS TRUE) ORDER BY ((CAST(vt1.c0 AS BLOB)) NOT NULL) ASC  NULLS LAST, (((t0.c96)) NOT BETWEEN ((((rt0.c2)%(t0.c48)))) AND ((highlight(vt1.c0, t0.c96, vt0.c0, rt0.c2)))), CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((((((t0.c48)IS NOT(rt0.c0)), (0.48220567396022496 IN ()), CAST(vt0.c0 AS TEXT)))>=((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)), ((((-1.382313133E9)AND(vt1.c0)))AND(rt0.c0)), (((rt0.c1, rt0.c1, NULL))=((vt1.c0, t0.c96, rt0.c1))))))) ORDER BY (+ (TRIM(vt1.c0, rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c48)IS NOT(rt0.c0)), (0.48220567396022496 IN ()), CAST(vt0.c0 AS TEXT)))>=((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)), ((((-1.382313133E9)AND(vt1.c0)))AND(rt0.c0)), (((rt0.c1, rt0.c1, NULL))=((vt1.c0, t0.c96, rt0.c1))))))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY (+ (TRIM(vt1.c0, rt0.c2)))  NULLS LAST);
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((((((t0.c48)IS NOT(rt0.c0)), (0.48220567396022496 IN ()), CAST(vt0.c0 AS TEXT)))>=((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)), ((((-1.382313133E9)AND(vt1.c0)))AND(rt0.c0)), (((rt0.c1, rt0.c1, NULL))=((vt1.c0, t0.c96, rt0.c1))))))) ORDER BY (+ (TRIM(vt1.c0, rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c48)IS NOT(rt0.c0)), (0.48220567396022496 IN ()), CAST(vt0.c0 AS TEXT)))>=((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)), ((((-1.382313133E9)AND(vt1.c0)))AND(rt0.c0)), (((rt0.c1, rt0.c1, NULL))=((vt1.c0, t0.c96, rt0.c1))))))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY (+ (TRIM(vt1.c0, rt0.c2)))  NULLS LAST);
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((((((t0.c48)IS NOT(rt0.c0)), (0.48220567396022496 IN ()), CAST(vt0.c0 AS TEXT)))>=((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)), ((((-1.382313133E9)AND(vt1.c0)))AND(rt0.c0)), (((rt0.c1, rt0.c1, NULL))=((vt1.c0, t0.c96, rt0.c1))))))) ORDER BY (+ (TRIM(vt1.c0, rt0.c2)))  NULLS LAST;
SELECT ALL * FROM vt1, t0 WHERE (((((-1.40407756E9) NOTNULL))>(((t0.c48)==(t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL ((((((-1.40407756E9) NOTNULL))>(((t0.c48)=(t0.c48))))) IS TRUE)  as count FROM vt1 NOT INDEXED, t0);
SELECT ALL * FROM vt1, t0 WHERE (((((-1.40407756E9) NOTNULL))>(((t0.c48)==(t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL ((((((-1.40407756E9) NOTNULL))>(((t0.c48)=(t0.c48))))) IS TRUE)  as count FROM vt1 NOT INDEXED, t0);
SELECT ALL * FROM vt1, t0 WHERE (((((-1.40407756E9) NOTNULL))>(((t0.c48)==(t0.c48)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ('Ik9d 9');
SELECT SUM(count) FROM (SELECT (('Ik9d 9') IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ('Ik9d 9');
SELECT SUM(count) FROM (SELECT (('Ik9d 9') IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ('Ik9d 9');
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c0) NOT BETWEEN (((t0.c96)LIKE(t0.c48))) AND (((NULL)AND(t0.c48))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (((t0.c96)LIKE(t0.c48))) AND (((NULL)AND(t0.c48))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c0) NOT BETWEEN (((t0.c96)LIKE(t0.c48))) AND (((NULL)AND(t0.c48))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (((t0.c96)LIKE(t0.c48))) AND (((NULL)AND(t0.c48))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c0) NOT BETWEEN (((t0.c96)LIKE(t0.c48))) AND (((NULL)AND(t0.c48))))) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((((((((x'')LIKE(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(('1908832258' IN (vt1.c0)))))OR((((vt1.c0))>((vt1.c0))))))AND(((vt1.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'')LIKE(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(('1908832258' IN (vt1.c0)))))OR((((vt1.c0))>((vt1.c0))))))AND(((vt1.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((x'')LIKE(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(('1908832258' IN (vt1.c0)))))OR((((vt1.c0))>((vt1.c0))))))AND(((vt1.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'')LIKE(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(('1908832258' IN (vt1.c0)))))OR((((vt1.c0))>((vt1.c0))))))AND(((vt1.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((x'')LIKE(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(('1908832258' IN (vt1.c0)))))OR((((vt1.c0))>((vt1.c0))))))AND(((vt1.c0)>=(vt1.c0)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((((((0.5337273236720413)AND(vt0.c0 COLLATE RTRIM)))OR(CAST(vt0.c0 AS INTEGER))))OR((~ (vt1.c0)))))OR((vt1.c0 IN (vt0.c0)))) WHERE ((((vt0.c0 IN (vt0.c0)))GLOB(CAST(vt0.c0 AS REAL)))) ORDER BY ((('494646073' IN (vt0.c0, vt1.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0)))GLOB(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((((0.5337273236720413)AND(vt0.c0 COLLATE RTRIM)))OR(CAST(vt0.c0 AS INTEGER))))OR((~ (vt1.c0)))))OR((vt1.c0 IN (vt0.c0)))) ORDER BY ((('494646073' IN (vt0.c0, vt1.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((((((0.5337273236720413)AND(vt0.c0 COLLATE RTRIM)))OR(CAST(vt0.c0 AS INTEGER))))OR((~ (vt1.c0)))))OR((vt1.c0 IN (vt0.c0)))) WHERE ((((vt0.c0 IN (vt0.c0)))GLOB(CAST(vt0.c0 AS REAL)))) ORDER BY ((('494646073' IN (vt0.c0, vt1.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0)))GLOB(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((((0.5337273236720413)AND(vt0.c0 COLLATE RTRIM)))OR(CAST(vt0.c0 AS INTEGER))))OR((~ (vt1.c0)))))OR((vt1.c0 IN (vt0.c0)))) ORDER BY ((('494646073' IN (vt0.c0, vt1.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((((((0.5337273236720413)AND(vt0.c0 COLLATE RTRIM)))OR(CAST(vt0.c0 AS INTEGER))))OR((~ (vt1.c0)))))OR((vt1.c0 IN (vt0.c0)))) WHERE ((((vt0.c0 IN (vt0.c0)))GLOB(CAST(vt0.c0 AS REAL)))) ORDER BY ((('494646073' IN (vt0.c0, vt1.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS BLOB))>=((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB))>=((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS BLOB))>=((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB))>=((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS BLOB))>=((vt1.c0 IN (vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, t0 NATURAL JOIN vt0 WHERE (t0.c96);
SELECT SUM(count) FROM (SELECT ((t0.c96) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0, t0 NATURAL JOIN vt0 WHERE (t0.c96);
SELECT SUM(count) FROM (SELECT ((t0.c96) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0, t0 NATURAL JOIN vt0 WHERE (t0.c96);
SELECT ALL * FROM t0, vt1, rt0 WHERE ((NOT (((t0.c48)%(vt1.c0))))) ORDER BY ((CAST(rt0.c0 AS TEXT)) BETWEEN (x'' COLLATE BINARY) AND ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c48)%(vt1.c0))))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((CAST(rt0.c0 AS TEXT)) BETWEEN (x'' COLLATE BINARY) AND ((rt0.c1 IN ()))));
SELECT ALL * FROM t0, vt1, rt0 WHERE ((NOT (((t0.c48)%(vt1.c0))))) ORDER BY ((CAST(rt0.c0 AS TEXT)) BETWEEN (x'' COLLATE BINARY) AND ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c48)%(vt1.c0))))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((CAST(rt0.c0 AS TEXT)) BETWEEN (x'' COLLATE BINARY) AND ((rt0.c1 IN ()))));
SELECT ALL * FROM t0, vt1, rt0 WHERE ((NOT (((t0.c48)%(vt1.c0))))) ORDER BY ((CAST(rt0.c0 AS TEXT)) BETWEEN (x'' COLLATE BINARY) AND ((rt0.c1 IN ())));
SELECT COUNT(*) FROM vt1, rt0 CROSS JOIN vt0 ON CAST(((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)) AS TEXT) WHERE ((((vt1.c0)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((723793519)) AND ((rt0.c2))))) AND (((+ (''))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((723793519)) AND ((rt0.c2))))) AND (((+ ('')))))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt0 ON CAST(((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt1, rt0 CROSS JOIN vt0 ON CAST(((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)) AS TEXT) WHERE ((((vt1.c0)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((723793519)) AND ((rt0.c2))))) AND (((+ (''))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((723793519)) AND ((rt0.c2))))) AND (((+ ('')))))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt0 ON CAST(((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt1, rt0 CROSS JOIN vt0 ON CAST(((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)) AS TEXT) WHERE ((((vt1.c0)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((723793519)) AND ((rt0.c2))))) AND (((+ (''))))));
SELECT * FROM vt1, t0, vt0 WHERE (t0.c96);
SELECT SUM(count) FROM (SELECT ((t0.c96) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (t0.c96);
SELECT SUM(count) FROM (SELECT ((t0.c96) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (t0.c96);
SELECT * FROM vt1, vt0, rt0 WHERE (rt0.c1) ORDER BY ((((vt1.c0)<(rt0.c2))) NOT BETWEEN ((~ (rt0.c1))) AND (rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((vt1.c0)<(rt0.c2))) NOT BETWEEN ((~ (rt0.c1))) AND (rt0.c2 COLLATE NOCASE)));
SELECT * FROM vt1, vt0, rt0 WHERE (rt0.c1) ORDER BY ((((vt1.c0)<(rt0.c2))) NOT BETWEEN ((~ (rt0.c1))) AND (rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((vt1.c0)<(rt0.c2))) NOT BETWEEN ((~ (rt0.c1))) AND (rt0.c2 COLLATE NOCASE)));
SELECT * FROM vt1, vt0, rt0 WHERE (rt0.c1) ORDER BY ((((vt1.c0)<(rt0.c2))) NOT BETWEEN ((~ (rt0.c1))) AND (rt0.c2 COLLATE NOCASE));
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))<=((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY ((((vt0.c0)&(0.630713654646199)))>(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))<=((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)&(0.630713654646199)))>(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))<=((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY ((((vt0.c0)&(0.630713654646199)))>(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))<=((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)&(0.630713654646199)))>(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))<=((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY ((((vt0.c0)&(0.630713654646199)))>(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, rt0 RIGHT OUTER JOIN vt1 ON ((((((t0.c48) BETWEEN (t0.c48) AND (rt0.c0)))OR(((t0.c48) ISNULL))))OR((+ (t0.c48)))) WHERE (((((t0.c96 COLLATE BINARY)AND(((((t0.c48)AND(vt1.c0)))AND(t0.c48)))))OR(((vt1.c0) IS FALSE)))) ORDER BY LOWER(DISTINCT CAST(vt0.c0 AS TEXT)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96 COLLATE BINARY)AND(((((t0.c48)AND(vt1.c0)))AND(t0.c48)))))OR(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, t0, rt0 RIGHT OUTER JOIN vt1 ON ((((((t0.c48) BETWEEN (t0.c48) AND (rt0.c0)))OR(((t0.c48) ISNULL))))OR((+ (t0.c48)))) ORDER BY LOWER(DISTINCT CAST(vt0.c0 AS TEXT)) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 RIGHT OUTER JOIN vt1 ON ((((((t0.c48) BETWEEN (t0.c48) AND (rt0.c0)))OR(((t0.c48) ISNULL))))OR((+ (t0.c48)))) WHERE (((((t0.c96 COLLATE BINARY)AND(((((t0.c48)AND(vt1.c0)))AND(t0.c48)))))OR(((vt1.c0) IS FALSE)))) ORDER BY LOWER(DISTINCT CAST(vt0.c0 AS TEXT)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96 COLLATE BINARY)AND(((((t0.c48)AND(vt1.c0)))AND(t0.c48)))))OR(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, t0, rt0 RIGHT OUTER JOIN vt1 ON ((((((t0.c48) BETWEEN (t0.c48) AND (rt0.c0)))OR(((t0.c48) ISNULL))))OR((+ (t0.c48)))) ORDER BY LOWER(DISTINCT CAST(vt0.c0 AS TEXT)) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 RIGHT OUTER JOIN vt1 ON ((((((t0.c48) BETWEEN (t0.c48) AND (rt0.c0)))OR(((t0.c48) ISNULL))))OR((+ (t0.c48)))) WHERE (((((t0.c96 COLLATE BINARY)AND(((((t0.c48)AND(vt1.c0)))AND(t0.c48)))))OR(((vt1.c0) IS FALSE)))) ORDER BY LOWER(DISTINCT CAST(vt0.c0 AS TEXT)) DESC;
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0)))<>(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))!=(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0)))<>(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))!=(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0)))<>(CAST(vt0.c0 AS REAL))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (((('0.04641990882175884')<(vt1.c0))) IS TRUE) RIGHT OUTER JOIN t0 ON CASE NULL  WHEN ((t0.c96) NOT BETWEEN (vt0.c0) AND (t0.c96)) THEN (t0.c48 IN ()) ELSE ((((t0.c96)OR(0.18691868093176167)))AND(NULL)) END WHERE ((((((t0.c96))!=((vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c96))<>((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((('0.04641990882175884')<(vt1.c0))) IS TRUE) RIGHT OUTER JOIN t0 ON CASE NULL  WHEN ((t0.c96) NOT BETWEEN (vt0.c0) AND (t0.c96)) THEN (t0.c48 IN ()) ELSE ((((t0.c96)OR(0.18691868093176167)))AND(NULL)) END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (((('0.04641990882175884')<(vt1.c0))) IS TRUE) RIGHT OUTER JOIN t0 ON CASE NULL  WHEN ((t0.c96) NOT BETWEEN (vt0.c0) AND (t0.c96)) THEN (t0.c48 IN ()) ELSE ((((t0.c96)OR(0.18691868093176167)))AND(NULL)) END WHERE ((((((t0.c96))!=((vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c96))<>((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((('0.04641990882175884')<(vt1.c0))) IS TRUE) RIGHT OUTER JOIN t0 ON CASE NULL  WHEN ((t0.c96) NOT BETWEEN (vt0.c0) AND (t0.c96)) THEN (t0.c48 IN ()) ELSE ((((t0.c96)OR(0.18691868093176167)))AND(NULL)) END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (((('0.04641990882175884')<(vt1.c0))) IS TRUE) RIGHT OUTER JOIN t0 ON CASE NULL  WHEN ((t0.c96) NOT BETWEEN (vt0.c0) AND (t0.c96)) THEN (t0.c48 IN ()) ELSE ((((t0.c96)OR(0.18691868093176167)))AND(NULL)) END WHERE ((((((t0.c96))!=((vt1.c0)))) IS TRUE));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS BLOB));
SELECT ALL * FROM vt0, t0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c48);
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE (((((rt0.c0)OR(vt1.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c2) NOT BETWEEN (vt1.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(vt1.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c2) NOT BETWEEN (vt1.c0) AND (NULL))))) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE (((((rt0.c0)OR(vt1.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c2) NOT BETWEEN (vt1.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(vt1.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c2) NOT BETWEEN (vt1.c0) AND (NULL))))) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE (((((rt0.c0)OR(vt1.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c2) NOT BETWEEN (vt1.c0) AND (NULL)))));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (x'');
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((0.41506836493832455) IS FALSE)) ORDER BY '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.41506836493832455) IS FALSE)) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY '' DESC  NULLS LAST);
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((0.41506836493832455) IS FALSE)) ORDER BY '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.41506836493832455) IS FALSE)) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY '' DESC  NULLS LAST);
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((0.41506836493832455) IS FALSE)) ORDER BY '' DESC  NULLS LAST;
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((((rt0.c1)*(rt0.c2)))IS(((t0.c48) NOTNULL))) INNER JOIN vt0 ON (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) BETWEEN ((((rt0.c0))<((t0.c48)))) AND (((((((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))) WHERE ((((rt0.c2 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((rt0.c1)*(rt0.c2)))IS(((t0.c48) NOTNULL))) INNER JOIN vt0 ON (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) BETWEEN ((((rt0.c0))<((t0.c48)))) AND (((((((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((((rt0.c1)*(rt0.c2)))IS(((t0.c48) NOTNULL))) INNER JOIN vt0 ON (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) BETWEEN ((((rt0.c0))<((t0.c48)))) AND (((((((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))) WHERE ((((rt0.c2 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((rt0.c1)*(rt0.c2)))IS(((t0.c48) NOTNULL))) INNER JOIN vt0 ON (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) BETWEEN ((((rt0.c0))<((t0.c48)))) AND (((((((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((((rt0.c1)*(rt0.c2)))IS(((t0.c48) NOTNULL))) INNER JOIN vt0 ON (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) BETWEEN ((((rt0.c0))<((t0.c48)))) AND (((((((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))) WHERE ((((rt0.c2 IN ())) NOTNULL));
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (CASE vt1.c0  WHEN vt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN t0.c48 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN t0.c48 END COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (CASE vt1.c0  WHEN vt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN t0.c48 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN t0.c48 END COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (CASE vt1.c0  WHEN vt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN t0.c48 END COLLATE BINARY);
SELECT * FROM vt1, vt0, rt0 NATURAL JOIN t0 WHERE ((((t0.c48 IN (vt1.c0)))IS NOT(((vt0.c0)>=(vt0.c0))))) ORDER BY ((CAST(rt0.c2 AS TEXT))<=(((vt1.c0)&(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48 IN (vt1.c0)))IS NOT(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 NATURAL JOIN t0 ORDER BY ((CAST(rt0.c2 AS TEXT))<=(((vt1.c0)&(vt0.c0))))  NULLS LAST);
SELECT * FROM vt1, vt0, rt0 NATURAL JOIN t0 WHERE ((((t0.c48 IN (vt1.c0)))IS NOT(((vt0.c0)>=(vt0.c0))))) ORDER BY ((CAST(rt0.c2 AS TEXT))<=(((vt1.c0)&(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48 IN (vt1.c0)))IS NOT(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 NATURAL JOIN t0 ORDER BY ((CAST(rt0.c2 AS TEXT))<=(((vt1.c0)&(vt0.c0))))  NULLS LAST);
SELECT * FROM vt1, vt0, rt0 NATURAL JOIN t0 WHERE ((((t0.c48 IN (vt1.c0)))IS NOT(((vt0.c0)>=(vt0.c0))))) ORDER BY ((CAST(rt0.c2 AS TEXT))<=(((vt1.c0)&(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN vt1 ON CAST(((rt0.c0)IS(rt0.c1)) AS REAL) CROSS JOIN t0 ON ((vt1.c0) IS TRUE) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((((t0.c48) NOT BETWEEN (rt0.c1) AND (t0.c96))) BETWEEN (((vt0.c0)<=(rt0.c1))) AND (json(vt1.c0))) WHERE (((((vt1.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c96))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c96)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CAST(((rt0.c0)IS(rt0.c1)) AS REAL) CROSS JOIN t0 ON ((vt1.c0) IS TRUE) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((((t0.c48) NOT BETWEEN (rt0.c1) AND (t0.c96))) BETWEEN (((vt0.c0)<=(rt0.c1))) AND (json(vt1.c0))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON CAST(((rt0.c0)IS(rt0.c1)) AS REAL) CROSS JOIN t0 ON ((vt1.c0) IS TRUE) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((((t0.c48) NOT BETWEEN (rt0.c1) AND (t0.c96))) BETWEEN (((vt0.c0)<=(rt0.c1))) AND (json(vt1.c0))) WHERE (((((vt1.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c96))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c96)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CAST(((rt0.c0)IS(rt0.c1)) AS REAL) CROSS JOIN t0 ON ((vt1.c0) IS TRUE) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((((t0.c48) NOT BETWEEN (rt0.c1) AND (t0.c96))) BETWEEN (((vt0.c0)<=(rt0.c1))) AND (json(vt1.c0))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON CAST(((rt0.c0)IS(rt0.c1)) AS REAL) CROSS JOIN t0 ON ((vt1.c0) IS TRUE) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((((t0.c48) NOT BETWEEN (rt0.c1) AND (t0.c96))) BETWEEN (((vt0.c0)<=(rt0.c1))) AND (json(vt1.c0))) WHERE (((((vt1.c0) NOTNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c96))))));
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c48)<<(vt1.c0)))>(COALESCE(t0.c48, t0.c48)))) ORDER BY ((CASE vt1.c0  WHEN t0.c96 THEN t0.c48 ELSE t0.c96 END)<=(TYPEOF(t0.c96)));
SELECT SUM(count) FROM (SELECT ((((((t0.c48)<<(vt1.c0)))>(COALESCE(t0.c48, t0.c48)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((CASE vt1.c0  WHEN t0.c96 THEN t0.c48 ELSE t0.c96 END)<=(TYPEOF(t0.c96))));
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c48)<<(vt1.c0)))>(COALESCE(t0.c48, t0.c48)))) ORDER BY ((CASE vt1.c0  WHEN t0.c96 THEN t0.c48 ELSE t0.c96 END)<=(TYPEOF(t0.c96)));
SELECT SUM(count) FROM (SELECT ((((((t0.c48)<<(vt1.c0)))>(COALESCE(t0.c48, t0.c48)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((CASE vt1.c0  WHEN t0.c96 THEN t0.c48 ELSE t0.c96 END)<=(TYPEOF(t0.c96))));
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c48)<<(vt1.c0)))>(COALESCE(t0.c48, t0.c48)))) ORDER BY ((CASE vt1.c0  WHEN t0.c96 THEN t0.c48 ELSE t0.c96 END)<=(TYPEOF(t0.c96)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN ()))<=(((((rt0.c2)AND(vt1.c0)))AND('0.5870923948098457')))) CROSS JOIN rt0 ON (+ (CAST(t0.c96 AS TEXT))) FULL OUTER JOIN t0 ON (((rt0.c0) ISNULL) IN ()) WHERE (CAST(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL)) ORDER BY rt0.c2  NULLS FIRST, json_extract(TYPEOF('-107811085'), ((t0.c48)<(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN ()))<=(((((rt0.c2)AND(vt1.c0)))AND('0.5870923948098457')))) CROSS JOIN rt0 ON (+ (CAST(t0.c96 AS TEXT))) FULL OUTER JOIN t0 ON (((rt0.c0) ISNULL) IN ()) ORDER BY rt0.c2  NULLS FIRST, json_extract(TYPEOF('-107811085'), ((t0.c48)<(vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN ()))<=(((((rt0.c2)AND(vt1.c0)))AND('0.5870923948098457')))) CROSS JOIN rt0 ON (+ (CAST(t0.c96 AS TEXT))) FULL OUTER JOIN t0 ON (((rt0.c0) ISNULL) IN ()) WHERE (CAST(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL)) ORDER BY rt0.c2  NULLS FIRST, json_extract(TYPEOF('-107811085'), ((t0.c48)<(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN ()))<=(((((rt0.c2)AND(vt1.c0)))AND('0.5870923948098457')))) CROSS JOIN rt0 ON (+ (CAST(t0.c96 AS TEXT))) FULL OUTER JOIN t0 ON (((rt0.c0) ISNULL) IN ()) ORDER BY rt0.c2  NULLS FIRST, json_extract(TYPEOF('-107811085'), ((t0.c48)<(vt0.c0)))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))<=(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))<=(NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))<=(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))<=(NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))<=(NULL)));
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (0.3286326749812053)) WHERE (((((rt0.c0)OR(rt0.c1)))>>((('.m')<(rt0.c0))))) ORDER BY (+ (rt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c1)))>>((('.m')<(rt0.c0))))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (0.3286326749812053)) ORDER BY (+ (rt0.c1)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (0.3286326749812053)) WHERE (((((rt0.c0)OR(rt0.c1)))>>((('.m')<(rt0.c0))))) ORDER BY (+ (rt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c1)))>>((('.m')<(rt0.c0))))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (0.3286326749812053)) ORDER BY (+ (rt0.c1)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (0.3286326749812053)) WHERE (((((rt0.c0)OR(rt0.c1)))>>((('.m')<(rt0.c0))))) ORDER BY (+ (rt0.c1)) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)=(vt0.c0))) BETWEEN (vt0.c0) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)==(vt0.c0))) BETWEEN (vt0.c0) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)=(vt0.c0))) BETWEEN (vt0.c0) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)==(vt0.c0))) BETWEEN (vt0.c0) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)=(vt0.c0))) BETWEEN (vt0.c0) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM rt0, vt0, vt1 WHERE ((((((- (rt0.c1)))AND((((vt0.c0))=((rt0.c0))))))AND((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c1)))AND((((vt0.c0))==((rt0.c0))))))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE ((((((- (rt0.c1)))AND((((vt0.c0))=((rt0.c0))))))AND((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c1)))AND((((vt0.c0))==((rt0.c0))))))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE ((((((- (rt0.c1)))AND((((vt0.c0))=((rt0.c0))))))AND((rt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN (rt0.c1, rt0.c0)))-(((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))))) ORDER BY ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c1, rt0.c0)))-(((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN (rt0.c1, rt0.c0)))-(((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))))) ORDER BY ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c1, rt0.c0)))-(((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN (rt0.c1, rt0.c0)))-(((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))))) ORDER BY ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))) IS TRUE) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((('1778092285')AND(vt0.c0))) ORDER BY (~ (((vt0.c0)+(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('1778092285')AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0)+(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((('1778092285')AND(vt0.c0))) ORDER BY (~ (((vt0.c0)+(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('1778092285')AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0)+(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((('1778092285')AND(vt0.c0))) ORDER BY (~ (((vt0.c0)+(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (rt0.c2) ORDER BY ((CAST(rt0.c2 AS BLOB))||(((1.92824439E9)/(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY ((CAST(rt0.c2 AS BLOB))||(((1.92824439E9)/(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (rt0.c2) ORDER BY ((CAST(rt0.c2 AS BLOB))||(((1.92824439E9)/(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY ((CAST(rt0.c2 AS BLOB))||(((1.92824439E9)/(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (rt0.c2) ORDER BY ((CAST(rt0.c2 AS BLOB))||(((1.92824439E9)/(rt0.c2)))) DESC;
SELECT * FROM t0, vt1, vt0 WHERE ((((vt0.c0 IN (vt1.c0))) BETWEEN (vt0.c0) AND ((- (NULL)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt1.c0))) BETWEEN (vt0.c0) AND ((- (NULL))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((((vt0.c0 IN (vt1.c0))) BETWEEN (vt0.c0) AND ((- (NULL)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt1.c0))) BETWEEN (vt0.c0) AND ((- (NULL))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((((vt0.c0 IN (vt1.c0))) BETWEEN (vt0.c0) AND ((- (NULL)))));
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN rt0 ON NULL WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN t0.c96 ELSE t0.c96 END IN ())) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c0 THEN t0.c96 ELSE t0.c96 END IN ())) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN rt0 ON NULL ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN rt0 ON NULL WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN t0.c96 ELSE t0.c96 END IN ())) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c0 THEN t0.c96 ELSE t0.c96 END IN ())) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN rt0 ON NULL ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN rt0 ON NULL WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN t0.c96 ELSE t0.c96 END IN ())) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM rt0 INDEXED BY i75 WHERE (((rt0.c2)IS NOT(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)IS NOT(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INDEXED BY i75);
SELECT ALL * FROM rt0 INDEXED BY i75 WHERE (((rt0.c2)IS NOT(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)IS NOT(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INDEXED BY i75);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN ((t0.c48)==(t0.c96)) THEN NULL WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN TRIM(DISTINCT vt1.c0, rt0.c2) WHEN (((rt0.c1)) BETWEEN ((t0.c96)) AND ((t0.c48))) THEN CASE WHEN vt1.c0 THEN t0.c96 WHEN t0.c96 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c0) NOT BETWEEN (x'e0b2') AND (vt1.c0)) END LEFT OUTER JOIN t0 ON t0.c48 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN ((t0.c48)==(t0.c96)) THEN NULL WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN TRIM(DISTINCT vt1.c0, rt0.c2) WHEN (((rt0.c1)) BETWEEN ((t0.c96)) AND ((t0.c48))) THEN CASE WHEN vt1.c0 THEN t0.c96 WHEN t0.c96 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c0) NOT BETWEEN (x'e0b2') AND (vt1.c0)) END LEFT OUTER JOIN t0 ON t0.c48);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN ((t0.c48)==(t0.c96)) THEN NULL WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN TRIM(DISTINCT vt1.c0, rt0.c2) WHEN (((rt0.c1)) BETWEEN ((t0.c96)) AND ((t0.c48))) THEN CASE WHEN vt1.c0 THEN t0.c96 WHEN t0.c96 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c0) NOT BETWEEN (x'e0b2') AND (vt1.c0)) END LEFT OUTER JOIN t0 ON t0.c48 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN ((t0.c48)==(t0.c96)) THEN NULL WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN TRIM(DISTINCT vt1.c0, rt0.c2) WHEN (((rt0.c1)) BETWEEN ((t0.c96)) AND ((t0.c48))) THEN CASE WHEN vt1.c0 THEN t0.c96 WHEN t0.c96 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c0) NOT BETWEEN (x'e0b2') AND (vt1.c0)) END LEFT OUTER JOIN t0 ON t0.c48);
SELECT * FROM vt1, t0, rt0, vt0 WHERE ((((rt0.c1))=((t0.c48))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c1))=((t0.c48))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT * FROM vt1, t0, rt0, vt0 WHERE ((((rt0.c1))=((t0.c48))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c1))=((t0.c48))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT * FROM vt1, t0, rt0, vt0 WHERE ((((rt0.c1))=((t0.c48))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((((((((((((rt0.c2)OR(vt1.c0)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(TRIM(DISTINCT x'', x''))))OR(rt0.c1 COLLATE NOCASE)))OR(((0Xffffffffcafcf117) NOTNULL))))AND((+ (vt1.c0)))))AND(((vt1.c0) NOTNULL))))AND((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ORDER BY CASE CAST(rt0.c2 AS BLOB)  WHEN (rt0.c2 IN ()) THEN (((rt0.c1))==((vt1.c0))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((rt0.c2)OR(vt1.c0)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(TRIM(DISTINCT x'', x''))))OR(rt0.c1 COLLATE NOCASE)))OR(((0Xffffffffcafcf117) NOTNULL))))AND((+ (vt1.c0)))))AND(((vt1.c0) NOTNULL))))AND((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE CAST(rt0.c2 AS BLOB)  WHEN (rt0.c2 IN ()) THEN (((rt0.c1))==((vt1.c0))) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((((((((((((rt0.c2)OR(vt1.c0)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(TRIM(DISTINCT x'', x''))))OR(rt0.c1 COLLATE NOCASE)))OR(((0Xffffffffcafcf117) NOTNULL))))AND((+ (vt1.c0)))))AND(((vt1.c0) NOTNULL))))AND((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ORDER BY CASE CAST(rt0.c2 AS BLOB)  WHEN (rt0.c2 IN ()) THEN (((rt0.c1))==((vt1.c0))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((rt0.c2)OR(vt1.c0)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(TRIM(DISTINCT x'', x''))))OR(rt0.c1 COLLATE NOCASE)))OR(((0Xffffffffcafcf117) NOTNULL))))AND((+ (vt1.c0)))))AND(((vt1.c0) NOTNULL))))AND((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE CAST(rt0.c2 AS BLOB)  WHEN (rt0.c2 IN ()) THEN (((rt0.c1))==((vt1.c0))) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((((((((((((rt0.c2)OR(vt1.c0)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(TRIM(DISTINCT x'', x''))))OR(rt0.c1 COLLATE NOCASE)))OR(((0Xffffffffcafcf117) NOTNULL))))AND((+ (vt1.c0)))))AND(((vt1.c0) NOTNULL))))AND((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ORDER BY CASE CAST(rt0.c2 AS BLOB)  WHEN (rt0.c2 IN ()) THEN (((rt0.c1))==((vt1.c0))) END DESC  NULLS LAST;
SELECT * FROM vt1, t0, vt0 WHERE (((t0.c96 COLLATE BINARY) ISNULL)) ORDER BY ((x'1da2')<(((((((((x'')OR(vt0.c0)))OR(t0.c96)))OR(t0.c48)))AND(vt0.c0)))) DESC  NULLS FIRST, (((((((t0.c96, t0.c96, vt0.c0))==((t0.c96, vt1.c0, t0.c48))))AND(vt0.c0)))OR((t0.c96 IN (vt0.c0, vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c96 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((x'1da2')<(((((((((x'')OR(vt0.c0)))OR(t0.c96)))OR(t0.c48)))AND(vt0.c0)))) DESC  NULLS FIRST, (((((((t0.c96, t0.c96, vt0.c0))==((t0.c96, vt1.c0, t0.c48))))AND(vt0.c0)))OR((t0.c96 IN (vt0.c0, vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1, t0, vt0 WHERE (((t0.c96 COLLATE BINARY) ISNULL)) ORDER BY ((x'1da2')<(((((((((x'')OR(vt0.c0)))OR(t0.c96)))OR(t0.c48)))AND(vt0.c0)))) DESC  NULLS FIRST, (((((((t0.c96, t0.c96, vt0.c0))==((t0.c96, vt1.c0, t0.c48))))AND(vt0.c0)))OR((t0.c96 IN (vt0.c0, vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c96 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((x'1da2')<(((((((((x'')OR(vt0.c0)))OR(t0.c96)))OR(t0.c48)))AND(vt0.c0)))) DESC  NULLS FIRST, (((((((t0.c96, t0.c96, vt0.c0))==((t0.c96, vt1.c0, t0.c48))))AND(vt0.c0)))OR((t0.c96 IN (vt0.c0, vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1, t0, vt0 WHERE (((t0.c96 COLLATE BINARY) ISNULL)) ORDER BY ((x'1da2')<(((((((((x'')OR(vt0.c0)))OR(t0.c96)))OR(t0.c48)))AND(vt0.c0)))) DESC  NULLS FIRST, (((((((t0.c96, t0.c96, vt0.c0))==((t0.c96, vt1.c0, t0.c48))))AND(vt0.c0)))OR((t0.c96 IN (vt0.c0, vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((t0.c96 IN ())))=((t0.c96 COLLATE NOCASE)))) ORDER BY ((LIKELY(t0.c96))GLOB((t0.c96 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c96 IN ())))==((t0.c96 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((LIKELY(t0.c96))GLOB((t0.c96 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((t0.c96 IN ())))=((t0.c96 COLLATE NOCASE)))) ORDER BY ((LIKELY(t0.c96))GLOB((t0.c96 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c96 IN ())))==((t0.c96 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((LIKELY(t0.c96))GLOB((t0.c96 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((t0.c96 IN ())))=((t0.c96 COLLATE NOCASE)))) ORDER BY ((LIKELY(t0.c96))GLOB((t0.c96 IN ()))) ASC;
SELECT ALL * FROM vt0, rt0 WHERE ((- (CASE rt0.c0  WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0Xffffffffd1624b6f END)));
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c0  WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0xffffffffd1624b6f END))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((- (CASE rt0.c0  WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0Xffffffffd1624b6f END)));
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c0  WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0xffffffffd1624b6f END))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((- (CASE rt0.c0  WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0Xffffffffd1624b6f END)));
SELECT * FROM vt0, vt1, rt0, t0 WHERE (CAST(CASE rt0.c2  WHEN t0.c48 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 0.49655773541530357 END AS TEXT)) ORDER BY (((((((rt0.c1))=((0.8810191499129908))))AND(rt0.c0 COLLATE NOCASE)))OR(t0.c96 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN t0.c48 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 0.49655773541530357 END AS TEXT)) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY (((((((rt0.c1))=((0.8810191499129908))))AND(rt0.c0 COLLATE NOCASE)))OR(t0.c96 COLLATE NOCASE)));
SELECT * FROM vt0, vt1, rt0, t0 WHERE (CAST(CASE rt0.c2  WHEN t0.c48 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 0.49655773541530357 END AS TEXT)) ORDER BY (((((((rt0.c1))=((0.8810191499129908))))AND(rt0.c0 COLLATE NOCASE)))OR(t0.c96 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN t0.c48 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 0.49655773541530357 END AS TEXT)) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY (((((((rt0.c1))=((0.8810191499129908))))AND(rt0.c0 COLLATE NOCASE)))OR(t0.c96 COLLATE NOCASE)));
SELECT * FROM vt0, vt1, rt0, t0 WHERE (CAST(CASE rt0.c2  WHEN t0.c48 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 0.49655773541530357 END AS TEXT)) ORDER BY (((((((rt0.c1))=((0.8810191499129908))))AND(rt0.c0 COLLATE NOCASE)))OR(t0.c96 COLLATE NOCASE));
SELECT COUNT(*) FROM t0 WHERE (LIKELIHOOD(DISTINCT ((1341041880)GLOB(t0.c48)), 0.010217919962514865));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((1341041880)GLOB(t0.c48)), 0.010217919962514865)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LIKELIHOOD(DISTINCT ((1341041880)GLOB(t0.c48)), 0.010217919962514865));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((1341041880)GLOB(t0.c48)), 0.010217919962514865)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LIKELIHOOD(DISTINCT ((1341041880)GLOB(t0.c48)), 0.010217919962514865));
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((t0.c96) NOTNULL))+(((rt0.c0)%(vt1.c0))))) ORDER BY (((((+ (t0.c48)))OR(CAST(vt1.c0 AS BLOB))))AND(0.6065425136915692)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96) NOTNULL))+(((rt0.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt0, rt0, t0, vt1 ORDER BY (((((+ (t0.c48)))OR(CAST(vt1.c0 AS BLOB))))AND(0.6065425136915692)) ASC);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((t0.c96) NOTNULL))+(((rt0.c0)%(vt1.c0))))) ORDER BY (((((+ (t0.c48)))OR(CAST(vt1.c0 AS BLOB))))AND(0.6065425136915692)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96) NOTNULL))+(((rt0.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt0, rt0, t0, vt1 ORDER BY (((((+ (t0.c48)))OR(CAST(vt1.c0 AS BLOB))))AND(0.6065425136915692)) ASC);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((t0.c96) NOTNULL))+(((rt0.c0)%(vt1.c0))))) ORDER BY (((((+ (t0.c48)))OR(CAST(vt1.c0 AS BLOB))))AND(0.6065425136915692)) ASC;
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (((JULIANDAY(rt0.c0, t0.c96, vt1.c0)) NOT BETWEEN (((rt0.c2)&(t0.c48))) AND (t0.c96))) ORDER BY ((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))OR(((vt1.c0)<(rt0.c2)))))AND(0.17364606154022488)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(rt0.c0, t0.c96, vt1.c0)) NOT BETWEEN (((rt0.c2)&(t0.c48))) AND (t0.c96))) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY ((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))OR(((vt1.c0)<(rt0.c2)))))AND(0.17364606154022488)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (((JULIANDAY(rt0.c0, t0.c96, vt1.c0)) NOT BETWEEN (((rt0.c2)&(t0.c48))) AND (t0.c96))) ORDER BY ((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))OR(((vt1.c0)<(rt0.c2)))))AND(0.17364606154022488)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(rt0.c0, t0.c96, vt1.c0)) NOT BETWEEN (((rt0.c2)&(t0.c48))) AND (t0.c96))) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY ((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))OR(((vt1.c0)<(rt0.c2)))))AND(0.17364606154022488)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (((JULIANDAY(rt0.c0, t0.c96, vt1.c0)) NOT BETWEEN (((rt0.c2)&(t0.c48))) AND (t0.c96))) ORDER BY ((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))OR(((vt1.c0)<(rt0.c2)))))AND(0.17364606154022488)) DESC  NULLS LAST;
SELECT * FROM vt0, vt1, t0 LEFT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT t0.c48, 0.9937801761749294) COLLATE BINARY WHERE (CAST('754363135' AS TEXT)) ORDER BY ((((((((((vt1.c0)<=(-7.6425497E8)))AND((NOT (rt0.c2)))))AND(((0.6189129087052927)<>(rt0.c1)))))AND(rt0.c0)))AND(CASE WHEN vt1.c0 THEN '1627250627' WHEN rt0.c1 THEN '-1433281206' WHEN vt1.c0 THEN rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('754363135' AS TEXT)) IS TRUE)  as count FROM vt0, vt1, t0 LEFT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT t0.c48, 0.9937801761749294) COLLATE BINARY ORDER BY ((((((((((vt1.c0)<=(-7.6425497E8)))AND((NOT (rt0.c2)))))AND(((0.6189129087052927)!=(rt0.c1)))))AND(rt0.c0)))AND(CASE WHEN vt1.c0 THEN '1627250627' WHEN rt0.c1 THEN '-1433281206' WHEN vt1.c0 THEN rt0.c2 END)) ASC);
SELECT * FROM vt0, vt1, t0 LEFT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT t0.c48, 0.9937801761749294) COLLATE BINARY WHERE (CAST('754363135' AS TEXT)) ORDER BY ((((((((((vt1.c0)<=(-7.6425497E8)))AND((NOT (rt0.c2)))))AND(((0.6189129087052927)<>(rt0.c1)))))AND(rt0.c0)))AND(CASE WHEN vt1.c0 THEN '1627250627' WHEN rt0.c1 THEN '-1433281206' WHEN vt1.c0 THEN rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('754363135' AS TEXT)) IS TRUE)  as count FROM vt0, vt1, t0 LEFT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT t0.c48, 0.9937801761749294) COLLATE BINARY ORDER BY ((((((((((vt1.c0)<=(-7.6425497E8)))AND((NOT (rt0.c2)))))AND(((0.6189129087052927)!=(rt0.c1)))))AND(rt0.c0)))AND(CASE WHEN vt1.c0 THEN '1627250627' WHEN rt0.c1 THEN '-1433281206' WHEN vt1.c0 THEN rt0.c2 END)) ASC);
SELECT * FROM vt0, vt1, t0 LEFT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT t0.c48, 0.9937801761749294) COLLATE BINARY WHERE (CAST('754363135' AS TEXT)) ORDER BY ((((((((((vt1.c0)<=(-7.6425497E8)))AND((NOT (rt0.c2)))))AND(((0.6189129087052927)<>(rt0.c1)))))AND(rt0.c0)))AND(CASE WHEN vt1.c0 THEN '1627250627' WHEN rt0.c1 THEN '-1433281206' WHEN vt1.c0 THEN rt0.c2 END)) ASC;
SELECT * FROM vt1 WHERE ((- (vt1.c0))) ORDER BY LIKELIHOOD(json_patch(vt1.c0, vt1.c0), 0.2199865869278026), ((((vt1.c0) NOT NULL))&(((vt1.c0) ISNULL))), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS(((vt1.c0)%(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY LIKELIHOOD(json_patch(vt1.c0, vt1.c0), 0.2199865869278026), ((((vt1.c0) NOT NULL))&(((vt1.c0) ISNULL))), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS(((vt1.c0)%(vt1.c0)))));
SELECT * FROM vt1 WHERE ((- (vt1.c0))) ORDER BY LIKELIHOOD(json_patch(vt1.c0, vt1.c0), 0.2199865869278026), ((((vt1.c0) NOT NULL))&(((vt1.c0) ISNULL))), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS(((vt1.c0)%(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY LIKELIHOOD(json_patch(vt1.c0, vt1.c0), 0.2199865869278026), ((((vt1.c0) NOT NULL))&(((vt1.c0) ISNULL))), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS(((vt1.c0)%(vt1.c0)))));
SELECT ALL * FROM rt0, vt0 NOT INDEXED WHERE ((0.15213892590334743 IN ()));
SELECT SUM(count) FROM (SELECT (((0.15213892590334743 IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 NOT INDEXED WHERE ((0.15213892590334743 IN ()));
SELECT SUM(count) FROM (SELECT (((0.15213892590334743 IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 NOT INDEXED WHERE ((0.15213892590334743 IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((((((t0.c48)AND(t0.c96)))AND(t0.c96)))OR(t0.c48)))OR(t0.c48))))=((t0.c96))));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c48)AND(t0.c96)))AND(t0.c96)))OR(t0.c48)))OR(t0.c48))))==((t0.c96)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((((((t0.c48)AND(t0.c96)))AND(t0.c96)))OR(t0.c48)))OR(t0.c48))))=((t0.c96))));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c48)AND(t0.c96)))AND(t0.c96)))OR(t0.c48)))OR(t0.c48))))==((t0.c96)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((((((t0.c48)AND(t0.c96)))AND(t0.c96)))OR(t0.c48)))OR(t0.c48))))=((t0.c96))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))&(CASE vt1.c0  WHEN rt0.c2 THEN vt1.c0 END)) RIGHT OUTER JOIN rt0 ON 0.15213892590334743 RIGHT OUTER JOIN vt1 ON (((rt0.c0, vt0.c0, rt0.c0)) BETWEEN ((0.0659709667214351, (((t0.c48, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, t0.c96)) AND ((t0.c48, t0.c48, vt1.c0))), ((('䂊YL'))<((t0.c48))))) AND ((t0.c96, ((rt0.c1) IS FALSE), ((vt1.c0)LIKE(rt0.c1))))) WHERE ((+ (TYPEOF(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ (TYPEOF(rt0.c1)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))&(CASE vt1.c0  WHEN rt0.c2 THEN vt1.c0 END)) RIGHT OUTER JOIN rt0 ON 0.15213892590334743 RIGHT OUTER JOIN vt1 ON (((rt0.c0, vt0.c0, rt0.c0)) BETWEEN ((0.0659709667214351, (((t0.c48, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, t0.c96)) AND ((t0.c48, t0.c48, vt1.c0))), ((('䂊YL'))<((t0.c48))))) AND ((t0.c96, ((rt0.c1) IS FALSE), ((vt1.c0)LIKE(rt0.c1))))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))&(CASE vt1.c0  WHEN rt0.c2 THEN vt1.c0 END)) RIGHT OUTER JOIN rt0 ON 0.15213892590334743 RIGHT OUTER JOIN vt1 ON (((rt0.c0, vt0.c0, rt0.c0)) BETWEEN ((0.0659709667214351, (((t0.c48, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, t0.c96)) AND ((t0.c48, t0.c48, vt1.c0))), ((('䂊YL'))<((t0.c48))))) AND ((t0.c96, ((rt0.c1) IS FALSE), ((vt1.c0)LIKE(rt0.c1))))) WHERE ((+ (TYPEOF(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ (TYPEOF(rt0.c1)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))&(CASE vt1.c0  WHEN rt0.c2 THEN vt1.c0 END)) RIGHT OUTER JOIN rt0 ON 0.15213892590334743 RIGHT OUTER JOIN vt1 ON (((rt0.c0, vt0.c0, rt0.c0)) BETWEEN ((0.0659709667214351, (((t0.c48, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, t0.c96)) AND ((t0.c48, t0.c48, vt1.c0))), ((('䂊YL'))<((t0.c48))))) AND ((t0.c96, ((rt0.c1) IS FALSE), ((vt1.c0)LIKE(rt0.c1))))));
SELECT * FROM vt0 WHERE (UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY NULL  NULLS FIRST, (- (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST, (- (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY NULL  NULLS FIRST, (- (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST, (- (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY NULL  NULLS FIRST, (- (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON '-287095630' WHERE ((((((rt0.c0)) NOT BETWEEN ((t0.c48)) AND ((t0.c48))))IS(t0.c96 COLLATE BINARY))) ORDER BY CASE WHEN CAST(t0.c96 AS TEXT) THEN NULL END;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((t0.c48)) AND ((t0.c48))))IS(t0.c96 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON '-287095630' ORDER BY CASE WHEN CAST(t0.c96 AS TEXT) THEN NULL END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON '-287095630' WHERE ((((((rt0.c0)) NOT BETWEEN ((t0.c48)) AND ((t0.c48))))IS(t0.c96 COLLATE BINARY))) ORDER BY CASE WHEN CAST(t0.c96 AS TEXT) THEN NULL END;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((t0.c48)) AND ((t0.c48))))IS(t0.c96 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON '-287095630' ORDER BY CASE WHEN CAST(t0.c96 AS TEXT) THEN NULL END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON '-287095630' WHERE ((((((rt0.c0)) NOT BETWEEN ((t0.c48)) AND ((t0.c48))))IS(t0.c96 COLLATE BINARY))) ORDER BY CASE WHEN CAST(t0.c96 AS TEXT) THEN NULL END;
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON (- (((vt1.c0)IS NOT(t0.c48)))) WHERE ((+ (json_object(t0.c96, rt0.c1))));
SELECT SUM(count) FROM (SELECT (((+ (json_object(t0.c96, rt0.c1)))) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON (- (((vt1.c0)IS NOT(t0.c48)))));
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON (- (((vt1.c0)IS NOT(t0.c48)))) WHERE ((+ (json_object(t0.c96, rt0.c1))));
SELECT SUM(count) FROM (SELECT (((+ (json_object(t0.c96, rt0.c1)))) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON (- (((vt1.c0)IS NOT(t0.c48)))));
SELECT ALL * FROM rt0 WHERE (CASE 0.17608356302255812  WHEN rt0.c2 COLLATE RTRIM THEN (((rt0.c1, rt0.c2, rt0.c2))<((rt0.c2, rt0.c2, rt0.c1))) ELSE (((rt0.c2, rt0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((NULL, rt0.c1, rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.17608356302255812  WHEN rt0.c2 COLLATE RTRIM THEN (((rt0.c1, rt0.c2, rt0.c2))<((rt0.c2, rt0.c2, rt0.c1))) ELSE (((rt0.c2, rt0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((NULL, rt0.c1, rt0.c1))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE 0.17608356302255812  WHEN rt0.c2 COLLATE RTRIM THEN (((rt0.c1, rt0.c2, rt0.c2))<((rt0.c2, rt0.c2, rt0.c1))) ELSE (((rt0.c2, rt0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((NULL, rt0.c1, rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.17608356302255812  WHEN rt0.c2 COLLATE RTRIM THEN (((rt0.c1, rt0.c2, rt0.c2))<((rt0.c2, rt0.c2, rt0.c1))) ELSE (((rt0.c2, rt0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((NULL, rt0.c1, rt0.c1))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE 0.17608356302255812  WHEN rt0.c2 COLLATE RTRIM THEN (((rt0.c1, rt0.c2, rt0.c2))<((rt0.c2, rt0.c2, rt0.c1))) ELSE (((rt0.c2, rt0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((NULL, rt0.c1, rt0.c1))) END);
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE (((x'') ISNULL)) ORDER BY CASE CASE WHEN 0.19322253250767696 THEN rt0.c2 ELSE rt0.c1 END  WHEN rt0.c2 THEN ((rt0.c2)GLOB(rt0.c0)) ELSE CAST(rt0.c0 AS TEXT) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') ISNULL)) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY CASE CASE WHEN 0.19322253250767696 THEN rt0.c2 ELSE rt0.c1 END  WHEN rt0.c2 THEN ((rt0.c2)GLOB(rt0.c0)) ELSE CAST(rt0.c0 AS TEXT) END ASC);
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE (((x'') ISNULL)) ORDER BY CASE CASE WHEN 0.19322253250767696 THEN rt0.c2 ELSE rt0.c1 END  WHEN rt0.c2 THEN ((rt0.c2)GLOB(rt0.c0)) ELSE CAST(rt0.c0 AS TEXT) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') ISNULL)) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY CASE CASE WHEN 0.19322253250767696 THEN rt0.c2 ELSE rt0.c1 END  WHEN rt0.c2 THEN ((rt0.c2)GLOB(rt0.c0)) ELSE CAST(rt0.c0 AS TEXT) END ASC);
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE (((x'') ISNULL)) ORDER BY CASE CASE WHEN 0.19322253250767696 THEN rt0.c2 ELSE rt0.c1 END  WHEN rt0.c2 THEN ((rt0.c2)GLOB(rt0.c0)) ELSE CAST(rt0.c0 AS TEXT) END ASC;
SELECT * FROM t0, rt0 CROSS JOIN vt0 ON x'6460' WHERE (CAST(NULL AS NUMERIC)) ORDER BY CAST(x'' AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON x'6460' ORDER BY CAST(x'' AS INTEGER)  NULLS LAST);
SELECT * FROM t0, rt0 CROSS JOIN vt0 ON x'6460' WHERE (CAST(NULL AS NUMERIC)) ORDER BY CAST(x'' AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON x'6460' ORDER BY CAST(x'' AS INTEGER)  NULLS LAST);
SELECT * FROM t0, rt0 CROSS JOIN vt0 ON x'6460' WHERE (CAST(NULL AS NUMERIC)) ORDER BY CAST(x'' AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((0.673103605602367)!=((~ (rt0.c0))))) ORDER BY TYPEOF('') COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.673103605602367)<>((~ (rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY TYPEOF('') COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((0.673103605602367)!=((~ (rt0.c0))))) ORDER BY TYPEOF('') COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.673103605602367)<>((~ (rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY TYPEOF('') COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((0.673103605602367)!=((~ (rt0.c0))))) ORDER BY TYPEOF('') COLLATE NOCASE DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))>(json_array_length(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))>(json_array_length(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))>(json_array_length(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))>(json_array_length(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c48) NOTNULL)) BETWEEN (((vt0.c0) ISNULL)) AND (CAST(t0.c96 AS REAL))) WHERE ((((NULL, t0.c96, vt0.c0, t0.c48, t0.c96, vt0.c0, t0.c96)) BETWEEN ((((((t0.c48)OR(vt0.c0)))OR(t0.c96)), (NOT (t0.c48)), ((vt0.c0) NOT BETWEEN (t0.c96) AND (t0.c48)), ((vt0.c0)<>(t0.c48)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '774049937' WHEN 0Xffffffff8eded1b3 THEN t0.c96 ELSE t0.c48 END, ((t0.c48) IS FALSE), ((t0.c96)IS(t0.c96)))) AND ((((((t0.c48)AND(t0.c96)))OR(t0.c48)), (t0.c48 IN (t0.c48)), ((t0.c48) ISNULL), LTRIM(0Xffffffffbaeaa563, t0.c96), (- (vt0.c0)), ((t0.c96)IS NOT(t0.c96)), ((t0.c96)<=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NULL, t0.c96, vt0.c0, t0.c48, t0.c96, vt0.c0, t0.c96)) BETWEEN ((((((t0.c48)OR(vt0.c0)))OR(t0.c96)), (NOT (t0.c48)), ((vt0.c0) NOT BETWEEN (t0.c96) AND (t0.c48)), ((vt0.c0)!=(t0.c48)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '774049937' WHEN 0Xffffffff8eded1b3 THEN t0.c96 ELSE t0.c48 END, ((t0.c48) IS FALSE), ((t0.c96)IS(t0.c96)))) AND ((((((t0.c48)AND(t0.c96)))OR(t0.c48)), (t0.c48 IN (t0.c48)), ((t0.c48) ISNULL), LTRIM(0xffffffffbaeaa563, t0.c96), (- (vt0.c0)), ((t0.c96)IS NOT(t0.c96)), ((t0.c96)<=(vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c48) NOTNULL)) BETWEEN (((vt0.c0) ISNULL)) AND (CAST(t0.c96 AS REAL))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c48) NOTNULL)) BETWEEN (((vt0.c0) ISNULL)) AND (CAST(t0.c96 AS REAL))) WHERE ((((NULL, t0.c96, vt0.c0, t0.c48, t0.c96, vt0.c0, t0.c96)) BETWEEN ((((((t0.c48)OR(vt0.c0)))OR(t0.c96)), (NOT (t0.c48)), ((vt0.c0) NOT BETWEEN (t0.c96) AND (t0.c48)), ((vt0.c0)<>(t0.c48)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '774049937' WHEN 0Xffffffff8eded1b3 THEN t0.c96 ELSE t0.c48 END, ((t0.c48) IS FALSE), ((t0.c96)IS(t0.c96)))) AND ((((((t0.c48)AND(t0.c96)))OR(t0.c48)), (t0.c48 IN (t0.c48)), ((t0.c48) ISNULL), LTRIM(0Xffffffffbaeaa563, t0.c96), (- (vt0.c0)), ((t0.c96)IS NOT(t0.c96)), ((t0.c96)<=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NULL, t0.c96, vt0.c0, t0.c48, t0.c96, vt0.c0, t0.c96)) BETWEEN ((((((t0.c48)OR(vt0.c0)))OR(t0.c96)), (NOT (t0.c48)), ((vt0.c0) NOT BETWEEN (t0.c96) AND (t0.c48)), ((vt0.c0)!=(t0.c48)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '774049937' WHEN 0Xffffffff8eded1b3 THEN t0.c96 ELSE t0.c48 END, ((t0.c48) IS FALSE), ((t0.c96)IS(t0.c96)))) AND ((((((t0.c48)AND(t0.c96)))OR(t0.c48)), (t0.c48 IN (t0.c48)), ((t0.c48) ISNULL), LTRIM(0xffffffffbaeaa563, t0.c96), (- (vt0.c0)), ((t0.c96)IS NOT(t0.c96)), ((t0.c96)<=(vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c48) NOTNULL)) BETWEEN (((vt0.c0) ISNULL)) AND (CAST(t0.c96 AS REAL))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c48) NOTNULL)) BETWEEN (((vt0.c0) ISNULL)) AND (CAST(t0.c96 AS REAL))) WHERE ((((NULL, t0.c96, vt0.c0, t0.c48, t0.c96, vt0.c0, t0.c96)) BETWEEN ((((((t0.c48)OR(vt0.c0)))OR(t0.c96)), (NOT (t0.c48)), ((vt0.c0) NOT BETWEEN (t0.c96) AND (t0.c48)), ((vt0.c0)<>(t0.c48)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '774049937' WHEN 0Xffffffff8eded1b3 THEN t0.c96 ELSE t0.c48 END, ((t0.c48) IS FALSE), ((t0.c96)IS(t0.c96)))) AND ((((((t0.c48)AND(t0.c96)))OR(t0.c48)), (t0.c48 IN (t0.c48)), ((t0.c48) ISNULL), LTRIM(0Xffffffffbaeaa563, t0.c96), (- (vt0.c0)), ((t0.c96)IS NOT(t0.c96)), ((t0.c96)<=(vt0.c0))))));
SELECT * FROM vt1, rt0, t0 WHERE (((rt0.c2) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (((rt0.c2) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (((rt0.c2) IS TRUE));
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (CASE ((((((((rt0.c2)OR(rt0.c1)))AND(t0.c96)))OR(t0.c48)))AND(rt0.c1))  WHEN ((rt0.c2)<>(t0.c48)) THEN ((((rt0.c1)OR(t0.c48)))AND(t0.c96)) WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c1)AND(rt0.c1)))OR(t0.c48)) WHEN ((((((((((((t0.c96)OR(vt1.c0)))OR(6.69576614E8)))OR(t0.c48)))AND(rt0.c2)))AND(vt1.c0)))OR(vt1.c0)) THEN ((((t0.c48)AND(rt0.c1)))AND(vt1.c0)) ELSE ((rt0.c2) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c2)OR(rt0.c1)))AND(t0.c96)))OR(t0.c48)))AND(rt0.c1))  WHEN ((rt0.c2)<>(t0.c48)) THEN ((((rt0.c1)OR(t0.c48)))AND(t0.c96)) WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c1)AND(rt0.c1)))OR(t0.c48)) WHEN ((((((((((((t0.c96)OR(vt1.c0)))OR(6.69576614E8)))OR(t0.c48)))AND(rt0.c2)))AND(vt1.c0)))OR(vt1.c0)) THEN ((((t0.c48)AND(rt0.c1)))AND(vt1.c0)) ELSE ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (CASE ((((((((rt0.c2)OR(rt0.c1)))AND(t0.c96)))OR(t0.c48)))AND(rt0.c1))  WHEN ((rt0.c2)<>(t0.c48)) THEN ((((rt0.c1)OR(t0.c48)))AND(t0.c96)) WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c1)AND(rt0.c1)))OR(t0.c48)) WHEN ((((((((((((t0.c96)OR(vt1.c0)))OR(6.69576614E8)))OR(t0.c48)))AND(rt0.c2)))AND(vt1.c0)))OR(vt1.c0)) THEN ((((t0.c48)AND(rt0.c1)))AND(vt1.c0)) ELSE ((rt0.c2) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c2)OR(rt0.c1)))AND(t0.c96)))OR(t0.c48)))AND(rt0.c1))  WHEN ((rt0.c2)<>(t0.c48)) THEN ((((rt0.c1)OR(t0.c48)))AND(t0.c96)) WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c1)AND(rt0.c1)))OR(t0.c48)) WHEN ((((((((((((t0.c96)OR(vt1.c0)))OR(6.69576614E8)))OR(t0.c48)))AND(rt0.c2)))AND(vt1.c0)))OR(vt1.c0)) THEN ((((t0.c48)AND(rt0.c1)))AND(vt1.c0)) ELSE ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (CASE ((((((((rt0.c2)OR(rt0.c1)))AND(t0.c96)))OR(t0.c48)))AND(rt0.c1))  WHEN ((rt0.c2)<>(t0.c48)) THEN ((((rt0.c1)OR(t0.c48)))AND(t0.c96)) WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c1)AND(rt0.c1)))OR(t0.c48)) WHEN ((((((((((((t0.c96)OR(vt1.c0)))OR(6.69576614E8)))OR(t0.c48)))AND(rt0.c2)))AND(vt1.c0)))OR(vt1.c0)) THEN ((((t0.c48)AND(rt0.c1)))AND(vt1.c0)) ELSE ((rt0.c2) ISNULL) END);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ ('-496820812'))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((+ ('-496820812'))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ ('-496820812'))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((+ ('-496820812'))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ ('-496820812'))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CAST(vt1.c0 AS BLOB))));
SELECT * FROM t0, vt0, vt1, rt0 WHERE ((((((t0.c48) NOT BETWEEN (vt0.c0) AND (rt0.c1))))>=((rt0.c1)))) ORDER BY (- (((rt0.c1) NOT NULL))) ASC  NULLS FIRST, ((((vt1.c0)||(rt0.c1))) NOTNULL) ASC, (((CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END))<=(((rt0.c0 IN (vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c48) NOT BETWEEN (vt0.c0) AND (rt0.c1))))>=((rt0.c1)))) IS TRUE)  as count FROM t0, vt0, vt1, rt0 ORDER BY (- (((rt0.c1) NOT NULL))) ASC  NULLS FIRST, ((((vt1.c0)||(rt0.c1))) NOTNULL) ASC, (((CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END))<=(((rt0.c0 IN (vt1.c0))))) ASC);
SELECT * FROM t0, vt0, vt1, rt0 WHERE ((((((t0.c48) NOT BETWEEN (vt0.c0) AND (rt0.c1))))>=((rt0.c1)))) ORDER BY (- (((rt0.c1) NOT NULL))) ASC  NULLS FIRST, ((((vt1.c0)||(rt0.c1))) NOTNULL) ASC, (((CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END))<=(((rt0.c0 IN (vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c48) NOT BETWEEN (vt0.c0) AND (rt0.c1))))>=((rt0.c1)))) IS TRUE)  as count FROM t0, vt0, vt1, rt0 ORDER BY (- (((rt0.c1) NOT NULL))) ASC  NULLS FIRST, ((((vt1.c0)||(rt0.c1))) NOTNULL) ASC, (((CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END))<=(((rt0.c0 IN (vt1.c0))))) ASC);
SELECT * FROM t0, vt0, vt1, rt0 WHERE ((((((t0.c48) NOT BETWEEN (vt0.c0) AND (rt0.c1))))>=((rt0.c1)))) ORDER BY (- (((rt0.c1) NOT NULL))) ASC  NULLS FIRST, ((((vt1.c0)||(rt0.c1))) NOTNULL) ASC, (((CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END))<=(((rt0.c0 IN (vt1.c0))))) ASC;
SELECT * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((CAST(t0.c96 AS TEXT)) ISNULL) WHERE (DATETIME((t0.c48 IN ()), ((t0.c48)<>(2.100603887E9)), ((t0.c48)>=(t0.c96)))) ORDER BY (((~ (x''))) NOT BETWEEN (((vt0.c0)LIKE(vt1.c0))) AND ((vt1.c0 IN (t0.c48)))) ASC  NULLS LAST, ((vt1.c0) IS TRUE) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATETIME((t0.c48 IN ()), ((t0.c48)!=(2.100603887E9)), ((t0.c48)>=(t0.c96)))) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((CAST(t0.c96 AS TEXT)) ISNULL) ORDER BY (((~ (x''))) NOT BETWEEN (((vt0.c0)LIKE(vt1.c0))) AND ((vt1.c0 IN (t0.c48)))) ASC  NULLS LAST, ((vt1.c0) IS TRUE) COLLATE BINARY  NULLS FIRST);
SELECT * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((CAST(t0.c96 AS TEXT)) ISNULL) WHERE (DATETIME((t0.c48 IN ()), ((t0.c48)<>(2.100603887E9)), ((t0.c48)>=(t0.c96)))) ORDER BY (((~ (x''))) NOT BETWEEN (((vt0.c0)LIKE(vt1.c0))) AND ((vt1.c0 IN (t0.c48)))) ASC  NULLS LAST, ((vt1.c0) IS TRUE) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATETIME((t0.c48 IN ()), ((t0.c48)!=(2.100603887E9)), ((t0.c48)>=(t0.c96)))) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((CAST(t0.c96 AS TEXT)) ISNULL) ORDER BY (((~ (x''))) NOT BETWEEN (((vt0.c0)LIKE(vt1.c0))) AND ((vt1.c0 IN (t0.c48)))) ASC  NULLS LAST, ((vt1.c0) IS TRUE) COLLATE BINARY  NULLS FIRST);
SELECT * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((CAST(t0.c96 AS TEXT)) ISNULL) WHERE (DATETIME((t0.c48 IN ()), ((t0.c48)<>(2.100603887E9)), ((t0.c48)>=(t0.c96)))) ORDER BY (((~ (x''))) NOT BETWEEN (((vt0.c0)LIKE(vt1.c0))) AND ((vt1.c0 IN (t0.c48)))) ASC  NULLS LAST, ((vt1.c0) IS TRUE) COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt1, t0 WHERE (CAST(((vt1.c0) NOT BETWEEN (t0.c96) AND (t0.c48)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (t0.c96) AND (t0.c48)) AS TEXT)) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CAST(((vt1.c0) NOT BETWEEN (t0.c96) AND (t0.c48)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (t0.c96) AND (t0.c48)) AS TEXT)) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CAST(((vt1.c0) NOT BETWEEN (t0.c96) AND (t0.c48)) AS TEXT));
SELECT * FROM rt0 WHERE ((((((NOT (rt0.c0)))OR(rt0.c1 COLLATE RTRIM)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((rt0.c2 COLLATE NOCASE)=(CAST(rt0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c0)))OR(rt0.c1 COLLATE RTRIM)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE NOCASE)==(CAST(rt0.c1 AS TEXT)))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((NOT (rt0.c0)))OR(rt0.c1 COLLATE RTRIM)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((rt0.c2 COLLATE NOCASE)=(CAST(rt0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c0)))OR(rt0.c1 COLLATE RTRIM)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE NOCASE)==(CAST(rt0.c1 AS TEXT)))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((NOT (rt0.c0)))OR(rt0.c1 COLLATE RTRIM)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((rt0.c2 COLLATE NOCASE)=(CAST(rt0.c1 AS TEXT)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 INNER JOIN rt0 ON CASE WHEN (0xffffffffa2cc6c81 IN ('-1920816051', vt0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.5512438427115354) END WHERE ('\L. ') ORDER BY (('') NOT BETWEEN ((((vt1.c0, t0.c48, rt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((x'', rt0.c1, vt1.c0)))) AND ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('\L. ') IS TRUE)  as count FROM t0, vt1, vt0 INNER JOIN rt0 ON CASE WHEN (0xffffffffa2cc6c81 IN ('-1920816051', vt0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.5512438427115354) END ORDER BY (('') NOT BETWEEN ((((vt1.c0, t0.c48, rt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((x'', rt0.c1, vt1.c0)))) AND ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 INNER JOIN rt0 ON CASE WHEN (0xffffffffa2cc6c81 IN ('-1920816051', vt0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.5512438427115354) END WHERE ('\L. ') ORDER BY (('') NOT BETWEEN ((((vt1.c0, t0.c48, rt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((x'', rt0.c1, vt1.c0)))) AND ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('\L. ') IS TRUE)  as count FROM t0, vt1, vt0 INNER JOIN rt0 ON CASE WHEN (0xffffffffa2cc6c81 IN ('-1920816051', vt0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.5512438427115354) END ORDER BY (('') NOT BETWEEN ((((vt1.c0, t0.c48, rt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((x'', rt0.c1, vt1.c0)))) AND ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 INNER JOIN rt0 ON CASE WHEN (0xffffffffa2cc6c81 IN ('-1920816051', vt0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.5512438427115354) END WHERE ('\L. ') ORDER BY (('') NOT BETWEEN ((((vt1.c0, t0.c48, rt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((x'', rt0.c1, vt1.c0)))) AND ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1 WHERE ((~ (CASE 0.43939307618745294  WHEN t0.c48 THEN t0.c48 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c48 END))) ORDER BY (((t0.c96 IN ()))==(CAST(0.5937476704356843 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((~ (CASE 0.43939307618745294  WHEN t0.c48 THEN t0.c48 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c48 END))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c96 IN ()))=(CAST(0.5937476704356843 AS BLOB))));
SELECT COUNT(*) FROM t0, vt1 WHERE ((~ (CASE 0.43939307618745294  WHEN t0.c48 THEN t0.c48 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c48 END))) ORDER BY (((t0.c96 IN ()))==(CAST(0.5937476704356843 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((~ (CASE 0.43939307618745294  WHEN t0.c48 THEN t0.c48 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c48 END))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c96 IN ()))=(CAST(0.5937476704356843 AS BLOB))));
SELECT COUNT(*) FROM t0, vt1 WHERE ((~ (CASE 0.43939307618745294  WHEN t0.c48 THEN t0.c48 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c48 END))) ORDER BY (((t0.c96 IN ()))==(CAST(0.5937476704356843 AS BLOB)));
SELECT ALL * FROM rt0 WHERE ((((0.8696092873511337)|(rt0.c2)) IN ())) ORDER BY CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ('' IN ()) WHEN TRIM(rt0.c0, rt0.c2) THEN CAST(rt0.c0 AS REAL) WHEN rt0.c1 COLLATE BINARY THEN NULL ELSE rt0.c0 COLLATE NOCASE END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.8696092873511337)|(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ('' IN ()) WHEN TRIM(rt0.c0, rt0.c2) THEN CAST(rt0.c0 AS REAL) WHEN rt0.c1 COLLATE BINARY THEN NULL ELSE rt0.c0 COLLATE NOCASE END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((0.8696092873511337)|(rt0.c2)) IN ())) ORDER BY CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ('' IN ()) WHEN TRIM(rt0.c0, rt0.c2) THEN CAST(rt0.c0 AS REAL) WHEN rt0.c1 COLLATE BINARY THEN NULL ELSE rt0.c0 COLLATE NOCASE END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.8696092873511337)|(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ('' IN ()) WHEN TRIM(rt0.c0, rt0.c2) THEN CAST(rt0.c0 AS REAL) WHEN rt0.c1 COLLATE BINARY THEN NULL ELSE rt0.c0 COLLATE NOCASE END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((0.8696092873511337)|(rt0.c2)) IN ())) ORDER BY CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ('' IN ()) WHEN TRIM(rt0.c0, rt0.c2) THEN CAST(rt0.c0 AS REAL) WHEN rt0.c1 COLLATE BINARY THEN NULL ELSE rt0.c0 COLLATE NOCASE END  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1, vt0 LEFT OUTER JOIN t0 ON ((CASE t0.c48  WHEN vt0.c0 THEN rt0.c0 ELSE vt1.c0 END) NOT NULL) WHERE (((((CASE WHEN t0.c96 THEN t0.c96 WHEN 'V#' THEN t0.c96 WHEN vt1.c0 THEN t0.c48 ELSE vt0.c0 END)AND(((t0.c96)>>(rt0.c1)))))AND(rt0.c2))) ORDER BY CASE x''  WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c0)-(vt1.c0)) WHEN '*' THEN ((rt0.c2)+(vt1.c0)) WHEN CAST(t0.c96 AS TEXT) THEN ((NULL)/(vt1.c0)) END  NULLS FIRST, vt0.c0 ASC, ((((rt0.c1)>>(rt0.c0)))*(t0.c96 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t0.c96 THEN t0.c96 WHEN 'V#' THEN t0.c96 WHEN vt1.c0 THEN t0.c48 ELSE vt0.c0 END)AND(((t0.c96)>>(rt0.c1)))))AND(rt0.c2))) IS TRUE)  as count FROM rt0, vt1, vt0 LEFT OUTER JOIN t0 ON ((CASE t0.c48  WHEN vt0.c0 THEN rt0.c0 ELSE vt1.c0 END) NOT NULL) ORDER BY CASE x''  WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c0)-(vt1.c0)) WHEN '*' THEN ((rt0.c2)+(vt1.c0)) WHEN CAST(t0.c96 AS TEXT) THEN ((NULL)/(vt1.c0)) END  NULLS FIRST, vt0.c0 ASC, ((((rt0.c1)>>(rt0.c0)))*(t0.c96 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM rt0, vt1, vt0 LEFT OUTER JOIN t0 ON ((CASE t0.c48  WHEN vt0.c0 THEN rt0.c0 ELSE vt1.c0 END) NOT NULL) WHERE (((((CASE WHEN t0.c96 THEN t0.c96 WHEN 'V#' THEN t0.c96 WHEN vt1.c0 THEN t0.c48 ELSE vt0.c0 END)AND(((t0.c96)>>(rt0.c1)))))AND(rt0.c2))) ORDER BY CASE x''  WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c0)-(vt1.c0)) WHEN '*' THEN ((rt0.c2)+(vt1.c0)) WHEN CAST(t0.c96 AS TEXT) THEN ((NULL)/(vt1.c0)) END  NULLS FIRST, vt0.c0 ASC, ((((rt0.c1)>>(rt0.c0)))*(t0.c96 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t0.c96 THEN t0.c96 WHEN 'V#' THEN t0.c96 WHEN vt1.c0 THEN t0.c48 ELSE vt0.c0 END)AND(((t0.c96)>>(rt0.c1)))))AND(rt0.c2))) IS TRUE)  as count FROM rt0, vt1, vt0 LEFT OUTER JOIN t0 ON ((CASE t0.c48  WHEN vt0.c0 THEN rt0.c0 ELSE vt1.c0 END) NOT NULL) ORDER BY CASE x''  WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c0)-(vt1.c0)) WHEN '*' THEN ((rt0.c2)+(vt1.c0)) WHEN CAST(t0.c96 AS TEXT) THEN ((NULL)/(vt1.c0)) END  NULLS FIRST, vt0.c0 ASC, ((((rt0.c1)>>(rt0.c0)))*(t0.c96 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM rt0, vt1, vt0 LEFT OUTER JOIN t0 ON ((CASE t0.c48  WHEN vt0.c0 THEN rt0.c0 ELSE vt1.c0 END) NOT NULL) WHERE (((((CASE WHEN t0.c96 THEN t0.c96 WHEN 'V#' THEN t0.c96 WHEN vt1.c0 THEN t0.c48 ELSE vt0.c0 END)AND(((t0.c96)>>(rt0.c1)))))AND(rt0.c2))) ORDER BY CASE x''  WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c0)-(vt1.c0)) WHEN '*' THEN ((rt0.c2)+(vt1.c0)) WHEN CAST(t0.c96 AS TEXT) THEN ((NULL)/(vt1.c0)) END  NULLS FIRST, vt0.c0 ASC, ((((rt0.c1)>>(rt0.c0)))*(t0.c96 COLLATE RTRIM)) ASC;
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON TYPEOF(DISTINCT (((t0.c48))==((t0.c48)))) CROSS JOIN vt0 ON ((t0.c96) NOTNULL) COLLATE BINARY WHERE (((((vt0.c0 COLLATE BINARY)AND(((((vt1.c0)OR(t0.c48)))AND(t0.c96)))))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE 489753427 END))) ORDER BY (((((~ (t0.c48)))AND(((((vt1.c0)OR(t0.c96)))OR(vt1.c0)))))AND(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)AND(((((vt1.c0)OR(t0.c48)))AND(t0.c96)))))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE 489753427 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON TYPEOF(DISTINCT (((t0.c48))==((t0.c48)))) CROSS JOIN vt0 ON ((t0.c96) NOTNULL) COLLATE BINARY ORDER BY (((((~ (t0.c48)))AND(((((vt1.c0)OR(t0.c96)))OR(vt1.c0)))))AND(vt0.c0))  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON TYPEOF(DISTINCT (((t0.c48))==((t0.c48)))) CROSS JOIN vt0 ON ((t0.c96) NOTNULL) COLLATE BINARY WHERE (((((vt0.c0 COLLATE BINARY)AND(((((vt1.c0)OR(t0.c48)))AND(t0.c96)))))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE 489753427 END))) ORDER BY (((((~ (t0.c48)))AND(((((vt1.c0)OR(t0.c96)))OR(vt1.c0)))))AND(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)AND(((((vt1.c0)OR(t0.c48)))AND(t0.c96)))))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE 489753427 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON TYPEOF(DISTINCT (((t0.c48))==((t0.c48)))) CROSS JOIN vt0 ON ((t0.c96) NOTNULL) COLLATE BINARY ORDER BY (((((~ (t0.c48)))AND(((((vt1.c0)OR(t0.c96)))OR(vt1.c0)))))AND(vt0.c0))  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON TYPEOF(DISTINCT (((t0.c48))==((t0.c48)))) CROSS JOIN vt0 ON ((t0.c96) NOTNULL) COLLATE BINARY WHERE (((((vt0.c0 COLLATE BINARY)AND(((((vt1.c0)OR(t0.c48)))AND(t0.c96)))))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE 489753427 END))) ORDER BY (((((~ (t0.c48)))AND(((((vt1.c0)OR(t0.c96)))OR(vt1.c0)))))AND(vt0.c0))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (0.6592232005476688 COLLATE BINARY) ORDER BY ((x'ae13')<=((- (t0.c96))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.6592232005476688 COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY ((x'ae13')<=((- (t0.c96))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (0.6592232005476688 COLLATE BINARY) ORDER BY ((x'ae13')<=((- (t0.c96))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.6592232005476688 COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY ((x'ae13')<=((- (t0.c96))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (0.6592232005476688 COLLATE BINARY) ORDER BY ((x'ae13')<=((- (t0.c96))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((((((((t0.c48)) BETWEEN ((t0.c96)) AND ((t0.c96))))OR(((((t0.c96)OR(t0.c48)))AND(0.9202630789143641)))))OR(((t0.c48) ISNULL))))OR((- (vt0.c0)))))AND((((NULL, t0.c96, NULL)) BETWEEN ((vt0.c0, vt0.c0, t0.c96)) AND ((vt0.c0, t0.c48, vt0.c0)))))) ORDER BY (NULL IN ()) ASC  NULLS FIRST, ((((vt0.c0)>=(t0.c48)))|(((((t0.c96)AND(t0.c96)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c48)) BETWEEN ((t0.c96)) AND ((t0.c96))))OR(((((t0.c96)OR(t0.c48)))AND(0.9202630789143641)))))OR(((t0.c48) ISNULL))))OR((- (vt0.c0)))))AND((((NULL, t0.c96, NULL)) BETWEEN ((vt0.c0, vt0.c0, t0.c96)) AND ((vt0.c0, t0.c48, vt0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (NULL IN ()) ASC  NULLS FIRST, ((((vt0.c0)>=(t0.c48)))|(((((t0.c96)AND(t0.c96)))AND(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((((((((t0.c48)) BETWEEN ((t0.c96)) AND ((t0.c96))))OR(((((t0.c96)OR(t0.c48)))AND(0.9202630789143641)))))OR(((t0.c48) ISNULL))))OR((- (vt0.c0)))))AND((((NULL, t0.c96, NULL)) BETWEEN ((vt0.c0, vt0.c0, t0.c96)) AND ((vt0.c0, t0.c48, vt0.c0)))))) ORDER BY (NULL IN ()) ASC  NULLS FIRST, ((((vt0.c0)>=(t0.c48)))|(((((t0.c96)AND(t0.c96)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c48)) BETWEEN ((t0.c96)) AND ((t0.c96))))OR(((((t0.c96)OR(t0.c48)))AND(0.9202630789143641)))))OR(((t0.c48) ISNULL))))OR((- (vt0.c0)))))AND((((NULL, t0.c96, NULL)) BETWEEN ((vt0.c0, vt0.c0, t0.c96)) AND ((vt0.c0, t0.c48, vt0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (NULL IN ()) ASC  NULLS FIRST, ((((vt0.c0)>=(t0.c48)))|(((((t0.c96)AND(t0.c96)))AND(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((((((((t0.c48)) BETWEEN ((t0.c96)) AND ((t0.c96))))OR(((((t0.c96)OR(t0.c48)))AND(0.9202630789143641)))))OR(((t0.c48) ISNULL))))OR((- (vt0.c0)))))AND((((NULL, t0.c96, NULL)) BETWEEN ((vt0.c0, vt0.c0, t0.c96)) AND ((vt0.c0, t0.c48, vt0.c0)))))) ORDER BY (NULL IN ()) ASC  NULLS FIRST, ((((vt0.c0)>=(t0.c48)))|(((((t0.c96)AND(t0.c96)))AND(vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON (CAST(vt0.c0 AS TEXT) IN ()) RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((vt1.c0)>>(rt0.c0))) AND ((((rt0.c0)) BETWEEN ((t0.c96)) AND ((rt0.c1))))) LEFT OUTER JOIN rt0 ON rt0.c2 WHERE ((((((t0.c96)AND(vt0.c0)))OR(1190753417)) IN ())) ORDER BY (((t0.c96)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c96)AND(vt0.c0)))OR(1190753417)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (CAST(vt0.c0 AS TEXT) IN ()) RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((vt1.c0)>>(rt0.c0))) AND ((((rt0.c0)) BETWEEN ((t0.c96)) AND ((rt0.c1))))) LEFT OUTER JOIN rt0 ON rt0.c2 ORDER BY (((t0.c96)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON (CAST(vt0.c0 AS TEXT) IN ()) RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((vt1.c0)>>(rt0.c0))) AND ((((rt0.c0)) BETWEEN ((t0.c96)) AND ((rt0.c1))))) LEFT OUTER JOIN rt0 ON rt0.c2 WHERE ((((((t0.c96)AND(vt0.c0)))OR(1190753417)) IN ())) ORDER BY (((t0.c96)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c96)AND(vt0.c0)))OR(1190753417)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (CAST(vt0.c0 AS TEXT) IN ()) RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((vt1.c0)>>(rt0.c0))) AND ((((rt0.c0)) BETWEEN ((t0.c96)) AND ((rt0.c1))))) LEFT OUTER JOIN rt0 ON rt0.c2 ORDER BY (((t0.c96)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT (((((t0.c48)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((t0.c48)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT (((((t0.c48)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((t0.c48)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT (((((t0.c48)OR(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0, rt0 NATURAL JOIN vt1 WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM t0, vt0, rt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t0, vt0, rt0 NATURAL JOIN vt1 WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM t0, vt0, rt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t0, vt0, rt0 NATURAL JOIN vt1 WHERE (CAST(x'' AS TEXT));
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(CASE WHEN x'' THEN t0.c96 END AS REAL)) ORDER BY ((((t0.c48) NOT NULL)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((('1017760783'))<=((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN x'' THEN t0.c96 END AS REAL)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c48) NOT NULL)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((('1017760783'))<=((rt0.c1))))));
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(CASE WHEN x'' THEN t0.c96 END AS REAL)) ORDER BY ((((t0.c48) NOT NULL)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((('1017760783'))<=((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN x'' THEN t0.c96 END AS REAL)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c48) NOT NULL)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((('1017760783'))<=((rt0.c1))))));
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(CASE WHEN x'' THEN t0.c96 END AS REAL)) ORDER BY ((((t0.c48) NOT NULL)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((('1017760783'))<=((rt0.c1)))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN (rt0.c1 IN (t0.c48)) THEN ((vt0.c0)IS(t0.c48)) ELSE CASE rt0.c0  WHEN 0xffffffffd354dd7c THEN rt0.c2 END END) ORDER BY (~ (LIKELY(rt0.c2))) DESC  NULLS LAST, ((((+ (NULL)), ((vt0.c0) IS TRUE), CASE t0.c96  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END))==((((t0.c96)&(rt0.c2)), t0.c96, ''))), CASE WHEN (t0.c48 IN ()) THEN IFNULL(vt0.c0, t0.c96) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN (t0.c48)) THEN ((vt0.c0)IS(t0.c48)) ELSE CASE rt0.c0  WHEN 0xffffffffd354dd7c THEN rt0.c2 END END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (~ (LIKELY(rt0.c2))) DESC  NULLS LAST, ((((+ (NULL)), ((vt0.c0) IS TRUE), CASE t0.c96  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END))=((((t0.c96)&(rt0.c2)), t0.c96, ''))), CASE WHEN (t0.c48 IN ()) THEN IFNULL(vt0.c0, t0.c96) END ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN (rt0.c1 IN (t0.c48)) THEN ((vt0.c0)IS(t0.c48)) ELSE CASE rt0.c0  WHEN 0xffffffffd354dd7c THEN rt0.c2 END END) ORDER BY (~ (LIKELY(rt0.c2))) DESC  NULLS LAST, ((((+ (NULL)), ((vt0.c0) IS TRUE), CASE t0.c96  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END))==((((t0.c96)&(rt0.c2)), t0.c96, ''))), CASE WHEN (t0.c48 IN ()) THEN IFNULL(vt0.c0, t0.c96) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN (t0.c48)) THEN ((vt0.c0)IS(t0.c48)) ELSE CASE rt0.c0  WHEN 0xffffffffd354dd7c THEN rt0.c2 END END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (~ (LIKELY(rt0.c2))) DESC  NULLS LAST, ((((+ (NULL)), ((vt0.c0) IS TRUE), CASE t0.c96  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END))=((((t0.c96)&(rt0.c2)), t0.c96, ''))), CASE WHEN (t0.c48 IN ()) THEN IFNULL(vt0.c0, t0.c96) END ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN (rt0.c1 IN (t0.c48)) THEN ((vt0.c0)IS(t0.c48)) ELSE CASE rt0.c0  WHEN 0xffffffffd354dd7c THEN rt0.c2 END END) ORDER BY (~ (LIKELY(rt0.c2))) DESC  NULLS LAST, ((((+ (NULL)), ((vt0.c0) IS TRUE), CASE t0.c96  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END))==((((t0.c96)&(rt0.c2)), t0.c96, ''))), CASE WHEN (t0.c48 IN ()) THEN IFNULL(vt0.c0, t0.c96) END ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE (LIKE(vt1.c0, ((vt1.c0)*(vt1.c0)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST, (~ (((vt1.c0)>(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE(vt1.c0, ((vt1.c0)*(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST, (~ (((vt1.c0)>(vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (LIKE(vt1.c0, ((vt1.c0)*(vt1.c0)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST, (~ (((vt1.c0)>(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE(vt1.c0, ((vt1.c0)*(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST, (~ (((vt1.c0)>(vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (LIKE(vt1.c0, ((vt1.c0)*(vt1.c0)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST, (~ (((vt1.c0)>(vt1.c0))))  NULLS FIRST;
SELECT * FROM vt0, vt1, rt0 NOT INDEXED, t0 WHERE (((((((((((rt0.c0)-(rt0.c1)))OR(((((vt1.c0)AND(t0.c48)))AND(vt1.c0)))))OR(((t0.c48) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))AND(CAST('1866703097' AS TEXT))))AND(((rt0.c0)||(rt0.c1))))) ORDER BY ((CAST(t0.c96 AS NUMERIC))+(load_extension(t0.c96, rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)-(rt0.c1)))OR(((((vt1.c0)AND(t0.c48)))AND(vt1.c0)))))OR(((t0.c48) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))AND(CAST('1866703097' AS TEXT))))AND(((rt0.c0)||(rt0.c1))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((CAST(t0.c96 AS NUMERIC))+(load_extension(t0.c96, rt0.c2)))  NULLS LAST);
SELECT * FROM vt0, vt1, rt0 NOT INDEXED, t0 WHERE (((((((((((rt0.c0)-(rt0.c1)))OR(((((vt1.c0)AND(t0.c48)))AND(vt1.c0)))))OR(((t0.c48) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))AND(CAST('1866703097' AS TEXT))))AND(((rt0.c0)||(rt0.c1))))) ORDER BY ((CAST(t0.c96 AS NUMERIC))+(load_extension(t0.c96, rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)-(rt0.c1)))OR(((((vt1.c0)AND(t0.c48)))AND(vt1.c0)))))OR(((t0.c48) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))AND(CAST('1866703097' AS TEXT))))AND(((rt0.c0)||(rt0.c1))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((CAST(t0.c96 AS NUMERIC))+(load_extension(t0.c96, rt0.c2)))  NULLS LAST);
SELECT * FROM vt0, vt1, rt0 NOT INDEXED, t0 WHERE (((((((((((rt0.c0)-(rt0.c1)))OR(((((vt1.c0)AND(t0.c48)))AND(vt1.c0)))))OR(((t0.c48) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))AND(CAST('1866703097' AS TEXT))))AND(((rt0.c0)||(rt0.c1))))) ORDER BY ((CAST(t0.c96 AS NUMERIC))+(load_extension(t0.c96, rt0.c2)))  NULLS LAST;
SELECT ALL * FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1)&(t0.c96))))) WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1)&(t0.c96))))));
SELECT ALL * FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1)&(t0.c96))))) WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1)&(t0.c96))))));
SELECT ALL * FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1)&(t0.c96))))) WHERE (t0.c48);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((vt0.c0)OR(t0.c48))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c96 END) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(t0.c48))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c96 END) AND (x''))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((vt0.c0)OR(t0.c48))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c96 END) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(t0.c48))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c96 END) AND (x''))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((vt0.c0)OR(t0.c48))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c96 END) AND (x'')));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND (rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c2)) BETWEEN ((CAST(t0.c96 AS BLOB))) AND ((CAST(x'ea2e' AS BLOB)))) FULL OUTER JOIN t0 ON ((((rt0.c1)GLOB(t0.c96))) ISNULL) WHERE (CAST(((t0.c48)!=(t0.c96)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c48)!=(t0.c96)) AS BLOB)) IS TRUE)  as count FROM rt0 NOT INDEXED LEFT OUTER JOIN vt0 ON (((rt0.c2)) BETWEEN ((CAST(t0.c96 AS BLOB))) AND ((CAST(x'ea2e' AS BLOB)))) FULL OUTER JOIN t0 ON ((((rt0.c1)GLOB(t0.c96))) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c2)) BETWEEN ((CAST(t0.c96 AS BLOB))) AND ((CAST(x'ea2e' AS BLOB)))) FULL OUTER JOIN t0 ON ((((rt0.c1)GLOB(t0.c96))) ISNULL) WHERE (CAST(((t0.c48)!=(t0.c96)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c48)!=(t0.c96)) AS BLOB)) IS TRUE)  as count FROM rt0 NOT INDEXED LEFT OUTER JOIN vt0 ON (((rt0.c2)) BETWEEN ((CAST(t0.c96 AS BLOB))) AND ((CAST(x'ea2e' AS BLOB)))) FULL OUTER JOIN t0 ON ((((rt0.c1)GLOB(t0.c96))) ISNULL));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((x'')<<(vt1.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((x'')<<(vt1.c0 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((x'')<<(vt1.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((x'')<<(vt1.c0 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((x'')<<(vt1.c0 COLLATE NOCASE)) DESC;
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (CAST(((((t0.c96)OR(rt0.c2)))AND(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c96)OR(rt0.c2)))AND(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (CAST(((((t0.c96)OR(rt0.c2)))AND(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c96)OR(rt0.c2)))AND(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (CAST(((((t0.c96)OR(rt0.c2)))AND(rt0.c2)) AS NUMERIC));
SELECT COUNT(*) FROM vt1, t0 WHERE (((CAST(t0.c48 AS INTEGER))LIKE((((t0.c96))<>((t0.c48))))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c48 AS INTEGER))LIKE((((t0.c96))!=((t0.c48)))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((CAST(t0.c48 AS INTEGER))LIKE((((t0.c96))<>((t0.c48))))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c48 AS INTEGER))LIKE((((t0.c96))!=((t0.c48)))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((CAST(t0.c48 AS INTEGER))LIKE((((t0.c96))<>((t0.c48))))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c96 ELSE rt0.c0 END)+(CAST(t0.c96 AS TEXT))) FULL OUTER JOIN vt1 ON (~ (CASE WHEN 1074634293 THEN t0.c48 WHEN t0.c96 THEN '-2126912827' WHEN vt1.c0 THEN vt1.c0 END)) CROSS JOIN t0 ON ((((((rt0.c1) IS TRUE))OR(rt0.c0)))AND((((rt0.c1))<((t0.c48))))) WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c96 ELSE rt0.c0 END)+(CAST(t0.c96 AS TEXT))) FULL OUTER JOIN vt1 ON (~ (CASE WHEN 1074634293 THEN t0.c48 WHEN t0.c96 THEN '-2126912827' WHEN vt1.c0 THEN vt1.c0 END)) CROSS JOIN t0 ON ((((((rt0.c1) IS TRUE))OR(rt0.c0)))AND((((rt0.c1))<((t0.c48))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c96 ELSE rt0.c0 END)+(CAST(t0.c96 AS TEXT))) FULL OUTER JOIN vt1 ON (~ (CASE WHEN 1074634293 THEN t0.c48 WHEN t0.c96 THEN '-2126912827' WHEN vt1.c0 THEN vt1.c0 END)) CROSS JOIN t0 ON ((((((rt0.c1) IS TRUE))OR(rt0.c0)))AND((((rt0.c1))<((t0.c48))))) WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c96 ELSE rt0.c0 END)+(CAST(t0.c96 AS TEXT))) FULL OUTER JOIN vt1 ON (~ (CASE WHEN 1074634293 THEN t0.c48 WHEN t0.c96 THEN '-2126912827' WHEN vt1.c0 THEN vt1.c0 END)) CROSS JOIN t0 ON ((((((rt0.c1) IS TRUE))OR(rt0.c0)))AND((((rt0.c1))<((t0.c48))))));
SELECT * FROM vt0, t0, vt1 WHERE (((vt1.c0 COLLATE BINARY)<('	qOꍃ!'))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR('1367179315'))) BETWEEN ('9223372036854775807') AND (((vt0.c0)<=(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)<('	qOꍃ!'))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR('1367179315'))) BETWEEN ('9223372036854775807') AND (((vt0.c0)<=(vt1.c0)))) DESC);
SELECT * FROM vt0, t0, vt1 WHERE (((vt1.c0 COLLATE BINARY)<('	qOꍃ!'))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR('1367179315'))) BETWEEN ('9223372036854775807') AND (((vt0.c0)<=(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)<('	qOꍃ!'))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR('1367179315'))) BETWEEN ('9223372036854775807') AND (((vt0.c0)<=(vt1.c0)))) DESC);
SELECT * FROM vt0, t0, vt1 WHERE (((vt1.c0 COLLATE BINARY)<('	qOꍃ!'))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR('1367179315'))) BETWEEN ('9223372036854775807') AND (((vt0.c0)<=(vt1.c0)))) DESC;
SELECT ALL * FROM t0 WHERE ((((t0.c96)<(t0.c48)) IN ())) ORDER BY (((((t0.c96))>((t0.c96)))) BETWEEN ((- (t0.c96))) AND (NULL));
SELECT SUM(count) FROM (SELECT (((((t0.c96)<(t0.c48)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c96))>((t0.c96)))) BETWEEN ((- (t0.c96))) AND (NULL)));
SELECT ALL * FROM t0 WHERE ((((t0.c96)<(t0.c48)) IN ())) ORDER BY (((((t0.c96))>((t0.c96)))) BETWEEN ((- (t0.c96))) AND (NULL));
SELECT SUM(count) FROM (SELECT (((((t0.c96)<(t0.c48)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c96))>((t0.c96)))) BETWEEN ((- (t0.c96))) AND (NULL)));
SELECT ALL * FROM t0 WHERE ((((t0.c96)<(t0.c48)) IN ())) ORDER BY (((((t0.c96))>((t0.c96)))) BETWEEN ((- (t0.c96))) AND (NULL));
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((rt0.c2)OR(rt0.c1)) COLLATE BINARY WHERE (((NULL)LIKE(0.14564552196993585)));
SELECT SUM(count) FROM (SELECT ((((NULL)LIKE(0.14564552196993585))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((rt0.c2)OR(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((rt0.c2)OR(rt0.c1)) COLLATE BINARY WHERE (((NULL)LIKE(0.14564552196993585)));
SELECT SUM(count) FROM (SELECT ((((NULL)LIKE(0.14564552196993585))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((rt0.c2)OR(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((rt0.c2)OR(rt0.c1)) COLLATE BINARY WHERE (((NULL)LIKE(0.14564552196993585)));
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ('Oj');
SELECT SUM(count) FROM (SELECT (('Oj') IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ('Oj');
SELECT SUM(count) FROM (SELECT (('Oj') IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ('Oj');
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN t0 ON (((x''))==((json_insert(rt0.c0, rt0.c1, t0.c48)))) FULL OUTER JOIN vt0 ON ((((t0.c48)IS NOT(t0.c96))) IS FALSE) WHERE ((((((((t0.c96)) BETWEEN ((rt0.c0)) AND ((t0.c96))))OR(UPPER(rt0.c1))))OR((vt0.c0 IN (t0.c48))))) ORDER BY ((((0.4720166781209404) ISNULL)) NOT BETWEEN (((vt0.c0)||(t0.c48))) AND (((rt0.c0)AND(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c96)) BETWEEN ((rt0.c0)) AND ((t0.c96))))OR(UPPER(rt0.c1))))OR((vt0.c0 IN (t0.c48))))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t0 ON (((x''))=((json_insert(rt0.c0, rt0.c1, t0.c48)))) FULL OUTER JOIN vt0 ON ((((t0.c48)IS NOT(t0.c96))) IS FALSE) ORDER BY ((((0.4720166781209404) ISNULL)) NOT BETWEEN (((vt0.c0)||(t0.c48))) AND (((rt0.c0)AND(x''))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN t0 ON (((x''))==((json_insert(rt0.c0, rt0.c1, t0.c48)))) FULL OUTER JOIN vt0 ON ((((t0.c48)IS NOT(t0.c96))) IS FALSE) WHERE ((((((((t0.c96)) BETWEEN ((rt0.c0)) AND ((t0.c96))))OR(UPPER(rt0.c1))))OR((vt0.c0 IN (t0.c48))))) ORDER BY ((((0.4720166781209404) ISNULL)) NOT BETWEEN (((vt0.c0)||(t0.c48))) AND (((rt0.c0)AND(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c96)) BETWEEN ((rt0.c0)) AND ((t0.c96))))OR(UPPER(rt0.c1))))OR((vt0.c0 IN (t0.c48))))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t0 ON (((x''))=((json_insert(rt0.c0, rt0.c1, t0.c48)))) FULL OUTER JOIN vt0 ON ((((t0.c48)IS NOT(t0.c96))) IS FALSE) ORDER BY ((((0.4720166781209404) ISNULL)) NOT BETWEEN (((vt0.c0)||(t0.c48))) AND (((rt0.c0)AND(x''))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN t0 ON (((x''))==((json_insert(rt0.c0, rt0.c1, t0.c48)))) FULL OUTER JOIN vt0 ON ((((t0.c48)IS NOT(t0.c96))) IS FALSE) WHERE ((((((((t0.c96)) BETWEEN ((rt0.c0)) AND ((t0.c96))))OR(UPPER(rt0.c1))))OR((vt0.c0 IN (t0.c48))))) ORDER BY ((((0.4720166781209404) ISNULL)) NOT BETWEEN (((vt0.c0)||(t0.c48))) AND (((rt0.c0)AND(x''))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((TRIM(vt1.c0))IS NOT(CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c0))IS NOT(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((TRIM(vt1.c0))IS NOT(CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c0))IS NOT(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((TRIM(vt1.c0))IS NOT(CAST(vt1.c0 AS REAL))));
SELECT ALL * FROM t0, vt1, rt0 WHERE (((t0.c48 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (t0.c96) AND (t0.c96))) AND (json_array(rt0.c2, t0.c48))));
SELECT SUM(count) FROM (SELECT ((((t0.c48 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (t0.c96) AND (t0.c96))) AND (json_array(rt0.c2, t0.c48)))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE (((t0.c48 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (t0.c96) AND (t0.c96))) AND (json_array(rt0.c2, t0.c48))));
SELECT SUM(count) FROM (SELECT ((((t0.c48 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (t0.c96) AND (t0.c96))) AND (json_array(rt0.c2, t0.c48)))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE (((t0.c48 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (t0.c96) AND (t0.c96))) AND (json_array(rt0.c2, t0.c48))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (NULL) ORDER BY 'rh?>륾' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, rt0, vt1 NOT INDEXED ORDER BY 'rh?>륾' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (NULL) ORDER BY 'rh?>륾' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, rt0, vt1 NOT INDEXED ORDER BY 'rh?>륾' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (NULL) ORDER BY 'rh?>륾' COLLATE RTRIM;
SELECT * FROM t0 FULL OUTER JOIN vt1 ON (((~ ('1623424547'))) BETWEEN ((((rt0.c1)) NOT BETWEEN (('0.40869875894702357')) AND ((0.1319070118192759)))) AND (((rt0.c2)<=(x'')))) FULL OUTER JOIN rt0 ON CAST(CASE WHEN vt1.c0 THEN t0.c96 END AS REAL) WHERE ((vt1.c0 IN (((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (((((rt0.c2)AND(vt1.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (((~ ('1623424547'))) BETWEEN ((((rt0.c1)) NOT BETWEEN (('0.40869875894702357')) AND ((0.1319070118192759)))) AND (((rt0.c2)<=(x'')))) FULL OUTER JOIN rt0 ON CAST(CASE WHEN vt1.c0 THEN t0.c96 END AS REAL));
SELECT * FROM t0 FULL OUTER JOIN vt1 ON (((~ ('1623424547'))) BETWEEN ((((rt0.c1)) NOT BETWEEN (('0.40869875894702357')) AND ((0.1319070118192759)))) AND (((rt0.c2)<=(x'')))) FULL OUTER JOIN rt0 ON CAST(CASE WHEN vt1.c0 THEN t0.c96 END AS REAL) WHERE ((vt1.c0 IN (((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (((((rt0.c2)AND(vt1.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (((~ ('1623424547'))) BETWEEN ((((rt0.c1)) NOT BETWEEN (('0.40869875894702357')) AND ((0.1319070118192759)))) AND (((rt0.c2)<=(x'')))) FULL OUTER JOIN rt0 ON CAST(CASE WHEN vt1.c0 THEN t0.c96 END AS REAL));
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE (LOWER(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY CAST(MIN(rt0.c2, vt1.c0) AS INTEGER) DESC, CAST((rt0.c2 IN ()) AS NUMERIC) ASC, (((((rt0.c1))>((rt0.c2)))) IS FALSE)  NULLS LAST, rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY CAST(MIN(rt0.c2, vt1.c0) AS INTEGER) DESC, CAST((rt0.c2 IN ()) AS NUMERIC) ASC, (((((rt0.c1))>((rt0.c2)))) IS FALSE)  NULLS LAST, rt0.c2  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE (LOWER(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY CAST(MIN(rt0.c2, vt1.c0) AS INTEGER) DESC, CAST((rt0.c2 IN ()) AS NUMERIC) ASC, (((((rt0.c1))>((rt0.c2)))) IS FALSE)  NULLS LAST, rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY CAST(MIN(rt0.c2, vt1.c0) AS INTEGER) DESC, CAST((rt0.c2 IN ()) AS NUMERIC) ASC, (((((rt0.c1))>((rt0.c2)))) IS FALSE)  NULLS LAST, rt0.c2  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE (LOWER(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY CAST(MIN(rt0.c2, vt1.c0) AS INTEGER) DESC, CAST((rt0.c2 IN ()) AS NUMERIC) ASC, (((((rt0.c1))>((rt0.c2)))) IS FALSE)  NULLS LAST, rt0.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON (NOT (vt0.c0 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON (((NOT (rt0.c0)))LIKE(rt0.c0 COLLATE NOCASE)) WHERE ((((NULL)) BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN t0.c48 WHEN '-478019294' THEN vt1.c0 WHEN t0.c96 THEN '1928244390' ELSE t0.c48 END)) AND (((~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN t0.c48 WHEN '-478019294' THEN vt1.c0 WHEN t0.c96 THEN '1928244390' ELSE t0.c48 END)) AND (((~ (rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON (NOT (vt0.c0 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON (((NOT (rt0.c0)))LIKE(rt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON (NOT (vt0.c0 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON (((NOT (rt0.c0)))LIKE(rt0.c0 COLLATE NOCASE)) WHERE ((((NULL)) BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN t0.c48 WHEN '-478019294' THEN vt1.c0 WHEN t0.c96 THEN '1928244390' ELSE t0.c48 END)) AND (((~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN t0.c48 WHEN '-478019294' THEN vt1.c0 WHEN t0.c96 THEN '1928244390' ELSE t0.c48 END)) AND (((~ (rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON (NOT (vt0.c0 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON (((NOT (rt0.c0)))LIKE(rt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0 CROSS JOIN rt0 ON (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))>=(('e'))) RIGHT OUTER JOIN vt1 ON (((NOT (rt0.c0))) IS FALSE) WHERE ((ABS(rt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((ABS(rt0.c0) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))>=(('e'))) RIGHT OUTER JOIN vt1 ON (((NOT (rt0.c0))) IS FALSE));
SELECT * FROM vt0 CROSS JOIN rt0 ON (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))>=(('e'))) RIGHT OUTER JOIN vt1 ON (((NOT (rt0.c0))) IS FALSE) WHERE ((ABS(rt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((ABS(rt0.c0) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))>=(('e'))) RIGHT OUTER JOIN vt1 ON (((NOT (rt0.c0))) IS FALSE));
SELECT * FROM vt0, vt1, t0 WHERE (CAST(((vt0.c0)*(t0.c48)) AS REAL)) ORDER BY CAST(0.24619082960282446 COLLATE NOCASE AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)*(t0.c48)) AS REAL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST(0.24619082960282446 COLLATE NOCASE AS NUMERIC) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE (CAST(((vt0.c0)*(t0.c48)) AS REAL)) ORDER BY CAST(0.24619082960282446 COLLATE NOCASE AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)*(t0.c48)) AS REAL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST(0.24619082960282446 COLLATE NOCASE AS NUMERIC) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE (CAST(((vt0.c0)*(t0.c48)) AS REAL)) ORDER BY CAST(0.24619082960282446 COLLATE NOCASE AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2)+(rt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt0.c2)+(rt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2)+(rt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt0.c2)+(rt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2)+(rt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))))));
SELECT * FROM vt0, t0, vt1 WHERE ((CASE WHEN t0.c96 THEN vt0.c0 END IN ())) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c96 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY vt1.c0 ASC  NULLS FIRST);
SELECT * FROM vt0, t0, vt1 WHERE ((CASE WHEN t0.c96 THEN vt0.c0 END IN ())) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c96 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY vt1.c0 ASC  NULLS FIRST);
SELECT * FROM vt0, t0, vt1 WHERE ((CASE WHEN t0.c96 THEN vt0.c0 END IN ())) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (STRFTIME((((t0.c48)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))), x'4a3e', ((rt0.c1) NOT BETWEEN (t0.c96) AND (t0.c96)), ((x'')LIKE(rt0.c0)), (+ (vt0.c0)))) ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)>=(x'7e89' COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((STRFTIME((((t0.c48)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))), x'4a3e', ((rt0.c1) NOT BETWEEN (t0.c96) AND (t0.c96)), ((x'')LIKE(rt0.c0)), (+ (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)>=(x'7e89' COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (STRFTIME((((t0.c48)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))), x'4a3e', ((rt0.c1) NOT BETWEEN (t0.c96) AND (t0.c96)), ((x'')LIKE(rt0.c0)), (+ (vt0.c0)))) ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)>=(x'7e89' COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((STRFTIME((((t0.c48)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))), x'4a3e', ((rt0.c1) NOT BETWEEN (t0.c96) AND (t0.c96)), ((x'')LIKE(rt0.c0)), (+ (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)>=(x'7e89' COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (STRFTIME((((t0.c48)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))), x'4a3e', ((rt0.c1) NOT BETWEEN (t0.c96) AND (t0.c96)), ((x'')LIKE(rt0.c0)), (+ (vt0.c0)))) ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)>=(x'7e89' COLLATE BINARY))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON ((((vt1.c0)>(t0.c48)))||(json_patch(vt0.c0, vt0.c0))) LEFT OUTER JOIN vt0 ON (+ (((t0.c96)>(vt1.c0)))) WHERE (vt1.c0) ORDER BY ((((vt0.c0) IS FALSE)) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((((vt1.c0)>(t0.c48)))||(json_patch(vt0.c0, vt0.c0))) LEFT OUTER JOIN vt0 ON (+ (((t0.c96)>(vt1.c0)))) ORDER BY ((((vt0.c0) IS FALSE)) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON ((((vt1.c0)>(t0.c48)))||(json_patch(vt0.c0, vt0.c0))) LEFT OUTER JOIN vt0 ON (+ (((t0.c96)>(vt1.c0)))) WHERE (vt1.c0) ORDER BY ((((vt0.c0) IS FALSE)) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((((vt1.c0)>(t0.c48)))||(json_patch(vt0.c0, vt0.c0))) LEFT OUTER JOIN vt0 ON (+ (((t0.c96)>(vt1.c0)))) ORDER BY ((((vt0.c0) IS FALSE)) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON ((((vt1.c0)>(t0.c48)))||(json_patch(vt0.c0, vt0.c0))) LEFT OUTER JOIN vt0 ON (+ (((t0.c96)>(vt1.c0)))) WHERE (vt1.c0) ORDER BY ((((vt0.c0) IS FALSE)) NOT NULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2) NOT NULL) ELSE ((0.49778531291775197)%(rt0.c1)) END) ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))>=(rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2) NOT NULL) ELSE ((0.49778531291775197)%(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))>=(rt0.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2) NOT NULL) ELSE ((0.49778531291775197)%(rt0.c1)) END) ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))>=(rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2) NOT NULL) ELSE ((0.49778531291775197)%(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))>=(rt0.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2) NOT NULL) ELSE ((0.49778531291775197)%(rt0.c1)) END) ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))>=(rt0.c1 COLLATE NOCASE));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)||((- (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)||((- (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)||((- (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)||((- (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)||((- (vt1.c0))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY (((((+ (vt0.c0)))OR(((vt0.c0) IS TRUE))))OR(0.7150060845057736)) ASC  NULLS FIRST, ((((((((CASE WHEN vt0.c0 THEN '1866703097' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0)>(vt0.c0)))))AND((~ (vt0.c0)))))AND(((0.3035799926314756) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((((+ (vt0.c0)))OR(((vt0.c0) IS TRUE))))OR(0.7150060845057736)) ASC  NULLS FIRST, ((((((((CASE WHEN vt0.c0 THEN '1866703097' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0)>(vt0.c0)))))AND((~ (vt0.c0)))))AND(((0.3035799926314756) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY (((((+ (vt0.c0)))OR(((vt0.c0) IS TRUE))))OR(0.7150060845057736)) ASC  NULLS FIRST, ((((((((CASE WHEN vt0.c0 THEN '1866703097' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0)>(vt0.c0)))))AND((~ (vt0.c0)))))AND(((0.3035799926314756) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((((+ (vt0.c0)))OR(((vt0.c0) IS TRUE))))OR(0.7150060845057736)) ASC  NULLS FIRST, ((((((((CASE WHEN vt0.c0 THEN '1866703097' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0)>(vt0.c0)))))AND((~ (vt0.c0)))))AND(((0.3035799926314756) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY (((((+ (vt0.c0)))OR(((vt0.c0) IS TRUE))))OR(0.7150060845057736)) ASC  NULLS FIRST, ((((((((CASE WHEN vt0.c0 THEN '1866703097' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0)>(vt0.c0)))))AND((~ (vt0.c0)))))AND(((0.3035799926314756) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))) ASC;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((CAST('ehNw?P' AS TEXT)) BETWEEN (x'') AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST('ehNw?P' AS TEXT)) BETWEEN (x'') AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((CAST('ehNw?P' AS TEXT)) BETWEEN (x'') AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST('ehNw?P' AS TEXT)) BETWEEN (x'') AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((CAST('ehNw?P' AS TEXT)) BETWEEN (x'') AND ((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((((vt1.c0 COLLATE RTRIM))<>(('')))) ORDER BY (((rt0.c2 IN ()))<<((((vt1.c0, rt0.c2, rt0.c2))>((NULL, rt0.c0, vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 COLLATE RTRIM))<>(('')))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((rt0.c2 IN ()))<<((((vt1.c0, rt0.c2, rt0.c2))>((NULL, rt0.c0, vt1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((((vt1.c0 COLLATE RTRIM))<>(('')))) ORDER BY (((rt0.c2 IN ()))<<((((vt1.c0, rt0.c2, rt0.c2))>((NULL, rt0.c0, vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 COLLATE RTRIM))<>(('')))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((rt0.c2 IN ()))<<((((vt1.c0, rt0.c2, rt0.c2))>((NULL, rt0.c0, vt1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((((vt1.c0 COLLATE RTRIM))<>(('')))) ORDER BY (((rt0.c2 IN ()))<<((((vt1.c0, rt0.c2, rt0.c2))>((NULL, rt0.c0, vt1.c0)))))  NULLS FIRST;
SELECT * FROM t0, vt1, vt0, rt0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT * FROM t0, vt1, vt0, rt0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT * FROM t0, vt1, vt0, rt0 WHERE (t0.c48);
SELECT * FROM t0, rt0, vt1 WHERE (((((((((rt0.c0)OR(NULL)))OR(t0.c96)))OR(t0.c96)))AND(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(NULL)))OR(t0.c96)))OR(t0.c96)))AND(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE (((((((((rt0.c0)OR(NULL)))OR(t0.c96)))OR(t0.c96)))AND(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(NULL)))OR(t0.c96)))OR(t0.c96)))AND(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE (((((((((rt0.c0)OR(NULL)))OR(t0.c96)))OR(t0.c96)))AND(rt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((rt0.c0 IN ())))=((rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN ())))==((rt0.c0)))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((rt0.c0 IN ())))=((rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN ())))==((rt0.c0)))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((rt0.c0 IN ())))=((rt0.c0))));
SELECT * FROM vt0, vt1, t0, rt0 WHERE (((((rt0.c1)IS(vt0.c0)))OR((NOT (t0.c96))))) ORDER BY CAST(json_array_length(0.9113563854498464) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS(vt0.c0)))OR((NOT (t0.c96))))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY CAST(json_array_length(0.9113563854498464) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt0, vt1, t0, rt0 WHERE (((((rt0.c1)IS(vt0.c0)))OR((NOT (t0.c96))))) ORDER BY CAST(json_array_length(0.9113563854498464) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS(vt0.c0)))OR((NOT (t0.c96))))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY CAST(json_array_length(0.9113563854498464) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt0, vt1, t0, rt0 WHERE (((((rt0.c1)IS(vt0.c0)))OR((NOT (t0.c96))))) ORDER BY CAST(json_array_length(0.9113563854498464) AS NUMERIC)  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c48) ORDER BY ((t0.c48 COLLATE BINARY) BETWEEN ((t0.c48 IN ())) AND (t0.c96 COLLATE BINARY)) ASC, (((((t0.c96, t0.c96, t0.c48))>=((t0.c48, t0.c96, '1164803913'))))OR(t0.c96)) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM t0 ORDER BY ((t0.c48 COLLATE BINARY) BETWEEN ((t0.c48 IN ())) AND (t0.c96 COLLATE BINARY)) ASC, (((((t0.c96, t0.c96, t0.c48))>=((t0.c48, t0.c96, '1164803913'))))OR(t0.c96)) DESC);
SELECT * FROM t0 WHERE (t0.c48) ORDER BY ((t0.c48 COLLATE BINARY) BETWEEN ((t0.c48 IN ())) AND (t0.c96 COLLATE BINARY)) ASC, (((((t0.c96, t0.c96, t0.c48))>=((t0.c48, t0.c96, '1164803913'))))OR(t0.c96)) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM t0 ORDER BY ((t0.c48 COLLATE BINARY) BETWEEN ((t0.c48 IN ())) AND (t0.c96 COLLATE BINARY)) ASC, (((((t0.c96, t0.c96, t0.c48))>=((t0.c48, t0.c96, '1164803913'))))OR(t0.c96)) DESC);
SELECT * FROM t0 WHERE (t0.c48) ORDER BY ((t0.c48 COLLATE BINARY) BETWEEN ((t0.c48 IN ())) AND (t0.c96 COLLATE BINARY)) ASC, (((((t0.c96, t0.c96, t0.c48))>=((t0.c48, t0.c96, '1164803913'))))OR(t0.c96)) DESC;
SELECT * FROM t0, rt0, vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT * FROM t0, rt0, vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT * FROM t0, rt0, vt1, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON 0.8940761506211062 LEFT OUTER JOIN vt0 ON 0xffffffff9898b2b8 INNER JOIN rt0 ON '-	P LHd>8' WHERE (vt0.c0) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON 0.8940761506211062 LEFT OUTER JOIN vt0 ON 0Xffffffff9898b2b8 INNER JOIN rt0 ON '-	P LHd>8' ORDER BY rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON 0.8940761506211062 LEFT OUTER JOIN vt0 ON 0xffffffff9898b2b8 INNER JOIN rt0 ON '-	P LHd>8' WHERE (vt0.c0) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON 0.8940761506211062 LEFT OUTER JOIN vt0 ON 0Xffffffff9898b2b8 INNER JOIN rt0 ON '-	P LHd>8' ORDER BY rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON 0.8940761506211062 LEFT OUTER JOIN vt0 ON 0xffffffff9898b2b8 INNER JOIN rt0 ON '-	P LHd>8' WHERE (vt0.c0) ORDER BY rt0.c0  NULLS LAST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON 0.29594712108176735 CROSS JOIN t0 ON ((((rt0.c1)>>(t0.c96))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (UNICODE(rt0.c2))) CROSS JOIN vt1 ON ((1866703097) BETWEEN (0.8295460834699014) AND (rt0.c2)) COLLATE BINARY WHERE (CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) AS INTEGER)) ORDER BY ((((rt0.c1, rt0.c0, vt0.c0))!=((vt1.c0, vt0.c0, t0.c48))) IN (((rt0.c1)<=(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON 0.29594712108176735 CROSS JOIN t0 ON ((((rt0.c1)>>(t0.c96))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (UNICODE(rt0.c2))) CROSS JOIN vt1 ON ((1866703097) BETWEEN (0.8295460834699014) AND (rt0.c2)) COLLATE BINARY ORDER BY ((((rt0.c1, rt0.c0, vt0.c0))<>((vt1.c0, vt0.c0, t0.c48))) IN (((rt0.c1)<=(rt0.c2)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON 0.29594712108176735 CROSS JOIN t0 ON ((((rt0.c1)>>(t0.c96))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (UNICODE(rt0.c2))) CROSS JOIN vt1 ON ((1866703097) BETWEEN (0.8295460834699014) AND (rt0.c2)) COLLATE BINARY WHERE (CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) AS INTEGER)) ORDER BY ((((rt0.c1, rt0.c0, vt0.c0))!=((vt1.c0, vt0.c0, t0.c48))) IN (((rt0.c1)<=(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON 0.29594712108176735 CROSS JOIN t0 ON ((((rt0.c1)>>(t0.c96))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (UNICODE(rt0.c2))) CROSS JOIN vt1 ON ((1866703097) BETWEEN (0.8295460834699014) AND (rt0.c2)) COLLATE BINARY ORDER BY ((((rt0.c1, rt0.c0, vt0.c0))<>((vt1.c0, vt0.c0, t0.c48))) IN (((rt0.c1)<=(rt0.c2)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON 0.29594712108176735 CROSS JOIN t0 ON ((((rt0.c1)>>(t0.c96))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (UNICODE(rt0.c2))) CROSS JOIN vt1 ON ((1866703097) BETWEEN (0.8295460834699014) AND (rt0.c2)) COLLATE BINARY WHERE (CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) AS INTEGER)) ORDER BY ((((rt0.c1, rt0.c0, vt0.c0))!=((vt1.c0, vt0.c0, t0.c48))) IN (((rt0.c1)<=(rt0.c2)))) DESC  NULLS LAST;
SELECT * FROM vt1, t0 CROSS JOIN rt0 ON ((t0.c48)AND(rt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((+ (rt0.c0)) IN ()) WHERE (CASE ((0.9531422429435038) ISNULL)  WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (rt0.c1 IN (vt0.c0, vt0.c0)) WHEN (+ (rt0.c0)) THEN CAST(rt0.c2 AS BLOB) WHEN rt0.c0 THEN CAST(rt0.c0 AS NUMERIC) ELSE ((((((((((((rt0.c1)OR(x'867c76f1')))AND(rt0.c1)))OR(rt0.c0)))AND(-1178825164)))AND(rt0.c2)))AND(t0.c48)) END) ORDER BY ((((MAX(rt0.c0, rt0.c1, rt0.c2, t0.c96))OR(CAST(rt0.c2 AS REAL))))AND(vt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((0.9531422429435038) ISNULL)  WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (rt0.c1 IN (vt0.c0, vt0.c0)) WHEN (+ (rt0.c0)) THEN CAST(rt0.c2 AS BLOB) WHEN rt0.c0 THEN CAST(rt0.c0 AS NUMERIC) ELSE ((((((((((((rt0.c1)OR(x'867c76f1')))AND(rt0.c1)))OR(rt0.c0)))AND(-1178825164)))AND(rt0.c2)))AND(t0.c48)) END) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt0 ON ((t0.c48)AND(rt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((+ (rt0.c0)) IN ()) ORDER BY ((((MAX(rt0.c0, rt0.c1, rt0.c2, t0.c96))OR(CAST(rt0.c2 AS REAL))))AND(vt1.c0 COLLATE BINARY)) ASC);
SELECT * FROM vt1, t0 CROSS JOIN rt0 ON ((t0.c48)AND(rt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((+ (rt0.c0)) IN ()) WHERE (CASE ((0.9531422429435038) ISNULL)  WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (rt0.c1 IN (vt0.c0, vt0.c0)) WHEN (+ (rt0.c0)) THEN CAST(rt0.c2 AS BLOB) WHEN rt0.c0 THEN CAST(rt0.c0 AS NUMERIC) ELSE ((((((((((((rt0.c1)OR(x'867c76f1')))AND(rt0.c1)))OR(rt0.c0)))AND(-1178825164)))AND(rt0.c2)))AND(t0.c48)) END) ORDER BY ((((MAX(rt0.c0, rt0.c1, rt0.c2, t0.c96))OR(CAST(rt0.c2 AS REAL))))AND(vt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((0.9531422429435038) ISNULL)  WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (rt0.c1 IN (vt0.c0, vt0.c0)) WHEN (+ (rt0.c0)) THEN CAST(rt0.c2 AS BLOB) WHEN rt0.c0 THEN CAST(rt0.c0 AS NUMERIC) ELSE ((((((((((((rt0.c1)OR(x'867c76f1')))AND(rt0.c1)))OR(rt0.c0)))AND(-1178825164)))AND(rt0.c2)))AND(t0.c48)) END) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt0 ON ((t0.c48)AND(rt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((+ (rt0.c0)) IN ()) ORDER BY ((((MAX(rt0.c0, rt0.c1, rt0.c2, t0.c96))OR(CAST(rt0.c2 AS REAL))))AND(vt1.c0 COLLATE BINARY)) ASC);
SELECT * FROM vt1, t0 CROSS JOIN rt0 ON ((t0.c48)AND(rt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((+ (rt0.c0)) IN ()) WHERE (CASE ((0.9531422429435038) ISNULL)  WHEN ((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (rt0.c1 IN (vt0.c0, vt0.c0)) WHEN (+ (rt0.c0)) THEN CAST(rt0.c2 AS BLOB) WHEN rt0.c0 THEN CAST(rt0.c0 AS NUMERIC) ELSE ((((((((((((rt0.c1)OR(x'867c76f1')))AND(rt0.c1)))OR(rt0.c0)))AND(-1178825164)))AND(rt0.c2)))AND(t0.c48)) END) ORDER BY ((((MAX(rt0.c0, rt0.c1, rt0.c2, t0.c96))OR(CAST(rt0.c2 AS REAL))))AND(vt1.c0 COLLATE BINARY)) ASC;
