-- Time: 2024/06/09 10:20:48
-- Database: database80
-- Database version: 3.40.0
-- seed value: 3494751780
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
CREATE TABLE IF NOT EXISTS t1 (c0 INT ); -- 0ms;
PRAGMA default_cache_size; -- 0ms;
INSERT OR FAIL INTO t1 VALUES (NULL); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO t1 VALUES (x''); -- 0ms;
PRAGMA temp.journal_size_limit = -8546513424264124591; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''); -- 12ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIEW v0(c0) AS SELECT DISTINCT ((((CASE rt0.c0  WHEN 'n' THEN rt0.c0 ELSE t1.c0 END)AND((((0.06881091735221678)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))))OR(((((t1.c0)AND(t1.c0)))AND(rt0.c1)))) FROM rt0, t1; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.soft_heap_limit; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.06881091735221678, '', '䀖9'), (-1321179431, 0.36887232604169407, '-1244381162'), ('-1244381162', 1204626388, 0Xffffffff85dbac2c); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (0.6417665796095844); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i59 ON t1(((0.7408463720710973)<>(((c0) BETWEEN (c0) AND (c0)))) DESC); -- 1ms;
CREATE UNIQUE INDEX i79 ON t1((c0 IN (CASE WHEN c0 THEN c0 WHEN c0 THEN '' WHEN c0 THEN c0 ELSE c0 END)) COLLATE RTRIM ASC); -- 0ms;
CREATE INDEX i39 ON t1((- (((c0)>=(c0)))) COLLATE RTRIM ASC) WHERE c0; -- 0ms;
INSERT OR REPLACE INTO t1 VALUES ('0.36887232604169407'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
END; -- 0ms;
CREATE UNIQUE INDEX i38 ON t1(CAST((((c0)) BETWEEN ((c0)) AND ((c0))) AS TEXT)) WHERE 0.24620392039770755 COLLATE NOCASE; -- 29ms;
REINDEX; -- 0ms;
PRAGMA main.threads = 2288733615902747738; -- 0ms;
UPDATE OR IGNORE t1 SET c0=''; -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (-790912646); -- 25ms;
PRAGMA temp.automatic_index = true; -- 0ms;
PRAGMA automatic_index; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (NULL, 0.7134845195317763, 0.36887232604169407); -- 0ms;
INSERT OR ABORT INTO t1 VALUES ('7{'); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (x''); -- 0ms;
PRAGMA temp.journal_mode = WAL; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA cache_spill; -- 0ms;
DROP INDEX "i38"; -- 1ms;
PRAGMA journal_mode; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET c1=0.7134845195317763 WHERE ((~ (NULL)) IN ()); -- 0ms;
REINDEX  rt0; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-907713995 sz=1483713876 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-907713995'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '-1244381162 2 sz=-57905355 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>>(0.7408463720710973)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=522335022 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LOWER('p\n'))OR(',%,')))AND(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '4 0 sz=-1833231402 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-2049201108 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7408463720710973)AND('1204626388')))AND((- (-1237808244)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-907713995'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1833231402 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 -855929746 sz=-1618795070 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1106753077 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '315357574 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.06045824464320371; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-907713995 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-2042291766', 0.6417665796095844, NULL)) BETWEEN (((('1106753077') NOT BETWEEN (-9223372036854775808) AND ('0.6417665796095844')), (((',%,'))<((1829171393))), '-2042291766')) AND ((((((NULL)OR(1.106753077E9)))AND(0.19489146751526898)), ((0Xffffffff81a4d53e)||(618550376)), CAST('-790912646' AS REAL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((('1331756033')) BETWEEN ((NULL)) AND ((''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN '315357574' THEN 1.483713876E9 ELSE NULL END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1331756033 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1171906853 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-790912646 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1618795070 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '449616157 sz=773467107 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.6092395482427956 AS NUMERIC) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.7408463720710973 AS REAL))LIKE((((('449616157')OR(x'')))OR(0.24620392039770755)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.4191609599423748) BETWEEN ('\nX Dl⯣') AND (2101339221)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1125252342'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' IN ()), CAST(0.598666922278509 AS BLOB), (0.8319167465664902 IN ()), (('}H') NOTNULL), (((x'', '', 0.25387114695386914, '-882420849', x'')) NOT BETWEEN ((-89054897, '1331756033', x'af72', -1237808244, 1829171393)) AND (('-2119903938', '-2049201108', x'', NULL, 0X1acc991d)))))>=((CASE ''  WHEN '1829171393' THEN '\nX Dl⯣' ELSE NULL END, ((0.46409065251618686) NOTNULL), ((x'') NOT NULL), 0.7134845195317763 COLLATE BINARY, NULL COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1502645403 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('311838874')AND('')))AND(x'')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '820271924 sz=-608933338 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN x'' THEN 0.9621031152211709 END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('524603305')OR(x'c50c'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1483713876'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '0 sz=-1640719950 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1502645403'))>=((((NULL) NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '449616157 0 sz=857592265 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1797163335 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NOT (9223372036854775807)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS FALSE) COLLATE NOCASE COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-57905355 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (-1 COLLATE BINARY IN (((0x69c95d6d)<<(0X1296489a)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1873991190 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-152480645 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('-1089804858')))%((((0.7607792005108052))==((x'eafd'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=-1618795070 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=1125252342 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('Mb_t''豮') NOTNULL) THEN LOWER(DISTINCT 0.9575063977316793) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1957024404 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-57905355 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1269304955'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT CAST(NULL AS NUMERIC)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4322492355364753 IN (0xffffffffd0dba17a)))IS NOT(CASE WHEN '' THEN '-670781383' WHEN '>!n~礩{]' THEN 0.598666922278509 WHEN NULL THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '2 -1618795070 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('\nX Dl⯣') BETWEEN ((0.9621031152211709 IN ())) AND (('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '1150697178 sz=-57905355 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=2018109486 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-95837301') NOT BETWEEN (NULL) AND (7.73467107E8)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 -1516070946 sz=1094971226 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 sz=1405948614'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '81436404 sz=-245366978 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '1494243891 0 sz=-327580198'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('3|갧')) BETWEEN ((TYPEOF('1204626388'))) AND (((- (x'e765'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1774804333 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN ((((x'') NOT NULL))) AND ((((-1089804858)>>(''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'Qlt켜Q3Bf'  WHEN '-1317622457' THEN '-226382809' WHEN '+4v' THEN '\n15(G7_,' WHEN '' THEN NULL WHEN 0X3784bb17 THEN 0.04599665710111622 WHEN 0Xfffffffff58b2e6c THEN 0.2843749592558539 END)<=(json_quote('n'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-22696134 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-947568842 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-1797163335 0 sz=873315949 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '2 1374394484 sz=773467107 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-1939063107 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((7.73467107E8)%(0x1296489a))  WHEN ((((x'')OR(x'69d2')))AND('1433514811')) THEN x'' COLLATE NOCASE ELSE '2101339221' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1516070946'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=311838874 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1094971226 950679850 sz=-693908145 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('-175427988')OR(0.7607792005108052)))AND('773467107')))OR(x'')))OR(x'c0025061')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1274687716') BETWEEN ('') AND ('1311120126'))) NOT BETWEEN (CAST('pr' AS BLOB)) AND (IFNULL(DISTINCT 0.6648903292696922, 0.9575063977316793))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('\n1')AND(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((311838874)+(-1e500)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE STRFTIME((NOT ('19797369')), ((NULL)IS NOT('')), ((0.598666922278509) NOT BETWEEN (NULL) AND (NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE BINARY)OR(((((x'93b2')OR(-1882089356)))AND(0.6417665796095844)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.33210632414421837 IN ())) BETWEEN ((((x'')) NOT BETWEEN ((NULL)) AND (('-670781383')))) AND (((0.36887232604169407)OR('-1618795070')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1291502199 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '0.7408463720710973'  WHEN (('IdOCn') NOTNULL) THEN (NOT (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '210413520' THEN NULL ELSE 0.5650996997657529 END) BETWEEN (((NULL) IS FALSE)) AND ((('-3s)~')|(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-271719340'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '2082630964 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1418001684 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1939063107 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2127849003'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((CASE ''  WHEN 1.774804333E9 THEN NULL WHEN 0x1ebf0d21 THEN x'' WHEN NULL THEN x'1f73b967' WHEN NULL THEN x'' WHEN '+M	\rW,' THEN x'b84f' ELSE '-1635342223' END)) AND ((315357574))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN x'' THEN 'ᢇ3' ELSE '-1618795070' END) NOT BETWEEN ((x'f1fb' IN ())) AND ((('2101339221') NOT BETWEEN (-6.08933338E8) AND (x'')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('1566540067') IS FALSE) THEN (('0.36887232604169407') IS TRUE) ELSE ((0.09778076161860993)&('-1886519771')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((NULL)AND(0.4191609599423748)))OR(0.4191609599423748)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 2 sz=1132503629 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' sz=1760547771 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND('-1089804858')))AND(x'')))=(((NULL)IS NOT(0.8724253985818788)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-2127849003 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN ('-463506411') AND ('b2*5z<s32'))) BETWEEN (0.33210632414421837 COLLATE RTRIM) AND ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '7{'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=1687180742'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=-1939063107 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1125252342'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)LIKE('')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1824087290 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1089804858'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=705301686 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((1759909802) NOT BETWEEN (x'd42c') AND ('')))OR(((NULL)&('')))))OR(CASE WHEN '' THEN 'E츹' WHEN 0.6298543243401841 THEN NULL WHEN NULL THEN 'U|䴄01Zyv' END)))OR(TYPEOF(DISTINCT -242448125))))AND(json(x'18cc'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '487654021 0 sz=-733922293'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' COLLATE BINARY AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('-907713995') BETWEEN (1163413932) AND ('941901987')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 -608933338 sz=-1644227644 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1517671512 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension((x'25ae' IN ()), CASE WHEN NULL THEN '' ELSE 0.3997221681434613 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE BINARY)OR(json_object(NULL, '0.46409065251618686'))))OR((((x'', 1.774804333E9, 0.13132133158674353))=((0.6417665796095844, 's^㛅', x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(-1907115875 AS BLOB) AS INTEGER); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-175427988)OR(((('E<'))!=((0.6648903292696922))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X36e8eb6d IN ()))AND((('s^㛅') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST('\nX Ol⯣' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ ('~P'))))=(((~ (x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=-1720067691 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.34971803983130423; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-513256708'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-489360524 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=962326910 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=2065241101 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=62067306'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1433514811', NULL, -89054897)) BETWEEN (((+ (0x2b00249b)), (+ (NULL)), NULL COLLATE NOCASE)) AND ((CASE -1932539935  WHEN NULL THEN 0Xffffffffd0dba17a ELSE NULL END, CAST('' AS BLOB), ((-334610895)>=(0.9039018621796608))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2049201108 sz=2091809792 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=694856528 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN NULL THEN x'' WHEN x'' THEN 0.9039018621796608 WHEN x'' THEN x'' ELSE -1.75427988E8 END  WHEN x'4576' COLLATE NOCASE THEN (NULL IN ()) END; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1344360804'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=1850374285 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 0 sz=-1517671512 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 0X5571b33b  WHEN 2101339221 THEN '487654021' WHEN 0.7628180590780728 THEN '1706700107' WHEN x'' THEN NULL ELSE 0.7010372975126679 END)AND(CAST('' AS REAL))))AND(((0xffffffffa946bcdf) NOT BETWEEN (x'') AND (0xffffffff9cbd9d2c)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=941901987'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(x'' AS REAL))OR((NULL IN ()))))AND(((0.15042981475197104) BETWEEN ('') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '522335022'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=578239971 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER))/(((x'feb774de') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((-1.317622457E9)AND(0x53cd12c6)))AND('Oa')))AND(0x24de5468)))OR((x'fbe8' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT (x'' IN (''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS REAL) IN ((('')OR(x'bad9')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('1374394484')AND(x'')))AND(x'')))OR(-886121044)))AND(x'13eca58e')) COLLATE RTRIM; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '0 -2074645955 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '-1317622457 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('0.6648903292696922') NOT BETWEEN (-9.5837301E7) AND (1885911450)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=609885346'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 0 sz=-2119903938 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-608933338 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 772487533 THEN '515837217' WHEN '449616157' THEN 'm		䢣''A' WHEN -1.52480645E8 THEN x'' WHEN 0xffffffffb405cf1c THEN 0X16e1efab WHEN 0Xfffffffff6e3ccb0 THEN '-1249044603' END)OR(CAST(NULL AS REAL))))OR(CASE WHEN 0.41672685186185776 THEN '1106753077' ELSE '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-327580198 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1924436004 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-1644227644 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)) COLLATE BINARY COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1024500378 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' sz=1921514818 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.24736967836315726)) BETWEEN ((NULL)) AND ((0x51eb9874))))>>(((x'')OR('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('鉥M!')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (QUOTE('-1618509715'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (1725811356 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LIKELIHOOD(DISTINCT 0.6648903292696922, 0.40343988763102123) THEN '-1966610516' ELSE ((((0.7773868113410446)AND('ﹺ')))OR('89785471')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' COLLATE NOCASE)OR((~ (x'36f4')))))OR((((NULL)) BETWEEN (('204373610')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(NULL)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '-1384151167 -1854515182 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('256805398', 0.9223520215256883, 'Goﳶd/|', 524603305, x'80392563')) BETWEEN ((-2.049201108E9, 0xffffffff9e86a871, NULL, 0.09778076161860993, NULL)) AND ((x'', '', 'D5wy', NULL, x'22900e77'))), 0xffffffffec7985da COLLATE RTRIM, ((x'913d') IS TRUE)))<=((((NULL) NOT NULL), (((((((('1193931915')OR(NULL)))AND(x'')))OR(NULL)))OR('\n,%M9A\r*E᫾')), (((0.42440470089350646, 0X44844284, 0.2863863654871609))<(('0.34971803983130423', NULL, 0.5974681054345147)))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1922521128 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=-1'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '0 -1055933286 sz=1311120126 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))IS NOT('-2119903938')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=996495229'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))*(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1996469512 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '1824087290 0 sz=-672651659 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6120261841967366)) BETWEEN ((0Xffffffffcde36775)) AND (('9ᅓ洴퇉9'))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=931445527 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(x'cc87', NULL))<(CASE WHEN '-1640719950' THEN NULL ELSE '1620356642' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=-242448125 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '-1983933436 sz=1209732298 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)&(x'')))<<((((((((('qmX')AND(x'')))AND('x8')))AND(0.535203838748705)))OR('1824087290')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'', '')) BETWEEN ((CASE NULL  WHEN '0.6120261841967366' THEN 0xfffffffff8930dec END, (((('TN')AND(NULL)))AND('0.46409065251618686')), TRIM(''))) AND ((((('857592265'))<=((''))), (('<顴')IS NOT('')), (+ (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1984699105 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1565697415'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=773467107'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT UNLIKELY(x''), (((NULL)) BETWEEN (('')) AND (('1150697178')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=955064094 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 0 sz=-1886519771 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT ((x'58f5') ISNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '0 sz=-1920666377 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '1687180742 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=389116034 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=2082630964'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=303642519 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=846438948 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0X74a5d294)AND(CASE x''  WHEN 0.22415209050420348 THEN 0.31039216984647455 WHEN NULL THEN '-833416360' WHEN 1020612019 THEN 0xffffffffc8a0a682 END)))OR((((NULL))<=((''))))))OR((('쉷ND>.x}') IS FALSE))))AND(CASE 1571233569  WHEN '-1541110581' THEN x'' WHEN '-1160235323' THEN x'8421' WHEN x'd88143bd' THEN '붣U' WHEN -1633912430 THEN '820271924' WHEN NULL THEN -647098221 ELSE '524603305' END)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-327580198 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=-1886519771'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULLIF(DISTINCT x'', x''))AND(CAST(0.18693939582829155 AS INTEGER))))OR(((0.8165806503241984)*(-9.5837301E7)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=694257857 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1244381162 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(DISTINCT x''))>(0.002690607249481225)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=1634995570 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-1094308386 sz=-327580198'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-245366978')AND(x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-1907115875'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN ('-1818090765') AND (NULL)))+((NOT (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=313873756 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Cy')) BETWEEN ((COALESCE(DISTINCT 1699459897, x'', 0.07554500981969481, x''))) AND (((('931445527')IS NOT(1024381347))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (LIKELIHOOD(522335022, 0.17313426140918342))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT CAST(NULL AS NUMERIC)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=-588571181 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (((NULL)) NOT BETWEEN (('x\r')) AND ((x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN NULL THEN -7.90912646E8 WHEN NULL THEN x'' WHEN NULL THEN 0.11411894565191716 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(IFNULL(DISTINCT x'', '0.4322492355364753')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffc9573438)) BETWEEN ((x'' COLLATE RTRIM)) AND ((((((0.9223520215256883)OR(x'')))AND(''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=1761664977 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=-1994705348'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '1150689884 -1986650215 sz=618549948 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 sz=349425842'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (820271924)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN NULL ELSE NULL END) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '363920566 sz=1609944402 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '569212655 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=873315949 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-2072539536 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=-1703491915 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '2 6 sz=1204626388'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '2 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-175427988 0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=938513817'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1514675253 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '0 0 sz=-89054897'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1778235028 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '261812976 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2118231711 sz=207210075 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '-1464401028 sz=-670781383 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-243173725 -689701046 sz=1760547771 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '-1313007970 sz=427667429'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=696955238 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT x'') COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '876831565 0 sz=1494243891'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-652445399 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1433514811, x'3dae', 1097475492))>=((x'', x'', NULL))) IN (CAST(0.436586130292014 AS NUMERIC), (('630271172') IS TRUE), SQLITE_VERSION())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=-1618795070'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)<(0.37102017277388544)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '0 sz=2091465087 unordered'); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT CASE WHEN ' U᫾n}' THEN x'' WHEN NULL THEN '<' WHEN 0X38aa392a THEN NULL WHEN NULL THEN -2035531154 WHEN 0.9700982155390424 THEN NULL ELSE 0.8700988927131899 END, ((((NULL)OR('')))AND(x'7ab4'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1597867267 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' COLLATE NOCASE AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 sz=1433514811 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1433514811 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '-1518958220 0 sz=-1244381162 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-947568842 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '0 1873991190 0 sz=1 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')>(x'ca5f')), TRIM(DISTINCT x'', 0.3646373704762389), (((x'')) NOT BETWEEN ((NULL)) AND (('')))))<=((CASE WHEN x'' THEN '' WHEN 0.6417665796095844 THEN '-889100899' WHEN 0.43912116240869126 THEN NULL END, (-1.516070946E9 IN ()), ('0.7010372975126679' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1311120126 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-1618812161'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-272586695 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=1500100759 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '1078292612 -1471162955'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)<(CASE WHEN -463506411 THEN 0.7147272826662014 ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(((((x'')AND('-1491314813')))OR(0Xffffffff84476689)), '269846623'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-1976483756 -30884941 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1446178301'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((+ (NULL)), NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.24091416487392647))==((0xfffffffffab1214f)))) BETWEEN (((x'a6fa') NOT BETWEEN (NULL) AND (NULL))) AND (((x'')||(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '-95837301 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-235574618 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-670781383'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1524973773 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)OR(x'8115')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=625164578'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ ('618550376')) THEN ('1873991190' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1930480088'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=260912944 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'') NOT BETWEEN ('') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)||(x'113e')))|((+ (0.5076757451995799)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('X[/?Q8' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1189594590 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'00bd' AS BLOB)) BETWEEN ((((x'250dd464')) NOT BETWEEN ((0.13189137877444734)) AND ((0.20645847399754758)))) AND ((NOT (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))<=(CAST(NULL AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=-248034044 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1939063107 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((5.22335022E8)&(NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '210413520 -2042291766 sz=751754401'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'')>(0.43825470079943796))  WHEN ((NULL)|(x'')) THEN 2101339221 COLLATE BINARY ELSE CASE WHEN 0.8447803648531611 THEN 0.10945542943348352 WHEN '' THEN '1824087290' WHEN 0.7136436331505682 THEN '*(' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)||(0.7832743943933783)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOT BETWEEN (-968576676) AND (0.9575063977316793)))OR(0.003974982477435329 COLLATE BINARY)))AND(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((x'')AND('')))OR(0.8551589253085511)) THEN ((' u᫾n}') ISNULL) WHEN ((NULL)<=('')) THEN CASE WHEN '2141679569' THEN 'CNt柒' ELSE 'YM.8' END WHEN ((0xffffffffd4413c0b) BETWEEN ('Pv7~go''e') AND (0.5969970197883078)) THEN TYPEOF(DISTINCT NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-629693627'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'0eea' IN ()) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '1494243891 sz=1535933312 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-1929731766'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS((((-2042291766))==(('-665743814')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-22696134 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(((('-1654779013', '1734546205', NULL))>=((NULL, '', x'029c')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS('119449820') COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '0 sz=-518922119 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=-95837301 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1644227644 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0.21922348170085892 THEN NULL WHEN 1.87399119E9 THEN '1163413932' WHEN x'4711513d' THEN '-1516070946' END AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '223846340 sz=-593890264 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=-287031683 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1610289355' IN ()) IN ((((('1269640092')OR(x'')))AND('-')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-882420849 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-1649450864 737705215 sz=215496941 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0xffffffffac19e754 AS REAL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1137998979'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1291502199 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' sz=-1980003492 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-407864209 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' COLLATE RTRIM IN ('-226382809')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '823566781 sz=522335022'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension('1502645403', (- ('yjCp\nCG'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'772b'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '0 sz=920002412 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1093161398 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-693908145 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' sz=684886850 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-996990320'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1824087290 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.160235323E9 COLLATE RTRIM))>=((x'' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1660912009 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT ((x'') NOT NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '-1517671512 0 sz=1873991190'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1218793642'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=27860488'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1760547771 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TYPEOF('?PaO呻Y้S') IN ((~ (x'')), (('0.22415209050420348')/('\n15(g7_,')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=1592495664'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN ('Cy') AND ('A/dn呟Hm'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1301365679') IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-773120621 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2105604996 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.39714831297513564)OR(NULL)))AND(x''))) NOT BETWEEN (((('705301686'))<((x'')))) AND ((('DC.D)&') NOT BETWEEN ('-80280353') AND (0.949124677873513)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' sz=-1966267052'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT (+ (NULL)), (((x'faa8'))==(('-699330152')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1768527022 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-89054897 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -260625893 sz=-1935315843 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-242448125 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE JULIANDAY(NULL, 0.11259562241243026, 0.24142472445946528, x'', 0Xffffffffaba9a980)  WHEN (~ (x'3856')) THEN ((-1.644227644E9) IS FALSE) WHEN CAST('-2049201108' AS NUMERIC) THEN (((0x48a529f3)) BETWEEN (('ef')) AND ((NULL))) WHEN ((('*<G', '2082630964', -1840184807)) NOT BETWEEN (('-4147453', NULL, x'')) AND ((0.7009768517799188, '}%Xb_8(k', '210413520'))) THEN 0X71b1ef27 WHEN ((0xffffffff8cb46def) NOT BETWEEN ('jUd') AND ('')) THEN (NOT (x'')) WHEN ((x'')LIKE(NULL)) THEN json_patch(x'c9e3', 1.759909802E9) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1872469614 sz=19797369'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0xffffffff8fa88d60)LIKE(NULL)) THEN '-1907115875' COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '820271924 1125252342 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' IN (x''))))!=((0.10459762994438448))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=32912967 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN '' WHEN x'e67f9d8d' THEN 0.8319167465664902 WHEN 0.801251017299214 THEN 0Xffffffffc9991f5b END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('iSZ')IS NOT(-1274687716)))||(CAST('u?a' AS INTEGER))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1870243411 sz=545636744'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'8f26' COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '0 sz=25699520 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')/((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1350520858 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE x'c2fd'  WHEN NULL THEN 0.7813751343766886 END THEN (('1125252342')!=('-684570198')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE highlight((((x'', NULL, ']O'))<(('?1VfJT⇱\|', 0.020580550130881003, 0.12561243647885567))), CASE WHEN x'' THEN x'' WHEN 'm\/Qs' THEN '1854995932' WHEN NULL THEN '-1239983670' ELSE '' END, '', ((0.720086738372125) IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 sz=-1797419843 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS NUMERIC)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=248508064 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((x'', 0.10459762994438448, 0.8311961703215153)) NOT BETWEEN (('7FO?.gn<', NULL, -175427988)) AND ((x'', '873315949', x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=473877141 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '-414926337 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((NULL)>('-848523875')))OR((('0.5076757451995799') ISNULL))))AND((NOT ('-1882089356')))))AND(((NULL) IS TRUE))))AND(TRIM('0.8700988927131899', x'a135'))))AND(('<!z>N骵' IN (0.573888865695111)))))OR(0.13364173715989303 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '1306633780 1536301305'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-271719340 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('(\r뉊)') BETWEEN (432145137) AND (-1582479770)) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE BINARY)OR((NOT (x'')))))AND((-1241739423 IN (x'', '2102184695')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-335856471 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1089804858 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '693885461 sz=-170781889 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE highlight((('19797369')%('705301686')), NULL COLLATE NOCASE, ((0.12392640877756078)%('1286148544')), 0.47667538781682284); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM((('#rSo')AND(0.39714831297513564))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1635342223'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1405948614 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN x'' THEN '-1939063107' ELSE '(\r뉊)' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.7008879820194107))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=382377152 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((x'')LIKE(NULL)), CAST(x'' AS INTEGER)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-522309504'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '0 2 sz=685425286'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-411401971' IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '-189128052 sz=-632902685'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-1469756692 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=41355167 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('8콹놸凲H[ygV' AS BLOB))AND(LENGTH('-176321252'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' COLLATE RTRIM THEN ((((x'')AND(x'')))OR('19AWY埂')) WHEN x'' COLLATE NOCASE THEN CASE 0.792190082751923  WHEN 0.6345141406791971 THEN NULL ELSE 0.19489146751526898 END WHEN UPPER(0.6779142657307382) THEN ((((x'')OR(0.6057229095759272)))AND('0.21922348170085892')) ELSE CASE x''  WHEN x'' THEN x'' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1939063107 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1244381162'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 sz=-733922293 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-18780407')AND(1.502645403E9)))OR(x'')))OR(x'')))OR(x'')))LIKE(((x'a1de')<=('1873991190')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(((1.106753077E9) NOT BETWEEN ('-1273873489') AND (0.9116690332489513))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1568290647 sz=-220169378 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1.418001684E9 IN (0.6368811389306482)) IN ((((x''))==(('JK**r.Ao'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-57905355') NOTNULL))AND(((x'eeb3')LIKE(NULL)))))AND(TYPEOF('-1098129661'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT x'', NULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-348045003 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-815921110'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-2127946006 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1311120126'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1939063107 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.17938648343340635)*(2.1041352E8))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(0.9958449581013796)))-(CASE WHEN '~P' THEN 0.05512731552874728 ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-684062676 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-89054897 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((9.5067985E8)AND(x'afd6')))AND(0.7607792005108052)))=((((NULL)) NOT BETWEEN ((-1.61879507E9)) AND ((0.7359698285343316))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' sz=-175427988 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'W'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=921234285 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((((((x'')OR('1502645403')))OR(x'e309')))OR('921234285')))OR(x'')))OR(-310047685)))OR(0.37353515685835625)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-361838163 2 sz=-440288595 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '-733922293 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-751280484 437894766 sz=-666982206'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '1843498670 -117557130 sz=1325973031 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('w')) BETWEEN ((((((x'')OR(NULL)))OR('')))) AND (((((0.310905435130696, 0.45454963568572226, 0.025586517692761657))<=((0.4463197396388756, 1829171393, 8.73315949E8)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-991860944'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '1759039334 0 sz=931445527 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1827129870 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2018109486 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '1247231994 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1244381162 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (json_array_length(0.43912116240869126, 1.311120126E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN 'Q' THEN NULL WHEN 7.73467107E8 THEN 0.7896875354753532 WHEN '210413520' THEN 0.49976090508237503 ELSE '鳮瞗\n' END) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x4311fcf6; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1820925088 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=495130550 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) BETWEEN (DATETIME('frGja', 0X43c46924, 0.4414899514436492)) AND (((('-608933338', NULL, 524603305))=((NULL, x'5f6f', x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('TN')OR('-608933338')))AND(x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x77f635e5)+(((x'')GLOB(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '0 399757885 sz=-1802293671 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1957024404 0 sz=1306172316 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('-271719340')) AS BLOB); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1089804858 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=2052009108 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-2118709948 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.10077165154894685) ISNULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0Xb5b8f9f COLLATE BINARY)AND((((-1, NULL, 0.6779142657307382))<>((0xfffffffff3ce3a14, 'cnt柒', '0.13189137877444734'))))))AND(-113565880 COLLATE BINARY)))AND(((((x'')AND(-8.9054897E7)))OR(0Xffffffffd0dba17a)))))AND(((('-1644227644'))<((0.07714711053183354))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('532143791')+(0x1ebf0d21)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=2091779213 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1759909802 sz=196942094 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'bb41' AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '0 sz=1310193437 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=-2042291766'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1642282665'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-855929746 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS INTEGER)  WHEN ((('163351074', x'', NULL)) BETWEEN ((NULL, x'', x'')) AND ((-999880870, 0.59597714919806, x''))) THEN CAST(0.19489146751526898 AS REAL) ELSE (x'' IN (0.7933604369351623, '941901987')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1626127546 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X7fffffffffffffff; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-229903349'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=603303662 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((x'')IS(NULL)))) AND ((NULLIF(x'', '')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-95837301 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((JULIANDAY('뭡f', 'ﹺ', '-1128604683')) NOT BETWEEN ((NULL IN (NULL))) AND (((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-119897951 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 sz=1935904863 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE RTRIM AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR(NULL)))OR('-1848017013')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '2 sz=-804318739 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1516070946 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('}m')GLOB(x'')))AND((NOT (x'')))))OR(CASE -2.049201108E9  WHEN NULL THEN 0.8319167465664902 WHEN -8.9054897E7 THEN 618550376 WHEN 'Oe' THEN x'' END)))OR(((x'')GLOB(x'')))))OR(CASE WHEN NULL THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-1494731001 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (('' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=33906937 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=23850258 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=611809516 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '266147704 sz=-2044201742 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=-26978803 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ' sz=-1618162280 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '931445527 1433514811 sz=1312472116'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((600196114)) NOT BETWEEN ((((0x6267a45f) ISNULL))) AND ((NULLIF(DISTINCT NULL, NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.43825470079943796) ISNULL)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-20532357 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '0 0 sz=-192042008'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', '1032441401 sz=-1886519771 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '-175427988 553814282'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1516070946'))<((0.42153868107952197))), ((x'133e59a8') NOT BETWEEN ('/ׂ<P&v') AND (0xffffffff8ec23650)), (~ (0.8088756892387443))))>((CASE x'3356'  WHEN NULL THEN 0.269910962080972 ELSE '1759909802' END, ((x'') IS FALSE), ((-882420849)<(1531610627))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0xffffffffd20051b8 AS INTEGER))>=((((1654695896, NULL, '!a')) NOT BETWEEN ((0.9525886688928596, '踿.', NULL)) AND ((0.24361559865819093, x'', 0.9687601207101452))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-327580198'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.13759635077572818) BETWEEN (((']x굖f^')<<(x'7df1'))) AND ((((0.13364173715989303))>=((x'8679'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', '0 sz=950679850 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', '327477717 -1226323553 sz=524603305'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1291502199 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-245366978'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LIKE('524603305', 0.24091416487392647, '鳮') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN '1374394484' THEN 0x5e92d7b9 END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1644227644' COLLATE NOCASE)<<((NOT (x'51c7')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'v0', ' sz=1037539298 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1503546053 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN ('-1426655180') AND (0.7434860195072118)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') BETWEEN ('y') AND (1311120126)) THEN (x'' IN ()) ELSE ((0.3179176775128928) IS TRUE) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((('181960316' IN ()))) AND (('.C' COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1150697178 sz=-226382809 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-271719340 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1406402307' COLLATE NOCASE)OR((x'e785' IN (NULL, x'3fd4')))))OR(CASE WHEN x'aea7' THEN NULL END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1237808244 0 sz=-1069606893 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'')AND('0.34971803983130423')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1127219645 sz=-571296276 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=897452621 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=773467107 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1582407720'); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES ('8{%Go5K2C'); -- 18ms;
INSERT OR ROLLBACK INTO t1 VALUES (x''), ('d[	馜mX脣s'), ('-1317622457'); -- 9ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES ('-1317622457', -1985447575); -- 8ms;
PRAGMA incremental_vacuum(1700711778); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (x''); -- 9ms;
PRAGMA soft_heap_limit; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 8ms;
END TRANSACTION; -- 0ms;
PRAGMA main.auto_vacuum = INCREMENTAL; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL); -- 12ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('2101339221'), (x''), (x''); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES ('1473008195', '顴x', -8.55929746E8); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (0.5661177501757237, '-1618795070'), (0.7110480679794055, '-1321179431'), (NULL, NULL); -- 0ms;
ANALYZE; -- 1ms;
CREATE INDEX IF NOT EXISTS i8 ON t1(((((NULL)>>(c0))) BETWEEN ((('2012673965') NOT BETWEEN (c0) AND (c0))) AND (((c0)+(c0)))) COLLATE BINARY) WHERE ((CASE c0  WHEN c0 THEN c0 END) IS FALSE); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA stats; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('v''(D㰋Xc/0'); -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL), (1535899208), (x''), (0.41829373323053), ('-271719340'); -- 5ms;
COMMIT; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX i70 ON t1((((x'' IN ()))IS NOT((((c0, c0, c0))<=((c0, c0, c0))))) ASC) WHERE 0.14322905632720628; -- 0ms;
CREATE INDEX IF NOT EXISTS i83 ON t1(((((((c0)) BETWEEN ((c0)) AND ((c0)))))==((CASE c0  WHEN c0 THEN 0.7607792005108052 WHEN c0 THEN c0 WHEN c0 THEN c0 WHEN c0 THEN c0 WHEN 0.7204195463979307 THEN c0 ELSE c0 END))) COLLATE NOCASE); -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((- ('-1938263658')) IN ()) WHERE ((((NOT (rt0.c0))) IS FALSE)) ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 END COLLATE BINARY COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((- ('-1938263658')) IN ()) ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 END COLLATE BINARY COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((- ('-1938263658')) IN ()) WHERE ((((NOT (rt0.c0))) IS FALSE)) ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 END COLLATE BINARY COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((- ('-1938263658')) IN ()) ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 END COLLATE BINARY COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((- ('-1938263658')) IN ()) WHERE ((((NOT (rt0.c0))) IS FALSE)) ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 END COLLATE BINARY COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (CASE (rt0.c0 IN ())  WHEN rt0.c2 THEN ((rt0.c0)IS(rt0.c1)) ELSE CAST(rt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN ())  WHEN rt0.c2 THEN ((rt0.c0)IS(rt0.c1)) ELSE CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE (rt0.c0 IN ())  WHEN rt0.c2 THEN ((rt0.c0)IS(rt0.c1)) ELSE CAST(rt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN ())  WHEN rt0.c2 THEN ((rt0.c0)IS(rt0.c1)) ELSE CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE (rt0.c0 IN ())  WHEN rt0.c2 THEN ((rt0.c0)IS(rt0.c1)) ELSE CAST(rt0.c0 AS BLOB) END);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)IS(t1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)IS(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)IS(t1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)IS(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)IS(t1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON ((CASE WHEN t1.c0 THEN rt0.c2 ELSE rt0.c0 END)<<((~ (t1.c0)))) FULL OUTER JOIN rt0 ON ((((rt0.c2)<<(rt0.c2)))>(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)) WHERE (CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)>=(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((CASE WHEN t1.c0 THEN rt0.c2 ELSE rt0.c0 END)<<((~ (t1.c0)))) FULL OUTER JOIN rt0 ON ((((rt0.c2)<<(rt0.c2)))>(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)>=(vt0.c0)));
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON ((CASE WHEN t1.c0 THEN rt0.c2 ELSE rt0.c0 END)<<((~ (t1.c0)))) FULL OUTER JOIN rt0 ON ((((rt0.c2)<<(rt0.c2)))>(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)) WHERE (CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)>=(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((CASE WHEN t1.c0 THEN rt0.c2 ELSE rt0.c0 END)<<((~ (t1.c0)))) FULL OUTER JOIN rt0 ON ((((rt0.c2)<<(rt0.c2)))>(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)>=(vt0.c0)));
SELECT * FROM t1 WHERE (CAST(CAST(t1.c0 AS REAL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(CAST(t1.c0 AS REAL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(CAST(t1.c0 AS REAL) AS BLOB));
SELECT ALL * FROM t1, rt0, vt0 WHERE ((((~ (rt0.c0)))-(t1.c0)));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0)))-(t1.c0))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL * FROM t1, rt0, vt0 WHERE ((((~ (rt0.c0)))-(t1.c0)));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0)))-(t1.c0))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL * FROM t1, rt0, vt0 WHERE ((((~ (rt0.c0)))-(t1.c0)));
SELECT COUNT(*) FROM vt0 WHERE (CASE 0.49429819532160724  WHEN NULL THEN x'b950' WHEN vt0.c0 THEN ((vt0.c0)/(vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE CAST(vt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.49429819532160724  WHEN NULL THEN x'b950' WHEN vt0.c0 THEN ((vt0.c0)/(vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE 0.49429819532160724  WHEN NULL THEN x'b950' WHEN vt0.c0 THEN ((vt0.c0)/(vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE CAST(vt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.49429819532160724  WHEN NULL THEN x'b950' WHEN vt0.c0 THEN ((vt0.c0)/(vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE 0.49429819532160724  WHEN NULL THEN x'b950' WHEN vt0.c0 THEN ((vt0.c0)/(vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE CAST(vt0.c0 AS INTEGER) END);
SELECT * FROM vt0 WHERE (CASE WHEN (NOT (-7.33922293E8)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.293092684741598 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE (+ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (-7.33922293E8)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.293092684741598 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN (NOT (-7.33922293E8)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.293092684741598 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE (+ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (-7.33922293E8)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.293092684741598 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN (NOT (-7.33922293E8)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.293092684741598 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE (+ (vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ('\nsy'))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ('\nsy'))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ('\nsy'))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ('\nsy'))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ('\nsy'))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT ALL * FROM v0, vt0, t1 NATURAL JOIN rt0 WHERE (ABS(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((ABS(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) IS TRUE)  as count FROM v0, vt0, t1 NATURAL JOIN rt0);
SELECT ALL * FROM v0, vt0, t1 NATURAL JOIN rt0 WHERE (ABS(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((ABS(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) IS TRUE)  as count FROM v0, vt0, t1 NATURAL JOIN rt0);
SELECT ALL * FROM v0, vt0, t1 NATURAL JOIN rt0 WHERE (ABS(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))));
SELECT ALL * FROM vt0 WHERE ((((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE ((((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE ((((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) IS TRUE), CAST(vt0.c0 AS TEXT), ((vt0.c0)/(vt0.c0)), 0.1191848708316986))<=((((vt0.c0)%(vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0)-(vt0.c0)), LIKELY(DISTINCT vt0.c0), (((vt0.c0))<=((vt0.c0))), ((vt0.c0)OR(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) IS TRUE), CAST(vt0.c0 AS TEXT), ((vt0.c0)/(vt0.c0)), 0.1191848708316986))<=((((vt0.c0)%(vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0)-(vt0.c0)), LIKELY(DISTINCT vt0.c0), (((vt0.c0))<=((vt0.c0))), ((vt0.c0)OR(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) IS TRUE), CAST(vt0.c0 AS TEXT), ((vt0.c0)/(vt0.c0)), 0.1191848708316986))<=((((vt0.c0)%(vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0)-(vt0.c0)), LIKELY(DISTINCT vt0.c0), (((vt0.c0))<=((vt0.c0))), ((vt0.c0)OR(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) IS TRUE), CAST(vt0.c0 AS TEXT), ((vt0.c0)/(vt0.c0)), 0.1191848708316986))<=((((vt0.c0)%(vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0)-(vt0.c0)), LIKELY(DISTINCT vt0.c0), (((vt0.c0))<=((vt0.c0))), ((vt0.c0)OR(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) IS TRUE), CAST(vt0.c0 AS TEXT), ((vt0.c0)/(vt0.c0)), 0.1191848708316986))<=((((vt0.c0)%(vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0)-(vt0.c0)), LIKELY(DISTINCT vt0.c0), (((vt0.c0))<=((vt0.c0))), ((vt0.c0)OR(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((ROUND(rt0.c0, rt0.c1), (rt0.c2 IN ()), rt0.c0)) AND ((((rt0.c1)IS(rt0.c1)), rt0.c0 COLLATE RTRIM, (rt0.c1 IN (rt0.c0))))) WHERE (HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((ROUND(rt0.c0, rt0.c1), (rt0.c2 IN ()), rt0.c0)) AND ((((rt0.c1)IS(rt0.c1)), rt0.c0 COLLATE RTRIM, (rt0.c1 IN (rt0.c0))))) ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((ROUND(rt0.c0, rt0.c1), (rt0.c2 IN ()), rt0.c0)) AND ((((rt0.c1)IS(rt0.c1)), rt0.c0 COLLATE RTRIM, (rt0.c1 IN (rt0.c0))))) WHERE (HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((ROUND(rt0.c0, rt0.c1), (rt0.c2 IN ()), rt0.c0)) AND ((((rt0.c1)IS(rt0.c1)), rt0.c0 COLLATE RTRIM, (rt0.c1 IN (rt0.c0))))) ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((ROUND(rt0.c0, rt0.c1), (rt0.c2 IN ()), rt0.c0)) AND ((((rt0.c1)IS(rt0.c1)), rt0.c0 COLLATE RTRIM, (rt0.c1 IN (rt0.c0))))) WHERE (HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE NOCASE;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) NOTNULL));
SELECT ALL * FROM vt0, v0 WHERE (CAST(((NULL)/(vt0.c0)) AS INTEGER)) ORDER BY CAST(((v0.c0)>(vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)/(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((v0.c0)>(vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(((NULL)/(vt0.c0)) AS INTEGER)) ORDER BY CAST(((v0.c0)>(vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)/(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((v0.c0)>(vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(((NULL)/(vt0.c0)) AS INTEGER)) ORDER BY CAST(((v0.c0)>(vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND ((((0.5482430023679117))>=((rt0.c2)))))) ORDER BY (((rt0.c0)) BETWEEN ((x'')) AND ((((rt0.c0)OR(rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND ((((0.5482430023679117))>=((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((x'')) AND ((((rt0.c0)OR(rt0.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND ((((0.5482430023679117))>=((rt0.c2)))))) ORDER BY (((rt0.c0)) BETWEEN ((x'')) AND ((((rt0.c0)OR(rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND ((((0.5482430023679117))>=((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((x'')) AND ((((rt0.c0)OR(rt0.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND ((((0.5482430023679117))>=((rt0.c2)))))) ORDER BY (((rt0.c0)) BETWEEN ((x'')) AND ((((rt0.c0)OR(rt0.c1)))))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 NATURAL JOIN t1 WHERE ((((CAST('' AS INTEGER), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), (- (rt0.c1))))>((NULLIF(vt0.c0, t1.c0), (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c0))), (((rt0.c0))<=((rt0.c2))))))) ORDER BY CAST(((((t1.c0)AND(rt0.c2)))AND(rt0.c1)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST('' AS INTEGER), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), (- (rt0.c1))))>((NULLIF(vt0.c0, t1.c0), (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c0))), (((rt0.c0))<=((rt0.c2))))))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t1 ORDER BY CAST(((((t1.c0)AND(rt0.c2)))AND(rt0.c1)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN t1 WHERE ((((CAST('' AS INTEGER), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), (- (rt0.c1))))>((NULLIF(vt0.c0, t1.c0), (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c0))), (((rt0.c0))<=((rt0.c2))))))) ORDER BY CAST(((((t1.c0)AND(rt0.c2)))AND(rt0.c1)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST('' AS INTEGER), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), (- (rt0.c1))))>((NULLIF(vt0.c0, t1.c0), (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c0))), (((rt0.c0))<=((rt0.c2))))))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t1 ORDER BY CAST(((((t1.c0)AND(rt0.c2)))AND(rt0.c1)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN t1 WHERE ((((CAST('' AS INTEGER), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), (- (rt0.c1))))>((NULLIF(vt0.c0, t1.c0), (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c0))), (((rt0.c0))<=((rt0.c2))))))) ORDER BY CAST(((((t1.c0)AND(rt0.c2)))AND(rt0.c1)) AS BLOB) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((((((v0.c0 IN (v0.c0, v0.c0, v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) NOT NULL)))) ORDER BY ((TYPEOF(DISTINCT ''))IS NOT(((v0.c0)<(NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN (v0.c0, v0.c0, v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY ((TYPEOF(DISTINCT ''))IS NOT(((v0.c0)<(NULL)))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((v0.c0 IN (v0.c0, v0.c0, v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) NOT NULL)))) ORDER BY ((TYPEOF(DISTINCT ''))IS NOT(((v0.c0)<(NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN (v0.c0, v0.c0, v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY ((TYPEOF(DISTINCT ''))IS NOT(((v0.c0)<(NULL)))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((v0.c0 IN (v0.c0, v0.c0, v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((v0.c0) NOT NULL)))) ORDER BY ((TYPEOF(DISTINCT ''))IS NOT(((v0.c0)<(NULL)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((t1.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c0) IS FALSE));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (- (((rt0.c2)LIKE(vt0.c0)))) LEFT OUTER JOIN vt0 ON (LIKELIHOOD(vt0.c0, 0.6189337366963205) IN ()) INNER JOIN t1 ON (((+ (rt0.c1)))||(((rt0.c2) NOT BETWEEN (rt0.c2) AND (0Xffffffffb1421c8c)))) WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY '-960497853' ASC  NULLS FIRST, x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (- (((rt0.c2)LIKE(vt0.c0)))) LEFT OUTER JOIN vt0 ON (LIKELIHOOD(vt0.c0, 0.6189337366963205) IN ()) INNER JOIN t1 ON (((+ (rt0.c1)))||(((rt0.c2) NOT BETWEEN (rt0.c2) AND (0Xffffffffb1421c8c)))) ORDER BY '-960497853' ASC  NULLS FIRST, x'' ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (- (((rt0.c2)LIKE(vt0.c0)))) LEFT OUTER JOIN vt0 ON (LIKELIHOOD(vt0.c0, 0.6189337366963205) IN ()) INNER JOIN t1 ON (((+ (rt0.c1)))||(((rt0.c2) NOT BETWEEN (rt0.c2) AND (0Xffffffffb1421c8c)))) WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY '-960497853' ASC  NULLS FIRST, x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (- (((rt0.c2)LIKE(vt0.c0)))) LEFT OUTER JOIN vt0 ON (LIKELIHOOD(vt0.c0, 0.6189337366963205) IN ()) INNER JOIN t1 ON (((+ (rt0.c1)))||(((rt0.c2) NOT BETWEEN (rt0.c2) AND (0Xffffffffb1421c8c)))) ORDER BY '-960497853' ASC  NULLS FIRST, x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(CAST(t1.c0 AS TEXT) AS BLOB)) ORDER BY ((x'')LIKE(CAST(t1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY ((x'')LIKE(CAST(t1.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(CAST(t1.c0 AS TEXT) AS BLOB)) ORDER BY ((x'')LIKE(CAST(t1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY ((x'')LIKE(CAST(t1.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(CAST(t1.c0 AS TEXT) AS BLOB)) ORDER BY ((x'')LIKE(CAST(t1.c0 AS INTEGER)));
SELECT * FROM vt0, v0, t1, rt0 WHERE ((((rt0.c2)OR(rt0.c1)) IN ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)OR(rt0.c1)) IN ((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, t1, rt0);
SELECT * FROM vt0, v0, t1, rt0 WHERE ((((rt0.c2)OR(rt0.c1)) IN ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)OR(rt0.c1)) IN ((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, t1, rt0);
SELECT * FROM vt0, v0, t1, rt0 WHERE ((((rt0.c2)OR(rt0.c1)) IN ((NOT (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ((+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM v0, rt0 WHERE (((((((((LAST_INSERT_ROWID())OR((- (rt0.c1)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))OR(0.9700982155390424)))OR(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((LAST_INSERT_ROWID())OR((- (rt0.c1)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))OR(0.9700982155390424)))OR(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((((LAST_INSERT_ROWID())OR((- (rt0.c1)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))OR(0.9700982155390424)))OR(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((LAST_INSERT_ROWID())OR((- (rt0.c1)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))OR(0.9700982155390424)))OR(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((((LAST_INSERT_ROWID())OR((- (rt0.c1)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))OR(0.9700982155390424)))OR(CAST(v0.c0 AS REAL))));
SELECT * FROM v0, vt0 WHERE (((v0.c0 COLLATE BINARY)>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((v0.c0 COLLATE BINARY)>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((v0.c0 COLLATE BINARY)>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((rt0.c0 IN ('upX')) IN (((((rt0.c1)OR(rt0.c0)))AND('')))) CROSS JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (((v0.c0) ISNULL)) AND (CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 END)) WHERE (CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((rt0.c0 IN ('upX')) IN (((((rt0.c1)OR(rt0.c0)))AND('')))) CROSS JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (((v0.c0) ISNULL)) AND (CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 END)));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((rt0.c0 IN ('upX')) IN (((((rt0.c1)OR(rt0.c0)))AND('')))) CROSS JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (((v0.c0) ISNULL)) AND (CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 END)) WHERE (CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((rt0.c0 IN ('upX')) IN (((((rt0.c1)OR(rt0.c0)))AND('')))) CROSS JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (((v0.c0) ISNULL)) AND (CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 END)));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((rt0.c0 IN ('upX')) IN (((((rt0.c1)OR(rt0.c0)))AND('')))) CROSS JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (((v0.c0) ISNULL)) AND (CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 END)) WHERE (CAST(vt0.c0 AS TEXT));
SELECT * FROM v0, vt0, rt0 WHERE ('0.13364173715989303');
SELECT SUM(count) FROM (SELECT (('0.13364173715989303') IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE ('0.13364173715989303');
SELECT SUM(count) FROM (SELECT (('0.13364173715989303') IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE ('0.13364173715989303');
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((x'', v0.c0, rt0.c0)) BETWEEN ((((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)), rt0.c0 COLLATE BINARY, ((v0.c0) IS TRUE))) AND (((((v0.c0))=((v0.c0))), (((rt0.c0))==((rt0.c1))), (NOT (v0.c0)))))) ORDER BY (((- (NULL)))IS(rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'', v0.c0, rt0.c0)) BETWEEN ((((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)), rt0.c0 COLLATE BINARY, ((v0.c0) IS TRUE))) AND (((((v0.c0))=((v0.c0))), (((rt0.c0))==((rt0.c1))), (NOT (v0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((- (NULL)))IS(rt0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((x'', v0.c0, rt0.c0)) BETWEEN ((((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)), rt0.c0 COLLATE BINARY, ((v0.c0) IS TRUE))) AND (((((v0.c0))=((v0.c0))), (((rt0.c0))==((rt0.c1))), (NOT (v0.c0)))))) ORDER BY (((- (NULL)))IS(rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'', v0.c0, rt0.c0)) BETWEEN ((((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)), rt0.c0 COLLATE BINARY, ((v0.c0) IS TRUE))) AND (((((v0.c0))=((v0.c0))), (((rt0.c0))==((rt0.c1))), (NOT (v0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((- (NULL)))IS(rt0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((x'', v0.c0, rt0.c0)) BETWEEN ((((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)), rt0.c0 COLLATE BINARY, ((v0.c0) IS TRUE))) AND (((((v0.c0))=((v0.c0))), (((rt0.c0))==((rt0.c1))), (NOT (v0.c0)))))) ORDER BY (((- (NULL)))IS(rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2 IN (rt0.c1)))>((rt0.c2 IN ())))) ORDER BY (((((((((v0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(v0.c0)))AND(rt0.c2)) IN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c1)))>((rt0.c2 IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((((v0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(v0.c0)))AND(rt0.c2)) IN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2 IN (rt0.c1)))>((rt0.c2 IN ())))) ORDER BY (((((((((v0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(v0.c0)))AND(rt0.c2)) IN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c1)))>((rt0.c2 IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((((v0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(v0.c0)))AND(rt0.c2)) IN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2 IN (rt0.c1)))>((rt0.c2 IN ())))) ORDER BY (((((((((v0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(v0.c0)))AND(rt0.c2)) IN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS FIRST;
SELECT * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(x'' COLLATE RTRIM AS REAL)) ORDER BY ((vt0.c0) NOT NULL) COLLATE NOCASE  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL) COLLATE NOCASE  NULLS FIRST, vt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(x'' COLLATE RTRIM AS REAL)) ORDER BY ((vt0.c0) NOT NULL) COLLATE NOCASE  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL) COLLATE NOCASE  NULLS FIRST, vt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(x'' COLLATE RTRIM AS REAL)) ORDER BY ((vt0.c0) NOT NULL) COLLATE NOCASE  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0, t1, vt0 WHERE ('Vo');
SELECT SUM(count) FROM (SELECT ALL (('Vo') IS TRUE)  as count FROM v0, rt0, t1, vt0);
SELECT ALL * FROM v0, rt0, t1, vt0 WHERE ('Vo');
SELECT SUM(count) FROM (SELECT ALL (('Vo') IS TRUE)  as count FROM v0, rt0, t1, vt0);
SELECT ALL * FROM v0, rt0, t1, vt0 WHERE ('Vo');
SELECT ALL * FROM vt0, t1, v0, rt0 WHERE (CAST(TYPEOF(rt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(rt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0, t1, v0 NOT INDEXED, rt0);
SELECT ALL * FROM vt0, t1, v0, rt0 WHERE (CAST(TYPEOF(rt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(rt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0, t1, v0 NOT INDEXED, rt0);
SELECT ALL * FROM vt0, t1, v0, rt0 WHERE (CAST(TYPEOF(rt0.c0) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (x'3ec61fd2' COLLATE NOCASE) ORDER BY ((((rt0.c2)<(rt0.c1)))|((- (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'3ec61fd2' COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((rt0.c2)<(rt0.c1)))|((- (rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (x'3ec61fd2' COLLATE NOCASE) ORDER BY ((((rt0.c2)<(rt0.c1)))|((- (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'3ec61fd2' COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((rt0.c2)<(rt0.c1)))|((- (rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (x'3ec61fd2' COLLATE NOCASE) ORDER BY ((((rt0.c2)<(rt0.c1)))|((- (rt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL) WHERE (TRIM(t1.c0));
SELECT SUM(count) FROM (SELECT ((TRIM(t1.c0)) IS TRUE)  as count FROM t1, rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL));
SELECT COUNT(*) FROM t1, rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL) WHERE (TRIM(t1.c0));
SELECT SUM(count) FROM (SELECT ((TRIM(t1.c0)) IS TRUE)  as count FROM t1, rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL));
SELECT COUNT(*) FROM t1, rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL) WHERE (TRIM(t1.c0));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0))<((0.32841682474838496))))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('E.'))))))) ORDER BY LOWER((vt0.c0 IN (vt0.c0, vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((vt0.c0))<((0.32841682474838496))))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('E.'))))))) IS TRUE)  as count FROM vt0 ORDER BY LOWER((vt0.c0 IN (vt0.c0, vt0.c0))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0))<((0.32841682474838496))))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('E.'))))))) ORDER BY LOWER((vt0.c0 IN (vt0.c0, vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((vt0.c0))<((0.32841682474838496))))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('E.'))))))) IS TRUE)  as count FROM vt0 ORDER BY LOWER((vt0.c0 IN (vt0.c0, vt0.c0))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0))<((0.32841682474838496))))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('E.'))))))) ORDER BY LOWER((vt0.c0 IN (vt0.c0, vt0.c0))) DESC;
SELECT ALL * FROM vt0, v0, t1 FULL OUTER JOIN rt0 ON ((((((rt0.c2)IS NOT(t1.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN 0.43825470079943796 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)))AND(CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END)) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, v0, t1 FULL OUTER JOIN rt0 ON ((((((rt0.c2)IS NOT(t1.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN 0.43825470079943796 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)))AND(CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END)));
SELECT ALL * FROM vt0, v0, t1 FULL OUTER JOIN rt0 ON ((((((rt0.c2)IS NOT(t1.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN 0.43825470079943796 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)))AND(CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END)) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, v0, t1 FULL OUTER JOIN rt0 ON ((((((rt0.c2)IS NOT(t1.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN 0.43825470079943796 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)))AND(CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END)));
SELECT ALL * FROM vt0, v0, t1 FULL OUTER JOIN rt0 ON ((((((rt0.c2)IS NOT(t1.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN 0.43825470079943796 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)))AND(CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END)) WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t1 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t1 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t1 WHERE (x'' COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((((~ (rt0.c0))))<=((rt0.c2 COLLATE RTRIM)))  NULLS FIRST, COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (x'3dc0f2af') AND (x'')), ((rt0.c1) BETWEEN (rt0.c0) AND (NULL))) DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((~ (rt0.c0))))<=((rt0.c2 COLLATE RTRIM)))  NULLS FIRST, COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (x'3dc0f2af') AND (x'')), ((rt0.c1) BETWEEN (rt0.c0) AND (NULL))) DESC  NULLS FIRST, NULL);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((((~ (rt0.c0))))<=((rt0.c2 COLLATE RTRIM)))  NULLS FIRST, COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (x'3dc0f2af') AND (x'')), ((rt0.c1) BETWEEN (rt0.c0) AND (NULL))) DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((~ (rt0.c0))))<=((rt0.c2 COLLATE RTRIM)))  NULLS FIRST, COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (x'3dc0f2af') AND (x'')), ((rt0.c1) BETWEEN (rt0.c0) AND (NULL))) DESC  NULLS FIRST, NULL);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((((~ (rt0.c0))))<=((rt0.c2 COLLATE RTRIM)))  NULLS FIRST, COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (x'3dc0f2af') AND (x'')), ((rt0.c1) BETWEEN (rt0.c0) AND (NULL))) DESC  NULLS FIRST, NULL;
SELECT ALL * FROM t1 INNER JOIN rt0 ON json_extract(t1.c0, (rt0.c1 IN (rt0.c2))) RIGHT OUTER JOIN v0 ON v0.c0 WHERE (IFNULL(UNLIKELY(DISTINCT t1.c0), (- (t1.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(UNLIKELY(DISTINCT t1.c0), (- (t1.c0)))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON json_extract(t1.c0, (rt0.c1 IN (rt0.c2))) RIGHT OUTER JOIN v0 ON v0.c0);
SELECT ALL * FROM t1 INNER JOIN rt0 ON json_extract(t1.c0, (rt0.c1 IN (rt0.c2))) RIGHT OUTER JOIN v0 ON v0.c0 WHERE (IFNULL(UNLIKELY(DISTINCT t1.c0), (- (t1.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(UNLIKELY(DISTINCT t1.c0), (- (t1.c0)))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON json_extract(t1.c0, (rt0.c1 IN (rt0.c2))) RIGHT OUTER JOIN v0 ON v0.c0);
SELECT * FROM rt0, v0, t1 WHERE (((rt0.c1) BETWEEN (json_extract(0.6173203529213817, v0.c0)) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (json_extract(0.6173203529213817, v0.c0)) AND (rt0.c2))) IS TRUE)  as count FROM rt0, v0, t1);
SELECT * FROM rt0, v0, t1 WHERE (((rt0.c1) BETWEEN (json_extract(0.6173203529213817, v0.c0)) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (json_extract(0.6173203529213817, v0.c0)) AND (rt0.c2))) IS TRUE)  as count FROM rt0, v0, t1);
SELECT COUNT(*) FROM rt0 INDEXED BY i83 WHERE ((((rt0.c1 IN (rt0.c1, rt0.c2)))GLOB(((rt0.c0)IS(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c1, rt0.c2)))GLOB(((rt0.c0)IS(rt0.c0))))) IS TRUE)  as count FROM rt0 INDEXED BY i83);
SELECT COUNT(*) FROM rt0 INDEXED BY i83 WHERE ((((rt0.c1 IN (rt0.c1, rt0.c2)))GLOB(((rt0.c0)IS(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c1, rt0.c2)))GLOB(((rt0.c0)IS(rt0.c0))))) IS TRUE)  as count FROM rt0 INDEXED BY i83);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS INTEGER));
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((vt0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((vt0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((vt0.c0) ISNULL) IN ()));
SELECT COUNT(*) FROM t1, rt0 WHERE (((((((((rt0.c0)AND(t1.c0)))AND(rt0.c0)))OR(x'')))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(t1.c0)))AND(rt0.c0)))OR(x'')))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c0))))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (((((((((rt0.c0)AND(t1.c0)))AND(rt0.c0)))OR(x'')))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(t1.c0)))AND(rt0.c0)))OR(x'')))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c0))))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (((((((((rt0.c0)AND(t1.c0)))AND(rt0.c0)))OR(x'')))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c0)))));
SELECT * FROM t1 CROSS JOIN v0 ON (~ (((rt0.c2)<('2018109486')))) LEFT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN rt0 ON (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) IN ()) WHERE (((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(rt0.c2)) COLLATE RTRIM) ORDER BY (((- (rt0.c2))) ISNULL) DESC  NULLS FIRST, t1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t1 CROSS JOIN v0 ON (~ (((rt0.c2)<('2018109486')))) LEFT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN rt0 ON (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) IN ()) ORDER BY (((- (rt0.c2))) ISNULL) DESC  NULLS FIRST, t1.c0);
SELECT * FROM t1 CROSS JOIN v0 ON (~ (((rt0.c2)<('2018109486')))) LEFT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN rt0 ON (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) IN ()) WHERE (((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(rt0.c2)) COLLATE RTRIM) ORDER BY (((- (rt0.c2))) ISNULL) DESC  NULLS FIRST, t1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t1 CROSS JOIN v0 ON (~ (((rt0.c2)<('2018109486')))) LEFT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN rt0 ON (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) IN ()) ORDER BY (((- (rt0.c2))) ISNULL) DESC  NULLS FIRST, t1.c0);
SELECT * FROM t1 CROSS JOIN v0 ON (~ (((rt0.c2)<('2018109486')))) LEFT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN rt0 ON (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) IN ()) WHERE (((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(rt0.c2)) COLLATE RTRIM) ORDER BY (((- (rt0.c2))) ISNULL) DESC  NULLS FIRST, t1.c0;
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1))!=((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))<>((NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1))!=((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))<>((NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1))!=((NULL))));
SELECT COUNT(*) FROM v0, vt0, rt0, t1 WHERE ((((((v0.c0, rt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c2)) AND ((t1.c0, rt0.c2, vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, rt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c2)) AND ((t1.c0, rt0.c2, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM v0, vt0, rt0, t1);
SELECT COUNT(*) FROM v0, vt0, rt0, t1 WHERE ((((((v0.c0, rt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c2)) AND ((t1.c0, rt0.c2, vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, rt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c2)) AND ((t1.c0, rt0.c2, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM v0, vt0, rt0, t1);
SELECT COUNT(*) FROM v0, vt0, rt0, t1 WHERE ((((((v0.c0, rt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c2)) AND ((t1.c0, rt0.c2, vt0.c0)))) ISNULL));
SELECT * FROM t1 NATURAL JOIN rt0 WHERE (((((rt0.c2)=(rt0.c2)))>=(CAST(NULL AS REAL)))) ORDER BY ((((((rt0.c1) ISNULL))AND(((rt0.c1) NOT BETWEEN (0.43825470079943796) AND (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB)))  NULLS LAST, CASE CAST(x'' AS REAL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (0X38f1e79e)) THEN rt0.c1 ELSE '1032441401' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)=(rt0.c2)))>=(CAST(NULL AS REAL)))) IS TRUE)  as count FROM t1 NATURAL JOIN rt0 ORDER BY ((((((rt0.c1) ISNULL))AND(((rt0.c1) NOT BETWEEN (0.43825470079943796) AND (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB)))  NULLS LAST, CASE CAST(x'' AS REAL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (0X38f1e79e)) THEN rt0.c1 ELSE '1032441401' END  NULLS FIRST);
SELECT * FROM t1 NATURAL JOIN rt0 WHERE (((((rt0.c2)=(rt0.c2)))>=(CAST(NULL AS REAL)))) ORDER BY ((((((rt0.c1) ISNULL))AND(((rt0.c1) NOT BETWEEN (0.43825470079943796) AND (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB)))  NULLS LAST, CASE CAST(x'' AS REAL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (0X38f1e79e)) THEN rt0.c1 ELSE '1032441401' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)=(rt0.c2)))>=(CAST(NULL AS REAL)))) IS TRUE)  as count FROM t1 NATURAL JOIN rt0 ORDER BY ((((((rt0.c1) ISNULL))AND(((rt0.c1) NOT BETWEEN (0.43825470079943796) AND (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB)))  NULLS LAST, CASE CAST(x'' AS REAL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (0X38f1e79e)) THEN rt0.c1 ELSE '1032441401' END  NULLS FIRST);
SELECT * FROM t1 NATURAL JOIN rt0 WHERE (((((rt0.c2)=(rt0.c2)))>=(CAST(NULL AS REAL)))) ORDER BY ((((((rt0.c1) ISNULL))AND(((rt0.c1) NOT BETWEEN (0.43825470079943796) AND (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB)))  NULLS LAST, CASE CAST(x'' AS REAL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (0X38f1e79e)) THEN rt0.c1 ELSE '1032441401' END  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0, t1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, rt0, t1, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, t1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, rt0, t1, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, t1, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((NOT (v0.c0)))IS((~ (vt0.c0))))) ORDER BY ((((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE x'' END)))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, -2.26382809E8)) AND ((vt0.c0, '1687180742', v0.c0))))))AND((- (NULL)))))AND(((v0.c0) IS TRUE))))OR(((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))))AND(v0.c0)), ((vt0.c0)AND(vt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))IS((~ (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE x'' END)))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, -2.26382809E8)) AND ((vt0.c0, '1687180742', v0.c0))))))AND((- (NULL)))))AND(((v0.c0) IS TRUE))))OR(((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))))AND(v0.c0)), ((vt0.c0)AND(vt0.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((NOT (v0.c0)))IS((~ (vt0.c0))))) ORDER BY ((((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE x'' END)))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, -2.26382809E8)) AND ((vt0.c0, '1687180742', v0.c0))))))AND((- (NULL)))))AND(((v0.c0) IS TRUE))))OR(((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))))AND(v0.c0)), ((vt0.c0)AND(vt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))IS((~ (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE x'' END)))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, -2.26382809E8)) AND ((vt0.c0, '1687180742', v0.c0))))))AND((- (NULL)))))AND(((v0.c0) IS TRUE))))OR(((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))))AND(v0.c0)), ((vt0.c0)AND(vt0.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((NOT (v0.c0)))IS((~ (vt0.c0))))) ORDER BY ((((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE x'' END)))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, -2.26382809E8)) AND ((vt0.c0, '1687180742', v0.c0))))))AND((- (NULL)))))AND(((v0.c0) IS TRUE))))OR(((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))))AND(v0.c0)), ((vt0.c0)AND(vt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM v0, rt0, vt0, t1 NOT INDEXED WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) ORDER BY ((((CAST(t1.c0 AS NUMERIC))OR(((rt0.c0) IS TRUE))))OR(CASE rt0.c1  WHEN v0.c0 THEN t1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, rt0, vt0, t1 ORDER BY ((((CAST(t1.c0 AS NUMERIC))OR(((rt0.c0) IS TRUE))))OR(CASE rt0.c1  WHEN v0.c0 THEN t1.c0 END))  NULLS LAST);
SELECT * FROM v0, rt0, vt0, t1 NOT INDEXED WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) ORDER BY ((((CAST(t1.c0 AS NUMERIC))OR(((rt0.c0) IS TRUE))))OR(CASE rt0.c1  WHEN v0.c0 THEN t1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, rt0, vt0, t1 ORDER BY ((((CAST(t1.c0 AS NUMERIC))OR(((rt0.c0) IS TRUE))))OR(CASE rt0.c1  WHEN v0.c0 THEN t1.c0 END))  NULLS LAST);
SELECT * FROM v0, rt0, vt0, t1 NOT INDEXED WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) ORDER BY ((((CAST(t1.c0 AS NUMERIC))OR(((rt0.c0) IS TRUE))))OR(CASE rt0.c1  WHEN v0.c0 THEN t1.c0 END))  NULLS LAST;
SELECT ALL * FROM t1 INNER JOIN v0 ON ((((NULL)AND(((v0.c0)<<(v0.c0)))))AND(LOWER(v0.c0))) WHERE ((((t1.c0, t1.c0, v0.c0, t1.c0, t1.c0)) NOT BETWEEN (((('-236674144')+(t1.c0)), CAST(v0.c0 AS TEXT), CAST(v0.c0 AS NUMERIC), ((((t1.c0)OR(v0.c0)))AND(t1.c0)), v0.c0 COLLATE RTRIM)) AND (((((t1.c0)) BETWEEN ((t1.c0)) AND ((v0.c0))), ABS(DISTINCT v0.c0), ((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), json_remove(0.12449384324309365, t1.c0, v0.c0, v0.c0), NULL COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((t1.c0, t1.c0, v0.c0, t1.c0, t1.c0)) NOT BETWEEN (((('-236674144')+(t1.c0)), CAST(v0.c0 AS TEXT), CAST(v0.c0 AS NUMERIC), ((((t1.c0)OR(v0.c0)))AND(t1.c0)), v0.c0 COLLATE RTRIM)) AND (((((t1.c0)) BETWEEN ((t1.c0)) AND ((v0.c0))), ABS(DISTINCT v0.c0), ((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), json_remove(0.12449384324309365, t1.c0, v0.c0, v0.c0), NULL COLLATE RTRIM)))) IS TRUE)  as count FROM t1 INNER JOIN v0 ON ((((NULL)AND(((v0.c0)<<(v0.c0)))))AND(LOWER(v0.c0))));
SELECT ALL * FROM t1 INNER JOIN v0 ON ((((NULL)AND(((v0.c0)<<(v0.c0)))))AND(LOWER(v0.c0))) WHERE ((((t1.c0, t1.c0, v0.c0, t1.c0, t1.c0)) NOT BETWEEN (((('-236674144')+(t1.c0)), CAST(v0.c0 AS TEXT), CAST(v0.c0 AS NUMERIC), ((((t1.c0)OR(v0.c0)))AND(t1.c0)), v0.c0 COLLATE RTRIM)) AND (((((t1.c0)) BETWEEN ((t1.c0)) AND ((v0.c0))), ABS(DISTINCT v0.c0), ((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), json_remove(0.12449384324309365, t1.c0, v0.c0, v0.c0), NULL COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((t1.c0, t1.c0, v0.c0, t1.c0, t1.c0)) NOT BETWEEN (((('-236674144')+(t1.c0)), CAST(v0.c0 AS TEXT), CAST(v0.c0 AS NUMERIC), ((((t1.c0)OR(v0.c0)))AND(t1.c0)), v0.c0 COLLATE RTRIM)) AND (((((t1.c0)) BETWEEN ((t1.c0)) AND ((v0.c0))), ABS(DISTINCT v0.c0), ((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), json_remove(0.12449384324309365, t1.c0, v0.c0, v0.c0), NULL COLLATE RTRIM)))) IS TRUE)  as count FROM t1 INNER JOIN v0 ON ((((NULL)AND(((v0.c0)<<(v0.c0)))))AND(LOWER(v0.c0))));
SELECT ALL * FROM t1 INNER JOIN v0 ON ((((NULL)AND(((v0.c0)<<(v0.c0)))))AND(LOWER(v0.c0))) WHERE ((((t1.c0, t1.c0, v0.c0, t1.c0, t1.c0)) NOT BETWEEN (((('-236674144')+(t1.c0)), CAST(v0.c0 AS TEXT), CAST(v0.c0 AS NUMERIC), ((((t1.c0)OR(v0.c0)))AND(t1.c0)), v0.c0 COLLATE RTRIM)) AND (((((t1.c0)) BETWEEN ((t1.c0)) AND ((v0.c0))), ABS(DISTINCT v0.c0), ((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), json_remove(0.12449384324309365, t1.c0, v0.c0, v0.c0), NULL COLLATE RTRIM))));
SELECT ALL * FROM rt0, vt0 CROSS JOIN t1 ON t1.c0 WHERE (('-1237782853' IN ()));
SELECT SUM(count) FROM (SELECT ((('-1237782853' IN ())) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t1 ON t1.c0);
SELECT ALL * FROM rt0, vt0 CROSS JOIN t1 ON t1.c0 WHERE (('-1237782853' IN ()));
SELECT SUM(count) FROM (SELECT ((('-1237782853' IN ())) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t1 ON t1.c0);
SELECT ALL * FROM rt0, vt0 CROSS JOIN t1 ON t1.c0 WHERE (('-1237782853' IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON x'8782' WHERE (CASE WHEN ((0.428458947706311)+(vt0.c0)) THEN HEX(DISTINCT 1501674715) ELSE ((vt0.c0) IS FALSE) END) ORDER BY (((((((((((((- (rt0.c1)))OR((NOT (rt0.c2)))))OR((~ (rt0.c2)))))AND(0xffffffffce891952)))OR((((rt0.c2))<((rt0.c1))))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS LAST, ((((rt0.c2)>=(rt0.c1))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.428458947706311)+(vt0.c0)) THEN HEX(DISTINCT 1501674715) ELSE ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON x'8782' ORDER BY (((((((((((((- (rt0.c1)))OR((NOT (rt0.c2)))))OR((~ (rt0.c2)))))AND(0Xffffffffce891952)))OR((((rt0.c2))<((rt0.c1))))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS LAST, ((((rt0.c2)>=(rt0.c1))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON x'8782' WHERE (CASE WHEN ((0.428458947706311)+(vt0.c0)) THEN HEX(DISTINCT 1501674715) ELSE ((vt0.c0) IS FALSE) END) ORDER BY (((((((((((((- (rt0.c1)))OR((NOT (rt0.c2)))))OR((~ (rt0.c2)))))AND(0xffffffffce891952)))OR((((rt0.c2))<((rt0.c1))))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS LAST, ((((rt0.c2)>=(rt0.c1))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.428458947706311)+(vt0.c0)) THEN HEX(DISTINCT 1501674715) ELSE ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON x'8782' ORDER BY (((((((((((((- (rt0.c1)))OR((NOT (rt0.c2)))))OR((~ (rt0.c2)))))AND(0Xffffffffce891952)))OR((((rt0.c2))<((rt0.c1))))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS LAST, ((((rt0.c2)>=(rt0.c1))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON x'8782' WHERE (CASE WHEN ((0.428458947706311)+(vt0.c0)) THEN HEX(DISTINCT 1501674715) ELSE ((vt0.c0) IS FALSE) END) ORDER BY (((((((((((((- (rt0.c1)))OR((NOT (rt0.c2)))))OR((~ (rt0.c2)))))AND(0xffffffffce891952)))OR((((rt0.c2))<((rt0.c1))))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS LAST, ((((rt0.c2)>=(rt0.c1))) ISNULL) DESC;
SELECT COUNT(*) FROM t1, vt0 NOT INDEXED, v0 RIGHT OUTER JOIN rt0 ON TYPEOF(DISTINCT rt0.c1) COLLATE BINARY WHERE (CASE t1.c0  WHEN CAST(rt0.c0 AS INTEGER) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE t1.c0  WHEN CAST(rt0.c0 AS INTEGER) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM t1, vt0, v0 RIGHT OUTER JOIN rt0 ON TYPEOF(DISTINCT rt0.c1) COLLATE BINARY);
SELECT COUNT(*) FROM t1, vt0 NOT INDEXED, v0 RIGHT OUTER JOIN rt0 ON TYPEOF(DISTINCT rt0.c1) COLLATE BINARY WHERE (CASE t1.c0  WHEN CAST(rt0.c0 AS INTEGER) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE t1.c0  WHEN CAST(rt0.c0 AS INTEGER) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM t1, vt0, v0 RIGHT OUTER JOIN rt0 ON TYPEOF(DISTINCT rt0.c1) COLLATE BINARY);
SELECT COUNT(*) FROM t1, vt0 NOT INDEXED, v0 RIGHT OUTER JOIN rt0 ON TYPEOF(DISTINCT rt0.c1) COLLATE BINARY WHERE (CASE t1.c0  WHEN CAST(rt0.c0 AS INTEGER) THEN (rt0.c2 IN ()) END);
SELECT ALL * FROM rt0, vt0, t1 WHERE ((((+ (0.15448235522191878)))%(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (0.15448235522191878)))%(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL * FROM rt0, vt0, t1 WHERE ((((+ (0.15448235522191878)))%(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (0.15448235522191878)))%(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL * FROM rt0, vt0, t1 WHERE ((((+ (0.15448235522191878)))%(((rt0.c1) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c1)!=(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c1)!=(rt0.c0)))))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c1)!=(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c1)!=(rt0.c0)))))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c1)!=(rt0.c0))))));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT * FROM vt0, v0, rt0, t1 WHERE (((LIKELIHOOD(DISTINCT rt0.c1, 0.3049307493537774)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT rt0.c1, 0.3049307493537774)) IS FALSE)) IS TRUE)  as count FROM vt0, v0, rt0, t1);
SELECT * FROM vt0, v0, rt0, t1 WHERE (((LIKELIHOOD(DISTINCT rt0.c1, 0.3049307493537774)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT rt0.c1, 0.3049307493537774)) IS FALSE)) IS TRUE)  as count FROM vt0, v0, rt0, t1);
SELECT * FROM vt0, v0, rt0, t1 WHERE (((LIKELIHOOD(DISTINCT rt0.c1, 0.3049307493537774)) IS FALSE));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON 0.310905435130696 CROSS JOIN t1 ON ((((v0.c0)<=(vt0.c0)))>=(ABS(NULL))) CROSS JOIN vt0 ON ((t1.c0) NOTNULL) COLLATE RTRIM WHERE (((((rt0.c0)&(rt0.c2)))+(NULL))) ORDER BY LIKELIHOOD(DISTINCT ((t1.c0)AND(v0.c0)), 0.249007287437238);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)&(rt0.c2)))+(NULL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON 0.310905435130696 CROSS JOIN t1 ON ((((v0.c0)<=(vt0.c0)))>=(ABS(NULL))) CROSS JOIN vt0 ON ((t1.c0) NOTNULL) COLLATE RTRIM ORDER BY LIKELIHOOD(DISTINCT ((t1.c0)AND(v0.c0)), 0.249007287437238));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON 0.310905435130696 CROSS JOIN t1 ON ((((v0.c0)<=(vt0.c0)))>=(ABS(NULL))) CROSS JOIN vt0 ON ((t1.c0) NOTNULL) COLLATE RTRIM WHERE (((((rt0.c0)&(rt0.c2)))+(NULL))) ORDER BY LIKELIHOOD(DISTINCT ((t1.c0)AND(v0.c0)), 0.249007287437238);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)&(rt0.c2)))+(NULL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON 0.310905435130696 CROSS JOIN t1 ON ((((v0.c0)<=(vt0.c0)))>=(ABS(NULL))) CROSS JOIN vt0 ON ((t1.c0) NOTNULL) COLLATE RTRIM ORDER BY LIKELIHOOD(DISTINCT ((t1.c0)AND(v0.c0)), 0.249007287437238));
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (((v0.c0) IS FALSE)))) ORDER BY LIKELIHOOD(((x'c86b') IS FALSE), 0.6862333659270448)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY LIKELIHOOD(((x'c86b') IS FALSE), 0.6862333659270448)  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (((v0.c0) IS FALSE)))) ORDER BY LIKELIHOOD(((x'c86b') IS FALSE), 0.6862333659270448)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY LIKELIHOOD(((x'c86b') IS FALSE), 0.6862333659270448)  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (((v0.c0) IS FALSE)))) ORDER BY LIKELIHOOD(((x'c86b') IS FALSE), 0.6862333659270448)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ('-1489838009');
SELECT SUM(count) FROM (SELECT ALL (('-1489838009') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('-1489838009');
SELECT SUM(count) FROM (SELECT ALL (('-1489838009') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('-1489838009');
SELECT * FROM rt0 WHERE ((- (CAST(rt0.c1 AS TEXT)))) ORDER BY CASE LIKELIHOOD(rt0.c1, 0.5912340947972407)  WHEN rt0.c0 COLLATE BINARY THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE 0.12392640877756078 END ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY CASE LIKELIHOOD(rt0.c1, 0.5912340947972407)  WHEN rt0.c0 COLLATE BINARY THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE 0.12392640877756078 END ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END  NULLS LAST);
SELECT * FROM rt0 WHERE ((- (CAST(rt0.c1 AS TEXT)))) ORDER BY CASE LIKELIHOOD(rt0.c1, 0.5912340947972407)  WHEN rt0.c0 COLLATE BINARY THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE 0.12392640877756078 END ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY CASE LIKELIHOOD(rt0.c1, 0.5912340947972407)  WHEN rt0.c0 COLLATE BINARY THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE 0.12392640877756078 END ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END  NULLS LAST);
SELECT * FROM rt0 WHERE ((- (CAST(rt0.c1 AS TEXT)))) ORDER BY CASE LIKELIHOOD(rt0.c1, 0.5912340947972407)  WHEN rt0.c0 COLLATE BINARY THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE 0.12392640877756078 END ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, v0 WHERE (CAST(PRINTF(t1.c0) AS TEXT)) ORDER BY (~ ((~ (t1.c0)))) ASC  NULLS LAST, (- (((v0.c0)LIKE(t1.c0)))) ASC, 0.7309747880754071;
SELECT SUM(count) FROM (SELECT ((CAST(PRINTF(t1.c0) AS TEXT)) IS TRUE)  as count FROM t1, v0 ORDER BY (~ ((~ (t1.c0)))) ASC  NULLS LAST, (- (((v0.c0)LIKE(t1.c0)))) ASC, 0.7309747880754071);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (CAST(PRINTF(t1.c0) AS TEXT)) ORDER BY (~ ((~ (t1.c0)))) ASC  NULLS LAST, (- (((v0.c0)LIKE(t1.c0)))) ASC, 0.7309747880754071;
SELECT SUM(count) FROM (SELECT ((CAST(PRINTF(t1.c0) AS TEXT)) IS TRUE)  as count FROM t1, v0 ORDER BY (~ ((~ (t1.c0)))) ASC  NULLS LAST, (- (((v0.c0)LIKE(t1.c0)))) ASC, 0.7309747880754071);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (CAST(PRINTF(t1.c0) AS TEXT)) ORDER BY (~ ((~ (t1.c0)))) ASC  NULLS LAST, (- (((v0.c0)LIKE(t1.c0)))) ASC, 0.7309747880754071;
SELECT ALL COUNT(*) FROM v0, t1, rt0, vt0 WHERE (((((v0.c0)<=(rt0.c2))) BETWEEN (((t1.c0)<=(vt0.c0))) AND ((~ (vt0.c0))))) ORDER BY 0X4f60fc01 DESC, (~ ((+ (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<=(rt0.c2))) BETWEEN (((t1.c0)<=(vt0.c0))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM v0, t1, rt0, vt0 ORDER BY 0X4f60fc01 DESC, (~ ((+ (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t1, rt0, vt0 WHERE (((((v0.c0)<=(rt0.c2))) BETWEEN (((t1.c0)<=(vt0.c0))) AND ((~ (vt0.c0))))) ORDER BY 0X4f60fc01 DESC, (~ ((+ (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<=(rt0.c2))) BETWEEN (((t1.c0)<=(vt0.c0))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM v0, t1, rt0, vt0 ORDER BY 0X4f60fc01 DESC, (~ ((+ (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE (CAST((((v0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((v0.c0, v0.c0, v0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((v0.c0, v0.c0, v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE (CAST((((v0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((v0.c0, v0.c0, v0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((v0.c0, v0.c0, v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE (CAST((((v0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((v0.c0, v0.c0, v0.c0))) AS NUMERIC));
SELECT * FROM rt0, t1 WHERE (((((((rt0.c0) ISNULL))AND((('0.8319167465664902') IS TRUE))))OR((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) ISNULL))AND((('0.8319167465664902') IS TRUE))))OR((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((((((rt0.c0) ISNULL))AND((('0.8319167465664902') IS TRUE))))OR((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) ISNULL))AND((('0.8319167465664902') IS TRUE))))OR((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((((((rt0.c0) ISNULL))AND((('0.8319167465664902') IS TRUE))))OR((NOT (rt0.c2)))));
SELECT ALL * FROM v0, t1, rt0 WHERE (t1.c0) ORDER BY ((v0.c0)-('8<')), rt0.c0 ASC  NULLS FIRST, (((((t1.c0, v0.c0, ''))<((rt0.c1, v0.c0, t1.c0))))*((v0.c0 IN (rt0.c2, rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM v0, t1, rt0 ORDER BY ((v0.c0)-('8<')), rt0.c0 ASC  NULLS FIRST, (((((t1.c0, v0.c0, ''))<((rt0.c1, v0.c0, t1.c0))))*((v0.c0 IN (rt0.c2, rt0.c2))))  NULLS LAST);
SELECT ALL * FROM v0, t1, rt0 WHERE (t1.c0) ORDER BY ((v0.c0)-('8<')), rt0.c0 ASC  NULLS FIRST, (((((t1.c0, v0.c0, ''))<((rt0.c1, v0.c0, t1.c0))))*((v0.c0 IN (rt0.c2, rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM v0, t1, rt0 ORDER BY ((v0.c0)-('8<')), rt0.c0 ASC  NULLS FIRST, (((((t1.c0, v0.c0, ''))<((rt0.c1, v0.c0, t1.c0))))*((v0.c0 IN (rt0.c2, rt0.c2))))  NULLS LAST);
SELECT ALL * FROM v0, t1, rt0 WHERE (t1.c0) ORDER BY ((v0.c0)-('8<')), rt0.c0 ASC  NULLS FIRST, (((((t1.c0, v0.c0, ''))<((rt0.c1, v0.c0, t1.c0))))*((v0.c0 IN (rt0.c2, rt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 INNER JOIN v0 ON (((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(rt0.c1)))AND(rt0.c2))))<>((((rt0.c0)<<(t1.c0))))) FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (((rt0.c1)||(t1.c0))) AND ((+ (rt0.c0)))) WHERE ((((rt0.c0 IN (t1.c0))) BETWEEN (((vt0.c0)!=(rt0.c2))) AND (rt0.c2 COLLATE BINARY))) ORDER BY MAX((NOT (v0.c0)), rt0.c2 COLLATE RTRIM, ((rt0.c0)>(',n')), ' (+Q07(V ');
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (t1.c0))) BETWEEN (((vt0.c0)!=(rt0.c2))) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt0 INNER JOIN v0 ON (((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(rt0.c1)))AND(rt0.c2))))<>((((rt0.c0)<<(t1.c0))))) FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (((rt0.c1)||(t1.c0))) AND ((+ (rt0.c0)))) ORDER BY MAX((NOT (v0.c0)), rt0.c2 COLLATE RTRIM, ((rt0.c0)>(',n')), ' (+Q07(V '));
SELECT COUNT(*) FROM t1, vt0 INNER JOIN v0 ON (((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(rt0.c1)))AND(rt0.c2))))<>((((rt0.c0)<<(t1.c0))))) FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (((rt0.c1)||(t1.c0))) AND ((+ (rt0.c0)))) WHERE ((((rt0.c0 IN (t1.c0))) BETWEEN (((vt0.c0)!=(rt0.c2))) AND (rt0.c2 COLLATE BINARY))) ORDER BY MAX((NOT (v0.c0)), rt0.c2 COLLATE RTRIM, ((rt0.c0)>(',n')), ' (+Q07(V ');
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (t1.c0))) BETWEEN (((vt0.c0)!=(rt0.c2))) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt0 INNER JOIN v0 ON (((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(rt0.c1)))AND(rt0.c2))))<>((((rt0.c0)<<(t1.c0))))) FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (((rt0.c1)||(t1.c0))) AND ((+ (rt0.c0)))) ORDER BY MAX((NOT (v0.c0)), rt0.c2 COLLATE RTRIM, ((rt0.c0)>(',n')), ' (+Q07(V '));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY 0.23393221136117026 ASC  NULLS FIRST, CASE WHEN t1.c0 THEN (NOT (t1.c0)) WHEN ((t1.c0) IS TRUE) THEN (t1.c0 IN (t1.c0)) WHEN ((t1.c0) IS TRUE) THEN ((((1562196839)AND(t1.c0)))OR(t1.c0)) ELSE (- (t1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY 0.23393221136117026 ASC  NULLS FIRST, CASE WHEN t1.c0 THEN (NOT (t1.c0)) WHEN ((t1.c0) IS TRUE) THEN (t1.c0 IN (t1.c0)) WHEN ((t1.c0) IS TRUE) THEN ((((1562196839)AND(t1.c0)))OR(t1.c0)) ELSE (- (t1.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY 0.23393221136117026 ASC  NULLS FIRST, CASE WHEN t1.c0 THEN (NOT (t1.c0)) WHEN ((t1.c0) IS TRUE) THEN (t1.c0 IN (t1.c0)) WHEN ((t1.c0) IS TRUE) THEN ((((1562196839)AND(t1.c0)))OR(t1.c0)) ELSE (- (t1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY 0.23393221136117026 ASC  NULLS FIRST, CASE WHEN t1.c0 THEN (NOT (t1.c0)) WHEN ((t1.c0) IS TRUE) THEN (t1.c0 IN (t1.c0)) WHEN ((t1.c0) IS TRUE) THEN ((((1562196839)AND(t1.c0)))OR(t1.c0)) ELSE (- (t1.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY 0.23393221136117026 ASC  NULLS FIRST, CASE WHEN t1.c0 THEN (NOT (t1.c0)) WHEN ((t1.c0) IS TRUE) THEN (t1.c0 IN (t1.c0)) WHEN ((t1.c0) IS TRUE) THEN ((((1562196839)AND(t1.c0)))OR(t1.c0)) ELSE (- (t1.c0)) END ASC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN v0.c0 WHEN CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END THEN ((rt0.c2) NOTNULL) WHEN ((NULL)<>(v0.c0)) THEN ((v0.c0)>=(v0.c0)) WHEN ((v0.c0)>=(rt0.c2)) THEN NULL WHEN (((v0.c0))>=((rt0.c0))) THEN CAST(v0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c0 IN ()) THEN v0.c0 WHEN CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END THEN ((rt0.c2) NOTNULL) WHEN ((NULL)!=(v0.c0)) THEN ((v0.c0)>=(v0.c0)) WHEN ((v0.c0)>=(rt0.c2)) THEN NULL WHEN (((v0.c0))>=((rt0.c0))) THEN CAST(v0.c0 AS REAL) END) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN v0.c0 WHEN CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END THEN ((rt0.c2) NOTNULL) WHEN ((NULL)<>(v0.c0)) THEN ((v0.c0)>=(v0.c0)) WHEN ((v0.c0)>=(rt0.c2)) THEN NULL WHEN (((v0.c0))>=((rt0.c0))) THEN CAST(v0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c0 IN ()) THEN v0.c0 WHEN CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END THEN ((rt0.c2) NOTNULL) WHEN ((NULL)!=(v0.c0)) THEN ((v0.c0)>=(v0.c0)) WHEN ((v0.c0)>=(rt0.c2)) THEN NULL WHEN (((v0.c0))>=((rt0.c0))) THEN CAST(v0.c0 AS REAL) END) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN v0.c0 WHEN CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END THEN ((rt0.c2) NOTNULL) WHEN ((NULL)<>(v0.c0)) THEN ((v0.c0)>=(v0.c0)) WHEN ((v0.c0)>=(rt0.c2)) THEN NULL WHEN (((v0.c0))>=((rt0.c0))) THEN CAST(v0.c0 AS REAL) END);
SELECT ALL COUNT(*) FROM t1, vt0 INDEXED BY i83, v0 WHERE (CAST(((('1125252342'))!=((vt0.c0))) AS BLOB)) ORDER BY ((((v0.c0) NOTNULL)) BETWEEN (((x'') NOT NULL)) AND (((((((((t1.c0)OR(vt0.c0)))AND(v0.c0)))OR(t1.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((('1125252342'))!=((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM t1, vt0 INDEXED BY i83, v0 ORDER BY ((((v0.c0) NOTNULL)) BETWEEN (((x'') NOT NULL)) AND (((((((((t1.c0)OR(vt0.c0)))AND(v0.c0)))OR(t1.c0)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM t1, vt0 INDEXED BY i83, v0 WHERE (CAST(((('1125252342'))!=((vt0.c0))) AS BLOB)) ORDER BY ((((v0.c0) NOTNULL)) BETWEEN (((x'') NOT NULL)) AND (((((((((t1.c0)OR(vt0.c0)))AND(v0.c0)))OR(t1.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((('1125252342'))!=((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM t1, vt0 INDEXED BY i83, v0 ORDER BY ((((v0.c0) NOTNULL)) BETWEEN (((x'') NOT NULL)) AND (((((((((t1.c0)OR(vt0.c0)))AND(v0.c0)))OR(t1.c0)))AND(v0.c0)))));
SELECT COUNT(*) FROM rt0, vt0, v0 FULL OUTER JOIN t1 ON rt0.c2 WHERE (((((((((IFNULL(rt0.c2, v0.c0))AND((NOT (x'2838')))))AND(NULL)))OR((((v0.c0))<((v0.c0))))))AND((1232579761 IN (t1.c0))))) ORDER BY CAST(vt0.c0 AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((IFNULL(rt0.c2, v0.c0))AND((NOT (x'2838')))))AND(NULL)))OR((((v0.c0))<((v0.c0))))))AND((1232579761 IN (t1.c0))))) IS TRUE)  as count FROM rt0, vt0, v0 FULL OUTER JOIN t1 ON rt0.c2 ORDER BY CAST(vt0.c0 AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 FULL OUTER JOIN t1 ON rt0.c2 WHERE (((((((((IFNULL(rt0.c2, v0.c0))AND((NOT (x'2838')))))AND(NULL)))OR((((v0.c0))<((v0.c0))))))AND((1232579761 IN (t1.c0))))) ORDER BY CAST(vt0.c0 AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((IFNULL(rt0.c2, v0.c0))AND((NOT (x'2838')))))AND(NULL)))OR((((v0.c0))<((v0.c0))))))AND((1232579761 IN (t1.c0))))) IS TRUE)  as count FROM rt0, vt0, v0 FULL OUTER JOIN t1 ON rt0.c2 ORDER BY CAST(vt0.c0 AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 FULL OUTER JOIN t1 ON rt0.c2 WHERE (((((((((IFNULL(rt0.c2, v0.c0))AND((NOT (x'2838')))))AND(NULL)))OR((((v0.c0))<((v0.c0))))))AND((1232579761 IN (t1.c0))))) ORDER BY CAST(vt0.c0 AS INTEGER) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 END)-(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 END)-(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 END)-(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 END)-(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 END)-(((vt0.c0) NOT NULL))));
SELECT * FROM t1, v0, rt0 FULL OUTER JOIN vt0 ON ((UPPER(DISTINCT rt0.c1)) NOT BETWEEN (t1.c0) AND (v0.c0)) WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS INTEGER) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM t1, v0, rt0 FULL OUTER JOIN vt0 ON ((UPPER(DISTINCT rt0.c1)) NOT BETWEEN (t1.c0) AND (v0.c0)));
SELECT * FROM t1, v0, rt0 FULL OUTER JOIN vt0 ON ((UPPER(DISTINCT rt0.c1)) NOT BETWEEN (t1.c0) AND (v0.c0)) WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS INTEGER) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM t1, v0, rt0 FULL OUTER JOIN vt0 ON ((UPPER(DISTINCT rt0.c1)) NOT BETWEEN (t1.c0) AND (v0.c0)));
SELECT * FROM t1, v0, rt0 FULL OUTER JOIN vt0 ON ((UPPER(DISTINCT rt0.c1)) NOT BETWEEN (t1.c0) AND (v0.c0)) WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN rt0.c2 COLLATE RTRIM END);
SELECT ALL * FROM v0, t1, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t1, vt0);
SELECT ALL * FROM v0, t1, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t1, vt0);
SELECT ALL * FROM v0, t1, vt0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((- (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((- (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((- (rt0.c0)) IN ()));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t1 ON 0.4636160361289715 FULL OUTER JOIN rt0 ON (((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((NULL))) CROSS JOIN vt0 ON CASE (NOT (rt0.c1))  WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c2)&(t1.c0)) END WHERE (CAST((vt0.c0 IN ()) AS REAL)) ORDER BY ((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))AND(((rt0.c1)IS(vt0.c0)))))AND(((rt0.c1) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON 0.4636160361289715 FULL OUTER JOIN rt0 ON (((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((NULL))) CROSS JOIN vt0 ON CASE (NOT (rt0.c1))  WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c2)&(t1.c0)) END ORDER BY ((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))AND(((rt0.c1)IS(vt0.c0)))))AND(((rt0.c1) IS TRUE)))  NULLS LAST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t1 ON 0.4636160361289715 FULL OUTER JOIN rt0 ON (((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((NULL))) CROSS JOIN vt0 ON CASE (NOT (rt0.c1))  WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c2)&(t1.c0)) END WHERE (CAST((vt0.c0 IN ()) AS REAL)) ORDER BY ((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))AND(((rt0.c1)IS(vt0.c0)))))AND(((rt0.c1) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON 0.4636160361289715 FULL OUTER JOIN rt0 ON (((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((NULL))) CROSS JOIN vt0 ON CASE (NOT (rt0.c1))  WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c2)&(t1.c0)) END ORDER BY ((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))AND(((rt0.c1)IS(vt0.c0)))))AND(((rt0.c1) IS TRUE)))  NULLS LAST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t1 ON 0.4636160361289715 FULL OUTER JOIN rt0 ON (((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((NULL))) CROSS JOIN vt0 ON CASE (NOT (rt0.c1))  WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c2)&(t1.c0)) END WHERE (CAST((vt0.c0 IN ()) AS REAL)) ORDER BY ((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))AND(((rt0.c1)IS(vt0.c0)))))AND(((rt0.c1) IS TRUE)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c0)LIKE(vt0.c0)))))AND(CAST(vt0.c0 AS REAL)))) ORDER BY ((((vt0.c0)/(vt0.c0))) NOT BETWEEN ((~ (NULL))) AND (CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(((vt0.c0)LIKE(vt0.c0)))))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)/(vt0.c0))) NOT BETWEEN ((~ (NULL))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c0)LIKE(vt0.c0)))))AND(CAST(vt0.c0 AS REAL)))) ORDER BY ((((vt0.c0)/(vt0.c0))) NOT BETWEEN ((~ (NULL))) AND (CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(((vt0.c0)LIKE(vt0.c0)))))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)/(vt0.c0))) NOT BETWEEN ((~ (NULL))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c0)LIKE(vt0.c0)))))AND(CAST(vt0.c0 AS REAL)))) ORDER BY ((((vt0.c0)/(vt0.c0))) NOT BETWEEN ((~ (NULL))) AND (CAST(vt0.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM t1 WHERE (TYPEOF(DISTINCT CASE WHEN t1.c0 THEN t1.c0 END)) ORDER BY (((- (t1.c0))) IS FALSE) ASC, CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN ((((x'ac2c')OR(t1.c0)))OR(t1.c0)) WHEN TRIM(DISTINCT t1.c0, t1.c0) THEN (t1.c0 IN ()) WHEN ((t1.c0)LIKE(t1.c0)) THEN UNLIKELY('顴M_v/') ELSE -8.9054897E7 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT CASE WHEN t1.c0 THEN t1.c0 END)) IS TRUE)  as count FROM t1 ORDER BY (((- (t1.c0))) IS FALSE) ASC, CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN ((((x'ac2c')OR(t1.c0)))OR(t1.c0)) WHEN TRIM(DISTINCT t1.c0, t1.c0) THEN (t1.c0 IN ()) WHEN ((t1.c0)LIKE(t1.c0)) THEN UNLIKELY('顴M_v/') ELSE -8.9054897E7 END  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (TYPEOF(DISTINCT CASE WHEN t1.c0 THEN t1.c0 END)) ORDER BY (((- (t1.c0))) IS FALSE) ASC, CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN ((((x'ac2c')OR(t1.c0)))OR(t1.c0)) WHEN TRIM(DISTINCT t1.c0, t1.c0) THEN (t1.c0 IN ()) WHEN ((t1.c0)LIKE(t1.c0)) THEN UNLIKELY('顴M_v/') ELSE -8.9054897E7 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT CASE WHEN t1.c0 THEN t1.c0 END)) IS TRUE)  as count FROM t1 ORDER BY (((- (t1.c0))) IS FALSE) ASC, CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN ((((x'ac2c')OR(t1.c0)))OR(t1.c0)) WHEN TRIM(DISTINCT t1.c0, t1.c0) THEN (t1.c0 IN ()) WHEN ((t1.c0)LIKE(t1.c0)) THEN UNLIKELY('顴M_v/') ELSE -8.9054897E7 END  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (TYPEOF(DISTINCT CASE WHEN t1.c0 THEN t1.c0 END)) ORDER BY (((- (t1.c0))) IS FALSE) ASC, CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN ((((x'ac2c')OR(t1.c0)))OR(t1.c0)) WHEN TRIM(DISTINCT t1.c0, t1.c0) THEN (t1.c0 IN ()) WHEN ((t1.c0)LIKE(t1.c0)) THEN UNLIKELY('顴M_v/') ELSE -8.9054897E7 END  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM, CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, ((t1.c0)IS NOT(t1.c0)), ((t1.c0) IS TRUE), t1.c0)) AND ((t1.c0, (((t1.c0))>=((t1.c0))), (t1.c0 IN ()), CAST(t1.c0 AS NUMERIC), ((((t1.c0)AND(t1.c0)))OR('Bg')))))) ORDER BY json_extract(((x'1886d39b') BETWEEN (t1.c0) AND (t1.c0)), ((t1.c0) IS FALSE), '', ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM, CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, ((t1.c0)IS NOT(t1.c0)), ((t1.c0) IS TRUE), t1.c0)) AND ((t1.c0, (((t1.c0))>=((t1.c0))), (t1.c0 IN ()), CAST(t1.c0 AS NUMERIC), ((((t1.c0)AND(t1.c0)))OR('Bg')))))) IS TRUE)  as count FROM t1 ORDER BY json_extract(((x'1886d39b') BETWEEN (t1.c0) AND (t1.c0)), ((t1.c0) IS FALSE), '', ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM, CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, ((t1.c0)IS NOT(t1.c0)), ((t1.c0) IS TRUE), t1.c0)) AND ((t1.c0, (((t1.c0))>=((t1.c0))), (t1.c0 IN ()), CAST(t1.c0 AS NUMERIC), ((((t1.c0)AND(t1.c0)))OR('Bg')))))) ORDER BY json_extract(((x'1886d39b') BETWEEN (t1.c0) AND (t1.c0)), ((t1.c0) IS FALSE), '', ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0 COLLATE RTRIM, CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, ((t1.c0)IS NOT(t1.c0)), ((t1.c0) IS TRUE), t1.c0)) AND ((t1.c0, (((t1.c0))>=((t1.c0))), (t1.c0 IN ()), CAST(t1.c0 AS NUMERIC), ((((t1.c0)AND(t1.c0)))OR('Bg')))))) IS TRUE)  as count FROM t1 ORDER BY json_extract(((x'1886d39b') BETWEEN (t1.c0) AND (t1.c0)), ((t1.c0) IS FALSE), '', ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ((v0.c0 IN (v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ((v0.c0 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ((v0.c0 IN (v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ((v0.c0 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ((v0.c0 IN (v0.c0, v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0, t1, rt0 WHERE ((((((x'2380')IS(t1.c0)), ((rt0.c1)%(NULL)), (+ (v0.c0))))==(((v0.c0 IN (vt0.c0)), rt0.c2, '19797369' COLLATE BINARY)))) ORDER BY (rt0.c2 IN ()) COLLATE BINARY, (CAST(rt0.c1 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT (((((((x'2380')IS(t1.c0)), ((rt0.c1)%(NULL)), (+ (v0.c0))))=(((v0.c0 IN (vt0.c0)), rt0.c2, '19797369' COLLATE BINARY)))) IS TRUE)  as count FROM vt0, v0, t1, rt0 ORDER BY (rt0.c2 IN ()) COLLATE BINARY, (CAST(rt0.c1 AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0, t1, rt0 WHERE ((((((x'2380')IS(t1.c0)), ((rt0.c1)%(NULL)), (+ (v0.c0))))==(((v0.c0 IN (vt0.c0)), rt0.c2, '19797369' COLLATE BINARY)))) ORDER BY (rt0.c2 IN ()) COLLATE BINARY, (CAST(rt0.c1 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT (((((((x'2380')IS(t1.c0)), ((rt0.c1)%(NULL)), (+ (v0.c0))))=(((v0.c0 IN (vt0.c0)), rt0.c2, '19797369' COLLATE BINARY)))) IS TRUE)  as count FROM vt0, v0, t1, rt0 ORDER BY (rt0.c2 IN ()) COLLATE BINARY, (CAST(rt0.c1 AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0, t1, rt0 WHERE ((((((x'2380')IS(t1.c0)), ((rt0.c1)%(NULL)), (+ (v0.c0))))==(((v0.c0 IN (vt0.c0)), rt0.c2, '19797369' COLLATE BINARY)))) ORDER BY (rt0.c2 IN ()) COLLATE BINARY, (CAST(rt0.c1 AS BLOB) IN ());
SELECT ALL * FROM vt0, t1, rt0 CROSS JOIN v0 ON ((((vt0.c0) IS FALSE))<<(t1.c0)) WHERE (CASE WHEN CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN t1.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN NULL THEN t1.c0 END THEN 0.17938648343340635 WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END THEN CASE t1.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END WHEN CASE WHEN vt0.c0 THEN rt0.c1 END THEN ((t1.c0)+(rt0.c0)) END) ORDER BY json_array_length(((rt0.c0) NOTNULL), (rt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN t1.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN NULL THEN t1.c0 END THEN 0.17938648343340635 WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END THEN CASE t1.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END WHEN CASE WHEN vt0.c0 THEN rt0.c1 END THEN ((t1.c0)+(rt0.c0)) END) IS TRUE)  as count FROM vt0, t1, rt0 CROSS JOIN v0 ON ((((vt0.c0) IS FALSE))<<(t1.c0)) ORDER BY json_array_length(((rt0.c0) NOTNULL), (rt0.c2 IN ())));
SELECT ALL * FROM vt0, t1, rt0 CROSS JOIN v0 ON ((((vt0.c0) IS FALSE))<<(t1.c0)) WHERE (CASE WHEN CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN t1.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN NULL THEN t1.c0 END THEN 0.17938648343340635 WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END THEN CASE t1.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END WHEN CASE WHEN vt0.c0 THEN rt0.c1 END THEN ((t1.c0)+(rt0.c0)) END) ORDER BY json_array_length(((rt0.c0) NOTNULL), (rt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN t1.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN NULL THEN t1.c0 END THEN 0.17938648343340635 WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END THEN CASE t1.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END WHEN CASE WHEN vt0.c0 THEN rt0.c1 END THEN ((t1.c0)+(rt0.c0)) END) IS TRUE)  as count FROM vt0, t1, rt0 CROSS JOIN v0 ON ((((vt0.c0) IS FALSE))<<(t1.c0)) ORDER BY json_array_length(((rt0.c0) NOTNULL), (rt0.c2 IN ())));
SELECT * FROM rt0, v0 WHERE (rt0.c0) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB));
SELECT * FROM rt0, v0 WHERE (rt0.c0) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB));
SELECT * FROM rt0, v0 WHERE (rt0.c0) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (LENGTH(HEX(v0.c0)));
SELECT SUM(count) FROM (SELECT ((LENGTH(HEX(v0.c0))) IS TRUE)  as count FROM t1, v0);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (LENGTH(HEX(v0.c0)));
SELECT SUM(count) FROM (SELECT ((LENGTH(HEX(v0.c0))) IS TRUE)  as count FROM t1, v0);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (LENGTH(HEX(v0.c0)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON CASE WHEN (((v0.c0))>=((t1.c0))) THEN ((t1.c0)GLOB(t1.c0)) ELSE ((rt0.c1)<(0.2008873530152122)) END INNER JOIN v0 ON ((v0.c0 COLLATE RTRIM)=(v0.c0)) WHERE (0.2553447446011179);
SELECT SUM(count) FROM (SELECT ALL ((0.2553447446011179) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON CASE WHEN (((v0.c0))>=((t1.c0))) THEN ((t1.c0)GLOB(t1.c0)) ELSE ((rt0.c1)<(0.2008873530152122)) END INNER JOIN v0 ON ((v0.c0 COLLATE RTRIM)=(v0.c0)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON CASE WHEN (((v0.c0))>=((t1.c0))) THEN ((t1.c0)GLOB(t1.c0)) ELSE ((rt0.c1)<(0.2008873530152122)) END INNER JOIN v0 ON ((v0.c0 COLLATE RTRIM)=(v0.c0)) WHERE (0.2553447446011179);
SELECT SUM(count) FROM (SELECT ALL ((0.2553447446011179) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON CASE WHEN (((v0.c0))>=((t1.c0))) THEN ((t1.c0)GLOB(t1.c0)) ELSE ((rt0.c1)<(0.2008873530152122)) END INNER JOIN v0 ON ((v0.c0 COLLATE RTRIM)=(v0.c0)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON CASE WHEN (((v0.c0))>=((t1.c0))) THEN ((t1.c0)GLOB(t1.c0)) ELSE ((rt0.c1)<(0.2008873530152122)) END INNER JOIN v0 ON ((v0.c0 COLLATE RTRIM)=(v0.c0)) WHERE (0.2553447446011179);
SELECT ALL COUNT(*) FROM vt0, v0, t1, rt0 WHERE (((NULLIF(rt0.c2, rt0.c1))=(vt0.c0))) ORDER BY 276753481  NULLS LAST, CASE WHEN ((rt0.c1) NOT NULL) THEN NULL ELSE rt0.c2 COLLATE RTRIM END  NULLS LAST, ((rt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt0.c2, rt0.c1))==(vt0.c0))) IS TRUE)  as count FROM vt0, v0, t1, rt0 ORDER BY 276753481  NULLS LAST, CASE WHEN ((rt0.c1) NOT NULL) THEN NULL ELSE rt0.c2 COLLATE RTRIM END  NULLS LAST, ((rt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c0)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, v0, t1, rt0 WHERE (((NULLIF(rt0.c2, rt0.c1))=(vt0.c0))) ORDER BY 276753481  NULLS LAST, CASE WHEN ((rt0.c1) NOT NULL) THEN NULL ELSE rt0.c2 COLLATE RTRIM END  NULLS LAST, ((rt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt0.c2, rt0.c1))==(vt0.c0))) IS TRUE)  as count FROM vt0, v0, t1, rt0 ORDER BY 276753481  NULLS LAST, CASE WHEN ((rt0.c1) NOT NULL) THEN NULL ELSE rt0.c2 COLLATE RTRIM END  NULLS LAST, ((rt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c0)) COLLATE BINARY DESC);
SELECT ALL * FROM t1, v0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (0.9313963831654894)) IN ())) ORDER BY JULIANDAY(CASE t1.c0  WHEN v0.c0 THEN '-1303276387' WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN t1.c0 ELSE t1.c0 END, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN '-256774871' THEN v0.c0 WHEN v0.c0 THEN 0.3272283888736338 END, (((t1.c0)) BETWEEN ((v0.c0)) AND ((t1.c0))), CAST(t1.c0 AS INTEGER), ((x'19e9') BETWEEN (t1.c0) AND (t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0) BETWEEN (v0.c0) AND (0.9313963831654894)) IN ())) IS TRUE)  as count FROM t1, v0 ORDER BY JULIANDAY(CASE t1.c0  WHEN v0.c0 THEN '-1303276387' WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN t1.c0 ELSE t1.c0 END, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN '-256774871' THEN v0.c0 WHEN v0.c0 THEN 0.3272283888736338 END, (((t1.c0)) BETWEEN ((v0.c0)) AND ((t1.c0))), CAST(t1.c0 AS INTEGER), ((x'19e9') BETWEEN (t1.c0) AND (t1.c0))) ASC);
SELECT ALL * FROM t1, v0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (0.9313963831654894)) IN ())) ORDER BY JULIANDAY(CASE t1.c0  WHEN v0.c0 THEN '-1303276387' WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN t1.c0 ELSE t1.c0 END, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN '-256774871' THEN v0.c0 WHEN v0.c0 THEN 0.3272283888736338 END, (((t1.c0)) BETWEEN ((v0.c0)) AND ((t1.c0))), CAST(t1.c0 AS INTEGER), ((x'19e9') BETWEEN (t1.c0) AND (t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0) BETWEEN (v0.c0) AND (0.9313963831654894)) IN ())) IS TRUE)  as count FROM t1, v0 ORDER BY JULIANDAY(CASE t1.c0  WHEN v0.c0 THEN '-1303276387' WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN t1.c0 ELSE t1.c0 END, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN '-256774871' THEN v0.c0 WHEN v0.c0 THEN 0.3272283888736338 END, (((t1.c0)) BETWEEN ((v0.c0)) AND ((t1.c0))), CAST(t1.c0 AS INTEGER), ((x'19e9') BETWEEN (t1.c0) AND (t1.c0))) ASC);
SELECT ALL * FROM t1, v0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (0.9313963831654894)) IN ())) ORDER BY JULIANDAY(CASE t1.c0  WHEN v0.c0 THEN '-1303276387' WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN t1.c0 ELSE t1.c0 END, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN '-256774871' THEN v0.c0 WHEN v0.c0 THEN 0.3272283888736338 END, (((t1.c0)) BETWEEN ((v0.c0)) AND ((t1.c0))), CAST(t1.c0 AS INTEGER), ((x'19e9') BETWEEN (t1.c0) AND (t1.c0))) ASC;
SELECT ALL COUNT(*) FROM t1 WHERE ((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE 0.8186262156004965 END))>=(((~ (t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE 0.8186262156004965 END))>=(((~ (t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE 0.8186262156004965 END))>=(((~ (t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE 0.8186262156004965 END))>=(((~ (t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE 0.8186262156004965 END))>=(((~ (t1.c0))))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((LIKELY(''))))) ORDER BY LOWER(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((LIKELY(''))))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((LIKELY(''))))) ORDER BY LOWER(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((LIKELY(''))))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((LIKELY(''))))) ORDER BY LOWER(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c2)==(v0.c0)))OR(((v0.c0) IS TRUE))))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY CAST((v0.c0 IN (rt0.c0)) AS NUMERIC) DESC  NULLS FIRST, rt0.c1 COLLATE RTRIM, ((x'2faf')%(((rt0.c0)%(-1907115875))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)==(v0.c0)))OR(((v0.c0) IS TRUE))))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((v0.c0 IN (rt0.c0)) AS NUMERIC) DESC  NULLS FIRST, rt0.c1 COLLATE RTRIM, ((x'2faf')%(((rt0.c0)%(-1907115875))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c2)==(v0.c0)))OR(((v0.c0) IS TRUE))))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY CAST((v0.c0 IN (rt0.c0)) AS NUMERIC) DESC  NULLS FIRST, rt0.c1 COLLATE RTRIM, ((x'2faf')%(((rt0.c0)%(-1907115875))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)==(v0.c0)))OR(((v0.c0) IS TRUE))))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((v0.c0 IN (rt0.c0)) AS NUMERIC) DESC  NULLS FIRST, rt0.c1 COLLATE RTRIM, ((x'2faf')%(((rt0.c0)%(-1907115875))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c2)==(v0.c0)))OR(((v0.c0) IS TRUE))))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY CAST((v0.c0 IN (rt0.c0)) AS NUMERIC) DESC  NULLS FIRST, rt0.c1 COLLATE RTRIM, ((x'2faf')%(((rt0.c0)%(-1907115875))))  NULLS LAST;
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (ABS(((((t1.c0)AND(rt0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((((t1.c0)AND(rt0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM t1 NOT INDEXED, v0, rt0);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (ABS(((((t1.c0)AND(rt0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((((t1.c0)AND(rt0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM t1 NOT INDEXED, v0, rt0);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (ABS(((((t1.c0)AND(rt0.c0)))OR(v0.c0))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON HEX(DISTINCT (((('-1886519771')AND(rt0.c0)))OR(rt0.c0))) WHERE (((((((((SQLITE_SOURCE_ID())OR(((rt0.c1)LIKE(rt0.c1)))))OR((v0.c0 IN ()))))OR(((((((((rt0.c2)AND(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c0)))))OR(UNICODE(NULL)))) ORDER BY ((('*駕' IN (v0.c0, v0.c0))) BETWEEN (((rt0.c2)GLOB(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC))) DESC, CAST(CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 END AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((SQLITE_SOURCE_ID())OR(((rt0.c1)LIKE(rt0.c1)))))OR((v0.c0 IN ()))))OR(((((((((rt0.c2)AND(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c0)))))OR(UNICODE(NULL)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON HEX(DISTINCT (((('-1886519771')AND(rt0.c0)))OR(rt0.c0))) ORDER BY ((('*駕' IN (v0.c0, v0.c0))) BETWEEN (((rt0.c2)GLOB(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC))) DESC, CAST(CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 END AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON HEX(DISTINCT (((('-1886519771')AND(rt0.c0)))OR(rt0.c0))) WHERE (((((((((SQLITE_SOURCE_ID())OR(((rt0.c1)LIKE(rt0.c1)))))OR((v0.c0 IN ()))))OR(((((((((rt0.c2)AND(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c0)))))OR(UNICODE(NULL)))) ORDER BY ((('*駕' IN (v0.c0, v0.c0))) BETWEEN (((rt0.c2)GLOB(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC))) DESC, CAST(CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 END AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((SQLITE_SOURCE_ID())OR(((rt0.c1)LIKE(rt0.c1)))))OR((v0.c0 IN ()))))OR(((((((((rt0.c2)AND(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c0)))))OR(UNICODE(NULL)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON HEX(DISTINCT (((('-1886519771')AND(rt0.c0)))OR(rt0.c0))) ORDER BY ((('*駕' IN (v0.c0, v0.c0))) BETWEEN (((rt0.c2)GLOB(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC))) DESC, CAST(CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 END AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON HEX(DISTINCT (((('-1886519771')AND(rt0.c0)))OR(rt0.c0))) WHERE (((((((((SQLITE_SOURCE_ID())OR(((rt0.c1)LIKE(rt0.c1)))))OR((v0.c0 IN ()))))OR(((((((((rt0.c2)AND(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c0)))))OR(UNICODE(NULL)))) ORDER BY ((('*駕' IN (v0.c0, v0.c0))) BETWEEN (((rt0.c2)GLOB(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC))) DESC, CAST(CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 END AS NUMERIC) ASC  NULLS LAST;
SELECT * FROM v0, t1, vt0 NATURAL JOIN rt0 WHERE (((rt0.c2) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM v0, t1, vt0 NATURAL JOIN rt0);
SELECT * FROM v0, t1, vt0 NATURAL JOIN rt0 WHERE (((rt0.c2) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM v0, t1, vt0 NATURAL JOIN rt0);
SELECT * FROM v0, t1, vt0 NATURAL JOIN rt0 WHERE (((rt0.c2) NOTNULL) COLLATE BINARY);
SELECT * FROM t1, vt0, rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, vt0, rt0, v0);
SELECT * FROM t1, vt0, rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, vt0, rt0, v0);
SELECT * FROM t1, vt0, rt0, v0 WHERE (x'');
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)|('-1160235323'))) IS FALSE) WHERE ((((- (vt0.c0))) BETWEEN ('') AND (((rt0.c2)%(-57905355)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) BETWEEN ('') AND (((rt0.c2)%(-57905355))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)|('-1160235323'))) IS FALSE));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)|('-1160235323'))) IS FALSE) WHERE ((((- (vt0.c0))) BETWEEN ('') AND (((rt0.c2)%(-57905355)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) BETWEEN ('') AND (((rt0.c2)%(-57905355))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)|('-1160235323'))) IS FALSE));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)|('-1160235323'))) IS FALSE) WHERE ((((- (vt0.c0))) BETWEEN ('') AND (((rt0.c2)%(-57905355)))));
SELECT ALL * FROM t1, rt0, v0 RIGHT OUTER JOIN vt0 ON NULL COLLATE BINARY WHERE (((((((((((vt0.c0)<=(v0.c0)))OR(((rt0.c2)<>(rt0.c0)))))AND(HEX(vt0.c0))))AND((NOT (rt0.c1)))))AND(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)<=(v0.c0)))OR(((rt0.c2)!=(rt0.c0)))))AND(HEX(vt0.c0))))AND((NOT (rt0.c1)))))AND(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM t1, rt0, v0 RIGHT OUTER JOIN vt0 ON NULL COLLATE BINARY);
SELECT ALL * FROM t1, rt0, v0 RIGHT OUTER JOIN vt0 ON NULL COLLATE BINARY WHERE (((((((((((vt0.c0)<=(v0.c0)))OR(((rt0.c2)<>(rt0.c0)))))AND(HEX(vt0.c0))))AND((NOT (rt0.c1)))))AND(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)<=(v0.c0)))OR(((rt0.c2)!=(rt0.c0)))))AND(HEX(vt0.c0))))AND((NOT (rt0.c1)))))AND(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM t1, rt0, v0 RIGHT OUTER JOIN vt0 ON NULL COLLATE BINARY);
SELECT ALL * FROM t1, rt0, v0 RIGHT OUTER JOIN vt0 ON NULL COLLATE BINARY WHERE (((((((((((vt0.c0)<=(v0.c0)))OR(((rt0.c2)<>(rt0.c0)))))AND(HEX(vt0.c0))))AND((NOT (rt0.c1)))))AND(((rt0.c2) NOTNULL))));
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(NULLIF(rt0.c0, rt0.c0))))OR((NOT (vt0.c0)))) WHERE ((((vt0.c0 IN (NULL)))<(CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (NULL)))<(CAST(NULL AS TEXT)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(NULLIF(rt0.c0, rt0.c0))))OR((NOT (vt0.c0)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(NULLIF(rt0.c0, rt0.c0))))OR((NOT (vt0.c0)))) WHERE ((((vt0.c0 IN (NULL)))<(CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (NULL)))<(CAST(NULL AS TEXT)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(NULLIF(rt0.c0, rt0.c0))))OR((NOT (vt0.c0)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(NULLIF(rt0.c0, rt0.c0))))OR((NOT (vt0.c0)))) WHERE ((((vt0.c0 IN (NULL)))<(CAST(NULL AS TEXT))));
SELECT COUNT(*) FROM t1, vt0 WHERE (vt0.c0) ORDER BY (('')*(CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1, vt0 ORDER BY (('')*(CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM t1, vt0 WHERE (vt0.c0) ORDER BY (('')*(CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1, vt0 ORDER BY (('')*(CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM t1, vt0 WHERE (vt0.c0) ORDER BY (('')*(CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 END));
SELECT ALL * FROM t1, rt0, vt0 WHERE ((((+ (rt0.c1)))|(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(vt0.c0)))AND(rt0.c0))))) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END COLLATE RTRIM  NULLS LAST, CASE (0.5320366960961858 IN (rt0.c2, 'hw0o'))  WHEN ((t1.c0)|(t1.c0)) THEN ((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)) ELSE (((vt0.c0, rt0.c2, rt0.c1))<=((rt0.c1, rt0.c0, '_Y'))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))|(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(vt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END COLLATE RTRIM  NULLS LAST, CASE (0.5320366960961858 IN (rt0.c2, 'hw0o'))  WHEN ((t1.c0)|(t1.c0)) THEN ((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)) ELSE (((vt0.c0, rt0.c2, rt0.c1))<=((rt0.c1, rt0.c0, '_Y'))) END DESC  NULLS FIRST);
SELECT ALL * FROM t1, rt0, vt0 WHERE ((((+ (rt0.c1)))|(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(vt0.c0)))AND(rt0.c0))))) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END COLLATE RTRIM  NULLS LAST, CASE (0.5320366960961858 IN (rt0.c2, 'hw0o'))  WHEN ((t1.c0)|(t1.c0)) THEN ((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)) ELSE (((vt0.c0, rt0.c2, rt0.c1))<=((rt0.c1, rt0.c0, '_Y'))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))|(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(vt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END COLLATE RTRIM  NULLS LAST, CASE (0.5320366960961858 IN (rt0.c2, 'hw0o'))  WHEN ((t1.c0)|(t1.c0)) THEN ((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)) ELSE (((vt0.c0, rt0.c2, rt0.c1))<=((rt0.c1, rt0.c0, '_Y'))) END DESC  NULLS FIRST);
SELECT ALL * FROM t1, rt0, vt0 WHERE ((((+ (rt0.c1)))|(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(vt0.c0)))AND(rt0.c0))))) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END COLLATE RTRIM  NULLS LAST, CASE (0.5320366960961858 IN (rt0.c2, 'hw0o'))  WHEN ((t1.c0)|(t1.c0)) THEN ((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)) ELSE (((vt0.c0, rt0.c2, rt0.c1))<=((rt0.c1, rt0.c0, '_Y'))) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, t1 LEFT OUTER JOIN v0 ON x'' WHERE (t1.c0) ORDER BY ((((((((((t1.c0)OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(vt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c0)))) AND (json_array(v0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, rt0, t1 LEFT OUTER JOIN v0 ON x'' ORDER BY ((((((((((t1.c0)OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(vt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c0)))) AND (json_array(v0.c0, vt0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t1 LEFT OUTER JOIN v0 ON x'' WHERE (t1.c0) ORDER BY ((((((((((t1.c0)OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(vt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c0)))) AND (json_array(v0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, rt0, t1 LEFT OUTER JOIN v0 ON x'' ORDER BY ((((((((((t1.c0)OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(vt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c0)))) AND (json_array(v0.c0, vt0.c0))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0) ORDER BY '1551932816';
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY '1551932816');
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0) ORDER BY '1551932816';
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY '1551932816');
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0) ORDER BY '1551932816';
SELECT ALL COUNT(*) FROM t1, rt0, v0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END) NOTNULL)) ORDER BY (((NOT (t1.c0))) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN '' END) AND (((rt0.c2)*(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY (((NOT (t1.c0))) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN '' END) AND (((rt0.c2)*(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, v0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END) NOTNULL)) ORDER BY (((NOT (t1.c0))) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN '' END) AND (((rt0.c2)*(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY (((NOT (t1.c0))) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN '' END) AND (((rt0.c2)*(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, v0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END) NOTNULL)) ORDER BY (((NOT (t1.c0))) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN '' END) AND (((rt0.c2)*(v0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1, vt0 FULL OUTER JOIN v0 ON ((IFNULL(DISTINCT rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c0))>=((rt0.c0)))) AND (rt0.c1)) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, t1, vt0 FULL OUTER JOIN v0 ON ((IFNULL(DISTINCT rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c0))>=((rt0.c0)))) AND (rt0.c1)));
SELECT ALL COUNT(*) FROM rt0, t1, vt0 FULL OUTER JOIN v0 ON ((IFNULL(DISTINCT rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c0))>=((rt0.c0)))) AND (rt0.c1)) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, t1, vt0 FULL OUTER JOIN v0 ON ((IFNULL(DISTINCT rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c0))>=((rt0.c0)))) AND (rt0.c1)));
SELECT ALL COUNT(*) FROM rt0, t1, vt0 FULL OUTER JOIN v0 ON ((IFNULL(DISTINCT rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c0))>=((rt0.c0)))) AND (rt0.c1)) WHERE ('');
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END) NOTNULL) WHERE ((NOT ((- (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (t1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END) NOTNULL) WHERE ((NOT ((- (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (t1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END) NOTNULL) WHERE ((NOT ((- (t1.c0)))));
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))|(((v0.c0)==(v0.c0)))) DESC  NULLS FIRST, (((('Owp5z', v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, 0.13189137877444734, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x'', v0.c0, 0.47762164203471336))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))|(((v0.c0)=(v0.c0)))) DESC  NULLS FIRST, (((('Owp5z', v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, 0.13189137877444734, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x'', v0.c0, 0.47762164203471336))) IN ()) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))|(((v0.c0)==(v0.c0)))) DESC  NULLS FIRST, (((('Owp5z', v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, 0.13189137877444734, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x'', v0.c0, 0.47762164203471336))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))|(((v0.c0)=(v0.c0)))) DESC  NULLS FIRST, (((('Owp5z', v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, 0.13189137877444734, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x'', v0.c0, 0.47762164203471336))) IN ()) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))|(((v0.c0)==(v0.c0)))) DESC  NULLS FIRST, (((('Owp5z', v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, 0.13189137877444734, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x'', v0.c0, 0.47762164203471336))) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((t1.c0)AND(t1.c0)))OR(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)AND(t1.c0)))OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((t1.c0)AND(t1.c0)))OR(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)AND(t1.c0)))OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((t1.c0)AND(t1.c0)))OR(rt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN (+ (x'')) END) ORDER BY (v0.c0 COLLATE RTRIM IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN (+ (x'')) END) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE RTRIM IN ()) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN (+ (x'')) END) ORDER BY (v0.c0 COLLATE RTRIM IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN (+ (x'')) END) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE RTRIM IN ()) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN (+ (x'')) END) ORDER BY (v0.c0 COLLATE RTRIM IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE ('695801337' COLLATE NOCASE) ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0)&(v0.c0)))) AND (((v0.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT (('695801337' COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0)&(v0.c0)))) AND (((v0.c0 IN ())))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ('695801337' COLLATE NOCASE) ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0)&(v0.c0)))) AND (((v0.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT (('695801337' COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0)&(v0.c0)))) AND (((v0.c0 IN ())))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ('695801337' COLLATE NOCASE) ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0)&(v0.c0)))) AND (((v0.c0 IN ())))) DESC;
SELECT COUNT(*) FROM t1, v0 FULL OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN (('\r([')) AND ((((t1.c0) IS FALSE)))) CROSS JOIN vt0 ON v0.c0 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN (v0.c0 IN ()) WHEN ((t1.c0)<=(v0.c0)) THEN ((rt0.c0)<<(rt0.c0)) WHEN NULL THEN ((rt0.c2) BETWEEN (v0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 COLLATE NOCASE THEN (v0.c0 IN ()) WHEN ((t1.c0)<=(v0.c0)) THEN ((rt0.c0)<<(rt0.c0)) WHEN NULL THEN ((rt0.c2) BETWEEN (v0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM t1, v0 FULL OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN (('\r([')) AND ((((t1.c0) IS FALSE)))) CROSS JOIN vt0 ON v0.c0);
SELECT COUNT(*) FROM t1, v0 FULL OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN (('\r([')) AND ((((t1.c0) IS FALSE)))) CROSS JOIN vt0 ON v0.c0 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN (v0.c0 IN ()) WHEN ((t1.c0)<=(v0.c0)) THEN ((rt0.c0)<<(rt0.c0)) WHEN NULL THEN ((rt0.c2) BETWEEN (v0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 COLLATE NOCASE THEN (v0.c0 IN ()) WHEN ((t1.c0)<=(v0.c0)) THEN ((rt0.c0)<<(rt0.c0)) WHEN NULL THEN ((rt0.c2) BETWEEN (v0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM t1, v0 FULL OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN (('\r([')) AND ((((t1.c0) IS FALSE)))) CROSS JOIN vt0 ON v0.c0);
SELECT COUNT(*) FROM t1, v0 FULL OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN (('\r([')) AND ((((t1.c0) IS FALSE)))) CROSS JOIN vt0 ON v0.c0 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN (v0.c0 IN ()) WHEN ((t1.c0)<=(v0.c0)) THEN ((rt0.c0)<<(rt0.c0)) WHEN NULL THEN ((rt0.c2) BETWEEN (v0.c0) AND (vt0.c0)) END);
SELECT * FROM rt0, vt0 WHERE ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))))!=(((NOT (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))))!=(((NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))))!=(((NOT (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))))!=(((NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))))!=(((NOT (rt0.c1))))));
SELECT COUNT(*) FROM rt0, t1, v0 WHERE (((v0.c0 COLLATE RTRIM)GLOB(((rt0.c0)>>(t1.c0))))) ORDER BY COALESCE((NOT (NULL)), ((v0.c0) BETWEEN (rt0.c0) AND (t1.c0))) ASC  NULLS FIRST, (((('3t')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN (((v0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)GLOB(((rt0.c0)>>(t1.c0))))) IS TRUE)  as count FROM rt0, t1, v0 ORDER BY COALESCE((NOT (NULL)), ((v0.c0) BETWEEN (rt0.c0) AND (t1.c0))) ASC  NULLS FIRST, (((('3t')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN (((v0.c0) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1, v0 WHERE (((v0.c0 COLLATE RTRIM)GLOB(((rt0.c0)>>(t1.c0))))) ORDER BY COALESCE((NOT (NULL)), ((v0.c0) BETWEEN (rt0.c0) AND (t1.c0))) ASC  NULLS FIRST, (((('3t')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN (((v0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)GLOB(((rt0.c0)>>(t1.c0))))) IS TRUE)  as count FROM rt0, t1, v0 ORDER BY COALESCE((NOT (NULL)), ((v0.c0) BETWEEN (rt0.c0) AND (t1.c0))) ASC  NULLS FIRST, (((('3t')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN (((v0.c0) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1, v0 WHERE (((v0.c0 COLLATE RTRIM)GLOB(((rt0.c0)>>(t1.c0))))) ORDER BY COALESCE((NOT (NULL)), ((v0.c0) BETWEEN (rt0.c0) AND (t1.c0))) ASC  NULLS FIRST, (((('3t')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN (((v0.c0) ISNULL)))  NULLS LAST;
SELECT ALL * FROM v0, t1, rt0, vt0 WHERE (CAST((+ (t1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t1.c0)) AS BLOB)) IS TRUE)  as count FROM v0, t1, rt0, vt0);
SELECT ALL * FROM v0, t1, rt0, vt0 WHERE (CAST((+ (t1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t1.c0)) AS BLOB)) IS TRUE)  as count FROM v0, t1, rt0, vt0);
SELECT ALL * FROM v0, t1, rt0, vt0 WHERE (CAST((+ (t1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON CAST(((692567780)IS NOT(rt0.c2)) AS BLOB) RIGHT OUTER JOIN t1 ON ((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0))) ISNULL) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON CAST(((692567780)IS NOT(rt0.c2)) AS BLOB) RIGHT OUTER JOIN t1 ON ((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON CAST(((692567780)IS NOT(rt0.c2)) AS BLOB) RIGHT OUTER JOIN t1 ON ((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0))) ISNULL) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON CAST(((692567780)IS NOT(rt0.c2)) AS BLOB) RIGHT OUTER JOIN t1 ON ((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON CAST(((692567780)IS NOT(rt0.c2)) AS BLOB) RIGHT OUTER JOIN t1 ON ((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0))) ISNULL) WHERE (rt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((('|䢣', vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((('|䢣', vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((('|䢣', vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((('|䢣', vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((('|䢣', vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE));
SELECT * FROM rt0 INNER JOIN t1 ON ((((rt0.c0)>=(rt0.c1)))=((((rt0.c2, t1.c0, rt0.c1))<((t1.c0, rt0.c2, rt0.c1))))) WHERE (CASE WHEN ((((t1.c0)OR('0.7136436331505682')))AND(rt0.c2)) THEN ((((rt0.c2)AND(t1.c0)))AND(rt0.c2)) ELSE CAST(rt0.c1 AS TEXT) END) ORDER BY (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) IN ((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t1.c0)OR('0.7136436331505682')))AND(rt0.c2)) THEN ((((rt0.c2)AND(t1.c0)))AND(rt0.c2)) ELSE CAST(rt0.c1 AS TEXT) END) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON ((((rt0.c0)>=(rt0.c1)))=((((rt0.c2, t1.c0, rt0.c1))<((t1.c0, rt0.c2, rt0.c1))))) ORDER BY (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) IN ((rt0.c0 IN ()))) ASC);
SELECT * FROM rt0 INNER JOIN t1 ON ((((rt0.c0)>=(rt0.c1)))=((((rt0.c2, t1.c0, rt0.c1))<((t1.c0, rt0.c2, rt0.c1))))) WHERE (CASE WHEN ((((t1.c0)OR('0.7136436331505682')))AND(rt0.c2)) THEN ((((rt0.c2)AND(t1.c0)))AND(rt0.c2)) ELSE CAST(rt0.c1 AS TEXT) END) ORDER BY (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) IN ((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t1.c0)OR('0.7136436331505682')))AND(rt0.c2)) THEN ((((rt0.c2)AND(t1.c0)))AND(rt0.c2)) ELSE CAST(rt0.c1 AS TEXT) END) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON ((((rt0.c0)>=(rt0.c1)))=((((rt0.c2, t1.c0, rt0.c1))<((t1.c0, rt0.c2, rt0.c1))))) ORDER BY (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) IN ((rt0.c0 IN ()))) ASC);
SELECT * FROM rt0 INNER JOIN t1 ON ((((rt0.c0)>=(rt0.c1)))=((((rt0.c2, t1.c0, rt0.c1))<((t1.c0, rt0.c2, rt0.c1))))) WHERE (CASE WHEN ((((t1.c0)OR('0.7136436331505682')))AND(rt0.c2)) THEN ((((rt0.c2)AND(t1.c0)))AND(rt0.c2)) ELSE CAST(rt0.c1 AS TEXT) END) ORDER BY (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) IN ((rt0.c0 IN ()))) ASC;
SELECT ALL * FROM rt0, v0, vt0, t1 WHERE (((TOTAL_CHANGES()) BETWEEN (((v0.c0)<<(v0.c0))) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES()) BETWEEN (((v0.c0)<<(v0.c0))) AND (rt0.c2))) IS TRUE)  as count FROM rt0, v0, vt0, t1);
SELECT ALL * FROM rt0, v0, vt0, t1 WHERE (((TOTAL_CHANGES()) BETWEEN (((v0.c0)<<(v0.c0))) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES()) BETWEEN (((v0.c0)<<(v0.c0))) AND (rt0.c2))) IS TRUE)  as count FROM rt0, v0, vt0, t1);
SELECT ALL * FROM rt0, v0, vt0, t1 WHERE (((TOTAL_CHANGES()) BETWEEN (((v0.c0)<<(v0.c0))) AND (rt0.c2)));
SELECT ALL COUNT(*) FROM rt0, v0, t1 WHERE (((IFNULL(rt0.c1, t1.c0)) NOTNULL)) ORDER BY CASE WHEN ((t1.c0)IS(t1.c0)) THEN UNLIKELY(DISTINCT t1.c0) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (0Xffffffff85a1df3b)) THEN (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, v0.c0, '(\r뉊)')) AND ((rt0.c2, t1.c0, rt0.c0))) WHEN ((rt0.c0) BETWEEN (v0.c0) AND (t1.c0)) THEN ((rt0.c2)%(rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c1, t1.c0)) NOTNULL)) IS TRUE)  as count FROM rt0, v0, t1 ORDER BY CASE WHEN ((t1.c0)IS(t1.c0)) THEN UNLIKELY(DISTINCT t1.c0) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (0Xffffffff85a1df3b)) THEN (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, v0.c0, '(\r뉊)')) AND ((rt0.c2, t1.c0, rt0.c0))) WHEN ((rt0.c0) BETWEEN (v0.c0) AND (t1.c0)) THEN ((rt0.c2)%(rt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, t1 WHERE (((IFNULL(rt0.c1, t1.c0)) NOTNULL)) ORDER BY CASE WHEN ((t1.c0)IS(t1.c0)) THEN UNLIKELY(DISTINCT t1.c0) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (0Xffffffff85a1df3b)) THEN (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, v0.c0, '(\r뉊)')) AND ((rt0.c2, t1.c0, rt0.c0))) WHEN ((rt0.c0) BETWEEN (v0.c0) AND (t1.c0)) THEN ((rt0.c2)%(rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c1, t1.c0)) NOTNULL)) IS TRUE)  as count FROM rt0, v0, t1 ORDER BY CASE WHEN ((t1.c0)IS(t1.c0)) THEN UNLIKELY(DISTINCT t1.c0) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (0Xffffffff85a1df3b)) THEN (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, v0.c0, '(\r뉊)')) AND ((rt0.c2, t1.c0, rt0.c0))) WHEN ((rt0.c0) BETWEEN (v0.c0) AND (t1.c0)) THEN ((rt0.c2)%(rt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, t1 WHERE (((IFNULL(rt0.c1, t1.c0)) NOTNULL)) ORDER BY CASE WHEN ((t1.c0)IS(t1.c0)) THEN UNLIKELY(DISTINCT t1.c0) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (0Xffffffff85a1df3b)) THEN (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, v0.c0, '(\r뉊)')) AND ((rt0.c2, t1.c0, rt0.c0))) WHEN ((rt0.c0) BETWEEN (v0.c0) AND (t1.c0)) THEN ((rt0.c2)%(rt0.c0)) END  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN vt0 ON ((((((((((vt0.c0)OR(rt0.c1)))AND(t1.c0)))AND(v0.c0)))AND(rt0.c2)))AND(((vt0.c0)+(0Xffffffff8748a2c8)))) FULL OUTER JOIN v0 ON json_insert(((((v0.c0)AND(t1.c0)))AND(v0.c0)), ((rt0.c2) NOTNULL), (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) CROSS JOIN t1 ON CAST(t1.c0 COLLATE BINARY AS INTEGER) WHERE (((((((((CAST(rt0.c2 AS INTEGER))AND(((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR((t1.c0 IN ()))))AND(json_valid(vt0.c0))))AND((((vt0.c0, NULL, v0.c0))<((t1.c0, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c2 AS INTEGER))AND(((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR((t1.c0 IN ()))))AND(json_valid(vt0.c0))))AND((((vt0.c0, NULL, v0.c0))<((t1.c0, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((((((vt0.c0)OR(rt0.c1)))AND(t1.c0)))AND(v0.c0)))AND(rt0.c2)))AND(((vt0.c0)+(0Xffffffff8748a2c8)))) FULL OUTER JOIN v0 ON json_insert(((((v0.c0)AND(t1.c0)))AND(v0.c0)), ((rt0.c2) NOTNULL), (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) CROSS JOIN t1 ON CAST(t1.c0 COLLATE BINARY AS INTEGER));
SELECT * FROM rt0 INNER JOIN vt0 ON ((((((((((vt0.c0)OR(rt0.c1)))AND(t1.c0)))AND(v0.c0)))AND(rt0.c2)))AND(((vt0.c0)+(0Xffffffff8748a2c8)))) FULL OUTER JOIN v0 ON json_insert(((((v0.c0)AND(t1.c0)))AND(v0.c0)), ((rt0.c2) NOTNULL), (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) CROSS JOIN t1 ON CAST(t1.c0 COLLATE BINARY AS INTEGER) WHERE (((((((((CAST(rt0.c2 AS INTEGER))AND(((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR((t1.c0 IN ()))))AND(json_valid(vt0.c0))))AND((((vt0.c0, NULL, v0.c0))<((t1.c0, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c2 AS INTEGER))AND(((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR((t1.c0 IN ()))))AND(json_valid(vt0.c0))))AND((((vt0.c0, NULL, v0.c0))<((t1.c0, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((((((vt0.c0)OR(rt0.c1)))AND(t1.c0)))AND(v0.c0)))AND(rt0.c2)))AND(((vt0.c0)+(0Xffffffff8748a2c8)))) FULL OUTER JOIN v0 ON json_insert(((((v0.c0)AND(t1.c0)))AND(v0.c0)), ((rt0.c2) NOTNULL), (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) CROSS JOIN t1 ON CAST(t1.c0 COLLATE BINARY AS INTEGER));
SELECT * FROM vt0, t1 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((CAST(vt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((CAST(vt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((CAST(vt0.c0 AS REAL)))));
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1)OR(v0.c0)))OR(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(v0.c0)))OR(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1)OR(v0.c0)))OR(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(v0.c0)))OR(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1)OR(v0.c0)))OR(rt0.c2)) COLLATE RTRIM);
SELECT * FROM rt0 CROSS JOIN v0 ON ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM WHERE (((TRIM(rt0.c2))&(((rt0.c2)IS NOT('8hhk<*_u')))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c2))&(((rt0.c2)IS NOT('8hhk<*_u'))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM);
SELECT * FROM rt0 CROSS JOIN v0 ON ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM WHERE (((TRIM(rt0.c2))&(((rt0.c2)IS NOT('8hhk<*_u')))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c2))&(((rt0.c2)IS NOT('8hhk<*_u'))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM);
SELECT * FROM rt0 CROSS JOIN v0 ON ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM WHERE (((TRIM(rt0.c2))&(((rt0.c2)IS NOT('8hhk<*_u')))));
SELECT * FROM t1 WHERE (((((CAST(t1.c0 AS NUMERIC))AND(CAST(t1.c0 AS REAL))))AND((((t1.c0)) NOT BETWEEN ((0.37507020218201736)) AND ((t1.c0)))))) ORDER BY (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))))>=(CAST('\n ok7薒d5é' AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c0 AS NUMERIC))AND(CAST(t1.c0 AS REAL))))AND((((t1.c0)) NOT BETWEEN ((0.37507020218201736)) AND ((t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))))>=(CAST('\n ok7薒d5é' AS BLOB))) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (((((CAST(t1.c0 AS NUMERIC))AND(CAST(t1.c0 AS REAL))))AND((((t1.c0)) NOT BETWEEN ((0.37507020218201736)) AND ((t1.c0)))))) ORDER BY (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))))>=(CAST('\n ok7薒d5é' AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c0 AS NUMERIC))AND(CAST(t1.c0 AS REAL))))AND((((t1.c0)) NOT BETWEEN ((0.37507020218201736)) AND ((t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))))>=(CAST('\n ok7薒d5é' AS BLOB))) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (((((CAST(t1.c0 AS NUMERIC))AND(CAST(t1.c0 AS REAL))))AND((((t1.c0)) NOT BETWEEN ((0.37507020218201736)) AND ((t1.c0)))))) ORDER BY (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))))>=(CAST('\n ok7薒d5é' AS BLOB))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (CASE x'b08ee18d'  WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((x''))) THEN CASE WHEN t1.c0 THEN t1.c0 END ELSE NULL END) ORDER BY (~ (NULL)) ASC  NULLS FIRST, ((((((((t1.c0)AND(t1.c0)))OR(0.05911113793351075)))OR(t1.c0)))AND(t1.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE x'b08ee18d'  WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((x''))) THEN CASE WHEN t1.c0 THEN t1.c0 END ELSE NULL END) IS TRUE)  as count FROM t1 ORDER BY (~ (NULL)) ASC  NULLS FIRST, ((((((((t1.c0)AND(t1.c0)))OR(0.05911113793351075)))OR(t1.c0)))AND(t1.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM t1 WHERE (CASE x'b08ee18d'  WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((x''))) THEN CASE WHEN t1.c0 THEN t1.c0 END ELSE NULL END) ORDER BY (~ (NULL)) ASC  NULLS FIRST, ((((((((t1.c0)AND(t1.c0)))OR(0.05911113793351075)))OR(t1.c0)))AND(t1.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE x'b08ee18d'  WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((x''))) THEN CASE WHEN t1.c0 THEN t1.c0 END ELSE NULL END) IS TRUE)  as count FROM t1 ORDER BY (~ (NULL)) ASC  NULLS FIRST, ((((((((t1.c0)AND(t1.c0)))OR(0.05911113793351075)))OR(t1.c0)))AND(t1.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM t1 WHERE (CASE x'b08ee18d'  WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((x''))) THEN CASE WHEN t1.c0 THEN t1.c0 END ELSE NULL END) ORDER BY (~ (NULL)) ASC  NULLS FIRST, ((((((((t1.c0)AND(t1.c0)))OR(0.05911113793351075)))OR(t1.c0)))AND(t1.c0)) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((v0.c0 IN (v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((v0.c0 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((v0.c0 IN (v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((v0.c0 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((v0.c0 IN (v0.c0, v0.c0)))));
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM t1, vt0 LEFT OUTER JOIN v0 ON 'h^kw弢Ꮔ5' WHERE ((((+ (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOT NULL)) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN v0 ON 'h^kw弢Ꮔ5');
SELECT ALL COUNT(*) FROM t1, vt0 LEFT OUTER JOIN v0 ON 'h^kw弢Ꮔ5' WHERE ((((+ (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOT NULL)) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN v0 ON 'h^kw弢Ꮔ5');
SELECT ALL COUNT(*) FROM t1, vt0 LEFT OUTER JOIN v0 ON 'h^kw弢Ꮔ5' WHERE ((((+ (v0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (0Xffffffff94c171e1);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff94c171e1) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (0Xffffffff94c171e1);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff94c171e1) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (0Xffffffff94c171e1);
SELECT ALL * FROM vt0, v0, rt0, t1 WHERE ((((+ (0.9473919251470009))) IS FALSE)) ORDER BY CASE ((((vt0.c0)AND(x'')))AND(t1.c0))  WHEN (x'5be0' IN ()) THEN ((v0.c0)+(v0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((+ (0.9473919251470009))) IS FALSE)) IS TRUE)  as count FROM vt0, v0, rt0, t1 ORDER BY CASE ((((vt0.c0)AND(x'')))AND(t1.c0))  WHEN (x'5be0' IN ()) THEN ((v0.c0)+(v0.c0)) END);
SELECT ALL * FROM vt0, v0, rt0, t1 WHERE ((((+ (0.9473919251470009))) IS FALSE)) ORDER BY CASE ((((vt0.c0)AND(x'')))AND(t1.c0))  WHEN (x'5be0' IN ()) THEN ((v0.c0)+(v0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((+ (0.9473919251470009))) IS FALSE)) IS TRUE)  as count FROM vt0, v0, rt0, t1 ORDER BY CASE ((((vt0.c0)AND(x'')))AND(t1.c0))  WHEN (x'5be0' IN ()) THEN ((v0.c0)+(v0.c0)) END);
SELECT ALL * FROM vt0, v0, rt0, t1 WHERE ((((+ (0.9473919251470009))) IS FALSE)) ORDER BY CASE ((((vt0.c0)AND(x'')))AND(t1.c0))  WHEN (x'5be0' IN ()) THEN ((v0.c0)+(v0.c0)) END;
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t1 WHERE (0X40621ef0) ORDER BY CAST(((rt0.c1)<>(rt0.c0)) AS REAL) DESC  NULLS LAST, ((NULL) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((0X40621ef0) IS TRUE)  as count FROM v0, rt0, vt0, t1 ORDER BY CAST(((rt0.c1)<>(rt0.c0)) AS REAL) DESC  NULLS LAST, ((NULL) ISNULL) DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t1 WHERE (0X40621ef0) ORDER BY CAST(((rt0.c1)<>(rt0.c0)) AS REAL) DESC  NULLS LAST, ((NULL) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((0X40621ef0) IS TRUE)  as count FROM v0, rt0, vt0, t1 ORDER BY CAST(((rt0.c1)<>(rt0.c0)) AS REAL) DESC  NULLS LAST, ((NULL) ISNULL) DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t1 WHERE (0X40621ef0) ORDER BY CAST(((rt0.c1)<>(rt0.c0)) AS REAL) DESC  NULLS LAST, ((NULL) ISNULL) DESC;
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN v0 ON ((0.8825708687852197) NOT BETWEEN (((t1.c0)-(t1.c0))) AND (((v0.c0)||(t1.c0)))) WHERE (((((((v0.c0)OR(v0.c0)))AND(t1.c0)))IS(t1.c0 COLLATE NOCASE))) ORDER BY ((NULL)/(((t1.c0)!=(v0.c0)))), 'N0叹'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))AND(t1.c0)))IS(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON ((0.8825708687852197) NOT BETWEEN (((t1.c0)-(t1.c0))) AND (((v0.c0)||(t1.c0)))) ORDER BY ((NULL)/(((t1.c0)<>(v0.c0)))), 'N0叹'  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN v0 ON ((0.8825708687852197) NOT BETWEEN (((t1.c0)-(t1.c0))) AND (((v0.c0)||(t1.c0)))) WHERE (((((((v0.c0)OR(v0.c0)))AND(t1.c0)))IS(t1.c0 COLLATE NOCASE))) ORDER BY ((NULL)/(((t1.c0)!=(v0.c0)))), 'N0叹'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))AND(t1.c0)))IS(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON ((0.8825708687852197) NOT BETWEEN (((t1.c0)-(t1.c0))) AND (((v0.c0)||(t1.c0)))) ORDER BY ((NULL)/(((t1.c0)<>(v0.c0)))), 'N0叹'  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN v0 ON ((0.8825708687852197) NOT BETWEEN (((t1.c0)-(t1.c0))) AND (((v0.c0)||(t1.c0)))) WHERE (((((((v0.c0)OR(v0.c0)))AND(t1.c0)))IS(t1.c0 COLLATE NOCASE))) ORDER BY ((NULL)/(((t1.c0)!=(v0.c0)))), 'N0叹'  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (LIKELY(DISTINCT rt0.c2)) AND (((rt0.c2)|(-1272313458)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (LIKELY(DISTINCT rt0.c2)) AND (((rt0.c2)|(-1272313458))))) IS TRUE)  as count FROM t1, rt0, v0);
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (LIKELY(DISTINCT rt0.c2)) AND (((rt0.c2)|(-1272313458)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (LIKELY(DISTINCT rt0.c2)) AND (((rt0.c2)|(-1272313458))))) IS TRUE)  as count FROM t1, rt0, v0);
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (LIKELY(DISTINCT rt0.c2)) AND (((rt0.c2)|(-1272313458)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ (((vt0.c0) IS TRUE)))) ORDER BY CASE -857487505  WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((((((vt0.c0)AND('-152480645')))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(x'')) END ASC, ((((v0.c0)>=(vt0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE -857487505  WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((((((vt0.c0)AND('-152480645')))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(x'')) END ASC, ((((v0.c0)>=(vt0.c0))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ (((vt0.c0) IS TRUE)))) ORDER BY CASE -857487505  WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((((((vt0.c0)AND('-152480645')))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(x'')) END ASC, ((((v0.c0)>=(vt0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE -857487505  WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((((((vt0.c0)AND('-152480645')))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(x'')) END ASC, ((((v0.c0)>=(vt0.c0))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ (((vt0.c0) IS TRUE)))) ORDER BY CASE -857487505  WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((((((vt0.c0)AND('-152480645')))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(x'')) END ASC, ((((v0.c0)>=(vt0.c0))) IS TRUE) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.3608191091813032)) BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND ((NOT (vt0.c0))))) ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt0.c0, 0.3608191091813032)) BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.3608191091813032)) BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND ((NOT (vt0.c0))))) ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt0.c0, 0.3608191091813032)) BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.3608191091813032)) BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND ((NOT (vt0.c0))))) ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN (((~ (t1.c0)))) AND ((t1.c0)))) ORDER BY ((((CAST(t1.c0 AS REAL))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))OR(GLOB(t1.c0, t1.c0)));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN (((~ (t1.c0)))) AND ((t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY ((((CAST(t1.c0 AS REAL))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))OR(GLOB(t1.c0, t1.c0))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN (((~ (t1.c0)))) AND ((t1.c0)))) ORDER BY ((((CAST(t1.c0 AS REAL))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))OR(GLOB(t1.c0, t1.c0)));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN (((~ (t1.c0)))) AND ((t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY ((((CAST(t1.c0 AS REAL))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))OR(GLOB(t1.c0, t1.c0))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN (((~ (t1.c0)))) AND ((t1.c0)))) ORDER BY ((((CAST(t1.c0 AS REAL))OR(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))OR(GLOB(t1.c0, t1.c0)));
SELECT COUNT(*) FROM t1, v0, vt0 WHERE ((+ (((v0.c0)IS NOT(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0)IS NOT(t1.c0))))) IS TRUE)  as count FROM t1, v0, vt0);
SELECT COUNT(*) FROM t1, v0, vt0 WHERE ((+ (((v0.c0)IS NOT(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0)IS NOT(t1.c0))))) IS TRUE)  as count FROM t1, v0, vt0);
SELECT COUNT(*) FROM t1, v0, vt0 WHERE ((+ (((v0.c0)IS NOT(t1.c0)))));
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)&(vt0.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM)LIKE(CAST(vt0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)LIKE(CAST(vt0.c0 AS BLOB))) ASC);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)&(vt0.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM)LIKE(CAST(vt0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)LIKE(CAST(vt0.c0 AS BLOB))) ASC);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)&(vt0.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM)LIKE(CAST(vt0.c0 AS BLOB))) ASC;
SELECT * FROM vt0, t1, v0 WHERE (HEX(DISTINCT (t1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (t1.c0 IN ()))) IS TRUE)  as count FROM vt0, t1, v0);
SELECT * FROM vt0, t1, v0 WHERE (HEX(DISTINCT (t1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (t1.c0 IN ()))) IS TRUE)  as count FROM vt0, t1, v0);
SELECT * FROM vt0, t1, v0 WHERE (HEX(DISTINCT (t1.c0 IN ())));
SELECT * FROM v0 WHERE (CHANGES() COLLATE BINARY) ORDER BY ((v0.c0)+(v0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES() COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)+(v0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM v0 WHERE (CHANGES() COLLATE BINARY) ORDER BY ((v0.c0)+(v0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES() COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)+(v0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM v0 WHERE (CHANGES() COLLATE BINARY) ORDER BY ((v0.c0)+(v0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM)OR((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)OR((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM)OR((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)OR((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM)OR((NOT (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((vt0.c0 IN ())))>=((t1.c0 COLLATE BINARY)))) ORDER BY CAST(0xffffffff848926e1 AS TEXT)  NULLS FIRST, CASE WHEN ((vt0.c0)LIKE(t1.c0)) THEN ABS(vt0.c0) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ())))>=((t1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(0Xffffffff848926e1 AS TEXT)  NULLS FIRST, CASE WHEN ((vt0.c0)LIKE(t1.c0)) THEN ABS(vt0.c0) END DESC);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((vt0.c0 IN ())))>=((t1.c0 COLLATE BINARY)))) ORDER BY CAST(0xffffffff848926e1 AS TEXT)  NULLS FIRST, CASE WHEN ((vt0.c0)LIKE(t1.c0)) THEN ABS(vt0.c0) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ())))>=((t1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(0Xffffffff848926e1 AS TEXT)  NULLS FIRST, CASE WHEN ((vt0.c0)LIKE(t1.c0)) THEN ABS(vt0.c0) END DESC);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((vt0.c0 IN ())))>=((t1.c0 COLLATE BINARY)))) ORDER BY CAST(0xffffffff848926e1 AS TEXT)  NULLS FIRST, CASE WHEN ((vt0.c0)LIKE(t1.c0)) THEN ABS(vt0.c0) END DESC;
SELECT COUNT(*) FROM t1, v0, rt0 WHERE ((((~ (rt0.c2)))GLOB(t1.c0))) ORDER BY '522793323' DESC, rt0.c2 COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))GLOB(t1.c0))) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY '522793323' DESC, rt0.c2 COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE ((((~ (rt0.c2)))GLOB(t1.c0))) ORDER BY '522793323' DESC, rt0.c2 COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))GLOB(t1.c0))) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY '522793323' DESC, rt0.c2 COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE ((((~ (rt0.c2)))GLOB(t1.c0))) ORDER BY '522793323' DESC, rt0.c2 COLLATE RTRIM DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0))>((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0))>((v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0))>((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0))>((v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0))>((v0.c0))) IN ()));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) ISNULL)) NOT BETWEEN (t1.c0) AND (CAST(t1.c0 AS TEXT)))) ORDER BY (t1.c0 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ((((((t1.c0) ISNULL)) NOT BETWEEN (t1.c0) AND (CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1 ORDER BY (t1.c0 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) ISNULL)) NOT BETWEEN (t1.c0) AND (CAST(t1.c0 AS TEXT)))) ORDER BY (t1.c0 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ((((((t1.c0) ISNULL)) NOT BETWEEN (t1.c0) AND (CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1 ORDER BY (t1.c0 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) ISNULL)) NOT BETWEEN (t1.c0) AND (CAST(t1.c0 AS TEXT)))) ORDER BY (t1.c0 COLLATE BINARY IN ());
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((- (CASE rt0.c1  WHEN NULL THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt0.c1  WHEN NULL THEN rt0.c2 END))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((- (CASE rt0.c1  WHEN NULL THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt0.c1  WHEN NULL THEN rt0.c2 END))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((- (CASE rt0.c1  WHEN NULL THEN rt0.c2 END)));
SELECT * FROM rt0, v0 WHERE ((((CAST(rt0.c1 AS NUMERIC), (((v0.c0, rt0.c2, v0.c0, v0.c0, rt0.c2))>((rt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c0))), NULL))>=((((rt0.c2) IS TRUE), x'05ed2bd2', v0.c0))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS NUMERIC), (((v0.c0, rt0.c2, v0.c0, v0.c0, rt0.c2))>((rt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c0))), NULL))>=((((rt0.c2) IS TRUE), x'05ed2bd2', v0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((CAST(rt0.c1 AS NUMERIC), (((v0.c0, rt0.c2, v0.c0, v0.c0, rt0.c2))>((rt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c0))), NULL))>=((((rt0.c2) IS TRUE), x'05ed2bd2', v0.c0))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS NUMERIC), (((v0.c0, rt0.c2, v0.c0, v0.c0, rt0.c2))>((rt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c0))), NULL))>=((((rt0.c2) IS TRUE), x'05ed2bd2', v0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((CAST(rt0.c1 AS NUMERIC), (((v0.c0, rt0.c2, v0.c0, v0.c0, rt0.c2))>((rt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c0))), NULL))>=((((rt0.c2) IS TRUE), x'05ed2bd2', v0.c0))));
SELECT ALL * FROM t1, vt0 WHERE (((CAST(0.2838758692677733 AS TEXT))GLOB(((t1.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(0.2838758692677733 AS TEXT))GLOB(((t1.c0)||(vt0.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((CAST(0.2838758692677733 AS TEXT))GLOB(((t1.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(0.2838758692677733 AS TEXT))GLOB(((t1.c0)||(vt0.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((CAST(0.2838758692677733 AS TEXT))GLOB(((t1.c0)||(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, t1, v0, rt0 WHERE (((t1.c0)<=(((((t1.c0)OR(t1.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)<=(((((t1.c0)OR(t1.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, t1, v0, rt0);
SELECT COUNT(*) FROM vt0, t1, v0, rt0 WHERE (((t1.c0)<=(((((t1.c0)OR(t1.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)<=(((((t1.c0)OR(t1.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, t1, v0, rt0);
SELECT COUNT(*) FROM vt0, t1, v0, rt0 WHERE (((t1.c0)<=(((((t1.c0)OR(t1.c0)))OR(rt0.c0)))));
SELECT ALL * FROM vt0, t1, rt0, v0 WHERE (((NOT (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t1, rt0, v0);
SELECT ALL * FROM vt0, t1, rt0, v0 WHERE (((NOT (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t1, rt0, v0);
SELECT ALL * FROM vt0, t1, rt0, v0 WHERE (((NOT (rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN v0 ON json_object(rt0.c2, t1.c0) COLLATE RTRIM CROSS JOIN rt0 ON ((x'')+((((vt0.c0, v0.c0, t1.c0, vt0.c0, t1.c0))<=((rt0.c2, vt0.c0, rt0.c2, rt0.c2, rt0.c0))))) FULL OUTER JOIN vt0 ON ((rt0.c0)<(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)) WHERE (CASE CAST(rt0.c2 AS TEXT)  WHEN json_object(vt0.c0, t1.c0, rt0.c2, rt0.c1) THEN ((rt0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS TEXT)  WHEN json_object(vt0.c0, t1.c0, rt0.c2, rt0.c1) THEN ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON json_object(rt0.c2, t1.c0) COLLATE RTRIM CROSS JOIN rt0 ON ((x'')+((((vt0.c0, v0.c0, t1.c0, vt0.c0, t1.c0))<=((rt0.c2, vt0.c0, rt0.c2, rt0.c2, rt0.c0))))) FULL OUTER JOIN vt0 ON ((rt0.c0)<(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN v0 ON json_object(rt0.c2, t1.c0) COLLATE RTRIM CROSS JOIN rt0 ON ((x'')+((((vt0.c0, v0.c0, t1.c0, vt0.c0, t1.c0))<=((rt0.c2, vt0.c0, rt0.c2, rt0.c2, rt0.c0))))) FULL OUTER JOIN vt0 ON ((rt0.c0)<(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)) WHERE (CASE CAST(rt0.c2 AS TEXT)  WHEN json_object(vt0.c0, t1.c0, rt0.c2, rt0.c1) THEN ((rt0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS TEXT)  WHEN json_object(vt0.c0, t1.c0, rt0.c2, rt0.c1) THEN ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON json_object(rt0.c2, t1.c0) COLLATE RTRIM CROSS JOIN rt0 ON ((x'')+((((vt0.c0, v0.c0, t1.c0, vt0.c0, t1.c0))<=((rt0.c2, vt0.c0, rt0.c2, rt0.c2, rt0.c0))))) FULL OUTER JOIN vt0 ON ((rt0.c0)<(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT * FROM t1, rt0 WHERE (((((((rt0.c2)&(rt0.c1)))OR((rt0.c2 IN ()))))OR(0X4143ef5a))) ORDER BY ((ABS(t1.c0)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)&(rt0.c1)))OR((rt0.c2 IN ()))))OR(0X4143ef5a))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((ABS(t1.c0)) NOTNULL)  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE (((((((rt0.c2)&(rt0.c1)))OR((rt0.c2 IN ()))))OR(0X4143ef5a))) ORDER BY ((ABS(t1.c0)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)&(rt0.c1)))OR((rt0.c2 IN ()))))OR(0X4143ef5a))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((ABS(t1.c0)) NOTNULL)  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE (((((((rt0.c2)&(rt0.c1)))OR((rt0.c2 IN ()))))OR(0X4143ef5a))) ORDER BY ((ABS(t1.c0)) NOTNULL)  NULLS FIRST;
SELECT * FROM v0, t1, rt0 WHERE (CASE WHEN ((rt0.c0) NOTNULL) THEN (((v0.c0))>((rt0.c0))) END) ORDER BY '<顴' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) NOTNULL) THEN (((v0.c0))>((rt0.c0))) END) IS TRUE)  as count FROM v0, t1, rt0 ORDER BY '<顴' DESC  NULLS FIRST);
SELECT * FROM v0, t1, rt0 WHERE (CASE WHEN ((rt0.c0) NOTNULL) THEN (((v0.c0))>((rt0.c0))) END) ORDER BY '<顴' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) NOTNULL) THEN (((v0.c0))>((rt0.c0))) END) IS TRUE)  as count FROM v0, t1, rt0 ORDER BY '<顴' DESC  NULLS FIRST);
SELECT * FROM v0, t1, rt0 WHERE (CASE WHEN ((rt0.c0) NOTNULL) THEN (((v0.c0))>((rt0.c0))) END) ORDER BY '<顴' DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0, v0, vt0 WHERE (((rt0.c2) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t1, rt0, v0, vt0);
SELECT COUNT(*) FROM t1, rt0, v0, vt0 WHERE (((rt0.c2) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t1, rt0, v0, vt0);
SELECT COUNT(*) FROM t1, rt0, v0, vt0 WHERE (((rt0.c2) NOT NULL) COLLATE BINARY);
SELECT ALL * FROM v0, vt0 NOT INDEXED WHERE (CASE WHEN (NOT (v0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))OR(0.6797678623984897)) THEN CAST(vt0.c0 AS INTEGER) END) ORDER BY CASE WHEN ((v0.c0)>=(v0.c0)) THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE (v0.c0 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (v0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))OR(0.6797678623984897)) THEN CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((v0.c0)>=(v0.c0)) THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE (v0.c0 IN ()) END ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 NOT INDEXED WHERE (CASE WHEN (NOT (v0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))OR(0.6797678623984897)) THEN CAST(vt0.c0 AS INTEGER) END) ORDER BY CASE WHEN ((v0.c0)>=(v0.c0)) THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE (v0.c0 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (v0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))OR(0.6797678623984897)) THEN CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((v0.c0)>=(v0.c0)) THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE (v0.c0 IN ()) END ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 NOT INDEXED WHERE (CASE WHEN (NOT (v0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))OR(0.6797678623984897)) THEN CAST(vt0.c0 AS INTEGER) END) ORDER BY CASE WHEN ((v0.c0)>=(v0.c0)) THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE (v0.c0 IN ()) END ASC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)) THEN NULL COLLATE BINARY END) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)) THEN NULL COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)) THEN NULL COLLATE BINARY END) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)) THEN NULL COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)) THEN NULL COLLATE BINARY END) ORDER BY rt0.c0  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((vt0.c0)<<(v0.c0)))GLOB(((rt0.c1) BETWEEN (vt0.c0) AND (x''))))) ORDER BY ((((rt0.c0)IS(rt0.c2))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(v0.c0)))GLOB(((rt0.c1) BETWEEN (vt0.c0) AND (x''))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((rt0.c0)IS(rt0.c2))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((vt0.c0)<<(v0.c0)))GLOB(((rt0.c1) BETWEEN (vt0.c0) AND (x''))))) ORDER BY ((((rt0.c0)IS(rt0.c2))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(v0.c0)))GLOB(((rt0.c1) BETWEEN (vt0.c0) AND (x''))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((rt0.c0)IS(rt0.c2))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((vt0.c0)<<(v0.c0)))GLOB(((rt0.c1) BETWEEN (vt0.c0) AND (x''))))) ORDER BY ((((rt0.c0)IS(rt0.c2))) IS TRUE)  NULLS FIRST;
SELECT * FROM t1, vt0, v0, rt0 WHERE (rt0.c2) ORDER BY ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 END)OR(CAST(vt0.c0 AS BLOB))))AND(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t1, vt0, v0, rt0 ORDER BY ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 END)OR(CAST(vt0.c0 AS BLOB))))AND(rt0.c0)) ASC);
SELECT * FROM t1, vt0, v0, rt0 WHERE (rt0.c2) ORDER BY ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 END)OR(CAST(vt0.c0 AS BLOB))))AND(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t1, vt0, v0, rt0 ORDER BY ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 END)OR(CAST(vt0.c0 AS BLOB))))AND(rt0.c0)) ASC);
SELECT * FROM t1, vt0, v0, rt0 WHERE (rt0.c2) ORDER BY ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 END)OR(CAST(vt0.c0 AS BLOB))))AND(rt0.c0)) ASC;
SELECT ALL * FROM vt0, v0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (vt0.c0);
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON (NOT (rt0.c1)) FULL OUTER JOIN v0 ON MAX(1.291502199E9, 0.7627837144288974, rt0.c0, 0xffffffffce8b951e, vt0.c0, ((rt0.c2)&(v0.c0))) RIGHT OUTER JOIN rt0 ON 0xffffffff9e281e75 WHERE ((((rt0.c0)IS NOT(v0.c0)) IN ())) ORDER BY rt0.c2, CAST(rt0.c0 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)IS NOT(v0.c0)) IN ())) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (NOT (rt0.c1)) FULL OUTER JOIN v0 ON MAX(1.291502199E9, 0.7627837144288974, rt0.c0, 0xffffffffce8b951e, vt0.c0, ((rt0.c2)&(v0.c0))) RIGHT OUTER JOIN rt0 ON 0xffffffff9e281e75 ORDER BY rt0.c2, CAST(rt0.c0 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON (NOT (rt0.c1)) FULL OUTER JOIN v0 ON MAX(1.291502199E9, 0.7627837144288974, rt0.c0, 0xffffffffce8b951e, vt0.c0, ((rt0.c2)&(v0.c0))) RIGHT OUTER JOIN rt0 ON 0xffffffff9e281e75 WHERE ((((rt0.c0)IS NOT(v0.c0)) IN ())) ORDER BY rt0.c2, CAST(rt0.c0 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)IS NOT(v0.c0)) IN ())) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (NOT (rt0.c1)) FULL OUTER JOIN v0 ON MAX(1.291502199E9, 0.7627837144288974, rt0.c0, 0xffffffffce8b951e, vt0.c0, ((rt0.c2)&(v0.c0))) RIGHT OUTER JOIN rt0 ON 0xffffffff9e281e75 ORDER BY rt0.c2, CAST(rt0.c0 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY (+ (CAST(-1e500 AS NUMERIC))) ASC, ((((v0.c0) NOT NULL))<=(0Xffffffffe8f73cbb))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (CAST(-1e500 AS NUMERIC))) ASC, ((((v0.c0) NOT NULL))<=(0xffffffffe8f73cbb))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY (+ (CAST(-1e500 AS NUMERIC))) ASC, ((((v0.c0) NOT NULL))<=(0Xffffffffe8f73cbb))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (CAST(-1e500 AS NUMERIC))) ASC, ((((v0.c0) NOT NULL))<=(0xffffffffe8f73cbb))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY (+ (CAST(-1e500 AS NUMERIC))) ASC, ((((v0.c0) NOT NULL))<=(0Xffffffffe8f73cbb))  NULLS LAST;
SELECT * FROM vt0, v0, rt0, t1 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN ('iSZ') AND (x'6e65' COLLATE NOCASE))) ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) BETWEEN ('iSZ') AND (x'6e65' COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0, rt0, t1 ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE) DESC);
SELECT * FROM vt0, v0, rt0, t1 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN ('iSZ') AND (x'6e65' COLLATE NOCASE))) ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) BETWEEN ('iSZ') AND (x'6e65' COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0, rt0, t1 ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE) DESC);
SELECT * FROM vt0, v0, rt0, t1 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN ('iSZ') AND (x'6e65' COLLATE NOCASE))) ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ('1627234994') ORDER BY ((((rt0.c1)IS(t1.c0)))+(((rt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT (('1627234994') IS TRUE)  as count FROM rt0, t1 ORDER BY ((((rt0.c1)IS(t1.c0)))+(((rt0.c0) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ('1627234994') ORDER BY ((((rt0.c1)IS(t1.c0)))+(((rt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT (('1627234994') IS TRUE)  as count FROM rt0, t1 ORDER BY ((((rt0.c1)IS(t1.c0)))+(((rt0.c0) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ('1627234994') ORDER BY ((((rt0.c1)IS(t1.c0)))+(((rt0.c0) IS TRUE))) ASC;
SELECT * FROM t1, rt0 WHERE (((((((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))), ((rt0.c1)<=(rt0.c0)), rt0.c2))<((rt0.c2, CAST(t1.c0 AS BLOB), ((rt0.c1) BETWEEN ('Xi') AND (t1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))), ((rt0.c1)<=(rt0.c0)), rt0.c2))<((rt0.c2, CAST(t1.c0 AS BLOB), ((rt0.c1) BETWEEN ('Xi') AND (t1.c0)))))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((((((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))), ((rt0.c1)<=(rt0.c0)), rt0.c2))<((rt0.c2, CAST(t1.c0 AS BLOB), ((rt0.c1) BETWEEN ('Xi') AND (t1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))), ((rt0.c1)<=(rt0.c0)), rt0.c2))<((rt0.c2, CAST(t1.c0 AS BLOB), ((rt0.c1) BETWEEN ('Xi') AND (t1.c0)))))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((((((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))), ((rt0.c1)<=(rt0.c0)), rt0.c2))<((rt0.c2, CAST(t1.c0 AS BLOB), ((rt0.c1) BETWEEN ('Xi') AND (t1.c0))))));
SELECT ALL * FROM rt0, v0, vt0 FULL OUTER JOIN t1 ON (vt0.c0 IN (((rt0.c0) IS FALSE), ((rt0.c0) IS TRUE))) WHERE (CASE (~ (v0.c0))  WHEN ((rt0.c2)IS NOT(v0.c0)) THEN v0.c0 END) ORDER BY ((CAST(vt0.c0 AS INTEGER)) ISNULL), vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (v0.c0))  WHEN ((rt0.c2)IS NOT(v0.c0)) THEN v0.c0 END) IS TRUE)  as count FROM rt0, v0, vt0 FULL OUTER JOIN t1 ON (vt0.c0 IN (((rt0.c0) IS FALSE), ((rt0.c0) IS TRUE))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) ISNULL), vt0.c0);
SELECT ALL * FROM rt0, v0, vt0 FULL OUTER JOIN t1 ON (vt0.c0 IN (((rt0.c0) IS FALSE), ((rt0.c0) IS TRUE))) WHERE (CASE (~ (v0.c0))  WHEN ((rt0.c2)IS NOT(v0.c0)) THEN v0.c0 END) ORDER BY ((CAST(vt0.c0 AS INTEGER)) ISNULL), vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (v0.c0))  WHEN ((rt0.c2)IS NOT(v0.c0)) THEN v0.c0 END) IS TRUE)  as count FROM rt0, v0, vt0 FULL OUTER JOIN t1 ON (vt0.c0 IN (((rt0.c0) IS FALSE), ((rt0.c0) IS TRUE))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) ISNULL), vt0.c0);
SELECT ALL * FROM rt0, v0, vt0 FULL OUTER JOIN t1 ON (vt0.c0 IN (((rt0.c0) IS FALSE), ((rt0.c0) IS TRUE))) WHERE (CASE (~ (v0.c0))  WHEN ((rt0.c2)IS NOT(v0.c0)) THEN v0.c0 END) ORDER BY ((CAST(vt0.c0 AS INTEGER)) ISNULL), vt0.c0;
SELECT ALL * FROM vt0, t1, v0 WHERE (0.9596814198343346) ORDER BY ((((+ (v0.c0))))>((((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((0.9596814198343346) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY ((((+ (v0.c0))))>((((v0.c0) IS FALSE)))));
SELECT ALL * FROM vt0, t1, v0 WHERE (0.9596814198343346) ORDER BY ((((+ (v0.c0))))>((((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((0.9596814198343346) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY ((((+ (v0.c0))))>((((v0.c0) IS FALSE)))));
SELECT ALL * FROM vt0, t1, v0 WHERE (0.9596814198343346) ORDER BY ((((+ (v0.c0))))>((((v0.c0) IS FALSE))));
SELECT COUNT(*) FROM rt0 WHERE (load_extension((NOT (rt0.c2)))) ORDER BY (~ (NULLIF(rt0.c2, rt0.c1))) ASC  NULLS LAST, TYPEOF(DISTINCT ((rt0.c1) NOTNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension((NOT (rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (~ (NULLIF(rt0.c2, rt0.c1))) ASC  NULLS LAST, TYPEOF(DISTINCT ((rt0.c1) NOTNULL))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (load_extension((NOT (rt0.c2)))) ORDER BY (~ (NULLIF(rt0.c2, rt0.c1))) ASC  NULLS LAST, TYPEOF(DISTINCT ((rt0.c1) NOTNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension((NOT (rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (~ (NULLIF(rt0.c2, rt0.c1))) ASC  NULLS LAST, TYPEOF(DISTINCT ((rt0.c1) NOTNULL))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (('-855929746' IN ((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((('-855929746' IN ((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (('-855929746' IN ((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((('-855929746' IN ((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (('-855929746' IN ((+ (v0.c0)))));
SELECT * FROM v0 WHERE ((NOT (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (((v0.c0) ISNULL))));
SELECT * FROM rt0 CROSS JOIN vt0 ON (~ (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) INNER JOIN t1 ON 'OkHXqp|s萚' WHERE (CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (~ (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) INNER JOIN t1 ON 'OkHXqp|s萚');
SELECT * FROM rt0 CROSS JOIN vt0 ON (~ (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) INNER JOIN t1 ON 'OkHXqp|s萚' WHERE (CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (~ (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) INNER JOIN t1 ON 'OkHXqp|s萚');
SELECT * FROM rt0 CROSS JOIN vt0 ON (~ (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) INNER JOIN t1 ON 'OkHXqp|s萚' WHERE (CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE (645629235) ORDER BY (NOT ((- (t1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((645629235) IS TRUE)  as count FROM t1, vt0, v0 ORDER BY (NOT ((- (t1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE (645629235) ORDER BY (NOT ((- (t1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((645629235) IS TRUE)  as count FROM t1, vt0, v0 ORDER BY (NOT ((- (t1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE (645629235) ORDER BY (NOT ((- (t1.c0)))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY CASE 0.6354257661920256  WHEN t1.c0 COLLATE BINARY THEN (((t1.c0, t1.c0, '-1349451011', t1.c0, t1.c0))>((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))) WHEN ((t1.c0)==(t1.c0)) THEN ((t1.c0)>=(t1.c0)) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) WHEN (t1.c0 IN ()) THEN (('-367174455')<(t1.c0)) WHEN (t1.c0 IN (t1.c0, t1.c0)) THEN ((((x'755f')AND('')))AND(t1.c0)) END, t1.c0;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY CASE 0.6354257661920256  WHEN t1.c0 COLLATE BINARY THEN (((t1.c0, t1.c0, '-1349451011', t1.c0, t1.c0))>((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))) WHEN ((t1.c0)=(t1.c0)) THEN ((t1.c0)>=(t1.c0)) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) WHEN (t1.c0 IN ()) THEN (('-367174455')<(t1.c0)) WHEN (t1.c0 IN (t1.c0, t1.c0)) THEN ((((x'755f')AND('')))AND(t1.c0)) END, t1.c0);
SELECT * FROM t1 WHERE (t1.c0) ORDER BY CASE 0.6354257661920256  WHEN t1.c0 COLLATE BINARY THEN (((t1.c0, t1.c0, '-1349451011', t1.c0, t1.c0))>((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))) WHEN ((t1.c0)==(t1.c0)) THEN ((t1.c0)>=(t1.c0)) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) WHEN (t1.c0 IN ()) THEN (('-367174455')<(t1.c0)) WHEN (t1.c0 IN (t1.c0, t1.c0)) THEN ((((x'755f')AND('')))AND(t1.c0)) END, t1.c0;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY CASE 0.6354257661920256  WHEN t1.c0 COLLATE BINARY THEN (((t1.c0, t1.c0, '-1349451011', t1.c0, t1.c0))>((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))) WHEN ((t1.c0)=(t1.c0)) THEN ((t1.c0)>=(t1.c0)) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) WHEN (t1.c0 IN ()) THEN (('-367174455')<(t1.c0)) WHEN (t1.c0 IN (t1.c0, t1.c0)) THEN ((((x'755f')AND('')))AND(t1.c0)) END, t1.c0);
SELECT * FROM t1 WHERE (t1.c0) ORDER BY CASE 0.6354257661920256  WHEN t1.c0 COLLATE BINARY THEN (((t1.c0, t1.c0, '-1349451011', t1.c0, t1.c0))>((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))) WHEN ((t1.c0)==(t1.c0)) THEN ((t1.c0)>=(t1.c0)) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) WHEN (t1.c0 IN ()) THEN (('-367174455')<(t1.c0)) WHEN (t1.c0 IN (t1.c0, t1.c0)) THEN ((((x'755f')AND('')))AND(t1.c0)) END, t1.c0;
SELECT COUNT(*) FROM vt0, rt0, t1, v0 WHERE ((json_array(rt0.c0, '117861574') IN ()));
SELECT SUM(count) FROM (SELECT (((json_array(rt0.c0, '117861574') IN ())) IS TRUE)  as count FROM vt0, rt0, t1, v0);
SELECT COUNT(*) FROM vt0, rt0, t1, v0 WHERE ((json_array(rt0.c0, '117861574') IN ()));
SELECT SUM(count) FROM (SELECT (((json_array(rt0.c0, '117861574') IN ())) IS TRUE)  as count FROM vt0, rt0, t1, v0);
SELECT COUNT(*) FROM vt0, rt0, t1, v0 WHERE ((json_array(rt0.c0, '117861574') IN ()));
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))&(x'9997')));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))&(x'9997'))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))&(x'9997')));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))&(x'9997'))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))&(x'9997')));
SELECT COUNT(*) FROM v0, t1 WHERE ((CASE WHEN v0.c0 THEN NULL END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN NULL END IN ())) IS TRUE)  as count FROM v0, t1);
SELECT COUNT(*) FROM v0, t1 WHERE ((CASE WHEN v0.c0 THEN NULL END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN NULL END IN ())) IS TRUE)  as count FROM v0, t1);
SELECT COUNT(*) FROM v0, t1 WHERE ((CASE WHEN v0.c0 THEN NULL END IN ()));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1 IN ())) BETWEEN (rt0.c2) AND ((+ (rt0.c1))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) BETWEEN (rt0.c2) AND ((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, v0 NOT INDEXED ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1 IN ())) BETWEEN (rt0.c2) AND ((+ (rt0.c1))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) BETWEEN (rt0.c2) AND ((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, v0 NOT INDEXED ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1 IN ())) BETWEEN (rt0.c2) AND ((+ (rt0.c1))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL);
SELECT COUNT(*) FROM rt0, t1, v0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)))OR((t1.c0 IN (0.17235437898067307)))) WHERE (((((vt0.c0) IS TRUE))*(CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))*(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t1, v0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)))OR((t1.c0 IN (0.17235437898067307)))));
SELECT COUNT(*) FROM rt0, t1, v0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)))OR((t1.c0 IN (0.17235437898067307)))) WHERE (((((vt0.c0) IS TRUE))*(CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))*(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t1, v0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)))OR((t1.c0 IN (0.17235437898067307)))));
SELECT COUNT(*) FROM rt0, t1, v0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)))OR((t1.c0 IN (0.17235437898067307)))) WHERE (((((vt0.c0) IS TRUE))*(CAST(rt0.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((((NOT (vt0.c0)))||(CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))||(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((((NOT (vt0.c0)))||(CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))||(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((((NOT (vt0.c0)))||(CAST(rt0.c2 AS INTEGER))));
SELECT ALL * FROM vt0, v0 CROSS JOIN t1 ON ((TOTAL_CHANGES()) NOT NULL) WHERE (((vt0.c0 COLLATE NOCASE)OR(vt0.c0))) ORDER BY PRINTF(((v0.c0)%(t1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)OR(vt0.c0))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t1 ON ((TOTAL_CHANGES()) NOT NULL) ORDER BY PRINTF(((v0.c0)%(t1.c0))) DESC);
SELECT ALL * FROM vt0, v0 CROSS JOIN t1 ON ((TOTAL_CHANGES()) NOT NULL) WHERE (((vt0.c0 COLLATE NOCASE)OR(vt0.c0))) ORDER BY PRINTF(((v0.c0)%(t1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)OR(vt0.c0))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t1 ON ((TOTAL_CHANGES()) NOT NULL) ORDER BY PRINTF(((v0.c0)%(t1.c0))) DESC);
SELECT ALL * FROM vt0, v0 CROSS JOIN t1 ON ((TOTAL_CHANGES()) NOT NULL) WHERE (((vt0.c0 COLLATE NOCASE)OR(vt0.c0))) ORDER BY PRINTF(((v0.c0)%(t1.c0))) DESC;
SELECT * FROM rt0, t1 WHERE (((((t1.c0)/(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)/(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((((t1.c0)/(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)/(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((((t1.c0)/(rt0.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(0.0305261997248929 AS INTEGER))<<(rt0.c1))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.0305261997248929 AS INTEGER))<<(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(0.0305261997248929 AS INTEGER))<<(rt0.c1))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.0305261997248929 AS INTEGER))<<(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(0.0305261997248929 AS INTEGER))<<(rt0.c1))) ORDER BY rt0.c1 DESC;
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN t1 ON (CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END IN ()) INNER JOIN rt0 ON (~ (v0.c0)) WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((vt0.c0)<(vt0.c0)) THEN (+ (v0.c0)) WHEN ((v0.c0)LIKE(rt0.c1)) THEN CAST(v0.c0 AS INTEGER) WHEN 1.687180742E9 THEN LENGTH(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((vt0.c0)<(vt0.c0)) THEN (+ (v0.c0)) WHEN ((v0.c0)LIKE(rt0.c1)) THEN CAST(v0.c0 AS INTEGER) WHEN 1.687180742E9 THEN LENGTH(rt0.c0) END) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN t1 ON (CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END IN ()) INNER JOIN rt0 ON (~ (v0.c0)));
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN t1 ON (CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END IN ()) INNER JOIN rt0 ON (~ (v0.c0)) WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((vt0.c0)<(vt0.c0)) THEN (+ (v0.c0)) WHEN ((v0.c0)LIKE(rt0.c1)) THEN CAST(v0.c0 AS INTEGER) WHEN 1.687180742E9 THEN LENGTH(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((vt0.c0)<(vt0.c0)) THEN (+ (v0.c0)) WHEN ((v0.c0)LIKE(rt0.c1)) THEN CAST(v0.c0 AS INTEGER) WHEN 1.687180742E9 THEN LENGTH(rt0.c0) END) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN t1 ON (CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END IN ()) INNER JOIN rt0 ON (~ (v0.c0)));
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN t1 ON (CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END IN ()) INNER JOIN rt0 ON (~ (v0.c0)) WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((vt0.c0)<(vt0.c0)) THEN (+ (v0.c0)) WHEN ((v0.c0)LIKE(rt0.c1)) THEN CAST(v0.c0 AS INTEGER) WHEN 1.687180742E9 THEN LENGTH(rt0.c0) END);
SELECT ALL * FROM rt0, t1, vt0 NATURAL JOIN v0 WHERE ((- ((rt0.c0 IN ())))) ORDER BY ((LTRIM(rt0.c0, rt0.c2))%(((rt0.c1)%(t1.c0))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, t1, vt0 NATURAL JOIN v0 ORDER BY ((LTRIM(rt0.c0, rt0.c2))%(((rt0.c1)%(t1.c0)))));
SELECT ALL * FROM rt0, t1, vt0 NATURAL JOIN v0 WHERE ((- ((rt0.c0 IN ())))) ORDER BY ((LTRIM(rt0.c0, rt0.c2))%(((rt0.c1)%(t1.c0))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, t1, vt0 NATURAL JOIN v0 ORDER BY ((LTRIM(rt0.c0, rt0.c2))%(((rt0.c1)%(t1.c0)))));
SELECT ALL * FROM rt0, t1, vt0 NATURAL JOIN v0 WHERE ((- ((rt0.c0 IN ())))) ORDER BY ((LTRIM(rt0.c0, rt0.c2))%(((rt0.c1)%(t1.c0))));
SELECT COUNT(*) FROM vt0, v0, rt0, t1 WHERE (((COALESCE(DISTINCT rt0.c1, x'', rt0.c0, v0.c0)) BETWEEN (((rt0.c2)>=(v0.c0))) AND ((+ (rt0.c2))))) ORDER BY ((load_extension(vt0.c0, rt0.c0)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT rt0.c1, x'', rt0.c0, v0.c0)) BETWEEN (((rt0.c2)>=(v0.c0))) AND ((+ (rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0, t1 ORDER BY ((load_extension(vt0.c0, rt0.c0)) IS TRUE));
SELECT COUNT(*) FROM vt0, v0, rt0, t1 WHERE (((COALESCE(DISTINCT rt0.c1, x'', rt0.c0, v0.c0)) BETWEEN (((rt0.c2)>=(v0.c0))) AND ((+ (rt0.c2))))) ORDER BY ((load_extension(vt0.c0, rt0.c0)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT rt0.c1, x'', rt0.c0, v0.c0)) BETWEEN (((rt0.c2)>=(v0.c0))) AND ((+ (rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0, t1 ORDER BY ((load_extension(vt0.c0, rt0.c0)) IS TRUE));
SELECT COUNT(*) FROM vt0, t1 WHERE ('gX3f+WW');
SELECT SUM(count) FROM (SELECT (('gX3f+WW') IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE ('gX3f+WW');
SELECT SUM(count) FROM (SELECT (('gX3f+WW') IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE ('gX3f+WW');
SELECT COUNT(*) FROM vt0, rt0, v0, t1 WHERE (CASE WHEN (rt0.c1 IN ()) THEN (rt0.c2 IN (rt0.c0)) ELSE (rt0.c1 IN ()) END) ORDER BY ((rt0.c2 COLLATE NOCASE)<(IFNULL(v0.c0, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN ()) THEN (rt0.c2 IN (rt0.c0)) ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, rt0, v0, t1 ORDER BY ((rt0.c2 COLLATE NOCASE)<(IFNULL(v0.c0, rt0.c1))) ASC);
SELECT COUNT(*) FROM vt0, rt0, v0, t1 WHERE (CASE WHEN (rt0.c1 IN ()) THEN (rt0.c2 IN (rt0.c0)) ELSE (rt0.c1 IN ()) END) ORDER BY ((rt0.c2 COLLATE NOCASE)<(IFNULL(v0.c0, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN ()) THEN (rt0.c2 IN (rt0.c0)) ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, rt0, v0, t1 ORDER BY ((rt0.c2 COLLATE NOCASE)<(IFNULL(v0.c0, rt0.c1))) ASC);
SELECT COUNT(*) FROM vt0, rt0, v0, t1 WHERE (CASE WHEN (rt0.c1 IN ()) THEN (rt0.c2 IN (rt0.c0)) ELSE (rt0.c1 IN ()) END) ORDER BY ((rt0.c2 COLLATE NOCASE)<(IFNULL(v0.c0, rt0.c1))) ASC;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((NOT (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((NOT (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((NOT (((vt0.c0) IS FALSE))));
SELECT * FROM t1 WHERE (((((t1.c0) NOTNULL)) BETWEEN (((t1.c0)||(t1.c0))) AND (((0.6108200273194343)>=(NULL))))) ORDER BY t1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOTNULL)) BETWEEN (((t1.c0)||(t1.c0))) AND (((0.6108200273194343)>=(NULL))))) IS TRUE)  as count FROM t1 ORDER BY t1.c0 DESC);
SELECT * FROM t1 WHERE (((((t1.c0) NOTNULL)) BETWEEN (((t1.c0)||(t1.c0))) AND (((0.6108200273194343)>=(NULL))))) ORDER BY t1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOTNULL)) BETWEEN (((t1.c0)||(t1.c0))) AND (((0.6108200273194343)>=(NULL))))) IS TRUE)  as count FROM t1 ORDER BY t1.c0 DESC);
SELECT * FROM t1 WHERE (((((t1.c0) NOTNULL)) BETWEEN (((t1.c0)||(t1.c0))) AND (((0.6108200273194343)>=(NULL))))) ORDER BY t1.c0 DESC;
SELECT ALL COUNT(*) FROM t1, v0, rt0, vt0 WHERE (((DATE(v0.c0, rt0.c1, x'')) BETWEEN (((((t1.c0)OR(rt0.c2)))OR(vt0.c0))) AND (json_array_length(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((DATE(v0.c0, rt0.c1, x'')) BETWEEN (((((t1.c0)OR(rt0.c2)))OR(vt0.c0))) AND (json_array_length(rt0.c0)))) IS TRUE)  as count FROM t1, v0, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, v0, rt0, vt0 WHERE (((DATE(v0.c0, rt0.c1, x'')) BETWEEN (((((t1.c0)OR(rt0.c2)))OR(vt0.c0))) AND (json_array_length(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((DATE(v0.c0, rt0.c1, x'')) BETWEEN (((((t1.c0)OR(rt0.c2)))OR(vt0.c0))) AND (json_array_length(rt0.c0)))) IS TRUE)  as count FROM t1, v0, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, v0, rt0, vt0 WHERE (((DATE(v0.c0, rt0.c1, x'')) BETWEEN (((((t1.c0)OR(rt0.c2)))OR(vt0.c0))) AND (json_array_length(rt0.c0))));
SELECT * FROM vt0, v0, rt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY NULLIF((((vt0.c0))<((rt0.c2))), ((rt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY NULLIF((((vt0.c0))<((rt0.c2))), ((rt0.c0) NOT NULL)));
SELECT * FROM vt0, v0, rt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY NULLIF((((vt0.c0))<((rt0.c2))), ((rt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY NULLIF((((vt0.c0))<((rt0.c2))), ((rt0.c0) NOT NULL)));
SELECT * FROM vt0, v0, rt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY NULLIF((((vt0.c0))<((rt0.c2))), ((rt0.c0) NOT NULL));
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) BETWEEN (rt0.c0 COLLATE BINARY) AND ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS REAL)) BETWEEN (rt0.c0 COLLATE BINARY) AND ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) BETWEEN (rt0.c0 COLLATE BINARY) AND ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS REAL)) BETWEEN (rt0.c0 COLLATE BINARY) AND ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) BETWEEN (rt0.c0 COLLATE BINARY) AND ((~ (rt0.c2)))));
SELECT ALL * FROM vt0 WHERE (-2119903938) ORDER BY 0Xffffffffad82ed1f;
SELECT SUM(count) FROM (SELECT ((-2119903938) IS TRUE)  as count FROM vt0 ORDER BY 0xffffffffad82ed1f);
SELECT ALL * FROM vt0 WHERE (-2119903938) ORDER BY 0Xffffffffad82ed1f;
SELECT SUM(count) FROM (SELECT ((-2119903938) IS TRUE)  as count FROM vt0 ORDER BY 0xffffffffad82ed1f);
SELECT ALL * FROM vt0 WHERE (-2119903938) ORDER BY 0Xffffffffad82ed1f;
SELECT ALL COUNT(*) FROM rt0, vt0, t1, v0 WHERE (1533368046);
SELECT SUM(count) FROM (SELECT ((1533368046) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, t1, v0 WHERE (1533368046);
SELECT SUM(count) FROM (SELECT ((1533368046) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, t1, v0 WHERE (1533368046);
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN v0 WHERE (((COALESCE(DISTINCT rt0.c1, t1.c0, v0.c0, rt0.c2))IS(((rt0.c1)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT rt0.c1, t1.c0, v0.c0, rt0.c2))IS(((rt0.c1)+(rt0.c1))))) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN v0 WHERE (((COALESCE(DISTINCT rt0.c1, t1.c0, v0.c0, rt0.c2))IS(((rt0.c1)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT rt0.c1, t1.c0, v0.c0, rt0.c2))IS(((rt0.c1)+(rt0.c1))))) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN v0 WHERE (((COALESCE(DISTINCT rt0.c1, t1.c0, v0.c0, rt0.c2))IS(((rt0.c1)+(rt0.c1)))));
SELECT COUNT(*) FROM t1 INNER JOIN rt0 ON ((((rt0.c0)>(vt0.c0)))=(((rt0.c2)&(rt0.c2)))) LEFT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt0.c0) AND (v0.c0)))<=(((rt0.c1)<=(v0.c0)))) LEFT OUTER JOIN v0 ON 0.567269688859012 WHERE (((((((((((rt0.c1) NOTNULL))AND(CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN 0.9600942227215594 WHEN '-1415838677' THEN v0.c0 END)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))))AND(MAX(rt0.c0, rt0.c2))))AND(((rt0.c2)*(vt0.c0))))) ORDER BY (((((x'd435')AND(rt0.c0)))AND('-1422577981')) IN ()) ASC  NULLS LAST, CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1) NOTNULL))AND(CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN 0.9600942227215594 WHEN '-1415838677' THEN v0.c0 END)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))))AND(MAX(rt0.c0, rt0.c2))))AND(((rt0.c2)*(vt0.c0))))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((((rt0.c0)>(vt0.c0)))=(((rt0.c2)&(rt0.c2)))) LEFT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt0.c0) AND (v0.c0)))<=(((rt0.c1)<=(v0.c0)))) LEFT OUTER JOIN v0 ON 0.567269688859012 ORDER BY (((((x'd435')AND(rt0.c0)))AND('-1422577981')) IN ()) ASC  NULLS LAST, CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) AS NUMERIC));
SELECT COUNT(*) FROM t1 INNER JOIN rt0 ON ((((rt0.c0)>(vt0.c0)))=(((rt0.c2)&(rt0.c2)))) LEFT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt0.c0) AND (v0.c0)))<=(((rt0.c1)<=(v0.c0)))) LEFT OUTER JOIN v0 ON 0.567269688859012 WHERE (((((((((((rt0.c1) NOTNULL))AND(CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN 0.9600942227215594 WHEN '-1415838677' THEN v0.c0 END)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))))AND(MAX(rt0.c0, rt0.c2))))AND(((rt0.c2)*(vt0.c0))))) ORDER BY (((((x'd435')AND(rt0.c0)))AND('-1422577981')) IN ()) ASC  NULLS LAST, CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1) NOTNULL))AND(CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN 0.9600942227215594 WHEN '-1415838677' THEN v0.c0 END)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))))AND(MAX(rt0.c0, rt0.c2))))AND(((rt0.c2)*(vt0.c0))))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((((rt0.c0)>(vt0.c0)))=(((rt0.c2)&(rt0.c2)))) LEFT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt0.c0) AND (v0.c0)))<=(((rt0.c1)<=(v0.c0)))) LEFT OUTER JOIN v0 ON 0.567269688859012 ORDER BY (((((x'd435')AND(rt0.c0)))AND('-1422577981')) IN ()) ASC  NULLS LAST, CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) AS NUMERIC));
SELECT ALL * FROM v0, t1 WHERE (t1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((t1.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (t1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((t1.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (t1.c0 COLLATE RTRIM);
SELECT ALL * FROM v0, t1 WHERE (((((((v0.c0)AND(t1.c0)))AND(NULL))) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND (t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(t1.c0)))AND(NULL))) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (((((((v0.c0)AND(t1.c0)))AND(NULL))) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND (t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(t1.c0)))AND(NULL))) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (((((((v0.c0)AND(t1.c0)))AND(NULL))) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND (t1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT x'2701')) ORDER BY (NOT (((vt0.c0)*(vt0.c0)))) ASC  NULLS FIRST, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT x'2701')) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0)*(vt0.c0)))) ASC  NULLS FIRST, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT x'2701')) ORDER BY (NOT (((vt0.c0)*(vt0.c0)))) ASC  NULLS FIRST, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT x'2701')) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0)*(vt0.c0)))) ASC  NULLS FIRST, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT x'2701')) ORDER BY (NOT (((vt0.c0)*(vt0.c0)))) ASC  NULLS FIRST, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM v0 INDEXED BY i83, t1 WHERE ((((NOT (t1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c0))) NOTNULL)) IS TRUE)  as count FROM v0 INDEXED BY i83, t1);
SELECT ALL * FROM v0 INDEXED BY i83, t1 WHERE ((((NOT (t1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c0))) NOTNULL)) IS TRUE)  as count FROM v0 INDEXED BY i83, t1);
SELECT ALL * FROM v0, vt0, rt0, t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (rt0.c2))) NOT BETWEEN (CASE WHEN t1.c0 THEN vt0.c0 END) AND (((rt0.c0)>(rt0.c0))))) ORDER BY ((((((((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(t1.c0)))+((((vt0.c0, v0.c0, x''))<=((rt0.c2, rt0.c1, t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (t1.c0) AND (rt0.c2))) NOT BETWEEN (CASE WHEN t1.c0 THEN vt0.c0 END) AND (((rt0.c0)>(rt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0, t1 ORDER BY ((((((((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(t1.c0)))+((((vt0.c0, v0.c0, x''))<=((rt0.c2, rt0.c1, t1.c0))))));
SELECT ALL * FROM v0, vt0, rt0, t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (rt0.c2))) NOT BETWEEN (CASE WHEN t1.c0 THEN vt0.c0 END) AND (((rt0.c0)>(rt0.c0))))) ORDER BY ((((((((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(t1.c0)))+((((vt0.c0, v0.c0, x''))<=((rt0.c2, rt0.c1, t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (t1.c0) AND (rt0.c2))) NOT BETWEEN (CASE WHEN t1.c0 THEN vt0.c0 END) AND (((rt0.c0)>(rt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0, t1 ORDER BY ((((((((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(t1.c0)))+((((vt0.c0, v0.c0, x''))<=((rt0.c2, rt0.c1, t1.c0))))));
SELECT ALL * FROM v0, vt0, rt0, t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (rt0.c2))) NOT BETWEEN (CASE WHEN t1.c0 THEN vt0.c0 END) AND (((rt0.c0)>(rt0.c0))))) ORDER BY ((((((((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(t1.c0)))+((((vt0.c0, v0.c0, x''))<=((rt0.c2, rt0.c1, t1.c0)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON CASE rt0.c0  WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 END WHERE (rt0.c1) ORDER BY 10686324 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON CASE rt0.c0  WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 END ORDER BY 10686324 COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON CASE rt0.c0  WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 END WHERE (rt0.c1) ORDER BY 10686324 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON CASE rt0.c0  WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 END ORDER BY 10686324 COLLATE RTRIM DESC);
SELECT * FROM vt0, rt0, t1 WHERE ((CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c1 END IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c1 END IN (vt0.c0))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE ((CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c1 END IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c1 END IN (vt0.c0))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE ((CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c1 END IN (vt0.c0)));
SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS REAL))<<(((t1.c0)LIKE(t1.c0))))) ORDER BY CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN x'b33d' COLLATE RTRIM END DESC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (TYPEOF(DISTINCT t1.c0)) AND (LENGTH(t1.c0))) ASC  NULLS LAST, ((((((t1.c0)OR(t1.c0)))OR(t1.c0))) NOT BETWEEN (t1.c0) AND (((t1.c0)GLOB(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS REAL))<<(((t1.c0)LIKE(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN x'b33d' COLLATE RTRIM END DESC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (TYPEOF(DISTINCT t1.c0)) AND (LENGTH(t1.c0))) ASC  NULLS LAST, ((((((t1.c0)OR(t1.c0)))OR(t1.c0))) NOT BETWEEN (t1.c0) AND (((t1.c0)GLOB(t1.c0)))) ASC);
SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS REAL))<<(((t1.c0)LIKE(t1.c0))))) ORDER BY CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN x'b33d' COLLATE RTRIM END DESC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (TYPEOF(DISTINCT t1.c0)) AND (LENGTH(t1.c0))) ASC  NULLS LAST, ((((((t1.c0)OR(t1.c0)))OR(t1.c0))) NOT BETWEEN (t1.c0) AND (((t1.c0)GLOB(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS REAL))<<(((t1.c0)LIKE(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN x'b33d' COLLATE RTRIM END DESC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (TYPEOF(DISTINCT t1.c0)) AND (LENGTH(t1.c0))) ASC  NULLS LAST, ((((((t1.c0)OR(t1.c0)))OR(t1.c0))) NOT BETWEEN (t1.c0) AND (((t1.c0)GLOB(t1.c0)))) ASC);
SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS REAL))<<(((t1.c0)LIKE(t1.c0))))) ORDER BY CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN x'b33d' COLLATE RTRIM END DESC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (TYPEOF(DISTINCT t1.c0)) AND (LENGTH(t1.c0))) ASC  NULLS LAST, ((((((t1.c0)OR(t1.c0)))OR(t1.c0))) NOT BETWEEN (t1.c0) AND (((t1.c0)GLOB(t1.c0)))) ASC;
SELECT ALL COUNT(*) FROM t1, rt0, v0, vt0 WHERE (t1.c0) ORDER BY CASE ((rt0.c0) IS FALSE)  WHEN ((v0.c0) ISNULL) THEN (v0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, rt0, v0, vt0 ORDER BY CASE ((rt0.c0) IS FALSE)  WHEN ((v0.c0) ISNULL) THEN (v0.c0 IN ()) END ASC);
SELECT ALL COUNT(*) FROM t1, rt0, v0, vt0 WHERE (t1.c0) ORDER BY CASE ((rt0.c0) IS FALSE)  WHEN ((v0.c0) ISNULL) THEN (v0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, rt0, v0, vt0 ORDER BY CASE ((rt0.c0) IS FALSE)  WHEN ((v0.c0) ISNULL) THEN (v0.c0 IN ()) END ASC);
SELECT ALL COUNT(*) FROM t1, rt0, v0, vt0 WHERE (t1.c0) ORDER BY CASE ((rt0.c0) IS FALSE)  WHEN ((v0.c0) ISNULL) THEN (v0.c0 IN ()) END ASC;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS REAL))) AND (((((vt0.c0))<=((vt0.c0))))))) ORDER BY TYPEOF(DISTINCT ((vt0.c0) ISNULL)) ASC  NULLS LAST, NULL ASC  NULLS LAST, CAST(LIKELY(DISTINCT v0.c0) AS REAL);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS REAL))) AND (((((vt0.c0))<=((vt0.c0))))))) IS TRUE)  as count FROM v0, vt0 ORDER BY TYPEOF(DISTINCT ((vt0.c0) ISNULL)) ASC  NULLS LAST, NULL ASC  NULLS LAST, CAST(LIKELY(DISTINCT v0.c0) AS REAL));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS REAL))) AND (((((vt0.c0))<=((vt0.c0))))))) ORDER BY TYPEOF(DISTINCT ((vt0.c0) ISNULL)) ASC  NULLS LAST, NULL ASC  NULLS LAST, CAST(LIKELY(DISTINCT v0.c0) AS REAL);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS REAL))) AND (((((vt0.c0))<=((vt0.c0))))))) IS TRUE)  as count FROM v0, vt0 ORDER BY TYPEOF(DISTINCT ((vt0.c0) ISNULL)) ASC  NULLS LAST, NULL ASC  NULLS LAST, CAST(LIKELY(DISTINCT v0.c0) AS REAL));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS REAL))) AND (((((vt0.c0))<=((vt0.c0))))))) ORDER BY TYPEOF(DISTINCT ((vt0.c0) ISNULL)) ASC  NULLS LAST, NULL ASC  NULLS LAST, CAST(LIKELY(DISTINCT v0.c0) AS REAL);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, v0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t1, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, v0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t1, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, v0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE);
SELECT * FROM t1, rt0 WHERE (CASE '931445527'  WHEN ((rt0.c2)IS(0.4594679155667808)) THEN ((rt0.c1) ISNULL) WHEN ((t1.c0)/(t1.c0)) THEN ((((t1.c0)AND(rt0.c0)))AND(rt0.c2)) WHEN (((rt0.c1, rt0.c0, x'')) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((NULL, rt0.c1, rt0.c1))) THEN (((t1.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((t1.c0, rt0.c2, rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '931445527'  WHEN ((rt0.c2)IS(0.4594679155667808)) THEN ((rt0.c1) ISNULL) WHEN ((t1.c0)/(t1.c0)) THEN ((((t1.c0)AND(rt0.c0)))AND(rt0.c2)) WHEN (((rt0.c1, rt0.c0, x'')) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((NULL, rt0.c1, rt0.c1))) THEN (((t1.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((t1.c0, rt0.c2, rt0.c1))) END) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (CASE '931445527'  WHEN ((rt0.c2)IS(0.4594679155667808)) THEN ((rt0.c1) ISNULL) WHEN ((t1.c0)/(t1.c0)) THEN ((((t1.c0)AND(rt0.c0)))AND(rt0.c2)) WHEN (((rt0.c1, rt0.c0, x'')) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((NULL, rt0.c1, rt0.c1))) THEN (((t1.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((t1.c0, rt0.c2, rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '931445527'  WHEN ((rt0.c2)IS(0.4594679155667808)) THEN ((rt0.c1) ISNULL) WHEN ((t1.c0)/(t1.c0)) THEN ((((t1.c0)AND(rt0.c0)))AND(rt0.c2)) WHEN (((rt0.c1, rt0.c0, x'')) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((NULL, rt0.c1, rt0.c1))) THEN (((t1.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((t1.c0, rt0.c2, rt0.c1))) END) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (CASE '931445527'  WHEN ((rt0.c2)IS(0.4594679155667808)) THEN ((rt0.c1) ISNULL) WHEN ((t1.c0)/(t1.c0)) THEN ((((t1.c0)AND(rt0.c0)))AND(rt0.c2)) WHEN (((rt0.c1, rt0.c0, x'')) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((NULL, rt0.c1, rt0.c1))) THEN (((t1.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((t1.c0, rt0.c2, rt0.c1))) END);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON LOWER(DISTINCT rt0.c1 COLLATE RTRIM) CROSS JOIN v0 ON ((((vt0.c0) IS FALSE)) IS FALSE) WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c0) AND ('665473773'))))) ORDER BY ((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))IS(rt0.c0 COLLATE NOCASE)) ASC, (+ (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) ASC, (((vt0.c0, rt0.c0, vt0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)), (((rt0.c2))>=((' 6-pEd?'))), rt0.c0 COLLATE RTRIM)) AND ((rt0.c0 COLLATE RTRIM, CAST(v0.c0 AS REAL), ((x'') BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) NOT BETWEEN (rt0.c0) AND ('665473773'))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON LOWER(DISTINCT rt0.c1 COLLATE RTRIM) CROSS JOIN v0 ON ((((vt0.c0) IS FALSE)) IS FALSE) ORDER BY ((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))IS(rt0.c0 COLLATE NOCASE)) ASC, (+ (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) ASC, (((vt0.c0, rt0.c0, vt0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)), (((rt0.c2))>=((' 6-pEd?'))), rt0.c0 COLLATE RTRIM)) AND ((rt0.c0 COLLATE RTRIM, CAST(v0.c0 AS REAL), ((x'') BETWEEN (rt0.c1) AND (rt0.c1))))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON LOWER(DISTINCT rt0.c1 COLLATE RTRIM) CROSS JOIN v0 ON ((((vt0.c0) IS FALSE)) IS FALSE) WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c0) AND ('665473773'))))) ORDER BY ((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))IS(rt0.c0 COLLATE NOCASE)) ASC, (+ (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) ASC, (((vt0.c0, rt0.c0, vt0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)), (((rt0.c2))>=((' 6-pEd?'))), rt0.c0 COLLATE RTRIM)) AND ((rt0.c0 COLLATE RTRIM, CAST(v0.c0 AS REAL), ((x'') BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) NOT BETWEEN (rt0.c0) AND ('665473773'))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON LOWER(DISTINCT rt0.c1 COLLATE RTRIM) CROSS JOIN v0 ON ((((vt0.c0) IS FALSE)) IS FALSE) ORDER BY ((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))IS(rt0.c0 COLLATE NOCASE)) ASC, (+ (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) ASC, (((vt0.c0, rt0.c0, vt0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)), (((rt0.c2))>=((' 6-pEd?'))), rt0.c0 COLLATE RTRIM)) AND ((rt0.c0 COLLATE RTRIM, CAST(v0.c0 AS REAL), ((x'') BETWEEN (rt0.c1) AND (rt0.c1))))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON LOWER(DISTINCT rt0.c1 COLLATE RTRIM) CROSS JOIN v0 ON ((((vt0.c0) IS FALSE)) IS FALSE) WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c0) AND ('665473773'))))) ORDER BY ((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))IS(rt0.c0 COLLATE NOCASE)) ASC, (+ (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) ASC, (((vt0.c0, rt0.c0, vt0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)), (((rt0.c2))>=((' 6-pEd?'))), rt0.c0 COLLATE RTRIM)) AND ((rt0.c0 COLLATE RTRIM, CAST(v0.c0 AS REAL), ((x'') BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT * FROM rt0, t1 WHERE (((~ (1.9797369E7)) IN ())) ORDER BY '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (1.9797369E7)) IN ())) IS TRUE)  as count FROM rt0, t1 ORDER BY '' DESC  NULLS FIRST);
SELECT * FROM rt0, t1 WHERE (((~ (1.9797369E7)) IN ())) ORDER BY '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (1.9797369E7)) IN ())) IS TRUE)  as count FROM rt0, t1 ORDER BY '' DESC  NULLS FIRST);
SELECT * FROM rt0, t1 WHERE (((~ (1.9797369E7)) IN ())) ORDER BY '' DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 INDEXED BY i8, t1 WHERE (CASE (+ (rt0.c2))  WHEN ((((rt0.c1)OR(rt0.c1)))AND(t1.c0)) THEN ((rt0.c2)>(rt0.c1)) WHEN CASE WHEN NULL THEN rt0.c1 END THEN ((rt0.c1)/(rt0.c2)) WHEN (t1.c0 IN ()) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt0.c2))  WHEN ((((rt0.c1)OR(rt0.c1)))AND(t1.c0)) THEN ((rt0.c2)>(rt0.c1)) WHEN CASE WHEN NULL THEN rt0.c1 END THEN ((rt0.c1)/(rt0.c2)) WHEN (t1.c0 IN ()) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0 INDEXED BY i8, t1);
SELECT COUNT(*) FROM rt0 INDEXED BY i8, t1 WHERE (CASE (+ (rt0.c2))  WHEN ((((rt0.c1)OR(rt0.c1)))AND(t1.c0)) THEN ((rt0.c2)>(rt0.c1)) WHEN CASE WHEN NULL THEN rt0.c1 END THEN ((rt0.c1)/(rt0.c2)) WHEN (t1.c0 IN ()) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt0.c2))  WHEN ((((rt0.c1)OR(rt0.c1)))AND(t1.c0)) THEN ((rt0.c2)>(rt0.c1)) WHEN CASE WHEN NULL THEN rt0.c1 END THEN ((rt0.c1)/(rt0.c2)) WHEN (t1.c0 IN ()) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0 INDEXED BY i8, t1);
SELECT COUNT(*) FROM t1, rt0, v0 WHERE ('Y쏽!漵/Tm厄V');
SELECT SUM(count) FROM (SELECT ALL (('Y쏽!漵/Tm厄V') IS TRUE)  as count FROM t1, rt0, v0);
SELECT COUNT(*) FROM t1, rt0, v0 WHERE ('Y쏽!漵/Tm厄V');
SELECT SUM(count) FROM (SELECT ALL (('Y쏽!漵/Tm厄V') IS TRUE)  as count FROM t1, rt0, v0);
SELECT COUNT(*) FROM t1, rt0, v0 WHERE ('Y쏽!漵/Tm厄V');
SELECT COUNT(*) FROM t1, vt0 WHERE (TRIM(x'da99'));
SELECT SUM(count) FROM (SELECT ((TRIM(x'da99')) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (TRIM(x'da99'));
SELECT SUM(count) FROM (SELECT ((TRIM(x'da99')) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (TRIM(x'da99'));
SELECT * FROM rt0, vt0, v0 WHERE (CASE rt0.c0  WHEN (- (rt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN ((rt0.c1)%(rt0.c2)) THEN '2Kqc\n' WHEN ((v0.c0)>(v0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN (- (rt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN ((rt0.c1)%(rt0.c2)) THEN '2Kqc\n' WHEN ((v0.c0)>(v0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (CASE rt0.c0  WHEN (- (rt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN ((rt0.c1)%(rt0.c2)) THEN '2Kqc\n' WHEN ((v0.c0)>(v0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN (- (rt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN ((rt0.c1)%(rt0.c2)) THEN '2Kqc\n' WHEN ((v0.c0)>(v0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (CASE rt0.c0  WHEN (- (rt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN ((rt0.c1)%(rt0.c2)) THEN '2Kqc\n' WHEN ((v0.c0)>(v0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) END);
SELECT * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2)||(rt0.c0)), ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)), CASE NULL  WHEN rt0.c0 THEN '-512153356' WHEN 0X4ba80e7b THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 END))!=((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)), (((rt0.c0))>((rt0.c1))), (~ (0.894388520949651))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)||(rt0.c0)), ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)), CASE NULL  WHEN rt0.c0 THEN '-512153356' WHEN 0X4ba80e7b THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 END))<>((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)), (((rt0.c0))>((rt0.c1))), (~ (0.894388520949651)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2)||(rt0.c0)), ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)), CASE NULL  WHEN rt0.c0 THEN '-512153356' WHEN 0X4ba80e7b THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 END))!=((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)), (((rt0.c0))>((rt0.c1))), (~ (0.894388520949651))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)||(rt0.c0)), ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)), CASE NULL  WHEN rt0.c0 THEN '-512153356' WHEN 0X4ba80e7b THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 END))<>((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)), (((rt0.c0))>((rt0.c1))), (~ (0.894388520949651)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2)||(rt0.c0)), ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)), CASE NULL  WHEN rt0.c0 THEN '-512153356' WHEN 0X4ba80e7b THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 END))!=((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)), (((rt0.c0))>((rt0.c1))), (~ (0.894388520949651))))));
SELECT * FROM v0, rt0 INNER JOIN vt0 ON ((((TYPEOF(DISTINCT v0.c0))AND(((t1.c0) NOT NULL))))OR(((t1.c0) NOTNULL))) CROSS JOIN t1 ON LIKELY(DISTINCT (NOT (t1.c0))) WHERE (rt0.c2) ORDER BY (((vt0.c0)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))) AND ((((v0.c0)=(x''))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON ((((TYPEOF(DISTINCT v0.c0))AND(((t1.c0) NOT NULL))))OR(((t1.c0) NOTNULL))) CROSS JOIN t1 ON LIKELY(DISTINCT (NOT (t1.c0))) ORDER BY (((vt0.c0)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))) AND ((((v0.c0)==(x''))))) ASC  NULLS FIRST);
SELECT * FROM v0, rt0 INNER JOIN vt0 ON ((((TYPEOF(DISTINCT v0.c0))AND(((t1.c0) NOT NULL))))OR(((t1.c0) NOTNULL))) CROSS JOIN t1 ON LIKELY(DISTINCT (NOT (t1.c0))) WHERE (rt0.c2) ORDER BY (((vt0.c0)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))) AND ((((v0.c0)=(x''))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON ((((TYPEOF(DISTINCT v0.c0))AND(((t1.c0) NOT NULL))))OR(((t1.c0) NOTNULL))) CROSS JOIN t1 ON LIKELY(DISTINCT (NOT (t1.c0))) ORDER BY (((vt0.c0)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))) AND ((((v0.c0)==(x''))))) ASC  NULLS FIRST);
SELECT * FROM v0, rt0 INNER JOIN vt0 ON ((((TYPEOF(DISTINCT v0.c0))AND(((t1.c0) NOT NULL))))OR(((t1.c0) NOTNULL))) CROSS JOIN t1 ON LIKELY(DISTINCT (NOT (t1.c0))) WHERE (rt0.c2) ORDER BY (((vt0.c0)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))) AND ((((v0.c0)=(x''))))) ASC  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN v0 ON ((COALESCE(DISTINCT rt0.c1, t1.c0))-((((rt0.c0, rt0.c1, rt0.c1))<>((t1.c0, v0.c0, v0.c0))))) LEFT OUTER JOIN t1 ON (~ (v0.c0)) COLLATE BINARY WHERE (ABS(DISTINCT ((((((((rt0.c1)AND(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c0)))) ORDER BY ((((((((CAST(v0.c0 AS INTEGER))AND(-1e500 COLLATE NOCASE)))AND((- (rt0.c0)))))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c0)AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((((((((rt0.c1)AND(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((COALESCE(DISTINCT rt0.c1, t1.c0))-((((rt0.c0, rt0.c1, rt0.c1))<>((t1.c0, v0.c0, v0.c0))))) LEFT OUTER JOIN t1 ON (~ (v0.c0)) COLLATE BINARY ORDER BY ((((((((CAST(v0.c0 AS INTEGER))AND(-1e500 COLLATE NOCASE)))AND((- (rt0.c0)))))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c0)AND(rt0.c0)))));
SELECT * FROM rt0 INNER JOIN v0 ON ((COALESCE(DISTINCT rt0.c1, t1.c0))-((((rt0.c0, rt0.c1, rt0.c1))<>((t1.c0, v0.c0, v0.c0))))) LEFT OUTER JOIN t1 ON (~ (v0.c0)) COLLATE BINARY WHERE (ABS(DISTINCT ((((((((rt0.c1)AND(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c0)))) ORDER BY ((((((((CAST(v0.c0 AS INTEGER))AND(-1e500 COLLATE NOCASE)))AND((- (rt0.c0)))))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c0)AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((((((((rt0.c1)AND(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((COALESCE(DISTINCT rt0.c1, t1.c0))-((((rt0.c0, rt0.c1, rt0.c1))<>((t1.c0, v0.c0, v0.c0))))) LEFT OUTER JOIN t1 ON (~ (v0.c0)) COLLATE BINARY ORDER BY ((((((((CAST(v0.c0 AS INTEGER))AND(-1e500 COLLATE NOCASE)))AND((- (rt0.c0)))))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c0)AND(rt0.c0)))));
SELECT * FROM rt0 INNER JOIN v0 ON ((COALESCE(DISTINCT rt0.c1, t1.c0))-((((rt0.c0, rt0.c1, rt0.c1))<>((t1.c0, v0.c0, v0.c0))))) LEFT OUTER JOIN t1 ON (~ (v0.c0)) COLLATE BINARY WHERE (ABS(DISTINCT ((((((((rt0.c1)AND(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c0)))) ORDER BY ((((((((CAST(v0.c0 AS INTEGER))AND(-1e500 COLLATE NOCASE)))AND((- (rt0.c0)))))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c0)AND(rt0.c0))));
SELECT * FROM rt0, t1 CROSS JOIN v0 ON (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ((((('1978058248')OR(rt0.c2)))AND(rt0.c0)))) WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END))) ORDER BY (rt0.c1 IN (((rt0.c2) BETWEEN (t1.c0) AND (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN v0 ON (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ((((('1978058248')OR(rt0.c2)))AND(rt0.c0)))) ORDER BY (rt0.c1 IN (((rt0.c2) BETWEEN (t1.c0) AND (v0.c0))))  NULLS LAST);
SELECT * FROM rt0, t1 CROSS JOIN v0 ON (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ((((('1978058248')OR(rt0.c2)))AND(rt0.c0)))) WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END))) ORDER BY (rt0.c1 IN (((rt0.c2) BETWEEN (t1.c0) AND (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN v0 ON (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ((((('1978058248')OR(rt0.c2)))AND(rt0.c0)))) ORDER BY (rt0.c1 IN (((rt0.c2) BETWEEN (t1.c0) AND (v0.c0))))  NULLS LAST);
SELECT * FROM rt0, t1 CROSS JOIN v0 ON (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ((((('1978058248')OR(rt0.c2)))AND(rt0.c0)))) WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END))) ORDER BY (rt0.c1 IN (((rt0.c2) BETWEEN (t1.c0) AND (v0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN v0.c0 END AS NUMERIC) RIGHT OUTER JOIN t1 ON CASE WHEN (((t1.c0, vt0.c0, v0.c0))>((v0.c0, vt0.c0, vt0.c0))) THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END WHERE (CAST((NOT (t1.c0)) AS BLOB)) ORDER BY ABS(DISTINCT CASE WHEN t1.c0 THEN v0.c0 ELSE t1.c0 END)  NULLS LAST, ((t1.c0)AND(NULL)) COLLATE RTRIM  NULLS LAST, IFNULL(vt0.c0, (vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t1.c0)) AS BLOB)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN v0.c0 END AS NUMERIC) RIGHT OUTER JOIN t1 ON CASE WHEN (((t1.c0, vt0.c0, v0.c0))>((v0.c0, vt0.c0, vt0.c0))) THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END ORDER BY ABS(DISTINCT CASE WHEN t1.c0 THEN v0.c0 ELSE t1.c0 END)  NULLS LAST, ((t1.c0)AND(NULL)) COLLATE RTRIM  NULLS LAST, IFNULL(vt0.c0, (vt0.c0 IN ())));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN v0.c0 END AS NUMERIC) RIGHT OUTER JOIN t1 ON CASE WHEN (((t1.c0, vt0.c0, v0.c0))>((v0.c0, vt0.c0, vt0.c0))) THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END WHERE (CAST((NOT (t1.c0)) AS BLOB)) ORDER BY ABS(DISTINCT CASE WHEN t1.c0 THEN v0.c0 ELSE t1.c0 END)  NULLS LAST, ((t1.c0)AND(NULL)) COLLATE RTRIM  NULLS LAST, IFNULL(vt0.c0, (vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t1.c0)) AS BLOB)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN v0.c0 END AS NUMERIC) RIGHT OUTER JOIN t1 ON CASE WHEN (((t1.c0, vt0.c0, v0.c0))>((v0.c0, vt0.c0, vt0.c0))) THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END ORDER BY ABS(DISTINCT CASE WHEN t1.c0 THEN v0.c0 ELSE t1.c0 END)  NULLS LAST, ((t1.c0)AND(NULL)) COLLATE RTRIM  NULLS LAST, IFNULL(vt0.c0, (vt0.c0 IN ())));
SELECT ALL * FROM t1, vt0, rt0 WHERE ((+ (x'')));
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL * FROM t1, vt0, rt0 WHERE ((+ (x'')));
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL * FROM t1, vt0, rt0 WHERE ((+ (x'')));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t1 ON CASE WHEN (+ (t1.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN t1.c0 ELSE t1.c0 END END WHERE (((CASE WHEN x'' THEN v0.c0 ELSE v0.c0 END) BETWEEN ((((v0.c0))>((v0.c0)))) AND (v0.c0))) ORDER BY ((t1.c0 COLLATE NOCASE) BETWEEN (((((t1.c0)OR(t1.c0)))AND(v0.c0))) AND (CASE WHEN v0.c0 THEN t1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN x'' THEN v0.c0 ELSE v0.c0 END) BETWEEN ((((v0.c0))>((v0.c0)))) AND (v0.c0))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t1 ON CASE WHEN (+ (t1.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN t1.c0 ELSE t1.c0 END END ORDER BY ((t1.c0 COLLATE NOCASE) BETWEEN (((((t1.c0)OR(t1.c0)))AND(v0.c0))) AND (CASE WHEN v0.c0 THEN t1.c0 END)) DESC);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t1 ON CASE WHEN (+ (t1.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN t1.c0 ELSE t1.c0 END END WHERE (((CASE WHEN x'' THEN v0.c0 ELSE v0.c0 END) BETWEEN ((((v0.c0))>((v0.c0)))) AND (v0.c0))) ORDER BY ((t1.c0 COLLATE NOCASE) BETWEEN (((((t1.c0)OR(t1.c0)))AND(v0.c0))) AND (CASE WHEN v0.c0 THEN t1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN x'' THEN v0.c0 ELSE v0.c0 END) BETWEEN ((((v0.c0))>((v0.c0)))) AND (v0.c0))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t1 ON CASE WHEN (+ (t1.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN t1.c0 ELSE t1.c0 END END ORDER BY ((t1.c0 COLLATE NOCASE) BETWEEN (((((t1.c0)OR(t1.c0)))AND(v0.c0))) AND (CASE WHEN v0.c0 THEN t1.c0 END)) DESC);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t1 ON CASE WHEN (+ (t1.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN t1.c0 ELSE t1.c0 END END WHERE (((CASE WHEN x'' THEN v0.c0 ELSE v0.c0 END) BETWEEN ((((v0.c0))>((v0.c0)))) AND (v0.c0))) ORDER BY ((t1.c0 COLLATE NOCASE) BETWEEN (((((t1.c0)OR(t1.c0)))AND(v0.c0))) AND (CASE WHEN v0.c0 THEN t1.c0 END)) DESC;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 LEFT OUTER JOIN t1 ON (((((t1.c0) NOT NULL), ((rt0.c1)!=('-795744162')), ((0Xffffffff95b36514)OR(rt0.c0))))<(((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), 0x4ae33739, ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) WHERE (((((t1.c0)<(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, rt0, vt0 LEFT OUTER JOIN t1 ON (((((t1.c0) NOT NULL), ((rt0.c1)<>('-795744162')), ((0xffffffff95b36514)OR(rt0.c0))))<(((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), 0X4ae33739, ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 LEFT OUTER JOIN t1 ON (((((t1.c0) NOT NULL), ((rt0.c1)!=('-795744162')), ((0Xffffffff95b36514)OR(rt0.c0))))<(((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), 0x4ae33739, ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) WHERE (((((t1.c0)<(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, rt0, vt0 LEFT OUTER JOIN t1 ON (((((t1.c0) NOT NULL), ((rt0.c1)<>('-795744162')), ((0xffffffff95b36514)OR(rt0.c0))))<(((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), 0X4ae33739, ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 LEFT OUTER JOIN t1 ON (((((t1.c0) NOT NULL), ((rt0.c1)!=('-795744162')), ((0Xffffffff95b36514)OR(rt0.c0))))<(((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), 0x4ae33739, ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) WHERE (((((t1.c0)<(v0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, t1, v0 INDEXED BY i8 WHERE (x'') ORDER BY CASE rt0.c2  WHEN rt0.c1 THEN t1.c0 ELSE 0Xfffffffff5c5dba2 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t1, v0 INDEXED BY i8 ORDER BY CASE rt0.c2  WHEN rt0.c1 THEN t1.c0 ELSE 0xfffffffff5c5dba2 END COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, v0 INDEXED BY i8 WHERE (x'') ORDER BY CASE rt0.c2  WHEN rt0.c1 THEN t1.c0 ELSE 0Xfffffffff5c5dba2 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t1, v0 INDEXED BY i8 ORDER BY CASE rt0.c2  WHEN rt0.c1 THEN t1.c0 ELSE 0xfffffffff5c5dba2 END COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0, t1 WHERE (CAST(((((0X1b546012)AND(rt0.c2)))AND(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((0x1b546012)AND(rt0.c2)))AND(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0, vt0, rt0, t1);
SELECT ALL * FROM v0, vt0, rt0, t1 WHERE (CAST(((((0X1b546012)AND(rt0.c2)))AND(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((0x1b546012)AND(rt0.c2)))AND(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0, vt0, rt0, t1);
SELECT ALL * FROM v0, vt0, rt0, t1 WHERE (CAST(((((0X1b546012)AND(rt0.c2)))AND(v0.c0)) AS REAL));
SELECT ALL * FROM rt0, t1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL * FROM rt0, t1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL * FROM rt0, t1, vt0 WHERE (NULL);
SELECT ALL * FROM t1, v0 WHERE (((((((NULL) NOT BETWEEN (v0.c0) AND (t1.c0)))AND(((t1.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)<(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL) NOT BETWEEN (v0.c0) AND (t1.c0)))AND(((t1.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)<(t1.c0))))) IS TRUE)  as count FROM t1, v0);
SELECT ALL * FROM t1, v0 WHERE (((((((NULL) NOT BETWEEN (v0.c0) AND (t1.c0)))AND(((t1.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)<(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL) NOT BETWEEN (v0.c0) AND (t1.c0)))AND(((t1.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)<(t1.c0))))) IS TRUE)  as count FROM t1, v0);
SELECT ALL * FROM t1, v0 WHERE (((((((NULL) NOT BETWEEN (v0.c0) AND (t1.c0)))AND(((t1.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)<(t1.c0)))));
SELECT COUNT(*) FROM rt0, v0, t1 WHERE (((t1.c0 COLLATE NOCASE)||(((rt0.c0)/('1425972217')))));
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE NOCASE)||(((rt0.c0)/('1425972217'))))) IS TRUE)  as count FROM rt0, v0, t1);
SELECT COUNT(*) FROM rt0, v0, t1 WHERE (((t1.c0 COLLATE NOCASE)||(((rt0.c0)/('1425972217')))));
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE NOCASE)||(((rt0.c0)/('1425972217'))))) IS TRUE)  as count FROM rt0, v0, t1);
SELECT COUNT(*) FROM rt0, v0, t1 WHERE (((t1.c0 COLLATE NOCASE)||(((rt0.c0)/('1425972217')))));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(CAST(vt0.c0 AS REAL))))AND(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(load_extension(rt0.c2))))AND(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(CAST(vt0.c0 AS REAL))))AND(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(load_extension(rt0.c2))))AND(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(CAST(vt0.c0 AS REAL))))AND(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(load_extension(rt0.c2))))AND(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(CAST(vt0.c0 AS REAL))))AND(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(load_extension(rt0.c2))))AND(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) END);
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))  WHEN x'' THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) ORDER BY (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND(t1.c0));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))  WHEN x'' THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND(t1.c0)));
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))  WHEN x'' THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) ORDER BY (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND(t1.c0));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))  WHEN x'' THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND(t1.c0)));
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))  WHEN x'' THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) ORDER BY (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND(t1.c0));
SELECT ALL * FROM vt0, v0 WHERE (x'b928cb33') ORDER BY CAST(vt0.c0 COLLATE BINARY AS BLOB), CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((x'b928cb33') IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS BLOB), CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM ASC);
SELECT ALL * FROM vt0, v0 WHERE (x'b928cb33') ORDER BY CAST(vt0.c0 COLLATE BINARY AS BLOB), CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((x'b928cb33') IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS BLOB), CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM ASC);
SELECT ALL * FROM vt0, v0 WHERE (x'b928cb33') ORDER BY CAST(vt0.c0 COLLATE BINARY AS BLOB), CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM ASC;
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON CAST(NULL AS BLOB) WHERE (((((rt0.c2)<>(rt0.c2)))>>(LIKELY(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<>(rt0.c2)))>>(LIKELY(rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON CAST(NULL AS BLOB));
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON CAST(NULL AS BLOB) WHERE (((((rt0.c2)<>(rt0.c2)))>>(LIKELY(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<>(rt0.c2)))>>(LIKELY(rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON CAST(NULL AS BLOB));
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON CAST(NULL AS BLOB) WHERE (((((rt0.c2)<>(rt0.c2)))>>(LIKELY(rt0.c0))));
SELECT * FROM rt0, v0 WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c2 COLLATE BINARY);
SELECT COUNT(*) FROM t1, vt0, v0, rt0 INDEXED BY i83 WHERE (LIKELY('')) ORDER BY 0.5535149443241408;
SELECT SUM(count) FROM (SELECT ((LIKELY('')) IS TRUE)  as count FROM t1, vt0, v0, rt0 INDEXED BY i83 ORDER BY 0.5535149443241408);
SELECT COUNT(*) FROM t1, vt0, v0, rt0 INDEXED BY i83 WHERE (LIKELY('')) ORDER BY 0.5535149443241408;
SELECT SUM(count) FROM (SELECT ((LIKELY('')) IS TRUE)  as count FROM t1, vt0, v0, rt0 INDEXED BY i83 ORDER BY 0.5535149443241408);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((~ (rt0.c1))) IS FALSE)) ORDER BY (- (((rt0.c1)LIKE(rt0.c0)))) ASC  NULLS LAST, ((((((v0.c0) BETWEEN (rt0.c0) AND (NULL)))AND(((('353083986', v0.c0, rt0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))))))AND(rt0.c1 COLLATE NOCASE))  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (((rt0.c1)LIKE(rt0.c0)))) ASC  NULLS LAST, ((((((v0.c0) BETWEEN (rt0.c0) AND (NULL)))AND(((('353083986', v0.c0, rt0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))))))AND(rt0.c1 COLLATE NOCASE))  NULLS LAST, rt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((~ (rt0.c1))) IS FALSE)) ORDER BY (- (((rt0.c1)LIKE(rt0.c0)))) ASC  NULLS LAST, ((((((v0.c0) BETWEEN (rt0.c0) AND (NULL)))AND(((('353083986', v0.c0, rt0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))))))AND(rt0.c1 COLLATE NOCASE))  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (((rt0.c1)LIKE(rt0.c0)))) ASC  NULLS LAST, ((((((v0.c0) BETWEEN (rt0.c0) AND (NULL)))AND(((('353083986', v0.c0, rt0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))))))AND(rt0.c1 COLLATE NOCASE))  NULLS LAST, rt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((~ (rt0.c1))) IS FALSE)) ORDER BY (- (((rt0.c1)LIKE(rt0.c0)))) ASC  NULLS LAST, ((((((v0.c0) BETWEEN (rt0.c0) AND (NULL)))AND(((('353083986', v0.c0, rt0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))))))AND(rt0.c1 COLLATE NOCASE))  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT * FROM v0, rt0, t1 WHERE (CAST(((((((((t1.c0)AND(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)) AS INTEGER)) ORDER BY CAST(((rt0.c1) NOTNULL) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t1.c0)AND(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM v0, rt0, t1 ORDER BY CAST(((rt0.c1) NOTNULL) AS TEXT)  NULLS FIRST);
SELECT * FROM v0, rt0, t1 WHERE (CAST(((((((((t1.c0)AND(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)) AS INTEGER)) ORDER BY CAST(((rt0.c1) NOTNULL) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t1.c0)AND(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM v0, rt0, t1 ORDER BY CAST(((rt0.c1) NOTNULL) AS TEXT)  NULLS FIRST);
SELECT * FROM v0, rt0, t1 WHERE (CAST(((((((((t1.c0)AND(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)) AS INTEGER)) ORDER BY CAST(((rt0.c1) NOTNULL) AS TEXT)  NULLS FIRST;
SELECT * FROM vt0, rt0, t1 WHERE (CAST((rt0.c1 IN ('-1317622457')) AS INTEGER)) ORDER BY ((((rt0.c0)LIKE(rt0.c2))) BETWEEN (((rt0.c1)>=(rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (t1.c0))))  NULLS LAST, ((2087857324) BETWEEN (((t1.c0) NOTNULL)) AND (((rt0.c0) BETWEEN (rt0.c2) AND (t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN ('-1317622457')) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((((rt0.c0)LIKE(rt0.c2))) BETWEEN (((rt0.c1)>=(rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (t1.c0))))  NULLS LAST, ((2087857324) BETWEEN (((t1.c0) NOTNULL)) AND (((rt0.c0) BETWEEN (rt0.c2) AND (t1.c0)))) ASC);
SELECT * FROM vt0, rt0, t1 WHERE (CAST((rt0.c1 IN ('-1317622457')) AS INTEGER)) ORDER BY ((((rt0.c0)LIKE(rt0.c2))) BETWEEN (((rt0.c1)>=(rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (t1.c0))))  NULLS LAST, ((2087857324) BETWEEN (((t1.c0) NOTNULL)) AND (((rt0.c0) BETWEEN (rt0.c2) AND (t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN ('-1317622457')) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((((rt0.c0)LIKE(rt0.c2))) BETWEEN (((rt0.c1)>=(rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (t1.c0))))  NULLS LAST, ((2087857324) BETWEEN (((t1.c0) NOTNULL)) AND (((rt0.c0) BETWEEN (rt0.c2) AND (t1.c0)))) ASC);
SELECT * FROM vt0, rt0, t1 WHERE (CAST((rt0.c1 IN ('-1317622457')) AS INTEGER)) ORDER BY ((((rt0.c0)LIKE(rt0.c2))) BETWEEN (((rt0.c1)>=(rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (t1.c0))))  NULLS LAST, ((2087857324) BETWEEN (((t1.c0) NOTNULL)) AND (((rt0.c0) BETWEEN (rt0.c2) AND (t1.c0)))) ASC;
SELECT ALL * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)!=(((t1.c0)>(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)<>(((t1.c0)>(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)!=(((t1.c0)>(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)<>(((t1.c0)>(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)!=(((t1.c0)>(t1.c0)))));
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) IS TRUE) COLLATE RTRIM WHERE (CASE ((-1907115875)<>(rt0.c2))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) THEN ((rt0.c1) BETWEEN (NULL) AND (vt0.c0)) END) ORDER BY ((x'5090') NOT NULL) COLLATE BINARY  NULLS FIRST, CAST(((rt0.c2)<<(rt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((-1907115875)!=(rt0.c2))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) THEN ((rt0.c1) BETWEEN (NULL) AND (vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) IS TRUE) COLLATE RTRIM ORDER BY ((x'5090') NOT NULL) COLLATE BINARY  NULLS FIRST, CAST(((rt0.c2)<<(rt0.c1)) AS BLOB) ASC);
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) IS TRUE) COLLATE RTRIM WHERE (CASE ((-1907115875)<>(rt0.c2))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) THEN ((rt0.c1) BETWEEN (NULL) AND (vt0.c0)) END) ORDER BY ((x'5090') NOT NULL) COLLATE BINARY  NULLS FIRST, CAST(((rt0.c2)<<(rt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((-1907115875)!=(rt0.c2))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) THEN ((rt0.c1) BETWEEN (NULL) AND (vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) IS TRUE) COLLATE RTRIM ORDER BY ((x'5090') NOT NULL) COLLATE BINARY  NULLS FIRST, CAST(((rt0.c2)<<(rt0.c1)) AS BLOB) ASC);
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) IS TRUE) COLLATE RTRIM WHERE (CASE ((-1907115875)<>(rt0.c2))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) THEN ((rt0.c1) BETWEEN (NULL) AND (vt0.c0)) END) ORDER BY ((x'5090') NOT NULL) COLLATE BINARY  NULLS FIRST, CAST(((rt0.c2)<<(rt0.c1)) AS BLOB) ASC;
SELECT * FROM t1, rt0, v0 INDEXED BY i83 WHERE ((((((('944LK', rt0.c2, rt0.c2, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0, rt0.c2, t1.c0)) AND ((rt0.c1, rt0.c2, 'ΊSZX1o', t1.c0, t1.c0))), v0.c0 COLLATE RTRIM, (NOT (rt0.c2))))<=((CASE WHEN 0.7565228783361172 THEN v0.c0 END, v0.c0, ((rt0.c2)*(rt0.c0)))))) ORDER BY ((rt0.c1) BETWEEN ((((('-491057709')OR(rt0.c0)))OR(rt0.c2))) AND (((rt0.c0)GLOB(t1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('944LK', rt0.c2, rt0.c2, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0, rt0.c2, t1.c0)) AND ((rt0.c1, rt0.c2, 'ΊSZX1o', t1.c0, t1.c0))), v0.c0 COLLATE RTRIM, (NOT (rt0.c2))))<=((CASE WHEN 0.7565228783361172 THEN v0.c0 END, v0.c0, ((rt0.c2)*(rt0.c0)))))) IS TRUE)  as count FROM t1, rt0, v0 INDEXED BY i83 ORDER BY ((rt0.c1) BETWEEN ((((('-491057709')OR(rt0.c0)))OR(rt0.c2))) AND (((rt0.c0)GLOB(t1.c0)))) DESC  NULLS LAST);
SELECT * FROM t1, rt0, v0 INDEXED BY i83 WHERE ((((((('944LK', rt0.c2, rt0.c2, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0, rt0.c2, t1.c0)) AND ((rt0.c1, rt0.c2, 'ΊSZX1o', t1.c0, t1.c0))), v0.c0 COLLATE RTRIM, (NOT (rt0.c2))))<=((CASE WHEN 0.7565228783361172 THEN v0.c0 END, v0.c0, ((rt0.c2)*(rt0.c0)))))) ORDER BY ((rt0.c1) BETWEEN ((((('-491057709')OR(rt0.c0)))OR(rt0.c2))) AND (((rt0.c0)GLOB(t1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('944LK', rt0.c2, rt0.c2, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0, rt0.c2, t1.c0)) AND ((rt0.c1, rt0.c2, 'ΊSZX1o', t1.c0, t1.c0))), v0.c0 COLLATE RTRIM, (NOT (rt0.c2))))<=((CASE WHEN 0.7565228783361172 THEN v0.c0 END, v0.c0, ((rt0.c2)*(rt0.c0)))))) IS TRUE)  as count FROM t1, rt0, v0 INDEXED BY i83 ORDER BY ((rt0.c1) BETWEEN ((((('-491057709')OR(rt0.c0)))OR(rt0.c2))) AND (((rt0.c0)GLOB(t1.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 INNER JOIN v0 ON CAST(CAST(NULL AS INTEGER) AS REAL) WHERE (((((((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))AND((~ (v0.c0)))))AND(((rt0.c0)<<(v0.c0)))))OR(((rt0.c1) BETWEEN ('(.') AND (rt0.c1)))))AND(((rt0.c2)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))AND((~ (v0.c0)))))AND(((rt0.c0)<<(v0.c0)))))OR(((rt0.c1) BETWEEN ('(.') AND (rt0.c1)))))AND(((rt0.c2)>(v0.c0))))) IS TRUE)  as count FROM t1, rt0, vt0 INNER JOIN v0 ON CAST(CAST(NULL AS INTEGER) AS REAL));
SELECT ALL COUNT(*) FROM t1, rt0, vt0 INNER JOIN v0 ON CAST(CAST(NULL AS INTEGER) AS REAL) WHERE (((((((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))AND((~ (v0.c0)))))AND(((rt0.c0)<<(v0.c0)))))OR(((rt0.c1) BETWEEN ('(.') AND (rt0.c1)))))AND(((rt0.c2)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))AND((~ (v0.c0)))))AND(((rt0.c0)<<(v0.c0)))))OR(((rt0.c1) BETWEEN ('(.') AND (rt0.c1)))))AND(((rt0.c2)>(v0.c0))))) IS TRUE)  as count FROM t1, rt0, vt0 INNER JOIN v0 ON CAST(CAST(NULL AS INTEGER) AS REAL));
SELECT ALL COUNT(*) FROM t1, rt0, vt0 INNER JOIN v0 ON CAST(CAST(NULL AS INTEGER) AS REAL) WHERE (((((((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))AND((~ (v0.c0)))))AND(((rt0.c0)<<(v0.c0)))))OR(((rt0.c1) BETWEEN ('(.') AND (rt0.c1)))))AND(((rt0.c2)>(v0.c0)))));
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ())) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (-62887976))) ORDER BY ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (-62887976))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ())) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (-62887976))) ORDER BY ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (-62887976))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ())) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (-62887976))) ORDER BY ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM;
SELECT ALL * FROM rt0, v0 WHERE (CAST(((NULL)IS NOT(rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)IS NOT(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST(((NULL)IS NOT(rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)IS NOT(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST(((NULL)IS NOT(rt0.c0)) AS BLOB));
SELECT ALL * FROM v0, t1, vt0 WHERE ((v0.c0 IN (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, t1, vt0);
SELECT ALL * FROM v0, t1, vt0 WHERE ((v0.c0 IN (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, t1, vt0);
SELECT ALL * FROM v0, t1, vt0 WHERE ((v0.c0 IN (v0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE) ORDER BY vt0.c0 ASC, (((~ (0.5325547814714238))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (0xfffffffff231d644)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, (((~ (0.5325547814714238))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (0Xfffffffff231d644)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE) ORDER BY vt0.c0 ASC, (((~ (0.5325547814714238))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (0xfffffffff231d644)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, (((~ (0.5325547814714238))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (0Xfffffffff231d644)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE) ORDER BY vt0.c0 ASC, (((~ (0.5325547814714238))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (0xfffffffff231d644)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)/(rt0.c0)))*(LIKELIHOOD(DISTINCT rt0.c0, 0.12185722005212474)))) ORDER BY ((rt0.c1) IS TRUE) ASC, IFNULL(rt0.c1, rt0.c0) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)/(rt0.c0)))*(LIKELIHOOD(DISTINCT rt0.c0, 0.12185722005212474)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) IS TRUE) ASC, IFNULL(rt0.c1, rt0.c0) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)/(rt0.c0)))*(LIKELIHOOD(DISTINCT rt0.c0, 0.12185722005212474)))) ORDER BY ((rt0.c1) IS TRUE) ASC, IFNULL(rt0.c1, rt0.c0) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)/(rt0.c0)))*(LIKELIHOOD(DISTINCT rt0.c0, 0.12185722005212474)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) IS TRUE) ASC, IFNULL(rt0.c1, rt0.c0) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)/(rt0.c0)))*(LIKELIHOOD(DISTINCT rt0.c0, 0.12185722005212474)))) ORDER BY ((rt0.c1) IS TRUE) ASC, IFNULL(rt0.c1, rt0.c0) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('931445527');
SELECT SUM(count) FROM (SELECT (('931445527') IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('931445527');
SELECT SUM(count) FROM (SELECT (('931445527') IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('931445527');
SELECT ALL COUNT(*) FROM v0 WHERE ((- ((NOT (v0.c0))))) ORDER BY IFNULL(DISTINCT v0.c0, '0.12392640877756078') DESC  NULLS LAST, (- ((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY IFNULL(DISTINCT v0.c0, '0.12392640877756078') DESC  NULLS LAST, (- ((v0.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- ((NOT (v0.c0))))) ORDER BY IFNULL(DISTINCT v0.c0, '0.12392640877756078') DESC  NULLS LAST, (- ((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY IFNULL(DISTINCT v0.c0, '0.12392640877756078') DESC  NULLS LAST, (- ((v0.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- ((NOT (v0.c0))))) ORDER BY IFNULL(DISTINCT v0.c0, '0.12392640877756078') DESC  NULLS LAST, (- ((v0.c0 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c1, '')) NOT BETWEEN ((rt0.c0, x'684b', rt0.c1)) AND ((rt0.c0, '1824087290', rt0.c2))))%((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, '')) NOT BETWEEN ((rt0.c0, x'684b', rt0.c1)) AND ((rt0.c0, '1824087290', rt0.c2))))%((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c1, '')) NOT BETWEEN ((rt0.c0, x'684b', rt0.c1)) AND ((rt0.c0, '1824087290', rt0.c2))))%((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, '')) NOT BETWEEN ((rt0.c0, x'684b', rt0.c1)) AND ((rt0.c0, '1824087290', rt0.c2))))%((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c1, '')) NOT BETWEEN ((rt0.c0, x'684b', rt0.c1)) AND ((rt0.c0, '1824087290', rt0.c2))))%((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT * FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, 'N2QU\n!NJ', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, 'N2QU\n!NJ', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, 'N2QU\n!NJ', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, 'N2QU\n!NJ', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, 'N2QU\n!NJ', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON (((t1.c0)) BETWEEN ((CAST(t1.c0 AS BLOB))) AND ((CASE WHEN x'' THEN rt0.c1 ELSE rt0.c0 END))) LEFT OUTER JOIN rt0 ON ((TYPEOF(vt0.c0)) BETWEEN (((((((((rt0.c1)OR(t1.c0)))AND('')))AND(t1.c0)))AND(vt0.c0))) AND ((NOT (rt0.c0)))) WHERE (((((COALESCE(DISTINCT 1.759909802E9, t1.c0, rt0.c0, rt0.c1))OR(((((vt0.c0)AND(t1.c0)))OR(rt0.c2)))))OR(rt0.c2))) ORDER BY ((CASE rt0.c2  WHEN 0.703814593208161 THEN vt0.c0 ELSE rt0.c1 END)/(CASE WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((COALESCE(DISTINCT 1.759909802E9, t1.c0, rt0.c0, rt0.c1))OR(((((vt0.c0)AND(t1.c0)))OR(rt0.c2)))))OR(rt0.c2))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (((t1.c0)) BETWEEN ((CAST(t1.c0 AS BLOB))) AND ((CASE WHEN x'' THEN rt0.c1 ELSE rt0.c0 END))) LEFT OUTER JOIN rt0 ON ((TYPEOF(vt0.c0)) BETWEEN (((((((((rt0.c1)OR(t1.c0)))AND('')))AND(t1.c0)))AND(vt0.c0))) AND ((NOT (rt0.c0)))) ORDER BY ((CASE rt0.c2  WHEN 0.703814593208161 THEN vt0.c0 ELSE rt0.c1 END)/(CASE WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON (((t1.c0)) BETWEEN ((CAST(t1.c0 AS BLOB))) AND ((CASE WHEN x'' THEN rt0.c1 ELSE rt0.c0 END))) LEFT OUTER JOIN rt0 ON ((TYPEOF(vt0.c0)) BETWEEN (((((((((rt0.c1)OR(t1.c0)))AND('')))AND(t1.c0)))AND(vt0.c0))) AND ((NOT (rt0.c0)))) WHERE (((((COALESCE(DISTINCT 1.759909802E9, t1.c0, rt0.c0, rt0.c1))OR(((((vt0.c0)AND(t1.c0)))OR(rt0.c2)))))OR(rt0.c2))) ORDER BY ((CASE rt0.c2  WHEN 0.703814593208161 THEN vt0.c0 ELSE rt0.c1 END)/(CASE WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((COALESCE(DISTINCT 1.759909802E9, t1.c0, rt0.c0, rt0.c1))OR(((((vt0.c0)AND(t1.c0)))OR(rt0.c2)))))OR(rt0.c2))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (((t1.c0)) BETWEEN ((CAST(t1.c0 AS BLOB))) AND ((CASE WHEN x'' THEN rt0.c1 ELSE rt0.c0 END))) LEFT OUTER JOIN rt0 ON ((TYPEOF(vt0.c0)) BETWEEN (((((((((rt0.c1)OR(t1.c0)))AND('')))AND(t1.c0)))AND(vt0.c0))) AND ((NOT (rt0.c0)))) ORDER BY ((CASE rt0.c2  WHEN 0.703814593208161 THEN vt0.c0 ELSE rt0.c1 END)/(CASE WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON (((t1.c0)) BETWEEN ((CAST(t1.c0 AS BLOB))) AND ((CASE WHEN x'' THEN rt0.c1 ELSE rt0.c0 END))) LEFT OUTER JOIN rt0 ON ((TYPEOF(vt0.c0)) BETWEEN (((((((((rt0.c1)OR(t1.c0)))AND('')))AND(t1.c0)))AND(vt0.c0))) AND ((NOT (rt0.c0)))) WHERE (((((COALESCE(DISTINCT 1.759909802E9, t1.c0, rt0.c0, rt0.c1))OR(((((vt0.c0)AND(t1.c0)))OR(rt0.c2)))))OR(rt0.c2))) ORDER BY ((CASE rt0.c2  WHEN 0.703814593208161 THEN vt0.c0 ELSE rt0.c1 END)/(CASE WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS FIRST;
SELECT * FROM vt0, t1, rt0, v0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))%((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))%((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, t1, rt0, v0);
SELECT * FROM vt0, t1, rt0, v0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))%((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))%((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, t1, rt0, v0);
SELECT * FROM vt0, t1, rt0, v0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))%((rt0.c2 IN ()))));
SELECT * FROM rt0, v0 WHERE (0.6641008346922135) ORDER BY ((rt0.c2) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.6641008346922135) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c2) IS FALSE) ASC);
SELECT * FROM rt0, v0 WHERE (0.6641008346922135) ORDER BY ((rt0.c2) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.6641008346922135) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c2) IS FALSE) ASC);
SELECT * FROM rt0, v0 WHERE (0.6641008346922135) ORDER BY ((rt0.c2) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, v0, t1 WHERE (CAST(((v0.c0)||(v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)||(v0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, v0, t1);
SELECT ALL COUNT(*) FROM vt0, v0, t1 WHERE (CAST(((v0.c0)||(v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)||(v0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, v0, t1);
SELECT ALL COUNT(*) FROM vt0, v0, t1 WHERE (CAST(((v0.c0)||(v0.c0)) AS TEXT));
SELECT * FROM rt0 WHERE (((((((((rt0.c1 COLLATE BINARY)AND(CAST(rt0.c1 AS INTEGER))))AND((((rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c2))<=((rt0.c1, rt0.c1, rt0.c0, NULL, rt0.c2))))))OR((NOT (rt0.c2)))))OR((((rt0.c2))<((rt0.c1)))))) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)IS NOT(rt0.c0)), (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((((x''))!=((rt0.c0))), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))) AND ((rt0.c0, CAST(rt0.c0 AS INTEGER), (+ (x'')))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1 COLLATE BINARY)AND(CAST(rt0.c1 AS INTEGER))))AND((((rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c2))<=((rt0.c1, rt0.c1, rt0.c0, NULL, rt0.c2))))))OR((NOT (rt0.c2)))))OR((((rt0.c2))<((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)IS NOT(rt0.c0)), (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((((x''))<>((rt0.c0))), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))) AND ((rt0.c0, CAST(rt0.c0 AS INTEGER), (+ (x''))))));
SELECT * FROM rt0 WHERE (((((((((rt0.c1 COLLATE BINARY)AND(CAST(rt0.c1 AS INTEGER))))AND((((rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c2))<=((rt0.c1, rt0.c1, rt0.c0, NULL, rt0.c2))))))OR((NOT (rt0.c2)))))OR((((rt0.c2))<((rt0.c1)))))) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)IS NOT(rt0.c0)), (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((((x''))!=((rt0.c0))), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))) AND ((rt0.c0, CAST(rt0.c0 AS INTEGER), (+ (x'')))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1 COLLATE BINARY)AND(CAST(rt0.c1 AS INTEGER))))AND((((rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c2))<=((rt0.c1, rt0.c1, rt0.c0, NULL, rt0.c2))))))OR((NOT (rt0.c2)))))OR((((rt0.c2))<((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)IS NOT(rt0.c0)), (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((((x''))<>((rt0.c0))), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))) AND ((rt0.c0, CAST(rt0.c0 AS INTEGER), (+ (x''))))));
SELECT * FROM rt0 WHERE (((((((((rt0.c1 COLLATE BINARY)AND(CAST(rt0.c1 AS INTEGER))))AND((((rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c2))<=((rt0.c1, rt0.c1, rt0.c0, NULL, rt0.c2))))))OR((NOT (rt0.c2)))))OR((((rt0.c2))<((rt0.c1)))))) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)IS NOT(rt0.c0)), (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((((x''))!=((rt0.c0))), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))) AND ((rt0.c0, CAST(rt0.c0 AS INTEGER), (+ (x'')))));
SELECT COUNT(*) FROM v0 WHERE ((((('-1418001684')*(v0.c0)))LIKE(TRIM(v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((('-1418001684')*(v0.c0)))LIKE(TRIM(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((('-1418001684')*(v0.c0)))LIKE(TRIM(v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((('-1418001684')*(v0.c0)))LIKE(TRIM(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((('-1418001684')*(v0.c0)))LIKE(TRIM(v0.c0, v0.c0))));
SELECT ALL * FROM rt0 WHERE (json_object(x'', ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))) ORDER BY ((rt0.c2)<(rt0.c0)) COLLATE RTRIM COLLATE BINARY, ((rt0.c1 IN ()) IN ())  NULLS FIRST, (- (((rt0.c1) BETWEEN (rt0.c1) AND (1.502645403E9))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_object(x'', ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)<(rt0.c0)) COLLATE RTRIM COLLATE BINARY, ((rt0.c1 IN ()) IN ())  NULLS FIRST, (- (((rt0.c1) BETWEEN (rt0.c1) AND (1.502645403E9))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (json_object(x'', ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))) ORDER BY ((rt0.c2)<(rt0.c0)) COLLATE RTRIM COLLATE BINARY, ((rt0.c1 IN ()) IN ())  NULLS FIRST, (- (((rt0.c1) BETWEEN (rt0.c1) AND (1.502645403E9))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_object(x'', ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)<(rt0.c0)) COLLATE RTRIM COLLATE BINARY, ((rt0.c1 IN ()) IN ())  NULLS FIRST, (- (((rt0.c1) BETWEEN (rt0.c1) AND (1.502645403E9))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0 COLLATE NOCASE)!=(x'')) WHERE ((((((v0.c0)AND(vt0.c0)), ((vt0.c0)IS(v0.c0)), (+ (v0.c0))))>=((((vt0.c0)>=(vt0.c0)), ((v0.c0)>>(vt0.c0)), vt0.c0)))) ORDER BY '';
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(vt0.c0)), ((vt0.c0)IS(v0.c0)), (+ (v0.c0))))>=((((vt0.c0)>=(vt0.c0)), ((v0.c0)>>(vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0 COLLATE NOCASE)<>(x'')) ORDER BY '');
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0 COLLATE NOCASE)!=(x'')) WHERE ((((((v0.c0)AND(vt0.c0)), ((vt0.c0)IS(v0.c0)), (+ (v0.c0))))>=((((vt0.c0)>=(vt0.c0)), ((v0.c0)>>(vt0.c0)), vt0.c0)))) ORDER BY '';
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(vt0.c0)), ((vt0.c0)IS(v0.c0)), (+ (v0.c0))))>=((((vt0.c0)>=(vt0.c0)), ((v0.c0)>>(vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0 COLLATE NOCASE)<>(x'')) ORDER BY '');
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0 COLLATE NOCASE)!=(x'')) WHERE ((((((v0.c0)AND(vt0.c0)), ((vt0.c0)IS(v0.c0)), (+ (v0.c0))))>=((((vt0.c0)>=(vt0.c0)), ((v0.c0)>>(vt0.c0)), vt0.c0)))) ORDER BY '';
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)|(rt0.c0)))/(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)|(rt0.c0)))/(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)|(rt0.c0)))/(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)|(rt0.c0)))/(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)|(rt0.c0)))/(CAST(v0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))OR('210413520')))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))OR('210413520')))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))OR('210413520')))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))OR('210413520')))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))OR('210413520')))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 END)));
SELECT COUNT(*) FROM rt0, v0, t1, vt0 WHERE ((((rt0.c1 IN (rt0.c0))) BETWEEN ((v0.c0 IN ())) AND ((('') NOTNULL)))) ORDER BY (+ (((((((((t1.c0)OR(0.140516110304024)))OR(x'')))AND(0X670466bd)))AND(1.331756033E9)))) DESC, CASE NULL  WHEN ((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(v0.c0)))OR(t1.c0)))OR(rt0.c2)) THEN (~ (rt0.c1)) WHEN (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((vt0.c0, rt0.c1, vt0.c0)) AND (('512358782', rt0.c1, rt0.c0))) THEN ((rt0.c2)<(t1.c0)) WHEN t1.c0 COLLATE NOCASE THEN CAST(rt0.c0 AS NUMERIC) WHEN CAST(vt0.c0 AS BLOB) THEN (((rt0.c0))>((rt0.c0))) WHEN (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN ((vt0.c0)/(rt0.c0)) ELSE vt0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c0))) BETWEEN ((v0.c0 IN ())) AND ((('') NOTNULL)))) IS TRUE)  as count FROM rt0, v0, t1, vt0 ORDER BY (+ (((((((((t1.c0)OR(0.140516110304024)))OR(x'')))AND(0X670466bd)))AND(1.331756033E9)))) DESC, CASE NULL  WHEN ((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(v0.c0)))OR(t1.c0)))OR(rt0.c2)) THEN (~ (rt0.c1)) WHEN (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((vt0.c0, rt0.c1, vt0.c0)) AND (('512358782', rt0.c1, rt0.c0))) THEN ((rt0.c2)<(t1.c0)) WHEN t1.c0 COLLATE NOCASE THEN CAST(rt0.c0 AS NUMERIC) WHEN CAST(vt0.c0 AS BLOB) THEN (((rt0.c0))>((rt0.c0))) WHEN (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN ((vt0.c0)/(rt0.c0)) ELSE vt0.c0 END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, t1, vt0 WHERE ((((rt0.c1 IN (rt0.c0))) BETWEEN ((v0.c0 IN ())) AND ((('') NOTNULL)))) ORDER BY (+ (((((((((t1.c0)OR(0.140516110304024)))OR(x'')))AND(0X670466bd)))AND(1.331756033E9)))) DESC, CASE NULL  WHEN ((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(v0.c0)))OR(t1.c0)))OR(rt0.c2)) THEN (~ (rt0.c1)) WHEN (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((vt0.c0, rt0.c1, vt0.c0)) AND (('512358782', rt0.c1, rt0.c0))) THEN ((rt0.c2)<(t1.c0)) WHEN t1.c0 COLLATE NOCASE THEN CAST(rt0.c0 AS NUMERIC) WHEN CAST(vt0.c0 AS BLOB) THEN (((rt0.c0))>((rt0.c0))) WHEN (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN ((vt0.c0)/(rt0.c0)) ELSE vt0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c0))) BETWEEN ((v0.c0 IN ())) AND ((('') NOTNULL)))) IS TRUE)  as count FROM rt0, v0, t1, vt0 ORDER BY (+ (((((((((t1.c0)OR(0.140516110304024)))OR(x'')))AND(0X670466bd)))AND(1.331756033E9)))) DESC, CASE NULL  WHEN ((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(v0.c0)))OR(t1.c0)))OR(rt0.c2)) THEN (~ (rt0.c1)) WHEN (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((vt0.c0, rt0.c1, vt0.c0)) AND (('512358782', rt0.c1, rt0.c0))) THEN ((rt0.c2)<(t1.c0)) WHEN t1.c0 COLLATE NOCASE THEN CAST(rt0.c0 AS NUMERIC) WHEN CAST(vt0.c0 AS BLOB) THEN (((rt0.c0))>((rt0.c0))) WHEN (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN ((vt0.c0)/(rt0.c0)) ELSE vt0.c0 END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, t1, vt0 WHERE ((((rt0.c1 IN (rt0.c0))) BETWEEN ((v0.c0 IN ())) AND ((('') NOTNULL)))) ORDER BY (+ (((((((((t1.c0)OR(0.140516110304024)))OR(x'')))AND(0X670466bd)))AND(1.331756033E9)))) DESC, CASE NULL  WHEN ((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(v0.c0)))OR(t1.c0)))OR(rt0.c2)) THEN (~ (rt0.c1)) WHEN (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((vt0.c0, rt0.c1, vt0.c0)) AND (('512358782', rt0.c1, rt0.c0))) THEN ((rt0.c2)<(t1.c0)) WHEN t1.c0 COLLATE NOCASE THEN CAST(rt0.c0 AS NUMERIC) WHEN CAST(vt0.c0 AS BLOB) THEN (((rt0.c0))>((rt0.c0))) WHEN (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN ((vt0.c0)/(rt0.c0)) ELSE vt0.c0 END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELIHOOD(((((v0.c0)OR(v0.c0)))OR(v0.c0)), 0.9470732215809617)) ORDER BY (((v0.c0) BETWEEN (v0.c0) AND ('-652445399')) IN ());
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((((v0.c0)OR(v0.c0)))OR(v0.c0)), 0.9470732215809617)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) BETWEEN (v0.c0) AND ('-652445399')) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELIHOOD(((((v0.c0)OR(v0.c0)))OR(v0.c0)), 0.9470732215809617)) ORDER BY (((v0.c0) BETWEEN (v0.c0) AND ('-652445399')) IN ());
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((((v0.c0)OR(v0.c0)))OR(v0.c0)), 0.9470732215809617)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) BETWEEN (v0.c0) AND ('-652445399')) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELIHOOD(((((v0.c0)OR(v0.c0)))OR(v0.c0)), 0.9470732215809617)) ORDER BY (((v0.c0) BETWEEN (v0.c0) AND ('-652445399')) IN ());
SELECT ALL * FROM v0, rt0 INNER JOIN vt0 ON rt0.c0 WHERE ((((rt0.c1))==((((((rt0.c0)OR('-1946822319')))AND(0.2803097218494919))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))=((((((rt0.c0)OR('-1946822319')))AND(0.2803097218494919)))))) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON rt0.c0);
SELECT ALL * FROM v0, rt0 INNER JOIN vt0 ON rt0.c0 WHERE ((((rt0.c1))==((((((rt0.c0)OR('-1946822319')))AND(0.2803097218494919))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))=((((((rt0.c0)OR('-1946822319')))AND(0.2803097218494919)))))) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON rt0.c0);
SELECT ALL * FROM v0, rt0 INNER JOIN vt0 ON rt0.c0 WHERE ((((rt0.c1))==((((((rt0.c0)OR('-1946822319')))AND(0.2803097218494919))))));
SELECT ALL COUNT(*) FROM t1, v0, rt0 WHERE ((rt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t1, v0, rt0);
SELECT ALL COUNT(*) FROM t1, v0, rt0 WHERE ((rt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t1, v0, rt0);
SELECT ALL COUNT(*) FROM t1, v0, rt0 WHERE ((rt0.c0 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM rt0, t1 WHERE (SQLITE_COMPILEOPTION_USED(t1.c0)) ORDER BY (NOT (rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(t1.c0)) IS TRUE)  as count FROM rt0, t1 ORDER BY (NOT (rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1 WHERE (SQLITE_COMPILEOPTION_USED(t1.c0)) ORDER BY (NOT (rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(t1.c0)) IS TRUE)  as count FROM rt0, t1 ORDER BY (NOT (rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1 WHERE (SQLITE_COMPILEOPTION_USED(t1.c0)) ORDER BY (NOT (rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CHANGES());
SELECT COUNT(*) FROM vt0, rt0, v0 NOT INDEXED, t1 WHERE (CAST((v0.c0 IN (rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, v0, t1);
SELECT COUNT(*) FROM vt0, rt0, v0 NOT INDEXED, t1 WHERE (CAST((v0.c0 IN (rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, v0, t1);
SELECT COUNT(*) FROM vt0, rt0, v0 NOT INDEXED, t1 WHERE (CAST((v0.c0 IN (rt0.c0)) AS BLOB));
SELECT * FROM t1, v0, rt0, vt0 WHERE (MAX(((rt0.c1) IS FALSE), NULL)) ORDER BY '499186829'  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) ASC, CASE WHEN t1.c0 THEN ((NULL) ISNULL) WHEN (('19gZR<')OR(v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN ((v0.c0) ISNULL) THEN (rt0.c2 IN (NULL)) ELSE 0Xffffffffe1db7420 END  NULLS LAST, CAST(vt0.c0 AS TEXT) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((MAX(((rt0.c1) IS FALSE), NULL)) IS TRUE)  as count FROM t1, v0, rt0, vt0 ORDER BY '499186829'  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) ASC, CASE WHEN t1.c0 THEN ((NULL) ISNULL) WHEN (('19gZR<')OR(v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN ((v0.c0) ISNULL) THEN (rt0.c2 IN (NULL)) ELSE 0xffffffffe1db7420 END  NULLS LAST, CAST(vt0.c0 AS TEXT) COLLATE RTRIM DESC);
SELECT * FROM t1, v0, rt0, vt0 WHERE (MAX(((rt0.c1) IS FALSE), NULL)) ORDER BY '499186829'  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) ASC, CASE WHEN t1.c0 THEN ((NULL) ISNULL) WHEN (('19gZR<')OR(v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN ((v0.c0) ISNULL) THEN (rt0.c2 IN (NULL)) ELSE 0Xffffffffe1db7420 END  NULLS LAST, CAST(vt0.c0 AS TEXT) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((MAX(((rt0.c1) IS FALSE), NULL)) IS TRUE)  as count FROM t1, v0, rt0, vt0 ORDER BY '499186829'  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) ASC, CASE WHEN t1.c0 THEN ((NULL) ISNULL) WHEN (('19gZR<')OR(v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN ((v0.c0) ISNULL) THEN (rt0.c2 IN (NULL)) ELSE 0xffffffffe1db7420 END  NULLS LAST, CAST(vt0.c0 AS TEXT) COLLATE RTRIM DESC);
SELECT * FROM t1, v0, rt0, vt0 WHERE (MAX(((rt0.c1) IS FALSE), NULL)) ORDER BY '499186829'  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) ASC, CASE WHEN t1.c0 THEN ((NULL) ISNULL) WHEN (('19gZR<')OR(v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN ((v0.c0) ISNULL) THEN (rt0.c2 IN (NULL)) ELSE 0Xffffffffe1db7420 END  NULLS LAST, CAST(vt0.c0 AS TEXT) COLLATE RTRIM DESC;
SELECT * FROM t1 WHERE (CAST(t1.c0 COLLATE BINARY AS TEXT)) ORDER BY ((NULL) BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY ((NULL) BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (CAST(t1.c0 COLLATE BINARY AS TEXT)) ORDER BY ((NULL) BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY ((NULL) BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (CAST(t1.c0 COLLATE BINARY AS TEXT)) ORDER BY ((NULL) BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((~ (((NULL) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((NULL) NOT NULL)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((~ (((NULL) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((NULL) NOT NULL)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((~ (((NULL) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((rt0.c2) NOT BETWEEN ((('2') NOT BETWEEN (rt0.c0) AND (x''))) AND ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN ((('2') NOT BETWEEN (rt0.c0) AND (x''))) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((rt0.c2) NOT BETWEEN ((('2') NOT BETWEEN (rt0.c0) AND (x''))) AND ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN ((('2') NOT BETWEEN (rt0.c0) AND (x''))) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((rt0.c2) NOT BETWEEN ((('2') NOT BETWEEN (rt0.c0) AND (x''))) AND ((~ (rt0.c1)))));
SELECT * FROM rt0, vt0 WHERE ((+ ((- (rt0.c2))))) ORDER BY ('0.8319167465664902' IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ('0.8319167465664902' IN ()) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((+ ((- (rt0.c2))))) ORDER BY ('0.8319167465664902' IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ('0.8319167465664902' IN ()) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((+ ((- (rt0.c2))))) ORDER BY ('0.8319167465664902' IN ()) DESC  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE (0X47cd23d4 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0X47cd23d4 COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (0X47cd23d4 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0X47cd23d4 COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (0X47cd23d4 COLLATE NOCASE);
SELECT * FROM v0, rt0 WHERE (x'7b5b') ORDER BY CASE CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END  WHEN SQLITE_SOURCE_ID() THEN (((rt0.c2))>=((rt0.c2))) WHEN NULL COLLATE BINARY THEN CAST(x'7799' AS BLOB) WHEN ((((((((rt0.c1)OR(v0.c0)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c2)) THEN (((rt0.c1))==((rt0.c0))) WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c1) NOTNULL) WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))) THEN v0.c0 ELSE rt0.c2 COLLATE NOCASE END DESC  NULLS FIRST, CASE WHEN CASE WHEN x'' THEN rt0.c2 END THEN CAST(rt0.c2 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'7b5b') IS TRUE)  as count FROM v0, rt0 ORDER BY CASE CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END  WHEN SQLITE_SOURCE_ID() THEN (((rt0.c2))>=((rt0.c2))) WHEN NULL COLLATE BINARY THEN CAST(x'7799' AS BLOB) WHEN ((((((((rt0.c1)OR(v0.c0)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c2)) THEN (((rt0.c1))=((rt0.c0))) WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c1) NOTNULL) WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))) THEN v0.c0 ELSE rt0.c2 COLLATE NOCASE END DESC  NULLS FIRST, CASE WHEN CASE WHEN x'' THEN rt0.c2 END THEN CAST(rt0.c2 AS REAL) END  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (x'7b5b') ORDER BY CASE CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END  WHEN SQLITE_SOURCE_ID() THEN (((rt0.c2))>=((rt0.c2))) WHEN NULL COLLATE BINARY THEN CAST(x'7799' AS BLOB) WHEN ((((((((rt0.c1)OR(v0.c0)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c2)) THEN (((rt0.c1))==((rt0.c0))) WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c1) NOTNULL) WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))) THEN v0.c0 ELSE rt0.c2 COLLATE NOCASE END DESC  NULLS FIRST, CASE WHEN CASE WHEN x'' THEN rt0.c2 END THEN CAST(rt0.c2 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'7b5b') IS TRUE)  as count FROM v0, rt0 ORDER BY CASE CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END  WHEN SQLITE_SOURCE_ID() THEN (((rt0.c2))>=((rt0.c2))) WHEN NULL COLLATE BINARY THEN CAST(x'7799' AS BLOB) WHEN ((((((((rt0.c1)OR(v0.c0)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c2)) THEN (((rt0.c1))=((rt0.c0))) WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c1) NOTNULL) WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))) THEN v0.c0 ELSE rt0.c2 COLLATE NOCASE END DESC  NULLS FIRST, CASE WHEN CASE WHEN x'' THEN rt0.c2 END THEN CAST(rt0.c2 AS REAL) END  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (x'7b5b') ORDER BY CASE CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END  WHEN SQLITE_SOURCE_ID() THEN (((rt0.c2))>=((rt0.c2))) WHEN NULL COLLATE BINARY THEN CAST(x'7799' AS BLOB) WHEN ((((((((rt0.c1)OR(v0.c0)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c2)) THEN (((rt0.c1))==((rt0.c0))) WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c1) NOTNULL) WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))) THEN v0.c0 ELSE rt0.c2 COLLATE NOCASE END DESC  NULLS FIRST, CASE WHEN CASE WHEN x'' THEN rt0.c2 END THEN CAST(rt0.c2 AS REAL) END  NULLS FIRST;
SELECT COUNT(*) FROM t1 INNER JOIN v0 ON CAST((vt0.c0 IN ()) AS INTEGER) FULL OUTER JOIN rt0 ON CAST(json_extract(vt0.c0, v0.c0) AS REAL) INNER JOIN vt0 ON ((IFNULL(DISTINCT '221882423', v0.c0))==(LIKELY(DISTINCT rt0.c0))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1 INNER JOIN v0 ON CAST((vt0.c0 IN ()) AS INTEGER) FULL OUTER JOIN rt0 ON CAST(json_extract(vt0.c0, v0.c0) AS REAL) INNER JOIN vt0 ON ((IFNULL(DISTINCT '221882423', v0.c0))==(LIKELY(DISTINCT rt0.c0))));
SELECT COUNT(*) FROM t1 INNER JOIN v0 ON CAST((vt0.c0 IN ()) AS INTEGER) FULL OUTER JOIN rt0 ON CAST(json_extract(vt0.c0, v0.c0) AS REAL) INNER JOIN vt0 ON ((IFNULL(DISTINCT '221882423', v0.c0))==(LIKELY(DISTINCT rt0.c0))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1 INNER JOIN v0 ON CAST((vt0.c0 IN ()) AS INTEGER) FULL OUTER JOIN rt0 ON CAST(json_extract(vt0.c0, v0.c0) AS REAL) INNER JOIN vt0 ON ((IFNULL(DISTINCT '221882423', v0.c0))==(LIKELY(DISTINCT rt0.c0))));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN t1 ON CASE (rt0.c2 IN ())  WHEN CAST(rt0.c0 AS REAL) THEN (- (rt0.c0)) ELSE CAST(t1.c0 AS NUMERIC) END WHERE ((((0.8563912097960592 COLLATE NOCASE))>=(((~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.8563912097960592 COLLATE NOCASE))>=(((~ (rt0.c2)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN t1 ON CASE (rt0.c2 IN ())  WHEN CAST(rt0.c0 AS REAL) THEN (- (rt0.c0)) ELSE CAST(t1.c0 AS NUMERIC) END);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN t1 ON CASE (rt0.c2 IN ())  WHEN CAST(rt0.c0 AS REAL) THEN (- (rt0.c0)) ELSE CAST(t1.c0 AS NUMERIC) END WHERE ((((0.8563912097960592 COLLATE NOCASE))>=(((~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.8563912097960592 COLLATE NOCASE))>=(((~ (rt0.c2)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN t1 ON CASE (rt0.c2 IN ())  WHEN CAST(rt0.c0 AS REAL) THEN (- (rt0.c0)) ELSE CAST(t1.c0 AS NUMERIC) END);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN t1 ON CASE (rt0.c2 IN ())  WHEN CAST(rt0.c0 AS REAL) THEN (- (rt0.c0)) ELSE CAST(t1.c0 AS NUMERIC) END WHERE ((((0.8563912097960592 COLLATE NOCASE))>=(((~ (rt0.c2))))));
SELECT ALL * FROM t1, v0 WHERE (((MAX(v0.c0, NULL, v0.c0, t1.c0))>((t1.c0 IN ())))) ORDER BY (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(t1.c0))))<((CAST(t1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((MAX(v0.c0, NULL, v0.c0, t1.c0))>((t1.c0 IN ())))) IS TRUE)  as count FROM t1, v0 ORDER BY (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(t1.c0))))<((CAST(t1.c0 AS INTEGER)))));
SELECT ALL * FROM t1, v0 WHERE (((MAX(v0.c0, NULL, v0.c0, t1.c0))>((t1.c0 IN ())))) ORDER BY (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(t1.c0))))<((CAST(t1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((MAX(v0.c0, NULL, v0.c0, t1.c0))>((t1.c0 IN ())))) IS TRUE)  as count FROM t1, v0 ORDER BY (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(t1.c0))))<((CAST(t1.c0 AS INTEGER)))));
SELECT ALL * FROM t1, v0 WHERE (((MAX(v0.c0, NULL, v0.c0, t1.c0))>((t1.c0 IN ())))) ORDER BY (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(t1.c0))))<((CAST(t1.c0 AS INTEGER))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((((((((((vt0.c0)OR(v0.c0)))AND(x'')))AND(v0.c0)))OR(v0.c0))))=((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((((((((((vt0.c0)OR(v0.c0)))AND(x'')))AND(v0.c0)))OR(v0.c0))))==((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((((((((((vt0.c0)OR(v0.c0)))AND(x'')))AND(v0.c0)))OR(v0.c0))))=((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((((((((((vt0.c0)OR(v0.c0)))AND(x'')))AND(v0.c0)))OR(v0.c0))))==((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((((((((((vt0.c0)OR(v0.c0)))AND(x'')))AND(v0.c0)))OR(v0.c0))))=((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, t1, vt0, rt0 WHERE (CAST(((rt0.c0)GLOB(vt0.c0)) AS REAL)) ORDER BY json_quote('-1517671512');
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)GLOB(vt0.c0)) AS REAL)) IS TRUE)  as count FROM v0, t1, vt0, rt0 ORDER BY json_quote('-1517671512'));
SELECT ALL COUNT(*) FROM v0, t1, vt0, rt0 WHERE (CAST(((rt0.c0)GLOB(vt0.c0)) AS REAL)) ORDER BY json_quote('-1517671512');
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)GLOB(vt0.c0)) AS REAL)) IS TRUE)  as count FROM v0, t1, vt0, rt0 ORDER BY json_quote('-1517671512'));
SELECT ALL COUNT(*) FROM v0, t1, vt0, rt0 WHERE (CAST(((rt0.c0)GLOB(vt0.c0)) AS REAL)) ORDER BY json_quote('-1517671512');
SELECT COUNT(*) FROM t1, vt0 WHERE (((((((((CAST(t1.c0 AS BLOB))OR(0.9057667904955873)))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))OR(((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t1.c0 AS BLOB))OR(0.9057667904955873)))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))OR(((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((((((CAST(t1.c0 AS BLOB))OR(0.9057667904955873)))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))OR(((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t1.c0 AS BLOB))OR(0.9057667904955873)))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))OR(((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((((((CAST(t1.c0 AS BLOB))OR(0.9057667904955873)))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))OR(((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT * FROM t1, rt0 LEFT OUTER JOIN vt0 ON 0.0 RIGHT OUTER JOIN v0 ON TRIM((((v0.c0, vt0.c0, rt0.c1))==((rt0.c2, v0.c0, rt0.c1))), ((NULL) NOT NULL)) WHERE (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))IS(((rt0.c1)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))IS(((rt0.c1)AND(rt0.c2))))) IS TRUE)  as count FROM t1, rt0 LEFT OUTER JOIN vt0 ON 0.0 RIGHT OUTER JOIN v0 ON TRIM((((v0.c0, vt0.c0, rt0.c1))=((rt0.c2, v0.c0, rt0.c1))), ((NULL) NOT NULL)));
SELECT * FROM t1, rt0 LEFT OUTER JOIN vt0 ON 0.0 RIGHT OUTER JOIN v0 ON TRIM((((v0.c0, vt0.c0, rt0.c1))==((rt0.c2, v0.c0, rt0.c1))), ((NULL) NOT NULL)) WHERE (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))IS(((rt0.c1)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))IS(((rt0.c1)AND(rt0.c2))))) IS TRUE)  as count FROM t1, rt0 LEFT OUTER JOIN vt0 ON 0.0 RIGHT OUTER JOIN v0 ON TRIM((((v0.c0, vt0.c0, rt0.c1))=((rt0.c2, v0.c0, rt0.c1))), ((NULL) NOT NULL)));
SELECT * FROM t1, rt0 LEFT OUTER JOIN vt0 ON 0.0 RIGHT OUTER JOIN v0 ON TRIM((((v0.c0, vt0.c0, rt0.c1))==((rt0.c2, v0.c0, rt0.c1))), ((NULL) NOT NULL)) WHERE (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))IS(((rt0.c1)AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))|(QUOTE('[]'))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c0)))|(QUOTE('[]')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))|(QUOTE('[]'))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c0)))|(QUOTE('[]')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))|(QUOTE('[]'))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((t1.c0)GLOB(rt0.c1)) THEN (~ (v0.c0)) ELSE ((rt0.c1) ISNULL) END INNER JOIN t1 ON (~ (rt0.c1)) COLLATE RTRIM WHERE (((t1.c0)IS NOT((((rt0.c0)) BETWEEN ((v0.c0)) AND ((-1.517671512E9))))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)IS NOT((((rt0.c0)) BETWEEN ((v0.c0)) AND ((-1.517671512E9)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((t1.c0)GLOB(rt0.c1)) THEN (~ (v0.c0)) ELSE ((rt0.c1) ISNULL) END INNER JOIN t1 ON (~ (rt0.c1)) COLLATE RTRIM);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((t1.c0)GLOB(rt0.c1)) THEN (~ (v0.c0)) ELSE ((rt0.c1) ISNULL) END INNER JOIN t1 ON (~ (rt0.c1)) COLLATE RTRIM WHERE (((t1.c0)IS NOT((((rt0.c0)) BETWEEN ((v0.c0)) AND ((-1.517671512E9))))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)IS NOT((((rt0.c0)) BETWEEN ((v0.c0)) AND ((-1.517671512E9)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((t1.c0)GLOB(rt0.c1)) THEN (~ (v0.c0)) ELSE ((rt0.c1) ISNULL) END INNER JOIN t1 ON (~ (rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (t1.c0) AND (rt0.c1)))GLOB(((rt0.c1) NOT BETWEEN (rt0.c0) AND (t1.c0)))) LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS INTEGER)) IS TRUE) WHERE ((((- (rt0.c2)))&((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))&((+ (rt0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (t1.c0) AND (rt0.c1)))GLOB(((rt0.c1) NOT BETWEEN (rt0.c0) AND (t1.c0)))) LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS INTEGER)) IS TRUE));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (t1.c0) AND (rt0.c1)))GLOB(((rt0.c1) NOT BETWEEN (rt0.c0) AND (t1.c0)))) LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS INTEGER)) IS TRUE) WHERE ((((- (rt0.c2)))&((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))&((+ (rt0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) BETWEEN (t1.c0) AND (rt0.c1)))GLOB(((rt0.c1) NOT BETWEEN (rt0.c0) AND (t1.c0)))) LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS INTEGER)) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE ((~ (((((((((vt0.c0)AND(0.7957315968344689)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((vt0.c0)AND(0.7957315968344689)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((((((((vt0.c0)AND(0.7957315968344689)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((vt0.c0)AND(0.7957315968344689)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((((((((vt0.c0)AND(0.7957315968344689)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) ORDER BY ((((0.7136436331505682)AND(CAST(v0.c0 AS NUMERIC))))OR(LIKELY(DISTINCT v0.c0))) ASC, (v0.c0 IN ()) COLLATE NOCASE, ((v0.c0 COLLATE NOCASE)+(((v0.c0)<<(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((0.7136436331505682)AND(CAST(v0.c0 AS NUMERIC))))OR(LIKELY(DISTINCT v0.c0))) ASC, (v0.c0 IN ()) COLLATE NOCASE, ((v0.c0 COLLATE NOCASE)+(((v0.c0)<<(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) ORDER BY ((((0.7136436331505682)AND(CAST(v0.c0 AS NUMERIC))))OR(LIKELY(DISTINCT v0.c0))) ASC, (v0.c0 IN ()) COLLATE NOCASE, ((v0.c0 COLLATE NOCASE)+(((v0.c0)<<(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((0.7136436331505682)AND(CAST(v0.c0 AS NUMERIC))))OR(LIKELY(DISTINCT v0.c0))) ASC, (v0.c0 IN ()) COLLATE NOCASE, ((v0.c0 COLLATE NOCASE)+(((v0.c0)<<(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) ORDER BY ((((0.7136436331505682)AND(CAST(v0.c0 AS NUMERIC))))OR(LIKELY(DISTINCT v0.c0))) ASC, (v0.c0 IN ()) COLLATE NOCASE, ((v0.c0 COLLATE NOCASE)+(((v0.c0)<<(v0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (0.792190082751923) AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((rt0.c0) NOT NULL)))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (0.792190082751923) AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (0.792190082751923) AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((rt0.c0) NOT NULL)))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (0.792190082751923) AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (0.792190082751923) AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((rt0.c0) NOT NULL)))) ORDER BY x'' DESC;
SELECT ALL * FROM t1, rt0, v0 WHERE (LOWER(CASE v0.c0  WHEN t1.c0 THEN rt0.c2 END)) ORDER BY '921234285' ASC, ((NULL)IS NOT(CAST(rt0.c2 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(CASE v0.c0  WHEN t1.c0 THEN rt0.c2 END)) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY '921234285' ASC, ((NULL)IS NOT(CAST(rt0.c2 AS NUMERIC))) DESC);
SELECT ALL * FROM t1, rt0, v0 WHERE (LOWER(CASE v0.c0  WHEN t1.c0 THEN rt0.c2 END)) ORDER BY '921234285' ASC, ((NULL)IS NOT(CAST(rt0.c2 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(CASE v0.c0  WHEN t1.c0 THEN rt0.c2 END)) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY '921234285' ASC, ((NULL)IS NOT(CAST(rt0.c2 AS NUMERIC))) DESC);
SELECT ALL * FROM t1, rt0, v0 WHERE (LOWER(CASE v0.c0  WHEN t1.c0 THEN rt0.c2 END)) ORDER BY '921234285' ASC, ((NULL)IS NOT(CAST(rt0.c2 AS NUMERIC))) DESC;
SELECT * FROM v0, t1 WHERE (NULL) ORDER BY (('1760547771')OR(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, t1 ORDER BY (('1760547771')OR(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM v0, t1 WHERE (NULL) ORDER BY (('1760547771')OR(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, t1 ORDER BY (('1760547771')OR(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM v0, t1 WHERE (NULL) ORDER BY (('1760547771')OR(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM t1, v0, vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN v0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM t1, v0, vt0);
SELECT * FROM t1, v0, vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN v0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM t1, v0, vt0);
SELECT * FROM t1, v0, vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN v0.c0 COLLATE BINARY END);
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c1 IN ())  WHEN (((rt0.c2, rt0.c0, rt0.c2))=((rt0.c1, rt0.c1, rt0.c0))) THEN (- (rt0.c2)) ELSE (rt0.c1 IN (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c1 IN ())  WHEN (((rt0.c2, rt0.c0, rt0.c2))==((rt0.c1, rt0.c1, rt0.c0))) THEN (- (rt0.c2)) ELSE (rt0.c1 IN (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c1 IN ())  WHEN (((rt0.c2, rt0.c0, rt0.c2))=((rt0.c1, rt0.c1, rt0.c0))) THEN (- (rt0.c2)) ELSE (rt0.c1 IN (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c1 IN ())  WHEN (((rt0.c2, rt0.c0, rt0.c2))==((rt0.c1, rt0.c1, rt0.c0))) THEN (- (rt0.c2)) ELSE (rt0.c1 IN (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c1 IN ())  WHEN (((rt0.c2, rt0.c0, rt0.c2))=((rt0.c1, rt0.c1, rt0.c0))) THEN (- (rt0.c2)) ELSE (rt0.c1 IN (rt0.c2)) END);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt0 ON ((x'9edcf49f') IS FALSE) CROSS JOIN vt0 ON ((((((((((rt0.c2)OR(t1.c0)))AND(vt0.c0)))OR(t1.c0)))AND(v0.c0)))%(rt0.c2)) RIGHT OUTER JOIN v0 ON v0.c0 WHERE (CAST(((vt0.c0) NOT BETWEEN (0Xffffffff86cda429) AND (v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (0Xffffffff86cda429) AND (v0.c0)) AS BLOB)) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON ((x'9edcf49f') IS FALSE) CROSS JOIN vt0 ON ((((((((((rt0.c2)OR(t1.c0)))AND(vt0.c0)))OR(t1.c0)))AND(v0.c0)))%(rt0.c2)) RIGHT OUTER JOIN v0 ON v0.c0);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt0 ON ((x'9edcf49f') IS FALSE) CROSS JOIN vt0 ON ((((((((((rt0.c2)OR(t1.c0)))AND(vt0.c0)))OR(t1.c0)))AND(v0.c0)))%(rt0.c2)) RIGHT OUTER JOIN v0 ON v0.c0 WHERE (CAST(((vt0.c0) NOT BETWEEN (0Xffffffff86cda429) AND (v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (0Xffffffff86cda429) AND (v0.c0)) AS BLOB)) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON ((x'9edcf49f') IS FALSE) CROSS JOIN vt0 ON ((((((((((rt0.c2)OR(t1.c0)))AND(vt0.c0)))OR(t1.c0)))AND(v0.c0)))%(rt0.c2)) RIGHT OUTER JOIN v0 ON v0.c0);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)>(((0.9633468456036807)%(rt0.c1))))) ORDER BY COALESCE(DISTINCT (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))), (rt0.c1 IN ())) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)>(((0.9633468456036807)%(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY COALESCE(DISTINCT (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))), (rt0.c1 IN ())) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)>(((0.9633468456036807)%(rt0.c1))))) ORDER BY COALESCE(DISTINCT (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))), (rt0.c1 IN ())) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)>(((0.9633468456036807)%(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY COALESCE(DISTINCT (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))), (rt0.c1 IN ())) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)>(((0.9633468456036807)%(rt0.c1))))) ORDER BY COALESCE(DISTINCT (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))), (rt0.c1 IN ())) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (((UNLIKELY(vt0.c0))OR(((t1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY ((((((((((rt0.c1)IS(rt0.c2)))OR(((rt0.c0) IS FALSE))))OR(NULL)))OR(((rt0.c0)<<(rt0.c0)))))OR(rt0.c1)) DESC  NULLS LAST, (+ ((NULL IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt0.c0))OR(((t1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY ((((((((((rt0.c1)IS(rt0.c2)))OR(((rt0.c0) IS FALSE))))OR(NULL)))OR(((rt0.c0)<<(rt0.c0)))))OR(rt0.c1)) DESC  NULLS LAST, (+ ((NULL IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (((UNLIKELY(vt0.c0))OR(((t1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY ((((((((((rt0.c1)IS(rt0.c2)))OR(((rt0.c0) IS FALSE))))OR(NULL)))OR(((rt0.c0)<<(rt0.c0)))))OR(rt0.c1)) DESC  NULLS LAST, (+ ((NULL IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt0.c0))OR(((t1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY ((((((((((rt0.c1)IS(rt0.c2)))OR(((rt0.c0) IS FALSE))))OR(NULL)))OR(((rt0.c0)<<(rt0.c0)))))OR(rt0.c1)) DESC  NULLS LAST, (+ ((NULL IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (((UNLIKELY(vt0.c0))OR(((t1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY ((((((((((rt0.c1)IS(rt0.c2)))OR(((rt0.c0) IS FALSE))))OR(NULL)))OR(((rt0.c0)<<(rt0.c0)))))OR(rt0.c1)) DESC  NULLS LAST, (+ ((NULL IN ()))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, v0 WHERE ((+ (v0.c0)) COLLATE RTRIM) ORDER BY CAST(1.9797369E7 AS REAL);
SELECT SUM(count) FROM (SELECT (((+ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, v0 ORDER BY CAST(1.9797369E7 AS REAL));
SELECT ALL COUNT(*) FROM t1, v0 WHERE ((+ (v0.c0)) COLLATE RTRIM) ORDER BY CAST(1.9797369E7 AS REAL);
SELECT SUM(count) FROM (SELECT (((+ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, v0 ORDER BY CAST(1.9797369E7 AS REAL));
SELECT ALL COUNT(*) FROM t1, v0 WHERE ((+ (v0.c0)) COLLATE RTRIM) ORDER BY CAST(1.9797369E7 AS REAL);
SELECT ALL * FROM vt0, rt0 WHERE ('p') ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) AND ((rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('p') IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) AND ((rt0.c1)))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ('p') ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) AND ((rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('p') IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) AND ((rt0.c1)))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ('p') ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) AND ((rt0.c1)))  NULLS LAST;
SELECT * FROM vt0, t1 NOT INDEXED WHERE ((((vt0.c0)) BETWEEN ((0.5459666205620484)) AND ((((t1.c0)<(0.10146874873151768)))))) ORDER BY ((0.17938648343340635) IS TRUE), ((((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0)))>(CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((0.5459666205620484)) AND ((((t1.c0)<(0.10146874873151768)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((0.17938648343340635) IS TRUE), ((((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0)))>(CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST);
SELECT * FROM vt0, t1 NOT INDEXED WHERE ((((vt0.c0)) BETWEEN ((0.5459666205620484)) AND ((((t1.c0)<(0.10146874873151768)))))) ORDER BY ((0.17938648343340635) IS TRUE), ((((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0)))>(CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((0.5459666205620484)) AND ((((t1.c0)<(0.10146874873151768)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((0.17938648343340635) IS TRUE), ((((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0)))>(CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST);
SELECT * FROM vt0, t1 NOT INDEXED WHERE ((((vt0.c0)) BETWEEN ((0.5459666205620484)) AND ((((t1.c0)<(0.10146874873151768)))))) ORDER BY ((0.17938648343340635) IS TRUE), ((((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0)))>(CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt0 WHERE (((((t1.c0)>(t1.c0)))/(vt0.c0))) ORDER BY ((NULL) BETWEEN (((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((~ ('1824087290')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)>(t1.c0)))/(vt0.c0))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((NULL) BETWEEN (((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((~ ('1824087290')))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((t1.c0)>(t1.c0)))/(vt0.c0))) ORDER BY ((NULL) BETWEEN (((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((~ ('1824087290')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)>(t1.c0)))/(vt0.c0))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((NULL) BETWEEN (((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((~ ('1824087290')))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((t1.c0)>(t1.c0)))/(vt0.c0))) ORDER BY ((NULL) BETWEEN (((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((~ ('1824087290')))) DESC  NULLS LAST;
SELECT * FROM v0, t1 WHERE ((+ ((v0.c0 IN ())))) ORDER BY CASE WHEN CASE v0.c0  WHEN t1.c0 THEN v0.c0 END THEN CAST(t1.c0 AS TEXT) ELSE CAST(t1.c0 AS REAL) END  NULLS FIRST, CASE WHEN ((t1.c0) NOTNULL) THEN ((1438520619) NOT BETWEEN (t1.c0) AND (t1.c0)) END, ((((NULL)AND(CASE t1.c0  WHEN NULL THEN t1.c0 ELSE t1.c0 END)))OR(t1.c0));
SELECT SUM(count) FROM (SELECT (((+ ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, t1 ORDER BY CASE WHEN CASE v0.c0  WHEN t1.c0 THEN v0.c0 END THEN CAST(t1.c0 AS TEXT) ELSE CAST(t1.c0 AS REAL) END  NULLS FIRST, CASE WHEN ((t1.c0) NOTNULL) THEN ((1438520619) NOT BETWEEN (t1.c0) AND (t1.c0)) END, ((((NULL)AND(CASE t1.c0  WHEN NULL THEN t1.c0 ELSE t1.c0 END)))OR(t1.c0)));
SELECT * FROM v0, t1 WHERE ((+ ((v0.c0 IN ())))) ORDER BY CASE WHEN CASE v0.c0  WHEN t1.c0 THEN v0.c0 END THEN CAST(t1.c0 AS TEXT) ELSE CAST(t1.c0 AS REAL) END  NULLS FIRST, CASE WHEN ((t1.c0) NOTNULL) THEN ((1438520619) NOT BETWEEN (t1.c0) AND (t1.c0)) END, ((((NULL)AND(CASE t1.c0  WHEN NULL THEN t1.c0 ELSE t1.c0 END)))OR(t1.c0));
SELECT SUM(count) FROM (SELECT (((+ ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, t1 ORDER BY CASE WHEN CASE v0.c0  WHEN t1.c0 THEN v0.c0 END THEN CAST(t1.c0 AS TEXT) ELSE CAST(t1.c0 AS REAL) END  NULLS FIRST, CASE WHEN ((t1.c0) NOTNULL) THEN ((1438520619) NOT BETWEEN (t1.c0) AND (t1.c0)) END, ((((NULL)AND(CASE t1.c0  WHEN NULL THEN t1.c0 ELSE t1.c0 END)))OR(t1.c0)));
SELECT * FROM v0, t1 WHERE ((+ ((v0.c0 IN ())))) ORDER BY CASE WHEN CASE v0.c0  WHEN t1.c0 THEN v0.c0 END THEN CAST(t1.c0 AS TEXT) ELSE CAST(t1.c0 AS REAL) END  NULLS FIRST, CASE WHEN ((t1.c0) NOTNULL) THEN ((1438520619) NOT BETWEEN (t1.c0) AND (t1.c0)) END, ((((NULL)AND(CASE t1.c0  WHEN NULL THEN t1.c0 ELSE t1.c0 END)))OR(t1.c0));
SELECT * FROM t1 LEFT OUTER JOIN v0 ON (((('A,')AND((v0.c0 IN ()))))AND(('6쐵*稛!uE듉' IN ()))) WHERE (((CAST(v0.c0 AS NUMERIC))<(((t1.c0) BETWEEN ('-1516070946') AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))<(((t1.c0) BETWEEN ('-1516070946') AND (t1.c0))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON (((('A,')AND((v0.c0 IN ()))))AND(('6쐵*稛!uE듉' IN ()))));
SELECT * FROM t1 LEFT OUTER JOIN v0 ON (((('A,')AND((v0.c0 IN ()))))AND(('6쐵*稛!uE듉' IN ()))) WHERE (((CAST(v0.c0 AS NUMERIC))<(((t1.c0) BETWEEN ('-1516070946') AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))<(((t1.c0) BETWEEN ('-1516070946') AND (t1.c0))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON (((('A,')AND((v0.c0 IN ()))))AND(('6쐵*稛!uE듉' IN ()))));
SELECT * FROM t1 LEFT OUTER JOIN v0 ON (((('A,')AND((v0.c0 IN ()))))AND(('6쐵*稛!uE듉' IN ()))) WHERE (((CAST(v0.c0 AS NUMERIC))<(((t1.c0) BETWEEN ('-1516070946') AND (t1.c0)))));
SELECT * FROM v0, vt0 WHERE (CASE WHEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((('1132503629')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((('1132503629')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CASE WHEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((('1132503629')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((('1132503629')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CASE WHEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((('1132503629')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT ALL COUNT(*) FROM rt0, t1, vt0, v0 WHERE ((((((-1324378090) BETWEEN (rt0.c2) AND (rt0.c2))))>=(((((vt0.c0, NULL, t1.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, t1.c0)) AND ((t1.c0, t1.c0, rt0.c2))))))) ORDER BY (((vt0.c0)) BETWEEN ((x'')) AND ((((((t1.c0)OR(vt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((-1324378090) BETWEEN (rt0.c2) AND (rt0.c2))))>=(((((vt0.c0, NULL, t1.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, t1.c0)) AND ((t1.c0, t1.c0, rt0.c2))))))) IS TRUE)  as count FROM rt0, t1, vt0, v0 ORDER BY (((vt0.c0)) BETWEEN ((x'')) AND ((((((t1.c0)OR(vt0.c0)))OR(rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, t1, vt0, v0 WHERE ((((((-1324378090) BETWEEN (rt0.c2) AND (rt0.c2))))>=(((((vt0.c0, NULL, t1.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, t1.c0)) AND ((t1.c0, t1.c0, rt0.c2))))))) ORDER BY (((vt0.c0)) BETWEEN ((x'')) AND ((((((t1.c0)OR(vt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((-1324378090) BETWEEN (rt0.c2) AND (rt0.c2))))>=(((((vt0.c0, NULL, t1.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, t1.c0)) AND ((t1.c0, t1.c0, rt0.c2))))))) IS TRUE)  as count FROM rt0, t1, vt0, v0 ORDER BY (((vt0.c0)) BETWEEN ((x'')) AND ((((((t1.c0)OR(vt0.c0)))OR(rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, t1, vt0, v0 WHERE ((((((-1324378090) BETWEEN (rt0.c2) AND (rt0.c2))))>=(((((vt0.c0, NULL, t1.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, t1.c0)) AND ((t1.c0, t1.c0, rt0.c2))))))) ORDER BY (((vt0.c0)) BETWEEN ((x'')) AND ((((((t1.c0)OR(vt0.c0)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c0 IN (rt0.c2))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN (rt0.c2))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c0 IN (rt0.c2))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN (rt0.c2))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c0 IN (rt0.c2))) ISNULL)  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE ((((((- (vt0.c0)))OR(((rt0.c2)<(1808472199)))))AND(CASE WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY (((((((vt0.c0, rt0.c1, rt0.c1))>((rt0.c0, rt0.c0, rt0.c0))))AND(((vt0.c0)||(vt0.c0)))))AND(rt0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((- (vt0.c0)))OR(((rt0.c2)<(1808472199)))))AND(CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((vt0.c0, rt0.c1, rt0.c1))>((rt0.c0, rt0.c0, rt0.c0))))AND(((vt0.c0)||(vt0.c0)))))AND(rt0.c1 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((((- (vt0.c0)))OR(((rt0.c2)<(1808472199)))))AND(CASE WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY (((((((vt0.c0, rt0.c1, rt0.c1))>((rt0.c0, rt0.c0, rt0.c0))))AND(((vt0.c0)||(vt0.c0)))))AND(rt0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((- (vt0.c0)))OR(((rt0.c2)<(1808472199)))))AND(CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((vt0.c0, rt0.c1, rt0.c1))>((rt0.c0, rt0.c0, rt0.c0))))AND(((vt0.c0)||(vt0.c0)))))AND(rt0.c1 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((((- (vt0.c0)))OR(((rt0.c2)<(1808472199)))))AND(CASE WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY (((((((vt0.c0, rt0.c1, rt0.c1))>((rt0.c0, rt0.c0, rt0.c0))))AND(((vt0.c0)||(vt0.c0)))))AND(rt0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON (+ (((t1.c0)>=(t1.c0)))) WHERE (LIKE(NULL, CASE WHEN rt0.c2 THEN t1.c0 ELSE x'' END)) ORDER BY ((CASE WHEN t1.c0 THEN rt0.c0 END)IS(t1.c0))  NULLS FIRST, (((rt0.c0)GLOB(rt0.c0)) IN ())  NULLS FIRST, ((((rt0.c0) NOT NULL)) NOT NULL)  NULLS FIRST, CASE CAST(t1.c0 AS INTEGER)  WHEN '2082630964' THEN rt0.c0 COLLATE NOCASE ELSE json_remove(rt0.c2, rt0.c0, rt0.c1, rt0.c1) END;
SELECT SUM(count) FROM (SELECT ((LIKE(NULL, CASE WHEN rt0.c2 THEN t1.c0 ELSE x'' END)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON (+ (((t1.c0)>=(t1.c0)))) ORDER BY ((CASE WHEN t1.c0 THEN rt0.c0 END)IS(t1.c0))  NULLS FIRST, (((rt0.c0)GLOB(rt0.c0)) IN ())  NULLS FIRST, ((((rt0.c0) NOT NULL)) NOT NULL)  NULLS FIRST, CASE CAST(t1.c0 AS INTEGER)  WHEN '2082630964' THEN rt0.c0 COLLATE NOCASE ELSE json_remove(rt0.c2, rt0.c0, rt0.c1, rt0.c1) END);
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON (+ (((t1.c0)>=(t1.c0)))) WHERE (LIKE(NULL, CASE WHEN rt0.c2 THEN t1.c0 ELSE x'' END)) ORDER BY ((CASE WHEN t1.c0 THEN rt0.c0 END)IS(t1.c0))  NULLS FIRST, (((rt0.c0)GLOB(rt0.c0)) IN ())  NULLS FIRST, ((((rt0.c0) NOT NULL)) NOT NULL)  NULLS FIRST, CASE CAST(t1.c0 AS INTEGER)  WHEN '2082630964' THEN rt0.c0 COLLATE NOCASE ELSE json_remove(rt0.c2, rt0.c0, rt0.c1, rt0.c1) END;
SELECT SUM(count) FROM (SELECT ((LIKE(NULL, CASE WHEN rt0.c2 THEN t1.c0 ELSE x'' END)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON (+ (((t1.c0)>=(t1.c0)))) ORDER BY ((CASE WHEN t1.c0 THEN rt0.c0 END)IS(t1.c0))  NULLS FIRST, (((rt0.c0)GLOB(rt0.c0)) IN ())  NULLS FIRST, ((((rt0.c0) NOT NULL)) NOT NULL)  NULLS FIRST, CASE CAST(t1.c0 AS INTEGER)  WHEN '2082630964' THEN rt0.c0 COLLATE NOCASE ELSE json_remove(rt0.c2, rt0.c0, rt0.c1, rt0.c1) END);
SELECT COUNT(*) FROM v0, rt0, t1 WHERE (((rt0.c2) IS FALSE)) ORDER BY CASE (((0.37045681207025616))<=((t1.c0)))  WHEN x'' THEN ((rt0.c0)>>(t1.c0)) ELSE ((t1.c0) NOT NULL) END, CAST(CAST(v0.c0 AS TEXT) AS NUMERIC) DESC, ((((((54399408)OR(0.6716087972184931)))AND(rt0.c1)))AND(((t1.c0)%(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM v0, rt0, t1 ORDER BY CASE (((0.37045681207025616))<=((t1.c0)))  WHEN x'' THEN ((rt0.c0)>>(t1.c0)) ELSE ((t1.c0) NOT NULL) END, CAST(CAST(v0.c0 AS TEXT) AS NUMERIC) DESC, ((((((54399408)OR(0.6716087972184931)))AND(rt0.c1)))AND(((t1.c0)%(rt0.c2)))));
SELECT COUNT(*) FROM v0, rt0, t1 WHERE (((rt0.c2) IS FALSE)) ORDER BY CASE (((0.37045681207025616))<=((t1.c0)))  WHEN x'' THEN ((rt0.c0)>>(t1.c0)) ELSE ((t1.c0) NOT NULL) END, CAST(CAST(v0.c0 AS TEXT) AS NUMERIC) DESC, ((((((54399408)OR(0.6716087972184931)))AND(rt0.c1)))AND(((t1.c0)%(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM v0, rt0, t1 ORDER BY CASE (((0.37045681207025616))<=((t1.c0)))  WHEN x'' THEN ((rt0.c0)>>(t1.c0)) ELSE ((t1.c0) NOT NULL) END, CAST(CAST(v0.c0 AS TEXT) AS NUMERIC) DESC, ((((((54399408)OR(0.6716087972184931)))AND(rt0.c1)))AND(((t1.c0)%(rt0.c2)))));
SELECT COUNT(*) FROM v0, rt0, t1 WHERE (((rt0.c2) IS FALSE)) ORDER BY CASE (((0.37045681207025616))<=((t1.c0)))  WHEN x'' THEN ((rt0.c0)>>(t1.c0)) ELSE ((t1.c0) NOT NULL) END, CAST(CAST(v0.c0 AS TEXT) AS NUMERIC) DESC, ((((((54399408)OR(0.6716087972184931)))AND(rt0.c1)))AND(((t1.c0)%(rt0.c2))));
SELECT ALL * FROM t1, v0, rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) IN ())) ORDER BY ((((((v0.c0)AND(rt0.c2)))OR(rt0.c0))) NOTNULL)  NULLS FIRST, CASE WHEN ((t1.c0) NOTNULL) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN NULL THEN CAST(rt0.c1 AS INTEGER) WHEN 0xffffffffef6eb834 THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) ELSE (NOT (t1.c0)) END, IFNULL(DISTINCT (~ (rt0.c1)), (NOT (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY ((((((v0.c0)AND(rt0.c2)))OR(rt0.c0))) NOTNULL)  NULLS FIRST, CASE WHEN ((t1.c0) NOTNULL) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN NULL THEN CAST(rt0.c1 AS INTEGER) WHEN 0Xffffffffef6eb834 THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) ELSE (NOT (t1.c0)) END, IFNULL(DISTINCT (~ (rt0.c1)), (NOT (rt0.c2))));
SELECT ALL * FROM t1, v0, rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) IN ())) ORDER BY ((((((v0.c0)AND(rt0.c2)))OR(rt0.c0))) NOTNULL)  NULLS FIRST, CASE WHEN ((t1.c0) NOTNULL) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN NULL THEN CAST(rt0.c1 AS INTEGER) WHEN 0xffffffffef6eb834 THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) ELSE (NOT (t1.c0)) END, IFNULL(DISTINCT (~ (rt0.c1)), (NOT (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY ((((((v0.c0)AND(rt0.c2)))OR(rt0.c0))) NOTNULL)  NULLS FIRST, CASE WHEN ((t1.c0) NOTNULL) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN NULL THEN CAST(rt0.c1 AS INTEGER) WHEN 0Xffffffffef6eb834 THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) ELSE (NOT (t1.c0)) END, IFNULL(DISTINCT (~ (rt0.c1)), (NOT (rt0.c2))));
SELECT ALL * FROM t1, v0, rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) IN ())) ORDER BY ((((((v0.c0)AND(rt0.c2)))OR(rt0.c0))) NOTNULL)  NULLS FIRST, CASE WHEN ((t1.c0) NOTNULL) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN NULL THEN CAST(rt0.c1 AS INTEGER) WHEN 0xffffffffef6eb834 THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) ELSE (NOT (t1.c0)) END, IFNULL(DISTINCT (~ (rt0.c1)), (NOT (rt0.c2)));
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t1 ON (((NOT (vt0.c0)))OR(((x'cc49') IS FALSE))) FULL OUTER JOIN rt0 ON (+ (((((rt0.c2)AND(t1.c0)))AND(rt0.c2)))) WHERE (CAST(rt0.c1 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t1 ON (((NOT (vt0.c0)))OR(((x'cc49') IS FALSE))) FULL OUTER JOIN rt0 ON (+ (((((rt0.c2)AND(t1.c0)))AND(rt0.c2)))));
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t1 ON (((NOT (vt0.c0)))OR(((x'cc49') IS FALSE))) FULL OUTER JOIN rt0 ON (+ (((((rt0.c2)AND(t1.c0)))AND(rt0.c2)))) WHERE (CAST(rt0.c1 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t1 ON (((NOT (vt0.c0)))OR(((x'cc49') IS FALSE))) FULL OUTER JOIN rt0 ON (+ (((((rt0.c2)AND(t1.c0)))AND(rt0.c2)))));
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t1 ON (((NOT (vt0.c0)))OR(((x'cc49') IS FALSE))) FULL OUTER JOIN rt0 ON (+ (((((rt0.c2)AND(t1.c0)))AND(rt0.c2)))) WHERE (CAST(rt0.c1 COLLATE RTRIM AS REAL));
SELECT * FROM rt0, t1 NATURAL JOIN v0 WHERE ((((UPPER(DISTINCT rt0.c2)))==((CAST(v0.c0 AS BLOB))))) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((UPPER(DISTINCT rt0.c2)))=((CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN v0 ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE);
SELECT * FROM rt0, t1 NATURAL JOIN v0 WHERE ((((UPPER(DISTINCT rt0.c2)))==((CAST(v0.c0 AS BLOB))))) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((UPPER(DISTINCT rt0.c2)))=((CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN v0 ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE);
SELECT * FROM rt0, t1 NATURAL JOIN v0 WHERE ((((UPPER(DISTINCT rt0.c2)))==((CAST(v0.c0 AS BLOB))))) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 END)||(rt0.c2 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c0 AS INTEGER)) IS TRUE) WHERE ((((((rt0.c2 IN ()))OR(CAST(x'' AS REAL))))OR(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN ()))OR(CAST(x'' AS REAL))))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 END)||(rt0.c2 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c0 AS INTEGER)) IS TRUE));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 END)||(rt0.c2 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c0 AS INTEGER)) IS TRUE) WHERE ((((((rt0.c2 IN ()))OR(CAST(x'' AS REAL))))OR(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN ()))OR(CAST(x'' AS REAL))))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 END)||(rt0.c2 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c0 AS INTEGER)) IS TRUE));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 END)||(rt0.c2 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c0 AS INTEGER)) IS TRUE) WHERE ((((((rt0.c2 IN ()))OR(CAST(x'' AS REAL))))OR(rt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, t1, rt0, v0 WHERE (((((((((v0.c0)AND(((((((((1.687180742E9)OR(rt0.c0)))OR('2082630964')))AND(0.9213771437988619)))AND(vt0.c0)))))AND(rt0.c0 COLLATE NOCASE)))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))OR(vt0.c0))) ORDER BY 'S箙' DESC  NULLS FIRST, (rt0.c0 COLLATE BINARY IN (((rt0.c2) BETWEEN (rt0.c1) AND (t1.c0)))) DESC  NULLS FIRST, rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(((((((((1.687180742E9)OR(rt0.c0)))OR('2082630964')))AND(0.9213771437988619)))AND(vt0.c0)))))AND(rt0.c0 COLLATE NOCASE)))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))OR(vt0.c0))) IS TRUE)  as count FROM vt0, t1, rt0, v0 ORDER BY 'S箙' DESC  NULLS FIRST, (rt0.c0 COLLATE BINARY IN (((rt0.c2) BETWEEN (rt0.c1) AND (t1.c0)))) DESC  NULLS FIRST, rt0.c1);
SELECT COUNT(*) FROM vt0, t1, rt0, v0 WHERE (((((((((v0.c0)AND(((((((((1.687180742E9)OR(rt0.c0)))OR('2082630964')))AND(0.9213771437988619)))AND(vt0.c0)))))AND(rt0.c0 COLLATE NOCASE)))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))OR(vt0.c0))) ORDER BY 'S箙' DESC  NULLS FIRST, (rt0.c0 COLLATE BINARY IN (((rt0.c2) BETWEEN (rt0.c1) AND (t1.c0)))) DESC  NULLS FIRST, rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(((((((((1.687180742E9)OR(rt0.c0)))OR('2082630964')))AND(0.9213771437988619)))AND(vt0.c0)))))AND(rt0.c0 COLLATE NOCASE)))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))OR(vt0.c0))) IS TRUE)  as count FROM vt0, t1, rt0, v0 ORDER BY 'S箙' DESC  NULLS FIRST, (rt0.c0 COLLATE BINARY IN (((rt0.c2) BETWEEN (rt0.c1) AND (t1.c0)))) DESC  NULLS FIRST, rt0.c1);
SELECT COUNT(*) FROM vt0, t1, rt0, v0 WHERE (((((((((v0.c0)AND(((((((((1.687180742E9)OR(rt0.c0)))OR('2082630964')))AND(0.9213771437988619)))AND(vt0.c0)))))AND(rt0.c0 COLLATE NOCASE)))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))OR(vt0.c0))) ORDER BY 'S箙' DESC  NULLS FIRST, (rt0.c0 COLLATE BINARY IN (((rt0.c2) BETWEEN (rt0.c1) AND (t1.c0)))) DESC  NULLS FIRST, rt0.c1;
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t1 WHERE ((((rt0.c0 IN ()))IS NOT(((t1.c0) IS FALSE)))) ORDER BY ((((((t1.c0)AND(v0.c0)))AND(rt0.c1)))>=((~ (rt0.c2)))) DESC  NULLS LAST, CAST(((x'') BETWEEN (t1.c0) AND (0Xffffffffd9bb895a)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))IS NOT(((t1.c0) IS FALSE)))) IS TRUE)  as count FROM v0, rt0, vt0, t1 ORDER BY ((((((t1.c0)AND(v0.c0)))AND(rt0.c1)))>=((~ (rt0.c2)))) DESC  NULLS LAST, CAST(((x'') BETWEEN (t1.c0) AND (0xffffffffd9bb895a)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t1 WHERE ((((rt0.c0 IN ()))IS NOT(((t1.c0) IS FALSE)))) ORDER BY ((((((t1.c0)AND(v0.c0)))AND(rt0.c1)))>=((~ (rt0.c2)))) DESC  NULLS LAST, CAST(((x'') BETWEEN (t1.c0) AND (0Xffffffffd9bb895a)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))IS NOT(((t1.c0) IS FALSE)))) IS TRUE)  as count FROM v0, rt0, vt0, t1 ORDER BY ((((((t1.c0)AND(v0.c0)))AND(rt0.c1)))>=((~ (rt0.c2)))) DESC  NULLS LAST, CAST(((x'') BETWEEN (t1.c0) AND (0xffffffffd9bb895a)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t1 WHERE ((((rt0.c0 IN ()))IS NOT(((t1.c0) IS FALSE)))) ORDER BY ((((((t1.c0)AND(v0.c0)))AND(rt0.c1)))>=((~ (rt0.c2)))) DESC  NULLS LAST, CAST(((x'') BETWEEN (t1.c0) AND (0Xffffffffd9bb895a)) AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE) ORDER BY (((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS REAL), ((rt0.c2)LIKE(rt0.c1)), CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND (((~ (rt0.c2)), ((vt0.c0)/(rt0.c0)), (0Xffffffffa2226256 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS REAL), ((rt0.c2)LIKE(rt0.c1)), CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND (((~ (rt0.c2)), ((vt0.c0)/(rt0.c0)), (0xffffffffa2226256 IN ()))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE) ORDER BY (((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS REAL), ((rt0.c2)LIKE(rt0.c1)), CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND (((~ (rt0.c2)), ((vt0.c0)/(rt0.c0)), (0Xffffffffa2226256 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS REAL), ((rt0.c2)LIKE(rt0.c1)), CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND (((~ (rt0.c2)), ((vt0.c0)/(rt0.c0)), (0xffffffffa2226256 IN ()))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE) ORDER BY (((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS REAL), ((rt0.c2)LIKE(rt0.c1)), CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND (((~ (rt0.c2)), ((vt0.c0)/(rt0.c0)), (0Xffffffffa2226256 IN ()))))  NULLS FIRST;
SELECT * FROM t1, vt0, rt0 INNER JOIN v0 ON (~ (CASE t1.c0  WHEN rt0.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN rt0.c2 THEN rt0.c0 END)) WHERE (0.792190082751923) ORDER BY (((- (rt0.c2)))GLOB(DATETIME(rt0.c1, rt0.c1, t1.c0)))  NULLS LAST, ((((vt0.c0)OR(rt0.c1))) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2))) AND ((- (vt0.c0)))) ASC  NULLS LAST, v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.792190082751923) IS TRUE)  as count FROM t1, vt0, rt0 INNER JOIN v0 ON (~ (CASE t1.c0  WHEN rt0.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN rt0.c2 THEN rt0.c0 END)) ORDER BY (((- (rt0.c2)))GLOB(DATETIME(rt0.c1, rt0.c1, t1.c0)))  NULLS LAST, ((((vt0.c0)OR(rt0.c1))) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2))) AND ((- (vt0.c0)))) ASC  NULLS LAST, v0.c0  NULLS FIRST);
SELECT * FROM t1, vt0, rt0 INNER JOIN v0 ON (~ (CASE t1.c0  WHEN rt0.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN rt0.c2 THEN rt0.c0 END)) WHERE (0.792190082751923) ORDER BY (((- (rt0.c2)))GLOB(DATETIME(rt0.c1, rt0.c1, t1.c0)))  NULLS LAST, ((((vt0.c0)OR(rt0.c1))) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2))) AND ((- (vt0.c0)))) ASC  NULLS LAST, v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.792190082751923) IS TRUE)  as count FROM t1, vt0, rt0 INNER JOIN v0 ON (~ (CASE t1.c0  WHEN rt0.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN rt0.c2 THEN rt0.c0 END)) ORDER BY (((- (rt0.c2)))GLOB(DATETIME(rt0.c1, rt0.c1, t1.c0)))  NULLS LAST, ((((vt0.c0)OR(rt0.c1))) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2))) AND ((- (vt0.c0)))) ASC  NULLS LAST, v0.c0  NULLS FIRST);
SELECT * FROM t1, vt0, rt0 INNER JOIN v0 ON (~ (CASE t1.c0  WHEN rt0.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN rt0.c2 THEN rt0.c0 END)) WHERE (0.792190082751923) ORDER BY (((- (rt0.c2)))GLOB(DATETIME(rt0.c1, rt0.c1, t1.c0)))  NULLS LAST, ((((vt0.c0)OR(rt0.c1))) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2))) AND ((- (vt0.c0)))) ASC  NULLS LAST, v0.c0  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t1 ON ((rt0.c2)GLOB((vt0.c0 IN ()))) WHERE ((CHAR(rt0.c1) IN ())) ORDER BY (vt0.c0 COLLATE RTRIM IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CHAR(rt0.c1) IN ())) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t1 ON ((rt0.c2)GLOB((vt0.c0 IN ()))) ORDER BY (vt0.c0 COLLATE RTRIM IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t1 ON ((rt0.c2)GLOB((vt0.c0 IN ()))) WHERE ((CHAR(rt0.c1) IN ())) ORDER BY (vt0.c0 COLLATE RTRIM IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CHAR(rt0.c1) IN ())) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t1 ON ((rt0.c2)GLOB((vt0.c0 IN ()))) ORDER BY (vt0.c0 COLLATE RTRIM IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t1 ON ((rt0.c2)GLOB((vt0.c0 IN ()))) WHERE ((CHAR(rt0.c1) IN ())) ORDER BY (vt0.c0 COLLATE RTRIM IN ())  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c0) NOTNULL)) IS TRUE));
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (NOT ('-1756322042')) WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))>(CAST(rt0.c1 AS NUMERIC)))) ORDER BY DATETIME(rt0.c0, rt0.c0, '-1833231402') COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))>(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (NOT ('-1756322042')) ORDER BY DATETIME(rt0.c0, rt0.c0, '-1833231402') COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (NOT ('-1756322042')) WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))>(CAST(rt0.c1 AS NUMERIC)))) ORDER BY DATETIME(rt0.c0, rt0.c0, '-1833231402') COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))>(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (NOT ('-1756322042')) ORDER BY DATETIME(rt0.c0, rt0.c0, '-1833231402') COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (NOT ('-1756322042')) WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))>(CAST(rt0.c1 AS NUMERIC)))) ORDER BY DATETIME(rt0.c0, rt0.c0, '-1833231402') COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (CAST(rt0.c2 AS INTEGER))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) NOT BETWEEN (x'') AND (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(NULL)))OR(rt0.c1)))) WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) NOT BETWEEN (x'') AND (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(NULL)))OR(rt0.c1)))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) NOT BETWEEN (x'') AND (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(NULL)))OR(rt0.c1)))) WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) NOT BETWEEN (x'') AND (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(NULL)))OR(rt0.c1)))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) NOT BETWEEN (x'') AND (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(NULL)))OR(rt0.c1)))) WHERE (rt0.c2 COLLATE NOCASE);
SELECT ALL * FROM vt0, t1 LEFT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE BINARY WHERE (((t1.c0) NOTNULL) COLLATE NOCASE) ORDER BY (+ (CAST(t1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE BINARY ORDER BY (+ (CAST(t1.c0 AS TEXT))));
SELECT ALL * FROM vt0, t1 LEFT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE BINARY WHERE (((t1.c0) NOTNULL) COLLATE NOCASE) ORDER BY (+ (CAST(t1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE BINARY ORDER BY (+ (CAST(t1.c0 AS TEXT))));
SELECT ALL * FROM vt0, t1 LEFT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE BINARY WHERE (((t1.c0) NOTNULL) COLLATE NOCASE) ORDER BY (+ (CAST(t1.c0 AS TEXT)));
SELECT ALL * FROM t1, rt0, v0 WHERE (TRIM(DISTINCT TYPEOF(DISTINCT rt0.c1), rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT TYPEOF(DISTINCT rt0.c1), rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t1, rt0, v0);
SELECT ALL * FROM t1, rt0, v0 WHERE (TRIM(DISTINCT TYPEOF(DISTINCT rt0.c1), rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT TYPEOF(DISTINCT rt0.c1), rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t1, rt0, v0);
SELECT ALL * FROM t1, rt0, v0 WHERE (TRIM(DISTINCT TYPEOF(DISTINCT rt0.c1), rt0.c0 COLLATE RTRIM));
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (rt0.c2) ORDER BY ((((rt0.c0)AND(rt0.c1))) NOT NULL), ((((((v0.c0))<((rt0.c1)))))<=((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((((rt0.c0)AND(rt0.c1))) NOT NULL), ((((((v0.c0))<((rt0.c1)))))<=((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))));
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (rt0.c2) ORDER BY ((((rt0.c0)AND(rt0.c1))) NOT NULL), ((((((v0.c0))<((rt0.c1)))))<=((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((((rt0.c0)AND(rt0.c1))) NOT NULL), ((((((v0.c0))<((rt0.c1)))))<=((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))));
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (rt0.c2) ORDER BY ((((rt0.c0)AND(rt0.c1))) NOT NULL), ((((((v0.c0))<((rt0.c1)))))<=((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'rZ捯l,JF' WHEN vt0.c0 THEN vt0.c0 END) AND ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'rZ捯l,JF' WHEN vt0.c0 THEN vt0.c0 END) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'rZ捯l,JF' WHEN vt0.c0 THEN vt0.c0 END) AND ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'rZ捯l,JF' WHEN vt0.c0 THEN vt0.c0 END) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'rZ捯l,JF' WHEN vt0.c0 THEN vt0.c0 END) AND ((~ (vt0.c0)))));
SELECT * FROM t1 WHERE (((((t1.c0))<=((t1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0))<=((t1.c0))) IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c0))<=((t1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0))<=((t1.c0))) IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c0))<=((t1.c0))) IN ()));
SELECT * FROM rt0, vt0, t1, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT * FROM rt0, vt0, t1, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT * FROM rt0, vt0, t1, v0 WHERE (rt0.c2);
SELECT * FROM vt0, t1 LEFT OUTER JOIN rt0 ON ((rt0.c2)|(t1.c0)) COLLATE BINARY WHERE ((rt0.c1 IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN rt0 ON ((rt0.c2)|(t1.c0)) COLLATE BINARY);
SELECT * FROM vt0, t1 LEFT OUTER JOIN rt0 ON ((rt0.c2)|(t1.c0)) COLLATE BINARY WHERE ((rt0.c1 IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN rt0 ON ((rt0.c2)|(t1.c0)) COLLATE BINARY);
SELECT * FROM vt0, t1 LEFT OUTER JOIN rt0 ON ((rt0.c2)|(t1.c0)) COLLATE BINARY WHERE ((rt0.c1 IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT * FROM rt0, v0, t1 WHERE ((((- (rt0.c0)))>(((rt0.c2)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))>(((rt0.c2)&(rt0.c2))))) IS TRUE)  as count FROM rt0, v0, t1);
SELECT * FROM rt0, v0, t1 WHERE ((((- (rt0.c0)))>(((rt0.c2)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))>(((rt0.c2)&(rt0.c2))))) IS TRUE)  as count FROM rt0, v0, t1);
SELECT * FROM rt0, v0, t1 WHERE ((((- (rt0.c0)))>(((rt0.c2)&(rt0.c2)))));
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE ((~ (((rt0.c1)GLOB(rt0.c2))))) ORDER BY ((IFNULL(NULL, rt0.c1)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1)GLOB(rt0.c2))))) IS TRUE)  as count FROM t1, vt0, rt0, v0 ORDER BY ((IFNULL(NULL, rt0.c1)) IS FALSE));
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE ((~ (((rt0.c1)GLOB(rt0.c2))))) ORDER BY ((IFNULL(NULL, rt0.c1)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1)GLOB(rt0.c2))))) IS TRUE)  as count FROM t1, vt0, rt0, v0 ORDER BY ((IFNULL(NULL, rt0.c1)) IS FALSE));
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE ((~ (((rt0.c1)GLOB(rt0.c2))))) ORDER BY ((IFNULL(NULL, rt0.c1)) IS FALSE);
SELECT * FROM vt0, t1, rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (rt0.c0) AND (((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1))) BETWEEN (rt0.c0) AND (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT * FROM vt0, t1, rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (rt0.c0) AND (((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1))) BETWEEN (rt0.c0) AND (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT * FROM vt0, t1, rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (rt0.c0) AND (((rt0.c1) IS FALSE))));
SELECT ALL * FROM v0 WHERE ((~ (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (v0.c0)));
SELECT * FROM v0 INNER JOIN rt0 ON ((+ (vt0.c0)) IN ()) FULL OUTER JOIN t1 ON ((((((((CAST(v0.c0 AS INTEGER))AND(((rt0.c2)-(v0.c0)))))OR(CAST(v0.c0 AS BLOB))))OR(NULL)))OR(NULL)) CROSS JOIN vt0 ON TRIM(DISTINCT (vt0.c0 IN (v0.c0)), (((vt0.c0, rt0.c0, rt0.c0))<>((vt0.c0, rt0.c1, rt0.c2)))) WHERE (CASE WHEN x'' THEN rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((+ (vt0.c0)) IN ()) FULL OUTER JOIN t1 ON ((((((((CAST(v0.c0 AS INTEGER))AND(((rt0.c2)-(v0.c0)))))OR(CAST(v0.c0 AS BLOB))))OR(NULL)))OR(NULL)) CROSS JOIN vt0 ON TRIM(DISTINCT (vt0.c0 IN (v0.c0)), (((vt0.c0, rt0.c0, rt0.c0))!=((vt0.c0, rt0.c1, rt0.c2)))));
SELECT * FROM v0 INNER JOIN rt0 ON ((+ (vt0.c0)) IN ()) FULL OUTER JOIN t1 ON ((((((((CAST(v0.c0 AS INTEGER))AND(((rt0.c2)-(v0.c0)))))OR(CAST(v0.c0 AS BLOB))))OR(NULL)))OR(NULL)) CROSS JOIN vt0 ON TRIM(DISTINCT (vt0.c0 IN (v0.c0)), (((vt0.c0, rt0.c0, rt0.c0))<>((vt0.c0, rt0.c1, rt0.c2)))) WHERE (CASE WHEN x'' THEN rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((+ (vt0.c0)) IN ()) FULL OUTER JOIN t1 ON ((((((((CAST(v0.c0 AS INTEGER))AND(((rt0.c2)-(v0.c0)))))OR(CAST(v0.c0 AS BLOB))))OR(NULL)))OR(NULL)) CROSS JOIN vt0 ON TRIM(DISTINCT (vt0.c0 IN (v0.c0)), (((vt0.c0, rt0.c0, rt0.c0))!=((vt0.c0, rt0.c1, rt0.c2)))));
SELECT * FROM v0 INNER JOIN rt0 ON ((+ (vt0.c0)) IN ()) FULL OUTER JOIN t1 ON ((((((((CAST(v0.c0 AS INTEGER))AND(((rt0.c2)-(v0.c0)))))OR(CAST(v0.c0 AS BLOB))))OR(NULL)))OR(NULL)) CROSS JOIN vt0 ON TRIM(DISTINCT (vt0.c0 IN (v0.c0)), (((vt0.c0, rt0.c0, rt0.c0))<>((vt0.c0, rt0.c1, rt0.c2)))) WHERE (CASE WHEN x'' THEN rt0.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN '' ELSE rt0.c0 END)<<(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))))) ORDER BY COALESCE(DISTINCT ((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)), ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))), 0.5534757388887916 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c1 THEN '' ELSE rt0.c0 END)<<(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT ((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)), ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))), 0.5534757388887916 ASC);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN '' ELSE rt0.c0 END)<<(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))))) ORDER BY COALESCE(DISTINCT ((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)), ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))), 0.5534757388887916 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c1 THEN '' ELSE rt0.c0 END)<<(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT ((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)), ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))), 0.5534757388887916 ASC);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN '' ELSE rt0.c0 END)<<(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))))) ORDER BY COALESCE(DISTINCT ((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)), ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))), 0.5534757388887916 ASC;
SELECT * FROM t1, v0 CROSS JOIN vt0 ON t1.c0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'C	/i' END)||(((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))OR(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'C	/i' END)||(((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))OR(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM t1, v0 CROSS JOIN vt0 ON t1.c0);
SELECT * FROM t1, v0 CROSS JOIN vt0 ON t1.c0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'C	/i' END)||(((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))OR(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'C	/i' END)||(((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))OR(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM t1, v0 CROSS JOIN vt0 ON t1.c0);
SELECT * FROM t1, v0 CROSS JOIN vt0 ON t1.c0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'C	/i' END)||(((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))OR(v0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN v0 ON (~ (((t1.c0)AND(vt0.c0)))) LEFT OUTER JOIN vt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)<=(((vt0.c0) NOT NULL))) WHERE ((v0.c0 IN ())) ORDER BY '7Wy0[%}(' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM t1 CROSS JOIN v0 ON (~ (((t1.c0)AND(vt0.c0)))) LEFT OUTER JOIN vt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)<=(((vt0.c0) NOT NULL))) ORDER BY '7Wy0[%}(' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN v0 ON (~ (((t1.c0)AND(vt0.c0)))) LEFT OUTER JOIN vt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)<=(((vt0.c0) NOT NULL))) WHERE ((v0.c0 IN ())) ORDER BY '7Wy0[%}(' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM t1 CROSS JOIN v0 ON (~ (((t1.c0)AND(vt0.c0)))) LEFT OUTER JOIN vt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)<=(((vt0.c0) NOT NULL))) ORDER BY '7Wy0[%}(' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN v0 ON (~ (((t1.c0)AND(vt0.c0)))) LEFT OUTER JOIN vt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)<=(((vt0.c0) NOT NULL))) WHERE ((v0.c0 IN ())) ORDER BY '7Wy0[%}(' DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN x'' ELSE v0.c0 END) BETWEEN (((v0.c0) NOTNULL)) AND ((v0.c0 IN (v0.c0))))) ORDER BY (~ (NULL))  NULLS LAST, v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN x'' ELSE v0.c0 END) BETWEEN (((v0.c0) NOTNULL)) AND ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (~ (NULL))  NULLS LAST, v0.c0 ASC);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN x'' ELSE v0.c0 END) BETWEEN (((v0.c0) NOTNULL)) AND ((v0.c0 IN (v0.c0))))) ORDER BY (~ (NULL))  NULLS LAST, v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN x'' ELSE v0.c0 END) BETWEEN (((v0.c0) NOTNULL)) AND ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (~ (NULL))  NULLS LAST, v0.c0 ASC);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN x'' ELSE v0.c0 END) BETWEEN (((v0.c0) NOTNULL)) AND ((v0.c0 IN (v0.c0))))) ORDER BY (~ (NULL))  NULLS LAST, v0.c0 ASC;
SELECT * FROM t1, vt0 INNER JOIN v0 ON NULL WHERE (CAST(((((vt0.c0)AND(v0.c0)))AND(t1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(v0.c0)))AND(t1.c0)) AS INTEGER)) IS TRUE)  as count FROM t1, vt0 INNER JOIN v0 ON NULL);
SELECT * FROM t1, vt0 INNER JOIN v0 ON NULL WHERE (CAST(((((vt0.c0)AND(v0.c0)))AND(t1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(v0.c0)))AND(t1.c0)) AS INTEGER)) IS TRUE)  as count FROM t1, vt0 INNER JOIN v0 ON NULL);
SELECT * FROM t1, vt0 INNER JOIN v0 ON NULL WHERE (CAST(((((vt0.c0)AND(v0.c0)))AND(t1.c0)) AS INTEGER));
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (CASE CAST(v0.c0 AS TEXT)  WHEN '' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END WHEN '1026727582' THEN (((rt0.c2))>((rt0.c2))) WHEN (NOT (rt0.c0)) THEN rt0.c0 COLLATE BINARY ELSE CAST(rt0.c1 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c0 AS TEXT)  WHEN '' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END WHEN '1026727582' THEN (((rt0.c2))>((rt0.c2))) WHEN (NOT (rt0.c0)) THEN rt0.c0 COLLATE BINARY ELSE CAST(rt0.c1 AS INTEGER) END) IS TRUE)  as count FROM v0, rt0, vt0, t1);
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (CASE CAST(v0.c0 AS TEXT)  WHEN '' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END WHEN '1026727582' THEN (((rt0.c2))>((rt0.c2))) WHEN (NOT (rt0.c0)) THEN rt0.c0 COLLATE BINARY ELSE CAST(rt0.c1 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c0 AS TEXT)  WHEN '' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END WHEN '1026727582' THEN (((rt0.c2))>((rt0.c2))) WHEN (NOT (rt0.c0)) THEN rt0.c0 COLLATE BINARY ELSE CAST(rt0.c1 AS INTEGER) END) IS TRUE)  as count FROM v0, rt0, vt0, t1);
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (CASE CAST(v0.c0 AS TEXT)  WHEN '' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END WHEN '1026727582' THEN (((rt0.c2))>((rt0.c2))) WHEN (NOT (rt0.c0)) THEN rt0.c0 COLLATE BINARY ELSE CAST(rt0.c1 AS INTEGER) END);
SELECT COUNT(*) FROM t1, v0 WHERE (CASE WHEN LIKELIHOOD(v0.c0, 0.9595069798363829) THEN ((t1.c0) BETWEEN ('') AND (v0.c0)) END) ORDER BY v0.c0, (v0.c0 IN (t1.c0)) COLLATE BINARY  NULLS FIRST, (- (((v0.c0)AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(v0.c0, 0.9595069798363829) THEN ((t1.c0) BETWEEN ('') AND (v0.c0)) END) IS TRUE)  as count FROM t1, v0 ORDER BY v0.c0, (v0.c0 IN (t1.c0)) COLLATE BINARY  NULLS FIRST, (- (((v0.c0)AND(v0.c0)))));
SELECT COUNT(*) FROM t1, v0 WHERE (CASE WHEN LIKELIHOOD(v0.c0, 0.9595069798363829) THEN ((t1.c0) BETWEEN ('') AND (v0.c0)) END) ORDER BY v0.c0, (v0.c0 IN (t1.c0)) COLLATE BINARY  NULLS FIRST, (- (((v0.c0)AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(v0.c0, 0.9595069798363829) THEN ((t1.c0) BETWEEN ('') AND (v0.c0)) END) IS TRUE)  as count FROM t1, v0 ORDER BY v0.c0, (v0.c0 IN (t1.c0)) COLLATE BINARY  NULLS FIRST, (- (((v0.c0)AND(v0.c0)))));
SELECT COUNT(*) FROM t1, v0 WHERE (CASE WHEN LIKELIHOOD(v0.c0, 0.9595069798363829) THEN ((t1.c0) BETWEEN ('') AND (v0.c0)) END) ORDER BY v0.c0, (v0.c0 IN (t1.c0)) COLLATE BINARY  NULLS FIRST, (- (((v0.c0)AND(v0.c0))));
SELECT ALL * FROM t1, vt0, v0 WHERE (((((vt0.c0) NOTNULL))>>(0.19198477956103444))) ORDER BY (((0.24091416487392647)<=(t1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))>>(0.19198477956103444))) IS TRUE)  as count FROM t1, vt0, v0 ORDER BY (((0.24091416487392647)<=(t1.c0)) IN ()) DESC);
SELECT ALL * FROM t1, vt0, v0 WHERE (((((vt0.c0) NOTNULL))>>(0.19198477956103444))) ORDER BY (((0.24091416487392647)<=(t1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))>>(0.19198477956103444))) IS TRUE)  as count FROM t1, vt0, v0 ORDER BY (((0.24091416487392647)<=(t1.c0)) IN ()) DESC);
SELECT ALL * FROM t1, vt0, v0 WHERE (((((vt0.c0) NOTNULL))>>(0.19198477956103444))) ORDER BY (((0.24091416487392647)<=(t1.c0)) IN ()) DESC;
SELECT COUNT(*) FROM t1, rt0, v0 LEFT OUTER JOIN vt0 ON (((NOT (rt0.c2))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (t1.c0)) WHERE (((CAST(v0.c0 AS REAL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) AND (CAST(rt0.c0 AS INTEGER)))) ORDER BY rt0.c1 ASC  NULLS LAST, ((((CASE WHEN NULL THEN v0.c0 END)OR((((vt0.c0, 0.026198770839326202, t1.c0))==((vt0.c0, t1.c0, rt0.c2))))))AND((t1.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) AND (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t1, rt0, v0 LEFT OUTER JOIN vt0 ON (((NOT (rt0.c2))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (t1.c0)) ORDER BY rt0.c1 ASC  NULLS LAST, ((((CASE WHEN NULL THEN v0.c0 END)OR((((vt0.c0, 0.026198770839326202, t1.c0))=((vt0.c0, t1.c0, rt0.c2))))))AND((t1.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, v0 LEFT OUTER JOIN vt0 ON (((NOT (rt0.c2))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (t1.c0)) WHERE (((CAST(v0.c0 AS REAL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) AND (CAST(rt0.c0 AS INTEGER)))) ORDER BY rt0.c1 ASC  NULLS LAST, ((((CASE WHEN NULL THEN v0.c0 END)OR((((vt0.c0, 0.026198770839326202, t1.c0))==((vt0.c0, t1.c0, rt0.c2))))))AND((t1.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) AND (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t1, rt0, v0 LEFT OUTER JOIN vt0 ON (((NOT (rt0.c2))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (t1.c0)) ORDER BY rt0.c1 ASC  NULLS LAST, ((((CASE WHEN NULL THEN v0.c0 END)OR((((vt0.c0, 0.026198770839326202, t1.c0))=((vt0.c0, t1.c0, rt0.c2))))))AND((t1.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0, t1 WHERE (vt0.c0) ORDER BY (+ (rt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, rt0, t1 ORDER BY (+ (rt0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0, v0, rt0, t1 WHERE (vt0.c0) ORDER BY (+ (rt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, rt0, t1 ORDER BY (+ (rt0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0, v0, rt0, t1 WHERE (vt0.c0) ORDER BY (+ (rt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((rt0.c2) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((rt0.c2) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((rt0.c2) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0, t1, vt0 WHERE (NULLIF((rt0.c0 IN (v0.c0)), '2082630964')) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF((rt0.c0 IN (v0.c0)), '2082630964')) IS TRUE)  as count FROM v0, rt0, t1, vt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM v0, rt0, t1, vt0 WHERE (NULLIF((rt0.c0 IN (v0.c0)), '2082630964')) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF((rt0.c0 IN (v0.c0)), '2082630964')) IS TRUE)  as count FROM v0, rt0, t1, vt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM v0, rt0, t1, vt0 WHERE (NULLIF((rt0.c0 IN (v0.c0)), '2082630964')) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((t1.c0 IN (rt0.c0)))IS NOT(COALESCE(DISTINCT vt0.c0, '-1871729192'))) FULL OUTER JOIN v0 ON v0.c0 CROSS JOIN t1 ON (COALESCE(vt0.c0, rt0.c1) IN (rt0.c1 COLLATE BINARY)) WHERE ((((rt0.c2, rt0.c2, t1.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END, TRIM(v0.c0, rt0.c0), CASE WHEN rt0.c2 THEN x'5229' ELSE v0.c0 END)) AND ((rt0.c0 COLLATE NOCASE, (- (rt0.c0)), (rt0.c1 IN (v0.c0)))))) ORDER BY (((((((((((rt0.c2, rt0.c2, vt0.c0))<((rt0.c1, rt0.c0, rt0.c1))))OR(UNLIKELY(rt0.c0))))AND(((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND((t1.c0 IN ()))))AND(((0x1)|(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c2, t1.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END, TRIM(v0.c0, rt0.c0), CASE WHEN rt0.c2 THEN x'5229' ELSE v0.c0 END)) AND ((rt0.c0 COLLATE NOCASE, (- (rt0.c0)), (rt0.c1 IN (v0.c0)))))) IS TRUE)  as count FROM rt0 NOT INDEXED LEFT OUTER JOIN vt0 ON (((t1.c0 IN (rt0.c0)))IS NOT(COALESCE(DISTINCT vt0.c0, '-1871729192'))) FULL OUTER JOIN v0 ON v0.c0 CROSS JOIN t1 ON (COALESCE(vt0.c0, rt0.c1) IN (rt0.c1 COLLATE BINARY)) ORDER BY (((((((((((rt0.c2, rt0.c2, vt0.c0))<((rt0.c1, rt0.c0, rt0.c1))))OR(UNLIKELY(rt0.c0))))AND(((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND((t1.c0 IN ()))))AND(((0x1)|(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((t1.c0 IN (rt0.c0)))IS NOT(COALESCE(DISTINCT vt0.c0, '-1871729192'))) FULL OUTER JOIN v0 ON v0.c0 CROSS JOIN t1 ON (COALESCE(vt0.c0, rt0.c1) IN (rt0.c1 COLLATE BINARY)) WHERE ((((rt0.c2, rt0.c2, t1.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END, TRIM(v0.c0, rt0.c0), CASE WHEN rt0.c2 THEN x'5229' ELSE v0.c0 END)) AND ((rt0.c0 COLLATE NOCASE, (- (rt0.c0)), (rt0.c1 IN (v0.c0)))))) ORDER BY (((((((((((rt0.c2, rt0.c2, vt0.c0))<((rt0.c1, rt0.c0, rt0.c1))))OR(UNLIKELY(rt0.c0))))AND(((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND((t1.c0 IN ()))))AND(((0x1)|(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c2, t1.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END, TRIM(v0.c0, rt0.c0), CASE WHEN rt0.c2 THEN x'5229' ELSE v0.c0 END)) AND ((rt0.c0 COLLATE NOCASE, (- (rt0.c0)), (rt0.c1 IN (v0.c0)))))) IS TRUE)  as count FROM rt0 NOT INDEXED LEFT OUTER JOIN vt0 ON (((t1.c0 IN (rt0.c0)))IS NOT(COALESCE(DISTINCT vt0.c0, '-1871729192'))) FULL OUTER JOIN v0 ON v0.c0 CROSS JOIN t1 ON (COALESCE(vt0.c0, rt0.c1) IN (rt0.c1 COLLATE BINARY)) ORDER BY (((((((((((rt0.c2, rt0.c2, vt0.c0))<((rt0.c1, rt0.c0, rt0.c1))))OR(UNLIKELY(rt0.c0))))AND(((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND((t1.c0 IN ()))))AND(((0x1)|(rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (t1.c0 IN (CAST(v0.c0 AS INTEGER))) INNER JOIN t1 ON (((rt0.c0)) BETWEEN ((((rt0.c0)*(rt0.c1)))) AND ((((v0.c0) IS FALSE)))) FULL OUTER JOIN v0 ON (((((v0.c0)<>(v0.c0))))>=(((vt0.c0 IN ())))) WHERE (0.3411107403909689);
SELECT SUM(count) FROM (SELECT ((0.3411107403909689) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (t1.c0 IN (CAST(v0.c0 AS INTEGER))) INNER JOIN t1 ON (((rt0.c0)) BETWEEN ((((rt0.c0)*(rt0.c1)))) AND ((((v0.c0) IS FALSE)))) FULL OUTER JOIN v0 ON (((((v0.c0)<>(v0.c0))))>=(((vt0.c0 IN ())))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (t1.c0 IN (CAST(v0.c0 AS INTEGER))) INNER JOIN t1 ON (((rt0.c0)) BETWEEN ((((rt0.c0)*(rt0.c1)))) AND ((((v0.c0) IS FALSE)))) FULL OUTER JOIN v0 ON (((((v0.c0)<>(v0.c0))))>=(((vt0.c0 IN ())))) WHERE (0.3411107403909689);
SELECT SUM(count) FROM (SELECT ((0.3411107403909689) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (t1.c0 IN (CAST(v0.c0 AS INTEGER))) INNER JOIN t1 ON (((rt0.c0)) BETWEEN ((((rt0.c0)*(rt0.c1)))) AND ((((v0.c0) IS FALSE)))) FULL OUTER JOIN v0 ON (((((v0.c0)<>(v0.c0))))>=(((vt0.c0 IN ())))));
SELECT * FROM rt0 FULL OUTER JOIN t1 ON (((((t1.c0)AND(rt0.c2)))AND(rt0.c2)) IN ()) RIGHT OUTER JOIN vt0 ON 1.82408729E9 WHERE (CASE MAX(t1.c0, vt0.c0)  WHEN x'' THEN ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN (((t1.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) WHEN (NOT (rt0.c1)) THEN x'' ELSE ('1391499269' IN ()) END) ORDER BY (((((((t1.c0)OR(t1.c0)))AND(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c1 END, t1.c0))<>((((t1.c0) ISNULL), CASE WHEN t1.c0 THEN rt0.c2 ELSE rt0.c1 END, (vt0.c0 IN (rt0.c1))))) DESC, ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE MAX(t1.c0, vt0.c0)  WHEN x'' THEN ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN (((t1.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) WHEN (NOT (rt0.c1)) THEN x'' ELSE ('1391499269' IN ()) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (((((t1.c0)AND(rt0.c2)))AND(rt0.c2)) IN ()) RIGHT OUTER JOIN vt0 ON 1.82408729E9 ORDER BY (((((((t1.c0)OR(t1.c0)))AND(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c1 END, t1.c0))<>((((t1.c0) ISNULL), CASE WHEN t1.c0 THEN rt0.c2 ELSE rt0.c1 END, (vt0.c0 IN (rt0.c1))))) DESC, ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) ASC);
SELECT * FROM rt0 FULL OUTER JOIN t1 ON (((((t1.c0)AND(rt0.c2)))AND(rt0.c2)) IN ()) RIGHT OUTER JOIN vt0 ON 1.82408729E9 WHERE (CASE MAX(t1.c0, vt0.c0)  WHEN x'' THEN ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN (((t1.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) WHEN (NOT (rt0.c1)) THEN x'' ELSE ('1391499269' IN ()) END) ORDER BY (((((((t1.c0)OR(t1.c0)))AND(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c1 END, t1.c0))<>((((t1.c0) ISNULL), CASE WHEN t1.c0 THEN rt0.c2 ELSE rt0.c1 END, (vt0.c0 IN (rt0.c1))))) DESC, ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE MAX(t1.c0, vt0.c0)  WHEN x'' THEN ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN (((t1.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) WHEN (NOT (rt0.c1)) THEN x'' ELSE ('1391499269' IN ()) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (((((t1.c0)AND(rt0.c2)))AND(rt0.c2)) IN ()) RIGHT OUTER JOIN vt0 ON 1.82408729E9 ORDER BY (((((((t1.c0)OR(t1.c0)))AND(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c1 END, t1.c0))<>((((t1.c0) ISNULL), CASE WHEN t1.c0 THEN rt0.c2 ELSE rt0.c1 END, (vt0.c0 IN (rt0.c1))))) DESC, ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) ASC);
SELECT * FROM rt0 FULL OUTER JOIN t1 ON (((((t1.c0)AND(rt0.c2)))AND(rt0.c2)) IN ()) RIGHT OUTER JOIN vt0 ON 1.82408729E9 WHERE (CASE MAX(t1.c0, vt0.c0)  WHEN x'' THEN ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN (((t1.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) WHEN (NOT (rt0.c1)) THEN x'' ELSE ('1391499269' IN ()) END) ORDER BY (((((((t1.c0)OR(t1.c0)))AND(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c1 END, t1.c0))<>((((t1.c0) ISNULL), CASE WHEN t1.c0 THEN rt0.c2 ELSE rt0.c1 END, (vt0.c0 IN (rt0.c1))))) DESC, ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) ASC;
SELECT * FROM vt0 RIGHT OUTER JOIN t1 ON ((NULL)GLOB(((vt0.c0) NOTNULL))) WHERE (vt0.c0) ORDER BY CASE ((t1.c0) BETWEEN (0Xffffffffc4c29b84) AND (vt0.c0))  WHEN (((0.25665256901877187, vt0.c0, t1.c0))<((t1.c0, t1.c0, vt0.c0))) THEN 0.9161511072299556 WHEN CASE vt0.c0  WHEN NULL THEN t1.c0 WHEN 0Xffffffffbf0ae5c6 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(t1.c0 AS TEXT) THEN TOTAL_CHANGES() END;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NOT INDEXED RIGHT OUTER JOIN t1 ON ((NULL)GLOB(((vt0.c0) NOTNULL))) ORDER BY CASE ((t1.c0) BETWEEN (0xffffffffc4c29b84) AND (vt0.c0))  WHEN (((0.25665256901877187, vt0.c0, t1.c0))<((t1.c0, t1.c0, vt0.c0))) THEN 0.9161511072299556 WHEN CASE vt0.c0  WHEN NULL THEN t1.c0 WHEN 0xffffffffbf0ae5c6 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(t1.c0 AS TEXT) THEN TOTAL_CHANGES() END);
SELECT * FROM vt0 RIGHT OUTER JOIN t1 ON ((NULL)GLOB(((vt0.c0) NOTNULL))) WHERE (vt0.c0) ORDER BY CASE ((t1.c0) BETWEEN (0Xffffffffc4c29b84) AND (vt0.c0))  WHEN (((0.25665256901877187, vt0.c0, t1.c0))<((t1.c0, t1.c0, vt0.c0))) THEN 0.9161511072299556 WHEN CASE vt0.c0  WHEN NULL THEN t1.c0 WHEN 0Xffffffffbf0ae5c6 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(t1.c0 AS TEXT) THEN TOTAL_CHANGES() END;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NOT INDEXED RIGHT OUTER JOIN t1 ON ((NULL)GLOB(((vt0.c0) NOTNULL))) ORDER BY CASE ((t1.c0) BETWEEN (0xffffffffc4c29b84) AND (vt0.c0))  WHEN (((0.25665256901877187, vt0.c0, t1.c0))<((t1.c0, t1.c0, vt0.c0))) THEN 0.9161511072299556 WHEN CASE vt0.c0  WHEN NULL THEN t1.c0 WHEN 0xffffffffbf0ae5c6 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(t1.c0 AS TEXT) THEN TOTAL_CHANGES() END);
SELECT * FROM vt0 RIGHT OUTER JOIN t1 ON ((NULL)GLOB(((vt0.c0) NOTNULL))) WHERE (vt0.c0) ORDER BY CASE ((t1.c0) BETWEEN (0Xffffffffc4c29b84) AND (vt0.c0))  WHEN (((0.25665256901877187, vt0.c0, t1.c0))<((t1.c0, t1.c0, vt0.c0))) THEN 0.9161511072299556 WHEN CASE vt0.c0  WHEN NULL THEN t1.c0 WHEN 0Xffffffffbf0ae5c6 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(t1.c0 AS TEXT) THEN TOTAL_CHANGES() END;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (t1.c0) ORDER BY ((((t1.c0) IS FALSE))||(JULIANDAY(vt0.c0, vt0.c0, vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((t1.c0) IS FALSE))||(JULIANDAY(vt0.c0, vt0.c0, vt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (t1.c0) ORDER BY ((((t1.c0) IS FALSE))||(JULIANDAY(vt0.c0, vt0.c0, vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((t1.c0) IS FALSE))||(JULIANDAY(vt0.c0, vt0.c0, vt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (t1.c0) ORDER BY ((((t1.c0) IS FALSE))||(JULIANDAY(vt0.c0, vt0.c0, vt0.c0))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0, v0 LEFT OUTER JOIN rt0 ON (((((((NULL)OR(vt0.c0)))OR(vt0.c0))))>((CAST(rt0.c1 AS TEXT)))) WHERE ((+ ((- (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (t1.c0))))) IS TRUE)  as count FROM t1, vt0, v0 LEFT OUTER JOIN rt0 ON (((((((NULL)OR(vt0.c0)))OR(vt0.c0))))>((CAST(rt0.c1 AS TEXT)))));
SELECT ALL COUNT(*) FROM t1, vt0, v0 LEFT OUTER JOIN rt0 ON (((((((NULL)OR(vt0.c0)))OR(vt0.c0))))>((CAST(rt0.c1 AS TEXT)))) WHERE ((+ ((- (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (t1.c0))))) IS TRUE)  as count FROM t1, vt0, v0 LEFT OUTER JOIN rt0 ON (((((((NULL)OR(vt0.c0)))OR(vt0.c0))))>((CAST(rt0.c1 AS TEXT)))));
SELECT ALL COUNT(*) FROM t1, vt0, v0 LEFT OUTER JOIN rt0 ON (((((((NULL)OR(vt0.c0)))OR(vt0.c0))))>((CAST(rt0.c1 AS TEXT)))) WHERE ((+ ((- (t1.c0)))));
SELECT COUNT(*) FROM t1, v0 WHERE (HEX(v0.c0) COLLATE NOCASE) ORDER BY CAST((((t1.c0, v0.c0, v0.c0)) NOT BETWEEN ((1982212350, t1.c0, t1.c0)) AND ((v0.c0, 0.927614910861071, t1.c0))) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM t1, v0 ORDER BY CAST((((t1.c0, v0.c0, v0.c0)) NOT BETWEEN ((1982212350, t1.c0, t1.c0)) AND ((v0.c0, 0.927614910861071, t1.c0))) AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0 WHERE (HEX(v0.c0) COLLATE NOCASE) ORDER BY CAST((((t1.c0, v0.c0, v0.c0)) NOT BETWEEN ((1982212350, t1.c0, t1.c0)) AND ((v0.c0, 0.927614910861071, t1.c0))) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM t1, v0 ORDER BY CAST((((t1.c0, v0.c0, v0.c0)) NOT BETWEEN ((1982212350, t1.c0, t1.c0)) AND ((v0.c0, 0.927614910861071, t1.c0))) AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0 WHERE (HEX(v0.c0) COLLATE NOCASE) ORDER BY CAST((((t1.c0, v0.c0, v0.c0)) NOT BETWEEN ((1982212350, t1.c0, t1.c0)) AND ((v0.c0, 0.927614910861071, t1.c0))) AS INTEGER) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((t1.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((t1.c0) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((t1.c0) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c0) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ())) ORDER BY ((((((((LIKELIHOOD(DISTINCT vt0.c0, 0.5555848453823079))AND((vt0.c0 IN ()))))OR(NULL)))AND((((vt0.c0))<=((vt0.c0))))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((LIKELIHOOD(DISTINCT vt0.c0, 0.5555848453823079))AND((vt0.c0 IN ()))))OR(NULL)))AND((((vt0.c0))<=((vt0.c0))))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ())) ORDER BY ((((((((LIKELIHOOD(DISTINCT vt0.c0, 0.5555848453823079))AND((vt0.c0 IN ()))))OR(NULL)))AND((((vt0.c0))<=((vt0.c0))))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((LIKELIHOOD(DISTINCT vt0.c0, 0.5555848453823079))AND((vt0.c0 IN ()))))OR(NULL)))AND((((vt0.c0))<=((vt0.c0))))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ())) ORDER BY ((((((((LIKELIHOOD(DISTINCT vt0.c0, 0.5555848453823079))AND((vt0.c0 IN ()))))OR(NULL)))AND((((vt0.c0))<=((vt0.c0))))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT ALL COUNT(*) FROM t1, vt0 INNER JOIN v0 ON TRIM(DISTINCT (t1.c0 IN (NULL)), (+ (vt0.c0))) WHERE (CASE (vt0.c0 IN ())  WHEN CASE WHEN t1.c0 THEN v0.c0 ELSE vt0.c0 END THEN ((((t1.c0)AND(vt0.c0)))AND(vt0.c0)) END) ORDER BY (+ (((((((((((((v0.c0)OR(NULL)))AND('-1089804858')))AND(t1.c0)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN CASE WHEN t1.c0 THEN v0.c0 ELSE vt0.c0 END THEN ((((t1.c0)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM t1, vt0 INNER JOIN v0 ON TRIM(DISTINCT (t1.c0 IN (NULL)), (+ (vt0.c0))) ORDER BY (+ (((((((((((((v0.c0)OR(NULL)))AND('-1089804858')))AND(t1.c0)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 INNER JOIN v0 ON TRIM(DISTINCT (t1.c0 IN (NULL)), (+ (vt0.c0))) WHERE (CASE (vt0.c0 IN ())  WHEN CASE WHEN t1.c0 THEN v0.c0 ELSE vt0.c0 END THEN ((((t1.c0)AND(vt0.c0)))AND(vt0.c0)) END) ORDER BY (+ (((((((((((((v0.c0)OR(NULL)))AND('-1089804858')))AND(t1.c0)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN CASE WHEN t1.c0 THEN v0.c0 ELSE vt0.c0 END THEN ((((t1.c0)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM t1, vt0 INNER JOIN v0 ON TRIM(DISTINCT (t1.c0 IN (NULL)), (+ (vt0.c0))) ORDER BY (+ (((((((((((((v0.c0)OR(NULL)))AND('-1089804858')))AND(t1.c0)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 INNER JOIN v0 ON TRIM(DISTINCT (t1.c0 IN (NULL)), (+ (vt0.c0))) WHERE (CASE (vt0.c0 IN ())  WHEN CASE WHEN t1.c0 THEN v0.c0 ELSE vt0.c0 END THEN ((((t1.c0)AND(vt0.c0)))AND(vt0.c0)) END) ORDER BY (+ (((((((((((((v0.c0)OR(NULL)))AND('-1089804858')))AND(t1.c0)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON CASE CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END  WHEN CAST('' AS REAL) THEN (rt0.c2 IN ()) WHEN '4\nM>' THEN ((vt0.c0)<>(NULL)) WHEN (- (vt0.c0)) THEN IFNULL(DISTINCT x'', rt0.c2) END WHERE ((NOT (rt0.c1))) ORDER BY rt0.c2  NULLS FIRST, json_quote((((rt0.c2))<=((rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END  WHEN CAST('' AS REAL) THEN (rt0.c2 IN ()) WHEN '4\nM>' THEN ((vt0.c0)<>(NULL)) WHEN (- (vt0.c0)) THEN IFNULL(DISTINCT x'', rt0.c2) END ORDER BY rt0.c2  NULLS FIRST, json_quote((((rt0.c2))<=((rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON CASE CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END  WHEN CAST('' AS REAL) THEN (rt0.c2 IN ()) WHEN '4\nM>' THEN ((vt0.c0)<>(NULL)) WHEN (- (vt0.c0)) THEN IFNULL(DISTINCT x'', rt0.c2) END WHERE ((NOT (rt0.c1))) ORDER BY rt0.c2  NULLS FIRST, json_quote((((rt0.c2))<=((rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END  WHEN CAST('' AS REAL) THEN (rt0.c2 IN ()) WHEN '4\nM>' THEN ((vt0.c0)<>(NULL)) WHEN (- (vt0.c0)) THEN IFNULL(DISTINCT x'', rt0.c2) END ORDER BY rt0.c2  NULLS FIRST, json_quote((((rt0.c2))<=((rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON CASE CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END  WHEN CAST('' AS REAL) THEN (rt0.c2 IN ()) WHEN '4\nM>' THEN ((vt0.c0)<>(NULL)) WHEN (- (vt0.c0)) THEN IFNULL(DISTINCT x'', rt0.c2) END WHERE ((NOT (rt0.c1))) ORDER BY rt0.c2  NULLS FIRST, json_quote((((rt0.c2))<=((rt0.c1))))  NULLS FIRST;
SELECT * FROM v0, t1 INDEXED BY i83, vt0, rt0 WHERE (((((((((t1.c0)AND(((t1.c0)>(v0.c0)))))OR((rt0.c0 IN ()))))OR('-1516070946' COLLATE RTRIM)))OR(NULLIF(vt0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((t1.c0)AND(((t1.c0)>(v0.c0)))))OR((rt0.c0 IN ()))))OR('-1516070946' COLLATE RTRIM)))OR(NULLIF(vt0.c0, rt0.c2)))) IS TRUE)  as count FROM v0, t1 INDEXED BY i83, vt0, rt0);
SELECT * FROM v0, t1 INDEXED BY i83, vt0, rt0 WHERE (((((((((t1.c0)AND(((t1.c0)>(v0.c0)))))OR((rt0.c0 IN ()))))OR('-1516070946' COLLATE RTRIM)))OR(NULLIF(vt0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((t1.c0)AND(((t1.c0)>(v0.c0)))))OR((rt0.c0 IN ()))))OR('-1516070946' COLLATE RTRIM)))OR(NULLIF(vt0.c0, rt0.c2)))) IS TRUE)  as count FROM v0, t1 INDEXED BY i83, vt0, rt0);
SELECT * FROM v0, t1 INDEXED BY i83, vt0, rt0 WHERE (((((((((t1.c0)AND(((t1.c0)>(v0.c0)))))OR((rt0.c0 IN ()))))OR('-1516070946' COLLATE RTRIM)))OR(NULLIF(vt0.c0, rt0.c2))));
SELECT COUNT(*) FROM vt0, v0, t1 WHERE ((((v0.c0, vt0.c0, t1.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (NULL) AND (t1.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END, v0.c0 COLLATE RTRIM)) AND ((((t1.c0)&(t1.c0)), (((t1.c0))==((t1.c0))), ((v0.c0)IS NOT(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, vt0.c0, t1.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (NULL) AND (t1.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END, v0.c0 COLLATE RTRIM)) AND ((((t1.c0)&(t1.c0)), (((t1.c0))==((t1.c0))), ((v0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0, t1);
SELECT COUNT(*) FROM vt0, v0, t1 WHERE ((((v0.c0, vt0.c0, t1.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (NULL) AND (t1.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END, v0.c0 COLLATE RTRIM)) AND ((((t1.c0)&(t1.c0)), (((t1.c0))==((t1.c0))), ((v0.c0)IS NOT(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, vt0.c0, t1.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (NULL) AND (t1.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END, v0.c0 COLLATE RTRIM)) AND ((((t1.c0)&(t1.c0)), (((t1.c0))==((t1.c0))), ((v0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0, t1);
SELECT COUNT(*) FROM vt0, v0, t1 WHERE ((((v0.c0, vt0.c0, t1.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (NULL) AND (t1.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END, v0.c0 COLLATE RTRIM)) AND ((((t1.c0)&(t1.c0)), (((t1.c0))==((t1.c0))), ((v0.c0)IS NOT(vt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((x'', rt0.c2, rt0.c0))<((rt0.c1, rt0.c0, rt0.c0))))AND(((rt0.c0) NOTNULL))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))))OR(((rt0.c0)<>(rt0.c1)))))AND((+ (rt0.c2))))) ORDER BY CASE JULIANDAY(rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)  WHEN x'7d4e' THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN (((rt0.c2))<>((rt0.c2))) THEN rt0.c1 ELSE HEX(DISTINCT rt0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((x'', rt0.c2, rt0.c0))<((rt0.c1, rt0.c0, rt0.c0))))AND(((rt0.c0) NOTNULL))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))))OR(((rt0.c0)!=(rt0.c1)))))AND((+ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE JULIANDAY(rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)  WHEN x'7d4e' THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN (((rt0.c2))!=((rt0.c2))) THEN rt0.c1 ELSE HEX(DISTINCT rt0.c2) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((x'', rt0.c2, rt0.c0))<((rt0.c1, rt0.c0, rt0.c0))))AND(((rt0.c0) NOTNULL))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))))OR(((rt0.c0)<>(rt0.c1)))))AND((+ (rt0.c2))))) ORDER BY CASE JULIANDAY(rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)  WHEN x'7d4e' THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN (((rt0.c2))<>((rt0.c2))) THEN rt0.c1 ELSE HEX(DISTINCT rt0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((x'', rt0.c2, rt0.c0))<((rt0.c1, rt0.c0, rt0.c0))))AND(((rt0.c0) NOTNULL))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))))OR(((rt0.c0)!=(rt0.c1)))))AND((+ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE JULIANDAY(rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)  WHEN x'7d4e' THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN (((rt0.c2))!=((rt0.c2))) THEN rt0.c1 ELSE HEX(DISTINCT rt0.c2) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((x'', rt0.c2, rt0.c0))<((rt0.c1, rt0.c0, rt0.c0))))AND(((rt0.c0) NOTNULL))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))))OR(((rt0.c0)<>(rt0.c1)))))AND((+ (rt0.c2))))) ORDER BY CASE JULIANDAY(rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)  WHEN x'7d4e' THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN (((rt0.c2))<>((rt0.c2))) THEN rt0.c1 ELSE HEX(DISTINCT rt0.c2) END  NULLS LAST;
SELECT COUNT(*) FROM v0, t1, vt0, rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM v0, t1, vt0, rt0);
SELECT COUNT(*) FROM v0, t1, vt0, rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM v0, t1, vt0, rt0);
SELECT COUNT(*) FROM v0, t1, vt0, rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((0.8165806503241984)>=(rt0.c0)) COLLATE RTRIM INNER JOIN v0 ON CASE WHEN ((v0.c0)>(rt0.c1)) THEN CAST(v0.c0 AS REAL) WHEN CAST(v0.c0 AS NUMERIC) THEN (('-733922293')IS NOT(vt0.c0)) WHEN ((((vt0.c0)AND(rt0.c2)))OR(rt0.c0)) THEN rt0.c2 COLLATE BINARY END WHERE (HEX(0.8288644067936978)) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND(LOWER(DISTINCT vt0.c0))))OR(((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(0.8288644067936978)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((0.8165806503241984)>=(rt0.c0)) COLLATE RTRIM INNER JOIN v0 ON CASE WHEN ((v0.c0)>(rt0.c1)) THEN CAST(v0.c0 AS REAL) WHEN CAST(v0.c0 AS NUMERIC) THEN (('-733922293')IS NOT(vt0.c0)) WHEN ((((vt0.c0)AND(rt0.c2)))OR(rt0.c0)) THEN rt0.c2 COLLATE BINARY END ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND(LOWER(DISTINCT vt0.c0))))OR(((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))) DESC);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((0.8165806503241984)>=(rt0.c0)) COLLATE RTRIM INNER JOIN v0 ON CASE WHEN ((v0.c0)>(rt0.c1)) THEN CAST(v0.c0 AS REAL) WHEN CAST(v0.c0 AS NUMERIC) THEN (('-733922293')IS NOT(vt0.c0)) WHEN ((((vt0.c0)AND(rt0.c2)))OR(rt0.c0)) THEN rt0.c2 COLLATE BINARY END WHERE (HEX(0.8288644067936978)) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND(LOWER(DISTINCT vt0.c0))))OR(((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(0.8288644067936978)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((0.8165806503241984)>=(rt0.c0)) COLLATE RTRIM INNER JOIN v0 ON CASE WHEN ((v0.c0)>(rt0.c1)) THEN CAST(v0.c0 AS REAL) WHEN CAST(v0.c0 AS NUMERIC) THEN (('-733922293')IS NOT(vt0.c0)) WHEN ((((vt0.c0)AND(rt0.c2)))OR(rt0.c0)) THEN rt0.c2 COLLATE BINARY END ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND(LOWER(DISTINCT vt0.c0))))OR(((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))) DESC);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((0.8165806503241984)>=(rt0.c0)) COLLATE RTRIM INNER JOIN v0 ON CASE WHEN ((v0.c0)>(rt0.c1)) THEN CAST(v0.c0 AS REAL) WHEN CAST(v0.c0 AS NUMERIC) THEN (('-733922293')IS NOT(vt0.c0)) WHEN ((((vt0.c0)AND(rt0.c2)))OR(rt0.c0)) THEN rt0.c2 COLLATE BINARY END WHERE (HEX(0.8288644067936978)) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND(LOWER(DISTINCT vt0.c0))))OR(((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))) DESC;
SELECT COUNT(*) FROM t1, rt0, vt0, v0 WHERE (((rt0.c1)IS NOT('-1803233345')));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS NOT('-1803233345'))) IS TRUE)  as count FROM t1, rt0, vt0, v0);
SELECT COUNT(*) FROM t1, rt0, vt0, v0 WHERE (((rt0.c1)IS NOT('-1803233345')));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS NOT('-1803233345'))) IS TRUE)  as count FROM t1, rt0, vt0, v0);
SELECT COUNT(*) FROM t1, rt0, vt0, v0 WHERE (((rt0.c1)IS NOT('-1803233345')));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((CASE WHEN v0.c0 THEN v0.c0 END)))) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 1983593967 ELSE v0.c0 END AS REAL)  NULLS LAST, 0Xffffffffce3ef555 ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((CASE WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 1983593967 ELSE v0.c0 END AS REAL)  NULLS LAST, 0Xffffffffce3ef555 ASC);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((CASE WHEN v0.c0 THEN v0.c0 END)))) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 1983593967 ELSE v0.c0 END AS REAL)  NULLS LAST, 0Xffffffffce3ef555 ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((CASE WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 1983593967 ELSE v0.c0 END AS REAL)  NULLS LAST, 0Xffffffffce3ef555 ASC);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((CASE WHEN v0.c0 THEN v0.c0 END)))) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 1983593967 ELSE v0.c0 END AS REAL)  NULLS LAST, 0Xffffffffce3ef555 ASC;
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0)|(v0.c0)), ((v0.c0)-(v0.c0)), ((v0.c0)<(v0.c0)))) AND ((((v0.c0)&(v0.c0)), ((v0.c0)>(v0.c0)), (((0.6547582662893073, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0)|(v0.c0)), ((v0.c0)-(v0.c0)), ((v0.c0)<(v0.c0)))) AND ((((v0.c0)&(v0.c0)), ((v0.c0)>(v0.c0)), (((0.6547582662893073, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0)|(v0.c0)), ((v0.c0)-(v0.c0)), ((v0.c0)<(v0.c0)))) AND ((((v0.c0)&(v0.c0)), ((v0.c0)>(v0.c0)), (((0.6547582662893073, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0)|(v0.c0)), ((v0.c0)-(v0.c0)), ((v0.c0)<(v0.c0)))) AND ((((v0.c0)&(v0.c0)), ((v0.c0)>(v0.c0)), (((0.6547582662893073, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0)|(v0.c0)), ((v0.c0)-(v0.c0)), ((v0.c0)<(v0.c0)))) AND ((((v0.c0)&(v0.c0)), ((v0.c0)>(v0.c0)), (((0.6547582662893073, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))))));
SELECT COUNT(*) FROM t1, vt0, v0, rt0 WHERE (t1.c0) ORDER BY (NOT (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 END)), ((v0.c0)GLOB(v0.c0)) COLLATE NOCASE ASC  NULLS LAST, ((CASE WHEN rt0.c0 THEN 1908378625 ELSE rt0.c0 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1, vt0, v0, rt0 ORDER BY (NOT (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 END)), ((v0.c0)GLOB(v0.c0)) COLLATE NOCASE ASC  NULLS LAST, ((CASE WHEN rt0.c0 THEN 1908378625 ELSE rt0.c0 END) NOT NULL) DESC);
SELECT COUNT(*) FROM t1, vt0, v0, rt0 WHERE (t1.c0) ORDER BY (NOT (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 END)), ((v0.c0)GLOB(v0.c0)) COLLATE NOCASE ASC  NULLS LAST, ((CASE WHEN rt0.c0 THEN 1908378625 ELSE rt0.c0 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1, vt0, v0, rt0 ORDER BY (NOT (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 END)), ((v0.c0)GLOB(v0.c0)) COLLATE NOCASE ASC  NULLS LAST, ((CASE WHEN rt0.c0 THEN 1908378625 ELSE rt0.c0 END) NOT NULL) DESC);
SELECT COUNT(*) FROM t1, vt0, v0, rt0 WHERE (t1.c0) ORDER BY (NOT (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 END)), ((v0.c0)GLOB(v0.c0)) COLLATE NOCASE ASC  NULLS LAST, ((CASE WHEN rt0.c0 THEN 1908378625 ELSE rt0.c0 END) NOT NULL) DESC;
SELECT * FROM v0, vt0 WHERE (((((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((v0.c0)IS(vt0.c0)))))AND(vt0.c0))) ORDER BY (((vt0.c0) IS FALSE) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((v0.c0)IS(vt0.c0)))))AND(vt0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0) IS FALSE) IN ()) DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((v0.c0)IS(vt0.c0)))))AND(vt0.c0))) ORDER BY (((vt0.c0) IS FALSE) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((v0.c0)IS(vt0.c0)))))AND(vt0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0) IS FALSE) IN ()) DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((v0.c0)IS(vt0.c0)))))AND(vt0.c0))) ORDER BY (((vt0.c0) IS FALSE) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0, v0 WHERE (((((((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))OR(((v0.c0) IS FALSE))))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY (((v0.c0 IN (rt0.c2))) BETWEEN ('-2049201108') AND (CASE rt0.c0  WHEN rt0.c1 THEN NULL ELSE vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))OR(((v0.c0) IS FALSE))))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((v0.c0 IN (rt0.c2))) BETWEEN ('-2049201108') AND (CASE rt0.c0  WHEN rt0.c1 THEN NULL ELSE vt0.c0 END)) ASC);
SELECT * FROM vt0, rt0, v0 WHERE (((((((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))OR(((v0.c0) IS FALSE))))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY (((v0.c0 IN (rt0.c2))) BETWEEN ('-2049201108') AND (CASE rt0.c0  WHEN rt0.c1 THEN NULL ELSE vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))OR(((v0.c0) IS FALSE))))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((v0.c0 IN (rt0.c2))) BETWEEN ('-2049201108') AND (CASE rt0.c0  WHEN rt0.c1 THEN NULL ELSE vt0.c0 END)) ASC);
SELECT * FROM vt0, rt0, v0 WHERE (((((((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))OR(((v0.c0) IS FALSE))))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY (((v0.c0 IN (rt0.c2))) BETWEEN ('-2049201108') AND (CASE rt0.c0  WHEN rt0.c1 THEN NULL ELSE vt0.c0 END)) ASC;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT NULL)) IS FALSE)) ORDER BY CAST(((t1.c0)>>(0.9735980282692024)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0)>>(0.9735980282692024)) AS REAL) DESC);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT NULL)) IS FALSE)) ORDER BY CAST(((t1.c0)>>(0.9735980282692024)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0)>>(0.9735980282692024)) AS REAL) DESC);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT NULL)) IS FALSE)) ORDER BY CAST(((t1.c0)>>(0.9735980282692024)) AS REAL) DESC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON CASE (vt0.c0 IN ())  WHEN (t1.c0 IN ()) THEN TRIM(t1.c0) WHEN ((vt0.c0)AND(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN t1.c0 THEN x'c939' WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0))<=((t1.c0))) ELSE (((t1.c0, vt0.c0, t1.c0))!=((t1.c0, t1.c0, vt0.c0))) END WHERE (vt0.c0) ORDER BY ((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND ((((vt0.c0))<=((0.5630817858284178))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON CASE (vt0.c0 IN ())  WHEN (t1.c0 IN ()) THEN TRIM(t1.c0) WHEN ((vt0.c0)AND(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN t1.c0 THEN x'c939' WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0))<=((t1.c0))) ELSE (((t1.c0, vt0.c0, t1.c0))<>((t1.c0, t1.c0, vt0.c0))) END ORDER BY ((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND ((((vt0.c0))<=((0.5630817858284178))))) ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON CASE (vt0.c0 IN ())  WHEN (t1.c0 IN ()) THEN TRIM(t1.c0) WHEN ((vt0.c0)AND(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN t1.c0 THEN x'c939' WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0))<=((t1.c0))) ELSE (((t1.c0, vt0.c0, t1.c0))!=((t1.c0, t1.c0, vt0.c0))) END WHERE (vt0.c0) ORDER BY ((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND ((((vt0.c0))<=((0.5630817858284178))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON CASE (vt0.c0 IN ())  WHEN (t1.c0 IN ()) THEN TRIM(t1.c0) WHEN ((vt0.c0)AND(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN t1.c0 THEN x'c939' WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0))<=((t1.c0))) ELSE (((t1.c0, vt0.c0, t1.c0))<>((t1.c0, t1.c0, vt0.c0))) END ORDER BY ((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND ((((vt0.c0))<=((0.5630817858284178))))) ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON CASE (vt0.c0 IN ())  WHEN (t1.c0 IN ()) THEN TRIM(t1.c0) WHEN ((vt0.c0)AND(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN t1.c0 THEN x'c939' WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0))<=((t1.c0))) ELSE (((t1.c0, vt0.c0, t1.c0))!=((t1.c0, t1.c0, vt0.c0))) END WHERE (vt0.c0) ORDER BY ((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND ((((vt0.c0))<=((0.5630817858284178))))) ASC;
SELECT ALL * FROM t1, rt0 NATURAL JOIN v0 WHERE ((('1502645403')AND(((rt0.c1) BETWEEN (rt0.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((('1502645403')AND(((rt0.c1) BETWEEN (rt0.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, rt0 NATURAL JOIN v0);
SELECT ALL * FROM t1, rt0 NATURAL JOIN v0 WHERE ((('1502645403')AND(((rt0.c1) BETWEEN (rt0.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((('1502645403')AND(((rt0.c1) BETWEEN (rt0.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, rt0 NATURAL JOIN v0);
SELECT ALL * FROM t1, rt0 NATURAL JOIN v0 WHERE ((('1502645403')AND(((rt0.c1) BETWEEN (rt0.c0) AND (t1.c0)))));
SELECT * FROM vt0 WHERE ((((vt0.c0) ISNULL) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) ISNULL) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0) ISNULL) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) ISNULL) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0) ISNULL) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE ((rt0.c1 COLLATE NOCASE IN (((0X2b23fced) ISNULL)))) ORDER BY (+ (CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE NOCASE IN (((0X2b23fced) ISNULL)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN rt0 ON rt0.c2 ORDER BY (+ (CAST(rt0.c0 AS REAL))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE ((rt0.c1 COLLATE NOCASE IN (((0X2b23fced) ISNULL)))) ORDER BY (+ (CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE NOCASE IN (((0X2b23fced) ISNULL)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN rt0 ON rt0.c2 ORDER BY (+ (CAST(rt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE ((((((rt0.c0, rt0.c2, rt0.c2))!=((rt0.c2, t1.c0, t1.c0))))!=(t1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c2, rt0.c2))<>((rt0.c2, t1.c0, t1.c0))))<>(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE ((((((rt0.c0, rt0.c2, rt0.c2))!=((rt0.c2, t1.c0, t1.c0))))!=(t1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c2, rt0.c2))<>((rt0.c2, t1.c0, t1.c0))))<>(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE ((((((rt0.c0, rt0.c2, rt0.c2))!=((rt0.c2, t1.c0, t1.c0))))!=(t1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)<>(rt0.c0)) IN (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)<>(rt0.c0)) IN (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)<>(rt0.c0)) IN (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)<>(rt0.c0)) IN (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)<>(rt0.c0)) IN (v0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t1 WHERE ((((((((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))AND(t1.c0 COLLATE RTRIM)))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(t1.c0 COLLATE NOCASE)))OR(((t1.c0)/(t1.c0))))) ORDER BY ((t1.c0) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))AND(t1.c0 COLLATE RTRIM)))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(t1.c0 COLLATE NOCASE)))OR(((t1.c0)/(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0) NOT NULL) ASC);
SELECT COUNT(*) FROM t1 WHERE ((((((((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))AND(t1.c0 COLLATE RTRIM)))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(t1.c0 COLLATE NOCASE)))OR(((t1.c0)/(t1.c0))))) ORDER BY ((t1.c0) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))AND(t1.c0 COLLATE RTRIM)))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(t1.c0 COLLATE NOCASE)))OR(((t1.c0)/(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0) NOT NULL) ASC);
SELECT COUNT(*) FROM t1 WHERE ((((((((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))AND(t1.c0 COLLATE RTRIM)))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(t1.c0 COLLATE NOCASE)))OR(((t1.c0)/(t1.c0))))) ORDER BY ((t1.c0) NOT NULL) ASC;
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((v0.c0) BETWEEN (t1.c0 COLLATE BINARY) AND (v0.c0 COLLATE BINARY))) ORDER BY ((v0.c0)IS NOT(v0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (t1.c0 COLLATE BINARY) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY ((v0.c0)IS NOT(v0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((v0.c0) BETWEEN (t1.c0 COLLATE BINARY) AND (v0.c0 COLLATE BINARY))) ORDER BY ((v0.c0)IS NOT(v0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (t1.c0 COLLATE BINARY) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY ((v0.c0)IS NOT(v0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((v0.c0) BETWEEN (t1.c0 COLLATE BINARY) AND (v0.c0 COLLATE BINARY))) ORDER BY ((v0.c0)IS NOT(v0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM t1, v0, rt0, vt0 WHERE (IFNULL(DISTINCT ((v0.c0)OR(t1.c0)), rt0.c2)) ORDER BY ((LIKE(v0.c0, v0.c0, '0')) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) ISNULL))), (- (CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((v0.c0)OR(t1.c0)), rt0.c2)) IS TRUE)  as count FROM t1, v0, rt0, vt0 ORDER BY ((LIKE(v0.c0, v0.c0, '0')) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) ISNULL))), (- (CAST(vt0.c0 AS NUMERIC))) DESC);
SELECT ALL * FROM t1, v0, rt0, vt0 WHERE (IFNULL(DISTINCT ((v0.c0)OR(t1.c0)), rt0.c2)) ORDER BY ((LIKE(v0.c0, v0.c0, '0')) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) ISNULL))), (- (CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((v0.c0)OR(t1.c0)), rt0.c2)) IS TRUE)  as count FROM t1, v0, rt0, vt0 ORDER BY ((LIKE(v0.c0, v0.c0, '0')) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) ISNULL))), (- (CAST(vt0.c0 AS NUMERIC))) DESC);
SELECT ALL * FROM t1, v0, rt0, vt0 WHERE (IFNULL(DISTINCT ((v0.c0)OR(t1.c0)), rt0.c2)) ORDER BY ((LIKE(v0.c0, v0.c0, '0')) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) ISNULL))), (- (CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT ALL * FROM t1 WHERE (((t1.c0)LIKE(t1.c0)) COLLATE BINARY) ORDER BY TRIM(DISTINCT t1.c0, t1.c0), -1.882089356E9 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c0)LIKE(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY TRIM(DISTINCT t1.c0, t1.c0), -1.882089356E9 DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((t1.c0)LIKE(t1.c0)) COLLATE BINARY) ORDER BY TRIM(DISTINCT t1.c0, t1.c0), -1.882089356E9 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c0)LIKE(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY TRIM(DISTINCT t1.c0, t1.c0), -1.882089356E9 DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((t1.c0)LIKE(t1.c0)) COLLATE BINARY) ORDER BY TRIM(DISTINCT t1.c0, t1.c0), -1.882089356E9 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (rt0.c2) AND (((((v0.c0)AND(rt0.c1)))AND(rt0.c2))))) ORDER BY (~ ('0.12392640877756078')) DESC, (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))|(CASE v0.c0  WHEN vt0.c0 THEN '1433514811' END)), rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (rt0.c2) AND (((((v0.c0)AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (~ ('0.12392640877756078')) DESC, (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))|(CASE v0.c0  WHEN vt0.c0 THEN '1433514811' END)), rt0.c1 DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (rt0.c2) AND (((((v0.c0)AND(rt0.c1)))AND(rt0.c2))))) ORDER BY (~ ('0.12392640877756078')) DESC, (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))|(CASE v0.c0  WHEN vt0.c0 THEN '1433514811' END)), rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (rt0.c2) AND (((((v0.c0)AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (~ ('0.12392640877756078')) DESC, (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))|(CASE v0.c0  WHEN vt0.c0 THEN '1433514811' END)), rt0.c1 DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (rt0.c2) AND (((((v0.c0)AND(rt0.c1)))AND(rt0.c2))))) ORDER BY (~ ('0.12392640877756078')) DESC, (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))|(CASE v0.c0  WHEN vt0.c0 THEN '1433514811' END)), rt0.c1 DESC;
SELECT * FROM rt0, v0, t1, vt0 WHERE (((rt0.c0 COLLATE NOCASE) IS FALSE)) ORDER BY ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0, v0, t1, vt0 ORDER BY ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (NULL))  NULLS FIRST);
SELECT * FROM rt0, v0, t1, vt0 WHERE (((rt0.c0 COLLATE NOCASE) IS FALSE)) ORDER BY ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0, v0, t1, vt0 ORDER BY ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (NULL))  NULLS FIRST);
SELECT * FROM rt0, v0, t1, vt0 WHERE (((rt0.c0 COLLATE NOCASE) IS FALSE)) ORDER BY ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (NULL))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0) NOT NULL) IN ())) ORDER BY CASE WHEN LTRIM(rt0.c0) THEN vt0.c0 ELSE x'' END;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN LTRIM(rt0.c0) THEN vt0.c0 ELSE x'' END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0) NOT NULL) IN ())) ORDER BY CASE WHEN LTRIM(rt0.c0) THEN vt0.c0 ELSE x'' END;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN LTRIM(rt0.c0) THEN vt0.c0 ELSE x'' END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0) NOT NULL) IN ())) ORDER BY CASE WHEN LTRIM(rt0.c0) THEN vt0.c0 ELSE x'' END;
SELECT COUNT(*) FROM rt0, v0, vt0, t1 WHERE (CAST(((((rt0.c2)AND('붣U')))AND(rt0.c0)) AS BLOB)) ORDER BY ((((rt0.c1)AND((vt0.c0 IN (t1.c0)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c2)AND('붣U')))AND(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, v0, vt0, t1 ORDER BY ((((rt0.c1)AND((vt0.c0 IN (t1.c0)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0, t1 WHERE (CAST(((((rt0.c2)AND('붣U')))AND(rt0.c0)) AS BLOB)) ORDER BY ((((rt0.c1)AND((vt0.c0 IN (t1.c0)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c2)AND('붣U')))AND(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, v0, vt0, t1 ORDER BY ((((rt0.c1)AND((vt0.c0 IN (t1.c0)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0, t1 WHERE (CAST(((((rt0.c2)AND('붣U')))AND(rt0.c0)) AS BLOB)) ORDER BY ((((rt0.c1)AND((vt0.c0 IN (t1.c0)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ ((((vt0.c0))>=((vt0.c0)))))) ORDER BY ((((((((v0.c0)AND(x'18ce')))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((v0.c0)AND(x'18ce')))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ ((((vt0.c0))>=((vt0.c0)))))) ORDER BY ((((((((v0.c0)AND(x'18ce')))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((v0.c0)AND(x'18ce')))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ ((((vt0.c0))>=((vt0.c0)))))) ORDER BY ((((((((v0.c0)AND(x'18ce')))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((rt0.c1) BETWEEN (((v0.c0)GLOB(vt0.c0))) AND (((((rt0.c0)AND(rt0.c1)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (((v0.c0)GLOB(vt0.c0))) AND (((((rt0.c0)AND(rt0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((rt0.c1) BETWEEN (((v0.c0)GLOB(vt0.c0))) AND (((((rt0.c0)AND(rt0.c1)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (((v0.c0)GLOB(vt0.c0))) AND (((((rt0.c0)AND(rt0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((rt0.c1) BETWEEN (((v0.c0)GLOB(vt0.c0))) AND (((((rt0.c0)AND(rt0.c1)))OR(v0.c0)))));
SELECT COUNT(*) FROM v0, vt0, rt0, t1 WHERE (GLOB(((rt0.c2) IS FALSE), rt0.c1 COLLATE NOCASE)) ORDER BY 38693697;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((rt0.c2) IS FALSE), rt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM v0, vt0, rt0, t1 ORDER BY 38693697);
SELECT COUNT(*) FROM v0, vt0, rt0, t1 WHERE (GLOB(((rt0.c2) IS FALSE), rt0.c1 COLLATE NOCASE)) ORDER BY 38693697;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((rt0.c2) IS FALSE), rt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM v0, vt0, rt0, t1 ORDER BY 38693697);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND ('-816223955')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND ('-816223955'))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND ('-816223955')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND ('-816223955'))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND ('-816223955')));
SELECT ALL * FROM t1, rt0 WHERE (CAST(LOWER(DISTINCT rt0.c2) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(DISTINCT rt0.c2) AS TEXT)) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (CAST(LOWER(DISTINCT rt0.c2) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(DISTINCT rt0.c2) AS TEXT)) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (CAST(LOWER(DISTINCT rt0.c2) AS TEXT));
SELECT * FROM rt0 WHERE ('') ORDER BY (+ (((((rt0.c2)AND(0x16a74a3a)))AND('9')))) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY (+ (((((rt0.c2)AND(0x16a74a3a)))AND('9')))) ASC);
SELECT * FROM rt0 WHERE ('') ORDER BY (+ (((((rt0.c2)AND(0x16a74a3a)))AND('9')))) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY (+ (((((rt0.c2)AND(0x16a74a3a)))AND('9')))) ASC);
SELECT * FROM rt0 WHERE ('') ORDER BY (+ (((((rt0.c2)AND(0x16a74a3a)))AND('9')))) ASC;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN v0.c0 END LEFT OUTER JOIN v0 ON (((v0.c0)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))) AND ((((rt0.c1)/(rt0.c0))))) WHERE ((((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))>((((0.9729486648998746)%(rt0.c1)))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))>((((0.9729486648998746)%(rt0.c1)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN v0.c0 END LEFT OUTER JOIN v0 ON (((v0.c0)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))) AND ((((rt0.c1)/(rt0.c0))))) ORDER BY NULL  NULLS FIRST);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN v0.c0 END LEFT OUTER JOIN v0 ON (((v0.c0)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))) AND ((((rt0.c1)/(rt0.c0))))) WHERE ((((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))>((((0.9729486648998746)%(rt0.c1)))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))>((((0.9729486648998746)%(rt0.c1)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN v0.c0 END LEFT OUTER JOIN v0 ON (((v0.c0)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))) AND ((((rt0.c1)/(rt0.c0))))) ORDER BY NULL  NULLS FIRST);
SELECT * FROM t1 WHERE (t1.c0) ORDER BY (((((((((((t1.c0)AND(t1.c0)))OR(NULL)))AND(t1.c0)))OR(t1.c0)), (- (t1.c0)), (- (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), ((t1.c0) NOTNULL)))<=((((((((((t1.c0)AND(t1.c0)))AND('jUd')))OR(t1.c0)))OR(t1.c0)), -210619841, load_extension(t1.c0, t1.c0), t1.c0, (+ (t1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY (((((((((((t1.c0)AND(t1.c0)))OR(NULL)))AND(t1.c0)))OR(t1.c0)), (- (t1.c0)), (- (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), ((t1.c0) NOTNULL)))<=((((((((((t1.c0)AND(t1.c0)))AND('jUd')))OR(t1.c0)))OR(t1.c0)), -210619841, load_extension(t1.c0, t1.c0), t1.c0, (+ (t1.c0))))) ASC  NULLS LAST);
SELECT * FROM t1 WHERE (t1.c0) ORDER BY (((((((((((t1.c0)AND(t1.c0)))OR(NULL)))AND(t1.c0)))OR(t1.c0)), (- (t1.c0)), (- (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), ((t1.c0) NOTNULL)))<=((((((((((t1.c0)AND(t1.c0)))AND('jUd')))OR(t1.c0)))OR(t1.c0)), -210619841, load_extension(t1.c0, t1.c0), t1.c0, (+ (t1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY (((((((((((t1.c0)AND(t1.c0)))OR(NULL)))AND(t1.c0)))OR(t1.c0)), (- (t1.c0)), (- (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), ((t1.c0) NOTNULL)))<=((((((((((t1.c0)AND(t1.c0)))AND('jUd')))OR(t1.c0)))OR(t1.c0)), -210619841, load_extension(t1.c0, t1.c0), t1.c0, (+ (t1.c0))))) ASC  NULLS LAST);
SELECT * FROM t1 WHERE (t1.c0) ORDER BY (((((((((((t1.c0)AND(t1.c0)))OR(NULL)))AND(t1.c0)))OR(t1.c0)), (- (t1.c0)), (- (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), ((t1.c0) NOTNULL)))<=((((((((((t1.c0)AND(t1.c0)))AND('jUd')))OR(t1.c0)))OR(t1.c0)), -210619841, load_extension(t1.c0, t1.c0), t1.c0, (+ (t1.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0, rt0 NATURAL JOIN v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1, vt0, rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 NATURAL JOIN v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1, vt0, rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 NATURAL JOIN v0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0, t1 NATURAL JOIN v0 WHERE ((((((((((- (v0.c0)))AND(rt0.c2)))OR((((v0.c0))<=((rt0.c0))))))AND(((v0.c0)<>(rt0.c1)))))OR((((t1.c0))>=((t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((((- (v0.c0)))AND(rt0.c2)))OR((((v0.c0))<=((rt0.c0))))))AND(((v0.c0)<>(rt0.c1)))))OR((((t1.c0))>=((t1.c0)))))) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0, t1 NATURAL JOIN v0 WHERE ((((((((((- (v0.c0)))AND(rt0.c2)))OR((((v0.c0))<=((rt0.c0))))))AND(((v0.c0)<>(rt0.c1)))))OR((((t1.c0))>=((t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((((- (v0.c0)))AND(rt0.c2)))OR((((v0.c0))<=((rt0.c0))))))AND(((v0.c0)<>(rt0.c1)))))OR((((t1.c0))>=((t1.c0)))))) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0, t1 NATURAL JOIN v0 WHERE ((((((((((- (v0.c0)))AND(rt0.c2)))OR((((v0.c0))<=((rt0.c0))))))AND(((v0.c0)<>(rt0.c1)))))OR((((t1.c0))>=((t1.c0))))));
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i83 INNER JOIN rt0 ON CAST(((x'9ca4')|(rt0.c0)) AS INTEGER) WHERE (CAST('dT' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST('dT' AS INTEGER)) IS TRUE)  as count FROM vt0 INDEXED BY i83 INNER JOIN rt0 ON CAST(((x'9ca4')|(rt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i83 INNER JOIN rt0 ON CAST(((x'9ca4')|(rt0.c0)) AS INTEGER) WHERE (CAST('dT' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST('dT' AS INTEGER)) IS TRUE)  as count FROM vt0 INDEXED BY i83 INNER JOIN rt0 ON CAST(((x'9ca4')|(rt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1)))>(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1)))>(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1)))>(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1)))>(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1)))>(CAST(rt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (((((((rt0.c0)LIKE(vt0.c0)))AND((rt0.c0 IN ()))))OR((t1.c0 IN (t1.c0, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)LIKE(vt0.c0)))AND((rt0.c0 IN ()))))OR((t1.c0 IN (t1.c0, rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (((((((rt0.c0)LIKE(vt0.c0)))AND((rt0.c0 IN ()))))OR((t1.c0 IN (t1.c0, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)LIKE(vt0.c0)))AND((rt0.c0 IN ()))))OR((t1.c0 IN (t1.c0, rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (((((((rt0.c0)LIKE(vt0.c0)))AND((rt0.c0 IN ()))))OR((t1.c0 IN (t1.c0, rt0.c2)))));
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)<(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)<(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)<(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)<(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)<(((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE ((NOT (((rt0.c2) BETWEEN (t1.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) BETWEEN (t1.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t1, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE ((NOT (((rt0.c2) BETWEEN (t1.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) BETWEEN (t1.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t1, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE ((NOT (((rt0.c2) BETWEEN (t1.c0) AND (rt0.c1)))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN v0 ON ((0.7010372975126679)<>(vt0.c0)) LEFT OUTER JOIN vt0 ON json_valid(v0.c0) COLLATE RTRIM WHERE (((v0.c0) IS TRUE) COLLATE BINARY) ORDER BY 'N)' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON ((0.7010372975126679)!=(vt0.c0)) LEFT OUTER JOIN vt0 ON json_valid(v0.c0) COLLATE RTRIM ORDER BY 'N)' DESC);
SELECT ALL * FROM t1 RIGHT OUTER JOIN v0 ON ((0.7010372975126679)<>(vt0.c0)) LEFT OUTER JOIN vt0 ON json_valid(v0.c0) COLLATE RTRIM WHERE (((v0.c0) IS TRUE) COLLATE BINARY) ORDER BY 'N)' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON ((0.7010372975126679)!=(vt0.c0)) LEFT OUTER JOIN vt0 ON json_valid(v0.c0) COLLATE RTRIM ORDER BY 'N)' DESC);
SELECT ALL COUNT(*) FROM t1, rt0 CROSS JOIN v0 ON JULIANDAY(((rt0.c0) ISNULL), ((t1.c0) NOTNULL), (+ (0X3784bb17))) LEFT OUTER JOIN vt0 ON (((((((((((((((rt0.c0))<=((vt0.c0))))OR(((rt0.c1) ISNULL))))AND(((t1.c0)>=(t1.c0)))))AND(rt0.c2)))OR(TYPEOF(rt0.c1))))OR(rt0.c0)))AND(((vt0.c0)-(0.36271843384564406)))) WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN rt0.c0 WHEN v0.c0 THEN ((('-1317286210'))>=((rt0.c2))) WHEN ((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((vt0.c0)AND(t1.c0)))AND(rt0.c1)) END) ORDER BY ((vt0.c0)*(((v0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT NULL) THEN rt0.c0 WHEN v0.c0 THEN ((('-1317286210'))>=((rt0.c2))) WHEN ((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((vt0.c0)AND(t1.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM t1, rt0 CROSS JOIN v0 ON JULIANDAY(((rt0.c0) ISNULL), ((t1.c0) NOTNULL), (+ (0x3784bb17))) LEFT OUTER JOIN vt0 ON (((((((((((((((rt0.c0))<=((vt0.c0))))OR(((rt0.c1) ISNULL))))AND(((t1.c0)>=(t1.c0)))))AND(rt0.c2)))OR(TYPEOF(rt0.c1))))OR(rt0.c0)))AND(((vt0.c0)-(0.36271843384564406)))) ORDER BY ((vt0.c0)*(((v0.c0) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM t1, rt0 CROSS JOIN v0 ON JULIANDAY(((rt0.c0) ISNULL), ((t1.c0) NOTNULL), (+ (0X3784bb17))) LEFT OUTER JOIN vt0 ON (((((((((((((((rt0.c0))<=((vt0.c0))))OR(((rt0.c1) ISNULL))))AND(((t1.c0)>=(t1.c0)))))AND(rt0.c2)))OR(TYPEOF(rt0.c1))))OR(rt0.c0)))AND(((vt0.c0)-(0.36271843384564406)))) WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN rt0.c0 WHEN v0.c0 THEN ((('-1317286210'))>=((rt0.c2))) WHEN ((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((vt0.c0)AND(t1.c0)))AND(rt0.c1)) END) ORDER BY ((vt0.c0)*(((v0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT NULL) THEN rt0.c0 WHEN v0.c0 THEN ((('-1317286210'))>=((rt0.c2))) WHEN ((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((vt0.c0)AND(t1.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM t1, rt0 CROSS JOIN v0 ON JULIANDAY(((rt0.c0) ISNULL), ((t1.c0) NOTNULL), (+ (0x3784bb17))) LEFT OUTER JOIN vt0 ON (((((((((((((((rt0.c0))<=((vt0.c0))))OR(((rt0.c1) ISNULL))))AND(((t1.c0)>=(t1.c0)))))AND(rt0.c2)))OR(TYPEOF(rt0.c1))))OR(rt0.c0)))AND(((vt0.c0)-(0.36271843384564406)))) ORDER BY ((vt0.c0)*(((v0.c0) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM t1, rt0 CROSS JOIN v0 ON JULIANDAY(((rt0.c0) ISNULL), ((t1.c0) NOTNULL), (+ (0X3784bb17))) LEFT OUTER JOIN vt0 ON (((((((((((((((rt0.c0))<=((vt0.c0))))OR(((rt0.c1) ISNULL))))AND(((t1.c0)>=(t1.c0)))))AND(rt0.c2)))OR(TYPEOF(rt0.c1))))OR(rt0.c0)))AND(((vt0.c0)-(0.36271843384564406)))) WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN rt0.c0 WHEN v0.c0 THEN ((('-1317286210'))>=((rt0.c2))) WHEN ((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((vt0.c0)AND(t1.c0)))AND(rt0.c1)) END) ORDER BY ((vt0.c0)*(((v0.c0) ISNULL))) DESC;
SELECT COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN NULL ELSE rt0.c0 END WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((((((((vt0.c0)AND('E[E')))OR('941901987')))AND(rt0.c0)))OR(vt0.c0))))) ORDER BY (NOT (CAST(t1.c0 AS NUMERIC)))  NULLS LAST, (('-1274687716') ISNULL) ASC  NULLS LAST, (- (((vt0.c0)>(x'6607a87b')))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((((((((vt0.c0)AND('E[E')))OR('941901987')))AND(rt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN NULL ELSE rt0.c0 END ORDER BY (NOT (CAST(t1.c0 AS NUMERIC)))  NULLS LAST, (('-1274687716') ISNULL) ASC  NULLS LAST, (- (((vt0.c0)>(x'6607a87b')))) DESC);
SELECT COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN NULL ELSE rt0.c0 END WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((((((((vt0.c0)AND('E[E')))OR('941901987')))AND(rt0.c0)))OR(vt0.c0))))) ORDER BY (NOT (CAST(t1.c0 AS NUMERIC)))  NULLS LAST, (('-1274687716') ISNULL) ASC  NULLS LAST, (- (((vt0.c0)>(x'6607a87b')))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((((((((vt0.c0)AND('E[E')))OR('941901987')))AND(rt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN NULL ELSE rt0.c0 END ORDER BY (NOT (CAST(t1.c0 AS NUMERIC)))  NULLS LAST, (('-1274687716') ISNULL) ASC  NULLS LAST, (- (((vt0.c0)>(x'6607a87b')))) DESC);
SELECT COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN NULL ELSE rt0.c0 END WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((((((((vt0.c0)AND('E[E')))OR('941901987')))AND(rt0.c0)))OR(vt0.c0))))) ORDER BY (NOT (CAST(t1.c0 AS NUMERIC)))  NULLS LAST, (('-1274687716') ISNULL) ASC  NULLS LAST, (- (((vt0.c0)>(x'6607a87b')))) DESC;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) ISNULL) AS TEXT));
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((rt0.c2)+(t1.c0)) COLLATE BINARY) ORDER BY (((rt0.c2 IN ())) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0)))) DESC  NULLS LAST, LIKELY((- (t1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)+(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c2 IN ())) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0)))) DESC  NULLS LAST, LIKELY((- (t1.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((rt0.c2)+(t1.c0)) COLLATE BINARY) ORDER BY (((rt0.c2 IN ())) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0)))) DESC  NULLS LAST, LIKELY((- (t1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)+(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c2 IN ())) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0)))) DESC  NULLS LAST, LIKELY((- (t1.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((rt0.c2)+(t1.c0)) COLLATE BINARY) ORDER BY (((rt0.c2 IN ())) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0)))) DESC  NULLS LAST, LIKELY((- (t1.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((((vt0.c0)||(t1.c0)))OR(CHANGES())))OR(((v0.c0) IS FALSE))) LEFT OUTER JOIN t1 ON ((LTRIM(vt0.c0))>>(0.2885314468039091)) WHERE (0.8700988927131899);
SELECT SUM(count) FROM (SELECT ((0.8700988927131899) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((((vt0.c0)||(t1.c0)))OR(CHANGES())))OR(((v0.c0) IS FALSE))) LEFT OUTER JOIN t1 ON ((LTRIM(vt0.c0))>>(0.2885314468039091)));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((((vt0.c0)||(t1.c0)))OR(CHANGES())))OR(((v0.c0) IS FALSE))) LEFT OUTER JOIN t1 ON ((LTRIM(vt0.c0))>>(0.2885314468039091)) WHERE (0.8700988927131899);
SELECT SUM(count) FROM (SELECT ((0.8700988927131899) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((((vt0.c0)||(t1.c0)))OR(CHANGES())))OR(((v0.c0) IS FALSE))) LEFT OUTER JOIN t1 ON ((LTRIM(vt0.c0))>>(0.2885314468039091)));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((((vt0.c0)||(t1.c0)))OR(CHANGES())))OR(((v0.c0) IS FALSE))) LEFT OUTER JOIN t1 ON ((LTRIM(vt0.c0))>>(0.2885314468039091)) WHERE (0.8700988927131899);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY 'IEv';
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY 'IEv');
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY 'IEv';
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY 'IEv');
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY 'IEv';
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON UPPER(v0.c0 COLLATE BINARY) LEFT OUTER JOIN t1 ON CASE WHEN CAST(0.6400327603310367 AS NUMERIC) THEN (+ (0.7458160497828968)) ELSE CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 END END WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON UPPER(v0.c0 COLLATE BINARY) LEFT OUTER JOIN t1 ON CASE WHEN CAST(0.6400327603310367 AS NUMERIC) THEN (+ (0.7458160497828968)) ELSE CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 END END);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON UPPER(v0.c0 COLLATE BINARY) LEFT OUTER JOIN t1 ON CASE WHEN CAST(0.6400327603310367 AS NUMERIC) THEN (+ (0.7458160497828968)) ELSE CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 END END WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON UPPER(v0.c0 COLLATE BINARY) LEFT OUTER JOIN t1 ON CASE WHEN CAST(0.6400327603310367 AS NUMERIC) THEN (+ (0.7458160497828968)) ELSE CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 END END);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON UPPER(v0.c0 COLLATE BINARY) LEFT OUTER JOIN t1 ON CASE WHEN CAST(0.6400327603310367 AS NUMERIC) THEN (+ (0.7458160497828968)) ELSE CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 END END WHERE (NULL);
SELECT COUNT(*) FROM vt0, rt0, v0, t1 WHERE (CASE (((rt0.c2, vt0.c0, rt0.c0))!=((rt0.c1, rt0.c2, rt0.c2)))  WHEN (((NULL))>=((v0.c0))) THEN SQLITE_VERSION() WHEN (((vt0.c0))<=((t1.c0))) THEN x'' WHEN CAST(vt0.c0 AS NUMERIC) THEN ((rt0.c1) IS TRUE) ELSE (~ (rt0.c0)) END) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2, vt0.c0, rt0.c0))!=((rt0.c1, rt0.c2, rt0.c2)))  WHEN (((NULL))>=((v0.c0))) THEN SQLITE_VERSION() WHEN (((vt0.c0))<=((t1.c0))) THEN x'' WHEN CAST(vt0.c0 AS NUMERIC) THEN ((rt0.c1) IS TRUE) ELSE (~ (rt0.c0)) END) IS TRUE)  as count FROM vt0, rt0, v0, t1 ORDER BY NULL);
SELECT COUNT(*) FROM vt0, rt0, v0, t1 WHERE (CASE (((rt0.c2, vt0.c0, rt0.c0))!=((rt0.c1, rt0.c2, rt0.c2)))  WHEN (((NULL))>=((v0.c0))) THEN SQLITE_VERSION() WHEN (((vt0.c0))<=((t1.c0))) THEN x'' WHEN CAST(vt0.c0 AS NUMERIC) THEN ((rt0.c1) IS TRUE) ELSE (~ (rt0.c0)) END) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2, vt0.c0, rt0.c0))!=((rt0.c1, rt0.c2, rt0.c2)))  WHEN (((NULL))>=((v0.c0))) THEN SQLITE_VERSION() WHEN (((vt0.c0))<=((t1.c0))) THEN x'' WHEN CAST(vt0.c0 AS NUMERIC) THEN ((rt0.c1) IS TRUE) ELSE (~ (rt0.c0)) END) IS TRUE)  as count FROM vt0, rt0, v0, t1 ORDER BY NULL);
SELECT COUNT(*) FROM vt0, rt0, v0, t1 WHERE (CASE (((rt0.c2, vt0.c0, rt0.c0))!=((rt0.c1, rt0.c2, rt0.c2)))  WHEN (((NULL))>=((v0.c0))) THEN SQLITE_VERSION() WHEN (((vt0.c0))<=((t1.c0))) THEN x'' WHEN CAST(vt0.c0 AS NUMERIC) THEN ((rt0.c1) IS TRUE) ELSE (~ (rt0.c0)) END) ORDER BY NULL;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0) ISNULL))))AND(CAST(x'5aa7' AS INTEGER))))AND(v0.c0)))OR((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0) ISNULL))))AND(CAST(x'5aa7' AS INTEGER))))AND(v0.c0)))OR((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0) ISNULL))))AND(CAST(x'5aa7' AS INTEGER))))AND(v0.c0)))OR((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0) ISNULL))))AND(CAST(x'5aa7' AS INTEGER))))AND(v0.c0)))OR((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0) ISNULL))))AND(CAST(x'5aa7' AS INTEGER))))AND(v0.c0)))OR((~ (v0.c0)))));
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ ((((0X60f8ddf2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((0X60f8ddf2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ ((((0X60f8ddf2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((0X60f8ddf2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ ((((0X60f8ddf2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2))) NOTNULL));
SELECT COUNT(*) FROM vt0, v0, t1, rt0 WHERE ((((((((((+ (rt0.c1)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((x'8102'))))))OR(UNLIKELY(DISTINCT rt0.c0))))OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))))AND((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c1)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((x'8102'))))))OR(UNLIKELY(DISTINCT rt0.c0))))OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))))AND((~ (v0.c0))))) IS TRUE)  as count FROM vt0, v0, t1, rt0);
SELECT COUNT(*) FROM vt0, v0, t1, rt0 WHERE ((((((((((+ (rt0.c1)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((x'8102'))))))OR(UNLIKELY(DISTINCT rt0.c0))))OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))))AND((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c1)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((x'8102'))))))OR(UNLIKELY(DISTINCT rt0.c0))))OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))))AND((~ (v0.c0))))) IS TRUE)  as count FROM vt0, v0, t1, rt0);
SELECT COUNT(*) FROM vt0, v0, t1, rt0 WHERE ((((((((((+ (rt0.c1)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((x'8102'))))))OR(UNLIKELY(DISTINCT rt0.c0))))OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))))AND((~ (v0.c0)))));
SELECT * FROM rt0, v0 CROSS JOIN vt0 ON ((t1.c0) IS FALSE) COLLATE RTRIM INNER JOIN t1 ON (- (((((((((vt0.c0)OR(v0.c0)))AND('/Jq9MU')))OR(t1.c0)))OR(x'f454')))) WHERE (((~ (rt0.c2)) IN ())) ORDER BY ((CASE WHEN v0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c2 WHEN t1.c0 THEN t1.c0 END)%(((((t1.c0)OR(rt0.c2)))OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON ((t1.c0) IS FALSE) COLLATE RTRIM INNER JOIN t1 ON (- (((((((((vt0.c0)OR(v0.c0)))AND('/Jq9MU')))OR(t1.c0)))OR(x'f454')))) ORDER BY ((CASE WHEN v0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c2 WHEN t1.c0 THEN t1.c0 END)%(((((t1.c0)OR(rt0.c2)))OR(rt0.c1)))) ASC);
SELECT * FROM rt0, v0 CROSS JOIN vt0 ON ((t1.c0) IS FALSE) COLLATE RTRIM INNER JOIN t1 ON (- (((((((((vt0.c0)OR(v0.c0)))AND('/Jq9MU')))OR(t1.c0)))OR(x'f454')))) WHERE (((~ (rt0.c2)) IN ())) ORDER BY ((CASE WHEN v0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c2 WHEN t1.c0 THEN t1.c0 END)%(((((t1.c0)OR(rt0.c2)))OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON ((t1.c0) IS FALSE) COLLATE RTRIM INNER JOIN t1 ON (- (((((((((vt0.c0)OR(v0.c0)))AND('/Jq9MU')))OR(t1.c0)))OR(x'f454')))) ORDER BY ((CASE WHEN v0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c2 WHEN t1.c0 THEN t1.c0 END)%(((((t1.c0)OR(rt0.c2)))OR(rt0.c1)))) ASC);
SELECT * FROM rt0, v0 CROSS JOIN vt0 ON ((t1.c0) IS FALSE) COLLATE RTRIM INNER JOIN t1 ON (- (((((((((vt0.c0)OR(v0.c0)))AND('/Jq9MU')))OR(t1.c0)))OR(x'f454')))) WHERE (((~ (rt0.c2)) IN ())) ORDER BY ((CASE WHEN v0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c2 WHEN t1.c0 THEN t1.c0 END)%(((((t1.c0)OR(rt0.c2)))OR(rt0.c1)))) ASC;
SELECT * FROM vt0 WHERE (RTRIM(((vt0.c0)>>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((vt0.c0)>>(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (RTRIM(((vt0.c0)>>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((vt0.c0)>>(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (RTRIM(((vt0.c0)>>(vt0.c0))));
SELECT ALL * FROM rt0, t1, vt0 WHERE (-1266869574) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((-1266869574) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY NULL);
SELECT ALL * FROM rt0, t1, vt0 WHERE (-1266869574) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((-1266869574) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY NULL);
SELECT ALL * FROM rt0, t1, vt0 WHERE (-1266869574) ORDER BY NULL;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY CASE WHEN 0.5052135868797423 THEN '' ELSE ((vt0.c0)<>(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN 0.5052135868797423 THEN '' ELSE ((vt0.c0)!=(vt0.c0)) END);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY CASE WHEN 0.5052135868797423 THEN '' ELSE ((vt0.c0)<>(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN 0.5052135868797423 THEN '' ELSE ((vt0.c0)!=(vt0.c0)) END);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY CASE WHEN 0.5052135868797423 THEN '' ELSE ((vt0.c0)<>(vt0.c0)) END;
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE (((((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))AND(((v0.c0)GLOB(v0.c0)))))AND(((((rt0.c1)AND(v0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))AND(((v0.c0)GLOB(v0.c0)))))AND(((((rt0.c1)AND(v0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, t1, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE (((((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))AND(((v0.c0)GLOB(v0.c0)))))AND(((((rt0.c1)AND(v0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))AND(((v0.c0)GLOB(v0.c0)))))AND(((((rt0.c1)AND(v0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, t1, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE (((((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))AND(((v0.c0)GLOB(v0.c0)))))AND(((((rt0.c1)AND(v0.c0)))OR(rt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)/(NULL)))GLOB((- (v0.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (JULIANDAY(vt0.c0, vt0.c0, vt0.c0, v0.c0, NULL, v0.c0, 0.704038005328381)) AND ('1805028218'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)/(NULL)))GLOB((- (v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (JULIANDAY(vt0.c0, vt0.c0, vt0.c0, v0.c0, NULL, v0.c0, 0.704038005328381)) AND ('1805028218'))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)/(NULL)))GLOB((- (v0.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (JULIANDAY(vt0.c0, vt0.c0, vt0.c0, v0.c0, NULL, v0.c0, 0.704038005328381)) AND ('1805028218'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)/(NULL)))GLOB((- (v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (JULIANDAY(vt0.c0, vt0.c0, vt0.c0, v0.c0, NULL, v0.c0, 0.704038005328381)) AND ('1805028218'))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)/(NULL)))GLOB((- (v0.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (JULIANDAY(vt0.c0, vt0.c0, vt0.c0, v0.c0, NULL, v0.c0, 0.704038005328381)) AND ('1805028218'))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0, t1, vt0 WHERE ((((rt0.c1))=((CAST(rt0.c1 AS INTEGER))))) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c2) AND (t1.c0)) IN ())  NULLS LAST, (((rt0.c0 IN ())) ISNULL) ASC  NULLS LAST, ((((t1.c0))==((NULL))) IN (CAST(NULL AS NUMERIC), (~ (rt0.c0))))  NULLS FIRST, CASE ((v0.c0)IS NOT(v0.c0))  WHEN ((rt0.c2) NOT BETWEEN (1.759909802E9) AND (rt0.c1)) THEN 'jAz㥣' ELSE CAST(v0.c0 AS TEXT) END;
SELECT SUM(count) FROM (SELECT (((((rt0.c1))==((CAST(rt0.c1 AS INTEGER))))) IS TRUE)  as count FROM rt0, v0, t1, vt0 ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c2) AND (t1.c0)) IN ())  NULLS LAST, (((rt0.c0 IN ())) ISNULL) ASC  NULLS LAST, ((((t1.c0))==((NULL))) IN (CAST(NULL AS NUMERIC), (~ (rt0.c0))))  NULLS FIRST, CASE ((v0.c0)IS NOT(v0.c0))  WHEN ((rt0.c2) NOT BETWEEN (1.759909802E9) AND (rt0.c1)) THEN 'jAz㥣' ELSE CAST(v0.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM rt0, v0, t1, vt0 WHERE ((((rt0.c1))=((CAST(rt0.c1 AS INTEGER))))) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c2) AND (t1.c0)) IN ())  NULLS LAST, (((rt0.c0 IN ())) ISNULL) ASC  NULLS LAST, ((((t1.c0))==((NULL))) IN (CAST(NULL AS NUMERIC), (~ (rt0.c0))))  NULLS FIRST, CASE ((v0.c0)IS NOT(v0.c0))  WHEN ((rt0.c2) NOT BETWEEN (1.759909802E9) AND (rt0.c1)) THEN 'jAz㥣' ELSE CAST(v0.c0 AS TEXT) END;
SELECT SUM(count) FROM (SELECT (((((rt0.c1))==((CAST(rt0.c1 AS INTEGER))))) IS TRUE)  as count FROM rt0, v0, t1, vt0 ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c2) AND (t1.c0)) IN ())  NULLS LAST, (((rt0.c0 IN ())) ISNULL) ASC  NULLS LAST, ((((t1.c0))==((NULL))) IN (CAST(NULL AS NUMERIC), (~ (rt0.c0))))  NULLS FIRST, CASE ((v0.c0)IS NOT(v0.c0))  WHEN ((rt0.c2) NOT BETWEEN (1.759909802E9) AND (rt0.c1)) THEN 'jAz㥣' ELSE CAST(v0.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM rt0, v0, t1, vt0 WHERE ((((rt0.c1))=((CAST(rt0.c1 AS INTEGER))))) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c2) AND (t1.c0)) IN ())  NULLS LAST, (((rt0.c0 IN ())) ISNULL) ASC  NULLS LAST, ((((t1.c0))==((NULL))) IN (CAST(NULL AS NUMERIC), (~ (rt0.c0))))  NULLS FIRST, CASE ((v0.c0)IS NOT(v0.c0))  WHEN ((rt0.c2) NOT BETWEEN (1.759909802E9) AND (rt0.c1)) THEN 'jAz㥣' ELSE CAST(v0.c0 AS TEXT) END;
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON CASE rt0.c1 COLLATE BINARY  WHEN NULL THEN CAST(rt0.c2 AS TEXT) END WHERE (UNLIKELY(v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CASE rt0.c1 COLLATE BINARY  WHEN NULL THEN CAST(rt0.c2 AS TEXT) END);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON CASE rt0.c1 COLLATE BINARY  WHEN NULL THEN CAST(rt0.c2 AS TEXT) END WHERE (UNLIKELY(v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CASE rt0.c1 COLLATE BINARY  WHEN NULL THEN CAST(rt0.c2 AS TEXT) END);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON CASE rt0.c1 COLLATE BINARY  WHEN NULL THEN CAST(rt0.c2 AS TEXT) END WHERE (UNLIKELY(v0.c0) COLLATE RTRIM);
SELECT * FROM v0, vt0, rt0 WHERE (vt0.c0) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY v0.c0);
SELECT * FROM v0, vt0, rt0 WHERE (vt0.c0) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY v0.c0);
SELECT * FROM v0, vt0, rt0 WHERE (vt0.c0) ORDER BY v0.c0;
SELECT * FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS INTEGER)) ORDER BY ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))/(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))/(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))));
SELECT * FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS INTEGER)) ORDER BY ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))/(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))/(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))));
SELECT * FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS INTEGER)) ORDER BY ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))/(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))));
SELECT * FROM t1, vt0 WHERE ((((t1.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) NOT NULL) IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE ((((t1.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) NOT NULL) IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE ((((t1.c0) NOT NULL) IN ()));
SELECT ALL * FROM t1 RIGHT OUTER JOIN v0 ON ((((((t1.c0)AND(t1.c0)))OR(x'4788'))) BETWEEN ((((t1.c0)) BETWEEN ((0x526bc7f9)) AND ((t1.c0)))) AND ((t1.c0 IN ()))) WHERE (CAST(LOWER(t1.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(t1.c0) AS INTEGER)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON ((((((t1.c0)AND(t1.c0)))OR(x'4788'))) BETWEEN ((((t1.c0)) BETWEEN ((0X526bc7f9)) AND ((t1.c0)))) AND ((t1.c0 IN ()))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN v0 ON ((((((t1.c0)AND(t1.c0)))OR(x'4788'))) BETWEEN ((((t1.c0)) BETWEEN ((0x526bc7f9)) AND ((t1.c0)))) AND ((t1.c0 IN ()))) WHERE (CAST(LOWER(t1.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(t1.c0) AS INTEGER)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON ((((((t1.c0)AND(t1.c0)))OR(x'4788'))) BETWEEN ((((t1.c0)) BETWEEN ((0X526bc7f9)) AND ((t1.c0)))) AND ((t1.c0 IN ()))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN v0 ON ((((((t1.c0)AND(t1.c0)))OR(x'4788'))) BETWEEN ((((t1.c0)) BETWEEN ((0x526bc7f9)) AND ((t1.c0)))) AND ((t1.c0 IN ()))) WHERE (CAST(LOWER(t1.c0) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c1)GLOB(rt0.c2)))!=(0x268e8f81)), ((0.6132312916987676) BETWEEN (((rt0.c2)%(rt0.c2))) AND ((0.8699130666784092 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)GLOB(rt0.c2)))!=(0X268e8f81)), ((0.6132312916987676) BETWEEN (((rt0.c2)%(rt0.c2))) AND ((0.8699130666784092 IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c1)GLOB(rt0.c2)))!=(0x268e8f81)), ((0.6132312916987676) BETWEEN (((rt0.c2)%(rt0.c2))) AND ((0.8699130666784092 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)GLOB(rt0.c2)))!=(0X268e8f81)), ((0.6132312916987676) BETWEEN (((rt0.c2)%(rt0.c2))) AND ((0.8699130666784092 IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c1)GLOB(rt0.c2)))!=(0x268e8f81)), ((0.6132312916987676) BETWEEN (((rt0.c2)%(rt0.c2))) AND ((0.8699130666784092 IN ()))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY (('') NOTNULL);
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0, rt0, v0 ORDER BY (('') NOTNULL));
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY (('') NOTNULL);
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0, rt0, v0 ORDER BY (('') NOTNULL));
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY (('') NOTNULL);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ())) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ())) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ()));
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY (TRIM(DISTINCT t1.c0, t1.c0) IN ()), ((((((x'')>>(t1.c0)))AND(t1.c0)))OR((NOT (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 ORDER BY (TRIM(DISTINCT t1.c0, t1.c0) IN ()), ((((((x'')>>(t1.c0)))AND(t1.c0)))OR((NOT (t1.c0))))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY (TRIM(DISTINCT t1.c0, t1.c0) IN ()), ((((((x'')>>(t1.c0)))AND(t1.c0)))OR((NOT (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 ORDER BY (TRIM(DISTINCT t1.c0, t1.c0) IN ()), ((((((x'')>>(t1.c0)))AND(t1.c0)))OR((NOT (t1.c0))))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (NULL) ORDER BY (TRIM(DISTINCT t1.c0, t1.c0) IN ()), ((((((x'')>>(t1.c0)))AND(t1.c0)))OR((NOT (t1.c0))))  NULLS FIRST;
SELECT * FROM v0 RIGHT OUTER JOIN t1 ON (((CHANGES()))==((((t1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) INNER JOIN rt0 ON GLOB(((vt0.c0)<>(v0.c0)), ((t1.c0)+(v0.c0))) LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT (~ (t1.c0))) WHERE (LOWER(DISTINCT ((t1.c0)IS(rt0.c1)))) ORDER BY (((rt0.c1) IS FALSE) IN ()), (NOT (((t1.c0)>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((t1.c0)IS(rt0.c1)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t1 ON (((CHANGES()))==((((t1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) INNER JOIN rt0 ON GLOB(((vt0.c0)<>(v0.c0)), ((t1.c0)+(v0.c0))) LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT (~ (t1.c0))) ORDER BY (((rt0.c1) IS FALSE) IN ()), (NOT (((t1.c0)>(rt0.c1)))));
SELECT * FROM v0 RIGHT OUTER JOIN t1 ON (((CHANGES()))==((((t1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) INNER JOIN rt0 ON GLOB(((vt0.c0)<>(v0.c0)), ((t1.c0)+(v0.c0))) LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT (~ (t1.c0))) WHERE (LOWER(DISTINCT ((t1.c0)IS(rt0.c1)))) ORDER BY (((rt0.c1) IS FALSE) IN ()), (NOT (((t1.c0)>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((t1.c0)IS(rt0.c1)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t1 ON (((CHANGES()))==((((t1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) INNER JOIN rt0 ON GLOB(((vt0.c0)<>(v0.c0)), ((t1.c0)+(v0.c0))) LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT (~ (t1.c0))) ORDER BY (((rt0.c1) IS FALSE) IN ()), (NOT (((t1.c0)>(rt0.c1)))));
SELECT ALL COUNT(*) FROM v0, t1 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) BETWEEN (((0xfffffffff51594a9) NOT BETWEEN (rt0.c2) AND (t1.c0))) AND ((- (vt0.c0)))) LEFT OUTER JOIN vt0 ON (((('0.801251017299214') IS FALSE)) NOTNULL) WHERE ((((((t1.c0))>=((v0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))>=((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0, t1 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) BETWEEN (((0Xfffffffff51594a9) NOT BETWEEN (rt0.c2) AND (t1.c0))) AND ((- (vt0.c0)))) LEFT OUTER JOIN vt0 ON (((('0.801251017299214') IS FALSE)) NOTNULL));
SELECT ALL COUNT(*) FROM v0, t1 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) BETWEEN (((0xfffffffff51594a9) NOT BETWEEN (rt0.c2) AND (t1.c0))) AND ((- (vt0.c0)))) LEFT OUTER JOIN vt0 ON (((('0.801251017299214') IS FALSE)) NOTNULL) WHERE ((((((t1.c0))>=((v0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))>=((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0, t1 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) BETWEEN (((0Xfffffffff51594a9) NOT BETWEEN (rt0.c2) AND (t1.c0))) AND ((- (vt0.c0)))) LEFT OUTER JOIN vt0 ON (((('0.801251017299214') IS FALSE)) NOTNULL));
SELECT ALL COUNT(*) FROM v0, t1 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) BETWEEN (((0xfffffffff51594a9) NOT BETWEEN (rt0.c2) AND (t1.c0))) AND ((- (vt0.c0)))) LEFT OUTER JOIN vt0 ON (((('0.801251017299214') IS FALSE)) NOTNULL) WHERE ((((((t1.c0))>=((v0.c0)))) NOTNULL));
SELECT COUNT(*) FROM rt0, v0 WHERE (ABS(((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (ABS(((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (ABS(((rt0.c1) NOT NULL)));
SELECT * FROM rt0, vt0, t1, v0 WHERE (((GLOB(t1.c0, rt0.c0)) BETWEEN (rt0.c1) AND (-1.64071995E9 COLLATE NOCASE))) ORDER BY ((rt0.c1)-(rt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((GLOB(t1.c0, rt0.c0)) BETWEEN (rt0.c1) AND (-1.64071995E9 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, t1, v0 ORDER BY ((rt0.c1)-(rt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM rt0, vt0, t1, v0 WHERE (((GLOB(t1.c0, rt0.c0)) BETWEEN (rt0.c1) AND (-1.64071995E9 COLLATE NOCASE))) ORDER BY ((rt0.c1)-(rt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((GLOB(t1.c0, rt0.c0)) BETWEEN (rt0.c1) AND (-1.64071995E9 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, t1, v0 ORDER BY ((rt0.c1)-(rt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM rt0, vt0, t1, v0 WHERE (((GLOB(t1.c0, rt0.c0)) BETWEEN (rt0.c1) AND (-1.64071995E9 COLLATE NOCASE))) ORDER BY ((rt0.c1)-(rt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((rt0.c0 COLLATE RTRIM))) WHERE (CASE WHEN LIKELIHOOD(rt0.c1, 0.623457103101806) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(rt0.c1, 0.623457103101806) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((rt0.c0 COLLATE RTRIM))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((rt0.c0 COLLATE RTRIM))) WHERE (CASE WHEN LIKELIHOOD(rt0.c1, 0.623457103101806) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(rt0.c1, 0.623457103101806) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((rt0.c0 COLLATE RTRIM))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((rt0.c0 COLLATE RTRIM))) WHERE (CASE WHEN LIKELIHOOD(rt0.c1, 0.623457103101806) THEN (rt0.c2 IN ()) END);
SELECT ALL * FROM rt0, t1, v0 RIGHT OUTER JOIN vt0 ON (((rt0.c0)GLOB(rt0.c0)) IN ()) WHERE (0.10580052191088463);
SELECT SUM(count) FROM (SELECT ALL ((0.10580052191088463) IS TRUE)  as count FROM rt0, t1, v0 RIGHT OUTER JOIN vt0 ON (((rt0.c0)GLOB(rt0.c0)) IN ()));
SELECT ALL * FROM rt0, t1, v0 RIGHT OUTER JOIN vt0 ON (((rt0.c0)GLOB(rt0.c0)) IN ()) WHERE (0.10580052191088463);
SELECT SUM(count) FROM (SELECT ALL ((0.10580052191088463) IS TRUE)  as count FROM rt0, t1, v0 RIGHT OUTER JOIN vt0 ON (((rt0.c0)GLOB(rt0.c0)) IN ()));
SELECT ALL * FROM rt0, t1, v0 RIGHT OUTER JOIN vt0 ON (((rt0.c0)GLOB(rt0.c0)) IN ()) WHERE (0.10580052191088463);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM rt0, t1, vt0 WHERE ((((((rt0.c1))<((rt0.c1)))) NOT BETWEEN (((rt0.c2)IS NOT(t1.c0))) AND ((t1.c0 IN (vt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<((rt0.c1)))) NOT BETWEEN (((rt0.c2)IS NOT(t1.c0))) AND ((t1.c0 IN (vt0.c0, rt0.c1))))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT * FROM rt0, t1, vt0 WHERE ((((((rt0.c1))<((rt0.c1)))) NOT BETWEEN (((rt0.c2)IS NOT(t1.c0))) AND ((t1.c0 IN (vt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<((rt0.c1)))) NOT BETWEEN (((rt0.c2)IS NOT(t1.c0))) AND ((t1.c0 IN (vt0.c0, rt0.c1))))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT * FROM rt0, t1, vt0 WHERE ((((((rt0.c1))<((rt0.c1)))) NOT BETWEEN (((rt0.c2)IS NOT(t1.c0))) AND ((t1.c0 IN (vt0.c0, rt0.c1)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN t1 ON ((CASE v0.c0  WHEN t1.c0 THEN t1.c0 END) BETWEEN (((v0.c0)<>(v0.c0))) AND (CASE WHEN t1.c0 THEN v0.c0 END)) WHERE (STRFTIME(CAST(t1.c0 AS REAL), (- (t1.c0)), (((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))), (+ (t1.c0)), ((((t1.c0)AND(t1.c0)))OR(t1.c0))));
SELECT SUM(count) FROM (SELECT ((STRFTIME(CAST(t1.c0 AS REAL), (- (t1.c0)), (((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))), (+ (t1.c0)), ((((t1.c0)AND(t1.c0)))OR(t1.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON ((CASE v0.c0  WHEN t1.c0 THEN t1.c0 END) BETWEEN (((v0.c0)!=(v0.c0))) AND (CASE WHEN t1.c0 THEN v0.c0 END)));
SELECT ALL * FROM v0 LEFT OUTER JOIN t1 ON ((CASE v0.c0  WHEN t1.c0 THEN t1.c0 END) BETWEEN (((v0.c0)<>(v0.c0))) AND (CASE WHEN t1.c0 THEN v0.c0 END)) WHERE (STRFTIME(CAST(t1.c0 AS REAL), (- (t1.c0)), (((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))), (+ (t1.c0)), ((((t1.c0)AND(t1.c0)))OR(t1.c0))));
SELECT SUM(count) FROM (SELECT ((STRFTIME(CAST(t1.c0 AS REAL), (- (t1.c0)), (((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))), (+ (t1.c0)), ((((t1.c0)AND(t1.c0)))OR(t1.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON ((CASE v0.c0  WHEN t1.c0 THEN t1.c0 END) BETWEEN (((v0.c0)!=(v0.c0))) AND (CASE WHEN t1.c0 THEN v0.c0 END)));
SELECT ALL * FROM v0 LEFT OUTER JOIN t1 ON ((CASE v0.c0  WHEN t1.c0 THEN t1.c0 END) BETWEEN (((v0.c0)<>(v0.c0))) AND (CASE WHEN t1.c0 THEN v0.c0 END)) WHERE (STRFTIME(CAST(t1.c0 AS REAL), (- (t1.c0)), (((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))), (+ (t1.c0)), ((((t1.c0)AND(t1.c0)))OR(t1.c0))));
SELECT COUNT(*) FROM v0, rt0, t1 FULL OUTER JOIN vt0 ON NULL WHERE (((CASE t1.c0  WHEN v0.c0 THEN rt0.c0 ELSE t1.c0 END)OR(((rt0.c2)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c0  WHEN v0.c0 THEN rt0.c0 ELSE t1.c0 END)OR(((rt0.c2)<=(rt0.c1))))) IS TRUE)  as count FROM v0, rt0, t1 FULL OUTER JOIN vt0 ON NULL);
SELECT COUNT(*) FROM v0, rt0, t1 FULL OUTER JOIN vt0 ON NULL WHERE (((CASE t1.c0  WHEN v0.c0 THEN rt0.c0 ELSE t1.c0 END)OR(((rt0.c2)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c0  WHEN v0.c0 THEN rt0.c0 ELSE t1.c0 END)OR(((rt0.c2)<=(rt0.c1))))) IS TRUE)  as count FROM v0, rt0, t1 FULL OUTER JOIN vt0 ON NULL);
SELECT COUNT(*) FROM v0, rt0, t1 FULL OUTER JOIN vt0 ON NULL WHERE (((CASE t1.c0  WHEN v0.c0 THEN rt0.c0 ELSE t1.c0 END)OR(((rt0.c2)<=(rt0.c1)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON ((((x'15cb1b6d6333')=(0Xffffffff8e53b89d))) NOT BETWEEN (((((((((((((0.6833994895258572)OR(t1.c0)))AND(t1.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c0))) AND (CAST(v0.c0 AS BLOB))) LEFT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE NOCASE)) WHERE ((((vt0.c0)IS NOT(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS NOT(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ((((x'15cb1b6d6333')=(0xffffffff8e53b89d))) NOT BETWEEN (((((((((((((0.6833994895258572)OR(t1.c0)))AND(t1.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c0))) AND (CAST(v0.c0 AS BLOB))) LEFT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON ((((x'15cb1b6d6333')=(0Xffffffff8e53b89d))) NOT BETWEEN (((((((((((((0.6833994895258572)OR(t1.c0)))AND(t1.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c0))) AND (CAST(v0.c0 AS BLOB))) LEFT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE NOCASE)) WHERE ((((vt0.c0)IS NOT(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS NOT(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ((((x'15cb1b6d6333')=(0xffffffff8e53b89d))) NOT BETWEEN (((((((((((((0.6833994895258572)OR(t1.c0)))AND(t1.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c0))) AND (CAST(v0.c0 AS BLOB))) LEFT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON CASE (((vt0.c0))<((v0.c0)))  WHEN vt0.c0 THEN ((((NULL)AND(vt0.c0)))AND(rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS BLOB) AS BLOB) INNER JOIN t1 ON (NOT ((NOT (rt0.c1)))) WHERE (CAST(((t1.c0) IS TRUE) AS INTEGER)) ORDER BY ((CAST(v0.c0 AS INTEGER)) ISNULL), rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CASE (((vt0.c0))<((v0.c0)))  WHEN vt0.c0 THEN ((((NULL)AND(vt0.c0)))AND(rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS BLOB) AS BLOB) INNER JOIN t1 ON (NOT ((NOT (rt0.c1)))) ORDER BY ((CAST(v0.c0 AS INTEGER)) ISNULL), rt0.c2 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON CASE (((vt0.c0))<((v0.c0)))  WHEN vt0.c0 THEN ((((NULL)AND(vt0.c0)))AND(rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS BLOB) AS BLOB) INNER JOIN t1 ON (NOT ((NOT (rt0.c1)))) WHERE (CAST(((t1.c0) IS TRUE) AS INTEGER)) ORDER BY ((CAST(v0.c0 AS INTEGER)) ISNULL), rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CASE (((vt0.c0))<((v0.c0)))  WHEN vt0.c0 THEN ((((NULL)AND(vt0.c0)))AND(rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS BLOB) AS BLOB) INNER JOIN t1 ON (NOT ((NOT (rt0.c1)))) ORDER BY ((CAST(v0.c0 AS INTEGER)) ISNULL), rt0.c2 ASC  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT * FROM v0, vt0 WHERE (CAST(v0.c0 AS TEXT) COLLATE NOCASE) ORDER BY '0.535203838748705'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY '0.535203838748705'  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (CAST(v0.c0 AS TEXT) COLLATE NOCASE) ORDER BY '0.535203838748705'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY '0.535203838748705'  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (CAST(v0.c0 AS TEXT) COLLATE NOCASE) ORDER BY '0.535203838748705'  NULLS FIRST;
SELECT * FROM v0 FULL OUTER JOIN rt0 ON CAST(v0.c0 COLLATE BINARY AS INTEGER) WHERE ((NOT (rt0.c2))) ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c1) ISNULL))), rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CAST(v0.c0 COLLATE BINARY AS INTEGER) ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c1) ISNULL))), rt0.c2 DESC  NULLS LAST);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON CAST(v0.c0 COLLATE BINARY AS INTEGER) WHERE ((NOT (rt0.c2))) ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c1) ISNULL))), rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CAST(v0.c0 COLLATE BINARY AS INTEGER) ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c1) ISNULL))), rt0.c2 DESC  NULLS LAST);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON CAST(v0.c0 COLLATE BINARY AS INTEGER) WHERE ((NOT (rt0.c2))) ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c1) ISNULL))), rt0.c2 DESC  NULLS LAST;
SELECT * FROM t1 INDEXED BY i83, v0, rt0, vt0 WHERE (((((((((((vt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))OR(CASE WHEN rt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN t1.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND(v0.c0)))AND(((((t1.c0)AND(vt0.c0)))OR('s^,E')))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))OR(CASE WHEN rt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN t1.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND(v0.c0)))AND(((((t1.c0)AND(vt0.c0)))OR('s^,E')))))OR(vt0.c0))) IS TRUE)  as count FROM t1 INDEXED BY i83, v0, rt0, vt0);
SELECT * FROM t1 INDEXED BY i83, v0, rt0, vt0 WHERE (((((((((((vt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))OR(CASE WHEN rt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN t1.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND(v0.c0)))AND(((((t1.c0)AND(vt0.c0)))OR('s^,E')))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))OR(CASE WHEN rt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN t1.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND(v0.c0)))AND(((((t1.c0)AND(vt0.c0)))OR('s^,E')))))OR(vt0.c0))) IS TRUE)  as count FROM t1 INDEXED BY i83, v0, rt0, vt0);
SELECT * FROM t1 INDEXED BY i83, v0, rt0, vt0 WHERE (((((((((((vt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))OR(CASE WHEN rt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN t1.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND(v0.c0)))AND(((((t1.c0)AND(vt0.c0)))OR('s^,E')))))OR(vt0.c0)));
SELECT COUNT(*) FROM v0 WHERE (((((+ (v0.c0)), ((((((((v0.c0)OR(v0.c0)))OR(NULL)))OR(v0.c0)))AND(NULL)), (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))>=((((v0.c0) NOTNULL), '', MIN(v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((+ (v0.c0)), ((((((((v0.c0)OR(v0.c0)))OR(NULL)))OR(v0.c0)))AND(NULL)), (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))>=((((v0.c0) NOTNULL), '', MIN(v0.c0, v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((+ (v0.c0)), ((((((((v0.c0)OR(v0.c0)))OR(NULL)))OR(v0.c0)))AND(NULL)), (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))>=((((v0.c0) NOTNULL), '', MIN(v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((+ (v0.c0)), ((((((((v0.c0)OR(v0.c0)))OR(NULL)))OR(v0.c0)))AND(NULL)), (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))>=((((v0.c0) NOTNULL), '', MIN(v0.c0, v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((+ (v0.c0)), ((((((((v0.c0)OR(v0.c0)))OR(NULL)))OR(v0.c0)))AND(NULL)), (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))>=((((v0.c0) NOTNULL), '', MIN(v0.c0, v0.c0)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS BLOB))) FULL OUTER JOIN t1 ON IFNULL(((rt0.c1)<<(rt0.c0)), ((((rt0.c1)AND(rt0.c1)))AND(t1.c0))) WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END IN ())) ORDER BY CAST(PRINTF(rt0.c1) AS BLOB) ASC  NULLS FIRST, ((CAST(rt0.c0 AS TEXT)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS BLOB))) FULL OUTER JOIN t1 ON IFNULL(((rt0.c1)<<(rt0.c0)), ((((rt0.c1)AND(rt0.c1)))AND(t1.c0))) ORDER BY CAST(PRINTF(rt0.c1) AS BLOB) ASC  NULLS FIRST, ((CAST(rt0.c0 AS TEXT)) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS BLOB))) FULL OUTER JOIN t1 ON IFNULL(((rt0.c1)<<(rt0.c0)), ((((rt0.c1)AND(rt0.c1)))AND(t1.c0))) WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END IN ())) ORDER BY CAST(PRINTF(rt0.c1) AS BLOB) ASC  NULLS FIRST, ((CAST(rt0.c0 AS TEXT)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS BLOB))) FULL OUTER JOIN t1 ON IFNULL(((rt0.c1)<<(rt0.c0)), ((((rt0.c1)AND(rt0.c1)))AND(t1.c0))) ORDER BY CAST(PRINTF(rt0.c1) AS BLOB) ASC  NULLS FIRST, ((CAST(rt0.c0 AS TEXT)) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (CAST(rt0.c0 AS BLOB))) FULL OUTER JOIN t1 ON IFNULL(((rt0.c1)<<(rt0.c0)), ((((rt0.c1)AND(rt0.c1)))AND(t1.c0))) WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END IN ())) ORDER BY CAST(PRINTF(rt0.c1) AS BLOB) ASC  NULLS FIRST, ((CAST(rt0.c0 AS TEXT)) NOTNULL) ASC  NULLS LAST;
SELECT * FROM v0 WHERE ((((+ (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((+ (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((+ (v0.c0))) NOT NULL));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOTNULL) THEN CAST(rt0.c2 AS INTEGER) WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) THEN 'V周fe' WHEN rt0.c2 THEN CAST(rt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) NOTNULL) THEN CAST(rt0.c2 AS INTEGER) WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) THEN 'V周fe' WHEN rt0.c2 THEN CAST(rt0.c0 AS REAL) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOTNULL) THEN CAST(rt0.c2 AS INTEGER) WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) THEN 'V周fe' WHEN rt0.c2 THEN CAST(rt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) NOTNULL) THEN CAST(rt0.c2 AS INTEGER) WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) THEN 'V周fe' WHEN rt0.c2 THEN CAST(rt0.c0 AS REAL) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOTNULL) THEN CAST(rt0.c2 AS INTEGER) WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) THEN 'V周fe' WHEN rt0.c2 THEN CAST(rt0.c0 AS REAL) END);
SELECT COUNT(*) FROM rt0, vt0, t1, v0 WHERE ((NOT (ABS('ib윶yT/>')))) ORDER BY ((vt0.c0 IN (rt0.c2)) IN (NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (ABS('ib윶yT/>')))) IS TRUE)  as count FROM rt0, vt0, t1, v0 ORDER BY ((vt0.c0 IN (rt0.c2)) IN (NULL)) DESC);
SELECT COUNT(*) FROM rt0, vt0, t1, v0 WHERE ((NOT (ABS('ib윶yT/>')))) ORDER BY ((vt0.c0 IN (rt0.c2)) IN (NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (ABS('ib윶yT/>')))) IS TRUE)  as count FROM rt0, vt0, t1, v0 ORDER BY ((vt0.c0 IN (rt0.c2)) IN (NULL)) DESC);
SELECT COUNT(*) FROM rt0, vt0, t1, v0 WHERE ((NOT (ABS('ib윶yT/>')))) ORDER BY ((vt0.c0 IN (rt0.c2)) IN (NULL)) DESC;
SELECT COUNT(*) FROM v0, rt0 INNER JOIN t1 ON (((t1.c0, rt0.c1, vt0.c0)) BETWEEN ((((((((((((((rt0.c2)AND(rt0.c0)))AND(t1.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(t1.c0)), vt0.c0 COLLATE RTRIM, CASE v0.c0  WHEN rt0.c2 THEN t1.c0 END)) AND ((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(v0.c0)))OR(vt0.c0)))AND(t1.c0)), ((vt0.c0) BETWEEN (NULL) AND (rt0.c1)), (vt0.c0 IN (rt0.c2, t1.c0))))) CROSS JOIN vt0 ON (~ (rt0.c2)) COLLATE RTRIM COLLATE RTRIM WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((((t1.c0)OR(vt0.c0)))OR(rt0.c1)) THEN ((rt0.c1)||(rt0.c2)) ELSE v0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN ((((t1.c0)OR(vt0.c0)))OR(rt0.c1)) THEN ((rt0.c1)||(rt0.c2)) ELSE v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt0 INNER JOIN t1 ON (((t1.c0, rt0.c1, vt0.c0)) BETWEEN ((((((((((((((rt0.c2)AND(rt0.c0)))AND(t1.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(t1.c0)), vt0.c0 COLLATE RTRIM, CASE v0.c0  WHEN rt0.c2 THEN t1.c0 END)) AND ((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(v0.c0)))OR(vt0.c0)))AND(t1.c0)), ((vt0.c0) BETWEEN (NULL) AND (rt0.c1)), (vt0.c0 IN (rt0.c2, t1.c0))))) CROSS JOIN vt0 ON (~ (rt0.c2)) COLLATE RTRIM COLLATE RTRIM);
SELECT COUNT(*) FROM v0, rt0 INNER JOIN t1 ON (((t1.c0, rt0.c1, vt0.c0)) BETWEEN ((((((((((((((rt0.c2)AND(rt0.c0)))AND(t1.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(t1.c0)), vt0.c0 COLLATE RTRIM, CASE v0.c0  WHEN rt0.c2 THEN t1.c0 END)) AND ((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(v0.c0)))OR(vt0.c0)))AND(t1.c0)), ((vt0.c0) BETWEEN (NULL) AND (rt0.c1)), (vt0.c0 IN (rt0.c2, t1.c0))))) CROSS JOIN vt0 ON (~ (rt0.c2)) COLLATE RTRIM COLLATE RTRIM WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((((t1.c0)OR(vt0.c0)))OR(rt0.c1)) THEN ((rt0.c1)||(rt0.c2)) ELSE v0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN ((((t1.c0)OR(vt0.c0)))OR(rt0.c1)) THEN ((rt0.c1)||(rt0.c2)) ELSE v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt0 INNER JOIN t1 ON (((t1.c0, rt0.c1, vt0.c0)) BETWEEN ((((((((((((((rt0.c2)AND(rt0.c0)))AND(t1.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(t1.c0)), vt0.c0 COLLATE RTRIM, CASE v0.c0  WHEN rt0.c2 THEN t1.c0 END)) AND ((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(v0.c0)))OR(vt0.c0)))AND(t1.c0)), ((vt0.c0) BETWEEN (NULL) AND (rt0.c1)), (vt0.c0 IN (rt0.c2, t1.c0))))) CROSS JOIN vt0 ON (~ (rt0.c2)) COLLATE RTRIM COLLATE RTRIM);
SELECT COUNT(*) FROM v0, rt0 INNER JOIN t1 ON (((t1.c0, rt0.c1, vt0.c0)) BETWEEN ((((((((((((((rt0.c2)AND(rt0.c0)))AND(t1.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(t1.c0)), vt0.c0 COLLATE RTRIM, CASE v0.c0  WHEN rt0.c2 THEN t1.c0 END)) AND ((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(v0.c0)))OR(vt0.c0)))AND(t1.c0)), ((vt0.c0) BETWEEN (NULL) AND (rt0.c1)), (vt0.c0 IN (rt0.c2, t1.c0))))) CROSS JOIN vt0 ON (~ (rt0.c2)) COLLATE RTRIM COLLATE RTRIM WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((((t1.c0)OR(vt0.c0)))OR(rt0.c1)) THEN ((rt0.c1)||(rt0.c2)) ELSE v0.c0 COLLATE NOCASE END);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((v0.c0)&(vt0.c0)) IN ())) ORDER BY (rt0.c2 COLLATE RTRIM IN (CAST(rt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)&(vt0.c0)) IN ())) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, rt0 ORDER BY (rt0.c2 COLLATE RTRIM IN (CAST(rt0.c0 AS BLOB))));
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((v0.c0)&(vt0.c0)) IN ())) ORDER BY (rt0.c2 COLLATE RTRIM IN (CAST(rt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)&(vt0.c0)) IN ())) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, rt0 ORDER BY (rt0.c2 COLLATE RTRIM IN (CAST(rt0.c0 AS BLOB))));
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((v0.c0)&(vt0.c0)) IN ())) ORDER BY (rt0.c2 COLLATE RTRIM IN (CAST(rt0.c0 AS BLOB)));
SELECT COUNT(*) FROM rt0 WHERE ((~ (NULL))) ORDER BY (- ((- (rt0.c1)))), CAST(((((x'')OR(rt0.c1)))AND(rt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM rt0 ORDER BY (- ((- (rt0.c1)))), CAST(((((x'')OR(rt0.c1)))AND(rt0.c0)) AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (NULL))) ORDER BY (- ((- (rt0.c1)))), CAST(((((x'')OR(rt0.c1)))AND(rt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM rt0 ORDER BY (- ((- (rt0.c1)))), CAST(((((x'')OR(rt0.c1)))AND(rt0.c0)) AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (NULL))) ORDER BY (- ((- (rt0.c1)))), CAST(((((x'')OR(rt0.c1)))AND(rt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON CAST(QUOTE(v0.c0) AS TEXT) CROSS JOIN rt0 ON NULL CROSS JOIN t1 ON CASE WHEN t1.c0 THEN ((rt0.c0)%(rt0.c1)) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN rt0.c0 THEN ((rt0.c0)=(rt0.c1)) END WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(QUOTE(v0.c0) AS TEXT) CROSS JOIN rt0 ON NULL CROSS JOIN t1 ON CASE WHEN t1.c0 THEN ((rt0.c0)%(rt0.c1)) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN rt0.c0 THEN ((rt0.c0)=(rt0.c1)) END);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON CAST(QUOTE(v0.c0) AS TEXT) CROSS JOIN rt0 ON NULL CROSS JOIN t1 ON CASE WHEN t1.c0 THEN ((rt0.c0)%(rt0.c1)) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN rt0.c0 THEN ((rt0.c0)=(rt0.c1)) END WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(QUOTE(v0.c0) AS TEXT) CROSS JOIN rt0 ON NULL CROSS JOIN t1 ON CASE WHEN t1.c0 THEN ((rt0.c0)%(rt0.c1)) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN rt0.c0 THEN ((rt0.c0)=(rt0.c1)) END);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON CAST(QUOTE(v0.c0) AS TEXT) CROSS JOIN rt0 ON NULL CROSS JOIN t1 ON CASE WHEN t1.c0 THEN ((rt0.c0)%(rt0.c1)) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN rt0.c0 THEN ((rt0.c0)=(rt0.c1)) END WHERE (rt0.c1);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0 IN (v0.c0, v0.c0, vt0.c0))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (CASE WHEN v0.c0 THEN vt0.c0 END))) ORDER BY (((((((((v0.c0 IN (0.1536965950043262, v0.c0)))OR(CASE WHEN x'57ff' THEN NULL END)))OR(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))))AND((vt0.c0 IN ()))))OR(v0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c0, v0.c0, vt0.c0))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (CASE WHEN v0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((((((v0.c0 IN (0.1536965950043262, v0.c0)))OR(CASE WHEN x'57ff' THEN NULL END)))OR(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))))AND((vt0.c0 IN ()))))OR(v0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0 IN (v0.c0, v0.c0, vt0.c0))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (CASE WHEN v0.c0 THEN vt0.c0 END))) ORDER BY (((((((((v0.c0 IN (0.1536965950043262, v0.c0)))OR(CASE WHEN x'57ff' THEN NULL END)))OR(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))))AND((vt0.c0 IN ()))))OR(v0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c0, v0.c0, vt0.c0))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (CASE WHEN v0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((((((v0.c0 IN (0.1536965950043262, v0.c0)))OR(CASE WHEN x'57ff' THEN NULL END)))OR(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))))AND((vt0.c0 IN ()))))OR(v0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0 IN (v0.c0, v0.c0, vt0.c0))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (CASE WHEN v0.c0 THEN vt0.c0 END))) ORDER BY (((((((((v0.c0 IN (0.1536965950043262, v0.c0)))OR(CASE WHEN x'57ff' THEN NULL END)))OR(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))))AND((vt0.c0 IN ()))))OR(v0.c0)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))GLOB(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))GLOB(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))GLOB(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))GLOB(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))GLOB(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM t1, rt0, vt0, v0 WHERE ((((((rt0.c2))!=((NULL))))>=(((NULL)%(NULL)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<>((NULL))))>=(((NULL)%(NULL))))) IS TRUE)  as count FROM t1, rt0, vt0, v0);
SELECT COUNT(*) FROM t1, rt0, vt0, v0 WHERE ((((((rt0.c2))!=((NULL))))>=(((NULL)%(NULL)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<>((NULL))))>=(((NULL)%(NULL))))) IS TRUE)  as count FROM t1, rt0, vt0, v0);
SELECT COUNT(*) FROM t1, rt0, vt0, v0 WHERE ((((((rt0.c2))!=((NULL))))>=(((NULL)%(NULL)))));
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, vt0 WHERE ((((((((((((((~ (t1.c0)))AND(((vt0.c0) NOTNULL))))OR(NULL)))AND(((((t1.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(LIKELIHOOD(t1.c0, 0.4298162110022872))))AND((((NULL)) BETWEEN ((vt0.c0)) AND ((t1.c0))))))AND(LOWER(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((~ (t1.c0)))AND(((vt0.c0) NOTNULL))))OR(NULL)))AND(((((t1.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(LIKELIHOOD(t1.c0, 0.4298162110022872))))AND((((NULL)) BETWEEN ((vt0.c0)) AND ((t1.c0))))))AND(LOWER(NULL)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, vt0 WHERE ((((((((((((((~ (t1.c0)))AND(((vt0.c0) NOTNULL))))OR(NULL)))AND(((((t1.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(LIKELIHOOD(t1.c0, 0.4298162110022872))))AND((((NULL)) BETWEEN ((vt0.c0)) AND ((t1.c0))))))AND(LOWER(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((~ (t1.c0)))AND(((vt0.c0) NOTNULL))))OR(NULL)))AND(((((t1.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(LIKELIHOOD(t1.c0, 0.4298162110022872))))AND((((NULL)) BETWEEN ((vt0.c0)) AND ((t1.c0))))))AND(LOWER(NULL)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, vt0 WHERE ((((((((((((((~ (t1.c0)))AND(((vt0.c0) NOTNULL))))OR(NULL)))AND(((((t1.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(LIKELIHOOD(t1.c0, 0.4298162110022872))))AND((((NULL)) BETWEEN ((vt0.c0)) AND ((t1.c0))))))AND(LOWER(NULL))));
SELECT ALL COUNT(*) FROM v0, t1 WHERE ((('m|' COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT (((('m|' COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM v0, t1);
SELECT ALL COUNT(*) FROM v0, t1 WHERE ((('m|' COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT (((('m|' COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM v0, t1);
SELECT ALL COUNT(*) FROM v0, t1 WHERE ((('m|' COLLATE NOCASE) ISNULL));
SELECT * FROM v0 NOT INDEXED, rt0 WHERE (((CASE WHEN rt0.c0 THEN v0.c0 ELSE x'' END)>(((rt0.c2)>>(rt0.c1))))) ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(NULL))) BETWEEN (rt0.c2) AND (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN v0.c0 ELSE x'' END)>(((rt0.c2)>>(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(NULL))) BETWEEN (rt0.c2) AND (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT * FROM v0 NOT INDEXED, rt0 WHERE (((CASE WHEN rt0.c0 THEN v0.c0 ELSE x'' END)>(((rt0.c2)>>(rt0.c1))))) ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(NULL))) BETWEEN (rt0.c2) AND (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN v0.c0 ELSE x'' END)>(((rt0.c2)>>(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(NULL))) BETWEEN (rt0.c2) AND (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT * FROM v0 NOT INDEXED, rt0 WHERE (((CASE WHEN rt0.c0 THEN v0.c0 ELSE x'' END)>(((rt0.c2)>>(rt0.c1))))) ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(NULL))) BETWEEN (rt0.c2) AND (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON CAST(rt0.c1 COLLATE BINARY AS TEXT) LEFT OUTER JOIN t1 ON ((rt0.c0 COLLATE RTRIM) BETWEEN (((NULL) IS TRUE)) AND (((((t1.c0)OR(t1.c0)))OR(vt0.c0)))) INNER JOIN vt0 ON v0.c0 WHERE ((((rt0.c2)!=(vt0.c0)) IN ())) ORDER BY CASE WHEN SUBSTR(t1.c0, vt0.c0) THEN ((rt0.c2)AND(rt0.c1)) WHEN TRIM(rt0.c2) THEN '-1720067691' WHEN ((((((((((((rt0.c0)OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c1)))AND(v0.c0)) THEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)!=(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST(rt0.c1 COLLATE BINARY AS TEXT) LEFT OUTER JOIN t1 ON ((rt0.c0 COLLATE RTRIM) BETWEEN (((NULL) IS TRUE)) AND (((((t1.c0)OR(t1.c0)))OR(vt0.c0)))) INNER JOIN vt0 ON v0.c0 ORDER BY CASE WHEN SUBSTR(t1.c0, vt0.c0) THEN ((rt0.c2)AND(rt0.c1)) WHEN TRIM(rt0.c2) THEN '-1720067691' WHEN ((((((((((((rt0.c0)OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c1)))AND(v0.c0)) THEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON CAST(rt0.c1 COLLATE BINARY AS TEXT) LEFT OUTER JOIN t1 ON ((rt0.c0 COLLATE RTRIM) BETWEEN (((NULL) IS TRUE)) AND (((((t1.c0)OR(t1.c0)))OR(vt0.c0)))) INNER JOIN vt0 ON v0.c0 WHERE ((((rt0.c2)!=(vt0.c0)) IN ())) ORDER BY CASE WHEN SUBSTR(t1.c0, vt0.c0) THEN ((rt0.c2)AND(rt0.c1)) WHEN TRIM(rt0.c2) THEN '-1720067691' WHEN ((((((((((((rt0.c0)OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c1)))AND(v0.c0)) THEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)!=(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST(rt0.c1 COLLATE BINARY AS TEXT) LEFT OUTER JOIN t1 ON ((rt0.c0 COLLATE RTRIM) BETWEEN (((NULL) IS TRUE)) AND (((((t1.c0)OR(t1.c0)))OR(vt0.c0)))) INNER JOIN vt0 ON v0.c0 ORDER BY CASE WHEN SUBSTR(t1.c0, vt0.c0) THEN ((rt0.c2)AND(rt0.c1)) WHEN TRIM(rt0.c2) THEN '-1720067691' WHEN ((((((((((((rt0.c0)OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(rt0.c1)))AND(v0.c0)) THEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)) END ASC  NULLS LAST);
SELECT * FROM v0, t1 FULL OUTER JOIN vt0 ON CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) AS BLOB) FULL OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN v0.c0 THEN t1.c0 ELSE rt0.c2 END) BETWEEN (((rt0.c2) ISNULL)) AND (((t1.c0)*(rt0.c0)))) WHERE (COALESCE(DISTINCT CAST(rt0.c0 AS REAL), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))) ORDER BY ((((0.09113254737071463) IS FALSE))IS(((((t1.c0)OR(vt0.c0)))AND(rt0.c2)))) ASC, CAST(rt0.c1 COLLATE BINARY AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CAST(rt0.c0 AS REAL), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))) IS TRUE)  as count FROM v0, t1 FULL OUTER JOIN vt0 ON CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) AS BLOB) FULL OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN v0.c0 THEN t1.c0 ELSE rt0.c2 END) BETWEEN (((rt0.c2) ISNULL)) AND (((t1.c0)*(rt0.c0)))) ORDER BY ((((0.09113254737071463) IS FALSE))IS(((((t1.c0)OR(vt0.c0)))AND(rt0.c2)))) ASC, CAST(rt0.c1 COLLATE BINARY AS NUMERIC)  NULLS FIRST);
SELECT * FROM v0, t1 FULL OUTER JOIN vt0 ON CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) AS BLOB) FULL OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN v0.c0 THEN t1.c0 ELSE rt0.c2 END) BETWEEN (((rt0.c2) ISNULL)) AND (((t1.c0)*(rt0.c0)))) WHERE (COALESCE(DISTINCT CAST(rt0.c0 AS REAL), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))) ORDER BY ((((0.09113254737071463) IS FALSE))IS(((((t1.c0)OR(vt0.c0)))AND(rt0.c2)))) ASC, CAST(rt0.c1 COLLATE BINARY AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CAST(rt0.c0 AS REAL), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))) IS TRUE)  as count FROM v0, t1 FULL OUTER JOIN vt0 ON CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) AS BLOB) FULL OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN v0.c0 THEN t1.c0 ELSE rt0.c2 END) BETWEEN (((rt0.c2) ISNULL)) AND (((t1.c0)*(rt0.c0)))) ORDER BY ((((0.09113254737071463) IS FALSE))IS(((((t1.c0)OR(vt0.c0)))AND(rt0.c2)))) ASC, CAST(rt0.c1 COLLATE BINARY AS NUMERIC)  NULLS FIRST);
SELECT * FROM v0, t1 FULL OUTER JOIN vt0 ON CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) AS BLOB) FULL OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN v0.c0 THEN t1.c0 ELSE rt0.c2 END) BETWEEN (((rt0.c2) ISNULL)) AND (((t1.c0)*(rt0.c0)))) WHERE (COALESCE(DISTINCT CAST(rt0.c0 AS REAL), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))) ORDER BY ((((0.09113254737071463) IS FALSE))IS(((((t1.c0)OR(vt0.c0)))AND(rt0.c2)))) ASC, CAST(rt0.c1 COLLATE BINARY AS NUMERIC)  NULLS FIRST;
SELECT * FROM vt0, v0, t1 WHERE ((((NOT (x'')))+(CAST(t1.c0 AS REAL)))) ORDER BY (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END IN (t1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (x'')))+(CAST(t1.c0 AS REAL)))) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END IN (t1.c0))  NULLS LAST);
SELECT * FROM vt0, v0, t1 WHERE ((((NOT (x'')))+(CAST(t1.c0 AS REAL)))) ORDER BY (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END IN (t1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (x'')))+(CAST(t1.c0 AS REAL)))) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END IN (t1.c0))  NULLS LAST);
SELECT * FROM vt0, v0, t1 WHERE ((((NOT (x'')))+(CAST(t1.c0 AS REAL)))) ORDER BY (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END IN (t1.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) IS TRUE)) ORDER BY (((rt0.c0 IN ())) IS TRUE) DESC, (((t1.c0)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((((rt0.c1)<=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 END) IS TRUE)) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (((rt0.c0 IN ())) IS TRUE) DESC, (((t1.c0)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((((rt0.c1)<=(rt0.c2))))));
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) IS TRUE)) ORDER BY (((rt0.c0 IN ())) IS TRUE) DESC, (((t1.c0)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((((rt0.c1)<=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 END) IS TRUE)) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (((rt0.c0 IN ())) IS TRUE) DESC, (((t1.c0)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((((rt0.c1)<=(rt0.c2))))));
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) IS TRUE)) ORDER BY (((rt0.c0 IN ())) IS TRUE) DESC, (((t1.c0)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((((rt0.c1)<=(rt0.c2)))));
SELECT * FROM v0 INNER JOIN vt0 ON (~ (v0.c0)) COLLATE BINARY CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT ((rt0.c2) NOT NULL), 0.49328530245446933) CROSS JOIN t1 ON json_type(NULL) WHERE (((((v0.c0)%(')!C'))) BETWEEN (NULL) AND (((((0.08820101956775805)OR(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(')!C'))) BETWEEN (NULL) AND (((((0.08820101956775805)OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (~ (v0.c0)) COLLATE BINARY CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT ((rt0.c2) NOT NULL), 0.49328530245446933) CROSS JOIN t1 ON json_type(NULL));
SELECT * FROM v0 INNER JOIN vt0 ON (~ (v0.c0)) COLLATE BINARY CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT ((rt0.c2) NOT NULL), 0.49328530245446933) CROSS JOIN t1 ON json_type(NULL) WHERE (((((v0.c0)%(')!C'))) BETWEEN (NULL) AND (((((0.08820101956775805)OR(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(')!C'))) BETWEEN (NULL) AND (((((0.08820101956775805)OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (~ (v0.c0)) COLLATE BINARY CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT ((rt0.c2) NOT NULL), 0.49328530245446933) CROSS JOIN t1 ON json_type(NULL));
SELECT * FROM v0 INNER JOIN vt0 ON (~ (v0.c0)) COLLATE BINARY CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT ((rt0.c2) NOT NULL), 0.49328530245446933) CROSS JOIN t1 ON json_type(NULL) WHERE (((((v0.c0)%(')!C'))) BETWEEN (NULL) AND (((((0.08820101956775805)OR(rt0.c1)))OR(rt0.c1)))));
SELECT COUNT(*) FROM vt0, t1, v0 WHERE ('0.0');
SELECT SUM(count) FROM (SELECT (('0.0') IS TRUE)  as count FROM vt0, t1, v0);
SELECT COUNT(*) FROM vt0, t1, v0 WHERE ('0.0');
SELECT SUM(count) FROM (SELECT (('0.0') IS TRUE)  as count FROM vt0, t1, v0);
SELECT COUNT(*) FROM vt0, t1, v0 WHERE ('0.0');
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, 0xffffffffa96e219d))))&(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, 0Xffffffffa96e219d))))&(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, 0xffffffffa96e219d))))&(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, 0Xffffffffa96e219d))))&(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, 0xffffffffa96e219d))))&(((vt0.c0) NOT NULL))));
SELECT * FROM vt0, rt0, v0, t1 WHERE ((((v0.c0 IN ()))&(((t1.c0)IS NOT(rt0.c1))))) ORDER BY (~ (((rt0.c2) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))&(((t1.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0, t1 ORDER BY (~ (((rt0.c2) IS FALSE))) ASC);
SELECT * FROM vt0, rt0, v0, t1 WHERE ((((v0.c0 IN ()))&(((t1.c0)IS NOT(rt0.c1))))) ORDER BY (~ (((rt0.c2) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))&(((t1.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0, t1 ORDER BY (~ (((rt0.c2) IS FALSE))) ASC);
SELECT * FROM vt0, rt0, v0, t1 WHERE ((((v0.c0 IN ()))&(((t1.c0)IS NOT(rt0.c1))))) ORDER BY (~ (((rt0.c2) IS FALSE))) ASC;
SELECT ALL * FROM vt0, v0, t1, rt0 WHERE (((((((((vt0.c0)AND('')))OR(rt0.c0)))AND(x'')))AND((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND('')))OR(rt0.c0)))AND(x'')))AND((+ (rt0.c2))))) IS TRUE)  as count FROM vt0, v0, t1, rt0);
SELECT ALL * FROM vt0, v0, t1, rt0 WHERE (((((((((vt0.c0)AND('')))OR(rt0.c0)))AND(x'')))AND((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND('')))OR(rt0.c0)))AND(x'')))AND((+ (rt0.c2))))) IS TRUE)  as count FROM vt0, v0, t1, rt0);
SELECT ALL * FROM vt0, v0, t1, rt0 WHERE (((((((((vt0.c0)AND('')))OR(rt0.c0)))AND(x'')))AND((+ (rt0.c2)))));
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE BINARY) BETWEEN (((((t1.c0)OR(t1.c0)))OR(t1.c0))) AND (((t1.c0)>(t1.c0))))) ORDER BY ((((t1.c0)+(t1.c0)))<(t1.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE BINARY) BETWEEN (((((t1.c0)OR(t1.c0)))OR(t1.c0))) AND (((t1.c0)>(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)+(t1.c0)))<(t1.c0 COLLATE RTRIM)) DESC);
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE BINARY) BETWEEN (((((t1.c0)OR(t1.c0)))OR(t1.c0))) AND (((t1.c0)>(t1.c0))))) ORDER BY ((((t1.c0)+(t1.c0)))<(t1.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE BINARY) BETWEEN (((((t1.c0)OR(t1.c0)))OR(t1.c0))) AND (((t1.c0)>(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)+(t1.c0)))<(t1.c0 COLLATE RTRIM)) DESC);
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE BINARY) BETWEEN (((((t1.c0)OR(t1.c0)))OR(t1.c0))) AND (((t1.c0)>(t1.c0))))) ORDER BY ((((t1.c0)+(t1.c0)))<(t1.c0 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (UNLIKELY(rt0.c0) IN ()) WHERE (CAST(rt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (UNLIKELY(rt0.c0) IN ()));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (UNLIKELY(rt0.c0) IN ()) WHERE (CAST(rt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (UNLIKELY(rt0.c0) IN ()));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (UNLIKELY(rt0.c0) IN ()) WHERE (CAST(rt0.c0 AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+('1935786264'))) ORDER BY (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+('1935786264'))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+('1935786264'))) ORDER BY (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+('1935786264'))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+('1935786264'))) ORDER BY (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)) ASC;
SELECT ALL * FROM t1 WHERE ('0.720086738372125');
SELECT SUM(count) FROM (SELECT (('0.720086738372125') IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ('0.720086738372125');
SELECT SUM(count) FROM (SELECT (('0.720086738372125') IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ('0.720086738372125');
SELECT * FROM v0 WHERE (((((v0.c0)<>(v0.c0)))/(v0.c0 COLLATE RTRIM))) ORDER BY ((((LIKELY(DISTINCT v0.c0))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND('0'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<>(v0.c0)))/(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY ((((LIKELY(DISTINCT v0.c0))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND('0'))  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c0)<>(v0.c0)))/(v0.c0 COLLATE RTRIM))) ORDER BY ((((LIKELY(DISTINCT v0.c0))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND('0'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<>(v0.c0)))/(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY ((((LIKELY(DISTINCT v0.c0))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND('0'))  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c0)<>(v0.c0)))/(v0.c0 COLLATE RTRIM))) ORDER BY ((((LIKELY(DISTINCT v0.c0))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND('0'))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE TYPEOF(DISTINCT rt0.c2)  WHEN ((rt0.c2)LIKE(rt0.c2)) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TYPEOF(DISTINCT rt0.c2)  WHEN ((rt0.c2)LIKE(rt0.c2)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE TYPEOF(DISTINCT rt0.c2)  WHEN ((rt0.c2)LIKE(rt0.c2)) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TYPEOF(DISTINCT rt0.c2)  WHEN ((rt0.c2)LIKE(rt0.c2)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE TYPEOF(DISTINCT rt0.c2)  WHEN ((rt0.c2)LIKE(rt0.c2)) THEN (rt0.c2 IN ()) END);
SELECT ALL * FROM v0 INDEXED BY i8, rt0, vt0 WHERE ((((((NOT (rt0.c1)))AND(IFNULL(v0.c0, v0.c0))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c1)))AND(IFNULL(v0.c0, v0.c0))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM v0 INDEXED BY i8, rt0, vt0);
SELECT ALL * FROM v0 INDEXED BY i8, rt0, vt0 WHERE ((((((NOT (rt0.c1)))AND(IFNULL(v0.c0, v0.c0))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c1)))AND(IFNULL(v0.c0, v0.c0))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM v0 INDEXED BY i8, rt0, vt0);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON (((- (vt0.c0)))GLOB(((t1.c0)||(v0.c0)))) RIGHT OUTER JOIN rt0 ON ((CASE WHEN v0.c0 THEN rt0.c0 END) BETWEEN (((rt0.c2) NOTNULL)) AND (CASE WHEN x'' THEN rt0.c0 END)) FULL OUTER JOIN t1 ON CAST(rt0.c0 AS INTEGER) COLLATE BINARY WHERE (((NOT (x'')) IN ((rt0.c0 IN (rt0.c1)), rt0.c0))) ORDER BY ((TYPEOF(DISTINCT t1.c0)) NOT BETWEEN ((+ (v0.c0))) AND ((rt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (x'')) IN ((rt0.c0 IN (rt0.c1)), rt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((- (vt0.c0)))GLOB(((t1.c0)||(v0.c0)))) RIGHT OUTER JOIN rt0 ON ((CASE WHEN v0.c0 THEN rt0.c0 END) BETWEEN (((rt0.c2) NOTNULL)) AND (CASE WHEN x'' THEN rt0.c0 END)) FULL OUTER JOIN t1 ON CAST(rt0.c0 AS INTEGER) COLLATE BINARY ORDER BY ((TYPEOF(DISTINCT t1.c0)) NOT BETWEEN ((+ (v0.c0))) AND ((rt0.c2 IN ()))) DESC);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON (((- (vt0.c0)))GLOB(((t1.c0)||(v0.c0)))) RIGHT OUTER JOIN rt0 ON ((CASE WHEN v0.c0 THEN rt0.c0 END) BETWEEN (((rt0.c2) NOTNULL)) AND (CASE WHEN x'' THEN rt0.c0 END)) FULL OUTER JOIN t1 ON CAST(rt0.c0 AS INTEGER) COLLATE BINARY WHERE (((NOT (x'')) IN ((rt0.c0 IN (rt0.c1)), rt0.c0))) ORDER BY ((TYPEOF(DISTINCT t1.c0)) NOT BETWEEN ((+ (v0.c0))) AND ((rt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (x'')) IN ((rt0.c0 IN (rt0.c1)), rt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((- (vt0.c0)))GLOB(((t1.c0)||(v0.c0)))) RIGHT OUTER JOIN rt0 ON ((CASE WHEN v0.c0 THEN rt0.c0 END) BETWEEN (((rt0.c2) NOTNULL)) AND (CASE WHEN x'' THEN rt0.c0 END)) FULL OUTER JOIN t1 ON CAST(rt0.c0 AS INTEGER) COLLATE BINARY ORDER BY ((TYPEOF(DISTINCT t1.c0)) NOT BETWEEN ((+ (v0.c0))) AND ((rt0.c2 IN ()))) DESC);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))IS(((v0.c0) NOT BETWEEN (v0.c0) AND (x''))))) ORDER BY (CAST(v0.c0 AS TEXT) IN ((NOT (v0.c0)))) DESC  NULLS LAST, (((v0.c0 IN ())) NOT BETWEEN (((v0.c0)AND(v0.c0))) AND (((('', '1774804333', v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))IS(((v0.c0) NOT BETWEEN (v0.c0) AND (x''))))) IS TRUE)  as count FROM v0 ORDER BY (CAST(v0.c0 AS TEXT) IN ((NOT (v0.c0)))) DESC  NULLS LAST, (((v0.c0 IN ())) NOT BETWEEN (((v0.c0)AND(v0.c0))) AND (((('', '1774804333', v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))IS(((v0.c0) NOT BETWEEN (v0.c0) AND (x''))))) ORDER BY (CAST(v0.c0 AS TEXT) IN ((NOT (v0.c0)))) DESC  NULLS LAST, (((v0.c0 IN ())) NOT BETWEEN (((v0.c0)AND(v0.c0))) AND (((('', '1774804333', v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))IS(((v0.c0) NOT BETWEEN (v0.c0) AND (x''))))) IS TRUE)  as count FROM v0 ORDER BY (CAST(v0.c0 AS TEXT) IN ((NOT (v0.c0)))) DESC  NULLS LAST, (((v0.c0 IN ())) NOT BETWEEN (((v0.c0)AND(v0.c0))) AND (((('', '1774804333', v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))IS(((v0.c0) NOT BETWEEN (v0.c0) AND (x''))))) ORDER BY (CAST(v0.c0 AS TEXT) IN ((NOT (v0.c0)))) DESC  NULLS LAST, (((v0.c0 IN ())) NOT BETWEEN (((v0.c0)AND(v0.c0))) AND (((('', '1774804333', v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, v0 RIGHT OUTER JOIN vt0 ON '-1635342223' WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM t1, v0 RIGHT OUTER JOIN vt0 ON '-1635342223');
SELECT ALL COUNT(*) FROM t1, v0 RIGHT OUTER JOIN vt0 ON '-1635342223' WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM t1, v0 RIGHT OUTER JOIN vt0 ON '-1635342223');
SELECT ALL COUNT(*) FROM t1, v0 RIGHT OUTER JOIN vt0 ON '-1635342223' WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND (((vt0.c0 IN ())))));
SELECT ALL * FROM v0, vt0, rt0, t1 WHERE (x'') ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN x'00e4' WHEN x'' THEN t1.c0 WHEN t1.c0 THEN rt0.c1 ELSE t1.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END) AND (((NULL)LIKE(t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt0, rt0, t1 ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN x'00e4' WHEN x'' THEN t1.c0 WHEN t1.c0 THEN rt0.c1 ELSE t1.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END) AND (((NULL)LIKE(t1.c0)))) DESC);
SELECT ALL * FROM v0, vt0, rt0, t1 WHERE (x'') ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN x'00e4' WHEN x'' THEN t1.c0 WHEN t1.c0 THEN rt0.c1 ELSE t1.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END) AND (((NULL)LIKE(t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt0, rt0, t1 ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN x'00e4' WHEN x'' THEN t1.c0 WHEN t1.c0 THEN rt0.c1 ELSE t1.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END) AND (((NULL)LIKE(t1.c0)))) DESC);
SELECT ALL * FROM v0, vt0, rt0, t1 WHERE (x'') ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN x'00e4' WHEN x'' THEN t1.c0 WHEN t1.c0 THEN rt0.c1 ELSE t1.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END) AND (((NULL)LIKE(t1.c0)))) DESC;
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN rt0 ON NULL WHERE (((rt0.c1 COLLATE NOCASE)OR(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(v0.c0)))AND(v0.c0))))) ORDER BY CASE v0.c0  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c0)&(rt0.c0)) WHEN ((((rt0.c2)OR(-2.45366978E8)))AND(rt0.c2)) THEN (((x'', '0.0', NULL)) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, 5.22335022E8))) WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN '754675300' END DESC, (((NOT (rt0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)OR(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON NULL ORDER BY CASE v0.c0  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c0)&(rt0.c0)) WHEN ((((rt0.c2)OR(-2.45366978E8)))AND(rt0.c2)) THEN (((x'', '0.0', NULL)) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, 5.22335022E8))) WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN '754675300' END DESC, (((NOT (rt0.c2))) IS TRUE));
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN rt0 ON NULL WHERE (((rt0.c1 COLLATE NOCASE)OR(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(v0.c0)))AND(v0.c0))))) ORDER BY CASE v0.c0  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c0)&(rt0.c0)) WHEN ((((rt0.c2)OR(-2.45366978E8)))AND(rt0.c2)) THEN (((x'', '0.0', NULL)) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, 5.22335022E8))) WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN '754675300' END DESC, (((NOT (rt0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)OR(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON NULL ORDER BY CASE v0.c0  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c0)&(rt0.c0)) WHEN ((((rt0.c2)OR(-2.45366978E8)))AND(rt0.c2)) THEN (((x'', '0.0', NULL)) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, 5.22335022E8))) WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN '754675300' END DESC, (((NOT (rt0.c2))) IS TRUE));
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN rt0 ON NULL WHERE (((rt0.c1 COLLATE NOCASE)OR(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(v0.c0)))AND(v0.c0))))) ORDER BY CASE v0.c0  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c0)&(rt0.c0)) WHEN ((((rt0.c2)OR(-2.45366978E8)))AND(rt0.c2)) THEN (((x'', '0.0', NULL)) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, 5.22335022E8))) WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN '754675300' END DESC, (((NOT (rt0.c2))) IS TRUE);
SELECT * FROM vt0, rt0, t1 WHERE ((((NULL) BETWEEN (t1.c0) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) BETWEEN (t1.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE ((((NULL) BETWEEN (t1.c0) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) BETWEEN (t1.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE ((((NULL) BETWEEN (t1.c0) AND (rt0.c2)) IN ()));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))) AND (((rt0.c1 IN (rt0.c0))))) WHERE (((((((((LOWER(rt0.c1))OR((((0.5448493170989512)) BETWEEN ((-1.64071995E9)) AND ((vt0.c0))))))OR(((rt0.c2)>=(vt0.c0)))))AND(CASE rt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((LOWER(rt0.c1))OR((((0.5448493170989512)) BETWEEN ((-1.64071995E9)) AND ((vt0.c0))))))OR(((rt0.c2)>=(vt0.c0)))))AND(CASE rt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))) AND (((rt0.c1 IN (rt0.c0))))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))) AND (((rt0.c1 IN (rt0.c0))))) WHERE (((((((((LOWER(rt0.c1))OR((((0.5448493170989512)) BETWEEN ((-1.64071995E9)) AND ((vt0.c0))))))OR(((rt0.c2)>=(vt0.c0)))))AND(CASE rt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((LOWER(rt0.c1))OR((((0.5448493170989512)) BETWEEN ((-1.64071995E9)) AND ((vt0.c0))))))OR(((rt0.c2)>=(vt0.c0)))))AND(CASE rt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))) AND (((rt0.c1 IN (rt0.c0))))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))) AND (((rt0.c1 IN (rt0.c0))))) WHERE (((((((((LOWER(rt0.c1))OR((((0.5448493170989512)) BETWEEN ((-1.64071995E9)) AND ((vt0.c0))))))OR(((rt0.c2)>=(vt0.c0)))))AND(CASE rt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 0.036916199554496765 ELSE rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 0.036916199554496765 ELSE rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 0.036916199554496765 ELSE rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 0.036916199554496765 ELSE rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 0.036916199554496765 ELSE rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT * FROM rt0, t1, v0 WHERE ((((((rt0.c2))!=((v0.c0))))-(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))!=((v0.c0))))-(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t1, v0);
SELECT * FROM rt0, t1, v0 WHERE ((((((rt0.c2))!=((v0.c0))))-(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))!=((v0.c0))))-(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t1, v0);
SELECT * FROM rt0, t1, v0 WHERE ((((((rt0.c2))!=((v0.c0))))-(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0, t1 WHERE (TRIM(DISTINCT ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)))OR(v0.c0)))AND(0.2809025318836579)))OR(rt0.c2)), ((t1.c0)&(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)))OR(v0.c0)))AND(0.2809025318836579)))OR(rt0.c2)), ((t1.c0)&(rt0.c1)))) IS TRUE)  as count FROM v0, vt0, rt0, t1);
SELECT ALL COUNT(*) FROM v0, vt0, rt0, t1 WHERE (TRIM(DISTINCT ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)))OR(v0.c0)))AND(0.2809025318836579)))OR(rt0.c2)), ((t1.c0)&(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)))OR(v0.c0)))AND(0.2809025318836579)))OR(rt0.c2)), ((t1.c0)&(rt0.c1)))) IS TRUE)  as count FROM v0, vt0, rt0, t1);
SELECT ALL COUNT(*) FROM v0, vt0, rt0, t1 WHERE (TRIM(DISTINCT ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)))OR(v0.c0)))AND(0.2809025318836579)))OR(rt0.c2)), ((t1.c0)&(rt0.c1))));
SELECT * FROM rt0, t1, vt0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY) ORDER BY GLOB((rt0.c0 IN (rt0.c2)), ((((vt0.c0)AND(rt0.c2)))OR(t1.c0)))  NULLS LAST, x'' ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY GLOB((rt0.c0 IN (rt0.c2)), ((((vt0.c0)AND(rt0.c2)))OR(t1.c0)))  NULLS LAST, x'' ASC);
SELECT * FROM rt0, t1, vt0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY) ORDER BY GLOB((rt0.c0 IN (rt0.c2)), ((((vt0.c0)AND(rt0.c2)))OR(t1.c0)))  NULLS LAST, x'' ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY GLOB((rt0.c0 IN (rt0.c2)), ((((vt0.c0)AND(rt0.c2)))OR(t1.c0)))  NULLS LAST, x'' ASC);
SELECT * FROM rt0, t1, vt0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY) ORDER BY GLOB((rt0.c0 IN (rt0.c2)), ((((vt0.c0)AND(rt0.c2)))OR(t1.c0)))  NULLS LAST, x'' ASC;
SELECT * FROM t1, rt0, vt0, v0 WHERE ('') ORDER BY (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) IN (((t1.c0)!=(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t1, rt0, vt0, v0 ORDER BY (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) IN (((t1.c0)!=(v0.c0)))) DESC);
SELECT * FROM t1, rt0, vt0, v0 WHERE ('') ORDER BY (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) IN (((t1.c0)!=(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t1, rt0, vt0, v0 ORDER BY (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) IN (((t1.c0)!=(v0.c0)))) DESC);
SELECT * FROM t1, rt0, vt0, v0 WHERE ('') ORDER BY (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) IN (((t1.c0)!=(v0.c0)))) DESC;
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN t1 ON CAST((+ (t1.c0)) AS REAL) WHERE ((NOT (CASE 0.34569020062486766  WHEN v0.c0 THEN t1.c0 ELSE v0.c0 END))) ORDER BY (- (((rt0.c0) NOT NULL)))  NULLS LAST, LIKE(((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)), LIKELIHOOD(v0.c0, 0.8256492042492606), '0') DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE 0.34569020062486766  WHEN v0.c0 THEN t1.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN t1 ON CAST((+ (t1.c0)) AS REAL) ORDER BY (- (((rt0.c0) NOT NULL)))  NULLS LAST, LIKE(((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)), LIKELIHOOD(v0.c0, 0.8256492042492606), '0') DESC);
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN t1 ON CAST((+ (t1.c0)) AS REAL) WHERE ((NOT (CASE 0.34569020062486766  WHEN v0.c0 THEN t1.c0 ELSE v0.c0 END))) ORDER BY (- (((rt0.c0) NOT NULL)))  NULLS LAST, LIKE(((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)), LIKELIHOOD(v0.c0, 0.8256492042492606), '0') DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE 0.34569020062486766  WHEN v0.c0 THEN t1.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN t1 ON CAST((+ (t1.c0)) AS REAL) ORDER BY (- (((rt0.c0) NOT NULL)))  NULLS LAST, LIKE(((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)), LIKELIHOOD(v0.c0, 0.8256492042492606), '0') DESC);
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN t1 ON CAST((+ (t1.c0)) AS REAL) WHERE ((NOT (CASE 0.34569020062486766  WHEN v0.c0 THEN t1.c0 ELSE v0.c0 END))) ORDER BY (- (((rt0.c0) NOT NULL)))  NULLS LAST, LIKE(((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)), LIKELIHOOD(v0.c0, 0.8256492042492606), '0') DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (-1.274687716E9);
SELECT SUM(count) FROM (SELECT ((-1.274687716E9) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (-1.274687716E9);
SELECT SUM(count) FROM (SELECT ((-1.274687716E9) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (-1.274687716E9);
SELECT ALL * FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((NULL)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((NULL)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0) IS TRUE)))));
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN t1 ON (((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c0, t1.c0, '{F&')) AND ((t1.c0, t1.c0, t1.c0)))) NOT BETWEEN ((t1.c0 IN ())) AND (json_quote(vt0.c0))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t1 ON (((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c0, t1.c0, '{F&')) AND ((t1.c0, t1.c0, t1.c0)))) NOT BETWEEN ((t1.c0 IN ())) AND (json_quote(vt0.c0))));
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN t1 ON (((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c0, t1.c0, '{F&')) AND ((t1.c0, t1.c0, t1.c0)))) NOT BETWEEN ((t1.c0 IN ())) AND (json_quote(vt0.c0))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t1 ON (((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c0, t1.c0, '{F&')) AND ((t1.c0, t1.c0, t1.c0)))) NOT BETWEEN ((t1.c0 IN ())) AND (json_quote(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON x'' WHERE ((((((rt0.c2, rt0.c0, x'2528'))<=((rt0.c1, rt0.c1, rt0.c0))))*(((vt0.c0)AND(rt0.c0))))) ORDER BY CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c0, x'2528'))<=((rt0.c1, rt0.c1, rt0.c0))))*(((vt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON x'' ORDER BY CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON x'' WHERE ((((((rt0.c2, rt0.c0, x'2528'))<=((rt0.c1, rt0.c1, rt0.c0))))*(((vt0.c0)AND(rt0.c0))))) ORDER BY CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c0, x'2528'))<=((rt0.c1, rt0.c1, rt0.c0))))*(((vt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON x'' ORDER BY CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON x'' WHERE ((((((rt0.c2, rt0.c0, x'2528'))<=((rt0.c1, rt0.c1, rt0.c0))))*(((vt0.c0)AND(rt0.c0))))) ORDER BY CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) AS INTEGER) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE RTRIM);
SELECT * FROM v0 CROSS JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c1)))>>(((((((((rt0.c2)OR(0.003234322029360026)))OR(rt0.c1)))OR(rt0.c2)))OR(1.829171393E9)))) LEFT OUTER JOIN t1 ON (((rt0.c2)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((((rt0.c2)AND(t1.c0)))AND(rt0.c2))))) WHERE (CAST(rt0.c1 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c1)))>>(((((((((rt0.c2)OR(0.003234322029360026)))OR(rt0.c1)))OR(rt0.c2)))OR(1.829171393E9)))) LEFT OUTER JOIN t1 ON (((rt0.c2)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((((rt0.c2)AND(t1.c0)))AND(rt0.c2))))));
SELECT * FROM v0 CROSS JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c1)))>>(((((((((rt0.c2)OR(0.003234322029360026)))OR(rt0.c1)))OR(rt0.c2)))OR(1.829171393E9)))) LEFT OUTER JOIN t1 ON (((rt0.c2)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((((rt0.c2)AND(t1.c0)))AND(rt0.c2))))) WHERE (CAST(rt0.c1 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c1)))>>(((((((((rt0.c2)OR(0.003234322029360026)))OR(rt0.c1)))OR(rt0.c2)))OR(1.829171393E9)))) LEFT OUTER JOIN t1 ON (((rt0.c2)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((((rt0.c2)AND(t1.c0)))AND(rt0.c2))))));
SELECT * FROM v0 CROSS JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c1)))>>(((((((((rt0.c2)OR(0.003234322029360026)))OR(rt0.c1)))OR(rt0.c2)))OR(1.829171393E9)))) LEFT OUTER JOIN t1 ON (((rt0.c2)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((((rt0.c2)AND(t1.c0)))AND(rt0.c2))))) WHERE (CAST(rt0.c1 AS INTEGER) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((']O')<=(x''))) IS FALSE)) ORDER BY ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c0)<(rt0.c2))) AND (CASE WHEN rt0.c2 THEN rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((']O')<=(x''))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c0)<(rt0.c2))) AND (CASE WHEN rt0.c2 THEN rt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((']O')<=(x''))) IS FALSE)) ORDER BY ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c0)<(rt0.c2))) AND (CASE WHEN rt0.c2 THEN rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((']O')<=(x''))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c0)<(rt0.c2))) AND (CASE WHEN rt0.c2 THEN rt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((']O')<=(x''))) IS FALSE)) ORDER BY ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c0)<(rt0.c2))) AND (CASE WHEN rt0.c2 THEN rt0.c1 END)) DESC;
SELECT ALL * FROM vt0 CROSS JOIN t1 ON (((t1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND (((+ (t1.c0))))) WHERE (CAST(LAST_INSERT_ROWID() AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LAST_INSERT_ROWID() AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((t1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND (((+ (t1.c0))))));
SELECT ALL * FROM vt0 CROSS JOIN t1 ON (((t1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND (((+ (t1.c0))))) WHERE (CAST(LAST_INSERT_ROWID() AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LAST_INSERT_ROWID() AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((t1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND (((+ (t1.c0))))));
SELECT ALL * FROM vt0 CROSS JOIN t1 ON (((t1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND (((+ (t1.c0))))) WHERE (CAST(LAST_INSERT_ROWID() AS INTEGER));
SELECT * FROM t1 WHERE ((+ (HEX(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (HEX(t1.c0)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((+ (HEX(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (HEX(t1.c0)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((+ (HEX(t1.c0))));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON HEX(1.032441401E9) LEFT OUTER JOIN t1 ON rt0.c0 FULL OUTER JOIN rt0 ON ((v0.c0)LIKE(((vt0.c0)AND(vt0.c0)))) WHERE (((CAST(NULL AS REAL))%((vt0.c0 IN ('\n15(G7_,')))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS REAL))%((vt0.c0 IN ('\n15(G7_,'))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON HEX(1.032441401E9) LEFT OUTER JOIN t1 ON rt0.c0 FULL OUTER JOIN rt0 ON ((v0.c0)LIKE(((vt0.c0)AND(vt0.c0)))));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON HEX(1.032441401E9) LEFT OUTER JOIN t1 ON rt0.c0 FULL OUTER JOIN rt0 ON ((v0.c0)LIKE(((vt0.c0)AND(vt0.c0)))) WHERE (((CAST(NULL AS REAL))%((vt0.c0 IN ('\n15(G7_,')))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS REAL))%((vt0.c0 IN ('\n15(G7_,'))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON HEX(1.032441401E9) LEFT OUTER JOIN t1 ON rt0.c0 FULL OUTER JOIN rt0 ON ((v0.c0)LIKE(((vt0.c0)AND(vt0.c0)))));
SELECT * FROM v0 WHERE (((UPPER(v0.c0))/(CASE v0.c0  WHEN 'cS' THEN v0.c0 END))) ORDER BY ((((v0.c0) NOT BETWEEN (0.7660319522998416) AND (v0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UPPER(v0.c0))/(CASE v0.c0  WHEN 'cS' THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (0.7660319522998416) AND (v0.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM v0 WHERE (((UPPER(v0.c0))/(CASE v0.c0  WHEN 'cS' THEN v0.c0 END))) ORDER BY ((((v0.c0) NOT BETWEEN (0.7660319522998416) AND (v0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UPPER(v0.c0))/(CASE v0.c0  WHEN 'cS' THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (0.7660319522998416) AND (v0.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM v0 WHERE (((UPPER(v0.c0))/(CASE v0.c0  WHEN 'cS' THEN v0.c0 END))) ORDER BY ((((v0.c0) NOT BETWEEN (0.7660319522998416) AND (v0.c0))) NOTNULL)  NULLS LAST;
SELECT * FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'')) IN ())) ORDER BY CASE WHEN ((rt0.c1)>>(rt0.c2)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c1)<<(rt0.c0)) WHEN ((0.45936995901872835)<>(rt0.c1)) THEN CAST(rt0.c0 AS BLOB) END ASC  NULLS FIRST, (((- (rt0.c0)))>(((rt0.c1)==(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'')) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c1)>>(rt0.c2)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c1)<<(rt0.c0)) WHEN ((0.45936995901872835)<>(rt0.c1)) THEN CAST(rt0.c0 AS BLOB) END ASC  NULLS FIRST, (((- (rt0.c0)))>(((rt0.c1)=(rt0.c1)))) ASC);
SELECT * FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'')) IN ())) ORDER BY CASE WHEN ((rt0.c1)>>(rt0.c2)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c1)<<(rt0.c0)) WHEN ((0.45936995901872835)<>(rt0.c1)) THEN CAST(rt0.c0 AS BLOB) END ASC  NULLS FIRST, (((- (rt0.c0)))>(((rt0.c1)==(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'')) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c1)>>(rt0.c2)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c1)<<(rt0.c0)) WHEN ((0.45936995901872835)<>(rt0.c1)) THEN CAST(rt0.c0 AS BLOB) END ASC  NULLS FIRST, (((- (rt0.c0)))>(((rt0.c1)=(rt0.c1)))) ASC);
SELECT * FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'')) IN ())) ORDER BY CASE WHEN ((rt0.c1)>>(rt0.c2)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c1)<<(rt0.c0)) WHEN ((0.45936995901872835)<>(rt0.c1)) THEN CAST(rt0.c0 AS BLOB) END ASC  NULLS FIRST, (((- (rt0.c0)))>(((rt0.c1)==(rt0.c1)))) ASC;
SELECT COUNT(*) FROM t1 FULL OUTER JOIN v0 ON (((((v0.c0, t1.c0, t1.c0))>=((t1.c0, v0.c0, t1.c0))))!=(((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(v0.c0)))AND(v0.c0)))) WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT)) ORDER BY (((((('')AND(t1.c0)))OR(v0.c0)))|(0X36e8777b)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON (((((v0.c0, t1.c0, t1.c0))>=((t1.c0, v0.c0, t1.c0))))<>(((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(v0.c0)))AND(v0.c0)))) ORDER BY (((((('')AND(t1.c0)))OR(v0.c0)))|(0x36e8777b)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN v0 ON (((((v0.c0, t1.c0, t1.c0))>=((t1.c0, v0.c0, t1.c0))))!=(((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(v0.c0)))AND(v0.c0)))) WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT)) ORDER BY (((((('')AND(t1.c0)))OR(v0.c0)))|(0X36e8777b)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON (((((v0.c0, t1.c0, t1.c0))>=((t1.c0, v0.c0, t1.c0))))<>(((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(v0.c0)))AND(v0.c0)))) ORDER BY (((((('')AND(t1.c0)))OR(v0.c0)))|(0x36e8777b)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN v0 ON (((((v0.c0, t1.c0, t1.c0))>=((t1.c0, v0.c0, t1.c0))))!=(((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(v0.c0)))AND(v0.c0)))) WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT)) ORDER BY (((((('')AND(t1.c0)))OR(v0.c0)))|(0X36e8777b)) DESC  NULLS FIRST;
SELECT * FROM v0, rt0, vt0 WHERE (((0.9782275622476705) BETWEEN (CAST(v0.c0 AS BLOB)) AND ((rt0.c1 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.9782275622476705) BETWEEN (CAST(v0.c0 AS BLOB)) AND ((rt0.c1 IN (v0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((0.9782275622476705) BETWEEN (CAST(v0.c0 AS BLOB)) AND ((rt0.c1 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.9782275622476705) BETWEEN (CAST(v0.c0 AS BLOB)) AND ((rt0.c1 IN (v0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((0.9782275622476705) BETWEEN (CAST(v0.c0 AS BLOB)) AND ((rt0.c1 IN (v0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((']C/''4d㖿M+')OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((']C/''4d㖿M+')OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((']C/''4d㖿M+')OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((']C/''4d㖿M+')OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((']C/''4d㖿M+')OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)+(vt0.c0)))));
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (((CASE v0.c0  WHEN vt0.c0 THEN '210413520' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END) IS FALSE)) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)))<>(((rt0.c1) BETWEEN (v0.c0) AND (vt0.c0))))  NULLS FIRST, (- (0Xffffffff8cb9fcb9 COLLATE BINARY)) ASC, (((((0x68efd3bb)OR(vt0.c0)))OR(t1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN vt0.c0 THEN '210413520' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END) IS FALSE)) IS TRUE)  as count FROM v0, rt0, vt0, t1 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)))<>(((rt0.c1) BETWEEN (v0.c0) AND (vt0.c0))))  NULLS FIRST, (- (0xffffffff8cb9fcb9 COLLATE BINARY)) ASC, (((((0X68efd3bb)OR(vt0.c0)))OR(t1.c0)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (((CASE v0.c0  WHEN vt0.c0 THEN '210413520' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END) IS FALSE)) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)))<>(((rt0.c1) BETWEEN (v0.c0) AND (vt0.c0))))  NULLS FIRST, (- (0Xffffffff8cb9fcb9 COLLATE BINARY)) ASC, (((((0x68efd3bb)OR(vt0.c0)))OR(t1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN vt0.c0 THEN '210413520' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END) IS FALSE)) IS TRUE)  as count FROM v0, rt0, vt0, t1 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)))<>(((rt0.c1) BETWEEN (v0.c0) AND (vt0.c0))))  NULLS FIRST, (- (0xffffffff8cb9fcb9 COLLATE BINARY)) ASC, (((((0X68efd3bb)OR(vt0.c0)))OR(t1.c0)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (((CASE v0.c0  WHEN vt0.c0 THEN '210413520' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END) IS FALSE)) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)))<>(((rt0.c1) BETWEEN (v0.c0) AND (vt0.c0))))  NULLS FIRST, (- (0Xffffffff8cb9fcb9 COLLATE BINARY)) ASC, (((((0x68efd3bb)OR(vt0.c0)))OR(t1.c0)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 FULL OUTER JOIN t1 ON CHAR(rt0.c1) COLLATE BINARY WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, rt0 FULL OUTER JOIN t1 ON CHAR(rt0.c1) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 FULL OUTER JOIN t1 ON CHAR(rt0.c1) COLLATE BINARY WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, rt0 FULL OUTER JOIN t1 ON CHAR(rt0.c1) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 FULL OUTER JOIN t1 ON CHAR(rt0.c1) COLLATE BINARY WHERE (x'' COLLATE BINARY);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((rt0.c2) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((rt0.c2) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((rt0.c2) NOTNULL) IN ()));
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (((x'')>>(((rt0.c1)+(rt0.c0))))) ORDER BY ((((rt0.c2) NOT NULL)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((('950679850', rt0.c0, v0.c0)) BETWEEN ((t1.c0, rt0.c1, rt0.c2)) AND ((t1.c0, t1.c0, NULL))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'')>>(((rt0.c1)+(rt0.c0))))) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY ((((rt0.c2) NOT NULL)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((('950679850', rt0.c0, v0.c0)) BETWEEN ((t1.c0, rt0.c1, rt0.c2)) AND ((t1.c0, t1.c0, NULL))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (((x'')>>(((rt0.c1)+(rt0.c0))))) ORDER BY ((((rt0.c2) NOT NULL)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((('950679850', rt0.c0, v0.c0)) BETWEEN ((t1.c0, rt0.c1, rt0.c2)) AND ((t1.c0, t1.c0, NULL))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'')>>(((rt0.c1)+(rt0.c0))))) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY ((((rt0.c2) NOT NULL)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((('950679850', rt0.c0, v0.c0)) BETWEEN ((t1.c0, rt0.c1, rt0.c2)) AND ((t1.c0, t1.c0, NULL))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (((x'')>>(((rt0.c1)+(rt0.c0))))) ORDER BY ((((rt0.c2) NOT NULL)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((('950679850', rt0.c0, v0.c0)) BETWEEN ((t1.c0, rt0.c1, rt0.c2)) AND ((t1.c0, t1.c0, NULL))))) DESC  NULLS FIRST;
SELECT * FROM rt0, t1, vt0 INDEXED BY i83 WHERE ((- ((((((((('')AND(0.2338038711680458)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c1))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END)LIKE(rt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((((((((('')AND(0.2338038711680458)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, t1, vt0 INDEXED BY i83 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END)LIKE(rt0.c2)) ASC  NULLS FIRST);
SELECT * FROM rt0, t1, vt0 INDEXED BY i83 WHERE ((- ((((((((('')AND(0.2338038711680458)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c1))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END)LIKE(rt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((((((((('')AND(0.2338038711680458)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, t1, vt0 INDEXED BY i83 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END)LIKE(rt0.c2)) ASC  NULLS FIRST);
SELECT * FROM t1, vt0, v0, rt0 WHERE (((x'cb5d')<((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((x'cb5d')<((rt0.c2 IN ())))) IS TRUE)  as count FROM t1, vt0, v0, rt0);
SELECT * FROM t1, vt0, v0, rt0 WHERE (((x'cb5d')<((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((x'cb5d')<((rt0.c2 IN ())))) IS TRUE)  as count FROM t1, vt0, v0, rt0);
SELECT * FROM t1, vt0, v0, rt0 WHERE (((x'cb5d')<((rt0.c2 IN ()))));
SELECT ALL * FROM t1, v0, vt0, rt0 WHERE ((((((v0.c0)<=(vt0.c0)), rt0.c1, CAST(v0.c0 AS NUMERIC)))>((((((rt0.c0)OR(vt0.c0)))AND(v0.c0)), ((rt0.c2)>=(v0.c0)), rt0.c2)))) ORDER BY CASE WHEN (((t1.c0, rt0.c2, t1.c0)) BETWEEN ((rt0.c2, t1.c0, t1.c0)) AND ((rt0.c0, vt0.c0, t1.c0))) THEN ((rt0.c2) ISNULL) ELSE vt0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)<=(vt0.c0)), rt0.c1, CAST(v0.c0 AS NUMERIC)))>((((((rt0.c0)OR(vt0.c0)))AND(v0.c0)), ((rt0.c2)>=(v0.c0)), rt0.c2)))) IS TRUE)  as count FROM t1, v0, vt0, rt0 ORDER BY CASE WHEN (((t1.c0, rt0.c2, t1.c0)) BETWEEN ((rt0.c2, t1.c0, t1.c0)) AND ((rt0.c0, vt0.c0, t1.c0))) THEN ((rt0.c2) ISNULL) ELSE vt0.c0 COLLATE RTRIM END);
SELECT ALL * FROM t1, v0, vt0, rt0 WHERE ((((((v0.c0)<=(vt0.c0)), rt0.c1, CAST(v0.c0 AS NUMERIC)))>((((((rt0.c0)OR(vt0.c0)))AND(v0.c0)), ((rt0.c2)>=(v0.c0)), rt0.c2)))) ORDER BY CASE WHEN (((t1.c0, rt0.c2, t1.c0)) BETWEEN ((rt0.c2, t1.c0, t1.c0)) AND ((rt0.c0, vt0.c0, t1.c0))) THEN ((rt0.c2) ISNULL) ELSE vt0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)<=(vt0.c0)), rt0.c1, CAST(v0.c0 AS NUMERIC)))>((((((rt0.c0)OR(vt0.c0)))AND(v0.c0)), ((rt0.c2)>=(v0.c0)), rt0.c2)))) IS TRUE)  as count FROM t1, v0, vt0, rt0 ORDER BY CASE WHEN (((t1.c0, rt0.c2, t1.c0)) BETWEEN ((rt0.c2, t1.c0, t1.c0)) AND ((rt0.c0, vt0.c0, t1.c0))) THEN ((rt0.c2) ISNULL) ELSE vt0.c0 COLLATE RTRIM END);
SELECT ALL * FROM t1, v0, vt0, rt0 WHERE ((((((v0.c0)<=(vt0.c0)), rt0.c1, CAST(v0.c0 AS NUMERIC)))>((((((rt0.c0)OR(vt0.c0)))AND(v0.c0)), ((rt0.c2)>=(v0.c0)), rt0.c2)))) ORDER BY CASE WHEN (((t1.c0, rt0.c2, t1.c0)) BETWEEN ((rt0.c2, t1.c0, t1.c0)) AND ((rt0.c0, vt0.c0, t1.c0))) THEN ((rt0.c2) ISNULL) ELSE vt0.c0 COLLATE RTRIM END;
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) ISNULL))OR(rt0.c2 COLLATE BINARY)))AND(x'1cbbab69')));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) ISNULL))OR(rt0.c2 COLLATE BINARY)))AND(x'1cbbab69'))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) ISNULL))OR(rt0.c2 COLLATE BINARY)))AND(x'1cbbab69')));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) ISNULL))OR(rt0.c2 COLLATE BINARY)))AND(x'1cbbab69'))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) ISNULL))OR(rt0.c2 COLLATE BINARY)))AND(x'1cbbab69')));
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((TRIM(DISTINCT rt0.c2) IN ())) ORDER BY t1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT rt0.c2) IN ())) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY t1.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((TRIM(DISTINCT rt0.c2) IN ())) ORDER BY t1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT rt0.c2) IN ())) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY t1.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((TRIM(DISTINCT rt0.c2) IN ())) ORDER BY t1.c0 ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c0)+(t1.c0))) IS TRUE)) ORDER BY (((((t1.c0) NOT NULL)))<((CAST(t1.c0 AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)+(t1.c0))) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0) NOT NULL)))<((CAST(t1.c0 AS NUMERIC))))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((t1.c0)+(t1.c0))) IS TRUE)) ORDER BY (((((t1.c0) NOT NULL)))<((CAST(t1.c0 AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)+(t1.c0))) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0) NOT NULL)))<((CAST(t1.c0 AS NUMERIC))))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((t1.c0)+(t1.c0))) IS TRUE)) ORDER BY (((((t1.c0) NOT NULL)))<((CAST(t1.c0 AS NUMERIC))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((DATETIME(rt0.c1, vt0.c0, vt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((DATETIME(rt0.c1, vt0.c0, vt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((DATETIME(rt0.c1, vt0.c0, vt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((DATETIME(rt0.c1, vt0.c0, vt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((DATETIME(rt0.c1, vt0.c0, vt0.c0)) NOTNULL));
SELECT * FROM rt0 WHERE (CAST((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c1, rt0.c0, rt0.c2))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c1, rt0.c0, rt0.c2))) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c1, rt0.c0, rt0.c2))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c1, rt0.c0, rt0.c2))) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c1, rt0.c0, rt0.c2))) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c0) AND (rt0.c2)))AND('/')))OR(681636746)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0) NOT BETWEEN (t1.c0) AND (rt0.c2)))AND('/')))OR(681636746))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c0) AND (rt0.c2)))AND('/')))OR(681636746)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0) NOT BETWEEN (t1.c0) AND (rt0.c2)))AND('/')))OR(681636746))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c0) AND (rt0.c2)))AND('/')))OR(681636746)));
SELECT COUNT(*) FROM t1 WHERE (((json_array_length(NULL, t1.c0))>=((('^fd(w')GLOB(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(NULL, t1.c0))>=((('^fd(w')GLOB(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((json_array_length(NULL, t1.c0))>=((('^fd(w')GLOB(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(NULL, t1.c0))>=((('^fd(w')GLOB(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((json_array_length(NULL, t1.c0))>=((('^fd(w')GLOB(t1.c0)))));
SELECT ALL * FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN (v0.c0, v0.c0)), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<(('', (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), (~ ('582118991'))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN (v0.c0, v0.c0)), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<(('', (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), (~ ('582118991')))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN (v0.c0, v0.c0)), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<(('', (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), (~ ('582118991'))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN (v0.c0, v0.c0)), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<(('', (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), (~ ('582118991')))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN (v0.c0, v0.c0)), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<(('', (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), (~ ('582118991'))))));
SELECT * FROM t1, rt0, vt0 INNER JOIN v0 ON (+ (t1.c0)) COLLATE RTRIM WHERE ('-329825640') ORDER BY (v0.c0 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-329825640') IS TRUE)  as count FROM t1, rt0, vt0 INNER JOIN v0 ON (+ (t1.c0)) COLLATE RTRIM ORDER BY (v0.c0 IN ())  NULLS LAST);
SELECT * FROM t1, rt0, vt0 INNER JOIN v0 ON (+ (t1.c0)) COLLATE RTRIM WHERE ('-329825640') ORDER BY (v0.c0 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-329825640') IS TRUE)  as count FROM t1, rt0, vt0 INNER JOIN v0 ON (+ (t1.c0)) COLLATE RTRIM ORDER BY (v0.c0 IN ())  NULLS LAST);
SELECT * FROM t1, rt0, vt0 INNER JOIN v0 ON (+ (t1.c0)) COLLATE RTRIM WHERE ('-329825640') ORDER BY (v0.c0 IN ())  NULLS LAST;
SELECT ALL * FROM vt0, t1, v0 WHERE (NULL) ORDER BY (t1.c0 COLLATE NOCASE IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY (t1.c0 COLLATE NOCASE IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END))  NULLS LAST);
SELECT ALL * FROM vt0, t1, v0 WHERE (NULL) ORDER BY (t1.c0 COLLATE NOCASE IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY (t1.c0 COLLATE NOCASE IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END))  NULLS LAST);
SELECT ALL * FROM vt0, t1, v0 WHERE (NULL) ORDER BY (t1.c0 COLLATE NOCASE IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1 CROSS JOIN rt0 ON CASE ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND('311838874')))AND(t1.c0)))AND(rt0.c0))  WHEN ((rt0.c1) ISNULL) THEN (NOT (0.7113378410601922)) ELSE rt0.c2 END WHERE ((((CAST(rt0.c0 AS INTEGER)))>((CAST(rt0.c0 AS NUMERIC))))) ORDER BY ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))AND(vt0.c0)) DESC  NULLS FIRST, ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((t1.c0)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS INTEGER)))>((CAST(rt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0, t1 CROSS JOIN rt0 ON CASE ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND('311838874')))AND(t1.c0)))AND(rt0.c0))  WHEN ((rt0.c1) ISNULL) THEN (NOT (0.7113378410601922)) ELSE rt0.c2 END ORDER BY ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))AND(vt0.c0)) DESC  NULLS FIRST, ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((t1.c0)AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t1 CROSS JOIN rt0 ON CASE ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND('311838874')))AND(t1.c0)))AND(rt0.c0))  WHEN ((rt0.c1) ISNULL) THEN (NOT (0.7113378410601922)) ELSE rt0.c2 END WHERE ((((CAST(rt0.c0 AS INTEGER)))>((CAST(rt0.c0 AS NUMERIC))))) ORDER BY ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))AND(vt0.c0)) DESC  NULLS FIRST, ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((t1.c0)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS INTEGER)))>((CAST(rt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0, t1 CROSS JOIN rt0 ON CASE ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND('311838874')))AND(t1.c0)))AND(rt0.c0))  WHEN ((rt0.c1) ISNULL) THEN (NOT (0.7113378410601922)) ELSE rt0.c2 END ORDER BY ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))AND(vt0.c0)) DESC  NULLS FIRST, ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((t1.c0)AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t1 CROSS JOIN rt0 ON CASE ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND('311838874')))AND(t1.c0)))AND(rt0.c0))  WHEN ((rt0.c1) ISNULL) THEN (NOT (0.7113378410601922)) ELSE rt0.c2 END WHERE ((((CAST(rt0.c0 AS INTEGER)))>((CAST(rt0.c0 AS NUMERIC))))) ORDER BY ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))AND(vt0.c0)) DESC  NULLS FIRST, ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((t1.c0)AND(vt0.c0))));
SELECT COUNT(*) FROM v0, vt0, t1 RIGHT OUTER JOIN rt0 ON CAST(v0.c0 COLLATE RTRIM AS INTEGER) WHERE (((((rt0.c2)GLOB(rt0.c0)))/((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) ORDER BY ((CHANGES())|(v0.c0))  NULLS LAST, ((((0.7696071235240962) NOT BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(rt0.c0)))/((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM v0, vt0, t1 RIGHT OUTER JOIN rt0 ON CAST(v0.c0 COLLATE RTRIM AS INTEGER) ORDER BY ((CHANGES())|(v0.c0))  NULLS LAST, ((((0.7696071235240962) NOT BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) ASC);
SELECT COUNT(*) FROM v0, vt0, t1 RIGHT OUTER JOIN rt0 ON CAST(v0.c0 COLLATE RTRIM AS INTEGER) WHERE (((((rt0.c2)GLOB(rt0.c0)))/((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) ORDER BY ((CHANGES())|(v0.c0))  NULLS LAST, ((((0.7696071235240962) NOT BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(rt0.c0)))/((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM v0, vt0, t1 RIGHT OUTER JOIN rt0 ON CAST(v0.c0 COLLATE RTRIM AS INTEGER) ORDER BY ((CHANGES())|(v0.c0))  NULLS LAST, ((((0.7696071235240962) NOT BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) ASC);
SELECT COUNT(*) FROM v0, vt0, t1 RIGHT OUTER JOIN rt0 ON CAST(v0.c0 COLLATE RTRIM AS INTEGER) WHERE (((((rt0.c2)GLOB(rt0.c0)))/((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) ORDER BY ((CHANGES())|(v0.c0))  NULLS LAST, ((((0.7696071235240962) NOT BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((v0.c0)OR(v0.c0)))OR(vt0.c0)) IN ())) ORDER BY ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN ((+ (vt0.c0))) AND (x''));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)OR(v0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN ((+ (vt0.c0))) AND (x'')));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((v0.c0)OR(v0.c0)))OR(vt0.c0)) IN ())) ORDER BY ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN ((+ (vt0.c0))) AND (x''));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)OR(v0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN ((+ (vt0.c0))) AND (x'')));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((v0.c0)OR(v0.c0)))OR(vt0.c0)) IN ())) ORDER BY ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN ((+ (vt0.c0))) AND (x''));
SELECT ALL * FROM v0, rt0 NOT INDEXED, t1 WHERE (json_quote(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) ORDER BY NULL ASC  NULLS LAST, CASE WHEN UNLIKELY(DISTINCT t1.c0) THEN CASE rt0.c2  WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0.3751572014257819 ELSE rt0.c2 END END;
SELECT SUM(count) FROM (SELECT ((json_quote(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) IS TRUE)  as count FROM v0, rt0, t1 ORDER BY NULL ASC  NULLS LAST, CASE WHEN UNLIKELY(DISTINCT t1.c0) THEN CASE rt0.c2  WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0.3751572014257819 ELSE rt0.c2 END END);
SELECT ALL * FROM v0, rt0 NOT INDEXED, t1 WHERE (json_quote(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) ORDER BY NULL ASC  NULLS LAST, CASE WHEN UNLIKELY(DISTINCT t1.c0) THEN CASE rt0.c2  WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0.3751572014257819 ELSE rt0.c2 END END;
SELECT SUM(count) FROM (SELECT ((json_quote(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) IS TRUE)  as count FROM v0, rt0, t1 ORDER BY NULL ASC  NULLS LAST, CASE WHEN UNLIKELY(DISTINCT t1.c0) THEN CASE rt0.c2  WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0.3751572014257819 ELSE rt0.c2 END END);
SELECT ALL * FROM v0, rt0 NOT INDEXED, t1 WHERE (json_quote(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) ORDER BY NULL ASC  NULLS LAST, CASE WHEN UNLIKELY(DISTINCT t1.c0) THEN CASE rt0.c2  WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0.3751572014257819 ELSE rt0.c2 END END;
SELECT ALL * FROM rt0, t1, v0, vt0 INDEXED BY i8 WHERE (CASE WHEN (vt0.c0 IN (rt0.c2)) THEN ((rt0.c2) IS FALSE) ELSE CASE WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (rt0.c2)) THEN ((rt0.c2) IS FALSE) ELSE CASE WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0, t1, v0, vt0 INDEXED BY i8);
SELECT ALL * FROM rt0, t1, v0, vt0 INDEXED BY i8 WHERE (CASE WHEN (vt0.c0 IN (rt0.c2)) THEN ((rt0.c2) IS FALSE) ELSE CASE WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (rt0.c2)) THEN ((rt0.c2) IS FALSE) ELSE CASE WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0, t1, v0, vt0 INDEXED BY i8);
SELECT COUNT(*) FROM vt0, rt0, v0, t1 WHERE (((((((rt0.c1)==(rt0.c0)))AND(((v0.c0) NOT NULL))))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)=(rt0.c0)))AND(((v0.c0) NOT NULL))))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0, t1);
SELECT COUNT(*) FROM vt0, rt0, v0, t1 WHERE (((((((rt0.c1)==(rt0.c0)))AND(((v0.c0) NOT NULL))))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)=(rt0.c0)))AND(((v0.c0) NOT NULL))))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0, t1);
SELECT COUNT(*) FROM vt0, rt0, v0, t1 WHERE (((((((rt0.c1)==(rt0.c0)))AND(((v0.c0) NOT NULL))))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM t1, v0 WHERE ((NOT (x''))) ORDER BY t1.c0 ASC, CASE v0.c0  WHEN x'' THEN v0.c0 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM t1, v0 ORDER BY t1.c0 ASC, CASE v0.c0  WHEN x'' THEN v0.c0 COLLATE BINARY END DESC);
SELECT COUNT(*) FROM t1, v0 WHERE ((NOT (x''))) ORDER BY t1.c0 ASC, CASE v0.c0  WHEN x'' THEN v0.c0 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM t1, v0 ORDER BY t1.c0 ASC, CASE v0.c0  WHEN x'' THEN v0.c0 COLLATE BINARY END DESC);
SELECT COUNT(*) FROM t1, v0 WHERE ((NOT (x''))) ORDER BY t1.c0 ASC, CASE v0.c0  WHEN x'' THEN v0.c0 COLLATE BINARY END DESC;
SELECT ALL COUNT(*) FROM t1, rt0, v0 INDEXED BY i8, vt0 WHERE ((((NOT (v0.c0)))*((vt0.c0 IN (rt0.c0, vt0.c0))))) ORDER BY ((((rt0.c0) IS FALSE)) ISNULL) ASC, CASE '1094971226'  WHEN ((t1.c0)+(rt0.c1)) THEN (rt0.c2 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))*((vt0.c0 IN (rt0.c0, vt0.c0))))) IS TRUE)  as count FROM t1, rt0, v0 INDEXED BY i8, vt0 ORDER BY ((((rt0.c0) IS FALSE)) ISNULL) ASC, CASE '1094971226'  WHEN ((t1.c0)+(rt0.c1)) THEN (rt0.c2 IN ()) END ASC);
SELECT ALL COUNT(*) FROM t1, rt0, v0 INDEXED BY i8, vt0 WHERE ((((NOT (v0.c0)))*((vt0.c0 IN (rt0.c0, vt0.c0))))) ORDER BY ((((rt0.c0) IS FALSE)) ISNULL) ASC, CASE '1094971226'  WHEN ((t1.c0)+(rt0.c1)) THEN (rt0.c2 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))*((vt0.c0 IN (rt0.c0, vt0.c0))))) IS TRUE)  as count FROM t1, rt0, v0 INDEXED BY i8, vt0 ORDER BY ((((rt0.c0) IS FALSE)) ISNULL) ASC, CASE '1094971226'  WHEN ((t1.c0)+(rt0.c1)) THEN (rt0.c2 IN ()) END ASC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((+ ((NULL IN ())))) ORDER BY (((('뭡f') IS TRUE)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NULL IN ())))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((('뭡f') IS TRUE)) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((+ ((NULL IN ())))) ORDER BY (((('뭡f') IS TRUE)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NULL IN ())))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((('뭡f') IS TRUE)) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((+ ((NULL IN ())))) ORDER BY (((('뭡f') IS TRUE)) NOT NULL) ASC  NULLS FIRST;
SELECT * FROM rt0, t1, vt0 CROSS JOIN v0 ON NULL WHERE (((((t1.c0 IN (rt0.c1)), t1.c0 COLLATE BINARY, (~ (rt0.c1))))<>(((v0.c0 IN ()), ((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))))) ORDER BY (((rt0.c0 IN ()))<(((vt0.c0)==(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0 IN (rt0.c1)), t1.c0 COLLATE BINARY, (~ (rt0.c1))))<>(((v0.c0 IN ()), ((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0, t1, vt0 CROSS JOIN v0 ON NULL ORDER BY (((rt0.c0 IN ()))<(((vt0.c0)==(rt0.c2)))) ASC  NULLS LAST);
SELECT * FROM rt0, t1, vt0 CROSS JOIN v0 ON NULL WHERE (((((t1.c0 IN (rt0.c1)), t1.c0 COLLATE BINARY, (~ (rt0.c1))))<>(((v0.c0 IN ()), ((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))))) ORDER BY (((rt0.c0 IN ()))<(((vt0.c0)==(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0 IN (rt0.c1)), t1.c0 COLLATE BINARY, (~ (rt0.c1))))<>(((v0.c0 IN ()), ((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0, t1, vt0 CROSS JOIN v0 ON NULL ORDER BY (((rt0.c0 IN ()))<(((vt0.c0)==(rt0.c2)))) ASC  NULLS LAST);
SELECT * FROM rt0, t1, vt0 CROSS JOIN v0 ON NULL WHERE (((((t1.c0 IN (rt0.c1)), t1.c0 COLLATE BINARY, (~ (rt0.c1))))<>(((v0.c0 IN ()), ((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))))) ORDER BY (((rt0.c0 IN ()))<(((vt0.c0)==(rt0.c2)))) ASC  NULLS LAST;
SELECT * FROM v0, rt0, t1 WHERE (0x12cbf986);
SELECT SUM(count) FROM (SELECT ALL ((0X12cbf986) IS TRUE)  as count FROM v0, rt0, t1);
SELECT * FROM v0, rt0, t1 WHERE (0x12cbf986);
SELECT SUM(count) FROM (SELECT ALL ((0X12cbf986) IS TRUE)  as count FROM v0, rt0, t1);
SELECT * FROM v0, rt0, t1 WHERE (0x12cbf986);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c0 IN (rt0.c2, rt0.c2)) COLLATE NOCASE) ORDER BY TRIM(DISTINCT json_type(rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (rt0.c2, rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY TRIM(DISTINCT json_type(rt0.c2)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c0 IN (rt0.c2, rt0.c2)) COLLATE NOCASE) ORDER BY TRIM(DISTINCT json_type(rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (rt0.c2, rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY TRIM(DISTINCT json_type(rt0.c2)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c0 IN (rt0.c2, rt0.c2)) COLLATE NOCASE) ORDER BY TRIM(DISTINCT json_type(rt0.c2)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1, v0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (CASE WHEN CASE vt0.c0  WHEN t1.c0 THEN '' WHEN NULL THEN t1.c0 WHEN vt0.c0 THEN rt0.c1 END THEN LIKELY(DISTINCT t1.c0) ELSE v0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN t1.c0 THEN '' WHEN NULL THEN t1.c0 WHEN vt0.c0 THEN rt0.c1 END THEN LIKELY(DISTINCT t1.c0) ELSE v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, t1, v0 LEFT OUTER JOIN rt0 ON rt0.c0);
SELECT ALL COUNT(*) FROM vt0, t1, v0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (CASE WHEN CASE vt0.c0  WHEN t1.c0 THEN '' WHEN NULL THEN t1.c0 WHEN vt0.c0 THEN rt0.c1 END THEN LIKELY(DISTINCT t1.c0) ELSE v0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN t1.c0 THEN '' WHEN NULL THEN t1.c0 WHEN vt0.c0 THEN rt0.c1 END THEN LIKELY(DISTINCT t1.c0) ELSE v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, t1, v0 LEFT OUTER JOIN rt0 ON rt0.c0);
SELECT ALL COUNT(*) FROM vt0, t1, v0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (CASE WHEN CASE vt0.c0  WHEN t1.c0 THEN '' WHEN NULL THEN t1.c0 WHEN vt0.c0 THEN rt0.c1 END THEN LIKELY(DISTINCT t1.c0) ELSE v0.c0 COLLATE NOCASE END);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN 0.7009768517799188 THEN t1.c0 WHEN rt0.c1 THEN 0.02499231113494138 ELSE t1.c0 END)IS NOT((NOT (vt0.c0))))) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c1 THEN t1.c0 ELSE t1.c0 END THEN TRIM(rt0.c2, rt0.c2) ELSE CAST(vt0.c0 AS BLOB) END;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN 0.7009768517799188 THEN t1.c0 WHEN rt0.c1 THEN 0.02499231113494138 ELSE t1.c0 END)IS NOT((NOT (vt0.c0))))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c1 THEN t1.c0 ELSE t1.c0 END THEN TRIM(rt0.c2, rt0.c2) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN 0.7009768517799188 THEN t1.c0 WHEN rt0.c1 THEN 0.02499231113494138 ELSE t1.c0 END)IS NOT((NOT (vt0.c0))))) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c1 THEN t1.c0 ELSE t1.c0 END THEN TRIM(rt0.c2, rt0.c2) ELSE CAST(vt0.c0 AS BLOB) END;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN 0.7009768517799188 THEN t1.c0 WHEN rt0.c1 THEN 0.02499231113494138 ELSE t1.c0 END)IS NOT((NOT (vt0.c0))))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c1 THEN t1.c0 ELSE t1.c0 END THEN TRIM(rt0.c2, rt0.c2) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN 0.7009768517799188 THEN t1.c0 WHEN rt0.c1 THEN 0.02499231113494138 ELSE t1.c0 END)IS NOT((NOT (vt0.c0))))) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c1 THEN t1.c0 ELSE t1.c0 END THEN TRIM(rt0.c2, rt0.c2) ELSE CAST(vt0.c0 AS BLOB) END;
SELECT COUNT(*) FROM v0, t1 CROSS JOIN rt0 ON ((vt0.c0 IN ()) IN ()) LEFT OUTER JOIN vt0 ON TYPEOF(((vt0.c0) IS TRUE)) WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0, t1 CROSS JOIN rt0 ON ((vt0.c0 IN ()) IN ()) LEFT OUTER JOIN vt0 ON TYPEOF(((vt0.c0) IS TRUE)));
SELECT COUNT(*) FROM v0, t1 CROSS JOIN rt0 ON ((vt0.c0 IN ()) IN ()) LEFT OUTER JOIN vt0 ON TYPEOF(((vt0.c0) IS TRUE)) WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0, t1 CROSS JOIN rt0 ON ((vt0.c0 IN ()) IN ()) LEFT OUTER JOIN vt0 ON TYPEOF(((vt0.c0) IS TRUE)));
SELECT COUNT(*) FROM v0, t1 CROSS JOIN rt0 ON ((vt0.c0 IN ()) IN ()) LEFT OUTER JOIN vt0 ON TYPEOF(((vt0.c0) IS TRUE)) WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL));
SELECT * FROM rt0, v0 CROSS JOIN vt0 ON (((rt0.c2 IN ()))+(TRIM(DISTINCT rt0.c2, 1.405948614E9))) WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN '0.9116690332489513' THEN rt0.c2 ELSE v0.c0 END)%(vt0.c0))) ORDER BY ('' IN (((rt0.c0)<<(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN '0.9116690332489513' THEN rt0.c2 ELSE v0.c0 END)%(vt0.c0))) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON (((rt0.c2 IN ()))+(TRIM(DISTINCT rt0.c2, 1.405948614E9))) ORDER BY ('' IN (((rt0.c0)<<(rt0.c1)))));
SELECT * FROM rt0, v0 CROSS JOIN vt0 ON (((rt0.c2 IN ()))+(TRIM(DISTINCT rt0.c2, 1.405948614E9))) WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN '0.9116690332489513' THEN rt0.c2 ELSE v0.c0 END)%(vt0.c0))) ORDER BY ('' IN (((rt0.c0)<<(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN '0.9116690332489513' THEN rt0.c2 ELSE v0.c0 END)%(vt0.c0))) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON (((rt0.c2 IN ()))+(TRIM(DISTINCT rt0.c2, 1.405948614E9))) ORDER BY ('' IN (((rt0.c0)<<(rt0.c1)))));
SELECT * FROM rt0, v0 CROSS JOIN vt0 ON (((rt0.c2 IN ()))+(TRIM(DISTINCT rt0.c2, 1.405948614E9))) WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN '0.9116690332489513' THEN rt0.c2 ELSE v0.c0 END)%(vt0.c0))) ORDER BY ('' IN (((rt0.c0)<<(rt0.c1))));
SELECT * FROM vt0 WHERE (CASE json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0)  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (-378367392)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0)  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (-378367392)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0)  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (-378367392)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE json_extract(vt0.c0, vt0.c0, vt0.c0, vt0.c0)  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (-378367392)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (CAST(t1.c0 AS INTEGER)))) ORDER BY 'El';
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(t1.c0 AS INTEGER)))) IS TRUE)  as count FROM t1 ORDER BY 'El');
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (CAST(t1.c0 AS INTEGER)))) ORDER BY 'El';
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(t1.c0 AS INTEGER)))) IS TRUE)  as count FROM t1 ORDER BY 'El');
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (CAST(t1.c0 AS INTEGER)))) ORDER BY 'El';
SELECT COUNT(*) FROM v0, vt0, t1, rt0 WHERE (0.6742145602721752 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0.6742145602721752 COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, t1, rt0);
SELECT COUNT(*) FROM v0, vt0, t1, rt0 WHERE (0.6742145602721752 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0.6742145602721752 COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, t1, rt0);
SELECT COUNT(*) FROM v0, vt0, t1, rt0 WHERE (0.6742145602721752 COLLATE BINARY);
SELECT COUNT(*) FROM t1 WHERE (((x'')+((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT SUM(count) FROM (SELECT ((((x'')+((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((x'')+((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT SUM(count) FROM (SELECT ((((x'')+((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((x'')+((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (vt0.c0);
SELECT ALL * FROM rt0, vt0, t1 WHERE (rt0.c1) ORDER BY UPPER(DISTINCT (- (t1.c0)));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY UPPER(DISTINCT (- (t1.c0))));
SELECT ALL * FROM rt0, vt0, t1 WHERE (rt0.c1) ORDER BY UPPER(DISTINCT (- (t1.c0)));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY UPPER(DISTINCT (- (t1.c0))));
SELECT ALL * FROM rt0, vt0, t1 WHERE (rt0.c1) ORDER BY UPPER(DISTINCT (- (t1.c0)));
SELECT * FROM rt0 WHERE (ABS(DISTINCT (rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (rt0.c0 IN ()))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (ABS(DISTINCT (rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (rt0.c0 IN ()))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (ABS(DISTINCT (rt0.c0 IN ())));
SELECT ALL * FROM rt0 WHERE (CAST(SQLITE_SOURCE_ID() AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_SOURCE_ID() AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(SQLITE_SOURCE_ID() AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_SOURCE_ID() AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(SQLITE_SOURCE_ID() AS REAL));
SELECT COUNT(*) FROM vt0, t1, v0 WHERE (((((((((((t1.c0)=(vt0.c0)))OR(x'')))AND(IFNULL(t1.c0, 1080958735))))AND(((vt0.c0)*(t1.c0)))))OR(((t1.c0)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0)=(vt0.c0)))OR(x'')))AND(IFNULL(t1.c0, 1080958735))))AND(((vt0.c0)*(t1.c0)))))OR(((t1.c0)||(v0.c0))))) IS TRUE)  as count FROM vt0, t1, v0);
SELECT COUNT(*) FROM vt0, t1, v0 WHERE (((((((((((t1.c0)=(vt0.c0)))OR(x'')))AND(IFNULL(t1.c0, 1080958735))))AND(((vt0.c0)*(t1.c0)))))OR(((t1.c0)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0)=(vt0.c0)))OR(x'')))AND(IFNULL(t1.c0, 1080958735))))AND(((vt0.c0)*(t1.c0)))))OR(((t1.c0)||(v0.c0))))) IS TRUE)  as count FROM vt0, t1, v0);
SELECT COUNT(*) FROM vt0, t1, v0 WHERE (((((((((((t1.c0)=(vt0.c0)))OR(x'')))AND(IFNULL(t1.c0, 1080958735))))AND(((vt0.c0)*(t1.c0)))))OR(((t1.c0)||(v0.c0)))));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CAST((((v0.c0)) NOT BETWEEN ((0xffffffffe9cf293b)) AND ((v0.c0))) AS INTEGER) WHERE (((v0.c0) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((v0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST((((v0.c0)) NOT BETWEEN ((0xffffffffe9cf293b)) AND ((v0.c0))) AS INTEGER));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CAST((((v0.c0)) NOT BETWEEN ((0xffffffffe9cf293b)) AND ((v0.c0))) AS INTEGER) WHERE (((v0.c0) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((v0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST((((v0.c0)) NOT BETWEEN ((0xffffffffe9cf293b)) AND ((v0.c0))) AS INTEGER));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CAST((((v0.c0)) NOT BETWEEN ((0xffffffffe9cf293b)) AND ((v0.c0))) AS INTEGER) WHERE (((v0.c0) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((v0.c0 IN (v0.c0)))));
